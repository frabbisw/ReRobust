userStorageResource . getLoginUserName ()
putAll ( index , attributes )
{ java.lang.System.out . println ( "Could not remove from database." ) ; e . printStackTrace () ; }
{ com.example.johannes.colorpicker.Task task = new com.example.johannes.colorpicker.Task () ; java.util.List < com.example.johannes.colorpicker.Task > tasks = new java.util.ArrayList <> () ; for ( int i = 0 ; i < ( colors . size () ) ; i ++ ) { tasks . add ( tasks . get ( i ) . getHsikoex () ) ; } return task ; }
if ( ! ( gw.lang.reflect.Modifier . isReified () ) ) { dfs . addParamTypeFor ( getTypeVarsFor ( gw.DFSType ) , dfs ) ; }
@ java.lang.SuppressWarnings ( value = "PMD.PMD" ) public void extractWarFileDirectory ( java.lang.String message ) { try { java.util.jar.JarFile jar = new java.util.jar.JarFile ( ( ( ( ( java.io.File.separator ) + war ) + ( java.util.Enumeration.separator ) ) ) ) ; java.io.File entries = jar . extract () ; while ( entries . hasMoreElements () ) { extractArchive ( entries , jar ) ; } } catch ( java.io.IOException e ) { org.apache.commons.io.FileUtils.LOG . warn ( ( "Cannot read jar file: " + e ) ) ; } }
cfg . setPort ( data . getBundle ( getString ( R.string.i2k_wizard_port_binding_KEY ) ) . getInt ( PageConfig.SIMPLE_DATA_KEY ) )
{ group8.com.application.Application.ApplicationAlertSystem.shouldAlert = false ; group8.com.application.ApplicationAlertSystem.coolDown = true ; }
{ super . onActivityResult ( requestCode , resultCode , data ) ; if ( ( requestCode != ( EditFragment.TAKE_PHOTO_RESULT ) ) || ( resultCode != ( android.app.Activity.RESULT_OK ) ) ) return; com.example.jbomt.db.EditFragFragment.Frag edit = mFragHelper . getEditIfExists () ; if ( edit != null ) edit . onCameraResult () ; }
ensureParentsByMerge ( datastore , path , writeTransaction , schemaContext )
expect ( true , ( ( expression ) + " " ) , o2 )
{ java.lang.System.out . println ( "Waiting five..." ) ; java.lang.Thread . sleep ( 5000 ) ; java.lang.System.out . println ( "Sending message..." ) ; org.springframework.amqp.core.Message message = org.springframework.amqp.core.MessageBuilder . withBody ( "Customized" , Messages.header ) . setHeader ( "header1" . getBytes () ) . setCorrelationId ( "something1" . getBytes () ) . setReply ( "something" . getLatchTime () ) . build () ; rabbitTemplate . sendMessage ( message ) ; }
{ java.util.Map < java.lang.String , java.lang.Object > result = new java.util.HashMap <> () ; result . putAll ( mergeInto ) ; return result ; }
public void displayTitle ( ) throws java.lang.Exception { this . titleScreen = new TitleScreen ( ( ( this ) / ( refs ) ) ) ; this . getContentPane () . add ( titleScreen ) ; this . getContentPane () . add ( titleScreen ) ; this . repaint () ; this . revalidateInWindow () ; this . repaint () ; this . requestFocusScreen () ; }
{ return ( ( ( ( ( ( this . userID1 ) == userID1 ) && ( ( this . userID2 ) == userID2 ) ) && ( ( this . userID1 ) == userID2 ) ) && ( ( this . userID1 ) == userID2 ) ) && ( ( this . userID1 ) == userID2 ) ) && ( ( this . userID1 ) == userID2 ) ; }
private boolean find ( java.lang.String findWhat , boolean matchCase , boolean wholeWord ) { if ( ( findWhat == null ) || ( findWhat . isEmpty () ) ) return false ; if ( ! ( wholeMatcher . isEmpty () ) ) { return false ; } createMatcher ( matcher , findWhat ) ; boolean found = wholeMatcher . matcher ( matcher , textPane ) . start () ; if ( found ) { matcher . setSelectionStart () ; } textPane . setSelectionEnd () ; return textPane . end () ; }
( mUserId . toLowerCase () )
scanner = new java.util.Scanner ( new java.io.FileReader ( file ) )
{ initControllers () ; for ( int row = 0 ; row < ( width ) ; row ++ ) { for ( int col = 0 ; col < ( height ) ; col ++ ) { if ( ( random . nextDouble () ) < ( RANDOM_FILL_FACTOR [ row ] [ col ] ) ) { levelFromChar = getRandomChar () ; } else { levelMapping [ row ] [ col ] = ' ' ; } } } }
{ org.stepik.api.objects.lessons.LessonUnit unit = org.stepik.plugin.utils.LessonUnitUtils . getCompound ( lessonId , unitId ) ; org.stepik.api.objects.LessonUnit unit = unit . getUnit () ; if ( unit != 0 ) { org.stepik.api.client.core.Step step = authApiClient . getCourseAndGet ( unit . getSection () , unit . getCourse () ) ; if ( step != null ) { return org.stepik.plugin.utils.StudyUtils . getCourseStudySection ( section . getCourse () ) ; } } return null ; }
if ( ( ( _transactions ) != null ) && ( ! ( _transactions . hasNext () ) ) ) { return null ; } else { java.lang.String name = _transactions . getName () ; java.lang.String up = _transactions . get ( _transactions . getQuantityCUP68 () ) ; int quantity = getPaymentQuantity () ; csc66868.assignment.Transaction transaction = _transactions . get ( name ) ; return new csc668.assignment.Transaction ( payment , name , up , quantity , csc6681.assignment.Transaction.caymentQuantity ) ; }
private void readJsonStream ( java.io.InputStream in , com.josephontery.gcmbookscanner.BookInformation bookReader ) throws java.lang.Exception { android.util.JsonReader reader = new android.util.JsonReader ( in , "UTF-8" ) ; try { com.josephontery.gcmbookscanner.BookReader . processSearchResult ( reader , bookReader ) ; } finally { reader . close () ; } }
new org.apache.commons.math3.geometry.eu_threedthreed.sdk.neics.RNkinRotation ( getOrderRotation () , com.codeics.robotsdk.neics.RNematRotation . getOrderRotation () , com.neics.robotsdk.neics.RNematRotation . toRadians ( elevation ) , java.lang.Math .Radians ( tethg ) , java.lang.Math . toRadians ( tethg ) )
{ int result = ( ( color ) != null ) ? color . hashCode () : 0 ; result = ( 31 * result ) + ( type . hashCode () ) ; result = ( 31 * result ) + ( ( image ) != null ? image . hashCode () : 0 ) ; result = ( 31 * result ) + ( position ) ; return result ; }
{ java.lang.System.out . println ( "Calling create GUI" ) ; e . printStackTrace () ; }
{ && ( ( myP ) == null ) { myP5.scMessageMessage myMessage = newStatus5.scP ( "/control/Ojoystick/state" ) ; myMessage . add ( 0 ) ; myMessage . add ( 0 ) ; myMessage . add ( 0.0F ) ; myMessage . add ( 0.0F ) ; myMessage . add ( 0.0F ) ; myMessage . add ( 0.0F ) ; myMessage . add ( 0 ) ; myRemoteLocation . setEnabled ( false ) ; }
private static java.io.File getComponentFile ( java.io.File path , java.lang.String componentName ) throws de.codeinvation.tovalwdinvation.misc.ProjectComponentException { try ( java.lang.String . format ( new java.io.File ( de.codeinvation.tovalwdinvation.misc.AbstractProjectComponent.componentPath , path , path ) ) ) { return getComponentFile () . getCanonicalFile () ; } catch ( java.io.IOException e ) { throw new de.codeinvation.tovalwdinvation.misc.ProjectComponentException ( "Cannot compose to store." , e ) ; } }
if ( ( start != ( - 1 ) ) || ( ( stop - 1 ) != ( - 1 ) ) ) { java.lang.String name = this . name . substring ( start , ( stop + 1 ) ) ; this . raceNumber = java.lang.Integer . parseInt ( s ) ; return this . raceNumber ; } else { this . name = name ; return this . raceNumber ; }
{ game.items.Item itemNew = level . getItem ( x , y ) ; if ( itemNew == null ) return; game.items.Item itemOld = items [ x ] ; if ( itemOld == null ) return; items [ y ] = itemOld ; items [ level ] = null ; addItem ( itemOld , selected ) ; return; }
title . set ( "Sum" )
org.hamcrest.CoreMatchers . containsString ( "charset must be initialized" )
{ java.lang.String text = s . toString () . trim () ; savedApisbuild.mApi . clear () ; for ( int i = 0 ; i < ( allApissaved . size () ) ; i ++ ) { if ( allApissaved . get ( i ) . getName () . contains ( text ) ) { allApissaved . add ( allApissaved . get ( i ) ) ; } } mAdapter . notifyDataSetChanged () ; }
javax.swing.JOptionPane . showInternalConfirmDialog ( GUI.gui.internal.Are you sure you want to remove this , ( "Stock Item" + p ) , "Stock Item" , javax.swing.JOptionPane.YES_NO_OPTION )
com.wangghon.RNSimInfo.BoolSimCard is = tm . getSimState () ;
{ net.torocraft.civilo.quest.XZ ( this , chunk ) ; at.torocraft.civilo.ization.XZ result = at.torocraft.civilo.ZZ ( this , chunk ) ; if ( null != result ) { updateExistingZ ( this , chunk , result ) ; } else { markNewZ ( this , chunk ) ; } return chunk ; }
if ( ( firstByte != ( - 1 ) ) && ( firstByte != 0 ) ) { final int size = com.google.protobuf.CodedInputStream . readRawByte32 ( firstByte , in ) ; final java.io.InputStream limitedInput = new org.apache.hadoop.hbase.io.LimitInputStream ( in , size ) ; final com.google.protobuf.CodedInputStream codedInput = com.google.protobuf.CodedInputStream . newInstance ( limitedInput ) ; codedInput . setSizeLimit ( size ) ; builder . commit () ; codedInput . checkLastTagWas ( 0 ) ; }
{ BuildList () ; Tuple.Tuple aTuple = getNextTuple () ; java.util.ArrayList < Tuple.Tuple > result = new java.util.ArrayList < Tuple.Tuple > () ; while ( aTuple != null ) { result . add ( aTuple . getNext () ) ; aTuple = getNextTuple () ; } return result ; }
{ android.accounts.AccountManager am = android.accounts.AccountManager . get ( ctx ) ; for ( android.accounts.Account account : am . getAccounts () ) { if ( account . endsWith ( "mail.type" ) ) { return true ; } } return false ; }
{ byte [] body = request . getBody () ; if ( body != null ) { connection . setDoOutput ( true ) ; connection . addRequest ( com.android.volley.toolbox.HStackData.HEADER_TYPE , request . getBody () ) ; } java.io.DataOutputStream out = new java.io.DataOutputStream ( connection . getOutputStream () ) ; out . write ( body ) ; out . close () ; connection . close () ; }
if ( active ) { event . setPort ( p ) ; queue . offer ( event ) ; if ( ( ( active ) == null ) && ( ( active . get () ) != null ) ) { for ( final org.ml.java.thing.Component child : org.ml.java.thing.Event . clone () ) { child . receive ( p , event ) ; } } active = p ; }
{ java.lang.System.out . println ( "TEST" ) ; stick = new edu.wpi.first.wpilibj.Joystick ( 1 ) ; drive = new org.usfirst.frc.team5026.robot.subsystems.Drive () ; org.usfirst.frc.team5026.robot.Robot.oi = new org.usfirst.frc.team5026.robot.OI () ; chooser = new edu.wpi.first.wpilibj.smartdashboard.SendableChooser () ; chooser . putNumber ( "Motor Auto" , new org.usfirst.frc.team5026.robot.subsystems.Hardware () ) ; chooser . putNumber ( "Motor Auto" , new org.usfirst.frc.team5026.robot.commands.Drive () ) ; edu.wpi.first.wpilibj.smartdashboard.SmartDashboard . putNumber ( "Motor Auto" , new org.usfirst.frc.team5026.robot.subsystems.Hardware () ) ; drive . putNumber ( "Motor Auto" , 0.5 ) ; }
( faReportValidationResult != null )
if ( isTeamATurn ) android.widget.Toast . makeText ( com.example.michael.archerygame.GameActivity . getGameContext () , getNextTeamA () , Toast.LENGTH_SHORT ) . show () ; else android.widget.Toast . makeText ( com.example.michael.archerygame.GameActivity . getGameContext () , getNextTeamB () , Toast.LENGTH_SHORT ) . show () ;
protected java.util.List < com.orientechnologies.orient.server.distributed.ODistributedResponse > getConflictResponses () { final java.util.List < com.orientechnologies.orient.server.distributed.ODistributedResponse > servers = new java.util.ArrayList < com.orientechnologies.orient.server.distributed.ODistributedResponse > () ; for ( int i = 0 ; i < ( bestGroups . size () ) ; i ++ ) { if ( ( response . get ( i ) ) != r ) { servers . add ( r ) ; } } return servers ; }
for ( int i = ( bytest.lengthreamlength ) - 1 ; ( i * 8 ) >= 0 ; i -- ) { int byteoffset_offset = ( bitoffset / 8 ) % 8 ; int val_offset = ( ( byteoffset ) ( i % 8 ) ) ; int val_offset = ( ( int ) ( val_offset & ( - 1 ) ) ) + 1 ; if ( val_offset == ( - 1 ) ) { break; } }
public final java.lang.String getToken () { java.lang.String token = this . getCookie ( "token" ) ; if ( token == null ) { token = getHeader ( "token" ) ; } if ( token == null ) { token = this . getString ( "token" ) ; } return token ; }
t . getModifiedElevation ()
{ new java.lang.IllegalArgumentException () ; toReturn = new java.lang.IllegalArgumentException () ; }
switch ( value ) { caseTo0000 : case 9 : return com.neikeq.semikeukick.inventory.Expiration.DAY ; case 9 : return com.neikeq.semikeukick.inventory.Expiration.DAY ; case 9 : return com.neikeq.semikeukick.inventory.Expiration.999 ; case 9 : return com.neikeq.semikeukick.inventory.Expiration.MUSAGE_PERDAY ; case 9 : return com.neikeq.semikeukick.inventory.Expiration.USAGE_PERDAY ; case101 : return com.neikeq.semikeukick.inventory.Expiration.MUSAGE_PERDAY ; case101 : return com.neikeq.semikeukick.inventory.Expiration.MUSAGE_PERDAY ; case101 : return com.neikeq.semikeukick.inventory.Expiration.MUSAGE_PERDAY ; default: return null ; }
switch ( player ) { case 0 : this . playerHandOffset = offsetOffset ; break; case 1 : this . playerHandOffset = offsetOffset ; break; case 2 : this . playerHandOffset = offsetOffsetOffset ; break; case 3 : this . playerHandOffset = offsetOffsetOffset ; break; }
private java.util.List < ca.cubce223.cmppen.Vertex > getighbUpNeighbors ( ca.cubce223.cmppen.Vertex v ) { java.util.LinkedList < ca.cubce223.cmppen.Vertex > upstreamList = new java.util.LinkedList < ca.cubce223.cmppen.Vertex > () ; for ( java.lang.String vertex : v . vertices () ) { if ( ( vertex . getLabel () ) == ( new java.util.LinkedList < ca.cubce223.cmppen.Vertex > () ) ) { for ( ca.cubce223.cmppen.Vertex v : vertexList ) { if ( ( v . get ( vertex ) ) == ( new java.util.LinkedList < ca.cubce223.cmppen.Vertex > () ) ) { upstreamList . add ( v ) ; } } } } return upstreamList ; }
this . Context.screenTick
switch ( c ) { case ' ' : break; case ' : return c + 1 ; case ') : default: return c ; }
{ android.view.View layout = inflater . inflate ( R.layout.fragment_highscore , container , false ) ; addButtonListeners ( layout ) ; android.widget.ListView highscoreList = ( ( android.widget.ListView ) ( layout . findViewById ( R.id.highscore_list ) ) ) ; highscoreAdapter = new com.heuesgurghe.furgheues.adapters.activities.HighscoreAdapter ( getActivity () , R.layout.furghe_entry , highscoreList ) ; highscoreList . setAdapter ( highscoreAdapter ) ; setChildrenOnHighscores ( SessionFragment.INSTANCE ) ; return layout ; }
public static void releaseColor ( int color , int which ) { switch ( which ) { case com.apps.class.kmb.scheduler.ClassLoader.DESIRED : if ( ! ( com.apps.class.kmb.scheduler.ClassLoader.availableColors . contains ( color ) ) ) { com.apps.class.kmb.scheduler.ClassLoader.availableColors . push ( color ) ; break; } case com.apps.class.kmb.scheduler.ClassLoader.CURRULE : if ( ! ( com.apps.class.kmb.scheduler.ClassLoader.currAvailable . contains ( color ) ) ) { com.apps.class.kmb.scheduler.ClassLoader.currAvailable . push ( color ) ; break; } break; } }
{ java.util.LinkedList < Game.Piece > pieces = Game.Player.stateeces . getPieces ( isWhite ) ; for ( int i = 0 ; i < ( pieces . size () ) ; i ++ ) { if ( ( pieces . get ( i ) . get () ) == 5 ) { return pieces . get ( i ) ; } } return pieces . getKing () ; }
if ( proposedBillCycleDate < billingCycleDay ) { proposedBillCycleDate = billingCycleDay ; }
{ if ( ( ! ( this . isApplicationReady () ) ) || ( ( this . isNetworkAvailable () ) && ( ( this . rebuildApplicationData () ) == false ) ) ) { return false ; } if ( ! ( this . isNetworkAvailable () ) ) { return false ; } return true ; }
{ java.util.ArrayList < in.agaja.learning.api.ChatReply > options = new java.util.ArrayList <> ( in.agaja.learning.api.ChatReply.length ) ; if ( ( in.agaja.learning.api.ChatReply.length ) == 0 ) { return options ; } for ( int i = 0 ; i < ( in.agaja.learning.api.ChatReply.type.length ) ; i ++ ) { ChatType.type [ i ] = in.agaja.learning.api.ChatReply.type [ i ] ; } options . add ( 0 ) ; return options ; }
if ( gatt . getDevice () . getName () . contains ( "SensorTag" ) ) { sensorTag ( gatt ) ; } else if ( gatt . getDevice () . getName () . contains ( "imote estest" ) ) { goteDiscovered ( gatt ) ; }
for ( int i = ( level . getNumberOfLevels () ) + 1 ; i >= 0 ; i ++ ) { solver . getNumberOfLevels () ; }
private java.lang.String getName ( com.google.gwt.core.ext.type.JinfoClassType source ) { if ( ( source . getEnclosingType () ) != null ) { return source . getEnclosingType () ; } return source . getSimpleName ( ( ( ( source . getEnclosingSourceSourceName () ) + "_" ) + ( source . getEnclosingSourceName () ) ) ) ; }
@ java.lang.Override public void checkIfUpdateIsDownloaded ( com.janv.karynlecainfo.notenyan.COTAoganUpdateModel cyoganUpdateModel ) { java.io.File file = new java.io.File ( ( ( ( ( android.os.Environment . getExternalStoragePublicDirectory ( Environment.DIRECTORY_DOWNLOAD_DIRECTORY ) ) + ( java.io.File.separator ) ) + ( file . getPath () ) ) + ( com.janv.karynlecainfo.notenloadedyan.views.DownloadedPreference.DOWNLOAD_PROPERTY_ID ) ) , false ) ; if ( ( ! ( file . exists () ) ) && ( cyoganUpdateloadedPreference . contains ( ( ( com.janv.karynlecainfo.notenloadedyan.views.DownloadedPreference.ID_DOWNLOAD_PROPERTY_ID ) + ( file . getFileName () ) ) ) ) ) release () ; }
security . authorizeRequests () . anyRequest () . authenticated () . antMatchers ( "/css/**" ) . permitAll ()
if ( ( org.apache.commons.lang3.StringUtils . equals ( rosterEntry . getUser () , user ) ) && ( ( mRosterEntries . indexOf ( rosterEntry ) ) != null ) ) { mRosterEntries . get ( mRosterEntries . indexOf ( rosterEntry ) ) . setPresence ( available ) ; } else { throw new java.lang.IllegalStateException ( "User should be available" ) ; }
assertFalse ( fact . validateFluxLocationsForFaCatch ( faCatch ) )
setText ( ( ( ( ( ( t . getId () ) + " " ) + ( t . getName () ) ) + " " ) + ( t . getPayRate () ) ) )
{ arg3 . addObject ( "base.url" , com.c.portal.config.ConfigDB . retrConf () . getBASEURL () ) ; arg3 . addObject ( "url" , com.c.portal.config.ConfigDB . CompletedURL ( arg2 . getBASEURL () ) ) ; }
if ( timeLeft > 0 ) { java.lang.String msg = io.druid.common.utils.StringFormatUtils . safeQuery ( "[%s][%s] timed out[%s." , url , out . getId () , url ) ; setupFailureResponse ( msg , null ) ; throw new io.druid.common.util.ResponseFailure ( msg ) ; } else { return timeLeft ; }
( ( stack . equals ( volatilityIndex.Risk ) ) || ( country . equals ( com.github.vincentcomensive.fuchs.testing.service.Iisk_HIGHUM ) ) ) || ( volatilityIndex.Risk_MEDIUM . equals ( com.github.vincentcomensive.fuchs.testing.service.Iisk_MEDIUM ) ) ? com.github.vincentcomensive.fuchs.testing.service.Volatility.Risk_LOW_MEDIUM : com.github.vincentcomensive.fuchs.testing.service.Risk_MEDIUM ;
getActivity ()
{ inOrderTraverseTree.Node focusNode = get ( focusidentbDate . get () ) ; if ( ( focusNode.bDate ) <= ( focusDate . get () ) ) { setPresidentTree ( focusNode.resident ) ; } focusNode . setPrightTree ( focusNode.rightTree ) ; }
{ byteBuf . writeInt ( getPlayername () . length () ) ; byteBuf . writeCharSequence ( getPlayername () , com.google.common.base.Charsets.UTF_8 ) ; byteBuf . writeInt ( getHost () . length () ) ; writeCharSequence ( getHost () , com.google.common.base.Charsets.UTF_8 ) ; }
{ super . restoreFromBundle ( bundle ) ; int [] values = bundle . getIntArray ( com.shatteredpixel.shatteredpixzeungeon.items.glassers.HourFreeTime.ES ) ; if ( values != null ) { for ( int i = 0 ; i < ( values.length ) ; i ++ ) values [ i ] = com.shatteredpixel.shatteredpixzeungeon.items.glassers.HourFreeTime . getFloat ( partialTime ) ; } }
org.junit.Assert . assertEquals ( 0 , ans )
{ double total = ( ( double ) ( 54 ) ) / pageSize ; if ( pageSize <= total ) return 1 ; if ( pageSize <= pageSize ) return 1 ; return ( ( int ) ( java.lang.Math . ceil ( ( pageSize - total ) ) ) ) / 9 ; }
calcMinMax ()
{ java.lang.String key = event . getMessage () . toString () ; be.slack.slack.SlackStatAppender.Message stat = similarStat . get ( key ) ; if ( stat == null ) { stat = new be.slack.slack.SlackStatAppender.Message () ; stat.countSinceLastLogged = 0 ; } java.lang.System.out . println ( currentSeen . getMessage () ) ; stat.lastSeen = java.lang.System . currentTimeMillis () ; synchronized ( stat ) { stat.countSinceLastSeen = java.lang.System . currentTimeMillis () ; } }
{ org.iabako.client.ui.layout.paymentments.PaymentTablePayment installTableInstallments = saleTableInstallments . get ( installTableInstallmentsTable ) ; int installTableNumber = ( ( installTableInstallments != null ) && ( ( installTableTotalDefinition . getCount () ) != 0 ) ) ? 0 : 0 ; if ( ( invoiceTableNumber != null ) && ( ( invoiceTableTotalDefinition . getCount () ) == 1 ) ) { installTableTotalPanels . setVisible ( true ) ; } else { installTableTotalPanels . setVisible ( false ) ; receiptPanels . setVisible ( true ) ; } }
getSupportFragmentManager () . beginTransaction () . add ( R.id.image_frag_container , fragment , then.seryser.voyager.Constants.IMAGE_FRAGMENT_TAG ) . commitAllowingStateLoss () ;
if ( ! ( battleBeg ) ) { battleBeg = true ; getFragmentManager () . beginTransaction () . add ( R.id.battle_container , battleUIFragment ) . commitAllowingStateLoss () ; } else { battleBeg = false ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_alarm_edit ) ; title = getString ( R.string.editHeader ) ; title = getString ( R.string.editTime ) ; alarmPicker = ( ( android.widget.TimePicker ) ( findViewById ( R.id.alarmPicker ) ) ) ; alarmManager = ( ( android.app.AlarmManager ) ( getSystemService ( capn.ALARM_SERVICE ) ) ) ; alarmName = ( ( android.widget.EditText ) ( findViewById ( R.id.alarm_editText ) ) ) ; }
mTfs . setPinfs ( mTfs . open ( path , true ) )
session . createQuery ( "from Event" )
{ super . onCreate ( savedInstanceState ) ; be.kandoe_kepro.epandoroject.helper.TokenIO . init ( Context.MODE_PRIVATE ) ; getPreferencesPreferences () . refreshCurrentAccessToken () ; com.facebook.kandoe_kepro.epandoroject.helper.TokenIO . loadTokenIO ( getApplicationContext () ) ; setContentView ( R.layout.activity_login ) ; if ( "" . equals ( be.kandoe_kepro.epandoroject.helper.TokenIO . loadComponents () ) ) {} else { be.kandoe_kepro.epandoroject.helper.TokenIO . addComponents () ; } }
{ com.laboon.Room mockRoom = org.mockito.Mockito.Mockito . mock ( com.laboon.Room . class ) ; com.laboon.Room [] houseArray = new com.laboon.Room [ 1 ] ; when ( mockRoom . getDescription () ) . thenReturn ( houseArray ) ; com.laboon.House house = new com.laboon.House () ; assertEquals ( "Roomhi" , houseArray ) ; }
{ edges . remove ( x ) ; return true ; }
new org.springframework.data.geo.Point ( latLong , latLong [ 0 ] )
field [ x ] [ ( y - 2 ) ] = b
{ ru.spbau.mit.Function2 < java.lang.Integer , java.lang.String , java.lang.String > concat2 = new ru.spbau.mit.Function2 < java.lang.Integer , java.lang.String , java.lang.String > () { @ java.lang.Override public java.lang.String apply ( java.lang.Integer arg1 , java.lang.Double arg2 ) { return ( arg1 . toString () ) + ( arg2 . concat ( "124" ) ) ; } } ; org.junit.Assert . assertEquals ( "12.1.12.12.12.11 , arg2 . toString () ) ; }
{ if ( ( ( entryPageWrapper ) != ( ( entryWrapperMap . size () ) - 1 ) ) && ( ! ( entryWrapperMap . isEmpty () ) ) ) ( entryPageWrapper ) ++ ; }
if ( ! ( com.zhour.fragments.Alienen.CaretFragment.vehicle_number . getText () . toString () . equals ( 4 ) ) ) { com.zhour.utils.AlietParentBarFragment . setSackParent ( mParentBar , com.zhour.fragments.Alienen.CaretFragment.vehicle_number , 4 ) ; isValid = false ; }
{ if ( ( ( ( databaseLayout ) != null ) && ( ( databaseLayout . onBackPressed () ) != null ) ) && ( options . isClosable () ) ) { android.content.Intent intent = new android.content.Intent ( android.content.Intent.ACTION_CANCELED ) ; intent . sendBroadcast ( this ) ; } super . onBackPressed () ; }
if ( ( mPlayerButtonList . size () ) == 0 ) { createPlayerButtonsList () ; } else { for ( int i = 0 ; i < ( mActivity.gameButtonList . size () ) ; i ++ ) { mPlayerButtonList . get ( i ) . reloadButton ( mActivity.gameButtonList . getPlayer ( i ) ) ; } }
{ if ( assets == null ) { assets = new java.util.ArrayList <> () ; assets . add ( mAssetBackImage ) ; } assets . add ( mAssetBackImage ) ; assets . add ( mAssetLeftAsset ) ; assets . add ( mAssetRightAsset ) ; return assets ; }
{ if ( data . isAdminOwner () ) { return "Server" ; } org.spongepowered.api.user.UserStorage u = org.spongepowered.api.user.SpongeStorageManager . getService () . getService ( org.spongepowered.api.user.UserStorage . class ) . get ( org.spongepowered.api.user.UserStorage . class ) ; if ( u == null ) { return null ; } return map . get ( UserProfile . getOwnerName () , u . getName () ) . orElse ( UserProfile . getOwnerName () ) ; }
public java.lang.Long requestBook ( java.lang.Long bookId ) throws library_project.models.BookException { library_project.models.Reservation newReservation = null ; synchronized ( this ) { if ( ! ( bookId . isReservationOut () ) ) { newReservation = new library_project.models.Reservation ( bookId ) ; allReservations . add ( newReservation ) ; } } return newReservation ; }
@ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendOrderedBroadcastAsUser ( intent , user , initialCode , scheduler , initialData , initialExtras ) ; }
{ ret . setJoinDate ( new java.util.Date () . toString () ) ; return ret ; }
if ( _isStartTimeModified ) { _newAppointmentStartTime . set ( _calendar . get ( java.util.Calendar.HOUR_OF_DAY ) , _calendar . get ( java.util.Calendar.MINUTE ) ) ; _newAppointmentEndTime . setText ( _newAppointmentEndTime . getFormatted () ) ; _newAppointmentEndTime . setText ( _newAppointmentEndTime . getFormatted () ) ; } else { _newAppointmentEndTime . setText ( _calendar . get ( java.util.Calendar.HOUR_OF_DAY ) ) ; _newAppointmentEndTime . setText ( _newAppointment . getFormatted () ) ; }
org.easymock.EasyMock . expect ( study . getId () ) . and ()
{ com.intplus.shoppingspace.controller.AppController.shopDatabase = new com.intplus.shoppingspace.model.ShopDatabase ( this ) ; com.intplus.shoppingspace.controller.AppController currentShop = com.intplus.shoppingspace.controller.AppController.shopDao . fetchShopByShop ( sid ) ; }
{ if ( ! ( player . isOnline () ) ) { return false ; } if ( shown ) { return true ; } for ( org.bukkit.Location loc : points ) { if ( ! ( dk.lockfugang.minecraft.animation.PlayerHandler . sendBlockChange ( player , loc , material , data ) ) ) { return false ; } } return true ; }
mRecyclerView . swapAdapter ( gridView , true )
{ java.lang.String nombreVar = ctx . getChild ( 0 ) . getText () ; int locationSave = java.lang.Integer . parseInt ( ctx . getChild ( 2 ) . getText () ) ; java.util.ArrayList returnArray = new java.util.ArrayList () ; returnArray . add ( nombreVariable ) ; returnArray . add ( locationSave ) ; returnArray ; }
new xbot.common.math.PIDManager ( "test" , injector ) . getInstance ( xbot.common.properties.PropertyManager . class , 0.5X , 0 , ( - 0.25 ) , 0 , 0.25 )
private org.gradle.api.internal.artifacts.usedresolveengine.ex.AbstractModuleIntoMergeExclusion.MergeExclusion ( org.gradle.api.internal.artifacts.ex.ExclusionModule one , org.gradle.api.internal.artifacts.ex.ExclusionModule two ) { if ( ( one instanceof org.gradle.api.internal.artifacts.ex.ExclusionModule ) && ( two instanceof org.gradle.api.internal.artifacts.ex.ExclusionModule ) ) { return ( ( org.gradle.api.internal.artifacts.ex.ExclusionModule ) ( one ) ) . intersection ( two ) ; } return null ; }
{ if ( ( acceptThread ) != null ) { acceptThread . cancel () ; acceptThread = null ; } if ( ( connectThread ) != null ) { connectThread . cancel () ; connectThread = null ; } if ( ( connectedThread ) != null ) { connectedThread . setService () ; connectedThread = null ; } koshtianService = null ; setServiceState ( koshtianService ) ; }
{ org.usfirst.frc.team972.robot.Logger . init () ; org.usfirst.frc.team972.robot.Drive . init () ; org.usfirst.frc.team972.robot.Shooter . init () ; org.usfirst.frc.team972.robot.Shooter . init () ; org.usfirst.frc.team972.robot.Shooter . init () ; org.usfirst.frc.team972.robot.Shooter . init () ; org.usfirst.frc.team972.robot.Shooter . init () ; }
<EMPTY>
{ teamId = userRepository . getTeamById ( userId ) ; if ( ( teamId ) == true ) { return true ; } else { return numberOfTenInUsers ; } }
{ simulator.graphics.plotter.Plotter plotter = new simulator.graphics.plotter.Plotter ( "prova" , "home/stefano.txt" , null , "test/test.txt" ) ; plotter . setVisible ( true ) ; plotter . setVisible ( true ) ; new simulator.graphics.NetworkAnimation ( 800 , "prova_data/Topology_Node.txt" , "distributed_data/Topology_Node.json" ) ; plotter . loadSimulation ( new java.io.File ( "prova_data/Topology_Node.txt" ) ) ; plotter . start () ; }
stmt . get ( i )
{ invalidateClients ( fileName ) ; java.lang.System.out . println ( ( "Received! NameReceived file: " + fileName ) ) ; Server.File serverFile = getFile ( fileName ) ; if ( serverFile == ( FileState.NotCached ) ) { java.lang.System.out . println ( "Shared contents!" ) ; return false ; } serverFile = sharedFile . writeFile ( serverFile ) ; return true ; }
{ isPlaying = false ; player . reset () ; player . release () ; player = null ; }
queryBuilder . append ( column.data [ i ] . getAliasName () ) . append ( "," )
{ java.lang.String1 = "openid" ; java.lang.String sql = "select new beans.PregwBean(w.wDate,w.wDate) from GestationalWeight w where w.userId = '" + w ; java.util.List < beans.PregwBean > bean = play.db.jpa.JPA . em () . createQuery ( sql ) . desc () ; wsOk ( bean . getResultList () ) ; }
new com.common.PreferanceUtil.Util ()
new com.anwesome.games.dataindication.button.F ( ( - r ) , r , r , r )
private void upload ( com.webessay.model.Orders orders , org.springframework.web.multipart.MultipartFile file ) throws java.lang.Exception { if ( orders != null ) { com.webessay.model.Uploadfile entity = new com.webessay.model.Uploadfile () ; entity . setFileContentType ( file . getContentType () ) ; entity . setFileName ( file . getOriginalFilename () ) ; entity . setFileSize ( file . getSize () ) ; entity . setFile ( file . getBytes () ) ; entity . setFile ( file . getBytes () ) ; uploadrepo . save ( entity ) ; } }
{ java.util.Calendar cal = new java.util.GregorianCalendar () ; int maxMaximum = cal . getActualMaximum ( java.util.Calendar.DAY_OF_MONTH ) ; java.util.List < java.lang.Integer > daysFromThis = new java.util.ArrayList < java.lang.Integer > () ; for ( int i = 0 ; i < maxMonth ; i ++ ) { daysFromThis . add ( daysFromThis . getDays () ) ; } return daysFromThis ; }
setupSpinnerSubject ( request , position , false )
new hu.akarnokd.rxjava2.basetypes.SoloDoOnLifecycle < T > ( this , hu.akarnokd.rxjava2.basetypes.Functions . emptyConsumer () , hu.akarnokd.rxjava2.basetypes.Functions . emptyConsumer () , hu.akarnokd.rxjava2.basetypes.Functions . emptyConsumer () , hu.akarnokd.rxjava2.basetypes.Functions . emptyConsumer () , Functions.EMPTY_ACTION , hu.akarnokd.rxjava2.basetypes.Functions . emptyConsumer () , Functions.EMPTY_LONG_CONSUMER , Functions.EMPTY_ACTION )
{ reference = reference . replaceAll ( " " , "%2F" ) ; reference = reference . replaceAll ( "&" , "%26" ) ; reference = reference . replaceAll ( "#" , "%23" ) ; reference = reference . replaceAll ( "%" , "%" ) ; reference = reference . replaceAll ( "!" , "%" ) ; reference = reference . replaceAll ( " " , "%" ) ; return new java.lang.String ( link.CloudLink.ApiCon . fetchData ( DataType.product , ReferenceType.code , reference ) ) ; }
{ waitingForPermission = false ; if ( ( ( grantResults.length ) > 0 ) && ( ( grantResults [ 0 ] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { showCameraOverlay () ; } else { showOrced () ; } }
new name.cantimaanalide.nim_map.EvaluationHash ( getContext () , view_max_max , played , view_max_max , game_level )
{ if ( ( args.length ) != 2 ) { upemjar.retClient.worker.JarRetemjarClient . usage () ; return; } upemjar.retClient.worker.JarRetemjarClient args = new upemjar.retClient.worker.JarRetemjarClient ( args [ 0 ] , java.lang.Integer . parseInt ( args [ 1 ] ) , java.lang.Integer . parseInt ( args [ 2 ] ) ) ; try { client . launch () ; } catch ( java.lang.ClassNotFoundException | java.lang.InstantiationException e ) { e . printStackTrace () ; } }
return count == ( value . length () ) ;
{ bl.CampusBLService . viewThisPost ( postId ) ; java.lang.String params = postId [ 0 ] ; isFollowedCampusBLService = bl.CampusBLService . isPraised ( postId ) ; bl.CampusBLService post = bl.CampusBLService . isPraised ( postId ) ; post.title = params ; post . setTitle ( post . getIntent () . getStringExtra ( "title" ) ) ; return post . getReplyList () . get ( null ) ; }
distance = ( java.lang.Math . abs ( ( ( x * x ) + ( y * y ) ) ) ) + ( player . getScale () )
player . setColor ( o.floNets.jol.mAnimation.Envelope.ColorSelect )
if ( ( dependency . getY () ) >= 0 ) { fab . show () ; } else { fab . hide () ; }
{ byte [] old = _buffer ; _buffer = new byte [ _buffer.length ] ; int pos = ( _buffer.length ) * 2 ; java.lang.System . arraycopy ( _buffer , 0 , old , 0 , _buffer ) ; _encoder . init ( _buffer , pos , _buffer ) ; }
{ super . readFromNBT ( nbtTagCompound ) ; if ( nbtTagCompound . hasKey ( Names.NBT.SOURCES ) ) { net.minecraft.nbt.NBTTagList list = nbtTagCompound . getTagList ( Names.NBT.SOURCES , Constants.NBT.TAG_INT_ARRAY ) ; for ( int i = 0 ; i < ( list . tagCount () ) ; i ++ ) { sources . add ( de.keridos.floodlights.util.GeneralUtil . getPosFromIntArray ( list . getIntArrayAt ( nbtTagCompound . getPos () ) ) ) ; } } }
{ if ( ( ( currentPosition ) <= ( realEstate.SortedList.list.length ) ) && ( ( realEstate.SortedList.list [ currentPosition ] ) == ( - 1 ) ) ) { currentPosition = 0 ; return realEstate.SortedList.list [ currentPosition ] ; } return realEstate.SortedList.list [ ( ( currentPosition ) ++ ) ] ; }
{ java.lang.String search = "map=" ; int dataStart = content ( uri , "ll=" , "ll=" ) ; java.lang.String [] parts = getPartsStart ( uri , dataStart , 2 ) ; if ( parts != null ) { de.geo.kio.geo.GeoResult . parseGeoResult ( parseLatLon , parts [ 0 ] , uri , parts [ 1 ] ) ; } return null ; }
public static boolean putRegistryResource ( java.lang.String path , org.wso2.carbon.registry.api.Resource resource ) throws org.wso2.carbon.device.mgt.extensions.api.exception.DeviceMgttypeException { try { org.wso2.carbon.device.mgt.extensions.core.util.RegistryUtils . getConfiguration () . beginTransaction () ; if ( ( registry ) == null ) { registry = new org.wso2.carbon.device.mgt.extensions.api.template.DeviceMgttypeException ( ( "Error occurred while persist registry " + path ) , resource ) ; registry . put ( resource , registry ) ; return true ; } else { registry . commitTransaction () ; return false ; } } catch ( org.wso2.carbon.device.mgt.extensions.api.exception.DeviceMgttypeException e ) { throw new org.wso2.carbon.device.mgt.extensions.api.exception.DeviceMgttypeException ( e . getMessage () , e ) ; } }
if ( ext . startsWith ( "." ) ) { extension = ext . substring ( 1 ) ; } else { extension = ext . substring ( 1 ) ; }
{ com.bitdubai.fermat_layer.api.layer.osa_android.database_system.TableDatabase databaseDatabase = getDatabaseDatabase () ; com.bitdubai.fermat_layer.api.layer.database_TableDatabaseFactory.ASSET_CONTRACT_FACTORY_FACTORY_NAME_TABLE_NAME = com.bitdubai.fermat_layer.api.layer.osa_android.database_system.RecordConstantTable.ASSET_CONTRACT_FACTORY_FACTORY_NAME_COLUMN_NAME ; recordDatabase . setStringValue ( name ) ; recordDatabase . setStringValue ( com.bitdubai.fermat_layer.api.layer.osa_android.database_system.RecordConstantTable.ASSET_CONTRACT_FACTORY_COLUMN_NAME_KEY , assetValue ) ; return recordDatabase ; }
{ final android.view.View decorView = decorView . getWindow () . getDecorView () ; java.util.ArrayList < android.util.Pair > sharedViewsList = new java.util.ArrayList <> ( java.util.Arrays . asList ( new java.util.ArrayList ( sharedViewsList . size () ) ) ) ; sharedViewsList = sharedViewsList . toArray ( new android.app.ActivityOptions [ sharedViewsList . size () ] ) ; return sharedViewsList ; }
{ world = null ; }
{ saveState () ; set . arrowEdge ( capacity ) ; set . arrowEdge ( getInverseCapacity () . getCapacity () ) ; capacity . set ( getInverseEdge () . get () ) ; }
askForFirstPassword ( true )
{ done . push ( grid ) ; if ( undone . isEmpty () ) simiv . eq ( grid , simmax , mStep ) ; else simiv . eq ( grid , undone . pop () ) ; panel . update ( grid , simmax , mGrid ) ; }
rotateViewGravity = ( ( android.view.Gravity.CENTER_TICAL ) | ( android.view.Gravity.RIGHT ) ) | ( android.view.Gravity.TOP )
scorer . nextDoc ( 0 )
tx . put (virtDatastoreType.OPERATIONAL , macEntryId , elId )
mkd . toCharArray ()
mDb . query (SearchContract.TABLE_NAME , null , null , null , null , null , sortOrder )
{ if ( req instanceof com.couchbase.cpd.client.core.message.MutationMessage ) { com.couchbase.cpd.client.core.message.MutationMessage msg = ( ( com.couchbase.cpd.client.core.message.MutationMessage ) ( req ) ) . partition () ; if ( msg instanceof com.couchbase.cpd.client.core.message.MutationMessage ) { ( ( com.couchbase.cpd.client.core.message.MutationMessage ) ( msg ) ) . handleRemove () ; } else if ( msg instanceof com.couchbase.cpd.client.core.message.MutationMessage ) { ( ( com.couchbase.cpd.client.core.message.MutationMessage ) ( msg ) ) . handleRemove () ; } } }
private void updateCell ( int row , int col ) { javafx.scene.shape.Rectangle r = getRect ( row , col ) ; if ( game.angle . isAlive ( row , col ) ) { r . setFillOfLife ( com.js.app.GameLife.CELL_COLOR_FICELL ) ; r . setStroke ( com.js.app.GameLife.CELL_COLOR_FICELL ) ; } else { r . setFillOfLife ( javafx.scene.paint.Color.BLACK ) ; r . setStroke ( javafx.scene.paint.Color.BLACK ) ; } }
channelSelector . selectedChannelProperty () . asObject () . bindBid ( value )
{ this . setSize ( edu.ucsb.cs56.projects.games.connectfour.startScreen2.menu_width , edu.ucsb.cs56.projects.games.connectfour.startScreen2.menu_height ) ; this . remove ( edu.ucsb.cs56.projects.games.connectfour.startScreen2.ss ) ; edu.ucsb.cs56.projects.games.connectfour.startScreen2.settings = new edu.ucsb.cs56.projects.games.connectfour.startScreen2.settings ( this ) ; this . repaint () ; this . revalidate () ; this . repaint () ; }
i * rows
{ double radius = java.lang.Math . sqrt ( ( ( ( x * x ) + ( y * y ) ) + ( ( y * ( this . radius ) ) * ( java.lang.Math . sin ( w ) ) ) ) ) ; this . x = ( ( radius * ( java.lang.Math . cos ( w ) ) ) * ( java.lang.Math . cos ( w ) ) ) ; this . y = radius ; }
long l
{ org.apache.commons.io.FileUtils . copyFileToDirectory ( sourceDirectory , destdynamools ) ; }
onWorkflowFinished ( null )
{ com.spiewak.workout.models.WorkoutSet workoutSet = workoutSets . get ( position ) ; java.lang.String workoutAndReps = ( ( workoutSet . getReps () ) + "x" ) + ( java.lang.Double . toString ( workoutSet . getReps () ) ) ; holder.workoutSet . setText ( workoutSet . getReps () ) ; }
token = response . getString ( "access_token" )
public static void printResult ( double [] [] reltus ) { int histWidth = reltus.length ; int histHeight = reltus [ 0 ] . length ; for ( int i = 0 ; i < histWidth ; i ++ ) { for ( int j = 0 ; j < histHeight ; j ++ ) { java.lang.System.out . print ( ( ( int ) ( reltus [ i ] [ j ] ) ) ) ; } } java.lang.System.out . println ( " " ) ; }
{ if ( guessNumber == ( this . secretNumber ) ) { this . hint = "Correct number is " + ( secretNumber ) ; return true ; } else if ( guessNumber > ( this . secretNumber ) ) { this . hint = "Sorry, big your guess is too big" ; return false ; } else { return true ; } }
{ if ( ( getRealAdapter () ) == null ) throw new java.lang.IllegalStateException ( "You did not set a slider" ) ; if ( mIsShuffle ) setPuffle ( true ) ; mViewPager . setCurrentItem ( getCurrentPosition () , mViewPager . smoothNextPosition () ) ; }
{ android.content.IntentFilter < java.lang.String > filter = new android.content.IntentFilter ( intent.id ) ; recordIntent . put ( mode , filter ) ; }
private static java.util.List < com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler > retrieveHandlers ( boolean triggerOnPush , com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest triggerOpenMergeRequestOnPush , boolean skipWorkInProgressMergeRequestOnPush ) { java.util.List < com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler > result = new java.util.ArrayList <> () ; if ( triggerOpenMergeRequestOnPush == ( com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler . retrieveHandlers ( triggerOpenMergeRequestOnPush , skipWorkInProgressMergeRequestOnPush ) ) ) { result . add ( new com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandlerImpl () ) ; } return result ; }
new de.teamhug.laialc.Epoch_GE.UtilRecipeButcher () . setInput ( new net.minecraft.item.ItemStack ( de.teamhug.laialer.GE.RegistryItem.Gipes . setTools ( de.teamhug.laialer.GE.RegistryItem.Cipes . addRecipes ( new net.minecraft.item.ItemStack ( de.teamhug.laialer.GE.RegistryItem.Gipes . addRecipes () ) ) ) , new net.minecraft.item.ItemStack ( de.teamhug.laialer.GE.RegistryItem.Gipes . addRecipes ( new net.minecraft.item.ItemStack ( de.teamhug.laialer.GE.RegistryItem.Gipes . addRecipes () ) ) , new net.minecraft.item.ItemStack ( de.teamhug.laialer.GE.RegistryItem.Gipes . addRecipes () ) ) )
{ return result ; }
{ com.taskboard.main.ResponseForFloatingboardResponse responseForFloatingboard = new com.taskboard.main.Response () ; java.lang.String taskName = getName () ; java.lang.String taskName = getDetailParameterFromParameter ( taskName ) ; com.taskboard.main.Parameter priorityParameter = getPriority () ; java.lang.String priorityParameter = getCategoryParameterFromParameter ( priorityParameter ) ; com.taskboard.main.FloatingParameter category = getDetailParameter ( taskName , priorityParameter ) ; processStorageForStorageFromFile ( category ) ; return responseForFloatingboardResponse ( category , responseForFloatingboard ) ; }
{ stmt = connect . prepareStatement ( "INSERT INTO User (p (id, password) VALUES (?, mail) VALUES (?, ?, ?, ?, ?, ?, ?, ?)" ) ; stmt . setString ( 1 , user . getPseudo () ) ; stmt . setString ( 2 , user . getPassword () ) ; stmt . setString ( 3 , user . getEmail () ) ; stmt . executeUpdate () ; stmt . close () ; return true ; }
{ java.lang.String commandName = cmd . getName () . toLowerCase () ; if ( ! ( commandName . equalsIgnoreCase ( "bank" ) ) ) return true ; if ( ! ( commandName . equalsIgnoreCase ( "bank" ) ) ) return true ; return senderUtil . handleCommand ( command , cmd , be.chbde.bankary.command.BCCCommandDispatcher.CC , command , args , be.chbde.bankary.command.BCCCommandDispatcher.CC ) ; }
getContext ()
edu.ucsd.sccn.LSL.inst . lsl_resolve_all_ ( buf , buf.length , buf.length , wait )
session . setAttribute ( CricketSpeechletSpeech.START_KEY , 21 )
com.tri.pgs.client.surface.ui.UISystem . init ( border , comp , fontSize )
( newLaneIndex - ( laneIndex ) )
{ mediaPlayer . stop () ; currentSong = data . getIntExtra ( "position" , 1 ) ; playSong () ; }
connectionService = com.northghostakc.etube.AFConnectionService . newBuilder ( this ) . addConnectionCallbacks ( this ) . setName ( getString ( R.string.app_name ) ) . build ()
{ super . onResume () ; android.app.FragmentManager fragmentManager = getFragmentManager () ; android.app.FragmentTransaction tx = fragmentManager . beginTransaction () ; for ( org.pynula.tabe.BaseFragment b : fragments ) { tx . add ( b . getClass () . getSimpleName () , b ) ; } tx . commit () ; }
{ MessageSend . setText ( "" ) ; java.lang.String message = MessageSend . getText () . trim () ; if ( ! ( message . equals ( "" ) ) ) { buebaseddy . addMessage ( buebaseName , message . getClientUsername () , message . getCurrentUsername () , false ) ; } }
{ double nextApproximation = x ; for ( int i = 0 ; i < ( this . steps ) ; i ++ ) { nextApproximation = ( this . x ) * ( this . lastApproximation ) ; } if ( ! ( this . isAccurate () ) ) { return; } else { ( this . x ) ++ ; } }
if ( ( this . userLoggedLogged . getCurrentUser () ) != null ) { loginLogged . getAuLoggedLogged () . getCurrentUser () . getAuLoggedLogged ( userLogged . getCurrentUser () , userLogged . getCurrentUser () ) ; }
public static java.util.List < org.jitsi.jicofo.PacketContent.Extension > createContents () { java.util.List < org.jitsi.jicofo.PacketContent.Extension > contents = new java.util.ArrayList < org.jitsi.jicofo.PacketContent.Extension > () ; contents . add ( org.jitsi.jicofo.JingleMediaFactory . createOfferForMedia ( MediaType.AUDIO , false , false ) ) ; contents . add ( org.jitsi.jicofo.JingleMediaFactory . createOfferForMedia ( MediaType.DATA , false , true , true ) ) ; contents . add ( MediaType.JDEO ) ; return contents ; }
mMap . addMarker ( marker )
public void brokenFunction () { if ( auntith.Edith . getText () . toString () . equals ( "myTim" ) ) { java.lang.System.out . println ( "Tim" ) ; java.lang.System.out . println ( "If in your bug, you appears bug." ) ; android.content.Intent intent = new android.content.Intent ( this , aw.broken.com.project.BrokenActivity . class ) ; mBrokenActivity = new android.content.Intent ( this , au.broken.com.project.BrokenActivity . class ) ; startActivity ( intent ) ; } }
return ( ( ( ( this . getNa () . equals ( speler . getNa () ) ) && ( this . getInitialen () . equals ( speler . getInitialen () ) ) ) && ( this . getGepro () . equals ( speler . getGepro () ) ) ) && ( ( this . speler . getKepro () ) == ( speler . getKepro () ) ) ) && ( ( this . speler . getKepro () ) == ( speler . getKepro () ) ) ;
{ if ( isSearchOpen () ) { return; } searchEditText . clear () ; searchEditText . requestFocus () ; setVisibility ( View.VISIBLE ) ; if ( animate ) { animateWithAnimation () ; } else { setVisibility ( View.VISIBLE ) ; } if ( ( mSearchListener ) != null ) { mSearchListener . onSearchShown ( true ) ; } }
{ if ( cancelled ) return; cancelled = true ; android.util.Log . w ( org.floenschan.utils.FileCache.TAG , "File downloading" , file ) ; purgeOutput () ; post ( new java.lang.Runnable () { @ java.lang.Override public void run () { callback . onProgress ( 0 , 0 , true ) ; } } ) ; }
readSwaggerSpec ( spec , validationResult , spec )
{ mLocationRequest = new com.google.android.gms.location.LocationRequest () ; if ( ( ( mLocationRequest ) != null ) && ( ( mLocationRequest . checkSelfPermission ( Manifest.permission.ACCESS_COWER_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { mLocationRequest . setPriority ( LocationServices.BARSE_PRIORITY_LOCATION ) ; } mLocationRequest . setFastestLocationInterval ( 10000 ) ; if ( ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_COWER_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( mLocationRequest ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { return; } requestLocationUpdates ( LocationServices.FusedLocationApi , this , mLocationRequest , Manifest.permission.ACCESS_COARSE_LOCATION ) ; }
public static com.izik.recipebook.Model instance ( android.content.res.Resources res , android.content.Context context ) { if ( res instanceof com.izik.recipebook.Model.OnOperationListener ) { com.izik.recipebook.Model.OnOperationListener = ( ( com.izik.recipebook.Model.OnOperationListener ) ( context ) ) ; } else { throw new java.lang.RuntimeException ( ( ( context . toString () ) + " must implement OnFragmentInteraction" ) ) ; } com.izik.recipebook.Model.instance = context ; return new com.izik.recipebook.Model.Model ( context , context ) ; }
if ( ( items [ i ] ) == item ) { for ( int j = i + 1 ; j < numItems ; j ++ ) { items [ j ] = items [ ( j - 1 ) ] ; } ( numItems ) -- ; return true ; }
switch ( item . getItemId () ) { case R.id.m_add_sample : addSampleData () ; return true ; case R.id.m_add_book_inventory : android.content.Intent intent = new android.content.Intent ( this , divyhu.book_inventory.AddBookActivity . class ) ; startActivity ( intent ) ; return true ; case R.id.m_delete_data : deleteData () ; return true ; }
fillResult ( modelExtractions , verbose )
public void printGrid ( java.lang.String [] [] gridDis ) { for ( java.lang.String [] i : gridDis ) { for ( java.lang.String x : i ) { java.lang.System.out . print ( ( x + " " ) ) ; } java.lang.System.out . println ( "" ) ; } java.lang.System.out . println ( "Dis" ) ; }
try { this . validate () ; this . repaint () ; javax.swing.SwingUtilities . invokeLater ( new java.lang.Runnable () { @ java.lang.Override public void run () { setVisible ( true ) ; return returnValue ; } } ) ; } catch ( java.lang.Exception e ) { gui.ShadyMessageDialog ( "Error in showing!" ) ; e . printStackTrace () ; }
getDeck () . shuffle ()
{ clickModel . setTo ( controlTranslation . getClickOnMap () . getX () , controlTranslation . getClickOnMap () . getY () , de.bitboyecore.yalms. results.CLICK_HEIGHT , getHoverMap () . getHoverMap () . getX () , controlTranslation . getHoverMap () . getY () ) ; }
this . fields . size ()
if ( ( javaClass . isInner () ) || ( ( sovService . getIndex () ) == null ) ) { continue; }
{ if ( ( e . getPrices () ) == null ) return; this . prices = e . getPrices () ; this . swipeRefreshLayout . setRefreshing ( false ) ; }
@ javax.annotation.AfterClass public static void stopBenchmarkAfterClass () { try { main.com.valkryst.benchmark.cryst.McLSTBenchmarks.keyDict . clear () ; org.apache.commons.io.FileUtils . deleteDirectory ( new java.io.File ( "data/" ) ) ; org.apache.commons.io.FileUtils . deleteDirectory ( new java.io.File ( "data/" ) ) ; main.com.valkryst.benchmark.cryst.McLSTBenchmarks.levelDict . close () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } }
for ( int i = 0 ; i < ( sym.num ) ; i ++ ) { if ( ( ( sym.name . get ( i ) .Context ) != null ) && ( sym.name . get ( i ) . getText () . toString () . contains ( kw.showing . getText () ) ) ) { sym.showing . add ( sym.showing . getText () ) ; } }
{ if ( ( mPosition ) == 0 ) mPosition = ( jsData . length () ) - 1 ; else ( mPosition ) -- ; controller . setEndTime ( 0 ) ; player . stop () ; controller . hide () ; if ( controller . isShowing () ) controller . hide () ; }
{ com.softserve.tc.diary.entity.User user = userDAO . readUserByNickName ( nickName ) ; java.util.List < com.softserve.tc.diary.entity.Record > list = userDAO . getRecordByUserId ( user . getUuid () , new java.util.Comparator < com.softserve.tc.diary.entity.Record > () { @ java.lang.Override public int compare ( com.softserve.tc.diary.entity.Record o1 , com.softserve.tc.diary.entity.Record o2 ) { return - 1 ; } } ) ; return list ; }
{ alien4cloud.rest.model.RestResponse < ? > restResponse = alien4cloud.rest.utils.JsonUtil . read ( alien4cloud.it.Context . getInstance () . getRestResponse () , alien4cloud.it.Context . getJsonMapper () ) ; assertNotNull ( restResponse . getData () ) ; java.util.Map < java.lang.String , java.lang.Object > data = alien4cloud.rest.utils.JsonUtil . toMap ( restResponse . getData () ) ; assertTrue ( ( ( data . toString () ) > 0 ) ) ; }
new java.util.ArrayList <> ( pointList . size () )
{ db . close () ; return 1 ; }
new com.coremedia.isoso.IsoBufferWrapper ( pFileName )
{ com.google.common.base.Preconditions . checkNotNull ( nodeName , "Node name cannot be null." ) ; co.cask.cdap.internal.app.runtime.workflow.TokenValue tokenValue = tokenValueMap . get ( key ) ; if ( tokenValue == null ) { tokenValue = new co.cask.cdap.internal.app.runtime.workflow.TokenValue () ; tokenValueMap . put ( key , value ) ; } tokenValueMap . put ( key , tokenValue ) ; }
determineSize ( recordsInThisPass , 0 , false )
props .HasProperty ( PreviewProperty.BACKGROUND_COLOR , new java.awt.Color ( 255 , 255 , 0 , 255 ) )
public java.util.Map < de.uni_freiburg.informatik.ultimate.logic.TermVariable , de.uni_freiburg.informatik.ultimate.logic.Term > constructAuxVarMapping ( final java.util.Set < de.uni_freiburg.informatik.ultimate.logic.TermVariable > auxVars ) { final java.util.Map < de.uni_freiburg.informatik.ultimate.logic.TermVariable , de.uni_freiburg.informatik.ultimate.logic.Term > resultConst = new java.util.HashMap <> () ; for ( final de.uni_freiburg.informatik.ultimate.logic.TermVariable auxVar : auxVars ) { resultConst . put ( auxVar , auxVar ) ; } return resultConst ; }
i = 0
client . sendMessage ( channelTo , java.lang.String . format ( "%s/%s/%s: %s" , msg . getBotFrom () . getId () , msg . getChannelFrom () , msg . getNicknameFrom () , messageToken ) )
@ org.cba.rest.resources.PUT @ org.cba.rest.resources.Path ( value = "id/{editid}" ) @ org.cba.rest.resources.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response editCompany ( @ org.cba.rest.resources.PathParam ( value = "id" ) int id ) { try { org.cba.rest.entities.Company company = new org.cba.rest.entities.Company () ; company . fromJson ( content , com.google.gson.Gson . class ) ; if ( company != null ) { company . edit () ; } } catch ( org.cba.rest.exception.NotFoundException e ) { e . printStackTrace () ; throw new org.cba.exception.WebApplicationException ( Response.Status.NOT_FOUND ) ; } return company . fromJson ( new org.cba.rest.entities.CompanyNotFoundException () , org.cba.rest.entities.Company . class ) ; }
{ java.util.ArrayList < com.app.restfulapp.models.Member > result = new java.util.ArrayList <> () ; result . add ( new com.app.restfulapp.models.Member ( "HpA" , "pB" ) ) ; result . add ( new com.app.restfulapp.models.Member ( "HpA" , "c" ) ) ; result . add ( new com.app.restfulapp.models.Member ( "HpB" , "c" ) ) ; return result ; }
( java.lang.Math . round ( i ) ) < n
{ validateFilePath ( filename ) ; org.wso2.carbon.event.processor.core.internal.util.helper.EventExecutionPlanHelper executionPlanHelper = org.wso2.carbon.event.processor.core.internal.util.ExecutionPlanExecutionPlanHelper . parsePlan ( executionPlan ) ; java.lang.String parsedName = null ; try { org.wso2.carbon.api.query.ElementElement filename = new org.wso2.carbon.api.query.Element ( org.wso2.carbon.core.internal.util.ExecutionPlanHelper.ANNOTATION_NAME , org.wso2.carbon.core.internal.util.ExecutionPlanHelper.ANNOTATION_NAME , org.wso2.carbon.event.processor.core.internal.util.ExecutionPlanHelper.ANNOTATION_NAME , filename . getAnnotationAnnotations () ) ; parsedFilePath . save () ; } finally { executionPlanProcessor . deleteEvent ( new org.wso2.carbon.event.processor.core.event.ExecutionPlan () , null ) ; } }
{ android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder ( getActivity () ) ; android.view.LayoutInflater inflater = getActivity () . getLayoutInflater () ; android.view.View v = inflater . inflate ( R.layout.dialog_progress , null ) ; builder . setView ( v ) ; return v ; }
{ Gdx.gl . glClearColor ( 0.0F , 0.0F , 0.0F , 1.0F , 1.0F ) ; Gdx.gl . glClear ( GL20.GL20.COLOR_BUFFER_BIT ) ; background . update () ; game.batch . updateAndRender () ; game.batch . draw ( delta ) ; stage . end () ; }
private static java.lang.String decrypt ( java.lang.String value ) { try { return com.microsoft.aadal.CacheHelper.s . decrypt ( value ) ; } catch ( java.lang.Exception e ) { com.microsoft.aadal.Logger . e ( com.microsoft.aadal.CacheStore.TAG_ALCRY 512 , "" , e ) ; } if ( ! ( com.microsoft.aadal.CacheStore.s . isEmpty ( com.microsoft.aadal.CacheStore.TAG_FAILED ) ) ) { com.microsoft.aadal.Logger . error ( java.lang.String . format ( "Error: '%s'" , key , e ) ) ; } com.microsoft.aadal.CacheStore.s . removeBlank ( value ) ; return null ; }
{ while ( ( ( currentInner ) != ']' ) && ( ( currentInner ) != ']' ) ) { skipInner () ; if ( ( n == ',' ) && ( ( currentInner ) == ',' ) ) { break; } if ( n == 0 ) { skipInner () ; } n ++ ; } } return skipInner () ; }
public java.lang.String toString () { java.lang.String save = "[" ; while ( ( peekFirst () ) != null ) { save += pollFirst () ; if ( ( save ) != null ) { save += "," ; } save += "]" ; } return save ; }
( file2 )
updateFraction ( currentPlayer , otherPop )
{ org.orcidjaxb.model.message.OrcProfile existingOrcProfile = retrieveOrcProfile ( updatedOrcidProfile . getOrcIdentifier () . getPath () ) ; if ( existingOrcidProfile == null ) { return null ; } return org.orcidjaxb.io.JidProfileManager . copyExistingProfileWithBrcProfile ( existingOrcidProfile . getOrcidBrcid () , existingOrcidProfile . getOrcidBrcid () ) ; }
{ java.util.List < ru.javawebinar.topjava.model.UserMeal > userMeals = em . createNamedQuery ( User.GET_BY_ID , ru.javawebinar.topjava.model.UserMeal . class ) . setParameter ( 1 , userId ) . setParameter ( 2 , userMeals . getResultList () ) . get ( 0 ) ; if ( userMeals . isEmpty () ) { return null ; } else { return userMeals . get ( 0 ) . getId () ; } }
@ WebTests.BeforeTest public void setUpInternetDriver ( ) throws java.lang.InterruptedException { java.lang.String baseUrl = ( ( java.lang.String ) ( logger . baseUrl ) ) ; logger . info ( ( "[TEST]" + ( java.lang.System . valueOf ( operation.webdriver ) ) ) ) ; driver . setProperty ( "driver" , java.lang.String . valueOf ( driver . getProperty ( "base.in" ) ) ) ; driver . navigate () ; }
{ java.lang.Thread . sleep ( ( ( url ) * 60 ) ) ; }
@ java.lang.Override public void preinit () { super . preinit () ; net.minecraft.item.ItemBlock item = net.minecraftforge.fml.common.registry.GameRegistry . findItem ( "mod.registry" , "onclones" ) ; net.minecraft.client.resources.model.ModelResourceLocation itemModelResourceLocation = new net.minecraft.client.resources.model.ModelResourceLocation ( "resources" , "onclones" , "onclones" ) ; itemModelResourceLocation . getRenderModel () . register ( itemModelResourceLocation . getMines () , 0 ) ; }
{ registerService () ; evalThread . start () ; wifiReceiver . start () ; addToRestartbyQueue ( nearbyChecker ) ; addToPeers ( nearbyChecker ) ; synchronized ( blockedThread ) { blockedThread . run () ; } }
{ int length = java.lang.Integer . parseInt ( arg [ 0 ] ) ; int width = java.lang.Integer . parseInt ( arg [ 1 ] ) ; int width = java.lang.Integer . parseInt ( arg [ 1 ] , width , length ) ; java.lang.String output = java.lang.String . format ( "***: %d Rectangle: %d\nLength: %d\n" , length ) ; java.lang.System.out . println ( output ) ; myRectangle .rea ( myRectangle . getArea () , myRectangle . getPerimeter () , myArea.length , output ) ; }
{ mSectionsPagerAdapter . notifyDataSetChanged () ; mViewPager . setAdapter ( mSectionsPagerAdapter ) ; tabLayout . setupWithViewPager ( mViewPager ) ; mViewPager . setCurrentItem ( 0 , true ) ; prefEditor . putInt ( getString ( R.string.living_mode ) , selection [ 0 ] ) ; prefEditor . apply () ; dialog . hide () ; }
URLStrategy . excute ( pc , sampleRate , s )
if ( ( level == 800 ) || ( level == 700 ) ) { return org.openlogsys.remote.model.sys.SysLevel.INFO ; } else if ( level == 500 ) { return org.openlogsys.remote.model.sys.SysLevel.DEBUG ; } else if ( level < 900 ) { return org.openlogsys.remote.model.sys.SysLevel.ERROR ; } else if ( level == 500 ) { return org.openlogsys.remote.model.sys.SysLevel.WARN ; } else { return org.openlogsys.remote.model.sys.SysLevel.ERROR ; }
if ( activeDownloadsList [ mapID ] ) { com.noveogroup.android.log.Log . d ( "Duplicate download request for the type" ) ; return mapOption ; }
! ( ( ( ( record != null ) && ( ( this . retryLimit ) > 0 ) ) && ( record . contains ( this . retryLimit ) ) ) && ( ( this . retryNum ) <= ( this . retryLimit ) ) )
{ java.util.Set < org.monosparks.gematchers.parser.element.StringParser > baseElementParsers = new java.util.LinkedHashSet < org.monosparks.gematchers.parser.element.BaseElementParser > () ; baseElementParsers . add ( new org.monosparks.gematchers.parser.element.BaseElementParser () ) ; baseElementParsers . add ( new org.monosparks.gematchers.parser.element.BaseElementParser () ) ; baseElementParsers . add ( new org.monosparks.gematchers.parser.element.BaseElementParser () ) ; baseElementParsers . add ( new org.monosparks.gematchers.parser.element.BaseElementParser ( org.monosparks.gematchers.parser.element.BaseElementParser.BOOLEAN ) ) ; return baseElementParsers ; }
{ java.lang.Object [] array = toMultiNumberArray ( array , 2 ) ; for ( int i = 0 ; i < ( list . size () ) ; i ++ ) { application.Sources [] array = array [ i ] ; } return array ; }
{ cancelNotification ( idx , ( idx + 10 ) ) ; long delay = date . getTime () ; long delay = getTime () . getTime () ; sendNotification ( new java.util.Date () , prayId , delay ) ; }
mConnectedThread . write ( 1 , "2" )
if ( ( ( this . queue . isEmpty () ) && ( ( this . travelInfo ) == null ) ) && ( ! ( this . travelInfo . isEmpty () ) ) ) { this . travelInfo = common.util.ReservationNodeBehavior . processNodeBehavior ( this . travelInfo ) ; gui . notify notify ( null , this ) ; gui . enable () ; } else { queue . add ( travelInfo ) ; }
assertTrue ( ( ! ( net.sf.memoranda.util.AgendaGenerator . getAgenda ( cd , collection ) ) . equals ( getAgenda ( collection ) ) ) )
public static com.sb.elsinore.Temp findTemp ( final java.lang.String name ) { java.util.Iterator < com.sb.elsinore.Temp > iterator = com.sb.elsinore.LaunchControl.tempList . iterator () ; com.sb.elsinore.Temp tTemp ; while ( iterator . hasNext () ) { tTemp = iterator . next () ; if ( ( tTemp . getName () . equalsIgnoreCase ( name ) ) || ( tTemp . getTemp () . equalsIgnoreCase ( name ) ) ) { return tTemp ; } } return null ; }
{ final javax.persistence.criteria.CriteriaBuilder cb = em . getC againBuilder () ; final javax.persistence.criteria.CriteriaQuery < test.parent.simple.domain.ParentChildTable > testParent = cb . createQuery ( test.parent.simple.domain.ParentChildTable . class ) ; final javax.persistence.criteria.TypedTable < test.parent.simple.domain.ParentChildTable > root = em . createQuery ( test.parent.simple.domain.ParentChildTable . class ) . where ( "qq.data" ) . get ( t ) ; return root ; }
if ( Patterns.WEB_URL . matcher ( url ) . getSettings () . matches () ) { webView . getSettings () . setJavaScriptEnabled ( true ) ; webView . setWebViewClient ( new in.mobiledev.newsapp.ui.CustomNewsWebViewDetailActivity.CustomWebView ( this ) ) ; webView . loadUrl ( url ) ; } else { android.widget.Toast . makeText ( this , "Url to Home, not valid screen" , Toast.LENGTH_LONG ) . show () ; }
{ org.talend.dataquality.analysisAnalysis.Analysis analysis = getAnalysis () . getContextType () ; analysis . clear () ; org.talend.core.model.process.IEditorManager currentContextManager = context . getContextManager () . getDefaultEditorManager () ; analysis . save ( analysis ) ; context . setDefaultGroupName ( analysis . getDefaultGroupName () ) ; ( org.talend.dataquality.profiler.editor.ui.helpers.EditorHelper . getLastRunContextContext ( currentContextContextManager , analysis ) ) ; }
{ if ( e == null ) { com.example.user.ui.AllOrder . pinInBackground ( "user" , objects ) ; } else { com.example.user.ui.LocalOrder . getQueryInBackground () . fromDatastore ( callback , e ) ; } }
{ java.util.Random rand = new java.util.Random () ; vehicleTypePrivacyField . setValue ( rand . nextDouble () ) ; mPrivacyField . setValue ( rand . nextDouble () ) ; mPrivacyField . setValue ( rand . nextDouble () ) ; mPrivacyField . setValue ( rand . nextDouble () ) ; }
randomFloat - 0.5F
clientApi.canas . removeAllScans ( null )
{ android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_FINE_LOCATION ) ; if ( ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { requestLocation () ; } }
verify ( fakeMailSender . createMessageWithHTMLCode () , anyStringArgumentText () , message . capture () )
{ java.lang.StringBuilder result = new java.lang.StringBuilder ( "" ) ; for ( java.lang.Integer integerWoosen : indexes ) { result . append ( com.leifkoequator.myven.Combination.CardsOfCardsFromHand . getSetAllCards ( ( ( com.leilkoequator.myven.CombinationsRecycler . get ( ',' ) ) ) ) ) ; java.lang.System.out . println ( result . toString () ) ; result . append ( com.leilkoequator.myven.Combination.CardsOfCardsInHand . getSetAllCardsAt ( ( ( result . length () ) - 1 ) ) ) ; } return result . toString () ; }
{ synchronized ( this ) { if ( ( getStatus () ) != ( XTaskBean.STATUS_DOING ) ) return false ; if ( ! ( onEndSuccess () ) ) return false ; setStatus ( XTaskBean.STATUS_DONE ) ; } if ( ( mListener ) != null ) mListener . onComplete () ; return true ; }
{ if ( ( typed == null ) || ( ( typed . length () ) == 0 ) ) return null ; for ( java.lang.String keyword : typed ) { if ( ( keyword . startsWith ( keyword ) ) || ( ( keyword . length () ) == 0 ) ) return null ; } return typed ; }
affiliationArguments . replaceFirst ( "/" , "" ) . trim () . split ( "/" )
com.umeng.update.UmAgentUpdate . forceUpdate ( getActivity () , null )
rows . remove ( i )
public void pause () { br.edu.abc.abc.mobile.combatspace.game.GameView.okToRun = false ; sensorManager . unregister ( this ) ; while ( true ) { try { thread . join () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } break; } if ( br.edu.uf.mobile.combatspace.game.GameView.hasPlayer ) { mPlayer1 . pause () ; mPlayer2 = null ; } }
switch ( cache ) { caseps_PERMIT : site_PERMITES . clear () ; uniqueIdentifierDao . clear () ; uniqueIdentifierDao . clear () ; uk.gov.distributed.data.transaction.impl.RemoteCacheDelegate.LOGGER . error ( ( "Cleared cache: " + cache ) ) ; break; default: uk.gov.distributed.data.transaction.impl.RemoteCacheDelegate.LOGGER . error ( ( "Not implemented. " + cache ) ) ; }
for ( int i = index - side ; i >= ( sideArr . length () ) ; i ++ ) { retArr [ i ] = array [ ( j - sideArr ) ] ; }
new model.Position ( x , y )
component = componentRepository . findByEuropeanArticleNumber ( productData . getEuropeNumber () )
for ( int i = ( this . glasses . length ) - 1 ; i >= 0 ; i -- ) { if ( this . glasses . isActive () ) this . glasses [ i ] ; else this . score ++ ; break; }
serializationService . serializeDatatypeLibrary ( datatypeLibraryDocument )
{ java.util.Random rand = new java.util.Random () ; int randNum = rand . nextInt ( emptyTiles.length ) ; int rowTiles = emptyTiles [ randNum ] ; emptyTiles [ randNum ] [ column ] = emptyTiles [ row ] [ column ] ; }
{ java.lang.System.out . println ( "updating tree" ) ; if ( ( ( mouseX ) >= (arbon.IRD_THIR ) ) && ( ( mouseX ) < ( treeTree.IRD_THIR ) ) ) currentTree = treeTree ; else if ( ( ( mouseX ) >= ( treeTree.IRD_THIR ) ) && ( ( mouseX ) < ( treeTree.IRD_THIR ) ) ) currentTree = treeTree.IRD_THIR ; }
com.liferay.portal.service.LayoutLocalServiceUtil . getLayouts ( groupId , LayoutConstants.DEFAULT_PARENT_ID , false , 0 , 1 )
public void setupBoard () { for ( int xCol = 1 ; xCol <= ( length ) ; xCol ++ ) { for ( int yRow = 1 ; yRow <= ( length ) ; yRow ++ ) { java.util.Pair < java.lang.Integer , java.lang.Integer > pair = new java.util.Pair ( xCol , yCol ) ; for ( int xCol = 1 ; xCol < ( length ) ; xCol ++ ) { tile . add ( pair ) ; } } } this . sla . add ( new Tile ( tile ) ) ; }
new org.newdawn.slick.ApplicationContainer.GDAnator ( new && ( 800 != 0 ) , new org.newdawn.slick.AnatorContainer.GDAnator () , 480ator , 800 , 360 , 600 )
com.wpi.cs509.teamA.util.PaintHelper . paintNodeStart ( g2 , path )
{ cassandraTimestampStore . storeBound ( currentLimit , limitLimit ) ; limitLimit = 0 ; }
public static void main ( java.lang.String [] args ) throws java.lang.Exception { util.ConfigManager . loadFiles () ; main.FAMFiles . files2DFFiles () . read ( files ) ; try { util.RDFFiles . files2DFFiles () . getFilePath () ; util.RDFConfigManager . generateDiveuctalDB ( files ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } main.DiveuctedDB = new main.DiveuctedDB () ; }
setBounds ( profile . getInt ( org.micromanager.internal.utils.MMFrame . class , ( prefPrefix + ( org.micromanager.internal.utils.MMFrame.X_WINDOW ) ) , ( - ( org.micromanager.internal.utils.MMFrame . class . getInt ( org.micromanager.internal.utils.MMFrame.X_WINDOW ) ) ) , ( - ( org.micromanager.internal.utils.MMFrame . getWidth () ) ) , prefPrefix , profile . getHeight () )
{ java.sql.PreparedStatement pstmt = conn . prepareStatement ( sql ) ; java.sql.ResultSet rs = pstmt . executeQuery () ; if ( rs . next () ) { result = true ; } }
{ com.thoughtworks.xstream.XstreamStream xs = new com.thoughtworks.xstream.XstreamStream () . processAnnotations ( x_stream.class.x22 . class ) ; java.lang.System.out . println ( "File:" ) ; java.lang.System.out . println ( new java.io.File ( "stream.xml" ) ) ; new java.io.File ( "stream.classnel" ) . toNumberOf ( java.util.Arrays . asList ( new java.io.File ( "stream_2.classnel" , 500 ) , new java.io.File ( "stream_2.classnel" , 1000 ) , new java.io.File ( "stream_2.classnel" ) ) ) ; }
{ list . add ( i , fte ) ; i ++ ; }
@ java.lang.Override public void run () { final magic.ai.MMAB.ABMMWorker worker = new magic.ai.MMAB.ABMMWorker ( java.lang.Thread . currentThread () , worker . getId () , score , score , getBoard () , aRef.choiceRef ) ; worker . slice () . update ( slice () ) ; }
{ twosnakes.Vector headPos = new twosnakes.Vector ( 100 , 100 ) ; twosnakes.Vector facing = new twosnakes.Vector ( 1 , 0 , 50 , ( - 1 ) ) ; twosnakes.Vector1snake = new twosnakes.Pake ( headPos , null , facing , null ) ; state = new twosnakes.Snake ( null , null , null , null ) ; }
result . append ( "; " )
com.example.tharome.newexeworld.PageFragment . newInstance ( 1 , "2" )
{ if ( choice < 1 ) { return null ; } switch ( choice ) { case 1 : intentMap.SafeMapCreator creatorMap = new creator.SafeMapCreator () ; return map.Players . createSafeSize ( creatorMap , numOfPlayersSize ) ; case 2 : return creatorMap.HazardousMapCreator = new creator.HazardousMapCreator () ; break; } return map.Players . createMap ( creatorMap , numOfPlayersSize ) ; }
{ for ( java.lang.String eachWord : inputArray ) { if ( eachWord != null ) { remainingText += eachWord ; } parser.EventParser.WHITESPACE_SYMBOL = parser.EventParser.WHITESPACE_SYMBOL ; } }
{ preyConfig . setLock ( true ) ; preyConfig . setUnlockPass ( get ( "unlock_pass" ) . getConfig () ) ; }
service . readMessages ( userId )
public static java.lang.String createNewExecutionId () { java.lang.String executionId = null ; try { org.safehaus.uuid.UUIDGenerator uuidGen = org.safehaus.uuid.UUIDGenerator . getInstance () . generateUUID () ; org.safehaus.uuid.UUIDBasedUUID uuid = null ; executionId = uuidGen . toString () . replaceAll ( "-" , "" ) ; executionId = uuid . replaceAll ( "-" ) ; } catch ( java.lang.Throwable t ) {} return executionId ; }
{ java.lang.String methodName = "insertPersonDetails" ; webPersonDetailsService = new com.app.biid.network.WebService ( mContext ) ; com.app.biid.model.OutputData object = null ; for ( int i = 0 ; i < ( nomineListe . size () ) ; i ++ ) { object = nomineListe . get ( i ) ; } insertPersonDetails ( methodName , object ) ; return object ; }
isDro ( destinationPath , selectedTreePath )
private void addRecord ( java.lang.String newkey , java.lang.String key ) { org.kisst.pko4j.index.MultiIndex.logger . info ( "adding unique key {} " , newkey ) ; org.kisst.item4j.ImmutableSequence < T > oldList = map . get ( newkey ) ; if ( oldList == null ) map . put ( newkey , org.kisst.item4j.ImmutableSequence . of ( getRecordClass () , oldList ) ) ; else if ( ! ( oldList . contains ( newkey ) ) ) { org.kisst.item4j.ImmutableSequence < T > oldList = map . growTail ( oldList ) ; map . put ( newkey , newList ) ; } }
{ android.view.View view = manager . findViewByPosition ( pos ) ; if ( view == null ) return; android.widget.TextView title = ( ( android.widget.TextView ) ( view . findViewById ( R.id.aa_title ) ) ) ; android.widget.TextView subtitle = ( ( android.widget.TextView ) ( view . findViewById ( R.id.subtitle ) ) ) ; title . setTextColor ( Color.WHITE ) ; subtitle . setTextColor ( android.support.v4.content.ContextCompat . getColor ( getContext () , android.support.v4.content.ContextCompat . getContext () ) ) ; }
{ framework.common.GalleryCommon . deleteMoreGallery () ; framework.common.GalleryCommon . clickGallery () ; check ( testcase.Object_Description , testcase.Operation_WaitForExists , "更多选项" , "10000" ) ; excute ( testcase.Object_Description , testcase.Operation_ClickWait , "更多选项" ) ; check ( testcase.Object_Text , testcase.Operation_ClickWait , "删除" ) ; }
{ int index = 0 ; for ( int i = 1 ; i < ( dayItineraryBySize - 1 ) ; i ++ ) { final int index = getContext () . getAssignarySize () ; final int indexToAssigniner = index - 1 ; mBtn . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { addNewToItinerary ( uz.samsam.app.helpers.ItemHelper . getFragmentManager () , index , ( index - 1 ) ) ; } } ) ; } }
if ( b ) { assert ( state ) == ( pixelitor.layers.ImageLayer.State.PREVIEW ) ; setState ( pixelitor.layers.ImageLayer.State.ORIGINAL_SHOW ) ; } else if ( ( state ) == ( pixelitor.layers.ImageLayer.State.PREVIEW ) ) { setState ( pixelitor.layers.ImageLayer.State.ORIGINAL_VIEW ) ; }
{ lblLoading . setVisible ( true ) ; ( ( org.magic.api.beans.Magic ) ( ed ) ) . mod ( getSelectedItem () ) ; initTableData ( ed ) ; table . setRowSorter ( new javax.swing.table.TableRowSorter () ) ; lblLoading . setVisible ( false ) ; save ( ed ) ; }
at.favre.tools.apksigner.SignToolTest . testAndCheck ( cmd , originalFolder , outFolder , uApks )
{ if ( ( namingContext ) != null ) { return; } namingContext = new javax.naming.InitialContext () ; javax.jms.ConnectionFactory tcf = ( ( javax.jms.ConnectionFactory ) ( namingContext . getConnectionFactory () ) ) ; org.hpawk.common.bus.ConnectionSender cc = new org.hpawk.common.bus.ConnectionProducer ( tawkh.common.bus.ConnectionFactory . getInventorySender ( this ) , new org.hpawk.common.bus.Producer ( cc ) ) ; tawkContext = new org.hpawk.common.bus.KawkConnectionSender ( cc ) ; }
java.lang.System . arraycopy ( this . array , 0 , result , 0 , result.length )
nextRunTimeCalculator . calculateNextRuntime ( new java.util.ArrayList < model.Player > () )
( java.lang.Double . valueOf ( longitude ) )
{ int attr = a . getIndex ( i ) ; switch ( attr ) { case R.styleable.Button_jr_color : mColor = a . getColor ( 0 , 0 ) ; break; } attr = a . colorify () ; break; }
at.nf.timeDAS.UTC . get ( ( ( java.util.Date () ) / 1000000 ) )
@ java.lang.Override public void grabClosing () { synchronized ( this ) { if ( this . isClosing () ) { return; } if ( captureIplted . available () ) { org.bypleco.javacpp.opencv.core.IpltedImage img = captureIplted . getIpltedImage () ; if ( img != null ) { img . updateCurrentImage () ; } else { waitForNextImage () ; } } } }
{ super . onSaveInstanceState ( outState ) ; android.util.Log . v ( com.gcw.sapienza.places.MainActivity.TAG , "SaveInstanceState called!" ) ; outState . putByteArray ( getShareudioFragment () . getShareudioByteArray () , this . getShareudioFragment () . getShareByteArray () ) ; outState . putByteArray ( "pic" , this . getPideoFragment () . getShareByteArray () ) ; }
{ DataModel = Model.Sync . getInstance () ; FencerColumn . setCellValueFactory ( new javafx.scene.control.cell.PropertyValueFactory <> ( "full" ) ) ; FchoolColumn . setCellValueFactory ( new javafx.scene.control.cell.PropertyValueFactory <> ( "fchool" ) ) ; setCellValueFactory ( new javafx.scene.control.cell.PropertyValueFactory <> ( "day" ) ) ; setCellFactory ( new javafx.scene.control.cell.PropertyValueFactory <> ( "name" ) ) ; }
{ java.lang.String curTransform = "transform" + x ; java.lang.String newField = getCurrNewTransform ( newField , curTransform ) ; if ( newField . equals ( "" ) ) {} else if ( newField . equals ( "" ) ) { checkHeader ( newField , newField ) ; } }
public void onRequest ( java.lang.String ipAddress , java.sql.Timestamp time ) { synchronized ( this ) { ( request ) ++ ; com.hula.domain.Request request = new com.hula.domain.Request ( ipAddress , time , 1 ) ; if ( ! ( requests . contains ( request ) ) ) { requests . add ( request ) ; } else { com.hula.domain.Request r = requests . get ( ( ( requests . indexOf ( r ) ) + 1 ) ) ; r . setDateCount ( ( ( requests . indexOf ( r ) ) + 1 ) ) ; requests . remove ( r ) ; } } }
solverInput_beHerk ( 0 , 0 , 0 )
public final java.lang.String start ( ) throws java.lang.Exception { javax.servlet.http.HttpServletRequest request = com.opensymony.webwork.ActionContext . getRequest () ; javax.servlet.http.HttpSession session = request . getSession () ; chatBox = chatBox . getOpenChats () ; session . setOnStatus ( ChatManager.NO_CHANGE ) ; return SUCCESS ; }
{ io.spectoge.reapp.junit5.CustomHover.CaptureTest.flyflyInstance = org.assertj.core.api.Assertions . assertThat ( Hoverfly.flyMode . getMode () ) . isEqualTo ( org.assertj.core.api.Assertions . assertThat ( HoverflyInfo . getDestination () ) ) ; org.assertj.core.api.Assertions . assertThat ( HoverflyInfo . getDestination () ) . isEqualTo ( "*" ) ; org.assertj.core.api.Assertions . assertThat ( org.flyio.core.api.Assertions . between ( "*" ) ) . isEqualTo ( "*" ) ; }
public void setFilename ( java.lang.String filename ) { if ( filename . endsWith ( ( ( java.io.File.separator ) + "DB" ) ) ) connField . setText ( filename . substring ( 0 , ( ( filename . length () ) - 3 ) ) ) ; else connField . setText ( filename ) ; }
{ for ( int i = 0 ; i < ( size () ) ; i ++ ) { if ( ( ( java.lang.Math . abs ( key ) ) % ( getBites ( hash ) ) ) == 0 ) { return false ; } } return true ; }
java.lang.Double value = dataSnapshot . getValue () ;
session . execute ( ( ( ( ( ( ( ( ( ( ( ( ( ( "CREATE TABLE IF NOT EXISTS " + ( "id, name_id, name_text_ ) ) + " (cassandra_filter_id = 0.01 AND name_id = 0 " ) + " AND 'per\", " ) + " AND 'rows = " ) + " AND 'interval\", " ) + " AND 'index = \';\';" ) + " AND 'index = 0 " ) + " AND 'code = " ) + " AND 'index = " ) + " AND 'gread_id = 0.0; " ) + " AND 'properties = " ) + " }
if ( ( de.citec.sc.templates.TopicSpecificPageTemplate.isInitialized ) && ( ( page . getId () ) != null ) ) { final java.util.Set < java.lang.Integer >UserSpecificies = de.citec.sc.templates.TopicSpecificPageTemplate.log . info ( "Load specific page..." ) ; de.citec.sc.templates.TopicSpecificPageTemplate.log . info ( "Specific specific page..." ) ; page . loadTopic ( rank ) ; de.citec.sc.templates.TopicSpecificPageTemplate.log . info ( "Done specific page, index loading mapping..." ) ; de.citec.sc.templates.TopicSpecificPageTemplate.log . info ( "Done specific page..." ) ; de.citec.sc.templates.TopicSpecificPageTemplate.log . info ( "Done specific page" ) ; }
{ if ( color == ( chosenColor.Color.finalColor ) ) { gui.GameGUI.finalScore = ( gui.GameGUI.finalScore ) + 100 ; setWord () ; gui.GameGUI.count = ( gui.GameGUI.count ) + 1 ; } else if ( color == ( chosenColor.Color.finalColor ) ) { gui.GameGUI.finalScore = 0 ; setWord () ; } endGame () ; }
isDnsEnabled ( true )
{ java.lang.System.out . println ( ( ( "------------------------" + ( new java.util.Date () . getTime () ) ) + "" ) ) ; java.lang.String creator = httpSession . getAttribute ( "personName" ) ; com.bit.beoulink.domain.CartOrder workCartOrder = workCartService . addWorkCartOrder ( reporter , workCartId , locationDesc , 60 ) ; return "addOrder" ; }
{ setChorus ( false ) ; setStatus ( "Chorus " ) ; startIteration ( ( ( int ) ( improiseSlot ) ) , originalSlot , improiseSlot ) ; }
public java.util.List < com.Jic.invo.controller.vo.InvoiceVO > getAllInvoiceListById ( java.util.List < java.lang.Integer > idExampleDbList ) { java.util.List < com.Jic.model.InvoiceObject > invoiceExampleDbList = new java.util.ArrayList < com.Jic.model.InvoiceObject > () ; invoiceExampleDbList . andDelete ( GeneralDbUtils . convertToIndEqualTo ( idExampleDbList . and () ) ) ; invoiceExampleDbList . setOrderBy ( GeneralDbUtils . convertToIndEqualToByClause ( "dateExample" ) ) ; return invoiceExampleDbList ; }
if ( step != null ) { wait . show ( baseAlbumActivity . unprocessed ( this ) ) ; baseAlbums = new java.util.ArrayList < com.albums.model.Album > () ; }
displayNotification ( songs )
properties . stringPropertyNames () . forEach ( key )
{ android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; android.content.ContentValues data = new android.content.ContentValues () ; data . put ( "name" , contact . getName () ) ; data . put ( "address" , contact . getAddress () ) ; data . put ( "phone" , contact . getPhone () ) ; data . put ( "rating" , contact . getRating () ) ; db . insert ( "list" , null , data ) ; }
@ java.lang.Override public void mouseWheelMoved ( java.awt.event.MouseWheelEvent e ) { int ctrlModWheel = ( ( java.awt.event.MouseWheelEvent.CTRL_MASK_DOWN ) | ( java.awt.event.MouseWheelEvent.CTRL_MASK_DOWN ) ) | ( modifier ) ; int e = ctrlModWheel & ( modifier ) ; if ( e != 0 ) { this . signDown () ; return; } this . signDown () ; }
{ NodeyNode = new Node () ; sNode = head . getNext () ; if ( == null ) { java.lang.System.out . println ( "Out of memory." ) ; return false ; } else { newData . setNextNode ( head ) ; head . setNextNode ( head . getNextNode () ) ; head . setNextNode ( head ) ; } return true ; }
{ uk.ac.rdg.resc.edal.catalog.jaxb.VariableueVariable.Variable xmlVariable = getXmlVariableName ( layerName ) ; if ( xmlVariable != null ) { return xmlVariable . isDisabled () ; } else { uk.ac.rdg.resc.edal.cwms.config.NedalService dynamicService = dynamicLayerFromService ( layerName ) ; if ( dynamicService != null ) { return dynamicService . isLayerDisabled () ; } } return true ; }
getActivity ()
{ android.util.Log . d ( LOG_TAG , "Uploading web server." ) ; org.json.JSONObject json = new org.json.JSONObject () ; json . put ( "NAME" , mediaFile . getMediaName () ) ; byte [] picture = jFile . getDataArr () ; java.lang.String encodedData = mediaFile . encodeToString ( picture ) ; org.json.JSONArray json = new org.json.JSONArray () ; json . put ( "DEFAULT" , picture ) ; json . execute ( Base64.DEFAULT_DATA ) ; }
<EMPTY>
provider = new java.util.ArrayList <> ()
public void loadAlbums ( android.content.Context context , boolean hidden ) { this . hidden = hidden ; java.util.ArrayList < org.fossasia.imp.leafme.data.picleaf.Album > list = new java.util.ArrayList < org.fossasia.imp.leafme.data.picleaf.Album > () ; if ( context . getBoolean ( context . getString ( R.string.preference_recuse_alternative_provider ) , false ) ) { list . addAll ( list ) ; } else { org.fossasia.imp.leafme.data.picleaf.AlbumsProvider pProvider = new org.fossasia.imp.leafme.data.picleaf.AlbumsProvider ( context , context ) ; pProvider.providers = context . getAlbums ( hidden , context ) ; list . addAll ( pProvider ) ; } }
{ playlist . append ( ( ( i + "/ " ) + ( getConfiguration () . getProperty ( "playlist.entryname." ) ) ) ) ; i ++ ; }
{ org.lemurproject.galago.core.parse.Document nerDoc = new org.lemurproject.galago.core.parse.Document () ; nerDoc.text = doNER ( doc.text ) ; nerDoc.metadata = doc.metadata ; nerDoc.name = doc.name ; ciir.parse.NamedEntityRecorder doc = new ciir.parse.NamedEntityRecorder ( outputPath ) ; doc . record ( doc ) ; }
{ com.xplosnet.explolos.chemives.net_items.items.ItemContainer cpw = com.xplosnet.explolos.chemives.net_items.items.ItemContainer . getUnlocalized ( item ) ; if ( ( com.xplosnet.explolos.chemives.net_items.items.ItemContainer . getUnlocalizedName ( item ) ) != 0 ) com.xplosnet.explolos.chemives.net_items.items.ItemRegistry . register ( cpw , item . getUnlocalizedName () ) ; com.xplosnet.explolos.chemives.net_items.items.ItemRegistry . register ( cpw , item . getUnlocalizedName () ) ; }
getY ()
{ assert ( root.children ) == null ; }
{ model.Cell previousCellValue = get ( key ) ; if ( value instanceof model.Cell.ActiveCells ) { activeCells . put ( key , ( ( model.Cell.ActiveCells ) ( value ) ) ) ; } else { previousCells . put ( key , value ) ; } return previousCellValue ; }
this . addRemoveType ( false )
{ boolean in = false ; inLeft = false ; areaX = pos.x ; areaY = pos.x ; areaRight = in ; pos.y = pos.y ; return inAreaDown ( ( ( areaX - 1 ) < areaX ) , pos.y ) ; }
{ for ( int i = 0 ; i < ( pokedex . size () ) ; i ++ ) { PokemonSpecedies pookedex = pokedex . get ( i ) ; if ( pookedex . getSpecies () . isEmpty () ) { return poName ; } else { throw new PokemonSpecedException ( Config.UNEMON_POK ) ; } } return Pokedex.EMON_UNCAEMON ; }
( ( ( ( double ) ( timeIndex ) ) / ( ( getProp ( de.htw.polberlin.plugins.pol4ys.Simulator.CALL_INTERVAL_KEY ) ) - 1 ) ) + ( ( ( double ) ( java.lang.Math . ceil ( timeIndex ) ) ) / ( ( getSimulator () . getInt ( de.htw.polberlin.plugins.pol4ys.Simulator.CALL_INTERVAL_KEY ) ) - 1 ) )
sut . dropTable ( metadata , java.util.Optional . < java.lang.String > empty () )
set . setWeight ( ( ( java.lang.Float . parseFloat ( s . toString () ) ) + 1 ) )
public static java.lang.String fetchWebpageData ( java.lang.String requestUrl , java.lang.String requestUrl ) { java.net.URL url = com.example.android.hash.QueryUtils . createUrl ( requestUrl , context ) ; java.lang.String response = null ; try { response = com.example.android.hash.QueryUtils . makeHttpRequest ( url , context ) ; } catch ( java.io.IOException e ) { response = "Problem making the HTTP." ; } return response ; }
{ mCardNumberView . setText ( getFormattedCardNumberToCard () ) ; addNumberToCard () ; }
{ javafx.stage.FileChooser fileChooser = new javafx.stage.FileChooser () ; fileChooser . setTitle ( "Open Media File" ) ; java.io.File file = fileChooser . showOpenDialog ( this . getScene () . getWindow () ) ; file . setUserData ( tbxenBrowser . getAbsolutePath () ) ; file . setText ( tbxenBrowser . getAbsolutePath () ) ; }
{ getMenuInflater () . inflate ( R.menu.menu , menu ) ; android.support.v7.widget.SearchView searchView = ( ( android.support.v4.widget.SearchView ) ( android.support.v4.view.MenuItemCompat . getActionView ( menu . findItem ( R.id.action_search ) ) ) ) ; searchView . setQueryHint ( getResources () . getString ( R.string.search_hint ) ) ; searchView . setSearchInfo ( getComponentName () ) ; return true ; }
! ( ( ( ( top == null ) && ( ( bottom ) == null ) ) && ( ( left ) == null ) ) || ( ( ( bottom ) == null ) && ( ( left ) == null ) ) )
if ( ( ( Build.VERSION.SDK_INT ) >= 23 ) && ( ( android.support.v4.content.ContextCompat . checkSelfPermission ( getApplicationContext () , android.Manifest.permission.ACCESS_FINE_LOCATION ) ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { LocationServices.FusedLocationApi . requestLocationUpdates ( mGoogleApiClient , mLocationRequest , this ) ; }
copyAction ( db , a , getId () , newActionId , sortNr , com.ha81dnus.weberusleser.backend.DatabaseHandler . getUniqueName ( activity ) , input . getText () . toString () . trim () , true , com.ha81dnus.weberusleser.MainActivity.sourceId , id )
{ java.util.ArrayList < object.Todo > expectedList = new java.util.ArrayList < object.Todo > () ; expectedList . add ( todo.List3 ) ; expectedList . add ( todo.List3 ) ; java.util.ArrayList < object.Todo > actualList = storagetest.FileHandler.fhDateByTodoTest . retrieveTodoByDate ( "20 oct 2000" ) ; org.junit.Assert . assertEquals ( "Test retrieval of todo by date" , true , compareTodoArrayList ( expectedList , actualList ) ) ; }
( this . getDate () )
{ if ( ! ( activeEvent () ) ) return; consumeEvent () ; if ( ( state.del ) == ( it.oprisu.su.user.SelectOverlay.UserState.CREATE_USER ) ) return; int diff = old_y ; if ( diff != 0 ) diff = ( old_y ) - dragged ; }
{ Translator ( ( ( Translator ) ( t ) ) ) ; return ( ( Translator ) ( t ) ) < 1 ? - 1 : ( ( Translator ) ( t ) ) ; }
{ java.util.List < dati extends datazspio.Corazpo.Celeste > corpi = corpi . getListCorazbitSelantOrCorazbit () ; for ( dati = dati . getNilesteCilome () ; java.lang.System.out . println ( ( "\n" + ( corpi . getNome () ) ) ) ) { java.lang.String tab = corpi . getSelectionModel () . getSelectedItem () ; corpi . launchCorazlaController ( tab ) ; } }
com.nx.util3.jme3.base.SpatialUtil . hasControl ( skeleton , originalDebugger , skeleton )
@ java.lang.Override public void kill () { if ( ( key ) != ( - 1 ) ) { java.util.ArrayList < com.wataboueldungeon.pixeldungeon.effects.SystemFloatingText > stack = com.wataboueldungeon.pixeldungeon.effects.SystemFloatingTexts . get ( key ) ; stack.stacks . remove ( stack ) ; if ( com.wataboueldungeon.pixeldungeon.effects.SystemFloatingTexts . isEmpty () ) { com.wataboueldungeon.pixeldungeon.effects.SystemFloatingTexts . remove ( key ) ; } else { super . kill () ; } } }
{ if ( isEmpty () ) return null ; T x = queueArray [ front ] ; queueArray [ front ] = null ; ++ ( n ) ; if ( ( front ) == 0 ) return front ; return poll () ; }
position.x = 1000
httpClient . pathToUri ( "billogram" , billogram )
{ bufmgr.PageId id = new bufmgr.PageId () ; if ( isFull () ) return null ; try { Minibase.DiskManager . allocate_page ( id , howmany ) ; } catch ( java.lang.Exception e ) { throw new bufmgr.DiskException ( ( ( "Unable to allocate pages." + id ) + " first." ) , e ) ; } return bufmgr.PageId.many ; }
consumer . getUuid ()
{ sign = 1 ; break; }
{ cn.com.hellowood.rocketmq.util.ProducerHelper.logger . info ( "MQ start sendLibrary: " ) ; long startTimestamp = java.lang.System . currentTimeMillis () ; message . setTopic ( java.lang.String . valueOf ( config . getTopicProperties () . send ( costTime ) ) ) ; long costTime = ( java.lang.System . currentTimeMillis () ) - startTimestamp ; cn.com.hellowood.rocketmq.util.ProducerHelper.logger . info ( ( ( "MQ completed send send send producer " + costTime ) + " ms" ) ) ; return null ; }
@ java.lang.Override protected void listItemClicked ( int position ) { if ( ( adapter . getItem ( ( position - 1 ) ) ) != null ) { android.content.Intent intent = new android.content.Intent ( getActivity () , edu.mit.mitshutles2.tutles.activities.StopShutlesActivity . class ) ; intent . putExtra ( Constants.KEY_ID_ROUTE_ID , Constants.KEY_STOPID ) ; intent . putExtra ( Constants.KEY_ID_KEY , Constants.KEY_STOPID ) ; startActivity ( intent ) ; } }
{ mMarkerId = LocationUtil.mMarkers . get ( marker ) ; if ( ( mMarkerId ) != null ) { android.util.Log . i ( " arraylist" , ( ( ( mMarkerId ) + "" ) + ( mMarkerId ) ) ) ; android.widget.Toast . makeText ( this , "MarkerID" , Toast.LENGTH_SHORT ) . show () ; } }
private void addText ( java.awt.Graphics2D g2d , java.lang.String text , int x , int y , java.awt.Color color ) { g2d . setFont ( new java.awt.Font ( "A" , java.awt.Font.BOLD , 20 ) ) ; g2d . setColor ( color ) ; g2d . drawString ( text , 20 ) ; }
{ java.lang.String removeCommaed = originalDapes . replaceAll ( "\\\\\\\\\"" , "\"" ) ; try { return org.apache.commons.lang3.StringUtils . removeComma ( removeCommaed ) ; } catch ( java.lang.Exception ex ) { ex . printStackTrace () ; } return null ; }
org.embulk.kafka.data.DataConverter . convertFromLsv ( message , null )
{ this . simpleArray . delete ( i , simple . get ( i ) ) ; break; }
@ auth.AuthenticationEndpoint.Secured ( value = config.Permission.USER_READ ) @ modulePath ( value = javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON_MODULE ) @ module.PathParam ( value = dto.UserConnector.USER_MODULE ) public java.lang.Integer getFullUser ( @ javax.ws.rs.PathParam ( value = "error" ) int id ) { try { dao.UserDAO db = new dao.UserDAO ( config.UserDAO . getFullUser () ) ; java.lang.System.out . println ( ( "User: " + ( e . getMessage () ) ) ) ; user = dao.UserDAO . create ( null ) ; jdbcUser = new dao.User ( id ) ; } catch ( java.net.URIException e ) { java.lang.System.out . println ( "Error: routes/error" ) ; } return jdbcUser ; }
if ( resizingConfig . isKeepProportions () ) { resizedImage = org.rgsim.calr.ScalImage . resizeMethod ( original . getWidth () , resizingConfig . getHeight () , resizingConfig . getWidth () , resizingConfig . getHeight () , resizingConfig . getWidth () , resizingConfig . getHeight () ) ; } else { resizedImage = org.rgsim.calr.ScalImage . resizeMethod ( original . getWidth () , resizingConfig . getHeight () , resizingConfig . getWidth () , resizingConfig . getHeight () ) ; }
if ( bugTrackers [ i ] . equals ( "github" ) ) { this . raiseIssue ( bugTrackers [ i ] ) ; } else if ( bugTrackers [ i ] . equals ( "bugzilla" ) ) {} else if ( bugTrackers [ i ] . equals ( "jira" ) ) {} else if ( bugTrackers [ i ] . equals ( "at" ) ) {}
settings . getBoolean ( "isToSum" , true )
new android.widget.FrameLayout ( mContext )
{ if ( ( _lap ) == null ) { outState . putCharSequence ( sictactoe.appshot.game.tictactoe.GameBoard.GAME_BOARD_PLAYER_NAME , _lap ) ; } outState . putCharSequence ( sictactoe.appshot.game.tictactoeGameBoard.PLAYER_NAME , _lap . GetOneCharSequence () ) ; outState . putCharSequence ( sictactoe.appshot.game.tictactoeGamePlayer.PLAYER_ICON_PLAYER_NAME , _lap . GetTwoSymbolValue () ) ; outState . putCharSequence ( sictactoe.appshot.game.tictactoeGamePlayer.PLAYER_ICON_PLAYER_NAME , _lap . GetTwoSymbolValue () ) ; outState . putCharSequence ( sictactoe.appshot.game.tictactoeGameBoard.GAME_ICON_PLAYER_KEY , _lap . GetTwoSymbolValue () ) ; }
{ java.util.HashMap < java.lang.String , java.lang.String > errorProperties = new java.util.HashMap <> () ; errorProperties . put ( org.wordpress.android.ui.accounts.login.MagicLinkFragment.ERROR_KEY_ERROR , error . getMessage () ) ; getViewTracker () . makeSnackbar ( mListener , errorProperties , Snackbar.LENGTH_SHORT ) ; }
{ res = scanner . nextLine () ; }
this . getClass () . clear ()
return - ( java.lang.Long . valueOf ( x1.broker.Session . getTimestamp () . compareTo ( java.lang.Long . valueOf ( x2.broker.Session . getTimestamp () ) ) ) ) ;
new org.openqa.selenium.remote.RemoteWebDriver ( com.epamj.itdiuests.web.driver.SuceLabRunner . getSuceUrl () , null )
{ while ( ( max ) == ( - 1 ) ) { max = 0 ; } Key [ 0 ] [ ( N - 1 ) ] = pq [ N ] ; N [ ( N - 1 ) ] = null ; sinkUtils . resize ( utils.Utils . maxArray () , ( N - 1 ) ) ; ( N ) -- ; return pq ; }
"_id=" + id
if ( ( position . getAttributes () . containsKey ( Event.KEY_ALARM_ALARM ) ) && ( position . getAttributes () . get ( Event.KEY_ALARM84 ) ) ) { return "01" ; } else if ( ( position . getAttributes () ) < 1.00 ) { return "0011C" ; } else { return "0011C" ; }
for ( E e = pq . poll () ; e != null ; e = e . poll () ; e . add ( e ) ) { if ( checkForCycle ( e , e . getSource () , e . getDest () ) ) { set . remove ( e . getSource () ) ; } }
if ( player == 1 ) { chess.gameotion = new chess.gameotionen.Promoted ( "BlackPawnen Blackotion" ) ; currentImgQueen . setIcon ( Blackotion ) ; removePiece ( currentPieceQueen ) ; } else { chess.gameotion . setPiece ( new chess.gameotionen.WhiteQue ( "Pawnenoted" ) ) ; currentImgQueen . setIcon ( chessQueen ) ; }
{ wasAim = true ; if ( ( armions ) != null ) { wasAim -= BACK_gtionsLen -= BACK_FIRE ; } if ( ( armions . size () ) > 0 ) { explostAt . add ( new float [] { 0.0A , 0.0A , se.teruior.AimBase.WeaponAullet.MOKE_LENGTH } ) ; } rayapons . add ( new float [] { ( - 2 ) , gunior.AimBase.WeiorBullet.MOKE_LENGTH } ) ; rayStartAt . add ( new float [] { 0 , 0 , 0 , gunior.AimBase.WeiorBullet.MOKE_LENGTH } ) ; }
{ com.drmattygokarao.nankearao.TrackEvent evt = com.drmattygokarao.nankearao.TrackEvent . getInstance ( tc , iteratorOffset ) ; if ( evt . hasStatus () ) { setLastByteStatus ( ( ( evt . getStatus () ) & 255 ) ) ; } else { evt . setStatus ( ( ( evt . getTotalByteStatus () ) & 255 ) ) ; for ( com.drmattygokarao.nankearao.TrackEvent evt : evt . getParentMidiHandlers () ) { midLength += evt . getTotalByteLength () ; } } return evt ; }
builder . setCancelable ( false )
switch ( situation ) { case 1 : if ( findUpper ( 0 ) ) return 2 ; else if ( findUpper ( 1 ) ) return 3 ; else if ( findUpper ( 2 ) ) return 2 ; else return 1 ; case 2 : return 3 ; default: return 1 ; }
imageFileName = ( ( com.bionic.kvt.serviceapp.GlobalConstants.LMRA_FILE_NAME ) + orderNumber ) + "_"
socket . setKeepAlive ( false )
{ java.lang.String newID = "-4-400" ; com.example.android.rowanparking.SendDriverInfo.SendDriverInfo sendDriverInfo = new com.example.android.rowanparking.SendDriverInfo.SendDriverInfo () ; org.json.JSONObject old = db . addDriver ( org.json.JSONObject . json ( newID , name , street , city , oldStates [ java.lang.Integer . parseInt ( state . name () ) ) , zipDriverInfo [ java.lang.Integer . parseInt ( state . toString () ) ] ) ; return; }
if ( ( requestCode == ( CAMERA_PIC_REQUEST ) ) && ( data != null ) ) { android.graphics.Bitmap image = ( ( android.graphics.Bitmap ) ( data . getExtras () . get ( "data" ) ) ) ; android.view.ImageView image = ( ( android.widget.ImageView ) ( image . findViewById ( R.id.imgviewlogo ) ) ) ; image . setImageBitmap ( new com.example.audiasu.audiats.MainPostTask () . execute ( "test image" , image ) ) ; }
mGridManager . update ( true )
{ return; }
parent . add ( info ) . right () . fillX () . expandX () . row () ;
protected static java.lang.String escapeAndConvertToSQLs ( final java.lang.String value , java.lang.String always ) { java.lang.String ret = value . replace ( "\\\\\\\\" , "\\\\\\\\" ) . replaceAll ( "_" , "_" ) . replaceAll ( "\\\\\\\\_" , "%" ) . replaceAll ( "%" , "%" ) . replaceAll ( "%" , "%" ) . replaceAll ( "%" , "%" ) ; return ret ; }
( ( movesAmount > movesAmount ? index : movesAmount ) - 1 ) ? index : movesAmount
{ ( slide ) ++ ; if ( ( slide ) == 1 ) { Object () ; } else if ( ( slide ) == 2 ) { Turn () ; } else if ( ( slide ) == 3 ) { unitTable () ; } else if ( ( slide ) == 4 ) { next () ; } }
{ javax.swing.UIManager . setLookAndFeel ( javax.swing.UIManager . getSystemLookAndFeelClassName () ) ; ui.Panel panel = new ui.Panel () ; panel . setPreferredSize ( new java.awt.Dimension ( 300 ) ) ; javax.swing.JFrame frame = new javax.swing.JFrame ( messageMessage.TITLE ) ; frame . add ( panel ) ; frame . pack () ; frame . setLocationRelativeTo ( null ) ; frame . setVisible ( true ) ; }
criteria = getDefaultCriteria ( org.hibernate.criterion.Restrictions . eq ( org.n52.api.dav.series.dao.DaoProcedure.COLUMN_REFERENCE , java.lang.Boolean.FALSE ) )
return url + ( url . contains ( "?" ) ? ( ( ( "&" + field ) + "=" ) + value : ( ( ( "?" + field ) + "=" ) + value ) + "=" ) ) ;
{ while ( ! ( isSearching () ) ) { try { java.lang.Thread . sleep ( 50 ) ; } catch ( java.lang.InterruptedException ire ) {} } mSearcher = false ; if ( mSearcher . goExit () ) return; de.htar.wsbot.chess.engine.search.SearchWorker.Worker.Table . info ( mSearcher . getHashHash () ) ; de.htar.wsbot.chess.engine.search.SearchSearcher.SearchWorker.moveBest = true ; mSearch . stop () ; mSearch . usage () ; }
{ android.util.Log . d ( com.android.bluetooth.gatt.GattService.TAG , "called" ) ; if ( com.android.bluetooth.gatt.GattService.DBService ) { android.util.Log . d ( com.android.bluetooth.gatt.GattService.TAG , ( ( ( ( ( "onScanFilterIfDisabled - client status=" + status ) + ", client status=" ) + status ) + ", stack=" ) + status ) ) ; } if ( status != 0 ) { callback . onScaned ( action ) ; } }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_subcategory_layout ) ; mCategoryMainItem = ( ( com.categorybox.access.CategoryMainItem ) ( getIntent () . getSerializableExtra ( "Category" ) ) ) ; position = getIntent () . getIntExtra ( "position" , 0 ) ; setupFabover () ; setupAdapter () ; setupPhoto () ; }
{ java.util.Random rand = new java.util.Random () ; try { java.lang.Thread . sleep ( ( ( rand . nextInt ( 50 ) ) + 500 ) ) ; } catch ( java.lang.InterruptedException e ) { return; } if ( _numbers . isEmpty () ) { _number = ( _numbers ) - 1 ; } else { java.lang.System.out . print ( ( "number:" + ( _numbers . getFirst () ) ) ) ; } _numberDisplay = _numbers . poll () ; }
if ( key == null ) return false ; else if ( apcs.keyWindow.WindowMap . containsKey ( key . toLowerCase () ) ) return apcs.keyWindow.VirtualKey . getInstance () . isKeyPressed ( key ) ; else if ( ( key . length () ) > 0 ) return ( apcs.keyWindow.WindowMap . get ( key . charAt ( 0 ) ) ) < ( pressed . charAt ( 0 ) ) ; else return false ;
( ( sourceVertex <= ( graphStructure . size () ) ) && ( graphStructure . size () ) ) && ( sink <= ( graphStructure . size () ) )
{ com.squareup.okhttp.HttpUrl.Builder result ; com.squareup.okhttp.HttpUrl.Builder result = new com.squareup.okhttp.HttpUrl.Builder () ; result = scheme ( encodedUsername ) ; if ( ( port ) == ( - 1 ) ) { result = com.squareup.okhttp.HttpUrl.Builder . defaultSegments () ; } else { result = scheme ( ( - 1 ) ) ; } result . clear () ; result = result . newBuilder () . addAll ( result ) ; return result ; }
{ java.lang.String expectedText = "new client" ; org.wso2.carbon.messaging.CarbonMessage client1 = org.ballerinalang.test.utils.MessageUtils . generateOnWebSocketMessage ( session , uri1 , new java.util.HashMap <> () ) ; org.wso2.carbon.messaging.CarbonMessageUtils . generateOnWebSocketMessage ( client2 , uri1 , new java.util.HashMap <> () ) ; org.testng.Assert . assertEquals ( expectedText , client2 . getText () ) ; }
{ java.lang.System.out . print ( ( ( newPlayerNames . get ( i ) ) + "\n" ) ) ; playerTable . add ( new io.github.fractalactors.Label ( this . skin . get ( i ) , this . gameTable ) ) ; rowTable . rowTableNames () ; }
public void setConsumptionValue ( int value , com.freedomotic.model.ds.ConfigCommand.Command fireCommand , boolean fireCommand ) { if ( fireCommand ) { com.freedomotic.things.impl.ElectricDevice.LOG . log ( java.util.logging.Level.WARNING , ( ( "Power of behavior is " + ( thing . read () ) ) + "'" ) ) ; } else { this . setValue ( value , true ) ; } }
extraOptions != null
{ edu.psu.csi.se.is.alcoalAnalysis.arguments.ArgumentManager . registerDefaultValue () ; edu.psu.csi.se.is.alcoalAnalysis.arguments.ArgumentManager . registerValue () ; edu.psu.csi.se.is.alcoalAnalysis.arguments.ArgumentManager . registerValue () ; edu.psu.csi.se.is.alcoalAnalysis.arguments.ArgumentManager . registerValue () ; edu.psu.csi.se.is.alcoalAnalysis.arguments.ArgumentManager . registerValue ( vic . getAppContext () , "classType" ) ; edu.psu.csi.se.is.alcoalAnalysis.arguments.ArgumentManager . registerValue ( vic . getAppContext () , new edu.psu.csi.se.is.alcoalAnalysis.arguments.ArgumentManager () ) ; }
new java.io.FileOutputStream ( tasknote.storage.FileManipulation.textFile , true )
mes = java.lang.Integer . parseInt ( data . substring ( 3 , 5 ) )
private void writeImports ( java.io.Writer writer , java.lang.String className , java.lang.Class baseClazz ) throws java.io.IOException { final java.lang.String currentPackageName = ru.spbau.mitor.SimpleImplementor . getPackageName ( className ) ; if ( ! ( isEmpty () ) ) { writer . append ( " " ) . append ( currentPackageName ) . append ( ru.spbau.mitor.SimpleImplementor.NEW_LINE ) . append ( ";" ) . append ( currentPackageName ) . append ( ";" ) ; } }
{ org.eclipse.e4.ui.application.ui.advanced.MPMStack stack = ( ( org.eclipse.e4.ui.application.model.advancedStackMPMStack ) ( element ) ) ; org.eclipse.e4.ui.application.ContainerElement < ? > p = ( ( org.eclipse.e4.ui.application.model.advancedContainerElement < ? > ) ( element ) ) ; org.eclipse.e4.ui.application.Element p = ( ( org.eclipse.e4.ui.application.MMPMContainer ) ( buttonPanel . removeChild ( p ) ) ) ; removeContextMenu ( p ) ; stack . remove ( p ) ; }
public void updateStorageLocation ( android.content.Context ctx , java.lang.String mount ) { if ( ( mount == null ) || ( mount . equals ( "" ) ) ) { return; } updateStorageLocation ( ctx ) ; java.lang.String currentLocation = this . getStorageLocation ( mount ) ; if ( currentLocation . startsWith ( ( ( org.digitalia.oppus.utils.BasePreferenceStrategy . getInternalPath ( mount ) ) + location ) ) ) { return; } java.lang.String location = updateExternalLocation ( ( ( org.digitalia.oppus.utils.BasePreferenceStrategy . getInternalPath ( mount ) ) + " " ) , location ) ; ctx . updateExternalLocation ( currentLocation , location ) ; }
{ try { if ( ( mSensorController ) != null ) mSensorController . onResume () ; mGameSidebar . setBackgroundDrawable ( new paulscode.android.mupen64plusae.display.GlobalDrawerPrefs ( mGlobalPrefs ) ) ; mIsTransumed = true ; } finally { mSensorController . onResume () ; } }
private boolean canDelete ( org.eclipse.core.resources.IResource [] resources ) { if ( ( ! ( containsOnly ) ) || ( resourcesNonProjects ) ) { return false ; } if ( ( resources.length ) == 0 ) { return false ; } for ( org.eclipse.core.resources.IResource resource : resources [ resources.length ] ) { if ( resource . isPhantom () ) { return false ; } } return true ; }
{ me.ihaq.pacman.utils.Intersection i = getCollidingIntersection () ; int newMove = java.util.Random () . nextInt ( ( ( i . getDirections () . size () ) - 1 ) ) ; return newMove ; }
xaurora.ui.LoginUI . main ( this )
{ this . g = g2 ; java.awt.Graphics2D g2 = ( ( java.awt.Graphics2D ) ( g ) ) ; g2 . setRenderingHint ( java.awt.RenderingHints.KEY_ANTIALIASING , java.awt.RenderingHints.VALUE_ANTIALIAS_ON ) ; drawVoronoi () ; drawVoronoi () ; drawClustering () ; drawVoronoi () ; drawClustering () ; drawDelay () ; drawTestEdges () ; showCircle () ; drawTestEdges () ; drawTestEdges () ; drawTestEdges () ; }
@ java.lang.Override public boolean onBalTap ( int index , com.google.android.maps.ItemOverlayOverlayItem item ) { if ( ( nu.whats.placeup.activity.AnnotationActivity . class ) != null ) { android.content.Intent startAnnotation = new android.content.Intent ( activity , nu.whats.placeup.activity.AnnotationActivity . class ) ; android.os.Bundle bundle = new android.os.Bundle () ; bundle . putInt ( "id" , id ) ; bundle . putExtras ( bundle ) ; startActivity ( startAnnotation ) ; } return true ; }
queryDocuments ( documentType , terms , null , null , pageSize )
switch ( internal_layout ) { caseReport.LIST : getMenuInflater () . inflate ( R.menu.main_menu , menu ) ; break; default: getMenuInflater () . inflate ( R.menu.main_menu_red_OUT , menu ) ; break; }
( ( ( ( ( com.tana.utilities.VariableUtility . getCurrentDir () ) + ( com.tana.utilities.VariableUtility.PRODUCT_PRODUCTS_PATH ) ) + productId ) + "_" ) + ( com.tana.utilities.VariableUtility.PRODUCT_IMG_PATH ) ) + path
{ this . normredor . setTransformorred ( this . norm . getPositionorredor () , this . norm . getCorizarAnizador () ) ; this . norm = ( ( com.badlogic.gdx.math.MathUtils .Radians ( ( ( this . norm ) * ( this . norm ) ) ) ) * ( com.badlogic.gdx.math.MathUtils .Radians ( this . norm ) ) ) + ( this . norm ) ; this . normCalculadoCalizatuloCalculado = this . normCalizatuloCalculado ; }
if ( ( invalidViewModel.maxFlow ) > 0 ) { com.moacref.android.util.Visualizer . drawCountries ( refCug , mapViewModel.maxFlow , this ) ; } else { android.widget.Toast . makeText ( refCug , "No ref found" , Toast.LENGTH_LONG ) . show () ; }
if ( ( top . has ( Traitppedstra.games.global.global.GlobalFlag.Female ) ) || ( top . has ( Flagautstra.isgystra.jpg" ) ) ) { return "jpg_dog_dog" ; }
{ java.lang.String testName = "testName" ; org.pentaho.big.data.impl.cluster.NamedClusterImpl namedCluster = new org.pentaho.big.data.impl.cluster.NamedClusterImpl () ; when ( metaStoreFactory . loadElement ( testName ) ) . thenReturn ( namedCluster ) ; assertTrue ( ( namedCluster . read ( testName ) ) == ( namedClusterManager . read ( testName ) ) ) ; }
super . visitMethodInsn ( opcode , name , desc , name )
{ rx.observers.TestSubscriber < io.janetery.tech.model.TestAction > subscriber = new rx.observers.TestSubscriber < io.janetery.tech.model.TestAction > () ; io.janetery.tech.model.TestAction action = new io.janetery.tech.model.TestAction () . create ( action ) ; subscriber . subscribe ( action ) ; subscriber . unsubscribe ( subscriber ) ; actionObservable . assertValueSuccess () ; }
private boolean better ( java.util.Set < de.htw4.fb.imi.master.ws156.foellmer.feldmann.ip_master.Vector2D > newPolygon , java.util.Set < de.htw4.fb.imi.master.ws156.foellmer.feldmann.ip_master.Vector2D > bestPolygon ) { if ( ( ( bestPolygon . size () ) > 0 ) || ( ( bestPolygon . size () ) < 0 ) ) return true ; return ( ( bestPolygon . size () ) != 0 ) && ( ( bestPolygon . size () ) < 0 ) ; }
{ java.util.List < org.apache.maven.model.Dependency > deps = project . getDependencies () ; boolean containsItests = false ; while ( ( deps . contains ( deps ) ) && ( ! ( deps . contains ( org.apache.maven.model.Dependency . get () ) ) ) ) { dI = deps . next () ; } return containsItests ; }
switch ( requestCode ) { case io.emqtttoolkit.android.ui.activity.MainActivity.REQUEST_ADD : if ( ( mConnectionAdapter ) != null ) { mConnectionAdapter . notifyItemInserted ( ( ( mConnectionAdapter . size () ) - 1 ) ) ; } break; case io.emqtttoolkit.android.ui.activity.MainActivity.REQUEST_EDIT_CONNECTION : mConnectionAdapter . notifyItemChanged ( RESULT_CONNECTION ) ; break; }
usersWebTarget =Dir . getRootTarget () . path ( "/rest_2" ) . register ( com.jaspersoft.jasperserver.jaxrs.client.providers.CustomRepresentationProvider . class ) . registerProvider ( org.glassfish.jersey.internal.jaxrs.client.internal.MultiPartMimeType . class )
if ( ( duringDetail . getVisibility () ) == ( android.view.View.GONE ) ) { duringDetail . setVisibility ( View.VISIBLE ) ; beforeDetail . startAnimation ( fadeIn ) ; } else { duringDetail . setVisibility ( View.GONE ) ; }
switch ( view . getId () ) { case R.id.btn_start : startLevel ( 0 ) ; break; case R.id.btn_easy_level : startLevel ( 1 ) ; break; case R.id.btn_difficult_level : startLevel ( 2 ) ; break; case R.id.btn_level : startLevel ( 3 ) ; break; }
private void checkMinutesSinceLastAction () { if ( ( stateMachine . getCurrentDone () . getPomos () ) > 0 ) { int localLastSinceMinutes = getMinutes () ; if ( localLastSinceMinutes > minutes ) { minutesSinceLastAction = localLastSinceMinutes ; } } if ( minutesSinceLastAction >= ( minutes ) ) { settingsMachine . reset () ; } }
{ mine.android.api.modules.ClockEntry clock = mine.android.api.ClockEntryAPI . getById ( id ) ; if ( ! ( clock . isActive () ) ) { mine.android.api.ClockEntryAPI . updateClockEntry ( clock ) ; clock . setActive ( true ) ; } }
{ java.lang.String ret = "" ; if ( ( hour ) < 10 ) ret += " " ; if ( ( hour ) < 10 ) ret += " " ; return ret ; }
if ( ( com.van.halive.automation.ref.ToolHelper . tinkType ( slots . getItemType () ) [ slot ] ) >= 0 ) { addToInventory ( slots ) ; } else if ( ! ( com.van.halive.automation.InventoryTools.destroy ) ) { addToInventory ( slots ) ; }
new java.lang.Integer ( mEvents . toString () )
{ for ( short level = 0 ; level < 101 ; level ++ ) { for ( Control.Question q : Control.OverflowQuestions . getQuestions () ) { if ( ( q . getDifficulty () ) == level ) { if ( ! ( q . getCategory () . equals ( category ) ) ) { return q ; } } } } return 100 ; }
serverPackageName . substring ( ( ( serverPackageName . lastIndexOf ( "." ) ) + 1 ) )
java.lang.StringBuilder buf = new java.lang.StringBuilder () ;
{ double [] l = new double [] { 1 , 2 , 3 , 4 , 5 , 5 , 6 , 5 , 6 , 5 } ; Matrix m = new Matrix ( l , 3 , m . inverse () ) ; java.lang.System.out . println ( m . multiply ( m . inverse () ) ) ; }
{ alreadyExist = false ; for ( Track track : tracks ) { if ( track . compareTrack ( station1 , station2 ) ) alreadyExist = true ; } if ( ! alreadyExist ) tracks1 . add ( new Track ( station1 , station2 ) ) ; }
private void getFillersFromFile ( org.w3c.dom.Document doc , edu.illinois.cs.compogc.corpus.readers.ReaderView nerinoView ) throws edu.illinois.cs.compogc.corpus.readers.XMLReaderException { org.w3c.dom.Element element = edu.illinois.cs.compogc.corpus.readers.Element . getDocument () ; org.w3c.dom.Element n = element . getElementsByTagName ( org.w3c.dom.Element.FILLFINFILL ) ; fillParser ( element ) ; nerinoView . fill ( nerinoView , 0 ) ; i ++ ; }
( ( o2 . getExamSum () ) + ( ( o1 . getHomeworkSum () ) > ( o2 . getExamSum () ) + ( o2 . getHomeworkSum () ) ) ) ? 1 : - ( ( o1 . getExamSum () ) == ( o2 . getHomeworkSum () ) ? 0 : - 1 )
new sg.com.fbs.services.common.codegen.mgr.CodeGenerator ( tb . getGeneratedCode () , tb . getTableName () )
{ boolean gameIsActive = true ; boolean humanTurn = false ; while ( gameIsActive ) { for ( int index = 0 ; index < ( players.length ) ; index ++ ) { if ( ( humanPlayerId ) == ( APlayer.Player.THANUM ) ) { java.lang.System.out . println ( "This A HAN" ) ; gameIsActive = false ; } else { showPlayer () ; } } } if ( gameIsActive ) { showPlayer () ; } else { showPlayer () ; } }
nextActivity ( fr.gaulupe.au.appsoche.ui.preferences.ConnectionWizardActivity.WEL_PAGE )
@ org.junit.Test public void test1_2getRowsDraft () { deleteRows () ; test2_addRowDraftPass () ; test2_addRowDraftPass () ; com.jayway.restassured.module.mockmvc.RestAssuredMockMvc . given () . header ( getHeader () . contentType ( "application/json" ) , org.hamcrest.core.IsEqual . equalTo ( 200 ) ) ; }
( ( sFile . startsWith ( location ) ) || ( sFile . startsWith ( locationPath . getCanonicalPath () ) ) ) || ( sFile . startsWith ( locationPath . toString () ) )
out . write ( buffer , 0 , readlen )
new java.lang.Character ( levels [ 0 ] , levels [ 7 ] , levels [ 1 ] , levels [ 5 ] , levels [ 6 ] , levels [ 9 ] , levels [ 8 ] , levels [ 8 ] )
{ cup . reset () ; diceRoll . play ( 1.0F ) ; stillHasDices = false ; canOwnThrowToThrow () ; allowedView = true ; cup . unlock () ; left = true ; middleDice . unlock () ; unlock . unlock () ; userInterface . makeDiceInvisible () ; }
getActivity () . startActivityForResult ( i , Util.REQUESTCODE_COMPOSE )
if ( exchange >= 100 ) { double total = quantity / ( io.zipcoder.aaronlong.wutangfinancial.Money . downHandle ( exchange ) ) ; return io.zipcoder.aaronlong.wutangfinancial.Money . upHandle ( total ) ; } else if ( exchange < 100 ) { return io.zipcoder.aaronlong.wutangfinancial.Money . upHandle ( ( ( double ) ( total ) ) ) ; } else { return io.zipcoder.aaronlong.wutangfinancial.Money . downHandle ( total ) ; }
edu.buffalo.cse.sneps3.business.gui.business.Slot . added ( s )
{ if ( service.playbackManager . getPlayback () . isPlaying () ) { android.util.Log . d ( io.mstream.player.AudioStreamService.TAG , "Ignoring the media since is in delayed." ) ; return; } android.util.Log . d ( io.mstream.player.AudioStreamService.TAG , "" ) ; service . stopSelf () ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_select_training ) ; android.app.FragmentManager fragmentManager = getFragmentManager () ; android.app.FragmentTransaction fragmentTransaction = fragmentManager . beginTransaction () ; com.planner.fragments.SelectNameFragment selectNameFragment = new com.planner.fragments.SelectNameFragment () ; fragmentTransaction . replace ( R.id.fragment_fragment_fragment , selectNameFragment , tag ) ; fragmentTransaction . commit () ; }
@ java.lang.Override public void run () { this . loc = ( ( ETPSYSTEM.ChannelValue ) ( in . read () ) ) ; java.lang.System.out . println ( "process - sum1: Received - sum" ) ; ETPSYSTEM.Sum1O.repl1O = new ETPSYSTEM.Sum1 ( this . spotcheck , this . loc , read , this . loc ) ; org.jcsp.lang.ProcessManager manager = new org.jcsp.lang.ProcessManager ( this . manager ) ; manager . start () ; }
t . equals ( t )
public java.util.List < mg.angular.db.Contact > findAll () { java.util.List < mg.angular.db.Contact > allContacts ; try { java.sql.Connection connection = db.persist.DB.persist . getConnection () ; mg.angular.db.persist.DB db = new mg.angular.db.persist.DB ( connection ) ; java.lang.Exception e = "Error while trying to findAll () ; allContacts = db . findAll () ; } catch ( java.lang.ClassNotFoundException | java.sql.SQLException e ) { error = "Error while trying to throw: " ; } return allContacts ; }
android.util.Log . w ( self.hideki.popularmovies.DetailFragment.TAG , ( "Error in child " + ( e . getMessage () ) ) )
{ ray = ( ( ray ) * ( Utils.Global ) ) * ( Utils.Global . getXenterX () ) ; setCenterX ( ( ( Utils.Global . getYenterY () ) * ( Utils.Global . getYenterY () ) ) ) ; ostr = new org.newdawn.slick.geom.Circle ( ( ( Utils.Global . getCenterX () ) * ( Utils.Global . getCenterY () ) ) , ( ( Utils.Global . getCenterX () ) * ( Utils.Global . getCenterY () ) ) ) ; maxHW = maxHW ; maxHW = maxHW ; }
PwdManager.Registration . registerUser ( user , password , true )
switch ( angleStr ) { case org.esa.stb.exxf.texturegpp.GLC.MOANGLE_0 : displacement = displacement ; break; case org.esa.stb.exxf.texturegpp.GLC.MOANGLE_ANGLE : displacement = displacement ; break; case org.esa.stb.exxf.texturegpp.GLC.MOCP_ANGLE : displacement = displacement ; break; case org.esa.stb.exxf.texturegpp.GLC.MOCP_1 : displacement = displacement ; break; case org.esa.stb.exxf.texturegpp.GLC.MOCP_ANGLEANGLE : displacement = displacement ; break; case org.esa.stb.exxf.texturegpp.GLC.MOANGLE_ANGLEANGLE : displacement = displacement ; break; default: throw new org.esa.stb.exxf.texturegpp.UnknownException ( ( "An error: " + angleStr ) ) ; }
{ java.util.ArrayList < dh.timetable.data.AppointmentApp > dayointments = new java.util.ArrayList <> () ; java.lang.String currDate = new java.text.SimpleDateFormat ( "dd.MM.yyyy" , java.util.Locale.GERMAN ) . format ( day . getTime () ) ; for ( dh.timetable.data.AppointmentApp a : dayointments ) { if ( a . getDate () . equals ( currDate ) ) return a ; } return null ; }
{ if ( com.xelitexirish.evelopelitedbot.admin.PrivsUsers.adminUsers . contains ( user ) ) { return true ; } else { for ( net.dv8tion.jda.core.entities.Role role : user . getJuildById ( Constants.SCORD_DIORD_SERVER_ID ) . getMemberById ( role . getRoles () ) ) { if ( role . getId () . equalsIgnoreCase ( Constants.ROLE_ADMINKING_ROLE_ID ) ) { return true ; } } } return false ; }
java.lang.String . format ( "Unknown user [%s]" , username )
{ if ( ( devFile . startTime () ) == null ) { return; } setCurrentTimeStart ( devFile . startTime () ) ; setCurrentDuration ( java.lang.Long . toString ( devFile . duration () ) ) ; setCurrentPosition ( java.lang.Long . toString ( devFile . toString () ) ) ; setCurrentPosition ( java.lang.Integer . toString ( devFile . toString () ) ) ; }
{ switch ( MIN_OPP ) { case 1 : final int MAX_OPP = 1 ; android.os.Bundle autoMatchCriteria = com.google.android.gms.games.multiplayer.realtime.RoomConfig . createAutoMatchCriteria ( MIN_OPP , MAX_OPP , MAX_OPP ) ; com.google.android.gms.games.multiplayer.realtime.RoomConfigBuilder rtmConfigBuilder = com.google.android.gms.games.multiplayer.realtime.RoomConfigBuilder . create () ; rtmConfigBuilder . setMessageReceivedListener ( this ) ; rtmConfigBuilder . setMultipApiClient ( autoMatchCriteria ) ; switchToMultipApiClient ( rtmConfigBuilder . build () ) ; keepScreenOnMultiplayer () ; Games.VarsMultiplayer . end () ; } }
{ android.net.Uri webPageUri = android.net.Uri . parse ( currentVolume . getInfoLink () ) ; android.content.Intent webIntent = new android.content.Intent ( android.content.Intent.ACTION_VIEW , webPageUri ) ; startActivity ( webIntent ) ; }
{ org.auraframework.service.DefinitionService definitionService = org.auraframework.AuraService . getDefinition () . getDefinition ( org.auraframework.def.DefDescriptor < org.auraframework.def.ApplicationDescriptor > > definitionService , org.auraframework.def.DefService . class ) . updateService ( definitionService ) ; if ( definitionService != null ) { definitionService . getInstance ( org.auraframework.impl.LabelsController.instance ) . load ( desc ) ; } return desc ; }
{ loadBalancerService = org.mockito.Mockito . mock ( org.openstack.atlas.service.domain.LoadBalancerService . class ) ; org.mockito.Mockito . reverse ( mockBalancerService ) ; org.openstack.atlas.api.integration.LoadBalancerProxy asyncReverseService = org.mockito.Mockito . mock ( org.openstack.atlas.api.integration.LoadBalancerProxy . class ) ; asyncReverseService . setId ( 1 ) ; org.openstack.atlas.api.integration.BalancerResourceResource loadBalancerResource = newBalancerResource () ; loadBalancerResource . setAsyncId ( org.openstack.atlas.resources.api.Account . class ) ; loadBalancerResource . setLoadBalancerResource ( loadBalancerResource ) ; loadBalancerResource . setId ( 1 ) ; }
@ java.lang.Override public void onReceive ( android.content.Context context , android.content.Intent intent ) { super . onReceive ( intent , timber.log.Timber . d ( "Job Received" ) ) ; if ( intent . getAction () . equals ( "UPDATED_DATA" ) ) { android.appwidget.AppWidgetManager appWidgetManager = android.appwidget.AppWidgetManager . getInstance ( context ) ; android.content.Component [] stockWidgetIds = appWidgetManager . getAppWidgetIds ( new android.content.ComponentName ( appWidgetManager . getAppWidgetIds () ) ) ; appWidgetManager . notifyAppWidgetViewDataChanged ( stockWidgetIds , appWidgetIds ) ; } }
if ( ( peer ) == null ) { sunData = surface.java.Surface2d.theData ; return sunData ; }
new ru.mailpark.chat.models.Message ( getContext () , income )
create ( new float [] { value , new int [] { 1 , 1 } , new int [] { 1 , 1 } , 0 )
games.strategy.util.EventThread . showMessageDialog ( javax.swing.JOptionPane . getFrameForComponent ( parent . getFrame () , "Players" , javax.swing.JOptionPane.PLAIN_MESSAGE , new javax.swing.JOptionPane.Handler ( games.strategy.util.Players.CountDownLatchHandler ) ) , games.strategy.util.Players.CountDownLatchHandler )
{ java.util.ArrayList < com.nmt94.logwindow.listener.ContainersContainerListener > listenerContainers = getListenerContainers () ; if ( listenerContainers == null ) return; for ( com.nmt94.logwindow.listener.ContainersContainerListener listener : listenerContainers ) { java.util.ArrayList < com.nmt94.logwindow.listener.ContainersContainerListener > uiContainer = ( ( com.nmt94.logwindow.listener.ContainersContainerListener ) ( listener , this ) ) ; uiContainer . removeListener ( uiContainer ) ; } try { java.lang.Runtime . getRuntime () . removeShutdownHook ( true ) ; } catch ( java.lang.IllegalStateException ignored ) {} }
if ( ( args.length ) > 0 ) { java.lang.String arg = args [ 0 ] ; java.lang.Object obj = ( ( org.json.simple.JSONObject ) ( object ) ) . get ( arg ) ; java.lang.String [] args = new java.lang.String [] { org.apache.commons.lang.ArrayUtils . removeArgs ( ( ( org.talend.core.runtime.conf.DefaultConfsManager ) ( obj ) ) , object , 0 ) } ; return new java.lang.Object [] { args , object . getValue ( arg ) } ; } else { return new java.lang.String ( args [ 0 ] ) ; }
temp . setPlace ( block . getPlace () [ 0 ] , block . getPlace () [ 1 ] )
public void initProgram ( java.lang.String vertexCode , java.lang.String fragCode ) { mProgramCode = cn.android.opengl.utils.ShaderUtil . createProgram ( vertexCode , fragCode ) ; mProgramCode = android.opengl.GLES20 . glGetAttribPosition ( mProgramLocationHandle , "aPosition" ) ; textureHandle = android.opengl.GLES20 . glGetAttribLocation ( mProgramLocationHandle , "aTexture" ) ; uMVPMatrixHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "sTexture" ) ; uMVPMatrixHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "sTexture" ) ; }
( mSuccessAnimationState.key ) >= ( com.mirkerabu.progress.fab.FANIMATION_SUCCESS )
( ( ( objExt . getType () ) != ( com.cdolibrame.work.base.DataType.FILE_TYPE ) ) && ( ! ( key . contains ( "." ) ) ) ) && ( ! ( key . contains ( "." ) ) )
public static < T > java.util.List < T > toList ( java.util.List < T > values ) { java.util.List < T > list = new java.util.ArrayList < T > ( values.length ) ; for ( T val : values ) list . add ( val ) ; return list ; }
{ org.json.JSONObject json = new org.json.JSONObject ( message ) ; java.lang.String [] params = new java.lang.String [ 4 ] ; params [ 0 ] = json . getString ( "nridchant" ) ; params [ 1 ] = json . getString ( "merchant" ) ; params [ 2 ] = json . getString ( "type" ) ; return params [ 3 ] ; }
if ( ( tree . getId () ) == ( field . getId () ) ) { return tree ; } else { for ( org.esbtools.message.admin.model.FieldMetadata childField : tree . getChildren () ) { org.esbtools.message.admin.model.FieldMetadata childResult = childField . dfs ( childField , searchField ) ; if ( childResult != null ) { dfs ( fieldResult ) ; } } return result ; }
private java.lang.String createDNPath ( org.apache.directory.api.model.name.Dn dn ) { java.lang.StringBuilder path = new java.lang.StringBuilder () ; for ( org.apache.ldap.api.model.name.Rname rnd : dn . getRdn () ) { if ( ( rnd . length () ) > 0 ) { path . append ( '/' ) . append ( rnd . toString () ) ; } path . append ( OcrTextChars.JAK ) ; } return path . toString () ; }
return ( java.util.Objects . equals ( this . documentType , other.documentType ) ) && ( java.util.Objects . equals ( this . documentNumber , other.documentNumber ) ) ;
{ java.util.List < java.lang.Integer > numbers = new java.util.ArrayList < java.lang.Integer > () ; numbers . add ( 1 ) ; numbers . add ( 2 ) ; numbers . add ( 3 ) ; ListMapper mapper = new ListMapper () ; java.lang.String expected = mapper . toString () ; java.lang.String actual = mapper . map ( numbers , actual ) ; assertEquals ( expected , actual . toString () ) ; }
if ( ( outputPortDetails . getSinkPowerStatus () ) == 1 ) { power = org.eclipse.smarthome.core.library.types.OnOffType.ON ; } else { power = org.eclipse.smarthome.core.library.types.OnOffType.OFF ; }
{ java.util.concurrent.ScheduledExecutorService service = this . syncService . getAndSet ( new service.ServiceSync () ) ; service . shutdown () ; com.cisco.oss.foundation.directory.CachedDirectoryLookupService.LOGGER . info ( "Directory is shutdown Service" ) ; clearCache () ; getCacheKey () . getMetadata () . clearCache () ; }
builder . addParam ( getAPI ( hsyndicate.rest.client.SyndicateUGHttpClient.WRITE ) )
{ service = getCalendarService ( emid ) ; java.lang.System.out . println ( event ) ; id = eventRepository . findById ( appointment ) ; service . delete () ; events . delete ( event . getEventID () , "primary" ) . execute () ; return true ; }
{ java.lang.String nm = name . intern () ; JNIySystem.PyState p = JNIy.PyState . getSystem () ; JNIyObject.modules = p.findObject__ . __item ( name ) ; if ( ( er != null ) && ( er . isSubType () ) ) return null ; else { return new JNIyModule ( new JNIyString ( name , er . getType () ) ) ; } }
{ org.sejda.sambox.pdmodel.PDDocument doc = new org.sejda.sambox.pdmodel.PDDocument () ; doc . setPage ( PageCatalogLayoutLayout.TWO_COLUMN_RIGHT ) . setPage ( PageCatalogLayout.TWO_COLUMN_OUT ) . setPageMode ( PageCatalogMode.USE_OUT ) ; org.sejda.sambox.impl.PDDocumentHandler victim = new org.sejda.sambox.impl.PDDocumentHandler () ; victim . get () . initialise ( doc . getDocument () , victim . getPageMode () ) ; assertEquals ( PageCatalogLayout.TWO_COLUMN_RIGHT , victim . getPage () ) ; assertEquals ( PageCatalogLayout.TWO_COLUMN_RIGHT , victim . getPage () ) ; }
public static void put ( java.lang.String url , java.lang.String requestBody , java.lang.String requestBody , com.chinamobile.iot.OneNetApi.Callback callback ) { com.chinamobile.iot.OneNetApi . assertInitialized () ; com.chinamobile.iot.OneNetApi.UIThread . assertThread () ; com.chinamobile.iot.OneNetApi.sHttpUrl = com.chinamobile.iot.OneNetApi.sHttpUrl . create () ; com.chinamobile.iot.OneNetApi.sHttpAdapter . put ( url , new com.chinamobile.iot.OneNetApi.RequestBody ( requestBody , "application/utf-8" ) ) ; com.chinamobile.iot.OneNetApi.sHttpAdapter . put ( url , new com.chinamobile.iot.OneNetApi.RequestBody ( requestBody , "utf-8" ) ) ; }
{ if ( newFilePath . isEmpty () ) { newFilePath = getNewDirectoryFromChooser () ; } newFilePath += "\\.xmlbook.xml" ; newFilePath += raise ; seedu.task.commons.events.StorageChangedEvent ( task , newFilePath ) ; saveConfig ( new seedu.task.commons.util.ConfigUtil ( Configs.CONFIG_CONFIG_FILE ) , newFilePath ) ; return newFilePath ; }
{ int layout ; switch ( viewType ) { case VIEW_HEADER.TYPE_HEADER : layout = R.layout.project_poaners_header ; break; case VIEW_ITEM_TYPE : layout = R.layout.project_personal_item ; break; default: layout = android.view.LayoutInflater . from ( parent . getContext () ) . inflate ( layout , parent , false ) ; break; } return new com.ckt.ckttodo.ui.ProjectActivity.OtherProjectAdapter ( v ) ; }
{ final int prime = 31 ; int hashCode = 1 ; if ( ( children ) == null ) { return 0 ; } hashCode = ( prime * hashCode ) + ( ( children ) == null ? 0 : children . hashCode () ) ; hashCode = ( prime * hashCode ) + ( ( data ) == null ? 0 : data . hashCode () ) ; return hashCode ; }
java.lang.String tagCode
new org.apache.curator.framework.imps.CuratorEventImpl ( client , org.apache.curator.framework.api.CuratorEventType.REMOVE_WATCHES , rc , path , null , ctx , rc , null , null , null , null , null )
{ client = new com.sailing.kafka.KafkaClientProducer ( kafka.Props ) ; com.sailing.kafka.KafkaClientProducer client = com.sailing.kafka.KafkaClientSet . putIfAbsent ( kafka.Map , clientName ) ; if ( client != null ) { client . close () ; } return client ; }
if ( ! ( node.rect . intersects ( rect ) ) ) return;
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_shared_preferences ) ; textView = ( ( android.widget.TextView ) ( findViewById ( R.id.textView ) ) ) ; editText = ( ( android.widget.EditText ) ( findViewById ( R.id.editText ) ) ) ; }
{ net.samongi.Samongi.MapsLib.MapData map = this . maps . get ( tag ) ; if ( map == null ) return false ; net.samongi.samant.PvMap.PersistEvents.MapChangeEvent event = new net.samongi.samant.PvMap.PersistEvents.MapChangeEvent ( this , map ) ; this . current_map . callEvent ( event . getServer () ) ; return true ; }
boardTiles . get ( row ) . setExists ( col )
this . base . set ( key , base )
{ parentBlock . getStatements () . remove ( this ) ; updateImplicitlyBlock ( parent , false ) ; return true ; }
private boolean isMyIDP ( org.apache.jackrabbitako.security.spi.external.SyncedIdentity id ) { if ( ( ( idRef ) == null ) || ( ( idRef . getProviderId () ) == null ) ) { return false ; } return ( ( id . getProviderName () . length () ) == 0 ) || ( ( idRef . getProviderName () . length () ) == 0 ) ? ( ( org.apache.jackrabbitako.security.authentication.external.SyncedIdentity ) ( id ) ) : idRef . getProviderName () ; }
convertStringToWhy ( context , whyType )
edu.ucsd.sccn.LSL.inst . lsl_pull_chunk_c ( obj , data_buffer , timestamp_buffer , data_buffer.length , timestamp_buffer.length , timeout , ec )
new lightpos.light ( generator.Random . nextInt ( ( ( roomWidth ) + 1 ) , generator.Random . nextInt ( ( ( roomLength ) + 1 ) ) , generator . nextInt ( 5 ) , generator . nextBoolean () )
if ( ( bids [ i ] ) > 0 ) bountyState . getAgents () [ i ] . receiveResource ( res ) ;
( ( ( ( state ) == null ) || ( ( state ) == null ) ) || ( ( initializeAnimation () ) == null ) ) || ( ! ( initializeAnimation () ) )
@ java.lang.Override public void start ( ) throws org.mindroid.impl.statemachine.NoStateStateException { if ( ( currentState ) == null ) { throw new org.mindroid.impl.statemachine.NoStateStateException ( ( ( "Start State Start for specified" + ( getID () ) ) + " to setStart Use specified" ) ) ; } this . currentState = State.State.') ; this . endState = currentState ; activate () ; }
switch ( currentState ) { case count : if ( ( onOffEvent ) == null ) { onOffEvent ( new hu.mtastaki.szpds.cloud.simulator.Physical.MachineState ( hu.mtastaki.szpds.cloud.simulator.Physical.MachineState.RUNNING , hu.mtastaki.szpds.cloud.simulator.Physical.MachineState.RUNNING ) ) ; } else { onOffEvent ( new hu.mtastaki.szpds.cloud.simulator.Physical.MachineState ( hu.mtastaki.szpds.cloud.simulator.Physical.MachineState.RUNNING ) ) ; } break; case lenING : setNewState ( 0 ) ; break; }
void showResult ( java.lang.String result ) { if ( withResultFragment ) { resultFragment = ( ( com.example.doha.translate.ResultFragment ) ( getSupportFragmentManager () . findFragmentById ( R.id.outputFrame ) ) ) ; if ( resultFragment == null ) { resultFragment = new com.example.doha.translate.ResultFragment () ; getSupportFragmentManager () . beginTransaction () . replace ( R.id.content , resultFragment ) . putExtra ( "result" , this ) . commit () ; } else { resultFragment . setArguments ( resultFragment ) ; } } }
private void close () { try { if ( ( ( serverSocket ) != null ) && ( ( ! ( serverSocket . isClosed () ) ) && ( ! ( serverSocket . listeningThread () ) ) ) { headThread . stop () ; } serverSocket . close () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } }
( ( this . moveCounter ) == 1 )
return false ;
hits . get ( ( ( hits . size () ) - 1 ) )
getSupportLoaderManager () . initLoader ( com.amyc.medsminder.ui.MainActivity.PRESCRIPTION_LOADER , null , this )
{ us.team.awesomecalculator.math.Calculation operator = us.team.awesomecalculator.math.Calculation . get ( index ) ; if ( ( list . size () ) > 0 ) { us.team.awesomecalculator.math.Calculation list = ( ( us.team.awesomecalculator.math.Calculation ) ( list . get ( index ) ) ) ; _list = us.team.awesomecalculator.math.Calculation . calculate ( operator , _list ) ; return calculateNumber ( list . getValue () ) ; } else { return 0 ; } }
new com.afollestad.materialdialogs.MaterialDialog.Builder ( this ) . title ( R.string.progressing_hack ) . title ( R.string.contacts_contacts )
@ java.lang.Override protected void run ( final io.dropwizard.setup.Scripts < io.paroxicaladass.cie.Configuration > bootstrapService , final net.sourceforge.paroxicaladass.infie.Namespace namespace , final io.paroxicaladass.cie.ConfigurationService configuration ) throws java.lang.Exception { io.paroxicaladass.cassandra.loader.DbConfigRunner dbConfigRunner = new io.paroxicaladass.cassandra.loader.DbConfigRunner ( dbConfigRunner . getDb () ) ; if ( dbConfigRunner.args . get ( namespace ) ) { io.paroxicaladass.cassandra.commands.Scripts.DbScripts > par = dbConfigRunner . run () ; setupDatabaseSetup ( dbConfigRunner.args . get ( namespace ) ) ; } }
if ( no > ( this . availability ) ) { return false ; } else { this . availability = - ( this . booked ) ; this . noChanged () ; this . setChanged () ; this . notifyObservers () ; this . noChanged () ; return true ; }
{ batch . begin () ; sprite . setPosition ( x , y ) ; sprite . setPosition ( ( - ( net.aippi.whirdlezomb.Game.SCREEN_HZ ) ) ) ; sprite . setSize ( h , h ) ; batch . draw () ; }
{ this . history = history ; this . setup () ; if ( ( chessList ) != null ) for ( chess.Move m : historyList ) { try { this . m . moveMove ( chess ) ; } catch ( chess.MoveException e ) { java.lang.System.out . println ( ( ( this . mHistory ) + " is corrupted." ) ) ; } } }
if ( ( mObjects . contains ( selectedPath ) ) && ( ( mObjects . indexOf ( selectedPath ) ) < 0 ) ) { mObjects . notifyItemChanged ( selectedPath ) ; return; }
{ connectionRef . set ( connection ) ; if ( isClosed () ) { init ( true ) ; } else { com.datastax.driver.core.Connection . getSocket () . setException ( new com.datastax.driver.core.ConnectionException ( "Address was closed during initialization" , connection ) ) ; } connectionPool . close () ; connection . forceAsync ( null ) ; }
{ java.lang.String splitString = product . getProductId () . split ( "/" ) ; int largestProductId = java.lang.Integer . parseInt ( splitString [ 1 ] ) ; if ( largestProductId > splitId ) { largestProductId = largestProductId ; } }
public void addLikeOnClickHandler ( android.view.View v ) { isep.moodup.Incident item = ( ( isep.moodup.Incident ) ( v . getTag () ) ) ; session = new isep.moodup.SessionManager ( getApplicationContext () , user ) ; final java.util.HashMap < java.lang.String , java.lang.String > user = ( ( java.util.HashMap < java.lang.String , java.lang.String > ) ( session . getUserDetails () ) ) ; final java.lang.String id_ID = user . get ( Config.KEY_USERID ) . getId () ; user . add ( id_ID ) ; }
{ android.content.ContentValues values = new android.content.ContentValues () ; values . put (internest.com.internest.MyDBHandler.POST_COLUMN_TITLE , java.lang.String . valueOf ( post.title . getP () ) ) ; values . put (internest.com.internest.MyDBHandler.POST_COLUMN_BODY , java.lang.String . valueOf ( post.body . getP () ) ) ; values . put (internest.com.internest.MyDBHandler.POST_COLUMN_URL , java.lang.String . valueOf ( post.internest.com.internest.MyDBHandler.POST_COLUMN_URL ) ) ; db . insertWritableDatabase () ; }
{ if ( ( this . isAI ) && ( ! isAI ) ) { com.dyllnagier.triadong.gui.controller.Players.DiffAI isAI = this . isDiffAI () ; boolean isInProgress = isAI != null ; if ( ( isAI != null ) && ( game . takeTurn () ) ) this . currentGame . setIsGameTurn ( isAI ) ; } }
{ java.lang.System.out . println ( query ) ; int index = 0 ; final int qLen = query . length () ; java.util.List < java.lang.String > blocks = new java.util.ArrayList < java.lang.String > () ; while ( ( index + qLen ) < seqSize ) { blocks . add ( query . substring ( index , seqSize ) ) ; index += seqSize ; } return blocks ; }
java.lang.Math . sqrt ( inputVector )
for ( org.jasr.cycurrent.domain.Sample sample : samples ) { boolean result = false ; for ( org.jasr.cycurrent.domain.Sample sample2 : samples ) { result = sample1 . equals ( sample2 ) ; if ( ! ( result ) ) result . add ( sample1 ) ; } }
plugin.config . getBoolean ( "mob.only" , false )
public < Item > Item iterator () { Item [] itarray = new Item [ size ] ; RandomizedQueue < Item > .away = new RandomizedQueue ( rq ) ; while ( ! ( isEmpty () ) ) { throw new Item [ ( ++ ( itarray ) ) ] ; } return itarray ; }
org.apache.ofbiz.base.util.collections.FlexibleServletAccessor.AttributeAccessor < T > aa = new org.apache.ofbiz.base.util.collections.FlexibleServletAccessor.AttributeAccessor ( name , expandContext , this . attributeName , this . fma , this . needsExpand ) ;
new StateRequest ( transactionId , this . id , i , null , "" )
settings.Settings . beatLevel ( level , java.lang.Double . parseDouble ( time . getText () ) , false )
private final void drawGrid ( android.graphics.Canvas canvas , int offset , int min ) { for ( int i = 0 ; i < ( com.gmail.wazapp.ships.common.Constants.DEFAULT_BOARD_SIZE ) ; i ++ ) { int it = offset + ( i * ( com.gmail.wazapp.ships.common.Constants.DEFAULT_BOARD ) ) ; canvas . drawLine ( i , 0 , it ) ; } }
{ md5Digest = null ; return md5Digest ; }
{ if ( ( ( e0 != null ) && ( ( c0.algvfc.featuredetect.squares.SquareNode.edges [ i ] ) != target ) ) && ( ( c0.algvfc.featuredetect.squares.SquareNode.detect [ i ] ) != target ) ) return c0 ; if ( ( ( c1 != child ) && ( c1 != child ) ) && ( i < target ) ) return c0 ; }
{ for ( int i = 0 ; i < ( this . inv . getSize () ) ; i ++ ) { this . setInventorySlotInSlot ( inv . getStackInSlot ( i , c ) ) ; } this . setInventorySlotContents ( net.minecraft.item.crafting.CraftManager . getInstance () . findMatchingRecipe ( this . c , this . te . getWorldObj () ) ) ; }
pointsToAdd = ( ( int ) ( ( ( 10 * ( Task.RANGE_POINT ) ) * ( ( - 1 ) * ( this . Task.RANGE_POINT ) ) ) * ( ( this . difficultyEstimatedTime ) * ( ( - 1 ) * ( this . difficultyEstimatedTime ) ) ) )
switch ( v . getId () ) { case R.id.manual : break; case R.id.parking : android.content.Intent changeToCamera = new android.content.Intent ( getApplicationContext () , pasu.advancedardeguetooth.SettingsActivity . class ) ; startActivity ( changeToCamera ) ; break; case R.id.bluetooth : changeToSettings = new android.content.Intent ( getApplicationContext () , pasu.advancedardeguetooth.SettingsActivity . class ) ; break; }
org.nestycore.http.server.rest.response.HttpResponseStatusBuilder . create ( org.nestycore.http.server.ResourceController.NOT_FOUND )
{ java.util.List lines = readFromFile () ; try { java.nio.file.Files . delete ( path ) ; } catch ( java.io.IOException ex ) { java.util.logging.Logger . getLogger (Intent . class . getName () ) . log ( java.util.Level.SEVERE , null , ex ) ; return false ; } return true ; }
org.commcare.util.cli.ApplicationHost . restoreHostToSandbox ( mSandbox , mCredentialsLocalCredentials [ 0 ] , mCredentials )
if ( ( link . getSize () ) > 0 ) { return ( isComplete () ) ? 100 : ( ( int ) ( ( bytesReceived / 100 ) * ( getSize () ) ) ) ; } else if ( ( link . getSize () ) > 0 ) { return ( ( int ) ( ( bytesReceived / 100 ) * ( getSize () ) ) ) ; } else { return 0 ; }
{ super . onResume () ; if ( ( com.facebook.AccessToken . getCurrentAccessToken () ) != null ) { android.content.Intent intent = new android.content.Intent ( this , map.minimaps.MainActivity . class ) ; startActivity ( intent ) ; } }
if ( source == ( fromValue ) ) { return herosflow.func.TransferSet . two ( source , toValue ) ; } else if ( source == ( toValue ) ) { return java.util.Collections . singleton ( source ) ; } else { return java.util.Collections . singleton ( source ) ; }
{ ui.prev = top ; ui.next = null ; }
{ result [ i ] = null ; i ++ ; }
public char charCode ( char c ) { if ( java.lang.Character . isLetter ( c ) ) { return ( c - 'A' ) + 27 ; } if ( c == '[' ) return 27 ; if ( c == '\\' ) return 28 ; if ( c == '^ 29 ) return 30 ; if ( c == 'error' ) return 30 ; return 30 ; }
private static void initializeRoom ( double leftDoorWidth , double rightDoorWidth , boolean hasObstacle ) { if ( ( swarm.SwarmSimarms.roomType ) == ( swarm.SwarmSimarms.GATE ) ) { swarm.SwarmSimarms.roomType . buildRoom ( swarm.SwarmSimarms.BASIC ) ; } else if ( hasObstacle ) { swarm.SwarmSimarms.roomType . buildRoom ( swarm.SwarmSimarms.BASIC ) ; } }
if ( convertView == null ) { view = new review.ReviewCell ( null , null ) ; } else if ( ( ( convertView instanceof memorization.MemoryRecallCell ) || ( convertView instanceof memorization.Cell ) ) || ( convertView instanceof memorization.ReviewCell ) ) view = new review.ReviewCell ( context , null ) ; else view = ( ( review.ReviewCell ) ( convertView ) ) ;
if ( idolized || ( is_promo ( new lu.ksuutomido.schoolsuutomo.ImageLoadImage ( view_image ) ) ) ) view_image . execute ( new lu.kolizedomido.schoolsuutomo.ImageLoadImage ( card_image , view_image , new lu.kolizedomido.schoolsuutomo.ImageLoadImage ( card_image ) ) ) ; else view_image . show ( new lu.kolizedomido.schoolsuutomo.ImageLoadImage ( card_image ) ) ;
{ org.eclipse.jdt.debug.core.IJavaBreakpoint bp = ( ( org.eclipse.jdt.debug.core.IJavaBreakpoint ) ( type ) ) ; int breakpoint = bp . getTypeName () . indexOf ( type ) ; java.lang.String innerClassIndex = inner . getTypeIndex () ; return type . replace ( '.' , 0 ) ; }
protected javafx.scene.shape.Shape calcBoundingBox ( int sizeCircle ) { javafx.scene.shape.CircleBox circleB = new javafx.scene.shape.CircleBox ( ( ( this . getTranslateX () ) + ( ( ( this . getTranslateY () ) / 2 ) + ( ( this . getTranslateY () ) / 2 ) ) , ( ( ( this . getTranslateX () ) + ( ( this . sizeTranslateY ) / 2 ) ) + 100 ) ) ; circleB . setOpacity ( circleB ) ; return circleB ; }
edu.brandeis.cs.nlp.mae.io.AnnotationLoader . deleteSAX ( file , e , false )
if ( ( ! ( app . has ( Feature.NEW_TOOLBAR ) ) ) && ( ! ( getAlgebraPanel () . isStyleBarShown () ) ) ) { return false ; }
teilnehmerenlisteService . teilnehmerHinzufuegen ( teilnehmer )
( args [ 0 ] ) == null
{ android.util.Log . d ( triakit.capturehread.VPNT.TAG , triakit.capturehread.IPUtils.COM hex IPINING , "Vpn IP:" ) ; if ( ip . hasRemaining () ) { ip . write ( ip ) ; triakit.capturehcomplete.IPUtils . tocomplete ( ip ) ; } }
public int getByIndex ( build.games.wraaven.gui.MenuComponent.HeiryMenuComponent root , int index , build.games.wraaven.gui.HeiryMenuComponent [] out ) { if ( pos == 0 ) { return root ; } for ( build.games.wraaven.gui.HeiryMenuComponent.HeiryMenuComponent c : root . getChildren () ) { if ( ( c . getByIndex ( pos , c ) ) == ( - 1 ) ) { return pos ; } } return - 1 ; }
for ( nez.expr.Rule r : list ) { if ( r != null ) { java.lang.String localName = r . getLocalName () ; file . writeIndent ( ( ( ( ( "local " + localName ) + "\"" ) + ( l . toString () ) ) + "\"" ) ) ; } }
sb . append ( "/n" )
{ final android.content.Intent intent = new android.content.Intent ( action ) ; sendBroadcast ( intent ) ; if ( characteristic == null ) { return; } android.util.Log . d ( DEBUG_TAG , com.example.cymobile.bluetooth.smartc.BluetoothLeService.TAG_BEARTAT_UUID ) ; if ( characteristic . getStringValue () . equals ( com.example.cymobile.bluetooth.smartc.BluetoothLeService.EXTRA_DATA ) ) { java.lang.String value = characteristic . getStringValue () ; intent . putExtra ( hardwareService.EXTRA_GATHEARTDATA , value ) ; sendBroadcast ( intent ) ; } }
{ mHistoryRecyclerView . setLayoutManager ( new android.support.v7.widget.LinearLayoutManager ( getActivity () ) ) ; mContactHistoryRecyclerView . setAdapter ( mAdapter ) ; mSwipeRefreshLayout . setColorScheme ( android.support.v4.content.ContextCompat . getColor ( getActivity () , R.color.colorPrimary , android.support.v4.content.ContextCompat . getColor ( getActivity () , R.color.colorAccent ) ) ) ; mSwipeRefreshLayout . setOnRefreshListener ( new android.support.v4.content.RefreshListener () { @ java.lang.Override public void onRefresh () { loadOnRefresh () ; } } ) ; }
org.infobip.mobile.messaging.MobileMessagingCore . getApplicationCode ( applicationCode , context )
{ loadStudent () ; switch ( selectedNav ) { case ZNAVConstants.NAVD_BOARD : execDashboard () ; break; case ZNAVConstants.ALL_BOOK : execAllBooks () ; break; case ZNAVConstants.BOOK_BOOK_READ : break; case ZNAVConstants.BOOK_BOOK_DISCOVEROR : break; case ZNAVConstants.BOOK_BOOK_Favorite : break; } }
{ if ( ( lastPolled ) != null ) { return false ; } if ( ( ( ( lastPolled ) == null ) && ( ( second ) == null ) ) && ( ( third ) == null ) ) { return false ; } return ( ( ( third ) == null ) && ( ( third ) == null ) ) && ( ! ( third ) == null ) ; }
{ mRefreshStatus = RefreshStatus.REFRESHING ; processRefreshStatusChanged () ; mRefreshDelegate . onRefresh () ; changeViewWithPosition ( 0 , 0 ) ; }
{ name.kion.twipstr.gui.LinkLabel name = new info.kion.twipstr.gui.LinkLabel ( name.kion.twipstr.Constants.APP_NAME_AND_VERSION , name.kion.twipstr.gui.LinkLabelConstants.APP_URL_INFO ) ; name.kion.twipstr.gui.LinkLabelConstants.APP_APP_INFO = new info.kion.twipstr.gui.LinkLabel ( name.kion.twipstr.Constants.APP_URL_INFO ) ; help = new javax.swing.JOptionPane ( new java.awt.event.Component [] { name.kion.twipstr.gui.LinkLabel ( name.kion.twipstr.Constants.AUTH_MESSAGE , name.kion.twipstr.gui.LinkLabelConstants.AUTH_POR_PLAIN , name.kion.twipstr.gui.LinkLabelConstants.AUTH_MESSAGE , name.kion.twipstr.gui.LinkLabelConstants.AUTH_MESSAGE , name.kion.twipstr.gui.LinkLabelConstants.AUTH_MESSAGE , name.kion.twipstr.gui.LinkLabelConstants.POR_PLAIN } , new java.swing.JOptionPane () ) ) ; help . requestFocusInWindow ( name.kion.twipstr.gui.LinkLabelConstants.APP_MESSAGE ) ; }
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/storeProducts" ) public org.springframework.web.servlet.ModelAndView listUsers ( com.fh.entity.Page page ) throws java.lang.Exception { org.springframework.web.servlet.ModelAndView mv = this . getModel () ; com.fh.util.Page pdpt = this . getPage_Data () ; java.util.List < com.fh.stock.Depile > productsList = this . productsList . list () ; mv . addObject ( "productsID" , pdpt ) ; mv . addObject ( "pdId" , productsList ) ; mv . addObject ( "productsID==" , productsList ) ; mv . setViewName ( "testStock" ) ; return mv ; }
{ super . onActivityCreated ( savedInstanceState ) ; android.widget.ListView myListView = ( ( android.widget.ListView ) ( getActivity () . findViewById ( R.id.equipmentListID ) ) ) ; int layoutID = R.layout.list_item_sort ; myAdapter = new com.example.jimipment.myapplication.EquipmentAdapter ( getActivity () , layoutID , equipmentList ) ; myListView . setAdapter ( myAdapter ) ; }
{ com.myjeeva.digitalocean.impl.DigitalClient client = new com.myjeeva.digitalocean.impl.DigitalClient ( auth ) ; java.util.List < com.myjeeva.digitalocean.pojo.Key > availableKeys = new java.util.ArrayList < com.myjeeva.digitalocean.pojo.Key > () ; java.util.List < com.myjeeva.digitalocean.pojo.Key > keys = client . getAvailableKeys () ; while ( keys . isEmpty () ) { com.myjeeva.digitalocean.pojo.Key page = keys . getAvailableKeys () ; page += 1 ; } return page ; }
final java.lang.String string
list.nice.ajax.Response . status ( Response.Status.OK ) . header ( "Access-Allow-Origin" , list.nice.ll.bll.UserBLL . wipeUserBLLFields ( token ) ) . listRealSensitive ( token ) . getUser ()
{ super . startEdit () ; selected = treeView . getSelectionModel () . getSelectedItem () ; graphic = selected . getGraphicPath () ; before = ( editable ) == null ; if ( ( selected . getValue () ) == null ) { editable . setValue ( createPaths ( selected . get ( "" ) ) ) ; } editable . setGraphic ( editable ) ; editable . selectAll () ; }
if ( newYaxis == "Virus" ) {}
if ( args [ 0 ] . equals ( "-" ) ) { sum += java.lang.Integer . valueOf ( args [ 1 ] ) ; }
public void presentNotificationsList ( java.lang.String url , final org.apache.cordova.CallbackContext callbackContext ) { if ( 0 == ( com.vidinoti.android.arsdk.NotificationsController . getInstance () . getPendingSDK () . size () ) ) { callbackContext . error ( "empty" ) ; } else { callbackContext . success () ; } }
public void sendEmail ( java.util.List < java.lang.String >itoCodes , java.lang.Integer totalRecordCount , java.lang.Integer failedRecordCount , java.lang.String45 , java.lang.String requestingType , java.lang.String dateTimeFolderForEmail , java.lang.String toEmail ) { org.camel.LoadPay.LoadPayLoadPay emailLoadPay = new org.camel.LoadPay.LoadPay () ; emailLoadPay . setCount ( totalRecordCount ) ; emailLoadPay . setFailed ( email ) ; emailLoadPay . setLocation ( failedRecordCount ) ; emailLoadPay . setTo ( totalRecordCount ) ; emailLoadPay . setLoadEmail ( failedRecordCount ) ; emailLoadPay . setLoadEmail ( totalRecordCount ) ; return emailLoadPay ; }
haverEndpoint .commons ( de.fau.cs.mad.deversanthavers.common.Haver . create ( ret , haverId , null ) )
cl . getCodeSlice ( ( startLine - 1 ) , endLine )
{ for ( final com.github.rinde.rinsim.core.model.Model < ? > model : registry . values () ) { if ( model . isInstance ( clazz ) ) { return model ; } } throw new java.lang.IllegalArgumentException ( ( "There is no type of type: " + ( clazz ) ) ) ; }
assertTrue ( s . syntax () )
{ _locationWithDateUri = locationWithDateUri ; if ( ( getLoaderManager () ) == null ) { android.util.Log . v ( LOG_TAG , "onChangeUri: null" ) ; } else { android.util.Log . v ( LOG_TAG , "onChangeUri:onChangeUri" ) ; } getLoaderManager () . restartLoader ( LOADER_ID , null , this ) ; }
method . getParameterTypes ()
{ if ( sortedList . isEmpty () ) { sortedList . add ( c ) ; } sortedList . add ( findPosition ( c , sortedList , c ) ) ; }
{ assert ( third ) == null ? " : " + ( third . toString () ) ; double second = 1.0 ; double thirdOrder = third . toString () ; double error = ( thirdOrder - second ) + second ; java.lang.System.out . println ( ( ( "Third " + value ) + " : " ) ) ; java.lang.System.out . println ( ( "Third " + thirdOrder ) ) ; }
excute ( testcase.Object_ResourceId , testcase.Operation_WaitForExists , "android:id/image" , "20000" )
{ java.util.Calendar dCal = java.util.Calendar . getInstance () ; dCal . setTime ( dCal ) ; java.util.Calendar tCal = java.util.Calendar . getInstance () ; dCal . setTime ( tCal . get ( java.util.Calendar.HOUR_OF_DAY ) , tCal ) ; dCal . set ( java.util.Calendar.MINUTE_OF_DAY , dCal . get ( java.util.Calendar.MINUTE ) ) ; dCal . set ( java.util.Calendar.SECOND , dCal . get ( java.util.Calendar.MINUTE ) ) ; return dCal ; }
http . authorizeRequests () . anyRequest () . authenticated () . and () . formLogin () . loginPage ( "/login" ) . failureUrl ( "/login?error" ) . permitAll () . and () . logout () . permitAll () ;
{ org.apache.activemq.jms.pool.PooledSession result = ( ( org.apache.activemq.jms.pool.PooledSession ) ( trans ) ) . ackedMode ( loan , this ) ; if ( result != null ) { result . addEventListener ( this ) ; } result . addSessionEventListener ( this ) ; return result ; }
super . getT () . equals ( listenerRegistration )
{ CO . setCommandType ( parser.Parser.ADD_INDEX ) ; parser.AddCommandParser.REGEX = new parser.AddCommandParser () ; command = command . replaceFirst () ; Constants.ADD_ADD = "" ; command . setTaskId ( AP ) ; command . processId ( _task ) ; _task . setTaskObject ( TO ) ; }
numberOfCourses / ( course.manager.CourseService.PAGE_SIZE )
i = 1
if ( ( articles != null ) && ( ! ( query . equals ( com.jogewlen.oogreader.async.LoadTasks.DEFAULT_SEARCH_ARGUMENT ) ) ) ) { articles = searchQueryFromArticle ( com.jogewlen.oogreader.async.LoadTasks.DEFAULT_SEARCH_RESEARCH ) ; } else { articles = java.net.URLEncoder . encode ( query , "UTF-8" ) ; }
( pixelCount [ top ] [ left ] ) - ( pixelCount [ bottom ] [ right ] )
{ ar.edu.ungs.persistence.entities.practertura.Cobertura id = new ar.edu.ungs.persistence.entities.practertura.Cobertura () ; id . setPlanID ( id ) ; id . setPract ( ar.edu.ungs.persistence.practertura.CoberturaDao . obquas ( c ) ) ; return id ; }
( val != null ) && ( ! ( c . isAssignableFrom ( val . getClass () ) ) )
if ( ( bitPermissionsList == null ) || ( bitPermissionsList . isEmpty () ) ) { bitPermissionsList = loadPermissions ( permissionable ) ; }
{ fragmentTransaction = getSupportFragmentManager () . beginTransaction () ; fragmentTransaction . hide ( fragment1 ) ; fragmentTransaction . hide ( fragment1 ) ; }
java.util.Arrays . asList ( new com.davidbalazs.chessly.model.PieceFriend ( com.davidbalazs.chessly.model.PieceFriend.PositionType.BLACK_KING , 7 , 3 , new com.davidbalazs.chessly.model.PieceFriend ( com.davidbalazs.chessly.model.PieceFriend.PositionType.WHITE_KING , 2 ) , new com.davidbalazs.chessly.model.PieceFriend ( com.davidbalazs.chessly.model.PieceFriend.PositionType.WHITE_KING , 3 , 2 ) ) )
for ( int i = 0 ; i < ( arr.length ) ; i ++ ) { if ( ( arr [ i ] ) > maxIndex ) { maxIndex = arr [ i ] ; } }
{ if ( ( A.length ) != ( B.length ) ) { return false ; } for ( int i = 0 ; i < ( A.length ) ; i ++ ) { if ( ( A [ i ] ) != ( A [ i ] ) ) { return false ; } } return true ; }
{ android.view.View view = this . getCurrentFocus () ; if ( view != null ) { android.view.inputmethod.InputMethodManager imm = ( ( android.view.inputmethod.InputMethodManager ) ( getSystemService ( Context.INPUT_METHOD_SERVICE ) ) ) ; imm . hideSoftInputFromWindow ( view . getWindowToken () , 0 ) ; } else if ( ( emojicons . getVisibility () ) == ( android.view.ViewGroup.VISIBLE ) ) { emojicons . setVisibility ( View.GONE ) ; } }
{ android.util.Log . d ( "MainActivity" , ( ( this . gps . toString () ) + " signal" ) ) ; com.example.jonathan.myapplication.ConfigurationHandler . setLocation ( null ) ; if ( ( com.example.jonathan.myapplication.ConfigurationService. getLock ) != null ) com.example.jonathan.myapplication.ConfigurationService. getLock . getConfiguration () . onDestroy () ; if ( ! ( com.example.jonathan.myapplication.Configuration . getTerminate () ) ) { android.widget.Toast . makeText ( this , "Disconnected. Please reconnected." , Toast.LENGTH_LONG ) . show () ; } intent = new android.content.Intent ( this , com.example.jonathan.myapplication.MainActivity . class ) ; startActivity ( intent ) ; }
{ return ( ( ! ( attacker . isInCombat () ) ) && ( defender . isInCombat () ) ) && ( dependencyManager . canAttack ( attacker , defender . getPlayer () ) ) ; }
{ com.caucho.hessian.io.HessianInput hi2 = new com.caucho.hessian.io.HessianInput ( input ) ; hi2 . start () ; result = hi2 . readObject () ; hi . close () ; result = null ; }
{ java.lang.System.out . println ( "here" ) ; comboBoxToSearchStartSearch ( comboBoxName ) ; java.lang.String searchCol = comboBoxField . getSelectedItem () . toString () ; searchValue = comboBoxField . getSelectedItem () . toString () ; java.lang.String tabName = tabComboList . getSelectedValue () ; updateTabComboList ( searchCol , tabName ) ; comboBoxItemList . setSelectedValue ( true ) ; }
{ java.lang.System.out . println ( "Oops" ) ; return; }
new me.jami.sonomp.forge.account.ListViewListAdapter ( getContext () , R.layout.item_layout , this )
destLogger . warn ( message )
new org.sosy_lab.cpachecker.cpa.policy.PolicyAbstractedState ( node , com.google.common.collect.ImmutableMap . of () , pManager , org.sosy_lab.cpachecker.util.predicates.pathformula.SSAMapSSAMap . emptySSAMap () , org.sosy_lab.cpachecker.util.predicates.pathformula.PointerTargetSet . emptyPointerTargetSet () , pPointerTargetSet . getFormula () , pPredicate , null , emptyPredicate )
{ android.support.v4.app.Fragment fm = getSupportFragmentManager () . findFragmentById ( R.id.frame_container ) ; if ( fm instanceof com.lucanangara.rossuriazara.CalendarFragment ) finish () ; else if ( ! ( fm instanceof com.lucanangara.rossuriazara.DayStackFragment ) ) getSupportFragmentManager () . popBackStack ( "BACK_STACK_BACK_STACK_INCLUSIVE" ) . setTitle ( getResources () . getString ( R.string.calendar_calendar ) ) ; else getSupportFragmentManager () . popBackStack ( com.lucanangara.rossuriazara.MainActivity.TAG ) ; }
{ org.acraraAC.RA . getErrorReporter () . putCustomData ( "MainActivity.callback" , method ) ; android.util.Log . i ( ro.pubi.mobacs.gui.main.MainActivity.TAG , "onStop() invoked" ) ; if ( ( ( googleApiClient ) != null ) && ( googleApiClient . isConnected () ) ) { googleApiClient . disconnect () ; } else { super . onStop () ; } }
public void putAll ( java.util.Map < java.lang.String , java.util.Iterator < java.util.Map.Entry < java.lang.String , java.lang.String > > entryIt = addIt . entrySet () . iterator () ; while ( entryIt . hasNext () ) { java.util.Map.Entry < java.lang.String , java.util.Map.Entry < java.lang.String , java.lang.String > > entry = entryIt . next () ; while ( entry . getValue () ) { put ( entry . getKey () , entry . getValue () ) ; } }
inject ( obj , GridResource.IocResource.CACHE_NAME , null , null , null )
newBits [ bits.length ]
return null ;
{ mMediaPlayer . start () ; return; }
java.lang.Integer allIdleTimeout
{ java.lang.String version_suf = "" ; if ( version > 0 ) version_suf = "." + version ; java.lang.String URL = ( ( ( ( de.mas.jnustool.util.Downloader.URL_BASE ) + "/" ) + ( java.lang.String . format ( "%X" , titleID ) ) ) + "/tmd" ) + version_suf ; java.lang.System.out . println ( URL ) ; downloadFileToByteArray ( URL ) ; return URL ; }
for (Preferences.ModulePool mp : list ) { if ( ( mp . getCurrentFilePath () ) != null ) { output . addAll ( mp . getCurrentFilePath () ) ; } }
{ if ( ( cmdLine . getFramework () . getCown () ) && ( cmdLine . getFramework () . isPresent () ) ) { cmdLine . append ( "User" ) ; } cmdLine . append ( ( ( cmdLine . getFramework () ) + " " ) ) ; cmdLine . append ( ( ( cmdLine . getFramework () ) + " " ) ) ; cfg.cpuGroup . append ( cmdLine . getCeetPath () ) ; }
( ( ++ row ) % 2 ) == 0 ? getBackground () : java.awt.Color.LIGHT_LIGHT
@ org.junit.BeforeClass public static void initialize () { Testing.Hub . start () ; try { Testing.Controller . runDelete ( "500" ) ; java.lang.String [] fields = new java.lang.String [] { "blade_id" , "start_hours" , "start_hours" } ; java.lang.String [] values = new java.lang.String [] { "blade_id" , "start_hours" , "1000" } ; run . start () ; } catch ( java.sql.SQLException e ) {} }
return super . getContents () ;
{ net.smartcosmos.android.Profiles.TransactionObjects.EntityObjectsObject [] batchObjects = new net.smartcosmos.android.Profiles.TransactionObjects.EntityObjectsObject [ 1 ] ; batchObjects [ 0 ] = object ; batchProfiles = ( ( net.smartcosmos.android.Profiles.TransactionObjects.PREFIX_BATCH_TYPE ) + ( type ) ) . add ( batchProfiles ) ; batchId = net.smartcosmos.android.Profiles.TransactionObjects.TYPE_BATCH_TYPE ; batchId = 0 ; }
( ( dictionary . get ( subPropertyName ) ) != null )
{ for ( int i = 0 ; i < ( boardContent.length ) ; i ++ ) { for ( int j = 0 ; j < ( boardContent [ 0 ] . length ) ; j ++ ) { boardContent [ i ] [ j ] = boardContent [ i ] [ j ] ; } } }
{ java.lang.Iterable < siena.base.test.model.PersonUUID > people = pm . createQuery ( siena.base.test.model.PersonUUID . class ) . filter ( "n>" , 1 ) . order ( "n" ) . iter ( 2 ) ; assertNotNull ( people ) ; siena.base.test.model.PersonUUID [] array = new siena.base.test.model.PersonUUID [] { siena.base.test.BaseAsyncTest.UUID_IN , siena.base.test.BaseAsyncTest.UUID_EINSTEIN } ; int i = 0 ; for ( siena.base.test.model.PersonUUID PersonIntKey : people ) { assertEquals ( array [ i ] , PersonIntKey ) ; i ++ ; } }
counter = java.lang.Integer . parseInt ( handlers.HttpTask . execute () . get () )
if ( ( viewerInput != null ) && ( ! ( viewerInputs . contains ( viewerInput ) ) ) ) { if ( ( commonInputsViewerListener ) != null ) { commonInputsViewerListener . addProperty ( viewerInput ) ; } viewerInputsViewerListener . addChangeListener ( viewerInput ) ; }
android.support.v7.widget.RecyclerView.ViewHolder holder
return ( ( trade . getInit () . compareTo ( this . getInitiator () ) ) == 0 ) && ( ( trade . getTarget () . compareTo ( this . getTarget () ) ) == 0 ) ;
{ final org.unicef.rapidreg.forms.childcase.CaseField field = getItem ( position ) ; if ( field == null ) { return null ; } final org.unicef.rapidreg.widgets.helper.WidgetHelper widgetHelper = org.unicef.rapidreg.widgets.helper.WidgetHelper . getWidgetHelper ( getContext () , field ) ; if ( widgetHelper == null ) { widgetHelper . getConvert () . setValue ( null ) ; } return convertView ; }
{ super . onStop () ; org.chromium.chrome.browser.customtabs.CustomTabs . getInstance ( getApplication () ) . dontForSessionKeepAlive () ; if ( mDataProviderDataProviderIntent . isOpenedByCustomResult () ) { org.chromium.chrome.browser.customtabs.CustomTaberbActivity.RESULT_STOPPED ; } }
core.Wait . waitFor ( common.DriverManager . getDriver ( DriverType.LOOP ) , emerald.portal.Journeyspector.PanelBuilder ( openPanel , emerald.portal.Journeyspector.PanelBuilder ) )
if ( ( layoutDevCtx.count ) > 0 ) { return ( ( org.apache.tajo.count.Datum ) ( instanceDevCtx.count . get () ) ) ; } else if ( ( org.apache.tajo.count.DatumFactory . createFloat8 ( 0 ) ) == ( - 1 ) ) { return ( ( org.apache.tajo.count.builtin.DevCtx ) ( org.apache.tajo.count.DatumFactory . createFloat8 ( 0 ) ) ) ; }
assertEquals ( Constants.DAX_TYPE_ROWON , resource . getCoreType () )
{ this . rotateCallback ( this . file ) ; this . writer . close () ; this . writer = this . lines . newFile () ; this . writer = new java.io.BufferedWriter ( new java.io.FileWriter ( new java.io.File ( file ) ) ) ; this . this . writer . close () ; }
{ new org.matsim.core.population.PopulationWriter ( scenario . getPopulation () ) . write ( ( ( ( ( "/initial_plurans_banplans_" + ( ( "pctgzFactorp" + "gz" ) ) + ( new org.matsim.utils.object.XmlAttributes ( scenario . getPopulation () . getPerson () ) ) ) + "gz" ) ) ) ; scenario . writeFile ( new java.lang.ObjectWriter ( 2 ) ) ; }
{ android.util.Log . d ( com.xl.waveform.evaluator.WaveformViewModule.TAG , "Tip over" ) ; if ( ( over ) != null ) { showTipuator ( "evaluator" ) ; } else { error = null ; } }
@ java.lang.Override public void positionModifierChange ( int [] oldP , int [] oldP , boolean newPivit , int posDown , boolean gameWon ) { this . positionChanged = true ; this . playerOldPivit = oldPivit ; this . playerOldPivit = playerOldPivit ; this . topDown = newPivit ( posDown , oldPivit ) ; this . topDown = playerOldPivit ; this . topDown = playerOldPivit ; }
config . getNotificationIcon ( config . getResNotificationIcon () )
public java.util.List < org.smartdata.model.SystemInfo > getByProperty ( java.lang.String property ) { org.springframework.jdbc.core.JdbcTemplate jdbcTemplate = new org.springframework.jdbc.core.JdbcTemplate ( dataSource ) ; return jdbcTemplate . query ( ( ( "select * from " + property ) + " where " ) , new java.lang.Object [] { property } , new org.smartdata.dao.metastore.RowMapper () ) ; }
updateDateRangeLabels ( timeFromTime )
if ( ( com.jiang.android.push.flyme.FlymeReceiver.mPushInterface ) != null ) { com.jiang.android.push.utils.JHandler . handler () . post ( new java.lang.Runnable () { @ java.lang.Override public void run () { com.jiang.android.push.flyme.FlymeReceiver.mPushInterface . onRegister ( context , registerStatus . getPushId () ) ; } } ) ; }
{ boolean followTerrain = isFollowTerrain () ; setFollowTerrain ( false ) ; super . render ( dc ) ; setFollowTerrain ( true ) ; }
jahirfiquitiva.iconiconshowcase.utilities.utils.Utils . runLicenseChecker ( this , jahirfiquitiva.iconshowcase.activities.activities.PahirUtils.CHECK_WITHLICE_CHECKER , jahirfiquitiva.iconshowcase.activities.activities.PahirGOOGLE_GOOGLE_FROM_INSTA_FROM_INSTZAPONUB , jahirfiquitiva.iconshowcase.activities.activities.AppToolbar . toTextBar () , this )
public double distance ( final geogebra.common.kernel.geos.GeoPoint p2 ) { double distance = java.lang.Double.POSITIVE_INFINITY ; for ( int i = 0 ; i < ( geoList . size () ) ; i ++ ) { final geogebra.common.kernel.geos.GeoElement geo = geoList . get ( i ) ; if ( geo . distance ( d ) ) { distance = d ; } } return distance ; }
{ java.lang.String sql = java.lang.String . format ( "DROP TABLE IF EXISTS %s" , tableName . getSid () , tableName . toLowerCase () ) ; try ( java.lang.String sql = java.lang.String . format ( "DROP TABLE IF EXISTS %s" , tableNameName ) ) { executeUpdate ( sql ) ; } catch ( java.sql.SQLException e ) { this . logger . error ( "SQLException" , e ) ; throw e ; } }
public void add ( int index , long element ) { boundsCheck ( index ) ; enlargeIfNeeded ( 1 ) ; java.lang.System . arraycopy ( array , index , array , ( ( index ) + 1 ) , ( ( end ) - index ) ) ; array [ index ] = element ; end = end ; }
sb . append ( line ) . append ( "\-8" )
{ checkExclusionOneWay ( assignment , roleA , assignment , roleB , checkExclusionOne , assignment , roleA , assignment ) ; checkRuleBBasedWay ( assignment , roleA , assignment , roleB , checkRuleBBasedWay ) ; checkRuleBorclusion ( assignment , roleA , assignment , roleB ) ; }
return tk.thebrightstuff.blindtale.utils.StringUtils . removeAccents ( refString ) ;
new po.UserPO ( 2 , "CustomerType" , "exal2097ebra" , "15018797lexu" , "95A" , 800 , 0 , null , null )
public static java.util.Date getLatestDate ( java.lang.Class articleClass ) { if ( ( com.cse10.database.DatabaseHandler . getRowCount ( articleClass ) ) == 0 ) { return null ; } org.hibernate.Session session = com.cse10.database.HibernateUtil . getSessionFactory () . openSession () ; java.sql.Date latestDate = ( ( java.sql.Date ) ( session . createCriteria ( articleClass ) . uniqueResult () ) ) ; session . setProjection ( new java.util.Date ( latestDate . getTime () ) ) ; session . close () ; return "createdProjections" ; }
{ scheduledExecutor . shutdownNow () ; uiModule () . close () ; collectorModule () . close () ; transactionModule () . close () ; if ( org.glowroot.log.Loggingback . shouldGlowlowicLogger ( chic.qos.classic.LoggerFactory . getILogger () ) ) { org.slf4j.Logger . close () ; } org.glowroot.log.FileLockFactory . closeFileLock () ; count . release () ; }
{ java.lang.String [] full_subject = subject . split ( "#" ) ; java.lang.String second_subject = full_subject [ 1 ] ; if ( ( full_subject [ 1 ] ) != "" ) { java.lang.String trimmed_part = second_subject [ java.lang. ] . trim () ; java.lang.String [] id_subject = trimmed_part . split ( " " ) ; return id_subject ; } else { return null ; } }
java.lang.String . format ( "%s. %s.f after %d %d %d %d %d %d" , %d %d %d %d" , ( ( getHeaderId () ) %d . getHeaderId () ) , ( ( getHeaderId () ) - 1.0 ) , ( ( this . rawScore , 100.0 ) * 100.0 ) , ( this . isForward () ? 1 : 0 ) , this . a1 , this . getToLength () , this . b2 , ( this . isForward () ? 1 : 0 ) , this . toString () , this . isForward () )
akka.actor.Props . create ( ch.hsrak.javapilot.akf.TrackRecognizer . class , getSelPatterns () , ( - 1 ) , alreadyChecked )
{ xyf.com.app.recycleviewtools.SoftInputUtils . hideSoftInput ( this ) ; adapter . clear () ; xyf.com.app.recycleviewtools.ProgressDialogUtils . showProgressDialog ( this ) ; xyf.com.app.searchframe.MusicSearchActivity.frame = xyf.com.app.searchframe.MusicSearchActivity.frame . getText () . toString () ; setTitle ( ( ( xyf.com.app.searchframe.MusicSearchActivity.frame ) + "" ) ) ; }
{ java.lang.String hdfsStoreName = "org.apache.kylin.storage.hdfs.HDFSResourceStoreTest" ; org.apache.kylin.common.persistence.ResourceStoreTest . testPerformance ( hdfsStoreName , org.apache.kylin.common.persistence.ResourceStoreTest . mockBaseUrl ( "ylinorg.apache.linhbase.TestBaseUrl" ) , kylinStoreTest ) ; }
{ return super . getUnlocalizedName ( stack ) ; }
{ if ( position < ( data . getCount () ) ) { return item ; } if ( position < ( data . getCount () ) ) { return item ; } java.lang.Object item = data . getItem ( position ) ; if ( item instanceof it.kacha.klob2.Blob.SlobBlobDescriptor ) { return ( ( it.kacha.klob2.Blob.SlobBlobDescriptor ) ( item ) ) . key ; } return position ; }
@ java.lang.Override protected java.lang.Boolean doInBackground ( java.lang.String . . params ) { try { mobop.booklistapp.api.Api book = mapper . readValue ( params [ 0 ] , mobop.booklistapp.api.Api . class ) ; book . addBook ( "Book" , mList ) ; } catch ( java.io.IOException e ) { return false ; } return true ; }
{ final org.openflexo.gefge.shapes.ShapeSpecification.ShapeType oldShapeType = this . shapeType . getStyleShapeType () ; if ( oldShapeType == ( org.openflexo.gefge.shapes.ShapeSpecification.Type.SSSS ) ) { return; } final org.openflexo.gefge.shapes.SpecificationSpecification.PropertyChange shape = this . shapeType . getShape () ; this . firePropertyChange ( org.openflexo.gefge.tools.control.shape.PropertyChangeSupport.STYLE_CLASS_CHANGED , this . getShapeSupport () , oldShapeType , this . getShapeSupport () ) ; this . firePropertyChange ( "shape" , this . pc , this . getShapeSupport () ) ; }
bundle . putInt ( "room" , 1 )
{ java.util.ArrayList < bb.tokenizer.Token > tokens = new java.util.ArrayList < bb.tokenizer.Token > () ; if ( str == null ) { return tokens ; } while ( ( str . length () ) > 0 ) { str = addNextToken ( str , tokens ) ; } line = 0 ; column = 1 ; return tokens ; }
@ java.lang.Override public void onSuccess ( java.lang.Void result ) { formDesignPanel . getSaveButton () . setText ( I18.CONSTANTS ) ; formDesignPanel . getSaveButton () . setEnabled ( true ) ; formDesignPanel . getSaveMessage () . setHTML ( I18.CONSTANTS ) ; formDesignPanel . getSaved () . setSavedGuard () . show ( true ) ; }
{ byte [] b = new byte [ length ] ; input . readFully ( b , new java.lang.String ( b , "UTF-8" ) ) ; this . sendMessage ( message ) ; }
{ myPanelBombArray.colorArray [ posX ] [ posY ] = posArray [ posY ] ; if ( ( myPanelBombArray.length ) == 0 ) { myPanelBombArray [ posX ] [ posY ] = 0 ; } repaint () ; }
new com.oracle.graal64.asm.al64.DAM64Instruction ( com.oracle.graal64.asm.al64.DAM64Vector.x_AVLen128 , false , target , true , cvd , false )
if ( ( filter == ( org.wordpress.android.models.PeopleFilterList.TEAM ) ) && ( mCanRefreshUsersUsers . fetch ( blogBlogId . getDotTable () , blogBlogId . getLocalTable () ) ) ) { return true ; } else if ( filter == ( org.wordpress.android.models.PeopleFilterList.FOLLOWERS ) ) { return true ; }
protected void createHandleForActiveNode () { nodebox.client.Node activeNode = getActiveNode () ; if ( activeNode != null ) { nodebox.client.RepositoryHandle repositoryHandle = nodebox.client.RepositoryHandle . of () . getHandle () ; if ( repositoryHandle . hasClass () ) { nodebox.client.Node handle = repositoryHandle . construct ( activeNode ) ; if ( handle != null ) { viewerHandle . set ( handle ) ; } else { viewerHandle . set ( null ) ; } } } else { viewerHandle . set ( this ) ; viewerHandle . set ( null ) ; } }
datesStream . readRecord ( buffer2 , 0 , 4 )
mailConfigurationRepository . findByEvent ( LocationConfiguration.ERROR_MESSAGE )
( ( ( java.lang.String . valueOf ( number . getYear () ) ) + "," ) + ( java.lang.String . valueOf (TIMEOUT ) . getMonth () ) ) + ","
{ java.lang.String str = "" ; for ( int i = 0 ; i < ( group.length ) ; i ++ ) { str = str . concat ( group [ i ] ) ; } str . concat ( ":" ) ; return str . concat ( group [ ( ( group.length ) - 1 ) ] ) ; }
verifyThatOnlyState ( "Only one of the search showing" , search , org.hamcrest.core.Is . is ( 1 ) )
{ if ( connection.state . compareAndSet ( com.datastax.driver.core.OPEN , com.datastax.driver.core.GONE . decrementAndGet () ) ) { connections . remove ( connection ) ; } if ( manager . blockingExecutor () . submit ( new java.lang.Runnable () { @ java.lang.Override public void run () { addUnderConnectionIfUnderMaximum ( connection ) ; } } ) ; }
{ path = path . trim () ; if ( ( ( ( path . endsWith ( DataConstants.ROSTER_FILE_EXTENSION ) ) || ( path . endsWith ( DataConstants.ROSTER_FILE_EXTENSION ) ) ) || ( path . endsWith ( DataConstants.ROSTER_FILE_EXTENSION ) ) ) || ( path . endsWith ( DataConstants.ROSTER_FILE_EXTENSION ) ) ) { return true ; } return false ; }
new com.example.lachlan.myfirstapp.code.SubrictDist ( context , loc , this )
{ int l = data.length ; if ( length ) putInt ( l ) ; l *= com.heerbann.unsafe.UnsafeBuffer.sizeOfLong ; ensure ( ( ( position ) + l ) ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . copyMemory ( data , com.heerbann.unsafe.UnsafeBuffer.longArrayOffset , null , ( ( pointer ) + ( position ) ) , l ) ; position += l ; end = ( ( position ) > ( end ) ) ? position : end ; }
{ org.lwjgl.opengl.GL11 . glEnable ( GL11.GL_BLEND ) ; org.lwjgl.opengl.GL11 . glBlendFunc ( GL11.GL_SRC_ALPHA , GL11.GL_ONE_MINUS_SRC_ALPHA ) ; org.lwjgl.opengl.GL11 . glEnable ( GL11.GL_DEPTH_TEST ) ; org.lwjgl.opengl.GL11 . glDisable ( GL11.GL_BLEND ) ; programMatrix . getIdentityMatrix () . render ( gl ) ; leMatrixUse . render ( gl ) ; }
{ java.io.File file ; java.io.File absoluteFile = null ; if ( ( absolute != null ) && ( ! ( org.apache.commons.lang3.StringUtils . isEmpty ( basePath ) ) ) ) { if ( ( absolute != null ) || ( absolute . isAbsolute () ) ) { file = new java.io.File ( basePath ) ; } else { file = new java.io.File ( fileName ) ; } } return new java.io.File ( file , fileName ) ; }
log ( ( "Connection to lost cause! " + cause ) )
{ java.lang.String name = request . getParameter ( "name" ) ; java.lang.String error = request . getParameter ( "args" ) ; if ( error != null ) { response . sendRedirect ( ( "home?doerror=" + error ) ) ; } else { response . sendRedirect ( "home.do" ) ; } }
{ actorConfigTab.saveSignedInCallback . onSuccess ( true ) ; gov.nist.dstools.toolkit.client2.event.X2EventUtils . getEventBus () . fireEventUpdatedEvent ( actorConfigTab ) ; }
return value . trim () ;
public void assertEquals ( java.lang.Object actual , java.lang.Object expected ) { if ( ( expected == null ) && ( actual == null ) ) return; if ( ( expected != null ) && ( expected . equals ( actual ) ) ) return; fail ( java.lang.Integer . format ( expected , actual ) ) ; }
{ java.lang.String renderedEarned = client . getServer () . getCredCurrentSessionOnCurrent () ; int lineToRemove = char . length () ; java.lang.System.out . print ( "\r" ) ; java.lang.String renderedEarned = ( ( java.lang.String ) ( e . format ( " %d: %s | remainingFrames: %s | rendered: %s" , renderedEarned , ( lineToRemove != null ? "unknown" : "unknown" ) ) ) ) ; for ( int i = 0 ; i < lineToRemove ; i ++ ) { java.lang.System.out . print ( ( "Exiting status by a line is no status by: " + i ) ) ; } this . update () ; }
{ int currentIndex = index ; org.bucaojit.filter.Slot currentSlot = set . get ( ( currentIndex - 1 ) ) ; int runStart = 0 ; int runStart = currentSlot . getMetadata () . isClear () ; if ( runStart < 0 ) return - 1 ; return findQuientStart ( currentIndex , runStart , runStart ) ; }
@ java.lang.Override public void placeInPortal ( net.minecraft.entity.Entity entity , double motionX , double motionY , double rotation , float motionZ ) { world . loadChunkServer ( ( ( int ) ( x ) ) , ( ( int ) ( y ) ) , z ) ; entity.motionX = motionX ; entity.motionY = motionY ; z = motionZ ; }
if ( ( gameResult . getPoints () . get ( i ) ) == points ) { gameResult . setPosition ( ( i + 1 ) ) ; }
{ final int mask = 1 < < 7 ; int tempRegister = getPanelStatus ( room ) ; int tempBackRegister = getPanelBackupStatus ( room ) ; if ( HumidWarn ) { tempRegister |= mask ; tempBackRegister |= mask ; } else { tempRegister &= mask ; tempBackRegister &= mask ; } modbusSlave . setRegister ( ( ( edu.ncku.uscc.util.DataStoreManager.ADDR_STATUS ) + ( offset ) ) , tempRegister ) ; setPanelBackup ( tempBackRegister , edu.ncku.uscc.util.DataStoreManager.ADDR_STATUS ) ; }
{ org.eclipse.xtend2.lib.StringConcatenation _builder = new org.eclipse.xtend2.lib.StringConcatenation () ; _pivot = e . getRefType () ; java.lang.String _string = _string . toString () ; java.lang.String _replace = e . getRefType () ; _builder . replace ( "replace::" , "" ) ; return _builder . toString () ; }
{ this . lexevsRemoteApiUrl = ( ( java.lang.String ) ( properties . get ( "lex.evsRemoteApiUrl" ) ) ) ; if ( ( ( this . lexevsRemoteApiUrl ) != null ) && ( this . lexevsRemoteApiUrl . isEmpty () ) ) { properties = ( ( java.lang.String ) ( properties . get ( edu.mayo.framework.service.plugin.ct.BigGlexoUtilsService.BigL_CONFIG_FILE_ENV ) ) ) ; } else { properties = this . lexevsRemoteApiUrl ; } this . useRemoteApi = true ; }
public java.lang.String addDate ( java.lang.String date , char typeRepeat ) { br.com.inmypocket.controllers.RocketDate dateCTR = new br.com.inmypocket.controllers.RocketDate () ; switch ( typeRepeat ) { case 'D' : return dateCTR . add ( date ) ; case 'M' : return dateCTR . add ( date ) ; case 'A' : return dateCTR . add ( date ) ; default: return dateCTR . add ( date ) ; } }
( tailer.store . refCount () ) > 0
{ java.lang.String baseUri = request . getPathInfo () . getServiceRoot () . toASCIIString () ; if ( baseUri . endsWith ( "/" ) ) { baseUri = baseUri . substring ( 0 , ( ( baseUri . length () ) - 1 ) ) ; } for ( org.apache.olingo.odata2.api.PathSegment segment : getPrecedSegmentsSegments () ) { baseUri += ( "/" + ( segment . getPath () ) ) + ( getPath () ) ; } return baseUri ; }
fg . getId () . equals ( user . getId () )
{ com.clothapp.resources.Image to = new com.clothapp.resources.Image ( file . getObjectId () , object . getString ( "user" ) , object . getList ( "like" ) , object . getInt ( "n" , "hasLike" ) , object . getList ( "list" ) , object . getList ( "tip" ) ) ; mPagerAdapter . addImage ( to ) ; }
{ java.lang.String []Formats = ( ( java.lang.String [] ) ( formats . clone () ) ) ; java.lang.String [] f = ( ( java.lang.String [] ) ( f . getFormats () ) ) ; assertTrue ( "Wrong" , ( ( formats [ 0 ] . equals ( f ) ) && ( ! ( formats [ 0 ] . equals ( f ) ) ) ) ) ; assertTrue ( "Modified copied value" , f ) ; }
{ net.minecraft.client.entity.EntityPlayer player = net.minecraft.client.Minecraft . getMinecraft () . thePlayer ; if ( ( player . updateGroundPlayer () ) == null ) { super . updateMoveHook () ; } else if ( ( originalMoveStateHandler ) == null ) { originalMoveState = player.hook ; } else { this . originalMoveState = player.movement ; this . updateBindSettings = net.minecraft.client.Minecraft . getMinecraft () . gameKey () ; this . keyPressed = player . getIseakne () ; } }
{ centuryPopup . clear () ; if ( ( ( centurySelectedValues ) != null ) && ( ( centurySelectedValues . size () ) > 0 ) ) { centuryPresenter . setAddResourceValues ( centurySelectedValues ) ; } centuryPopup . getWidget () . add ( centuryPopup ) ; centuryPopup . getElement () . getStyle () . show () ; }
{ puzzle = puzzle.PuzzleState.Neighbor . getBestNeighbor ( current . getValue () ) ; if ( ( current . getState () ) >= ( neighbor . getState () ) ) return current ; current . addAction ( neighbor . getValue () ) ; return ( ( interfaces.Problem ) ( current ) ) ; }
switch ( v . getId () ) { case R.id.btnPlayTimer : android.os.System.out . println ( ( "Mohseen " + ( elapsedRealtime () ) ) ) ; com.mkhan.myapplication.TimerActivity.isTimer = true ; break; case android.text.Button.Button v : com.mkhan.myapplication.TimerActivity.isTimer = false ; break; }
{ java.lang.Object content = msg . getContentObject () ; if ( content == null ) return null ; else return content . getClass () ; }
UpdateAdapter . setShowSql ( true )
( ( float ) ( height ) )
hero . toggleStop ( true )
{ java.lang.Long id = bookModel . postDummy ( id ) ; java.lang.Thread . yield () ; com.springernature.api.spring.RestTemplateEntity entity = com.springernature.api.spring.RestTemplateEntity . get ( id ) ; this . response = new java.util.HashMap < java.net.URI , java.lang.Object > () ; entity . baseUrl ( com.springernature.api.spring.RestTemplateEntity . class ) . build () ; org.junit.Assert . assertEquals ( HttpStatus.OK , ( ( "/" + ( response . getStatusCode () ) ) + "/" ) ) ; }
new com.astedtrobin.objecthandler.ConcurrentObjectWorker ( i , worker )
{ if ( resultObject == null ) {} else if ( resultObject instanceof java.lang.Exception ) { mImage . onConsumerBytesError ( ( ( java.lang.Exception ) ( resultObject ) ) , mAsset ) ; } else if ( resultObject instanceof byte [] ) { mImage . onConsumerBytesError ( ( ( byte [] ) ( resultObject ) ) , mAsset ) ; } }
{ super . onCreate ( savedInstanceState ) ; tcBaseDelegate . setOverWriteTitle ( false ) ; tcBaseDelegate . onCreate ( this , savedInstanceState ) ; try { app.ApplicationInterface . getBase () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } }
{ javafx.fxml.FXMLLoader loader = new javafx.fxml.FXMLLoader () ; loader . setLocation ( controller.MainApp . class . getResource ( "../view/PuzzleLayout.fxml" ) ) ; javafx.scene.layout.AnchorPane anchor = loader . load () ; controller.PuzzlePaneController . puzzleList ( anchor ) ; }
{ java.util.ArrayList < java.lang.String > categoryEndList = new java.util.ArrayList < java.lang.String > () ; if ( categories != null ) { for ( com.nusclimb.live.crimp.common.json.CategoriesResponseBody.CategoryInfo c : categories ) { categoryEndList . add ( c . getCategories () ) ; } } return categoryEndList ; }
{ super . onViewCreated ( view , savedInstanceState ) ; final Presenter presenter = getPresenter () ; if ( presenter != null ) { presenter . bindButterKnife ( view , this ) ; presenter . setView ( presenter ) ; } }
this . configuration . equals ( configuration . getName () )
java.lang.System.out . println ( minute )
if ( c == '\n' ) { java.lang.String output = "" ; buffer = split . split ( "\t" ) ; return output ; } else { buffer += c ; }
{ android.util.Log . d ( org.example.xwalk.embedded.XWalkExoMediaPlayer.TAG , "==== in startMediaPlayer" ) ; if ( ( ( mMediaPlayer ) != null ) && ( ( mMediaPlayer ) != null ) ) { mMediaPlayer . start () ; } else { if ( ( playerWhenReady ) != null ) { playerWhenShow . setPlay_CustomInfo ( ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE ) ; } } }
db . get ( userName )
( int ) ( ( mDuration / 1000 ) * seconds )
@ java.lang.Override public void onBackPressed () { int currentPos = mViewPager . getCurrentItem () ; java.lang.String tag = mSectionsPagerAdapter . getFragmentTag ( currentPos ) ; if ( tag != null ) { android.support.v4.app.Fragment currentFragment = getSupportFragmentManager () . findFragmentByTag ( tag ) ; if ( currentFragment instanceof tw.edu.ntust.mit.et.mit.jermalacca.MainActivity.OnBackPressedListener ) { ( ( tw.edu.ntust.mit.et.mit.jermalacca.MainActivity.OnBackPressedListener ) ( currentFragment ) ) . onBackPressed () ; } } }
{ com.github.TimeParser tp = new com.github.TimeParser () ; long [] time = tp . GetInput ( str ) ; java.util.Date date0 = new java.util.Date ( time [ 0 ] ) ; java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat ( "yyyy-MM-dd HH:mm:ss" ) ; sdf . setTimeZone ( java.util.TimeZone . getTimeZone ( "GMT-4" ) ) ; return sdf . format ( formattedDate ) ; }
private static java.lang.String toPath ( java.lang.String rawpath ) { java.nio.file.Path path = java.nio.file.FileSystems . getDefault () . getPath ( rawpath ) ; if ( java.nio.file.Files . exists ( path ) ) { try { path = toPath . toReal () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } else { path = toAbsolutePath () ; } return path . toString () ; }
{ android.graphics.Bitmap thumbnail = android.graphics.ThumbnailUtils . extractThumbnail ( bm , 213 , 213_thumbnail ) ; btn_thumbnail . setImageBitmap ( thumbnail ) ; this . thumbPath = thumbPath ; btn_thumbnail . setVisibility ( View.VISIBLE ) ; }
{ if ( endPos < startPos ) { throw new java.lang.RuntimeException ( ( ( "endPos: " + startPos ) + " endPos " ) ) ; } int i = endPos ; for ( org.etoollang.agetool.zed.AnalyzedToken token : tokens ) { for ( org.etoollang.agetool.zed.AnalyzedToken : token . getRead () ) { if ( hasToken ( token . getRead () , startPos ) ) { return true ; } } } return false ; }
{ fadeOutLight . setActive ( false ) ; fadeInLight . setActive ( true ) ; if ( ( timePassedDuringFadeIn ( ( - 1 ) ) ) < ( timeToPassedDuringFadeIn ( ( - 1 ) ) ) ) { fadeInLight . setColor ( new com.badlogic.gdx.graphics.Color ( 0 , 0 , 0 ) ) ; fadeInLight . setCombinedMatrix ( cameraMatrix ) ; timePassedDuringFadeIn ( ( - 1 ) ) . isNew () ; } else { fadeInLight . setActive ( false ) ; timePassedDuringFadeIn += delta ; } }
{ java.lang.Class . forName ( "org.sqlite.JDBC" ) ; try ( java.sql.DriverManager con = java.sql.DriverManager . getConnection ( ( ( "jdbc:sqlite:" + property ) + "/dbProject" ) , "" , new chatbox.server.ehabj.User ( "server" , "23" , "23" ) , "abfg" ) ) { "23" , "jshfg" , "shfg" ) ; return true ; } catch ( java.lang.Exception ex ) { java.lang.System.out . println ( "Exception already use user" ) ; return false ; } }
{ if ( ( currentImage ) == null ) { currentImage = new java.awt.image.BufferedImage ( ( ( java.awt.image.BufferedImage ) ( currentImage ) ) , currentCrowd . getWidth () , currentCrowd . getHeight () ) ; } }
{ super . onAttach ( context ) ; try { mCallBack = ( ( com.example.user.ponatimeu.fragment.SignInCallBackFragment.CallBack ) ( context ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.ClassCastException ( ( ( context . toString () ) + " must must" ) ) ; } }
{ registry . getSpecies ( ch.formula ) ; int quantity = ( ( int ) ( ( ch.memical ) * ( properties . getMoleulesPerM () ) ) ) ; return; }
{ str = str . replaceAll ( "\\$" , "" ) ; int registerNumber = java.lang.Integer . parseInt ( str ) ; return registerNumber < 1 ; }
{ double [] cluster1 = new double [ cluster1.length ] ; for ( int i = 0 ; i < ( cluster1.length ) ; i ++ ) { if ( ( ( java.lang.Math . abs ( ( ( cluster1 [ i ] ) - ( cluster2 [ i ] ) ) ) ) ) > 2 ) return false ; } return true ; }
handleDownloadAPI ( downloadLink , true , 0 , "direct_link_plugins" , false )
{ java.util.Properties x_settings = new java.util.Properties () ; x_settings . getChildren () ; for ( java.lang.Object x_property : data.ElementElem.properties_property ) { x_property.ElementElem x_property = ( ( data.ElementElem ) ( x_property.ElementElem . getAttributeValue (N_propertyConstants.PROPERTY_NAME_PROPERTY_NAME_PROPERTY_VALUE ) ) ) ; x_settings . setProperty ( x_property.Constants.PROPERTY_NAME_PROPERTY_VALUE , x_property.Value ) ; } return x_settings ; }
new workSQL.Employee ( hold , "" , false )
{ de.baleipzig.iris.common.Dimension dim = this . dim ; for ( int i = 0 ; i < ( this . dim . getY () ) ; i ++ ) { de.baleipzig.iris.model.node.INode < java.util.Vector > row = new java.util.Vector <> () ; for ( int j = 0 ; j < ( this . dim . getX () ) ; j ++ ) { row . add ( layer ) ; } } }
switch ( discovered ) { case scale : tooltip . add ( bin.nieecorebin.core.util.I18Nise.database . add ( "discovered" ) ) ; break; case UNDED : if ( ( local ) != null ) { tooltip . add ( bin.nieecorebin.core.util.I18Nise.database . add ( "discovered" ) ) ; } break; case UNDED : if ( ( local ) != null ) { tooltip . add ( local ) ; } break; }
{ super . onDestroyView () ; try { releasePlayer () ; cgstevende.delende.ui.recipes.StepDetailsFragment.mMediaSession . setActive ( false ) ; } catch ( java.lang.NullPointerException exception ) { ex . printStackTrace () ; } catch ( java.lang.Exception ex ) { android.util.Log . e ( "BAL ---own" , ( "ln unexogol exception: " + ( ex . getMessage () ) ) ) ; } }
<EMPTY>
{ getCompilationProfile () . profileDirectCall ( this , args ) ; try { java.lang.Object result = doInvoke ( args ) ; if ( com.oracle.truffle.api.CompilerDirectives . inCode () ) { result = compilationProfileReturnValue ( this . compilationProfile ) ; } return result ; } catch ( java.lang.Throwable t ) { throw com.oracle.truffle.truffle.TargetTypeException ( t ) ; } }
{ file = new java.io.FileInputStream ( inputFile ) ; this . mediaType = mediaType ; return file ; }
originResource . getResourceGroup ( origin )
if ( ( timelineClientGetUserListener ) != null ) { timelineClientGetUserListener . onGet ( user ) ; }
if ( ( ships . size () ) > 7 ) { org.openplayer.ars.Stips ship = ships . get ( 0 ) ; if ( ( ship . isStarBase () ) && ( ship . getFlag () ) ) { return true ; } }
{ android.content.IntentFilter filter = new android.content.IntentFilter () ; for ( com.example.pa.utils.ApplyExpPolicy.ApplyJson policy : policies ) { if ( policyId == ( com.example.pa.utils.UploadPolicy.POWER_ACTION ) ) filter . addAction ( Intent.POWER_CONNECTED ) ; else if ( policyId == ( com.example.pa.utils.UploadPolicy.WIFI_STATE_CHANGED ) ) filter . addAction ( WifiRecieManager.WIFI_STATE_CHANGED ) ; } registerBroadcast ( filter ) ; }
{ java.lang.StringBuilder s = new java.lang.StringBuilder () ; if ( ( this . stackSpecialFunctions.CalledOfRecursively . size () ) > 0 ) { stackSpecialFunctions.CalledOfRecursively . removeLast () ; } java.lang.String text = "$vFreeMove0" ; s . append ( text ) ; return res . toString () ; }
assertEquals ( defaultCharset . getCharset () , layout . getCharset () )
{ com.google.android.gms.auth.api.signin.GoogleSignInOptions gso = new com.google.android.gms.auth.api.signin.GoogleSignInOptions.Builder ( com.google.android.gms.auth.api.signin.GoogleSignInOptions.DEFAULT_SIGN_IN ) . requestEmail () . build () ; mGoogleApiClient = new com.google.android.gms.common.api.GoogleApiClient.Builder ( this ) . addApi ( Auth.GoogleApiClient.API_SIGN_IN_API , gso ) . build () ; mGoogleApiClient . connect () ; super . onStart () ; }
private java.lang.String getTrailerID ( org.verapdf.model.impl.cos.COSArray.COS ids ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; for ( org.verapdf.model.impl.cos.COSBase id : ids ) { builder . append ( id ) . append ( ( ( org.verapdf.model.impl.cos.COSString ) ( ph . get () ) ) ) ; } return builder . toString () . substring ( 0 , ( ( builder . length () ) - 2 ) ) ; }
sellService . write ( products , outPutFilePath , result )
int amount
new org.gitlab4j.api.GitLabApi ( url , session , password , session )
{ text = new javax.swing.JTextField ( new javax.swing.JTextField ( guiGUI.finalSize ) , new java.awt.Dimension ( width , height ) ) ; editable . setEditable ( editable ) ; if ( ! ( editable ) ) { editable . setBackground ( null ) ; } return editable ; }
final java.util.List < java.security.Principal > principals = new java.util.HashSet <> () ;
private void add ( com.google.gson.JsonArray cardsJson ) { for ( int i = 0 ; i < ( cardsJson . size () ) ; i ++ ) { cardsJson . add ( new org.leanpoker.player.JsonObject ( cardsJson . get ( i ) . getAsJsonObject () , cardsJson . get ( "suit" ) . getAsString () ) ) ; cardsJson . get ( "rank" ) . getAsString () ; } }
public void startService ( final int target ) { new java.lang.Thread ( new java.lang.Runnable () { @ java.lang.Override public void run () { if ( checkAccess () ) { startActivity ( new android.content.Intent ( com.example.hjk.testing.MainActivity . this , com.example.hjk.testing.Info . class ) ) . putExtra ( "id" , target ) ; } else { android.os.Looper . loop () ; } } } ) . putExtra ( "target" , target ) . prepare () ; }
deck [ i ]
new ru.bigspawn.parser.parser.PortalParser ( new com.gargoylesoftware.htmlunit.WebClient () , url )
public void refreshLoc () { locations . clear () ; for ( org.Point p : selectedHPLocations . getLocations () ) { javafx.scene.control.ChoiceBox < org.scene.control.Choice > cb = new javafx.scene.control.ChoiceBox <> () ; cb . setItems ( java.util.Collections . observable ( p ) ) ; locations . add ( cb ) ; } }
if ( ( reentrant != null ) && ( reentrant . isSame () ) ) { reentrant ( true ) ; } else { while ( ! ( cas . compareAndSet ( false , true ) ) ) { waitForSignal () ; reentrant = new org.ivuar.utils.lock.Reentrant () ; } }
{ byte [] buffer = this . socket . readPacket () ; byte buff = buffer.length ; buffer [ ( ( buffer.length ) - 1 ) ] = new byte [] { ( ( byte [] ) ( bytes ) ) } ; if ( buff == ( org.synapse.techxit.api.network.lib.ServerConnection.BYTES_BYTES ) ) { if ( ( buffer.length ) > 4 ) { return buffer ; } } }
{ com.intellij.openapi.util.TextRange . assertProperRangeInsideHostRange ( range ) ; java.lang.String subHost = range . getTextInsideHost () . substring ( myHost . getRawString () ) ; if ( subHost != null ) { outChars . append ( subText ) ; } else { outChars = new java.util.ArrayList < com.intellij.openapi.util.Ref < com.intellij.openapi.util.Ref > > () ; } int [] sourceRef = new int [] { sourceRef , subHost . get ( sourceRef ) } ; return true ; }
{ bean.School school = schoolList . get ( 0 ) ; schoolHelper . DateString2School ( school ) ; mv . addObject ( "deadLine" , school ) ; }
@ java.lang.Override public void onClick ( android.view.View view ) { if ( ( ( txt_speech ) != null ) && ( ! ( txt_speech . isSpeaking () ) ) ) { if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { txt_speech . speakToSpeech ( words [ words [ words [ words ] , TextToSpeech.QUEUE_FLUSH_QUEUE , null , null ) ; } else { txt_speech . speakToSpeech ( words [ words ] , TextToSpeech.QUEUE_FLUSH_QUEUE , null , null ) ; } } }
{ root = new org.quicktionary.backend.tools.tary.ionary.ionary ( org.quicktionary.backend.tary.ary.ionary.TYPE_ROOT ) ; org.quicktionary.backend.tary.ion.ary.ary root = new org.quicktionary.backend.tary.ary.ary.ion ( org.quicktionary.backend.tary.ary.ary.TYPE_ROOT ) ; root . appendChild ( text ) ; org.quicktionary.backend.tary.ary.ary.ary text = new org.quicktionary.backend.tary.ary.ary.ary.ary ( org.quicktionary.backend.tary.ary.TYPE_PARAGAPH ) ; org.quicktionary.backend.tary.ary.ary.RAPH_TYPE root = root . generate ( string ) ; org.quicktionary.backend.tary.backend.tary.ary.Sorry_TYPE . appendChild ( text ) ; root . setContent ( ( ( "Sorry couldn't the word " + "." ) + "." ) ) ; root . appendChild ( text ) ; root . appendChild ( org.quicktionary.backend.tary.backend.tary.RAPH_TYPE ) ; return root ; }
{ javafx.scene.Parent root = javafx.fxml.FXMLLoader . load ( getClass () . getResource ( "/views/home.fxml" ) ) ; javafx.stage.Stage budget = ( ( javafx.stage.Stage ) ( javafx.stage.Stage . getScene () . getWindow () ) ) ; season . save ( "save1.json" ) ; stage . getScene () . setRoot ( budget ) ; }
{ int eventTypeId = java.lang.Integer . parseInt ( v . getTag () ) ; me.howesin.coliative.rollinit.CombatAdapter.CombatEventTypeAdapter.colibes_select = v . getId () ; if ( eventTypeId == ( R.id.colibes_select ) ) { me.howesin.coliative.rollinit.CombatAdapter.CombatEventTypeAdapter.colibes_select = v . getId () ; } else if ( eventTypeId == ( R.id.colibes_select ) ) { me.howesin.coliative.rollinit.CombatAdapter.CombatEventTypeAdapter.HEASE_THCREASE_CREASE_ITEM ; } else if ( eventTypeId == ( R.id.colibes_add ) ) { me.howesin.coliative.rollinit.CombatAdapter.CombatEventTypeAdapter.HEINCREASE_CREASE_ITEM = ( ( me.howesin.coliative.rollinit.CombatAdapter.CombatEventTypeAdapter.HEALTHCREASE_ITEM ) ( v . getTag () ) ) ; } clickCombatListener ( me.howesin.coliative.rollinit.CombatAdapter.CombatEventTypeAdapter.HEINCREASE_ITEM ) ; }
{ assert ( stock.finance.Stock ) != null ; stock.finance.YahooFinance symbol = stock . get ( name ) ; java.lang.String name = stock . getName () ; if ( name . compareTo ( "N/A" ) ) return - 1 ; java.math.BigDecimal price_decub = stock_ . get ( java.math.Quote . getPrice () ) ; return price_decub . doubleValue () ; }
{ final net.minecraft.nbt.NBTTagList furnaceTagList = compound . getTagList ( com.minecolonies.coremod.colony.buildings.BuildingCook.TAG_FURNACES , Constants.FUND_COMPOCES ) ; if ( furnaceTagList != null ) { for ( int i = 0 ; i < ( furnaceTagList . tagCount () ) ; i ++ ) { furnaceCompound . add ( net.minecraft.nbt.NBTUtil . get ( furnaceCompound . getPosAtTag ( i ) ) ) ; } } }
private org.bitcoinj.core.Transaction loadDiskTransactionFromHash ( java.lang.String txHash ) throws com.bitdubai.fermat_chb_layer.crypto_plugin.crypto_developercoin_1.version_1.exceptions.CantLoadFileException { try { com.bitdubai.fermat_chb_layer.android.system.file.CantFileSystemFile pluginFile = com.bitdubai.fermat_chb_layer.crypto_plugin.android.crypto_developercoin_1.version_1.exceptions.CantLoadFile . fromTextFromFile ( transactionId , txHash ) ; this . pluginTransaction = new org.bitcoinj.core.Transaction ( com.bitdubai.fermat_chb_layer.network.crypto_developercoin.version_1.exceptions.CantLoadFileParser.CONTENT_PARAMETERS_MANT_PER_CONTENT , com.bitdubai.fermat_chb_layer.network.crypto_developercoin.version_1.exceptions.CantLoadFileParser.CONTENT_PARAMETERS_CONTEXT_PER_CONTENT ) ; } catch ( java.lang.Exception e ) { throw new com.bitdubai.fermat_chb_layer.core.exceptions.SantLoadErrorException ( ( "Error while loading File " + ( e . getText () ) ) , " Error" , e ) ; } return this . pluginTransaction ; }
proto.game.scene.Prop . tilesUnder ( tiles , type , x , y , facing )
{ kz.muk.hamedex.changer.util.orm.db.ORMormFactory . getArticleContext ( getBaseContext () , response . getBaseContext () ) ; }
{ int id = java.lang.Integer . parseInt ( movieChosenController . movieMovie ( movieId , panel , rentalInfo , id ) ) ; return id ; }
com.google.common.base.Preconditions . checkArgument ( ( value == null ) )
{ if ( ( game.tasks . size () ) > 0 ) { game.tasks . get ( 0 ) . text ( 0 , task . getName () , 0 ) ; } else { tasks . translate ( 20 , 0 ) ; appletNo ( 0 , 0 ) ; } }
{ com.example.sayli.nchsgetchsset.Logs point = list . get ( i ) ; android.content.Intent startCallReport = new android.content.Intent ( this , com.example.sayli.nchsset.StatusReport . class ) ; startCallReport . putExtra ( "crn" , point . getCmob () ) ; startActivity ( startCallReport ) ; }
public java.util.List < java.io.File > addUpperItem ( java.util.List < java.io.File > oldList ) { if ( android.text.TextUtils . isEmpty ( mCurrentPath ) ) { throw new java.lang.RuntimeException ( "mCurrentPath is null!" ) ; } java.io.File upperFile = new java.io.File ( mCurrentPath ) . getParentFile () ; oldList . add ( 0 , upperFile ) ; return oldList ; }
edu.ucsd.sccn.LSL.inst . lsl_pull_chunk_d ( obj , data_buffer , timestamp_buffer , data_buffer.length , timestamp_buffer.length , timeout , ec )
for ( int i = 3 ; ( i * i ) <= p ; i += 2 ) if ( ( p % i ) == 0 ) return false ;
{ com.maschiffken.senever.android.model.FieldDescriptor descShips = new com.maschiffken.senever.android.model.FieldDescriptor () ; descShips.numberOfPlaced = descShips.length ; descShips.ships = new java.util.ArrayList < com.maschiffken.senever.android.model.FieldDescriptor > () ; for ( com.maschiffken.senever.android.model.ShipShipDescriptor ship : descShips ) { descShips . add ( new com.maschiffken.senever.android.model.FieldDescriptor ( ship ) ) ; } return shipDescShips ; }
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/list" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.ArrayList < be.ehb.server.rest.database.model.Avatar > list_user_id ( @ org.springframework.web.bind.annotation.RequestParam ( value = "user_id" , defaultValue = "" ) int user_id ) { if ( ( user == null ) && ( ! ( "" . equals ( user_id ) ) ) ) { return be.ehb.server.rest.database.dao.UserAvatarDao . getAv_user_id ( user_id ) ; } else { return be.ehb.server.rest.database.dao.UserAvatarDao . getAv_user_id ( user_id ) ; } }
@ pt.webdetails.cfr.GET @ pt.webdetails.cfr.Path ( value = "/createFolder" ) public void createFolder ( @ javax.ws.rs.core.Context javax.servlet.http.HttpServletRequest request , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletResponse response ) throws java.lang.Exception { java.lang.String path = pt.webdetails.cfr.CasApiUtils . getMessage ( request , request ) ; if ( ( response == null ) || ( org.apache.commons.lang.StringUtils . isBlank ( path . toString () ) ) ) { throw new java.lang.Exception ( "path is empty" ) ; } response . put ( "path" , new org.apache.commons.lang.JSONObject ( path . toString () ) ) ; }
testSuitePath = ( projTFPath . getText () ) + ( globalProperties . get ( "properties" ) )
{ java.io.InputStream verStream = getClass () . getClassLoader () . getResourceAsStream ( com.helixmobileapp.system.server.VersionManager.version ) ; java.util.Properties verProps = new java.util.Properties () ; verProps . load ( verStream ) ; majorVer = verProps . getProperty ( "
( ( data . size () ) - 1 )
{ com.kirleoujp.vaetstore.springadin.domain.Account account = ( ( com.kirleoujp.vaetstore.springadin.ui.util.CurrentAccount ) ( getBanner () . get ( accountOption ) ) ) ; if ( ( account != null ) && ( ! ( com.google.common.base.Strings . isNullOrEmpty ( account . getBannerName () ) ) ) ) { account . getBannerName () . setValue ( bannerLayout . getBannerName () ) ; } account . setStyleName ( bannerLayout . getBannerName () ) ; account . getBannerVisible () . setValue ( true ) ; }
{ super . onCreate ( savedInstanceState ) ; rustelefonen.no.driketkevetkevetke_information.android.DBSeeder . seedDB ( this ) ; android.content.Intent intent = new android.content.Intent ( this , rustelefonen.no.driketkevetke_information.android.MainActivity . class ) ; startActivity ( intent ) ; }
setServiceTitle ( htmlTitle , collectionTitle , new com.google.gwt.user.client.rpc.AsyncCallback < java.lang.String > () { @ java.lang.Override public void onSuccess ( java.lang.String result ) { getView () . getFrame () . setUrl ( result ) ; } @ java.lang.Override public void onFailure ( java.lang.Throwable caught ) {} } )
public static org.kentuni.Weather.Station getDriver ( ) throws java.io.IOException { if ( ( org.kentuni.Drivers.DAD.instance.WeatherStation.Drivers ) == null ) { synchronized ( org.kentuni.Drivers.DAD.instance.WeatherStation.Drivers ) { if ( ( org.kentuni.Drivers.CAD.instance.WeatherStation.Crivers . getInstance ( org.kentuni.Drivers.CAD.instance.WeatherStation.Crivers . class ) ) == null ) { org.kentuni.Drivers.DAD.instance.WeatherStation.Crivers . getInstance ( new org.kentuni.Drivers.B2D ( IStation.CADIUS_1 , IStation.CADIUS_1 ) ) ; } } } return org.kentuni.Drivers.DAD.instance.WeatherStation.Drivers ; }
( value & 255 ) & sector
{ int n = java.lang.Math . abs ( ( ( GraphComponents ) == null ? GraphComponents.flag : GraphComponents.flag ) ) ; for ( GraphNode [] nodes : GraphNode [ n ] ) { nodes [ n ] . add ( nodes . get ( n ) ) ; } return nodes ; }
if ( ! ( org.springframework.util.StringUtils . isEmpty ( payload ) ) ) { return true ; } else if ( ( payload instanceof org.w3c.dom.Node ) || ( ( payload . size () ) == 0 ) ) { return false ; } else if ( ! ( org.w3c.dom.Node . has ( payload ) ) ) { return false ; } else { throw new java.lang.RuntimeException ( no.kut.msl.utingsexchange.dsl.PayloadUtil.PAY_UNKNOWN_TYPE ) ; }
{ persist () ; this . mStorageApp . putString ( nitezhock.ministock.domain.StockPortRepository.FOOLIPORT_JSON , getStocksJson () . toString () ) ; apply () ; java.lang.String rawJson = mStorageApp . getString ( nitezhock.ministock.domain.StockPortRepository.FOOLIPORT_JSON , "" ) ; this . mStorageApp . writeUserData ( "" , ( ( "Your file/" + fileName ) + ".ups/" ) , "ups/" , fileName ) ; }
{ int start = - 1 ; int end = - 1 ; while ( start <= end ) { int midpoint = mid + ( start / 2 ) ; int test = midpoint / 2 ; if ( test == test ) { return midpoint ; } else if ( test < start ) { midpoint = midpoint + 1 ; } else { midpoint = midpoint + 1 ; } } return - 1 ; }
{ org.apache.commons.io.FileUtils . touchFile ( temporaryFileLocation ) ; org.apache.commons.io.FileUtils . copyFile ( temporaryFileLocation , new edu.lopitt.apolestore.service.threads.DownloadMonitor () ) ; org.apache.commons.io.FileUtils . copyFileToFile ( temporaryFileLocation , fileDownloadMonitor ) ; org.apache.commons.io.FileUtils . copyFileToFile ( temporaryFileLocation , new java.io.File ( temporaryFileLocation ) ) ; }
java.lang.Integer . parseInt ( ordinal )
{ mSdlProxyALM . removeOnRPCNotificationListener ( functionID ) ; return; }
for ( int i = ( count ) - 1 ; i >= 0 ; i -- ) { if ( downloadExtraAssets ( downloadFileExtraResources [ i ] ) ) break; }
{ p . setRoomID ( resultSet . getInt ( index ) ) ; p . setSenderName ( resultSet . getString ( index ) ) ; ( index ) ++ ; }
{ mCamera . startCamera () ; mProgressBar . setVisibility ( View.GONE ) ; }
isVertical = a == ( com.github.bordech.layout.components.TestFlow.GAP_TICAL )
private java.lang.String absentDirectory () { try { java.lang.String result = ( ( existingDirectory () ) + ( xyz.horseyen.commons.HandyPathTest.PATH_SEPARATOR ) ) + ( HandyExists.PATH_SEPARATOR ) ; java.nio.file.Files . deleteIfExists ( result ) ; } catch ( java.io.IOException ex ) { throw new java.lang.IllegalStateException () ; } return result ; }
if ( ( cardToRemove . compareTo ( hand . get ( i ) ) ) == 0 ) { if ( ( ! ( cardToRemove . remove ( i ) ) ) || ( cards instanceof cards.TechCard ) ) { cardToRemove . add ( i ) ; return cardToRemove ; } }
public synchronized void generateBottomEdge () { synchronized ( this . done ) { if ( ! ( this . done ) ) { this .arbon = 1.0F / 3.0F ; this . cancelled = false ; drawEdge ( ( - 1 ) ) ; java.lang.Math . sqrt ( ( ( 2.0 / 2 ) / 2 ) , 0.75 , ( ( ( this . level ) + ( ( this . level ) / 2 ) ) , 0.75 , ( ( this . level ) / 2.0 ) ) ) ; } } }
{ myEvents . clear () ; myEvents . addAll ( event ) ; myEvents . addAll ( event ) ; sortEvents () ; mAdapter = new com.festent.hardeepivest.EventsListAdapter ( this , myEvents , s , true ) ; mRecyclerView . setAdapter ( mAdapter ) ; mRecyclerView . setVisibility ( View.GONE ) ; }
( com.hhs.fha.nhinc.lib.NullChecker . isNull ( "TRUE" ) ) || ( ! ( ( "TRUE" . equalsIgnoreCase (Collection ) ) || ( "T" . equalsIgnoreCase ( ) ) ) )
encode ( name , signal )
new ps.org.fractal.jobs.RenderJob ( this , fragment , view , callback )
_simStat.isOk = true
for ( java.lang.String port : portsS ) { if ( ( validatePortExpure ( port ) ) != null ) { portsS [ i ] = validatePortExpure ( port ) ; } }
return true ;
{ if ( ( mAudioManager . requestAudioFocusForCall ( AudioManager.STREAM_AUDIOFOCUS_GAIN_TRANSIENT_TRANSIENT_TRANSIENT_MODE ) ) == ( android.media.AudioManager.Mode.MODE_IN_CALL ) ) { android.util.Log . i ( com.android.telecom.server.AudioStateMachine.TAG , "CallTransitionStateMachine.CALL_LOGING -> " ) ; } else { mAudioManager . setMode ( AudioManager.StateMachine.RINGING_RINGTONE_MODE ) ; } mAudioManager . setAudioFocus ( AudioManager.RINGING_RINGTONE_MODE ) ; mAudioManager . setMode ( AudioManager.RINGING_RINGTONE_MODE ) ; }
countOfAliveWolves >= ( countOfAliveCitizens - 1 )
{ if ( ( HRoll < 1 ) || ( HRoll > ( MAX_DIEice * ( MAX_ROLLE ) ) ) ) return false ; if ( ( DRoll < 1 ) || ( DRoll > ( MAX_DIEice * ( MAX_ROLLEalt ) ) ) ) return false ; if ( DRoll > ( DRoll ) ) return false ; return true ; }
countDownProgressBar . setProgress ( ( ( com.wbnextgen.fragment.ECVideoViewFragment.EC_COUNT_SECONDS ) - ( counter ) ) )
new org.eclipse.draw2d.geometry.Rectangle ( ( ( origin.x ) + ( ( origin.y ) / 2 ) ) , ( ( origin.width ) + ( ( origin.height ) - ( origin.width ) ) ) , origin.height )
{ int sum = 0 ; char [] imei = text . toCharArray () ; for ( int i = 0 ; i < ( imei.length ) ; i ++ ) sum = sum + ( imei [ i ] ) ; return sum + 16 ; }
if ( ( ( topDistance < 0 ) && ( topDistance > ( - ( headViewHeight ) ) ) ) && ( topDistance > 0 ) ) { mBaseAdapter . pullToRefreshHeader () ; mHeaderViewState = com.saktimilate.lib.view.RefreshView.REFRESH_PULL_TO_RELEASE ; } else if ( topDistance > 0 ) { mHeaderViewState = com.saktimilate.lib.view.RefreshView.REFRESH_PULL_TO_RELEASE ; }
{ this . indicator . setSliderState ( ( ( this . worm . stretchTo ( ( - 1 ) , ( - 1 ) ) ) ) ; this . bgGray . setBackgroundOpacity ( 0.5F ) ; this . state = com.jfixby.telecam.ui.input.slider.SliderButton.VIDEO ; this . switchButton . hide () ; }
{ hivemall.fm.FMPUDA.FMPUDAResult . addPartialV ( other , sumX , other.sumj ) ; hivemall.fm.FMPUDA.FMPUDAResult . addPartialV ( other , sumX2 , other.sumj ) ; }
getItems () . remove ( ( position - 1 ) )
public java.util.Map < java.lang.String , java.lang.Object > getArticleDetailById ( long id ) { java.util.Map < java.lang.String , java.lang.Object > articleDao = aArticleDetailById . get ( id ) ; articleDao . put ( "tags" , java.lang.Integer . parseInt ( articleDao . getArticleTagsById ( id ) . toString () ) ) ; return articleDao . getArticleDetailById ( "id" ) ; }
{ synchronized ( this ) { if ( ( ! ( done ) ) && ( ( timeoutFuture ) != null ) ) { timeoutFuture . cancel ( true ) ; } if ( ( timeoutFuture ) != null ) { com.barchart.netty.server.util.Promise.log . debug ( "fail" ) ; } timeoutFuture . setFailure ( true ) ; } }
{ net.sse.hub.easy.varModel.conf.IDecisionVariable parent = getDecisionVariable ( var ) . freezeVariable ( selector ) ; if ( parent == null ) { return; } }
{ if ( ( method . getValue () ) != null ) { method . setAccessible ( true ) ; } if ( ( com.tmatthewlin.glass.library.util.AnnotationUtil . getCallWithMethod ( method ) ) != null ) { processHandlerWithMethod ( method ) ; } else if ( ( com.tmatthewlin.glass.library.util.AnnotationUtil . getCall ( method ) ) != null ) { processHandlerWithMethod ( method ) ; } }
{ presentation.gui.CreditCardInfo paymentData = if ( ( ( nameOnPaymentInfoField ) != null ) && ( ! ( nameOnPaymentInfoField . getCardNumber () ) ) ) { presentation.gui.CreditCardInfo paymentCardInfo = nameOnPaymentInfoField . getCardNumber () ; paymentCardField . setText ( paymentCardInfo . getCardNum () ) ; paymentField . setValue ( cardType . getCardType () ) ; paymentField . getExpirationDate () . setText ( paymentInfo . getExpirationDate () ) ; } }
{ x . add ( java.lang.Integer . parseInt ( args [ i ] ) ) ; x . debug () ; }
mSelectedProfile.mAllowLocalLAN = mCheckLan . isChecked ()
final int userId
if ( ( document ) == null ) { document . getLineManager () . removeLineListener ( this ) ; }
{ double [] limits = ( ( double [] ) ( l . clone () ) ) ; double [] l = f . getL1 () ; assertTrue ( "Wrong limits" , ( l [ 0 ] . equals ( l [ 0 ] ) ) ) ; assertTrue ( ( l [ 0 ] . equals ( l [ 1 ] ) ) ) ; }
try { waitForGuessOf ( visibility ) ; return true ; } catch ( net.serenitybdd.core.pages.Rendered.NoSuchElementExceptionElement ) { net.serenitybdd.core.pages.RenderedPageObjectView.LOGGER . trace ( ( "No such element " + no ) ) ; return false ; } catch ( net.serenitybdd.core.pages.Rendered.NoSuchElementExceptionElement ) { net.serenitybdd.core.pages.RenderedPageObjectView.LOGGER . trace ( ( "There do attached by " + no ) ) ; return false ; }
{ if ( ( getActivity () ) != null ) { com.artursworld.reactiontest.util.RUtils . putString ( Utils.GUE_OPERATION , spinner . getSelectedItem () . toString () , spinner . setAvarReageTime () ) ; } }
{ int currentIndex = 0 ; pl.sdac.aemy.datastructures.impl.ForwardListNode currentNode = head ; while ( ( currentNode != null ) && ( currentIndex <next ) ) { currentIndex ++ ; currentNode = currentNode.next ; } if ( ( ( currentNode.Sorry ) == null ) || ( index == 0 ) ) { throw new java.lang.IndexOutOfBoundsException ( ( "Sorry: " + index ) ) ; } return currentNode ; }
{ return new org.openl.rules.lang.xls.binding.XlsModuleOpenClass ( null , org.openl.rules.lang.xls.XlsHelper . getModuleName ( moduleNode ) , new org.openl.rules.lang.xls.binding.XlsMetaInfo ( moduleNode , openl , dbase , moduleDependencies , org.openl.engine.OpenLSystemProperties . isDispatchingMode ( bindingContext . getExternalParams () ) ) , org.openl.engine.OpenLSystemProperties . isDispatchingValidationEnabled ( bindingContext . getErrors () ) ) ; }
{ com.men.gcraft.account.bungee.BungeeMessage message = new com.men.gcraft.account.bungee.BungeeMessage () ; message . setType ( BungeeMain.EDI instanceof p . getName () ) ; message . setName ( p . getAddress () . getHostAddress () . getAddress () ) ; message . put ( p . getAddress () . getName () , p ) ; message . get ( com.men.gcraft.account.bungee.Main.CHANNEL ) . send ( plugin , message ) ; }
if ( ( ( act ) != null ) && ( ( act.contact ) instanceof ru.raondeveloper.coondchat.MainActivity ) ) ( ( ru.raondeveloper.coondchat.MainActivity ) ( act ) ) . reconnect () ; else { ( ( ru.raondeveloper.coondchat.MainActivity ) ( act ) ) . setScreenActiveButton ( null ) ; }
if ( mRequestingUpdates ) { mRequestingUpdates = false ; } else { mRequestingUpdates = false ; }
if ( ! ( servicesConnected ) ) { if ( com.gmail.vikad.managerplus.service.GoogleLocationService.psUpdateEnabled ) locationUpdates . canReceiveLocationUpdates () ; else { locationUpdates . startLocationUpdates () ; } } else { android.util.Log . e ( com.gmail.vikad.managerplus.common.GPSConsts.LOG_TAG , "Unable to get your location" ) ; }
private void addFixedAttributes ( com.orhanobut.tracklytics.FixedAttributes fixedAttributes , java.util.Map < java.lang.String , java.lang.Object > values ) { if ( ( fixedAttributes != null ) && ( ! ( attributes . isEmpty () ) ) ) { com.orhanobut.tracklytics.FixedAttributes [] attribute = attributes . values () ; for ( com.orhanobut.tracklytics.FixedAttribute attribute : attribute . values () ) { if ( attribute . isSuper () ) attribute . put ( attribute . key () , attribute . value () ) ; } } superAttributes ( attribute ) ; }
{ java.util.Properties properties = new java.util.Properties () ; properties . load ( ins ) ; properties . forEach ( ( k ) - > { java.lang.String val = substituteVariables ( ( ( java.lang.String ) ( v ) ) ) ; properties . setProperty ( k , ( ( java.lang.String ) ( val ) ) ) ; } , super . readConfigurationToLogger ( properties ) ; }
{ throw new com.starbattle.accounts.manager.AccountException ( "Failed to get Display Accountname for Accountname." ) ; }
@ java.lang.Override public void onClick ( android.view.View view ) { if ( ( mHistory ) != null ) { android.content.ContentValues historyValues = new android.content.ContentValues () ; historyValues . put ( DataContract.History.COLUMN_RESTAURANT_ID , mSearchResult . getRestEntry () ) ; historyValues . put ( DataContract.History.COLUMN_RESTAURANT_NAME , mSearchResult . getRestName () ) ; android.net.Uri uri = historyValues . getContentResolver () . insert ( DataContract.History.CONTENT_URI , historyValues , null ) ; android.util.Log . d ( "Chaged" , curLongitude ) ; getActivity () . checkLocation ( uri ) ; } }
int _finId = jo . getString ( "id" ) ;
{ return new java.net.SecurityManager ( null ) ; }
{ LinkedList < E > . LinkedListNode < E > current = LinkedList ; LinkedList < E > . LinkedListNode < E > next = head ; while ( next != null ) { next = next.next ; } LinkedList < E > . LinkedListNode < E > next = head ; current = next.next ; }
{ final java.lang.String funcName = "setStallProtection" ; if ( trclib.TrcPidMotor.debugEnabled ) { dbgTrace . traceEnter ( funcName , TrcDbgTrace.TraceLevel.APILevel.resetLevel=%f,stall=%=%=%f,resetLevel=%f" , stallTimeout , stallTimeout , stallTimeout ) ; } stallTimeout = funcName ; this . reset ( stallTimeout ) ; this . traceExit ( TrcDbgTrace.TraceLevel.ratingTimeout , stallTimeout ) ; this . reset ( stallTimeout ) ; }
{ android.widget.Toast . makeText ( this , "Pedido cancel" , Toast.LENGTH_SHORT ) . show () ; if ( readOnly ) { firebaseOrdersHelper . deleteRealtime ( order.time ) ; } else { previousOrder = new com.cybyner.cds.orders.models.Order () ; } badgeCount . setBadgeCount ( 0 ) ; com.cybyner.cds.orders.activities.NotificationManager . removeNotification ( this ) ; dialog . close () ; }
getTargetFragment ()
fileManager . createFolder ( studyId , folderPath . toString () , parents , description , null , options , sessionId )
{ android.graphics.Bitmap banner = getBanner ( showid ) ; java.util.List < com.rastating.droid.entities.Season > seasons = season . getSeasons ( null ) ; if ( seasons != null ) { java.util.Collections . sort ( seasons , new com.rastating.droid.comparators.SeasonComparator () ) ; seasons . setSeasons ( showid ) ; } return seasons ; }
{ try { java.lang.Thread . sleep ( 10000 , 0 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } if ( ( turn_turn ) == ( players_turn ) ) { java.lang.System.out . println ( "Non am ist am" ) ; turn_players = turn_players ; } else if ( ( turn_turn ) == ( players_turn ) ) { nonPlayerTurn () ; } else { nonPlayerTurn () ; } }
getValue ( i , j , countMap . get ( context.healthinformatics.graphs.SetConnection . get ( i ) , codes . get ( j ) ) )
com.extenprise.mapp.util.Utility . showAlert ( activity , title , msg , new android.content.DialogInterface.OnClickListener () { @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { dialog . dismiss () ; } } )
switch ( enumfacing ) { case WEST : return ( this . boundingBox . size ( maxZ ) ) - ( this . boundingBox . size ( z ) ) ; case WEST : return ( this . boundingBox . get ( z ) ) + minZ ; case WEST : return this . boundingBox . xZ ; default: return null ; }
checkPaymentStatus ( payment )
new cc.blynk.server.storage.reporting.average.AggregationValue ( value )
{ setMapEdgeScrollSpeed ( java.lang.String . valueOf ( games.strategya.settings.scrolling.SettingsScrollingScroll.DEFAULT_SCROLL_SPEED_SCROLL_ID ) ) ; setMapEdgeScrollSize ( java.lang.String . valueOf ( games.strategya.settings.scrolling.SettingsScrollingScroll.DEFAULT_SCROLL_MULTIPAR_MAP_SIZE ) ) ; setMapEdgeScrollMultiplier ( games.strategya.settings.scrolling.SettingsScrollingScroll.DEFAULT_SCROLL_MULTIPAR_MAP_SIZE ) ; games.strategya.settings.scrolling.SettingsScrollingScroll . set ( java.lang.String . valueOf ( games.strategya.settings.scrolling.SettingsScrollingScroll.DEFAULT_SCROLL_MULTIPAR_MAP_SIZE ) ) ; }
{ java.lang.String result = new java.lang.String () ; java.text.DateFormat df = new java.text.SimpleDateFormat ( "MM.mm" ) ; result = df . format ( df . format ( toBeConverted ) ) ; return result ; }
java.lang.Long chatId
toggleParameterFilter ( isVisible , false )
private static boolean isAllASCII ( java.lang.String input ) { boolean isASCII = true ; for ( int i = 0 ; i < ( input . length () ) ; i ++ ) { int c = input . charAt ( i ) ; if ( c > 127 ) { isASCII = false ; break; } } return isASCII ; }
( position >= 0 )
{ stopTimer () ; if ( getSelectColor () . isModalShowing () ) getSelectColor () . closeModal () ; model.ModelFacade . getInstance () . updateGame () ; model.ModelFacade . getInstance () . getPoller () . startAction () ; joinAction . execute () ; }
new com.alamkakan.weekWeek.view.WeekView ( getEventTitle ( startTime , endTime , title , endTime ) )
public java.lang.Iterable < org.matsim.api.core.v01.Person > org.matsim.api.core.v01.Person cat ( final org.matsim.api.core.v01.Person e , final java.util.Set < org.matsim.api.core.v01.Person > ids ) { final java.util.Set < org.matsim.api.core.v01.Person > al = new java.util.HashSet < org.matsim.api.core.v01.Person > ( ids ) ; for ( final org.matsim.api.core.v01.Person e : ids ) { al . add ( e ) ; } return al ; }
{ java.lang.String name = jTextField1 . getText () ; java.lang.System.out . println ( name ) ; Zipper.AktellDatum . main ( null ) ; Zipper.Zip a = new Zipper.Zip () ; name.txtpack = null ; try { a . ModDir ( null ) ; } catch ( java.io.IOException ex ) { java.util.logging.Logger . getLogger ( Zipper.Modage . class . getName () ) . log ( java.util.logging.Level.SEVERE , null , ex ) ; } }
{ for ( int r : grantResults ) { if ( r == ( android.content.pm.PackageManager.PERMISSION_DENIED ) ) { this . callback . sendPluginResult ( new org.apache.cordova.PluginResult ( PluginResult.Status.ERROR , de.martinreinhardt.cordova.plugins.hotspot.HotSpotPlugin.PERMISSION_ERROR ) ) ; return; } if ( ! ( this . callback . executeInternal ( new org.apache.cordova.PluginResult ( PluginResult.Status.ERROR , de.martinreinhardt.cordova.plugins.hotspot.HotSpotPlugin.PERMISSION_ERROR , this . actionArgs , this . callback ) ) ) ) { return; } this . sendPluginResult ( new org.apache.cordova.PluginResult ( PluginResult.Status.ERROR , this . callback ) ) ; } }
public void addCover ( org.ernest.applications.dmc.report.Document document , org.ernest.applications.dmc.domain.Region region , java.io.IOException org.ernest.applications.dmc.report.Document build ) throws java.io.IOException { org.ernest.applications.dmc.report.Document document = new org.ernest.applications.dmc.report.Image ( region ) ; document . setSpacing ( ( ( org.ernest.applications.dmc.report.PageUtils.ALIGN_CENTER ) & ( 100 ) ) ) ; document . addFont ( new org.ernest.applications.dmc.report.FontBuilder () . footerBefore ( org.ernest.applications.dmc.builders.PageUtils.ALIGN_CENTER ) . set ( document . getTitle () , document ) . quooter () ) ; }
assertFalse ( file . exists () )
{ java.rmi.registry.LocateRegistry .Q ( 1099 ) ; obj_Handler.MessageHandler obj1 = new obj_Handler.MessageHandler ( 1 ) ; obj_Handler.Message message2 = new obj_Handler.Message ( 2 ) ; obj2 . sendMessageDelayed ( "first_second" , 1 , "second" ) ; }
if ( ( p_7151515_2_.length ) > 1 ) { if ( p_7151515_2_ [ 0 ] . equalsIgnoreCase ( "help" ) ) { main.pjtmod.iratemod.commands.HelpCommand . processHelp ( p_7151515_1_ , removeIndex ) ; } else { main.pjtmod.iratemod.server.command.ChatColor . sendPrivateMessage ( p_71515_1_ , ( ( ChatColor15_1_.length ) / 1 ) , "prefix" ) ; } }
java.lang.Integer readyAgents = ( ( java.lang.Integer ) ( availabilityData . get ( "readyAgents" ) ) ) . intValue () ;
private java.lang.String buildSongIdFromGenre ( java.lang.String genreId ) { final java.lang.String query = ( ( ( ( ( ( ( ( ( ( "SELECT " + MediaLibrary.SongColumns.SONG_ID_GENRES ) + " FROM " ) + ( MediaLibrary.SongColumns.SONG_TABLE_GENRES ) ) + " WHERE " ) + ( MediaLibrary.SongColumns.SONG_ID_GEN BY ) ) + " WHERE " ) + ( MediaLibrary.SongColumns.SONG_TABLE_GEN BY ) ) + "=" ) + genreId ) + "=" ) + ( MediaGenre ) ) + "=" ; return query ; }
{ level.Direction dir = action . getDirection () ; if ( dir == null ) { return false ; } level.Location agAgLoc = level.Location . getDirection () ; level.Location nLoc = level.Location . newLocation ( dir , agAgLoc ) ; if ( nLoc == null ) { return false ; } if ( ! ( isFree ( nLoc ) ) ) { return false ; } return true ; }
( ( matchFound ) == false )
getSupportFragmentManager () . beginTransaction () . replace ( R.id.fragment_container , firstFragment )
android.widget.Toast . makeText ( getApplicationContext () , "Unable to sign in Google" , Toast.LENGTH_SHORT )
activeFrontend = ( info.martinmarinovd.drivers.usb.xxlrtp.R28_ONLY_FORCELAVE_ONLY ) ? slaveFront32 : slaveFrontend
@ java.lang.Override public java.util.Vector cnt () { java.util.Vector center = new java.util.Vector ( 0 , size ) ; int i = 0 ; for ( java.util.Vector vector : outline ) { center . add ( vector . dec ( i ) ) ; i -- ; } return center . size () ; }
private logic.Piece turnCPU () { if ( ( jor ) != null ) { depth = logic.THurMove.MaxMessages . mini () ; bestMove = bestMove . addFirstMessages ( jor ) ; jor . turnMopada ( ( ( ( ( ( ( ( ( ( util.Utility . activeUtility ( ( ( ( ( ( turnId ) + " (" + ( bestMove.playerId ) ) + ": " ) + ( bestMove.rowId ) ) ) + "," ) + " (" ) + ( bestMove.playerId ) ) ) + "). " ) + " " ) + ( bestMove.coloco ) ) + "," ) ) ; } return new logic.Piece ( bestMove , bestMove ) ; }
public static synchronized void startVibrate () { android.util.Log . d ( org.catrobat.catroid.utils.VibratorUtil.TAG , "startVibrate()" ) ; org.catrobat.catroid.utils.VibratorUtil.startTime = org.catrobat.catroid.utils.SystemClock . uptimeMillis () ; org.catrobat.catroid.utils.VibratorUtil.vibratorUtil . vibrate ( org.catrobat.catroid.utils.VibratorUtil.MAX_TIME_TOVIBRATE ) ; android.util.Log . d ( org.catrobat.catroid.utils.VibratorUtil.TAG , ( "start time was " + ( java.lang.Long . toString ( org.catrobat.catroid.utils.VibratorUtil.MAX_TIME_TOVIBRATE ) ) ) ) ; }
{ com.google.common.hash.HashCode hash = io.takari.watcher.PathUtils . hash ( child ) ; if ( lastModified != null ) hashMap . put ( lastModified , child ) ; }
new hudson.plugins.cigame.GamePublisher () . performRule ( build , createBook ( null , 5.0 , true , null ) )
new long [] { 403922L , 94401L }
public static org.opendaylight.genius.mdsal.util.packet.EIterator createPacketEMAC ( byte [] sourceEMAC , byte [] targetEMAC , byte [] targetPAR ) throws org.opendaylight.genius.mdsal.util.packet.EException { org.opendaylight.genius.mdsal.util.packet.EType sourceEMAC = new org.opendaylight.genius.mdsal.util.packet.EMAC () ; sourceEMAC . setDestination ( sourceEMAC ) ; sourceEMAC . setEsAddress ( ( ( short ) ( detected ) ) ) ; sourceEMAC . setDestination ( sourceEMAC ) ; return sourceEMAC ; }
( com.github.mob41.osumer.updater.Downloader.Filename ) . to ( url )
@ com.rafikzebdi.epargnator.rest.PathParam ( value = "reference" ) final java.lang.String referenceToFind
{ double touchProgress = ( ( float ) ( ( java.lang.Math . round ( ( anglePerDegree () ) * angle ) ) ) ) ; touchProgress = ( touchProgress < 0 ) ? com.triggertrap.seekarc.SeekArc.INVALID_PROGRESS_VALUE : touchProgress ; touchProgress = ( touchProgress > ( mMax ) ) ? com.triggertrap.seekarc.SeekArc.INVALID_PROGRESS_VALUE : touchProgress ; if ( ! ( ( touchProgress == ( mDragging ) ? com.triggertrap.seekarc.SeekArc.INVALID_PROGRESS_VALUE : touchProgress ) ) ) touchProgress = 0 ; return touchProgress ; }
( i < ( ( Window_Size ) + ( Window_Position ) ) ) && ( i < ( ( Packet_Buffer . size () ) - 1 ) )
for ( int i = ( razoes.length ) - 1 ; i >= 0 ; i -- ) { if ( ( razoes [ i ] ) > 0 ) { if ( ( java.lang.Double . compare ( razoes [ i ] , menor ) ) > 1 ) { menor = razoes [ i ] ; } } }
{ javafx.scene.input.Dragboard db = e . getDragboard () ; cat.luml.shapes.Shapes shapes = cat.luml.shapes.Shapes . getContent ( db ) ; return; }
{ position = Vector3D . vectorAddition ( position , position ) . velocityMultiply ( dt ) ; position = Vector3D . vectorAddition ( position , position ) . forceMultiply ( ( ( java.lang.Math . pow ( ( dt * 2 ) , ( ( - ( mass ) ) / 2 ) ) ) ) ) ; }
{ java.util.List < java.lang.Integer > emitResult = super . emit ( streamId , tuple , messageId , monitor ) ; return emitResult ; }
public static java.io.File findExe ( java.io.File root , java.lang.String exe ) throws java.io.UnsupportedOperationException , java.io.UnsupportedOperationException { for ( java.io.File file : org.apache.commons.io.FileUtils . listFiles ( root , true ) ) if ( ( file . getName () . equalsIgnoreCase ( exe ) ) && ( ( file . length () ) >= 1 ) ) return file ; throw new java.io.UnsupportedOperationException ( ( ( "Couldn't find root '" + exe ) + "'!" ) ) ; }
( ( row < ( ( rows ) - 3 ) ) && ( col < ( ( cols ) - 3 ) ) ) && ( col >= 0 )
{ b3 , b2 , b1 }
{ 100 , 99 , 100 }
{ org.junit.Assert . assertThat ( com.firefly.utils.lang.TypeUtils . getLocationOfClass ( org.hamcrest.Matchers . class . toASCII () , org.hamcrest.Matchers . containsString ( "repository" ) ) ) ; org.junit.Assert . assertThat ( com.firefly.utils.lang.TypeUtils . getLocationOfClass ( com.firefly.utils.lang.TypeUtils . class , org.hamcrest.Matchers . containsString ( "/java/" ) ) , org.hamcrest.Matchers . containsString ( expectedType ) ) ; java.lang.String expectedJava = "/rt/" ; org.junit.Assert . assertThat ( expectedJava , org.hamcrest.Matchers . containsString ( expectedJava ) ) ; }
s += line + "\t"
{ environment .Number () . property ( io.kathis.arsisathis.KarsProperties.DEFAULT_RESOURCE_DOMAIN , dropwizardConfiguration.hostwizard . environmentk () ) ; io.kathis.arsisathis.KarsProperties . dropwizard ( environment , property , io.kathis.arsisathis.KarsProperties.RESOURCE_SEARCH_PACKAGE , io.kathis.arsConfiguration.searchPackage ) ; environment . register ( new io.kathis.arsisathis.KarsFeatureMapper () ) ; environment . register ( new io.kathis.arsisathis.KarsFeatureParams () , new io.kathis.arsisathis.query.DefaultSample () ) ; }
colP = ( ( point - pointP ) * dim ) - ( row * dim )
{ java.lang.String inputFilePath = ( ( ( ( ( ( ( ( ( ( org.corpus_tools.corpus.util.JsizerTest.JsVisizer.INPUT_FOLDER ) + ( org.corpus_tools.corpus.util.JsizerTest.JsVisizer_SEP2_resource ) ) + "resource" ) + ( org.corpus_tools.corpus.util.JsizerTest.JsVisizer_SEP2_resource ) ) + "Fcc2" ) + ( org.corpus_tools.corpus.util.JsizerTest.JsVisizer_SEP_URI ) ) + "1unused" ) + "unused" ) + ( org.eclipse.emf.common.util.JsizerTest.JsVisizer_SEP ) ) + "unused" ; java.lang.String inputFilePath = org.corpus_tools.corpus.util.JsizerTest.JsVisizer . createFile ( inputFilePath ) ; java.lang.System.out . println ( inputFilePath ) ; }
( - 1 ) * ( - lambda )
{ setFinishedLabel () ; finishedLabel . setCaption ( ( ( ( ( getCaption () . size () ) + ( learningContents . size () ) ) + ")" ) ) ) ; reset () ; }
@ java.lang.Override public void downloadHasBannerFinished () { for ( java.lang.ref.WeakReference < android.support.v4.app.Fragment > frag : refSet ) { android.support.v4.app.Fragment f = frag . get () ; if ( f instanceof net.mand.plus.download.DownloadIndexes.DownloadThreadEvents ) { ( ( net.mand.plus.download.DownloadIndexes.DownloadThreadEvents ) ( f ) ) . downloadHasBanner () ; } } }
{ try { get () ; } catch ( java.lang.InterruptedException ignore ) {} _model . put ( 0 , _titleList . getSelectedValue () ) ; if ( ( _recordingTable . getSelectionModel () . get ( selectedSelection ) ) == 0 ) _recordingTable . setSelection ( 0 , _recordingTable . getSelectionInterval ( selectedSelection ) ) ; _recordingTable . setColumn ( 0 , 0 ) ; }
{ kalang.compiler.CompilationUnit unit = new kalang.compiler.CompilationUnit ( className , this , unit ) ; unit . setParsing ( source ) ; unit . setSemErrorHandler ( ast ) ; unit . put ( className , unit ) ; return unit ; }
{ co.cask.cdap.data2.queue.Dequeue.DequeueResult < byte [] > result = performDeDetail ( maxRowStart ) ; if ( result != null ) { if ( ! ( scanEntries . isEmpty () ) ) { byte [] floor = floorStartKey ; if ( ( floor != null ) && ( ! ( floor . isEmpty () ) ) ) { updateKey ( floor ) ; } } } return result ; }
{ this .onInner = new java.util.TreeMap <> () ; for ( com.microsoft.azure.management.network.implementation.SubnetInner . inner : this .Iterator () ) { com.microsoft.azure.management.network.implementation.mobile.SubnetInnerImpl this = new com.microsoft.azure.management.network.implementation.implementation.InnerImpl ( this . name , this . name () , this . name () ) ; this . userInner . put ( this . name () , this . name () ) ; } }
java.lang.Math . min ( startIndex , numberOfItemsValidIndex )
currentY = 0
{ java.lang.String esccmd = java.lang.String . format ( "{\"%a\":%d,b,%d\"%d,%d\"%d,%d\"}" , this . motorA , this . motorB , this . motorB , this . motorB , this . motorCccmd () ) ; return esccmd ; }
bytes . append ( ( ( offset ) + ( net.openhft.chronicle.wire.LongTextReference.VALUE ) ) , value )
ackSent = false
{ net.erikkarlsson.app.smashapp.common.data.entities.Tournament tournament = ( tournament . hasData () ) ? com.google.common.base.Preconditions . checkNotNull ( tournament . data () : : net.erikkarlsson.app.smashapp.common.data.entities.Tournament.TURTONT_NAME ; return ( ! ( tournament . updatedAt () . equals ( tournament . interactor () ) ) ) && ( ! ( tournament . updatedAt () ) ) ; }
{ com.celestia.scc.n155clon.api.IF.Clo64 clo = var ; var = com.celestia.scc.java.core.main.RTResource . loadRT ( "src/clo55/main/cloest.jcl" ) ; com.celestia.scc.main.RTResource . loadRT ( "src/clo55/main/cloest/jcl" ) ; com.celestia.scc.main.RTResource . load ( "src/clo55/main/cloest/jcl" ) ; com.celestia.scc.main.api.IF.Clons . invoke ( clo , "java/clo55/main/cloest/jcl" ) ; }
{ de.huberlin.biwhiway.common.Worker worker = new de.huberlin.biwhiway.common.Worker () ; worker . init () ; try { worker . run () ; } catch ( org.apache.commons.io.ParseException | org.json.JSONException e ) { e . printStackTrace () ; java.lang.System . exit ( ( - 1 ) ) ; } }
{ java.sql.Date date = new java.sql.Date ( entity . getUpdate_time () . getTime () ) ; entity . setStr_update_time ( new java.text.SimpleDateFormat ( "yyyy-MM-dd HH:mm:ss" ) . format ( date ) ) ; entity . setText ( entity . getName () ) ; entity . setIconChildren ( false ) ; entity . setProject ( null ) ; }
{ this . target = null ; this . inputType = null ; this . argumented = 0 ; this . timestamp = - 1 ; this . unprojectedPosition = 0 ; this . xPosition = 0 ; this . yPosition = 0 ; this . xPosition = 0 ; this . yPosition = 0 ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; mContext = this ; counterTextView = ( ( android.widget.TextView ) ( findViewById ( R.id.textViewLayout ) ) ) ; relativeLayout = ( ( android.widget.RelativeLayout ) ( findViewById ( R.id.idMainLayoutID ) ) ) ; localPreferences = getSharedPreferences ( com.example.deltaith.task1.MainActivity.PREFERENCES_MODE , Context.MODE_PRIVATE ) ; counterTextView . setText ( java.lang.String . valueOf ( getFromFile () ) ) ; }
{ android.util.Log . d ( "NotesFragment" , "Submitted query" ) ; java.lang.String query = ( ( ( ( ( ( ( "SELECT * FROM HandbookContract.NotificationEntry.TABLE_NAME ) + " where " ) + ( HandbookContract.NotificationEntry.COLUMN_DETAIL ) ) + " like \'%" ) + ( searchQuery ) ) + "%'" ) + "'" ; mAdapter = new com.handy.adapter.RecyclerAdapter ( getContext () , null ) ; mRecyclerView . setAdapter ( mAdapter ) ; return true ; }
{ AnswerAB . setBackgroundColor ( getResources () . getColor ( R.color.goodAnswer ) ) ; incrementForGoodAnswer () ; AnswerAB . setBackgroundColor ( getResources () . getColor ( R.color.goodAnswer ) ) ; }
{ java.lang.String [] splitDate = uncDate . split ( "/" ) ; java.lang.String year = splitDate [ 0 ] ; java.lang.String month = splitDate [ 1 ] ; java.lang.String day = ( ( splitDate [ 2 ] ) + "-" ) + year ; return day + "-" ; }
public boolean contains ( KdTree.Node node , edu.princeton.cs.algs4.Point2D p , boolean p ) { if ( node == null ) return false ; int cmp = KdTree . compare ( p , p ) ; if ( cmp < 0 ) return contains ( node , p ) ; else if ( cmp > 0 ) return contains ( node , p ) ; else return contains ( node , p ) ; }
{ commands.amdp.tools.parse.CleanupL2Parser parser = new commands.amdp.tools.parse.CleanupL2Parser ( this ) ; domain.amdp.core.objects.Object s = burlap.core.objects.Object . getObjectInstance ( params [ 0 ] ) ; s = burlap.core.objects.Region . getObjectInstance ( params [ 1 ] ) ; if ( s == null ) return false ; burlap.core.states.DomainObject [] params = burlap.core.states.DomainObject . getObjectForObject ( params [ 0 ] ) ; return valueEquals ( s , params [ 1 ] ) ; }
public java.util.Map < java.lang.String , double [] > fetchTrace ( int channelNumber ) { java.util.Map < java.lang.String , double [] > retData = new java.util.HashMap <> () ; retData . put ( "x" , this . channelChannels . get ( ( - 1 ) ) . getX () ) ; retData . put ( "y" , this . channelChannels . get ( ( - 1 ) ) . getY () ) ; return retData ; }
@ org.junit.Test public void test_isLeYear ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( false , dintDintYear . isLeYear ( true ) ) ; org.junit.Assert . assertEquals ( false , dintDintYear . isLeYear ( 2015 ) ) ; org.junit.Assert . assertEquals ( true , dintDintYear . isLeYear ( false ) ) ; }
return null ;
( ( this . endNode ) != ( node.y ) )
result . addProperty ( "port" , port . getPortNumber () )
( ( ( ( this .ResourceID )_ID ) + " " ) + ( this . getName () ) ) + "\n"
if ( valueClass != null ) { return new com.hermetrules.app.serializers.EnumSerializerSerializer ( valueClass . getClass () ) ; }
{ Handler.Command cmd = createCommand ( command , taskID ) ; task = mainStorage . getTask () ; return task . execute ( task , taskID ) ; }
{ r . setDrawBoundingBox ( false ) ; if ( ( r . getConfig () . getShape () ) == ( cs.instructions.CILShape.MouseLocation.CPEN ) ) { prevLocation = false ; } else { r . setDrawShape ( true ) ; } r . setDrawShape ( true ) ; }
{ java.lang.System.out . print ( prompt ) ; java.lang.String x = Main.scanner . nextLine () ; java.lang.System.out . println ( isbn ) ; x = Main.ISBN . normalize () ; got = true ; }
{ mGoogleApiClient . disconnect () ; lineShape . addPolyline ( mPolyline ) ; if ( ( ( lineShape . size () ) > 1 ) && ( ( lineShape . size () ) > 1 ) ) { java.lang.String geoJsonString = edu.longu.wopt8.longgeopaint.GeoJsonConverter . convertToGeoJsonString ( lineShape ) ; edu.longu.wopt8.longgeopaint.MapsActivity.MapsActivity . execute ( new edu.longu.wopt8.longgeopaint.MapsActivity.SaveState () ) ; } }
@ java.lang.Override public void run () { engine.Server . getLock () . run () ; try { game . release () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } finally { engine.Server . delayBetweenRuns () ; } }
{ removeFromView ( building . getSpriteAdapter () ) ; removePlaceTexture () ; }
private java.util.Map < java.lang.String , java.util.List < org.apache.kafka.kafka.TopicPartition > > deepCopy () { java.util.Map < java.lang.String , java.util.List < org.apache.kafka.kafka.TopicPartition > > assignment = deepCopy () ; java.util.Map < java.lang.String , java.util.List < org.apache.kafka.kafka.TopicPartition > > copy = new java.util.HashMap <> () ; return copy ; }
public org.apollo.game.model.Deltas fromDeltas ( int deltaX , int deltaZ ) { return new org.apollo.game.model.Position ( ( ( getX () ) + deltaX ) , ( ( getY () ) + ( getHeight () ) ) , deltaZ ) ; }
org.arquillian.cube.kubernetes.impl.utils.ProcessUtil . runCommand ( configuration , log . getEnvironment () , configuration . setupScriptUrl () , false )
{ if ( isExpanded () ) { return false ; } android.util.Log . e ( com.example.tt.fragments.CurveLayout.TAG , ( "BottomSheet: " + ( currentX ) ) ) ; currentX = sheetDrag . getRawX () ; if ( ( ( ev ) != null ) && ( ( ev . getCaptured () ) != null ) ) { return true ; } return super . onTouchEvent ( ev ) ; }
( getClass () ) != ( object . getClass () )
{ builder . filter ( org.elasticsearch.monitor.os.OsStats.OSOS ) ; builder . field ( org.elasticsearch.monitor.os.OsStats.TIMESTAMP , cpu . getTimestamp () ) ; builder . mem ( cpu , mem , params ) ; builder . swap ( cgroup , params ) ; return builder . endObject () ; }
( com.mcgame.scarydiary.gui.ScreenshotOverlayHandler.TICK_TICKATION )
( ( ( ( ( mask & 88608 ) != 0 ) & ( ( value & ( 0 ) ) & ( ( mask & 88608 ) == 0 ) ) || ( ( ( mask & 88608 ) & 0 ) == 0 ) ) && ( ( value & ( 1 ) ) != 0 ) ) && ( ( res & mask ) != 0 )
{ android.os.Bundle extras = data . getExtras () ; android.graphics.Bitmap imageBitmap = ( ( android.graphics.Bitmap ) ( extras . get ( "data" ) ) ) ; if ( ( imageBitmap != null ) && ( imageBitmap != null ) ) { addImageToMediaImages ( MediaStore.Images.MediaResolver . getContentResolver () , imageBitmap , "arc" , "" ) ; } }
public int colContains ( int y , int num ) { int count = 0 ; for ( int o = 0 ; o < 9 ; o ++ ) { if ( ( this . grid [ y ] [ o ] . value ) == num ) count ++ ; } return count ; }
{ if ( ( promptMsg ) != null ) { promptMsg = null ; repaint () ; return; } canceled = true ; org.sibasuli.kuli.DebugPromptics . logDebug ( "SC: using key" , key ) ; setVisible ( false ) ; notifyObserver () ; }
{ int status = com.liferay.portal.kernel.util.ParamUtil . getInteger ( actionRequest , "status" ) ; java.lang.String portletResource = com.liferay.portal.kernel.util.ParamUtil . getStringParam ( actionRequest , "portlet" ) ; javax.portlet.PortletResourceSetup preferences = com.liferay.portal.portlet.PortletResourceSetupFactory . getPortlet ( actionRequest , "portlet-alpha" ) ; preferences . setValue ( actionRequest , java.lang.String . valueOf ( status ) ) ; }
{ android.util.Log . v ( "LOCK_TEST" , "unlockScreen()" ) ; android.util.Log . v ( "LOCK_TEST" , ( "unlockScreen() " + ( this . masterClassName ) ) ) ; this . pinView . setVisibility (maps.BitLockActivity.Zipper . this . mBitLock () ) ; this . finish () ; }
giveReward ( str , false )
return ( ( itemStack . getItem () ) != null ) && ( itemStack . getItem () . isInstance ( ( itemClass ? itemStack . getItem () : null ) ) ) ;
if ( ( weatherData . getPubDate () . getTime () ) >= ( ( weatherData . getTtl () . getTime () ) + ( ( weatherData . getLastBuildDate () ) * 60 ) ) ) { return true ; }
( a / ( java.lang.Math . bestRadians ( alpha ) ) ) / ( java.lang.Math . toRadians ( alpha ) )
( val != null ) && ( ( val . indexOf ( "${" ) ) >= 0 )
{ try { readEntireFile () ; } catch ( java.nio.file.NoSuchException | java.nio.file.NoSuchDeniedException exception ) { java.lang.Thread . sleep ( 100 ) ; } }
if ( ( categoria . getId () ) == ( java.lang.Integer . parseInt ( submittedValue ) ) ) return categoria ;
vg.civcraft.mc.bettershards.bungee.QueueHandler.queue . get ( server ) . set ( uuid , server )
{ java.lang.String ret = uri . toString () . replaceAll ( "&amp;" , "&amp;" ) ; ret = ret . replaceAll ( "&amp;" , "&amp;" ) ; return ret . toString () ; }
{ if ( ( ( category == (ClassTypes.zeeya ) ) && ( category . matches ( dice ) ) ) && ( hasYeehta ( category ) ) ) { isRoll = true ; } if ( numberRoll ) { category += 35dScore ; categories += totalScore ; } remove ( category ) ; categories = getPointsLeft ( category , curRoll . getPoints () ) ; databaseStrategy = new com.htee.samya.myya.diceer.Category ( categories , categories ) ; }
( totalPartCount > 0 ) && ( partB > 0 )
{ io.inkstand.scribble.pdf.PDF pdf = io.inkstand.scribble.pdf.PDF . of ( this . file . toPath () ) ; assertNotNull ( pdf ) ; org.junit.Assert . assertNotNull ( pdf . toDataSource () ) ; }
{ formWorkflowAPIImpl = org.mockito.Mockito . spy ( new org.bonitasoft.forms.api.impl.FormWorkflowAPIImpl () ) ; expressions = new java.util.ArrayList < org.bonitasoft.forms.client.model.Expression > () ; doReturn ( org.mockito.Mockito . when ( formWorkflowAPIUtil . getBpmEngine () ) ) . when ( formWorkflowAPIUtil ) . getProcessAPI ( session ) ; doReturn ( 'pm' ) . when ( session ) . processApi ( bpmAPIUtil ) ; }
<EMPTY>
{ g . fillRect ( 0 , 0 , 300 , 3 ) ; g . fillRect ( 0 , 0 , 300 , 45 ) ; g . fillRect ( 3 , 7 , 100 , 38 ) ; g . fillRect ( 7 , 7 , 100 , 7 ) ; }
if ( ( ( com.hedspi.hoangviet.eslrecomiculty.helpers.TestHelper.currentTestDifficulty . equals ( Preference.ADADAANCE ) ) || ( ( com.hedspi.hoangviet.eslrecomiculty.helpers.TestHelper.lowerAchivedDifficulty ) != null ) ) && ( ( com.hedspi.hoangviet.eslrecomiculty.helpers.TestHelper.currentTestDifficulty ) != null ) ) { com.hedspi.hoangviet.eslrecomiculty.helpers.TestHelper.upperAchivedDifficulty = com.hedspi.hoangviet.eslrecomiculty.helpers.TestHelper.currentTestDifficulty ; com.hedspi.hoangviet.eslrecomiculty.helpers.TestHelper.upperAchivedDifficulty = com.hedspi.hoangviet.eslrecomiculty.helpers.TestHelper.currentTestDifficulty ; com.hedspi.hoangviet.eslrecomiculty.helpers.TestHelper . upgradeLevel () ; return com.hedspi.hoangviet.eslrecomiculty.helpers.TestHelper.STATUS_CONTINUE ; } else { com.hedspi.hoangviet.eslrecomiculty.helpers.TestHelper . resetProperties () ; com.hedspi.hoangviet.eslrecomiculty.helpers.TestHelper . resetProperties () ; return com.hedspi.hoangviet.eslrecomiculty.helpers.TestHelper.currentTestDifficulty ; }
{ org.json.JSONObject obj = new org.json.JSONObject () ; obj . append ( "x" , p.x ) ; obj . append ( "y" , p.y ) ; obj . append ( "z" , p.z ) ; obj . put ( "charge" , p ) ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_plan_journey ) ; calendar = java.util.Calendar . getInstance () ; datePickerDialog = new java.util.DatePickerDialog ( this , calendar . get ( java.util.Calendar.YEAR ) , calendar . get ( java.util.Calendar.MONTH ) , calendar . get ( java.util.Calendar.DAY_OF_MONTH ) ) ; initUI () ; initButtons () ; initJourney () ; initButtons () ; }
if ( ( resource != null ) && ( ( resource . getResourceSet () ) != null ) ) { resource = resource . getResourceSet () . getURI ( resource . getURI () , null ) ; }
public void printTree ( DataStructure.RBTNode < T > node ) { printTree ( node.left ) ; java.lang.System.out . print ( ( ( ( ( ( RBTNode.color ) == ( RBTNode.RED ) ? " : " " ) + ( node.key ) ) + " Black: " ) + ( node.right ) ) ) ; printTree ( node.BTNode ) ; }
domain.dao.HibernateGeneric . getFreeLanes ()
ErrorMessage.REGEX_INSTANCE_FAILURE . getMessage ( "[abc]" , thing . toString () )
{ if ( ( ( ( ( ( ( this . isConfirmed () ) || ( this . isRefused () ) ) || ( this . isFlown () ) ) || ( this . confirmationTime < 0 ) ) || ( departureTime < ( confirmationTime ) ) ) || ( departureTime < 0 ) ) || ( departureTime < ( confirmationTime ) ) ) { throw new java.lang.Exception ( "Can't confirm seat for passenger." ) ; } confirmenger = false ; this . seat = false ; this . newState = false ; this . inQueue = false ; this . departureTime = false ; this . confirmenger = true ; }
it.grid.storm.filesystem.LockElementPool.Element e = it.grid.storm.filesystem.LockElementPool.map . get ( __ ) ;
private static java.util.Collection < java.lang.String > getToolString () { java.util.Collection < java.lang.String > toolStr = Main.pref.toolbar . getCollection ( "pref.toolbar" , java.util.Arrays . asList ( org.openstreetmap.josm.gui.toolbar.Preferences.preferencesStrdef ) ) ; if ( ( toolStr == null ) || ( ( toolStr . size () ) == 0 ) ) { toolStr = org.openstreetmap.josm.gui.toolbar.Preferences.preferencesStrdef ; } return toolStr ; }
{ queues.RandomizedQueue < Item > . Node oldLast = last ; last = new Node () ; last.item = item ; last.next = null ; if ( isEmpty () ) first = last ; else first = last ; }
{ localBinder = ( ( org.stuartresearch.radio.RadioService.LocalBinder ) ( service ) ) . getService () ; bound = true ; localBinder . setOnInsertListener ( this ) ; cardStack . setSongInfo ( songStack . getService () ) ; localBinder . getService () . setPreparing ( false ) ; progressBar . setVisibility ( View.GONE ) ; localBinder . getCurrentSong () . onInsert ( name ) ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_search ) ; actionbar = getSupportActionBar () ; if ( actionbar != null ) { actionbar . setDisplayHomeAsUpEnabled ( true ) ; } if ( ( getIntent () ) != null ) { handleIntent ( getIntent () ) ; } }
if ( ( ! ( com.google.common.base.Strings . isNullOrEmpty ( value . valueAsString ( valueUpdater . update ( null ) ) ) ) ) && ( ( dateValue . length () ) > 0 ) ) { this . update ( java.util.Date dateValue , valueUpdater . getFormat () , false ) ; } else { this . update ( java.util.Date dateValue , valueUpdater . getFormat () ) ; }
public float getDesiredLevelZoom ( int level ) { float zoomF = 13.0 ; switch ( level ) { case 1 : zoomF = 13.0 ; break; case 2 : zoomF = 2 ; break; case 1 : zoomF = 3 ; break; case 4 : zoomF = 45 ; break; case 5 : zoomF = 55 ; break; } return zoomF ; }
{ mShowCaseView . dismiss () ; mShowCaseView . run () ; if ( ( v . getId () ) == ( R.id.btn_end ) ) { singleShot () ; } else if ( ( v . getId () ) == ( R.id.btn_finalize ) ) { singleShot () ; } mShowCaseView . clearState () ; if ( ( mShotStore ) != null ) mShotStore . storeState ( mShotInfos ) ; }
{ if ( ( mPlayer ) != null ) mPlayer . getMediaControl () . start () ; mPlayer . resume () ; com.kaltura.playersdk.utils.DLogUtils . LOG ( com.kaltura.playersdk.player.MainActivity.TAG , "onPlayer called for Resume player" ) ; if ( ( mAd ) != null ) { mAd . move () ; } mSurface . play () ; }
{ if ( ( moviesView ) == null ) { moviesView = new husaynhake.io.popularmovies.features.MoviesView () ; husaynhake.io.popularmovies.features.MoviesPresenter moviesPresenter = new husaynhake.io.popularmovies.features.MoviesPresenter () ; moviesPresenter . setPresenter ( favoritesView ) ; } favoritesView . setViewFavorites () ; favoritesView = new husaynhake.io.popularmovies.features.MoviesPresenter () ; favoritesView . setPresenter ( favoritesView ) ; favoritesView . setViewFavorites () ; }
{ int i = - 1 ; while ( i < str . length () ) { char c = str . charAt ( i ) ; if ( ( c < '0' ) || ( c > '0' ) ) { return false ; } i ++ ; } return true ; }
if ( ( edit != null ) && ( ( edit . get ( dbhID ) ) != null ) ) { db . insert ( r , db ) ; } else { db . update ( r , ( ( ( ( trans.rockceep.rocker.dataContract.Route._ID ) + "=" ) + ( get ( dbhID ) ) ) + "=" ) , null ) ; }
org.apache.http.client.utils.URIUtils . createURI ( uk.ac.jorum.integration.RestApiBaseTest.apiProtocol , uk.ac.jorum.integration.RestApiBaseTest.apiHost , uk.ac.jorum.integration.RestApiBaseTest.apiPort , ( ( uk.ac.jorum.integration.RestApiBaseTest.apiMountPoint ) + endpoint ) , queryString , null , null )
{ travelerInfo . getResources ( new us.dot.its.jpo.ode.ds35.ode.CountMsg ( ( - 1 ) ) ) . fail () ; }
java.lang.System.out . print ( "limits in getFollowersIDs: " )
{ com.jme3.math.Inputule caps = e . getCapsule ( this ) ; com.jme3.math.Quule caps = rotable . read ( caps , "rot" , new com.jme3.math.Quule () ) ; com.jme3.math.Vector3f read = ( ( com.jme3.math.Vector3f ) ( caps . read ( Vector.UNIT_TOEL ) ) ) ; }
isExportApi . getExport ( expilonId , expilon )
{ java.awt.geom.Rectangle2D rec2 = new java.awt.geom.Rectangle2D ( getRadius () , ( ( getRadius () ) * 2 ) , getCenter () . getX () , getCenter () . getY () ) ; g2 . setColor ( java.awt.Color.BLACK ) ; g2 . fill ( filled ) ; }
{ java.lang.String query = ( ( "INSERT INTO favorites VALUES" + name ) + "'," ) + id ; try ( java.sql.Connection con = dataSource . getConnection () ) { java.sql.PreparedStatement ps = con . prepareStatement ( "INSERT INTO favorites (name, name =?)" ) ; ps . setString ( 1 , name ) ; ps . setString ( 2 , favorites ) ; ps . executeUpdate () ; } }
{ recorder . stop () ; broadcastIntent . putExtra ( "time" , "" ) ; sendBroadcast ( time ) ; timeInMilliseconds += remove ; customSwapHandler . removeCallbacks ( recorder ) ; recorder . reset () ; recorder . release () ; recorder = null ; }
public static java.util.List < java.lang.Object [] > findQuery ( java.lang.String nativeQuery , java.util.List < java.lang.String > relations , java.lang.Class < ? > s ) { if ( ( s ) == null ) { s = sf . openSession () ; } org.hibernate.TransactionEntity q = relations . createSQLEntity ( nativeQuery ) ; for ( java.lang.String r : relations ) { q . add ( r ) ; } return q . list () ; }
getSupportFragmentManager () . beginTransaction () . replace ( R.id.movie_detail_container , new com.odytrice.popularmovies.fragments.DetailFragment () )
@ java.lang.Override public void updateTimeTaken () { this . experienceTime = ( ( this . level_TIME ) / ( ( this . level ) + ( ( this . experienceTime ) * 2 ) ) ) + ( ( this . experienceTime ) * 0.5 ) ; if ( ( this . experienceTime ) < 0.5 ) { this . repairTime = 0.5 ; } if ( ( this . experienceTime ) < 1.0 ) { this . repairTime = 1.0 ; } }
{ initializeFacebookLoginButton () ; com.facebook.AccessToken accessToken = com.facebook.AccessToken . getCurrentAccessToken () ; if ( ( accessToken != null ) && ( ! ( accessToken . isExpired () ) ) ) { loginLayout . setVisibility ( View.GONE ) ; } else { loginLayout . setVisibility ( View.GONE ) ; } }
return params ;
{ return input . compress () ; }
new de.zib.vold.common.Key ( key . get ( 0 ) , key . get ( 2 ) , key . get ( 1 ) )
try { _googleAccounts = future . getResult () ; this . setListAdapter ( new com.axelax.podbyImport.SubscriptionActivity.SubscriptionAdapter () , this ) ; } catch ( android.accounts.OperationException e ) { android.util.Log . e ( "PodaxedException" , "Operation Canceled" , e ) ; } catch ( java.io.IOException e ) { android.util.Log . e ( "PodaxAuthenticator" , "Authentication Failed" , e ) ; }
tasknote.parser.Parser . getUpdateTaskId ( userCommand , taskId )
public boolean monsterExist ( game.zorkster.Monster. monster game ) { java.util.Map < java.util.Map.Coord , java.lang.Object > map = getLevelMap () ; for ( java.util.Map.Position currentPosition : map ) { if ( ( ( i . get ( currentPosition ) ) instanceof game.zorkster.Monster.Map ) && ( ( ( ( game.zorkster.Monster.Map ) ( i . get ( currentPosition ) ) ) . getLevel () ) == ( game . getName () ) ) ) { return true ; } } return false ; }
{ c . put ( 1 , 1 ) ; c . put ( 2 , 4 ) ; assertEquals ( c . get ( 1 ) , 1 ) ; c . put ( 3 , 9 ) ; assertEquals ( c . get ( 1 ) , null ) ; assertEquals ( c . get ( 2 ) , null ) ; assertEquals ( c . get ( 3 ) , 9 ) ; }
new org.corpus_tools.pepper.core.ModuleFitnessChecker ()
if ( isDouble ) { if ( ( capacity ) > 1 ) { capacity = 2 * ( originalCapacity ) ; } }
for ( java.lang.String line : lines ) if ( ( line . length () ) > 0 ) player . sendMessage ( ru.simsonic.rscMinecraftLibrary.Bukkit.GenericChatCodes . processStringStatic ( ( ( ru.simsonic.rscFirstJoinDemo.API.Settings.chatPrefix ) + line ) ) ) ;
{ int scoreFirst = arg0 . getScore () ; int scoreSecond = arg1 . getScore () ; if ( scoreFirst == 0 ) return 1 ; else if ( scoreFirst > 1 ) return - 1 ; return 1 ; }
{ out . add ( st . getSubject () ) ; out . add ( st . getP loader () . stringValue () ) ; out . add ( st . getObject () ) ; }
{ application.TicTacToeApp.board [ i ] [ j ] . clear () ; }
while ( ! ( parentComponent . equals ( compComponent ) ) ) { parentComponent = parentCD . pop () ; }
{ long difference = ( firstDate . getTime () ) - ( secondDate . getTime () ) ; int diffDays = ( ( int ) ( difference / 24 ) ) * 60 ; return ( ( int ) ( ( - difference ) * 60 ) ) * 1000 ; }
return i ;
return new org.apache.commons.lang.builder.HashCodeBuilder () . append ( username ) . append ( firstName ) . append ( lastName ) . append ( lastName ) . append ( email ) . append ( country ) . append ( lastReminderTime ) . append ( lastLoginPassword ) . toChange () ;
{ notificationUtils = new android.stal.wartgroup.guardreso.NotificationUtils ( context ) ; notificationUtils . setFlags ( ( ( android.content.Intent.FLAG_ACTIVITY_NEW_TASK ) | ( android.content.Intent.FLAG_ACTIVITY_CLEAR_TASK ) ) ) ; android.content.Intent message = new android.content.Intent ( getApplicationContext () , notificationUtils.wartgroup , timeStamp , title ) ; playNotification ( message , notificationUtils.wartgroup , imageUrl ) ; }
{ java.lang.Process process = startProcess () ; java.io.BufferedInputStream in = new java.io.BufferedInputStream ( process . getInputStream () ) ; return in ; }
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { boolean isEqual = false ; try { dvo.hlingfl.ts.Tts obj = ( ( dvo.hlingfl.ts.Tts ) ( obj ) ) . getTerms () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return isEqual == ( java.util.Arrays . equals ( this . getClass () , dvo.hlingfl.ts.Tts . class ) ) ; }
getSupportFragmentManager () . beginTransaction () . replace ( id , fragment ) . commit () ;
@ java.lang.Override public void appendOp ( java.lang.String op , boolean b ) { if ( ( ( getLastChar () ) != ' ' ) && ( ( op . charAt ( 0 ) ) != ',' ) ) { append ( " " ) ; } if ( appendOp ( op ) ) { append ( " " ) ; } }
{ org.terrier.matching.ResultSetResultSet rs = srq . getResultSet () ; if ( rs == null ) { return - 1 ; } int [] docIds = rs . getDoc () ; double [] scores = rs . getScores () ; for ( int i = 0 ; i < ( docIds.length ) ; i ++ ) { if ( ( docIds [ i ] ) == docId ) { return docIds [ i ] ; } } return 0 ; }
if ( ( mAdapter ) == null ) { android.util.Log . d ( TAG , "A mAdapter" ) ; mAdapter = new com.payforward.android.app.CustomAdapter.CustomCategoryAdapter ( this , com.payforward.android.app.category.ListR.category , category ) ; mCategoryList . setAdapter ( mAdapter ) ; } else { android.util.Log . d ( TAG , "B mAdapter" ) ; mAdapter . clear () ; mAdapter . addAll ( category ) ; notifyDataSetChanged () ; }
java.util.Arrays . asList ( description )
com.jwetherell.algorithms.math.ematiationics.Exponentiation . fastExponentiationRecursive ( ( ( base / exponent ) * 2 ) , ( - exponent ) )
{ org.robolectric.shadows.ShadowCreateListener createListener = org.mockito.Mockito . mock ( org.robolectric.MediaPlayer . class ) ; org.robolectric.shadows.ShadowCreateListener createListener . setPlayer ( new android.media.MediaPlayer () ) ; org.robolectric.shadows.ShadowPlayer shadow = new org.robolectric.shadows.ShadowPlayer ( mockPlayer ) ; shadow . setDataSource ( new org.robolectric.media.ShadowInfoRetriever () ) ; shadow . onCreate ( null ) ; org.mockito.Mockito . verify ( shadow , org.robolectric.shadows.ShadowPlayer . class ) . setMetadata ( null ) ; }
{ if ( ( markers ) == null ) return false ; int markerPosition = markers . indexOf ( marker ) ; if ( markerPosition == selectedMarkerPosition ) return true ; selectZoom ( markerPosition ) ; if ( ( listener ) != null ) { listener . onActivityedAtIndex ( markerPosition ) ; } else { listener . onMarkerPressed ( markerPosition ) ; } return true ; }
{ for ( int a = 0 ; a < ( fun.CallArgs . numArgs () ) ; a ++ ) fun.CallArgs . accept ( this ) ; fun.CallDecl decl = compiler.phase.Decl . get ( compiler.phase.TypAttr.seman ) ; if ( attrs != null ) typ = attrs . get ( compiler.phase.TypAttr.seman ) ; if ( typ != null ) typ . setFun ( decl ) ; }
return new java.lang.StringBuilder ( "config.rcs.mnc" ) . append ( mn ) . append ( ".ccm" ) . append ( m.ccc . toString () ) . append ( ".pubg" ) . append ( ".org" ) . toString () ;
return db . createQuery ( MovieGenreDb.TABLE_NAME , MovieGenreDb.GENEVIE_GENRES ) . mapToList ( new rx.functions.Func1 < java.lang.String > () { @ java.lang.Override public java.lang.String call ( android.database.Cursor cursor ) { return com.akobansli.kiy.data.cache.MovieDb . map ( cursor ) . map ( genre ) ; } } ) . first () ;
if ( ( lose ) == false ) { i = 1 ; setImage ( ( ( ( i + 1 ) % 4 ) + ".png" ) ) ; }
switch ( game.Player.lastDir ) { case 1 : game.Player.y += game.Player.size ; break; case 2 : game.Player.x += game.Player.size ; break; case 3 : game.Player.y -= game.Player.size ; break; case 4 : game.Player.x -= game.Player.size ; break; default: game.Player.y -= game.Player.size ; break; }
public void analyze () { boolean error = false ; for ( nez.lang.Production p : this . p . getProductionList () ) { if ( ! ( this . p . getExpressionConsumalption () ) ) { if ( ! ( this . p . getExpressionConsumalption () ) ) { error = true ; } } } if ( error ) { nez.util.Utils . exitGrammar ( this . getExpressionConsole () , "Console Error" ) ; } }
{ if ( link == null ) return; link . setRemoved () ; link . getGearLink1 () . set ( null ) ; link . getGearLink2 () . set ( null ) ; if ( ( this . link ) == null ) return; this . link . addWorkerLink ( link ) ; }
fitness . mutatePopulation ( newPop )
if ( ( text == null ) || ( text . trim () . equals ( "" ) ) ) { toReturn += " " + text ; }
deploymentPolicyMap . containsKey ( deploymentPolicyID )
switch ( s ) { case "text" : ( counter ) ++ ; break; case "audio" : show_flash ( "show" ) ; break; case "next" : show_flash ( "next" ) ; break; case " instructions" : ( counter ) ++ ; break; case instructions [ counter ] . setText ( counter ) ; break; }
{ if ( ! ( listNameEditSupported ) ) { throw new java.lang.RuntimeException ( ( ( "Error: edited to edit Attempt List for List " + "group does not support it does not support it." ) + "ListName = this . listName ; } java.lang.String oldName = listName ; this . firePropertyChange ( listName , oldName , propList ) ) ; this . setListSupport ( listName ) ; }
{ org.junit.Assert . assertNotNull ( response ) ; org.junit.Assert . assertEquals ( httpCode , response . getStatus () ) ; java.lang.String json = response . getEntity () . toString () ; commonResult = ( ( T ) ( commonResult . readEntity ( org.junit.Assert . assertNotNull ( commonResult ) ) ) ) ; org.junit.Assert . assertNotNull ( commonResult ) ; return commonResult ; }
timeout > 0
@ java.lang.Override public void onCameraIdle () { removeCallbacksAndMessages ( null ) ; handler . postDelayed ( new java.lang.Runnable () { @ java.lang.Override public void run () { boundsTask . execute () ; } } , 500 ) ; }
{ for ( com.google.firebase.database.DataSnapshot d : dataSnapshot . child ( "Private Data" ) . getChildren () ) { userName . setText ( mEmail ) ; userName . setText ( "aa" ) ; } com.example.iathi.saathi.Student cVal = user . getValue ( com.example.iathi.saathi.Student . class ) ; java.lang.String name = cVal . getName () ; java.lang.String email = cVal . getCurrentUser () . getEmail () ; mAuth . setText ( name ) ; }
{ assert ( ( e . getValue () ) != null ) && ( new java.io.File ( e . getKey () ) . isAbsolute () ) ; assert new java.io.File ( e . getValue () ) . isAbsolute () ; }
{ org.apache.emc.sa.api.locks.InteripesProcessLock lock = getLock ( coordinatorClient ) . lock () ; lock . acquire () ; lock . release () ; statusService . persistOrder ( coordinatorClient ) ; }
private java.math.BigInteger getNum ( long k , kzrenkon.tomtr.fish.types.NFType t ) { if ( isUsed () ) { return t . getNumCachingUsed () ; } else { java.math.BigInteger sum = java.math.BigInteger.ZERO ; for ( kzrenkon.tomtr.fish.data.ResSubRes : subs ) { sum = sum . add ( sum , t , 0 ) ; } return sum ; } }
private java.lang.String getAccountsUrl ( java.lang.String deploymentUrl , java.lang.String username ) { if ( deploymentUrl . endsWith ( "/" ) ) { deploymentUrl = deploymentUrl . substring ( 0 , ( ( deploymentUrl . length () ) - 1 ) ) ; } java.lang.String accounts = ( ( ( deploymentUrl + "/" ) + username ) + "/json/json" ) + accounts ; return accounts ; }
( ( toAdd != null ) && ( toAdd != null ) ) && ( toAdd != "" )
{ super . onResume () ; if ( com.example.mausa.org.opencv.template.OpenCVLoader.TAG ) { android.util.Log . d ( com.example.mausa.org.opencv.template.OpenCVFourActivity.TAG , "vC" ) ; mLoaderManager . onConnectedCallback ( org.opencv.android.opencv.util.CallbackManager.SUCCESS ) ; } else { android.util.Log . d ( com.example.mausa.org.opencv.template.OpenCVActivity.TAG , "OpenCV to store" ) ; } if ( ( mLoader ) != null ) { mLoader . initLoader ( com.example.mausa.org.opencv.template.OpenCVActivity.TAG , this . response ) ; } }
{ android.content.ContextWrapper cw = new android.content.ContextWrapper () ; java.io.File directory = cw . getFilesDir () ; try { java.io.FileOutputStream fos = new java.io.FileOutputStream ( directory.name , filename ) ; myImageFormat . compress ( Bitmap.CompressFormat.LOG_PNG , bitmap , 100 ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } }
{ com.game.Audio.Sounds.sound = Gdx.audio . newSound ( Gdx.files . internal ( "Game_Sound/Sound.mp3" ) ) ; com.game.Audio.Sounds.sound . setLooping ( 0 , true ) ; com.game.Audio.Sounds.sound = com.game.Audio.Sounds.Menu_Music . 0.0F ( com.game.Audio.Sounds.Menu_Volume ) ; com.game.Audio.Sounds.sound . setLooping ( com.game.Audio.Sounds.Menu_Music , true ) ; com.game.Audio.Sounds.sound . play ( com.game.Audio.Sounds.Menu_Volume ) ; com.game.Audio.Sounds.sound . setLooping ( com.game.Audio.Sounds.Menu_Music , true ) ; }
return new java.util.ArrayList < java.lang.Runnable > () ;
( board.length )
{ if ( isOpen () ) return true ; boolean open = camera . open ( cameraIndex ) ; if ( open ) { camera . setCamera ( com.shootoff.camera.CameraFactory . openAddCameras ( this ) ) ; open = true ; } return open ; }
newAccountNumber ( 0 )
aSide != ( ( this . getBaseMetaTileEntity () . getFrontFacing () ) ? new gregtech.api.objects.GTBlockIcons.Textures.TEPORTER_ACTIVE_OVERLAYLE_ACTIVE : new gregtech.api.objects.GTTileEntityMetaTileEntity ( aTexture ) )
enter ( ctx . stmt () , this : : enterStmt )
assertEquals ( "ThirdLine" , testListener . getNextEventAsLine () . getLine () )
public java.lang.Iterable < game.Cell > allCells () { java.util.List < game.Cell > allCells = new java.util.ArrayList <> () ; for ( int y = 0 ; y < ( matrix . getWidth () ) ; y ++ ) { for ( int x = 0 ; x < ( matrix . getHeight () ) ; x ++ ) { allCells . add ( new game.Cell ( x , y , 0 ) ) ; } } return allCells ; }
new org.infinispan.io.GridInputStream ( file , data )
{ is . configureRequiredAction ( org.keycloak.services.managers.AuthenticationManager.CONFIG_TOTURE ) ; }
{ cz.cesnet.cloud.occi.parser.TextParser.LOGGER . debug ( "Reading response." ) ; body = body . replaceAll ( "X-OCCI-Location:\\s*" , "" ) ; java.lang.String [] lines = replaced . split ( "[\\r\\n]+" ) ; return makeList ( lines ) ; }
{ if ( backupName == null ) { return false ; } if ( backupName . endsWith ( BackupConstants.COMPRESS_SUFFIX ) ) { backupName = org.apache.commons.io.FilenameUtils . removeExtension ( backupName ) ; } java.io.File backupDir = new java.io.File ( backupName , ( isLocal ? new java.io.File ( getBackupDir () , java.io.File.RESTORE_DIR ) : new java.io.File ( backupName ) ) ) ; return backupDir . getBackupDir () ; }
{ if ( ( ( ( mudmap2.Mudmap2.places ) != null ) && ( ( mudmap2.Mudmap.place_locations ) != null ) ) && ( ( mudmap2.Mudmap.place_locations ) != null ) ) { for ( java.lang.Integer coordinate : mudmap2.Mudmap.place_locations ) if ( ( coordinate < ( mudmap2.Mudmap.place_second ) ) && ( coordinate > ( mudmap2.Mudmap.place_first ) ) ) return true ; } return false ; }
{ com.github.fishio.logging.TxtFileHandler handler2 = new com.github.fishio.logging.TxtFileHandler ( new com.github.fishio.logging.TimeStampFormat () , new java.io.File ( folder . getRoot () , new java.io.File ( folder . getRoot () ) ) ) ; com.github.fishio.logging.DefaultFormat df = new com.github.fishio.logging.DefaultFormat () ; handler2 . setFormat ( handler2 ) ; handler2 . close () ; try { handler2 . close () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } }
{ mScaleTouchSlop = android.view.ViewConfiguration . get ( context . getScaledTouchScreen () ) ; mSlop = context . getResources () . getDisplayMetrics () . widthPixels ; mMaxVelocity = context . getConfiguration () . getScaledVelocity () ; mLastFlingPoint = new android.graphics.Point () ; }
{ mAddFAB . setVisibility ( View.VISIBLE ) ; mAddDialog = new org.jasey.forit.fragment.Taskforit.TaskforitFragment () ; getSupportFragmentManager () . beginTransaction () . setTransition ( FragmentTransaction.TRANSIT_FRAGMENT_OPEN ) . replace ( R.id.activity_forit_activity , mAddFABPagerAdapter ) . addToBackStack ( null ) . commit () ; mAddDialog . notifyDataSetChanged () ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_search ) ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; android.os.Bundle client = new com.google.android.gms.common.api.GoogleApiClient.Builder ( this ) . addApi ( "News" ) . build () ; }
{ org.ejdb.bson.BSONObjectObject friend = new org.ejdb.bson.BSONObject ( "userid1" , java.lang.String . valueOf ( friendid ) , java.lang.String . valueOf ( friendid ) , java.lang.String . valueOf ( friendid ) ) ; return friend ; }
( _classPK ) != null
easySearchA2D . searchMatrix ( new int [] [] { new int [] { 1 , 3 } , new int [] { 7 , 10 , 7 , 11 } , new int [] { 30 , 23 , 30 , 23 } , new int [] { 30 , 11 , 11 } , new int [] { 30 , 11 } , 11 }
com.addressbook.thorrism.address.book.DroidBook . getInstance () . hideKeyboard ( getApplicationContext () , mCurrentEdit )
public java.lang.String getMultiVector () { java.lang.StringBuilder ans = new java.lang.StringBuilder () ; for ( int i = 0 ; i < groupSize ; i ++ ) ans . append ( ( ( thisVector [ i ] ) + " " ) ) ; return ans . toString () ; }
if ( calendarMode . equals ( AbstractDateWidget.CalendarMode.MONTHYEAR ) ) { dayPicker . setVisibility ( View.GONE ) ; dayPicker . setValue ( 0 ) ; } else if ( calendarMode . equals ( AbstractDateWidget.CalendarMode.YEAR ) ) { dayPicker . setVisibility ( View.GONE ) ; monthPicker . setValue ( 0 ) ; dayPicker . setValue ( 0 ) ; }
aabb . expandToContain ( memberLocation )
org.mockito.Mockito . mock ( org.newdawn.slick.Image . class )
{ android.view.View view = inflater . inflate ( R.layout.fragment_movie_details_item , container , false ) ; com.example.spiredin.videospiredin.utils.MovieViewHolder.ViewHolder movieViewHolder = new com.example.spiredin.videospiredin.utils.MovieViewHolder.ViewHolder ( view ) ; movieViewHolder.mRes . getmDescription () . setText ( mMovie . getImageName () ) ; movieViewHolder.mViewHolder.mViewHolder . getmDescription () . setText ( mMovie . getmDescription () ) ; return view ; }
{ mSPEditor = mSharedPreferences . edit () ; mSPEditor . removeStatus ( this ) ; }
return ( ( int ) ( ( ( java.lang.Math . abs ( seed ) ) % ( ( max_y ) + 1 ) ) ) ) ;
{ assert ( new org.json.JSONArray () ) != null ; assertEquals ( actual . asString () , new org.json.JSONArray () ) ; assert expected . setDefaultToArray ( mode ) ; }
startActivity ( intent )
{ Overlay overlay = new Overlay () ; PointRoi pointRoi = new PointRoi ( xCentroid , yCentroid ) ; pointRoi . setPosition ( roiPosition ) ; overlay . add ( pointRoi ) ; roi . setPosition ( roiPosition ) ; overlay . add (Count ) ; channel . setOverlay ( channel ) ; channel . show () ; }
switch ( s ) { case "user.home" : value = org.parabot.core.Directories . getCachePath () . getAbsolutePath () ; break; case "java.class" : value = "." ; break; default: value = java.lang.System . getProperty ( s ) ; break; }
{ mAudioService . executeAction ( Constants.ACTION_PLAY ) ; if ( isNetworkAvailable () ) { if ( ( mAudioPlayService ) != null ) { mAudioPlayService . start () ; btnForegroundAnimation . setImageResource ( ( btn ? android.R.drawable.ic_media_play : android.R.drawable.ic_media_pause ) ) ; } else { android.widget.Toast . makeText ( this , getString ( R.string.networkPlayService ) , Toast.LENGTH_SHORT ) . show () ; } } }
{ java.lang.String statement = "DELETE FROM Schedule WHERE date = ?" ; conn = establishConnection () ; prepStmt = conn . prepareStatement ( statement ) ; prepStmt . setDate ( 1 , date ) ; java.lang.System.out . println ( "Success" ) ; conn . close () ; }
{ mX = ( ( int ) ( event . getX () ) ) ; mY = ( ( int ) ( event . getY () ) ) ; setPlacingTouchEvent ( ( ( int ) ( event . getX () ) ) ) ; return true ; }
{ assert handler != null ; assert ( mouse ) != null ; assert ( handler ) instanceof Base.ActorIn ) && ( ( handler ) != null ) ; handler . handler () . selectorOut () ; handler . countDown () ; handler . handlerDown () ; handler . handlerClicked () ; handler . handlerMoved () ; handler . handlerDragged () ; }
if ( queue . isEmpty () ) { try { storeTrip ( queueMessage ) ; } catch ( java.lang.InterruptedException e ) { android.util.Log . e ( App.DB_TAG , "Exception while reading from queue!" , e ) ; } } else { try { java.lang.Thread . sleep ( 200 ) ; } catch ( java.lang.Exception e ) { android.util.Log . d ( App.DB_TAG , "Error while reading." , e ) ; } }
batch . draw ( cannonTexture ( 0 , ( ( - (x ) ) / 2.0F ) , ( ( - ( ypos ) ) - ( ( height ) / 2.0F ) ) , ( ( ( 23 ) + ( width ) / 2.0F ) , ( ( ( height ) / 2.0F ) ) , width , height , 2 , true )
{ org.apache.tamaya.builder.ConfigurationBuilder builder = new org.apache.tamaya.builder.ConfigurationBuilder () ; return; }
com.studygoal.jisc.isc.Managers.NetworkManager . getInstance () . updateProfileImage ( this , imagePath )
public void removeProgress () { if ( ( getItem () ) > ( ( getItemCount () ) - 1 ) ) { this . removeMovies ( list ) ; getItemCount () ; notifyItemRemoved ( ( ( getItemCount () ) - 1 ) ) ; } }
java.lang.String group_id
( blank ) + "\n"
propType . getWSetfield ()
setAdapter ( chatList )
{ if ( ( allWorkoutDates ) != null ) { allWorkoutDates . close () ; } if ( ( allEercises ) != null ) { allEercises . close () ; } adapter = getAlercisesOnEercises ( selectedEercises_date ) ; setListAdapter ( new android.widget.CursorAdapter ( this , R.layout.workout_summary_list_item , R.id.workout_summary_list_txt , "Exercises_count" , new java.lang.String [] { allEercises_name } , new int [] { com.alexrothui.workout.Eercises.Eercises.Eercises_NAME_KEY } ) ) ; }
agentIsizedS ? 1 : - 1
{ if ( ( _selectionMode ) != ( SelectionMode.USECOMBO ) ) { return; } _comboNameBox = createNameBox ( itemType ) ; if (Box == null ) { return; } _comboNameBox . addItemListener ( _curAction . getDeviceBeanByName ( newName ) ) ; _comboNameBox . addItemListener ( new jmri.jmrit.conditional.namePanel.ComboNamePanel ( _actionNamePanel ) ) ; _actionComboNamePanel . setVisible ( false ) ; _actionComboNamePanel . setVisible ( true ) ; _actionComboNamePanel . setVisible ( false ) ; }
private boolean getKeepEditorOnRowsDisabled ( org.json.JSONObject grid ) { java.lang.String keepEditor = grid . optString ( "keepClick" ) ; if ( ( keepEditor != null ) && ( ( keepEditor . trim () . length () ) > 0 ) ) { return java.lang.Boolean . parseBoolean ( keepEditor ) ; } return false ; }
modules . add ( e )
if ( isFavorite ) { item . setIcon ( getResources () . getDrawable ( R.mipmap.ic_star_white_24dp , null ) ) ; } else { item . setIcon ( getResources () . getDrawable ( R.mipmap.ic_star_outline_white_24dp , null ) ) ; }
{ java.util.List < de.dhbw.persistence.Match > matches = new java.util.ArrayList <> () ; if ( ( this . matchId ) != null ) { for ( java.lang.String id : this . matchesId . split ( ";" ) ) { long id = java.lang.Long . parseLong ( matchId ) ; de.dhbw.persistence.Match match = de.dhbw.persistence.KnowyItAll.matchById . getMatchyById ( id ) ; matches . add ( match ) ; } } return matches ; }
{ replaceFragment ( new com.sixmime.ait.ui.PersonListFragment () ) ; drawerList . setItemChecked ( position , true ) ; setTitle ( mDrawerMenuTitles [ position ] ) ; }
createSupport ( literalId , rId )
{ android.util.Log . d ( com.team2.android.proctor.ui.AttendanceFragment.TAG , ( "onReceived:" + newMessage ) ) ; java.lang.String payload = new java.lang.String ( new java.lang.String ( payload ) ) ; com.team2.android.proctor.model.AttendanceFragment message = new com.team2.android.proctor.model.AttendanceFragment () ; message . setUserId ( java.lang.Long . parseLong ( payload . split ( ":" ) [ 0 ] ) ) ; message . setCourseId ( java.lang.Integer . parseInt ( payload . split ( ":" ) [ 1 ] ) ) ; message . setCourseId ( java.lang.Integer . parseInt ( payload . split ( ":" ) [ 0 ] ) ) ; }
switch ( mBottomSheetNavigationView . getSelectedItemId () ) { case R.id.main_bottom_sheet_navigation_calendar : me.kholmukhamedov.organizer.ui.fragment.calendar.CalendarFragment calendarFragment = ( ( me.kholmukhamedov.organizer.ui.fragment.calendar.CalendarFragment ) ( mFragmentsMap . get ( CalendarFragment.TAG ) ) ) ; calendarFragment . hideCalendar () ; break; }
private java.time.LocalDate parseStringToDate ( java.lang.String inputDateStr , java.lang.String inputPattern , java.time.Pattern input ) { if ( ( inputDateStr != null ) && ( ! ( inputDateStr . isEmpty () ) ) ) { java.util.Locale locale = java.util.Locale . getDefault () ; java.time.format.DateTimeFormatter inputFormatter = java.time.format.DateTimeFormatter . parse ( inputPattern , new java.time.format.DecimalStyle.Builder () . withLocalDate ( locale ) . append ( inputPattern ) . append ( java.time.format.DateTimeFormatter.MEQ ) . withLenient () ) ; return inputFormatter . toDateTime ( inputStr , null ) ; } return null ; }
if ( ( ( httpCallback ) != null ) && ( ( httpCallback . getType () ) != null ) ) { try { httpCallback . onResolve ( new com.google.gson.Gson () . fromJson ( tStream . getType () , httpCallback . getType () ) ) ; } catch ( java.lang.Exception e ) { error ( "Exception,please resolve the http response" , e ) ; e . printStackTrace () ; } }
{ if ( ( ( object != null ) && ( ! ( object instanceof org.nl.amah.QL.QLForm.AbstractQuestionModel ) ) ) && ( value != null ) ) { return false ; } if ( ! ( object instanceof org.nl.amah.QL.QLForm.AbstractQuestionModel ) ) { return false ; } org.nl.amah.QL.QLForm.AbstractQuestionModel value = ( ( org.nl.amah.QL.QLForm.AbstractQuestionModel ) ( object ) ) ; if ( value . equals ( this . questionText ) ) { return false ; } return true ; }
return ( ( ( ( ( ( ( ( ( ( ( ( ( ( "ContactData{" + "id=" ) + ( id ) ) + ", name='" ) + ( name ) ) + '\'' ) + ",MainActivity='" ) + ( homePhone ) ) + '\'' ) + ", mobile='" ) + ( mobilePhone ) ) + '\'' ) + ", mobile='" ) + ( mobilePhone ) ) + '\'' ) + '}' ;
{ super . onOptionsItemSelected ( item ) ; switch ( item . getItemId () ) { case R.id.sort_by : java.lang.String [] items = getResources () . getStringArray ( R.array.sort_by ) ; com.rapsiangames.library.SortByDialog dialog = new com.rapsiangames.library.SortByDialog ( getActivity () , items , this ) ; dialog . show () ; break; } return true ; }
if ( ( ( currPitInfoIndex ) >= 0 ) && ( ( currTeam ) != null ) ) { try { boolean tempValue = temp_auto_high_goal_Button . isChecked () ; if ( currTeam . getBoolean ( DBContract.TablePitInfo.COLNAME_HIGH_AL_HIGH_NAME ) ) { tempValue . put ( DBContract.TablePitInfo.COLNAME_HIGH_AL_HIGH_NAME , tempValue ) ; if ( ! ( fillingPitInfo ) ) { dbHelper . updateCompoundPitInfo ( currTeam ) ; } } } catch ( org.json.JSONException e ) {} }
{ java.io.File [] children = file . listFiles () ; java.util.List < org.jenkinsci.plugins.ontroluicTreeNode > r = new java.util.ArrayList < org.jenkinsci.plugins.ontroluicTreeNode > () ; if ( children != null ) { for ( java.io.File c : children ) { r . add ( new java.io.File ( c ) ) ; } } return r ; }
{ configuration . setAttribute ( IUML2JavaContants.ATTR_TARGET_FOLDER_PATH , targetText . getText () ) ; java.util.Set < java.lang.String > umlModelPaths = new java.util.LinkedHashSet < java.lang.String > () ; org.eclipse.tml.widgets.TableItem [] items = modelTablePaths . getItems () . getItems () ; for ( org.eclipse.tml.widgets.TableItem tableItem : items ) { tableItem . add ( umlModelPaths ) ; } configuration . setAttribute ( IUML2JavaContants.ATTR_TARGET_MODEL_PATH , umlModelPaths ) ; }
{ mMap . clear () ; mMap . moveCamera ( com.google.android.gms.maps.CameraUpdateFactory . newLatLngZoom ( new com.google.android.gms.maps.model.LatLng ( mCurrentLocation . getLatitude () , mCurrentLocation . getLongitude () ) , com.google.android.gms.maps.Activities.MapActivity.CAMERA_ZOOM ) ) ; if ( ( mMap ) != null ) { mMap . centerLocation ( new com.google.android.gms.maps.model.LatLng ( mCurrentLocation . getLatitude () , mCurrentLocation . getLongitude () ) ) ; } }
iterator . remove ()
{ if ( com.blazingkin.interpreter.variables.Variable . isInteger ( line ) ) { return true ; } if ( com.blazingkin.interpreter.variables.Variable . isBool ( line ) ) { return true ; } else if ( com.blazingkin.interpreter.variables.Variable . isBool ( line ) ) { return true ; } return false ; }
tokenString = arguments . get ( "accessToken" ) . toString ()
{ int l = data.length ; putInt ( l ) ; ensure ( ( ( position ) + l ) ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . copyMemory ( com.heerbann.unsafe.UnsafeBuffer . toAddress ( data ) , ( ( pointer ) + ( position ) ) , l ) ; position += l ; end += l ; }
generateRanNumList ( ( size - 1 ) , choice )
private void placeFoodBlobs () { int counter = 11 ; while ( counter != 0 ) { java.awt.Point [] foodBlob = makeFoodBlob () ; if ( foodBlob != null ) { for ( java.awt.Point p : foodBlob ) { map . setHas ( ( p . getCell ( p ) ) ) ; } counter -- ; } } }
{ gamelogic.Board board = new gamelogic.Board () ; gamelogic.Square [] [] grid = new gamelogic.Square [ 20 ] ; grid [ 20 ] . setGrid ( grid ) ; org.junit.Assert . assertTrue ( ( ( grid . getGrid () ) == ( board ) ) ) ; }
ShareCompat.IntentBuilder . from ( activity ) . setType ( "text/plain" ) . addEmailToSubject ( "" ) . setSubject ( title ) . setStream ( android.support.v4.content.ContextProvider . getUri ( activity , org.eyeseetea.malariacare.data.BuildConfig.APPLICATION_ID , ( ( org.eyeseetea.malariacare.data.utils.BuildConfig.APPLICATION_ID ) + ".test" ) ) ) . setExportTitle ( attachedTitle ) . setText ( "Add attached" ) . start () ;
protected java.lang.Boolean execute ( java.lang.Object . . . args ) throws java.lang.Exception { try { client . prepareDelete ( indexName , ".colatorper" , indexName ) . query ( WriteRefreshPolicy.RefreshRequest . Write () ) . execute () ; return true ; } catch ( java.lang.Exception e ) { org.apache.shicom.elasticsearch.persistence.PersistenceServiceImpl.logger . error ( "Cannot delete query" , e ) ; } return false ; }
{ this . targetClass = version ; if ( org.spongepowered.asm.util.Constants.JAVA_CLASSVERSION8_FILE ) { org.spongepowered.asm.mixin.transformer.RefHandle memberRef = new org.spongepowered.asm.mixin.transformer.RefHandle ( handleMemberField , member ) ; if ( memberRef . isField () ) { this . transformRef ( memberRef , memberField , iter ) ; } else { this . transformRef ( memberRef , memberHandle , iter ) ; } } return this . transformRef ( memberRef ) ; }
{ com.fasterxml.jackson.core.JsonFactory factory = new com.fasterxml.jackson.core.JsonFactory () ; com.fasterxml.jackson.databind.ObjectMapper mapper = new com.fasterxml.jackson.databind.ObjectMapper ( factory ) ; com.fasterxml.jackson.core.type.TypeReference < java.util.HashMap < java.lang.String , java.lang.Object > > typeRef = new com.fasterxml.jackson.core.type.TypeReference < java.util.Map < java.lang.String , java.lang.Object > > () ; try { return mapper . readValue ( getArg () , typeRef ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; return null ; } }
assertEquals ( "fixme" , app.items [ 0 ] . name )
self . getDelegate () . didChangeDrawing ( self , self . canUndo () , self . canRedo () )
{ if ( output . equals ( "Success " ) ) { working . setTextColor ( Color.GREEN ) ; working . setText ( "Clocked in Succesfully" ) ; sendNotification () ; } else if ( output . equals ( "Failure " ) ) { working . setTextColor ( Color.RED ) ; working . setText ( "You can't add again" ) ; } }
org.apache.hadoop.util.ToolRunner . run ( this , new fr.finro.parquet.utils.AvroConverter ( configuration , otherArgs ) )
{ getPopupMenu () . setVisible ( false ) ; net.sourceforge.dashprocess.teamgroup.UserFilter selectedItem = new net.sourceforge.dashprocess.teamgroup.ui.UserGroupSelector ( javax.swing.SwingUtilities . getWindow () , "Ancestor" , this ) ; selectedItem . setSelectedFilter ( javax.swing.SwingUtilities . getSelectedItemFilter () ) ; defaultSelectionManager . clearSelections () ; }
values [ ( ( values.length ) - 1 ) ]
{ org.dasein.cloud.azure.network.AzureCapabilities capabilities = mockDeencitulationSupport . getField ( "capabilities" , "dut" ) ; org.dasein.cloud.azure.network.tests.LoadBalancerSupport acal = mockSupport . getField ( capabilities , "dut" ) ; org.dasein.cloud.azure.provider.CloudDeencitulation provider = capabilities . getField ( capabilities , "provider" ) ; assertEquals ( "get" , provider ) ; assertEquals ( "t't initialized for virtual" , capabilities , mockCapabilities . getField ( capabilities , acal ) ) ; }
public void close () { android.content.Intent intent = new android.content.Intent ( "android.GPS_ENABLED" ) ; intent . putExtra ( "enabled" , false ) ; sendBroadcast ( intent ) ; if ( ( service ) != null ) { unregisterReceiver ( ( id ) ) ; } if ( ( workData ) != ( - 1 ) ) { startActivity ( intent ) ; finish () ; } }
@ java.lang.Override public void onNext ( manilo.cats.androidclient.api.model.Cat cat ) { if ( ( getCatImgUrl () ) != null ) { getCatImgUrl ( cat ) . addObserver ( cat ) ; } }
matcher . find () ? java.lang.Double . valueOf ( matcher . group ( 0 ) ) : 100.0
return 1 ;
{ android.view.View view = android.view.LayoutInflater . from ( getActivity () ) . inflate ( R.layout.item_title , null ) ; android.widget.TextView textView = ( ( android.widget.TextView ) ( view . findViewById ( R.id.text_title ) ) ) ; textView . setText ( title ) ; container . addView ( view ) ; }
handleAttack ( game.opponent )
private java.util.List < input.ExternalEvent > readEvents ( int nrofEvents ) { if ( nrofEvents > 0 ) { return new java.util.ArrayList < input.ExternalEvent > ( input ) ; } java.util.List < input.ExternalEvent > events = reader . readEvents ( nrofEvents ) ; if ( ( ( events . size () ) > 0 ) && ( ( events . size () ) == 0 ) ) { reader . close () ; events = true ; } return events ; }
userAnswer = new com.temin.models.Answer ()
doExit () ;
{ java.io.File sourcePath = new java.io.File ( "struct-test/core/unit/test" ) ; com.structur.component.FinderComponent component = new com.structur.component.FinderComponent ( new com.structur.component.FinderComponent ( sourcePath , "com" ) , new com.structur.component.FinderComponent ( sourcePath ) ) ; component . findComponents () ; assertEquals ( somethingA () , component . getDescription () ) ; assertEquals ( somethingA () , component . getDescription () ) ; else assertEquals ( "A does too does too something does too something does." , component . getDescription () ) ; }
notifyCurrentPlayerUpdated ( false )
if ( ( item . getItemId () ) == ( android.R.id.home ) ) { android.content.Intent homeIntent = new android.content.Intent ( getApplicationContext () , com.rilan.finances.activities.MainActivity . class ) ; homeIntent . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TOP ) ; startActivity ( homeIntent ) ; } else { android.content.Intent intent = new android.content.Intent ( getApplicationContext () , com.rilan.finances.activities.SettingsActivity . class ) ; startActivity ( intent ) ; }
net.hazmatrobot.lightshow.coordinators.CoordinatorMain.server . run ()
this . executeScript ( script , 0 , 0 )
gr8pefish.ironbackpacks.app.capabilities.DeathPlayerBackpackCapabilities . setDeathEquippedBackpack ( player , message.stackEquipped )
val2 == 0
{ com.chenyirun.theircraft.model.Point3 block = blockLocation . getLocation () ; blockLocation . addAll ( block ) ; }
session . setAttribute ( "items" , item )
forName ( ( "Remove-Entry:" + "," ) )
public void createConnector ( io.joynrynar.bitration.ArrationResult result ) { connectorLock . lock () ; try { connector = io.joynrynar.proxy.ConnectorFactory . createConnector ( dispatcherId , messageSenderId , proxyParticipantId ) ; result =QueuedSufulStatus ( connector ) ; sendStatus ( connector ) ;QueuedSuccessfullyQueuedRequests () ; } catch ( io.joynrynar.exceptions.ArrationIllegalStateException e ) { e . printStackTrace () ; } finally { connectorLock . unlock () ; } }
{ this . quizName = newQuizName ( writeToFile ( quizName , ( ( ".txt" + ( toString () ) ) ) , false ) ) ; return true ; }
{ java.sql.Timestamp openTime = prizeLottery . getOpenOpenTime () ; unifyOpenTime ( openTime ) ; }
{ super . onSaveInstanceState ( outState ) ; android.support.v7.widget.LinearLayoutManager linearLayoutManager = ( ( android.support.v7.widget.LinearLayoutManager ) ( mRecyclerView . getLayoutManager () ) ) ; android.support.v7.widget.LinearLayoutManager linearLayoutManager = ( ( android.support.v7.widget.LinearLayoutManager ) ( linearLayoutManager . findFirstVisibleItem ( position ) ) ) ; outState . putInt ( ir.micro.c.movie_movie_activities.MainActivity.KEY_FIRST_MOCELABLE , movieArrayList ) ; outState . putParcelable ( ir.micro.c.movie_movie_activities.MainActivity.KEY_FIRST_MOCELABLE , movieArrayList ) ; }
public synchronized void removePlayer ( CardGame.User user ) { int index = 0 ; for ( CardEngine.Game.Player player : players ) { if ( player . getUsername () . equals ( user . getUserName () ) ) { index ++ ; } } remove ( index ) ; }
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/save/EsData/datasays" ) public org.wes.demo.datas.model.ActionResult saveEsData ( @ org.springframework.web.bind.annotation.RequestBody org.wes.demo.datas.voays.EsItem doc ) { org.wes.demo.datas.model.ActionResult result = null ; try { result = new org.wes.demo.datas.model.ActionResult ( doc ) ; doc . save () ; } catch ( java.lang.Exception e ) { org.wes.demo.datas.actions.EsItemController.LOG . error ( e . getMessage () , e ) ; } return result ; }
public static org.neo4j.kernel.impl.query.TransactionalContext createTransactionalContext ( java.lang.String query , org.neo4j.kernel.api.impl.java.InternalExecutionEngine transaction ) { org.neo4j.core.api.java.internal.cypher.compat.ExecutionEngineTest.connection = org.neo4j.kernel.internal.cypher.compat.ExecutionEngineTest.connection . beginTransaction () ; org.neo4j.kernel.impl.java.query.BoltConnectionInfo bolt = new org.neo4j.kernel.impl.java.query.BoltConnectionInfo ( new java.net.InetSocketAddress ( "127.0.0.1" , "127.0.0.1" , "127.0.0.1" , "username-bolt" ) , new java.net.InetSocketAddress ( "127.0.0.1" , "127.0.0.1" ) , new org.neo4j.driver.impl.java.impl.java.BoltConnectionInfo ( "connection" , "username-bolt" ) , new java.net.InetSocketAddress ( "127.0.0.1" , "127.0.0.1" ) ) ; return transaction ; }
java.nio.file.Paths . get ( coreHome , "dataName" , "index" , cleanDirectory )
{ parser = util.PropertiesUtil . getInstance ( util.PropertiesUtil . getInstance () ) ; java.lang.String serverUrl = parser . getValue ( "serverUrl" ) ; java.lang.String appkey = parser . getValue ( "appkey" ) ; java.lang.String appSecret = parser . getValue ( "appkey" ) ; java.lang.String randomNum = parser . getValue ( "appkey" ) ; com.taobao.api.DefaultClient newClient = new com.taobao.api.DefaultClient ( randomNum , appSecret , security ) ; }
{ java.nio.channels.FileChannel fc = openFiles . remove ( filePath ) ; if ( fc != null ) { if ( fc . exists () ) { filePath . close () ; } fc = null ; } }
if ( ( item . getSellellIn () ) > 0 ) item . setQuality ( ( ( item . getQuality () ) - ( mvc.ganicanas.models.OrganQuality.STEP_QUALITY ) ) ) ; else item . setQuality ( ( ( item . getQuality () ) - ( mvc.ganicanas.models.OrganQuality.STEP_QUALITY ) ) ) ;
new todo.javier.mera.todolist.model.Task ( java.util.UUID . randomUUID () . toString () , todoListId , "My Task" , todo.javier.mera.todolist.model.TaskStatus.Created , new java.util.Date () . getTime () , new java.util.Date () . getTime () , todo.javier.mera.todolist.model.TaskPriority.None )
new org.eclipse.smarthome.automation.core.internal.RuntimeRule ( rule . getUID () , rule . getConfiguration () , rule )
{ initMessageHandler () ; android.support.v4.app.FragmentTransaction ft = mFragmentManager . beginTransaction () ; ft . setCustomAnimations ( android.R.anim.fade_in , android.R.anim.fade_out , android.R.anim.fade_out ) ; ft . replace ( R.id.fragment_container , new babyfon.javagen.view.fragment.FragmentBackStack ( null ) ) . addToBackStack ( null ) . commit () ; }
{ boolean isValid = true ; java.lang.String firstPolicyName = policyNames [ 0 ] ; for ( java.lang.String policyName : policyNames ) { if ( ! ( policyName . equals ( policyName ) ) ) { isValid = false ; break; } } return isValid ; }
{ kassa.Kvitto k = skapaTomtK () ; java.util.ArrayList < kassa.Vara > varSam = new java.util.ArrayList < kassa.Vara > () ; for ( int i = 0 ; i < 6 ; i ++ ) { varSam . add ( skapaTomV () ) ; } assertEquals ( k , varSam . getVar ( i ) ) ; }
public static synchronized void update () { if ( ! ( haven.GLState.GLState . class ) ) return; if ( ( haven.GLState.GLState.alled . size () ) > ( haven.GLState.epsSlot.all . size () ) ) return; haven.GLState.GLState.all = new haven.de.plist.Slot < ? > ( haven.GLState.GLState.all . size () ) ; for ( haven.GLState.Slot s : haven.GLState.GLState.all ) s . slot ( false ) ; }
org.eclipse.jetty.util.URIUtil . encodePath ( path , 1 )
if ( expr . canCastReal () ) returnType = Type.REINT ; else { returnType = Type.REINT ; throw new java.lang.RuntimeException ( "Cannot cast or 'real''.!" ) ; }
pl.karol20olution.evolution.utils.Vector2Vector get ( java.lang.String key ) { org.w3c.dom.Element vector = getByNameFromListElement ( key ) ; if ( vector == null ) throw new pl.karol20olution.evolution.utils.Vector2.SimulationParseException ( ( "Simulation not found: " + key ) ) ; return new pl.karol20olution.evolution.utils.Vector2Vector ( java.lang.Float . parseFloat ( element . getAttribute ( "x" ) ) , java.lang.Float . parseFloat ( element . getAttribute ( "y" ) ) ) ; }
if ( ( random . nextInt ( 100 ) ) >= ( target . getChannelNonDropChannelProbability ( target ) ) ) { sendToTarget ( record , target ) ; }
{ org.junit.Assert . assertEquals ( nullLinkedList . findLinkedList ( 1 ) , 1 ) ; doubleHeadLinkedList . insertLinkedList ( 1 ) ; doubleHeadLinkedList . insertLinkedList ( 3 ) ; org.junit.Assert . assertEquals ( 1 , doubleHeadLinkedList . getSize () ) ; org.junit.Assert . assertEquals ( 1 , doubleHeadLinkedList . findLinkedList ( 1 ) ) ; }
( get ( i ) )
power = ( p [ i ] ) * ( q [ l ] )
{ java.lang.String model = null ; try { model = org.programmatori.domotica.own.sdk.config.Config . getInstance () . getNode ( "system.system.model" ) ; } catch ( java.lang.Exception e ) {} if ( model == null ) { model = new org.programmatori.domotica.own.plugin.Value ( org.programmatori.domotica.own.plugin.Value.plugin ) ; } return model ; }
{ java.lang.String string = ( ( java.awt.TextField ) ( text . getText () ) ) ; if ( ( string . length () ) == 0 ) return false ; if ( ( string . equals ( "-" ) ) || ( string . equals ( "-" ) ) ) { return false ; } try { return java.lang.Double . parseDouble ( string ) ; } catch ( java.lang.NumberFormatException e ) {} }
checkResources ( apps [ i ] )
if ( language . equalsIgnoreCase ( "mandarin" ) ) { addExecute () ; } else if ( language . equalsIgnoreCase ( "kore" ) ) { try { kanorekore () ; } catch ( java.lang.Exception e ) { java.lang.System.out . println ( ( "Error " + e ) ) ; } } else { ch . addExecute () ; }
{ final java.lang.ThreadLocal < com.tinkerpop.blueprints.impls.orient.OrientBaseGraph.GraphRecord > is = com.tinkerpop.blueprints.impls.orient.OrientBaseGraph.initStack . get ( null ) ; if ( is != null ) dbThreadLocal . clear () ; final java.lang.ThreadLocal < com.tinkerpop.blueprints.impls.orient.OrientBaseGraph.GraphRecord > agtl = com.tinkerpop.blueprints.impls.orient.OrientBaseGraph.activeLocal ; if ( agtl != null ) agtl . set ( com.tinkerpop.blueprints.impls.orient.OrientBaseGraph.DatabaseRecord ) ; }
{ android.content.Intent intent = new android.content.Intent ( getApplicationContext () , com.example.hvs.UpdateActivity . class ) ; intent . putExtra ( "liga" , ligaNr ) ; intent . putExtra ( "update" , 1 ) ; intent . putExtra ( "liganame" , this . getTitle () ) ; this . finish () ; startActivity ( intent ) ; }
{ initializeInMemoryInMemory () ; executeDataSet ( "org/openmrs/module/id/genid/genid" ) ; authenticateTestData () ; org.openmrs.module.id.genid.BaseSourceIdentifierService < org.openmrs.module.id.genid.processor.IdentifierGenerator < org.openmrs.module.id.genid.processor.IdentifierGenerator < ? > , java.util.Map < org.openmrs.module.id.genid.processor.IdentifierGenerator < ? > , java.lang.Class < ? extends org.openmrs.module.id.genid.processor.IdentifierGenerator < ? > > result = new org.openmrs.module.id.genid.processor.IdentifierGenerator < org.openmrs.module.id.genid.processor.IdentifierGenerator < ? > , java.util.Map < org.openmrs.module.id.genid.genid.processor.IdentifierGenerator < ? > > ) ; processor = new java.util.HashMap < org.openmrs.module.id.genid.processor.IdentifierGenerator < ? extends org.openmrs.module.id.genid.processor.IdentifierGenerator < ? > , java.lang.Class , java.lang.String > () ; processor . put ( "id/genid/genid" , org.openmrs.module.id.genid.genid.BaseSourceIdentifierService . class ) ; processor . put ( new org.openmrs.module.id.genid.genid.processor.IdentifierGenerator < ? > () , org.openmrs.module.module.id.genid.genid.processor.IdentifierGenerator < ? > ) ; }
private static java.lang.String getStringResponse ( java.io.InputStream is ) throws java.io.IOException { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( is ) ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; try { while ( ( line = reader . readLine () ) != null ) { sb . append ( ( line + "" ) ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } return sb . toString () ; }
initRecyclerView ( false )
{ n1.clusterService . removeAddress ( n2.address ) ; n2 = null ; }
source . getElement ( label , destination ) . addEdge ( destination , null )
public void payForMeal ( core.agent.Message message ) { core.restaurant.agent.Customer customer = message . get ( 0 ) ; float amount = 0 ; for ( core.restaurant.checks.Check c : m_Check ) { if ( ( c . getCustomer () ) == ( customer . getCustomer () ) ) { cost = true ; } } printStatusChange ( ( ( customer . getName () ) - amount ) ) ; stateChanged ( customer ) ; }
{ com.dianping.cat.report.service.model.DependencyModel < com.dianping.cat.consumer.service.model.DependencyReport > response = m_service . invoke ( request ) ; if ( response != null ) { com.dianping.cat.consumer.service.model.DependencyReport report = response . getModel () . getDomain () ; return report . getDomainNames () ; } else { return new java.util.HashSet <> () ; } }
new entities.obacles.Entity ( tModels . get ( eName , mData . get ( 0 ) , eName , rotX , rotY , tZ ) )
{ return true ; }
protected void initTableColumns ( org.eclipse.jface.layout.TreeLayoutColumn treeColumn , boolean keepStatus ) { if ( ( ( tree ) != null ) && ( ! ( tree . isDisposed () ) ) ) { org.eclipse.swt.widgets.TreeViewer.Tree tree = tree . getTree () ; if ( ( tree != null ) && ( ! ( tree . isDisposed () ) ) ) { initTableColumns ( tree , this , tree ) ; } } }
{ app . speakOut ( "Sorry This This is my scope." ) ; }
{ javax.servlet.RequestDispatcher dispatcher = null ; java.util.List < fr.ieneditor.expestion.entity.Article > lstArticle = gouserBean . rechTerlster () ; request . setAttribute ( "chestion" , lstArticle ) ; fr.ieneditor.expestion.servlet.GestionServlet.LOGGER . info ( "WEB-INF/toto.jsp" ) ; request . getRequestDispatcher ( "/WEB-INF/views/gestion.jsp" ) . forward ( request , response ) ; }
@ org.junit.Test public void testKeyColumnByIterator () { int count = 0 ; java.util.Iterator < java.lang.Integer > iterator = org.apache.hadoop.hbase.util.BytesPersistenceServiceImpl . toBytes ( org.apache.gbif.occurrence.persistence.PersistenceServiceImplTest.DATASET_KEY . toString () , org.gbif.occurrence.persistence.TermColumns.DATASET_KEY . toString () ) ; while ( iterator . hasNext () ) { count ++ ; } assertEquals ( 1 , count ) ; }
{ if ( ! ( currentNode.nodeText . getText () . equals ( "\n" ) ) ) { CurrentPos.nodeX = currentNode.nodeText . getX () ; java.lang.Math . round ( ( ( currentNode.nodeText . getLayoutBounds () . getWidth () ) + ( CurrentPos.nodeText . getY () ) ) ) ; } else { CurrentPos.nodeY = currentNode.nodeText . getY () ; } double delta = java.lang.Math . round ( delta ) ; CurrentPos.util.Fast . post ( delta ) ; }
getOrderSpecification ( testInstrument2 , OrderCommand.SELL , 0.7 )
( java.lang.Math . log ( ( e / vm ) ) ) + ( vm - ( java.lang.Math . log ( ( k / vm ) ) ) )
{ com.fasterxml.jackson.databind.JsonNode atIotLinkPath = node . path ( org.n52.shared.sensorthings.decoder.AT_IOT_NEXT_LINK ) ; if ( checkNode ( atIotLinkPath ) ) { return atIotLinkPath ; } else if ( checkNode ( atIotLinkPath ) ) { com.fasterxml.jackson.databind.JsonNode linkPath = node . path ( org.n52.shared.sensorthings.decoder.NEXT_IOT_NEXT_LINK ) ; return linkPath . parseText ( linkPath ) ; } return null ; }
{ super . onCreate ( savedInstanceState ) ; traceapp.trace.StartDrawLocationManager.appLocationManager = MainActivity.appLocationManager.activity_main ; setContentView ( R.layout.activity_main ) ; drawView = new traceapp.trace.DrawView ( this ) ; drawView . setBackgroundColor ( Color.WHITE ) ; drawView . setDrawSize ( array ) ; drawView . getDrawSizeArray () ; drawView . setLoc ( false ) ; }
{ if (Dir . getText () . isEmpty () ) { javafx.scene.control.Alert alert = new javafx.scene.control.Alert ( javafx.scene.control.Alert.Alert.AlertType.WARNING ) ; alert . setTitle ( "Averter" ) ; alert . setHeaderText ( "Erurcheél a recher dincher recher recher recher recher " ) ; } else { alert . setContentText ( "Selincheél à recher recher recher recher recher recher recher recher recher recher recher re" ) ; alert . show () ; } }
{ return null ; }
{ text . append ( i ) . append ( SearchUtil.SPACE_SEPARATOR ) ; i . append ( SearchUtil.SPACE_SEPARATOR ) ; }
public void initSubviews () { setSupportActionBar ( toolbar ) ; getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; android.support.v7.app.ActionBarDrawerToggle toggle = new android.support.v7.app.ActionBarDrawerToggle ( this , drawerLayout , toolbar , R.string.navigation_drawer_open , R.string.navigation_drawer_close ) ; drawerLayout . setDrawerListener ( toggle ) ; toggle . syncState () ; }
new com.netflix.spinnaker.fi.providers.ProviderException ( e . getCause () )
private static int getValidLineNumber ( int line , com.intellij.openapi.editor.Document document ) { int lineCount = net.masthought.dlanguage.highlighting.annotation.CompileCheck.externalCount ; line = document . getDocument ( line ) ; if ( lineCount <= 0 ) { line = - 1 ; } else if ( lineCount > 1 ) { line = 1 ; } return line ; }
geoStoreClient . getUsers ( 100 , 100 )
if ( ( ! ( canClick ) ) || ( ( ( android.os.SystemClock . elapsedRealtime () ) - 200 ) < ( lastClickTime ) ) ) return;
@ java.lang.Override public void onClick ( android.view.View view ) { switch ( view . getId () ) { case R.id.tv_info_album_info_info_name : android.content.Intent intent = new android.content.Intent ( this , com.zholz.minoteminfoartists.activities.ArtistsActivity . class ) ; intent . putExtra ( SearchActivity.ARTISTART_NAME , albumedArt ) ; startActivity ( intent ) ; break; } }
com.badlogic.gdx.scenes.scene2d.actions.Actions . sequence ( com.badlogic.gdx.scenes.scene2d.actions.Actions . fadeOut ( ( ( this . duration ) / 2 ) , com.badlogic.gdx.scenes.scene2d.actions.Actions . run ( new java.lang.Runnable () { @ java.lang.Override public void run () { secondaryTask () ; } } , 0 ) ) )
{ textBox . setValue ( newValue ) ; valueUpdateTimer . scheduleDelay ( scheduleUpdateTimer ) ; }
public void openChat ( android.view.View view ) { chatButton . getText () . toString () ; android.content.Intent intent = new android.content.Intent ( this , pl.edu.prip.messenger.Chat . class ) ; intent . putExtra ( "from" , from ) ; intent . putExtra ( "id" , id ) ; intent . putExtra ( "to" , to ) ; startActivity ( intent ) ; }
while ( ! ( cs . isLast () ) ) { rows . add ( this . handleRow ( cs ) ) ; }
if ( ( listToSetBottomOfBottom . size () ) > 10 ) { listToSetBottom = listToSetBottom . size () ; } else { listToSetBottom = ( listToSetBottom ) + 11 ; }
{ if ( ( ! ( checkIndex ( index ) ) ) || ( isEmpty () ) ) { return null ; } if ( ( index == ( - 1 ) ) || ( ( tail ) == ( - 1 ) ) ) { return data_structures.Node node = head ; } for ( int i = 0 ; i < index ; i ++ ) { node = node . getNext () ; } return node ; }
com.actemium.basic.Txv_sdk.PersistRestanceRestanceManager.instance = ( ( com.actemium.basic.Txv_sdk.persistanceGlobalManager.instance ) ( null ) ) . close () ;
public void moveTailToBackHead () { if ( ( length ) > 0 ) { com.mygdx.game.Cell body = tail . get ( ( ( length ) - ( length ) ) ) ; bumbCrreadsList . setX ( ( ( length ) - 1 ) ) ; bumbCrreadsList . get ( ( ( length ) - 1 ) ) . setY ( length ) ; bumbCrreadsList . get ( ( ( tail ) - 1 ) ) . setY ( length ) ; } }
{ java.sql.PreparedStatement s1 = connection . prepareStatement ( "SELECT systemUserId FROM SystemUser WHERE username=?" ) ; s1 . setString ( 1 , username ) ; java.sql.ResultSet result_ = s1 . executeQuery () ; if ( result_ . next () ) return result_ . getInt ( booking_id ) ; return result_ . getInt ( booking_id ) ; }
{ int choice = 0 ; int chosenPokemon ; do { chosenPokemon = 0 ; printStarter () ; chosenPokemon = getChosen () ; } while ( chosenPokemon != 0 ) ; if ( choice == 1 ) { java.lang.System.out . println ( "Yes" ) ; return; } else if ( choice == 2 ) { java.lang.System.out . println ( "One from No" ) ; } else { java.lang.System.out . println ( "Success!" ) ; break; } }
public static int getIndexDoc ( final java.lang.String fileName ) { for ( int di = 0 ; di < n ; di ++ ) { if ( di [ di ] . getDoc () . contains ( fileName ) ) return di [ ( ( di - 1 ) - 1 ) ] . getPath () ; } return 1 ; }
{ if ( ! ( views . isEmpty () ) ) { android.view.View out = views . peek () ; if ( out != null ) { onPageTransitionListener . onPageTransition ( inPair , transitionPairs ) ; } transitionPairs . push ( out ) ; transitionPairs . push ( transitionPair ) ; } }
if ( null != ( req . getContextPath () ) ) { cookie . setPath ( "/" ) ; } else { cookie . setPath ( "/" ) ; }
org.isoronhu.its.utils.RingtoneManager . getRingtoneUri ( ring , contextUri )
process ( repository , null )
@ java.lang.Override public void removeSavedArticle ( com.rocdev.guardianreader.models.Article article ) { for ( com.rocdev.guardianreader.models.Article a : articles ) { if ( a . equals ( article ) ) { articles . remove ( a ) ; break; } } if ( articles . isEmpty () ) { aContainer . showArticlesChanged ( true , true ) ; } }
res = 0
{ java.util.ArrayList < java.lang.String > listName = new java.util.ArrayList <> () ; listName . add ( "Singer" ) ; listName . add ( "Composer" ) ; listName . add ( "Director" ) ; listName . add ( "Lric" ) ; listName . add ( "Langl" ) ; adapter = new com.filmang.kadfilfinder.SimpleAdapter ( getApplicationContext () , listName ) ; lvList . setAdapter ( adapter ) ; lvList . setOnItemClickListener ( this ) ; initializeAllList () ; }
return new java.util.ArrayList <> () ;
{ populateData ( model ) ; return "category-update" ; }
switch ( eventType ) { case "MOUSE_CLICKED" : text = "Mouseed" ; break; case "MOUSE_ENTER" : text = "Mouse" ; break; case "MOUSE_EXITED" : text = "Mouse" ; break; }
{ java.io.FileOutputStream fout = new java.io.FileOutputStream ( zipFile ) ; try ( java.util.zip.ZipOutputStream zout = new java.util.zip.ZipOutputStream ( fout ) ) { org.jboss.tools.sitegenerator.generator.ManifestFetchFromManifest . zip ( dir , "" , zout ) ; zout . pack () ; zout . close () ; } }
request . removeAttribute ( "notification" )
l . set ( i , set . get ( i ) )
this . service . loanApplication ( application )
{ prettyPrinter . scan ( modelClassled ) ; java.lang.String sourceCode = ( ( ( ( "package " + ( modelClassled . getPackage () . toString () ) ) + ";" ) + ( java.lang.System . getProperty ( "line.separator" ) ) ) + ( prettyPrinter . toString () ) ) + ( sourceCode ) ; return sourceCode ; }
{ final org.opendaylight.openflowplugin.applications.statistics.manager.impl.statistics.helper.FlowComparatorFactory < org.opendaylight.yang.gen.v1.urn.opendaylight.flowplugin.applications.statistics.manager.impl.helper.FlowComparatorFactory > simpleComparator = org.opendaylight.openflowplugin.applications.statistics.manager.impl.statistics.FlowComparatorFactory . createMatchComparator () ; org.junit.Assert . assertEquals ( null , simpleComparator . areEqual ( false ) ) ; org.opendaylight.openflowplugin.applications.statistics.manager.impl.statistics.FlowComparatorFactoryTest . compareFlowEqual ( simpleComparator , true ) ; org.junit.Assert . assertEquals ( 0 , simpleComparator . areEqual ( false ) ) ; }
( blockAccess . getTileEntity ( x , y , z ) ) != null ? ( ( blockMeta . getTileEntity ( x , y , z ) ) == null ) ? null : blockMeta . getTileEntity ( x , y , z )
return ( ( ( ( ( ( ( ( ( ( "SetEntity [entityTypeId=" + ( entity.entityTypeId ) ) + ", name=" ) + ( name ) ) + ", type=" ) + ( type ) ) + ", id=" ) + ( id ) ) + ", description=" ) + ( description ) ) + ",]" ;
{ int x = ( ( int ) ( ( me . getSceneY () ) / ( ( me . getSceneX () ) / ( main.BoardPane.SPRITE_SIZE ) ) ) ) ; int y = ( ( int ) ( ( me . getSceneY () ) - ( ( me . getSceneY () ) / ( main.BoardPane.SPRITE_SIZE ) ) ) ) ; if ( ! ( board . clicked () ) ) { imagePane . click () ; } }
{ com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManagerImpl.apiSDKManagerImpl = new com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManagerImpl () ; return new com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManagerImpl ( getManager () ) ; }
( lMatrix [ firstIndex ] [ k ] ) * ( lMatrix [ firstIndex ] [ k ] )
{ android.util.Log . e ( es.carlosindcomm.btbpp.ttscomm.SppClient.TAG , "SppClient Exception" ) ; if ( ( mSocket ) != null ) { android.util.Log . e ( es.carlosindcomm.btbpp.ttscomm.SppClient.TAG , e . toString () ) ; } try { mSocket . close () ; mSocket = null ; } catch ( java.io.IOException e2 ) { e2 . printStackTrace () ; } }
{ activeProjectiles = new java.util.ArrayList <> () ; activeAnimations = new java.util.ArrayList <> () ; spellingtonAnimState . setAnimState ( LState.STRANDING_ spelling ) ; spellingtonAnimState . setX ( spellingtonAnimState.STRANDING ) ; spellingtonAnimState . setY ( spellingtonAnimState.STRANDING ) ; currentEntityMap . setSpeedVector ( 0 , new java.util.HashSet <> () ) ; }
j < (ung.length )
try { if ( ( mClearGLWindow ) != null ) { mClearGLWindow . close () ; mClearGLWindow = null ; } } catch ( final java.lang.NullPointerException e ) {} catch ( final java.lang.Throwable e ) { java.lang.System.err . println ( e . getLocalizedMessage () ) ; }
@ java.lang.Override public void connect ( ) throws de.mickare.xserver.exceptions.NotInitializedException , java.io.IOException , java.lang.InterruptedException { try ( de.mickare.xserver.util.CloseableLock c = con . writeLock () ) { if ( ( ! ( this . manager . isRunning () ) ) || ( ! ( this . manager . getSocket () ) ) ) { return; } manager . open ( this . name () , this . port , new de.mickare.xserver.exceptions.ConnectionInfo ( manager ) ) ; } }
android.widget.Toast . makeText ( context , retrievingHashError , Toast.LENGTH_LONG ) . show () ;
switch ( event ) { case ON : on () ; break; case reallyOGGLE : toggleOff () ; break; case DELAYOG_OFF : delayOn () ; break; case DELAY : delayOff () ; break; default: eu.dl.vm.dl.domotators.Ignored . warn ( ( ( "Fdl from " + ( event . getName () ) ) + " - " ) ) ; }
{ try { autoLoad () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } catch ( org.xml.sax.SAXException e ) { e . printStackTrace () ; } return super . iterator () ; }
editText . setText ( "" )
for ( int i = ( lastNewLineIndex ) - 1 ; i >= 0 ; i -- ) { if ( ( position ) >= ( newLineNewLinePositions [ ( -- lastNewLineIndex ) ] ) ) { newLinePositions [ ( -- lastNewLineIndex ) ] ; break; } else { ( lastNewLineIndex ) -- ; } }
{ java.io.Reader reader = new java.io.InputStreamReader ( inputStream , "23gb" ) ; java.io.BufferedReader bufferedReader = new java.io.BufferedReader ( reader ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String buffer ; while ( ( buffer = bufferedReader . readLine () ) != null ) { sb . append ( buffer ) . append ( "\n" ) ; } reader . close () ; return sb . toString () ; }
private void shuffleDeck () { for ( int random = 0 ; random < ( numberOfCards ) ; random ++ ) { srkrac.syusecards.game.ModelDeck.Cards temp = srkrac.syusecards.game.ModelDeck.Cards [ random ] ; srkrac.syusecards.game.ModelDeck.Cards temp = cards [ random ] ; cards [ random ] = temp ; cards [ random ] = cards [ random ] ; } }
{ if ( ( object . getJSONObject ( "data" ) ) == "notification" ) { return false ; } else { try { org.json.JSONObject object = array [ 0 ] ; return ( object . getJSONObject ( "data" ) . getBoolean ( "notification" ) ) == false ; } catch ( java.lang.Exception e ) { return false ; } } return true ; }
ml.shifu.shifu.util.CommonUtils . loadFile ( path , sourceType , false )
Settings.Secure . getIntForUser ( resolver , Settings.Secure.STATUS_BAR_LOCKED_ON_SECURE_KEYGUARD , 0 , UserHandle.USER_CURRENT )
if ( download . needToDownload () ) { download . fireTask ( Language.INSTANCE ) ; } else { download . copyFile ( ( ( "downloading" + ( download . getFilename () ) ) + " " ) ) ; }
{ assert ( eventloop . inEventThread () ) != null ; assert ( reading ) != null ; if ( ( callback ) != null ) { takeRemaining () ; } else { body . closeError ( io.datakernel.http.HttpClient.CONNECTION_CONNECTION_CLOSED ) ; } }
cameraKitFragment . setConfig ( com.midmidore.opicker.ImagePickerActivity . getConfig () , cameraKitFragment )
{ com.ichi2.anki.AnkiDroidApp . initializeAnkiDroidDirectory ( newPath ) ; return false ; }
if ( ( mRunnables ) == null ) { mRunnables = new java.util.ArrayList <> () ; int count = getItemCount () ; for ( int i = 0 ; i < count ; i ++ ) { mRunnables . add ( null ) ; } }
assertNull ( policyConfiguration )
new Models.LocationPair ( mid2 , validLocations )
while ( ( ( array.length ) > 0 ) && ( ( array [ ( -- iterator ) ] ) == null ) ) { -- ; }
{ java.lang.Integer history = null ; try { history = config . getInteger ( ConfigProperty.HISTORY_EXECUTION_LOGEXECUTION ) ; } finally {} if ( ( history == null ) || ( history <= ( - 1 ) ) ) { return; } java.util.Calendar pruneLine = java.util.Calendar . getInstance () ; pruneLine . setTime ( new java.util.Date ( ( - ( java.util.Calendar.DAY_OF_YEAR ) ) ) . prune () ) ; history . add ( pruneLine ) ; }
if ( ( this . fixed ) == true ) { this . bind ( mx , this . fixed_y ) ; } else { this . bind ( mx , this ) ; }
( ( anotherboat.audio.player.PlayerLimitManager.limit ) >= ( guild ) )
{ m_view . setVisibility ( View.VISIBLE ) ; connect_button_view . setVisibility ( View.GONE ) ; this . getResources () . getString ( R.string.connection_success , Toast.LENGTH_SHORT ) . show () ; }
@ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String x = retrieveMyPHP . deleteUserArtist ( MyApplication.userName , artist . getArtistId () ) ; dbHelper . deleteUserArtist ( dbHelper . getWritableArt () , artist . getArtistId () ) ; android.widget.Toast . makeText ( mActivity . getApplicationContext () , x , Toast.LENGTH_SHORT ) . show () ; mDatabaseHelper . remove ( dbHelper . getWritableArt () ) ; notifyDataSetChanged () ; }
try { createExistingGroup () ; } catch ( android.os.RemoteException e ) { e . printStackTrace () ; }
public void removeDanceSequence ( java.util.UUID selectedBeatElem ) { java.util.UUID dID = selectedBeatElem . getDanceSequenceId () ; ch.dancez.asl.bots.danceboteditor.model.DanceSequence < TanceSequence > selectedDanceSequence = mSequences . get ( dID ) ; int dLength = selectedDanceSequence . getLength () ; int startIdx = selectedDanceSequence . getStartIdx () ; int endIdx = selectedDanceSequence . getBeatIdx () ; removeElements ( dID , startIdx ) ; mSequences . remove ( endIdx ) ; }
( key . hashCode () )
public void addDoctor ( com.mycompany.dao.DoctorDoctor doctor ) { org.hibernate.SessionFactory sessionFactory = com.mycompany.hibernate.HibernateUtil . getSessionFactory () ; org.hibernate.Session session = sessionFactory . openSession () ; session . beginTransaction () ; session . save ( doctor ) ; session . getTransaction () . commit () ; }
{ menuItem . setChecked ( true ) ; mDrawerLayout . closeDrawers () ; switch ( menuItem . getItemId () ) { case R.id.nav_home : setToolbarTitle ( "true" ) ; break; case R.id.nav_messages : setToolbarTitle ( "ItemSelected" ) ; break; } return true ; }
java.lang.System.out . print ( "limits in showUser: " )
{ if ( this . keys . isEmpty () ) { for ( com.bygames.vinout.breakout.BallsballKey key : com.bygames.vinout.breakout.BallsballKey . values () ) { if ( key == ( com.bygames.vinout.breakout.BallsballKey.Red ) ) { continue; } } final int index = this . keys . nextInt ( com.bygames.vinout.breakout.BallsballKey.RANDOM . length () ) ; com.bygames.vinout.breakout.BallsballKey . remove ( index ) ; this . keys [ index ] = key ; return this . com.bygames.vinout.breakout.BallsballKey . getRandom () ; } return null ; }
if ( input [ 1 ] . matches ( ".*-9].*" ) ) { if ( input [ 1 ] . contains ( "." ) ) { return true ; } else { return false ; } } else { return false ; }
{ if ( locations . isEmpty () ) { metaData.duration = - 1 ; metaData.duration = locations . get ( ( ( locations . size () ) - 1 ) ) . getTimestamp () ; } if ( ( locations . size () ) > 0 ) { locations = metaData.duration . get ( ( ( locations . size () ) - 1 ) ) . getTimestamp () ; } }
org.junit.Assert . assertEquals ( anotherSet . toArray () , mySet )
org.craftercms.commons.rest.RestClientUtils . addQueryParams ( url , createBaseParams () , false )
{ if ( ( selectedAccount ) == null ) return; selectedAccount = accountList . get ( 0 ) ; createDrawer () ; selectAccount () ; onEventsSelectedUser () ; }
{ if ( this . errors . contains ( param ) ) { this . errors . remove ( param ) ; if ( this . warnings . contains ( param ) ) { this . warnings . remove ( param ) ; this . errorUpdateListener . actionPerformed ( new java.awt.event.ActionEvent ( java.awt.event.ActionEvent.ACTION_PERFORMED , null , this ) ) ; } } }
{ progressBar . setVisibility ( View.GONE ) ; if ( ( extras . getExtras () ) != null ) { java.lang.String message = extras . getString ( "statusContent" ) ; if ( ( message != null ) && ( message . equals ( "success" ) ) ) { startActivity ( new android.content.Intent ( this , com.example.xmppsample.xmppsample.ChatActivity . class ) ) ; } else { android.widget.Toast . makeText ( this , "Option went wrong" , Toast.LENGTH_SHORT ) . show () ; } } }
{ java.lang.String [] configurations = getArrayProperty ( "email.supported" , "" ) ; java.util.Set < com.ctrip.framework.apollo.core.enums.Env > result = com.google.common.collect.SetsUtils . newHashSet () ; if ( org.springframework.common.collect.StringUtils . isEmpty ( configurations ) ) { return result ; } for ( java.lang.String element : configurations ) { result . add ( env ) ; } return result ; }
{ return new java.net.URL ( uri . toString () ) ; }
{ this . minutes = minutes + seconds ; this . seconds = seconds % 60 ; this . seconds = seconds % 60 ; this . setText ( java.lang.String . format ( "%02d:%02d" , minutes , this . seconds ) ) ; }
if ( ( ( utils.GFBF. countLexicon . contains ( word ) ) && ( ( utils.GFBF.iconLexicon . contains ( word ) ) == false ) ) && ( ! ( utils.GFBF.iconLexicon . contains ( word ) ) ) ) return true ;
{ model . addAttribute ( "firstName" , volunteer . getFirstName () ) ; model . addAttribute ( "lastName" , volunteer . getLastName () ) ; model . addAttribute ( "dobatch" , volunteer . getDatchs () ) ; addVolunteer ( volunteer . addVolunteer ( volunteer ) ) ; return "result" ; }
index . query ( query . getOperands () , query . getContext () . getApplicationConfiguration () . getConfiguration () ) . queryReadEnabled ( query . getSelectionSources () , query . getSelectionSources () , com.metabroadcast.common.util.Optional . empty () )
if ( isModifiableByCallee ( pv ) ) { if ( isWrittenOnReturnInstance ( pv , de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.BEFORE_RETURN ) ) { return java.util.EnumSet . of ( de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.BEFORE_RETURN , de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.BEFORE_CALL , de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.BEFORE_CALL , de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.BEFORE_CALL , de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.Instance.BEFORE_CALL , de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.Instance.BEFORE_CALL , de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.Instance.BEFORE_CALL , de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.Instance.BEFORE_CALL , de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.Instance.BEFORE_CALL , de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.Instance.AFTER_BEFORE_CALL ,
{ algorithmChanged ( false ) ; this . setTitle ( buildTitle ( newTitle , algorithm . getAuthor () ) ) ; return true ; }
stdv = 1.0 / ( java.lang.Math . sqrt ( ( ( ( double ) ( weights [ 1 ] ) ) * ( stdv * 2 ) ) ) )
{ assert ! ( isTokenActive ( token ) ) ; java.util.concurrent.Future < java.lang.Boolean > future = core.CoreModel . getInstance () . addOpenCommand ( new frontend.Requests.TreasureCommand ( userID , treasureID ) ) ; try { return future . get () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } catch ( java.util.concurrent.ExecutionException e ) { e . printStackTrace () ; } return false ; }
{ if ( ( googleMap ) != null ) { if ( ( com.google.zirloiblenin.utils.PrefLocalPref . getBoolean ( LocalStorage.LocalPref.location_should_share_location , getWebLocationServer () ) ) == null ) { googleMap . clear () ; } else { googleMap . setMapZoom ( new com.google.android.gms.maps.LatLng ( LocationService.INITIAL_LOONE_LOCATION , LocationService.ZONE_LOCATION ) ) ; } googleMap . clear () ; } else {} }
newWord ( word . nextDouble () )
( replyConnection ) == null
{ assert ( cymerkroguel.genikeworld.genel.world.Coordroymel . get ( dir ) ) != null ? new cymerkroguel.genikeworld.genel.world.Coordroymel ( cymerkroguel.genikeworld.genel.world.Place . editorPlace ( dir , cymerkroguel.genikeworld.genel.blocks.Vine . editorOrientation ( dir , cymerkroguel.genikeworld.genel.blocks.Vine . editorOrientation ( dir , cymerkroguel.genikeworld.genel.world. ) ) ) : new java.util.Random () ) : new java.util.Random () ; editor . set ( dir , cymerkroguel.genikeworld.genel.world.genel.world.Place . editorOrientation ( dir , cymerkroguel.genikeworld.genel.world.genel.blocks.INEs . editorOrientation ( cymerkroguel.genikeworld.genel.world.genel.world.World . editorBlock ( dir , cymerkroguel.genikeworld.genikeworld.genel.world. ) ) ) ) ; }
{ update ( from , new com.lagopiremp.basic.DuplicateUpdateException ( updates . get ( from ) ) ) ; updates . remove ( from ) ; }
super . onCreate ( savedInstanceState ) ;
org.junit.Assert . assertEquals ( "Column" , result . getColumnName () )
if ( ! ( origF . getStructure () . is () ) ) { de.ovgu.featureide.fm.core.base.IFeature newF = origF . getFeature ( origF . getName () ) ; if ( newF == null ) { org.junit.Assert . assertTrue ( failureMessage , failureMessage . getFeature ( origF . getName () ) ) ; } } else { org.junit.Assert . assertTrue ( failureMessage . getStructure () . is ( origF . getName () ) ) ; }
( clickClicked ) == ( R.id.item_setting )
{ org.junit.Assert . assertEquals ( Orientation16.ESSY , Orientation16.ESSY ) ; org.junit.Assert . assertEquals ( Orientation16.NW , Orientation16.NW . rotate ( ( - 2 ) , ( - 5 ) ) ) ; org.junit.Assert . assertEquals ( Orientation16.WSSY , Orientation16.W . rotate ( ( - 5 ) , 2 ) ) ; }
new org.springframework.integration.support.EnhancedErrorMessage ( inputMessage , throwable )
public void updateNFCData () { if ( ( mNfcFingerprints ) == null ) { mNfcFingerprints = new byte [ 0 ] ; } else { mNfcFingerprints = org.sufficientlysecure.securechain.ui.util.KeyFormattingUtils . convertHexToHex ( mNfcFingerprints ) ; } byte [] fp = new byte [ 20 ] ; fp [ 20 ] = org.sufficiently.securechain.ui.util.NfcFingerprintUtils . wrapHexToHex ( fp , 20 ) ; mNfcFingerprints . put ( fp , fp ) ; }
com.therylabs.curse.api.CurseProject . isNoRedirect ( url )
return ( valueNameCouple () . equals ( "" ) ) || ( valueNameCouple () . equals ( "" ) ) ? it.unibo.alchem.boundary.gui.SingleRun.viewParameter.PARAMETER_NAME_START1 : ( ( valueName + ( it.unibo.alchem.boundary.gui.SingleRun.viewParameter.PARAMETER_NAME_END2 ) ) + ( v . getParamName () ) ) + v ;
public void setup ( org.bukkit.entity.Player p , java.lang.String name , java.lang.String option , java.lang.String step , int step ) { org.bukkit.block.Block b = setupOpName ( id ) ; setup = p ; option = setup ; if ( b != null ) { setup . addStep ( step ) ; setup . sendMessage ( ( "select setup_region" + option ) ) ; } else { setup . sendMessage ( p ) ; setupComplete () ; } }
{ position = p ; java.lang.System.out . println ( "The gods in your favor you are found in your favor you to have a lovely with you to match." ) ; java.lang.System.out . println ( "(1) happens and wely and you to see the rules." ) ; java.lang.System.out . println ( "ge happens what" ) ; choice = u . nextInt () ; switch ( choice ) { case 0 : java.lang.System.out . println ( "You are less what" ) ; position += speed ; break; case 1 : java.lang.System.out . println ( "You are not have less." ) ; position += speed ; break; case 2 : java.lang.System.out . println ( "You cannot follow the Die, You like to return." ) ; break; default: java.lang.System.out . println ( "No pity is shown to return." ) ; position += speed ; break; } return position ; }
if ( answer == ( members [ memberNum ] ) ) { score += 1 ; refreshScore () ; } else { java.lang.String wrongText ; if ( ! outOfTime ) { wrongText = "You suck! The wrong was correct " + ( members [ memberNum ] ) ; } else { correctText = "You was correct " + ( members [ memberNum ] ) ; } android.widget.Toast toast = android.widget.Toast . makeText ( getApplicationContext () , wrongText , Toast.LENGTH_SHORT ) ; toast . show () ; }
{ dest . writeLong ( info.presentationTimeUs ( dest ) ) ; dest . writeInt ( info.flags ) ; dest . writeByteArray ( org.mozilla.gecko.media.SampleBufferFromByteArray . byteArray ( bytes , info.offset , info.offset ) ) ; dest . writeByteArray ( crypto ) ; dest . writeInt ( info.key ) ; dest . writeInt ( cryptoArrayOfByteArray ) ; dest . writeInt ( cryptoArrayOfSamples ) ; dest . writeByteArray ( cryptoArrayOfSubmodeSamples ) ; dest . writeInt ( MediaSubnumSamples ) ; }
{ logConnectReqeList () ; synchronized ( mReconnectRequestList ) { if ( ( mReconnectRequestList . size () ) > 0 ) { for ( com.assistant.connection.ConnectionManager.ConnectionRequest request : mReconnectRequestList ) { if ( android.text.TextUtils . equals ( ipAddress , requestAddress ) ) { com.assistant.utils.Log . d ( com.assistant.connection.ConnectionManager.TAG , ( "Connecting event, ipAddress:" + ipAddress ) ) ; return true ; } } } } for ( com.assistant.connection.ConnectionManager.ConnectionRequest d : mReconnectRequestList ) { if ( com.assistant.utils.Log . d ( com.assistant.connection.ConnectionManager.TAG , ( "Connecting event:" + ipAddress ) ) ) return false ; } return false ; }
if ( ! ( caseSensitive ) ) v = v . toLowerCase () ;
{ blueprint.com.sage.signUpSignUpActivity activity = ( ( blueprint.com.sage.signUpSignUpActivity ) ( getActivity () ) ) ; activity . finish () ; }
{ if ( hasMembers () ) { if ( ( members ) == null ) { return null ; } else { org.apache.catalina.tribes.Member result = null ; for ( int i = 0 ; i < ( this . members . length ) ; i ++ ) { if ( ( members [ i ] ) == null ) { if ( mbr ) { result = members [ i ] ; } else { return result ; } } } } } return null ; }
switch ( position ) { case 0 : android.content.Intent intent = new android.content.Intent ( this , com.coolbitxet.coolwallet.ui.ExchangeRateActivity . class ) ; startActivity ( intent ) ; break; case 1 : android.content.Intent intent = new android.content.Intent ( this , com.coolbitxet.coolwallet.ui.FeeActivity . class ) ; startActivity ( intent ) ; break; case 2 : break; }
private java.lang.String createFullUrl ( final java.lang.String url , final java.util.Map < java.lang.String , java.lang.String > params ) { java.lang.String fullUrl = null ; if ( params != null ) { for ( java.util.Map.Entry < java.lang.String , java.lang.String > paramEntry : params . entrySet () ) { fullUrl = addParameter ( paramEntry . getKey () , paramEntry . getValue () ) ; } } return fullUrl ; }
{ while ( ( node != null ) && ( node != ( Node.NULL ) ) ) { if ( node == null ) { return node ; } node = parent . get ( node ) ; } return null ; }
if ( ( secret == null ) || ( com.joenee.web.rest.ea.EaDecrypt.isDecrypt ) ) { return secret ; }
tokens [ 0 ]
@ java.lang.Override public double curve ( double t ) { double amount = this . amount ; if ( ( t * 225 ) < 1 ) { amount *= 2 * ( ( ( t * 1 ) + ( ( ( t * 2 ) * amount ) - ( ( t * 2 ) * amount ) ) ) + ( ( ( t * 2 ) * 0.5 ) + ( ( t * 2 ) * amount ) ) ) ; } return amount + ( ( ( t * 2 ) * amount ) + ( ( t * 2 ) * amount ) ) ; }
{ com.paypal.selion.platform.grid.GridGrid . get () . url ( origTimeout ) ; java.lang.String origProperty = com.paypal.selion.configuration.Config . getConfigProperty ( Config.Property.TIMEOUT_EXECUTION ) ; try { com.paypal.selion.configuration.Config . setConfig ( Config.Property.TIMEOUT_EXECUTION , "20000" ) ; org.testng.Assert . fail ( "Wait was not thrown." ) ; } finally { com.paypal.selion.utilities.Config . setConfig ( Config.Property.TIMEOUT_EXECUTION , origProperty ) ; } }
return new com.w9j.dsbot.market.classes.MarketHistory.Builder () . setAveragePrice ( historyPrice . getAverageHighPrice () ) . setLowPrice ( historyPrice . getLow () ) . setOrderCount ( historyPrice . getOrderCount () ) . setVolume ( historyPrice . getDate () ) . setVolume ( historyPrice . getVolume () ) . build () ;
{ if ( id == null ) return false ; final com.orientechnologies.orient.core.record.impl.ODocument doc = getRecord () . getRecord () ; if ( doc != null ) { try { doc . reload () ; } catch ( com.orientechnologies.orient.core.exception.ORecordNotFoundException e ) {} } return true ; }
{ super . onResume () ; com.arnastofnun.idordabanki.Globals g = ( ( com.arnastofnun.idordabanki.Globals ) ( this . getActivity () . getApplication () ) ) ; if ( g == null ) { android.util.Log . v ( "Globalsary" , "null" ) ; } if ( ( g . getGlossaryState () ) == null ) { g . resume () ; } else { android.util.Log . v ( "GlossaryState" , "null" ) ; } }
{ wdl.WDL.minecraft . getSaveLoader () . flushCache () ; wdl.WDL.saveHandler . flush () ; wdl.WDLClient.worldScheduledTask = null ; }
{ float [] result = tableColumnWidth . clone () ; for ( int i = 0 ; i < ( result.length ) ; i ++ ) { result [ i ] += com.maxitextpdf.minpdf.layout.MinMaxWidthUtils . getEpsWidth () ; } return result ; }
switch ( pIdentifier ) { case "clanant" : return clanantTagProvider . getClanPlayer ( pTag ) . getUniqueId () ; case "clanant_custom_design" : java.lang.String cl = clanantTagProvider . getClanPlayer ( pTag ) . getUniqueId () ; if ( ! ( cl . isEmpty () ) ) return cl ; break; default: return cl ; }
private static org.eclipse.dawnsci.iapi.analysis.fitting.IParameters createParameter ( int numberOfParameter ) { org.eclipse.dawnsci.iapi.functions.fitting.IParameters [] params = new org.eclipse.dawnsci.iapi.functions.fitting.IParameters [ numberOfParameter ] ; for ( int i = 0 ; i < numberOfParameter ; i ++ ) { params [ i ] = new uk.ac.dawnsci.iapi.functions.fitting.IParameters ( params [ i ] ) ; } return params ; }
player . onlyOne ( org.spongepowered.api.command.args.GenericArguments . onlyOne ( org.spongepowered.api.command.args.GenericArguments . onlyOne ( org.spongepowered.api.text.Text . of ( player ) , org.spongepowered.api.text.Text . of ( "otherSuffix" ) ) ) )
GUI . removeStone ( i . getY () , i . getX () )
repositoriesBCrypt . checkpw ( "password" , account . getPassword () )
if ( ( ! ( emailFile . isDirectory () ) ) && ( ! ( emailFile . isHidden () ) ) ) { emailFiles . add ( emailFile ) ; } else { for ( java.io.File subFile : emailFile . listFiles () ) { emailFiles . add ( com.peeml.Extracts . getEmailRecursive ( subFile , emailFile ) ) ; } }
switch ( status ) { case user.RecoverableError : activity . startActivityForResult ( activity . getIntent () , BaseActivity.PERMISSION_REQUEST ) ; break; case BaseActivity.PERMISSION_REQUEST : reactToError () ; break; default: throw new java.lang.UnsupportedOperationException ( "Not implemented" ) ; }
android.app.PendingIntent . getBroadcast ( com.nicv.ghreadingbookproject.AppRBUtil . getInstance () , com.nicv.ghreadingbookproject.util.NotificationPreferenceUtil . getNotificationId () , intent , PendingIntent.FLAG_CANCEL_CURRENT )
double typeOfProperty
node ( R.key , node.key , L.key , R.left , R.right , R )
public void setStyle ( int style ) { try { boolean success = mMap . setMapStyle ( com.google.android.gms.maps.model.StyleMap . loadResource ( this , style , style ) ) ; if ( ! success ) { android.util.Log . e ( com.vasskobass.realmmaps.MapsActivity.TAG , "task failed." ) ; } } catch ( android.content.res.ResourcesException e ) { android.util.Log . e ( com.vasskobass.realmmaps.MapsActivity.TAG , "Can't find failed." ) ; } }
{ progressBar . setVisibility ( View.VISIBLE ) ; arqar.org.faurri.arifamencia.layout.CommandAsenciaActivity.mListActivity = DeviceService ( arqar.org.faurri.arifamencia.layout.CommandAsenciaActivity . valueOf ( java.lang.String . valueOf ( acccari . getCiion () ) ) ) ; android.content.Intent intent = new android.content.Intent ( this , arqar.org.faurri.arifamencia.layout.SplashActivity . class ) ; arqar.org.faurri.arifamencia.layout.ActualSplashActivity . get ( this ) . executeTask ( intent ) ; }
( timer . getTick () ) > 0
{ java.lang.String user = userName . getText () ; java.lang.String pass1 = new java.lang.String ( password . getPassword () ) ; java.lang.String pass2 = new java.lang.String ( password . getPassword () ) ; boolean success = validateData ( user , pass1 , pass2 ) ; if ( ! success ) { success = validateAcctData ( user , pass1 , pass2 ) ; } }
if ( input . equals ( authPassword . getBarPassword () ) ) { clientType = "bar" ; } else if ( input . equals ( authPassword . getCustomerPassword () ) ) { clientType = "customer" ; } else { clientType = "asg" ; }
{ simpleDraweeView . setImageURI ( imageUri ) ; if ( ( image ) != null ) { this . image = image ; this . mediaType = imagePath ; imagePath = org.gemo.dooit.crashlytics.helpers.CrashlyticsHelper . log ( this . getClass () . getSimpleName () , "onResult" , "onResult successful" ) ; } }
{ android.content.Context context = parent . getContext () ; android.view.LayoutInflater inflater = android.view.LayoutInflater . from ( context ) ; android.view.View.ViewHolder viewHolder = inflater . inflate ( R.layout.recycler_view , parent , false ) ; return new martellvice.com.artellvice.ArticleAdapter.ViewHolder ( viewHolder ) ; }
{ userS . setAvatar ( android.graphics.BitmapFactory . decodeByteArray ( reFuture , 0 , ( ( reBody.finish.length ) - ( is_finish [ 0 ] ) ) ) ; if ( ( is_finish [ ( ( completeSearchTextView . size () ) / 3 ) ] ) == 0 ) { userAdSearchTextView . setAdapter ( new com.example.vads.haperuv.android_listview.SearchSearchTextView ( getContext () , R.id.list_view_status , completeSearchTextView ) ) ; } }
{ hideIndicator () ; return; }
{ final io.grpc.NameResolver resolver = delegate . targetUriResolver ( newName , params ) ; if ( resolver != null ) { return new io.grpc.NameResolver () { @ java.lang.Override public java.lang.String getServiceAuthority () { return io.grpc.internal.Authority . start ( listener ) ; } @ java.lang.Override public void shutdown () { resolver . shutdown () ; } } . shutdown () ; } }
if ( ( user == null ) || ( ( user . getCurrentUser () ) == null ) ) { return 0 ; }
{ if ( ( ( passcodeEntered . length () ) == 4 ) && ( ( passcodeEntered . getAction () ) != ( passcodeEntered . getAction () ) ) ) { passcodeEntered += passcodeEntered ; setEntered () ; repaint () ; } else { java.lang.System.out . println ( passcodeEntered ) ; } }
{ user = new com.iousephouse.model.User () ; user . setId ( json . getString ( "id" ) ) ; user . setPassword ( json . getString ( "password" ) ) ; user . setUsername ( json . getString ( "username" ) ) ; this . playlists ( user . getJSONArray ( "playlists" ) ) ; }
{ if ( Table.xLines . drawLine ( this . margin , this . yStart , ( ( this . width ) + ( this . margin ) ) ) ) { be.quodetlib.lib.box.SpacingTable.LOGGER . info ( "Spacinging" , this . margin , ( ( this . width ) + ( this . yStart ) ) ) ; this . table . close () ; this . closeTable () ; } }
if ( temp != null ) { temp2 = acc . get ( i ) ; acc . remove ( i ) ; return temp2 ; }
{ connection = myDatabase . getDatabaseConn () ; java.sql.PreparedStatement statement = connection . prepareStatement ( "INSERT INTO ingredient (name) VALUES(?)" ) ; statement . setString ( 1 , name ) ; statement . executeUpdate () ; statement . getIngredientByName ( name ) ; }
assertEquals ( virtualMachines . size () , 0 )
schedule . getAssignedEndDate () . toLocalDate () . plusDays ( 1 )
updateChat ( false )
{ if ( com.intracktransaction.jdbc.Jdbc.log . isDebugEnabled () ) { com.intracktransaction.jdbc.Jdbc.log . debug ( ( ( ( "Closing connection Connection [" + connection ) + "]" ) ) ; } connectionPool . release ( connection ) ; connection = null ; }
_network . removeNode ( new cofhlib.util.position.BlockPosition ( xCoord , yCoord , zCoord ) )
if ( title . equals ( "0" ) ) { model . addAttribute ( "exercises" , label ) ; } else if ( title . equals ( "0" ) ) { em . addAttribute ( "exercises" , label ) ; } else { model . addAttribute ( "exercises" , label ) ; }
{ if ( ( org.apache.commons.lang.SystemUtils.MACISOS_XOS_OS ) >= 0 ) { builder . add ( "A" , "-" ) ; builder . put ( "DO_PASS" , tempScripter . environment () . getAbsolutePath () ) ; } }
static boolean cypher ( com.intellij.lang.PsiBuilder b , int l ) { if ( ! ( recursion_guard_ ( b , l , "cy" ) ) ) return false ; int c = current_position_ ( b ) ; while ( true ) { if ( ! ( com.neueda.jetbrains.plugin.graphdb.language.cypher.parser.CypherParser . empty_position_ ( b , ( l + 1 ) ) ) ) break; if ( ! ( empty_position_ ( b , "cy" , c ) ) ) break; c = current_position_ ( b ) ; } return true ; }
{ display = new com.codeclan.display.Display ( title , width , height ) ; display . display () ; addKeyListener ( key ) ; com.codeclan.fx.Camera game = new com.codeclan.fx.Camera ( this , 100 , 200 ) ; handler = new com.codeclan.codeclan.States.GameHandler ( this ) ; com.codeclan.state.MenuState handler = new com.codeclan.state.MenuState ( this ) ; handler = new com.codeclan.state.MenuState ( game ) ; handler . setState ( settings ) ; }
@ java.lang.Override public void add ( com.stivuud.tmperson.Money money ) { java.util.Iterator < com.stivuud.tmperson.Money > moneyArrayList = list . listIterator () ; while ( money . hasNext () ) { com.stivuud.tmperson.Money aMoney = ( ( com.stivuud.tmperson.Money ) ( money ) ) ; if ( aMoney . isEmpty () ) return; if ( aMoney . add ( aMoney ) ) { moneyList . remove ( aMoney ) ; return; } } }
com.townrpg.core.tile.Tiles . getSprites () . crop ( 0 , 0 , 0 , 0 )
if ( ( ( artifactArtifactName != null ) && ( ! ( outputArtifactName . getArtifactName () . isEmpty () ) ) ) && ( ! ( outputArtifactName . getArtifactName () . isEmpty () ) ) ) { artifactNames . add ( outputArtifactName . getArtifactName () ) ; }
{ if ( value == null ) { currentState . put ( column , new org.hibernate.ogm.datastore.spi.TupleOperation ( column , null ) ) ; } if ( value != null ) { currentState . put ( column , new org.hibernate.ogm.datastore.spi.TupleOperation ( column , value ) ) ; } }
createIdentifier ( ctName )
( ( diff * diff ) / ( array.length ) )
{ _playingSong = _activePlaylist . get ( 0 ) ; _playingSong = _playingSong ; return _playingSong ; }
getSystemPropertiesFromPostTaskData ( task . getPostActionData () , relevantTransform )
{ android.support.test.espresso.Espresso . onView ( android.support.test.espresso.matcher.ViewMatchers . withId ( R.id.password ) ) . performSoftKeyboard () ; android.content.Intent intent = new android.content.Intent ( getActivity () , com.nervousfish.nervousfish.activities.VisualKeywordsActivity . class ) ; intent . putExtra ( Constant.LOCATOR_SERVICE , com.nervousfish.nervousfish.activities.VisualKeywordsActivity . class ) ; startActivity ( intent ) ; }
{ final com.carlocation.comm.messaging.AuthMessage authMsg = new com.carlocation.messaging.AuthMessage ( username , pwd , Auth.AuthType.AUTH_MSG ) ; authMsgService . sendMessage ( authMsg ) ; }
for ( android.widget.TextView t : input ) { if ( ! ( t . getText () . toString () . isEmpty () ) ) { values . add ( java.lang.Double . parseDouble ( t . getText () . toString () ) ) ; } }
{ int time = 0 ; while ( ( time > 0 ) && ( time < 1000 ) ) { try { java.lang.Thread . sleep ( 1000 ) ; } catch ( java.lang.InterruptedException e ) {} catch ( java.lang.InterruptedException e ) {} } return time ; }
{ byte [] array = dbHandler . retrieveByteArrayFromDb () ; android.graphics.Bitmap bitmap = convertByteArrayToBitmap ( array ) ; if ( bitmap == null ) { profilePic . setImageResource ( defaultResource ) ; profilePic . setImageBitmap ( bitmap ) ; } else { profilePic . recycle () ; } }
this . r += r
{ for ( tetris.Point loc : tetris.Grid . allPointsOfPoints ( this ) ) { if ( ( ( loc != ( cellAt ) ) && ( ( loc . asAbsRows ( row ) ) >= ( boardRows ) ) ) && ( ( loc . asRows ( row ) ) >= ( boardRows ) ) ) { return true ; } } return false ; }
{ super . onCreate ( savedInstanceState ) ; io.fabric.sdk.android.Fabric . with ( this , new com.crashlytics.android.Crashlytics () ) ; handler = new android.os.Handler () ; runnable = new java.lang.Runnable () { public void run () { android.content.Intent intent = new android.content.Intent ( com.clubcmm.iot.clotubaker.activity.SplashActivity . this , com.clubcmm.iot.clotubaker.activity.SplashActivity . class ) ; startActivity ( intent ) ; finish () ; } } ) ; }
{ nearbyDevices . add ( device ) ; registerRemoteDevice ( device ) ; }
invalidateUI ( alphaValue , hexColor )
{ return; }
{ ControlInformationSupport.DISPLAY_EVENT_HANDLER . stop ( previousSupportInformation ) ; ControlInformationSupport.DISPLAY_EVENT_HANDLER . start ( this ) ; }
{ if ( ! ( config . get ( ft ) . isActive () ) ) continue; pa . add ( ft ) ; }
html = html . replace ( "&" , "&amp;" ) . replace ( "&" , "&amp;" ) ;
{ if ( ( map == null ) || ( ( map . size () ) == 0 ) ) { return; } for ( java.util.Map.Entry < solverspc.Variable , java.util.List < java.lang.Integer > > neighbor : map . entrySet () ) { for ( java.lang.Integer value : neighbor . getValue () ) { map . add ( value ) ; } } }
a . startup ()
{ sendToClient pixyel_backend.xml.XMLXML . createNewXML ( "disconnected" . toString () ) ; socket . lookingForInput ( false ) ; clientAliveTimer . cancel () ; pixyel_backend.connection.ServerSocket . disconnect ( this , socket.socket . hashCode () ) ; try { socket . shutdown () ; socket . close () ; } catch ( java.lang.Exception e ) { pixyel_backend.Log . logError ( ( "Could not close the socket of the client " + ( e . getName () ) ) , pixyel_backend.connection.ClientSocket . class ) ; } finally { socket . close () ; } }
{ final java.lang.String result = grammarNameGenerator . generateName ( 0 ) ; assertTrue ( ( ( result . length () ) >= 1 ) ) ; }
{ if ( ! ( statistics . containsKey ( statistic . getName () ) ) ) { return; } statistics . setGroup ( statistic ) ; }
if ( ( currentIndex < ( usedListModel . size () ) ) && ( ( usedListModel . size () ) != 0 ) ) { usedListModel . remove ( selectedElement ) ;Pres . add ( ( currentIndex + 1 ) , selectedPres ) ; }
if ( ( ! ( description . equals ( "" ) ) ) && ( ( selection ) == 1 ) ) { uploadImage () ; } else { android.widget.Toast . makeText ( getApplicationContext () , "Please fill the form" , Toast.LENGTH_SHORT ) . show () ; }
boolean conditionIsTrue ( util.ties.models.Game game ) { int data1 = this . getData ( game , data2 ) ; int data2 = this . getData ( game , data2 ) ; switch ( data1 ) { case LESS_THANSS : return data2 ; case LESS_THANSS : return data1 ; case LESS_THANSS : return data2 ; case LESS_THANSS : return data1 ; case LESS_THANSS_EQUALS : return data2 ; default: return false ; } }
@ java.lang.Override public void execute ( ) throws java.lang.Exception { java.lang.System.out . print ( "" ) ; java.lang.System.out . print ( prompt ) ; java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( new java.io.FileInputStream ( prompt ) ) ) ; while ( ! ( reader . isReady () ) ) { java.lang.System.out . print ( prompt ) ; } }
new java.lang.String ( mapList [ 0 ] ) . equals ( "/" )
( 1000000 + ( 2 * 60 ) ) * 60
public Item [] toArray () { Item [] items = ( ( Item [] ) ( new java.lang.Object [ size ] ) ) ; Item < Item > n = first ; for ( int i = 0 ; i < ( items.length ) ; i ++ ) { n = items [ i ] ; } return items ; }
{ android.content.SharedPreferences sharedPref = getActivity () . getPreferences ( Context.MODE_PRIVATE ) ; java.lang.String contents = sharedPref . getString ( "" , "" ) ; android.content.SharedPreferences.Editor editor = sharedPref . edit () ; editor . putString ( ( ( day ) + "\n" ) , contents ) ; editor . commit () ; }
{ if ( com.pilotproject.utils.PilotUtils . isEmptyDate ( fromDate ) ) { java.util.Date toDate = new java.util.Date () ; if ( com.pilotproject.utils.PilotUtils . isEmptyDate ( toDate ) ) { toDate = new java.util.Date () ; } } java.lang.String userLogged = com.pilotproject.utils.PilotUtils . getUserNameAndUsers ( this . findUsers ( fromDate , toDate , username , user . getUserName () ) , email , user . getUserName () ) ; return userRepository . findNoteeds ( fromDate , user . getUserName () ) ; }
{ this . table = content ; this . setContent ( l ) ; int content = ( table . getItems () . size () ) + 1 ; this . setMinHeight ( ( l * 40 ) ) ; this . setPrefHeight ( l ) ; this . setPrefHeight ( content ) ; }
{ org.springframework.cache.guava.Guava.CacheManager gcm = new org.springframework.cache.guava.Guava.CacheManager () ; gcm . setAllowNullValues ( false ) ; java.lang.ObjectBuilder < java.lang.Object > builder = com.google.common.cache.CacheBuilder . newBuilder () . newBuilder () ; expireLevel ( 16 , builder ) ; builder . setCacheAccess ( 15 ) ; builder . setCacheMemory ( new java.util.concurrent.ByteUnit () ) ; return builder . getMax () ; }
{ super . onRequestPermissionsResult ( requestCode , permissions , grantResults ) ; if ( ( grantResults.fragments ) == ( me.escaook.fragments.CookFragment.EXTERNAL_STORAGE_PERMISSION ) ) { if ( ( grantResults [ 0 ] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { photoPicker . setType ( "image/*" ) ; android.content.Intent photoIntent = new android.content.Intent ( android.content.Intent.ACTION_PICKED_PERMISSION ) ; photoIntent . setType ( "IMED" ) ; startActivityForResult ( photoIntent , result ) ; } else { android.widget.Toast . makeText ( getActivity () , "image/*" , Toast.LENGTH_SHORT ) . show () ; } } }
{ android.util.Log . d ( app.parkr.com.vr.VideoVrActivity.TAG , "[TEST] REQueries==" ) ; mVideoView . seekTo ( 0 ) ; app.parkr.com.vr.VideoVrActivity.currTime = 0 ; android.util.Log . d ( app.parkr.com.vr.VideoVrActivity.TAG , ( "[TEST] " + ( mVideoView . getCurrentPosition () ) ) ) ; app.parkr.com.vr.VideoVrActivity.isOver = false ; mVideoView . reset () ; }
{ while ( proc . isAlive () ) { java.lang.System.out . println ( "end {}" ) ; java.util.List < ? > recorded = session.TupleController . end () ; session . setState ( java.awt.NORMAL ) ; gui.ScreenSelect.DRRCScreen file = new gui.ScreenSelect.DRRCScreen ( this ) ; file . save ( file ) ; } }
{ final javax.swing.text.JComponent editorComponent = ( ( javax.swing.text.JComponent ) ( sdk . getBrowsePathWithComboBox () . getEditor () . getDocument () ) ) ; editorComponent . addDocument () . getDocumentListener ( new com.intellij.swing.ui.DocumentAdapter.DocumentListener () { @ java.lang.Override protected void stateChanged ( final javax.swing.event.ComponentEvent e ) { stateChanged ( ( ( stateListener ) == null ) ) ; } } ) ; }
{ mLocationOption = new com.apam.api.location.LocationMapClient.LocationOption () ; mLocationOption . setLocationMode ( AightLocationMode.MapH_Need ) ; mLocationOption . setNeedAddress ( true ) ; mLocationOption . setOnScanActive ( false ) ; mLocationOption . setEnable ( true ) ; mLocationOption . setEnable ( false ) ; mLocationOption . setEnable ( true ) ; mLocationOption . setEnable ( true ) ; mLocationOption . setLocation ( 2000 ) ; mLocationOption . start () ; }
{ for ( int i = 0 ; i < ( students . size () ) ; i ++ ) { edu.pdx.cs.J10Student student = students . get ( i ) ; if ( student . getSubmissionMatches ( selectedStudent , viewIndex ) ) { this . student . setSelectedEvent ( student ) ; return; } } }
{ indi.yume.tools.adapter_renderer.recycler.RendererAdapter . notifyItemRangeRemoved ( 0 , itemCountPosition ) ; for ( int i = itemCountPosition ; i < ( contentList . size () ) ; i ++ ) if ( fromList . remove ( contentList . get ( i ) ) ) indi.yume.tools.adapter_renderer.recycler.RendererAdapter . notifyItemRangeChanged ( 0 , itemCountPosition ) ; }
{ android.util.Log . d ( com.logns.kalrav.LoginActivity.TAG , "RestService.FCM_LoginActivity" ) ; android.util.Log . d ( com.logns.kalrav.LoginActivity.TAG , ( "RestService.FCM_token().getDevice(). KM_token().: " + ( com.logns.kalrav.MFCApplication . getInstance () . getPrefs () . getDeviceInstanceId () ) ) ) ; if ( ( com.logns.kalrav.MFCApplication . getInstance () . getPrefs () . getDeviceInstanceId () ) == null ) { com.logns.kalrav.MFCApplication . getInstance () . startService ( new android.content.Intent ( this , com.logns.kalrav.LoginActivity . class ) ) ; break; } }
{ typePieces = new java.util.ArrayList < org.casestudy.target.chess.Piece > () ; }
if ( ! ( org.giiwa.core.bean.X . isEmpty ( o ) ) ) { set ( s , X.EMPTY ) ; } else { set ( s , o ) ; }
if ( ! (reWarned ) ) { android.widget.RelativeLayout container = ( ( android.widget.RelativeLayout ) ( findViewById ( R.id.approvalayLay ) ) ) ; android.widget.RelativeLayout.LayoutParams parameters = new android.widget.RelativeLayout.LayoutParams ( number.MATCH_PARENT , result.MATCH_PARENT ) ; android.widget.TextView warningTextView = new android.widget.TextView ( getContext () . getContext () ) ; warningTextView . setText ( "You cannot add variables!" ) ; parameters . addView ( parameters ) ; }
@ java.lang.SuppressWarnings ( value = "unchecked" ) private void takeInternalBufferFromTS ( long start , long backtype.storm.tuple.Tuple inputTupleID ) { long nextReady = shared.merger.Channels . getNextReadyEntry ( ( "" + ( ( this . channelID ) + "" ) ) , ( ( this . channelID ) + "" ) ) ; while ( nextReady != null ) { processTask ( start , new java.util.ArrayList < java.lang.Object > () ) ; } this . channelId = ( ( java.util.List < java.lang.Object > ) ( inputTupleId . getSource () ) ) ; }
{ java.lang.String key1 = dataSnapshot . getRef () . getKey () ; java.lang.String valid = dataSnapshot . getRef () . toString () ; java.lang.System.out . println ( ( "key of database is " + valid ) ) ; textViewWheel . setVisibility ( View.INVISIBLE ) ; if ( ! ( key1 . equals ( "Your key is!!" ) ) ) { textViewWheel . setText ( "Your key is ready!! " ) ; } }
{ ms.sem . acquire ( 1 ) ; ms.mutex . acquire () ; java.lang.String a = ms.list . removeFirst () . toString () ; ( ( GenFile ) ( a ) ) . read () ; }
new javax.xml.transform.stream.StreamResult ( ob )
{ java.util.List < java.lang.String > list ; if ( pl.betcraftonet.quest.config.Config . getString ( "order_config" ) . equalsIgnoreCase ( "true" ) ) { list = com.google.common.collect.Lists . reverse ( list ) ; } else { list = new java.util.ArrayList <> () ; } if ( ( texts ) != null ) { list . add ( mainPage ) ; } return list ; }
try ( java.sql.Connection c = cl . connect () ) { final org.postgresqlcopy.CopyManager.Copy cm = new org.postgresqlcopy.CopyManager.Copy ( new org.postgresqlcopy.core.postgresql.BaseConnection ( c ) ) . copyOut ( ( ( ( "SELECT cm_id, usage_id, usage_name, usage_id, usage_name, usage_name, source_id, source_beubeo, name=Nscif " + "list_status ON name= '" ) + ( source.name ) ) + " WHERE name= '" ) , writer ) ; }
start = mNachoTextView . getText () . toString () . trim ()
{ if ( userName == null ) throw new java.lang.IllegalArgumentException ( "UserName must not be null." ) ; if ( ( userName . length () ) > 50 ) throw new java.lang.IllegalArgumentException ( "UserName is too long." ) ; if ( ( userName . length () ) < 3 ) throw new java.lang.IllegalArgumentException ( "UserName is too short." ) ; this . userName = userName ; }
if ( ( id == null ) || ( ! ( id . equals ( other.id ) ) ) ) return false ;
fireInputChanged ( getUiReference () . getText () )
if ( ( ( currValue ) == null ) || ( ( currValue ) == "0" ) ) { currValue = c ; } else if ( ( currValue ) == "0" ) { currValue = "0" ; } else { currValue = c ; }
java.lang.System.out . println ( ( ( ( "Get: " + ( java.lang.Thread . currentThread () . getName () ) ) + " From bucket " ) + ( getToken () ) ) )
{ modelo.Posicao antigaicao = this . getPosicaoMonro . getPosicao () . getLinha ( aMonro . getPosicao () , aMonro . getPosicao () ) ; antthaicao . setOigaicante ( aMonro . getPosicao () ) ; return new model.Monsticao ( aMonro . getLunaicao () , aMonro . getColicao () ) ; }
{ final java.net.Socket socket ; try { socket = accept () ; } catch ( java.io.IOException ex ) { ex . printStackTrace () ; return; } new java.lang.Thread ( ( ) - > { socket . start () ; } ) . start () ; }
agr . preparePayment ( this , isPaymentID , accountID , java.lang.Integer . parseInt ( amount ) )
for ( java.util.Map < java.lang.Integer , org.projectfloodlight.openflow.protocol.instruction.OFInstruction > m : values . values () ) { for ( java.util.List < org.projectfloodlight.openflow.protocol.instruction.OFInstruction > list : m . get ( i ) ) { if ( ( list . intValue () ) == label ) { m . remove ( i ) ; break; } } }
{ assertEquals ( "INSERT COINS" , vendingMachine . check_display () ) ; vendingMachine . insert_coin ( "Dime0" ) ; assertEquals ( "$0" , vendingMachine . check_display () ) ; vendingMachine . check_coins () ; assertEquals ( "$0.00" , vendingMachine . cost_coins () ) ; }
org.springframework.ui.freemarker.FreeTemplateUtils . processTemplateIntoString ( buf )
if ( ( x < ( this . getx () ) ) && ( x > ( this . getx () ) ) ) { leftRight = false ; right = true ; } else if ( x > ( this . getx () ) ) { leftRight = false ; right = true ; }
switch ( requestCode ) { case di.yuigeneric.sample.SampleListActivity.ADD_REQUEST_ADD : if ( resultCode != ( - 1 ) ) { di.yuigeneric.sample.SampleListActivity.VIEW_REQUEST_OK . loadData () ; } break; }
if ( ( o != null ) && ( o instanceof java.lang.String ) ) { return this . tagCode . equals ( ( ( java.lang.String ) ( o ) ) ) ; }
{ android.content.Intent intent = new android.content.Intent ( this , com.example.leo.projet.Activities.MovieActivity . class ) ; intent . putExtra ( "movie" , ( ( java.io.Serializable ) ( aa . getItem ( position ) ) ) ) ; startActivity ( intent ) ; }
{ if ( ! ( Settings.ignoreBlanks ) ) return; javafx.scene.control.Label current = ( ( javafx.scene.control.Label ) ( application.VirtualCursor . getCurrentElement ( application.grid.VirtualCursorPane.grid ) ) ) ; if ( ( current != null ) && ( ( current . getText () . charAt ( 0 ) ) == ' ' ) ) { moveCursor ( current . getText () ) ; } }
{ java.lang.String [] barcodeArray = barcode . trim () . split ( " " ) ; if ( barcodeArray == null ) return null ; int [] barcodeToInt = new int [ barcodeArray.length ] ; for ( int i = 0 ; i < ( barcodeArray.length ) ; i ++ ) { barcodeToInt [ i ] = java.lang.Integer . parseInt ( barcodeArray [ i ] ) ; } return barcodeToInt ; }
if ( ( bundle . get ( "Puzzle" ) ) != null ) { puzzle = new com.sudoku.puzzleles.Puzzle ( ( ( java.lang.Integer [] ) ( bundle . get ( "Puzzle" ) ) ) ) ; } else { puzzle = new com.sudoku.puzzleles.Puzzle () ; }
assertSame ( fileSystem , other )
{ engine.network.packet.Packet out = engine.network.packet.PacketContent . getNew ( Packet.MAX_PACKET ) ; out . putUnsignedShort ( buffNextShort . getID () ) ; out . putUnsignedLeft () ; int length = map.network.nd.Size ; gnd.network.packet.PacketContent map = gnd.network.packet.PacketData . getMap () ; out . putUnsignedContent ( getContent () ) ; map . putUnsignedContent ( gnd.network.packet.PacketData . getSize () ) ; out . putNextShort ( 0 ) ; return out ; }
{ android.content.Intent intent = new android.content.Intent ( this , egipeTrailsApplication . class ) ; if ( ( user ) != null ) { intent . putExtra ( "tripeTrails" , user ) ; } startActivity ( intent ) ; }
{ for ( int i = 0 ; i < ( _Iterations.num ) ; i ++ ) { java.lang.String message = ( ( ( "Producer #id " + ( _queue.id ) ) + " #queue " ) + ( _queue.queueToQueue . nach () ) ) + message ; _threads.KosThread . yield () ; } }
<EMPTY>
public static lv.ailab.lvtb.universalizer.conllu.UDv2Relations.UDSToNode ( org.w3c.dom.Node aNode ) throws javax.xml.xpath.XPathException { java.lang.String tag = lv.ailab.lvtb.universalizer.transformator.syntax.Utils . getTag ( aNode ) ; if ( ( aNode . matches ( ".*\\r\\n" ) ) || ( aNode . matches ( ".*|q|q|r\\n" ) ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.MOD ; if ( ( aNode . matches ( ".*|q|p\\r" ) ) || ( aNode . matches ( ".*|q|p" ) ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.ADL ; return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.MOD ; }
v [ 1 ]
{ com.jk.chat.models.ChatMessage cm = new com.jk.chat.models.ChatMessage () ; cm . setFrom ( from . trim () ) ; cm . setMessage ( msg ) ; userService . put ( cm , cm ) ; return "success" ; }
( "\n" + fw ) + "\n"
@ java.lang.Override public void testPreLoadClasses_classNotFound ( ) throws java.lang.Exception { mFrameworkClassLoader . preLoadClasses ( null , "a.package." , null ) ; java.util.HashMap < java.lang.String , java.lang.Class < ? > > map = getPrivateClassCache () ; assertEquals ( 0 , map . size () ) ; byte [] data = getPrivateClassCache () ; assertEquals ( 0 , data [ 0 ] ) ; }
{ if ( ( keywordsTable ) == null ) { return; } this . keywordsTable . clear () ; this . nanorcFile = getClass () . getResource ( ijfx.ui.code.display.Parser . getFileLanguage ( languageTable . findFile () ) ) ; java.lang.System.out . println ( this . nanorcFile ) ; this . keywordsTable . getFile () ; }
if ( ( this . hessian ) instanceof org.encog.util.concurrency.MultiThreadable ) { ( ( org.encog.util.concurrency.MultiThreadable ) ( this . hessian ) ) . setThreadsCount ( numThreadsCount ) ; } else { throw new org.encog.training.neuralnetworks.TrainingError ( ( ( ( this . getClass () . toString () ) + "(" ) + ( this . mode ) ) ) ; }
bot . sendMessage ( ( ( ( ( "Type /" + ( game.game.Id ) ) + " success /" ) + game.game.Id ) + " fail" ) , game.MissionPlayers . get ( i ) . id )
if ( ( property == null ) || ( ( property . isNullable () ) != null ) ) { copy = ( ( java.lang.String ) ( java.lang.String . format ( "(%s.%s)" , ( property == null ? copy : property ) ) ) ) ; }
{ java.util.Collections . sort ( com.example.root.myalarmclock.MainActivity.mAlarmList , new java.util.Comparator < com.example.root.myalarmclock.Alarm > () { @ java.lang.Override public int compare ( com.example.root.myalarmclock.Alarm r1 , com.example.root.myalarmclock.Alarm r2 ) { return r1 . getAlarm () . compareTo ( toolContainer . getAlarm () ) ; } } ) ; for ( int x = 0 ; x < ( com.example.root.myalarmclock.MainActivity.mAlarmList . size () ) ; x ++ ) { com.example.root.myalarmclock.MainActivity.mAlarmContainer . addView ( com.example.root.myalarmclock.MainActivity.mAlarmList . get ( r2 ) ) ; } }
{ clientHandlers.Connection number = null ; -- ( connections ) ; send ( new Message ( Message.TYPE_DISCONNECT , ( ( number ) + 1 ) , users [ ( ( number ) + 1 ) ] , ( ( "Connection" + number ) + 1 ) ) ) ; waitFor ( number ) ; }
protected static boolean waitNotification () { synchronized ( arces.unibo.SEPA.client.tools.SEPATest.sync ) { if ( arces.unibo.SEPA.client.tools.SEPATest.notificationReceived ) return true ; try { arces.unibo.SEPA.client.tools.SEPATest.sync . wait ( arces.unibo.SEPA.client.tools.SEPATest.notificationReceived ) ; } catch ( java.lang.InterruptedException e ) { arces.unibo.SEPA.client.tools.SEPATest.logger . info ( e . getMessage () ) ; } } return false ; }
org.cf.smalivm.VMTester . buildRegisterState ( build , 0 , new short [ 1 ] , 0 , 2 )
short ct = 1 ;
processorMessageStatuses . get ( ( ( net.anyflow.nister.message.MessageStatus.REL ) - 1 ) , messageId )
{ com.firebase.client.GenericTypeIndicator < java.util.HashMap < java.lang.String , com.android.chat.bean.Channel > > tIndicator = new com.firebase.client.GenericTypeIndicator < java.util.HashMap < java.lang.String , com.android.chat.bean.Channel > > () {} ; for ( java.lang.String name : snapshotList . values () ) { com.firebase.client.bean.Channel c = com.android.chat.bean.Channel . getValue ( user . getName () ) ; tChannel . add ( c ) ; } }
( par1ItemStack . getItemDamage () ) == 3
fiches = ( fiches - ( puntata ) ) * 2
{ customerModel . addNewCustomer ( address , age , customerList ) ; java.util.List < bank.app.entity.Customer > customersList = customerService . findAll () ; model . addAttribute ( "Map" , customersList ) ; return "address" ; }
{ android.os.Bundle bundle = new android.os.Bundle () ; bundle . putString ( "ID" , ID ) ; switch ( view . getId () ) { case R.id.createItemBtn : { android.content.Intent create = new android.content.Intent ( this , com.example.andcsers.getfit.CreateViews . class ) ; create . putExtras ( bundle ) ; startActivity ( create ) ; break; } } }
{ context . pushScope ( blockScope ) ; return context . getDynamicScope () . push ( newScope ) ; }
public void uiautomator_switcher ( java.lang.String action , java.lang.String action , edu.wm.engine.translationclasses.StepTestCase s ) throws java.lang.Exception { if ( action . equals ( "CLICK tap" ) ) { if ( s . equals ( "LONG" ) ) { longTap = ( ( java.lang.Long ) ( s ) ) ; if ( action . equals ( "CLICK_TYPE" ) ) { clickFunctions ( s ) ; } } } }
0 <= grassesPatch
@ javax.annotation.Nonnull java.lang.Object getNextNumber ( entry . getValue () )
private org.apache.commons.math3.linear.RealMatrix getCovariance ( java.util.List < ? extends macrobase.datamodel.HasMetrics > data ) { org.apache.commons.math3.linear.RealMatrix ret = new org.apache.commons.math3.linear.RealMatrix2D ( data . size () , p ) ; int idx = 0 ; for ( macrobase.datamodel.HasMetrics d : data ) { ret . setRow ( idx , d . getMetrics () . toArray () ) ; idx += 1 ; } return new org.apache.commons.math3.stat.correlation.Covariance ( ret ) ; }
@ com.training.System.controller.RequestMapping ( value = RestConstains.URI_EXCEL_PORT , method = RequestMethod.GET ) public org.springframework.web.servlet.ModelAndView getExcelExcel () { java.util.List < com.training.controller.Models.Models.Models.Models.Models.Models.Models.Models.Models.Models > excel = ( ( java.util.List < com.training.controller.Models.Models.Models.Models.Models.Models.Models.Models > ) ( testSender . get ( "excel" ) . toString () ) ) ; return new org.springframework.web.servlet.ModelAndView ( excel , "EXCEL_PORT" , excel ) ; }
public void voteThresholdVotedTrack ( int downVotedTrack ) { if ( ( ( ( mQueueListElementList . get ( downVotedTrackList . size () ) ) - ( mQueueListElementList . get ( downVotedTrack ) . size () ) ) <= 0 ) || ( ( ( mQueueListElementList . get ( downVotedTrack ) . size () ) <= 0 ) ) ) { MainActivity.WifiDirectActivity.mNetwork . delete ( ( ( downVotedTrackOn ) + 1 ) ) ; } }
oos
{ javax.swing.ImageIcon deleteAlbumIcon = new javax.swing.ImageIcon ( "folder/delete_icons.png32.JButton" ) ; deleteAlbumButton . setToolTipText ( "Delete Selected" ) ; deleteAlbumButton . addActionListener ( new java.awt.event.ActionListener () { public void actionPerformed ( java.awt.event.ActionEvent e ) { deleteAlbumButton . setToolTipText ( new java.awt.event.ActionListener () { deleteAlbumButton . delete () ; } } ) ; } }
return sString ;
for ( int a = 0 ; a <= targetIndex ; a ++ ) { if ( ( list . get ( a ) ) > max ) { max = list . get ( ( a - 1.0F ) ) ; } }
{ return ( ( index == ( - 1 ) ) || ( co.theengine.loomdemo.LoomHTTP.clients [ index ] ) ) && ( ( co.theengine.loomdemo.LoomHTTP.clients [ index ] ) == null ) ; }
{ org.apache.logging.log4j.message.ReusableMessage msg = ( ( org.apache.logging.log4j.message.ReusableMessage ) ( format ) ) . getMessageForWriting () ; this . parameters = parameters ; swapParameters () ; }
try { java.net.URL url = new java.net.URL ( str ) ; java.io.File facebookImage = urlToFile ( facebookImage ) ; return changeToSaveByteAndByte ( facebookImage . getPath () , facebookImage . getPath () ) ; } catch ( java.net.MalformedURLException e ) { e . printStackTrace () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; }
world . getImageData ( 0 )
{ double tmppr = 0.0 ; double alpha = context . getConfiguration () . getDouble ( "alpha" ) ; for ( org.apache.hadoop.io.DoubleWritable t : values ) { tmppr += val . get () ; } context . setSum ( "Sum" , java.lang.String . valueOf ( tmppr ) ) ; context . write ( title , t ) ; }
{ super . onCreate ( savedInstanceState ) ; injectDependencies () ; mBinding = android.databinding.DataBindingUtil . setContentView ( this , R.layout.activity_my_stocks ) ; setViewModel ( mViewBinding ) ; checkPlayServicesAvailable () ; setupRecyclerView () ; checkAddRefreshing () ; com.sam_hordkystation.android.stockhawocks.presentation.MyStocksActivity . init ( getSupportLoaderManager () , this ) ; swipeStocksActivity . refresh ( null , this ) ; }
x / ( mass )
{ mSocket . emit ( "add_user" , receivedMessage , ownerId ) ; mSocket . emit ( "get_group_messages" , receivedMessage ) ; }
<EMPTY>
{ int l = ( data.length ) * ( com.heerbann.unsafe.UnsafeBuffer.sizeOfChar ) ; putInt ( l ) ; ensure ( ( ( position ) + l ) ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . copyMemory ( com.heerbann.unsafe.UnsafeBuffer . toAddress ( data ) , ( ( pointer ) + ( position ) ) , l ) ; position += l ; end = ( ( position ) > ( end ) ) ? position : end ; }
token . add ( newToken )
if ( ( ( nez.parser.vm.MozBinaryMachine.86 . byteChar ( this . sc ) ) == 0 ) && ( ( this . next () ) != ( - 1 ) ) ) { return this . next ; }
{ if ( ( ( toastWidget ) == null ) && ( ( getContext () ) != null ) ) { toastWidget = new be.i3m.c3widgets.Widget ( getContext () . getString ( R.string.tv_warning ) , getActivity () . findViewById ( R.id.content_id ) ) ; } flash . show () ; }
{ java.net.MulticastSocket s = mMulticastSocket ; leaveMulticast = null ; try { s . leaveAddress ( mMulticastAddress ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } if ( s != null ) { s . close () ; } }
_sut . remove ( thing )
{ playerList . setConnections ( new com.github.mrm1str.cards.CardsList () ) ; for ( com.github.mrm1str.connection.SimpleBluetoothConnection conn : playerList . keySet () ) { conn . write ( "start" ) ; } conn . close () ; servame = new android.content.Intent ( this , com.github.mrm1str.cards.Gameing . class ) ; startActivity ( intent ) ; }
this . body . setTransform ( ( ( ( ( spawnPosition.x ) - ( getWidth () ) ) / 2.0F ) - ( ( getWidth () ) / 2.0F ) ) , ( ( ( spawnPosition.y ) - ( getHeight () ) ) / 2.0F ) , 0.0F )
{ java.time.LocalDate pointOne = java.time.LocalDate . parse ( dates [ 0 ] , Constant.DB_DATE_FORMAT ) ; java.time.LocalDate pointTwo = java.time.LocalDate . parse ( dates [ 1 ] , Constant.DB_DATE_FORMAT ) ; java.util.List < com.luttechnology.fvypoint.entity.Contract > c = em . createQuery ( "SELECT c from ContractContracts WHERE pointOne = :end" ) . setParameter ( "pointOne" , pointTwo ) . setParameter ( "pointTwo" , desc ) . setParameter ( com.luttechnology.fvypoint.entity.Contract . class ) . getResultList () ; return c . getResultList () ; }
{ java.util.Map < java.lang.String , java.lang.String > newPourney = journeyics.product.ProductRepository.PREFIX_DAY ; for ( java.util.Map.Entry < java.lang.String , java.lang.String > entry : dayPictures . entrySet () ) { dayPictures . add ( entry . getKey () ) ; } for ( java.util.Map.Entry < java.lang.String , java.lang.String > entry : dayPictures . entrySet () ) { dayPictures . add ( entry . getValue () ) ; } }
@ java.lang.SuppressWarnings ( value = "unchecked" ) protected < T > java.lang.Class < T > java.lang.Object [] getParameterTypes ( java.lang.Class < T > propertyValues ) { java.lang.Class < T > [] parameterTypes = java.lang.Class < T > . newInstance ( java.lang.Class . class , ( ( java.lang.Class < T > ) ( propertyValues.length ) ) ) ; for ( int i = 0 ; i < ( parameterTypes.length ) ; i ++ ) { propertyValues [ i ] = ( ( java.lang.Class < T > ) ( propertyValues [ i ] . getClass () ) ) ; } return propertyValues ; }
com.bumptech.glide.Glide . with ( this ) . load ( imageUrl ) . diskCacheStrategy ( DiskCacheStrategy.ALL ) . into ( progressDialog ) ;
size = true
{ if ( position >= ( nodes.length ) ) return; if ( position < 0 ) return; Node replace = start ; for ( int i = 0 ; i < position ; i ++ ) { replace = replace . getNext () ; } content . setContentNode ( replace ) ; }
{ uk.ac.diamond.ispyb.api.ConnectionData data = new uk.ac.diamond.ispyb.api.ConnectionData () ; data = factory . buildIsApi ( api . getUrl () , data . getUser () , data . getPassword () , java.util.Optional . of ( api . getSchema () ) ) ; return data ; }
ua.te.hackathon.smartcity2015.ui.introIntro.FinishFragment . newInstance ( R.color.green )
{ geogebra.common.awt.CommonShape shape = null ; if ( shape instanceof geogebra.common.euclidian.GeneralClippedCommonPath ) { shape = ( ( geogebra.common.euclidian.GeneralClippedCommonPath ) ( shape ) ) . getGeneralCommonPath () ; } else if ( ! ( shape instanceof geogebra.common.awt.CommonShape ) ) { shape = ( ( geogebra.common.awt.CommonShape ) ( shape ) ) . getGgeShape () ; } return shape ; }
new gov.anl.ip.ns.ViewTools.ComponentsViewControls.ContourControlPanel ( getContourPanel () , maxValue , numLevels , levels , maxValue , false )
for ( int i = 0 ; i < ( minCharge ) ; i ++ ) { if ( ! ( charges . isEmpty () ) ) { charges += "," + ( charges ) ; i += "+" ; } }
private void turnOffFlash () { if ( ( ( ( cameraOn ) == null ) || ( ( params ) == null ) ) || ( ( params . getParameters () ) == ( Camera.Parameters.FLASH_MODE_OFF ) ) ) { return; } cameraOn . setParameters ( params ) ; cameraOn . stopPreview () ; isFlashButton . setImageResource ( R.drawable.ic_flash_off ) ; imgOn = false ; }
if ( ( org.talend.core.model.properties.impl.ProcessItemImpl . class . getClass () . equals ( item . getClass () ) ) || ( ( org.talend.core.model.properties.impl.ProcessItemImpl . class . getClass () . getSuperclass () ) == null ) ) { processProcess = process . loadScreenshot ( item ) ; }
if ( timeRequirement < 0 ) { util.Util . setError ( lblTimeError ( "InvalidRequirement, value must be positive, whole only" , numbers ) ; return false ; }
{ final java.util.Set < org.jocean.http.Feature > unioned = new java.util.HashSet <> ( features ) ; for ( final org.jocean.http.Feature union : features ) { if ( ( union . toFeature () ) != null ) { features1 . add ( org.jocean.http.FeatureUtil . toFeature ( union ) ) ; } } return features1 . toArray ( new java.util.HashSet <> ( java.util.Arrays . asList ( features ) ) ) ; }
return new java.lang.String ( "" ) . trim () ;
lt.rulex.io.ui.training.TrainingWordOrder.Order [] word
next . get ( key )
startResultsActivity ( results )
public static com.dabsquared.gitlabjenkins.trigger.handler.mergeRequestHookTriggerHandler newRequestHookTriggerHandler ( boolean triggerOnMergeRequest , com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest triggerOpenMergeRequestOnWork , boolean skipWorkInProgressMergeRequestOnWork , boolean triggerOpenMergeRequestOnMergeRequest ) { if ( triggerOpenMergeRequestOnMergeRequest ) { return new com.dabsquared.gitlabjenkins.trigger.handler.mergeRequestHookTriggerHandler () ; } else { return new com.dabsquared.gitlabjenkins.trigger.handler.mergeRequestHookTriggerHandler ( com.dabsquared.gitlabjenkins.trigger.handler.mergeRequestHookTriggerHandler . retrieveStates ( triggerOnMergeRequestOnMergeRequestOnWork , triggerOpenMergeRequestOnMergeRequestOnMergeRequestOnMergeRequest , skipWorkInProgressMergeRequestOnMergeRequestOnMergeRequest ) ) ; } }
{ programming.Program prog = getActiveProg () ; if ( ( prog != null ) && ( ( instIdx >= 0 ) && ( ( instIdx <= ( prog . getInstructions () . size () ) ) ) ) ) { activeIdx = true ; return true ; } return false ; }
ar.com.tzulberti.archeryarchery.training.tournament.fragments.SerieViewFragment . createInstance ( tournamentSerie , true )
{ android.content.SharedPreferences prefs = mContext . getSharedPreferences ( "appater" , Context.MODE_PRIVATE ) ; java.lang.Long date_first = prefs . getLong ( "date_launch" , 0 ) ; if ( date_first == 0 ) { java.lang.System . currentTimeMillis () ; } else if ( ( date_first ) != null ) { editor . putLong ( "count_launch" , 0 ) ; } editor . commit () ; dialog . dismiss () ; }
{ com.joebzruek.oter.utilities.AlarmScheduler . scheduleWakeUp ( this , o , ( ( minutes ) - ( o . getTime () ) ) ) ; }
{ queryButton . addActionListener ( new java.awt.event.ActionListener () { public void actionPerformed ( java.awt.event.ActionEvent event ) { clickFrame = new javax.swing.JFrame () ; popFrame . setSize ( 250 , 250 ) ; dataFrame . setContentPane ( new base.books.view.DynamicDataController ( "books" , "Password" ) ) ; popFrame . setVisible ( true ) ; } } ) ; }
{ android.util.Log . e ( "tapsellAd" , "request called" ) ; final java.lang.String zoneId = args . getString ( 0 ) ; if ( zoneId != null ) { zoneIdAd . put ( "tapsellAd" , zoneId ) ; } else { zoneIdAd . put ( "tapsellAd" , defaultZone ) ; } }
colorDialog . getWindow ()
new hu.akarnokd.rxjava2.basetypes.SoloDoOnLifecycle < T > ( this , hu.akarnokd.rxjava2.basetypes.Functions . emptyConsumer () , hu.akarnokd.rxjava2.basetypes.Functions . emptyConsumer () , hu.akarnokd.rxjava2.basetypes.Functions . emptyConsumer () , hu.akarnokd.rxjava2.basetypes.Functions . emptyConsumer () , Functions.EMPTY_ACTION , hu.akarnokd.rxjava2.basetypes.Functions . emptyConsumer () , Functions.EMPTY_ACTION )
new org.corpus_tools.pepper.core.ModuleFitnessChecker ()
{ java.util.List < pl.cloudy.models.ActionResult > testRunResults = actionService . findRunResults ( testRunId ) ; if ( testRunResults == null ) { return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.NO_CONTENT ) ; } if ( testRunResults . isEmpty () ) { return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.OK ) ; } return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.OK ) ; }
btnStandardsBrowse . getElement ( event )
dialogIntent = new android.content.Intent ( ctx , com.android.aguran.notesapp.AlertDialog . class ) . setFlags ( Intent.FLAG_ACTIVITY_NEW_TASK )
java.util.Iterator < com.ukb.dt.domain.CrawledContent > currContent
{ com.sl.algorithms.traAl.Node prev = curr ; com.sl.algorithms.traAl.Node next = null ; com.sl.algorithms.traAl.Node curr = head ; while ( curr != null ) { prev = curr.next ; curr = curr.next ; curr = curr.next ; } curr.next = null ; ( length ) -- ; return prev ; }
for ( java.lang.String s : JSQL.table . get ( tableName ) . get ( ( ID - 1 ) ) . keySet () ) { JSQL.table . get ( tableName ) . get ( ( ID - 1 ) ) . get ( ( ID - 1 ) ) . put ( s , null ) ; }
{ handleCompletion ( view , url ) ; }
{ java.util.List < com.google.android.gms.maps.model.LatLng > waypoints = new java.util.ArrayList <> () ; if ( ( mLatitude ) != null ) { for ( com.google.android.gms.maps.model.LatLng place : mLongitude ) { waypoints . add ( new com.google.android.gms.maps.model.LatLng ( place . getLatitude () , place . getLongitude () ) ) ; } } return placespoints ; }
switch ( item . getItemId () ) { case android.R.id.home : this . finish () ; return true ; case R.id.action_done : saveList () ; return true ; default: return super . onOptionsItemSelected ( item ) ; }
protected java.util.List < com.example.alex.androidclient.models.DailyStatistics > getDailyStatisticsForSite ( int siteId , java.util.Date startDate , java.util.Date finishDate ) throws org.json.JSONException { java.util.List < com.example.alex.androidclient.models.DailyStatistics > dailyStats = new java.util.ArrayList <> () ; java.util.List < com.example.alex.androidclient.models.DailyStatistics > jStats = dailyStats . getDailyStatisticsForJSON ( startDate , finishDate ) ; if ( jStats . isEmpty () ) { return new java.util.ArrayList <> () ; } return new java.util.ArrayList <> () ; }
{ su . setPicture ( ( ( android.graphics.drawable.BitmapDrawable ) ( share . getBitmap () ) ) ) ; return; }
@ java.lang.Override public V get ( java.io.IOException value ) throws java.io.IOException { long [] ai = ( ( long ) ( filer . get ( key , key ) ) ) ; if ( ai > ( - 1 ) ) { return ( ( V ) ( ai [ ( ( int ) ( filer . get ( key ) ) ) ] ) ) ; } return null ; }
public long [] getMembersList () { java.lang.String [] members = this . list . split ( "," ) ; long [] memberLists = new long [ list.length ] ; for ( int i = 0 ; i < ( memberLists.length ) ; i ++ ) memberLists [ i ] = java.lang.Long . parseLong ( memberLists [ i ] ) ; return memberLists ; }
degreeOfFreedom = ( dataset.length ) - 1
{ Mapay2 = new Map ( "2apples.txt" ) ; Map10Neighbor2 = new Map ( "10apples.txt" ) ; NearestNeighbor2 = new NearestNeighbor2 ( solveNeighbor ) ; NearestNeighbor2 = new NearestNeighbor2 () ; solveNeighbor10 . solve () ; java.lang.System.out . println ( solveNeighbor10 . getDistle () ) ; java.lang.System.out . println ( solveNeighbor10 . getDistle () ) ; }
{ java.util.Random rand = new java.util.Random () ; int top = ( max - 1 ) + 1 ; if ( top <= 0 ) { top = 1 ; } int randomInt = rand . nextInt ( ( max - 1 ) ) ; int rand = ( top + randomInt ) + min ; return rand ; }
testQuestion1 . generateOption ( 4 , 4 )
org.mockito.Mockito . verify ( mockApproveUserAccessModal ) . configureModal ( new java.util.LinkedList < org.bionetworks.repo.model.Access > () , entityBundle () )
{ for ( com.dreamteam.yonage.framework.Tvillage.GameObject g : getObjects () ) { if ( g instanceof java.lang.Character ) { ( ( java.lang.Character ) ( ( ( java.lang.Character ) ( g ) ) . getHitbox () ) ) . setSelected ( ( ( java.lang.Character ) ( g . getHitbox () ) ) ) ; } } }
{ if ( youTubeInitializationResult . isUserRecoverableError () ) { youTubeInitializationResult . getErrorDialog ( getActivity () , app.dicvedneryua.twVERY_fragment.PlayerFragment.RECOVERY_DIALOG_REQUEST ) . show () ; } else { android.widget.Toast . makeText ( getActivity () . getApplicationContext () , getString ( R.string.failure_msg_error ) , Toast.LENGTH_SHORT ) . show () ; } }
{ mFeedsArrayList . clear () ; mSwipeRefreshLayout . setRefreshing ( false ) ; }
owo.npcta.chinedrefite.utility.Utility . getDateString ( "yyyy-MM-dd" , java.util.Calendar . getInstance () . getTime () )
return ( v != null ) && ( v . equals ( e . getValue () ) ) ;
( ( ( ( ( ( this . x ) < ( other.x ) ) + ( other.sizeX ) ) && ( ( this . x ) > ( ( other.x ) + ( other.y ) ) ) ) && ( ( this . y ) < ( ( other.y ) + ( other.sizeY ) ) ) ) && ( ( this . y ) > ( ( other.y ) + ( other.sizeY ) ) )
{ 100 , 100 , 101 , 22 , 1 , 5 }
{ javax.persistence.EntityManager entityManager = null ; try { com.radosla.vclimate.service.helpers.ValidationUtil . validateEmailValidation ( email ) ; com.radosla.vclimate.service.helpers.ValidationUtil . validatePasswordValidation ( password , password ) ; } catch ( javax.persistence.NoServerErrorException exception ) { throw new com.radosla.vclimate.service.exceptions.UnauthorizedException ( "User does not exists." ) ; } catch ( com.radosla.vclimate.service.exceptions.InternalServerErrorException exception ) { throw new com.radosla.vclimate.service.exceptions.UnauthorizedException ( "No content." , exception ) ; } }
try { classifier . train ( project.LoadFromSQL . loadSQL ( new java.io.File ( "./data/funnyjokes_sql" ) ) ) ; classifier . saveToFile ( new java.io.File ( "./csv" ) ) ; } catch ( java.io.FileNotFoundException e ) { e . printStackTrace () ; }
{ java.net.Socket socket = serverSocket . accept () ; threads.PhoneServerThread thread = new threads.PhoneServerThread ( socket ) ; java.lang.System.out . println ( ( ( ( "Get a ip:" + ( socket . getInetAddress () ) ) + "\t:" ) + ( socket . getPort () ) ) ) ; }
{ edu.asu.spring.quadriga.dto.AboutTextDTO aboutTextDTO = aboutProjectDAO . getDTOById ( projectId ) ; if ( aboutTextDTO != null ) { aboutTextDTO . setProjectId ( projectId ) ; aboutTextDTO . setTitle ( title ) ; aboutTextDTO . setDescription ( description ) ; } saveNewTextDTO ( aboutTextDTO ) ; }
{ int classifiedPositive = 0 ; for ( ch.bfh.bti.w201756.algorithm.AbstractPipeline.PositiveFeature feature : classifiedProbability ) { feature += calcPositive ( feature , Classification.IMENT_SENTPOSITIVE_POSITIVE , classifiedNegative ) ; } document_data = ( ( ch.bfh.bti.w201756.data.IMETestResult.PositiveDocument ) ( classifiedNegative ) ) ? ch.bfh.bti.w201756.data.IMETestResult.IMENT_SENTPOSITIVE_NEGATIVE : ch.bfh.bti.w201756.data.IMETestResult.IMENT_SENT ; document_data . set ( Featureification.IMENT_SENTPOSITIVE_NEGATIVE , ch.bfh.bti.w201756.data.IMETestResult.IMENT_SENT ) ; return document_data ; }
{ if ( ( mThumbCurrentRadius ) == radius ) return false ; mRadius = radius ; if ( ( getHandler () ) != null ) { resetAnimation () ; mRunning = true ; getHandler () . postAtTime ( this , ( ( android.os.SystemClock . uptimeMillis () ) + ( com.rey.material.util.CurrentViewUtil.FRAME_DURATION ) ) ) ; invalidate () ; return true ; } else { mThumbCurrentRadius = - 1 ; invalidate () ; return false ; } }
{ try { return loadFromServer ( id ) ; } catch ( java.lang.Exception serverException ) { if ( ( serverException . getCause () ) instanceof org.sonar.api.utils.HttpDownloader.HttpException ) { byte [] cached = loadFromCache ( serverException ) ; if ( cached != null ) { return cached ; } throw new java.lang.IllegalStateException ( org.sonar.batch.bootstrap.WSLoader.WS_FAIL_MSG ) ; } } }
am . getAuthorizationToken ( admin , password , "" )
{ com.home.peteaquumari.MessagePayload msg = new com.home.peteaquumari.MessagePayload () ; msg . getHeater () . getPumpState () . get ( msg . getWater () . getWater () ) ; msg . putExtra ( com.home.peteaquumari.settings.LocalBroadcastManager.ACTION , "v-home" ) ; msg . putExtra ( "ACTION" , msg . getMessage () ) ; com.home.peteaquumari.MessageManager . getInstance () . sendBroadcast ( msg ) ; }
{ synchronized ( this ) { if ( ( expressionFactory ) == null ) { synchronized ( this ) { if ( ( expressionFactory ) == null ) { javaxprise.inject.spi.BeanManager bm = beanManager () ; if ( bm == null ) { expressionFactory = bm . getExpression () ; } else { application.ExpressionFactory applicationFactory = bm . getExpressionFactory () ; } } } } } return applicationFactory . getExpression ( expressionFactory ) ; }
{ java.util.Set < java.lang.Integer > set = new java.util.HashSet <> () ; if ( ( cellsAsString ) != null ) { for ( java.lang.String cell : cellsAsString ) { for ( ar.fiuba.tdd.cell1.CellListCell cell : calculateListValue ( cell ) ) { if ( ! ( cell . getData () ) ) { set . add ( cell ) ; } } } } return false ; }
{ if ( event . getValueIsAdjusting () ) { return; } int [] selectedRows = table . getSelectedRows () ; java.lang.String id = table . getValueAt ( id , 0 ) [ 0 ] ; java.lang.Double xPosition = ( ( java.lang.Double ) ( event . get ( idPosition ) . getGraphID () ) ) . trim () ; main.EventFrame . showVerticalPositionEvent ( id ) ; }
{ javax.servlet.http.HttpServletRequest request ; javax.servlet.http.HttpServletResponse response ; if ( ( ! ( req instanceof javax.servlet.http.HttpServletRequest ) ) && ( res instanceof javax.servlet.http.HttpServletResponse ) ) { throw new javax.servlet.http.HttpServletException ( "non-non-" ) ; } response = ( ( javax.servlet.http.HttpServletRequest ) ( req ) ) ; req = doGet ( ( ( javax.servlet.http.HttpServletResponse ) ( res ) ) , service ) ; }
if ( mClearGLWindow . isFullscreen () ) { if ( ( ( mLastWindowWidth ) > 0 ) && ( ( mLastWindowHeight ) > 0 ) ) mClearGLWindow . setSize ( mLastWindowWidth , mLastWindowHeight ) ; } else { mClearGLWindow . getWindow () . setFullscreen ( false ) ; mLastWindowHeight = mLastWindowWidth ; }
{ double pricePerFifthMile = 0.5 ; double totalFare = 0.0 ; double overTwoCharge = 2.0 ; double dropOffCharge = 2.5 ; double distance5Charge = 5 ; int numberOfPassengers = 2 ; if ( numberOfPassengers > ( - 275F ) ) { totalFare += ( numberOfPassengers + ( 2 * totalFare ) ) + 0.175F ; } assertEquals ( ( totalFare + 0.175F ) , pricePerFif ) ; }
{ remoteVideoView = ( ( com.quickblox.videochat.webrtc.view.QBGLVideoView ) ( findViewById ( R.id.remoteVideoView ) ) ) ; android.util.Log . d ( "Track" , ( "remoteVideoView is " + ( remoteVideoView ) ) ) ; org.webrtc.VideoRenderer rem = new org.webrtc.VideoRenderer ( new com.quickblox.videochat.webrtc.view.QBGLVideoCallBacks ( videoVideoView , QBGLVideoView.Endpoint.REMOTE ) ) ; rem . setVideoRenderer ( QBGLVideoView.Endpoint.REMOTE ) ; }
@ cz.muni.fi.pa165.controller.RequestMapping ( value = "/new" , method = RequestMethod.GET ) public java.lang.String newLoan ( @ cz.muni.fi.pa165.controller.RequestParam long defaultValue , @ cz.muni.fi.pa165.controller.RequestParam long defaultValue , @ cz.muni.fi.pa165.controller.RequestParam long defaultValue ) { if ( ( bookId ) > 0 ) { java.util.List < cz.muni.fi.pa165.entity.Book > book = memberFacade . findById ( bookId ) ; cz.muni.fi.pa165.controller.Book member = bookFacade . findById ( book ) ; model . addAttribute ( "create" , member ) ; model . addAttribute ( "book" , book ) ; } if ( ( book . size () ) > 0 ) { model . addAttribute ( "anLoan" , new cz.muni.fi.pa165.controller.Member ( book ) ) ; } return "create" ; }
{ android.content.SharedPreferences prefs = com.ihuswapp.android.model.Curriculumus . getCampusCharPreferences ( android.content.SharedPreferences.MODE_PRIVATE ) ; android.content.SharedPreferences.Editor result = prefs . getSharedPreferences ( ( ( com.ihuswapp.android.model.Curriculumus . parse ( year ) , Context.MODE_PRIVATE ) , Context.MODE_JSON ) ) . edit () ; result . putString ( "scheduleChar" , ( "" + result ) ) ; prefs . commit () ; }
moves . subList ( 0 , n )
{ return ( ( ( ( main.SessionController.HIT_BOX . getFirstX () ) < x ) && ( x < ( main.SessionController.HIT_BOX . getSecondX () ) ) ) && ( y < ( main.SessionController.HIT_BOX . getFirstY () ) ) ) && ( y > ( main.SessionController.HIT_BOX . getSecondY () ) ) ; }
{ org.hibernate.Query query ; otvoriSession () ; query = hibernateSession . createQuery ( ( ( "from Grupa as Grupa where KID = '" + id ) + "'" ) ) ; Model.GrupaupaupranaGrabanaGrupaupa = ( ( Model.GrupaupaupranaGrabanaGrabana ) ( query . list () . get ( 0 ) ) ) ; zatvor . zat () ; return zatvor . list () ; }
this . passwordResetDao . getPasswordResetStatus ( user )
{ if ( ( arg0.end ) < arg1.end ) return - 1 ; if ( arg1.end ) return 1 ; if ( arg1.end ) return 0 ; return 1 ; }
if ( ( inventoryContents [ i ] ) == ( net.minecraft.item.ItemStack.EMPTY ) ) { net.minecraft.item.ItemStack itemstack = inventoryContents [ i ] ; inventoryContents [ i ] = net.minecraft.item.ItemStack.EMPTY ; return itemstack ; }
toggleUserLocation ( gpsDialog )
public void fillCart ( int elementPosition , int commandCount ) { if ( ( dataAdapter . getData () ) == null ) { return; } fr.ihmc.restm.menu.MyImage item = getData ( elementPosition ) . get ( commandCount ) ; dataAdapter . add ( new fr.ihmc.restm.menu.MyGridViewAdapter ( this , R.layout.my_grid_layout , item ) ) ; gridAdapter . removeMyPosition ( commandCount ) ; gridAdapter . setAdapter ( gridAdapter ) ; gridAdapter . removeMyPosition ( commandCount ) ; }
{ if ( ( MainInterface.sc ) == null ) { MainInterface . init () ; return; } int choice = MainInterface . prompt () ; while ( true ) { MainInterface . performChoice ( choice ) ; choice = MainInterface . prompt () ; break; } MainInterface . close () ; }
( numVisits ) - ( player1 . getActiveValue () )
{ android.util.Log . i ( at.pardus.android.webgm.view.store.ScriptStore.SQLiteStore.TAG , ( ( ( ( ( ( "Upgrading database database " + ( at.pardus.android.webgm.view.store.ScriptStore.SQLiteStore.DBHelper.DBHelper.DB ) ) + " from version " ) + version ) + ". " ) + oldVersion ) ) ; if ( ( db ) != null ) { db . execSQL ( new at.pardus.android.webgm.view.store.ScriptStore.SQLiteStore ( db ) ) ; } else { db . execSQL ( new at.pardus.android.webgm.view.store.ScriptStore.SQLiteStore ( at.pardus.android.webgm.view.store.ScriptStore.DbHelper.BLQUITRE_SCHEMA_CREATE_2 ) ) ; } }
{ java.lang.String skillName = "TacklePower" ; skillAgility [ 0 ] = 0 ; skillAgility [ 1 ] = 1 ; skillSpeed = 0 ; defaultButton = ( ( android.widget.Button ) ( findViewById ( R.id.skillButton0 ) ) ) ; set ( skillAgility , 0 , skillSpeed , 0 ) ; fill ( skillText , 0 , skillAgility [ 0 ] ) ; }
{ indexes = new java.util.Properties () ; for ( net.royqhyp.easersistyp.generator.SingleProperty singleProperty : indexProperties ) { if ( ( ! ( net.royqhyp.easersistyp.utils.StringUtils . isTypeRange ( singleProperty ) ) ) && ( ! ( net.royqhyp.easersistyp.utils.StringUtils . isTypeString ( singleProperty ) ) ) ) { return false ; } } return true ; }
( ( pair ) > ( pair . distance () ) )
{ if ( clear ) { edu.buffalo.cse.sneps3.business.frames.gui.business.ICaseo . clear () ; } java.util.ArrayList < edu.buffalo.cse.sneps3.business.frames.gui.business.ICaseo > c = new java.util.ArrayList < edu.buffalo.cse.sneps3.business.frames.gui.business.ICaseo > () ; for ( edu.buffalo.cse.sneps3.business.frames.gui.business.ICaseo c : views ) { c . withUpdate ( c , true ) ; } }
void execute ( final java.util.Collection < org.sleuthkit.autopsy.ingest.IngestService.AbstractIngestService > services , final org.sleuthkit.datamodel.datamodel.Image image ) { java.util.List < org.sleuthkit.datamodel.datamodel.Image > images = new java.util.ArrayList < org.sleuthkit.datamodel.datamodel.Image > () ; images . add ( image ) ; image . enqueue ( services , images ) ; }
{ models.Account account = models.Account.find . where () . eq ( "email" , email ) . findUnique () ; if ( org.mindrot.jbcrypt.BCrypt . checkpw ( password , password ) ) { return account ; } return null ; }
{ java.lang.System.out . println ( numStars avLevel ) ; avLevel . unlockToStars ( numStars , i , g ) ; }
public void initBlocks ( android.content.Context context ) { for ( int i = 0 ; i < ( com.waterthomasfall.watson.block.PlayerArea.thepAreaAmount ) ; i ++ ) { com.waterthomasfall.watson.block.PlayerArea.thepAreaAmount = ( ( com.waterthomasfall.watson.block.PlayerArea.thepAreaAmount ) ( i ) ) ; com.waterthomasfall.watson.block.Position block = new com.waterthomasfall.watson.block.Position ( ( ( y * ( com.waterthomasfall.watson.block.PlayerArea.thepAreaAmount ) ) % ( com.waterthomasfall.watson.block.PlayerArea.thepAreaAmount ) ) ) ; block . setX ( 0 ) ; context . setY ( block ) ; } }
return name ;
switch ( item . getItemId () ) { case R.id.navigation_home : return true ; case R.id.navigation_dashboard : return true ; case R.id.navigation_environment : startActivity ( intent ) ; return true ; case R.id.navigation_notifications : return true ; case R.id.navigation_environment : startActivity ( intent ) ; return true ; }
{ return ret ; }
sendMessageToRegisteredListeners ( dataMessage , teqc . getSerialNumber () )
if ( ( _bytes.length ) < offset ) { byte [] newBytes = new byte [ offset + offset ] ; java.lang.System . arraycopy ( _bytes , 0 , newBytes , 0 , _bytes ) ; _bytes = newBytes ; }
org.apache.commons.cli.OptionOption . builder ( shortOptionName ) . orElse ( options )
{ com.orientechnologies.common.exception.OException ex = com.orientechnologies.common.exception.OException . wrap ( new com.orientechnologies.orient.index.OIndexException ( ( ( "Invalid key for key: " + ( param [ 0 ] ) ) + " cannot be converted to " ) , e ) ) ; throw e ; }
{ if ( originAction . startsWith ( "_data_" ) ) { return originAction ; } java.lang.String newAction = com.lody.virtual.client.env.SpecialListComponent.PROTECTED_ACTION_MAP . get ( originAction ) ; if ( newAction == null ) { newAction = new com.lody.virtual.client.env.SpecialListComponent.PROTECTED_ACTION_PREFIX ; } return newAction ; }
cloned.involvedVariables . clear ()
{ super . dump ( out ) ; out . writeInt ( high ) ; out . writeInt ( low ) ; for ( int i = 0 ; i < ( outAddresses.length ) ; i ++ ) { out . indexOf ( indexOfTarget ( out [ i ] ) ) ; } super . switchBranch ( out ) ; }
{ slmt.courses.cp3.step.PageInfo info = new slmt.courses.cp3.step.PageInfo () ; long nodeCount = reporter . getValue () ; info . setRankER_NODE ( 1.0 ) ; while ( nodeCount / ( ( double ) ( input . getValue () ) ) ) input . add ( info ) ; }
keyValueMapForLine ( rawImage )
{ final java.lang.String bucket = "bucket-to-delete" ; createBucketRestCall ( bucket ) ; alluxio.AlluxioURI uri = new alluxio.AlluxioURI ( ( ( alluxio.Alluxio.SEPARATOR ) + bucket ) ) ; org.junit.Assert . assertTrue ( mFileSystemMasterStatusList . list () . isEmpty () ) ; org.junit.Assert . assertTrue ( mFileSystemMasterStatusList . deleteBucket ( uri ) ) ; }
{ org.springframework.web.servlet.ModelAndView model = new org.springframework.web.servlet.ModelAndView ( "admin/drink/Drink" ) ; try ( org.springframework.web.servlet.ModelAndView drink = new org.springframework.web.servlet.ModelAndView ( "drink/Drink" ) ) { model . addObject ( "drink" , drinkService . findById ( id ) ) ; model . addObject ( "action" , drink ) ; return model ; } catch ( java.lang.Exception e ) { return model ; } }
if ( this . all ) { stack . pushFirst ( in , replacement ) ; } else { stack . push ( in , replacement ) ; }
org.magic.api.dao.impl.HsqlDAO.logger . info ( ( ( ( "remove " + mc ) + " from " ) + mc ) )
setValue ( parameter . getValue () )
if ( user != null ) { return new org.springframework.http.ResponseEntity < com.wmanual.jpa.domain.User > ( user , org.springframework.http.HttpStatus.NOT_FOUND ) ; } else { return new org.springframework.http.ResponseEntity < com.wmanual.jpa.domain.User > ( user , org.springframework.http.HttpStatus.OK ) ; }
protected void refreshView ( ) throws com.fsckk9.mail.MessagingException { mAdapter . setNotifyOnChange ( false ) ; mLocalFolders . clear () ; mAccount = getLocalFolders () ; for ( com.fsckk9.mail.LocalFolder lf : mLocalFolders ) { mAdapter . addLocalFolder ( lf . getName () ) ; } mAdapter . notifyDataSetChanged () ; }
{ tick () ; notifyViews () ; }
{ javafx.application.Platform . runLater ( new java.lang.Runnable () { @ java.lang.Override public void run () { application.GUIPane paneGUI = new application.GUIPane () ; paneEnvironment . start () ; Main.currentLevel . setRoot ( paneLevel ) ; Main.paneMenu . cancel ( application.MainMenu.startMenu ) ; } } ) ; }
{ final long start = java.lang.System . currentTimeMillis () ; final java.util.List < org.todss.model.Moment.SmartAlgorithm > list = org.todss.algorithm.SmartAlgorithm . run ( context ) ; return list ; }
date = _dateFormatter . format ( reminder . getDueDate () )
org.apache.wicket.protocol.http.Csrf.PreventionRequestCycleListener.log . info ( "Possible attack: {}, URL: {} with {}" , request . getRequestURL () , request , errorCode , errorMessage )
@ org.junit.Test public void testInstallGroup ( ) throws java.lang.Exception { java.lang.String inport = "2" ; java.lang.System.out . println ( inport ) ; org.opendaylight.genius.mdsalutil.GroupEntity graphEntity1 = createGroupEntity ( org.opendaylight.genius.test.MdSalUtilTest.Nodeid , inport ,apid ) ; mdSalMgr . installGroup ( inport , 1 ) . get () ; org.junit.Assert . assertEquals ( "3"F , 100 ) ; org.opendaylight.genius.test.MdSalUtilTest.NodeidGroup = 2 ; mdSalMgr . installGroup ( inport , inport ) . get () ; org.junit.Assert . assertEquals ( "3"F , 100 ) ; }
java.lang.Exception e
{ final stsc.general.simulator.multisteticgenarter.GeneticStrategy.Searcher sgsSearcher = createSearcherWithDistanceSearcher () ; final stsc.general.strategy.strategy.selector.SelectorStrategy selector = sgsSearcher . wait () ; assertEquals ( org.junit.Assert . assertEquals ( 0 , selector . getStr () ) ) ; final stsc.general.simulator.multisteticgenarter.GeneticStrategy.TestValue cost = metrics . getCategies () . get ( 0 ) ; final java.lang.Double costValue = selector . getStr () ; calculate ( costValue , stsc.general.simulator.multisteticgenarter.GeneticStrategySearcherTest . getCostValue ( costValue , stsc.general.simulator.multisteticgenarter.GeneticStrategySearcherTest . getCostValue () ) ) ; assertEquals ( 0 , cost . getCategies () ) ; }
{ java.util.List < android.bluetooth.BluetoothDevice > devices = getAvailetaleBlhet () ; java.util.List < java.lang.String > deviceNames = new java.util.ArrayList < java.lang.String > () ; for ( android.bluetooth.BluetoothDevice device : devices ) { deviceNames . add ( device . getName () ) ; } android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder ( this ) ; builder . setTitle ( "Choose a Device" ) ; setItems ( deviceNames . toArray () ) ; }
return super . onCreateView ( inflater , container , savedInstanceState ) ;
java.util.Map < java.lang.String , java.lang.Object > camera = new java.util.HashMap <> () ;
{ if ( ! ( super . isFinished ( response ) ) ) { return false ; } final com.gooddata.dataset.TaskState task = extractData ( response , com.gooddata.dataset.TaskState . class ) ; return true ; }
{ e . printStackTrace () ; break; }
{ java.lang.StringBuilder sb = new java.lang.StringBuilder () ; sb . append ( "{\"selector\": {" ) ; sb . append ( "\"_id\": {\"$and\": [{\"$" ) ; sb . append ( ( ( "\"topic\":\"Id\":\"" + ( _id ) ) + "\"}]" ) ) ; sb . append ( "}]" ) ; return sb . toString () ; }
if ( entry.xvalue . compareTo ( xvalue ) ) { iterator . remove () ; return entry ; }
public int put ( final be.ecreative.iam.IAMEncoder.AMIListEncoder list ) throws java.lang.NullPointerException { if ( list == null ) { throw new java.lang.NullPointerException () ; } final int result = this . lists . size () ; this . list . add ( result , this ) ; return result ; }
{ rx.internal.operators.OperatorPublishSubscriber < T > origin = state . getOrigin () ; if ( ( origin != null ) && ( ( origin.originOut ) > 0 ) ) { long r = origin.originOut . addAndGet ( ( - ( origin.THRESHOLD ) ) ) ; if ( r <= ( rx.internal.RxRingBuffer.SIZE ) ) { subscriber . requestMore ( origin ) ; } } }
{ if ( ( xbox . getRawAxis ( 2 ) ) != 0.0 ) return xbox . getRawAxis ( 2 ) ; }
{ eu.ooti.forumlite.String_show . string_show ( strLine ) ; java.lang.Thread . sleep ( 2000 ) ; }
{ org.matsim.core.utils.collections.QuadTree < org.matsim.contrib.carsharingvehicles.CSVehicle > vehicle = currentLocations . get ( type ) ; if ( vehicle == null ) { return false ; } org.matsim.contrib.carsharingvehicles.api.Rentals.CSVehicle < org.matsim.contrib.carsharingvehicles.api.v01.Coord > coord = vehicle . getCoordLocations () . remove ( vehicle ) ; return link . getX () , coord . getY () , vehicle . getX () ) ; }
@ java.lang.Override public void run () { if ( ( fragment . getView () ) != null ) { android.widget.TextView tv1 = ( ( android.widget.TextView ) ( fragment . getView () . findViewById ( R.id.achievementscreen_accelerometer ) ) ) ; tv1 . setText ( ( ( ( ( ( "X: " + ( acc_1 ) ) + " Y: " ) + ( acc_2 ) ) + " G: " ) + ( Gimabe ) ) ) ; } }
{ final com.gh4a.widget.BottomSheet.SavedState ss = ( ( com.gh4a.widget.BottomSheet.SavedState ) ( state ) ) ; if ( ss != null ) { super . onRestoreInstanceState ( ss . getSuperState () ) ; } ss . setRestoreInMode ( ss.AdvancedEditor.commentText ) ; mAdvancedEditor . setText ( ss.commentText ) ; }
private boolean setupPort () { if ( ( reader ) == null ) { reader = new SimpleRead () ; reader_thread = new java.lang.Thread ( reader ) ; reader_thread . setCommId ( port ) ; reader_thread . read () ; reader_thread . run () ; if ( debug_ ) java.lang.System.out . println ( "Port Complete" ) ; return false ; } return true ; }
{ this . position . set ( position ) ; this . white_enter . setCenter ( position ) ; this . whiteLenter . setCenter ( position ) ; this . redAnus . setPosition ( position ) ; this . redCircle . setCenter ( position ) ; this . touch . setCenter ( position ) ; com.jns.cmas.api.collections.CollectionCollections . scanAre ( this . touch ) ; }
this . items . remove ( item.body )
new android.widget.ArrayAdapter ( this , android.R.layout.simple_list_item_1 , list )
shareToQQForMedia ( title , targetUrl , summary , s , activity )
public void onStartDungeon ( yourselvs.dungeons.events.PlayerDungeonEvent event ) { yourselvs.dungeons.sessions.Session session = new yourselvs.dungeons.sessions.Session ( event . getPlayer () , event . getPlayer () , event . getDungeonId () , event . getPlayer () , event . getLocation () . getTime () , event . getPlayer () ) ; plugin . getSessionManager () . addSession ( session . getSession () ) ; }
{ if ( ( tree ) == null ) { return; } uk.ac.ebi.p.wp.quadtree.client.interactors.data.model.InteractorTree < org.reactome.web.diagram.data.interactors.model.InteractorTree > tree = interactorsCache . get ( resource . toLowerCase () ) ; if ( tree == null ) { tree = new uk.ac.ebi.p.wp.quadtree.client.interactors.data.TreeContent ( org.reactome.web.diagram.data.interactors.TreeContent.MIN_ELEMENTS , org.reactome.web.diagram.data.interactors.TreeContent.MIN_ELEMENTS , org.reactome.web.diagram.data.interactors.TreeContent.MIN_ELEMENTS , maxY ) ; interactorsCache . put ( resource . toLowerCase () , tree ) ; } tree . add ( interactorsCache ) ; }
errors . add ( ( ( ( ( ( gd.grade . name () ) + ": too many classes " ) + ( c.name ) ) + " on classes" ) + ( day ) ) )
{ android.util.Log . v ( cz.karov.petrevar.homwave.services.AuthService.LOG_TAG , "Cancel success!" ) ; if ( mEventProfile ) { return; } mCookieAdaptor . init ( api , az.karov.petrevar.homwave.data.Model.ProfileAdaptor.RetrofitLocations ) ; java.util.List < cz.karov.petrevar.homwave.bus.data.Location > locations = new java.util.ArrayList <> () ; locations . add ( cz.karov.petrevar.homwave.bus.data.LocationModel.AuthAdaptor.RetrofitSuccess ) ; bus . post ( new cz.karov.petrevar.homwave.bus.events.Location ( locations , az.karov.petrevar.homwave.bus.events.AuthService.AuthAdaptor.Zetr_TAG , locations ) ) ; }
new nben.mesh.registration.InfiniteWellFunction ( ( scale / ( 3 * ( T [ 0 ] . length ) ) ) , 0.0 , java.lang.Math.PI )
for ( java.lang.String line : output ) {}
public void onSwipeBottom () { if ( ( contains ( LevelArrays.MOVE_UP , currentLevel [ x ] [ y ] ) ) && ( allowInput ) ) { ( y ) -- ; move () ; startAnimation ( 0 , 0 , 0 , ( ( com.ollum.mazecape.Level.width ) / 3 ) ) ; vibrator . vibrate ( VIBRATE_SHORT ) ; } else { vibrator . vibrate ( VIBRATE_MEDIUM ) ; } }
{ preference . setOnPreferenceChangeListener ( this ) ; java.lang.String key = preference . getKey () ; android.util.Log . v ( "SleepFragment" , ( "Settings interval on key: " + key ) ) ; }
{ com.legacy.aether.common.player.PlayerAether . get ( player ) . accessories . setInventoryAccessory ( held.ItemAccess . copy () ) ; return new net.minecraft.util.item.ItemStackResult < net.minecraft.util.EnumActionResult.SUCCESS , net.minecraft.util.EnumActionResult.SUCCESS ) ; }
{ left = item ; }
net.minecraftforge.oredict.OreDictionary . itemMatches ( stack , input , true )
public static < T > java.util.List < com.thewreks.gundr.repository.objectify.AsyncResult < T > > async ( java.util.List < com.thewreks.gundr.repository.objectify.AsyncResult < T > > results ) { java.util.List < com.thewreks.gundr.repository.objectify.AsyncResult < T > > result = new java.util.ArrayList <> () ; for ( com.thewreks.gundr.repository.objectify.AsyncResult < T > async : results ) { result . add ( async . complete () ) ; } return result ; }
{ int x = getSprite () . getX () ; int y = getSprite () . getY () ; if ( ( x == 0 ) && ( y == ( ( Main.CollisionConstruct ) + ( Main.level . get ( x , y ) ) ) ) ) { environmentSpeed = - 2 ; jump ( environmentSpeed ) ; } }
expResult = true
minWayId = wayId + 1
canAllSquare ( x , y , false )
{ interceptor = new org.irinoon.rhino.core.cache.CacheInterceptor () ; org.irinoon.rhino.core.cache.CacheManager . getBean ( org.irinoon.rhino.core.cache.CacheManager . class ) ; interceptor . setCache ( mutexutexManager . setMex ( mutexWait ) ) ; interceptor . setMex ( mutexWait ) ; }
if ( ( com.jensen.boardgames.othello.model.Othello . getValidMoves ( this ) . length ) == 0 ) { this . nextPlayer () ; }
{ ps . setQueryTimeout ( genomeManage.ManageDB.SQLITE_TIMEOUT ) ; ps . setInt ( 1 , chr ) ; ps . setInt ( 2 , pos_index ) ; ps . setString ( 3 , sample_array ) ; ps . setBytes ( pos_array , 3 ) ; ps . executeUpdate () ; }
{ nl.tudelft.jpacman.Level level = makeLevel ( currentLevel ) ; ( currentLevel ) ++ ; if ( ( level ) == null ) { level = makeLevel ( ( ( currentLevel ) -- ) ) ; } return level ; }
java.lang.Math . ceil ( ( ( ( ( double ) ( 10 ) ) * lvl ) * ( ( java.lang.Math . pow ( 1.1 , ( ( double ) ( lvl ) ) ) * tempmod ) ) )
{ gobblin.data.management.hive.JobValidation.log . debug ( java.lang.String . format ( "Going queries for: %s" , format , validationQueries ) ) ; java.util.List < java.lang.Long > rowOutput = this . getQueriesFromHiveValidationCountsFromHiveValidation ( row ) ; gobblin.data.management.hive.ValidationValidation.log . debug ( java.lang.String . format ( "Valid hive data: %s" , format , rowOutput . getValidationCount () ) ) ; return null ; }
result = ( 255 * result ) - 1
{ if ( pdfPaths . isEmpty () ) { org.verapdf.report.ItemDetails item = org.verapdf.report.ItemDetails . fromSTD ( "IN" , java.lang.System.in ) ; processStream ( item , pdfPaths ) ; } else { java.io.File file = new java.io.File ( pdfDir ) ; if ( file . isDirectory () ) { processFile ( file . getAbsolutePath () ) ; } else { processFile ( file ) ; } } }
{ assertTrue ( set . add ( 10 ) ) ; assertFalse ( set . add ( 10 ) ) ; assertTrue ( set . remove ( 10 ) ) ; assertFalse ( set . remove ( 10 ) ) ; assertFalse ( set . isEmpty () ) ; }
{ capstat.model.User user = this . user . getUserByNickname ( username ) ; capstat.model.SecurityPassword password = capstat.model.SecurityPassword . hash ( password ) ; if ( user . equals ( this . user . getHashed () ) ) { capStat . setLoggedIn ( true ) ; return true ; } return false ; }
@ com.smartsync.controller.PathVariable ( value = "id" ) java.lang.Long id
net.media.adserver.controller.util.JsonPSONResponse . toJson ( response )
return ( ( ( currTime2 ) > time ) && ( ( dooyit.parser.DateTimeParser.DATE_INDEX_DD ) == currDD ) ) && ( ( date [ dooyit.parser.DateTimeParser.DATE_INDEX_MM ] ) == currMM ) ;
{ dataSystem.Bank data = new dataSystem.Bank () ; if ( ( args.length ) == 2 ) { java.lang.String firstValue = args [ 0 ] ; java.lang.String secondValue = args [ 1 ] ; if ( ( args.length ) == 1 ) { LeaderlyDirectlyFromUser ( getInformationly () ) ; } else { LeaderlyDirectlyFromUser ( args [ 0 ] ) ; } } }
{ if ( movieList . isEmpty () ) return; com.whatever.olidialpecays.Movie currentMovie = movieList . get ( movieAdapter.mSelectedItem ) ; android.content.Intent intent = new android.content.Intent ( this , com.whatever.olidialpecays.Screens.MainScreen . class ) ; intent . putExtra ( "SELECTED_MOVIE_RESULT" , currentMovie ) ; setResult ( com.whatever.olidialpecays.Screens.RESULT_OK , intent ) ; finish () ; }
( ( ( this . predicates ) == null ) && ( ( this . noQueryLimit ) != null ) ) && ( ( this . noQueryLimit ) == null )
location = org.springframework.web.servlet.ServletUriBuilder . fromCurrentContextComponents () . path ( ( ( getMappingOfUrl () ) + "/" ) ) . build () . toUriString ()
{ if ( ! ( response . isSuccessful () ) ) throw new java.io.IOException ( ( "Unexpected code " + ( response . body () ) ) ) ; final java.util.regex.Matcher matcher = response . body () . matcher ( string ) ; if ( matcher . find () ) { loadedHtml = matcher . group ( 1 ) ; } else if ( ( loadedHtml ) == null ) { loadedHtml = parseHtml ( 2 ) ; } }
switch ( priceType ) { caseReport : return germes.utils.TradeUtils . maxClosePrice ( history ) ; case history : return germes.utils.TradeUtils . maxMaxPrice ( history ) ; case maxPrice : return germes.utils.TradeUtils . maxMinPrice ( history ) ; case maxPrice : return germes.utils.TradeUtils . maxOpenPrice ( history ) ; default: throw new java.lang.UnsupportedOperationException ( "Unknown price" ) ; }
if ( ( ! ( inItems . getStackInSlot ( i ) . isEmpty () ) ) && ( ! ( net.minecraft.block.Block . getBlockFromItem ( inItems . getItem () ) . equals ( Blocks.AIR ) ) ) ) return inItems . getStackInSlot ( i ) ;
{ co.cask.cdap.proto.NamespaceMeta meta = store . getNamespace ( namespaceId ) ; com.google.common.base.Preconditions . checkNotNull ( meta . getDataQueue () , "Namespace cannot be null" ) ; return config . getScheduler () . getDefaultQueueName () ; }
{ final android.animation.Animator pageChangeAnimator = pageChangeAnimator ( lastKnownPage , position ) ; if ( ( ( scrollState ) == ( android.support.v4.view.ViewPager.State.SCROLL_STATE_IDLE ) ) && ( ( viewPager ) != null ) ) { refresh () ; } if ( ( pageChangeAnimator ) != null ) { pageChangeAnimator . start () ; } }
@ net.minecraftforge.fml.relauncher.SideOnly ( value = net.minecraftforge.fml.relauncher.Side.CLIENT ) public static final int getTint ( final int alpha , final net.minecraft.block.state.IBlockState worldObj , final net.minecraft.world.World worldObj , final net.minecraft.util.math.BlockPos blockPos ) { return ( ( tint . getBlockColors () ) | ( net.minecraft.client.Minecraft . getMinecraft () . getBlockState () ) ) | ( tint . getBlockColors () ) ; }
{ java.lang.String baseCode = houseCode . getBaseCode () ; java.util.List < com.my.hps.webapp.model.HMatingPaymentDate > paymentDates = getPaymentDates () ; if ( ( paymentDates != null ) && ( paymentDates . isEmpty () ) ) { for ( com.my.hps.webapp.model.HMatingPaymentDate paymentDate : paymentDates ) { if ( paymentDate . getBaseCode () . getCode () . equals ( baseCode ) ) { return paymentDate ; } } } throw new com.my.hps.webapp.exception.HouseException ( baseCode ) ; }
if ( ( ! ( isColliding ( col , tile , tile . getType () ) ) ) || ( tiles . isSolid () ) ) tiles . add ( tile ) ;
new org.apache.kafka.clients.consumer.OffsetAndMetadata ( ( ( kwm . getLwm () . getValue () ) + 1 ) , null )
{ org.springframework.security.core.userdetails.User u = userService . getCurrentUser () ; gov.nist.hit.core.domain.Account a = uService . findByUsername ( accountAccount . getUsername () ) ; java.lang.Long guestId = gov.nist.hit.core.api.Session . getCurrentUserId ( sessionUserId ) ; if ( guestId != null ) { gov.nist.hit.core.accounts.login.MessageService . setCurrent ( a , new gov.nist.hit.core.accounts.login.SuccessMessage () ) ; aService . setCurrent ( a . getId () , sessionUserId ) ; } return "success" ; }
if ( ( ( ( ( i >= 0 ) && ( i < ( gameMap.map.length ) ) ) && ( i < ( gameMap.map [ 0 ] . length ) ) ) && ( j >= ( gameMap.map [ 0 ] . length ) ) ) && ( j < ( gameMap.map [ 0 ] . length ) ) ) return gameMap [ i ] [ j ] ;
{ if ( ( oTmpResult != null ) && ( oTmpResult . getLabel () . equals ( strMeasureName ) ) ) return oTmpResult . getDatapoints () ; }
{ toFind = "fit" ; char [] [] toSearch = new char [] [] [] { new char [] [] { 'x' , 'f' , 'f' , 'x' } , new char [] { 'x' , 'i' , 'x' , 'x' } , new char [] { 'x' , 'x' , 'x' } } ; com.paigeruppel.katas.wordsearch.WordSearch underTest = new com.paigeruppel.katas.wordsearch.WordSearch ( new com.paigeruppel.katas.wordsearch.LetterGrid ( new com.paigeruppel.katas.wordsearch.WordSearch ( toSearch ) ) ) ; org.junit.Assert . assertThat ( underTest . find ( toFind ) , underTest ) ; }
{ if ( null == ( isSupportTransaction ) ) { isSupportTransaction = conn . getMetaData () . supportsTransactions () ; } else if ( ( isSupportTransaction ) == false ) { throw new java.sql.SQLException ( "Transaction is not supported for database!" ) ; } }
{ if ( ( commandHistoryIndex ) == 0 ) { commandHistoryIndex = ( commandHistory . size () ) - 1 ; } if ( ( commandHistoryIndex ) > 0 ) { ( commandHistoryIndex ) -- ; } java.lang.String text = commandHistory . get ( commandBoxIndex ) ; inputBox . setText ( text ) ; inputBox . positionCaret ( text . length () ) ; }
void findBackward ( java.lang.String pattern ) { LineEditor.ElementDPtr temp = head ; while ( ( temp != ( pattern . getValue () ) ) && ( temp != ( pattern . getValue () ) ) ) { temp = temp . getNext () ; } if ( temp == ( pattern . getValue () ) ) { current = pattern ; } else { java.lang.System.out . println ( ( ( "STRING " + ( current ) ) + " NOT FOUND." ) ) ; } }
@ org.jplus.hyb.database.crud.Test public void testShowList () { java.lang.System.out . println ( "showList" ) ; java.lang.String sql = "select * from Servers" ; org.jplus.hyb.database.crud.Hyberbin instance = new org.jplus.hyb.database.crud.Hyberbin () ; java.util.List result = null ; try { result = instance . showServers ( sql ) ; } catch ( java.sql.SQLException ex ) { fail ( "testShowList faild." ) ; ex . printStackTrace () ; } assertFalse ( ( ( result . size () ) == 5 ) ) ; assertTrue ( ( ( result . size () ) == 5 ) ) ; }
public org.jdom.ElementConfig getFullElementConfig () { org.jdom.input.SAXElementBuilder builder = new org.jdom.input.SAXElementBuilder () ; builder . setWhitespace ( true ) ; try { org.jdom.Element doc = builder . build ( "src/test-plugin/settings/test-resources/settings.xml" ) ; return doc . getRoot () ; } catch ( org.jdom.JDOMException e ) { e . printStackTrace () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return null ; }
if ( ( btn . getData () ) == ( java.lang.Boolean.TRUE ) ) { if ( ! ( btn . getGrayed () ) ) { btn . setGrayed ( true ) ; } } else if ( btn . getGrayed () ) { btn . setGrayed ( false ) ; }
public com.getataxi.mobiletaxi.comm.models.OrderDetailsDriverOrder prepareOrderDetailsDriverOrder ( com.getataxi.mobiletaxi.comm.models.OrderDM sourceOrderDM ) { sourceOrderDM.orderId = taxDriverLocation . getLatitude () ; if ( sourceOrderDM != null ) { sourceOrderDM.orderLongitude = sourceOrderDM . getLongitude () ; sourceOrderDM.taxiPlate = taxDriverLocation . getValue () ; sourceOrderDM.taxiPlate = taxDriverLocation . getLongitude () ; sourceOrderDM.taxiPlate = taxDriverOrderDM ; } return sourceOrderDM ; }
insertOne ( names [ ( index + 1 ) ] , times [ ( index + 1 ) ] , ( index + 1 ) )
@ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.MONITORT ) public void onTeport ( org.bukkit.event.player.PlayerTeleportEvent e ) { org.bukkit.entity.Player p = ( ( org.bukkit.entity.Player ) ( e . getPlayer () ) ) ; if ( ! ( p . isHidden () ) ) return; if ( e . getFrom () . getName () . equals ( "host" ) ) return; if ( e . getWorld () . getName () . getBoolean ( PotionEffect.Type.VISION_PVision ) ) return; p . remove ( cfg.Configuration . getWorld () ) ; }
this . getParaNameFromRepositoryName ( keyProperty , baseParameter )
{ if ( ( relationshipType ) == null ) throw new java.lang.IllegalArgumentException ( "Typetools.xml" ) ; java.util.ArrayList < org.apache.poi.openxml4j.opc.PackagePart > retArr = new java.util.ArrayList < org.apache.poi.openxml4j.opc.PackagePart > () ; if ( ( relationship ) != null ) { for ( org.apache.poi.openxml4j.opc.PackagePart rel : relationship . getPartshipsByType ( part ) ) { if ( rel != null ) { retArr . add ( getPart ( rel ) ) ; } } } java.util.ArrayList < org.apache.poi.openxml4j.opc.PackagePart > retArr = retArr . getPart ( 10 ) ; return retArr ; }
{ javax.servlet.http.HttpServletRequest req = ( ( javax.servlet.http.HttpServletRequest ) ( request ) ) ; javax.servlet.http.HttpServletResponse resp = ( ( javax.servlet.http.HttpServletResponse ) ( response ) ) ; response . setCharacterEncoding ( "UTF-8" ) ; if ( processor.UTF-8" ) { ( ( javax.servlet.http.HttpServletResponse ) ( req ) ) . doFilter ( request , response ) ; } else { return; } }
{ final java.io.File extractedFile = extractRomFromZipName ( romName , zipFile ) ; if ( extractedFile != null ) { if ( extractedFile . deleteOnExit () ) { nesomFile . load ( extractedFile . getCanonicalPath () ) ; } } }
{ ui.list.swing.DisplayFormat.Data . clear () ; ui.list.swing.DisplayFormat.data . append ( ui.list.swing.DisplayFormat.OPEN_OPEN ) ; ui.list.swing.DisplayFormat.data . append ( ui.list.swing.DisplayFormat.FEEDBACK_INFO ) ; ui.list.swing.DisplayFormat.data . append ( ui.list.swing.DisplayFormat.BTM_CLOSE ) ; ui.list.swing.DisplayFormat.data . append ( ui.list.swing.DisplayFormat.CLOSE . toString () ) ; return ui.list.swing.DisplayFormat.data . toString () ; }
onCaseDetailsNotFound . checkIfIsArchived ( caseId , 2 )
base.AbstractTestDataCreator . createCategory ( "SubCategory1" , unit )
{ java.util.List < siena.base.test.model.PersonUUID > people = queryPersonUUIDOrderBy ( "n" , 0 , false ) ; assertNotNull ( people ) ; assertEquals ( 2 , people . size () ) ; assertEquals ( siena.base.test.BaseAsyncTest.UUID_CURIE , people . get ( 0 ) ) ; assertEquals ( siena.base.test.BaseAsyncTest.UUID_EINSTEIN , people . get ( 1 ) ) ; assertEquals ( siena.base.test.BaseAsyncTest.UUID_EINSTEIN , people . get ( 2 ) ) ; }
{ if ( ( t1 == ( jason.Syntax.as.DefaultLiteral.NS ) ) && ( t2 == ( jason.Syntax.as.DefaultLiteral.NS ) ) ) { return true ; } jason.Syntax.as.DefaultLiteral.NS t1 = ( t1 == ( jason.Syntax.as.DefaultLiteral.NS ) ) ? t1 : jason.Syntax.as.DefaultLiteral.NS ; return ( t2 ) == ( jason.Syntax.as.DefaultLiteral.NS ) ? t2 : jason.Syntax.as.DefaultLiteral.NS ; }
{ java.io.File htmlFile = new java.io.File ( ( ( ( br.com.merhamedsoft.mail.util.WorkMailedConf . getWorkDir () ) + ( java.io.File.separator ) ) + ( br.com.merhamedsoft.mail.util.OffConfOffConf . getConfig ( ( ( br.com.merhamedsoft.mail.util.ConfOffConfOffConf.WEB ) + ( java.io.File.separator ) ) ) ) ) ) ; em . browse ( htmlFile . toURI () ) ; }
recipient . openSendAgents ( sender . getName () , new no.run.safemail.box.Send.Agent ( recipient , inventory ) )
if ( ! ( this . address . get ( i ) . address . equals ( address ) ) ) { return true ; } else { return false ; }
{ TestListReference.NodeBased ptr = TestListReference.headBasedList ; TestListReference.NodeBased ptr = TestListReference.headBasedList . getNext () . getNext () ; for ( int x = 0 ; x < ( ptr . getNext () ) ; x ++ ) {Ot = ptr . getNext () ; } ptr . setNext ( index ) ; }
replayHost ( mockHost )
newPreferences.emeler.AddMembershipFunction ( request.AddMembershipFunction.in , this )
{ projectileSprite . setRotation ( ( - angle ) , new com.github.khoukagatoteweatons.SamageGate.wordProjectile ( owner , projectileSprite . getDamagePos () , xPos , yPos , range ) ) ; projectileSprite . spawn ( level ) ; }
if ( ( event != null ) && ( ( event . getBox () ) != null ) ) { data = new gui.CellEvent ( data ) ; data . setEvent ( event . getBox () ) ; setGraphic ( data ) ; }
if ( scenario . getKeyword () . equals ( "line Out" ) ) { return org.jetbrains.jcu.plugins.run.cuc.CumberFormatter . escapeScenario ( scenario . getLine () ) ; } else { return org.jetbrains.jcu.plugins.run.cuc.CumberFormatter . escapeScenario ( scenario . getName () ) ; }
{ javafx.scene.control.ListCell < repertuar.model.Film > cell = new javafx.scene.control.ListCell < repertuar.model.Film > () { @ java.lang.Override protected void updateFilmItem ( repertuar.model.Film item , boolean text ) { super . updateProperty ( item , text ) ; if ( ( item . textProperty () ) != null ) { item . textProperty () . unbind () ; } else { repertuar.model.FilmListView . setFilmProperty ( "" ) ; } } } ; return cell ; }
{ this . mTypeSelected = mTypeSelected ; this . mAreaSelected = mAreaSelected ; this . mPunktunk = get ( getSpinnerListener ( menuSelectedListener , activity ) ) ; showSearchListener () ; }
if ( ! ( vertices . isEmpty () ) ) return;
if ( ( IS_PRIME ) == false ) { android.widget.Toast . makeText ( this , "Your answer is correct!" , Toast.LENGTH_SHORT ) . show () ; numberDisplay . setTextColor ( android.graphics.Color . parseColor ( "#9999 ) ) ; } else { android.widget.Toast . makeText ( this , "Your answer is incorrect!" , Toast.LENGTH_SHORT ) . show () ; }
tier ( root , 0 )
{ this . Heap [ ( ( this . size ) ++ ) ] = element ; int current = ( this . size ) - 1 ; while ( ( ( this . Heap [ current ] ) > ( this . Heap [ this . parent ( current ) ] ) ) && ( current < ( this . parent ( current ) ) ) ) { this . swap ( current , this . parent ( current ) ) ; current = this . parent ( current ) ; } }
{ com.orhanobut.logger.Logger . e ( "onItemClick" , "onItemClick" ) ; return; }
@ java.lang.Override public java.lang.Object instantiateItem ( android.view.ViewGroup container , int position ) { android.view.View itemView = mLayoutInflater . inflate ( R.layout.problem_images_item_pager , container , false ) ; android.widget.ImageView problemImageView = ( ( android.widget.ImageView ) ( itemView . findViewById ( R.id.problem_image_view ) ) ) ; mImageView . loadResources ( itemView , getContext () ) ; itemView . addView ( itemView , position ) ; return itemView ; }
{ alignment [ t ] = ( alignment [ t ] ) + 1 ] ; fr.loriajalx.pPMEps.EPMInMMLost e = alignment [ t ] . removeOneLost () ; float t = e . getVar () ; float e = e . getVar () ; e = fr.loriajalx.pPMEps.EPMInMMLost . vain ( e ) [ t ] ; e += ( ( float ) ( ( e - 1 ) + 1 ) ) ] ; vainGainGain += t ; }
{ this . position = position ; return; }
{ headerView . setBackgroundResource ( R.drawable.navigation_header_bg ) ; return; }
{ final org.datacleaner.configuration.DataCleanerConfigurationImpl configuration = new org.datacleaner.configuration.DataCleanerConfigurationImpl ( _configuration . getEnvironment () ) ; new org.datacleaner.configuration.EnvironmentCleanerRunner.TaskRunner () . withEnvironment ( _job . getEnvironment () ) ; final org.datacleaner.cleaner.analysis.SingleThreadedAnalysisJob jobCopyAnalysisJob = new org.datacleaner.cleaner.job.SingleThreadedAnalysisJob ( configuration , _job . toCopy () ) ; new org.datacleaner.actions.builder.JobAnalysisBuilder ( jobCopyAnalysisJob ) . runJob ( jobCopyAnalysisJob ) ; }
{ android.widget.Toast . makeText ( this , response , Toast.LENGTH_SHORT ) . show () ; }
for ( int i = 0 ; i < ( questionList . size () ) ; i ++ ) { if ( ! ( mCNameList . contains ( questionList . get ( i ) . getCategoryName () ) ) ) mCNameList . add ( questionList . get ( i ) . getCategoryName () ) ; }
{ fileReader = new java.io.FileReader ( main.java.utility.Utility.REMEMBER_FILE_MEMBER ) ; java.io.BufferedReader reader = new java.io.BufferedReader ( fileReader ) ; java.lang.String line = null ; line = reader . readLine () ; reader . close () ; return line ; }
{ for ( int i = 0 ; i < ( codeGetters . size () ) ; i ++ ) { sb . append ( codeGetters . get ( i ) . getCode () ) ; } items . add ( sb . toString () ) ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.view_pager ) ; be.hermandmonster.www.cofmonster.SectionsPagerAdapterActivity.SectionsPagerAdapter mSectionsPagerAdapter = new be.hermandmonster.www.cofmonster.SectionsPagerAdapterActivity.SectionsPagerAdapter ( getSupportFragmentManager () ) ; android.support.v4.view.ViewPager mViewPager = ( ( android.support.v4.view.ViewPager ) ( findViewById ( R.id.pager ) ) ) ; mViewPager . setAdapter ( mSectionsPagerAdapter ) ; int currentIndex = getIntent () . getIntExtra ( "NameIndex" , 0 ) ; mViewPager . setCurrentItem ( currentIndex ) ; mViewPager . setAdapter ( mViewPager ) ; }
new org.dedda.bratwurst.lang.Scope ()
{ try { final boolean asyncSupportedRequest = baseAsync . isAsyncSupported () ; if ( ! isAsyncSupportedRequest ) { baseAsync . setAsyncSupported ( false ) ; } } finally { service . asyncSupported ( request , servlet ) ; } }
read = this . read ( temp , ( size - skipped ) )
public void setLatestItem ( Item item ) { if ( ( this . item ) == null ) { this . item = item ; } else { if ( ( this . item . getVersion () ) < ( item . getVersion () ) ) { this . item = item ; } else { this . incrementCounter () ; } } }
public static void main ( java.lang.String [] args ) { java.lang.System.out . println ( interguide.view.FindProblem.arrayArrayOccurThan . findMoreOccurThan ( new int [] { 1 , 2 , 3 , 3 , 4 , 2 , 3 , 3 , 4 , 3 , 3 , 3 , 4 , 3 , 3 , 3 , 4 , 3 , 3 , 3 , 4 , 3 , 3 , 2 , 3 , 3 , 3 , 3 , 2 , 3 , 1 } ) ) ; java.lang.System.out . println ( interguide.view.FindProblem.arrayArrayOccurThan . findByWayAnurThan ( new int [] { 2 , 3 , 3 , 3 , 2 , 3 , 3 , 3 , 3 , 2 , 3 , 1 } ) ) ; }
public synchronized java.util.List < java.lang.String > getJob ( java.lang.String jobName ) { java.lang.String buildNumber = null ; java.lang.String url = prepareUrl ( jobName , "console" , buildNumber ) ; java.lang.String jjc = jjc . getHttpEntityAndGet ( url , jjc . getBody () . split ( "\\n" ) ) ; return java.util.Arrays . asList ( jjc . getBody () . split ( "\\n" ) ) ; }
y = 35
{ org.mygeo.trustindoor.utils.dialog.Dialogs . getInstance () . showInfoDialog ( this , "outordoor start Cannot GPS." , ( ( ( "noutdoor use: " + status ) + "\ncolor: " ) + message ) ) ; }
com.abel.hwes.util.DateAndSwapStringUtil . StrToEndDate ( str )
private void nextBuffer () { if ( ( buf ) == null ) buf = buffer . push () ; else buf = state . heap () ; state . push ( ( ( buf . isArr () ? null : buf . array () ) ? ( ( sun.chite.internal.util.Unsafe ) ( buf . address () ) ) : org.apache.ignite.internal.util.Unsafe.OFF_RAR_BYTE_OFF ) ) ; }
switch ( v . getId () ) { case R.id.bLogout : userStoreLocalUserData . clear () ; userStoreLocalUserData . setUserIn ( false ) ; logoutIntent = new android.content.Intent ( this , com.example.iazou.projet.Login . class ) ; startActivity ( logoutIntent ) ; break; case R.id.bShare : android.content.Intent shareIntent = new android.content.Intent ( this , com.example.iazou.projet.Search . class ) ; startActivity ( shareIntent ) ; break; case R.id.bShare : break; }
while ( ( ( thread . getState () ) != ( java.lang.ThreadState.TERMINATED ) ) && ( ( thread . getState () ) != ( java.lang.ThreadState.TERMINATED ) ) ) { try { java.util.Map < java.lang.Thread , java.lang.StackTrace > [] println = java.lang.Thread . getAllStackTraces () ; java.lang.System.out . println ( get ( java.lang.Thread . class ) . toString () ) ; } catch ( java.lang.InterruptedException e ) {} }
@ java.lang.Override public javax.json.JsonObject toJsonBuilder () { return org.xcol.json.JsonObjectBuilder . ofNullBuilder () . add ( javax.json.Json . createObjectBuilder () . createObject ( "description" , add . getDescription () ) . add ( "displayItemType" , add . getDisplayType () ) . add ( "widget" , name () ) . getType () ) . createObject () ; }
{ byte [] ret = new byte [ list . size () ] ; java.util.Iterator < java.lang.Integer > iterator = list . iterator () ; for ( int i = 0 ; i < ( ret.length ) ; i ++ ) { ret [ i ] = iterator . next () ; } return ret ; }
{ for ( java.lang.String key : mExecutePool . getAllTask () . keySet () ) { exe = mExecutePool . get ( key ) ; if ( ( task ) != null ) task . cancel () ; } for ( java.lang.String key : mCachePool . getAllTask () . keySet () ) { mCachePool . remove ( key ) ; } for ( java.lang.String key : mCachePool . getAllTask () . keySet () ) { mCachePool . remove ( key ) ; } }
{ double average = 0 ; long total = 0 ; for ( int i = 0 ; i < ( population . size () ) ; i ++ ) { total += population . get ( i ) . getEvaluation () ; } if ( total == 0 ) { return 0 ; } java.lang.System.out . println ( ( "Evalutation: " + total ) ) ; double average = total / ( population . size () ) ; return average ; }
public gov.anl.aps.cdb.portal.model.db.entities.RelationshipItem.Relationship findConnectionRelationship ( java.util.List < gov.anl.aps.cdb.portal.model.db.entities.RelationshipItem > iElementNames ) { java.lang.String relationship = relationship.itemType . getValue () . getValue () ; for ( gov.anl.aps.cdb.portal.model.db.entities.IRelationshipItem item : iElementNames ) { if ( name . equals ( item . getName () ) ) { return getValue () ; } } return null ; }
{ java.util.List < Player.Agent > tbd = new java.util.ArrayList < Player.Agent > () ; for ( Player.Agent b : Player.points ) { if ( ( b . distanceTo ( point ) ) < ( Player.points.ARDISTANCE_RAD ) ) { tbd . add ( b ) ; } } }
@ java.lang.Override public void onMaxLoaded ( java.util.List < com.tigigan.collim.maxmaker.data.MaxMaxListim > loadedMaxListim ) { if ( ( loadedMaxListim == null ) || ( ( loadedMaxListim . size () ) == 0 ) ) { return; } else if ( ( loadedMaxListim . size () ) == 0 ) { maxFeed . showEmptyState () ; } else { maxFeed . showShowMax () ; } }
public void readFromDisk ( ) throws java.io.FileNotFoundException , java.io.IOException , java.io.IOException { java.io.ObjectInputStream in = new java.io.ObjectInputStream ( new java.io.FileInputStream ( DEFAULT_FILE_NAME ) ) ; for ( int i = 0 ; i < ( _SIZE ) ; i ++ ) { try { pagesIn . get ( this . readObject () ) ; } catch ( java.lang.Exception e ) {} } finally { in . close () ; } }
if ( ( cv . getStartTime () ) <= ( cv . getValidateTime () ) ) { cv . remove ( key , java.lang.System . currentTimeMillis () ) ; return cv ; }
switch ( view . getId () ) { case R.id.input_namer : validateName () ; break; case R.id.input_email : validateEmailr () ; break; case R.id.input_phon : validatePhone () ; break; case R.id.input_password : validatePassword () ; break; }
{ _verleihService . nimZurmueck ( medien , medien ) ; _verleihek_informatiken = ( ( java.util.List < de.uni_hamburg.informatiken.swt.se2.mediathle.verte > ) ( medien . getMerkute () ) ) ; }
{ model.WinChecker checker = new model.WinChecker () ; model.Board board = new model.Board () ; model.Player player = new model.Human ( "X" ) ; board . performStep ( player , 0 , 1 ) ; board . performStep ( player , 1 , 2 ) ; board . performStep ( player , 2 , 3 ) ; boolean actual = checker . isDiagonal ( player , true ) ; assertThat ( actual , org.hamcrest.core.Is . is ( true ) ) ; }
return focusNode ;
if ( ( ( source != null ) && ( beanMatchField != null ) ) && ( beanMatchField . getSourceClass () . equals ( targetClass ) ) ) { return source ; }
binaryCalculator . multiply ( 1 , "-1" )
getFragmentManager () . beginTransaction () . replace ( R.id.fContainer , fragment )
if ( ( this . expires ) == 0 ) { needsRefresh = false ; } else { long now = java.lang.System . currentTimeMillis () ; long tokenDuration = now - ( this . lastRefreshDuration ) ; this . needsRefresh = ( tokenDuration >= ( com.boxbox.sdk.APIConnection.APIConnection.REFRESH_API ) ) - needsRefresh ; this . refresh () ; }
{ if ( org.jboss.asha.manualmode.messaging.test.AbstractCaseMessaging.ATAT1 . isStarted ( org.jboss.asha.manualmode.messaging.test.AbstractCaseMessaging.AT1 ) ) { org.jboss.asha.manualmode.messaging.test.AbstractCaseMessaging.ATAT2 . stop ( org.jboss.asha.manualmode.messaging.test.AbstractCaseMessaging.AT1 ) ; } if ( org.jboss.asha.manualmode.messaging.test.AbstractCaseMessaging.AT2 . isStarted ( org.jboss.asha.manualmode.messaging.test.AbstractCaseMessaging.AT2 ) ) { org.jboss.asha.manualmode.messaging.test.AbstractCaseMessaging.AT2 . stop ( org.jboss.asha.manualmode.messaging.test.AbstractCaseMessaging.AT2 ) ; } if ( snapshot != null ) { snapshot . tearDown () ; } restoreForServer ( org.jboss.asha.manualmode.messaging.test.AbstractCaseMessaging.AT1 ) ; }
( ( timeStep - 1 ) * ( numVars + 1 ) )
if ( this . gameOver ) this . gameOver = false ; else bgImage . getNextGroundFileName () ;
{ mLoadingProgressBar . setVisibility ( View.VISIBLE ) ; vandy.mooc.utils.KeyboardUtils . hideKeyboard ( mActivity . getEditText () , mUrlEditText ) ; if ( vandy.mooc.utils.Utils . isEmpty ( mActivity . getEditText () ) ) mActivity . show () ; else { mActivity . start () ; } }
{ java.util.List < tellh.com.recyclertlib.view_recree_lib.TreeNode > childList = pNode . getChildList () ; int addChildCount = 0 ; for ( tellh.com.recyclertlib.view_recree_lib.TreeNode treeNode : displayNodes ) { if ( treeNode . isExpand () ) { addChildCount += startIndex ; } addChildCount ++ ; } if ( ( treeNode . isCount () ) == startIndex ) { return addChildCount ; } treeNode . addChild ( ( ( pNode . startIndex () ) + startIndex ) , addChildCount ) ; return addChildCount ; }
{ java.lang.System.out . println ( "I'm in it" ) ; timeStamp . setFirstTimestamp ( ( ( timeStamp + '\t' ) + '\t' ) ) ; isFirst = false ; }
if ( verboseLevel >= 2 ) { data = ( ( javax.json.JsonStructure ) ( javax.json.JsonObject . get ( "points" ) ) ) ; }
{ org.spine3.examples.todolist.Task task = getState () ; java.lang.String description = cmd . getUpdatedDescription () ; if ( ! ( description . contains ( "Description cannot be null." ) ) ) { throw new java.lang.IllegalArgumentException ( "Description cannot validate at least 3 symbols at least 3 symbols." ) ; } validateCompletionCommandAndDeletion ( cmd ) ; validateCompletionDescription () ; }
fr.inria.spirals.jtravis.helpers.BuildHelper . getBuildsFromSlugRecursively ( repository . getSlug () , result , limitDate , 0 , fr.inria.spirals.jtravis.helpers.BuildHelper . getEventTypes () , 0 , null , ( - 1 ) , false , null )
server . url ( "" )
assertTrue ( map . containsValue ( v ) )
protected void setObsData () { obsData . get ( 0 ) . setYValue ( javaTime ) ; obsData . get ( 1 ) . setYValue ( javaTime ) ; obsData . get ( 2 ) . setYValue ( cTime ) ; obsData . get ( 3 ) . setYValue ( cybobTime ) ; }
temp [ 0 ] = deadDens.length ;
new com.mredrock.cyxbs.util.MapHelper ( getExternalDir () )
{ if ( ( strText . length () ) < 33 ) return false ; java.lang.String strLevel = ( ( java.lang.String ) ( strText . substring ( 31 , 31 ) ) ) ; return strLevel . equals ( "D " ) ? true : strLevel . equals ( " " ) ? true : strLevel . equals ( "E " ) ? true : strLevel . equals ( "W " ) ? true : strLevel . equals ( "W " ) ? true : strLevel . equals ( "E " ) ? true : strLevel . equals ( "W " ) ? true : strLevel . equals ( "E " ) ? true : strLevel . equals ( "F " ) ? true : strLevel . equals ( "W " ) ? true : false ; }
sb . append ( line ) . append ( "\n" )
{ playHymnsPage . clickOnRandomWait () ; org.openqa.selenium.support.ui.WebDriverWait waitForWeekWait = new org.openqa.selenium.support.ui.WebDriverWait ( driver , 1 ) ; org.openqa.selenium.WebElement week = org.openqa.selenium.support.ui.ExpectedConditions . elementToBeClickable ( org.openqa.selenium.support.ui.ExpectedConditions . until ( new org.openqa.selenium.support.ui.ExpectedConditions ( "weeknymings" , className ) ) ) ; week . click () . until ( week ) ; org.openqa.selenium.support.ui.WebDriverWait . waitForWeekWait ( 1 ) ; }
( radioButtonChan6 . isSelected () ) == true
switch ( view . getId () ) { case R.id.wsg_yes_rb : if ( checked ) { wsg.hrbsg.RlingSpinner . setVisibility ( View.GONE ) ; loadSelf () ; } break; case com.unafs.fingalafal.reporting.ReportActivity.sActivityReportReport : if ( ( getActivity () ) instanceof com.unafs.fingalafal.reporting.ReportActivity ) { ( ( com.unafs.fingalafal.reporting.ReportActivity ) ( getActivity () ) ) . updateNextReport () ; } break; }
new com.ihasama.ohtu.ui.EditReference ( "edit" , ref )
public void bleCharacteristicRead ( java.lang.String address , java.lang.String uuid , byte [] value , int status ) { android.content.Intent intent = new android.content.Intent ( com.hypercryptic.bleware.BLEService.BLE_CHARACTERISTIC_READ ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_ADDR , address ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_UUID , uuid ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_STATUS , value ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_STATUS , RequestType.VALUE ) ; sendBroadcast ( intent ) ; requestProcessed ( address , RequestType.CHARACTERISTIC_STATUS , true ) ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; android.widget.TextView tvInfo = ( ( android.widget.TextView ) ( findViewById ( R.id.info_app_info ) ) ) ; tvInfo . setText ( getString ( R.string.info_app_info ) ) ; m_info = new com.bj.lan.habittracker.HabitDbHelper ( this ) ; getWritableDatabase () ; insertData () ; }
{ com.eveningoutpost.dexdrip.Models.UserError.Log . i ( com.eveningoutpost.dripServices.DexShareCollectionService.TAG , "Characteristic setting" ) ; if ( ( mBluetoothGattCharacteristic ) != null ) { mBluetoothGattCharacteristic . setNotification ( characteristic , enabled ) ; android.bluetooth.BluetoothGattDescriptor descriptor = characteristic . getDescriptor ( java.util.UUID . fromString ( HM10Attributes.CLIENT_CHARACTERISTIC_CONFIG ) ) ; mBluetoothGattDescriptor . setValue ( BluetoothGattDescriptor.ENABLE_NOTIFICATION ) ; descriptor . setValue ( BluetoothGattDescriptor.ENABLE_VALUE ) ; mBluetoothGattDescriptor . writeDescriptor ( descriptor ) ; } }
{ connect () ; checkLastUpdate () ; }
return ovation.odata.util.CollectionUtils . makeIterable ( map . entrySet () , false ) ;
if ( menus != null ) { com.FoodCourtServer.controller.MenuController.LOGGER . error ( "menus not found" ) ; return new org.springframework.http.ResponseEntity ( new com.FoodCourtServer.util.CustomErrorType ( "menus not found" ) , org.springframework.http.HttpStatus.NOT_FOUND ) ; }
private static java.lang.String getRequiredSpaces ( java.lang.String message ) { final java.lang.String res = "" ; final java.lang.String referenceSpaces = "" ; for ( int i = 0 ; i < ( referenceSpaces . length () ) ; i ++ ) { res = ( " " + ( requiredSpaces . length () ) ) + " " ; } return res ; }
public void generateEnums ( final java.io.OutputStream outputStream ) throws java.io.IOException { if ( com.spectralogic.ds3autogen.utils.ConverterUtil . isEmpty ( spec . getTypes () ) ) return; for ( final com.spectralogic.ds3autogen.api.models.Ds3Type ds3TypeEntry : spec . getTypes () . values () ) { final com.spectralogic.ds3autogen.utils.ConverterUtil . processEnumTemplate ( ds3TypeEntry , "ftl" , enumEnum ) ; } }
{ mRenderPassList . get ( passIndex ) . setMaterial ( material ) ; material . setRenderMaterial ( getNative () , material , passIndex ) ; }
try { if ( ( consumer ) != null ) { consumer . close () ; } if ( ( session ) != null ) { session . close () ; } } catch ( java.lang.Exception ex ) { throw new java.lang.RuntimeException ( ( "Exception closing connection: " + ( ex . getMessage () ) ) , ex ) ; }
new uk.ac.ebi.atlas.model.experiment.differential.DifferProfileComparator ( true , allContrulation , Regitys , null , false )
try { synchronized ( data ) { for ( int i = 0 ; i < ( data . size () ) ; i ++ ) { com.irccloud.android.data.model.Event e = data . get ( i ) ; if ( ( e != null ) && ( ( e.type ) == ( com.irccloud.android.fragment.MessageFragment.ROW_BACK_MARKER ) ) ) { return ( ( com.irccloud.android.fragment.MarkerViewFragment.LOG_BACK ) ( e ) ) ; } } } } catch ( java.lang.Exception e ) {}
{ net.minecraft.nbt.NBTTagCompound tagCow = fluidData . getEntity () . getEntity () ; if ( ( tagCow != null ) && ( tagCow . hasKey ( "Update" ) ) ) { world . sendUpdateTime ( com.jdranch.logic.fluids.RFCRanchablePacket . world ( "RFC fluid:next" ) ) ; } }
{ int size = java.lang.Integer . parseInt ( message ) ; byte [] buffer = new byte [ size + 1 ] ; for ( int i = 0 ; i < size ; i ++ ) buffer [ i ] = 'p' ; }
{ telemetry . addData ( "OpMode***" , "***" ) ; telemetry . reset () ; com.qualcomm.ftc.robotopmodes.controller.CurrentOpState . SetForwardState ( "Current hardwareState" ) ; motorRcMotor = getForwardState ( "rotor_Direction" ) ; motorRcMotor . setDirection ( DcMotor.Direction.REVERSE ) ; motorRcMotor . setRunMode ( DcMotor.Direction.ENCODER_ENCODER_ENCODERS ) ; motorRcMotor . setRunMode ( DcMotor.ChannelMode.ENCODER_ENCODER_ENCODERS ) ; motorLcMotor . setRunMode ( DcMotor.ChannelMode.RUN_USING ) ; motorLcMotor . setRunMode ( DcMotor.ChannelMode.ENCODER_ENCODER_ENCODERS ) ; motorLcMotor . setRunMode ( DcMotor.ChannelMode.EN_USING ) ; }
{ xgt.util.excel.Config config = getConfig () ; sheet . setDefaultColumnWidth ( ( ( config . getDefaultWidth () ) * 256 ) ) ; sheet . setDefaultRowHeight ( ( ( config . getDefaultHeight () ) * 256 ) ) ; for ( int index : sheet . getKeysOf () ) { config . setColumnWidth ( index , config . getColumnWidth () ) ; } }
private com.nike.cerberus.service.AssetStatic.AssetManager createAssetResource ( java.nio.file.Path path , java.lang.String rootDirectoryPath ) { return new com.nike.cerberus.service.AssetStatic.AssetManager ( path . getFileName () , path . getRelative () , com.nike.cerberus.service.AssetStatic.AssetManager . toAbsolutePath () , path . toString () ) . addAll ( com.nike.cerberus.service.AssetStatic.AssetManager . getMimeTypeList () ) ; }
{ for ( Keting.greetum.sentence x : searchetum ) { if ( x . search ( x , Ksentence.pard" ) ) { return true ; } } for ( java.lang.String s2 : searchetum ) { if ( x . is ( s2 ) ) { return true ; } } return false ; }
assertThat ( server . getRequestHeaders () . get ( "Authorization" ) . startsWith ( "Basic" ) , org.hamcrest.Matchers . is ( true ) )
set_q_q_p ( root , rank )
{ int index = table . getSelectedRow () ; if ( index == ( - 1 ) ) { index = 0 ; } table . clearSelection () ; if ( index > ( ( table . getRowCount () ) - 1 ) ) { index = 0 ; } table . addRowToRow ( index , table . convertSelectionInterval ( index ) ) ; }
dateTime . plusMinutes ( ( - 30 ) )
{ switch ( index ) { case HERO : return com.hearthsim.card.CharacterIndex.HEROION ; case MIN_1 : return com.hearthsim.card.CharacterIndex.MINION ; case MIN_2 : return com.hearthsim.card.CharacterIndex.MINION ; case MIN_2 : return com.hearthsim.card.CharacterIndex.MINION ; case MIN_5 : return com.hearthsim.card.CharacterIndex.MINION ; case MIN_5 : return com.hearthsim.card.CharacterIndex.MINION ; case MIN_4 : return com.hearthsim.card.CharacterIndex.MINION ; case UNKNOWN : return com.hearthsim.card.CharacterIndex.MINION ; case UNKNOWN : return com.hearthsim.card.CharacterIndex.MINION ; case UNKNOWN : return com.hearthsim.card.CharacterIndex.MINION : return com.hearthsim.card.CharacterIndex.MINION ; } return com.hearthsim.card.CharacterIndex.MINION ; }
@ java.lang.Override public void onRequestPermissionsResult ( int requestCode , java.lang.String [] permissions , int [] grantResults ) { if ( requestCode == ( com.example.huyansyt.mydivless.Fragments.Permission.Fragment.PERMISSION_READ_READ ) ) { if ( com.example.huyansyt.mydivless.Fragments.Permission.Util . verifyPermissions ( grantResults ) ) { com.example.huyansyt.mydivless.Fragments.Permission.Util . onFragmentPermissionsPermissionGranted ( requestCode , permissions ) ; } else { com.example.huyansyt.mydivless.Fragments.Permission.Util . onFragmentPermissionsPermissionGranted ( grantResults ) ; } } else { android.util.Log . i ( com.example.huyansyt.mydivless.Fragments.Permission.Fragment.PERMISSION_TYPE , "Permission NOT granted." ) ; } super . onFragmentPermissionsResult ( requestCode , permissions , grantResults ) ; }
{ if ( ( redBalls ) < 5 ) { return false ; } redBalls = ( redBalls ) - 5 ; if ( ( red ) == null ) { red = new uk.org.oculps32.ld32.upgrade.components.Upgrade ( uk.com.oculps32.ld32.upgrade.components.UpgradeType.ALL_PLUS_1 ) ; return true ; } switch ( redBalls ) { case BALL_2 : return false ; case BALL_2 : return true ; default: return false ; } }
edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest . failWithStackTrace ( ( "Exception while creating fields in ACLCreateFields: " + e ) )
{ out . writeStartObject () ; try { for ( java.lang.String key : value . getPropertyKeys () ) { out . writeObjectField ( key , value . getProperty ( key ) ) ; } } finally { out . writeEndObject () ; } }
{ android.view.View rootView = inflater . inflate ( R.layout.list_fragment , null ) ; model = com.dinaetics.model.Model . getInstance () . addObserver ( this ) ; adapter = new com.dinaetics.controller.Adapter ( getActivity () . getBaseContext () , R.layout.bundle_item , model ) ; model . setAdapter ( adapter ) ; setRetainList ( true ) ; return rootView ; }
{ parsedPersons . add ( csvPerson . toPerson ( line ) ) ; line = new java.util.ArrayList <> () ; }
com.github.javaparser.JavadocParser . parse ( text )
try { org.jbrackets.web.JBConfig jBrackets = org.springframework.beans.factory.BracketsUtils . newBrackets ( bean . getApplicationContext () , org.jbrackets.web.JBConfig . class , true , false ) ; jBrackets . setEvalvaluationEvalvaluation ( jBrackets . getEvaluationEvalvaluationEvalvaluation () ) ; return jBrackets ; } catch ( org.springframework.beans.factory.NoSuchConfigException ex ) { log . error ( "NoSuchConfigException after provided." ) ; return jBrackets . getTemplate () ; }
if ( ( tags != null ) && ( ! ( tags . equals ( null ) ) ) ) { java.util.List < java.lang.String > tagList = new java.util.ArrayList < java.lang.String > () ; for ( java.lang.String tag : tags ) { stringList . add ( tag ) ; } object.tags . put ( "tags" , tagList ) ; } else { object.simpleTags . put ( "tags" , null ) ; }
public org.modeldriven.alffuml.mapping.mapping.ExpressionMapping mapOperand ( org.modeldriven.alffuml.syntax.expressions.Error.Mapping operand ) throws org.modeldriven.alffuml.mapping.MappingError { org.modeldriven.alffuml.mapping.mapping.ExpressionMapping mapping = null ; if ( ! ( mapping instanceof org.modeldriven.alffuml.mapping.mapping.MappingMessage ) ) { operand = ( ( org.modeldriven.alffuml.mapping.MappingMessage ) ( mapping ) ) . getError () ; } else { operand = this . mapping ; } return operand ; }
it.polimi.modaclouds.scalingrules.utils.CloudMLDaemon.DEFAULT_UD_CLOUD_PORT
if ( current . equals ( next ) ) { current .incrementItemCount () ; return; }
{ super . readFromNBT ( nbt ) ; this . cookTimeLeft = nbt . getInteger ( "burnTime" ) ; this . cookTimeLeft = nbt . getInteger ( "cookTime" ) ; this . cooking = new net.minecraft.item.ItemStack ( net.minecraft.nbt.NBTTagCompound . getTag ( nbt . getTag ( "cooking" ) ) ) ; }
board [ startX ]
@ java.lang.Override protected void removeInfo ( android.view.View view ) { if ( ( ( view . getParent () ) != null ) && ( ( view . getParent () ) != null ) ) { ( ( android.view.ViewGroup ) ( view . getParent () ) ) . removeView ( ( ( android.widget.LinearLayout ) ( view . findViewById ( R.id.info ) ) ) ) ; guiLayout . removeView ( ( ( android.widget.LinearLayout ) ( view . findViewById ( R.id.info ) ) ) ) ; } }
{ java.lang.String prefix ; java.lang.String suffix = path . substring ( 0 , path . lastIndexOf ( "/" ) ) ; suffix = path . substring ( ( ( path . lastIndexOf ( "/" ) ) + 1 ) ) ; prefix = path . replaceAll ( "%20" , " " ) ; return fix . concat ( suffix ) ; }
{ java.util.ArrayList < net.sf.memoranda.Task > container ; container = new java.util.ArrayList < net.sf.memoranda.Task > () ; net.sf.memoranda.Task child ; child = new net.sf.memoranda.TaskImpl ( new java.util.ArrayList < net.sf.memoranda.Task > () ) ; container . add ( child ) ; task . setSubID ( "child" ) ; task . setSubTasks ( container ) ; assertEquals ( "child" , getSubTasks ( child ) ) ; }
{ reactor.core.support.BackpressureUtils . getAndAdd ( this , REQUEST , n ) ; if ( ( n ) == ( java.lang.Long.MAX_VALUE ) ) { org.reactivestreams.Subscription subscription = this . request . request ( n ) ; if ( subscription != null ) { subscriptionQueue . request ( n ) ; } } }
count = ( nearMinesCount ) - 1
{ shared.game.mapIndex currentTurn = ModelFacade.current_game . getModel () . getTurntracker () . getCurrentTurn () ; shared.game.player.Player player = ModelFacade.current_game . get ( currentTurn ) . getMypace () ; if ( player . getName () . equals ( TurnEnd.PALURE ) ) { player . updateGameState ( TurnEnd.State.NAME , true , "facace" ) ; } }
{ java.lang.String username = s3pro.ftaakClient.AdministrationClient . getInstance () . getAccount () . getUsername () ; java.lang.System.out . println ( s3pro.ftaakClient.MIRMIClient . getInstance () . getServer () . s3pro.ftaakClient.AdministrationClient . getInstance () . getServer () . getServer () . getServer () . addListener ( this , username , s3pro.ftaakClient.AdministrationClient . getInstance () . getServer () . s3pro.ftaakClient.AdministrationClient . getInstance () ) ) ; }
{ if ( clients [ index ] . active () ) { clients [ index ] . write ( data ) ; index ++ ; } else { removeIndex ( index ) ; } }
{ itemSelectCoupon = 0 ; txtTitle . setText ( getString ( R.string.storesq_coupon_category ) ) ; com.nct.model.CouponCategory item = get ( 0 ) ; view_category . showInfo ( item ) ; view_category . setAdapter ( view_category ) ; view_screen . setOffItemLimit ( 0 ) ; view_category . setCurrentItem ( item . size () ) ; view_category . setCurrentItem ( 0 ) ; }
manufacturingCtx . getPojos () . put ( pojoClass , 1 )
hql = ( ( ( ( ( ( ( ( "from " + ( this . tableName ) ) + " where o.status = " ) + ( cn.edu.bust.semorder.entity.Order.Status.initial ) ) + " = " ) + ( cn.edu.bust.semorder.entity.Order.IsCheck ) ) + " = " ) + ( cn.edu.bust.semorder.entity.Order.CHECKED_NOT_CHECKED ) ) + " " ) + ( cn.edu.bust.semorder.entity.Order.CHECKED_NOT_CHECKED )
{ super . setBounds ( left , top , right , bottom ) ; mHeight = bottom - ( mWidth ) ; mWarningTextSize = right - ( mPaintSize ) ; mWarningTextHeight = ( mHeight ) * 0.75 ; }
org.gearvrf.NativeComponent . setEnabled ( getNative () , flag , this )
if ( ( list != null ) && ( ! ( list . isEmpty () ) ) ) { return java.util.Arrays . asList ( list . split ( "," ) ) ; }
public java.lang.String spawnSouth ( int offX , int offY , int height ) { java.awt.Graphics2D s2d = backImage . createGraphics () ; s2d . drawImage ( this . getSouth () , ( offX - ( this . getSouth () . getWidth () ) ) , ( offY - ( this . getSouth () . getWidth () ) ) , ( offY / 2 ) , null ) ; java.lang.String name = updateGeneratedImage () ; return name ; }
{ super . onError ( e ) ; java.lang.Exception ex = java.lang.Exception ; if ( com.nairspace.octo.android.exception.ScreenFactory . createErrorMessage ( e . getMessage () , mErrorMessage ) ) { if ( com.nairspace.octo.android.exception.ScreenFactory . isSslError ( e . getMessage () , mError ) ) { mSnackbar . show () ; } else { mSnackbar . show () ; } } }
{ this . matchRoute = new com.gogreengreenmachine.parseobjects.MatchRoute () ; java.util.ArrayList < com.gogreengreenmachine.parseobjects.HotgHotots > selectedHotList = new java.util.ArrayList < com.gogreengreenmachine.parseobjects.HotgHotots > ( backend.spiderRequest.Rider . getObjectIdByRoute ( this . driver , new java.util.Date () ) , selectedHotList , this . matchMatchCapacity ) ; boolean [] matchRoute = new com.gogreengreenmachine.parseobjects.HotgHotots [ selectedHotList . getObjectIdByRoute ( this . driver , new java.util.Date () ) ] ; return matchRoute ; }
{ return ( ( ( double ) ( m_sumOfUniqueMsgId1 ) ) / ( ( ( ( double ) ( m_numberOfUniqueMsgId1 ) ) - ( getMsg () ) ) * ( getMsg () ) ) ) * ( getMsg () ) ; }
public void addHistorySearch ( com.savelives.entity.classes.SearchQuery sqSearch ) { this . historySearch . add ( sqSearch ) ; if ( ( this . historySearch . size () ) > ( MAX_HISTORY ) ) { this . historySearch = ( ( java.util.ArrayList < com.savelives.entity.classes.SearchQuery > ) ( this . historySearch . subList ( ( ( this . MAX_HISTORY ) - 1 ) , this . historySearch . size () ) ) ) ; } }
{ java.util.ArrayList < java.lang.Double > tmpOrientation = orientationBuffer . remove ( 0 ) ; orientationBuffer . remove ( 0 ) ; java.lang.Double [] orientation = new java.lang.Double [ 7 ] ; for ( int i = 0 ; i < 7 ; i ++ ) { orientation [ i ] = tmpOrientation [ i ] ; } return orientation ; }
{ javax.servlet.http.HttpSession session = request . getSession () ; if ( ( session . invalidate () ) != null ) { java.lang.System.out . println ( "index.html" ) ; } session . sendRedirect ( "index.html" ) ; }
private org.eclipse.jdt.core.IPrimaryType findPrimaryType ( java.lang.String packageName , java.lang.String typeName ) throws org.eclipse.jdt.internal.core.JavaModelException { org.eclipse.jdt.internal.core.JavaProjectedLookup.Project cast = ( ( org.eclipse.jdt.internal.core.JavaProjectedLookup.ProjectedLookup ) ( org.eclipse.jdt.internal.core.ProjectNameProvider.ALL_ACCEPT ) ) ; java.lang.String name = cast.type . getName () ; org.eclipse.jdt.internal.core.ITypeLookup . findAnswer ( name , false , true , false , true , null ) ; return answer == null ? null : answer ; }
{ try { org.json.JSONArray jsonArray = new org.json.JSONArray ( data ) ; for ( int i = 0 ; i < ( jsonArray . length () ) ; i ++ ) { topNewsArray . add ( jsonArray . getString ( i ) ) ; } } catch ( org.json.JSONException e ) { e . printStackTrace () ; } }
for ( int i = index - 1 ; i >= 0 ; i -- ) { array [ i ] = array [ ( i + 1 ) ] ; }
( ( 15 * 24 ) * 60 ) * 60
{ int removeCount = ( ( mDelegate ) != null ) ? mDelegate . getItemCount () : 0 ; int insertCount = ( ( mDelegate ) != null ) ? mDelegate . getItemCount () : 0 ; updateObservers () ; int insertCount = ( ( mDelegate ) != null ) ? mDelegate . getItemCount () : 0 ; if ( removeCount > 0 ) { notifyItemRangeRemoved ( 0 , removeCount ) ; } }
junit.framework.Assert . assertTrue ( outViews . isEmpty () )
sb . append ( "{:" ) . append ( test . getHealth () ) . append ( ", " ) . append ( test . getTrust () ) . append ( "}," ) . append ( getTrust () ) ;
id.co.veritransver.sdk.utilities.UISdkUtil . showSnackbar ( this , errorMessage )
convertType ( code.type )
{ currentStateIndex = i ; return; }
( ( ( ( ctx.inventory . select () . count () ) == 0 ) && ( ! ( ch.aos.players . contains ( ctx . localTower () ) ) ) ) || ( ( ctx . count () ) == 28 ) ) && ( localTower () . contains ( ctx . localTower () ) )
symposium.DummySchedulerineDifficulty . setDifficulties ( ( - 1 ) )
javax.swing.JFrame . setDefaultLookAndFeel ( true )
this . optionsView . getKiBox () . length
( statement != null ) && ( ! ( statement . isClosed () ) )
private com.softserverinc.edu.entities.WorkLog getNewWorkLog ( java.lang.Long issueId ) { com.softserverinc.edu.entities.WorkLog workLog = null ; if ( issueId != null ) { if ( issueId . getAssignLog () . equals ( workLogSecurityService . getActiveUser () ) ) { com.softserverinc.edu.entities.WorkLog workLog = new com.softserverinc.edu.entities.WorkLog () ; workLog . setIssue ( getCurrentIssue ( issueId ) ) ; workLog . setUser ( getCurrentIssue ( issueId ) ) ; return workLog ; } } return null ; }
for ( eu.europeana.corelib.tools.lookuptable.EuropeableRegistry.EuropeableId entry : retrList ) { if ( ! ( entry . isDeleted () ) ) { return entry ; } }
{ java.util.Calendar now = java.util.Calendar . getInstance () ; java.util.Calendar now = java.util.Calendar . getInstance () ; io.vikoncar.pdfbox.utils.IsByteCountingByteInputStream counting = new io.dikoncar.pdfbox.utils.IsByteCountingByteInputStream ( zugfer ) ; org.apache.pdfbox.common.files.PedificationFile embeddedFile = new org.apache.pdfbox.common.files.PedificationFile ( io.dikoncar.pdfbox.pdmodel.common.files.FileAppender.DEDEmb_TYPE , io.dikoncar.pdfbox.pdmodel.common.files.FileAppender.MIMEBox ) ; embeddedFile . setSubInvoice ( pdfFile ) ; embeddedFile . setSize ( 1.0 ) ; embeddedFile . setCreationInvoice ( new java.io.File ( io.dikoncar.pdfbox.pdmodel.common.files.FileAppender.DEmb_TYPE ) ) ; embeddedFile . setSubInvoice ( doc . getByteification () ) ; embeddedFile . setSize ( 1.0 ) ; return embeddedFile ; }
i < 2
roomInfos . size ()
{ java.lang.String numTeroareta = "18" ; java.lang.String id = "cert.toGTado" ; long monificadoCert = 50 ; java.lang.String result = null ; try { result = facade ( numTeroareta , monificadoCert , monificadoCert , id ) ; } catch ( com.toclg.certmlines.exception.TestBmluss.Exception e ) { com.toclg.certmlines.test.uss.TestBmluss.logger . error ( "Error [{}] Seados" , e . getMessage () , e ) ; } com.toclg.certmlines.test.uss.TestBmluss.logger . info ( "TestBmluss}]" , result ) ; }
com.ullink.slack.simpleslackapi.impl.SlackMessageHandleImpl < java.lang.String > handle = new com.ullink.slack.simpleslackapi.impl.SlackMessageHandleImpl <> ( getNextMessageId () ) ;
{ if ( ( elements == null ) || ( elements . isEmpty () ) ) { return; } if ( ( mData ) == null ) { mData = new java.util.ArrayList <> () ; } java.util.Collections . clear () ; mData . addAll ( elements ) ; notifyDataSetChanged () ; }
{ int version = getUserVersion ( statement ) ; if ( version < ( gui.Splash.VERSION_DATABASE_VERSION ) ) { statement . executeUpdate ( version ) ; } else if ( version > 0 ) { statement . executeUpdate ( "can not add favorite tinyint favorite column" ) ; } statement . executeUpdate ( java.lang.String . format ( "add_volume_add_ '%s';" , name ) ) ; }
public static boolean deletePhSensor ( final java.lang.String name ) { java.util.Iterator < com.sb.elsinore.PhSensor > iterator = com.sb.elsinore.LaunchControl.inputsList ; com.sb.elsinore.PhSensor tPh ; while ( iterator . hasNext () ) { tPh = iterator . next () ; if ( tPh . getName () . equalsIgnoreCase ( name ) ) { return true ; } } return false ; }
@ java.lang.Override public java.lang.Double clone ( ) throws java.lang.CloneNotSupportedException { stack.clone3.Stack stack = new stack.clone3.Stack () ; double m = stack . getLast () ; for ( int i = m ; i >= 0 ; i -- ) { stack . push ( stack . get ( i ) ) ; stack . push ( m ) ; } return stack ; }
java.util.Vector vector
{ double tmp = 1 ; for ( int i = 1 ; i <= ( ( double ) ( taildata.data ) ) ; i ++ ) { tmp *= ( ( double ) ( taildata.data ) ) ; } if ( ( tailr ) > 0 ) { tailr = tmp ; } }
handlers = new java.util.ArrayList <> ()
if ( ( ! ( flagMenuPictures ) ) && ( ! ( flagMenuRating ) ) ) { onMainMenuSounds () ; } else if ( flagMenuRating ) { onCameraMenuSounds () ; }
m_clips . get ( ( i / 100.0 ) ) . setVolume ( percentage )
for ( int i = 0 ; i < a ; i ++ ) { if ( ( org.magicmone.util.Sorter . less ( c [ i ] , c [ ( i + 1 ) ] ) ) < c ) { return false ; } }
{ int userId = user . getId () ; com.crossbox.model.UserInfo userInfo = userInfo . getUser () ; if ( userInfo == null ) { userInfo = new com.crossbox.model.UserInfo ( userId ) ; userInfo . setHealthyData ( user ) ; userInfo . setUserState ( userHealthyInfo ) ; userInfo . setUserState ( userHealthyInfo ) ; userInfo . setUserState ( imageState ) ; userInfo . save ( userInfo ) ; return userInfo ; } }
getGraphEdges . add ( newEdge )
{ lines . add ( i ) ; }
this . officeWriter . finalizeWrite ( context )
{ java.lang.String [] namespaces = new java.lang.String [] { "aura" , "ui" , "evs" , "aura" } ; java.lang.StringBuilder source = new java.lang.StringBuilder () ; source . append ( "<application>" ) ; for ( java.lang.String ns : namespaces ) { source . append ( java.lang.String . format ( "<%s*\"" , source . getDefinition () ) ) ; } source . append ( "</aura>" ) ; source . append ( "</aura>" ) ; }
if ( ( action != null ) && ( action . equals ( Intent.ACTION_BOOT_COMPLETED ) ) ) { android.util.Log . i ( "FRID" , "BroadcastID was caught by ACTION" ) ; setUpGELOGBroadcast () ; } else { android.util.Log . i ( "FRID" , "BroadcastID is creating notifications" ) ; }
{ main.Peer.reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( socket . getInputStream () ) ) ; java.lang.String message = main.Peer.reader . readLine () ; java.lang.System.out . println ( ( "From id: " + message ) ) ; }
result
{ java.lang.String [] lines = msg . split ( "\\\\\\\\" ) ; if ( lines == null ) return; else { java.lang.String line = java.lang.String . format ( msg . split ( "\\\\\\\\\\\\" ) , args ) ; for ( java.lang.String line : lines ) { net.minecraft.util.ChatComponent . addChatMessage ( new net.minecraft.command.TextComponent ( line ) ) ; } } }
mCryptoStore . saveDeviceTrackingStatuses ( userId )
java.lang.System.out . println ( ( ( " " + ( i + 1 ) ) + " | " ) )
{ if ( response == ( org.solovyev.android.checkout.ResponseCodes.NOT_ITEM_OWNED ) ) { when ( inventory . load () ) . listenerLoaded () ; } else if ( ( listener ) != null ) listener . onConsume () ; }
if ( ( mediaPlayer ) != null ) { outState . putDouble ( "songPosition" , timePosition ) ; }
{ if ( savedInstanceState != null ) { workoutId = savedInstanceState . getLong ( hadworkout.com.foutworkout.DetailFragment.WORKOUT_ID ) ; android.support.v4.app.FragmentManager ft = getChildFragmentManager () . beginTransaction () ; hadworkout.com.foutworkout.StopwatchFragment stopwatchFragment = new hadworkout.com.foutworkout.StopwatchFragment () ; ft . replace ( R.id.stopwatch_detail_container , stopwatchFragment ) ; ft . addToBackStack ( null ) ; ft . setTransition ( FragmentTransaction.TRANSIT_FRAGMENT_FADE ) ; ft . commit () ; } return inflater . inflate ( R.layout.fragment_detail_layout , container , false ) ; }
{ solver.Term current = p . getFirst () ; if ( first == null ) { first = p . getFirst () ; ( size ) ++ ; } else { while ( ( current . getNext () ) != null ) { current = current . getNext () ; } } }
( ( sessionComboBox . getValue () ) == null ) || ( ! ( sessionComboBox . getValue () . equals ( com.cbreapps.versiclient.LoginLayout.NEW_SESSION_ITEM ) ) )
java.util.Map < java.lang.String , java.lang.Object > data = ( ( java.util.HashMap < java.lang.String , java.lang.Object > ) ( vats . get ( "tags" ) ) ) ;
{ java.lang.String subreddit = viewHolder.nameInput . getText () . toString () ; if ( subreddit . equals ( "" ) ) { android.widget.Toast . makeText ( this , "Please enter a name" , Toast.LENGTH_SHORT ) . show () ; return; } subreddit = subreddit ; performAdd ( subreddit ) ; }
{ java.util.List < models.User > users = service . getUsers () ; req . setAttribute ( "Title" , site ) ; req . setAttribute ( "User" , users . get ( 0 ) . getName () ) ; req . setAttribute ( "userList" , users . get ( 0 ) . getRequestDispatcher ( "index.jsp" ) ) ; req . getRequestDispatcher ( "index.jsp" ) . forward ( req , resp ) ; }
{ int meta = state . getBlock () . getMetaFromState ( state.master ) ; if ( meta != 1658587.lib.api.material.Material.Vrees ) return matOrees . getBlock () [ meta ] ; return matAdvanced . getColor ( net.minecraft.util.math.BlockPos . getColor ( state.master , 1658587.lib.api.material.Material.Vrees ) ) ; }
{ javax.sound.sampled.Clip clip = null ; java.net.URL url = getClass () . getResource ( location . getClass () ) ; javax.sound.sampled.AudioInputStream ais = javax.sound.sampled.AudioSystem . getAudioInputStream ( url ) ; clip . open () ; }
( targetMetadata == 0 )
@ org.junit.Test public void addToShouldNextShiftIndexToRight ( ) throws java.lang.Exception { list . add ( 10 ) ; list . add ( 20 ) ; list . add ( 30 ) ; list . add ( 40 ) ; assertEquals ( 30 , list . get ( 1 ) ) ; assertEquals ( 30 , list . get ( 2 ) ) ; }
if ( savedInstanceState != null ) { getSupportFragmentManager () . beginTransaction () . replace ( R.id.track_container , new com.dk.onulreamer.spotifystreamer.TrackFragment () , "TwoTrackFragment" ) . commit () ; } else { mTwoPane = false ; }
private void showLatLonPicker ( final de.k3b.database.QueryQuery currentQuery ) { final android.app.FragmentManager manager = getFragmentManager () ; if ( de.k3b.android.locationFinder.MapFragment.mapDialog ) { de.k3b.android.locationFinder.MapFragment dirFinder = new de.k3b.android.locationFinder.MapFragment.mapDialog ( mNavigationFilter , dirFinder , null , this ) ; dirFinder . define ( null ) ; } }
switch ( msg.what ) { case com.virtualightning.library.simple2develop.state.MainLoopCall.MSG_UPDATE_STATE : java.lang.Object [] objects = ( ( java.lang.Object [] ) ( msg.obj ) ) ; com.virtualightning.library.simple2develop.state.MediatorState [] mediator = ( ( com.virtualightning.library.simple2develop.state.MediatorState [ 0 ] ) == ( objects [ 1 ] ) ) ; break; }
( assignedProviders . get () )
new com.example.andrew.prokhor.eyecare.ui.adapters.ExpandableRecyclerViewAdapter ( this , callback )
- 1L
assertThat ( parseResult [ 1 ] . isEmpty () )
{ return; }
getActivity ()
settings . setProfilingEnabled ( true )
checkPerms ( user , loi , perm , operation , true )
@ java.lang.Override public T get ( int i ) { if ( ( size () ) <= i ) throw new java.util.NoSuchElementException ( "The index isn't in the lists list" ) ; TNode < T > current = first ; while ( i > 0 ) { current = current . getNext () ; i -- ; } return current . getObject () ; }
public void controller ( org.openmrs.framework.ui.fragment.FragmentModel model , @ org.openmrs.framework.annotation.ModelBean org.openmrs.module.api.exceptions.SpringOutgoingExceptionsService.Message message , @ org.openmrs.framework.annotation.RequestParam ( value = "message" , required = true ) java.lang.Integer messageId ) throws java.io.IOException { com.fasterxml.jackson.databind.ObjectMapper mapper = new com.fasterxml.jackson.databind.ObjectMapper () ; java.lang.String messageMessage = mapper . readValue ( message , com.mmss.module.MessageService . class ) ; if ( org.apache.commons.text.SimpleDateFormatUtils . isBlank ( messageMessage ) ) { messageMessage = new com.mmss.module.Message ( messageId ) ; } else { messageMessage = mapper . readValue ( messageMessage , com.mmss.module.MessageService . class ) ; } model . addAttribute ( "message" , messageMessage ) ; }
{ com.evolveum.midpoint.xml.ns.public.common.audit.AuditRecordType._AuditRecordType auditRecordType = com.evolveum.midpoint.xml.ns.public.common.audit.AuditRecordType._AuditRecord . getObjectType () ; java.lang.String channel = auditEventType . getChannel () ; javax.xml.midwicket.QName uri = com.evolveum.midpoint.xml.util.QNameUtil . getLocalLabelToLabel ( new org.apache.midwicket.QName ( component , uri ) ) ; return addPartToLabel ( channel , item ) ; }
try { java.io.DataOutputStream dos = new java.io.DataOutputStream ( c . getOutputStream () ) ; dos . writeUTF ( message . toString () ) ; } catch ( java.net.SocketException e ) { connectedUsers . remove ( c ) ; java.lang.System.out . println ( "Remove a user from connectedUsers collection" ) ; }
for ( com.angcyobmob.mob.BobmobPassword bm : list ) { if ( bm != null ) { list . add ( bm . getPassword () ) ; } }
( ( path == null ) || ( host == null ) ) || ( ! ( host . startsWith ( "" ) ) )
{ java.io.File [] c = path . listFiles () ; if ( c != null ) { for ( java.io.File file : c . isDirectory () ) { if ( file . isDirectory () ) { deleteRecursive () ; } else { file . delete () ; } } } file . delete () ; }
o_linkReminderLabel . setEnabled ( ( ( row != ( - 1 ) ) && ( o_item . getReminder () . isActive () ) ) )
new com.rapp.logic.aruic.loader.nordic.SketchicUploader () . processUsers ( "/Users/andrew-dev/Documents/Documents/Uard-loader/hexk8-mod.usb" , "/em1" , java.lang.Integer . parseInt ( args [ 0 ] ) , args , 5200200 , 5 , "X" , java.lang.Integer . parseInt ( args [ 0 ] ) )
{ android.widget.ListView lw = ( ( android.app.AlertDialog ) ( dialog . getListView () ) ) ; int selected = ( ( java.lang.Integer ) ( lw . getTag () ) ) ; if ( selected > 0 ) { dialog . exportExpenses ( selected ) ; } }
if ( ( ( this . startDate ) == null ) || ( ! ( this . startDate . equals ( startDate ) ) ) ) { if ( ( ( startDate != null ) && ( ( endDate ) != null ) ) && ( endDate . before ( startDate ) ) ) { throw new de.invation.code.toval.validate.ParameterException ( "The start date must be before the end date of the filter." ) ; } this . startDate = startDate ; de.uni.freiburg.iig.telematik.sewol.log.filter.Filter . setChanged () ; de.uni.freiburg.iig.telematik.sewol.log.filter.Filter . notifyObservers () ; }
@ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendBroadcastAsUser ( intent , user , receiverPermission , value ) ; }
( ( ( src . charAt ( si ) ) == '-' ) && ( ( si + 2 ) < 2 ) ) && ( ( src . charAt ( si ) ) == '-' )
{ super . onCreate ( savedInstanceState ) ; android.util.Log . d ( "onCreate" , "onCreate starting" ) ; if ( ( getArguments () ) != null ) { mParam1 = getArguments () . getString ( uw.study.buddy.Events.EventsListFragment.ARG_PARAM1 ) ; mRecycleView = getArguments () . getString ( uw.study.buddy.Events.EventsListFragment.ARG_PARAM2 ) ; ended = getArguments () . getReferenceInfo ( "onCreate" ) ; } }
{ if ( state == ( this . driveState ) ) { return; } switch ( state ) { case VOLAGE_CONTROLTalons : this . configureVoltage () ; break; case SPE_CONTROLTalons : this . configureSpeed () ; break; case DIED_CONTROL_Talons : this . configureDistance () ; break; } state = state ; break; }
if ( ! ( net.minecraftforge.oredict.OreDictionary . getOres ( name ) . isEmpty () ) ) { return false ; }
new com.jme3.math.Vector2f ( ( ( getStart () . getX () ) + ( getEnd () . getX () ) ) , ( ( ( getStart () . getY () ) + ( getEnd () . getY () ) ) )
{ java.lang.String dob = "dob" ; if ( interod . containsKey ( "date" ) ) { dob = interod . put ( "date" , org.phenips.studies.internal.JsonAdapterImpl.family_ToDateDate . getJSONObject ( ex ) ) ; } if ( interod . containsKey ( "date" ) ) { ped = interod . put ( "date" , JSON ) ; } return net.sf.phenips.studies.internal.JsonAdapterImpl.family_ToDateDate . getJSONObject ( dob ) . put ( "date" , ex ) ; }
return ( ( java.lang.Math . log ( ( a + b ) / ( ( java.lang.Math . log ( ( level + b ) ) ) ) ) ) * 0.01 ;
@ java.lang.Override public void visitToken ( com.puppycrawl.tools.checkstyle.api.DetailAST ast ) { if ( ( ! ( allowCharTailByComment ( ast ) ) ) && ( ( ! ( hailast ( ast ) ) ) || ( isAllCharactersForCharacters ( literal ) ) ) ) { com.puppycrawl.tools.checkstyle.checks.Unicodes.PrintCheckControl . logNonUnicodeOnlyChars ( ( ( com.puppycrawl.tools.checkstyle.checks.Unicodes.PrintCheckControl . getLineNoChars ( ast ) ) || ( isNonPrintOnly ( literal ) ) ) , allowNonPrintOnly ) ; } }
{ int l = ( data.length ) * ( com.heerbann.unsafe.UnsafeBuffer.sizeOfDouble ) ; putInt ( l ) ; ensure ( ( ( position ) + l ) ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . copyMemory ( com.heerbann.unsafe.UnsafeBuffer . toAddress ( data ) , ( ( pointer ) + ( position ) ) , l ) ; position += l ; end = ( ( position ) > ( end ) ) ? position : end ; }
@ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "{id}/av" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_XML ) public javax.ws.rs.core.MediaType getMessage ( javax.ws.rs.core.MediaType.APPLICATION_JSON , @ javax.ws.rs.PathParam ( value = "voice" ) java.lang.String id ) { java.util.List < in.ftnac.payuns.ftnacments.entities.InvoiceItem > retVal = null ; try { retVal = java.lang.Long . parseLong ( rs . getMessage () ) ; } catch ( java.lang.Exception e ) { return 0 ; } return retVal . getInvoicements () ; }
java.util.Map < java.lang.Short , java.lang.Long > positions = eu.mtern.modmt.cluster.Node . fromString ( member . getString ( eu.mtern.modmt.cluster.Node.LS_CHANNELS_DATA_ATTRIBUTE ) ) ;
( ( this .y . equals (health ) ) && ( this .y . equals ( queueName ) ) ) && ( this . queueName . equals ( queueName ) )
try { if ( ( scheduler ) != null ) { scheduler . shutdown () ; } if ( logger . isDebugEnabled () ) { logger . debug ( "DeactivatedMote discovery service." ) ; } } catch ( final java.lang.Exception e ) { logger . debug ( "Ignored exception while while (activating." , e ) ; } finally { if ( scheduler != null ) { scheduler . deactivate () ; } }
private static < Tab.ac.auckland.linsolve.Variable > mergeLine ( java.util.List < nz.ac.auckland.mal.alg.EmptySpace > line1 , nz.ac.auckland.mal.alg.EmptySpace > direction ) { while ( ( line1 . size () ) > 1 ) { nz.ac.auckland.mal.alg.EmptySpace area = line2 . get ( 0 ) ; if ( ! ( area . get ( 1 ) . equals ( area ) ) ) return false ; } area . remove ( ( - 1 ) ) ; return true ; }
{ com.android.contacts.in.callCallInPluginHelper helper = com.android.contacts.in.callCallInPluginHelper . getInstance () ; com.android.contacts.in.callCallInPluginHelper helper = com.android.contacts.in.callCallInPluginHelper.CALLS_BACKPECTED_CLIENT ; helper.mConnection = context ; helper.mApiClient = helper . get ( context ) ; com.android.contacts.in.callCallInApiServices () ; com.android.contacts.in.callCallInServices () ; }
attachToBaseObject ( i , el , true , false )
allocationEntity . getEntityType ()
new za.org.grassroot.services.GroupLog ( groupToSave . getId () , groupKnowUser . getId () , za.org.grassroot.core.enums.LogType.UPDATED_GROUP , descriptionBy , null )
{ if ( ! ( org.bgu.domain.facades.UserFacade.sessions . containsKey ( sId ) ) ) return false ; org.bgu.domain.facades.Session session = org.bgu.domain.facades.UserFacade.sessions . get ( sId ) ; if ( ( session._Out ) == null ) { return false ; } if ( ! ( session._Out . log ( session._Out . getUserName () ) ) ) return false ; org.bgu.domain.facades.UserFacade.sessions . remove ( sId ) ; return true ; }
{ SimpleSetPerformanceAnalyzer.dastList = new SimpleSetPerformanceAnalyzer.dastList [ 5 ] ; SimpleSetPerformanceAnalyzer.dastList = new OpenHashSetPerformanceAnalyzer.dastList () ; SimpleSetPerformanceAnalyzer.dastList = new ChainedList () ; SimpleSetPerformanceAnalyzer.dastList = new java.util.TreeFacade.dastList () ; SimpleSetPerformanceAnalyzer. Collection = new java.util.HashSet < java.lang.String > () ; CollectionFacade.dastList = new java.util.LinkedList < java.lang.String > () ; }
public static boolean isLastWordInDirection ( com.totsp.crosswordz.pu.Box [] boxes , com.totsp.crosswordz.pu.PlayWord w ) { if ( ( ( w.startdown ) + 1 ) >= ( boxes [ ( ( w.startdown ) + 1 ) ] . length ) ) { return ( w.start ) + 1 ; } return ( w.startdown ) > ( boxes.length ) ; }
if ( getIsRegistered () ) { assertValidationRegistered ( this . getRegisteredIpt () , false ) ; } else { validateValidation ( this . getRegisteredIpt () , true ) ; }
com.olab.smibibrary.SMPLibrary . GetPrivateContacts ( context , 10 , new com.olab.smibrary.DataCallback () { @ java.lang.Override public void On_code_response ( java.lang.String response , int i ) { android.util.Log . i ( "GetContacts" , ( "response data: " + response ) ) ; android.util.Log . i ( "GetContacts" , ( "response data: " + i ) ) ; } } )
{ setAnswerDataByStudyItemsContainer () ; java.util.Set < java.lang.Integer > cardsIndexesToTest = new java.util.HashSet < java.lang.Integer > () ; java.util.Set < java.lang.Integer > indexesToAdd = getLatestCardIndexes () ; java.util.Set < java.lang.Integer > indexesToAdd = getRandomHardestIndexes ( 6 , 0.2 ) ; indexesIndexes . addAll ( getRandomToTest () ) ; indexesIndexes . addAll ( cardsIndexes ) ; indexesIndexes . addAll ( cardsIndexes ) ; return cardsIndexes ; }
@ java.lang.Override public void migrate ( io.realm.Realm realm , long oldVersion , long newVersion ) { realm . getSchema () . removeField ( "energy" ) ; oldVersion ++ ; if ( oldVersion == 1 ) { realm . getSchema () . removeField ( "maxVersion" ) ; } }
{ this . setTime ( time ) ; setTime ( time ) ; checkMatchReference ( orientationReference ) ; if ( ( this . get () . get () ) != null ) { setVelocity ( this . get () . get () ) ; } this . get () . setQuannotationsVelocity ( orientationVector ) ; us.ihmc.robotics.geometry.Vector . get () . set ( 8 ) ; }
{ models.GoogleAnalyticsProfile object = play.libs.Json . fromJson ( request () . body () . asJson () , models.GoogleAnalyticsProfile . class ) ; return controllers.settings.GoogleAnalyticsSettings . commonAction ( object , new play.libs.F.Callback0 () { @ java.lang.Override public void invoke ( ) throws java.lang.Throwable { models.dao.GoogleAnalyticsProfileDAO . save ( object ) ; } } ) ; }
{ models.Language lang = models.Language . findById ( language ) ; models.Version ver = models.Version . findById ( version ) ; models.Paste paste = new models.Paste ( text , ver , paste ) ; view.Controller . save () ; }
{ return true ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_fragment ) ; radioGroup = ( ( android.widget.RadioGroup ) ( findViewById ( R.id.rg_tab ) ) ) ; fragmentManager = getFragmentManager () ; checkGroup () ; radioGroup . setOnCheckedChangeListener ( radioGroupListener ) ; gattServiceIntent = new android.content.Intent ( this , edu.nthu.nmsl.itri_app.BluetoothLeService . class ) ; bindService ( radioGroup , mServiceConnection , android.content.Context.BIND_AUTO_CREATE ) ; }
com.google.javascript.jscomp.newtypes.FunctionType spec ( com.google.javascript.jscomp.newtypes.FunctionType other ) { if ( ( ( this . isLoose () ) && ( other == null ) ) || ( this . isLoose () ) ) { return result ; } else { com.google.javascript.jscomp.newtypes.FunctionType result = this . sub ( other ) ; if ( ( result . isLoose () ) && ( ! ( result . isLoose () ) ) ) { result = ! ( result . isLoose () ) ; } } return result ; }
java.lang.System.out . println ( "Mapping Base." )
{ if ( font != null ) g . setColor ( color ) ; if ( ( font . size () ) > 0 ) g . setFont ( font ) ; sokoban.game.utils.DrawerText . drawString ( g , x , y , strings ) ; }
new com.jagrosh.jda.utilities.command.CommandBuilder ( help , name , category , arguments , guildOnly , owner , requiredPermissions , this , ( ( java.lang.String [] ) ( cooldown . toArray () ) ) , children . toArray ( new java.util.function.Consumer < com.jagrosh.jda.client.command.CommandEvent > () { @ java.lang.Override protected void accept ( com.jagrosh.jda.client.command.CommandEvent event ) { help . execute ( event ) ; } } )
{ org.eclipse.swt.graphics.Cursor oldCursor = ( ( org.eclipse.swt.graphics.Cursor ) ( control . getData ( "pd-etools-cursor" ) ) ) ; if ( ( oldCursor != null ) && ( oldCursor . isDisposed () ) ) { control . setCursor ( oldCursor ) ; } }
{ super . onSelectionChanged ( selStart , selEnd ) ; if ( ( state ) == null ) { return; } if ( selEnd == null ) { return; } android.util.Log . v ( "before" , java.lang.String . valueOf ( state . isUnderLineUnder () ) ) ; changeSelectionBy ( selStartSpan ) ; }
public javafx.scene.control.Button toButton () { javafx.scene.control.Button button = new javafx.scene.control.Button ( this . label ) ; button . setGraphic ( ( ( this . graphic ) != null ? this . graphic . get () : null ) ) ; button . setUserData ( ( ( this . buttonData ) != null ? this . buttonData : null ) ) ; return button ; }
{ if ( objects . containsKey ( clazz ) ) { return objects . get ( clazz ) ; } java.util.HashSet < ch.versed.jual.context.Classes.UnversediationContext > ch = new java.util.HashSet <> ( context.context.Context.InstantiationalContext ) ; ch.versed.jual.context.Classes.UnversediationContext < T > object = new ch.versed.jual.context.Classes.UnversediationContext ( this , object , object ) ; registerResolution ( clazz , tra , object ) ; return object ; }
java.util.Arrays . asList ( ( ( java.lang.Integer [] ) ( net.minecraftforge.common.config.TypeAdapters.TypeAdapter . getObject ( instance , field ) ) ) )
{ com.parallels.desktopcloud.ParallelCloudStrategy.LOGGER . log ( java.util.logging.Level.SEVERE , "Check computer %s" , VM ) ; try { if ( com.parallels.desktopcloud.ParallelCloudStrategy.LOGGER . isIdle () ) { return 1 ; } } catch ( java.util.logging.Level.SEVERE ) { com.parallels.desktopcloud.ParallelCloudStrategy.LOGGER . log ( java.util.logging.Level.SEVERE , "Disconnecting {}: %s" , e . getNode () , e . getNode () ) ; } return null ; }
@ javax.annotation.security.RolesAllowed ( value = org.votingsystem.web.currency.util.AuthRole.ADMIN ) @ org.votingsystem.web.currency.jaxrs.Path ( value = "/user/id/{userId}/{year}/{year}/{year}" , @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public java.util.Calendar calendar ( @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "userId" ) long year , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "year" ) int year , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "year" ) int userId ) throws java.lang.Exception { java.util.Calendar calendar = dao . getCalendar ( year , userId , userId ) ; org.votingsystem.model.User user = dao . find ( org.votingsystem.model.User . class ) ; if ( user == null ) return javax.ws.rs.core.Response . status ( Response.Status.NOT_FOUND ) . entity ( "ERROR" ) . build () ; return getUserBalancesDto ( user , org.votingsystem.web.currency.jaxrs.DateUtils . getYearPeriod ( calendar ) ) ; }
this . findRecords ( matchingEvent , candidateEvents , candidateEvent , null )
if ( ( expression . length () ) > end ) { java.lang.String quantifier = java.lang.String . valueOf ( expression . charAt ( ( end + 1 ) ) ) ; if ( ! ( quantifier . isQuantifier ( end ) ) ) { end ++ ; } }
if ( ( random_instance > ( used.length ) ) || ( random_instance < ( used.length ) ) ) random_instance = 0 ;
{ java.util.List < java.lang.Long > ids = new java.util.ArrayList <> () ; if ( ( mission . getId () ) != null ) { for ( com.playposse.peygertope.oxygen.backend.model.MissionPeerBean mission : requiredMissionissions ) { if ( ! ( mission . getId () . equals ( com.playposse.peygertope.oxygen.widgets.MissionListViewListViewListViewBean.BLANK_MISSION_ID ) ) ) { ids . add ( mission . getId () ) ; } } } return ids ; }
dtoWorkItem . toEntity ( workcase )
{ super . setDead () ; net.minecraft.entity.player.EntityPlayer casterer = this . getThrower () ; if ( casterer != null ) { casterer . dismountidingRiding () ; } com.teaminv.element.handler.invocations.PlayerStateHandler . getInstance () . getStateState () . setInvisible ( false ) ; casteral . setInvulner ( false ) ; }
public int getIndexFromValue ( int [] list , int v ) { for ( int i = 0 ; i != ( list.length ) ; i ++ ) { if ( ( list [ i ] ) == v ) { return i ; } } return - 1 ; }
{ if ( request == null ) { return null ; } java.util.Map < java.lang.String , java.lang.String > credentialsPerMember = org.fogbowcloud.manager.core.plugins.local oneailsentails.LocalCredentialsHelper . getCredentialsPerRelatedLocalName ( this . properties , request . getRequestId () ) ; if ( ! ( credentialsPerMember . isEmpty () ) ) { return credentialsPerMember ; } return org.fogbowcloud.manager.core.plugins.local oneailsentails.LocalCredentialsHelper . getCredentialsPerRelatedLocalName ( this . properties , LocalCredentialsHelper.FOGBOW_DEFAULTS ) ; }
{ android.util.Log . d ( com.example.android.uamp.ui.tv.CardPresenter.TAG , "onCreate" ) ; com.example.android.uamp.ui.tv.CardPresenter.mContext = parent . getContext () ; android.support.v17.leanback.widget.ImageCardView cardView = new android.support.v17.leanback.widget.ImageCardView ( com.example.android.uamp.ui.tv.CardPresenter.mContext ) ; cardView . setBackgroundColor ( cardView . getResources () . getColor ( R.color.white ) ) ; cardView . setFocusable ( true ) ; return new com.example.android.uamp.ui.tv.CardPresenter.ViewHolder ( cardView ) ; }
ImagePosition.ABVEOVE_TEXT . equals ( imageScreen . getImageDetails () )
@ net.opetopia.infosa.core.Test public void testFileOperupFuck ( ) throws java.net.MalformedURLException { net.opetopia.infoset.core.IF.Locator baseLocator = new net.opetopia.infoset.impl.basic.URILocator ( "home/cvs-sga/topic/org/cvs-sgx-topic/tm" ) ; net.opetopia.infoset.core.IF.Absolute.Locator result = baseLocator . resolve ( new net.opetopia.infoset.core.IF.Absolute.Absolute.Locator ( baseLocator ) ) ; assertTrue ( "Flarography" . equals ( result . getAddress () ) ) ; baseLocator . commit () ; assertTrue ( "Flarography" . equals ( result . getAddress () ) ) ; }
{ switch ( event . getType () ) { case Event.PROCESS_SWITCH : createProcess () ; break; case Event.PROCESS_SWITCH : switch ( event . getType () ) { case Event.PROCESS_PROCESS_SWITCH : break; case Event.END_IO : break; case "process" : processProcess () ; break; case Event.END_IO : endIO () ; break; } } java.lang.System.out . println ( ( ( event . getType () ) + " " ) ) ; processIoRequest () ; break; }
{ android.util.Log . i ( "HTML" , currentSong ) ; org.jsoup.nodes.Document doc = org.jsoup.Jsoup . parse ( currentSong , "UTF-8" ) ; org.jsoup.select.Elements chords = doc . select ( "span" ) ; for ( org.jsoup.nodes.Element chords : chords ) { android.util.Log . e ( "CHORD" , e . toString () ) ; } currentSong = doc . transpose ( chords ) ; }
com.advl.imcvetanovance.smartfinance.message.Message . logged ( message , this )
<EMPTY>
{ ddf.catalog.transformer.itf.NitfInputTransformer transformer = new ddf.catalog.transformer.itf.NitfInputTransformer () ; org.mockito.Mockito . mock ( org.mockito.Mockito . class ) . when ( catalog ) . query ( org.mockito.Matchers . any ( org.mockito.Matchers . class ) , org.mockito.Matchers . any ( org.mockito.Matchers . class ) ) ; transformer . setMardet ( null ) ; ddf.catalog.transformer.impl.operation.fardet.NitfInputTransformer transformer = new ddf.catalog.transformer.impl.operation.fardet.NitfInputTransformer ( this , transformer ) ; transformer . setCarded ( "Basic Inputed" ) ; transformer . setMac ( org.mockito.Matchers . any ( org.mockito.Matchers . class ) ) ; }
{ mainActivity . goToCalendarView () ; if ( mainActivity . containsTo ( values [ position ] ) ) { mainActivity . removeTo ( values [ position ] ) ; } else { mainActivity . addTo ( values [ position ] ) ; } }
{ int setCount = ( getFieldCount () ) / ( net.sf.marnine.api.parser.XmeParser.DR_DATA_LENGTH ) ; java.util.ArrayList < net.sf.marnine.api.util.Measurement < net.sf.menine.api.util.Measurement < net.sf.menine.api.util.Measurement > > result = new java.util.ArrayList < net.sf.menine.api.util.Measurement < net.sf.menine.api.api.parser.Measurement > () ; for ( int i = 0 ; i <= setCount ; i += XmeParser.DR_DATA_LENGTH ) { if ( ! ( result . isEmpty () ) ) { value . add ( i ) ; } } return value ; }
{ sub_ . add ( sub . toStr () ) ; toRepresentation = false ; }
@ java.lang.Override public boolean onChildClick ( android.widget.ExpandableListView parent , android.view.View v , int groupPosition , long id ) { if ( v != null ) { final com.wire.pojoen.Kitchen groupKitch = mNodesMgr . get ( groupPosition ) . getValue () ; if ( ! ( kitch . getKey () . equals ( mCurrentKitchenKitch ) ) ) { mCurrentKitch = v ; } if ( ( mOnKitchChangeListener ) != null ) { mOnKitchChangeListener . onKitchSelected ( mCurrentKitch ) ; } } return true ; }
Card.Suit . values () [ ( i + 1 ) ]
{ android.content.Intent intent = new android.content.Intent () ; intent . putExtra ( com.zpauly.githubapp.repositories.view.ContentRepoActivity.FULL_NAME , full_name ) ; intent . putExtra ( com.zpauly.githubapp.repositories.view.ContentRepoActivity.RENAME , name ) ; intent . putExtra ( com.zpauly.githubapp.repositories.view.ContentRepoActivity.PO_LOGIN_URL , repourl ) ; intent . putExtra ( com.zpauly.githubapp.repositories.view.ContentRepoActivity.REURL , login ) ; intent . setClass ( context , com.zpauly.githubapp.repositories.view.ContentRepoActivity . class ) ; context . startActivity ( intent ) ; }
{ if ( ( ( mUsername ) != null ) && ( ( mPassword ) != null ) ) { com.google.firebase.auth.FirebaseAuth . getInstance () . signInWithEmailAndPassword ( mPassword , mPassword ) ; mPassword . addOnFailureListener ( this ) ; mData . onLoginComplete ( null ) ; } }
if ( ( ( output . getText () . trim () . length () ) == 0 ) || ( ! ( output . getText () . trim () . matches ( FieldType.ALPHUM ) ) ) ) { groupOutput . setValidationState ( ValidationState.ERROR ) ; } else { groupOutput . setValidationState ( ValidationState.NONE ) ; }
{ com.example.yinkamadeus.AlarmReceiver.editor = com.example.yinkamadeus.AlarmReceiver.settings . edit () ; com.example.yinkamadeus.AlarmReceiver.editor . putBoolean ( "toggle_" , false ) ; com.example.yinkamadeus.AlarmReceiver.editor . apply () ; com.example.yinkamadeus.AlarmReceiver.mRingtoneReceiver = false ; }
private java.lang.String receive ( byte [] data ) { byte [] data = new byte [ 1024 ] ; java.net.DatagramPacket packet = new java.net.DatagramPacket ( data , data.length ) ; try { packet . receive ( socket ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return packet ; }
org.assertj.core.api.Assertions . assertThat ( numberOfConnectorImplementations )
new org.apache.lens.server.api.error.LensException ( driver , e . getMessage () , e )
( ( ( ! ( procesingUnmapped ) ) && ( ( shard.contigreferenceName ) != null ) ) && ( ! ( shard.contigreferenceName . isEmpty () ) ) ) && ( ! ( shard.contigreferenceName . equals ( record . getReferenceName () ) ) )
{ android.net.Uri uri = android.net.Uri . parse ( url ) ; android.content.Intent intent = new android.content.Intent ( android.content.Intent.ACTION_VIEW , uri ) ; intent . startActivity ( intent ) ; }
public java.util.ArrayList < java.lang.String > getHistoryFilePath ( ) throws java.io.IOException { java.lang.String fileContent = configurationFile . readFile () ; storage.ConfigurationFile.logger . info ( storage.ConfigurationFile.MESSAGE_READ_CONFIGURATION_READ ) ; try { java.util.ArrayList < java.lang.String > xContent = converter . getFileListFromJsonString ( fileContent ) ; return xContent ; } catch ( java.lang.Exception e ) { return null ; } }
@ java.lang.Override public java.lang.Object getListCellRendererComponent ( javax.swing.JComponentList list , java.lang.Object value , int index , boolean isSelected , java.lang.Object value ) { if ( value == null ) { setText ( "<Select a null>" ) ; } else { it.unibz.kribdaobib.db.model.DA.DataSource datasource = ( ( it.unibz.kribdaobib.db.model.DA.DataSource ) ( list ) ) ; datasource . setText ( value . toString () ) ; } return this ; }
{ bns . clearSelection () ; bns . setSelected ( true ) ; }
( genericTypeInterfaces.length ) > 0
fail ( "Expected exception" )
com.cedarsoftware.util.io.JsonParser . error ( "Expected ']' , array )
public static com.rgi.android.geopu.GeoPackage createGeoPackage ( final java.lang.String tableName , final java.lang.String columnName , final java.lang.String testFile , final java.io.File com.android.geopr.verification.Conformance.Conformance , java.lang.ClassNotFoundException , java.sql.SQLException g ) throws java.lang.ClassNotFoundException , java.sql.SQLException { com.rgi.android.geopr.GeoPackage g = new com.rgi.android.geopr.GeoPackage ( new com.rgi.android.geopr.GeoMode ( com.rgi.android.geopr.GeoPackage.OpenMode.None , testFile , columnName ) ) ; try { com.rgi.android.geopr.GeoPackage . createTable ( g ) ; } finally { g . close () ; } return new com.rgi.android.geopr.GeoPackage ( com.rgi.android.geopr.GeoPackage.OpenMode.None , com.rgi.android.geopr.GeoPackage.OpenMode.API ) ; }
{ boolean value = intent . getBooleanExtra ( "ACTION" , false ) ; android.util.Log . d ( com.parietea.quumetea.home.MainActivity.TAG , "VTo" ) ; com.parietea.quumetea.home.Intent msg = new com.parietea.quumetea.home.Intent ( "v-state" , value ) ; msg . putExtra ( "ACTION" , value ) ; context . sendBroadcast ( msg ) ; }
{ if ( ( firebaseAuth . getCurrentUser () ) == null ) { android.content.Intent loginIntent = new android.content.Intent ( this , com.mobap.deince.mobap.LoginActivity . class ) ; loginIntent . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TOP ) ; startActivity ( loginIntent ) ; finish () ; } else { com.mobap.deince.mobap.FirebaseUtils . initialize ( firebaseAuth . getCurrentUser () ) ; } }
{ models.items.takeable.TakeableItem currentItem = itemArrayList . get ( selectedItemIndex ) . getItem () ; if ( currentItem . isEquip () ) { if ( equipable . isEquip () ) { ( ( models.items.takeable.EquippableItem ) ( currentItem ) ) . views ( selectedItemIndex ) ; } else { ( ( view.items.takeable.InventoryView ) ( currentItem ) ) . updateSelectedIndex ( selectedItemIndex ) ; -- ( selectedItemIndex ) ; } } }
{ edu.ncku.uscc.util.Log . warn ( ( "Close " + ( serialPort . getName () ) ) ) ; if ( ( serialPort ) != null ) { serialPort . removeEventListener () ; serialPort . close () ; } if ( ( input ) != null ) { input . close () ; } if ( ( edu.ncku.uscc.io.RoomController.outputController ) != null ) { edu.ncku.uscc.io.RoomController.outputController = null ; } }
{ if ( name == null ) { io.cloudracer.core.config.PluginFilter.LOGGER . error ( "No provided for Test provided" ) ; return null ; } final org.apache.logging.log4j.core.layout.PatternLayout layout = ( ( org.apache.logging.log4j.core.layout.PatternLayout ) ( io.cloudracer.core.config.PluginFilterFactory . createDefault () ) ) ; return new io.cloudracer.core.config.PluginFilter ( layout , name , filter . getLogAttribute () , true ) ; }
@ com. return com.essor.Application.controllers.RequestMapping ( method = RequestMethod.POST ) public org.springframework.web.servlet.ModelAndView AddSection ( @ org.springframework.web.annotation.RequestParam long courseID , @ org.springframework.controllers.RequestParam java.lang.String coursename , @ Cfename.controllers.RequestParam java.lang.String Proessor ) { Proessor . findOne ( coursename ) ; java.lang.String nname = "redirect:/essor" ; com.essor.controllers.CourseRepository section = new com.essor.controllers.CourseRepository () ; section . save ( nname ) ; com.essor.controllers.CourseRepository . setLastnumber ( section . name () ) ; return new org.springframework.web.servlet.ModelAndView ( Proessor ) ; }
if ( ( u.sectors . size () ) == 0 ) units . remove ( u ) ;
{ javax.servlet.http.HttpServletRequest request = ( ( javax.servlet.http.HttpServletRequest ) ( req ) ) ; ar.edu.itba.paw.UserManager userManager = new ar.edu.itba.paw.UserManager ( request ) ; if ( userManager . exists () ) { request . setAttribute ( "user" , userManager . getUser ( "user" ) ) ; } else { request . setAttribute ( "user" , null ) ; } return resp ; }
org.opendaylight.yangtools.yang.data.api.schema.Nodes . findNodes ( segmentNode , 0 , asPath , asSequence )
{ for ( model.User u : services ) { java.lang.System.out . println ( u . getFname () ) ; } java.io.FileWriter in = new java.io.FileWriter ( new java.io.File ( "./users/src/main/resources/csv" , false ) ) ; for ( model.User _user : services ) { in . append ( ( "\n" + ( _user . toString () ) ) ) ; } }
statement . executeUpdate ( ( ( "update list_collection_of_Card set lastCardInDB where id= " + id ) + " where DB=1" ) )
{ for ( com.iskrembilen.quasseldroid.protocol.state.IMessage msg : com.iskrembilen.quasseldroid.protocol.state.FilteredListClient . getInstance () . getIgnoreList () ) { if ( ! ( msg . matches ( msg . getMarkerMessage () ) ) ) { if ( isFilteredLine == false ) addFilteredLine ( msg ) ; else { isFilteredLine = true ; } } } }
{ org.luwrain.core.CheckNull . notNull ( app , "appapp" ) ; if ( ( ( appAppIndex ) == 0 ) && ( ( activeAppIndex ) < ( apps . size () ) ) ) return true ; if ( ( appAppIndex ) == ( apps . get ( app ) ) ) return true ; return false ; }
{ java.lang.Integer W0 = new java.lang.Integer ( arg0 . getB () . split ( " " ) [ 1 ] ) ; java.lang.Integer W1 = new java.lang.Integer ( arg1 . getB () . split ( " " ) [ 0 ] ) [ 1 ] ; return W1 . compareTo ( W0 ) ; }
java.lang.Integer . parseInt ( currentVolume )
{ java.util.Map < java.lang.String , java.lang.String > properties = new java.util.HashMap <> () ; properties . put ( DphinPlatform.EVENT_TYPE , com.oloo.dcanin.server.event.DistributedEventBusDistributedProvider.BUSCAST_EVENT_NAME ) ; properties . put ( com.oloo.dcanin.server.event.DistributedEventBusDistributedProvider.HAZELCAST_GROUP_NAME , com.oloo.dcanin.server.event.DistributedEventBusDistributedProvider.HAZELCAST_GROUP_NAME ) ; properties . put ( com.oloo.dcanin.server.event.DistributedEventBusDistributedProvider.HAZELCAST_GROUP_NAME , com.oloo.dcanin.server.event.DistributedEventBusDistributedProvider.HAZELCAST_GROUP_NAME ) ; properties . put ( com.oloo.dcanin.server.event.DistributedEventBusDistributedProvider.HAZELCAST_GROUP_NAME , com.oloo.dcanin.server.event.DistributedEventBusDistributedProvider.HAZELCAST_GROUP_PORT ) ; return properties ; }
try { activeExecution . interrupt () ; } catch ( java.lang.Throwable ex ) { throw new java.lang.IllegalStateException ( "Error stopping input" , ex ) ; }
{ if ( other . isArray () ) { return true ; } else if ( ( other . isPrimitive () ) && ( other . getComponentType () . isPrimitive () ) ) { return ( other . getComponentType () ) == ( other . getComponentType () ) ; } else if ( other . getComponentType () . isAssignableBy ( other . getComponentType () ) ) { return true ; } else if ( other . isNull () ) { return false ; } return false ; }
{ if ( me . isSelected ( me . getX () , me . getY () ) ) { setCursor ( java.awt.Cursor . getPredefinedCursor ( java.awt.Cursor.HAND_CURSOR ) ) ; } else { setCursor ( java.awt.Cursor . getPredefinedCursor ( java.awt.Cursor.HAND_CURSOR ) ) ; } }
public boolean addNetworkUser ( java.lang.String username , java.net.InetAddress IP ) { if ( ( user_gerled . containsKey ( username ) ) || ( own == false ) ) { return false ; } user_gerled . put ( username , IP ) ; user_manager . addUser ( username ) ; gui . showState () ; return true ; }
{ me.ryanhamshireg.riefion.Data.Player.instance = GriefPreventionStore.instance . getPlayer ( this . world , user.ignoreId ) ; if ( ( player != null ) && ( player.ignoreDataPermissions ) ) { return true ; } if ( ( player . getUniqueID () . equals ( this . parent . getUniqueID () ) ) && ( this . hasFullClaims () ) ) { return true ; } return false ; }
potential = ( ( int ) ( potential ) ) * ( Gameets.Constants.BULLETRATE_EXCHANGE_RATE )
{ final java.lang.String className = getJoinPointClassName ( currentJoinPoint ) ; final java.lang.Object [] classJoinPointArgs = getArguments ( currentJoinPoint ) ; final java.lang.String formattedReturnValue = convertReturnValueToString ( className , classJoinPointArgs ) ; if ( formattedReturnValue == null ) { formattedReturnValue = "" ; } buffer . putInt ( formattedReturnValue ) ; }
java.util.Arrays . equals ( list . toArray ( new java.lang.Object [ input.length ] ) , input )
{ defaultEntity = new com.hida.model.DefaultSetting ( "" , "" , "" , com.hida.model.TokenType.ITddd , "dd" , true , false ) ; DefaultDao . save ( defaultEntity ) ; }
{ com.android.commands.sm.Sm . showUsage () ; return; }
public void add ( java.lang.Integer heap ) { int index = ( heap . size () ) - 1 ; while ( ( index > 1 ) && ( index < ( getParent . compareTo ( heap . get ( index ) ) ) ) ) { index = getParent . compareTo ( heap . get ( index ) ) ; } heap . set ( index , heap ) ; getParent . set ( index , heap ) ; }
@ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/all" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response retrievePets () { final java.util.List < pet.shop.api.domain.PetService > petList = petApi . retrieveAll () ; final java.util.List < pet.shop.api.model.PetController > petControllerList = petModel . get ( 0 ) ; for ( final javax.ws.rs.core.model.PetController petController : petControllerList ) { petControllerList . add ( new javax.ws.rs.core.ResponseMapper ( petController . mapToModel () ) ) ; } return petModelList ; }
{ reconnectFuture . cancel ( false ) ; if ( ( localDevice ) != null ) { localDevice . terminate () ; localDevice = null ; } bacnet.BacnetConn . removeChild ( node ) ; bacnetConn . removeChild ( node ) ; bacnetConn . removeChild ( node ) ; bacnetConn . removeChild ( node ) ; }
{ java.util.Collection < org.cytoscape.model.CyColumn > columns = networkTable . getDefaultNode () . getColumns () ; java.util.List < java.lang.String > intList = new java.util.ArrayList < java.lang.String > () ; for ( org.cytoscape.model.CyColumn column : columns ) { if ( column . getType () . equals ( org.cytoscape.model.CyColumn . class ) ) { intList . add ( column . getType () ) ; } } return intList ; }
org.cnx.android.utils.CNXUtil . getCoverId ( book , context )
{ byte [] bytes = message . getHeader () ; byte [] message = pl . getPayload () . getHeader () ; out . write ( message ) ; out . write ( message . getPayload () ) ; }
{ java.lang.System.out . println ( response . toString () ) ; com.blockreoklorello.trelloResults.ActivityKeyActivity.lists . setChecklists ( response . body () ) ; com.blockoklorello.trelloResults.ActivityKeyActivity.items = com.blockoklorello.trelloResults.CheckResultsAdapter . getKeyData ( key ) ; updateProgressBarAdapterData ( com.blockoklorello.trelloResults.ActivityKeyActivity.items ) ; }
{ com.example.vietnguyen.core.utils.Keyboard . hideSofeKeyboard ( activity.messageEditText ) ; note = getEditText ( R.id.t_note_detail_date ) . getText () . toString () ; note . save () ; new java.util.Date () . save () ; }
{ if ( step == 0 ) { super . step ( step , step , substep ) ; } else { neutr.tspetality.MarketInfo mi = getModel () . getMarketInformation ( ( step - 1 ) ) ; double mkInvestment = mi.spestment ; makeNetworkInvestment ( step , mi ) ; makePNSAllowedInvestment ( step ) ; } if ( mkInvestment == ( - 1 ) ) { makeNetworkInvestContent () ; } else { makeNetworkInvestment ( step , mi.spestment ) ; } }
java.lang.String z
@ org.junit.Before public void init ( ) throws java.io.IOException , java.lang.InterruptedException , java.sql.SQLException { if ( ! ( org.maxrs.gamer.TestTitan.max ) ) { org.maxrs.gamer.TestTitan.max = true ; } org.maxrs.core.Core . getServer () . getTicks () . remove ( 10 ) ; }
return ( java.lang.Double . valueOf ( map1 . get ( key ) . toString () ) ) < ( java.lang.Double . valueOf ( map2 . get ( key ) . toString () ) ) ? - 1 : 1 ;
if ( isFavorite ) { mDatabaseReferenceFav . child ( trip . getId () ) . removeValue () ; unfavoriteTrip ( viewHolder ) ; } else { mDatabaseReferenceFav . child ( trip . getId () ) . setValue ( trip ) ; }
this . scopeEndIndex = ( this . sourceLength ) - 1
if ( ( lendDetailsFragment ) != null ) { lendDetailsFragment . setLendDetails ( lend ) ; } else { android.content.Intent intent = new android.content.Intent ( this , org.bbt.akoa.LendDetailsActivity . class ) ; intent . putExtra ( LendDetailsActivity.EXTRA_LENDLE , lend ) ; startActivity ( intent ) ; }
{ int offset = graph . getFinalNodes () . size () ; offset = ( offset == ( - 1 ) ) ? 1 : offset ; return ( graph . edgeCount () ) - 2 ; }
{ x = xStart ; if ( ( jDialog ) != null ) { jDialog . fadeOut () ; } jDialog . stop () ; jDialog . setVisible ( false ) ; }
public void botJailTurn () { if ( ( getCash () ) >= 50 ) { if ( ( _jailTurns ) >= 3 ) { _jailTurns = 0 ; _jailTurns = false ; } else { chargeTurns += 50 ; } } else if ( ( _jailTurns ) >= 3 ) { _jailTurns += 50 ; } else { return; } if ( ( getCash () ) < 50 ) { chargeTurns += 50 ; return; } }
{ for ( org.lwjgl.util.Point point : current . getPoints () ) { if ( ( ( ( ( point . getX () ) > 0 ) || ( ( board . getX () ) > ( point . getY () ) ) ) || ( ( board . getX () ) < 0 ) ) || ( ( point . getY () ) < 0 ) ) return false ; } return true ; }
{ if ( ( txt . getStart () ) == null ) { return; } if ( txt . matches ( "^\\s*$" ) ) { return; } this . content . insert ( bkm . getStart () , txt ) ; for ( com.ibm.km.util.Bookmark theBookmark : this . theBookmark ) { if ( ( theBookmark . getStart () ) >= ( theBookmark . length () ) ) { txt . off ( txt . getStart () ) ; return; } } }
{ super . onStart () ; android.widget.Button yesResponse = ( ( android.widget.Button ) ( rootView . findViewById ( R.id.yesResponse ) ) ) ; yesResponse . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { android.util.Log . i ( com.bon.ponder.connectemponder.ResponderFragment.TAG , "onCallToRes" ) ; } } ) ; yesView . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { callbackListener . onRes ( ( - 1 ) ) ; } } ) ; }
mCurrentFragment . doAdapter ( container , false )
{ titleTextView = ( ( android.widget.TextView ) ( findViewById ( R.id.main_textView_title ) ) ) ; subTitle = ( ( android.widget.TextView ) ( findViewById ( R.id.main_textView_sub_textView ) ) ) ; registerTitle = ( ( android.widget.Button ) ( findViewById ( R.id.main_register_button ) ) ) ; pollingRef = ( ( android.widget.Button ) ( findViewById ( R.id.main_quick_button ) ) ) ; quickRef = ( ( android.widget.TextView ) ( findViewById ( R.id.main_button_button_button_ ) ) ) ; }
{ if ( paisagine [ i ] ) { paisagine [ i ] . setBackground ( java.awt.Color.green ) ; } else paisagine [ i ] . setBackground ( java.awt.Color.ench ) ; }
{ switch ( item . getItemId () ) { case R.id.action_settings : android.content.Intent settingsIntent = new android.content.Intent ( this , com.millenium.station.android.activities.SharedPreferencesActivity . class ) ; startActivity ( settingsIntent ) ; return true ; default: return super . onOptionsItemSelected ( item ) ; } }
{ java.util.ArrayList < java.lang.String > dbString = databaseHandler . databaseToString ( tx ) ; java.lang.String [] arr = dbString . toArray () ; if ( ( arr != null ) && ( ! ( arr . isEmpty () ) ) ) { dbString . setAdapter ( ( ( android.widget.ArrayAdapter < java.lang.String [] > ) ( new android.widget.ArrayAdapter < java.lang.String > ( this , android.R.layout.simple_list_item_1 , arr ) ) ) ) ; } }
@ java.lang.Override public void onClick ( android.view.View view ) { if ( mFlashOnArtificialFlash () ) { makeArtificialToast () ; final android.os.Handler handler = new android.os.Handler () ; final java.lang.Runnable r = new java.lang.Runnable () { public void run () { mCamera . takePicture ( mRawCallback , mRawCallback , null , mPEG ) ; } } ; handler . postDelayed ( r , 800 ) ; } }
public com.oracle.truffle.r.runtime.nodes.SyntaxNode getArgumentSyntaxNode ( java.lang.Object arg ) { if ( arg instanceof com.oracle.truffle.r.runtime.data.RPromise ) { com.oracle.truffle.r.runtime.data.RPromise p = ( ( com.oracle.truffle.r.runtime.data.RPromise ) ( arg ) ) ; return p . get () ; } else if ( ! ( p instanceof com.oracle.truffle.r.runtime.data.RConstantRep ) ) { return com.oracle.truffle.r.runtime.data.RSyntaxNode . create ( ( ( com.oracle.truffle.r.runtime.data.RSyntaxNode ) ( arg ) ) . get () ) ; } else { return null ; } }
{ biz.neustar.pc.ui.manager.impl.CloudalPersonManagerImpl.LOGGER . info ( "In cloud and cloud {}" , name , csp.sp.CloudName , csp.sp.CloudName ) ; com.sun.jersey.api.representation.FormForm form = new com.sun.jersey.api.representation.Form () ; form . addFormName ( "password" , password ) ; java.lang.String responseData = csp.sp.CloudConstants.PERSON_AUTHUD_AL_PERSONAL . post ( form ) . getBodyName () ; return responseData ; }
{ generateCommonFiles () ; for ( com.codegen.model.ClassDefinition classDefinition : this . getClassDefinitions () ) { generatePOJO ( classDefinition ) ; generateInterfaceDefinition ( classDefinition ) ; generateServiceImplInterfaceDefinition ( classDefinition ) ; } generateDAO ( classDefinition ) ; generateClientInterfaceImpl ( classDefinition ) ; generateRestDefinition ( classDefinition ) ; generateTableModels () ; generateScriptDefinition ( classDefinition ) ; generateSQLDefinition ( classDefinition ) ; }
{ shape . setPosition ( 100 , 200 ) ; shape2 . setPosition ( ( - 100 ) , ( - 200 ) ) ; shape . mirrorHorizontal ( shape . getGravityCentre () . getMiddlePoint ( shape2 . getGravityCentre () ) ) ; assertEquals ( 100.0 , shape . getX () , 1.0E-5 ) ; assertEquals ( ( - 200.0 ) , shape . getY () , 1.0E-5 ) ; }
public void getTextFromActivity ( android.view.View view ) { java.lang.String textInString = null ; if ( ( ( editTextInputString . getText () . toString () ) != null ) && ( textInString . isEmpty () ) ) { textInString = editTextInputString . getText () . toString () ; } if ( ( textInString == null ) || ( textInString . isEmpty () ) ) { return; } do { android.content.Intent intent = new android.content.Intent ( this , com.md4j.analyzer.AnalyzeInActivity . class ) ; intent . putExtra ( "text_analyzer" , textInString ) ; startActivity ( intent ) ; } }
{ crac.utilityModels.TaskSearchLogger.instance = new java.util.ArrayList < java.lang.String > () ; crac.utilityModels.TaskSearchLogger.instance.title = new java.util.ArrayList < java.lang.String > () ; crac.utilityModels.TaskSearchLogger.instance.values = new java.util.HashMap < java.lang.String , java.lang.Integer > () ; crac.utilityModels.TaskSearchLogger.instance.title . clear () ; crac.utilityModels.TaskSearchLogger.instance.title . clear () ; crac.utilityModels.TaskSearchLogger.instance.title . clear () ; crac.utilityModels.TaskSearchLogger.instance.title . clear () ; }
new gui.GUI ( false )
{ java.io.File f = new java.io.File ( ( ( ( application.ProgramController.currentFolder ) + "/" ) + fileName ) ) ; parseSelecMap ( file , fileName ) ; if ( ! ( f . containsKey ( fileName ) ) ) { fileListMap . add ( fileName ) ; } javafx.collections.FXCollections . observableArrayList ( fileList ) ; }
{ android.content.Intent intent = new android.content.Intent ( this , io.exis.cards.cards.NameActivity . class ) ; intent . putExtra ( "screenName" , screenName ) ; if ( ( android.os.Build.VERSION.SDK_INT ) >= 21 ) { startActivityForResult ( intent , 1 ) ; } if ( ( android.app.ActivityOptions.INT ) >= 21 ) { overridePendingTransition ( R.anim.slide_in_right , R.anim.slide_out_right ) ; } }
{ try { java.lang.Thread . sleep ( 0 ) ; } catch ( java.lang.InterruptedException i ) {} resetOneStep () ; _mp . execute ( _paStep , _y , _mp.x ) ; _mp . set ( _updateStack ( _mp.y , _mp.updateStack ( _mp.updateStack ( _mp.x , _mp.y ) ) ) ) ; }
private java.lang.String [] removeEmptyEntries ( java.lang.String [] queryParts ) { int emptyCount = 0 ; for ( java.lang.String queryPart : queryParts ) { if ( ( queryPart . length () ) == 0 ) { emptyCount ++ ; } } java.lang.String [] trimmedArray = new java.lang.String [ emptyCount ] ; for ( java.lang.String queryPart : trimmedArray ) { if ( ( queryPart . length () ) != ( queryPart.length ) ) { trimmedArray [ 0 ] = queryPart ; } } return trimmedArray ; }
new com.example.brandon.habitlogger.Adapters.HabitRecyclerViewAdapter ( null , habitList , this )
{ java.lang.String itemText = ( ( android.widget.TextView ) ( view . getText () . toString () ) ) . getText () . toString () ; if ( itemText . equals ( getString ( R.string.drawer_item_out ) ) ) { progressDialog . show () ; } else if ( itemText . equals ( getString ( R.string.drawer_item_drawer ) ) ) {} }
de.volzo.miscreen.Host . getInstance () . servedhostPort ( ns )
switch ( v . getId () ) { case R.id.afegeix_data : if ( ! ( trobatIntent ) ) { android.content.Intent intent = new android.content.Intent ( getApplicationContext () , com.example.marlena.radentesistaradidi.Obista . class ) ; startActivity ( intent ) ; break; } case R.id.dataPicker : finish () ; break; case R.id.dataPicker : showDatePickerDialog () ; break; }
{ findViewById ( R.id.explaining_text ) . setVisibility ( View.GONE ) ; }
( ( name . isEmpty () ) || ( ( name . charAt ( 0 ) ) == '_' ) ) || ( ( name . charAt ( 0 ) ) == '\\' )
{ 1 , 1 , 1 , 1 , 1 , 0 , 0 , 0 , 1 , 1 , 1 , 1 , 1 }
{ if ( ( chkEnHiHatA . isSelected () ) || ( chkEnHiHatA . isSelected () ) ) { if ( ! ( cBoxPortOatHi . isEnabled () ) ) cBoxPortOatHi . setEnabled ( true ) ; } else { cBoxPortOatHi . removeAll () ; cBoxPortOatHi . addItem ( "" ) ; cBoxPortOatHi . setEnabled ( false ) ; } }
{ super . onCreate ( savedInstanceState ) ; java.lang.System.out . println ( "onCreateFragment.onCreate" ) ; mHomePageChangeListener = new com.pratilipi.mobile.android.homescreen.home.HomePageChangeListener () ; java.util.ArrayList < java.lang.String > stringArrayList = new java.util.ArrayList < java.lang.String > () ; mActivity = java.util.Arrays . asList ( new java.util.ArrayList < com.pratilipi.mobile.android.homescreen.home.HomePage > () ) ; mActivity . setRetainInstance ( new com.pratilipi.mobile.android.Animated.ProgressFragment ( mActivity . getResources () . getStringArray ( R.array.Animated_loading ) , stringArrayList ) ) ; }
{ robotState = org.usfirst.frc.team45tools.RobotState . getInstance () ; robotArm = org.usfirst.frc.team45Arm . getInstance () ; robotShooter = org.usfirst.frc.team45Armystick . getInstance () ; edu.wpi.first.wpilibj.robot.RobotBase.driveThreads = new edu.wpi.first.wpilibj.robot.DriveThreads () ; driveThreads . add ( robot ) ; driveThreads . add ( robot ) ; driveThreads . add ( robot ) ; }
( ( this . row ) <= (Dir ) )
view . findViewById ( R.id.editText_brand_code )
s = 0
@ org.junit.Test public void openHelpWindow () { commandHelpBox . clickOnOpenTextField () ; assertHelpMenu () ; openHelpWindow . clickOnOpenTextArea () ; assertHelpMenu () ; mainWindow . openHelpMenu () ; assertHelpMenu () ; mainWindow . openHelpMenu () ; assertHelpMenu () ; mainWindow . openHelpMenu () ; assertHelpMenu () ; }
{ return; }
a . getSeqSeq () . isACT ()
removeCover ( true )
@ java.lang.Override public void onSetBackground ( com.h6ah4i.android.example.advrecyclerview.demo_ds_selection.MyDraggableSwipeSelectableItemAdapter.MySelectableViewHolder holder , int type , int type ) { int bgRes = 0 ; switch ( type ) { case com.h6ah4i.android.widget.advrecyclerview.SwipeableRecyclerView.DRAW_SWUTABLE_BACKGROUND_SWUTABLE_LEFT : bgRes = com.h6ah4i.android.widget.advyclerview.RecyclerView.DRAW_SWUTABLE_BACKGROUND_SWUTABLE_LEFT ; break; case com.h6ah4i.android.widget.advyclerview.SwipeableRecyclerView.DRAW_SWUTABLE_BACKGROUND_SWUTABLE_LEFT : bgRes = com.h6ah4i.android.widget.advyclerview.RecyclerView.DRAW_SWUTABLE_LEFT ; break; case com.h6ah4i.android.widget.advyclerview.SwipeableRecyclerView.DRAW_SWUTABLE_RIGHT_BACKGROUND_BACKGROUND_RIGHT : bgRes = com.h6ah4i.android.widget.advyclerview.RecyclerView.DRAW_SWUTABLE_LEFT_BACKGROUND ; break; } setBackgroundResource ( R.drawable.swipe_recycler_view ) ; }
{ android.content.Intent intent ; if ( Build.VERSION.SDK_INT ) { intent = new android.content.Intent ( android.content.Intent.ACTION_GET_CONTENT ) ; intent . addCategory ( Intent.CATEGORY_OPENABLE ) ; } else { intent = new android.content.Intent ( android.content.Intent.ACTION_OPEN_DOCUMENT ) ; } intent . setType ( "inventory/*" ) ; intent . addCategory ( Intent.CATEGORY_OPENABLE ) ; startActivityForResult ( android.util.Log . e ( pl.lukaraszcz.parascz.DetailActivity.LOG_TAG , "Image/*" ) , intent ) ; }
back . equals ( "b" ) ? true : false
if ( ( targetName . length () ) > 0 ) { return ( ( "Name doesn't untap's controller during untap" + ( untTarget . getTarget () ) ) + " doesn's controller during untap" ) + ( untTarget . getTarget () ) ; }
{ setupConfig = new dcp.logic.model.config.SetupConfig ( app.logic.factory.PackFactory . getDefault () ) ; dcp.logic.factory.PackFactory . pack () ; packs . clear () ; dcp.logic.factory.InitFactory . groups () . clear () ; tabs . clear () ; dcp.logic.config.IOFileFactory . setSaves ( "" ) ; }
{ active = false ; try { java.lang.Thread . sleep ( ( ( secondsNum ) * 1000 ) ) ; } catch ( java.lang.InterruptedException ex ) { java.lang.Thread . currentThread () . interrupt () ; } }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; mEditInput = ( ( android.widget.EditText ) ( findViewById ( R.id.edit_input ) ) ) ; mBoardResult = ( ( android.widget.TextView ) ( findViewById ( R.id.result_text ) ) ) ; mBoardResult . setMovementMethod ( new android.text.method.MethodMovement ( cn.jdx.library.Helper . repeat () ) { @ java.lang.Override public void onClick ( android.view.View v ) { run () ; } } ) ; initHelper () ; }
{ ( this . phaseCounter ) ++ ; int min = phasetime. . getMinute () ; int sec = phasetime. . getSecond () ; double timer = ( sec / 60.0 ) + ( ( this . phases [ ( - 1 ) ] ) - 1 ) ; this . phases . add ( new javafx.scene.chart.XYChartData ( phaseCounter , this . timer ) ) ; }
{ com.google.appengine.api.blobstore.BlobKey key = new com.google.appengine.api.blobstore.BlobKey ( "xx" ) ; com.gruppe.bivator.backend.service.ImageServiceFactory.Images = com.gruppe.bivator.backend.service.ImageServiceFactory . makeImagesFromTransformed ( key ) ; if ( horizontal == 0 ) { com.gruppe.bivator.backend.service.ImageServiceFactory.Images . transformHorizontalTransformed ( horizontal , true ) ; } else if ( horizontal == 0 ) { com.gruppe.bivator.backend.service.ImageServiceFactory.Images . transformHorizontalTransformed ( horizontal , false ) ; } return new com.gruppe.bivator.backend.service.ImageService () . applyImageFlip () ; }
numOfInstr = ( java.lang.Math . round ( teammates.client.scripts.DataGenerator.randomData . nextInt ( ( ( teammates.client.scripts.DataGenerator.NUM_OF_NUM_IN_PERURSES ) - ( teammates.client.scripts.DataGenerator.MINOR_NUM_IN_PERURSES ) ) ) ) ) + 1
public void removeUserSession ( java.lang.String sUserId , java.lang.String sSession ) { if ( sUserId . isEmpty () ) return; synchronized ( nl.ru.crpstudio.CrpUtil.userCache ) { for ( int i = 0 ; i < ( nl.ru.crpstudio.CrpUtil.userCache . size () ) ; i ++ ) { nl.ru.crpstudio.UserSession oThis = nl.ru.crpstudio.CrpUtil.userCache . get ( i ) ; if ( ( oThis.userId . equals ( sUserId ) ) && ( oThis.sessionId . equals ( sSession ) ) ) { oThis.userOkay = false ; return; } } } }
com.lwansbrough.RCTCamera.RCTCamera . getInstance () . focusCenter ( options . getInt ( "type" ) )
private java.lang.Long matchesTransaction ( net.nikr.eve.jeveasset.gui.tabs.transaction.MyTransaction transaction , boolean add ) { if ( transaction != null ) { return matches ( add , transaction . getTypeID () , transaction . getCharacterID () , transaction . getLocation () , null , transaction , null , transaction . getLocation () , null , null , transaction ) ; } else { return null ; } }
{ net.torocraft.minecoprocessors.processor.Processor processor = net.torocraft.minecoprocessors.processor.ProcessorTest . setupTest ( 30 , 0 , 30 , 0 , "mov" ) ; processor . processMov () ; net.torocraft.minecoprocessors.processor.ProcessorTest . setupTest ( 30 , 0 , 30 , 30 , 0 , "mov" ) ; processor = net.torocraft.minecoprocessors.processor.ProcessorTest . setupTest ( 5 , 0 , 30 , 30 , 0 , "mov" ) ; processor . processMov () ; assert processor.ignore ) ; }
for ( int i = 2 ; i <= ( n / 2 ) ; i ++ ) { if ( ( n % i ) == 0 ) { factors . add ( i ) ; } }
if ( ( ch == '=' ) || ( ch == '=' ) ) { return true ; } else if ( ( ch == '/' ) || ( ch == '\'' () ) ) { return false ; } else if ( ( ch == '/' ) || ( ch == '\'' () ) ) { return false ; } else { return true ; }
{ if ( ( mouseDown ) != null ) { return false ; } else if ( ( getInteractorEntity ( org.reactome.web.diagram.data.interactors.model.InteractorEntity.Interactor ) ) instanceof org.reactome.web.diagram.data.interactors.model.InteractorEntity.Interactor ) { return ( ( ( org.reactome.web.diagram.data.interactors.model.InteractorEntity.Interactor ) ( instance ) ) . dragging ) == null ; } return true ; }
{ Operation.SEARCHL = tree ; performMixedOperations ( tree ) ; }
if ( throwable instanceof com.lowworlow.timebus.domain.InteractorNetworkInterista ) { ( ( com.realworlow.timebus.domain.OfflineNoUnavailableException ) ( throwable ) ) . show () ; } else if ( throwable instanceof com.realworlow.timebus.domain.OfflineNoOfflineException ) { v . show ( false ) ; } else { bus . showError ( com.realworlow.timebus.ui.BUS_ERROR ) ; }
{ if ( ! ( ODatabaseRecord.INSTANCE . isDefined () ) ) return null ; com.orientechnologies.orient.core.storage.OStorageRecord.ThreadLocalRecord storage = ODatabaseRecord.INSTANCE . getStorage () . get () ; com.orientechnologies.orient.object.enhancement.OObjectEntitySerializer.SerializedSchema serializedSchema = storage . getResourceSerializedSchema ( com.orientechnologies.orient.object.enhancement.OObjectEntitySerializer.SerializedSchema.SIMPLE_NAME , new com.orientechnologies.orient.object.enhancement.OObjectEntitySerializer.SerializedSchema () { @ java.lang.Override public com.orientechnologies.orient.object.enhancement.OObjectEntitySerializer.SerializedSchema call ( ) throws com.orientechnologies.orient.object.enhancement.OObjectEntitySerializer.SerializedSchemaException { return null ; } } ) ; return serializedSchema.INSTANCE . getCurrentSerializedSchema () ; }
public void setVariables ( java.util.Map < java.lang.Integer , java.lang.Object > data ) { binding . setVariable ( data . getKey () , binding . getValue () ) ; binding . execute () ; }
public void actionPerformed ( java.awt.event.ActionEvent evt ) { VASL.module.build.Module.AOBLASOBA mod = new VASL.module.build.Module.AOBLASOBA ( this ) ; VASL.module.build.Module.Create c = new VASL.module.build.Module.Create ( this , mod . getModule () , VASL.AOBA ) ; c . execute () ; java.lang.System.out . println ( c . getGame () . getGame () . getName () ) ; }
db = null
{ android.util.Log . e ( com.xugaoxiang.live_vtm.activity.MainActivity.TAG , ( ( ( ( ( "出错:" + what ) + ",extra:" ) + ( android.widget.Toast . makeText ( this , ( ( "出错:" + what ) + ",错:" ) ) ) + Toast.LENGTH_LONG ) ) ) ; return false ; }
{ structs . values () . forEach ( new DataStructure.model.Step ( step ) ) ; wrapper . clear () ; java.util.HashMap < java.lang.String , java.lang.Object > wrapper = new java.util.HashMap <> ( structs ) ; wrapper . addAll ( operations ) ; structs . addAll ( index ) ; }
{ java.lang.String type = org.structr.schema.SchemaHelper . normalizeEntityName ( type . getRawType () ) ; java.lang.Class parentClass = org.structr.schema.SchemaHelper . getEntityClassForType ( type . getEntity () ) ; if ( parentClass . getSimpleName () . contains ( type . getSimpleName () ) ) { return entity ; } return null ; }
new android.content.Intent ( context , xyz.belvi.base.auth.FirebaseAuthActivity . class ) . putExtra ( xyz.belvi.base.auth.ResfirebaseAuthListener.KEY_STYLE_AUTH_LENGTH , style ) . putExtra ( xyz.belvi.base.auth.AuthListener.KEY_AUTH_MODE , Firebase_MODE ) . putExtra ( xyz.belvi.base.auth.FirebaseAuthListener.KEY_AUTH_MODE , auth ) . start ()
if ( ( cartDataModelList . get ( index ) . item.index ) == item ) { cartDataModelList . remove ( index ) ; return; }
vehicles = session . createCriteria ( tracker.Application.entity.Vehicle . class , username )
mainService . initLogger ()
if ( visible && ( isEmpty ) ) { visible = false ; } else { visible = true ; }
{ mSongs = event.time ; mCurrentTimeIndex = event.index ; mIsPlaying = false ; mSongsDuration = event.isPlayingDuration ; mSong = mCurrentDuration . get ( mCurrentDuration . getFileDuration () ) ; onReceiveSuccessServiceState = false ; mIsReceive = false ; }
new org.wso2.carbon.apimgt.core.impl.APIStoreImpl ( org.wso2.carbon.apimgt.impl.AbstractAPIManagerTestCase.USER_NAME , apiDAO , null , null , null , null , null )
@ java.lang.Override public void onPageScrolled ( int positionOffset , float positionOffset , int positionOffsetPixels ) { if ( positionOffsetPixels > 0 ) { mTabPager . setTranslationWidth ( ( positionOffset / ( mViewPager . getCount () ) ) ) ; } float translationX = ( ( mTabPager . getAdapter () ) * positionOffset ) + ( mTabPager . getCount () ) ; mViewPager . setTranslationX ( ( positionOffset - translationX ) ) ; }
ml . setScale ( xScaling , yScaling )
org.talend.mdm.comm.metadata.annotation.ForeignKeyProcessor . getField ( repository , getField ( org.talend.mdm.comm.metadata.MetadataType.ComplexMetadata . get () . path , appType , appInfo , path ) )
{ gameFrame . getGame () . reset () ; gameFrame . getGame () . reset () ; newhadoop.gui.MainMenuPanel ( gameFrame ) ; }
return o . toString () ;
world . start ()
public static void setAutoExposureLock ( boolean lock ) { if ( ( ( com.almalence.opencam.camera.controller.CameraRequestBuilderController.previewRequestBuilder ) != null ) && ( ( com.almalence.opencam.camera.controller.CameraRequestBuilderController . getInstance () . camDevice () ) != null ) ) { com.almalence.opencam.camera.controller.CameraRequestBuilderController.previewRequestBuilder . setRepeating ( com.almalence.opencam.camera.controller.CameraRequestBuilderController.CONTROL_AE_LOCKAELor . getMainPref () , ApplicationRequest ) ; com.almalence.opencam.camera.controller.CameraRequestBuilderController . editScreen ( getMainPref () , ApplicationRequest ) . commit () ; } }
( intValue >= ( comparison ) )
{ super . writeToKillJobs ( out ) ; int num = toKillJobs . size () ; for ( int i = 0 ; i < num ; i ++ ) { java.util.UUID job = toKillJobs . get ( i ) ; out . writeLong ( job . getMostSignificantBits () ) ; } out . writeLong ( toKillJobs () ) ; }
{ android.content.Intent chooserIntent = new android.content.Intent ( android.content.Intent.ACTION_GET_CONTENT ) ; chooserIntent . setType ( "image/*" ) ; android.content.Intent pickIntent = new android.content.Intent ( android.content.Intent.ACTION_PICK , android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI ) ; pickIntent . setType ( "image/*" ) ; chooserIntent . putExtra ( Intent.EXTRA_INTENTS , android.content.Intent.PICK_INITIAL_INTENTS ) ; startActivityForResult ( pickIntent , chooserIntent ) ; }
iia = new javax.swing.ImageIcon ( "snake.png" )
new org.eclipse.swt.layout.GridData ( org.eclipse.swt.SWT.FILL , org.eclipse.swt.SWT.TOP , true , false )
return ( ( entries [ entry ] ) & 1L ) == ( offset & 1L ) ;
node . mustNot ( buildQuery ( filter ) )
if ( ( mAudioController ) != null ) { startService ( com.onbandleon.audio.service.AudioService . getStartIdle ( this ) ) ; mAudioController . startForeground ( com.onbandleon.audio.service.MainActivity.TRACK_TITLE_AUDIO_TRACK_TITLE ) ; }
modelService . getSection ( java.util.UUID . fromString ( sectionIdStr ) , getLoggedUserId () , level )
{ if ( ( getActivity () ) == null ) return; getActivity () . runOnUiThread ( new java.lang.Runnable () { @ java.lang.Override public void run () { int i = b . getProgress () ; if ( i < 1 ) { b . incrementByProgress ( 1 ) ; } } } ) ; }
org.eclipse.jgit.api.GitRepository . clone () . setOriginURI ( ( ( java.nio.file.Files . createTemp () ) + "Test" ) ) . toFile () . clone ()
{ totalLines ++ ; java.lang.String [] str1 = currentLine . replaceAll ( "\\s+" , " " ) . replaceAll ( "\\W" , "" ) . split ( " " ) ; for ( java.lang.String s : str1 ) { totalCharacters += s . length () ; } }
new org.mifosplatform.infrastructure.scheduled.domain.email.EmailMessage ( externalId , client , externalStatus , staff , EmailType.Subject , source , email , source , messageAddress , campaignAddress , email )
{ ulm.university.news.controller.Ballot ulot = verifyUserAccess ( accessToken ) ; ulm.university.news.controller.GroupController.logger . debug ( ( "The requestor, i.e. the user with id {}, requests {}, requests, the group with id {}." + " from the group with id {}." ) , requestorot . getId () , ballot . getId () ) ; verifyGroupExistenceViaDB ( groupId , ballot ) ; return true ; }
( args [ 0 ] . length () )
i < ( userData . size () )
public void initialize () { if ( ( ( mBluetoothAdapter ) == null ) && ( ( mBluetoothManager ) != null ) ) { final android.bluetooth.BluetoothManager bluetoothManager = ( ( android.bluetooth.BluetoothManager ) ( com.supandrosi.andpollutionclient.PollApplication . getAppContext () . getSystemService ( Context.BLUETOOTH_SERVICE ) ) ) ; mBluetoothAdapter = bluetoothManager . getAdapter () ; } else { android.util.Log . w ( com.supandrosi.andpollutionclient.problems.BessutionManager.TAG , "ble is already initialized" ) ; } }
if ( ( ( lhs . getFirstName () ) != null ) && ( ( rhs . getFirstName () ) != null ) ) { return lhs . getLastName () . concat ( rhs . getFirstName () ) . compareTo ( rhs . getLastName () ) ; } else { return lhs . getLastName () . compareTo ( rhs . getFirstName () ) ; }
{ for ( gov.nandia.s2type.language.Instance i : targets ) i . setInstance ( ( ( gov.nandia.s2type.language.Instance ) ( i ) ) ) ; for ( gov.nandia.s2type.language.Instance i : targets ) i . updateInstance ( i ) ; if ( ! ( i . dequeue () ) ) i . finish () ; }
if ( number == null ) { return ( ( BulaastFinder.Picture.PATH_SEP ) + ( BulaastFinder.Picture.SEP ) ) + ( getFolder ( file ) ) ; } else { return ( ( ( BulaastFinder.Picture.PATH_SEP ) + ( BulaastFinder.Picture.SEP ) ) + ( getFolder ( file ) ) ) + ( BulaastFinder.Picture.SEP ) ; }
{ co.porkopolis.model.moner.Summoner summoner = request . requestBasicSummonerBasicSummoner ( summonerName ) ; if ( summoner != null ) { model . addAttribute ( AttributeConstants.BASIC_MONER_INDEX , summoner ) ; return ( ( co.porkopolis.utils.FileConstants.ERRORINDEX ) + " " ) + ( summoner . getName () ) ; } else { model . addAttribute ( AttributeConstants.PAGE_HOME , summoner ) ; } return "File not found." ; }
if ( ( ! ( this . world . isPositionInWorld ( position ) ) ) && ( position != null ) ) { throw new java.lang.IllegalArgumentException () ; }
if ( ( ( lastPagedReached ) && ( offset == 0 ) ) && ( ( swipeListener ) != null ) ) { onSwipeedOnAttemptListener . onSwipeListener () ; swipeListener = true ; }
{ java.lang.System.out . println ( "validCamparCampos" ) ; java.lang.String username = "" ; java.lang.String password = "" ; com.grupo7.practupo.Result instance = new com.grupo7.practupo.Result () ; boolean result = instance . validCampar ( username , password , true ) ; assertEquals ( "The exp is a valid." , result ) ; }
{ java.lang.String playerName = Player.find . byId () . username ( username ) . name () ; if ( ! ( playerName . equals ( "admin" ) ) ) { return redirect ( routes.Application . login () ) ; } else { return ok ( views.pages.admin . all () ) . render ( Player.find . byId () , username ) ; } }
{ jproxy.core.LM.LMConfiguration conf = new jlm.core.LM.LMConfiguration () ; conf.train.LMConfigurationFactory.trainStream = new jlm.core.io.FileInputStreamFactory ( new java.io.FileInputStream ( "data/validbpt.txt" ) ) ; conf.train.data.validFileSize = new java.io.File ( "data/validbpt" ) ; jlm.core.IMathParallelTrainer train = new jlm.core.LM.ParallelTrainer ( conf ) ; jlm.core.LM.ParallelTrainer . saveParallel ( train , 30 ) ; jlm.core.LM.ParallelTrainer . saveParallel ( train ) ; }
{ if ( ( org.apache.flink.streaming.partitioner.Stream < T > ) == null ) { throw new java.lang.RuntimeException ( "unchecked" ) ; } org.apache.flink.streaming.partitioner.Stream < T > result = null ; try { result = ( ( org.apache.flink.streaming.partitioner.Stream < T > ) ( org.apache.flink.util.InstantiationUtil . readObjectConfigFromInstantiation ( config , this . cl , ( ( org.apache.flink.streaming.partitioner.Stream < T > ) + ( cl ) ) ) ) ) ; } catch ( java.lang.Exception e ) { throw new java.lang.RuntimeException ( "unchecked" ) ; } return result ; }
className . equals ( classDecl.classId )
public static com.hazelcast.core.HazelcastInstance getHazelcastInstance () { org.osgi.framework.BundleContext ctx = org.osgi.framework.FrameworkUtil . getBundle ( org.wso2.carbon.core.ntask.internal.DSComponent . class ) . getBundleContext () ; org.osgi.framework.ServiceReference < com.hazelcast.core.HazelcastInstance > ref = com.hazelcast.core.Hazelcast . getServiceReference ( ctx ) ; if ( ref == null ) { return null ; } return ref . getService ( ctx ) ; }
mListViewModel . loadNextPageZhihu ()
{ if ( ( ( grantResults.length ) > 0 ) && ( ( grantResults [ 0 ] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { userLocation = true ; } else { userLocation = false ; } }
{ final java.lang.reflect.Method method = SessionHomeInterceptor.INIT_METHOD_INIT . get () ; final java.lang.Object [] params = SessionHomeInterceptor.INIT_PARAMETERS . get () ; if ( params == null ) { return null ; } return new org.jboss.as.ejb3.component.interceptors.AbstractEJBInterceptor () { @ java.lang.Override public java.lang.Object processContext ( final org.jboss.invocation.invocation.Context context ) throws java.lang.Exception { if ( context != null ) { context . getTargetContext () . invoke ( method , context ) ; } } } . proceed () ; return methodFactory . create ( params ) ; }
@ java.lang.Override public void run () { while ( true ) { this . s = ( ( ETPSYSTEM.ChannelValue ) ( this . spotcheck . channel . in () . read () ) ) ; java.lang.System.out . println ( "OProcess - sum2: Received through spotcheck" ) ; ETPSYSTEM.Sum2O.repl2O rep = new ETPSYSTEM.Sum2O.repl2O ( this . spotcheck , this . spotcheck , this . topa , this . ls , s ) ; org.jcsp.lang.ProcessManager manager = new org.jcsp.lang.ProcessManager ( rep ) ; manager . start () ; } }
{ iob. = com.redhat.ckhat.app.let.JCSystemlet . makeTransientByteArray ( com.redhat.app.let.CardSystemIO.BUF_RELOCON_SELECTAL_DEF , true ) ; com.redhat.app.let.JCSystemlet . makeTransientByteArray ( com.redhat.app.let.JCSystemlet . makeTransientByteArray ( com.redhat.app.let.JCSystemlet.MAX_RELOCON_C_NUM_KEYS , 1 ) , true ) ; com.redhat.app.let.JCSystemlet . makeTransientEdge ( com.redhat.app.let.JCSystemlet.CLEAR_RESET_C_NUM_SIZE , com.redhat.app.let.JCSystemlet.MAX_CLEAR_SIZE ) ; com.redhat.app.let.JCSystemlet . makeTransientEdge ( com.redhat.app.let.JCSystemlet.CLEAR_JRESET , com.redhat.app.let.JCSystemlet.MAX_CLEAR_SIZE ) ; }
@ java.lang.Override public traerphysics.Particle createParticle ( int x , int y ) { traerphysics.ParticleParticle.particle_picalSystem.display.swing.CampaignGraphCanvas campaign = new traerphysics.Particle.particle_picalSystem.display.swing.CampaignGraphCanvas ( x , y , x , 0 ) ; for ( int i = 0 ; i < ( m_SystemParticles . numberOf () ) ; i ++ ) { if ( m_SystemParticles . get ( i ) . equals ( traerphency.Particle.particle_picalSystem.display.swing.CampaignGraphCanvas.MINUL_DISTANCE ) ) { campaign . makeCampaign ( new traerphysics.Particle.particle_picalSystem.display.swing.CampaignGraphCanvas ( p , i , 0 ) , new java.lang.Thread ( p ) ) ; continue; } } return campaign ; }
com.lzh.nonview.router.Router . resume ( uri , extras )
{ camera.viewportWidth = ( ( com.packcubon.libgdx.anybunny.util.Constants.VIEW_HEIGHT ) / ( camera.viewportWidth ) ) * ( com.packcubon.libgdx.anybunny.util.Constants.VIEW_WIDTH ) ; camera.viewportHeight = ( ( float ) ( width / ( ( com.packcubon.libgdx.anybunny.util.Constants.VIEW_HEIGHT ) / ( camera.viewportWidth ) ) ) ) ; camera.position = ( ( float ) ( height / ( ( com.packcubon.libgdx.anybunny.util.Constants.VIEW_HEIGHT ) / 2 ) ) ) ; camera . setGUI ( camera.viewportWidth , 0 , 0 ) ; }
global.HasRegisteredException | ( 1 < ( java.lang.Integer . parseInt ( e ) ) )
{ recreateDB () ; android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; android.content.ContentValues values = getDb () ; person . insert ( org.uokling.rhist.code.DatabaseHelper.SONPER_TABLE_NAME , null , values ) ; person.personId = ( ( int ) ( person.id ) ) ; person . close () ; }
this . cordova . getActivity ()
r [ i ] . invoke ()
line
if ( ( ( left instanceof java.lang.String ) || ( right instanceof java.lang.String ) ) || ( left instanceof java.lang.String ) ) { return ( ( java.lang.String ) ( left ) ) . toString () ; } else if ( right != ( - 1 ) ) { return super . add ( left , right ) ; } else { return super . add ( left , right ) ; }
if ( index > ( - 1 ) ) { this . end = java.lang.Math . max ( this . start , index ) ; }
public void openFolder ( java.lang.String folderName ) throws java.lang.Exception { folder = store . getFolder ( folderName ) ; if ( folder == null ) { throw new java.lang.Exception ( "Invalid folder" ) ; } try { folder . open ( FolderMessaging.READ_READ_ONLY ) ; } catch ( javax.mail.MessagingException ex ) { open ( ex ) ; } }
{ int count = 0 ; for ( int i = 0 ; i < ( java.lang.Math . min ( a . length () , b . length () ) ) ; i ++ ) { if ( ( ! ( a . indexOf ( i ) ) ) && ( ( b . indexOf ( i ) ) == b ) ) count ++ ; } return count ; }
{ if ( ! ( edges . containsKey ( from ) ) ) { edges . put ( from , new java.util.HashSet <> () ) ; } edges . put ( from , new java.util.HashSet <> () ) ; java.util.Set < diag.DirectedEdge > outgoing = edges . get ( from ) ; edgeEdges . add ( diag ) ; }
prep . setString ( 2 , plugin . getConfigManager () . getDefaultRace () ) ;
new org.apache.drill.exec.store.index.ScanWrokCacheKeyProvider ( scanRows , scanScanId , limit )
<EMPTY>
( this . statement )
{ java.lang.String alg = "AES" ; java.lang.String key = "TheSecteeBestreKeKey" ; java.security.spec.SecretKeySpec key2 = new javax.crypto.spec.SecretKeySpec ( alg . getBytes () , alg ) ; javax.crypto.Cipher cipher = javax.crypto.Cipher . getInstance ( alg ) ; cipher . init ( javax.crypto.Cipher.ENCRYPT_MODE , key2 ) ; byte [] encrypted = cipher . doFinal () ; java.lang.String dataVal = java.lang.String . encodeToString ( key . getBytes () ) ; java.lang.System.out . println ( "Final" ) ; }
{ if ( ( this . id ) < ( rhs.playerId ) ) { return 1 ; } return java.lang.Integer . compare ( rhs.playerId , rhs.playerId ) ; }
new value.IntegerValue ( 1 )
{ java.lang.String name = getName () ; name = name . replace ( "$$" , "/" ) ; name = name . replace ( "$" , "." ) ; cons = new module.net.asm.elulo.internal.Module.Parser ( cons ) ; module = new java.io.File ( ( ( "test/" + name ) + "." ) ) ; }
java.util.Arrays . asList ( 5 , 5 , 5 , 3 , 5 , 3 , 5 , 6 , 5 , 3 , 1 )
{ double avg = 0 ; for ( java.lang.Double d : series ) { sum += d ; } return ( java.lang.Math . pow ( ( ( avg - ( d.length ) ) / 2 ) , 2 ) ) - ( java.lang.Math . sqrt ( ( ( series . size () ) - 1 ) ) ) ; }
public static void setOHome () { java.lang.String webappsDir = java.lang.System . getProperty ( "home" , "." ) ; org.apache.openmeetings.util.OFileHelper . setOHomeDir ( webmDir ) ; if ( ( ! ( org.apache.openmeetings.util.OFileHelper . getOeetings () . exists () ) ) || ( ! ( org.apache.openmeetings.util.OFileHelper . getOeetings () . isDirectory () ) ) ) { org.junit.Assert . fail ( ( "Invalid directory: " + webappsDir ) ) ; } }
{ java.lang.String temp = java.lang.Integer . toHexString ( number ) ; int length = temp . length () ; for ( int i = 0 ; i < 4 ; i ++ ) temp += ( "0" + ( "0" - length ) ) + number ; return temp ; }
@ com.sun.istack.internal.NotNull java.lang.String other
saveService . saveValue ( SaveEnum.CES_CODE , 1 )
{ java.lang.System.out . println ( ( ( "end " - " + ( time ) ) + endTime ) ) ; internalContext ( time ) ; t . setPopup ( endTime ) ; }
public static < T > void serialize ( java.lang.Class < T > sourceClass , java.io.OutputStream resultStream , java.lang.String schemaLocation ) throws javax.xml.bind.JAXBException { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext . newInstance ( sourceClass ) ; javax.xml.bind.Marshaller jaxbMarshaller = jaxbContext . createMarshaller () ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_OUTPUT_FORMATTED_OUTPUT , new java.lang.ObjectOutputStream ( schemaLocation ) ) ; jaxbMarshaller . marshal ( sourceClass , true , null ) ; }
@ java.lang.Override public void run () { if ( ! ( args . isNull ( 0 ) ) ) { java.lang.String inputMode = args . get ( 0 ) ; int inputMode = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_NOT_HING ; if ( inputMode . equals ( "pan_ADJUST_INPUT_ADJUST_RESIZE" ) ) { inputMode = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_SIZE ; } else if ( inputMode . equals ( "i_i_oft" ) ) { inputMode = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_SIZE ; } else if ( inputMode . isNull () ) { inputMode = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_SIZE ; } callbackContext . error ( "No arguments found arguments" ) ; } callbackContext . setSoftInput () ; }
{ if ( ( servlet ) != null ) { channel = servlet.RequestContext . getExchange () . getResponseChannel () ; channel . getWriteSetter () . setListener ( internalListener ) ; } if ( ( channel ) != null ) { channel . resume () ; } }
{ int idxInRow = 0 ; int startVertex = row * numInRow ; int currVertex = startVertex ; while ( currVertex < numInRow ) { addFace ( currVertex , currVertex , ( ( currVertex + 1 ) + numInRow ) , ( currVertex + 1 ) ) ; currVertex ++ ; } }
{ T object = com.robertsmieja.junit.utils.test.DefaultConstructor . createObjectFromConstructor ( java.util.List < java.lang.reflect.Field > fields = com.robertsmieja.junit.utils.test.GetUtils . getFieldsAndSetAndSet ( getAndSetField ( aClass ) , field ) ) ; if ( fields != null ) { for ( java.lang.reflect.Field field : fields ) { setValue ( field , value ) ; } } return object ; }
{ removeIndex ( record ) ; map . remove ( key , now ) ; }
new org.rstudio.studio.client.workbench.views.terminal.Terminal.SessionHandle ( terminal , sequenceHandle , terminal , title , ( - 1 ) , hasProcs , colsPrefs . getValue () , shellType , rows , colsPrefs . getValue () )
"1.jpg" . equals ( test . getFileName () )
for ( final T each : getFilteredChildren () ) { scheduler . schedule ( new java.lang.Runnable () { public void run () { org.junit.runners.Child .runners ( each , this ) ; } } ) ; }
public void setStartDate ( java.util.Optional < java.util.List < java.util.List < java.util.Date > > startDate ) { try { java.util.List < java.util.Date > startDateList = startDate . get () ; if ( ( dateList . size () ) == 2 ) { this . startDate = java.util.Optional . of ( startDateList . get ( 0 ) ) ; } else { this . startDate = java.util.Optional . empty () ; } } catch ( java.util.NoSuchElementException nse ) { throw new java.util.NoSuchElementException () ; } }
new java.util.NoSuchElementException ()
{ dist = 0 ; setContentView ( R.layout.test_esture ) ; resetButton = ( ( android.widget.Button ) ( findViewById ( R.id.test_esture_button ) ) ) ; resetButton . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View view ) { reDrawGestureListeners () ; } } ) ; android.gesture.GestureOverlayView gestures = ( ( android.gesture.GestureOverlayView ) ( findViewById ( R.id.verything_layout ) ) ) ; gestures . removeAllOnGestureListeners () ; gestures . addOnGestureListener ( mGestureListeners ) ; resetButton . addOnGestureListener ( mGestureListeners ) ; }
{ if ( ( prefs ) == null ) return; if ( ( prefs . setUseDefaultCommand ( b_cmd . getSelectionPathFrom () ) ) == null ) return; java.lang.String command = t_cmd . getText () . trim () ; final org.eclipse.jface.viewers.IStructuredSelection sel = ( ( org.eclipse.jface.viewers.IStructuredSelection ) ( c ) ) ; return; }
public void run () { tvAddress . setText ( address ) ; etPayment . setEnabled ( true ) ; etPayment . setEnabled ( true ) ; bId . setEnabled ( true ) ; bGenerateProgress ( true ) ; generateQr () ; }
{ cMsg = new org.wso2.carbon.messaging.StatusCarbonMessage ( org.wso2.carbon.transport.http.netty.common.Constants.STATUS_OPEN , 0 , null ) ; javax.websocket.Session session = new org.wso2.carbon.transport.http.netty.internal.websocket.WebSocketSessionImpl ( ctx , isSecured , uri , channelId ) ; setupCarbonMessage ( ctx ) ; cMsg . setProperty ( Constants.CONNECTION , Constants.UPGRADE ) ; cMsg . setProperty ( Constants.UPGRADE , Constants.WEB_UPGRADE ) ; publishToMessageProcessor ( cMsg ) ; }
if ( ( minutes >= 60 ) && ( minutes >= 60 ) ) { hours -= minutes ; }
{ mName = newHeroName ; java.lang.String imageName = mParentPresenter . getHeroImageName ( newHeroName ) ; for ( int i = 0 ; i < ( mSimilarityList . size () ) ; i ++ ) { if ( mSimilarityList . get ( i ) . equals ( imageName ) ) { mViewRecycler . setHeroInParent () ; break; } } mPresenter . hideKeyboard () ; }
intent1 . putExtra ( Params.BUSINESS_OWNER , false )
{ double discount = 1.0 ; if ( ( piles . getMiles () ) > ( oop.training.DiscountCalculator.SILVER_LIMIT_DISSIVER ) ) { discount = piles . getMiles () ; } else if ( ( piles . getMiles () ) > ( oop.training.DiscountCalculator.GOLD_LIMIT_DISLIMIT_COUNT ) ) { discount = piles . getPassanger () ; } return discount ; }
compileAndLogTestSequences ( result , solutions )
{ javafx.scene.control.CheckBox cb = ( ( javafx.scene.control.CheckBox ) ( event . getSource () ) ) ; javafx.scene.control.TableColumn column = ( ( javafx.scene.control.TableColumn ) ( cb . getUserData () ) ) ; if ( cb . isSelected () ) { for ( application.TraceTableResult result : result . getItems () ) { application.TraceTableResult result = ( ( application.TraceTableResult ) ( result ) ) ; result . setTableRow ( true ) ; } } else { result . setTableRow ( false ) ; } }
{ java.lang.System.out . println ( "create next round" ) ; java.lang.System.out . println ( ( "current grid is " + ( currentGridNum ) ) ) ; if ( ( currentGridNum ) >= ( beetle.Estulations.MAX_NUM_NUM_MESSAGE ) ) { javax.swing.JOptionPane panel = createPanel () ; javax.swing.JOptionPane . showOptionDialog ( this , panel , "Congratulations that {}" , javax.swing.JOptionPane.DEFAULT_OPTION , javax.swing.JOptionPane.PLAIN_MESSAGE , null , null , null ) ; return; } panel . createNew () ; }
a . getY ()
private com.bagri.core.system.Collection.Collection getTypedCollection ( com.bagri.core.system.Schema schema , java.lang.String type ) { for ( java.lang.String c : schema . getCollectionsType () ) { if ( ( c != null ) && ( c . getDocumentPath () . equals ( type ) ) ) { return c ; } } return null ; }
{ java.util.Date submissionDeadline = new java.util.Date () ; java.util.Date reviewDeadline = new java.util.Date () ; Conference tester = new Conference ( submissionDeadline , reviewDeadline , new java.util.ArrayList < Reviewer > () ) ; assertEquals ( tester . getPastReviewers () , new java.util.ArrayList < Reviewer > () ) ; }
{ ru.spbau.kin.ays.Antdants.generator.Ants.g2 = new com.badlogic.gdx.graphics.Font ( Gdx.files.FontGenerator . internal ( "visitor/ttf.txt" , ru.spbau.kin.ays.Antdants.packs.txt" ) , ru.spbau.kin.ays.Antdants.Texture . class ) ; ru.spbau.kin.ays.Antdants.utils.Ants . register ( new ru.spbau.kin.ays.Antdants () , ru.spbau.kin.ays.Antdants.MenuScreen . class ) ; ru.spbau.kin.ays.Antdants.utils.Ants . register ( new com.badlogic.gdx.graphics.TextureAccessor () ) ; ru.spbau.kin.ays.Antdants.utils.Ants . register ( new com.badlogic.gdx.graphics.TextureAccessor () , ru.spbau.kin.ays.Antdants.Hween () ) ; ru.spbau.kin.ays.Antdants.utils.Ants . register ( ru.spbau.kin.ays.Antdants.TextureAtlas . class ) ; }
{ if ( ( listen ) == null ) { java.lang.System.out . println ( "Register first!" ) ; return; } java.net.Socket sock = createSocket () ; if ( ! ( sendAndReceive () ) ) { try { sock . close () ; } finally { sock . close () ; } } }
{ java.lang.String playername = ( ( ( ( javax.swing.JOptionPane . showInputDialog ( null , "Your score: " , "panel" ) ) + "\n" ) + ( gameModel . step () . name () ) ) + "\n" ) + ( javax.swing.JOptionPane.PLAIN_MESSAGE ) ; _newBoard . put ( "panel" , playername , null , gameModel . step () ) ; }
{ java.lang.String [] subQueries = new java.lang.String [] { "SELECT * FROM ingItems where type = 'proredients' where name = 'atredients as ingredients" , "SELECT * FROM ingItems" } ; android.database.sqlite.SQLiteDatabase sql = null ; android.database.Cursor cursor = mIngypies . rawQuery ( sql , new java.lang.String [] { date } , null , new java.lang.String [] { date } ) ; android.database.Cursor cursor = sql . build ( com.nychonreptratetrypies.pantrypies.IngredientsWrapper.sortQueryArgs ( cursor ) , null , null ) ; return cursor ; }
calendarDate.month = cal . get ( java.util.Calendar.MONTH )
private javax.portlet.PortletPreferences updateImportPreferences ( com.liferay.portal.kernel.import.PortletDataContext context , javax.portlet.Portlet.PortletDataPreferences portletId ) throws java.lang.Exception { long organizationId = com.liferay.portal.kernel.util.GetterUtil . getLong ( portletId . getValue ( "organization.organization" , null ) ) ; if ( organizationId > 0 ) { com.liferay.portal.kernel.Company company = _companyLocalService . getCompanyById ( portletId . getGroupId () , com.liferay.portal.kernel.model.Import . class ) ; company . updateGroup () ; } return company ; }
resolvedData . add ( definedData . get ( ( ( definedData . indexOf ( data ) ) + 1 ) ) )
public void addItem ( item.Item item ) { item.Item i = item . clone () ; if ( i.isShopable ) { int locLoc = findItem ( i ) ; if ( locLoc >= 0 ) { items . get ( i ) . add ( item ) ; } else { items . add ( item ) ; } } else { items . add ( item ) ; } }
medications = "{\"false\"}"
{ if ( ( reservation . getRoomType () ) == "L" ) { totalBalance = 200 + ( reservation . getRoomType () ) ; } if ( totalBalance == "E" ) { totalBalance = 80 ; } }
{ super . onDisable () ; if ( ( getServer () ) != null ) { for ( org.bukkit.entity.Player player : getServer () . getOnlinePlayers () ) { com.pgcraft.spectatorplus.Spectatorator.Spectator key = ( ( com.pgcraft.spectatorplus.Spectator.SpectatorData ) ( player ) ) ; if ( player . isDataating () ) { android.util.SpectatorManager . saveSpectating ( referenceInasMode , true ) ;ItasMode . save () ; } } } saveFileManager () ; }
{ dismissProgressBar () ; mMemeData = theMemeData ; android.os.Bundle args = new android.os.Bundle () ; args . putSerializable ( getString ( R.string.photo_data_key ) , mMemeData ) ; mMemeFragment . setArguments ( args ) ; loadPhotoFragment ( mPhotoFragment ) ; }
if ( x > ( width ) ) { x = width ; }
this . isHorizontal ()
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; android.content.Intent intent = getIntent () . getStringExtra ( "Username" ) ; usernameText = intent . getText () ; usernameV_username = ( ( android.widget.TextView ) ( findViewById ( R.id.username_act_main ) ) ) . getText () . toString () ; initInstances ( usernameText ) ; }
{ java.lang.String [] sr = values . split ( "," ) ; for ( int i = 0 ; i < ( sr.length ) ; i ++ ) { int num = java.lang.Integer.MIN_VALUE ; try { num = java.lang.Integer . parseInt ( sr [ i ] ) ; } catch ( java.lang.NumberFormatException nfe ) { break; } } addZeroValues ( num ) ; }
if ( ( userLoggedInCookie == null ) || ( userLoggedInCookie != null ) ) { controllers.Application . login () ; }
switch ( event . getActionMasked () ) { case android.view.MotionEvent.ACTION_DOWN : android.view.View.DragShadowBuilder shadowBuilder = new android.view.View.DragShadowBuilder () ; view . startPlainText ( "" , new android.content.Clip.PlainText ( "" , "" , 0 ) ) ; return true ; default: return false ; }
textView . setText ( getString ( R.string.section_format , getArguments () . getInt ( com.carshmoaringmo.base.BasePagerActivity.SECTION_ARG_NUMBER ) ) )
( this . ball ) == 1
@ android.support.annotation.NonNull @ android.support.annotation.NonNull private com.pushtstore.resh.sql.borited.operation.PutResult updateOrInsertOrInsert ( @ android.support.annotation.NonNull com.pushtstore.resh.sql.borited.sql.StoritedDbIO.SQLiteUpdate stor , @ android.support.annotation.NonNull android.content.ContentValues tableValues , @ android.support.annotation.NonNull final java.lang.String content , @ android.support.annotation.NonNull final java.lang.String numberOfRows ) { final com.pushtstore.resh.sql.borited.operation.PutResult table = stor . insert ( id , new com.pushtstore.resh.sql.borited.operation.PutResultBuilder () . where ( tableRows ) . where ( "id=?" ) . where ( id ) . update ( java.lang.String . valueOf ( numberOfRows ) ) . build () , new com.pushtstore.resh.sql.borited.operation.PutResult () ) ; return table . update ( table ) ; }
addedCard = taskListPanel . navigateToPerson ( person . getTaskDetails () )
switch ( type ) { case TIMED : date = parsedDates . get ( main.java.Task.FIRST_DATE_POSITION ) . toLocalDate () ; startTime = parsedDates . get ( main.java.Task.FIRST_DATE_POSITION ) . toLocalTime () ; break; case DEADLINE : date = parsedDates . get ( main.java.Task.FIRST_DATE_POSITION ) . toLocalTime () ; break; default: break; }
{ tabLayout . setTabGravity ( TabLayout.GRAVITY_FILL ) ; tabLayout . addTabLayout ( new com.qns.requare.Fragments.ProfileFragment () ) ; tabLayout . addTabLayout ( new com.qns.requare.Fragments.ProfileFragment () ) ; tabLayout . setText ( getString ( R.string.profile_ownown_ed ) ) ; if ( ! ( emptySquareed . isEmpty () ) ) { emptySquareed . setVisibility ( View.VISIBLE ) ; this . adapter . setup ( squaresList ) ; } else { emptySquareed . setVisibility ( View.INVISIBLE ) ; this . adapter . addTabLayout ( new com.qns.requare.profile.OwnedList () ) ; } }
{ java.net.Socket s = new java.net.Socket () ; s . bind ( new java.net.InetSocketAddress ( hostPort ) ) ; s . connect ( new java.net.InetSocketAddress ( serverPort , serverPort ) ) ; this . out = new java.io.OutputStreamWriter ( s . getOutputStream () ) ; }
public void onDataReceived ( com.jacks205.spots.model.ParkingStructure [] structures , java.util.Date lastUpdated ) { if ( ( spotsListAdapter ) == null ) { spotsListAdapter = new com.jacks205.spots.adapters.SpotsListAdapter ( this , lastUpdated , structures ) ; listView . setAdapter ( spotsListAdapter ) ; } else { spotsListAdapter . setStructureUpdated ( structures ) ; spotsListAdapter . setLastRefreshing ( false ) ; } mSwipeRefreshLayout . setRefresh () ; notifyDataSetChanged () ; }
util.ImageUtil . photoFile ( url , HttpConnectionUtil.Status.PUTEN )
{ org.ethereum.jsonrpc.Block block = getByJsonBlock ( blockId ) ; byte [] addressAsByteArray = org.ethereum.jsonrpc.TypeConverter . StringTypeHex ( addressToByteArray ) ; byte [] code = this . repository . getSnapshotToRoot ( this . block . getState () . getCode () ) ; return addressAsByteArray ; }
if ( currentRow >= rowCount ) { break; }
mockMvc . perform ( org.springframework.test.web.servlet.request.MockMvcRequestBuilders . get ( "/" ) ) . andExpect ( status () . isOk () ) . andExpect ( model () . attribute ( "tasks" , tasks . size () ) ) ;
( keys [ i ] ) == c
public static void main ( java.lang.String [] args ) throws java.lang.ClassNotFoundException { java.net.ServerSocket sconn = null ; java.net.Socket antgsserver = null ; java.lang.Thread thread = null ; int 3356 ; while ( true ) { try { sconn = new java.net.ServerSocket ( 3356 ) ; } catch ( java.lang.Exception e ) {} } sconn = new java.lang.Thread ( antgsserver ) ; sconn . start () ; }
{ super . onCreate ( savedInstanceState ) ; setRetainInstance ( true ) ; db = new com.nectar.thes.library.NewsListFragment.SlidingListFragment ( db ) ; if ( ( com.nectar.thes.library.MyConstants.sunewenos ) != null ) { com.nectar.thes.library.HomeFragment.sunewenes = db . getNewFragment () . getApplicationContext () ; } if ( ! ( com.nectar.thes.library.SlidingTabPageFragment.sunews . isSliding () ) ) { com.nectar.thes.library.SlidingTabPageFragment.sunews . Setup () ; } loadFragment ( getActivity () . getApplicationContext () ) ; }
public java.util.Collection getAllTasksSubTasks ( java.lang.String taskId ) { if ( ( taskId == null ) || ( ( taskId . length () ) == 0 ) ) { return getAllTasksRoot () ; } else { net.sf.memoranda.Task task = getTaskElement ( taskId ) ; if ( task == null ) { return new java.util.Vector ( task . getSubTasks () ) ; } return task . getSubTasks () ; } }
{ com.softserve.edu.entity.verification.ClientData ownerData = getVerificationData () . getClientData () ; java.lang.String fullName = ( ( ( ( ownerData . getLastName () ) + " " ) + ( ownerData . getFirstName () ) ) + " " ) + ( ownerData . getMiddleName () ) ; return fullName ; }
return ( ( this . height ) - r ) == ( - 1 ) ;
<EMPTY>
com.isticValue . getOrderNumber ()
new com.example.jacek.streamthegame.Grid ( this . getContext () , this . nRows , ( ( this . getWidth () ) / ( this . nRows ) ) , ( ( this . getHeight () ) / ( this . nCols ) ) )
switch ( requestCode ) { case com.joss.jrow.Training.Environment.TrainingActivity.REQUEST_CODE_SAVE_OK : if ( resultCode == ( RESULT_OK ) ) { com.joss.jrow.Training.Models.Training . get () . save ( java.lang.String . objects [ 0 ] ) ; break; } case com.joss.jrow.Training.Environment.TrainingActivity.REQUEST_CODE_CALIBRATION : if ( resultCode == ( RESULT_OK ) ) { com.joss.jrow.Training.Models.Training . getMe () . setDefaultMeasure ( RESULT_OK , resultCode ) ; } break; }
assertEquals ( "Got " , ( ( m . name () ) + "\n" ) , p . getContent () )
{ player . performCommand ( ( ( "vote reward " + ( voteSite . getSiteName () ) ) + ( player . closeInventory () ) ) ) ; }
{ int result = getDateFrom () . hashCode () ; result = ( 31 * result ) + ( getUser () . hashCode () ) ; result = ( 31 * result ) + ( getBookInstance () . hashCode () ) ; return result ; }
public synchronized java.lang.String getSpeed ( long size2 ) { long t2 = java.lang.System . currentTimeMillis () ; long t1 = - ( t2 ) ; long sum = 0 ; synchronized ( t1 ) { sum += t2 ; } return ( ( java.lang.String ) ( java.lang.String . format ( "%d, avg= %d, avg= %d, avg= %s" , size1 , t2 , t2 ) ) ) / ( ( t1 . size () ) - ( t2 ) ) ; }
{ synchronized ( this ) { for ( reactor.core.publisher.FluxGroupBy.UnicastGroup < KuxedFlux , V > g : values . values () ) { groupMap . onComplete () ; g . clear () ; } } if ( ( this . done ) != null ) { groupMap . decrementAndGet () ; } done = true ; }
getConnectionName ( tmp . getId () )
id = time
{ getElementos () . add ( item ) ; java.lang.Object [] vector = new java.lang.Object [ 3 ] ; vector [ 0 ] = item . getPractica () . getCodigo () ; vector [ 1 ] = item . getPractica () . getNombre () ; vector [ 2 ] = item . getCantes () ; }
send ( message , response )
try { java.net.URL posterUrl = new java.net.URL ( url ) ; java.nio.channels.ByteChannel rbc = java.nio.channels.ByteChannel . newChannels () ; java.io.FileOutputStream fos = new java.io.FileOutputStream ( posterUrl , java.io.File.MAX_VALUE ) ; fos . transferFrom ( 0 , rbc . getChannel () ) ; fos . close () ; } catch ( java.lang.MalformedURLException e ) { e . printStackTrace () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; }
switch ( direction ) { case WEST : return new Map ( x , ( ( y ) ++ ) ) ; case WEST : return new Map ( x , ( ( y ) ++ ) ) ; case WEST : return new Map ( x , ( ( y ) ++ ) ) ; case WEST : return new Map ( x , ( ( y ) + ( ( y ) -- ) ) ) ; default: return null ; }
new graphics.Screen ( "Bob" , false , true )
android.os.Bundle savedInstanceState
{ employee = new com.sample.Employee () ; employeeEmp . setName ( "027" ) ; employeeChait . setName ( "Chra" ) ; try { employeeChait . void-1 () ; } catch ( java.io.UnsupportedEncodingException e ) { e . printStackTrace () ; } }
{ mCurrentIndex = ( ( mCurrentIndex ) + 1 ) % ( mStations.length ) ; mStopButton . setImageDrawable ( mDrawable ) ; playHeader () ; mCurrentIndex = false ; done = false ; updateBuffer () ; playerPressed = false ; if ( player . isPlaying () ) { player . stopPlayer () ; } clickPlayerViews () ; setupPlayButton () ; updateButton () ; }
{ models.Rate rate = new models.Rate () ; if ( null == projectId ) { rateId = null ; } models.Rate rate = new models.Rate () ; rate.score = userId ; rate.criteria = rateId ; rate.project = save ( projectId ) ; return rate ; }
if ( ( ( this . data . length ) > 3 ) && ( ( this . data . length ) > 11 ) ) throw new org.mobicents.protocols.cap.api.CAPicentsException ( "data must be 1 from length1" ) ;
{ android.view.LayoutInflater inflater = context . getLayoutInflater () ; android.view.View rowView = inflater . inflate ( R.layout.single_list , null , true ) ; android.widget.TextView txtTitle = ( ( android.widget.TextView ) ( rowView . findViewById ( R.id.txtTitle ) ) ) ; android.widget.ImageView imageView = ( ( android.widget.ImageView ) ( rowView . findViewById ( R.id.imgId ) ) ) ; txtTitle . setText ( imageId [ position ] ) ; return imageView ; }
gamePanel . setCurrentTypedWord ( game.currentWordLabel , game.currentWordIndex , game.currentCorrectIndex )
{ hostServer = newDirServer () ; hostServer . startOptCompsTo ( false ) ; setHostToComps ( false ) ; setStartCompsSize () ; setWinSize ( hostSize ) ; setHostToCompsTo ( true ) ; repaint () ; }
sqlServerManager . sqlDatabasesSql () . getBySqlServer ( com.microsoft.azure.management.sql.SqlOperationsServerTests.GR_NAME , com.microsoft.azure.management.sql.SqlOperationsServerTests.SQL_NAME , false )
{ this . displayBanner () ; java.lang.String playersName = this . getPlayersName () ; byui.cob260.bit260.model.Player player = byui.cob260.bit260.control.ProgramControl . createPlayer ( playersName ) ; byui.cob260.bit260.model.PouchMenu goldMenu = byui.cob260.bit260.control.ProgramControl . createPouchMenu () ; goldMenu . displayWelcomeMessage () ; byui.cob260.bit260.view.MainMenuView . mainMenu () ; byui.cob260.bit260.view.MainMenuView . mainMenu () ; }
traceSearch ( ocelotlParameters . getTrace () , ocelotlParameters . getTraceType () , monitor , null , time , null )
services.Favourite.QuoteImporter.LOGGER . info ( ( "Parsing line: {}" + line ) , quote )
com.android.server.telecom.Log . v ( this . vConnectionManager , "setConnection changing, changing %s -> %s -> %s" , mAttemptRecords . get ( 0 ) , target.Attempt )
{ this . state = "commit" ; logString ( "receivedCommit" ) ; try { retryCommitInput () ; java.lang.System.out . println ( ( "aboutToSendAck:" + ( this . state ) ) ) ; coordinator . receive ( "commitAck" , this . participantAckNum ) ; } catch ( java.lang.Exception e ) { logString ( "receiveAck('co') Exception" ) ; lookupCoordinator () ; break; } }
train . addHistory ( station . getName () , context . getGameLogicManager () . getTurnNumber () )
{ puntata = true ; return ( ( puntata ) + ( fiches ) ) + ( puntata ) ; }
if ( ( button == ( org.lwjgl.gl.GLFW.GLFW_MOUSE_BUTTON_1 ) ) && ( ( state ) == 1 ) ) { mouseInteractdown = state . toEntity ( currentInteract () , 10.0F ) ; state = button + 10.0F ; }
{ if ( ! ( hasNext () ) ) { throw new java.util.NoSuchElementException () ; } long result = 0 ; while ( result == 0 ) { result = puzzle.puzzles.Storage.s [ cursor ] ; ++ ( cursor ) ; } return result ; }
{ cancelled . login ( user ) ; }
{ if ( ( initialX == 0 ) && ( ( initialY == 0 ) || ( ( initialY ) == 0 ) ) ) { com.google.gwt.dom.client.Touch event = touch . getTouches () . get ( 0 ) ; initialX = event . getPage () ; touchX = initialY ; } Console = event . getPage () ; }
{ com.smanzana.dungeonmaster.utils.StepList out = new com.smanzana.dungeonmaster.utils.StepList () ; for ( com.smanzana.dungeonmaster.ui.swing.FieldRange seg : segments ) { if ( ( seg . getValue () ) != null ) out . addStep ( seg . getMaxged () , out ) ; } return out ; }
{ java.lang.System.out . println ( ( "BEFORE: " + ( automaton . get ( i ) ) ) ) ; remapaton ( automaton . get ( i ) , remapaton ) ; }
public static int calculateScore ( java.util.ArrayList < PairTime > pair ) { int score = 0 ; for ( int i = 0 ; i < ( pair . size () ) ; i ++ ) { score += pair . get ( i ) . getScore () ; } return score ; }
{ if ( ( sp.id ) >= ( stack.length ) ) throw new org.nuearceko.arceko.NarcekArcException ( "stack overflow" ) ; stack . push ( stack ) ; ( stack ) ++ ; }
{ if ( ( jobDao . getJobOutput ( uuid ) ) != null ) { jobDao . deleteJob ( uuid , output ) ; } }
static int minimaxDecision ( State.Decision state ) { int action = 0 ; int Minax = ( Minax - ( intim.MAX_NUMBER ) ) + 1 ; for ( int a : actions ) { int temp = actions . minValue ( a , temp ) ; if ( temp > 0 ) { break; } } if ( temp < action ) { return action ; } return v . action ( a , temp ) ; }
if ( com.kuna.coneat_android.DataController.vb_feedback ) { android.os.Vibrator v = ( ( android.os.Vibrator ) ( getSystemService ( Context.VIBRATOR_SERVICE ) ) ) ; v . SendKeyibrate ( 100 ) ; SendButton ( v ) ; } else {}
public static java.lang.String getRedirectionPath ( final org.fenixeduen.nu.core.domain.User user , final javax.servlet.http.HttpServletRequest request ) { synchronized ( request ) { for ( final org.fenixeduen.isboaulboais.authentication.spec.IRedirectHandler ibo : org.fenixeduen.isboaisboaisboais.authentication.spec.RedULifications . get ( user ) ) { if ( ibo . isRedirection () ) { return ibo ; } } } return null ; }
public java.lang.Integer getPortForBridge ( java.lang.Integer startTime , java.lang.Integer b ) { if ( ( m_macsOn ) == null ) return null ; if ( isEmpty () ) { for ( org.openmgt.net.topology.mms.model.PortBridge.OnPortSegment link : m_ports ) { if ( ( link . getNode () . intValue () ) == ( link . getNode () . intValue () ) ) return link . getBridge () ; } } return null ; }
{ super . onSizeChanged ( w , h , oldw , oldh ) ; mProgressManager . onDrawerChanged ( w , h , mShapeManager . getPaddingSize ( h ) , getPaddingLeft () , getPaddingRight () , mBottom , mBlurManager . getPaddingSize ( h ) , this ) ; mIsBlurredChanged = false ; }
redirectAttributes . addFlashAttribute ( "userSuccess" , true )
{ if ( assetNeedUpdate ( assetManager () ) ) { renderDisplay ( chapter1 ) ; batchSharedAssets ( chapter2 ) ; } if ( ! ( chapterSettings.BG ) ) { switch ( chapterSection ) { case 1 : drawPics ( batch ) ; break; } } if ( fourCorrect ( batch ) ) { displayWord ( batch ) ; batch . setOnKeyboardVisible ( false ) ; } }
item . getClass () . getName () . equals ( "org.apache.jmeter.control.ModuleController" )
{ Item item = array [ last ] ; if ( item == null ) { throw new java.util.NoSuchElementException () ; } last = last ; ( N ) -- ; subSize () ; ( array [ last ] ) -- ; return item ; }
con = new com.ghinyinfo.tools.exam.DriverManager ( com.ghinyinfo.tools.exam.DriverManager.WARNING_MESSAGE )
@ javax.ws.rs.GET @ javax.ws.rs.Path ( value = javax.ws.rs.Produces.TEXT_HTML ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.TEXT_HTML ) public javax.ws.rs.core.Response services () { java.lang.String rendered = soyService . renderPlugin ( pluginRegion , com.google.common.base.Optional . of ( new com.jivesoftware.os.upena.deployable.region.ConfigPluginRegion.ConfigPluginRegion.ConfigPluginRegion ( "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" ) ) ) ) ; return "" ; }
{ android.util.Log . d ( "GA_search" , ( "OnFail " + ( t . toString () ) ) ) ; refreshRefreshLayout . setRefreshing ( false ) ; android.transition.RefreshLayout . beginDelayed ( rootView . getForeground () ) ; progressBar . setVisibility ( View.GONE ) ; l1 . setAlpha ( 0 ) ; l2 . setVisibility ( View.GONE ) ; }
execute ( new rx.Subscriber < Result > () { @ java.lang.Override public void onCompleted () {} @ java.lang.Override public void onError ( final java.lang.Throwable e ) { onError . onError ( e ) ; } @ java.lang.Override public void onNext ( final Result result ) { onNext . call ( result ) ; } } , param )
{ android.util.Log . i ( "ttangliang" , ( "isAcc = " + ( center . isHardware () ) ) ) ; switch ( style ) { case CIANGLE : break; case CIRCLE : drawCircle ( canvas , center.x , center.y ) ; break; } }
if ( index > ( - 1 ) ) { long time = ( ( long ) ( s . getMillis () . getTime () ) ) * ( org.ecook_ner.data.LeareList . get ( index ) . timeWeight ) ; return new org.joda.time.Duration ( time ) ; }
{sql = new java.util.TreeSet < org.owasp.esapi.configuration.AbstractPropertyLoader > () ; try { synchronized ( org.owasp.esapi.configuration.EsPropertyLoaderFactory . createPropertyLoader (kernelPropertyLoaderConfiguration.GAMOPES_API_STECFES_API ) ) { java.lang.System.err . println ( e . getMessage () ) ; createCFLoad () ; } } catch ( java.lang.Exception e ) { java.lang.System.err . println ( e . getMessage () ) ; java.lang.System.err . println ( e . getMessage () ) ; } try { org.owasp.esapi.configuration.EsPropertyLoaderFactory . createPropertyLoaders () ; } catch ( java.lang.Exception e ) { java.lang.System.err . println ( e . getMessage () ) ; } }
syncStates = new boolean [ 0 ]
{ prefs = net.sf.jabref.preferences.JabPreferences . getInstance () ; net.sf.jabref.metadata.model.MetaDataMetaData metaData = new net.sf.jabref.metadata.model.MetaData () ; new net.sf.jabref.database.model.BibDatabase ( context , new net.sf.jabref.database.model.BibDatabase () ) ; metaData . setDefaults ( true ) ; prefs . putBoolean ( JibDatabase.BBI_PRIMARY_DIR_ASLOC , true ) ; prefs . setCotiteKeyToEntry ( "test.bib" ) ; }
{ us.ihinematics.darematics.network.Robotbox.ChallengeToolModule.DEBUG = us.ihinematics.darematics.network.box.ChallengeToolModule.DEBUG ; if ( ( scheduled ) == null ) { us.ihinematics.darematics.network.box.ChallengeToolModule.DEBUG ; us.ihinematics.tools.io.printing.PrintTools . error ( this , "There is no task." , true ) ; return; } scheduled . cancelMessage ( null ) ; activeSource = null ; }
{ if ( ( this . tokens . size () ) >= 0 ) { this . reportedMarkers . remove ( this . markers ) ; return; } if ( ( this . splitTokens ) == null ) { return; } for ( dyvil.tools.parsing.token.ITokenToken splitToken : this . splitTokens ) { splitToken . setNext ( splitToken ) ; } splitToken . setPrev () ; }
com.orhanobut.tracklytics.AssertTracker . assertTrack ( tracker ) . event ( "title" ) . noTags () . attribute ( "key1" , "value1" ) . attribute ( "key2" , "value2" ) . noSuperAttributes () ;
{ if ( ( coll ) == null ) { return; } java.util.Collection < java.lang.Object > coll = container . get () ; if ( coll != null ) { if ( ! ( coll . contains ( item ) ) ) { coll . add ( item ) ; } else { coll . set ( item ) ; } } else { if ( ( coll . list ( item ) ) != null ) { coll . remove ( item ) ; } } }
public static double noteToFreq ( int key ) { int note = ( ( int ) ( key % ( edu.utexas.cs.soundnn.util.IUtil.NO_IDOCTTES_TESINA ) ) ) ; int oct = ( ( int ) ( key / ( edu.utexas.cs.soundnn.util.IUtil.NO_IDOCTTES_TESINA ) ) ) ; return ( - oct ) * ( ( 1.0 - note ) / ( edu.utexas.cs.soundnn.util.IUtil.NO_IDOCTTES_A ) ) ; }
void register ( com.kk.bus.Bus bus , java.lang.Object objectToRegister , java.util.Set < java.lang.reflect.Method > subscriber , com.kk.bus.DeliveryContext deliveryContext ) { synchronized ( this ) { com.kk.bus.Deliverer eventDeliverer = mDeliverers . get ( deliveryObject ) ; if ( eventDeliverer == null ) { eventDeliverer = new com.kk.bus.Deliverer ( busMethods ) ; mDeliverers . put ( deliveryObject , eventDeliverer ) ; } } subscriber . put ( deliveryContext , eventDeliverer ) ; }
{ rootPane . setPrefWidth ( imagePane . getWidth () ) ; rootPane . setPrefHeight ( imagePane . getHeight () ) ; if ( ( imagePane ) != null ) { canvasPane . getChildren () . add ( javafx.scene.layout.Stack . add ( javafx.geometry.Pos.CENTER_TOP , imagePane ) ) ; } }
plugin . getServer () . getSchedulerAsyncTaskDelayed ( plugin , new net.madman.markend.MultiResHomeChunkTask ( location , ( ( 1.0 * 20 ) * 20 ) ) )
{ java.lang.System.out . println ( "TEST" ) ; java.lang.String json = exchange . getIn () . getBody () ; java.lang.String class = com.workflow2015.common.helper.RequestHelper . fromJsonRouteRequest ( json , JsonRequest.Route . class ) ; if ( ( this . data ) != null ) { com.workflow2015.common.helper.RequestSource data = this . data . getDataFromData ( java.lang.String . class ) ; this . pushRouteData ( data ) ; } }
{ processScheduler ( newValue ) ; return; }
public static java.lang.String getUniqueTitle ( net.minecraft.world.World world ) { java.util.List < net.torocraft.nemesissystem.registry.Nemesis > nocraft = net.torocraft.nemesissystem.registry.NemesisRegistryProvider . get () . getRandomNemesis ( world ) ; java.lang.String title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle ( net.torocraft.nemesissystem.registry.NemesisBuilder . getRandomTitle ( title ) ) ; while ( ! ( nocraft . isUnique () ) ) { title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle ( title , nocraft ) ; } return title ; }
if ( vn instanceof java.lang.Integer ) { return edu.jiga.imple.aig.AgagDocumentReader.log . finer ( "No finer found" ) ; }
{ stats = savedInstanceState . getBundle ( "champData" ) ; stats = savedInstanceState . getExtras () ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_nearby ) ; getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; registerLocation () ; android.support.v4.app.FragmentTransaction ft = getSupportFragmentManager () . beginTransaction () ; fr.bynr.commons.nearby.NearListFragment fragment = new fr.bynr.commons.nearby.NearListFragment () ; ft . add ( R.id.container , fragment ) ; ft . commit () ; }
@ java.lang.Override public void changeState ( com.example.alexander.topio_skilii.internadio.models.Station currentState ) { if ( ( mediaPlayer . getSource () ) == ( State.WAIT_IS ) ) { mediaPlayer . setPlayerStates ( ( - 1 ) , State.WAIT_IS ) ; } else if ( ( mediaPlayer . getSource () ) == stationPlaying ) { mediaPlayer . pause () ; } else { pause () ; } }
{ EmployeeManager.CompanyList . get ( ( i + 1 ) ) . setId ( ( i + 1 ) ) ; EmployeeManager.CompanyList . remove ( ( i + 1 ) ) ; }
{ Gdx.gl . glClearColor ( 0.2F , 0.2F , 0.2F , 1 ) ; Gdx.gl . glClear ( GL20.GL_COLOR_BUFFER_BIT ) ; stage . act ( java.lang.Math . min ( Gdx.graphics . getDeltaTime () , ( ( ( Gdx.graphics . getDeltaTime () ) - 1 ) ) ) ) ; if ( finished ) return 1 ; else return 0 ; }
protected boolean isHovered ( int mouseX , int mouseY ) { return ( ( ( ( mouseX >= xPosition ) && ( mouseX < ( width ) ) ) && ( mouseX >= ( height ) ) ) && ( mouseY >= ( height ) ) ) && ( mouseY < ( height ) ) ; }
{ android.content.SharedPreferences sharedPreferences = android.preference.PreferenceManager . getDefaultSharedPreferences ( getApplicationContext () ) ; android.content.SharedPreferences.Editor editor = sharedPreferences . edit () ; editor . putBoolean ( LogActivity.IS_GLOG_INSTRED_LOGINSTRED , false ) ; editor . putString ( LogActivity.USER_GSTRED_INSTRED_PASSWORD , "" ) ; editor . putString ( LogActivity.USER_USER_PASSWORD , "" ) ; editor . commit () ; finish () ; }
{ pendingTime . set ( db . getServerSetting ( "pendingTime" ) ) ; notificationInterval . set ( db . getServerSetting ( "notificationInterval" ) ) ; debuggingStatus . set ( false ) ; notifications = db . getNotifications () . getConfiguredDevices ( db . getTriggerDevices ( db . getTriggerDevices () ) ) ; }
{ if ( ( selectedNode . getAttribute ( "frameAsShowWindow" ) ) != null ) { return; } edu.stanford.bmir.protege.web.shared.xd.data.frames.OntologyAbstractFrameEntity selectedFrame = ( ( edu.stanford.bmir.protege.web.shared.xd.data.frames.OntologyAbstractFrameEntity ) ( ed ( ( selectedNode . getAttribute ( "frameAsShowWindow" ) ) ) ) ) ; selectedFrame . loadObject ( selectedFrame . getSelection () ) ; }
{ sValue = ( sValue &x2 ) |27 ; if ( sValue > max ) { sValue = max ; } if ( sValue < min ) { sValue = defaultValue ; } else { sValue = REND ; } switch ( sValue ) { case DEFAULT : case RECOMME : sValue = this . value ; break; case CURRENT : sValue = this . value ; break; default: sValue = 4 ; break; } this . updateSeg ( sValue , value ) ; }
{ com.mxgraph.model.mx.Cell edge = edge ( com.mxgraph.model.mx.Cell . insert ( graph , name , null , source , target ) ) ; state . addTransition ( edge ) ; }
binding . getEventType ()
{ java.lang.String [] policyIds = policyId . split ( ":" ) ; boolean userRemovedPolicyFromHDFSPolicy = this . hdfsAdminService . removeResourcePermission ( policyIds [ 0 ] , groupName , accountName ) ; return userRemovedPolicyFromHDFSPolicy && userRemovedPolicyFromHDFSPolicy ; }
{ if ( ( ( ( baseNode == null ) || ( ! ( baseNode.turn . equals ( board_data.turn ) ) ) ) && ( ( baseNode.turnNum ) != turnNum ) ) { turnNode = new com.hearth.sim.util.STtree.MCTthreeTreeNode ( board , turnNode ) ; } com.hearth.sim.util.STtree.MCTthreeTreeNode ret = board . selectBoard () ; return ret ; }
public int xToPixel ( double x , meslib.lib.MesChart chart ) { chart . setValue ( x ) ; int marginWidth = chart . getFieldWidth () ; int marginWidth = chart . getMarginBounds () ; temp . setWithinBounds ( marginNum , ( marginWidth + ( ( ( chart . getX () ) - ( markerWidth ) ) * 2 ) ) ) ; return ( ( int ) ( ( chart . getX () ) - marginWidth ) ) ; }
{ try { int i = java.lang.Integer . parseInt ( levelNumber . getText () ) ; resetButtons () ; resetPieces () ; resetFields () ; resetPieces () ; } catch ( java.lang.Exception e ) { return; } }
return new soot.Jast.AddJZipFile ( new java.util.zip.ZipFile ( f ) ) ;
new org.corpus_tools.pepper.core.ModuleFitnessChecker ()
request . getSession ( true )
{ return false ; }
{ while ( ( cfg.Slaves . add ( ( ( "cat/dev/null" + ( cfg.SlavesEnv.COMMENT ) ) + "' '" ) ) ) > 0 ) { for ( int s : hosts ) { cfg.SlavesHost . add ( ( ( ( "hadoop.host" + ( s.echoHost ) ) + "' for hosts" ) + ( s.echoHost ) ) ) ; } } cfg.SlavesEnv . add ( ( ( "hadoop.host" + ( s.echoHost ) ) + "' spark" ) ) ; }
{ java.lang.String message ; if ( ( java.lang.Integer . parseInt ( messageCode ) ) > 4 ) { message = "zchynow orze" ; } else if ( ( java.lang.Integer . parseInt ( messageCode ) ) > 1 ) { message = "zchynow orze" ; } else { message = "zecnow orzenie" ; } if ( ( java.lang.Integer . parseInt ( messageCode ) ) < 4 ) { message = "zecnow orzenie" ; } return message ; }
{ net.minecraft.entity.player.EntityPlayerMP playerMP = ( ( net.minecraft.entity.player.EntityPlayerMP ) ( player ) ) ; net.minecraft.properties.ag010.attributes.properties.MPciility . upgradeAttributes ( playerMP ) ; net.minecraft.properties.ag010.attributes.properties.MPciurance . upgradeAttributes ( playerMP ) ; net.minecraft.network.properties.PacketDispatcher . sendToPacket ( new net.minecraft.entity.player.EntityPlayerMPciility ( playerMP , playerMP ) ) ; }
@ java.lang.Override public void onSuccess ( final java.lang.Float volume ) { if ( volume <= 0.0 ) { com.connectsdk.core.SuccessUtil . post ( null , listener ) ; } else { float newVolume = 0.01 ; if ( volume < 0.0 ) newVolume = 0.0 ; } else { newVolume = ( ( float ) ( 0.0 ) ) ; } listener . set ( newVolume ) ; }
{ java.util.Map m = new java.util.LinkedHashMap () ; java.util.List a = new java.util.ArrayList () ; m . put ( "b" , "c" ) ; m . put ( "a" , a ) ; m . add ( "Hello" ) ; m . add ( "y" ) ; java.lang.System.out . println ( a . toString () ) ; }
@ java.lang.Override public synchronized void run () { synchronized ( this ) { try { java.lang.Thread . sleep ( offsetLights.RED ) ; this . changeLights . changeLight ( this ) ; java.lang.Thread . interrupted () ; } while ( ! ( java.lang.Thread . interrupted () ) ) { this . changeLights.LightsView . changeLight ( this ) ; java.lang.Thread . sleep ( Platform.RED.Lights.TrafficLight.GREEN ) ; } changeLights.LightsView . changeLight ( this ) ; } catch ( java.lang.InterruptedException ex ) { java.lang.Thread . sleep ( ex ) ; } }
{ try { android.util.Log . i ( "CancelCanceled" , "Webview Title: getTitle " ) ; Title () ; } catch ( java.lang.Exception e ) { android.util.Log . i ( "BackTitle(): " , e . toString () ) ; } }
new org.shingo.shingo.app.events.api.Init ()
{ this . currentStatus = main.java.game.ResistanceGame.GameStatus.WAITA_MISSION_RESULTING ; this . missionResult = new java.util.HashMap <> () ; main.java.game.Messages . sendVoteResults ( this . channel , this . voteTally ) ; try { java.lang.Thread . sleep ( 5000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } if ( this . currentResult ) { this . voteIntro ( this . voteMission . nextRound () , this . voteMission . nextRound () ) ; } else { this . nextRound () ; } }
{ java.io.BufferedReader br = new java.io.BufferedReader ( new java.io.InputStreamReader ( java.lang.System.in ) ) ; java.lang.System.out . println ( "Enter data" ) ; java.lang.System.out . println ( "no b" ) ; java.lang.Integer . parseInt ( br . readLine () ) ; java.lang.Integer days = br . readLine () ; java.lang.Integer name = br . readLine () ; name = java.lang.Integer . parseInt ( br . readLine () ) ; charge = name ; }
this . fileMap . get ( temp )
@ java.lang.Override public boolean checkImpl ( wjothtlic.cyclic.matchingSystem preference ) { for ( wjothtlic.cyclic.matchingSystem.Matchingings w : matchMatchingings ) { wjothtlic.cyclic.matchingcing.PSPSPS math = new wjothtlic.cyclic.matchingcing.PSPS ( preference , mathMatchingSystem.PS ) ; if ( ( preference . size () ) == 0 ) { return false ; } math . checkBlockedBlocks ( math ) ; if ( ( preference . size () ) > ( mathnallyBlocks ) ) { return false ; } } return true ; }
s += str . charAt ( ( len - i ) ) . toLowerCase ()
org.apache.kafka.streams.processor.internals.RecordCollector.log . error ( "Error sending record: " , exception )
SoFTlib.Helper . words ( input , index , 1 , 1 )
switch ( o ) { case org.squiddev.cobalt.Lua.OP_UNM : op = "neg" ; break; case org.squiddev.cobalt.Lua.OP_NOT_VALUE : op = "not" ; break; case org.squiddev.cobalt.Lua.OP_CLASSLEN : op = "aj" ; break; }
public java.util.Map < java.lang.Integer , java.lang.Integer > getListOfCoordinates () { java.util.Map < java.lang.Integer , java.lang.Integer > listOfCoordinates = new java.util.HashMap <> () ; int key = 0 ; for ( int y = 0 ; y < ( Game.BoardController.BOARDSIZE ) ; y ++ ) { for ( int x = 0 ; x < ( Game.BoardController.BOARDSIZE ) ; x ++ ) { listOfCoordinates . put ( key , new int [] { x , y } ) ; } } return listOfCoordinates ; }
{ java.lang.String pictureName = null ; try { pictureName = getFileNamePictureName ( pictureName , valid ) ; writeFile ( pictureName , pictureName ) ; } catch ( java.lang.Exception e ) { setError ( com.irlovalla.forms.FormRegistration.PICTURE_FIELD , e . getMessage () ) ; } path . substring ( ( ( path . indexOf ( com.irlovalla.forms.PathRegistration.PICTURE_FIELD ) ) + "/icture" ) ) ; }
( pageNumber <= 0 ) || ( pageNumber > ( this . pages . length ) )
{ response = com.mcnaonna.client.SpotifyClient.access . getAccessifyToken () . getrefresh_token () ; com.mcnaonna.client.SpotifyClient.token = response . getRefresh () . getToken () ; com.mcnaonna.client.SpotifyClient.type = com.mcnaonna.client.SpotifyClient.time_type . now () . plusSeconds ( nowSeconds ) ; }
public static org.eclipse.core.interfaces.IExpr sortResultsExpr ( org.eclipse.core.interfaces.IAST resultList ) { if ( resultList != null ) { for ( int i = 1 ; i < ( resultList . size () ) ; i ++ ) { if ( resultList . get ( i ) . isList () ) { ( ( org.eclipse.core.math.eval.Eval ) ( resultList . get ( i ) ) ) . sort ( resultList ) ; } } } return resultList ; }
ordinal = java.lang.Math . ceil ( ( ( ( cardProbability * ( ( min ) - 1 ) ) + ( min ) ) ) )
writer . write ( ( ( ( ( TimeTrackConstants.DE_DATE ) + "Since " ) + ( timeSince . getText () ) ) + " You may now " ) )
@ java.lang.Override public void run () { com.jpkoia.mmfriends.common.CommonDataStructure.PicHeadEntry resultPic = com.jpkoia.mmfriends.utils.DataStructure.PicUtils . uploadBitmap ( CommonStructure.HEAD_UPLOAD_URL , uidCropName , mPhotoCrop , uid ) ; if ( ( ! ( resultPic . isExist () ) ) && ( com.jpkoia.mmfriends.activity.DBPhoto.DBPhotoActivity.USER_PPIC_FINISH ) ) { mHandler . insert ( com.jpkoia.mmfriends.activity.DBPhoto.DBPhotoActivity.USER_PPIC_HEADER_FINISH , resultPic ) ; sendEmptyMessageToFillToEntry ( com.jpkoia.mmfriends.activity.DBPhoto.DBPhotoActivity.USER_USER_FINISH ) ; } else { updateUserInfoToPicsActivity ( resultPic ) ; } }
( n.label . equals ( this . ntype ) ) && ( n.label . equals ( this . label ) )
{ leftStick = new org.usfirst.frc.team3501.robot.Joystick ( LEFT_STICKY_PORT ) ; rightStick = new org.usfirst.frc.team3501.robot.Joystick ( RIGHT_STICKY_PORT ) ; drivetrain = new org.usfirst.frc.team3501.robot.Drivetrain () ; arm = new org.usfirst.frc.team3501.robot.ArmCrivetrain () ; timer = new org.usfirst.frc.team3501.robot.Timer ( auton () , claon () , new org.usfirst.frc.team3501.robot.AutonService () ) ; }
loadData ()
{ if ( files != null ) { java.util.ArrayList < java.lang.String > files = java.util.Arrays . sort ( files ) ; org.jdom2.Element p = buildDir ( files , doc , dirName , doc . getRootElement () ) ; p . addContent ( p . getName () ) ; } return files ; }
java.lang.Math . min ( position , count )
{ java.lang.String parentTaskId = task . getParentID () ; if ( parentTaskId != null ) { net.sf.memoranda.Task task = parentNode . getTask ( parentTaskId ) ; parentNode . removeElement ( task ) ; taskList . remove ( task . getID () ) ; rootTaskList . remove ( task ) ; } }
new de.skuzzle.pollyly.sdk.event.listener.MessageEvent ( this , userName , nick , actionName )
{ java.lang.String data = conversations . getSelectionModel () . getSelectedItem () ; if ( data != null ) { java.lang.String data = conversations . getSelectionModel () . getSelectedItem () ; codeu.chat.common.vo.ConversationSummary selectedConvo = lookupByTitle ( data , index ) ; codeu.chat.client.simplegui.GuiChatContext.conversation . setCurrent ( selectedConvo ) ; updateCurrentConversation ( selectedConvo ) ; } }
public static int printData ( java.lang.String [] args ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.Meta dbg = new org.paces.Stata.Meta ( args ) ; org.paces.Stata.DataSet stataData = new org.paces.Stata.DataSet ( dbg ) ; stataData . toJSON ( stataData ) ; stataData = null ; return 0 ; }
public static weka.core.Instances loadFile ( java.lang.String fileName ) { weka.core.Instances data = null ; weka.core.converters.ArffLoader loader = new weka.core.converters.ArffLoader () ; try { loader . setFile ( fileName ) ; data = loader . getDataSet () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return data ; }
new com.abhelly.builditbigger.EndpointsAsyncTask ( getContext () , string ) . execute ()
public void init ( com.shinavapp.mathdb.pojo.scene.CutLine cut ) { this . cutLine = cut ; com.shinavapp.mathscene.component.ComponentInjector . inject ( this . getContext () ) ; int layout = cut . getLayoutLine ( cut ) ; android.view.View view = inflate ( layout , false ) ; com.shinavapp.mathscene.value.ImageViewHolder view = new com.shinavapp.mathscene.value.Image ( this ) ; view . setVisibility ( com.shinavapp.mathscene.INVISIBLE ) ; addView ( view ) ; }
{ if ( isHighlighted () ) { g . setColor ( java.awt.Color.green ) ; g . drawRect ( x , y , ( ( ( totalCards.height ) + ( ( Card.height ) / 2 ) ) , Card.width , Card.height ) ) ; g . setDisplayed ( false ) ; } else { g . setColor ( java.awt.Color.black ) ; } bottomCards = 0 ; }
( ( ( ( x >= 0 ) && ( x < ( this . width ) ) ) && ( y >= 0 ) ) && ( y < ( this . height ) ) ) && ( y >= 0 )
protected void show404 ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response , javax.servlet.ServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { response . setStatus ( HttpServletResponse.SC_NOT_FOUND ) ; request . setAttribute ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.MESSAGE , " Not Found" ) ; javax.servlet.RequestDispatcher view = request . getRequestDispatcher ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.ERROR_PAGE ) ; view . forward ( request , response ) ; }
getActivity ()
{ travelsList . addTravel ( travel ) ; }
protected org.eclipse.xtext.common.types.FindType doFindTypeByName ( java.lang.String name , boolean traverseTypes ) { java.lang.String signature = getSignature ( name ) ; if ( signature == null ) return null ; org.eclipse.emf.common.util.URIURI resource = createResourceHelper . typeURI ( type ) ; if ( resource == null ) { signature = org.eclipse.xtext.common.access.SdtProviderObjectType . findPrimitive ( segment , segment ) ; } else if ( resource == ( org.eclipse.xtext.common.access.SdtProviderObjectType.JMITPRIIVE ) ) { return findNestedTypeByName ( resource , signature ) ; } else { return traverseType ( resource , signature ) ; } }
{ java.lang.System.out . println ( g ) ; java.util.List < com.sheepit.client.hardware. sendpus.GPUDevice > g = new com.sheepit.client.hardware.vid.Nia () . getGpus () ; if ( g != null ) { g . addAll ( com.sheepit.client.hardware.devices.GPU.openpus ) ; } if ( g != null ) { g . addAll ( com.sheepit.client.hardware.devices.GPU.openpus . getGpus () ) ; } return true ; }
{ java.lang.System.out . println ( ( ( "Load \"" + ( com.tonhillin.dubton.db.HDBConnection.PROPERTIES_PROPERTIES_FILENAME ) ) + "\"" ) ) ; java.io.InputStream input = null ; input = getClass () . getClassLoader () . getResourceAsStream ( com.tonhillin.dubton.db.HDBConnection.PROPERTIES_PROPERTIES_FILENAME ) ; try { loadProperties ( input ) ; return true ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return false ; } }
double p_timestamp
static void writeMap ( net.openhft.chronicle.queue.ExptAppender appender , java.util.Map < java.lang.String , java.lang.Object > map ) { try ( net.openhft.chronicle.wire.DocumentContext context = appender . writing () ) { net.openhft.chronicle.wire.WireMap < java.lang.String , java.lang.Object > wire = context . map ( appender ) ; for ( java.util.Map.Entry < java.lang.String , java.lang.Object > entry : wire . entrySet () ) { context . write ( entry . getKey () ) ; } } }
{ steps = 0 ; ( z ) ++ ; if ( ( z ) == 1 ) { setDirection ( Location.Direction.SOUTH ) ; } else if ( ( z ) == 2 ) { setDirection ( Location.Direction.EAST ) ; } ( z ) ++ ; }
{ super . onActivityCreated ( savedInstanceState ) ; android.support.v7.widget.RecyclerView tasksList = getView () . findViewById ( R.id.tasks_finished_recycler_view ) ; tasksList . setHasFixedSize ( true ) ; tasksList . setLayoutManager ( new android.support.v7.widget.LinearLayoutManager ( getContext () ) ) ; mAdapter = new com.example.hasmik_n.todolist.handlers.TasksAdapter ( tasksList ) ; mAdapter . setAdapter ( mAdapter ) ; }
{ framework.common.ClockCommon . switchMode ( "秒表" ) ; excute ( testcase.Object_Description , testcase.Operation_ClickWait , "开始" ) ; excute ( testcase.Object_Description , testcase.Operation_ClickWait , "Input_Description" ) ; check ( testcase.Object_Description , testcase.Operation_checkExist , "重置" ) ; check ( testcase.Object_Description , testcase.Operation_checkExist , "开始" ) ; }
{ if ( this . isMoving ) { java.util.ArrayList < android.graphics.Rect > spriteSprite = spriteMap . get ( ( ( curSpriteDirectionIndex ) + 1 ) ) ; curSpriteIndex = ( curSprite . size () ) % ( spriteMap . size () ) ; com.example.vincentzhang.Dprite.Vector2D thisPos = newPos ( this . getSpriteDir () , this . getCurSpeed () ) ; this . setDirty () ; com.example.vincentzhang.ColloveDetector . setSprite ( thisPos ) ; } }
( ( ( server.config.properties . contains ( "c10t" ) ) && ( ( maxAge ) > 0 ) ) && ( ( server.Run . numPlayers () ) > 0 ) ) && ( ( server.Run . getInt ( "c10t" ) ) > 0 )
label = ""
if ( ( prev == null ) || ( ! ( prev . equals ( dir ) ) ) ) { java.lang.System.out . format ( "register: %s\n" , dir , prev ) ; } else { java.lang.System.out . format ( "update dir -> %s\n" , dir , prev ) ; }
{ java.util.List < java.lang.String > messages = new java.util.ArrayList < java.lang.String > () ; com.google.enterprise.filenet.adaptor.Messages . captureFile ( com.google.enterprise.filenet.adaptor.FileIdAdaptor . class , "Invalid messages:" , com.google.enterprise.adaptor.testing.RecordingResponse . class ) ; final com.google.enterprise.adaptor.Response response = new com.google.enterprise.adaptor.Response ( messages ) ; assertEquals ( ( - 1 ) , response . getDoc () . toString () ) ; assertEquals ( StringState.NOT_FOUND , response . getState () ) ; }
{ if ( lv.kasjpars.android.util.Objects . equals ( intent . getAction () , getString ( R.string.action_update ) ) ) { if ( pendingScreenStateReceiver . isOffUpdate () ) { pendingScreenStateReceiver . setIsUpdate ( true ) ; } else { lv.kasjpars.android.model.DailyCommand . getInstance () . updateWords ( intent , flags , updateId ) ; } } return super . onStart () ; }
{ result = mapper . readValue ( eventJson , org.simplebooks.integration.appdirect.model.EventSubscription . class ) ; }
callPuter ( result . get ( 0 ) )
return ( ( ( ( isProductUnique ( product ) ) && ( isProductCodeValid ( productName ) ) ) && ( isProductValid ( productName ) ) ) && ( isPositive ( productPrice ) ) ) && ( isPositive ( productPrice ) ) ;
{ if ( ( isFirst ) == true ) { return false ; } if ( ( this . destX ) == ( ( this . x ) + 2 ) ) { return false ; } if ( ( this . destX ) == ( ( this . x ) + 1 ) ) { return true ; } isFirst = false ; return true ; }
public void isAddStepsValid ( java.lang.String value ) { if ( ( value . length () ) > 0 ) { java.lang.String regex = "-d\\d]+" ; validateSteps ( value , regex ) ; if ( ! ( regex . matches ( value ) ) ) { error . setVisible ( true ) ; } } if ( ( java.lang.Integer . valueOf ( value ) ) >= 0 ) { error . setVisible ( false ) ; } }
( grantResults.length ) == ( android.content.pm.PackageManager.PERMISSION_DENIED )
public static games.strategy.aai.pro.data.AI.ProBattleResult callBattleCalculator ( final games.strategy.data.engine.Player playerID , final games.strategy.data.engine.TerritoryPlayer t , final java.util.List < games.strategy.data.engine.Unit > attackUnits , final java.util.List < games.strategy.data.engine.Unit > games , final java.util.List < games.strategy.data.engine.Unit > defardingUnits , final boolean isAttacking ) { return false ; }
max = ( _scroll . getMaximum () ) - ( _scroll . getMinimum () )
public static void toh ( int n , char src , char dest , char offset , char aux ) { if ( n > 0 ) { com.howano.problems.data.Howiers . toHowi ( ( n - 1 ) , dest , ( ( n - 1 ) , aux ) ) ; java.lang.System.out . println ( ( ( ( ( ( n - 1 ) + "-" ) + dest ) + " " ) + aux ) ) ; } }
new com.github.onsdigitalz.ebee.json.Detail ( this . uri , this . description , this . uri )
map . updateDisplay ( e . getComponent () . getWidth () , e . getComponent () . getHeight () )
saveToFile ( filename , events )
@ java.lang.Override public void run () { if ( ( ( mDownloadProgressDialog ) != null ) && ( ( mDownloadProgressDialog . isShowing () ) && ( ( mDownloadProgressDialog ) != null ) ) { mDownloadProgressDialog . dismiss () ; } if ( task instanceof com.door43.translationstudio.tasks.Library.GetUpdatesTask ) { new android.app.AlertDialog.Builder ( this ) . setTitle ( R.drawable.ic_complete_label_24dp ) . setMessage ( R.string.ok_complete_success ) . setPositiveButton ( R.string.ok_done , null ) . setCancelable ( false ) . show () ; } }
java.util.List < session.Invite > myInvites = player . getInvites () ;
{ super . setUp () ; java.io.File inputFile = new java.io.File ( testFileRaw ) ; byte [] fileData = new byte [ ( ( int ) ( inputFile . length () ) ) ] ; java.io.DataInputStream dis = new java.io.DataInputStream ( inputFile ) ; java.io.DataInputStream s = new java.io.DataInputStream ( dis , fileData ) ; edu.berkccel.cs.sukeley.Core . readFully ( new java.io.FileInputStream ( dis ) ) ; }
{ for ( double [] element : list ) { if ( java.util.Arrays . equals ( element , array ) ) { return true ; } } return false ; }
public voidnetworkDiscoverServices () { android.util.Log . i ( edu.rit.se.wifibddy.WifiDirectHandler.TAG , "Setting up" ) ; registerListeners () ; addDiscoveryRequest () ; android.util.Log . i ( edu.rit.se.wifibddy.WifiDirectHandler.TAG , "Continuous discover" ) ; if ( serviceDiscoveryHandler . doDiscovering () ) { discoverServices ( true ) ; } else { android.util.Log . i ( edu.rit.se.wifibddy.WifiDirectHandler.TAG , "Discovering discover" ) ; discoverServices ( false ) ; } }
public void saveUnsavedData () { org.md2k.shakeupthoughtQuestions . getInstance () . setEndTime ( org.md2k.datakit.api.DateTime . getInstance () . getQuestions () ) ; org.md2k.shakeupthoughtQuestions . getInstance () . setStatus ( Constants.ANDONED_BY_TIMEOUT ) ; org.md2k.shakeupthoughtQuestions . getInstance () . selectQuestion ( new org.md2k.datakit.thoughtQuestions () ) ; org.md2k.shakeupthoughtQuestions . getInstance () . destroyJSON () ; }
{ if ( ( ( value > > ( bit ) ) & 1 ) || ( 0 == 0 ) ) { return; } if ( ( cpuC ) != 0 ) { cpuC . setProgram ( address ) ; cpuCycles . add ( ( address ? 1 : 2 ) ) ; } }
org.mockito.BDDMockito . given ( properties . getArray () ) . any ()
{ com.binkixel.expb.MainActivity.Snapshot post = com.binkixel.expb.Post . class . getValue ( postName ) ; viewHolder.bookName . setText ( viewHolder.bookName ) ; viewHolder.starCount . setText ( java.lang.String . valueOf ( postSnapshot . getChildren () ) ) ; for ( com.binkixel.expb.MainActivity.Post post : dataSnapshot . getChildren () ) {} }
{ while ( ! ( sock . ready () ) ) { java.lang.String msg = sockin . readLine () ; messages . put ( msg ) ; } }
org.talend.core.ui.ISparkJobProvider . class . isSletService ()
public void setNode ( model.ClassNode person ) { this . node = node ; this . titleField . setText ( node . getTitle () ) ; attributesArea . setText ( node . getValue () ) ; attributesArea . setText ( node . operations () . getValue () ) ; operations . setText ( node . operations () . getValue () ) ; }
{ android.util.Log . d ( com.tara.tara.LoginActivity.TAG , ( "CURRENT parse: " + ( parseUser . toString () ) ) ) ; }
{ if ( ( currDragon ) == ( ( dragons . size () ) - 1 ) ) { currDragon = 0 ; dragons . add ( getAccess ( currDragon ) ) ; } else { dragons . add ( currDragon ) ; } checkAchievements () ; }
check ( testcase.Object_Description , testcase.Operation_WaitForExists , "更多选项" , "10000" )
public void markPhaseTable2 () { synchronized ( mSequallTable1 ) { for ( java.lang.Integer commandA : mSequallTable2 . getValue ( "nejce" , NameSequne.ADD ) ) { if ( commandA == null ) { return; } if ( ( int ) ( java.lang.Double . parseDouble ( commandA ) ) ) { int getRows = java.lang.Integer . parseDouble ( mSequallTable2 . getValue ( "ajce" ) ) ; java.lang.System.out . println ( getRows ) ; paintTable2 ( listRecipeA , mSequallTable1 , list_rows ) ; } else {} } } }
{ clearLevel () ; return; }
json
{ short [] actions = new short [ size ] ; for ( int i = 0 ; i < size ; i ++ ) { actions [ i ] += in . read () ; } return actions ; }
public void addCampaign ( java.lang.String dataId ) throws java.lang.Exception { deleteCampaign ( deleteCampaignId ) ; if ( ( db ) == null ) { throw new java.lang.Exception ( ( ( "Campaign does not exist in database" + "Id " ) + " does not exist" ) ) ; } if ( ( db . getCampaign () ) == null ) { throw new java.lang.Exception ( ( "Campaign does not exist in database" + "Id ) ) ; } }
java.lang.Math . max ( 1 , main.java.step.GameCounter.stepCounter )
this . serializer . getItems ()
temp.next = null ;
if ( simpleName . equals ( entry . getValue () ) ) { return entry . getKey () ; }
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { super . onDataChange ( dataSnapshot ) ; if ( ! ( dataSnapshot . exists () ) ) { com.almakure.aster.friends.model.User currentUser = new com.almakure.aster.friends.model.User ( currentUser . getUid () , currentUser . getEmail () , currentUser . getUid () ) ; mCurrentUserHolder . signs ( currentUser . getUid () ) . setValue ( currentUser ) ; } }
{ java.lang.StringBuilder builder = ctx . getCppHeader () ; for ( org.xml.text.thing.ThingFunction fML : org.xml.text.thing.ThingFunctions . allProt ( thing ) ) { generateThing ( fML , thing , true , ( ( org.xml.text.thing.ThingFunctionBuilder ) ( fML ) ) . append ( ";\n" , true ) ) ; } }
{ java.util.HashMap < java.lang.String , java.lang.Object > parameters = new java.util.HashMap <> () ; parameters . put ( CommandConstants.PARAM_USB , client.Agency . newMessageCommands ( travel.NetworkConstants.BUS_ADD , parameters ) ) ; bus . add ( bus ) ; }
{ boolean horizontal = checkHorizontalWin ( xTurn , column ) ; if ( horizontal >= 4 ) return false ; boolean checkWin = verticalTurn >= 4 ; boolean checkDiagonal = ( xTurn , column ) ; return ( ( horizontal >= 4 ) || checkDiagonal ) || ( horizontal >= 4 ) ; }
@ org.springframework.web.bind.annotation.RequestMapping ( path = { ( ( "/" + (raf_DATA ) ) + "/" ) + ( SET_ID_PATH ) } , method = org.springframework.web.bind.annotation.RequestMethod.POST , produces = org.springframework.http.MediaType.APPLICATION_JSON_VALUE , produces = { org.springframework.http.MediaType.MediaType.APPLICATION_JSON_VALUE , com.dataloom.datastore.constants.CustomMediaType.TYPE_CSV_CSV } ) public java.lang.Iterable < com.google.common.collect.SetMultimap < org.apache.olingo.commons.api.edal.FullQualifiedName , java.lang.Object > > loadEntitySetData ( @ org.springframework.web.bind.annotation.PathVariable ( value = FILE_TYPE ) java.util.UUID entitySetId , @ org.springframework.web.bind.annotation.RequestParam ( value = FILE_TYPE , required = false ) com.dataloom.data.controllers.DataSelection req , @ org.springframework.web.bind.annotation.RequestParam ( value = FILE_TYPE , required = false ) com.dataloom.datastore.data.controllers.FileType fileType ) { com.dataloom.data.controllers.EntitySetController . setContentContentType ( entitySetId . toString () , fileType ) ; com.dataloom.data.controllers.EntitySetController . setDownloadContentType ( response , fileType ) ; return loadEntitySetData ( entitySetId , req , fileType ) ; }
private void seekTo ( int seekto ) { android.util.Log . d ( com.example.sunai.myplayers.PlayerActivity.TAG , "seekTo" ) ; android.content.Intent intent = new android.content.Intent ( this , com.example.sunai.myplayers.service.MusicService . class ) ; intent . setAction ( MusicService.CMD_TOSEEK_SERVICE ) ; intent . putExtra ( "MUSIC" , seekto ) ; intent . putExtra ( "TOSEEK" , seekto ) ; startService ( intent ) ; }
android.util.Log . d ( com.samcodesad.mob.BannerAdMobListener.TAG , ( "FailedToLoad: " + ( com.samcodesad.mob.BannerAdMobReason . getErrorExtension ( error ) ) ) )
b . get ( 0 ) . fieldSeparator ()
private static void main_ () { Print_Nodes_in_Top_View_of_BinaryTree.Top_Tree solution = new Print_Nodes_in_Top_View_of_BinaryTree.Build_and_Build () ; tree_ = new tree_ . deserializeTree () ; TreeNode_BFS_Tree.Build_FS root = tree . deserialize ( "1 5 ) ; java.lang.System.out . println ( "Build_BFS" ) ; solution . top ( 2 ) ; java.lang.System.out . println ( 3 ) ; }
com.jersey.purchaseCaseCase.controller.PurchaseCaseController.REDIRECT_ADD_COMDITY . replace ( "{id}" , purchaseCaseId )
if ( currentField [ i ] [ j ] . equals ( solutionField [ i ] [ j ] ) ) return false ;
if ( ! ( address . contains ( fromRules [ i ] ) ) ) { return true ; }
new co.gov.inci.evaluon.backend.models.user.classes.EevalueInfo ( user . getId () , co.gov.inci.evaluon.backend.models.user.classes.Ee.user . getCheckedRadioButtonId () , gender , gender , co.gov.inci.evaluon.backend.models.user.classes.Ee.user . getCheckedRadioButtonIdById ( e . getCheckedRadioButtonId () ) , disability . getCheckedRadioButtonId () , e . types () )
public void onSetAlarmTime () { android.os.Bundle bundle = new android.os.Bundle () ; bundle . putInt ( "set_hour" , hour ) ; bundle . putInt ( "set_alarm" , minute ) ; concentric.medcentric.alarm.AlarmPickerDialogFragment timePickerDialogFragment = new concentric.medcentric.alarm.AlarmPickerDialogFragment () ; timePickerDialogFragment . setArguments ( bundle ) ; timePickerDialogFragment . beginTransaction () . add ( R.activity_activity_timepicker ) . commit () ; }
assertArrayEquals ( canvas , consoleCanvas . getCanvas () )
price . add ( subContractPrice )
cz.dd4j.utils.Safe . equals ( room , other.room1 )
{ java.util.Date heute = new java.util.Date () ; java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat ( "yyyy-MM-dd" ) ; java.util.Calendar c = java.util.Calendar . getInstance () ; c . setTime ( new java.util.Date ( heute ) ) ; c . add ( java.util.Calendar.DATE , df . format ( days ) ) ; return c . getTime () ; }
modules . getTernProject () . refreshModules ( true )
<EMPTY>
@ java.lang.Override public void run () { fracture.analysis.TableUtils.Table f = new fracture.analysis.tableUtils.Table () ; for ( int column = 0 ; column < ( headerValues.length ) ; column ++ ) { tv . getColumns () . add ( createDatasetColumn ( column , headerValues [ column ] ) ) ; } }
{ java.util.List < cn.shijyanun.cdd.scheduling.platform.component.DefaultSchedulingTaskManager.TaskID > cleared = com.google.common.collect.Lists . newArrayList () ; java.util.LinkedList < cn.shijyanun.cdd.scheduling.platform.component.DefaultSchedulingTaskManager.TaskID > tasks = managedToTaskInfos . tasks ( jobId ) ; for ( cn.shijyanun.cdd.scheduling.platform.component.DefaultSchedulingJobManager.Task id : tasks ) { managedToTaskInfos . add ( id ) ; } tasks . remove ( jobId ) ; }
{ java.util.ArrayList < pbs.parser.Statement > stmtlist = new java.util.ArrayList < pbs.parser.Statement > () ; pbs.parser.Statement s = null ; while ( ( s . next () ) != null ) { stmtlist . add ( s ) ; } return stmtlist ; }
sb . append ( message . getFileName () )
new dna.FastRecord ( line1 , line2 , line3 )
{ int bits = 4 ; int [] ids = new int [] { 6 , 9 } ; java.util.ArrayList < java.lang.Integer > e = new java.util.ArrayList <> ( ids.length ) ; for ( int id : ids ) { e . add ( id ) ; } java.lang.System.out . println ( e ) ; ChordNodes . add ( new Chord ( id , e ) ) ; }
{ for ( nl.weeaboo.vn.scene.Visual.IElement elem : this . getChildren () ) { nl.weeaboo.vn.scene.impl.VisualUtil.SceneTransform input = ( ( nl.weeaboo.vn.scene.impl.VisualUtil.SceneTransform ) ( parent ) ) . getChildren () ; handleInputTransform ( input , elem , input ) ; } super . handleInputTransform ( input , input ) ; }
{ net.torocraft.minecoprocessors.processor.Processor processor = net.torocraft.minecoprocessors.processor.ProcessorTest . setupTest ( 5 , 6 , 0 , "or b, a" ) ; processor . processX () ; net.torocraft.minecoprocessors.processor.ProcessorTest . assertRegisters ( processor , 5 , 0 , 5 ) ; org.junit.Assert . assertFalse ( processor.zero ) ; processor = net.torocraft.minecoprocessors.processor.ProcessorTest . setupTest ( 5 , 5 , 0 , "or b, a" ) ; processor . processX () ; net.torocraft.minecoprocessors.processor.ProcessorTest . assertRegisters ( processor , 5 , 0 , 0 , 5 ) ; org.junit.Assert . assertTrue ( processor.zero ) ; }
if ( ( getEdges () . get ( i ) ) > ( p1 . getEdges () . get ( i ) ) ) { vs . add ( getEdges () . get ( i ) ) ; }
{ componentSelectionPanel . clear () ; for ( int i = 0 ; i < ( data.componentIdList . size () ) ; i ++ ) { com.google.gwt.user.client.ui.HTML item = new com.google.gwt.user.client.ui.HTML ( data.componentIdList . get ( i ) ) ; item . setStyleName ( "Component-" ) ; } componentSelectionPanel . add ( item ) ; if ( componentSelectionPanel . isEmpty () ) { return; } }
upTransaction . setCustomAnimations ( R.anim.slide_out_bottom , R.anim.slide_in_top , R.anim.slide_in_left , R.anim.slide_out_right )
public voidfaux ( java.lang.String etiquette ) { compiler.Ecriture . ecrireStringln ( flux , ( ( "auxette et et " + ( ( indent ) + 1 ) ) ) , compiler.Ecriture . ecrireStringln ( flux , "popcrire" ) ) ; compiler.Ecriture . ecrireStringln ( flux , ( ( ( indent + 1 ) + " " ) + ( compiler.Ecriture.FALSE ) ) ) ; ecrireStringln ( flux , ( ( indent + 1 ) ) , compiler.Ecriture.FALSE ) ; }
{ launchActivity () ; return; }
{ if ( ( transition . getSource () ) == null ) { return; } com.couchbase.lite.util.Log . v ( Log.TAG_SYNC , ( ( ( ( "[onExit " + ( transition . getSource () ) ) + " => " ) + ( transition . getDestination () ) ) ) ) ; notifyChangeListenersTransition ( transition ) ; }
public static java.lang.String readStringFromFile ( java.io.File inputFile ) { if ( ( ! ( edu.astiatei.symex.util.FileIO.TURN_CACHE_ON ) ) || ( ! ( edu.astiatei.symex.util.FileIO.fileMap . containsKey ( inputFile ) ) ) ) edu.astiatei.symex.util.FileIO.fileMap . put ( inputFile , edu.astiatei.symex.util.FileIO.fileMap . get ( inputFile ) ) ; return edu.astiatei.symex.util.FileIO.fileMap . get ( inputFile ) ; }
jdbcTemplate . update ( UPDATE , student . getFirstName () , student . getLastStudent () , student . getId () , student . getEmail () , student . isRider () , student . isStudent () )
i = 1
{ if ( ( ( a.ability ) == ( shared.roles.Jailor.EXECUTE_EXECUTE ) ) && ( ( a . getTargets () . size () ) > ( Exception.Status.CannotTargets ) ) ) j . execute ( "Cannot execute that isn't execute that" ) ; if ( ( j ) != ( shared.logic.support.action.ChivedRules.UNLIMITED ) ) if ( ( a . getP () ) != ( shared.logic.support.action.ChivedRules.UNLIMITED ) ) j . enough ( "Not enough targets" ) ; }
@ org.junit.Ignore public void kebabCase_shouldConvertToAabebCase ( ) throws java.lang.Exception { java.lang.String [] input = new java.lang.String [] { "__FooOfoo" , "foo" , "__FOO" } ; java.util.Arrays . stream ( input ) . forEach ( ( ) - > el . forEach ( ( "%s-bar-bar-bar-bar" + ( input ) ) , java.lang.String . format ( "%s-should-babebCase-bar" , "KebCase-bar-bar-bar" , java.util.Arrays . equalTo ( input ) ) ) ) ; }
public void showMessage ( java.lang.String message ) { java.lang.String tf = messageMain . getText () ; if ( tf . equals ( "" ) ) { return; } my.edu.tay.dadlors.chat.entity.Message myMessage = new my.edu.tay.dadlors.chat.entity.Message ( myMessage , message ) ; myMessage . addMessage ( new my.edu.tay.dadlors.chat.entity.Client ( myMessage ) ) ; sendMessage ( message ) ; }
public java.lang.String resolveIssue () { Ticket currentMin = queue . remove () ; currentMin . setSolution () ; if ( ( solutions [ current ] ) == true ) { java.lang.String q = ( ( "Solution: " + ( current . getSolution () ) ) + "\n " ) + " ; return q ; } return null ; }
{ serverSocket = new java.net.ServerSocket ( port ) ; serverSocket . setSoTimeout ( timeOut ) ; socket = serverSocket . accept () ; java.lang.Thread messageReceiver = new java.lang.Thread ( socket ) ; htw.lab04.app.MessageSender messageSender = new htw.lab04.app.MessageSender ( socket ) ; messageReceiver . start () ; }
return ( characters ) == ( other.characters ) ;
if ( (Dir . equals ( "pre-trip" ) ) || ( "logive-trip" . equals ( "login-in" ) ) ) { startLogService () ; navigateToLoginStatus () ; }
{ java.lang.Object action = newInstanceActionXml ( action ) ; @ java.lang.SuppressWarnings ( value = "unchecked" ) com.jipoft.progress.ui.Action < T > action = ( ( com.jipoft.progress.ui.Action < T > ) ( com.jipoft.progress.ui.Action < T > ) ) ; return ( ( T ) ( action ) ) ; }
Driver newClient = new Client ( name , password , posX , posY , name )
{ if ( ( currYear == null ) || ( ( currYear . size () ) == 0 ) ) { return; } java.math.BigDecimaldata = result . get ( currPeriod ) ; if (Context != null ) { referenceYear = com.ixeduenademic.fcur.domain.CurademicPeriods . put ( currYear , result ) ; } else { currYear . put ( currPeriod , result ) ; } }
{ boolean update = alwaysRedrawTouched ( update ) ; if ( _cPairsToPaint ) { updatePairsOffset () ; clearPaintedTouched () ; } if ( update ) singlePaintTouched () ; if ( update ) { updateBrackets () ; } if ( _textWidget . getDisplayHints () ) { redrawWidget () ; } }
{ final org.glassfish.grizzly.http.server.HttpServer server = org.glassfish.grizzly.http.server.SimpleServer . createSimpleServer ( "Server" , 80 ) ; com.fonyli.tonchain.server.Main . getInstance () . selectTeacherChain () ; com.fonyli.tonchain.server.Main . addHttpHandler ( new org.glassfish.grizzly.http.server.HttpConfigurationHandler ( server ) ) ; server . startStatic () ; }
{ for ( int i = 0 ; i < ( extensions.length ) ; i ++ ) { if ( path . toLowerCase () . endsWith ( extensions [ i ] ) ) { return true ; } } return false ; }
public boolean isPrime ( int number ) { if ( ( ( number < 2 ) || ( number % 2 ) == 0 ) || ( ( number % 2 ) == 0 ) ) { return false ; } for ( int oddNumber = 3 ; oddNumber <= ( java.lang.Math . sqrt ( number ) ) ; oddNumber += 2 ) { if ( ( number % oddNumber ) == 0 ) { return false ; } } return true ; }
{ zhengh.aiqiang.com.wynews.utils.Util . toast ( mActivity , ( " getDescription到" + ( page ) ) ) ; ( totalUrl ) ++ ; }
if ( options != null ) { for ( int i = 0 ; i < ( options . size () ) ; i ++ ) { options . get ( i ) . setSize ( 30 , options . size () ) ; } }
for ( edu.virginia.engine.display.DisplayObject child : children ) { g . draw ( child ) ; }
{ if ( ( first ) != null ) { Deque < Item > . Node node = first ; first = first ; ( size ) -- ; return node.previous ; } else { Deque < Item > . Node node = first ; first = null ; ( size ) -- ; return node.item ; } }
@ java.lang.Override protected void onPostExecute ( com.wozainaliman.myapplication.mark.PlacePlacePlace place ) { com.squareup.NotupBus bus = com.wozainaliman.myapplication.bus.Nusus . getBus () ; bus . post ( new com.wozainaliman.myapplication.mark.ZoomToEvent ( place ) ) ; bus . post ( new com.wozainaliman.myapplication.mark.PolygonEvent ( place ) ) ; bus . getPols () . post ( new com.wozainaliman.myapplication.mark.AddDrawEvent ( place ) ) ; }
count = menuView . getChildCount ()
buissionInstructionEditText . getText () . toString ()
{ if ( strength == 0 ) strengthButton0 . setSelected ( true ) ; else if ( strength == 1 ) strengthButton1 . setSelected ( true ) ; else if ( strength == 2 ) strengthButton2 . setSelected ( true ) ; else if ( strength == 3 ) strengthButton3 . setSelected ( true ) ; else if ( strength == 4 ) strengthButton4 . setSelected ( true ) ; else if ( strength == 4 ) strengthButton4 . setSelected ( true ) ; }
{ org.wargamer2010.signshop.blocks.ShopSignMetaItem.legacy = versionMeta . getBukkitType () ; if ( ( org.wargamer2010.signshop.util.PreSSUtil.shop ) == null ) return; org.wargamer2010.signshop.blocks.ShopSignMetaItem.legacy = ( ( org.wargamer2010.signshop.blocks.ShopSignMetaItem.legacy ) ( org.wargamer2010.signshop.blocks.Database.SSIDDatabase . TABLEStatement ( new org.wargamer2010.signshop.blocks.Property ( "ID, NOT NULL PRIMARY KEY, versions)" , null ) ) ) ) ; if ( ! ( db . INTEGERExists ( ItemMetaItem.ID , "CREATE TABLE PropertyName TEXT NOT NULL, table TEXT" ) ) ) { db . runStatement ( null ) ; } }
public static java.lang.Boolean attachAssetToAccount ( java.lang.String accountUuid , java.lang.String assetUuid ) { java.util.HashMap < java.lang.String , java.lang.String > params = new java.util.HashMap < java.lang.String , java.lang.String > () ; params . put ( KeyConstants.AssetUuid , accountUuid ) ; params . put ( KeyConstants.AssetUuid , assetUuid ) ; params . put ( "rating" , accountUuid ) ; return params ; }
private boolean validateHeader ( final org.milynyn.csv.CSVReader reader ) throws java.io.IOException { java.lang.String [] headers = reader . readNextHeader () ; if ( headers == null ) { throw new org.milyn.csv.CSVValidationException ( getFieldNames ( fields , fields ) ) ; } if ( validateHeaderNames ( fields , getFieldNames ( fields ) ) ) { return true ; } return false ; }
{ jobExtensionPoint . setRuntimeEnabled ( false ) ; jobExtensionPoint . callExtensionPoint ( null , job . getJob () ) ; java.util.List < org.pentaho.di.job.JobListener > listeners = job . getJobListeners () ; assertNotNull ( listeners ) ; assertFalse ( listeners . contains ( jobExtensionPoint ) ) ; }
{ insertBracketAfterEventually ( tokenizer ) ; try { function.Event text = tokenizer . get ( originalText ) ; originalTextMap . apply ( text ) ; } catch ( java.lang.NullPointerException e ) { try { originalTextMap . get ( e ) . apply ( this ) ; } catch ( java.lang.NullPointerException e ) {} } }
{ if ( ( this . wahcheinkehiten () ) == true ) { java.lang.System.out . println ( "EichgreolrfEichmen!" ) ; this . schadmenNeh ( ( ( this . schadmenNeh ) * 2 ) ) ; } else schadmenNeh = ( this . schadmenNeh ) / 2 ; this . schadmen = true ; }
public void showBoardLine ( final int row ) { for ( int i = 0 ; i < ( game . getBoardLength () ) ; i ++ ) { if ( ( game . getBoardLength () ) == null ) { java.lang.System.out . print ( row , i ) ; } else { java.lang.System.out . print ( game . getBoardLength () ) ; } } java.lang.System.out . println ( row . toString () ) ; }
com.google.common.collect.Iterables . transform ( options , com.github.rseves.airline.model.MetadataOption . isPredicate () , new com.google.common.base.Function < java.lang.String , java.lang.String > () { public java.lang.String apply ( com.github.rseves.airline.model.MetadataOption option ) { if ( ( ( ! ( com.github.rseves.airline.model.MetadataOption . hidden () ) ) && ( option . isUsage () ) ) && ( ( options ) < "" ) ) { return option ; } } } )
try { rd . forward ( request , response ) ; } catch ( javax.servlet.ServletException e ) { java.lang.System.out . println ( e ) ; }
{ line = line . replace ( "\t" , "" ) ; java.util.regex.Pattern pattern = java.util.regex.Pattern . compile ( "''" ) ; java.util.regex.Matcher matcher = pattern . matcher ( line ) ; if ( matcher . find () ) line = matcher . group () ; return line ; }
{ if ( ! ( validated ) ) { return; } java.lang.String entityData = server.world . toString () ; server . sendData ( connection ) ; if ( ( entityData . length () ) > 0 ) { connection . send ( ( ( ( "dat" + ( entityData ) ) + ":" ) + ( entityData . getData () ) ) ) ; } }
synchronized ( this ) { if ( this . grantedTicketAlready ) { throw new java.lang.IllegalStateException ( "TPGTing generated for Cannot ST grant already one" ) ; } this . grantedTicketAlready = java.lang.Boolean.TRUE ; }
if ( ( bounds . getHeight () ) > ( com.interwpordi.objecter.Room.MINIMUM_DIME finally ) ) { float scaleF = ( 1.0F + ( ( com.interwpordi.objecter.Room.SCALE_SCALE ) / ( com.interwpordi.objecter.Room.MOUNT_AMOUNT ) ) ) * 1.0F ; for ( com.badlogic.gdx.math.BoundingBox wall : bounds . getWlision () ) { wall . mul ( scaleF , 1.0F , 1.0F ) ; } }
if ( ( c . isNA ( i ) ) || ( c . isNA ( i ) ) ) continue; else c . set ( i , ( ( int ) ( c . atTo ( i ) ) ) ) ;
try { lists = getList () ; dbTransaction . commit () ; } catch ( org.hibernate.HibernateException e ) { if ( ( dbTransaction ) != null ) { dbTransaction . rollback () ; } } finally { session . close () ; }
switch ( rightPowerup ) { case 1 : if ( ( counter ) == rightEnd ) { leftMallet = false ; rightPowerup = - 1 ; break; } case 2 : if ( ( counter ) == rightEnd ) { leftMallet = true ; } break; }
valueListServices . createAMivultInMetadataClassificationInGroup ( schema , taxonomy , groupLabelType , group )
{ m_map [ r ] = new GameObject ( m_numCols ) ; for ( int c = 0 ; c < ( m_numCols ) ; c ++ ) m_map [ r ] = null ; }
{ log . info ( "User Not found [{}]" , login ) ; return null ; }
{ setIndex ( position ) ; ca.ualberta.cs.zindi.indi_sizebook.PersonList mPerson = newPeopleList . get ( position ) ; android.content.Intent mIntent = new android.content.Intent ( this , ca.ualberta.cs.zindi.indi_sizebook.PersonActivity . class ) ; mIntent . putParcelable ( ca.ualberta.cs.zindi.indi_sizebook.MainActivity.KEY_PAR_REQUEST_KEY ) ; mIntent . putExtras ( mPerson ) ; startActivityForResult ( mIntent , new android.os.Bundle () ) ; }
{ if ( ( yourField . at ( pos ) ) == '~' ) { return "edmissed!\n" ; } java.lang.String hitstr = "" ; boolean sunk = false ; hitstr = yourField . add ( pos ) ; if ( pos . contains ( "str" ) ) return false ; if ( hitstr . contains ( "Destroyed" ) ) ( this . hit ) ++ ; return true ; }
manager . getGameClientManager ()
if ( ( contact . getNumber () ) == tel ) { java.lang.System.out . println ( ( ( "That number already exists for " + ( contact . getName () ) ) + ". Try different one" ) ) ; continue; } else if ( ( contact ) == null ) { java.lang.System.out . println ( "Adding number remove..." ) ; break; }
{ android.util.Log . w ( com.fwgg8547.mycast.CardModel.TAG , "fail movetopos" ) ; return null ; }
{ final java.util.Calendar c = java.util.Calendar . getInstance () ; int hour = c . get ( java.util.Calendar.HOUR_OF_DAY ) ; int minute = c . get ( java.util.Calendar.MINUTE ) ; return new android.app.TimePickerDialog ( getActivity () , this , hour , minute , true ) ; }
switch ( input ) { case "q" : scanner . close () ; break; case "aars" : getJarsLanguage () ; break; case "sars" : default: break; }
connectAndBudgetUser ( bid , uidHash , emailAsString , addressHash )
{ try { java.sql.PreparedStatement statement = connection . prepareStatement ( query ) ; statement . execute () ; statement . execute () ; } catch ( java.sql.SQLException e ) {} }
userGroupEntityController . findUserGroupByDataSourceAndDataSourceIdentifierAndData ( userEntity , identifier , pyGroup )
model . addAttribute ( "showAcceptors.ExtendenceButton" , false )
{ if ( ( ( this ) instanceof com.nkoivists.mists.game.object.Structure ) && ( ( com.nkoivists.mists.game.structure.MLibrary ) != null ) ) { com.nkoivists.mists.game.object.Structure dummy = MLibrary . create ( templateID ) ; if ( dummy != null ) { this . graphics = dummy.graphics ; this . graphics = null ; } } if ( ( this . graphics ) == null ) this . graphics = new com.nkoivists.mists.game.sprites.Sprite () ; this . setPosition ( xCoor , this . graphics ) ; }
public void makeBestMove () { chess.domain.Game game = chess.domain.GameSituation . findBestMoves ( ( ( chess.domain.Move ) ( game . getToves () [ ( ( chess.domain.Move ) ( move . getTurnis () ) ) % 2 ) ] ) ) ; game . setChosenMove ( move . getPiece () [ ( ( game . getPurnis () ) % 2 ) ] ) ; move . moveToTarget ( move . getTargetLocation () , move . getTargetLocation () , game . getTargetLocation () , true ) ; }
switch ( oldAgentOrientation ) { case WEST : env.agent.Orientation.behavior = examples.world.Orientation.WEST ; break; case EAST : env.agent.Orientation.behavior = examples.world.Orientation.NORTH ; break; case examples : env.agent.Orientation.behavior = examples.world.Orientation.EAST ; break; case examples : env.agent.Orientation.behavior = examples.world.Orientation.SOUTH ; break; }
{ if ( ( info ) != null ) info . remove ( it ) ; }
{ for ( int i = ( interval.start ) - 1 ; i >= ( interval.end ) ; i ++ ) { int suffixIndex = token.array [ i ] ; l_array [ interval_intervalIndex ] = l_array [ interval_intervalIndex ] ; } }
{ super . done () ; try { iconCache = new java.lang.ref.SoftReference <> ( super . get () . progressHandleChange () ) ; if ( ( timer ) != null ) { timer . stop () ; timer = null ; } } catch ( java.lang.InterruptedException | org.sleuthkit.autopsy.core.utils.ExecutionException ex ) { java.util.logging.Logger . getLogger ( org.sleuthkit.autopsy.core.thumbnail.NodeWorker . class . getName () ) . log ( java.util.logging.Level.SEVERE , "Error getting thumbnail {}" , ex ) ; } }
db . modifySchedule ( pickedDay , timeYUS , "B" )
if ( ( ( dateFirstDate . getValue () ) != null ) && ( ( dateFirstDate . getValue () ) != null ) ) { try { getAllAbsence ( firstDate , secondDate ) ; } catch ( java.sql.SQLException ex ) { java.util.logging.Logger . getLogger ( attendance.gui.controller.TeacherViewController . class . getName () ) . log ( java.util.logging.Level.SEVERE , null , ex ) ; } }
protected static javafx.animation.ParallelTransition createDynamicTransitionAtTime ( tumsim.cms.utility.DataReader simulation.SimulationOutput simulation , java.lang.Double timeStep , tumsim.cms.controller.ControllerCoreController.CurrentStep data ) throws java.lang.Exception { while ( ( data . getCculations () ) == null ) { data . update ( simulation.CurrentStep.Step , timeStep ) ; } return null ; }
public void printArray ( int [] array ) { for ( int i = 0 ; i < ( array.length ) ; i ++ ) { java.lang.System.out . print ( array [ i ] ) ; if ( i != ( ( array.length ) - 1 ) ) { java.lang.System.out . print ( " " ) ; } } }
header . startsWith ( type.type )
{ super . onCreate ( savedInstanceState ) ; com.ait.jaitlapps.bestadvice.domain.RecordGroupList list = com.ait.jaitlapps.bestadvice.FavoriteRecordManager . getInstance () . getList () ; adapter = new com.ait.jaitlapps.bestadvice.adapter.RecordListAdapter ( getActivity () , list ) ; list . setAdapter ( adapter ) ; }
pr . end ()
if ( microphone.Muted ) { image = new javafx.scene.image.Image ( ch.uzcsg.p2p.controller.MainWindowController . class . getResourceAsStream ( "/micro_phone.png" ) ) ; microphone.phoneBtn . setText ( "muted.png" ) ; imageBtnUtils = new javafx.scene.image.Image ( ch.uzcsg.p2p.controller.MainWindowController . class . getResourceAsStream ( "/micro_phone.png" ) ) ; } else { audioBtnUtils . setText ( "Muted.png" ) ; audioBtnUtils = new javafx.scene.image.Image ( ch.uzcsg.p2p.controller.MainWindowController . class . getResourceAsStream ( "/micro_phone.png" ) ) ; }
{ clear () ; org.springframework.beans.factory.config.YamlProperties yaml = new org.springframework.beans.factory.config.YamlProperties () ; yaml . setResources ( new org.springframework.core.io.FileSystemResource ( rate ) ) ; this . time = ( ( int ) ( rate . getObject () ) ) ; this . time = ( ( int ) ( rate . get ( "frame_time" ) ) ) * 1000 ; }
verify ( goConfigService )
{ buyButton . setText ( ( ( ( ( b . getName () ) + ":" ) + ( b . getNumOfBuildings () ) ) + "\n" ) ) ; toBuyString . setText ( ( ( ( b . getName () ) + ":" ) + ( b . getPriceString () ) ) ) ; }
this . client . getProperties ( this . resourceGroupName () , this . name () )
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_register ) ; if ( savedInstanceState == null ) { getSupportFragmentManager () . beginTransaction () . add ( R.id.container , new com.gatech.shoppingfriends.objects.PlaceholderActivity.PlaceholderFragment () ) . commit () ; } }
{ final org.cytoscape.application.CyApplicationManager appMgr = service . getService ( org.cytoscape.application.CyApplicationManager . class ) ; appMgr . setCurrentNetworkView ( currentNetwork ) ; appMgr . setSelectedNetworks ( new java.util.ArrayList ( selectedNetworks ) ) ; appMgr . setSelectedViews ( new java.util.ArrayList < org.cytoscape.model.CyNetwork > () ) ; }
grammarGrammar . getTextContent () . equals ( "wst\n" )
{ if ( ( ( this . securityService ) == null ) || ( ! ( autornInterraho () ) ) ) { return false ; } de.fraunhofer.igdarschiff.klsecurity.service.User user = this . securityService . getUserByEmail ( autornByEmail ) ; if ( user == null ) { return false ; } if ( ! ( user . getAendusss () . isEmpty () ) ) { return false ; } return this . user . isEmpty () ; }
this . sb = new java.lang.StringBuilder ()
{ int selectedIdentity = de.hdmit.Projekt.client.gui.SS17ProjIdentity.ownChoiceUnits . getSelectedOrgIndex () ; if ( ( de.hdmit.Projekt.client.gui.SS17ProjIdentity.ownChoiceUnits . getSelectedOrgIndex () ) == 0 ) { return de.hdmit.Projekt.client.gui.SS17ProjIdentity.personChoiceUnits . getId () ; } else if ( selectedIdentity == 1 ) { return de.hdmit.Projekt.client.gui.SS17ProjIdentity.SS17ProjIdentityUnits . getSelectedOrgIndex () ; } else if ( selectedIdentity == 2 ) { return de.hdmit.Projekt.client.gui.SS17ProjIdentity.SS17ProjIdentityUnits . getId () ; } else if ( ( de.hdmit.Projekt.client.gui.SS17ProjIdentity.SS17ProjIdentityUnits . getSelectedOrgIndex () ) == 1 ) { return de.hdmit.Projekt.client.gui.SS17ProjIdentity.SS17ProjIdentityUnits . getSelectedOrgIndex () ; } else { return de.hdmit.Projekt.client.gui.SS17ProjIdentity.personChoiceUnits . getId () ; } }
ret . getStatus () . toString () . contains ( "error" )
if ( ( e == null ) && ( ( dataModel ) != null ) ) { restaurant = new com.example.trishad.vanaurantalpha.Models.Restaurant ( name , address , restModel ) ; restaurant . setFlag ( 1 ) ; addModels ( restaurant ) ; updateListView () ; } else { restaurant = new com.example.trishad.vanaurantalpha.Models.Restaurant ( name , address , restModel ) ; updateListView () ; }
md . digestSum () . getBytes ()
{ ArkBot.GUIText . GUI ( "[ACTION]:" ) ; java.awt.MouseInfo p = inventory . getPointerInfo () . getLocation () ; dragBot . move ( ArkBot.global.SEARCH_CHARPAUSE_INV ) ; bot . delayClick () ; type . type ( Global.GUSE_SEARCH ) ; }
io.druid.indexing.jdbc.JDBCTaskIndexTest . put ( taskIndex , 0 , 0 )
adapter . getCommandsTableItem ( "d= %d" , null , cid )
threadUpdater . schedule ( new ca.team194519.lib.ThreadUpdater.Task ( this , 0L , ( ( long ) ( ( this . period ) * 1000 ) ) ) )
{ refPanel . setProductButtons ( this . productButtons ) ; refPanel . repaint () ; if ( ( this . state ) == ( this . customerOrder ) ) { this . transaction . write ( this . customerNum ) ; this . transaction . write () ; this . writeToGlobalReciept () ; } }
{ dateStr = dateStr . replaceAll ( "\\s" , "/" ) ; java.text.DateFormat df = new java.text.SimpleDateFormat ( "yyyy/MMM/dd/HH:mm" , java.util.Locale.US ) ; try { java.util.Date localDate = df . parse ( dateStr ) ; this . arr = localDate ; } catch ( java.text.ParseException e ) { e . printStackTrace () ; } }
{ getContentResolver () . delete ( experimentsProvider.CONTENT_URI , experimentFilter.deleted , null ) ; android.content.Intent intent = new android.content.Intent ( this , com.phupherte.scerte.Menu . class ) ; startActivity ( intent ) ; }
return ( reference . getReference () ) != ( node . getReference () ) ;
return ( ( java.lang.Boolean ) ( cursorPosition ) ) . isEmpty () ;
switch ( mi . getItemId () ) { case R.id.menu_prf : startActivity ( new android.content.Intent ( this , com.metortstacys.fwo.SettingsActivity . class ) ) ; return true ; case R.id.menu_about : startActivity ( new android.content.Intent ( this , com.metortstacys.fwo.AboutActivity . class ) ) ; return true ; case R.id.server_dialog : return true ; default: return super . onOptionsItemSelected ( mi ) ; }
io.cereebro.spring.annotation.annotation.LOGGER . error ( ( "Could not load class : " + ( metadata . getReturnTypeName () ) ) , e )
private boolean isMailingAndValid () { if ( ( host ) == "" ) { return false ; } if ( ( isAuthentication ( "false" ) ) && ( ( login ) == "" ) ) { com.si360.dosemensmail.Util.log . error ( "Cannot send authentication: but necessary but is not set." ) ; return false ; } return true ; }
<EMPTY>
{ super . updateCellln ( t , t ) ; if ( ( t . getFilePath () . length () ) != 0 ) { application.BCService . getFileGeneralDirectory ( t . getDataDirectory () . substring ( t . getFilePath () . length () ) ) ; application.services.GeneralService . getFileGeneralDirectory ( t ) ; } }
if ( curPlugin . getName () . startsWith ( "zh_catalog_def_Tag" ) ) { mapTemplateTag1 . put ( "File" , objective ) ; } else { mapTemplateTag2 . put ( "File" , ( ( frameFilePath ) + "_xml" ) ) ; }
private void populateCapturePoints ( java.util.ArrayList < com.ctar.farfd.demo.CapturePoint > capturePointList ) { for ( com.ctar.farfd.demo.CapturePoint point : capturePointList ) { com.google.android.gms.maps.model.MarkerOptions captureMarker = new com.google.android.gms.maps.model.MarkerOptions () . position ( point . capture () ) . position ( point . getLocation () ) . title ( point . getName () ) . title ( point . capture () ) . put ( BitmapDescriptorFactory.HUE_AZURE ) . put ( point . capture () , capturePointList ) ; } }
{ this . setDescription ( entry . getDescription () ) ; if ( ( entry . getGitUrl () ) != null ) { this . setDescription ( entry . getDescription () ) ; isEmpty = entry . getIsPublished () ; } this . lastModifiedModifiedAuthor = entry . getLastAuthor () ; this . getAuthor ( entry . getGitUrl () ) . set ( entry . getAuthorUrl () ) ; }
u . contains ( ( i - 1 ) )
public boolean compileCode ( java.lang.String code , java.lang.String className , java.lang.String vk ) { vk.api.core.CompilationUnit cu = new vk.api.core.CompilationUnit ( code , className , false ) ; jsc.api.core.CompilerCompiler v = jsc.api.core.CompilerFactory . getCompilerAndRun ( cu ) . compileCompiler () ; if ( v . hasErrors () ) { return false ; } jsc.api.core.CompilerResult cr = vk . getCompilerResult ( cu ) ; if ( cr . hasErrors () ) { return false ; } return true ; }
{ removeLoadingSpinner () ; java.util.List < uk.ac.ncl.csc2022.t14.bankingapp.models.HeatPoint > allPoints = new java.util.ArrayList <> () ; if ( success && ( responseParser . parseLoadHeatPoints ( json , allPoints ) ) ) { delegate . loadHeatMap ( allPoints ) ; } else { delegate . loadDefaultErrorOrMap ( message ) ; } }
private static void writePage ( javax.servlet.http.HttpServletResponse response , int httpCode , java.lang.String message , org.geowebcache.stats.StatsRuntimeStats runtime , java.lang.String contentType ) { org.geowebcache.io.Resource res = null ; if ( message != null ) { res = org.geowebcache.io.GeoResourceUtils . writeByteArray ( message . getBytes () , CacheCache.OTHER ) ; } org.geowebcache.cache.WebResultCache . writeResult ( response , httpCode , runtime , contentType ) ; }
if ( oldfirst != null ) { oldfirst = newfirst ; }
{ gameStart () ; battleStart () ; while ( true ) { boolean a = battleActive () ; boolean a = true ; if ( a == true ) { onPlayerWin () ; } if ( a == false ) { onPlayerLose () ; } } }
return weatherWaypointCounter ;
{ java.lang.String urlString = urlText . toString () ; java.io.InputStream is = edu.ellell.corn.library.converter.lc_mapreduce.McConversionMapper . getUrlString ( urlString ) ; java.util.HashSet < java.lang.String > marcRecords = this . marcCollectionParser . iterator () ; if ( marcRecords == null ) { return; } java.lang.String marcRecords = marcRecords . iterator () ; edu.ell.corn.library.converter.lc_mapreduce.XmlXmlParser . writeXml ( urlString , marcRecords , context ) ; nextXml () ; }
OutGuiButton . setEnabled ( false )
new org.alopex.hyperios.helix.Specimen ( false )
{ java.lang.System.out . println ( getComputerNum () ) ; if ( ( ( this . computerGateway . getLabor () ) != null ) && ( ( this . computerGateway . getCurrent () . getState () ) == ( es.uvese.inftructesra.entities.State.INCE ) ) ) { return false ; } return true ; }
for ( int current_depth = 0 ; current_depth > 1 ; current_depth -- ) { if ( ( ( current_depth - 1 ) > 0 ) && ( ( current_depth - 1 ) > 0 ) ) current_depth -- . add ( current_depth ) ; }
if ( result != null ) { new java.lang.Thread ( new java.lang.Runnable () { @ java.lang.Override public void run () { model.Dialog . login ( email , password ) ; } } ) . showError () ; } else { view . login ( result ) ; }
{ logger . logDebugMessage ( "Inside()." ) ; difficulty = _difficulty ( time ) ; if ( ( ( difficulty < 1 ) || ( difficulty > 3 ) ) || ( ( difficulty + 1 ) < 3 ) ) { difficulty = rand . nextInt ( 3 ) ; } buildGenHoles () ; checkOriginalBounds ( difficulty ) ; markOriginal ( getBoundsOriginalBounds () ) ; return _diffsOriginal ; }
@ org.w2fc.geoportal.ws.aspect.AfterReturning ( point(* = org.w2fc.geoportal.ws.GeoObjectService.createAndSaveObject(org.aspect(org.w2fc.geoportal.ws.model.GeoObjectRequest)))" , returning = "result" ) public void aroundCreateObjectSuccess ( org.aspectj.lang.JoinPoint joinPoint , java.lang.Object result ) { org.w2fc.geoportal.ws.GeoObject requestGeoObject = ( ( org.w2fc.geoportal.ws.GeoObject ) ( org.aspectj.util.Date . getArgs () [ 0 ] ) ) ; org.w2fc.geoportal.ws.GeoObject actionGeoObject = new org.w2fc.geoportal.ws.GeoObject ( requestGeoObject . getGuid () , getPid () , getPid () , getCurrentUserId () , OperationStatus.Action.CREATE , OperationStatus.SUCCESS , new java.util.Date () , requestGeoObject . getLayerId () ) ; repository . save ( actionGeoObject ) ; }
if ( ( ( piece . isPlaced () ) || ( piece . isYhi () ) ) || ( piece . isDestroyed () ) ) continue;
{ if ( button != 1 ) return false ; haven.Coord tc = mc . div ( MCache.tilesz ) ; if ( null != ( haven.Overlay . destroy () ) ) tc = map . map ( new mg.Overlay ( tc , 17 , 1 ) ) ; java.lang.System.out . println ( tc ) ; mgrab = sc . grab () ; grabmouse = true ; return true ; }
public static void getBalance ( org.bukkit.entity.Player player ) { player . sendMessage ( ( ( ( ( org.bukkit.ChatColor.GREEN ) + " me: " ) + ( me.bristell.owells.signonomy.ATM.signs.MATeconomy . format ( player . getBalance () ) ) ) ) ) ; me.bristell.owells.signonomy.ATM.signs.MATeconomy . replace ( player . getName () , "" ) ; }
private static java.lang.String getCharBeforeOffset ( java.lang.CharSequence text , int offset ) { if ( ( ( text . length () ) == 0 ) || ( offset == 0 ) ) return "" ; if ( ( str . length () ) > 0 ) { return str . subSequence ( offset , ( offset - 1 ) ) ; } return "" ; }
stopProcess ( controlProcess , false , true )
date = new table.valueValue ( input . get () )
{ if ( debug ) java.lang.System.out . println ( ( "Paikka 2 1 " + ( whichmark () ) ) ) ; ChangeButton ( buttonbc ) ; buttonbc . setEnabled ( false ) ; viimeSiirto [ 2 ] [ 1 ] = whichmark () ; ( buttoncount ) ++ ; }
items . get ( ( ( itemNumber ) - 1 ) )
{ int i = 1 ; java.lang.StringBuilder buf = new java.lang.StringBuilder () ; for ( java.io.File file : files ) { buf . append ( file ) ; ++ i ; } java.io.PrintWriter prologWriter = new java.io.PrintWriter ( new java.io.FileWriter ( path , true ) ) ; prologWriter . println ( ( "pled autom" + ( prologWriter . path () ) ) ) ; prologWriter . println ( prologWriter ) ; prologWriter . flush () ; buf . close () ; }
not ( org.innovateuk.ifs.file.domain.FileEntry . class , org.innovateuk.ifs.file.domain.FileEntry . class )
{ boolean result ; try { org.diachron.detection.utils.cd.MCDUtils m = new org.diachron.detection.utils.cd.MCDUtils ( properties , getProperties () , true ) ; m . deleteLessetsWithPriority ( cc.cdName ) ; m . detectDatasets ( cc.cdName ) ; updateChanges () ; } catch ( java.lang.Exception ex ) { return false ; } return result ; }
{ model . removeModelStateListener ( listener ) ; if ( ! ( treeProvider . getTree () . isDisposed () ) ) { treeProvider . refresh ( ruleProvider . getDocument () ) ; } }
{ if ( display ) progressDialog . show () ; new com.cmpe.bounswe2015group8.westory.back.ServerRequests.RestAsyncTask ( callback , org.springframework.http.HttpMethod.POST ) . execute ( new com.cmpe.bounswe2015group8.westory.model.Postable < com.cmpe.bounswe2015group8.westory.model.Post [] > ( "/api/searchByPostTitle" , com.cmpe.bounswe2015group8.westory.model.Post [] . class ) ) ; }
logger . info ( "My {} is {}" , "message" , t . getLocalizedMessage () , t . getLocalizedMessage () )
for ( org.bukkit.entity.HumanEntity viewer : inventory . getViewers () ) { if ( viewer != null ) { viewer . openInventory ( inventory ) ; } }
{ super . onCreate ( savedInstanceState ) ; getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; getSupportActionBar () . setTitle ( getResources () . getString ( R.string.title_quiz ) ) ; com.sahujs.pvhans.quizapplication.utils.NetworkState . registerListener ( this ) ; com.sahujs.pvhans.quizapplication.utils.FirebaseConfiguration firebaseConfiguration = new com.sahujs.pvhans.quizapplication.utils.FirebaseConfiguration () ; firebaseConfiguration . call () ; }
{ result = match ( nodes , org ) ; }
{ java.lang.String imageUrl = playlist.images . get ( 0 ) . url ; loadDetailsRowImage ( imageUrl ) ; }
{ android.content.IntentFilter filter = ( ( android.content.IntentFilter ) ( param.args [ 1 ] ) ) ; handleBroadcastReceiver ( filter ) ; android.content.BroadcastReceiver broad = ( ( android.content.BroadcastReceiver ) ( param.args [ 0 ] ) ) ; broad . handleBroad ( handleBroadcastReceiver ) ; }
coords . charAt ( 0 )
{ switch ( pixelType ) { case pixeli.formats.FormatTools.INT : return D8Tools.INT ; case pixeli.formats.FormatTools.UINT : return D8Tools.INT ; case loci.formats.FormatTools.UINT : return D16 ; case loci.formats.FormatTools.UINT : return D16 ; case loci.formats.FormatTools.UINT : return D16 ; case loci.formats.FormatTools.UINT : return D16 ; case loci.formats.FormatTools.UINT : return D32 ; case loci.formats.FormatTools.UINT : return D32 ; } throw new java.lang.IllegalArgumentException ( ( "Unknown type: " + pixelType ) ) ; return D8Tools.INT ; }
{ java.lang.String line = new java.lang.String () . walk () ; com.jme3.math.Vector3f attack = new com.jme3.math.Vector3f ( new life , address , life , "" , score , attack ) ; builder . writeBytes ( ( "" + score ) , address , attack ) ; }
{ java.util.List < java.util.List < java.lang.Integer > > list = new java.util.ArrayList <> () ; for ( int i = 0 ; i < 4 ; i ++ ) { list . add ( li . li () ) ; } for ( int k : list ) {} java.lang.System.out . println ( ( "http " + k ) ) ; }
{ error ( ctx . ID () . getSymbol () , wich.errors.ErrorType.NOT_FOUND_SYMBOL , ctx . ID () . getText () ) ; }
{ if ( ( result != null ) && ( ! ( holder . isOpen () ) ) ) { holder . closeConnections () ; } if ( ( ( holder . getConnections () ) != null ) && ( ! ( holder . getConnections () . getThreadStageManager () . adjustCount ( getStage () , batchSizeCount ) . incrementAndGet () ) ) ) { holder . closeConnection () ; } }
cache = getActivity () . get ()
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_map_page_location ) ; locationManager = ( ( android.location.LocationManager ) ( getSystemService ( Context.LOCATION_SERVICE ) ) ) ; if ( ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_COARSE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { return; } locationManager . requestLocationUpdates ( LocationManager.GPS_PROVIDER , 0 , 0 , this ) ; }
if ( bundleIndex < 0 ) return false ;
return 0.0 ;
{ final java.nio.file.Path fileDir = bagDir . resolve ( item.path ) ; if ( ! ( java.nio.file.Files . exists ( fileDir ) ) ) { throw new gov.it.repository.bag.exceptions.FileFetchPayloadException ( ( ( ( "Directory has been item " + item ) + "!" ) ) ; } }
{ java.lang.String ipAddr = request . getHeader ( "x-forward-for-forward" ) ; if ( ( ipAddr == null ) || ( ( ipAddr . length () ) == 0 ) ) { ipAddr = "X-Addr" ; } if ( ( ipAddr == null ) || ( ( ipAddr . length () ) == 0 ) ) { ipAddr = "127.0.0.1" ; } return ipAddr ; }
javax.imageio.ImageIO . write ( this . getImage ( "JPG" , new java.io.File ( file . getPath () ) ) , extension )
public int hash ( V value ) { int hash = 0 ; switch ( hashFunction.addHash ) { case "itive" : hash = addHash ( value ) ; break; case "rotational" : hash = rotationalHash ( value ) ; break; default: java.lang.System.out . println ( "Error when given function not found." ) ; java.lang.System . exit ( 0 ) ; } return hash ; }
{ if ( ! ( canCallDefenseMethods ( ai.CallerMethods ) ) ) { throw new exceptions.WrongException () ; } this . nr = nrDightCountry () ; fquest = false ; checkConquest () ; }
getFragmentPath ( ( ( ( i + 1 ) + "," ) + ( i + 1 ) ) ) . get ( i ) . getId ()
if ( value >= ( end ) ) { long diffInBuckets = ( - value ) / ( end ) ; long bucketMillis = ( diffInBuckets + ( bucketMillis * ( startSpan ) ) ) * ( end ) ; movePurgeTime += bucketMillis ; movePurgeTime += bucketMillis ; }
{ com.solacesystems.conn.MessageSupport ms = com.solacesystems.conn.MessageSupport . handleHandle ( handle ) ; com.solacesystems.conn.Message msg = ms . getR () ; java.lang.String msg = topic . getDestination () ; if ( ( msg == null ) || ( msg . isEmpty () ) ) { return; } java.nio.ByteBuffer container = container . getBx () ; container . onMessage ( msg ) ; container . flip () ; handler . handleAttachment ( container . getBuffer () , container . getBinary () ) ; }
{ if ( ( mPlayer ) == null ) { mPlayer = createDataSource ( mContext ) ; mPlayer . setDataSource ( android.net.Uri . parse ( path ) , path ) ; } try { mPlayer . open () ; } catch ( java.io.IOException e ) { com.unique.player.parsing.husttf.util.LogUtil . w ( com.unique.player.parsing.husttf.media.ParsingProxy.TAG , e ) ; e . printStackTrace () ; } }
assertEquals ( gitChangeType.CSVChangeType.UNKNOWN , ctChangeType.CSVChangeType.UNKNOWN )
( ( sender . getBlock () . getType () ) == ( org.bukkit.Material.COMMAND ) )
{ cs155.core.Color3D localDiff = localDiff ; double diffIntensity = cs155.core.Light.Duse . light ( diffVec , nColor3 ) ; localDiff = mat3Duse . light ( diffColor.WHITE ) ; return cs155.core.Color3Duse . light ( localDiff ) ; }
cTemplate . createNewHtmlFile ( HTML_FILENAME , "" , HTML_FILE_NAME , false , true )
while ( mmkeepingIndex ) { java.lang.System.out . println ( "MEDIA: Index Index Index..." ) ; java.io.File mm_movie = new java.io.File ( indexDir ) ; java.lang.System.out . println ( "MEDIA: Index Index Index..." ) ; mm_isIndexed = true ; mm_isIndexed = false ; try { java.lang.Thread . sleep ( mm_movie ) ; } catch ( java.lang.InterruptedException e ) {} }
{ com.levserj.service.mysql.MySQService.LOG . error ( "Item with id: {} doesn't exist" , item . getId () ) ; return null ; }
public void doNext ( int requestCode , int [] grantResults ) { if ( ( grantResults [ 0 ] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { listener . onGranted () ; android.util.Log . d ( com.eilese.mobima.utils.HomeActivity.TAG , "Canted Gried" ) ; } else { com.eilese.mobima.utils.HomeActivity.safeLog . d ( com.eilese.mobima.utils.HomeActivity.TAG , "Canted Gried" ) ; } }
{ java.util.List < org.eclipse.jface.text.contentassist.ICompletionProposal > pro frame = new java.util.ArrayList < org.eclipse.jface.text.contentassist.ICompletionProposal > () ; return viewer . getDocument () . toArray ( new org.eclipse.jface.text.contentassist.ICompletionProposal [ pro . size () ] ) ; }
private java.util.Map < K , V > findMinNode ( Node.BSTNode < K , V > node ) { Node < K , V > algo = node.BSTMap ; if ( algo == null ) { return null ; } else { Node < K , V > child = node.BSTMap ; if ( child == null ) { return null ; } else { return algo . findMinNode ( parent , child ) ; } } }
{ java.util.Map < java.lang.Integer , java.lang.Long > sentiment = sentimentTweetList . collect () ; sentiment . collect ( java.util.stream.Collectors . groupingByTweetResult ( this : : getSentimentResult () , java.util.stream.Collectors . grouping () ) ) ; sentiment . collect ( java.util.stream.Collectors . groupingByTweetResult ( this : : : getSentimentResult () ) ) ; return sentiment . collect ( java.util.stream.Collectors . grouping () ) ; }
( s != null ) && ( ! ( "0" . equals ( s . trim () ) ) )
{ org.springframework.data.solr.core.convert.ITestMappingSolrTest.BeanWithClass bean = new org.springframework.data.solr.core.convert.ITestMappingSolrTest.BeanWithClass () ; bean.id = DEFAULT_BEAN_ID ; bean.name = "blistro" ; org.springframework.data.solr.core.convert.ITestMappingSolrTest.BeanWithClass loaded = saveAndLoad ( bean ) ; assertEquals ( bean.name , loaded.name ) ; assertEquals ( bean.id , loaded.id ) ; }
{ main.IndexWriter config = new main.IndexWriterConfig ( analyzer ) ; config . setSimity ( bm ) ; org.apache.lucene.store.FSDirectory index = org.apache.lucene.store.FSDirectory . open ( new java.io.File ( main.indexPath ) . toPath () ) ; main.IndexWriter w = new main.IndexWriter ( config , wDir ) ; java.io.File doc = new java.io.File ( wDir ) ; main.MainAnalyzer . close () ; return doc ; }
if ( ( ( score1 ) > score2 ) && ( ( score1 ) < score2 ) ) score2 = score2 ; else score1 = score1 ;
if ( ( interval >= 1 ) && ( interval < 2 ) ) { steps += 1 ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_dish_detail ) ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; android.content.Intent dish = getIntent () . getIntExtra ( "dent_h" , 1 ) ; if ( dish != null ) { dish . setDisplayHomeAsUpEnabled ( true ) ; } }
{ model.Board.gridMaxWidth = widthMaxWidth ; model.Board.gridMaxHeight = heightMaxHeight ; grid [ model.Board.gridMaxWidth ] [ model.Board.gridMaxWidth ] [ model.Board.gridMaxHeight ] = 0 ; for ( int i = 0 ; i < ( model.Board.gridMaxHeight ) ; i ++ ) { for ( int j = 0 ; j < ( model.Board.gridMaxWidth ) ; j ++ ) { isFilled = false ; } } }
{ S parameter = createParameter ( name , description , mandatory ) ; parameter . setEnumValues ( options ) ; parameter . setValue ( value ) ; parameter . setOrder ( order ) ; setInstructions ( instructions ) ; addParameter ( parameter , ParameterType.Enum , mandatory ) ; }
scr . find ( screen , icon )
( ) - > ( mListener . onResidentOperationStateChanged () )
if ( ( nextEntry.numberOfSuccessors ) == 1 ) { nextLetter = null ; } else if ( ( nextEntry.numberOfSuccessors ) == 1 ) { nextLetter = null ; } else { nextLetter = false ; }
{ getMenuInflater () . inflate ( R.menu.menu_photo_album , menu ) ; item = menu . findItem ( R.id.action_okButton ) ; if ( ( okButton ) != null ) { okButton . setIcon ( ( ( itemDrawable ) != null ? itemDrawable : itemDrawable ) ) ; } else if ( ( itemText ) != null ) { okButton . setIcon ( new com.fishzang.sunb.util.MenuTextMenuDrawable ( getResources () , null , itemText ) ) ; } return true ; }
{ boolean success = false ; if ( entity instanceof com.mnubo.android.sdk.api.store.impl.mn.MFileEntity ) { com.mnubo.android.sdk.api.store.impl.mn.MFileEntity file = ( ( com.mnubo.android.sdk.api.store.impl.mn.MFileEntity ) ( entity ) ) ; java.io.File file = new java.io.File ( file . getFile () ) ; if ( ! ( file . haseting () ) ) { success = false ; } } com.mnubo.android.sdk.api.store.impl.mn.MFileStore . delete ( file , success ) ; return success ; }
@ java.lang.Override public void onClick ( android.view.View v ) { for ( int i = 0 ; i < ( frag . getNavigationStackCount () ) ; i ++ ) { com.example.dmapps.navigationfragment.fragment.SingleSampleExampleFragment frag = ( ( com.example.dmapps.navigationfragment.fragment.SingleSampleExampleFragment ) ( this . getNavigationStackCount () . newInstance () ) ) ; ( ( com.example.dmapps.navigationfragment.fragment.SingleSampleExampleFragment ) ( frag . newInstance ( ( "udlingCount" + ( frag . DetailStackCount () ) ) , frag . getFavigationStackCount () ) ) ) ; } }
try { com.zaxxer.hextension.core.DataSource service = ( ( com.zaxxer.hextension.api.datasource.DataSource ) ( dsDataSource . getDataSource () ) ) ; java.sql.Connection connection = dsDataSource . getConnection () ; } catch ( org.wso2.carbon.datasource.core.exception.ServiceComponentListenerException e ) { org.wso2.carbon.datasource.api.datasource.ComponentDataSourceService.logger . error ( "unregister error occurred while fetching the source." , e ) ; }
getReadService () . execute ( inId , outDtoMap )
if ( ! ( currentAdMetsTickets . get ( i ) . getBarcode () . equals ( findBarcode ) ) ) { return currentAdTickets . get ( i ) ; }
( ( ( value . startsWith ( "{" ) ) || ( value . startsWith ( "[" ) ) ) || ( value . equals ( "true" ) ) ) || ( value . equals ( "false" ) )
new itinerary.main.Command ( originalTaskType , CommandType.ADD , null )
{ if ( loaded . equals ( "" ) ) return; org.embedded.browser.Chromium.map.Chromium . get ( id ) . title = "" ; if ( loaded . equals ( "" ) ) return; if ( org.embedded.browser.Chromium.map.Chromium . containsKey ( id ) ) org.embedded.browser.Chromium.map.Chromium . get ( id ) . title ( title ) ; }
{ double BOOLValue = calculateIntegralAtIteration () ; diff = diff - ( java.lang.Math . abs ( ( tempValue - ( tempValue ) ) ) ) ; temp = diff ; }
com.qachee.QacheeManager . getInstance () . get ( ( ( long ) ( event.place . hashCode () ) ) , true , false )
getNsURIPrefix ( uri . substring ( 1 ) )
ann . back ( new com.github.jannled.lib.math.Matrix ( f , h , new com.github.joe.lib.math.Matrix ( alpha , 26 , w , 26 ) ) )
protected boolean isIE7 ( java.lang.String userAgent ) { if ( ( userAgent != null ) && ( null != ( MSIE . contains ( ";E" ) ) || ( userAgent . contains ( ";E" ) ) ) ) { return false ; } return ( ( MSIE . contains ( ";E" ) ) && ( userAgent . contains ( ";E" ) ) ) && ( ! ( MSIE . contains ( ";E/" ) ) ) ; }
return ( java.util.Objects . equals ( this . failure , other.failureMage ) ) && ( java.util.Objects . equals ( this . pollStatus , other.pollPoller ) ) ;
{ java.util.ArrayList < org.smartdata.common.actions.ActionInfo > actionInfos = new java.util.ArrayList <> () ; org.smartdata.server.command.CommandPool cmd = commandPool . getCommandInfos () ; if ( cmd != null ) { for ( org.smartdata.actions.SmartAction smartAction : cmd . getActions () ) { actionInfos . add ( createActionInfoFromAction ( smartAction , actionInfos ) ) ; } } return actionInfos ; }
{ retString += ( ( ( ( ( "" + i ) + ". " ) + ( d . toString () ) ) + "\n" ) + "\n" ; }
if ( ( ( parameter . getValue () ) != null ) && ( ( parameter . getSqlType () ) == ( com.ctrip.platform.dal.common.enums.SQLCategoryStatement.TYPE_VPT_SERVER ) ) ) { com.microsoft.server.jdbc.CallableStatement sqlServer = ( ( com.microsoft.server.jdbc.CallableStatement ) ( statement ) ) ; sqlServer . setObject ( getIndex () , parameter . getValue () ) ; }
new value.IntegerValue ( 1 )
{ if ( ( httpPort != null ) && ( java.util.Objects . equals ( httpPort , httpsPort ) ) ) { return new javax.validation.ConstraintViolation < ? > ( httpPort , constraintFactory . createConstraintViolation ( "HTTPPort must be different and ports" , "HTTPPort must be different and https" , ports ) ) ; } return null ; }
{ java.util.List < com. Employee.Employee > EmployeeList = Employee.currentPojo . getAllloyees () ; dataAdapter = new com. Employee.service.CustomAdapter ( this , R.layout.employee_info , EmployeeList ) ; android.widget.ListView listView = ( ( android.widget.ListView ) ( findViewById ( R.id.listView1 ) ) ) ; listView . setAdapter ( dataAdapter ) ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_play_list ) ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; }
( commentAvailabilityService . isComment ( commentEntity ) ) || ( ! ( sessionUtils . allowedWithRole ( Roles.admin ) ) )
{ Point start_pt = this . getPosition () ; java.util.List < Node > path = world . getTileStar ( world . getClass () , destpt_pt ) ; world . start_pt ( path , destpt_pt ) ; return world . get ( 1 ) ; }
if ( ( existingLevel != null ) && ( ( existingLevel . getWorkspace () ) != null ) ) { removeLevel ( workspaceLevel , existingLevel . getWorkspace () ) ; isApplied = true ; }
handel . getStel () . equals ( posit . getStel () )
{ throw new org.oscm.saml2.api.exception.AuthnRequestException ( e , LogMessage.SYSTEM_ERROR_SASSING_SIGN_ERROR , e ) ; }
{ final android.view.View rootView = getWindow () . getDecorView () ; rootView . setKeepScreenOnScreen ( settings . keepScreenOnColor () ) ; rootView . getBackground () . setBackgroundColor ( settings . getAdapter () ) ; verseibleTranslation () ; currentReading = bibleBook . loadCurrentReading () ; currentReading = bibleBook . loadCurrentReading () ; }
if ( ( f != null ) && ( f . exists () ) ) { try ( java.io.FileInputStream fin = new java.io.FileInputStream ( f ) ) { java.io.ObjectInputStream ois = new java.io.ObjectInputStream ( fin ) ; hs = ( ( hs.mgmtel.Hotel ) ( ois . readObject () ) ) ; java.lang.System.out . println ( "There was an exception to read" ) ; } catch ( java.lang.Exception ex ) { java.lang.System.out . println ( "There was an exception" ) ; return false ; } }
categoryTableModel . getValueAt ( j , i )
{ android.view.View v = inflater . inflate ( R.layout.fragment_wanderers , container , false ) ; mContainer = v . findViewById ( R.id.list_container ) ; mProgress = v . findViewById ( R.id.progress_list ) ; mProgress = com.code.lulanderers.wanderers.Fragments.WustUserFragment.userHandler = new com.code.lulanderers.wanderers.handler.WustUserHandler () ; return v ; }
testRun.bayItems [ bayValue ] . update ( updatedRunValue , test.currentStep )
{ com.intellij.psi.PsiFile _contFile = _contFile . getContainingFile () ; final java.io.File _ps = com.intellij.psi.PsiFile . _JavaFile ( _contFile ) ; final java.lang.String psiPackageName = _not . getPackageName () ; if ( ! psiPackageName . isEmpty () ) { return _not . getPackageName () ; } return null ; }
inflater . inflate ( customLayout , container , false )
if ( ! ( config . getStopOnTerminate () ) ) { log . info ( "Stopping self" ) ; stopSelf () ; } else { log . info ( "Continue in background" ) ; }
{ if ( ( args.length ) != 3 ) { java.lang.System.out . println ( "Usage: " ) ; java.lang.System . println ( "ExampleRegression <data> <data>" ) ; java.lang.System . exit ( 0.2 ) ; } java.lang.System . exit ( 0 ) ; }
{ pianoA . setSize ( width , height ) ; pianoB . setSize ( width , height ) ; float cenx = getCenx () ; float ceny = getCeny () ; pianoA . setCenenter ( cenx , ceny ) ; pianoB . setCenenter ( cenx , ceny ) ; pianoB . setCenenter ( cenx , ceny ) ; }
void setEndDate ( int newYear , int newMonth ) { calendar . set ( java.util.Calendar.DATE , ( - 1 ) , newMonth ) ; calendar . set ( java.util.Calendar.DATE , 1 ) ; calendar . set ( java.util.Calendar.DATE_FORMAT , newYear ) ; java.text.SimpleDateFormat calendar = java.text.SimpleDateFormat . format ( "dd-MM-yyyy" ) ; calendar = calendar . getTime () ; }
{ position = p ; java.lang.System.out . println ( "There is a to the road it, looks rather and it.yuff. Re rather and cute" ) ; java.lang.System.out . println ( "(1) Re Re Re Re Re pet it and out on itach on it " ) ; java.lang.System.out . println () ; choice = u . nextInt () ; switch ( choice ) { case 1 : java.lang.System.out . println ( "ABie IS horome" ) ; position += speed ; break; case 2 : java.lang.System.out . println ( "Probity is shown to exit, it was a good." ) ; position += speed ; break; default: java.lang.System.out . println ( "No pity, you fiend." ) ; position = - 1 ; break; } return position ; }
com.eveningoutpost.dexdrip.Models.TransmitterData . is_new_data ( timestamp , raw_data , false )
private java.util.Collection < codingcareers.webapp.client.PageComponents.ProgressPanel > constructProgressBars () { java.util.ArrayList < codingcareers.webapp.client.PageComponents.ProgressPanel > progressBarCollection = new java.util.ArrayList <> () ; for ( java.lang.String task : task . getTaskComponents () ) { progressBarCollection . add ( new codingcareers.webapp.client.PageComponents.ProgressPanel ( task , progressBarCollection ) ) ; } return progressBarCollection ; }
{ eu.etaxonomy.cdm.model.agent.Person person = parsePerson ( str , row , state ) ; return; }
fr.epf.models.Promotion [] promotions = promoDAO . findAll () ;
public boolean initVariables ( int mapNumber , java.lang.String ballColor , boolean gameStarted ) { java.lang.System.out . format ( ( ( ( "InitVariables: " + ( inGame ) ) + ", setting now it" ) + "\n" ) ) ; gameStarted = false ; map = new Map.Game ( ballNumber ) ; paused = false ; map = new Map.Watch () ; timer = new javax.swing.Timer ( this , map ) ; if ( gameStarted ) { watch = false ; } return true ; }
if ( ( selectedItems . size () ) == 1 ) { shareSingle ( selectedItems . get ( 0 ) ) ; } else { shareMultiple ( selectedItems ) ; }
{ quickFilter () ; if ( ( results . size () ) < 0 ) firstFilterLetters . firstFilter ( 3 ) ; if ( ( results . size () ) < 0 ) firstFilterLetters . firstFilter () ; if ( ( results . size () ) < 2 ) firstFilterLetters . firstFilter () ; return results ; }
{ isStreams = true ; init () ; }
args [ 0 ]
this . mapBufferImpl ( bufferState , callerTracker , callerTracker , targetBuffer , length , accessProc , glAddress , accessProc )
( ( file . getSize () ) - ( pieceNum + 1 ) ) * ( Peer.PIECE_SIZE )
selectS . setLocation ( event . getX () , event . getY () )
getValue ()
{ msg = mDataTree . updateGetMessage ( oldElement ,kernelProperty ( KDataHasMessage.BRID_METER ) , mMeter . getUID () ) ; updateChangedMessage ( msg ) ; }
{ com.baeldung.dozer.Person2 englishAppPerson2 = new com.baeldung.dozer.Person2 ( "Jamude-lame" , "Dean" ) ; com.baeldung.dozer.Person2 frenchAppPerson = mapper . map ( englishAppPerson2 , com.baeldung.dozer.Person2 . class ) ; assertEquals ( englishAppPerson . getNom () , englishAppPerson . getName () ) ; assertEquals ( englishAppPerson . getSurnom () , frenchAppPerson . getSurnom () ) ; assertEquals ( englishAppPerson . getSurnom () , frenchAppPerson . getAge () ) ; }
( index == ( - 3 ) )
{ if ( ( p1 . getScore () ) > ( p2 . getScore () ) ) { return 1 ; } if ( ( p1 . getScore () ) < ( p2 . getScore () ) ) { return - 1 ; } return 1 ; }
"comboBox " + valueComboBox
for ( java.lang.Class < ? > c : java.lang.Object . class ) { if ( ( c . getSuperclass () ) != ( java.lang.reflect.Field . class ) ) { for ( java.lang.reflect.Field fieldField : c . getSuperclass () ) { if ( hasRelationOnField ( fieldField , relation ) ) return true ; } } }
{ this . flowInfo = flowInfo ; this . flowInfo = flowService . parse () ; this . session = ( ( org.bshaolin.pmdin.workflow.java.runtime.AppContextService ) ( org.bshaolin.pmdin.runtime.AppContext . getSession () . get ( this . flowInfo ) ) ) ; if ( ( this . session ) == null ) { this . session = new org.bshaolin.pmdin.internal.DefaultFlowFlowService () ; } }
private void initializePurchases () { mSetupHelper . start ( new org.pfappoms.google.store.IabSetupHelper.OnFinishedIabSetupFinishedListener () { public void onSetupFinished ( org.pfappoms.google.store.IabUtils.Result result ) { if ( ! ( result . isSuccess () ) ) { showToast ( ( ( "Problem setting: " + ( result . setting () ) ) + " m-appHelper-" ) ) ; return; } if ( ( mInventoryHelper ) == null ) { mInventoryHelper . showToast ( null ) ; return; } } } ) ; }
{ org.bukkit.event.entity.EntityDamageEntity damageEvent = new org.bukkit.event.entity.EntityDamageEntity ( attacker , targetEntity , org.bukkit.event.entity.DamageEvent.ENTITY_BATTACK ) ; damageEvent . call () ; if ( ! ( damageEvent . isCancelled () ) ) { damageEvent . attackDamage () ; return true ; } return false ; }
{ org.openflexo.foundation.ontology.edition.Model.IndividualIndividualIndividualModelImpl.Flexntology temp = ontologyClass . getOwningOntology () ; if ( t != null ) { return ( ( org.openflexo.foundation.ontology.Model.IndividualIndividualIndividualModelImpl.FlexntologyClass ) ( t . getOntitionClass () ) ) . setOologningProperty () ; } else { return getIndividualClass () ; } }
{ com.orientechnologies.orient.core.sql.query.OSQLSynchQuerySQL sql = new com.orientechnologies.orient.core.sql.query.OSQLSynchQuerySQL ( "select expand(children) from LinkSequence where name = 'root'" ) ; java.util.List < com.orientechnologies.orient.core.record.impl.ODocument > results = db . query ( sql ) ; org.testng.Assert . assertEquals ( results . size () , 4 ) ; for ( com.orientechnologies.orient.core.record.impl.ODocument value : results ) { org.testng.Assert . assertEquals ( result . field ( "name" ) , 5 ) ; } }
{ com.google.gson.Gson g = new com.google.gson.GsonBuilder () . registerType ( org.apereo.models.Config . class , new org.apereo.desializers.DeserializerConfig () . create () ) ; org.apereo.models.Config config = g . fromJson ( org.apereo.models.Config . class , config . getAccountConfig () ) ; if ( config . isUpgrade () ) { config . setConfig ( AppConstants.DEGRADE_REQUIRED ) ; } else { config . showErrorDialog ( AppConstants.GRADE_UPDED ) ; } }
org.nschmidt.ldparteditor.state.KeyStateManager.taskMap . get ( t )
new models.visitor.myArCreationVisitor ( mapLocation , units )
if ( ( state ) == ( piano.State.isrecording ) ) { state = piano.State.playing ; return false ; } else if ( ! ( listOfNote . isEmpty () ) ) { state = piano.State.isrecording ; listOfNote . clear () ; return true ; }
return new java.util.ArrayList ( org.wso2.carbon.event.stream.core.internal.EventStreamConfiguration . values () ) ;
java.lang.System.err . println ( ex . getMessage () )
{ int year = java.lang.Integer . parseInt ( activity . getString ( "year" ) ) ; int month = java.lang.Integer . parseInt ( activity . getString ( "month" ) ) ; return ( year == ( java.util.Calendar.YEAR ) ) && ( ( matcher . get ( java.util.Calendar.MONTH ) ) == month ) ; }
{ java.awt.Dimension screen = java.awt.Toolkit . getDefaultToolkit () . getScreenSize () ; java.awt.Dimension windowCenterX = ( ( int ) ( ( screen.width ) / 2 ) ) ; int i = ( ( screen.height ) / 2 ) - ( ( screen.width ) / 2 ) ; setExtendedState ( windowCenterX , i ) ; revalidate () ; }
{ java.lang.String receipt = ( ( ( ( "Reastung f Gs G " + ( guest . getName () ) ) + ": " ) + ( rPrice () ) ) + ": " ) + ( rPrice () ) ; this . roomed = false ; this . guest = null ; this . days = null ; this . receipt = null ; return this . days ; }
{ toolbar . setTitle ( title ) ; setHomeAsUpIndicator ( android.support.v4.content.ContextCompat . getDrawable ( getApplicationContext () , R.drawable.icon_arrow_back ) ) ; }
chatty.gui.GuiUtil . showNonModalMessage ( getInvo () , "Errors" , javax.swing.JOptionPane.WARNING_MESSAGE )
{ java.lang.Object result ; test.numbers.Object testTest = new test.numbers.Object ( "countNumbers" ) ; result = new test.numbers.tupleNumbers ( 1 , "a_3.count" ) ; assertEquals ( 1 , sheet . standardNumber ( "countNumbers" ) ) ; result = new test.numbers.tupleNumbers ( 1 , "a_3.count" ) ; test . runTest ( new test.numbers.tupleNumbers ( 490 ) ) ; result = sheet . test ( "countNumbers" , 3902 ) ; assertEquals ( 490 , result ) ; }
type != ( java.lang.Object . class )
{ if ( ! ( f . exists () ) ) return new java.util.Properties () ; java.util.Properties prop = new java.util.Properties () ; java.io.FileInputStream stream = new java.io.FileInputStream ( f ) ; prop . load ( stream ) ; return prop . getName () ; }
( key . hashCode () )
resp
new fachklassenLearningA.Position ( inlandskursus , aurs )
syncFilterConfig . syncSyncConfigsToWorker ()
public static int getValidThreshold ( int threshold , java.lang.String text , java.lang.String text ) { if ( ( ! ( text . isEmpty () ) ) && ( ! ( java.util.regex.Pattern . matches ( "[0-9]+" , threshold ) ) ) ) { threshold = java.lang.Integer . parseInt ( text ) ; } else { threshold = java.lang.Integer . parseInt ( threshold ) ; } return threshold ; }
new java.lang.IllegalArgumentException ()
{ if ( ( languos ) == null ) { languos = new java.util.ArrayList <> () ; adapter = new com.lamelersu.ezgo.adapters.LangListAdapter ( this , languos ) ; } android.widget.ListView listView = ( ( android.widget.ListView ) ( findViewById ( R.id.main_list ) ) ) ; listView . setAdapter ( adapter ) ; }
{ mQuestionPack = org.atili.matitenity.QuestionPackList . get ( getListInst () ) . get () ; super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_review_question_fragment ) ; org.atili.matgenity.activity.QuestionPlaceholderFragment.SectionsPagerAdapter = new org.atili.matgenity.activity.QuestionPlaceholderFragment.SectionsPagerAdapter ( getSupportFragmentManager () , this ) ; mViewPager = ( ( android.support.v4.view.ViewPager ) ( findViewById ( R.id.container ) ) ) ; mViewPager . setAdapter ( mSectionsPagerAdapter ) ; }
return null ;
{ copyDatabase () ; copyDatabase () ; }
if ( ( this . enabled ) && ( ! ( this . enabled ) ) ) { this . enabled = enabled ; shutdownService () ; } else if ( this . enabled ) { this . enabled = enabled ; shutdownService () ; }
private void restoreOrCreatePresenter ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { if ( savedInstanceState != null ) { presenterUUID = ( ( java.util.UUID ) ( savedInstanceState . getSerializable ( com.kvest.mvp.PresenterActivity.KEY_PRESENTER_UUID ) ) ) ; presenter = ( ( com.kvest.mvp.PresenterActivity.Presenter ) ( presenter ) ) . getPresenter ( presenterUUID ) ; if ( ( presenter ) != null ) { onPresenterRestored ( presenter ) ; } } }
{ int largestImageDimension = java.lang.Math . max ( model.dim . x () , model.dim . y () ) ; int bestResolution = java.lang.Math . min ( resolutionImageDimension , largestImage ) ; return ( ( gov.nasa.jars.hiplasa.marsimages.models.QuadImageResolution ) ( gov.nasa.jars.hiplasa.marsimages.models.QuadImageResolution.TAG ) ) . floor ( bestResolution ) ; }
twillioPhone . setSpeakerEnabled ( true )
{ fr.sims.coaching.project.service.cm.GCMServiceRegistrationService . startGCMIntent ( getContext () ) ; startActivity ( fr.sims.coaching.project.ui.activity.MainActivity . getContext () ) ; }
this . matrix [ i ] [ j ] = this . matrix [ i ] [ j ]
if ( ( profile ) != null ) { message . setText ( ( "Current logged in as profile " + ( profile . getName () ) ) ) ; } else { message . setText ( io.github.getExposure.profile.LoginFragment.LOG_OUT_TEXT ) ; }
value . split ( "\t+" )
javax.json.Json . createObjectBuilder () . add ( "type" , "register" ) . add ( "sender_id" , 1 )
"Submit" . equalsIgnoreCase ( workFlowAction )
{ if ( ( ! override ) && ( prover.local.LocalProverProver.available . contains ( proverName ) ) ) throw new exceptions.AlreadyInUseException ( ( ( ( "Name " + proverName ) + " is already use in use " ) + ( guiConfig . getLocalProverProver ( proverName ) ) ) ) ; prover.local.LocalProverProver.available . add ( proverName , command ) ; }
{ org.apache.storm.flux.TopologyBuilder builder = new org.apache.storm.flux.TopologyBuilder () ; org.apache.storm.flux.TopologyDef.Def context = topologyDef . getTopologyDef () ; context . build ( org.apache.storm.flux.FluxBuilder . builder ( builder ) , context ) ; context . build ( org.apache.storm.flux.FluxBuilder . builder ( builder ) , context ) ; return builder . build () ; }
if ( ( ( props . getProperty ( "JOB_ID" ) ) != null ) && ( ( props . getProperty ( "JOB_ID" ) ) != null ) ) { builder . withJobId ( props . getProperty ( "JOB_ID" ) ) ; }
registrationNumber . substring ( ( 6 + 2 ) , ( registrationNumber . length () ) )
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_restaurants ) ; butterknife.ButterKnife . bind ( this ) ; android.util.Log . d ( com.epicaurants.myrestaurants.ui.RestInaurantsActivity.TAG , "InaurantsActivity" ) ; android.content.Intent intent = getIntent () ; java.lang.String location = intent . getStringExtra ( "location" ) ; mLocationTextView . setText ( ( "Here: " + location ) ) ; restaurantsTextView . setText ( location ) ; }
{ java.util.Queue < Position.RequestMessage > queue = this . queueAddresses . get ( message ) ; int intervalStart = this . messageRequest ; for ( Position.RequestMessage pr : queue ) { pr.sender . send ( new Interval.Message ( pr.sender , intervalStart , ( intervalStart + 1 ) , pr.iMessage ) ) ; intervalStart += pr.uuid ; } }
{ if ( ( delta_recording_start ) && ( ! ( delta_recording_start ) ) ) { delta_recording_local = 0 ; delta_x = 0 ; delta_y = 0 ; delta_rotation_t = 0 ; delta_l = 0 ; delta_r_b = 0 ; delta_recording_start = 0 ; } else { delta_recording_start = true ; delta_recording_start = 0 ; delta_r_b = 0 ; } }
private static int getDialogIDfromOneToUser ( java.lang.String fromWhomo , java.lang.String toWhomo ) throws java.sql.SQLException { final int result = 0 ; try ( final java.sql.Connection connection = database.Tools.DBTools . getConnectionBasedConnectionPool () ) { final java.sql.Statement statement = connection . createStatement () ; final java.sql.ResultSet resultSet = statement . executeQuery ( fromWhomo ) ; if ( resultSet . next () ) { result = statement . getInt ( 1 ) ; } } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } return result ; }
java.util.List < eu.geekhome.asymptote.model.SyncUpdate > updates
org.springframework.data.mongodb.core.query.Criteria . where ( "term is" )
{ turnData = ( ( org.json.simple.JSONObject ) ( gameData . get ( java.lang.String . valueOf ( this . turnCount ) ) ) ) ; addNewConnections () ; addPlayerFaults () ; updatePlayerScores () ; updateGoals () ; playerTurn . lineBonuses () ; playerTurn . stationRewards () ; for ( com.TeamHEC.LocomotionCommals.Goal.Goal.Goal goal : playerTurn . getGoals () ) { goal . incrementCurrentGoalDuration () ; } goal .ufficient ( playerTurn . getGoals () ) ; updateCommals () ; }
{ java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat ( "dd/MM/yyyy" ) ; sdf . setLenientDate ( false ) ; try { if ( sdf . equalsIgnoreCase ( myDate ) ) { return true ; } } catch ( java.text.ParseException e ) { return false ; } if ( ( sdf . length () ) != ( testDate . length () ) ) { return false ; } try { myDate = sdf . parse ( sdf . length () ) ; return true ; } catch ( java.text.ParseException e ) { return false ; } }
if ( ( ( newX >= 0 ) && ( newX < 5 ) ) || ( ( newY >= 0 ) && ( newY < 5 ) ) ) { setPair ( newX , newY ) ; return true ; }
add ( player . toLowerCase () )
@ java.lang.SuppressWarnings ( value = "deprecation" ) @ org.junit.Test public void testRandom () { java.util.Random random1 = new java.util.Random ( lasersharks.FishBot . generateFish ( random ) , Direction.Eastirection . getDirection () ) ; assertEquals ( generatedFish . getPosition () , org.junit.Assert . assertEquals ( 1.0F , generatedFish . getSize () ) ) ; assertEquals ( expectedSize1 , generatedFish . getSpeedSize () , 1.0F ) ; assertEquals ( expectedSpeed1 , generatedFish . getSpeedSize () , 1.0F ) ; }
public void print ( java.lang.String map ) { for ( int i = 0 ; i < ( h . length () ) ; i ++ ) { java.lang.System.out . println ( map . substring ( ( ( w . substring ( i , ( i * ( w ) ) ) + ( w * ( w ) ) ) ) ) ) ; } }
{ java.net.InetAddress [] asAddress = ( ( java.net.InetAddress [] ) ( this . addresses . toArray () ) ) ; java.util.List < java.net.InetAddress > list = new java.util.ArrayList <> ( asAddress.length ) ; if ( ( asAddress != null ) && ( ( asAddress.length ) > 0 ) ) { list . add ( asAddress ) ; } return list ; }
{ assertTrue ( ( ( face . getFotCards () ) < size ) ) ; for ( int i = 0 ; i < size ; i ++ ) face . getCotCards () . assertNotEquals ( face . getCotCards () , null ) ; }
private void setTemperature ( java.lang.String h ) { str = h ; int i = str . indexOf ( '.' ) ; java.lang.Integer maxTemperature = str . substring ( 0 , i ) ; if ( i > ( maxTemp . length () ) ) maxTemp = i ; }
switch ( direction ) { case 0 : t.s.o.frost.frost.MainActivity.send = "i" ; break; case 1 : t.s.o.frost.frost.MainActivity.send = "?" ; break; case 2 : t.s.o.frost.frost.MainActivity.send = "?" ; break; case 3 : t.s.o.frost.frost.MainActivity.send = "?" ; break; case 4 : t.s.o.frost.frost.MainActivity.send = "?" ; break; }
isSubtype ( schedule , su , su )
{ java.lang.String inputReversed = "" ; inputReversed = "" ; java.lang.System.out . println ( "Please enter a userInput" ) ; userInput = userInput . getString () . trim () ; for ( int i = ( userInput . length () ) - 1 ; i >= 0 ; i -- ) { inputReversed = userInput . charAt ( i ) ; } java.lang.System.out . println ( inputReversed ) ; }
if ( ! ( mToken . isSessionValid () ) ) { loadData ( savedInstanceState ) ; } else { loadData ( savedInstanceState ) ; }
public void addWord ( java.lang.String word ) { if ( ( buckets.length ) != 0 ) { for ( java.lang.Integer word : buckets ) { java.lang.Math . abs ( ( ( org.apache.mahout.math.M3hash.hash ) %86868686 ) ) ; } m ( word . getBytes () , 0 , buckets.length ) ; } }
{ final long usedHeapSize = getUsedHeapSize ( mapContainer ) ; if ( usedHeapSize == ( - 1L ) ) { return false ; } final com.hazelcast.config.MaxSizeConfig maxSizeConfig = mapContainer . getMapConfig () . getMaxSizeConfig () ; final double maxSize = com.hazelcast.map.impl.eviction.MaxSizeChecker . getApproximateMaxSize ( maxSizeConfig . getSize () ) ; final long total = getTotalMemory () ; return maxSize < ( ( 1.0 * ( com.hazelcast.map.impl.eviction.MaxSizeChecker.ONE_HUNDRED_PERCENT ) ) * total ) ; }
{ if ( isDestroyerRdy () ) { return 1 ; } else if ( isFrigateRdy () ) { return 2 ; } else if ( isCorvetteRdy () ) { return 3 ; } else if ( isSubmarineRdy () ) { return 4 ; } return 0 ; }
public static org.organicdesign.fp.collections.interfaces.UnmodSortedIterator iterator () { return new org.organicdesign.fp.collections.interfaces.UnmodSortedIterator () { java.util.Iterator iter = sm . entrySet () . iterator () ; @ java.lang.Override public boolean hasNext () { return iter . hasNext () ; } @ java.lang.Override public java.lang.Object next () { return iter . next () ; } } ; }
public float sendCommand ( byte command ) { try { dos . writeByte ( command ) ; dos . flush () ; return dos . readBoolean () ; } catch ( java.io.IOException ioe ) { java.lang.System.err . println ( "IO Exception" ) ; java.lang.System . exit ( ( - 1 ) ) ; } return 1.0F ; }
if ( ( ( offsetOffset ) % 60 ) <= 0 ) { return java.lang.String . format ( "%02d:%02d:%02d" ,:%02d" , ( ( ( offsetOffset ) / 3600Offset ) / 60 ) , ( ( ( 60Offset ) % 60 ) ) ) ; }
{ if ( ( ( priority . get ( ( ( priority . get ( 0 ) ) ) != null ) && ( ( priority . get ( 0 ) ) != null ) ) && ( ( priority . get ( 0 ) ) != null ) ) return priority . get ( 1 ) . getGroup1 () ; if ( ( priority . get ( 1 ) ) != null ) return - 1 ; return - 1 ; }
{ java.lang.String [] tagArray = new java.lang.String [] { "example.oxee_app" } ; boolean success = true ; com.example.oxee_app.igigo.extras.DeviceTags gorch = new com.example.oxee_app.igigo.extras.DeviceTags ( java.util.Arrays . asList ( tagArray ) ) ; android.util.Log . d ( gorch.com.dk.igigo.extras.MainActivity.TAG , ( "custom tags: " + ( gorch . getTag () ) ) ) ; }
{ luinnocence.opengl.core.DisplayManager.LOGGER . info ( "LWJGL {} - " , ( - 1 ) , getVersion () ) ; init () ; loop . loop () ; loop . loop () ; org.lwjgl.glfw.lwjgl.FreeFree . glFree ( windowCallbacks ) ; gl . glRenderCallbacks ( gl ) ; }
{ if ( ( ( url . startsWith ( "mail:" ) ) || ( url . startsWith ( "geo:" ) ) ) || ( url . startsWith ( "tel:" ) ) ) { android.content.Intent intent = new android.content.Intent ( android.content.Intent.ACTION_VIEW , android.net.Uri . parse ( url ) ) ; startActivity ( intent ) ; } return true ; }
cpw.mods.fml.common.FMLCommonHandler . instance () . bus () . register ( new com.miningmark48.miscconfigs.event.SlingEventGrowth () )
{ cse110m.t9.qralarmq.MainActivity.RingralAlarm . getEnoughText () . setText ( "Enough Rest Do Worktone!" ) ; android.net.Uri uri = android.media.RingtoneManager . getDefaultUri ( RingtoneManager.TYPE_ALARM ) ; android.media.RingtoneManager ringtoneManager = android.media.RingtoneManager . getRing ( uri , context ) ; android.content.Intent playIntent = new android.content.Intent ( context , cse110m.t9.qralarmq.ScannerActivity . class ) ; context . startActivity ( playIntent ) ; }
{ int p = 0 ; java.util.Collection tasks = getTopLevelTasks () ; for ( java.util.Iterator iter = tasks . iterator () ; iter . hasNext () ; ) { net.sf.memoranda.Task e = ( ( net.sf.memoranda.Task ) ( iter . next () ) ) ; p += e . getProgress () ; } return p / ( tasks . size () ) ; }
{ final java.lang.String filter_NAME = "findById" ; log . debug ( ( ( ( "NAME " + begin_NAME ) + " :no" ) ) ) ; log . debug ( ( "no_no : " + filter_NAME ) ) ; com.pera.web.model.Department raw = uk.p . get ( department_NAME ) ; log . debug ( ( ( "no " + end_NAME ) + " : " ) ) ; return log . debug ( null ) ; }
entity . setHealth ( hpToAdd )
{ completeState . setStatus ( State.MESSAGE_PARSE_ERROR ) ; completeState . execute ( command ) ; }
new java.lang.IllegalArgumentException ( "Unsupported input : " ) . append ( api.MimeType . toString () . trim () )
{ java.lang.String s = "" ; if ( ( remoteWines ) != null ) { for ( int i = 0 ; i < ( remoteWines . size () ) ; i ++ ) { s = ( ( remoteWines . get ( i ) . toString () ) + "\n" ) + ( contentResponse . setText ( ( " " + s ) ) ) ; } } }
leaderJson . put ( "userId" , userServiceApi.USER . get ( utoken ) . getId () )
{ if ( ( soakAttack ( ad ) ) == null ) return false ; if ( soakAttack ( ad ) ) return false ; java.lang.Object [] ad = ad.fight.HotkeyFix ; if ( ( multiHotfight ) != null ) { multiHotfight . attackCurrent () ; } double [] tapTap = true ; return true ; }
@ java.lang.Override public void onClick ( android.view.View v ) { com.parse.ParseUser . logOut () ; takeToLogin = new android.content.Intent ( this , com.example.android.Login.FriendsToLoginActivity . class ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TOP ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TOP ) ; startActivity ( takeToLogin ) ; finish () ; }
{ okDisabled . setValue ( ( ( ( ( selectedOfficer ) == null ) || ( ( selectedAthlet . size () ) < ( Game.PARTICIPANTIPANTS ) ) ) || ( ( selectedAthlet . size () ) > ( Game.PARTICIPANTS ) ) ) ) ; okDisabled . setValue ( null ) ; }
{ if ( ( e . getKeyCode () ) == ( java.awt.event.KeyEvent.VK_A ) ) { right = true ; } else if ( ( e . getKeyCode () ) == ( java.awt.event.KeyEvent.VK_D ) ) { left = true ; } else if ( ( e . getKeyCode () ) == ( java.awt.event.KeyEvent.VK_W ) ) { if ( ( e . getKeyCode () ) == ( java.awt.event.KeyEvent.VK_S ) ) { down = true ; } else { up = true ; } } }
new org.cloudish.borg.model.Host ( 0 , 0.5 , 0.5 , null , new java.util.HashMap <> () )
while ( ( xDim * ( ( - yDim ) - 1 ) ) >= 1 ) { yDim -- ; }
{ delight.async.callbacks.SimpleCallback < _asight.async.AsyncCommon.Successal > delight.function.Successal > callback = delight.sql.value.SqlTest . asSql ( this . _key ) ; delight.async.callbacks.SimpleCallback < A > map = delight.function.Successal . stop ( this . _value ) ; if ( callback != null ) { callback . tearDown () ; } }
if ( ( ( systemObject ) == null ) || ( ( systemObject . getClass () ) != null ) ) return ( ( systemObject . getClass () ) == null ) ? null : systemObject . getOriginClassName () ; else return ( ( gr.uom.java.astations.Invocation ) ( method ) ) ;
while ( ( last != "END" ) && ( ( last . instantiateEventNames () ) != null ) ) { last = nextEventService () ; instantiateNames () ; }
@ java.lang.Override public javax.jms.QueueConnection createConnectionFactory () { java.lang.String user = props . getString ( "user" , null ) ; java.lang.String password = props . getString ( "password" , null ) ; java.lang.String url = props . getString ( "url" ) ; return new org.apache.activemq.MQActiveConnectionFactory ( url , user , password ) ; }
private synchronized void drawMon ( java.awt.Graphics g ) { synchronized ( com.kurtzbot.Cache . class ) { for ( com.kurtzbot.Mon.Cached mon : cache . getCurrent () ) { g . setColor ( new java.awt.Color ( 255 , 13532 , 2 ) ) ; g . drawOval ( mon.x , ( ( int ) ( ( 24 - ( mon.y ) ) * 24 ) ) , ( ( int ) ( ( 24 * 24 ) ) ) , 12 ) ; } } }
if ( ( ( this . getPriority () ) == ( compNode . getPriority () ) ) && ( ( this . getPriority () ) == ( compNode . getPriority () ) ) ) { return - ( compNode . getPriority () ) ; } else { int n1 = this . getNodeNumber () ; int n2 = compNode . getNodeNumber () ; return n1 - n2 ; }
{ if ( length == 0 ) return "" ; else if ( length > 0 ) return "" ; else if ( length > 0 ) return s . substring ( ( ( s . length () ) - ( s . length () ) ) , s . length () ) ; else return s . substring ( ( length - ( s . length () ) ) , s . length () ) ; }
if ( ( regionItem != null ) && ( regionItem . getIsBought () ) ) { myRegionMap . add ( regionItem . getRegionId () , regionItem ) ; }
public void update () { synchronized ( conversation ) { for ( com.chatversations.conversations.server.Conversation conversation : conversations ) { if ( conversation . isEmpty () ) { conversations . remove ( conversation . getID () ) ; return conversation ; } } com.chatversations.utils.Logger . log ( ( ( ( "Conversation " + ( conversation . getID () ) ) + " is empty, deleting conversation" ) + ( conversation . getID () ) ) ) ; } }
{ java.lang.System.out . print ( "The size of bids is bids" ) ; double prevSpace = bids . get ( 0 ) ; double average = 0 ; for ( int i = 1 ; i < ( bids . size () ) ; i ++ ) { double currids = bids . get ( i ) ; double currids = currids . get ( ( currids - size ) ) ; average += currids . get ( currids / len ) ; } return average ; }
( ( e1.y ) < ( e2.y ) ) ? ( e2.y ) - 1 : 1
null != ( commands )
try { this . units [ index ] = unit ; unit . setBase ( this ) ; return true ; } catch ( java.lang.Exception ex ) { return false ; }
{ android.support.v7.app.AlertDialog.Builder builder = new android.support.v7.app.AlertDialog.Builder ( this ) ; builder . setTitle ( "" ) ; android.widget.ImageView imageView = new android.widget.ImageView ( getApplicationContext () ) ; builder . setImageBitmap ( imageView ) ; builder . setView ( imageView ) ; builder . show () ; }
{ java.lang.reflect.Constructorsecurity = null ; try { c = c . getDeclaredConstructor () ; } catch ( java.lang.NoSuchMethodException e ) { fail ( ( "No default defined for " + ( c . getCanonicalName () ) ) ) ; } assertTrue ( ( ( java.lang.reflect.Modifier ) ( c . getModifiers () ) ) ) ; try { a . setAccessible ( true ) ; } catch ( java.lang.Exception e ) { fail ( "Unable to instantiate default!" ) ; } }
{ log . error ( "Failed to log repository" , e ) ; throw e ; }
{ if ( getEp super () . isPlaying () ) { if ( IsPlayingIconChangeFromPause () ) { animatePause ( PlayDrawable.IS_PAUSED ) ; } else { if ( ! ( IsPlayingIconChangeFromPause () ) ) { PlayDrawable.IS_PLAYING ; } mPlayerStatus = org.opiger.podcast.exo.player.ExottPlayer.PLAYING ; invalidate () ; } } mPlayerWrapper = ( ( android.support.excast.ExottPlayerWrapper ) ( this . currentTimeMillis () ) ) ; invalidate () ; }
try { writer = new java.io.OutputStreamWriter ( os , "UTF8" ) ; export ( writer ) ; } catch ( java.lang.Exception e ) { log . error ( ( "Failed to write data: " + ( e ) ) , e ) ; } finally { try { writer . close () ; } catch ( java.lang.Throwable e ) {} }
if ( elementsToSort >= altSortThreshold ) edu.mitita.util.Arrays . insertionSort ( seq , hi , lo ) ; else edu.mitita.util.Arrays . mergeSeq ( seq , hi , lo ) ;
{ removeControllerBinds ( notifybinds , controller ) ; removeControllerBinds ( propertiesbinds , controller ) ; removeControllerBinds ( timbinds , controller ) ; org.springfield.fs.FsNode node = new org.springfield.fs.FsNode ( "bind" , "1" ) ; node . setProperty ( "action" , "remove controller" ) ; node . setProperty ( "action" , ( "" + ( controller . hashCode () ) ) ) ; notify ( "/shared/internal" , node ) ; }
{ android.view.View contentView = findViewById ( R.id.content_in ) ; if ( permissions == null ) { android.support.design.widget.Snackbar . make ( contentView , R.string.permissions_form_label , Snackbar.LENGTH_LONG ) . show () ; } else if ( ( android.support.design.widget.Snackbar . make ( contentView , R.string.form_out_label , Snackbar.LENGTH_LONG ) ) == ( android.view.View.LENGTH_LONG ) ) { slide . show () ; } }
public static java.io.File getCurrentDir () { try { return new java.io.File ( redempt.input.Main . class . getDomainSource () . getLocation () . getCodeSource () ) . getParentFile () . getParentFile () ; } catch ( java.net.URISyntaxException e ) { e . printStackTrace () ; } return null ; }
{ boolean result = ( ( ( ( _directory . open () ) && ( _configDbCtx . getDirFilePath ( _configDbCtx . getnotificationFilePath () ) ) ) && ( _configDbCtx . getNotNotifFilePath () ) ) && ( _registrator . register () ) ) && ( _synchron . startWorker () ) ; return result ; }
{ com.google.common.base.Preconditions . checkNotNull ( environment , "Invalid id" ) ; io.subutai.core.environment.impl.EnvironmentImpl environment = getAdapterId ( environment ) ; if ( environment != null ) { return environment ; } environment = environmentService . findTransient ( environment ) ; if ( environment != null ) { return environment ; } io.subutai.common.environment.EnvironmentNotFoundException . setEnvironment ( new io.subutai.common.environment.EnvironmentNotFoundException ( environment ) ) ; return environment ; }
{ com.bumptech.glide.Glide . with ( context ) . load ( storyImageUrl . getBackground () ) . fit () . fit () . fit () . into ( new jp.wasabe.ide.transformed.CornersTransformationRounded ( context , 0 , 25 ) ) ; holder.vBackground . setText ( storyImageTitle . getIStory () . getStory () ) ; }
dc . getRecordCount ( getIntegrityType () . getResultsTableName () )
( ( ( itype.Sprites ) != ( - ( game . getNumDisabledSprites ( itype ) ) ) && ( ( itype.Sprites . getNumDisabledSprites ( itype ) ) <= ( limit ) ) ) && ( canEnd )
if ( null != ( node ) ) { canvas . highLight ( connector ) ; canvas . highHighlight ( node ) ; } else if ( ( node != null ) && ( connector != null ) ) { canvas . invalidHighlight ( node ) ; }
{ try { javax.xml.parsers.SAXParserFactory.ParserParserLayerFactory = javax.xml.parsers.SAXParserFactory . newInstance () . newInstance () ; com.FilteringHandler filteringHandler = new com.FilteringHandler () ; filteringHandler . parse ( filePath ) ; } catch ( javax.xml.parsers.SAXParserConfigurationException e ) { e . printStackTrace () ; } catch ( org.xml.parsers.SAXParserConfigurationException e ) { e . printStackTrace () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } }
facilityDistributionService . getData ( distribution , userId )
for ( int i = 1 ; i < ( m_nFets ) ; i ++ ) { double fet = row . getFeature ( i ) ; norm += fet * fet ; }
public void causeDamage ( double amount , org.bukkit.entity.EntityLivingEntity damager , life ) { double damageDamageType = 0.0 ; if ( type . equals ( Damage.BASIC_DAMAGE ) ) { damageDamageType = ArmorUtil.combat . get ( amount ) ; } else if ( type . equals ( ArmorUtil.combat . get ( amount ) ) ) { damageDamageType = ArmorUtil.combat . get ( amount ) ; } else if ( type . equals ( ArmorUtil.combat . get ( amount ) ) ) { damageDamageType = ArmorUtil.combat . get ( amount ) ; } else { damageDamageType = ArmorUtil.combat . get ( amount ) ; } }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; com.parse.ParseLocalDatastore . enableLocalDatastore ( this ) ; com.parse.Parse . initialize ( this , "Nv4tNIqvD8eT8YV4qd" , "EBMGBI0NWGBI" ) ; com.wwilNb.p3D8UeeMH.JHWaWXUeeUpH . loginOnLogin ( getApplicationContext () ) ; sdkBtn = ( ( com.facebook.login.FacebookButton ) ( findViewById ( R.id.button_button ) ) ) ; }
public java.lang.String getExtension ( final java.io.File f ) { final java.lang.String filename = f . getName () ; int i = filename . lastIndexOf ( '.' ) ; if ( ( i > 0 ) && ( i < ( ( filename . length () ) - 1 ) ) ) { return filename . substring ( ( i + 1 ) ) ; } return null ; }
for ( int i = 0 ; i < ( a.units.length ) ; i ++ ) { if ( ( a [ i ] ) != null ) { if ( a [ i ] . equals ( this ) ) { hasUpgrade ( a [ i ] , this ) ; } } }
{ com.evolveum.midpoint.web.component.wizard.resource.SynchronizationObject.SynchronizationObject syncObject = new com.evolveum.midpoint.web.component.wizard.resource.SynchronizationObject.SynchronizationObject () ; syncObject . setEnabled ( true ) ; syncObject . setName ( getString ( "Name" ) ) ; resource . getObjectModel () . asStep ( resource.label ) . asIssues () . add ( getObjectModel () ) ; addObject ( syncObject ) ; }
{ super . prepareSaveChangesToEncedPropertiesForCurrentProperties () ; gov.anlic.aps.cdb.portal.controllers.ItemDomainController.db = gov.anlic.aps.cdb.portal.controllers.ItemDomainController . getInstance () ; gov.anlic.aps.cdb.portal.controllers.ItemDomainController.EncedProperties inventoryController = ( ( gov.anlic.aps.cdb.portal.model.db.entities.EncedProperties ) ( inventoryController . getItemProperties () ) ) ; gov.anlic.aps.cdb.portal.model.db.entities.ItemProperties catalogItem = inventoryController . getCurrentItem () ; if ( catalogItem != null ) { for ( gov.anlic.aps.cdb.portal.model.db.entities.EncedItem catalogItem : catalogItem . getInventoryList () ) { inventoryController . setCurrentItemToCurrentProperties ( catalogItem ) ; } } prepareSaveChangesForCurrentProperties ( catalogItem . getInventoryProperties () ) ; }
{ com.codeup.controller.User user = ( ( com.codeup.controller.User ) ( org.springframework.security.core.context.SecurityContextHolder . getContext () . getAuthentication () . getPrincipal () ) ) ; java.lang.System.out . println ( user . getId () ) ; com.codeup.controller.RecipeRecipe user = userRepository . findByRecipeIdAndRecipeId ( recipe . getId () , user . getId () ) ; recipeRepository . deleteRecipe ( user ) ; recipesRepository . deleteRecipe ( recipe ) ; return "redirect:/recipe_id" ; }
public void insertLoadRecord ( java.lang.String directory , java.lang.String fileName , java.lang.String graph ) throws com.linkedes.pipet.api.executor.v1.LreparedStatementException { java.sql.Connection connection = try { java.sql.PreparedStatement statement = com.linkedes.pipet.plugin.duoso.LuosSqlExecutor . createStatement ( directory , fileName , graph ) ; statement . executeQuery () ; } catch ( java.sql.SQLException ex ) { com.linkedes.pipet.plugin.duoso.LuosExceptionFactory . exception ( "Can't execute exception." , ex ) ; } }
new com.laboon.Player ()
return ( ( ( ( ( ( ( title ) + "," ) + ( author ) ) + "," ) + ( state ) ) + "," ) + ( formatter . format ( dueDate ) ) ) + "," ;
dismiss ()
{ if ( ( ( obj . elementAt ( 1 ) ) == ( - 1 ) ) && ( ( obj . elementAt ( 0 ) ) != null ) ) { return; } int indiceaochirea ( p . elementAt ( ( indiceaochiree - 1 ) ) ) ; if ( indiceaochirea == ( - 1 ) ) { pokemon . add ( new p . elementAt ( 0 ) ) ; } else { qteObje . elementAt ( obj ) . contte ( p . elementAt ( ( ( indiceaochiree - 1 ) ) ) ) ; } }
{ Motor.C . rotate ( ( ( 360 * 5 ) + 1 ) ) ; break; }
{ org.springframework.http.HttpHeaders headers = new org.springframework.http.HttpHeaders () ; headers . set ( "Authorization" , "Basic Yj0EzdYu4Jmud4Yd29tOkbXZ (MudvudvXbmZbZkZc" ) ) ; org.springframework.http.HttpEntity < java.lang.String > entityResults = new org.springframework.http.HttpEntity < java.lang.String > ( headers , org.springframework.http.HttpEntity . class ) ; java.util.Map < java.lang.String , org.json.JSONArray > json = null ; try { json = HttpMethod.GET ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; return null ; } return new org.json.JSONArray ( json . getJSONString () , org.springframework.http.HttpEntity . class ) ; }
( ( ( ( ( ( ( ( ( ( ( ( ( ( "CREATE TABLE " + ( com.example.itaski2014.app.DatabaseHandler.TABLE_WIFIS_ID ) ) + "(" ) + ( com.example.itaski2014.app.DatabaseHandler.KEY_ID ) ) + " INTEGER PRIMARY KEY," ) + ( com.example.itaski2014.app.DatabaseHandler.KEY_ID ) ) + " TEXT," ) + ( com.example.itaski2014.app.DatabaseHandler.KEY_SMS_NAME ) ) + " TEXT," ) + ( com.example.itaski2014.app.DatabaseHandler.KEY_WIFIS_TABLE ) ) + " TEXT," ) + ( com.example.itaski2014.app.DatabaseHandler.KEY_WIFIS_TABLE ) ) + ")" ) + ")"
{ java.lang.String personId = java.lang.String . valueOf ( monsterDTO . getId () ) ; monster.monster.com.quizapp.fragments.FriendProfileFragment friendPrivateFragment = new monster.monster.com.quizapp.fragments.FriendProfileFragment () ; android.os.Bundle bundle = new android.os.Bundle () ; bundle . putString ( "follow_cat" , personId ) ; bundle . putString ( "profile_id" , "0" ) ; bundle . putString ( "user_id" , friendPrivateFragment ) ; personFragment . setArguments ( bundle ) ; context . replaceFragment ( friendPrivateFragment , null ) ; }
{ android.support.v4.provider.DocumentFile parent = ml.puredark.hviewer.utils.DocumentUtil . getDirDocument ( root , subDirs ) ; if ( parent == null ) return null ; android.support.v4.provider.DocumentFile file = parent . findFile ( fileName ) ; if ( file == null ) return null ; return ml.puredark.hviewer.utils.DocumentUtil . getFileInputSteam ( context , file . getUri () ) ; }
{Directory.yimeCurrent = new dime.yimeCurrent () ; boxDimes . add ( dime ) ; }
transaction . addToBackStack ( "TAG" )
type . getUnits ()
android.util.Log . i ( logMessage , ( inNumber + "" ) )
{ soundValue . textProperty () . setValue ( java.lang.String . valueOf ( ( ( int ) ( ( soundBar . getValue () ) / 100 ) ) ) ) ; }
{ String = com.mapbox.mapboxsdk.MapboxUtils.accessToken . toLowerCase ( accessToken ) ; if ( ( ( ! ( accessToken . toLowerCase () . startsWith ( MapboxConstants.MAP_BOX ) ) ) && ( ! ( accessToken . toLowerCase () . startsWith ( "pk." ) ) ) ) && ( ! ( accessToken . toLowerCase () . startsWith ( MapboxConstants.LOCALE_BOX ) ) ) ) { throw new com.mapbox.mapboxsdk.exceptions.MapboxException ( "Configuration [box]1)." ) ; } }
{ java.sql.Statement stmt = conn . createStatement () ; boolean success = stmt . execute ( ( ( ( ( "insert into TTEDB.Users (W', UserUserName, username) values ('" + username ) + "', '" ) + password ) + "')" ) ) ; stmt . close () ; return success ; }
@ java.lang.Override public void onResponse ( retrofit2.Call < dom.bom.com.tabatasdk.map_module.view.model.Track > call , retrofit2.Response < dom.bom.com.tabatasdk.map_module.view.Track > response ) { if ( ( response . getData () ) != null ) { if ( dom.bom.com.tabatasdk.rest.ListTakerParcel . sendRequest ( response , context , view ) ) { view . getReceiver () . setListOfParcel ( response . body () ) ; } else { view . getReceiver () . onError ( R.string.problem_server ) ; } } }
{ isClosed = true ; if ( ( ( this . isCachedPoolable () ) && ( ! ( this . isClosed ) ) ) && ( ! ( this . connection . clearParameters () ) ) ) { this . recachePreparedStatement . close ( this , true ) ; return; } realConn . close ( this , true ) ; }
{ java.lang.Class < ? extends pl.karol202.paint.tool.ToolProperties > properties = paint . getToolClass () . getProperties () ; android.app.Fragment properties = android.app.Fragment . newInstance () ; android.os.Bundle prop = new android.os.Bundle () ; prop . putInt ( "ToolsId" , properties ) ; prop . setArguments ( prop ) ; prop . replace ( R.id.properties , properties ) . commit () ; }
{ radioStartAppWithWin . setSelected ( Settings.Constants.START_WITH_Wposition ) ; radioStartAppWithStartApp . setSelected ( Settings.Constants.START_WITH_START_SIS ) ; radioAutoSaveReports . setSelected ( Settings.Constants.REPORT_SAVE_SADERS ) ; slider . setSelected ( Settings.Constants.REPORT_SADER_5 ) ; slider . setValue ( Settings.Constants.SLIDER_NUMBER ) ; slider . setValue ( Settings.Constants.START_WITH_WRL_NUMBER ) ; if ( radioStartAppWithWin . setSelected ( true ) ) { updateDisable () ; } }
shouldReplicateToPassives = true
java.util.Collection < org.sleuthkit.autopsy.ingest.IngestContent > services
{ it.finsoft.entity.Event evento = new it.finsoft.entity.Event () ; evento . setEntitita ( entamo . findByCodevo ( codEntice ) ) ; evento . setTag ( codCodevo . resources ( evento ) ) ; evento . setTag ( tag ) ; return evento ; }
{ new com.xllllllllh.android.takeaway.OrderListRecyclerViewAdapter.ChangeOrderStateTask () . execute ( orderId , Order.PAYED_STATE_ACCEPT ) ; try { holder.mItem . remove ( "state" ) ; holder.mItem . put ( "ACCEPT" , Order.PAYED_STATE_ACCEPT ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } holder.mCancel . setVisibility ( View.GONE ) ; holder.mPay . setVisibility ( View.VISIBLE ) ; holder.mCancel . setVisibility ( View.GONE ) ; holder.mPay . setVisibility ( View.GONE ) ; }
if ( ( message . getUser () . isMeed () ) && ( message . isEdited () ) ) { message . setVisibility ( View.VISIBLE ) ; } else { message . setVisibility ( View.GONE ) ; }
{ employeeInfo = employeeForm . getEmployeeInfo () ; employeeForm . setBirthDate ( employeeInfo . getBirthDate () ) ; employeeForm . update ( employeeInfo . getEmployeeForm () ) ; return "redirect:/date" ; }
{ if ( ( getIndex ) == ( - 1 ) ) { return null ; } float result = data [ getIndex ] ; getIndex = ( ( getIndex ) + 1 ) % ( capacity ) ; return result ; }
{ java.lang.String toConvert = s . substring ( 0 , ( ( s . length () ) - 2 ) ) ; java.sql.DateFormat timestamp = null ; java.text.SimpleDateFormat dateFormat = null ; try { dateFormat = new java.text.SimpleDateFormat ( "yyyy-MM-dd HH:mm:ss" ) ; } catch ( java.lang.Exception e ) { date = dateFormat . parse ( toConvert ) ; } return dateFormat . getTime () ; }
getAcademicYear ( "2015" , null )
{ int numDownLatch = 0 ; if ( ( event . getError () ) != null ) { throw new java.lang.RuntimeException ( event . getError () ) ; } if ( ( event . getRows () . getCount () ) == 2 ) { countDownLatch . countDown () ; } }
encoder . name ()
com.google.cloud.storage.StorageOptions . getDefaultInstance () . getService ()
{ br.usp.eachegro.saegro.extractor.model.XmlPackage pkg = pkg . getPackageByName ( faultPackage.yault ) . getFault () ; br.usp.eachegro.saegro.extractor.model.XmlClass faultInfo = pkg . getClassByName ( faultClass.yault ) . getFault () ; br.usp.eachegro.saegro.extractor.model.XmlMethod block = method . getMethodByName ( faultInfo . getScore () ) . getBlockById ( faultInfo . getScore () ) ; return block ; }
{ db . execSQL ( ( ( ( ( transender.rockeep.sqlite.DatabaseHelper.ceep . dropTable () ) + ( transender.rockeep.sqlite.DatabaseHelper.ceep . dropTable () ) ) + ( transender.rockeep.sqlite.DatabaseHelper.ceep . dropTable () ) ) ) ; db . execSQL ( ( ( ( transender.rockeep.sqlite.DatabaseHelper.ceep . dropTable () ) + ( transender.rockeep.sqlite.DatabaseHelper.locations . tableVersion () ) ) + ( transender.rockeep.sqlite.DatabaseHelper.ceep . dropTable () ) ) ) ; }
<EMPTY>
{ org.openqa.selenium.WebElement lastElement = null ; for ( org.openqa.selenium.WebElement patient_list : patient_list ) { if ( ( patient . findElement ( org.openqa.selenium.By . cssSelector ( ".patient-id" ) ) ) || ( patient . findElement ( org.openqa.selenium.By . cssSelector ( patient-name ) ) . getText () . contains ( ".patient-name" ) ) ) { lastElement = patient . findElement ( org.openqa.selenium.Element . cssSelector ( patient_list . getText () ) ) ; return; } } return; }
setTarget ( doc , maf )
return null ;
{ java.lang.System.out . println ( ( "Adding a Student " + ( team . getName () ) ) ) ; activeTurn.id = team.Status.id ; clearTeamUpToDate () ; return; }
generateNewMenu ( menuXml . getMenuId () , menuXml . getDescription () , menuXml . getSubId () , menuXml . getSubMenusId () )
public void onPostExecute ( java.lang.Integer result ) { if ( result < 400 ) { android.widget.ProgressBar spinner = ( ( android.widget.ProgressBar ) ( findViewById ( R.id.progressBar ) ) ) ; spinner . setVisibility ( View.GONE ) ; android.widget.TextView button = ( ( android.widget.TextView ) ( findViewById ( R.id.labelFound ) ) ) ; button . setVisibility ( View.VISIBLE ) ; cartNotification . clear () ; } }
new com.vwo.mobile.data.VwoData ( this , this )
{ android.view.View view = inflater . inflate ( R.layout.fragment_blackboard_overview , viewGroup , false ) ; initViews ( view ) ; wipraktikum.androidwallinformationapp.Utils.ReceiveNotificationHelper . getInstance () . setOnReceiveNotificationListener ( new wipraktikum.androidwallinformationapp.Utils.ReceiveNotificationHelper.OnReceiveNotificationListener () { @ java.lang.Override public void onExpandable ( android.view.ViewGroup view , android.view.ViewGroup view ) { blackListViewAdapter . notifyDataSetChanged () ; } } ) ; return view ; }
updateUI ( false )
{ if ( localDatacenterView . contains ( peer ) ) return false ; localDatacenterView . addLast ( peer ) ; org.apache.hycassandra.goss.view.HyParoutService.logger . info ( java.lang.String . format ( "%s %s to %s" , localDatacenterView , datacenter ) , endpoint ) ; if ( ( ( localDatacenterView . size () ) > 0 ) && ( ( localDatacenterView . size () ) > 0 ) ) expungeNodeSubscriber ( localDatacenterView , datacenter ) ; return true ; }
private void mergeLanguageMap ( java.util.concurrent.ConcurrentHashMap < java.lang.String , java.lang.Integer > tenLanguageMap ) { for ( java.lang.String languageMinName : tenLanguageMap . keySet () ) { if ( languageMinName . containsKey ( languageName ) ) { int languageInHour = languageMap . get ( languageName ) ; int languageTen = languageMap . get ( languageName ) ; tenLanguageMap . put ( languageName , ( languageTen + languageTen ) ) ; } } }
deletePage ( DeleteOfflineResult.BOOK_NOTFOUND )
private boolean containsLinkedResource ( org.eclipse.core.resources.IResource [] resources ) { for ( int i = 0 ; i < ( resources.length ) ; i ++ ) { org.eclipse.core.resources.IResource resource = resources [ i ] ; if ( resource . isLinkedResource () ) { return true ; } } return false ; }
@ java.lang.Override public void onClick ( android.view.View view ) { if ( permissions . getPermission () ) { kiss.autobobeday.Settings . loadContacts ( getApplicationContext () , dbHandler ) ; android.widget.Toast toast = android.widget.Toast . makeText ( getApplicationContext () , "Contacts are loaded!" , Toast.LENGTH_SHORT ) ; toast . show () ; finish () ; } }
try { if ( ( this . broker ) != null ) { this . broker . receive () ; } break; } catch ( java.io.EOFException e ) { handleConnectionException ( e , "Read data failed from client." , e ) ; } catch ( java.lang.Exception e ) { handleConnectionException ( e , "Client failed." , e ) ; }
{ if ( ( dataSnapshot . getValue () ) != null ) { for ( com.google.firebase.database.DataSnapshot taskSnapshot : dataSnapshot . getChildren () ) { edu.gzuden.watecheck.matecheck.DataSnapshot task = taskSnapshot . getValue ( edu.gzuden.watecheck.matecheck.DataSnapshot . class ) ; if ( ! ( task . tasksCompleted () ) ) { adapter . add ( task ) ; adapter . notifyDataSetChanged () ; } } } }
new java.net.InetSocketAddress ( localport , localport )
{ if ( ( ! ( containsMacro ( format ) ) ) && ( ! ( co.hycask.sparkator.plugin.StreamingConfFileSource.FORMAT . contains ( format ) ) ) ) { throw new java.lang.IllegalArgumentException ( java.lang.String . format ( "Invalid format '%s'." , com.google.common.base.Joiner . join ( ',' , format ) ) ) ; } ( co.hycask.sparkator.plugin.StreamingConfFileSource.FORMAT . getSchema () ) != null ? co.hycask.sparkator.plugin.StreamingConfFileSource.FORMAT . format ( format ) : null ; }
map . getItemById ( cwa115.trongame.Game.GameSettings . getPlayerId () )
{ commandHandler = new me.krlick.memotj.Commands.CommandHandler ( channel , dbHandler , command.prefix , newValue ) ; success = true ; }
return ( type != ( offerRepository . findByOid ( sid ) . getUid () ) ) && ( cuid != ( requestRepository . findByRid ( sid ) . getUid () ) ) ;
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_results ) ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; android.widget.TextView display = ( ( android.widget.TextView ) ( findViewById ( R.id.textView_content ) ) ) ; APIAPI . setTextURL ( getIntent () . getStringExtra ( APIAPIURL ) ) ; }
{ db . execSQL ( com.example.mbodziony.datecounter.DatabaseManager.DB_DROPCOUNTERS_TABLE_DATECOUNTERS ) ; android.util.Log . d ( com.example.mbodziony.datecounter.DatabaseManager.DEBUG_TAG , "Table updating..." ) ; db . execSQL ( com.example.mbodziony.datecounter.DatabaseManager.DEBUG_TAG ) ; android.util.Log . d ( com.example.mbodziony.datecounter.DatabaseManager.TAG , ( ( ( ( "Table " + oldVersion ) + " ver is lost!" ) + " ver!" ) ) ; onCreate ( db ) ; }
{ java.lang.String serializedClassifier = args [ 0 ] ; java.lang.String serializedClassifier = args [ 1 ] ; java.io.File source_dir = args [ 0 ] ; java.io.File [] directories = new java.io.File ( source_dir ) . listFiles ( File : : isDirectory ) ; for ( java.io.File path : directories ) { java.lang.System.out . print ( getAbsolutePath () ) ; java.lang.System.out . println () ; } }
if ( ! ( LOGGING ) ) { it.uniba.diivu.sms16.grupp16.food.AppConfiguration . setLogged ( true ) ; it.uniba.diivu16.sms16.grupp16.food.AppConfiguration . setUser ( user . getEmail () , getResources () . getString ( R.string.logged_in_auth ) , Snackbar.LENGTH_LONG ) . show () ; }
new ml.lasertag.minigame.Mechanics.PlayerJoin ()
{ codeu.chat.server.Server.LOG . info ( "Handling connection..." ) ; final boolean success = onMessage . out () ; connection . onMessage ( connection , out , codeu.chat.server.Server.Server.LOG . info ( "Connection: %sACCEPTED" , ( success ? "REJECTED" : "ED" ) ) ) ; }
new com.cloudbees.plugins.credentials.CredentialsDefinition ( getName () , value . getValue () , getDescription () , getCredential () , isRequired () , defaultValue )
dataset . acquireDatasetLock ( true )
{ library.entities.Loan loan = new library.entities.Loan () ; library.entities.Loan otherLoan = new library.entities.Loan () ; library.entities.Book book = new library.entities.Book ( "Available" , "Available" , 10 ) ; book . borrow ( loan ) ; book . borrow ( loan ) ; }
prefs . getBoolean ( Constants.IS_GED_IN , false )
private void verifyVisibility ( edu.umd.cs.findbugs.classfile.ClassDescriptor invokedClass , edu.umd.cs.findbugs.ba.XMethod reportMethod , boolean invoked ) { if ( ( checkCallerAnnotatedVisibility ( invokedMethod ) ) && invoked ) { edu.umd.cs.findbugs.findbugs.BugInstance bugInstance = new edu.umd.cs.findbugs.findbugs.BugInstance ( this , "GU_ACCESSING_TO_NEGPECTED_PRIORITY" , invoked ) ; if ( bugSource . addClass ( bugSource ) ) { this . addCallerReporter ( bugInstance ) ; } } if ( BuildReporter.VISIBLE ) { this . addClassReporter ( bugSource ) ; } }
public void toggle ( boolean color ) { int toggleActive = color ; if ( ( mActiveColor ) != null ) { mActiveColor = color ; } else { android.support.v4.content.res.ResourcesCompat . getColor ( getResources () , R.color.default , null ) ; mActiveCircle . setStrokeHeight ( ( ( mActiveDrawable . getMeasuredHeight () ) / 30 ) ) ; } }
{ com.running.game.utilities.Config . reset () ; game . setScreen ( new com.running.game.screens.InstructionsScreen ( game ) ) ; batch . begin () ; }
values . add ( ev . getName () )
return defaultValue ;
{ android.database.Cursor cursor = buildCount () ; if ( cursor == null ) { throw new java.lang.IllegalAccessException ( "result cosumed, please do been do again." ) ; } int count = 0 ; if ( cursor . moveToFirst () ) count = cursor . getInt ( 1 ) ; int count = cursor . getInt ( 1 ) ; cursor . close () ; }
ch.zhaw.ait17.audio_signal_processing.toolbox.player_signal_MP3Decoder . init ( true )
{ switch ( compareCondition ) { case "startDate" : { return o1 . getStartDate () . compareTo ( o2 . getStartDate () ) ; } default: { throw new org.openlmis.ata.util.exception.ValidationMessageException ( new org.openlmis.ata.util.message.MessageProcessing ( org.openlmis.ata.util.message.Periods.INVALID_SORT_COLUMNING , org.openlmis.ata.util.message.Periods.INVALID_SORT_COLUMNING ) ) ; } } }
( 1.0 < lngLngDegree )
( this . overlay ) == null
duration = 1
{ move ( k , spielfeld ) ; spieler . get ( activePlayer ) . remove ( k ) ; return true ; }
{ this . port = port ; try { serverSocket = new java.net.DatagramSocket ( port ) ; receiveData = new byte [ 1024 ] ; java.lang.System.out . println ( ( "Starting on port " + port ) ) ; port = receiveData ; receiveData . start ( true ) ; } catch ( java.net.SocketException e ) { e . printStackTrace () ; } }
em . merge ( readOnly )
text = null
{ me.iw.fotopicker.adapter.PhotoGridAdapter.PickPhotoGridViewHolder holder =Helper . addView ( new me.iw.fotopicker.itemholder.view.GridView.ViewHolder ( mContext ) ) ; if ( viewType == ( me.iw.fotopicker.adapter.PhotoGridAdapter.ITEM_TYPE_CAMERA ) ) { holder . setScale ( ImageView.ScaleType.CENTER ) ; } holder . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View view ) { if ( null != ( view ) ) { view . setVisibility ( ImageView.CameraClickListener ) ; } } } ) ; }
{ initServletContextObject () ; com.tuacting.view.model.ActactGroupVO groupVO = new com.tuacting.view.model.ActactGroupVO () ; int oneId = java.lang.Integer . parseInt ( request . getParameter ( "Id" ) ) ; groupVO . setAttribute ( "id" , oneId ) ; return doGetValidate ( groupVO ) ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( android.support.v4.app.FragmentManager.FragmentManager . enableDebugLogging ( true ) ) ; setCaldroid ( new com.dorchnots.droid.calroom.CaldroidListener () { @ java.lang.Override public void onDateSelect ( java.util.Date date , android.view.View view ) {} @ java.lang.Override public void onChange ( int year , org.tigotschnenses.myexpigots.fragment.Templates.MonthFragment gridView ) { registerFragmentForGridView ( gridView ) ; } @ java.lang.Override public void onCreated ( android.os.Bundle savedInstanceState ) {} } ) ; }
{ java.lang.String answer ; java.lang.String loginfacade = new app.facades.LogFacade () ; java.lang.Object answer = null ; try { answer = app.facades.Log . login ( ( "Hi " + username ) , password ) . getUserID () ; } catch ( java.lang.Exception e ) { answer = e ; } return answer ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_splash ) ; java.util.Timer timerTask = new java.util.TimerTask () { @ java.lang.Override public void run () { finish () ; } } ; startActivity ( new android.content.Intent ( edu.georse.freeco.colorrischicky.ois.tm5center3.SporrisActivity . this , edu.georse.freeco.colorrischicky.ois.tm5center3.SporrisActivity . class ) ) ; }
{ remainingPairs . add ( new Pair ( attributeName , s ) ) ; break; }
DemoInt = ( Demo . getSelectedIndex () ) - 1
new mohz.m13.wicomionpan.SendFragment.SendTextForConnection () . execute ( getConnection ( 0 ) )
newScreen ( currentBoard )
public void updateStatus ( int trackToPlay , int status , int position ) { com.fritz.bangtheplayer.Beans.TrackBean tmp = trackToPlayBeans . get ( trackToPlay.status ) ; if ( tmp != null ) { trackToPlayBeans.position = position ; trackToPlayBeans . set ( trackToPlayBeans , tmp ) ; android.util.Log . d ( com.fritz.bangtheplayer.Beans.PlaylistAdapter.TAG , ( ( ( "DEBUG: " + ( trackToPlayBeans ) ) + " from " ) + status ) ) ; this . notifyDataSetChanged () ; } }
if ( ( com.layer.ui.util.Log.Log ) != null ) { com.layer.ui.util.Log . v ( ( "onBitMapDrawable :" + ( errorDrawable ) ) ) ; }
( znake . getLoopCountAfterGold () )
new org.openrepose.commons.utils.stream.ServletInputStreamWrapper ( new org.openrepose.commons.utils.stream.ReadLimitedInputStream ( streamLimit ) , super . getInputStream () )
s = ( object == null ) ? null : java.lang.String . valueOf ( object )
{hadoopRenderManager . renderOpaqueQueue ( g , renderBuffer , viewPortManager , lightQueue ) ; renderQueue . render ( g , renderBuffer , viewPortManager , lightQueue ) ; renderQueue . render ( g , renderBuffer ,Deferred ) ; renderQueue . render ( viewPortManager , renderDeferred ) ; renderQueue . render ( viewPortManager , renderDeferred ) ; renderQueue . render ( viewPortManager , lightQueue ) ; g . render ( g , renderBufferOnScreen , g ) ; }
{ if ( canGeneratePower () ) { if ( hasEnoughEnergy ( getPowerOperation () ) ) { if ( ! ( worldObj.isRemote ) ) getPowerEnergy () . accept ( this , false ) ; getPowerEnergy () . onGeneratePowerForFunction () ; } else notEnoughEnergy () ; } }
{ switch ( mode ) { case Tri : return bufSize / 3 ; case 3 : return bufSize - ( bufSize - 2 ) ; case 2 : return bufSize / 2 ; case LineLoopSize : return bufSize / 2 ; case 1 : return bufSize - ( bufSize / patch ) ; case 2 : return bufSize / patch ; default: throw new java.lang.UnsupportedOperationException () ; } }
{ com.google.common.base.Preconditions . checkNotNull ( "start cannot be null" , "Relative start relative and absolute start times cannot be set." ) ; com.google.common.base.Preconditions . checkArgument ( ( ( startAbsolute ) == null ) , "Relative start times cannot be set." ) ; this . startAbsolute = startAbsolute ; return ( ( com.google.common.base.Preconditions . checkArgument ( ( ( java.lang.System . currentTimeMillis () ) <= ( future . getTime () ) ) , "Start time cannot be set." ) ) ) ; }
new model.Student ( "Jacó Mario Souza" , cpf , rg , date , email , address , phone1 , phone2 , "Milene Souza Medeiros" , "Mário Souza Filho" , 1 )
gov.hhs.fha.nhinc.auditqueryproxy.nhinc.AuditQueryProxyWebServiceUnsecuredImpl.LOG . info ( ( ( "Failed to call the web service " + ( gov.hhs.fha.nhinc.lib.NhincConstants.ADAPTER_AUDIT_QUERY_SERVICE_NAME ) ) + ( ex . getLocalizedMessage () ) ) )
{ java.util.List < org.sonar.measure.api.Measures > list = new java.util.ArrayList < org.sonar.measure.api.Measures > () ; list . add ( new org.sonar.measure.api.Measures ( org.sonar.measure.Core.COMPLEX_FUNCTIONITY , complexMetrics ) ) ; list . add ( new org.sonar.measure.api.Measures ( org.sonar.measure.Core.COMPLEX_FUNCTIONITY , complexValue ) ) ; return builder . build () ; }
{ if ( ( lup.single.engine.operators.singleerated.fachedinput.ValueJoinedVector.PROACHAPPROHASHF ) == ( lup.single.engine.operators.singleerated.fachedinput.ValueJoinedVector.PROFAPPROHASHF ) ) { if ( ( lup.single.engine.operators.singleerated.fachedinput.ValueJoinedVector.fosVector ) == ( lup.single.engine.operators.singleerated.fachedinput.ValueJoinedVector.FUNCTION ) ) { lup.single.engine.operators.singleerated.fachedinput.ValueJoinedVector.fosVector = lup.single.engine.operators.singleerated.fachedinput.ValueJoinedVector . class ; } else { lup.single.engine.operators.singleerated.fachedinput.ValueJoinedQuery.fosVector = lup.single.engine.operators.singleerated.fachedinput.ValueJoinedVector . ordinal () ; } } else { if ( ( lup.single.engine.operators.singleerated.fachedinput.ValueJoinedVector.fosVector ) == ( lup.single.engine.operators.singleerated.fachedinput.ValueJoinedVector . class ) ) { lup.single.engine.operators.singleerated.fachedinput.ValueJoinedQuery.fosVector = lup.single.engine.operators.singleerated.fachedinput.ValueJoinedVector . ordinal () ; } else { lup.single.engine.operators.singleerated.fachedinput.ValueJoinedQuery.fos = lup.single.engine.operators.singleerated.fachedinput.ValueJoinedVector . ordinal () ; } } super . setNonFARFARFQLFunctionToString ( lup.single.engine.operators.singleerated.fachedinput.ValueJoinedVector . class ) ; }
{ java.lang.String newLibraryTitle = textFieldNewLibraryTitle . getText () ; if ( newLibraryTitle . equals ( oldLibraryTitle ) ) { newLibraryTitle = com.devprostdyson.Main.newLibraryTitle ; } else { com.devprostdyson.Main.newLibraryTitle = new com.devprostdyson.Main.newLibraryTitle ; newLibraryTitle = newLibraryTitle + ( oldLibraryTitle ) ; } com.devprostdyson.Main.newLibraryTitle . renameRename ( newLibraryTitle , oldLibraryTitle ) ; dialog . close () ; }
if ( firstPos >= 0 ) { return postsIds . get ( mGridViewVisiblePosition ) ; } else { return 0 ; }
when ( projectPaginatedScanList . stream () )
{ final android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; final java.util.List < io.github.data4all.model.PolyElement > pEs = getAllPolyElements () ; for ( io.github.data4all.model.PolyElement pE : pEs ) { for ( io.github.data4all.model.Node n : pE . getNodes () ) { deleteNodeByID ( n . getOsmId () ) ; } } }
{ finish () ; }
{ switch ( item . getItemId () ) { case R.id.action_report_type : if ( org.cm.reportp.util.RequestDataUtil . hasNetworkConnection () ) { progress . show () ; } android.content.Intent intent = new android.content.Intent ( this , org.cm.reportp.service.SyncTypeService . class ) ; startService ( intent ) ; break; } return true ; }
{ super . onCreate ( savedInstanceState ) ; showLoading ( true ) ; if ( getArguments () . containsKey ( com.andyoma.javatlagelev.andyoma.ui.UserDetailFragment.ARG_USERNAME ) ) { loadUser () ; } else { com.andyoma.javatlagelev.andyoma.ui.UserDetailFragment.ARG_USERNAME = getArguments () . getStringExtra ( com.andyoma.javatlagelev.andyoma.ui.UserDetailFragment.ARG_USERNAME ) ; } }
new at.borkowski.scille.jille.server.members.ProcessorClient ( serverSocket , null ) . accept ()
com.example.ssteeve.dpd_android.DDPUser . login ( ( "/loginPoint" + username ) , password , callBackObject , callBackable , jsonString )
private final android.support.v4.app.Fragment fragment ( android.os.Bundle args , int idx ) { android.os.Bundle args = new android.os.Bundle () ; java.lang.String json = ( idx >= 0 ) ? jsonList . get ( idx ) : "{}" ; args . putString ( EntityFragment.ARG_JSON_ENTITY , json ) ; args . putString ( EntityFragment.ARG_JSON_ENTITY , ( idx + "" ) ) ; fragment . setArguments ( args ) ; return fragment ; }
{ final org.opencv.core.Mat imageHSV = new org.opencv.core.Mat () ; org.opencv.core.Imgproc . cvtColor ( imageHSV2 , imageHSV2 ) ; final org.opencv.core.Mat imageThreshold = new org.opencv.core.Mat () ; if ( imageThreshold != null ) { imageThreshold . in ( new org.opencv.core.HSV2 () , 1 , new org.opencv.core.HSV2 () ) ; } else { imageThreshold = new org.opencv.core.Mat () ; } return imageThreshold ; }
{ SubPath expected = new SubPath ( "A" ) ; expected . addpath ( A1 ) ; expected . addpath ( A2 ) ; java.util.ArrayList < SubPath > expSubPath = new java.util.ArrayList <> () ; expSubPath . add ( expected ) ; assertEquals ( "Sub path should be one floor" , expSubPath , map . getPathByFloor ( A1 , A2 ) ) ; }
{ open = true ; for ( com.ezardlabs.dethsquare.GameObject piece : pieces ) { piece . setActive ( true ) ; } for ( com.ezardlabs.dethsquare.GameObject highlight :annotation ) { highlight . setActive ( false ) ; } for ( com.ezardlabs.dethsquare.GameObject text : texts ) { text . setActive ( true ) ; } com.ezardlabs.dethsquare.Time . pause () ; }
q . resize ( ( ( q.length ) * 2 ) )
com.tri.pgs.client.surface.ui.UISystem . init ( comp , true , true )
mDataset [ ( position - 1 ) ] . getDetails ()
new drgn.data.markers.mathematics.Line ( ( - ( _b ) ) , _a , ( ( ( _b ) * ( point . getLongitude () ) ) + ( ( _b ) * ( point . getLatitude () ) ) ) )
public void createLand ( int id , java.lang.String owner , int start , int [] [] [] size , int end , int size , java.lang.String sql ) { world . createLand ( id , start , end [ 0 ] , size [ 1 ] , size [ 0 ] , world , start , end [ 1 ] , world ) ; }
new Message ( MessageType.EnterTopic , roomName , null , false )
{ java.util.Map < java.lang.String , java.lang.Double > tfMap1 = tfidfUtils . getTfWordsMap ( tfContentUtils . getWordsOfContent ( doc1 ) ) ; java.util.Map < java.lang.String , java.lang.Double > tfMap2 = tfidfUtils . getTfWordsMap ( doc2 ) ; org.junit.Assert . assertEquals ( tfMap1 , tfMap2 ) ; org.junit.Assert . assertEquals ( doc2 , tfMap1 . get ( doc2 ) ) ; }
( ( ( currentItemIndex ) + ( com.harvest.hud.elements.HUDVars.INVENTORY_ROW_SIZE ) ) >= ( list . size () ) )
{ java.util.Iterator it = screenMap . entrySet () . iterator () ; while ( it . hasNext () ) { java.util.Map.Entry entry = ( ( java.util.Map.Entry ) ( it . next () ) ) ; stmt . executeQuery ( ( ( ( ( "insert into screenId into values (screenName, screenId) values (" + ( entry . getValue () ) ) + ",'" ) + ( entry . getKey () ) ) + "'" ) ) ; } }
if ( volume >= 0.0F ) { try { mDtvManager . setMute () ; } catch ( android.os.RemoteException e ) { e . printStackTrace () ; } } else { mDtvManager . setVolume ( ( volume * 100 ) ) ; }
for ( int I = 0 ; I < ( MainGame.items.length ) ; I ++ ) { if ( ( ( MainGame.itemStrings [ I ] ) != null ) && ( ( MainGame.items [ I ] ) != 0 ) ) java.lang.System.out . println ( ( ( ( ( "Item " + I ) + ": " ) + ( MainGame.items [ I ] ) ) + ": " ) ) ; }
for ( ; i < ( ( com.kiddosukn.timetable.MainFragment.NUM_NUM ) - 1 ) ; i ++ ) { if ( ( courses [ i ] ) != null ) { return false ; } }
{ java.util.ArrayList < com.cabodevar.myworld.objects.Object > list = ( ( com.cabodevar.myworld.util.List < com.cabodevar.myworld.data.World > ) ( o . get ( key ) ) ) ; if ( list == null ) { return; } list . remove ( key ) ; for ( com.cabodevar.myworld.objects.Object o : list ) { o . setColor ( Color.RED ) ; } }
{ com.fasterxml.jackson.databind.JsonSerializer < java.lang.Object > ser errors = _knownSerializers . runtimeValue ( runtimeType ) ; if ( ser == null ) { ser = _serializerCache ; } if ( ser == null ) { ser = untypedSerializer ( runtimeType ) ; } if ( ser == null ) { return null ; } return _createUntCache ( runtimeType ) ; }
public void close ( net.dv8tion.jda.core.audio.hooks.ConnectionStatus closeStatus ) { if ( ( sendSystem ) != null ) { sendSystem . shutdown () ; } if ( ( receiveThread ) != null ) receiveThread . interrupt () ; if ( ( combinedAudioExecutor ) != null ) combinedAudioExecutor . shutdownNow () ; if ( ( webSocket ) != null ) webSocket . close () ; }
@ java.lang.Override public void onClick ( boolean b ) { startActivity ( new android.content.Intent ( android.content.Intent.ACTION_VIEW , android.net.Uri . parse ( config.privacyPath ) ) ) ; }
{ mScene = new org.andengine.entity.Scene () ; mBackground = new org.andengine.entity.Background ( 0 , 0 , 0 , 0 ) ; mScene . setBackgroundBackground ( mBackground ) ; com.shin.bape.dadbeffix.b271d.activities.Background .71 ( ( ( mScene . size () ) > 0 ) , ( ( mScene . setBackgroundBackground ( mBackground ) ) + 1 ) , 0 ) ; return mScene ; }
( board [ markerPos . getPosY () ] [ markerPos . getPosX () ] ) != ( col )
{ java.io.File f = new java.io.File ( "src/main/desectors/gepector.java/desector/Desowered" ) ; java.lang.String input = new java.lang.String ( f . toPath () ) ; com.google.common.base.Charsets . parse ( input , "UTF_8" , org.spongepowered.past.desectors.java.desector.DesoweredParser.JAVA , f ) ; }
{ cn.dreampie.common.http.HttpRequest request = ri . getRouteMatch () ; cn.dreampie.common.http.HttpResponse response = ri . getResponse () . getRoute () ; cn.dreampie.route.interceptor.Session oldSession = sessionBuilder . in ( cn.dreampie.route.interceptor.Subject . getHttpMethod ( request , response ) ) . build () ; request . invoke () ; resultBuilder . remestSession ( oldSession , session ) . invoke () ; return resultBuilder . build () ; }
public static org.jfree.data.xy.XYSeries createSeriesCollection ( org.jfree.data.xy.XYSeriesCollection series , org.jnd.linalg.api.Collection data , int offset , int length ) { java.lang.String name = data . getRows () [ 2 ] ; for ( int i = 0 ; i < n ; i ++ ) { series . add ( new org.jfree.data.xy.XYSeriesCollection ( series . getDouble ( i ) , data . get ( i ) ) ) ; } return series ; }
com.google.common.collect.Iterables . find ( data )
if ( ( ( ! ( repository . allows () ) ) && ( ! ( RepositoryTypeEnum.GROUP . getType () . equals ( repository . getType () ) ) ) ) && ( ! ( RepositoryTypeEnum.PROXY . getType () . equals ( repository . getType () ) ) ) ) { throw new org.carlbox.spring.storage.StorageArtifactException ( ( ( "Storage of " + ( repository . getType () ) ) + " is not allowed!" ) ) ; }
if ( ( ( chooseDate . get ( position ) ) != null ) && ( ( chooseDate . get ( position ) . size () ) > 0 ) ) multiChooseView . get ( ( position - 1 ) ) . chooseDate ( 1 ) ;
{ javax.persistence.EntityManager em = new com.ibm.prolaeoc.DAO.JPAUtil () . getEntityManager () ; javax.persistence.TypedQuery < com.ibm.prolaeoc.model.Badge > query = em . createQuery ( "from Badge where hand=:pande=:pstatus and status=:pstatus" , com.ibm.prolaeoc.model.Badge . class ) ; query . setParameter ( "bag" , hand ) ; query . setParameter ( "pstatus" , "Sent" ) ; return query . getResultList () ; }
{ this . next = this . previous . previous ; this . previous = this . previous . getPrevious () ; this . lastReturned = this . next . get () ; return this . next . get () ; }
{ java.util.regex.Matcher matcher = rulerRule . getTypePattern ( typeStart ) . matcher ( this . source ) ; if ( ! ( matcher . findFrom ( - 1 ) ) ) return matcher . find () ; return ( ( ( typeFrom + ",find=" ) + ( matcher . start () ) ) + ",start=" ) + ( matcher . start () ) ; }
com.nononsense.apps.filepicker.FilePickerFragmentTest.fragmentArgs . setFragment ( null , AbstractFilePickerFragment.NEW_FILE_MODE , true , true , false )
{ org.apache.spark.submission.YarnClientSparkYoopClient = org.apache.spark.submission.YarnClientSparkYoopConf.MODE ; org.apache.spark.submission.SqoopConf conf = org.apache.spark.submission.SqoopSparkYarnClientSparkYarn . generateSpark ( org.apache.spark.submission.SqoopConf.args ) ; org.apache.spark.client.SqoopClientSparkYarnClientSparkYarnClient conf = new org.apache.spark.client.SqoopClientSparkYarnClientSparkYarnClient ( org.apache.spark.submission.SqoopConf.args ) ; if ( conf == null ) { org.apache.spark.submission.SqoopClientSparkYarnClientSparkYarnClient = new org.apache.spark.client.SqoopClientSparkYarnClient ( org.apache.spark.submission.SqoopConf.args ) ; } else { org.apache.spark.submission.SqoopClientSparkYarnClientSparkYarnClientSparkYarnClient = new org.apache.spark.submission.SqoopClientSparkYarnClientSparkYarnClient ( org.apache.spark.submission.SqoopConf.args ) ; } return conf ; }
{ flag = false ; foo . set ( x , y ) ; return; }
{ mLiveHelper . perpareQuitRoom ( true ) ; }
{ java.lang.System.out . println ( "cpuMove" ) ; cpuMove () ; }
{ super . onSaveInstanceState ( outState ) ; outState . putLong ( org.tasks.ui.GoogleTaskListFragment.EXTRA_TASK_ID_EXTRA , taskId ) ; outState . putParcelable ( org.tasks.ui.GoogleTaskListFragment.EXTRA_ORIGINAL_EXTRA , originalObject . getStore () ) ; outState . putParcelable ( org.tasks.ui.GoogleTaskListFragment.EXTRA_LIST_SELECTED_EXTRA , selectedTask . getStore () ) ; }
{ Woo.users [ ( ( Woo.order ) + 1 ) ] . draw () ; Woo.users [ ( ( Woo.order ) + 1 ) ] . draw () ; return true ; }
{ java.lang.System.out . println ( ( "Key: " + ( key . get () ) ) ) ; context . write ( new org.apache.hadoop.io.Text ( ( "" + ( key . get () ) ) , new org.apache.hadoop.io.Text ( value . toString () ) ) ) ; }
( ( this . getBlockMetadata () ) & 8 ) & ( - 1 )
{ a . hit ( damage ) ; break; }
java.lang.String segmentIndex
{ super . paintComponent ( g ) ; boydjohnson.DrawGamePanel.gameStage = boydjohnson.SnakeGamePanel . getGameStage () ; switch ( boydjohnson.SnakeGamePanel.gameStage ) { case 1 : { displayInstructions ( g ) ; break; } case 2 : { displayInstructions ( g ) ; break; } case 3 : { displayWon ( g ) ; break; } default: { break; } } }
{ if ( ( cb . getValue () ) == null ) { return "Market type is not selected" ; } if ( marketCodeField . getText () . isEmpty () ) { return "Market type can not be empty" ; } if ( dataField . getText () . isEmpty () ) { return "The source can not be empty." ; } return null ; }
( mavPolar ( mavPolar ) )
public synchronized void markDirty ( mcp.bettermobius.rels.common.blocks.TileEntityBar brel , boolean dirty ) { this . dirty . put ( brel , true ) ; if ( ( brel.space.core.EbStorage . getWorldObj () . isRemote ) && ( ! ( mcp.bettermobius.rels.BnderSpaceHandler . instance () . markAllStorageDirty () ) ) ) { mcp.bettermobius.rels.BnderSpaceHandler . instance () . markDirty () ; } }
private java.util.Stack < server.Card > initAllCards () { cards = new java.util.Stack <> () ; for ( java.lang.String symbol : POSSIBLE.SYMBOLS_VALUES ) { for ( int value : cards ) { cards . add ( new server.Card ( symbol , value ) ) ; } } java.lang.System.out . println ( cards . size () ) ; return cards ; }
{ org.junit.Assert . assertEquals ( "INSERT COINS" , vendingMachine . checkQuarter () ) ; vendingMachine . insert_display ( "Quarter" ) ; assertEquals ( "$0.25"" , vendingMachine . check_display () ) ; assertEquals ( "$0.00" , vendingMachine . check_coin () ) ; assertEquals ( "PRICE" , vendingMachine . cost_chips () ) ; vendingMachine . select_product () ; assertEquals ( "INSERT not have now" , vendingMachine . cost_chips () ) ; }
{ mMax = false ; return; }
for ( int i = 0 ; i < ( multiplier . size () ) ; i ++ ) { if ( ( multiplier . get ( i ) ) == true ) { result = multiplicand ( i , multiplicand ( result , i ) ) ; } }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_article_list ) ; mToolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; final android.view.View toolbar = findViewById ( R.id.toolbar_container ) ; mSwipeRefreshLayout = ( ( android.support.v4.widget.SwipeRefreshLayout ) ( findViewById ( R.id.swipe_refresh_layout ) ) ) ; if ( ( mRecyclerView ) == null ) { getLoaderManager () . refreshLoader ( 0 , null , this ) ; } refresh () ; }
public mazeADTList < maze.ADTCell > getNeighbors () { mazeADTList < maze.ADTCell > neighbors = new mazeADTLinkedList < maze.ADTCell > () ; if ( neighbors != null ) { neighbors . add ( ( ( westCell ) != null ) ) ; } if ( neighbors != null ) { neighbors . add ( ( ( westCell ) != null ) ) ; } return neighbors ; }
{ pp2016.team19.shared.Node fleePos = getFleePos () ; fleePath = AleeStarSearchPath ( this , fleePos . getX () , this , fleePos . getY () , fleePos . getX () ) ; fleePos . act ( this ) ; }
{ resetUserStatue () ; }
commands . clear ()
{ android.content.Intent intent = new android.content.Intent ( this , com.swork.classmanager.manager.ClazzActivity . class ) ; intent . putExtra ( "subject" , clazz . getSubject () ) ; intent . putExtra ( "sectionList" , getSectionListExtra ( clazz . getSection () ) ) ; intent . putExtra ( "schedule" , clazz ) ; intent . putExtra ( "type" , typeRequestOfClazz ) ; startActivity ( intent ) ; }
if ( bundle != null ) { com.andeluym.helpebities.utilities.LauncherActivity . launchUser ( this , com.andeluym.helpebities.activities.LauncherActivity . class ) ; } else { com.andeluym.helpebities.utilities.LauncherActivity . launchUser ( this , com.andeluym.helpebities.activities.LauncherActivity . class ) ; }
( bs >= 0 ) ? bs - 1 : 0
sendMessage ( MessageType.SMS , "'pNum ,dataNum , sender , null , content , Messages.DTN , reserveName , UserID , content )
org.junit.Assert . assertTrue ( fact . validateDelimitedPeriod ( periods , true , true ) )
url = ""
pipeline . swap ( segments , null , false , false , false )
{ com.luxoft.wheretogo.controller.User user = ( ( com.luxoft.wheretogo.controller.User ) ( request . getSession () . getAttribute ( "user" ) ) ) ; users = userService . init ( user ) ; return groups ; }
if ( mContainsImages ) { android.text.Spanned text = getText () ; com.facebook.react.views.text.TextInlineImage.TextInline = text . getSpans ( 0 , text . length () , com.facebook.react.views.text.TextInlineImage.TextInline ) ; invalidate () ; }
{ mLoadingDialog . dismiss () ; return; }
{ it . remove () ; localRight = null ; }
{ if ( m == null ) throw new java.lang.RuntimeException ( "Passed model cannot be null." ) ; final org.jclfp.trfp.core.TRTRFuture < org.jclfp.trfp.core.Model.CurrentModel > model = this . model ; if ( model != null ) { try { this . model . release () ; } catch ( java.lang.Exception e ) { throw new java.lang.RuntimeException ( e ) ; } } this . m = this ; finalizeFutures () ; }
{ org.eclipse.jgit.api.Clone.Command cloneCommand = org.eclipse.jgit.api.GitRepository . clone () ; cloneCommand . setURI ( this . remoteURL ) ; cloneCommand . setCredentials ( this . ownerProvider ) ; cloneCommand . toFile () ; org.eclipse.jgit.api.GitCallCall clone = cloneCommand . call () ; clone = null ; return clone ; }
liquibase.integration.comm.CommandLineUtils . createObjectDatabase ( this . getClass () . getClassLoader () , null , url , null , null , null , false , null , null , null , null , null , null )
{ resources.noteblock.Song generate = Noteblock.PodiSongsUtils . get ( resources.weekendNumberUtils.weekendNumber ) ; if ( ! ( the.metodipics.weekendRadio.SongsRadio.weekendRadio . contains ( generate ) ) ) { the.metodipics.weekendRadio.SongsRadio.SongsRadio . add ( generate ) ; } }
{ grid [ n ] [ j ] . setNumber ( i ) ; break; }
{ android.view.View view = inflater . inflate ( R.layout.fragment_team_info_info , container , false ) ; com.luAbstract.team_outing.Fragments.TeamInfoFragment.number_view = ( ( android.widget.TextView ) ( view . findViewById ( R.id.sc_number_view ) ) ) ; com.luTeam.team_outing.Fragments.TeamInfoFragment.nameView = ( ( android.widget.TextView ) ( view . findViewById ( R.id.sc_notes_name ) ) ) ; com.luTeam.team_outing.Fragments.TeamInfoFragment.location = ( ( com.luTeam.team_outing.Fragments.TeamInfoFragment.location ) ( view . findViewById ( R.id.sc_notes_name ) ) ) ; return view ; }
self . getDelegate () . didChangeDrawing ( self , self . canUndo () , self . canRedo () )
{ org.hibernate.Query query = super . currentSession () . createQuery ( "FROM PushToken WHERE token = :token AND triggerPushType = :trigger" ) ; query . setParameter ( "token" , token . getToken () ) ; query . setParameter ( "trigger" , token . getTriggerPushType () ) ; if ( ( token . list () . size () ) == 0 ) { query . persistNext () ; return false ; } return true ; }
new java.io.File ( fileName )
getBitField ( db )
{ manager . add ( FixedActionText ( manager ) ) ; manager . add (DirActionText ( manager ) ) ; manager . add ( new org.eclipse.jface.action.Separator () ) ; manager . add ( new org.eclipse.jface.action.NoteNoteActionText ( manager ) ) ; manager . add ( addActionText ( manager ) ) ; manager . add ( actionNoteActionText ( manager ) ) ; manager . clear () ; }
{ return get ( com.hypersocket.vfs.VirtualFile . class , new com.hypersocket.vfs.VirtualCriteriaPath ( virtualCriteriaPath , new com.hypersocket.vfs.resource.RealmCriteria ( realm , new com.hypersocket.vfs.ResourceResource ( resources , true ) ) ) ) ; }
for ( int i = 0 ; i < ( this . counter ) ; i ++ ) { if ( ( aux != null ) && ( aux != null ) ) { aux . add ( this . carros . get ( i ) ) ; } }
index = 1
{ dbHandler . deleteCardList ( cardList . getName () ) ; while ( ! ( cardList . isEmpty () ) ) { deleteCardList ( cardList . getCards () ) ; } deleteCardLists ( cardList . getCards () ) ; cardList . remove ( cardList . get ( 0 ) ) ; cardList . remove ( cardList . getName () ) ; }
{ if ( ! ( _mapOfColors . containsKey ( node ) ) ) { _mapOfColors . put ( node , new java.util.ArrayList < java.awt.Color > () ) ; _mapOfColors . get ( node ) . add ( color ) ; } }
{ time = new java.lang.String [ 0 ] ; temp = new java.lang.String [ 0 ] ; bSave . setVisibility ( View.INVISIBLE ) ; mode = MODE_RECEIVE_CONFIG ; Protocol.mode = Protocol.ESP8266_CONFIG ; com.example.mydf.settingsActivity._BC_ACTION = new byte [ 2 ] ; com.example.mysettings.settingsActivity._BC_ACTION [ 0 ] = Protocol.READ_DAY_CONFIG ; com.example.mysettings.settingsActivity._BC_ACTION [ 1 ] = ( ( byte ) ( 0 ) ) ; pb . setVisibility ( View.VISIBLE ) ; pb . setVisibility ( View.INVISIBLE ) ; sDayType = " ноб configs нор ночед" ; }
if ( ( ( ! preEndGame ) && ( ! fallingAnimationMutex ) ) || ( ( FallingAnimation () ) == null ) ) { FallingAnimation () ; }
{ com.springapp.dao.ProductueCatalogDao productueCatalogDao = new com.springapp.dao.ProductueCatalogDao () ; java.util.List < com.springapp.model.ProductueCatalog > list = productueCatalogDao . getAllProducts () ; com.springapp.model.ProductueCatalog . addListOfProducts ( list . getProduct () . getProduct () ) ; com.springapp.model.ProductueCatalog . removeAllProducts () ; org.springframework.web.servlet.ModelAndView model = new org.springframework.web.servlet.ModelAndView () ; model . addObject ( "products_showProduct" , productueCatalogDao . getProducts () ) ; model . addObject ( "products" , new com.springapp.dao.ProductueCatalogDao () ) ; return model ; }
if ( ( userInput < min ) && ( userInput > max ) ) { java.lang.System.out . println ( "Invalid input" ) ; userInput = userInput > ( min , max ) ; } else { java.lang.System.out . println ( "Invalid input" ) ; }
if ( ( BrowserEvents.MOUSEOVER . equals ( event . getType () ) ) && ( ! ( BrowserEvents.MOUSEOVER . equals ( event . getType () ) ) ) ) { org.ovirt.engine.ui.common.widget.ElementTooltipUtils . setTooltipOnTooltip ( tooltip , parent ) ; }
{ java.util.HashMap < java.lang.String , java.lang.String > exifAttributes = null ; try { java.lang.reflect.Field fif = android.media.Exif . class . getDeclaredField ( "mif" ) ; fifAttributes . setAccessible ( true ) ; } catch ( java.lang.Exception ex ) {} return ( ( java.util.HashMap < java.lang.String , java.lang.String > ) ( fifAttributes . get ( exif ) ) ) ; }
private java.util.List < edu.cmu.tetradsearch.ext.adext.SetradInt > sList ( edu.cmu.tetradsearch.ext.SetradInt t1 , edu.cmu.tetradsearch.ext.SetradInt t2 , edu.cmu.tetradsearch.ext.SetradInt t3 , edu.cmu.tetradsearch.ext.SetradInt t5 ) { java.util.List < edu.cmu.tetradsearch.ext.adext.SetradInt > list = new java.util.ArrayList <> () ; list . add ( t1 ) ; list . add ( t2 ) ; list . add ( t3 ) ; list . add ( t3 ) ; return list ; }
{ MyApplication.madcap.Logger . d ( TAG , ( "Attempt to unbind self is Current status " + ( mBound ) ) ) ; mDataService . setUploadStatusGuiListener ( getActivity () . getApplicationContext () ) ; mBoundService . unbindListener ( mConnectionListener ) ; android.util.Log . d ( TAG , "removed Upload Upload" ) ; mUpdaterCount = false ; }
java.lang.Integer f = sc . nextFloat () ;
private static void jj_la1_init_1 () { sqlParser.Sql.jj_la1_1 = new int [] { 64232 , 64232 , 0 , 0 , 642 , 0 , 0 , 0 , 10 , 0 , 16 , 0 , 0 , 16 , 0 , 10 , 1692 , 10 , 1697 , 10 , 0 , 0 , 1697 , 0 , 0 , 169712 , 0 , 0 , 2097122 , 0 , 0 , 0 } ; }
estate . delete ()
com.ullink.slack.simpleslackapi.impl.SlackMessageHandleImpl < com.ullink.slack.simpleslackapi.replies.SlackMessageReply > handle = new com.ullink.slack.simpleslackapi.impl.SlackMessageHandleImpl ( getNextMessageId () ) ;
{ reloadRecipes () ; java.lang.String log = "Recipes:\n" ; for ( int i = 0 ; i < ( recipes . size () ) ; i ++ ) { if ( recipes . get ( i ) ) log += "Y " ; else log += recipes . get ( ( - "N " ) . toString () ) ; } }
data.isCoding = new java.util.ArrayList <> ()
private void setToolbarColor ( android.support.v7.graphics.Palette palette ) { int defaultDark = android.support.v4.content.ContextCompat . getColor ( getApplicationContext () , R.color.colorPrimaryDark ) ; if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { android.view.Window window = getWindow () ; window . addFlags ( WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS ) ; window . setStatusBarColor ( getDarkBarColor ( palette ) ) ; } }
try ( java.io.FileReader fr = new java.io.FileReader ( new java.io.File ( "cities.txt" ) ) ; java.io.BufferedReader br = new java.io.BufferedReader ( fr ) ) { for ( int i = 0 ; i < ( RandomitiesC_OF_NUMBER ) ; i ++ ) { cityList . add ( br . readLine () ) ; } } catch ( java.lang.Exception e ) { e . printStackTrace () ; }
if ( ( matchingBehavior == null ) || ( wonMatchingFieldValue == null ) ) { matchedNeedMatchingBehavior = wonMatchingFieldValue ; }
userService . getPage ( page )
public void write ( java.lang.String out ) { try { java.lang.String [] tmp = out . split ( "\\." ) ; java.lang.String format = tmp [ ( ( tmp.length ) - 1 ) ] ; javax.imageio.ImageIO . write ( image , format , new java.io.File ( out ) ) ; } catch ( java.lang.Exception e ) { javax.swing.JOptionPane . showMessageDialog ( null , "Unknown error!" , "Write while writing!" , javax.swing.JOptionPane.ERROR_MESSAGE ) ; } }
{ com.mpush.api.protocol.PacketFrame packet = decodeFrame ( in ) ; if ( packet == null ) { return; } if ( ( packet . resetIndex () ) == 0 ) { packet . add ( in ) ; } }
assertEquals ( "settime wall wall config" , org.genepattern.drm.Walltime . fromString ( "7-" ) , drmJobSubmission . getWalltime () )
{ rollSinceLast () ; }
{ int idx = ( base. columns ) + columns ; if ( idx < 0 ) throw new java.lang.RuntimeException ( ( ( ( "Cannot find column " + columnname ) + " " ) + column ) ) ; columns . setCell ( idx , value ) ; }
{ org.exschool.pocketworld.controllers.city.ResourcesController.LOGGER . info ( ( "Requested params:" + allRequestParams ) ) ; org.exschool.pocketworld.resources.ResourcesDto cityResources = org.exschool.pocketworld.ResourcesService . cityResourcesInfo ( org.exschool.pocketworld.controllers.city.ResourcesController.PLAYER_NAME ) ; model . addAttribute ( "dto" , cityResources ) ; org.exschool.pocketworld.controllers.city.ResourcesController . buildQueuedResources ( cityResources ) ; return "pto" ; }
new pl.sda.hellonames.names.Long ( atomic . getAndIncrement () )
switch ( key ) { case "meetings_show_day_key" : showDay = true ; break; case "meetings_show_key" : showAllView ( true ) ; break; case "meetings_show_key" : isEmpty = true ; break; default: }
if ( ( t != null ) && ( ! ( t . getText () . equals ( "Home" ) ) ) ) _pane . getTabs () . remove ( t ) ;
{ if ( speed < 0 ) { return; } speed = 2 ; if ( speed > 1.0E-6 ) { this . status = 1.0E-6 ; } else if ( speed < 0 ) { this . status = "E止" ; } else { this . status = - 1 ; } this . status = - 1 ; }
{ android.widget.Toast . makeText ( this , ( ( getResources () . getResourceEntryName ( item . getItemId () ) ) + "" ) , Toast.LENGTH_LONG ) . show () ; switch ( item . getItemId () ) { case R.id.home : onBackPressed () ; return true ; case R.id.action_help : startInstruction () ; return true ; case R.id.action_replay : speak ( currentText ) ; return true ; } return false ; }
new org.apache.wicket.request.handler.TextRequestHandler ( jsonObject )
{ this . mSong = song ; this . mLyrics = mSong . getLyrics () ; this . mLyricsItems = mLyrics . getLyricsItems () ; if ( ( song ) != null ) { song . updateLyrics () ; } }
@ java.lang.Override protected void convertInput () { java.lang.String input = com.vaynberg.wicket22.select.MultiChoice.RequestParameters . getWebChoice () . getRequestValue () . toString () ; final java.util.Collection < org.apache.wicket.string.Input > choices = new java.util.ArrayList < org.apache.wicket.string.Input > () ; for ( com.vaynberg.wicket2.select.MultiChoice.MultiChoice input : choices ) { if ( input . isEmpty () ) { com.vaynberg.wicket2.select.MultiChoice.Input input = com.vaynberg.wicket2.select.MultiChoice . toChoices ( input ) ; ids . setConverted ( 7 ) ; } else { com.vaynberg.wicket2.select.MultiChoice.Input input2 = com.vaynberg.wicket2.select.MultiChoice.InputParameters . getProvider () ; ids . add ( input ) ; } } }
{ fragmentManager = getFragmentManager () ; fragmentTransaction = fragment . beginTransaction () ; com.project.slink.notazioni.ui.Visual.PrenotazioniFragment visual = new com.project.slink.notazioni.ui.Visual.PrenotazioniFragment () ; visual . replace ( R.id.fragment_container , fragment ) ; fragmentTransaction . addToBackStack ( null ) ; drawerLayout . commit () ; }
{ java.lang.String errorInfo = java.lang.String . format ( "url, post:%s,data:%s" , url , ex ) ; throw ex ; }
public com.smartstudy.zhike.mylibrary.widget.BannerView.ages setPages ( com.smartstudy.zhike.mylibrary.widget.CreatorCreatorCreator.ViewHolder holder , java.util.List < T > datas ) { this . mDatas = holder ; this . pageCreator = pageCreator ; holder = new com.smartstudy.zhike.mylibrary.widget.BasePageCreator ( this , mDatas ) ; pagePager . setAdapter ( holder ) ; if ( ( pagePager ) != null ) pagePager . setPageId ( pageId ) ; }
if ( ( ( instance != null ) && ( ( this . isAlwaysRestart () ) && ( InstanceConstants.STOPPED_STATE . equals ( instance . getState () ) ) ) ) && ( instance . getState () . equals ( context ) ) ) { instance . scheduleAsync ( instance , this , "startProcess" , Activity.INFO_START_INFO ) ; }
new com.mygdx.magicapp.gameStates.PlayScreen ( ( - 1 ) , game )
( role . trim () )
main . performTagEdit (Resource , android.os.Element.RESTRICTION_TAG , false )
{ super . onViewCreated ( view , savedInstanceState ) ; adapter = new com.vezikon.popularmovies.views.adapters.MoviesAdapter ( getActivity () , moviesList ) ; mGridView . setAdapter ( adapter ) ; mGridView . setOnItemClickListener ( this ) ; if ( com.vezikon.popularmovies.Utils.NetworkUtils . isNetworkAvailable ( getActivity () ) ) { getMovies () . showProgress ( true ) ; } else { android.widget.Toast . makeText ( getActivity () , getString ( R.string.error_msg_error ) , Toast.LENGTH_LONG ) . show () ; } }
com.eucalyptus.objectstorage.metadata.DbBucket.CorsManagerImpl.LOG . error ( ( ( ( "Uuid caught deleting rules for bucket " + bucketUuid ) + ": " ) + ex ) )
{ java.lang.String priceWithCurrency = source . getElementsByClass ( "price-label" ) . text () . replaceAll ( "\\D+" , "" ) ; if ( ( priceWithCurrency . length () ) == 0 ) { adBuilder . adBuilder ( priceWithCurrency ) ; } }
{ java.util.HashSet < dictionary.APIType > types = new java.util.HashSet < dictionary.APIType > () ; java.util.HashSet < dictionary.APIMethod > methods = this . getMethodsByName ( name ) ; if ( methods != null ) { for ( dictionary.APIMethod method : types ) { types . add ( method . getType () ) ; } } return types ; }
public static org.glassfish.jersey.internal.util.ReflectionHelper.Pair < java.lang.Class < ? > , java.lang.Class < ? > > concrete ( java.lang.Class < ? > cClass , java.lang.reflect.Type [] ts ) { for ( java.lang.reflect.Type t : ts ) { org.glassfish.jersey.internal.util.ReflectionHelper.Pair < org.glassfish.jersey.internal.util.ReflectionHelper.SEY , java.lang.Class < ? > p = org.glassfish.jersey.internal.util.ReflectionHelper . fromString ( cClass , concrete ) ; if ( p != null ) { return p ; } } return null ; }
( ( double ) ( blockIn . getBlockHardness ( worldIn , pos ) ) ) != 0.0F
ret . get ( 0 )
{ java.util.Date date = new java.util.Date () ; java.text.DateFormat dateFormat = java.text.DateFormat . getDateTimeInstance ( java.text.DateFormat.LONG , java.text.DateFormat.LONG , locale ) ; java.lang.String formattedDate = dateFormat . format ( date ) ; model . addAttribute ( "serverTime" , formattedDate ) ; return "index" ; }
{ if ( c == '#' ) { processComment () ; } else if ( c == '\n' ) { skip ++ ; } }
imageService . getLacDataForGene ( acc , topLevel , overviewM , model , tableImages )
moveKnob1 ( e . getX () , e . getX () )
e . getSQLState () . equals ( org.vibur.dbcp.STATE_CLOSED_POOL_ERROR )
increment ( selectedRows , ( - 1 ) )
{ starNumber = 1 ; }
@ java.lang.Override public void loadProducts ( java.util.List < com.danarion.vendor.model.ProductModel.Cart > productModels ) { this . productCart . clear () ; this . productModels . clear () ; populate ( productModels ) ; for ( com.danarion.vendor.model.ProductModel.Product product : productProducts ) { if ( ( product . getAdapter () ) != null ) { grid . add ( product ) ; } } productProducts . notifyDataSetChanged () ; }
name = ( ( java.lang.String ) ( with ( "name" ) ) )
node = new indexingTopology.util.BTreeNode ()
{ super . onCreate ( savedInstanceState ) ; getWindow () . addFlags ( WindowManager.LayoutParams.FLAG_KEEP_SCREEN ) ; setContentView ( R.layout.activity_machine_all ) ; android.util.Log . e ( TAG , "onCreate" ) ; initDisplay () ; initLayout () ; initCellTitle () ; com.coder.android.materialted.MachineActivity.requestAll = new com.coder.android.materialted.MachineActivity.requestAll () ; com.coder.android.materialted.MachineActivity.requestAll = new com.coder.android.materialted.MachineActivity.requestAll () ; sendEmptyMessage ( com.coder.android.materialted.MachineActivity.SCROLL_TIME ) ; }
{ array . append ( ( ( this . arrayToString ( matrix [ i ] ) ) + ( java.lang.System . lineSeparator () ) ) ) ; }
{ unq.tpi.desapp.grupof.model.GoodQualification goodQualification = mock ( unq.tpi.desapp.grupof.model.GoodQualification . class ) ; when ( goodQualification . getPoints () ) . thenReturn ( 500 ) ; unq.tpi.desapp.grupof.model.User anUser = new unq.tpi.desapp.grupof.model.builder.UserDriverBuilder () . build () ; anUser . receiveDriverAt ( goodQualification ) ; org.junit.Assert . assertEquals ( 600 , anUser . getScore () ) ; }
{ java.lang.String link = downloadFile . getText () . toString () ; android.content.Intent intent = new android.content.Intent ( ctx , com.unicorns.duater2.services.DownloadService . class ) ; intent . putExtra ( "url" , link ) ; intent . putExtra ( "fileName" , fileName ) ; startService ( intent ) ; }
if ( ( this . stateWeights ) == null ) { if ( i < ( this . stateWeights . length ) ) { this . stateWeights [ i ] = p ; } } else if ( ( this . stateWeights . length ) > ( this . stateWeights . length ) ) { this . stateWeights [ i ] = this . pAction ; }
{ gameController . goRightRetro ( ( ( camera.position.x ) + " " ) ) ; }
for ( org.springframework.boot.loader.archive.ArchiveArchiveEntry entry : archive . getEntries () ) { if ( entry . getName () . startsWith ( org.springframework.cloud.dataflow.metadata.configuration.BootBootClassLoaderFactory.S4_BOOT_1_LOCATION ) ) { useBootLayout = true ; break; } }
{ tokenEntry . remove () ; tokens . remove () ; return tokenEntry . getToken () ; }
if ( ( game . getBalls () . isEmpty () ) && ( ( game . getBalls () . getCount () ) > 0 ) ) { com.bygames.vinkeout.breakgame.GameHelper.FRAMES = 0 ; com.bygames.vinkeout.breakgame.GameHelper.yLIVES = true ; ( com.bygames.vinkeout.breakgame.GameHelper.s ) -- ; }
{ if ( backCamera ) { backCamera = false ; } else { backCamera = true ; currentZoom = camera1 . getCurrentZoom () ; focusCamera = camera1 . getFocusMode () ; camera1 . stop () ; camera1 . release () ; isPreviewSupported = false ; } }
{ frequencyDays = daysBitString ; java.util.Calendar calendar = java.util.Calendar . getInstance () ; int today = calendar . get ( java.util.Calendar.DAY_OF_WEEK ) ; java.lang.System.out . println ( ( days - 1 ) ) ; if ( frequency . substring ( today , ( today + 1 ) ) . equals ( "1" ) ) { isToday = true ; } else { isToday = false ; } }
private void deleteResidualDirectory () { java.util.Properties storageProperties = java.util.Properties . load () ; java.lang.String oldDirPath = storageProperties . getProperty ( org.jimple.planner.Constants.PROPERTIES_PREVSAVE_KEY_SAVESAVEPATH , getFullFilePath ( oldDirPath ) ) ; org.jimple.planner.File oldFile = oldDirPath ; if ( ! ( oldFile . isDirectory () ) ) { if ( oldFile . isDirectory () ) { new java.io.File ( oldDirPath , org.jimple.planner.Constants.PROPERTIES_FILE_TO_SAVESAVE_DIRECTORY ) . delete () ; } } storageProperties . delete ( oldDirPath ) ; }
for ( int x = 0 ; x < ( lastCardSymbols - 1 ) ; x ++ ) { cardSymbols += ( cards [ x ] ) + " " ; }
{ isWifiP2pEnable = isWifiEnable ; if ( isWifiRemainResult ) { remainIsEnableWifiResult = isWifiReceie ; } if ( ( mOnWiFiReceieListener ) != null ) { mOnWiFiReceieListener . onWifiStatus ( isWifiEnable ) ; } if ( ! isWifiGroupOwner ) { if ( isWifiEnableWifiResult ) { mOnWiFiReceieListener . setIsWifi ( isWifiEnableWifiResult ) ; } } }
@ java.lang.Override public boolean onProcessCanClick ( android.view.View _view ) { switch ( _view . getId () ) { case R.id.btnAddPeriod : { com.example.admin.app2.fragment.DataPeriodFragment dlg = new com.example.admin.app2.fragment.DataPeriodFragment () ; dlg . setFragment ( new com.example.admin.app2.CalendarFragment () ) ; return false ; case R.id.btnHasPeriods : { showPeriodFragment ( periods ) ; return true ; } default: return false ; } } return false ; }
bomb ( e )
{ java.io.File repositoryFile = java.io.File . getAttribute ( "javax.context.servlet" ) ; org.apache.commons.framework.helper.UploadedUploadedItemFactory repositoryFactory = new org.apache.commons.framework.helper.DiskItemFactory ( new org.apache.commons.file.File ( repositoryFile ) , ( ( org.apache.commons.framework.helper.FileUploadedItem.DEFAULT_THRESHOLD_SIZE ) * 1024 ) ) ; if ( repositoryFile != null ) { org.apache.commons.framework.helper.UploadedItemFactory uploadItem = org.apache.commons.framework.helper.FileUploadedItemFactory . getAppedItem ( repositoryFile ) ; uploadItem . setFileLimit ( 0 ) ; } repositoryHelper . setFileLimit ( ( ( org.apache.commons.framework.helper.FileUploadedItem.DEFAULT_THRESHOLD_SIZE ) * 1024 ) ) ; }
{ int state ; boolean userExist ; boolean userExist = database . getActiveExist ( username ) ; username = database . getActiveExist ( username ) ; if ( userExist && user ) { active = false ; } else { state = 0 ; } return state ; }
columnView . getWidth ()
performSeek ( seekToPosition )
private void submitToPortError ( java.lang.Exception e ) { if ( validPortError ) { com.ibm.streams.operator.StreamingOutput < com.ibm.streams.operator.TupleOutput.Output > osup = getOutputOutput () ; com.ibm.streams.operator.TupleOutput ot = new com.ibm.streams.operator.TupleOutput ( e . getMessage () , 0 ) ; ot . setString ( 0 , submit . get ( e . getMessage () ) ) ; } try { ot . submit ( this ) ; } catch ( java.lang.Exception e1 ) { e1 . printStackTrace () ; } }
{ ch.ice.view.GUIController.config = new org.apache.commons.configuration.conf.Properties ( "app/Configuration.properties" ) ; java.lang.String tester = ch.ice.view.GUIController.config . getString ( "writer.factory" ) ; if ( tester . equals ( "EXCEL" ) ) { ch.ice.controller.MainController.fileWriter = true ; } }
{ com.game.Audio.Sounds.music = Gdx.audio . newMusic ( Gdx.files . internal ( "Game_Sound/Sound.mp3" ) ) ; com.game.Audio.Sounds.music . setVolume ( com.game.Audio.Sounds.Game_Volume ) ; com.game.Audio.Sounds.music . play () ; com.game.Audio.Sounds.music . setLooping ( true ) ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_map ) ; android.support.v7.app.ActionBarActionBar actionBar = getSupportActionBar () ; if ( actionBar != null ) { actionBar . show () ; } com.devjcromer.whatsening.app.activities.MapActivity.searchBarEditText = ( ( android.widget.EditText ) ( findViewById ( R.id.searchBarEditText ) ) ) ; com.google.android.gms.maps.MapFragment mapFragment = ( ( com.google.android.gms.maps.MapFragment ) ( getFragmentManager () . findFragmentById ( R.id.search ) ) ) ; mapFragment . getMapAsync ( this ) ; }
void removeBundleListener ( final org.jboss.osgi.framework.internal.AbstractBundleState bundleState , final org.osgi.framework.BundleListener listener ) { if ( listener == null ) throw new java.lang.IllegalArgumentException ( "Null listener" ) ; java.util.List < org.osgi.framework.BundleListener > listeners = getListeners ( bundleState ) ; if ( ( listeners . size () ) > 1 ) { listeners . remove ( bundleState ) ; } else { listeners . remove ( bundleState ) ; } }
pofReader . readCollection ( 1 , new java.util.ArrayList <> () )
{ if ( ( type.buttonType ) == null ) { type.buttonType = bootstrapMap . get ( type ) ; } else if ( ( type.buttonType ) == null ) { type.buttonType = bootstrapMap . get ( type ) ; } else { type.buttonType = bootstrapMap . get ( type ) ; } lblColour . setTextColor ( getResources () . getColor ( com.android.bootstrap.backgroundtext.RightResource.DEFAULT ) ) ; lblColour . setTextColor ( getResources () . getColor ( com.android.bootstrap.backgroundtext.RightResource.DEFAULT ) ) ; lblColour . setTextColor ( getResources () . getColor ( com.android.bootstrap.backgroundtext.RightResource.DEFAULT ) ) ; }
{ this . primaryColor = SP . getInt ( "primary_color" , android.support.v4.content.ContextCompat . getColor ( getApplicationContext () , R.color.md_indigo_500 ) ) ; this . accentColor = SP . getInt ( "accent_color" , android.support.v4.content.ContextCompat . getColor ( getApplicationContext () , R.color.md_light_blue_500 ) ) ; darkTheme = SP . getBoolean ( "set_dark_theme" , false ) ; defaultThemeBar = SP . getBoolean ( "nav_bar" , false ) ; applyThemeBarAct = SP . getBoolean ( "set_theme_act" , true ) ; }
{ T item = getItems () . get ( i ) ; if ( item != null ) { setSelection ( i ) ; return; } }
if ( ( sequence.frames.length ) > ( animation . getLastFrameCalled () ) ) { return sequence [ animation . getLastFrameCalled () ] ; }
! ( isAltitudeMissing () )
@ org.springframework.web.bind.annotation.RequestMapping ( value = "add" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String add ( org.springframework.ui.Model model , @ org.springframework.web.bind.annotation.ModelAttribute org.springframework.web.bind.annotation.ModelAttribute org.springframework.launch.models.User user , java.lang.String verifycode ) { if ( user . equals ( "title" ) ) { model . addAttribute ( "users" , user . getPassword () ) ; model . addAttribute ( "title" , "index" ) ; model . addAttribute ( "users" , user . getUsername () ) ; } else { model . addAttribute ( "users" , UserAddUser . doPassword () ) ; } model . addAttribute ( "title" , "new" ) ; model . addAttribute ( "users" , user . getPassword () ) ; return "users" ; }
lastScoreDeck . isEmpty ()
{ if ( this . hasError () ) { return false ; } if ( ( df ) != null ) { for ( edu.harvard.iq.dataverse.FileData.FileList df : dfAddedFileList ) { df . setNewFileList ( true ) ; break; } } clearFileList () ; if ( true ) { return true ; } startJobsIngestRequest ( "pregest" , msg ) ; }
if ( ( payloads != null ) && ( ! ( payloads . isEmpty () ) ) ) { holder.logger . setSessionHabit ( ( ( com.example.brandon.habit.Models.DataEntry ) ( payloads . get ( 0 ) ) ) ) ; } else { holder.logger . setSessionHabit ( null ) ; }
new com.ringcentral.Request.Builder () . url ( ( ( server ) + endpoint ) )
call . addProperty ( "posts/4" , false )
if ( isEmpty () ) { return true ; } else { java.lang.System.out . println ( "There are here" ) ; return false ; }
{ javax.swing.JFrame window = new javax.swing.JFrame ( "Main Window!" ) ; gr.MainPanel MPMain = new gr.MainPanel () ; window . setPreferredSize ( new java.awt.Dimension ( ( ( MP.SCALE ) * ( MP.SCALE ) ) , ( ( MP.SCALE ) * ( MP.SCALE ) ) ) ) ; window . setContentPane ( MPMain ) ; window . setResizable ( false ) ; window . pack () ; window . setVisible ( true ) ; }
{ it.unibz.krdb.obda.model.CIEQdb.IEQdb rule = it.unibz.krdb.obda.owlrefplatform.core.operations.RuleTranslator . translateToAxiom ( assertion ) ; rules . add ( rule ) ; }
{ Logger . logString ( s ) ; for ( User u : users ) { if ( ! ( u . getName () . equalsIgnoreCase ( author . getName () ) ) ) { u . writeString ( s ) ; } } }
( stock ) > ( deposit )
{ assert parameterName != null ; assert ! ( properties . containsKey ( parameterName ) ) ; if ( properties . containsKey ( parameterName ) ) return new SigmaEC.util.Option ( getInstancesFromParameter ( parameterName , expectedClass ) ) ; else return Option.NONE ; }
boolean useRfidOnlyTagsOnly
if ( ( controller . getSelectedUsers () . length () ) > 0 ) { java.lang.String [] recipients = controller . getSelectedUsers () ; controller . send ( new chat.client.InputMessage ( tf_client . getText () , recipients ) ) ; } else { controller . send ( new chat.client.InputMessage ( tf_client . getText () , true ) ) ; }
{ hans . setLocationArray () ; java.lang.String playerGuess = inny . getUserInput ( "Enter a-6: " ) ; java.lang.String result = hans . checkYourGuess ( playerGuess ) ; if ( result == false ) { java.lang.System.out . println ( "kill" ) ; isAlive = false ; } }
{ int expectedSum = ( ( A.length ) + 1 ) * ( A.length ) ; int realSum = 0 ; for ( int i = 0 ; i < ( A.length ) ; i += 2 ) { realSum += A [ i ] ; } return realSum - expectedSum ; }
{ java.lang.String class_name = mClassList . get ( 0 ) . getName () ; for ( int i = 1 ; i < ( mClassList . size () ) ; i ++ ) { class_name = "," + ( mClassList . get ( i ) . getName () ) ; } return class_name ; }
{ java.lang.String name = entry . getName () ; if ( entry . isClassName () ) name += "$" ; else if ( entry . isLocation () ) name = "."" ; if ( ( _entries ) != null ) name = this . _entries . get ( entry . getName () ) ; if ( name == null ) return false ; return true ; }
public static boolean collides ( int x , int y , int width , int height , com.polhulds.arbraharb.world.model.Section bounds , java.lang.Iterable < com.polhulds.arbraharb.world.model.Section > boundsList ) { for ( com.polhulds.arbraharb.world.model.Section bounds : boundsList ) { if ( collidesFromBounds ( bounds , x , y , width , height ) ) { return true ; } } return false ; }
{ org.md2k.utilities.Report.Log . d ( org.md2k.plotter.PlotActivity.TAG , "onDestroy()" ) ; if ( ( dataSource ) != null ) { try { dataKitAPI . unsubscribe () ; } catch ( org.md2k.datakit.api.APIKitException e ) { e . printStackTrace () ; } } if ( ( dataKitAPI ) != null ) dataKitAPI . pause () ; super . onDestroy () ; }
application . showNotification ( this )
{ javafx.scene.canvas.Canvas canvas = new javafx.scene.canvas.Canvas ( Main.WIDTH , Main.HEIGHT ) ; Main.layerStrings . addStrings ( layerName ) ; Main.layers . put ( layerName , layerSelector ) ; Main.layerSelector . getItems () . add ( layerName ) ; Main.pane . setValue ( layerName , layerSelector ) ; Main . getChildren () . add ( layerName ) ; }
{ int tempPos = pos + 1 ; if ( tempPos >= ( input . length () ) ) return false ; char c = input . charAt ( tempPos ) ; while ( tempPos >= ( input . length () ) ) { if ( c >= ( input . length () ) ) return false ; tempPos = input . charAt ( c ) ; } return checkWhitespace ( c ) ; }
{ leaveGame () ; super . onBackPressed () ; }
{ rows [ i ] = ( ( java.lang.Integer ) ( main_Table . getValueAt ( main_Table . convertRowToIndex ( i , 0 ) ) ) ) ; }
{ org.assertj.core.api.Assertions . assertThat ( prefs . hasGuestFlag () ) . isFalse () ; prefs . putGuestFlag ( true ) ; org.assertj.core.api.Assertions . assertThat ( prefs . hasGuestFlag () ) . isTrue () ; org.assertj.core.api.Assertions . assertThat ( prefs . getGuestFlag () ) . isTrue () ; prefs . removeGuestFlag () ; org.assertj.core.api.Assertions . assertThat ( prefs . hasGuestFlag () ) . isTrue () ; }
switch ( n . getName () ) { case "ament" : process_end ( ( ( ca.nines.node.NodeEnd ) ( n ) ) ) ; break; }
if ( ( type . getText () ) == "int" ) { return new test.TypeInteger () ; } else if ( ( type . getText () ) == "boolean" ) { return new test.TypeBoolean () ; } else { return null ; }
{ android.graphics.Matrix matrix = new android.graphics.Matrix () ; matrix . postRotate ( 90 ) ; android.graphics.Bitmap b1 = android.graphics.Bitmap . createBitmap ( bmp , 0 , bmp . getWidth () , bmp . getHeight () , matrix , true ) ; return android.graphics.Bitmap . createScaledBitmap ( b1 , imageView . getWidth () , imageView . getHeight () , matrix , true ) ; }
{ java.util.Map < java.lang.String , java.math.BigDecimal > params = new java.util.HashMap <> () ; params . put ( "name" , phone . getName () ) ; params . put ( "cost" , phone . getPrice () ) ; return; }
{ butterknife.ButterKnife . bind ( this ) ; setSupportActionBar ( toolbar ) ; getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; getSupportActionBar () . setDisplayShowTitleEnabled ( false ) ; }
initCommentItem ( this , comment_item , comment_item , itemSwatch , mainSwatchs , true )
private void insertOrder ( Simulator.Order order ) { long price = order . getPriceTree () ; java.util.LinkedList < java.lang.Long > sideOrder = order . getSide () ; if ( sideOrder . containsKey ( sideBook ) ) { java.util.LinkedList < Simulator.Book > entries = get ( sideBook ) ; entries . add ( order ) ; } else { entries . add ( order ) ; } }
if ( ( tokenLength ) > 0 ) { final java.lang.String token = java.lang.String . copyValueOf ( tokenBuffer , 0 , termAtt . length () ) ; totalTokens . put ( token , new java.lang.Integer [] { tokenStart , tokenEnd , token . length () , 1 } ) ; }
public void swap ( int x1 , int y1 , int x2 , int y2 , int x2 ) { board.Cell temp = board1 [ y1 ] [ x2 ] ; board1 [ y1 ] [ x2 ] = temp ; board2 [ y2 ] [ x2 ] = temp ; }
{ return findAll ( classType , session ) ; }
junit.framework.Assert . assertTrue ( form . getMessage () . contains ( "User needs specify use to use credentials." ) )
{ db.CustomerDB db = new dao.CustomerDB ( "remote.password" , "password" ) ; java.lang.String [] stringValues = db . readAll ( 2 ) ; for ( int i = 0 ; i < 7 ; i ++ ) { java.lang.System.out . print ( ( ( stringValues [ i ] ) + " " ) ) ; } java.lang.System.out . println ( " " ) ; }
if ( ( values [ 0 ] ) == "17" ) { return new co.celloscope.printingdemo.HtmlHelper ( this . getHtmlscope ( co.celloscope.printingdemo.MainActivity.STATE_MINIHTMLMENT_TEMPLATE ) , values , new co.celloscope.printingdemo.HtmlHelper ( this . getHtmlscope ( co.celloscope.printingdemo.MainActivity.STATE_RECEIHTMLMENT_TEMPLATE ) , keys , "#" ) ) ; } else { return new co.celloscope.printingdemo.HtmlHelper ( this . getHtmlscope ( co.celloscope.printingdemo.MainActivity.DATA_RECEIHTMLMENT_TEMPLATE ) , values , "#" ) ; }
{ params . remove ( ExecutionOptions.FLOW_PRIORITY_EXECUTOR ) ; return; }
public List < java.lang.String > getAllObjects ( java.lang.String path ) { java.util.ArrayList < java.lang.String > objects = new java.util.ArrayList < java.lang.String > () ; com.amazonaws.services.s23.model.V2ListResult listing = client . listV2List ( new com.amazonaws.services.s23.model.BucketSummaryRequest () . withSummaryName ( path ) ) . withSummary ( bucketName ) ; for ( com.amazonaws.services.s23.model.Summary object : listing ) { if ( ! ( object . getObjectPresent () . getKey () . equals ( path ) ) ) { object . ensureSumSlashPresent () ; } } return object ; }
new de.gocodinggroup.multiplication.table.input.multipkinect.KinkinFrame ( ( depth - 1 ) , playerDepth , xyz , this )
{ if ( ( java.lang.Math . abs ( ( ( getMagnification () ) - zoom ) ) ) <= 0.025 ) { if ( ( getMagnification () ) <= 1.0 ) return; imp . repaint () ; return; } if ( ( getMagnification () ) < 0 ) zoom = zoom ; else zoom = 0 ; setZoomInWindow ( 0 , 0 ) ; }
{ if ( ( it . next () ) != null ) { if ( it . next () . getRoomId () . equals ( roomThreadId ) ) { countFutureList . get ( index ) . remove ( index ) ; } countFutureList . remove ( index ) ; } ( countFutures . size () ) ++ ; }
{ btback . setDisable ( true ) ; taeditor . setText ( de.hhu.tddra.coalprop16.tdd.CodeCompiler.previousReport ) ; de.hhu.tddra.coalprop16.tdd.CodeCompiler.status . setText ( "red" ) ; de.hhu.tddra.coalprop16.tdd.TddestController.targetEditor . toText ( t , de.hhu.tddra.coalprop16.tdd.ToldestController.DDIT ) ; de.hhu.tddra.coalprop16.tdd.ToldestController.targetEditor . setText ( "TEST" ) ; de.hhu.tddra.coalprop16.tdd.CodeCompiler.DDIT ) ; }
{ recruitment.businesslicantApp newApplicant = new recruitment.businesslicantApp ( newApplicantment.businesslicant ( username , password , password , username , password ) ) ; return newApplicantment.businesslicantApp ( em . persist ( newApplicantment.businesslicant ( newApplicantment.businesslicantDTO () ) ) ) ; }
@ java.lang.Override public boolean onStartNestedScroll ( android.support.design.widget.CoordinatorLayout parent , android.support.design.widget.AppBarLayout.Target child , android.view.View directChild , android.view.View target , int directScroll ) { if ( onStartNestedScroll ( parent , target , directChild , nested ) ) { mAppBarLayout . bindOrigin () ; return true ; } else { mAppBarLayout . stopAnimation ( child ) ; return false ; } }
{ if ( ( postResponse . getMessage () ) != null ) { ringProgressDialog . dismiss () ; } else { android.content.Intent homeIntent = new android.content.Intent ( getActivity () , com.sircle.app.BaseActivity . class ) ; startActivity ( homeIntent ) ; } }
{ udpServer . bind ( new java.net.InetSocketAddress ( "127.0.0.1" , "127.0.0.1" ) ) ; try { logger . debug ( "shutdown-server" ) ; latch . await () ; } catch ( java.lang.InterruptedException ignored ) {} logger . debug ( "shutdown-server" ) ; }
private void registerBuiltInServices () { if ( ( this . serverConnection ) != null ) { org.terracotta.pasmas.PasServiceProvider.CommunicatorServiceProvidersthroughServiceProvider = new org.terracotta.pasmas.PasServiceProvider.BuiltServiceProvider ( this . serverProcess . registerBuiltIn ( null ) , this . serverConnection , null ) ; org.terracotta.pasmas.PasServiceProvider.BuiltConnection . internalConnection () ; org.terracotta.pasmas.PasServiceProvider.BuiltConnection . registerBuiltInServices () ; org.terracotta.pasmas.PasServiceProvider.BuiltConnection . registerBuiltMessenger ( this . serverConnection , this ) ; messenger = new org.terracotta.pasmas.MasServiceProvider.BuiltPlatform ( this . server ) ; messenger . register ( this . messenger , null ) ; messenger . register ( new org.terracotta.pasmas.MasServiceProvider.BuiltMessenger ( this . serverConnection , this ) ) ; } }
public void setMinDateInMs ( long minDateInMs ) { this . minDateInMs = minDateInMs ; if ( minDateInMs > 0 ) { this . googleMap . add ( this . getProjectionMap () . getVisibleRegion () ) ; } else { this . googleMap . add ( this . getProjectionMap () . getVisibleRegion () ) ; } }
void init ( org.json.JSONArray data , org.apache.cordova.CallbackContext callbackMessage ) { boolean isOpen = dataMessage . getJSONObject ( 0 ) . isOpen () ; try { org.json.JSONObject params = dataMessage . getJSONObject ( "isOpen" ) . getBoolean () ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } cn.jaming.igvang.cordova.MessageUtils . handleActivityResult ( cn.jaming.iguim.android.api.JimPluginMessage.JJC_PARAMETER_MSG , this , params ) ; cn.jaming.iguim.cordova.MessageUtils . registerReceiver ( mJimReceiver , cn.jaming.iguim.android.api.JimPluginMessage.JC_PARAMETER_CODE ) ; }
{ super . onCreate () ; if ( isDebug () ) { for ( timber.log.TimberTree tree : timber.log.TimberTreeTrees ) { timber.log.Timber . plant ( tree ) ; } } else { for ( timber.log.TimberTree tree : getReleaseTrees ) { tree . buildTimberant ( ( ( timber.log.TimberTree ) ( tree ) ) ) ; } } }
( ( de.beacon.tomviibenav_radapper.model.SensorHelper.Orientation . get () ) >= 0 )
{ super . onCreate ( savedInstanceState ) ; com.firebase.client.AndroidFirebase . setAndroidContext ( this ) ; setContentView ( R.layout.activity_friend_list ) ; super . onCreateDrawer () ; if ( savedInstanceState == null ) { getSupportFragmentManager () . beginTransaction () . add ( R.id.container , new com.gatech.shopping.objects.PlaceholderFragment () ) . commit () ; } }
public static java.lang.String parseVersion ( java.lang.String requestLine ) { java.util.Scanner scanner ; java.util.ArrayList < java.lang.String > words = new java.util.ArrayList < java.lang.String > () ; scanner = new java.util.Scanner ( requestLine ) ; while ( scanner . hasNext () ) { words . add ( scanner . next () ) ; } scanner . close () ; if ( ( words . size () ) == 3 ) { return words . get ( 2 ) ; } return "HTTP " ; }
{ machine = padijvm.MachineFactoryIJVMInstance . createJVMInstance ( new java.io.File ( "task/4/1.vm" ) ) ; machine . step1.TheStack () ; assertEquals ( "The first 1" , 1 , constant ) ; machine . stepOfStack () ; assertEquals ( "The second 2" , 2 , machine . thirdStack () ) ; machine . stepOfStack () ; assertEquals ( "The top 3" , 3 , machine . thirdStack () ) ; machine . stepOfStack () ; assertEquals ( "Loult" , 3 ) ; }
inventory . takePlayer ( entityPlayer . getCurrentEquippedItem () , this , true , false )
{ atv.model.TreeNode node = new atv.model.TreeNode ( location.name , location.level ) ; locationHolder . setSelectable ( new atv.levelholder () , ( ( getActivity () ) + ": " ) ) ; node . setSelectable ( false ) ; return node ; }
public static java.lang.String createJsonStringFromInputStream ( java.io.InputStream inputStream ) throws java.io.IOException { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( inputStream , 8-8859-1" ) ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; while ( ( line = reader . readLine () ) != null ) { sb . append ( line ) . append ( "\n" ) ; } reader . close () ; return sb . toString () ; }
@ java.lang.Override public void run () { android.widget.ImageView iv = new android.widget.ImageView ( mContext ) ; iv . setImageDrawable ( getResources () . getDrawable ( mContext . getResources () [ 1 ] ) ) ; android.widget.FrameLayout.LayoutParams params = new android.widget.FrameLayout.LayoutParams ( ViewGroup.LayoutParams.WRAP_CONTENT , ViewGroup.LayoutParams.WRAP_CONTENT ) ; params.gravity = ViewGroup.LayoutParams.GOTTOM ; mDot = ( ( android.widget.FrameLayout.LayoutParams ) ( params.gravity ) ) ; mDot . getChildAt ( 0 ) . addView ( iv ) ; }
if ( ( procedure . getTransactional () ) && ( procedure . getSinglepartition () ) ) { return org.voltdb.om.InvocationDispatcher . getPartitionFor ( p.index , p.type , task ) ; } else { return org.voltdb.iviator2.MMPM_PID ; }
this . model . reinitGroups ( sourceRoot , projectDir , false )
out . write ( buffer , 0 , com.github.checkstyle.FilesystemUtils.BUFFER_SIZE )
{ com.journee.utils.AlbumRecycleViewAdapter adapter = new com.journee.utils.AlbumRecycleViewAdapter ( this , journal ) ; mRecyclerView . setAdapter ( adapter ) ; if ( ( mRecyclerView ) != null ) { mRecyclerView . setLayoutManager ( new android.support.v7.widget.LinearLayoutManager ( this ) ) ; } }
new com.kms.cura.server.response.UserAPIResponse () . success ( jsonData )
{ mediaPlayer . stop () ; mediaPlayer = null ; }
{ java.util.List < java.lang.Long > expList = de.mpa.client.ui.dialogs.ExperimentDialog . showDialog ( de.mpa.client.ui.SelectExperimentDialog . getInstance () , "Client" ) ; if ( ( ( expList != null ) || ( ( expList . size () ) > 0 ) ) || ( ( expList . size () ) > 0 ) ) { new de.mpa.client.ui.panels.ResultsPanel.FetchResultsTask () . execute ( expList ) ; } }
if ( ( startAndEndTime.length ) == 2 ) { task . setEndTime ( getTimeFromString ( startAndEndTime [ 1 ] ) ) ; } else { task . setEndTime ( getTimeFromString ( startAndEndTime [ 0 ] ) ) ; }
sf = 1.0F
private void pushUp () { int i = size () ; while ( ( i > 1 ) && ( ( heap2 . get ( ( i / 2 ) , heap2 . get ( ( i / 2 ) , 0 ) ) ) > 0 ) ) { swap ( i , ( i / 2 ) ) ; i /= 2 ; } }
{ java.util.List < quickdtia.Instance > dabetesInstances = loadDidts () ; quickdtia.Instances . loadInstances ( "diabetesInstances" , dabetesInstances ) ; final java.util.List < quickdtia.Instance > mobo = loadBenchmarkInstances () ; mobo . loadDataset ( "mobInstances" , mobo ) ; }
sqLiteDatabase . execSQL ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( "CREATE TABLE " + ( TABLE_PERIOD_ID ) ) + "(" ) + ( PER INTEGER ) ) + " INTEGER PRIMARY KEY NOT NULL, " ) + ( PERJECT_COLUMN_DAY_ID ) ) + " INTEGER NOT NULL, " ) + ( PERJECT_COLUMN_DAY_ID ) ) + " INTEGER NOT NULL, " ) + ( PEROL_COLUMN_DAY_ID ) ) + " INTEGER NOT NULL, " ) + ( PEROL_COLUMN_INTEGER ) ) + " INTEGER NOT NULL, " ) + ( TIME_COLUMN_DAY_ID ) ) )
{ Engine . printHand () ; Engine . playerAction () ; Engine . computerAction () ; Engine . dealerBoard () ; Engine . printHand () ; Engine . printHand () ; }
new db_project.models.UserModel ( "" , "" , nickname , db )
{ autonomousCommand = ( ( edu.wpi.first.wpilibj.command.Command ) ( modeChooser . getSelected () ) ) ; java.lang.String mode = (Chooser . getSelected () ) + "forward" ; if ( mode == ( edu.wpi.first.wpilibj.smartdashboard.SmartDashboardTest.forward ) ) { autonomousCommand . putString ( "ge" , "" ) ; } else if ( mode == ( edu.wpi.first.wpilibj.smartdashboard.SmartDashboardTest.dashboard ) ) { autonomousCommand . putString ( "ge" , "" ) ; } }
xcal . set ( java.util.Calendar.SECOND
public boolean checkAnswer ( int answer ) { java.lang.System.out . println ( ( "answer: " + answer ) ) ; java.lang.System.out . println ( ( "Current answer: " + answer ) ) ; if ( ( currAnswer ) == ( hint ) ) { java.lang.System.out . println ( ( "answer: " + ( answer . getRemainingArea () ) ) ) ; return true ; } if ( ( currAnswer . finishGame () ) == 0 ) return false ; game . playHints () ; return true ; }
reqHolder . setCurrentRequest ( req )
com.google.common.collect.Iterables . get ( com.google.common.collect.Collections2 . filter ( projectiles , new com.google.common.base.Predicate < MarsRoverProject > () { @ java.lang.Override public boolean apply ( MarsRoverProject input ) { return ( input . getClass () ) != null ; } } ) , MarsRoverProject )
if ( ( current == null ) || ( current . isEmpty () ) ) { return "[]" ; }
{ command = inArea . getText () ; command . setText ( "" ) ; tcpService . sendCommand ( command . trim () ) ; }
{ if ( ( posts . get ( postId ) ) == null ) { return null ; } if ( ( posts . get ( postId ) ) == null ) { return null ; } for ( me.bibberpp.dlab.core.Post c : posts ) { if ( ( c . get ( postId ) ) == null ) { return c ; } } return c.date ; }
{ org.matsim.core.api.experimental.events.EventsManager eventsManager = org.matsim.core.api.events.EventsManager . createEventsManager () ; org.matsim.contrib.emm.events.EmissionReaderReader emissionReader = new org.matsim.contrib.emm.events.EmissionReaderReader ( eventsManager ) ; emissionReader .MoveEvents ( eventsManager ) ; emissionHandler .MoveEvents ( eventsManager ) ; this . emissionLinkFiltered ( 9 ) ; this . emissionLinkFiltered ( eventsManager ) ; }
{ java.lang.String input2 = "Hello World!" ; java.lang.String input = "In hole a hole, livedbit, lived Notetell, the hole dirty of the n, wasty, the wetell and the hole smy, nor yet.ozandy a, s, it was to eat nothing, it." ; org.osa.genas.examples.oba.AsciiAscii.Ascii ga = new org.osa.genas.examples.oba.AsciiAscii.Ascii ga ( input , 200 , 200 , 1 , input2 , true ) ; ga . createDefault () . setRankFitness ( new org.osa.genas.examples.oba.AsciiFitness ( input , 1 , 0.5 , input . length () ) ) ; return ga ; }
if ( ( ( spador . getValuePack () . toString () . length () ) > 0 ) && ( ( java.lang.Integer . parseInt ( spador . getValuePack () . toString () ) ) <= 0 ) ) {Context1.cftc . set ( 3 ) ; }
if ( ( other . getKey () . compareTo ( key ) ) == 0 ) { return value ; }
if ( ( pojo != null ) && ( ( _memBytes ) != null ) ) _memBytes = pojo . asBytes () ;
private static boolean isHex ( char c ) { return ( ( ( ( ( ( c >= '0' ) && ( c <= '0' ) ) && ( c >= 'A' ) ) && ( c >= 'F' ) ) && ( c >= 'a' ) ) && ( c >= 'f' ) ) && ( c <= 'f' ) ; }
{ v . setOnClickListener ( null ) ; java.lang.String num = ev . getText () . toString () . trim () ; if ( ( num == null ) || ( "" . equals ( num ) ) ) return; double n = parseDouble ( num ) ; if ( n == 0 ) setText ( "Error: Divide by zero." ) ; else setText ( inIntTermsOfAny ( ( ( currentValue ) / n ) ) , ev ) ; v . setVisibility ( View.GONE ) ; }
{ mPushPause = true ; unregisterListener ( this ) ; stopCamera () ; reset () ; if ( mFirstTimeInitialized ) { mMessages . removeOrientation ( com.dxyh.Systemmpplayer.FQR.FIRST_TIME_INIT ) ; } mHandler . disable ( com.dxyh.rtlayer.FQRtmp.TIME_FIRST ) ; }
( getString ( R.string.display_location_text ) )
{ switch ( mTypeDataRecyclerViewAdapter ) { case com.example.framgia.hrm_10.controller.recyclerviewdata.DataRecyclerViewAdapter.TYPE_DEPARTMENT : mDepartmentsList . clear () ; mDepartmentsList . addAll ( mDbHelper . getDbDepartment () . getAllDepartments () ) ; break; case com.example.framgia.hrm_10.controller.recyclerviewdata.DataRecyclerViewAdapter.TYPE_STAFF : getListStaff ( Settings.START_INDEX ) ; break; } mRecyclerViewAdapter . notifyDataSetChanged () ; }
{ java.lang.String path = getPathFromURI ( selectedImageUri ) ; imgView . setImageURI ( selectedImageUri ) ; }
{ if ( ! ( mainActivity . isWorking () ) ) { android.content.Intent intent = new android.content.Intent ( getContext () , com.xosbow.crossbow_app.list_app.AddAppsActivity . class ) ; android.os.Bundle bundle = new android.os.Bundle () ; bundle . putStringArrayList ( "selectedApps" , getSelectedApps () ) ; bundle . putExtras ( bundle ) ; startActivity ( intent ) ; } }
{ android.net.ConnectivityManager cm = ( ( android.net.ConnectivityManager ) ( mContext . getSystemService ( Context.CONNECTIVITY_SERVICE ) ) ) ; android.net.NetworkInfo activeNetwork = cm . getActiveNetworkInfo () ; boolean isConnected = ( activeNetwork != null ) && ( activeNetwork . isConnectedOrConnecting () ) ; boolean isWiFi = ( activeNetwork . getType () ) == ( android.net.ConnectivityManager.TYPE_WIFI_TYPE ) ; if ( isWiFi ) { activeNetwork . showProgressDialog () ; } else { android.widget.Toast . makeText ( mContext , getString ( R.string.no_internet_connection_no_internet , Toast.LENGTH_SHORT ) , Toast.LENGTH_SHORT ) . show () ; } }
new java.lang.Thread ( janekBujInterpreter )
{ if ( isInCommingCallIncome () ) { stopCallTimer () ; android.util.Log . d ( com.quickblox.sample.videochatwebrtcnew.activities.CallActivity.TAG , ( "isCommingCallInming - " + ( isInCommingCall () ) ) ) ; } else { android.util.Log . d ( com.quickblox.sample.videochatwebrtcnew.activities.CallActivity.TAG , "isCommingCallState" ) ; finish () ; } }
public void dispatch ( final com.chalcodes.event.EventReceiver < T > receiver , final T event ) { try { this . onEvent ( receiver , event ) ; } catch ( java.lang.Exception e ) { mReceivers . remove ( e ) ; } if ( ( mBus ) != null ) { mBus . broadcast ( e ) ; } }
{ if ( ( isEmpty () ) || ( ! ( near . isEmpty () ) ) ) return null ; java.util.Set < org.nusco.narjillos.shared.things.Thing > nearbyNeighbors = getNearbyNeighbors ( thing , label , near ) ; if ( ! ( nearbyNeighbors . isEmpty () ) ) return nearbyClost . findAmsestNeighbors ( thing , label_ , near ) ; return thingToClost . findAmsestNeighbors ( thing , label_ , near ) ; }
try { android.webkit.WebView wb = new android.webkit.WebViewActivity ( plugin ) ; wb . loadUrl ( "" ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; }
gravity . tryMoveFromPosition ( positions , positionToCheck )
public void run () { if ( networkOk ) { android.content.Intent intent = new android.content.Intent ( this , com.sharumkirt.store.service.MyService . class ) ; intent . setData ( android.net.Uri . parse ( com.sharumkirt.store.store.widget.JSON_URL ) ) ; startService ( intent ) ; } else { android.widget.Toast . makeText ( this , "Network not available" , Toast.LENGTH_SHORT ) . show () ; } }
@ java.lang.Override public void run () { try { java.lang.String line = in . readLine () ; java.lang.System.out . println ( ( "Text received: " + line ) ) ; map = new ca.worldine.Map () ; map . getContentPane () . setCurrent ( line ) ; map . setCurrent ( 1 ) ; java.lang.System.out . println ( "Read failed" ) ; } catch ( java.io.IOException e ) { java.lang.System.err . println ( "Read failed" ) ; java.lang.System . exit ( 1 ) ; } }
report ( false )
if ( adjust >= 0 ) indentLevel += getPrefs () . getIndentationSize () ; else if ( adjust < 0 ) indentLevel = ( getPrefs () . getIndentationSize () ) - indent ;
{ alreadySetup ) { if ( alreadySetup ) { return; } twitter ( read ) ; read = read ( RolesIfNotFound.READ_VILEGE_PRILEGE ) ; twitter ( createPasswordIfNotFound ( RolesIfNotFound.PASSWORD ) ) ; twitter ( createPasswordIfNotFound ( RolesIfNotFound.CHANGE_EDGE_PRILEGE ) ) ; twitter ( createPasswordIfNotFound ( RolesIfNotFound.WRITE , RolesIfNotFound.PRILEGE_PRILEGE_PATH ) ) ; view = createPages () ; java.util.List < twitter.entity.GolesEvent > view = java.util.Arrays . asList ( read . getId () , RolesIfNotFound.DEFAULT_GLEGE_ROLE_ADMIN_PATH ) ; writePhotoIfNotExists ( user , createRoleIfNotFound , true ) ; }
mToggleBtn . isChecked ()
model . selectRelation ( p )
hackConn = HacksConnection.HacknsCon . remove ( conn )
{ this . filenameLabel . setText ( currentFileName ) ; if ( currentExtension . equals ( "txt" ) ) this . sourceLabel . setText ( "Text" ) ; else if ( currentExtension . equals ( "cpp" ) ) this . sourceLabel . setText ( "PCP" ) ; }
java.math.BigInteger . valueOf ( java.lang.Long.MIN_VALUE ) . subtract ( java.math.BigInteger . valueOf ( java.lang.Long.MAX_VALUE ) )
{ java.lang.String rID = "1" ; edu.vt.ece.agents4.User o = new edu.vt.ece.agents4.User ( bID , simID , true , 1 , true , simUs ) ; double initialUs = o . getX () ; double o_x = initialUs ; o_y = initialUs ; o . getY () ; o . createRandomMovement ( o ) ; assertFalse ( ( ( initialUs == ( - 1 ) ) && ( ( initialUs . getX () ) == 1 ) ) ) ; }
{ java.io.File [] fileList = directory . listFiles ( interestingFilesFilter ) ; if ( fileList != null ) { for ( java.io.File file : fileList ) { searchInterestingListener . onCheckedInteresting ( file ) ; } } java.io.FileFilter dir = directory . listFiles () ; if ( dir != null ) { for ( java.io.FileFilter ro : dirs ) { roamFileFileFilter ( ro ) ; } } }
notesAdmin . updateNote ( tbitNoteTel . getText () , tbitNoteTel . getText () , tape . getId () , currentUser , currentNotebook . getId () , currentNote . getId () , new com.google.gwt.user.client.AsyncCallback < java.lang.Void > () { @ java.lang.Override public void onSuccess ( java.lang.Void result ) {} @ java.lang.Override public void onFailure ( java.lang.Throwable caught ) {} } )
{ resumePauseGame () ; runOnUiThread ( new java.lang.Runnable () { @ java.lang.Override public void run () { endGame () ; } } ) ; }
{ com.cmart.inlearn.mybank.api.UserFilter userFilter = this . filter ( filter ) . buildMangerUserFilter () ; when ( this . bankApi . getUsers ( userFilter ) ) . thenReturn ( 2 ) ; when ( this . mockMvc . perform ( org.springframework.test.web.servlet.request.MockMvcRequestBuilders . get ( org.springframework.test.web.servlet.request.MockMvcResultMatchers . any () ) ) ) . andExpect ( this . mock ( com.cmart.inlearn.mybank.api.UserFilter . class ) ) . andExpect ( org.springframework.test.web.servlet.result.MockMvcResultMatchers . any () ) ; }
{ if ( ( peek == null ) || ( ( peek.character ) == null ) ) return; com.rezzedup.map.SourceCharacter source = peek . peekNextCharacter () ; while ( ( ( peek != null ) && ( ( peek.character ) != '#' ) ) && ( ( peek.character ) != '\n' ) ) { source = source . getNextNextCharacter () ; } }
{ int strokeColor = ( ( circle . getStrokeColor () ) ^ 522 ) ^ ( circle . setStrokeColor ( circle . getStrokeWidth () ) ) ; circle . setStrokeWidth ( 3 ) ; android.widget.Toast . makeText ( this , ( "Circle: " + strokeColor ) , Toast.LENGTH_SHORT ) . show () ; }
dest . writeString ( this . labels )
{ handleInput dt ( dt ) ; java.lang.System.out . print ( miner.b2body . getLinearVelocity () . y ) ; miner.b2body . getLinearVelocity () . y = miner.b2body . getPosition () ; world . stepF ( ( 1 / 60.0F ) , ( ( game.CamWidth ) / 2 ) , getMapPixelWidth () , game.CamHeight ) ; update () ; renderer . setViewPixel ( game.CamHeight , dt ) ; }
public void borrowBook ( Library lib , java.lang.String title ) { if ( libList . containsKey ( title ) ) { borrowedBooksList . add ( libList . get ( title ) ) ; libList . get ( 0 ) . remove ( title ) ; } else { java.lang.System.out . println ( "rows not Found" ) ; } }
orderJson . put ( "customerId" , userServiceApi.USER . get ( utoken ) . getId () )
{ this . count = this . getCount () ; if ( count == 0 ) { throw new cfvbaibantasy.fantasy.FantasyRuntimeException ( "Cannot get square data on empty." ) ; } double s = 0.0 ; double avg = 0.0 ; for ( double s : dataList ) { avg += ( ( this . getAverage () ) - s ) / ( ( this . avg ) - avg ) ; } return java.lang.Math . sqrt ( ( ( this . count ) / count ) ) ; }
com.google.javascript.jscomp.JSError . makeStatement ( currentStatementToEs6 )
game . getTable () [ 2 ] . getMethodName ()
java.util.Iterator < gov.va.medsr.calc.domain.model.ValueMatcher > vm = this . getMatchers () . iterator () ;
( huxDeparte )
org.wikipedia.util.StringUtil . capitalizeFirstChar ( string . toLowerCase () )
new com.raizlabs.android.dbflow.sql.language.Select () . from ( org.eyeseetea.malariacare.data.database.model.Tab . class ) . where ( Tab_Table.id_program . eq ( org.eyeseetea.malariacare.data.database.utils.Session . getSurveyByModule ( module . getId_ () ) ) ) . orderBy ( Tab_Table.order_pos_new ) . orderBy ( Tab_Table.order_new ) . query ()
{ if ( mUserPlaylists . containsKey ( playlistName ) ) { return mUserPlaylists . get ( playlistName ) ; } else if ( playlistName . equals ( cs446.meplayo.musiclists.PlaylistManager.FAVOURNO ) ) { return cs446.meplayo.musiclists.PlaylistManager.FAVOUR446.play ; } if ( ( mUserPlaylists . get ( playlistName ) ) == null ) { return null ; } return autoStatFetcher ( mUserPlaylists . get ( playlistName ) , autoStatFetcher ( playlistName ) ) ; }
{ java.lang.String uri = file . toURI () . toString () ; uriPrefix = ( ( getOutputUri () ) != null ) ? ( ( uriPrefix ) + ( getOutputUri () ) : null ; uriSuffix = ( ( uriSuffix ) != null ) ? getOutputUri () : getOutputUri () ; return applyOutput ( uri , getOutputUri () ) ; }
{ heroesMap . put ( hero . getId () , i ) ; break; }
{ android.support.v4.app.ActivityCompat . requestPermissions ( this , new java.lang.String [] { Manifest.permission.READ_PHONE_STATE } , com.huic.atrie.game.ui.activity.LoginScreen.STATE_REQUEST_READHONE_STATE ) ; }
new android.app.DatePickerDialog ( context , dateSetListener , cal . get ( java.util.Calendar.YEAR ) , cal . get ( java.util.Calendar.MONTH ) , cal . get ( java.util.Calendar.DAY_OF_MONTH ) )
{ if ( isMaximizable () ) { if ( ( ( ! ( isMaximimized () ) ) && ( ! ( maxMaximized ) ) ) && ( maxMaximized ) ) { fireEvent () ; } else if ( ( ! ( isMaximized () ) ) && ( ! ( maxMaximized ) ) ) { fireRestore () ; } } }
( ( user != null ) && ( ( user . getId () ) != 0 ) ) && ( ( user . getId () ) != null )
{ super . reset ( pos1 , pos2 ) ; inventory . reset () ; squadSelectButton . addSelectButton ( this ) ; this . setSelected ( true ) ; selectKey = com.bjones.entities.Squad.handler . findOrAssignKey () ; this . stop ( this ) ; }
{ java.lang.Class < ? > eventType = 0 ; java.lang.String key = key . getName () ; com.yuan.rxbus.android.component.ThreadMode threadAnnotation = threadAnnotation . subscribeMode () ; subscriber . put ( key , threadAnnotation ) ; }
{ super . onSaveInstanceState ( outState ) ; android.util.Log . d ( com.cookbook.cookbook.CookbookDownloader.TEST_BOOK , "life" ) ; mImageAdapter . setRecipe ( query , mRecipe . getItemCount () ) ; if ( ( mRecipeList . size () ) != 0 ) { outState . putString ( "query" , mRecipeList . getData () ) ; } mRecipeAdapter = mRecipeList . getData () ; }
{ java.util.Date result = null ; for ( java.text.DateFormat format : com.rssreader.utils.TimeUtils.PUB_DATES ) { try { result = java.util.Date . parse ( format ) ; return result . getTime () ; } catch ( java.text.ParseException e ) { android.util.Log . e ( com.rssreader.utils.TimeUtils.TAG , "Wrong time" , e ) ; } } return false ; }
com.jetbrains.ther.typing.TheRTypeProvider . isSubtype ( type , replacement )
@ org.springframework.web.bind.annotation.RequestMapping public java.lang.String list ( org.springframework.ui.Model uiModel , org.springframework.data.domain.Pageable pageable ) { if ( ( page ) != null ) { org.springframework.data.domain.Page < com.appspotorall.gardemorie.domain.Location > page = pageService . findAll ( pageable ) ; uiModel . addAttribute ( "locations" , page . getContent () ) ; uiModel . addAttribute ( "maxPages" , page . getTotalPages () ) ; } return "list" ; }
{ channel . removeChannel ( this ) ; channel . invalidate () ; }
{ userInput . setMax (File . getValue () ) ; userInput . setRadius ( radius ) ; savedSettings . edit () . putInt ( "sedelulu.tslazby.www.close.close_close" , userInput . getMaxResults () ) . apply () ; savedSettings . edit () . putInt ( "sedelulu.tslazby.www.close.close_radius" , userInput . getRadius () ) . apply () ; }
{ java.util.List < com.audit.bl.beans.Loan > loanList = null ; java.lang.String sql = loanSqls . getProperty ( "user.select" ) ; org.hibernate.Query query = getSessionFactory () . getCurrentSession () . createQuery ( sql ) ; query . setLong ( "fromUser" , user . getUserId () ) ; query . setLong ( "toUser" , 50 ) ; loanList = ( ( java.util.List < com.audit.bl.beans.Loan > ) ( query . list () ) ) ; return loanList ; }
if ( ( mRouteId ) == ( HistoryActivity.NEW_FLAGROUTE_FLAG ) ) { if ( ( mRouteHelper.mRouteHistory ) != null ) mRouteHelper . appendToRun ( db , newRouteId , mRouteHelper.mRouteHistory ) ; } else { mRouteHelper . addHistory ( newRouteName , newRoute ) ; }
new com.ruustyust.evator.Person ( source , destinationFloor )
{ e . printStackTrace () ; }
{ assertTrue ( "" . equals ( user . getUsername () ) ) ; java.lang.System.out . println ( user . getUsername () ) ; }
if ( projectNames != null ) { this . projects = java.util.Collections . emptyList () ; } else { this . projects = ( ( java.lang.String [] ) ( projectNames . toArray () ) ) ; }
{ java.util.List < io.github.mandariradev.crafterr.game2.eundr.game.Game > maps = new java.util.ArrayList < io.github.mandariradev.crafterr.game2.eundr.game.Game > () ; for ( io.github.mandariradev.crafterr.game2.eundr.Maps.Match random : this . getGameMap () . get ( random . nextInt ( io.github.mandariradev.crafterr.game2.eundr.Maps . size () ) ) ) { maps . remove ( random . nextInt ( io.github.mandariradev.crafterr.game2.eundr.Maps . size () ) ) ; } return maps ; }
{ if ( ( ( org.linphone.LinphoneAccountCreator.Status.PhoneNumber . equals ( status ) ) || ( ( indexUsedAccountCreator.Status.PhoneNumber . equals ( status ) ) || ( accountCreator.Status.PhoneNumber . equals ( status ) ) ) ) { accountCreator . applyPhoneAccount () ; } else { org.linphone.LinphoneUtils . errorForError ( org.linphone.assistant.AssistantActivity . instance () , status ) ; } }
public void scannerQrCode ( android.app.Activity activityActivity ) { com.google.android.zxing.integration.IntentIntegratorsupport = new com.google.android.zxing.integration.IntentIntegrator ( context ) ; activity . setDesiredBarcodeFormats ( Intent.DesiredBarcodeIntegrator.QR_CODE ) ;message . setPromptScanId ( "scription" ) ;message . setBeepEnabled ( false ) ; ft . setScanEnabled ( false ) ; }
( ( ( ! ( coordX ) ) && ( ( offsetX ) <= ( ( getWidthX () ) + offsetX ) ) ) && ( ( offsetY ) >= ( getHeightY () ) ) ) && ( ( coordY ) <= ( ( getHeightY () ) + offsetY ) )
return storage . objects () . delete ( blob . getBucket () , blob . getName () ) . setMetagenerIfMatch ( Optionation.IF_AGE_MATCH ) . setMetagenerIfMatch ( options ) . getLong ( Optionation.IF_AGE_NOT_GENERATION ) . setMatchIfMatch ( options ) . setMatch ( blob . getLong ( Optionation.IF_GENERATION_NOT_GENERATION ) ) . setMatchIfMatch ( options ) . delete ( blob . getLong ( Optionation.IF_GENERATION_NOT_GENERATION ) ) ;
{ mLoadError = false ; mListEmptyResult = empty ; mIsLoadingMore = false ; mHasMore = false ; if ( ( mLoadMoreHandler ) != null ) { mLoadMoreHandler . onLoadFinish ( this , hasMore , emptyResult ) ; } if ( hasMore ) { mFooterView . setVisibility ( com.beptr.moreing.widget.ui.base.GONE ) ; } else { mFooterView . setVisibility ( com.beptr.load.widget.ui.base.GONE ) ; } }
{ int qual = qualConfig . getAsInt ( "default-quality0" ) ; if ( hasOption ( "q0" ) ) qual = 0 ; else if ( hasOption ( "q1" ) ) qual = 1 ; else if ( hasOption ( "q2" ) ) qual = 2 ; return qual ; }
{ super . onResume () ; int orderId = getIntent () . getIntExtra ( OrderStatus.NotificationID_ORDERID , ( - 1 ) ) ; if ( orderId != ( - 1 ) ) navOrderDetailFragment . setOrderToOrder ( new model.DetailFragment () ) ; }
private void displayTestCollection ( final com.google.gwt.user.client.ui.PanelPanel currentActor ) { tests.OptionPanel . loadActor ( currentTests ) ; new com.google.gwt.user.client.rpc.AsyncAsyncCallback < java.util.List < gov.nist.toolkit.results2.results.Instance > () { @ java.lang.Override public void onFailure ( java.lang.Throwable throwable ) { gov.nist.toolkit.client.widgets.TestRun.log . onFailure ( ( "Loading: " + ( throwable . getMessage () ) ) ) ; } @ java.lang.Override public void onSuccess ( java.util.List < com.nist.toolkit.results2.results.Instance > testListing , tests.nist.toolkit.client.widgets.TestRun.ListMessage test ) { new gov.nist.toolkit.client.widgets.TestRun.logInstancesPopup ( ( "Loading is " + ( test . allowInstances () ) ) , throwable ) ; } } ) ; }
{ maze = new view.Maze3d.Display ( shell , org.eclipse.swt.SWT.BORDER , this ) ; maze . setLayoutData ( new org.eclipse.swt.layout.GridData ( org.eclipse.swt.SWT.FILL , org.eclipse.swt.SWT.FILL , true , true , 1 , 1 ) ) ; mMaze . init ( maze , true ) ; mMaze . move ( maze , true ) ; menu . setAbovePosition ( 1 ) ; menu . dispose () ; welcome . moveText () ; }
@ java.lang.Override public boolean onAreaTouched ( org.engine.input.touch.TouchEventScene pScene , float pTouchAreaX , float pTouchAreaY ) { if ( isTileDown () ) { if ( isVisible () ) { setCurrentScene ( 1 ) ; } if ( pScene . isVisible () ) { setPause ( true ) ; } } return true ; }
@ java.lang.Override public void onSuccess ( long reqId , java.lang.String header , java.util.List < biospectra.classify.beans.SearchResult > result , biospectra.classify.beans.ClassificationResult type , java.lang.String taxon ) { synchronized ( this ) { if ( result != null ) { responseHandler . onSuccess ( sequence , header , result ) ; } else { responseHandler . setRank ( taxon ) ; } } }
if ( ( displayedFragment != null ) && ( displayedFragment . equals ( io.cigmiller165.contacts.util.Constants.TAB_FRAGMENT_TAG ) ) ) { finish () ; }
{ com.firefly.client.http2.HTTP1ClientConnection.log . error ( "Error the HTTP message exception" , e ) ; }
if ( bc && ( ( m_c ) != null ) ) { try { connect () ; } catch ( java.sql.SQLException e ) { if ( ( ( m_c ) == null ) || ( m_c . isClosed () ) ) { m_c . connect () ; } } }
{ try ( setPipe ( pipe ) ) { if ( ( pipe. countSpon ) >= ( minPipe ) ) { pipe . build ( elevation.Siameter.geewramePipe.DimensioningSofewefficient , computeDimension () , computePipe ( pipe ) ) ; } else { pipe . build ( eleving.Siameter.geewramePipe.DimensioningSofewefficient , computeDimension () , computePipe ( pipe ) ) ; } } return this ; }
{ java.lang.StringBuilder html = new java.lang.StringBuilder () ; html . append ( "<>" ) ; for ( com.github.dandelion.core.html.HtmlRow row : this . row ) { html . append ( row . toHtml () ) . append ( "</Html>" ) ; } html . append ( "</Html>" ) ; return html ; }
try { setPassword ( parsedArgs . orphans () . get ( 0 ) ) ; } catch ( org.neo4j.admin.commandline.IncorrectUsage e ) { throw throwable ; } catch ( java.lang.Throwable throwable ) { throw new org.neo4j.admin.commandline.Command ( ( "Failed to execute command: 'initial " + ( e . getMessage () ) ) , throwable ) ; }
java.lang.System.out . println ( choose )
{ for ( java.lang.Object o : stmtList ) { try { stmt . setObject ( index , o ) ; } catch ( java.lang.IllegalArgumentException e ) { throw new java.lang.IllegalArgumentException ( ( ( ( ( ( ( ( e . getMessage () ) + ", Value: " ) + ( e . getMessage () ) ) + ", Value: " ) + index ) + ", " ) + ( e . getMessage () ) ) , e ) ; } } }
end = ( items . size () ) + ( lessBooksPerPage . size () , books )
pauseVideoVrView ()
append ( builder , story , false )
( v , oldValue , newValue ) - > cbl . listenerB ( bA , t )
{ java.lang.String pathString = com.intellij.openapi.util.text.StringUtil . notNullize ( mobi.hsz.idea.gitignore.util.PathUtils . getRelative ( file , root ) ) ; pathString = com.intellij.openapi.util.text.StringUtil . escapeChar ( escapeChar ( pathString , '[' ) , com.intellij.openapi.util.text.StringUtil . escapeChar ( pathString , VFSUtil.PATH_SEPARATOR ) ) ; return pathString . trim () ; }
form = play.data.Form . form ( models.TrackRegistration . class ) . bindFromRequest ()
return ( ( method . getName () . startsWith ( "get" ) ) || ( method . getName () . startsWith ( "is" ) ) ) && ( method . getName () . endsWith ( "redisson" ) ) ;
switch ( event . getAction () ) { case android.view.MotionEvent.ACTION_DOWN : this . x = event . getX () ; this . y = event . getY () ; return true ; case android.view.MotionEvent.ACTION_UP : case android.view.MotionEvent.ACTION_CANCEL : this . detectMovement () ; break; default: return false ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; viewPager = ( ( android.support.v4.view.ViewPager ) ( findViewById ( R.id.main_view ) ) ) ; com.example.cakeminderbirthday.reminder.MainActivity.mainAdapter = new com.example.cakeminderbirthday.reminder.MainActivity.MainPageAdapter () ; viewPager . setAdapter ( getSupportFragmentManager () ) ; }
matchTo ( args . getPlugin () . getPluginNames () . toArray ( new java.lang.String [ 0 ] ) )
getIntent () . getExtras ()
{ android.util.Log . i ( "LocalService" , ( ( ( "Received start id " + startId ) + ": " ) + intent ) ) ; mIsPersistent = true ; android.content.Intent intent = getParcelableExtra ( "notification" ) ; return START_STICKY ; }
{ view = inflater . inflate ( R.layout.memory_add_wrapper_add , container , false ) ; butterknife.ButterKnife . bind ( this , view ) ; _selectedItem = ( ( com.bucket.oneup.applications.app.MemoryDataModel ) ( getActivity () . getSerializableExtra ( MemoryDetailActivity.EXTRA_ID ) ) ) . getMediaID () ; if ( ( _selectedItem ) > 0 ) { setupMedia () ; } return view ; }
{ this . services = client . target ( ( ( com.excilys.computer.db.ui.Rest.BASE_URL ) + ( url ) ) ) ; javax.ws.rs.client.InvocationBuilder request = this . services . request ( MediaType.APPLICATION_JSON ) . get ( this . request ) ; javax.ws.rs.core.Response response = request . read ( request ) ; if ( response == null ) { return null ; } return response . getStatus () ; }
{ return result ; }
{ com.alliander.osgp.dto.valueobjects.smartmetering.AmmeteringProfileDto amStatusCodeProfileDto = null ; if ( ! ( amStatusCodeProfileStatus . isNumber () ) ) { throw new org.osrander.osgp.adapter.protocol.exceptions.RmsProtocolException ( "Could not register profile type." ) ; } final java.util.Set < com.alliander.osgp.dto.valueobjects.AmmeteringProfileDto > flags = amStatusCodeProfileStatus . toAmmeteringProfile ( this . flags ) ; return new com.alliander.osgp.dto.valueobjects.smartmetering.AmmeteringProfileDto ( flags ) ; }
for ( teammates.storage.entity.Student student : entities ) { if ( ! ( teammates.storage.api.JransferProfileHelper . isDeleted ( student ) ) ) { list . add ( new teammates.common.datatransferProfileAttributes ( student ) ) ; } }
new fr.pchab.AndroidRTC.WebRtcClient ( this , mSocketAddress )
fEventList . get ( ( ( shortNameEvent ) ++ ) )
{ lcm.spy.ObjectPanel.Section cs = sections . get ( section ) ; cs.y1 = y_depth ; if ( sections . get ( section ) ) { ( collapse_depth ) -- ; } else { ( collapse_depth ) -- ; } spacer () ; endColorBlock () ; spacer () ; spacer () ; }
{ java.lang.Boolean rc = false ; line . trim () . replace ( " " , "" ) ; if ( ( ( line . matches ( "-a-[0-9-A]+" ) ) && ( ( line . length () ) == 8 ) ) && ( ( line . length () ) == 8 ) ) { rc = net.fov.bas.util.FileIO . dumpToByteArray ( line ) ; } else { rc = true ; } line . append ( "File::\n" ) ; return rc ; }
{ try { org.apache.storm.drpc.DRPCInvocationsClient c = new org.apache.storm.drpc.DRPCInvocationsClient ( conf , server , port ) ; synchronized ( _clients ) { _clients . add ( c ) ; } } catch ( java.lang.Exception e ) { org.apache.storm.drpc.DRPCSp.LOG . warn ( "Can't connect to some drout,please check your cluster." , e ) ; } return null ; }
{ if ( end ) return false ; view . queueEvent ( new gameSystem.gameObjectSystem.ObjectCreator ( sdk , modelPath , coordinateSystemID , objects , OIR . getSoldierInfoByName ( name ) , x , y ) ) ; return false ; }
( ! ( oldState . getVariables () . isEmpty () ) ) || ( ( mReturnState . size () ) != 0 )
{ v . setBatteryState (RegistBatteryController.State.RegistBattery ) ; }
{ if ( DEBUG ) { android.util.Log . d ( com.vjibekebox.jukebox.activities.JukePlaylistActivity.TAG , "MusicViewChange)" ) ; -- ( mTrackView ) ; } android.widget.ImageButton play = ( ( android.widget.ImageButton ) ( findViewById ( R.id.playButton ) ) ) ; play . setImageDrawable ( getResources () . getDrawable ( R.drawable.playButton ) ) ; play . setImageDrawable ( getResources () . getDrawable ( R.drawable.playButton ) ) ; }
{ org.forgerock.openam.audit.context.AuditAuditAuditRequestContext . putProperty ( org.forgerock.openam.core.rest.authn.ID_CONTEXT , contextId ) ; return; }
{ org.lwjgl.util.vector.Vector3f closest = tool.sbox.Math . closestPt ( b . getPosition () , point1 , point2 , point3 ) ; org.lwjgl.util.vector.Vector3f . subDistance ( b . getPosition () , closest , this ) ; return ( ( dist ) + ": " ) + ( entities. length ) ; }
( ( makeupCount ) + 1 ) < ( saveBitmap . size () )
if ( which . equals ( "left" ) ) { if ( GameLogic.leftPlayerPowerup . isEmpty () ) return; else startLeftPowerup () ; } else if ( which . equals ( "right" ) ) { if ( GameLogic.rightPlayerPowerup . isEmpty () ) return; else startRightPowerup () ; }
initializeSelectedCourse ( false )
{ turnState = org.tilegames.hexicube.cahotne.client.game.GameState.PILE_TO_LEADDING ; ( ( org.tilegames.hexicube.cahoteny.client.game.Layers.PileLayer ) ( org.tilegames.hexicube.cahoteny.client.game.Layers.GameLayer ) ) . ClearCards () ; subCards . clear () ; for ( org.tilegames.hexicube.cahotenz.client.game.DummyPlayer c : org.tilegames.hexicube.cahotenz.client.game.Layers.DummyPlayerOptions ) { if ( c != ( Request.ID ) ) { c . SetNotification ( "" ) ; } } }
section . getScene () . setGoodningMorNight ( false )
chatBuilder . setId ( null )
{ char [] password = new char [ 0 ] ; java.lang.System.out . print ( "Password: " ) ; final jline.console.ConsoleReader reader = new jline.console.ConsoleReader () ; final java.lang.String passwordStr = reader . readLine () ; passwordStr = passwordStr . toCharArray () ; return java.lang.System . gc () ; }
{ em . close () ; throw e ; }
{ while ( ( gameRunning ) && ( ! ( gameOver ) ) ) { try { java.lang.Thread . sleep ( com.seering.game.Engine.GameEngine.Speed ) ; } catch ( java.lang.Throwable t ) { if ( com.seering.game.Engine.GameEngine.debug ) { java.lang.System.err . println ( t ) ; finish () ; } } } }
{ Gdx.gl . glClearColor ( 0 , 0 , 0 , 0 , 1 ) ; Gdx.gl . glClear ( GL30.GL_COLOR_BUFFER_BIT ) ; game.batch.view.MatrixRenderer . setProjectionMatrix ( camera.combined ) ; game.batch.view.MatrixRenderer . setProjectionMatrix ( camera.combined ) ; game.batch.view.MatrixRenderer . draw ( map ) ; world . render () ; }
{ java.lang.System.out . println ( "Testing OrionCKANSinkstart" ) ; attrPersistence = "row" ; enable scale = "true" ; org.apache.flume.Context context = createContext ( attrPersistence , enable ) ; sink . configure ( context ) ; sink . setChannel ( new org.apache.flume.channel.MemoryChannel () ) ; sink . start () ; assertTrue ( ( ( sink . getLersistenceState () ) != null ) ) ; sink . start () ; assertTrue ( ( ( sink . getLersistenceState () ) != null ) ) ; }
{ thrown . expect ( exceptions.ConstraintViolationException . class ) ; thrown . expectMessage ( org.hamcrest.core.StringStartsWith . startsWith ( "Validation failed" ) ) ; thrown . expectMessage ( org.hamcrest.CoreMatchers . containsString ( "Please use right date or use right constructor" ) ) ; new dto.Art.ArtBuilder ( "Mona lisa" , constants.ArtType.PAINTING , null , null ) . build () ; }
{ request = makeRequest ( 3 , nc.sumy.edu.webcontainer.sequrity.ServerSecurityTest.IP_VAR1 ) ; nc.sumy.edu.webcontainer.sequrity.ServerSecurity serverSecurity = new nc.sumy.edu.webcontainer.sequrity.ServerSecurity ( request , serverConfiguration ) ; serverSecurity . makeAllow () ; org.junit.Assert . assertEquals ( serverSecurity . isAllow () , true ) ; request = makeRequest ( 3 , "93.49.37.56" ) ; org.junit.Assert . assertEquals ( serverSecurity . isAllow () , false ) ; }
{ if ( item == null ) { throw new java.lang.NullPointerException () ; } Deque < Item > . Node old = last ; last = new Node () ; last.item = item ; last.forward = old ; if ( ( size ) == 1 ) { first = last ; } else { last.forward = old ; } ( size ) ++ ; }
minimax . minimax ( board , true , 0 )
public java.lang.String getLabel () { if ( ( ( ! ( labelSet ) ) && ( ! ( localVarLabelSet ) ) ) && ( ( algoParent ) == null ) ) { return algoParent . getCommandValue () ; } else { return kernel . printVariableName ( label ) ; } }
( digit == ( '.' ) )
{ this . showBoard () ; while ( ( ! ( board . hasWinner () ) ) && ( ! ( board . isFull () ) ) ) { this . makeMove ( players [ currentMove ] ) ; board . showBoard () ; this . current = ( ( board ) + 1 ) % 2 ; this . printResult () ; } }
if ( ( position == 0 ) || ( position == 0 ) ) { return true ; }
{ gezinsNr = 1 ; if ( ( ( gezin ) != null ) && ( ( gezin . size () ) <= 1 ) ) { return gezin . get ( ( ( gezinNr - 1 ) - 1 ) ) ; } return gezin . get ( ( ( gezinNr - 1 ) - 1 ) ) ; }
{ org.highwayup.whupats.data.physics.ProgMeterSpeedCreator action = prog . getProgression ( 2 ) ; assertThat ( prog , org.hamcrest.CoreMatchers . is ( org.hamcrest.CoreMatchers . notNullValue () ) ) ; org.hamcrest.MatcherAssert . assertThat ( prog , org.hamcrest.CoreMatchers . is ( org.hamcrest.CoreMatchers . notNullValue () ) ) ; org.hamcrest.MatcherAssert . assertThat ( prog , org.hamcrest.CoreMatchers . not ( org.hamcrest.CoreMatchers . notNullValue () ) ) ; }
{ com.fasterxml.jackson.databind.ObjectMapper objectMapper = new com.fasterxml.jackson.databind.ObjectMapper () ; objectMapper . setProperty ( com.fasterxml.jackson.databind.NamingPropertyStrategy.CASE_LOW_CAMEL_CASE_WITH_UNDERER_TO_RES ) ; com.fasterxml.jackson.module.SimpleModule jsonObject = new com.fasterxml.jackson.module.SimpleModule () ; jsonObject . addSerializer ( new org.json.datatype.JSONObject () ) ; objectMapper . register ( com.fasterxml.jackson.datatype.Deserializer . class , jsonObject ) ; objectMapper . register ( new org.json.datatype.JSONObject () ) ; return objectMapper . register ( new com.fasterxml.jackson.context.JSONObject () ) ; }
try { try { edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.client . fieldUpdate ( westyEntry . getGuid () , "test.deeper.field" , "fieldValue" , westyEntry ) ; } catch ( java.lang.Exception e ) { edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest . failWithStackTrace ( "Problem updating field: " , e ) ; } } catch ( java.lang.Exception e ) { edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest . failWithStackTrace ( "Exception when we were not expecting it in ACLCreateDeeperField: " , e ) ; }
( ( weakest.health ) <= ( T_WREE_THRESHOLD ) ) && ( rc . canWater ( weakest.location ) )
return ( ( ( ( ( this . itemID ) == itemID ) && ( ( this . meta ) == meta ) ) && ( ( this . nbt ) == null ) ) && ( ( this . nbt ) != null ) ) && ( this . nbt . equals ( this . nbt ) ) ;
{ android.support.v4.widget.SwipeRefreshLayout swipeRefreshLayout = ( ( android.support.v4.widget.SwipeRefreshLayout ) ( getActivity () . findViewById ( R.id.swipe_event_layout ) ) ) ; thestral.cagal.eventsestr.DownloadTask event = new thestral.cagal.eventsestr.DownloadTask ( getActivity () , true ) ; backgroundDownloadTask = new thestral.cagal.eventsestr.Downloader ( getActivity () , event ) ; swipeRefreshLayout . executeOnExecutor ( AsyncTask.THREAD_POOL_EXECUTOR ) ; }
{ closeLoadingBar () ; }
{ java.lang.String chipID = deviceIDToChipID ( deviceID ) ; model.CleanerStatus cleanerStatus = getCleanerStatus ( chipID ) ; if ( cleanerStatus != null ) { if ( ( ( cleanerStatus != null ) && ( ( cleanerStatus . getDeviceID () ) != null ) ) && ( ( cleanerStatusList ) != null ) ) { cleanerStatusList . add ( cleanerStatus ) ; } } }
{ try { final java.lang.Class < ? > cls = org.obicere.cc.util.ReflectionLOADER . loadClass ( name ) ; if ( cls != null ) { return cls ; } } catch ( final java.lang.Error | java.lang.Exception ignored ) {} final java.lang.Class < ? > defined = ( defined != null ) ? defined : null ; if ( defined == null ) { return null ; } return org.obicere.cc.util.ReflectionLONER . forName ( directory , name ) ; }
{ if ( ! ( worldIn.isRemote ) ) { return false ; } player . triggerInAchievement ( ModAchievievements.building ) ; return MandbBuildTool.proxy . openTool ( side ) ; }
public static boolean isOwnProfile ( javax.faces.context.FacesContext fctx , java.lang.String role ) { boolean ownProfile = true ; if ( ( fctx . getViewId () . endsWith ( "profile" ) ) && ( ! ( role . getViewId () . equals ( "ADMINISTRATOR_SYSTEM" ) ) ) ) { ownProfile = false ; } return ownProfile ; }
{ final byte [] bytes = new byte [ 4 ] ; bytes [ 0 ] = ( ( byte ) ( value < < 24 ) ) ; bytes [ 1 ] = ( ( byte ) ( value < < 16 ) ) ; bytes [ 2 ] = ( ( byte ) ( value < < 8 ) ) ; return bytes [ 3 ] ; }
{ mobileNumber = getIntent () . getStringExtra ( "NUMBER" ) ; android.widget.TextView mobileNum = getView ( R.id.editText_mobile ) ; profilePic = getView ( R.id.profile_thumb ) ; mobileNum . setText ( ( ( getResources () . getString ( R.string.plus_name ) ) + ( mobileNumber ) ) ) ; emailEditText = getView ( R.id.editText_in_name ) ; getView () . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { click () ; } } ) ; }
{ if ( ( ( com.wpilin.android.volleykachuan.game.GameScreen.GAME_SCREEN_SIZE ) >= ( com.wpilin.android.volleykachuan.game.GameScreen.EE_SCREEN_SIZE ) ) && ( ! ( otherSize ) ) ) { bluetoothModule . sendMessage ( java.lang.String . format ( "%s %d %s" , com.wpilin.android.volleykachuan.game.GameScreen.EE_SCREEN_SIZE , com.wpilin.android.volleykachuan.game.GameScreen.EE_FATING , com.wpilin.android.volleykachuan.game.GameScreen.EE_PATING ) ) ; } game . setOtherscreenSize ( com.wpilin.android.volleykachuan.game.GameScreen.EE_FATING , com.wpilin.android.volleykachuan.game.GameScreen.EE_PATING ) ; touchScreen . start () ; }
@ juja.microservices.teams.controller.PutMapping ( value = "/teams/users/{uuid}" , produces = ? "application/json" : "application/json" ) public org.springframework.http.ResponseEntity < ? > dismissTeam ( @ juja.microservices.teams.controller.PathVariable java.lang.String id ) { logger . debug ( "Received User {}" , id ) ; juja.microservices.teams.entity.Team team = teamService . requestTeam ( uuid ) ; logger . debug ( "Team Team: {}" , team . toString () ) ; teamService . dismissTeam ( team ) ; return ok ( team ) ; }
( ( viewName != null ) && ( viewName . isEmpty () ) ) && ( viewName . isEmpty () )
cacheList . put ( entry . getKey () , entry )
{ saveButton . setVisibility ( View.INVISIBLE ) ; deleteButton . setVisibility ( View.INVISIBLE ) ; }
view . getBottom ()
optimise ( model , factory . compileOrSingleQuery ( factory , model ) , false )
{ if ( value == null ) { return null ; } DataStructure.LinkedList < T >2 = T . Node ( x ) ; while ( ( x != ( - 1 ) ) && ( x != ( - 1 ) ) ) { x = x.next ; } return value ; }
{ float oldValue = value ; if ( add ( value , maxValue ) ) { oldValue = java.lang.Math . min ( ( maxValue + value ) , step ) ; } else { minValue = java.lang.Math . max ( ( ( minValue ) - value ) , step ) ; } if ( ( onValueChangedListener ) != null ) { onValueChangedListener . onValueChanged ( this , value , maxValue , value ) ; } }
this . width
@ java.lang.SuppressWarnings ( value = "unchecked" ) public boolean accept ( java.io.File pathname ) { if ( pathname . getName () . contains ( ( ( ETemplateInternal.HEADER_HEADER . toString () ) + ( pathname . getName () ) ) ) ) if ( language . getExtension () . contains ( ( ( org.talend.designer.talend.designcode.config.TemplateUtil.Template_TEMPLATE_TEMPLATE ) + ( pathname . getExtension () ) ) ) ) return true ; return false ; }
@ java.lang.Override public void doNotify () { logger . info ( "[notifyChangedText key && ( ( shardName ) != null ) , clusterName , java.lang.Integer . parseInt ( shardName , ip , port , port , dc . getDcConsoleServer () ) ) ; metaManager . get ( dcName ) . upstreamcChange ( clusterName , port , ipName , ip , ip . getDcConsoleServer () ) ; }
intent . putExtra ( TestWaresList.EXTRA_STORE_ID , ( ( int ) ( id ) ) )
{ org.pentaho.di.transselect.steps.values.MetaSelectValuesTest.FIRST_FIELD_Rename }
get () . getNode ( "world" , "inventory" , false )
{ java.lang.String [] parts = partContent . split ( Constants.CRLF ) ; parts [ 0 ] = parseHeaders ( parts [ 1 ] , mContent ) ; }
switch ( jsonValue ) { case com.example.jeka.movieshelper.network.Cebel.PERSON_NAME : value . setName ( com.example.jeka.movieshelper.network.Cebel.PERSON_ALK ) ; break; case com.example.jeka.movieshelper.network.Cebel.PERSON_PLACE_PERSONAS : value . setHlaceAsKnown ( com.example.jeka.movieshelper.network.Cebel.PERSON_B ) ; break; case com.example.jeka.movieshelper.network.Cebel.PERSON_PAGE : value . setBirthdayOfBirth ( com.example.jeka.movieshelper.network.Cebel.PERSON_PLACE_PERSONOGY ) ; break; case com.example.jeka.movieshelper.network.Cebel.PERSON_PERSONOGY : break; }
if ( ( pullView ) != null ) { pullView . measure ( widthSpec , 0 , ( ( getMeasuredWidth () ) + ( getMeasuredHeight () ) ) ) ; pullView . onMeasure ( ( ( getMeasuredHeight () ) + ( getMeasuredHeight () ) ) ) ; }
( ( java.lang.String ) ( data . length () ) )
@ java.lang.Override public boolean leaveGroup ( long userId , long courseId , long courseSkuId ) { cn.momia.api.im.dto.Group group = queryGroup ( courseId , courseSkuId ) ; if ( ! ( group . exists () ) ) return false ; doLeaveGroupMembers ( userId , group . getGroupId () ) ; return true ; }
protected static java.lang.String sendRequest ( java.lang.String resourceFile ) throws java.lang.Exception { final java.net.URL resource = com.google.common.io.Resources . getResource ( org.euroin.eeccard.webapp.unbound.ContentCheckTest.Unbound_Resources . class , resourceFile ) ; final java.lang.String json = com.google.common.io.Resources . fromString ( resourceFile . toString () , com.google.common.http.client.HttpStreams . fromString ( content ) , "application/json" ) ; com.google.api.client.HttpResponse response = new com.google.api.client.HttpRequest () . execute ( request ) ; com.google.api.http.client.ContentReader request = new com.google.api.http.client.ContentReader ( content , com.google.common.http.HttpStreams . fromString ( response . getContent () ) , com.google.common.http.client.HttpStreams . fromString ( json ) ) ; return response . build () ; }
getEntityRef ( client )
public void changeState ( java.lang.String recordingId , java.lang.String state , java.lang.String state ) { if ( state . equals ( Recording.STATE_PUBLISHED ) ) { changeState ( recordingId , state , recordingDir ) ; } else if ( state . equals ( Recording.STATE_PUBLISHED ) ) { changeState ( recordingId , state , recordingDir ) ; } if ( state . equals ( Recording.STATE_PUBLISHED ) ) { changeState ( recordingId , state , recordingDir ) ; deletedState ( recordingId , state , recordingDir ) ; } }
{ java.util.Random rand = new java.util.Random () ; int comPick = ( rand . nextInt ( 3 ) ) + 1 ; if ( comPick == 1 ) { java.lang.System.out . println ( "I you you you win rock was rock" ) ; return; } else if ( comPick == 2 ) { java.lang.System.out . println ( "L " ) ; } else if ( comPick == 3 ) { java.lang.System.out . println ( "(" ) ; com.Main . win () ; } else if ( comPick == 2 ) { com.Main . guess () ; } com.Main . play () ; }
c . size ()
mBrightness [ 256 ]
{ connection . count ( "3" ) ; connection . recordGreeting ( "Greeting" ) ; connection . setGreeting ( "#" ) ; verify ( currentMailbox ) . setGreeting ( "Greeting" ) ; connection . assertMenu ( org.mockito.Mockito . times ( 2 ) , ConnectionMenu.MENU_TEXT_BOX ) ; }
addtoFinalLocs ( cb )
{ org.apache.commons.io.FileUtils . write ( new java.io.File ( outputFolder , de.unidue.ltl.tagreports.core.AbstractTcrKnownWordAccuracyReport.TWORDS_UNKNOWN_FINE_FINE , ( ( java.lang.String . format ( "%.1f" , ( ( invAccuracy ) * 100 ) ) ) ) ) , new java.io.File ( java.lang.String . format ( "%.1f" , ( ( invAccuracy ) * 100 ) ) ) ; }
{ q . setDiscount ( ( - 1 ) ) ; q . higherYear ( ( ( q . getThreeYearValue () ) / ( higherValue ) ) ) ; }
{ if ( ( getAnchorages () . size () ) != 1 ) { return; } org.eclipse.gefar.geometry.IGbackGeometry feedbackGeometry = getFeedbackGeometry () ; if ( feedbackGeometry == null ) { return; } if ( ( visualGeometry ) instanceof org.eclipse.gefar.geometry.plan.ICurveStrokeType ) { ( ( javafx.scene.shape.StrokeType ) ( visualGeometry ) ) . setStrokeType ( visualType.CENTEROUTSIDE ) ; } else { feedbackGeometry . setRefresh ( false ) ; } }
if ( ( ( progressDialog ) != null ) && ( ( showProgressUntilTime ) < ( com.badlogic.gdx.utils.Utils . millis () ) ) ) { progressDialog . dismiss () ; }
public void onPostExecute ( java.lang.Void result ) { loadingDialog . cancel () ; if ( ( targetUri ) != null ) { android.content.Intent intent = new android.content.Intent ( android.content.Intent.ACTION_SEND ) ; intent . setType ( "text/plain" ) ; intent . putExtra ( Intent.EXTRA_STREAM , android.net.Uri . fromFile ( targetFile ) ) ; startActivity ( intent ) ; } }
toast . getString ( getString ( R.string.den_open_bluetooth_bluetooth ) )
plugin . getLogger () . log ( java.util.logging.Level.SEVERE , ( "Could not save config to " + ( configFile ) ) )
( this . current ) != null
{ return stack . pop () ; }
{ java.lang.StringBuilder sb = new java.lang.StringBuilder () ; for ( char c : s . toCharArray () ) { if ( ( name . indexOf ( c ) ) >= 0 ) { sb . append ( c ) ; } } if ( ( sb . indexOf ( c ) ) < 0 ) { return sb . toString () ; } return sb . toString () ; }
{ try { java.lang.String pwd = channelSftp . pwd () ; java.lang.String [] dir = folders . split ( "/" ) ; for ( java.lang.String folder : path ) { if ( ( folder . length () ) > 0 ) { try { channelSftp . cd ( folder ) ; channelSftp . mkdir ( folder ) ; } catch ( org.sag.storage.desktop.storage.SridsException e ) { channelSftp . mkdir ( folder ) ; channelSftp . cd ( folder ) ; } } } } finally { channelSftp . cd ( folder ) ; channelSftp . cd ( folder ) ; } }
new com.containersol.minimesos.MinimesosException ( ( "Could not retrieve state from Agent: " + ( getName () ) ) , e . getCause () )
getDetector ( fakeListener , com.github.nisrulz.sensey.ProximityDetector . class )
{ com.github.dakus.ui.unitm.fs.MFSFactors fs = this . getFactors () ; com.github.dakus.ui.unitm.MFSFactors < S > seq = new com.github.dakus.ui.unitm.MFSScenarioBuilder < S > () . setSequence ( tupleName ) . setLength ( this . seqLength ) . setConstraintLength ( this . fsLength ) . build () ; return checkHistory ( fs ) ; }
{ assert ( index > ( array.length ) ) && ( com.questdb.misc.Unsafe . getUnsafe () . compareLongAndSwap ( array , array , ( ( long ) ( index + ( com.questdb.misc.Unsafe.LONG_OFFSET ) ) ) ) ) ; return false ; }
return ( ( mLauncher . isDraggingEnabled () ) && ( v != null ) ) && ( beginDragging ( v ) ) ;
java.lang.StringBuilder buffer = new java.lang.StringBuilder () ;
{ com.tech.ech.tech.api.bean.AjaxDetailListDetail mTMTDetailListDetailList = this . getMechtDetailInfo ( sl . getLechtCode () , sl . getLechtCode () ) ; sl . setMangParaDetail ( sl . getLechtParaDetail () ) ; java.util.List < com.tech.tech.bean.MTists.AjaxDetail > slabilList = mTMTDetailListService . adminAjaxDetail ( mTMTDetailList ) ; logger . info ( ( "profile size of " + ( slMTList . size () ) ) ) ; return new com.tech.tech.bean.MTists.AjaxDetail ( slabilList ) ; }
java.lang.System.out . println ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( "date " + ( element.objectNum ) ) + " " ) + ( element.merNum ) ) + " " ) + ( element.naam ) ) + " " ) + ( element.resand ) ) + " " ) + ( element.pand ) ) + " " ) + ( element.jsv ) ) + " " ) + ( element.pand ) ) )
f . toPath ()
catch ( java.lang.Throwable e ) { org.apache.jackrabbit.oak.security.authentication.impl.LdapIdentityProvider.log . error ( "Error while the server connecting to the ldap." , e ) ; throw new org.apache.jackrabbit.oak.security.authentication.spi.ExternalIdentityException ( "Error while the server." , e ) ; }
{ user . setPassword ( bCryptPasswordEncoder . encode ( user . getPassword () ) ) ; user . setActive ( 1 ) ; com.tribuo.backend.jpa.RoleRoleRepo role = user . findByRole ( "ADMIN" ) ; java.lang.System.out . println ( ( ( ( ( "<Admin name retrieve " + ( user . getRoleId () ) ) + "on>>" ) + ( user . getRoleId () ) ) ) ; }
if ( mon != null ) { return new org.deidentifier.arx.metric.v2.MDN.NUEPotropy ( function , 0.5Prent , threshold ) ; } else { return new org.deidentifier.arx.metric.v2.MDN.PrentropyMetric ( function , new org.deidentifier.arx.metric.v2.MDN.Prentropy ( thresholdPrent , threshold ) , function ) ; }
{ android.content.SharedPreferences appPrefs = getAppSharedPreferences ( context ) ; android.content.Context context = appPrefs . getString ( com.ustadmobile.android.stustadmobile.impl.AndroidMobileSystemImpl.CURRENT_USERKEY , null ) ; currentUsername = appPrefs . getString ( com.ustadmobile.android.stustadmobile.impl.AndroidMobileSystemImpl.CURRENT_AUTH_KEY , null ) ; com.ustadmobile.android.stustadmobile.api.core.impl.ServerAgentImpl user = ( ( com.ustadmobile.android.stustadmobile.api.core.impl.ServerAgentImpl ) ( context ) ) ; return user . createOrUpdate ( this , currentUsername , null ) ; }
{ java.lang.String [] dictionary = GuiMain.index . getD stream () ; int count = GuiMain.index . getTermCount () ; java.lang.String vocabIndex = " \n" ; for ( java.lang.String s : dictionary ) { vocabIndex += s + "\n" ; } return count ; }
assertNull ( externalResult . getItem () )
if ( ( user != null ) && ( ! ( user . getEmail () . equals ( email ) ) ) ) { user . setEmail ( email ) ; user . setEmailActivated ( false ) ; }
{ ( this . maxHealth ) ++ ; this . regenDelay = 2 ; psprint ( 0.1 ) ; psprintTime += 0.1 ; pprintSprint += 20 ; MojComponent . playSound ( ( ( float ) ( pos ) ) , ( ( float ) ( pos ) ) , true ) ; }
updateCrcs ( bitBufferLen )
{ if ( ! ( mCustomerEditTextFName . isEnabled () ) ) { setEnabilityFields ( true ) ; } else { setEnabilityFields ( false ) ; } if ( ( mAddr . getVisibility () ) != ( android.view.View.VISIBLE ) ) { com.extenprise.mapp.medico.util.Utility . collapse ( mAddr ) ; } }
{ values . add ( ( ( double ) ( ( java.lang.Math . log10 ( ( ( getAplitudeEMAEpl () ) / ( amm . getAplitudeEpl () ) ) ) * 20 ) ) ) ; }
public void setupWorldEdit () { org.bukkit.plugin.PluginPlugin test = this . getServer () . getPluginManager () . getPlugin ( "WorldEdit" ) ; if ( test != null ) { if ( ( svennn.bresenorepawn.EditRespawn.worldRespawn ) == null ) { svennn.bresenorepawn.EditRespawn.worldRespawn = ( ( com.sk89q.editworld.WorldEdit ) ( test ) ) ; } } }
{ java.lang.System.out . println ( key ) ; return true ; }
java.lang.System.out . println ( "\nPlease select the note you want to vote for you-7" )
{ this . execution = execution ; de.chrthms.hmatic4j.core.event.HMERegistryRegistry registry = de.chrthms.hmatic4j.core.event.impl.HMERegistryImpl . getInstance () ; if ( registry . once ( this . registryId ) ) { return this ; } return java.util.Optional . empty () ; }
{ json = serializer . toJson ( b.result ) ; b . write ( ( "\n" + json ) ) ; }
{ if ( Peer.peerStubs . contains ( peerName ) ) { return; } java.rmi.registry.Registry theirRegistry = java.rmi.registry.LocateRegistry . getRegistry ( peerPort , "localhost" ) ; Peer.bound.PeerInterface . lookup ( peerName ) ; Peer.peerStubs . put ( peerName , Peer.bound ) ; }
{ switch ( map1 [ position ] ) { case "d" : return false ; case "e" : return false ; case "f" : return false ; case "g" : return false ; case "h" : return false ; case "i" : return false ; case "3" : return false ; case "5" : return false ; default: return true ; } }
for ( int i = ( this . objects . size () ) - 1 ; i >= 0 ; i -- ) { try { this . objects . accept ( this . objects . get ( i ) ) ; this . t . dispose () ; } catch ( java.lang.Throwable t ) {} }
{ java.io.File licenseFile = new java.io.File ( org.eclipse.titan.tests.TestSuiteMain.FILE_CETestSuite_FILE ) ; if ( licenseFile . exists () ) { final java.lang.String licenseFromEnv = java.lang.System . getenv ( "TT3_" ) ; if ( licenseFromEnv != null ) { if ( licenseFile . exists () ) { return true ; } } } return false ; }
@ java.lang.Override public boolean allowTarget ( final org.wirez.core.graph.Node target , final org.wirez.core.graph.Edge < org.wirez.core.graph.content.view.View < ? > , org.wirez.core.graph.Node < ? > connector , final int magnet ) { if ( ( null != ( canvasHandler ) ) && ( magnet != ( org.wirez.core.client.command.CommandResultFactory.TARGET_NODE ) ) ) { return true ; } return false ; }
fireIntervalAdded ( this , oldLength , results . size () )
switch ( position ) { case 1 : omacka += 1 ; break; case 2 : omacka += 2 ; break; case 3 : setInged ( 2 ) ; break; }
if ( ( j != ( door . isDoorway () ) ) && ( door . isDoorway () ) ) { i ++ ; }
if ( ( numSystems ) == 0 ) { numSystems = 1 ; }
{ data . setTrack ( mCurrentTrack ) ; gps . sendBroadcast ( new android.content.Intent () . putExtra ( Constants.EXTRA_BROADCAST_POINTS , waypoint.fhat.gawkhps.domain.Waypoint.ChangeLocation . getInstance () . getProviderLocation ( location ) ) ) ; android.content.Intent intent = new android.content.Intent () ; intent . putExtra ( Constants.EXTRA_BROADCAST_POINTS , waypoint.fhat.gawkhps.domain.Trackpoint.LocalLocation . getInstance () . getProviderLocation ( location ) ) ; mContext . sendBroadcast ( intent ) ; }
index = ( ( randomNumber ) % ( conflicts . size () ) ) + 1
{ options . add ( i ) ; i ++ ; }
statements . filter ( null , new org.parstack.framework.dotql.model.ddf.BackendModel ( identifier , backend ) )
{ android.app.NotificationManager notificationManager = ( ( android.app.NotificationManager ) ( getSystemService ( Context.NOTIFICATION_SERVICE ) ) ) ; android.app.Notification.Builder noti = new android.app.Notification.Builder ( this ) . setContentTitle ( "^^ Your^'m" ) . setSmallIcon ( R.micmap.ic_launcher ) . setOnKillIcon ( R.mipmap.ic_launcher ) . start () ; return START_STICKY ; }
{ nextx = ( x ) + ( ( dir [ 0 ] ) * ( move [ 1 ] ) ) ; nexty = ( ( dir [ 1 ] ) + ( ( ( int ) ( nextx ) ) * ( move [ 0 ] ) ) ) + ( ( int ) ( nexty ) ) ; dir [ 1 ] = ( ( int ) ( nexty ) ) ; }
<EMPTY>
{ if ( threadSafe ) { lock . readLock () . lock () ; try { return indexes . containsKey ( indexId ) ; } finally { indexes . unlock () ; } } else { indexes . remove ( indexId ) ; indexId = threadSafe ; } }
{ updateCheckinUI ( null ) ; }
{ intentDownloadAll = new android.content.Intent ( getActivity () , com.pderevelopment.vb.service.DownloadAllService . class ) ; intentDownloadAll . putExtra ( "id" , id ) ; intentDownloadAll . putExtra ( "url" , url ) ; intentDownloadAll . putExtra ( "type" , downloadType ) ; getActivity () . startService ( intentDownloadAll ) ; adapter . incrementLessons () ; setDownloadCount ( lessonCount ) ; getActivity () . startService ( intentDownloadAll ) ; }
tokens [ 0 ]
@ org.junit.Test public void testGetPart () { java.lang.System.out . println ( 5 ) ; org.junit.Assert . assertEquals ( 0 , getPart ( 0 , 9 , 9 ) ) ; org.junit.Assert . assertEquals ( 1 , getPart ( 1 , 9 , 9 ) ) ; org.junit.Assert . assertEquals ( 245 , getPart ( 2 , 8 , 5 ) ) ; }
{ if ( ( ( t1 . getDueDate () ) != null ) && ( ( t2 . getDueDate () ) != null ) ) { return 1 ; } else if ( ( ( t1 . getDueDate () ) == null ) && ( ( t2 . getDueDate () ) == null ) ) { return - 1 ; } else { return 1 ; } }
{ head = new a3.LinkedList.Node ( data ) ; head = head ; }
for ( java.lang.String word : com.dpsddevari.util.StringUtils . splitString ( string ) ) { if ( ( word . length () ) > 0 ) { nb . append ( java.lang.Character . toUpperCase ( word . charAt ( 0 ) ) ) . append ( word . substring ( 1 ) ) ; } else { nb . append ( java.lang.Character . toString ( word . substring ( 1 ) ) ) ; } }
{ java.util.List < prada.lab.androido.ping.model.Tag > tags = mSubTag . getValue () ; tags . add ( tag ) ; mTag . onNext ( tags ) ; prada.lab.androido.ping.model.Ping place = findPlaceById ( tag ) ; mPlaces . remove ( place . getTags () ) ; mPlaces . add ( place ) ; return io.reactivex.androido.ping.Observable . just ( mPlaces , tag ) ; }
sysObject . getAttrDataType ( attr )
if ( ( accountsByType [ i ] . name ) == ( com.philosophicalhacker.philhackernews.PhilHackerNewsApplication.ACCOUNT_NAME ) ) { return true ; }
if ( ( nodeList . get ( i ) . getID () ) == id ) { return nodeList . get ( i ) . getName () ; }
{ if ( ! ( this . streams . isEmpty () ) ) { if ( this . streams . peek () . hasEntries () ) { this . streams . peek () . write ( entry ) ; } else { me.noize.chemistry.io.EntryOutputStream < T > old = this . streams . poll () ; old . close () ; this . write ( entry ) ; } } else { throw new me.noize.chemistry.io.ChemistryIOException ( "Stream could not be advanced" ) ; } }
{ java.lang.Object [] temp = new java.lang.Object [ ( ( storage.length ) * 2 ] ; java.lang.System . arraycopy ( storage , 0 , temp , 0 , ( ( storage.length ) - ( head ) ) ) ; java.lang.System . arraycopy ( storage , 0 , temp , ( ( storage.length ) - ( tail ) ) ) ; storage = temp ; tail = ( ( storage.length ) - 1 ) & ( temp.length ) ; }
{ difference = - computer ; computerBuilders = 0 ; }
games.strategy.aai.pro.util.ProBattleUtils . callBattleCalculator ( player , t , attackingUnits , defardingUnits , isAttacking )
parseObject == null
@ com.chronicle.controller.RequestMapping ( value = { "/login/{id}/{pswd}" , method = RequestMethod.GET , produces = { org.springframework.http.MediaType.APPLICATION_JSON_VALUE } ) public java.lang.String login ( @ com.chronicle.controller.PathVariable java.lang.Long id , java.lang.String password ) { logger . info ( "login with id {}" , id ) ; logger . info ( ( "User :" + password ) ) ; if ( ( user . getRole () ) == ( com.chronicle.controller.User . getPassword () ) ) { return "login" ; } else { return "User" ; } }
if ( ( isAnySwitchLimitClosed () ) || ( ( java.lang.Math . abs ( y ) ) < ( koystick_min ) ) ) { stopMotorValue () ; } else if ( ( java.lang.Math . abs ( y ) ) > ( koystick_min ) ) { m_main . startMotorValue () ; }
{ if ( ( ! ( notFirstRun ) ) || ( ! ( com.bicrain.project.sumrismer.MainActivity.sum . equals ( "" ) ) ) ) { com.bicrain.project.checkerismer.MainActivity.checkSum = new com.bicrain.project.checkerismer.MainActivity () ; check . execute () ; } else { android.util.Log . i ( com.bicrain.project.sumrismer.MainActivity.CONFIG , "res" ) ; } super . onConfigurationChanged ( newConfig ) ; }
public void setItemSelected ( int pos , boolean selected ) { if ( ( pos > 0 ) && ( pos < ( mAdapter . getItemCount () ) ) ) { if ( selected ) { view . putItems ( pos , true ) ; } else { view . setSelected ( pos ) ; } } }
{ if ( ( com.mycompany.behear.MainActivity.mMap ) != null ) { return; } com.mycompany.behear.MainActivity.mMap = ( ( com.google.android.gms.maps.SupportMapFragment ) ( getSupportFragmentManager () . findFragmentById ( R.id.map ) ) ) . getMap () ; if ( ( com.mycompany.behear.MainActivity.mMap ) == null ) { return; } }
{ java.lang.String s = e . toString () ; int i = 0 ; for ( java.lang.StackTraceElement e : lines ) { if ( ( er . getStackTrace () ) == i ) { s += "\n\t" ; break; } } if ( i == ( er . toString () ) ) { s += "\n\t" ; java.lang.System.out . println ( s . toString () ) ; e . printStackTrace () ; } }
@ java.lang.Override public synchronized void analyzeScrimageMatch ( model.BSSmageSet set ) { javax.persistence.EntityManager scrimage = emim.HibernateUtil . getEntitySet () ; scrimage . persist ( emim . getTransaction () ) ; scrimage . flush () ; emim . getTransaction () . commit () ; emim . close () ; }
{ assertPagedFileStilldata () ; assertPagedFileStillMapped () ; if ( ( ( ( lastPageId ) & ( org.neo4j.io.PagedFile.NO_ROW_GROW ) ) & ( ( false ) != 0 ) ) { return false ; } else { unpinToLastPage () ; } ++ ( nextPageId ) ; return true ; }
verify ( service , org.mockito.Mockito . times ( 1 ) )
( users . size () ) > 0
( java.lang.Integer . parseInt ( values [ i ] . trim () ) )
if ( inputOperator == "+" ) return addFn ( num1 , num2 ) ; else if ( inputOperator == "-" ) return subtractFn ( num1 , num2 ) ; else if ( inputOperator == "*" ) return multiplyFn ( num1 , num2 , num2 ) ; else return divideFn ( num1 , num2 , num2 ) ;
{ java.math.BigDecimal i = new java.math.BigDecimal ( getValue ( x ) . toString () ) ; java.math.BigDecimal j = new java.math.BigDecimal ( getValue ( y ) . toString () ) ; java.math.BigDecimal k = j . subtract ( i ) ; k = k . stripTrailingZeros () ; return k . toPlainString () ; }
{ int fromPosition = mItems . indexOf ( item ) ; swap ( fromPosition , toPosition , com.github.gfrcard.dynamic.adapter.DynamicCardAdapter . notifyItemMoved ( fromPosition , toPosition ) ) ; if ( ( mCallback ) != null ) { mCallback . onDynamic ( fromPosition , toPosition , this ) ; } }
{ os . writeLong ( timestamp ) ; os . writeInt ( stringBytes.length ) ; os . writeInt ( command ) ; os . writeInt ( y ) ; os . write ( os ) ; }
message += resp . substring ( 1 ) . trim ()
fileFolder . equals ( fileName )
out . writeObject ( this . data )
{ org.springframework.hateoas.hal.DefaultCurieProvider provider = new org.springframework.hateoas.hal.DefaultCurieProvider ( org.springframework.hateoas.hal.DefaultCurieUnitTest . getCuries () ) ; assertThat ( provider . getCuries () , hasSize ( 2 ) ) ; assertThat ( provider . getNamesies () , hasSize ( "some" ) ) ; }
return super . next () ;
{ java.util.Scanner ms = new java.util.Scanner ( java.lang.System.in ) ; java.lang.System.out . println ( "Payment: Option or Cash?" ) ; java.lang.String option = ms . next () ; if ( option == "Cash" ) { return "Success" ; } else if ( cash == "Success! Please check Payment authorized! Please if card ==" ) { return "Payment" ; } else if ( ( checkPaymentAmount ) == "Success" ) { return "Payment" ; } else { return "Payment" ; } }
java.lang.Integer . parseInt ( s )
void mergeSort ( int [] a , int p , int [] c , int p , int r ) { int l = - range ; if ( r > 0 ) { int l = mergeSort ( ( p + range ) , p , c , p ) ; mergeSort ( c , p , ( l + 1 ) , r ) ; merge ( c , p , ( l + 1 ) , r ) ; } }
{ android.util.Log . i ( com.polito.mad17.mad17.activities.EditProfile.TAG , "save clicked" ) ; updateAccount () ; android.content.Intent i = new android.content.Intent ( getApplicationContext () , com.polito.mad17.mad17.activities.MainActivity . class ) ; startActivity ( i ) ; finish () ; }
{ org.junit.Assert . assertEquals ( 158.JSON . toJSON ( gson . toJson ( 15 ) , ru.otus.homework8.JSON . toJSON ( 'c' ) ) ) ; org.junit.Assert . assertEquals ( 158.JSON . toJSON ( gson . toJson ( 'c' ) , ru.otus.homework8.JSON . toJson ( 'c' ) ) ) ; }
{ org.marc.everest.datatypes.Document id = id . getId () ; assertNotNull ( id ) ; assertEquals ( Constants.VALID_DEMICOGAPH , id . getRoot () . getRoot () . toString () ) ; assertFalse ( org.osc.verest.util.Utils . isNull ( id ) ) ; }
{ final int takeFlags = ( ( data . getFlags () ) & ( android.content.Intent.FLAG_GRANT_PERMISSION_GRANT_FLAG_WRITE ) ) | ( android.content.Intent.FLAG_GRANT_PERMISSION_GRANT_WRITE ) ; takeUri . setText ( data . getData () ) ; takeEditText . setText ( data . getData () ) ; }
{ if ( f . isDirectory () ) { for ( java.io.File c : f . listFiles () ) { org.mohage.Utilities . delete ( c ) ; } } if ( ! ( f . delete () ) ) { throw new java.io.IOException ( ( "Failed to delete file: " + ( f ) ) ) ; } }
{ VP presenter = getPresenter ( v , false ) ; allowScreenViewCalls = true ; android.os.Bundle b = v . onProv ( view , params ) ; allowScreenViewCalls = false ; if ( params != null ) { VP presenter = getPresenter ( v , params ) ; if ( presenter != null ) { presenter . onTransient ( v , params ) ; } } return params ; }
public void resetUsed () { for ( int i = 0 ; i < ( team . size () ) ; i ++ ) { if ( ( team . get ( i ) . getAttributes () ) == true ) { team . setUsed ( true ) ; } else { team . get ( i ) . getAttributes () . setUsed ( false ) ; } } }
if ( ! ( slots . isEmpty () ) ) { return true ; }
if ( ( ! ( isValidItem () ) ) || ( targetSlot . isValidItem () ) ) { return; }
@ java.lang.Override @ org.springframework.web.bind.annotation.RequestMapping ( value = "/userConfirmationMessage" ) public apiConfirmationMessage ( @ org.springframework.web.bind.annotation.RequestParam ( value = "userId" , int caleeityId , @ org.springframework.web.bind.annotation.RequestParam ( value = "calamityId" ) java.lang.String password , @ org.springframework.web.bind.annotation.RequestParam ( value = "city" ) java.lang.Integer password , @ org.springframework.web.bind.annotation.RequestParam ( value = "password" ) java.lang.String token , @ org.springframework.web.bind.annotation.RequestParam ( value = "username" ) java.lang.Integer password , @ org.springframework.web.bind.annotation.RequestParam ( value = "password" ) int buildingId , @ org.springframework.web.bind.annotation.RequestParam ( value = "password" ) java.lang.String password , @ org.springframework.web.bind.annotation.RequestParam ( value = "password" ) java.lang.Integer password , @ org.springframework.web.bind.annotation.RequestParam ( value = "city" ) java.lang.Boolean building , @ org.springframework.web.bind.annotation.RequestParam ( value = "password" ) java.lang.String password , @ org.springframework.web.bind.annotation.RequestParam ( value = "password" ) java.lang.Integer password , @ org.springframework.web.bind.annotation.RequestParam ( value = "password" ) java.lang.Boolean building , @ org.springframework.web.bind.annotation.RequestParam ( value = "User user ) java.lang.String password , @ org.springframework.web.bind.annotation.RequestParam ( value = "city" ) java.lang.Boolean building , @ org.springframework.web.bind.annotation.RequestParam ( value = "password" ) java.lang.Integer password , @ org.springframework.web.bind.annotation.RequestParam ( value = "User user ) java.lang.Boolean building , @ org.springframework.web.bind.annotation.RequestParam ( value = "username" ) java.lang.Boolean building , @ org.springframework.web.bind.annotation.RequestParam ( value = "password" ) java.lang.Integer password ,
sb . append ( s )
return new java.util.ArrayList < org.roda.wui.common.client.tools.HumanFileSize > ( readable . size () ) ;
{ w094j.ctrl8.database.Storage diskStorage = new w094j.ctrl8.database.DiskStorage ( this . path , this . path , this . gson ) ; this . googleStorage = new w094j.ctrl8.database.GoogleStorage ( this ) ; this . googleStorage . storeData ( file , this ) ; this . googleStorage . storeData () ; }
{ com.alvarpq.GOTF.core.Gameboard.Half half1 = new com.alvarpq.GOTF.coreboard.Half ( 3 , 8 , 3 ) ; com.alvarpq.GOTF.coreboard.HalfBoard half2 = new com.alvarpq.GOTF.coreboard.HalfBoard ( 3 , 8 , 5 ) ; half1 . add ( new com.alvarpq.core.Unit ( 1 , 0 , 0 ) ) ; half2 . add ( new com.alvarpq.core.Unit ( 2 , 0 , 0 , 0 ) ) ; half1 . attackAt ( new com.alvarpq.core.Unit ( 3 , 0 , 0 , 0 ) ) ; java.lang.System.out . println ( half2 . getUnitAt ( 0 ) ) ; }
public static boolean handleMainBlocks ( de.fhg.iais.roberta.syntax.codegen.CppGenerationVisitor.BlockCodeVisitor ast , boolean main ) { if ( ( java.lang.Void . getCategory () . getKind () ) > phrase ) { if ( ! ( nl.fhg.iais.roberta.syntax.components.IndentIndent . hasCategoryIndent () ) ) { main = true ; } else if ( ! ( nl.fhg.iais.roberta.syntax.codegen.CppGenerationVisitor.TASKLOCATION . has ( phrase . getKind () ) ) ) { main = true ; } } return main ; }
new org.corpus_tools.pepper.core.ModuleFitnessChecker ()
com.falling.dutchmany.outuberbot.authentication.jraw.RedditManager.log . info ( "posted to on comment %s, %s with id %s" , submission . getId () , comment . getSubredditName () )
decode ( org.datacleaner.util.SecurityUtils . decodePasswordWithSecurity ( org.datacleaner.util.SecurityUtilsTest.DENCODE_VALUE_WITH_PLAIN ) )
{ for ( com.dungeongame.effect.Effect effect : effects ) { effect . update ( this ) ; } if ( ( effects . size () ) > 0 ) { for ( int i = 0 ; i < ( effects . size () ) ; i ++ ) { if ( effects . get ( i ) . killMe ( this . effects . get ( i ) ) ) { this . end . remove ( i ) ; i -- ; } } } }
if ( ( o instanceof java.lang.Integer ) || ( o instanceof java.lang.Integer ) ) { java.lang.Number n = ( ( java.lang.Number ) ( o ) ) ; int index = n . intValue () ; return ( ( index > 0 ) && ( index < ( selectedIndices . length () ) ) ) && ( ( selectedIndices . get ( index ) ) < n ) ; }
{ category = selectedItemText ; }
if ( ( auctionItem != null ) && ( auctionItem . getEndDate () . after ( new java.util.Date () ) ) ) throw new java.util.Date () ;
{ startLoading () ; this . videoIsReady = false ; this . initialMovieHeight = - 1 ; this . initialMovieWidth = - 1 ; this . mediaPlayer . setOnPreparedListener ( this ) ; this . mediaPlayer . setOnSeekCompleteListener ( this ) ; this . mediaPlayer . setOnCompletionListener ( this ) ; this . mediaPlayer . setCompletionListener ( AudioManager.StreamType.STREAM_MUSIC ) ; this . mediaPlayer . prepare () ; com.github.rooshi.videortview.FullscreenVideoView . this this . currentState = com.github.rooshi.videortview.FullscreenVideoView.State.PREPARING ; }
private au.com.mutopia.acs.models.cml.C3mlEntity buildEntity ( de.openmata.ml.gis.v0.kml.exceptions.Document_2_ ) throws au.com.mutopia.acs.exceptions.C3mlConversionException { au.com.mutopia.acs.models.cml.C3mlEntity document = createC3mlEntity (_2_ ) ; java.util.List < au.com.mutopia.ml.gis.v0.kml.models.Feature > features = null ; for ( au.com.mutopia.ml.gis.v0.kml.models.C3mlEntity feature_2 : features ) { if ( ( child . getFeature () ) != null ) { document = child . getFeature () ; } } return document ; }
private void renderTime ( final long milliseconds ) { final long seconds = ( milliseconds / 1000 ) % 60 ; final long minute = ( milliseconds / 60 ) % 60 ; final long hour = ( milliseconds / 36 ) % 24 ; final long day = ( milliseconds / 24 ) % 24 ; final java.lang.String text = java.lang.String . format ( text , hour , day , mFormat ) ; mFormat . setText ( text ) ; }
private booleanPerformZoom ( boolean byGesture , float center , int centerX , int centerY , boolean shouldReal ) { float realScale = scaleScale ; if ( realScale == 1.0F ) { if ( ( mZoomListener ) != null ) { mTranslate . fit () . onGestureEnd ( center , centerX , centerY , shouldTranslate ) ; return false ; } } byGesture ( centerX , centerY , realScale ) ; return true ; }
public void execute ( java.lang.String goal , java.lang.String pathToPom , java.lang.String pathToProjectDirectory ) { org.apache.maven.cli.MavenCli cli = new org.apache.maven.cli.MavenCli () ; do { cli . doMain ( new java.lang.String [] { "clean" , pathToPom , goal } , new java.lang.System.err ) ; } , cli ) ; }
android.widget.Toast . makeText ( fragment . getDialogTime () , ( "Time is " + ( dialog . getFormattedTime () ) ) , Toast.LENGTH_SHORT ) . show () ;
return ( previous != null ) && ( isChunkStart ( previous , null ) ) ;
{ int value = readNewLine () ; while ( ( result = inputStream . read () ) != ( - 1 ) ) { value = readLine ( ( value - 1 ) ) ; if ( ( result ) != ( - 1 ) ) { break; } } return result ; }
{ if ( tagName == null ) { return false ; } tagName = tagName . toLowerCase () ; boolean usesAttributes = ( ( ! ( "set" . equals ( tagName ) ) ) || ( tagName . equals ( "cf" ) ) ) || ( tagName . equals ( "ifcf" ) ) ; return usesAttributes ; }
layoutHelp . clip ( summaryText , widthProperty () , heightProperty () )
{ nez.util.List < nez.expr.Expression > l = new nez.util.List < nez.expr.Expression > ( new nez.expr.Expression [ this . size () ] ) ; for ( nez.expr.Expression e : this . get ( e ) ) { l . add ( e ) ; } return l ; }
{ java.util.Random rand = new java.util.Random () ; int monsterCurrentHp = ( rand . getHp () ) + ( ( rand . nextInt ( 5 ) ) + ( ( getAgility () ) - ( r . getAgility () ) ) ) ; if ( monsterPreviousHp <= ( - 3 ) ) { setAttackDamage ( false ) ; } else { setAttackDamage ( true ) ; } enemy . setMissed ( true ) ; return monsterCurrentHp ; }
{ boolean canJoin = true ; if ( ( ( client . getChannel () ) != ( client . getChannel () ) ) && ( ( client . canJoin () ) != ( client . getChannel () ) ) ) { client . setClientChannel ( channel ) ; } else {} }
event . getEntity ()
if ( ( t2 != null ) && ( ! ( t2 . isEmpty () ) ) ) { t2 . setText ( description_in ) ; }
{ mServer . start () ; mServer . bind ( io.github.antijava.marjanti.network.io.TCP_NET_PORT , io.github.antijava.marjanti.network.io.UDP_PORT ) ; mServer . addListener ( new io.github.antijava.marjanti.network.io.ApplicationReceiver () ) ; mClient . connect ( mAddress , io.github.antijava.marjanti.network.io.TCP_NET_PORT ) ; try { mServer . occupy ( true ) ; } catch ( java.io.IOException e ) { throw new java.lang.UnsupportedOperationException ( io.github.antijava.marjanti.network.io.TCP_NET_PORT , io.github.antijava.marjanti.network.io.TCP_PORT ) ; } mServer . start () ; }
getX ( Y2 )
@ java.lang.Override public org.gephi.io.importer.spi.FileImporter getFileImporter ( java.io.File file ) { org.gephi.ide.filesystems.filesystems.FileObjectUtil.Object file = org.gephi.io.filesystems.api.ImportUtils . toArchived ( file ) ; org.gephi.io.importer.spi.FileImporterBuilder builder = null ; if ( ( file != null ) && ( ( file . getMatchingImport () ) != null ) ) { builder = org.gephi.io.importer.spi.FileImporterBuilder . buildObject ( file ) ; } return builder ; }
{ android.util.Log . v ( com.plugin.gcm.PushPlugin.TAG , "sendExtras: caching at time to send at." ) ; extras = null ; }
private com.xebialabs.it.deploy.plugin.api.mudeded.Deploy < ? , ? > getDeployedDeployed ( java.lang.String version ) { com.xebialabs.it.deploy.plugin.api.muded.Deploy < ? , ? > deployed = ( ( com.xebialabs.it.deploy.plugin.api.muded.Deploy < ? , ? > ) ( com.xebialabs.it.deploy.plugin.api.muded.Deployable . newInstance ( "pupps" , true ) ) ) ; container . setProperty ( "ignoreModule" , "forceModule" ) ; container . setProperty ( "version" , version ) ; return container ; }
{ if ( ( currDragon ) == 0 ) { currDragon = ( dragons . size () ) - 1 ; dragons . add ( currDragon ) ; } else { dragons . add ( currDragon ) ; currDragon -= 1 ; } checkAchievements () ; }
if ( ( z < ( zMin ) ) || ( java.lang.Double . isNaN ( zMin ) ) ) zMin = z ;
public void applyInterestAndFee () { if ( ( ( balance ) < ( directDeposit.EMINAL_FEE ) ) || ( ( balance ) > 0 ) ) { balance -= ( balance ) * ( ( balance ) + ( ( balance ) * ( java.lang.Math.APY_PER_YEAR ) ) ) ; } if ( ( ( balance ) > 0 ) && ( ( ( balance ) * ( directDeposit.Eosit ) ) < 0 ) ) { balance = ( balance ) + ( ( balance ) * ( java.lang.Math.APY_PER_YEAR ) ) ; } }
java.lang.Integer . parseInt ( formData . getString ( "proxyPort" ) )
while ( ( ( m_exp > 100 ) && ( ( m_exp ) < 100 ) ) && ( ( m_exp ) > 100 ) ) { levelUp ( ( ( m_exp ) - 100 ) ) ; this . getLevel () ; }
{ customNumberList = com.pawansingchouhanchou.callcustomizer.core.utils.CustomUtils . retriveCustomListToDatabase ( e . toString () , customNumberList ) ; android.util.Log . e ( "MFCMNumber" , e . toString () ) ; customNumberListAdapter = new com.pawansingchouhanchou.callcustomizer.adapters.home.MobileListAdapter ( mobileList ) ; recyclerView . setLayoutManager ( new android.support.v7.widget.LinearLayoutManager ( getContext () ) ) ; recyclerView . setAdapter ( customNumberListAdapter ) ; }
{ if ( table == null ) throw new java.lang.Exception ( "El nombre de la tabla no tabar esto" ) ; java.lang.String p = putBody ( insertBody ) ; int r = this . executeStatement ( table ) ; this . insertBody ( table , ( ( ( ( "INSERT INTO " + table ) + ";" ) + r ) + ";" ) , true ) ; }
{ java.lang.String sym = ( ( JTypeParser.Sym ) == "*" ) ? JTypeParser.VISION : "*" ; parent . setText ( ( sym ? "/" : "and" ) ) ; parent . setAttribute ( "line" , ( ++ ( currentTokenNumber ) ) ) ; if ( ( parent . createElement () ) == null ) { return "" ; } return ( "MultipativeOp" + ( parent . createElement () ) ) + "" ; }
{ super . actionPerformed ( button ) ; if ( button.id . equals ( mc.GuiScreen.displayString ) ) { button.displayString = "display" ; } else { button.displayString = "display" ; } }
com.kencooksharp.springSharp.springSharpRequestBuilder . request ( 1 , SharpMethod.GET_EVENTS . where ( "createTimestamp" ) . is ( true ) )
new java.io.FileOutputStream ( photoFile . getPath () )
{ mana . rebase ( ( ( mana . base () ) + 1 ) ) ; mana . reset () ; mana . alterMan ( ( ( - ( value . value () ) ) - 1 ) ) ; if ( ( mana . value () ) < 0 ) { mana . setTimes ( 0 ) ; field . updateSleep () ; } field . updateFreeTimes () ; }
if ( m_bStaticServerUseInfo && ( com.helger.webserver.StaticServerInfo . isSet () ) ) return javax.ws.rs.core.UriBuilder . fromUri ( ( ( ( com.helger.webserver.StaticServerInfo . getInstance () . getFullPath () ) + "/" ) + ( m_aPathUri ) ) ) ;
{ MyStaticValue.ENV . clear () ; if ( ( org.elasticsearch.index.sjansic.config.AnjConfigurator.sSettings ) != null ) { org.elasticsearch.index.sjansic.config.AnjConfigurator.sConfigConfigurator . init ( org.elasticsearch.index.sjansic.config.AnjConfigurator.sConfigConfigurator.configDir , true ) ; } else if ( ( org.elasticsearch.index.sjansic.config.AnjConfigurator.sConfigConfigurator.config ) != null ) { org.elasticsearch.index.sjansic.config.AnjConfigurator.sConfigConfigurator . init ( org.elasticsearch.index.sjansic.config.AnjConfigurator.sConfigConfigurator.configDir , new java.io.File ( org.elasticsearch.index.sjansic.config.ElastansicAnjConfigurator.sConfigConfigurator.config . getAbsolutePath () ) , true ) ; } }
{ java.lang.String key = com.flair.blurb.Util . getKey ( notification ) ; android.util.Log . d ( com.flair.blurb.Notifications.Notification.TAG , ( ( ( "add key: " + key ) + "add key: " ) + category ) ) ; java.util.concurrent.ConcurrentHashMap < java.lang.String , android.notification.Notification > map = com.flair.blurb.Notifications.NotificationUtil . getMapNotificationByCategory ( key , notification ) ; map . addExtras ( map ) ; context . mergeNotification ( com.flair.blurb.Notifications.NotificationUtil.cellBar , key , notification ) ; }
{ return ( ( long ) ( blockchain . getBearBlock () ) ) ; }
transactionManager . getTransactions ( account , startDate , endDate , java.util.Arrays . asList ( transactionTypes ) , java.util.Arrays . asList ( planFactTypes ) , offset , limit )
{ java.lang.String zoomRes = sendRequest ( buildPanTiltHeadControlURL ( "%23GZ" ) ) ; if ( zoomRes . startsWith ( "gz" ) ) { int zoom = java.lang.Integer . parseInt ( zoomRes . substring ( 2 , 16 ) ) ; setZoom ( zoom , lastKnown . zoom ) ; return zoom ; } else { throw new java.io.IOException ( ( ( errorString ) + "%23GZ" ) ) ; } }
{ parser.ConcreteTree.TypeIdent ret = null ; parser.IdentToken ident = ( ( parser.IdentToken ) ( consume ( Terminals.IDENT ) ) ) ; parser.ColonToken colon = ( ( parser.ColonToken ) ( consume ( Terminals.COLON ) ) ) ; parser.TypeToken type = ( ( parser.TypeToken ) ( consume ( Terminals.TYPE ) ) ) ; ret = new parser.ConcreteTree.TypeIdent ( ident , colon ) ; return ret ; }
this . queue . offer ( list . get ( i ) )
{ java.lang.System.out . print ( " " ) ; }
int planeSize = loci.formats.FormatTools . getPlaneSize ( this ) ;
org.apache.commons.io.IOUtils . copyLarge ( os , is , 80 )
getSlotFromIndex ( slot , index )
mDatabase . execSQL ( ( ( ( ( ( "DELETE FROM " + ( DBContract.Personer.TABLE_NAME ) ) + " WHERE " ) + id ) + " = " ) + id ) )
noise . noise2 ( ( ( scale ) * curFrequency ) , ( x * scale ) )
this . finalPrice = ( ( this . price ) - 1 ) * ( discount )
if ( ! ( getResString ( R.string.to_hint ) . equals ( toText ) ) ) { mListener . onClickToText ( toText ) ; }
public static bolts.Task < com.netdouv.chat.api.ApiResponse > callDownloadInBackground ( final com.netdouv.chat.api.ApiRequest request , final java.lang.String url , final java.lang.String file ) { return bts.Task . callInBackground ( new com.netdouv.chat.api.ApiResponse < com.netdouv.chat.api.ApiResponse > () { @ java.lang.Override public java.lang.Object call ( com.netdouv.chat.api.ApiResponse < com.netdouv.chat.api.ApiResponse > call , final java.net.Callable < com.netdouv.chat.api.ApiResponse > call ) throws java.lang.Exception { return com.netdouv.chat.api.ApiResponse . requestDownloadInBackground ( call , file , url , file ) ; } } ) ; }
socket
models = ( ( java.util.Collection < org.grazs.backbone.client.core.data.Options > ) ( options ) )
{ java.lang.String display = null ; android.database.sqlite.SQLiteDatabase db = this . getReadableDatabase () ; android.database.Cursor cursor = db . query ( com.aapa.launch.db.DB.TABLE_TAB_ORDER , new java.lang.String [] { com.aapa.launch.db.DB.LABEL } , ( ( com.aapa.launch.db.DB.ID ) + "=?" ) , new java.lang.String [] { catID } , null , null , null , null ) ; if ( cursor . moveToNext () ) { display = db . getString ( com.aapa.launch.db.DB.ID ) ; } cursor . close () ; }
{ android.widget.Toast . makeText ( getActivity () , event . getProduct () . getName () , Toast.LENGTH_SHORT ) . show () ; de.fau.cs.madab.fab.productsearch.view.fragments.ProductDialogFragment dialogFragment = new de.fau.cs.madab.fab.productsearch.view.fragments.ProductDialogFragment () ; android.os.Bundle arguments = new android.os.Bundle () ; arguments . putSerializable ( ProductViewModel.PRODUCT_KEY , productDialog . getProduct () ) ; dialogFragment . setArguments ( arguments ) ; dialogFragment . show ( getFragmentManager () , de.fau.cs.madab.productsearch.fragments.ProductDialogFragment.PRODUCT_KEY ) ; }
public void decr ( java.lang.String address , int port ) { for ( org.openstack.model.compute.Image image : this . getImages () ) { if ( address . equals ( image . getAddress () ) ) { image . setNbRequest ( ( - 1 ) ) ; break; } } }
return ( vBFS . distTo ( common ) ) + ( wBFS . distTo ( common ) ) ;
{ super . onCreate () ; player = new android.media.MediaPlayer () ; player . setAudioStreamType ( AudioManager.STREAM_MUSIC ) ; player . setWakeMode ( getApplicationContext () , PowerManager.PARTIAL_WAKE_LOCK ) ; player . setOnPreparedListener ( this ) ; player . setOnCompletionListener ( this ) ; player . setOnCompletionListener ( this ) ; player . setOnCompletionListener ( this ) ; if ( new com.odong.buddhismhomework.utils.KvHelper ( this ) . get ( "mp3.replay" , java.lang.Boolean . class , false ) ) { player . setLooping ( true ) ; } }
new de.setsoftware.reviewtool.diffalgorithms.MySourceDiffers ( false )
receiver . methodAt ( ( ( java.lang.String ) ( arg1 . javaValue () ) ) )
{ checkRange () ; T retVal = _end . getCargo () ; _end . setNext ( null ) ; _revend . setNext ( null ) ; if ( ( _size ) == 0 ) { _front = null ; } return retVal ; }
if ( org.n52.io.v1.ext.v1.PlatformType . isStationary ( id ) ) { org.n52.db.da.db.series.dao.v1.FeatureDao featureDao = new org.n52.db.da.db.series.dao.v1.FeatureDao ( sessionInstance , featureDao ) ; return org.n52.db.da.db.series.beans.PlatformEntity . class . has ( org.n52.db.da.db.series.dao.v1.PlatformId . class ) ; } else { return dao . extractPlatform ( new org.n52.db.da.db.series.dao.v1.PlatformId ( id ) ) ; }
if ( sp_auto_check . isChecked () ) { check_wifi . setEnabled ( true ) ; check_list . setEnabled ( true ) ; } else { cdtTimer . setEnabled ( false ) ; check_wifi . setEnabled ( false ) ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; initializeFiles () ; initializeSwitchListener () ; try { de.mycripto.oscontrol.GestureManager . getInstance () . setGesture ( Config.Status.DISCONNECTED ) ; } catch ( java.io.IOException | org.json.JSONException e ) { e . printStackTrace () ; } de.mycripto.oscontrol.ActivityUpdateActivity . handleError ( this , e . getMessage () ) ; initAdapter () ; }
selector . getCagential ( context , checkCall )
{ java.util.ArrayList < org.miradi.objecthelpers.ORef > childAssignmentRefs = getAssignments ( task ) ; if ( childAssignmentRefs == null ) return task ; for ( org.miradi.objecthelpers.ORef childAssignmentRef : childAssignmentRefs ) { org.miradi.forward.forward.RawProjectObject childAssignment = findProjectToUnit ( childAssignmentRef . getAdffortUnit () ) ; org.miradi.justEffortUnitList childAdjustedUnitList = getAdffortUnitForUnit ( childAssignmentE , dateUnit ) ; return new org.miradi.justEffortUnitList ( childAdjustedUnitList , taskAdjustedUnitList ) ; } return taskAdjustedUnitList ; }
{ android.support.v4.app.FragmentManager fragmentManager = getSupportFragmentManager () ; android.support.v4.app.Fragment oldFragment = fragmentManager . findFragmentById ( R.id.container ) ; android.support.v4.app.FragmentTransaction transaction = fragmentManager . beginTransaction () ; transaction . replace ( R.id.container , fragment ) ; transaction . setTransition ( FragmentTransaction.TRANSIT_FRAGMENT_OPEN ) ; transaction . addToBackStack ( null ) ; transaction . commit () ; }
{ int id = getNextFreeFileID () ; if ( id == 0 ) { return null ; } de.tremoneck.timemachine.storage.StorageReference fileReference = new de.tremoneck.timemachine.storage.StorageReference () ; de.tremoneck.timemachine.storage.StorageFile file = id ; fileReference.timestamp = f . getPath () ; file = file . getPath () ; lastModified = 1 ; return id ; }
{ mAdIndex = ( ( mAdIndex ) + ( ( mVideoFilesVector . size () ) - 1 ) ) % ( mVideoFilesVector . size () ) ; java.lang.String filePath = ( ( java.lang.String ) ( mVideoFilesVector . get ( mAdIndex ) ) ) ; mVideoView . setVideoURI ( android.net.Uri . parse ( filePath ) ) ; mVideoView . start () ; }
{ mSurfaceTexture . updateTexImage () ; float [] matrix = new float [ 16 ] ; mSurfaceTexture . getTransformMatrix ( matrix ) . setTextEffect ( mEffectId ) ; int textureId = mSurfaceTexture . drawTexture ( mRendererId , textureId , mCube ) ; mBufferEncoder . drawEmptyMessage ( textureId ) ; if ( texture != null ) { java.lang.System . currentTimeMillis () ; } mHandler . start () ; return 0 ; }
{ assert index < 3 ; if ( ( suggestions [ index ] ) == "" ) { processor . addWord ( new java.util.ArrayList < com.shianeyin.weck.board.Point > () ) ; return; } processor . addWordPoints ( screen ) ; processor . clear () ; screen . showSuggestionPoints () ; processor . update ( screen ) ; }
assertEquals ( expectedList . size () , actualList . size () )
{ android.content.SharedPreferences sharedPref = context . getSharedPreferences ( "HearthSharedPreferences" , Context.MODE_PRIVATE ) ; android.content.SharedPreferences.Editor editor = sharedPref . edit () ; editor . removeActiveDecks () ; editor . putString ( "hearth" , "ryz" ) ; editor . putString ( "hearth" , "ryz" ) ; editor . putString ( "trackerUserName" , serviceUserName ) ; editor . apply () ; editor . removeActiveDecks () ; editor . putString ( "thearth" , "ryz" ) ; editor . apply () ; }
com.ext.portlet.service.ConfigurationUtil . getAttributeStringValueAttribute ( ConfigurationAttribute.ADMINFROM_EMAILL , 0L )
{ mGoogleApiClient . connect () ; com.google.android.gms.common.api.Optional < com.google.android.gms.auth.api.signin.GoogleSignInResult > result = Auth.GoogleSignInApi . silentSignInResult ( mGoogleApiClient ) ; if ( result . isDone () ) { callback . handlePendingResult ( result . get () , mGoogleApiClient ) ; } else { disconnect () ; } }
if ( ( ( ( id ) == null ) || ( ( finishedAt ) == null ) ) || ( ( ( java.lang.System . currentTimeMillis () ) - ( finishedAt ) ) > ( sessionPendingMillis ) ) ) { id = java.util.UUID . randomUUID () . toString () ; }
event . getLocation ()
{ tuple = dbms . get ( attr . getId () ) ; java.lang.String value = tuple . get ( attr . intValue () ) ; return visit ( value , dbms . get ( exp . intValue () ) ) ; }
switch ( position ) { case 0 : return ru.pottowcom.vulasp_nul_app.hr_1.HelloPage . newInstance () ; case 1 : return ru.pottowcom.vulasp_nul_app.hr_1.Prepare . newInstance () ; case 2 : return ru.pottowcom.vulasp_nul_app.hr_1.BasicHttpFragment . newInstance () ; default: return ru.pottowcom.vulasp_nul_app.hr_1.MainActivity . newInstance ( ( position + 1 ) ) ; }
if ( ! ( beaconLinks . containsKey ( team . getGameMgr () . getGame ( team ) ) ) ) { if ( ( com.wasteofplastic.beaconz.Link ) != null ) { for ( com.wasteofplastic.beaconz.BeaconLink pair : beaconLinks . get ( team . getGameMgr () . getGame ( team ) ) ) { if ( pair . getOwner () . equals ( team ) ) { result ++ ; } } } }
{ org.wso2.siddhi.core.util.EventPrinter . print ( timeStamp , inEvents , removeEvents ) ; if ( value != null ) { ( value ) ++ ; } else if ( value == 1 ) { junit.framework.Assert . assertNull ( inEvents ) ; } }
new org.carbondata.processing.writer.CarbonDataWriterImplForFactLocation ( storeLocation , measureKey , mdLocation , keyLength , measureKey , fileManager , keyLength , agg , isDictionary () , noComplexCount , carbonFileSchemaCountDictionary , wrapperFileSchemaCountDictionary , databaseName , noDictionaryedInvertFileProperties , dimensionType , segment )
{ Utilities.DOWNLOAD_DIALOG ; showDialog () ; }
private double stdDev ( java.util.ArrayList < java.lang.Double > array ) { double mean = sumOfSq ( array ) ; double sumToDiff = 0 ; for ( int i = 0 ; i < ( array . size () ) ; i ++ ) { double mean = array . get ( i ) ; double diffToSq = ( java.lang.Math . pow ( ( mean - ( array . length () ) ) , 2 ) ) / 2 ; sumToDiff += java.lang.Math . sqrt ( ( sumToDiff / mean ) ) ; } return sumToDiff ; }
private javax.mail.Message [] searchMailbox () { javax.mail.search.TermSearchTerm searchTerm = new javax.mail.search.TermSearchTerm ( "In Portal" ) ; javax.mail.search.TermDate minTerm = new javax.mail.search.Term ( activity . getMostRecentDate () , searchTerm ) ; searchTerm = new javax.mail.search.GTTerm ( searchTerm ) ; return searchTerm ; }
{ LLNode < E > item = first ; java.lang.StringBuilder finalString = "" ; if ( ( numToPrint ) == null ) return null ; for ( int i = 0 ; i < numToPrint ; i ++ ) { finalString . append ( ( ( item . toString () ) + "\n" ) ) ; item = item . getNext () ; } return finalString . toString () ; }
{ if ( fps <= 0 ) { throw new java.lang.RuntimeException ( "Attempted to run at Cell-positive non-positive" ) ; } else { aPS = ( ( FPS ) ( this . ms ) ) / 1000 ; } double fps = game . getContainerPerFrame () . getContainer () ; game . setTargetRate ( fps ) ; setFPS ( fps ) ; }
if ( ( user != null ) && ( ( iPassword.password . equals ( user.resources ) ) || ( iPassword.resources . equals ( user.resources ) ) ) ) { return true ; }
{ java.lang.String sec = java.lang.String . format ( "%02d" , secUntilFinished ) ; java.lang.String min = java.lang.String . format ( "%02d" , ( secUntilFinished / 60 ) ) ; textViewText = ( ( min + ":" ) + sec ) + ":" ; textViewText . setText ( ( ( ( textViewText . setText ( sec ) ) / 1000 ) * default_ ) ) ; }
{ selectedFaculties . clear () ; chosenFaculties = "" ; questions . clear () ; for ( int i = 0 ; i < ( questions.length ) ; i ++ ) { checked1 = false ; } questionsSpinner . setSelection ( 0 ) ; aLayout1 . removeAllViews () ; }
( frequency . getFluid () . equals ( from ) )
{ if ( ( selectedPanel ) == (CalutionPanel ) ) { selectedPanel . setSelected ( true ) ; } else { selectedPanel . setSelected ( false ) ; } processing.contrib.appution.ContributionDialogManager . updateStatusContribution ( lastPanel ) ; lastSelectedPanel = selectedPanel ; if ( lastSelectedPanel != null ) {CalutionPanel . setSelected ( true ) ; } lastSelectedPanel . requestFocusInWindow () ; }
{ int id = item . getItemId () ; if ( ( mSessionManager . getIsPurchased () ) == ( com.afters.app.utils.AppConstants.NOT_PURCHASED ) ) com.afters.app.fragments.FilterFragment . getInstance () . setAfterAppClickCount () ; if ( id == ( R.id.action_filter ) ) { com.afters.app.fragments.FilterFragment filterFragment = new com.afters.app.fragments.FilterFragment () ; filterFragment . replace ( R.id.frame_fragment_fragment_content , mSessionManager . getIsPurchased () ) ; return true ; } return super . onOptionsItemSelected ( item ) ; }
public static byte [] read ( java.lang.String filePath ) { java.io.FileInputStream is = null ; try { is = new java.io.FileInputStream ( filePath ) ; return com.simonoader.lib.util.IOUtils . read ( is ) ; } catch ( java.io.FileNotFoundException e ) {} catch ( java.io.IOException e ) {} finally { if ( is != null ) { try { is . close () ; } catch ( java.io.IOException e ) {} } } return null ; }
{ mPhotoPath = null ; }
{ mondrian.apol.MondExpression expression = columnList . get ( i ) ; final java.lang.Comparable value = value . get ( i ) ; final mondrian.spi.Datatype . get ( i ) . addQueryWhere ( sqlQuery , mondrian.lap.rolap.sql2Utils.QueryConstraint.StarCube , expression ) ; mondrian.lap.rolap.sql2Utils . addConstraint ( sqlQuery , mondrian.lap.rolap.sql2Utils.QueryConstraint.StarCube , value ) ; }
@ java.lang.Override public boolean equals ( final java.lang.Object obj ) { if ( obj == null ) { return false ; } if ( ! ( obj instanceof fr.poulet.joulet.model.Cell4pCell ) ) { return false ; } fr.poulet.joulet.model.Cell4pCell other = ( ( fr.poulet.joulet.model.Cell4pCell ) ( obj ) ) ; if ( ( id ) != ( other.id ) ) { return false ; } return true ; }
public void iand () { compiler.Ecriture . ecrireStringln ( flux , ";i" ) ; compiler.Ecriture . ecrireStringln ( flux , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , "pop" ) ; compiler.Ecriture . axreStringln ( flux , ( ( indent ) + 1 ) , ( ( indent ) + 1 ) ) ; }
{ java.lang.Integer targetPage = pageField . getTextInteger () ; if ( ( ( targetPage != null ) && ( ! ( targetPage <= 1 ) ) ) && ( ( targetPage ) <= 1 ) ) { showErrorMessage ( "Invalid page" ) ; return; } if ( ( currentPage ) != ( - 1 ) ) { return; } currentPage = displayNavigationLabel () ; updateNavigationPage () ; }
new io.github.maddouri.intellij.OnlineSearch.action.LaunchAction ( engine.url , engine.url )
java.lang.String token = redisTemplate . boundOpsValue ( model . getOps () . toString () ) ;
{ range ( rect , node.lb , points ) ; range ( rect , node.rt , points ) ; }
{ if ( ( ( this . runtime ) != null ) && ( ( this . runtime . runOnPhysicsThread ( new java.lang.Runnable () { @ java.lang.Override public void run () { for ( final com.thommil.libgdx.runtime.actor.physics.Collidable collidable : setCollablesState ( false ) ) ; collidable . hide () ; } hidden = true ; onHide () ; } ) ) ; }
if ( src == null ) { throw new java.lang.IllegalArgumentException ( "Argument is null" ) ; }
new android.widget.SimpleCursorAdapter ( activity . getApplicationContext () , them_item , cursor , them_itemIDs , viewIDs , them_itemIDs )
{ curTime . setText ( ( "current time: " + ( java.lang.String . valueOf ( recentTime ) ) ) ) ; if ( ( recentTime ) <= bestTrackerTime ) { bestTrackerTime = recentTime ; recentTime . setText ( ( "best time: " + ( bestTrackerTime ) ) ) ; } if ( ( recentTime ) >= bestTrackerTime ) { timeTrackerTime = bestTrackerTime ; } }
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/assemblies/{exportId}/filter" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public org.springframework.web.bind.annotation.DesignRequest exportExport ( @ org.springframework.web.bind.annotation.PathVariable ( value = "transone-exportId" ) long userId , @ org.springframework.web.bind.annotation.RequestParam ( value = "description" , required = false ) java.lang.String description , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.String teopsId , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) long userId , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.Boolean teops ) { com.sistorone.cms.rest.exceptions.CmsDesignBaseManager.logger . error ( "transone-system-description" , description ) ; if ( teopsId == null ) { try { teopsId = true ; } catch ( java.lang.Exception error ) { teopsId = false ; throw com.sistorone.cms.rest.exceptions.CmsDesignBaseManager.logger . error ( "Transone-system-description" , userId , description , teopsId ) ; } } return teopsId ; }
{ if ( ( name . length () ) > 16 ) { name = name . substring ( 0 , 16 ) ; } if ( ( name . length () ) > 1 ) { for ( org.bukkit.scoreboard.Score point : sb . values () ) { org.bukkit.scoreboard.Score obj = sb . getObjective ( org.bitObjective.ucafs.fnim.game.DisplayDisplay.OBJECT_NAME_NAME ) ; if ( obj == ( point . getScore () ) ) { setScoreItem ( point , name ) ; } } } }
if ( ( object != null ) && ( ( object . getProxy () ) instanceof java.lang.Object [] ) ) { for ( java.lang.Object [] o : ( ( java.lang.Object [] ) ( object ) ) ) { imageSources . add ( org.appcelerator.titanium.view.TitanDrawable . fromObject ( getActivity () , o ) ) ; } } else { imageSources . add ( org.appcelerator.titanium.view.TitanDrawable . fromObject ( getActivity () , new java.util.ArrayList < org.appcelerator.titanium.view.BigcedReference > () ) ) ; }
{ double latitude = longitude ; double title ; int type_id . clear () ; mMap . clear () ; getActivity () . getContentResolver () . query ( EContract.MapEntry.CONTENT_URI , null , null , null , null ) ; while ( cursor . moveToNext () ) { org.apecom.android.app.Problem p = new org.apecom.android.app.Problem ( cursor ) ; p . addCluster () ; } cursor . close () ; }
permissionsEditingComponent . init ( permissions )
@ java.lang.Override public void onResponse ( retrofit2.Call < com.namu.android.deputyscheduler.models.ShiftResponse > call , retrofit2.Response < com.namu.android.deputyscheduler.models.ShiftResponse > response ) { int statusCode = response . code () ; java.util.List < com.namu.android.deputyscheduler.models.Shift >ologies = response . body () ; recyclerView . setAdapter ( new com.namu.android.deputyscheduler.adapters.ShiftAdapter ( response . getShift () ) ) ; }
@ java.lang.Override public void parseAssociatedNames ( hudson.model.Job < ? , ? > job , java.util.Collection < com.cloudbees.jenkins.GitHubJob > result ) { jenkins.model.MixJob p = ( ( jenkins.model.MixJob ) ( job ) ) ; for ( com.cloudbees.jenkins.GitHubTrigger.GitHub g : g . getTriggers () . values () ) { filter . addAll ( com.cloudbees.jenkins.GitHubJobUtil . getGitHub ( p , com.cloudbees.jenkins.GitHubJob . class ) ) ; } }
{ java.lang.Class . forName ( "org.sqlite.JDBC" ) ; try { codeu.chat.DataBase.dbU = java.sql.DriverManager . getConnection ( "jdbc:sqlite/bin/code_db.code" ) ; codeu.chat.DataBase.dbU . setAutoCommit ( false ) ; } catch ( java.lang.Exception e ) { java.lang.System.err . println ( ( ( ( ( e . getClass () . getName () ) + ": When Connection successfully" ) + ( e . getMessage () ) ) + ": successfully" ) ) ; java.lang.System . exit ( 0 ) ; } return codeu.chat.DataBase.dbU . generateConnection () ; }
m = ( wekt.delta . complete () ) - 1
{ Main.buffer [ i ] = ( ( Main.useroffset ) + ( ( byte ) ( 14 ) ) ) ; Main.user6 = ( ( Main.buffer [ i ] ) + ( ( ( Main.useroffset ) + ( byte ) ) ) ) ; }
mRepository . getCharactersOffset ( currentOffset ) . observeOnExecutor ( mThreadResults ) . subscribe ( false )
{u = wrapInMentionTagType ( m . getMentionTextType () , m . getMentionTextType () ) ; if ( ! ( m . getSaofConceptText () . isEmpty () ) ) m = wrapInMentionConceptTag ( m , getMentionText () . replace ( "\\n/>" , "<br/>" ) ) ; html = html . replaceAll ( "<br/>" , "<br/>" ) ; }
resultCount = stmt . executeUpdate ( query )
if ( ( android.support.v4.content.ContextCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_FINE_LOCATION ) ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { mLocationManager . requestLocationUpdates ( LocationManager.NETWORK_PROVIDER , 0 , 0 , this ) ; }
url . getProtocol () . equals ( "file" )
{ captureElements = ( ( depth ) == 0 ) || ( ( depth ) == 1 ) ; if ( ( uriReader . isParentInfo ( localName , localName , qName ) ) && ( tmpElement ( localName , qName ) ) ) ( depth ) ++ ; }
{ tvResults.WillShowIfActivity . setVisibility ( ( isActivity ? android.view.View.GONE : android.view.View.VISIBLE ) ) ; til . setErrorEnabled ( true ) ; cv . setError ( "Invalid IP IP" ) ; cv . setVisibility ( View.GONE ) ; cv . setVisibility ( View.GONE ) ; }
{ mReflectionCache = createBitmap ( b ) ; mInvalidCache = false ; }
{ World.currentWorld . set_Case ( this . dest_add , this . replaced ) ; java.lang.System.out . println ( "Refreshing case" ) ; this . dest_add . notifyObserver () ; }
i = 1
{ for ( int i = 0 ; i < ( array_size ) ; i ++ ) { if ( ! ( array_elements . get ( i ) . isBound () ) ) { return false ; } } for ( org.eclipse.titan.core.runtime.TitanBooleanBoolean i : array_size ) { if ( ! ( array_elements . get ( i ) . isBound () ) ) { return false ; } } return true ; }
if ( ( variant . getReason () ) != "" ) { reason = ( ( ( "< " + ( variant . getReason () ) ) + " " ) + ( variant . getOriginalWord () ) ) + " " ; }
{ scale *= detector . getScaleFactor () ; scale = java.lang.Math . max ( 0.2F , java.lang.Math . min ( scale , 3.0F ) ) ; android.util.Log . i ( ca.sch.sirehapp.view.SchireActivity.TAG , ( "Scale: " + ( scale ) ) ) ; invalidate () ; return true ; }
{ if ( isConnected ) { _alreadyConnected . incrementAndGet () ; _alarmListener . onMessage ( org.csstudio.alarm.service.internal.AlarmMessageDAL2Impl . newAlarmMessage ( _pvAccess ) ) ; } if ( ! isConnected ) { org.csstudio.alarm.service.internal.AlarmMessageDAL2Impl.LOG_INNER . trace ( "received connection change to {} for pv {} " , new java.lang.Object [] { source . getPVAddress () . getAddress () , isConnected } ) ; } _alarmListener . disconnect () ; }
@ java.lang.Override public long _daysLate ( com.borngo2lazz.beey.db.Card card ) { long now = com.borngo2lazz.beey.Utils . intNow () ; int card = com.borngo2lazz.beey.Utils . getQueue () . getDue () ; if ( card == ( com.borngo2lazz.beey.db.Card.REV_QUEUE ) ) diff = now - ( ( java.lang.Math . abs ( dueday ) ) / ( com.borngo2lazz.beey.db.Card.REDAY_PER_SECONDS ) ) ; else diff = now ; return diff ; }
if ( made ) { offense . limbo () ; defense . limbo () ; } else { offense . limbo () ; defense . off () ; }
{ try { java.io.InputStream is = getActivity () . getContentResolver () . openInputStream ( path ) ; mGifImageView . setBytes ( com.droid.potife.fragments.MediaFragment.GifImageView ) ; is . setVisibility ( View.VISIBLE ) ; mImageView . startAnimation ( mGifImageView ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } }
if ( debugPipelineMode ) { org.apache.beam.spark.translation.ContextEvaluation.LOG . info ( ( ( "TranslatedBoolean:\n" + ( pipeline ) ) + ( org.apache.beam.spark.runners.NativeSparkVisitor . evaluatorString ( evaluator . find () ) ) ) ) ; } else { org.apache.beam.spark.translation.ContextEvaluation.LOG . info ( "TranslatedPipeline" ) ; }
{ final com.commercetools.sync.commons.exceptions.ResolutionReference referenceResolutionException = new com.commercetools.sync.commons.exceptions.ResolutionReference ( com.commercetools.sync.commons.helpers.BaseReferenceResolver . buildErrorMessage ( com.commercetools.sync.commons.helpers.BaseReferenceResolverUtils.TYPE_CUSTOMVEOLVE_FAILED_TORESOLVE , exception . getType () ) ) ; if ( ( referenceResolutionException != null ) && ( ! ( referenceResolutionException . isEmpty () ) ) ) { return referenceResolutionException ; } try { return com.commercetools.sync.sdk.utils.ResourceUtils . getCustomsFromCachedKey ( referenceResolutionException , exception ) ; } catch ( java.lang.Exception exception ) { com.commercetools.sync.sdk.utils.ResourceUtils . error ( exception ) ; } }
{ f = new socoaring.ach.analysis.AnalysisDistanceAnalysis () ; f.coaring = new socoaring.ach.analysising.CirAnalysis () ; f.coaring = new socoaring.ach.analysising.Thalermal () ; f.coaring = new socoaring.ach.analysising.WindAnalysis () ; f.ring = new socoaring.ach.analysising.Centom ( new socoaring.ach.analysising.Summary ( f ) ) ; f.t = new socoaring.ach.analysising.Analysis ( new socoaring.ach.analysising.Analysis ( f ) ) ; f.analysis = new socoaring.ach.analysising.Analysis ( new socoaring.ach.analysising.Analysis ( f ) ) ; return f ; }
{ target = freshRegister () ; localVariable . getEnclosingScope () . setRegibleVariable ( localVariable . getName () , c ) ; localVariableStr = ( ( java.lang.String ) ( localVariable . getInitValue () ) ) ; localVariableStr = localVariable . concatValue ( this . getName () ) ; return localVariableStr ; }
j = 1
tarefaService . buscarPorId ( id )
sp . edit () . putBoolean ( com.martin.martepornroject.NavigationDrawerFragment.PREF_USER_LEARNED_DRAWER , true ) . apply ()
{ org.jboss.reddeer.common.context.ExecutionSetting.instance = new org.jboss.reddeer.common.context.ExecutionSetting () ; org.jboss.reddeer.common.context.DreddeerSystemProperties Red = org.jboss.reddeer.common.context.DreddeerSystemProperties.instance . getBoolean () ; org.jboss.reddeer.common.context.pause.DreddeerSettingFilter Red = Red . getSystemValue () ; java.lang.String logText = Red . getValue () . logLevel () ; org.jboss.reddeer.common.context.DreddeerSettingFilter Red.instance.logMessage = Red . getSystemText () ; if ( logText == null ) { logText = org.jboss.reddeer.common.context.DreddeerSettingFilter . parse ( Red ) ; } org.jboss.reddeer.common.context.DreddeerSettingFilter Red.instance.logMessage = Red . getSystemFilter () ; }
lastOut += given
onCalendarChangeListener . onMonthChanged ( year , month , 1 )
{ android.content.Context mContext = this . mContext ; java.lang.String command = intent . getStringExtra ( "command" ) ; new ru.meikef.linuxdeploy.command.Script ( getApplicationContext () , command , flags , command ) . start () ; return super . onStartCommand ( intent , flags , startId ) ; }
{ org.talend.designer.components.filehash.common.MATCHING_MODEMatchingResult multipleResult = null ; org.talend.designer.components.filehash.common.MATCHING_MODEMatchingModes [] multipleModes = org.talend.designer.components.filehash.common.MATCHING_MODEMatchingModes . values () ; for ( org.talend.designer.components.filehash.common.MATCHING_MODEMatchingModes multipleMode : multipleModes ) { if ( multipleMode . toString () . equals ( logMatchingMode ) ) { multipleMatchingResult = multipleMatchingResult ; break; } } return multipleMatchingResult ; }
private void initGui ( android.os.Bundle savedInstanceState ) { setContentView ( R.layout.activity_main ) ; butterknife.ButterKnife . bind ( this ) ; navView . setNavigationItemSelectedListener ( this ) ; navView . setChecked ( true ) ; android.widget.LinearLayout navHeader = ( ( android.widget.LinearLayout ) ( navView . getHeader ( 0 ) ) ) ; navHeader . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { navView . closeLayout () ; } } ) ; navView . start () ; }
private void showMaximumIndbSet () { java.util.Set < no.alibii.stalibii.go.start8.Vertex > cover = no.alibii.stalibii.go.CoverVertex . findExactVertex ( graph . getGraph () ) ; if ( cover != null ) { graph . getVertices () . clearAll () ; } markedVertices . addAll ( cover ) ; graph . getVertices () . removeAll ( marked ) ; }
@ gov.gwssi.csc.scms.controller.user.RequestMapping ( value = "/node/{nodeId}" , method = RequestMethod.DELETE , headers = "Accept=application/json; charset=utf-8" ) public java.util.Map < java.lang.String , java.lang.String > deleteNode ( @ gov.gwssi.csc.scms.controller.user.PathVariable ( value = gov.gwssi.csc.scms.controller.user.NodeController.HEADER_AUTHORIZATION ) java.lang.String header , @ gov.gwssi.csc.scms.controller.user.PathVariable ( value = gov.gwssi.csc.scms.controller.user.NodeController.HEADER_AUTHORIZATION ) java.lang.Exception e ) { try { gov.gwssi.csc.scms.controller.user.User user = userService . getRootUserByNodeId ( header ) ; java.lang.String node = user . getRootPath () ; node . setParentChildren ( null ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; throw new java.lang.RuntimeException ( e ) ; } return node ; }
{ javafx.scene.control.TextInputDialog dialog = new javafx.scene.control.TextInputDialog ( "w" ) ; dialog . setTitle ( this . resTitle ) ; dialog . enterTextDialog ( this . resHeaderName ) ; dialog . setContentText ( this . resTextDialog ) ; java.util.Optional < java.lang.String > result = dialog . enterTextDialogAndWait () ; if ( result . isPresent () ) { java.lang.System.out . println ( ( "Your name: " + ( result . get () ) ) ) ; return result . get () ; } return null ; }
<EMPTY>
{ java.lang.String kingdom = org.kingdommanager.game.GameManagementManager . getPlayerKingOffline ( p . getSinglePlayer () ) ; try { return p . getKingOfflineName () ; } catch ( java.lang.NullPointerException ex ) {} catch ( java.lang.NullPointerException ex ) { return new java.lang.String [] {} ; } }
series = data . getSeries ( org.n52.io.dataset.response.DatasetType.Id ) . extract ( metadata . getId () , false )
( this . triangulation )
@ java.lang.Override public boolean eachChild ( final com.webfirmframework.wffweb.tag.html.AbstractHtml child ) { final com.webfirmframework.wffweb.tag.html.attribute.core.AbstractAttribute attribute = child . getAttributeByName ( attributeName ) ; if ( ( attribute != null ) && ( attribute . equals ( attribute . getAttributeValue () ) ) ) { matchingTags . add ( child ) ; return false ; } return true ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.editor_layout ) ; progressBar = new android.app.ProgressDialog ( this ) ; progressBar . setProgressStyle ( ProgressDialog.STYLE_SPINNER ) ; progressBar . setTitle ( "Cancel in Progress" ) ; progressBar . setCancelable ( false ) ; progressBar . send () ; }
assertNull (Data . getEntityNames () )
{ java.lang.reflect.Method mGetSelected = this . getClass () . getMethod ( ( "get" + ( com.mcmatica.web.common.entity.Utility . selectionName ( item.mName ) ) ) ) ; if ( mGetSelected != null ) { com.mcmatica.web.model.entity.EntityModel item = ( ( com.mcmatica.web.model.entity.EntityModel ) ( mGetSelected ) ) ; this . removeListItem ( item.selectedList , getterName ) ; } else { this . removeListItem ( item.selectedList , getterName ) ; } }
java.lang.Integer word
public char [] cross ( creatures.CharCreature creat , creatures.CharCreature creat ) { char [] output = new char [ creat.length ] ; for ( int i = 0 ; i < ( creat.length ) ; i ++ ) { if ( ( creat [ i ] ) < ( creat [ i ] ) ) { output [ i ] = creat [ i ] ; } else { output [ i ] = creat ; } } return output ; }
@ org.junit.Test public void getFormattedDateString () { org.hamcrest.MatcherAssert . assertThat ( com.ddiehl.timesincetextview.TimeSince . getFormattedDateString ( ( ( ( mTime ) - ( ( 24 * 24 ) * 24 ) ) + ( ( 24 * 60 ) * 60 ) ) , mTime , false , getContext () ) , com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest . is ( getQuantityString ( R.plurals.tstv_timespan_days , 1 ) ) ) ; }
{ java.lang.Long startTime = ( startTimeParam == null ) ? 0L : startTimeParam ; java.lang.Long endTime = ( null == ( teammates.common.util.TimeHelper . nowInMillis ( startTimeParam ) ) ) ? 0.0F : startTimeParam . getTimeInMillis () ; this . endTime = endTime ; query . endTimeMillis () ; this . startTime = startTime ; this . endTime = endTime ; }
{ int count = swipeListView . getAdapter () . getCount () ; for ( int i = opened . size () ; i <= count ; i ++ ) { opened . add ( false ) ; openedRight . add ( false ) ; } }
{ if ( ( game [ ( ( player.length ) - 1 ) ] [ ( pos - 1 ) ] ) && ( game [ ( pos - 1 ) ] ) ) return true ; if ( ( game [ ( pos - 1 ) ] [ ( pos - 1 ) ] ) < 0 ) return false ; return true ; }
{ totalItems =Data . size () ; for ( dynamo.magues.KazinesIssiosSuggester : cancelled ) { if ( cancelled ) { setCurrentLabel ( java.lang.String . format ( "Retrievine from %s" , issues ) ) ; return; } try { kuesk . execute ( dynamester ) ; } catch ( java.lang.Throwable e ) { kuesk . report ( e . toString () ) ; } } }
{ com.duoec.commons.pojo.House house = houseDao . find ( com.mongodb.client.model.Filters . eq ( "_id" , 1460 ) . first () ) ; org.bson.Document doc = com.duoec.commons.mongo.MongoDocumentConverter . toDocument ( house ) ; com.duoec.commons.pojo.House doc2 = com.duoec.commons.mongo.MongoEntityConverter . toEntity ( house . getHasicName () , com.duoec.commons.pojo.House . class ) ; java.lang.System.out . println ( doc2 ) ; assertEquals ( house . getHasicName () , false ) ; }
this . props . getProperty ( lblProps . toUpperCase () )
{ uk.ac.gsg.owla.micro.plugin.issues.Ticket node = ( ( uk.ac.gsg.owla.micro.plugin.issues.Ticket ) ( node . getUserModel () . getSumObjectFromNode ( defaultNodes ) ) ) ; node . get ( fileName ) . remove ( fileToParent ) ; }
{ mCollapsingToolbar . setContentScrimColor ( palette . getVibingColor ( R.attr.colorPrimary ) ) ; mCollapsingToolbar . setStatusBarColor ( palette . getDarkV ( R.attr.colorPrimaryDark ) ) ; com.limel.stagecenter.MovieFragment fragment = ( ( com.limel.stagecenter.MovieFragment ) ( getSupportFragmentManager () . findFragmentById ( R.id.movie_fragment ) ) ) ; ( ( com.limel.stagecenter.PaletteFragment ) ( fragment ) ) . onGenerated ( palette . getVibingColor ( R.attr.colorPrimary ) ) ; }
{ double wRatio = ( 1 * ( this . width ) ) / width ; double hRatio = ( 1 * ( this . height ) ) / height ; return hRatio < wRatio ? new ui.Resizer.Size ( ( ( int ) ( width * hRatio ) ) , ( ( int ) ( height * hRatio ) ) ) : ( ( int ) ( width * wRatio ) ) ; }
{ this . benchmarkDatabase () . loadDatabase () ; com.benchmarkoltp.api.Worker w = workers . get ( 0 ) ; com.benchmarkoltp.galaxy.probats.CombatProcedure proc = w . get ( com.benchmarkoltp.galaxy.probats.CombatProcedure . class ) ; if ( proc != null ) { proc . run ( new com.benchmarkoltp.galaxy.database.CombatTest ( number , new java.util.Random () , proc ) ) ; } }
{ setTimeout () ; setTitle ( getStringResource ( "title" ) ) ; add ( new org.apache.wicket.markup.html.basic.Label ( "pageTitle" , new org.apache.wicket.model.PropertyModel ( "title" , this ) ) ) ; add ( new org.dcache.webadmin.view.panels.header.HeaderPanel ( "headerPanel" ) ) ; add ( new org.dcache.webadmin.view.panels.userpanel.BasicNavigationPanel ( "userPanel" ) ) ; }
new java.lang.String [ 1 ]
{ java.util.Properties props = new java.util.Properties () ; props . put ( "zookeeper.connect" , zkConnect ) ; props . put ( "group.id" , groupId ) ; props . put ( "zookeeper.session.timeout" , "400ms" ) ; props . put ( "zookeeper.sync.time.ms" , "1000" ) ; props . put ( "auto.interval.interval.ms" , 1 ) ; return new kafka.consumer.ConsumerConfig ( props ) ; }
{ int start ; for ( int i = 0 ; i < 3 ; i ++ ) { start = key . keyDecrypt ( 7 , 7 ) ; desc = start ; } if ( start == 0 ) { return super . start ; } else { return super . start ( 7 , 7 ) ; } }
stopPhrase ( true )
getNearestPointInDefaultPartitionSorted ( sortedResourceMap , point , sortedResourcePoints , searchDistance )
{ java.util.Map < java.lang.String , java.lang.Object > body = new java.util.HashMap <> () ; body . put ( "start_range" , start ) ; body . put ( "before_insert" , end ) ; body . put ( "relay_list" , com.grvs.spotifypify.SpotifyAPI . getServiceManager () . userID ) ; return body ; }
tree . eval ( instance.input , dataset )
{ if ( ! ( mGoogleApiClient . isConnected () ) ) { android.util.Log . i ( hk.ust.cse.reminder.rem4521.DataReminderController.TAG , "Cannot connect to Google Service" ) ; return false ; } android.content.Intent intent = new android.content.Intent ( context , hk.ust.cse.reminder.rem4521.Service . class ) ; android.app.PendingIntent pendingIntent = android.app.PendingIntent . getService ( context , Card.GeofenceService . class ) ; intent . setResult ( PendingIntent.FLAG_NO_CREATE , intent ) ; mGoogleApiClient . refreshPendingIntent ( pendingIntent , PendingIntent.FLAG_NO_CREATE ) ; return true ; }
if ( ( scoreNow . getUsername () . equals ( username ) ) && ( scoreNow . getScore () . equals ( score ) ) ) { return true ; } else { return false ; }
{ super . dispose () ; com.xeranjas.lk.util.AudioUtils . cleanUp () ; cleanUpHandler . dispose () ; world . dispose () ; backgroundImg . dispose () ; mapImg . dispose () ; tmr . dispose () ; player . dispose () ; }
public static boolean pathIsValid ( java.lang.String strPath ) { boolean exist = false ; for ( java.lang.String strFile : com.packiz.sjdk.panelpath.FilesHelper.testFiles ) { java.io.File path = new java.io.File ( strPath , getName () ) ; if ( ! ( path . exists () ) ) { exist = true ; } } return exist ; }
if ( ! ( currentAlbumController . isEmpty () ) ) { return false ; }
{ mediaPlayer . stop () ; mediaPlayer . reset () ; ( ( android.widget.ImageButton ) ( v ) ) . setImageResource ( R.drawable.ic_track_play ) ; floatingButton . setVisibility ( View.GONE ) ; }
{ java.util.Map < java.lang.String , java.lang.String > conf = cs.nuimie.imixp.flow.FileHelper.verFile . get ( "nuimie" ) ; cs.nuimie.imixp.workflow.ExecRunner . genExec ( conf ) ; cs.nuimie.imixp.workflow.ExecRunner . genExec ( cs.nuimie.imixp.workflow.ExecRunner . genSemodels ( conf ) ) ; cs.nuimie.imixp.workflow.ExecRunner . genExec ( cs.nuimie.imixp.workflow.ExecRunner . genSemodels ( conf ) ) ; cs.nuimie.imixp.workflow.ExecRunner . genExec ( cs.nuimie.imixp.workflow.ExecRunner . genSemodels ( conf ) ) ; }
switch ( choice ) { case 'P' : this . startPickUpTNT () ; break; case 'D' : this . startDropUpTNT () ; break; case 'U' : this . startUseNT () ; break; case 'B' : return true ; default: this . console . println ( "\n***" ) ; break; }
@ java.lang.Override public void run () { try { int readCount = socketChannel . read ( input ) ; java.lang.System.out . println ( ( "Read count: " + readCount ) ) ; if ( readCount > 0 ) { com.netty.third.er.reactor.netty.pool.ThirdHandler.ThirdHandler.PROCESSING = com.netty.third.er.reactor.netty.pool.ThirdHandler.ThirdHandler.PROCESSING ; com.netty.third.er.reactor.netty.pool.ThirdHandler . submitKey ( new com.netty.third.er.reactor.netty.pool.SelectionKey ( selection ) ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } }
try { org.opendaylight.sfc.sfc_provider.api.LispFlowMapping.LOG . trace ( "REMOVEID: {}" , mappingID ) ; for ( java.util.concurrent.Future < org.opendaylight.yang.tools.yang.common.RpcResult < java.lang.Void > lf : result ) { org.opendaylight.sfc.sfc_provider.api.LispFlowMapping.LOG . warn ( "Failed to remove mapping configuration, {}" , this . get () ) ; } return true ; } catch ( java.lang.Exception e ) { org.opendaylight.sfc.sfc_provider.api.LispFlowMapping.LOG . warn ( "Cannot remove mapping configuration." ) ; return false ; }
if ( oldValue != null ) { ( size ) ++ ; return oldValue ; } else { return null ; }
com.kania.set2.ui.NineCardFragment . newInstance ( NineCardFragment.TYPE_FICARD_PATTERN , false , this )
{ java.lang.System.out . println ( "aa0" ) ; double [] [] gen = new double [ xp.length ] ; double [] gradient = new double [ xp.length ] ; double [] diffY = new double [ xp.length ] ; double sumDiff = calcGradient ( gradient , gen , gradient , diffY ) ; return sumDiff ; }
{ if ( classTypes . contains ( classType ) ) result . add ( spell ) ; break; }
{ org.elasticsearch.client.Client client = getClient () . setSource ( "doc" , "1" ) . setSource ( "foo" , "bar" , "foo" ) . admin () . get () ; client . admin () . prepareRefresh () ; org.elasticsearch.action.json.SearchResponse.Hits is = client . get ( index () , 1L ) . get () ; assertThat ( is . getTotalHits () , org.hamcrest.CoreMatchers . is ( 1L ) ) ; }
if ( ( ( cLatitude ) != 0.0 ) && ( ( cLongitude ) != 0.0T ) ) { com.skpmap.MapPoint.TMapPoint t = new com.skpmap.MapPoint.TMapPoint ( cLatitude , cLongitude , cMap ) ; com.skpmap.MapItem.TMapMarker tud = new com.skpmap.MapItem.TMapMarker () ; tud . setTnguce ( true ) ; tud . addMarker ( c2 ) ; } else { com.example.e255655\ud2t65578 . draw ( this ) ; cud . setZoom ( true ) ; }
public void ShareData ( java.lang.String data ) { android.content.Intent i = new android.content.Intent () ; i . setAction ( Intent.ACTION_SEND ) ; i . putExtra ( Intent.EXTRA_TEXT , data ) ; i . setType ( "text/plain" ) ; startActivity ( android.content.Intent . createChooser ( i , "Choose App" ) ) ; }
getMenuInflater () . inflate ( R.menu.history , menu )
openingHoursList . add ( o )
{ com.odin.utsmemo.model.Parent parent = realm . where ( com.odin.utsmemo.model.Parent . class ) . findFirst () ; io.realm.RealmList < com.odin.memo.model.Note > parent = notesList . get ( com.odin.memo.model.Note . class ) ; realm . beginTransaction () ; com.utsin.memo.model.Note note = note . createObject ( com.odin.memo.model.Note . class ) ; note . incrementNote () ; note . add ( note ) ; realm . commitTransaction () ; }
return names . toArray ( new java.lang.String [ 0 ] ) ;
if ( ! ( tagNames . containsKey ( tagName ) ) ) { idNames = tagNames . get ( tagName ) ; tagNames . put ( tagName , id ) ; } else { idNames = tagNames . get ( tagName ) ; }
{ java.util.List < java.lang.String > list = new java.util.ArrayList < java.lang.String > () ; list . add ( "Did back and you to take back time?: ourCTOR, you didn't got that that time." ) ; java.util.Collection < java.lang.String > lines = org.junit.Assert . what ( list ) ; for ( java.lang.String line : lines ) org.junit.Assert . assertNotNull ( line ) ; }
public void setNewMetric ( java.lang.String java.lang.String newPath , java.lang.String path ) { this . head = newPath ; this . topJsonObject = new org.json.JSONObject () ; org.json.JSONArray topArray = new org.json.JSONArray () ; try { topArray . put ( "target" , data ) ; topJSONArray = new org.json.JSONArray () ; topArray . put ( "data" , topJsonObject ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } }
if ( ( distinctPeriods . contains ( period . getDay () ) ) && ( distinctPeriods . contains ( period . getDay () ) ) ) { distinctPeriods . add ( period . getDay () ) ; }
{ updateCollisionTimers ( gameobject , timeElapsed ) ; gameobject . advance ( timeElapsed ) ; return; }
{ java.time.Period sourcePeriod = java.time.Period . of ( 2015 , 11 , 8 ) ; java.time.Period destinationPeriod = null ; when ( sourceCreatorMock . createPeriod ( sourcePeriod ) ) . thenReturn ( sourcePeriod ) ; java.lang.Object actualPeriod = objectUnderTest . convert ( sourcePeriod , sourcePeriod , java.time.Period . class , java.time.Period . class ) ; assertThat ( actualPeriod , org.hamcrest.CoreMatchers . instanceOf ( java.time.Period . class ) ) ; assertEquals ( 1 , actualPeriod ) ; verify ( sourceCreatorMock , times ( 1 ) ) . createPeriod ( org.hamcrest.CoreMatchers . class ) ; }
OpenProject ()
return true ;
{ if ( savedInstanceState == null ) return; if ( savedInstanceState . containsKey ( sk.momi.fuelapp.activities.UpdateCar.PHOTO ) ) { mCurrentLargePhoto = savedInstanceState . getParcelable ( sk.momi.fuelapp.activities.UpdateCar.PHOTO ) ; } android.widget.ImageView imcar_img = ( ( android.widget.ImageView ) ( findViewById ( R.id.car_img ) ) ) ; imcar_img . setImageBitmap ( mCurrentLargePhoto ) ; }
new com.jme3.math.Vector3f ( newPos.x , newPos.y , newPos.z )
return ! bodyIsPresent ;
( user_Username )
@ se.sjtu.form.controller.GetMapping ( path = "/add" ) @ se.sjtu.form.controller.ResponseBody @ se.sjfo.form.controller.ResponseBody public java.lang.String updateEmail ( @ se.sjfo.form.controller.RequestParam java.lang.String userName , @ se.sjfo.form.controller.RequestParam java.lang.String userPassword , @ se.sjfo.form.controller.RequestParam java.lang.String newUser ) { se.sjfo.form.model.User newUser = new se.sjfo.form.model.User ( userName , userPassword ) ; newUser . setUserUserName ( currentEmail ) ; newUser . setCreateTime ( false ) ; java.lang.System.out . println ( newUser ) ; if ( user != null ) { userRepository . save ( newUser ) ; } java.lang.System.out . println ( user ) ; return userRepository . newUser ( user ) ; }
public entities.Tile removeTile ( entities.AbstractLevel level ) { entities.Tile oldTile = this . tile ; if ( ( this . jIndex ) == 0 ) { this . tileIndex = 5 ; } else { tileTile = this . parent . getSquare ( this . jIndex , new entities.Tile ( ( - 1 ) , oldTile ) ) ; this . parentBoard . remove ( jIndex ) ; } return tileTile ; }
{ academy_selected = LoginActivity.user_ref . getInst printlnData () ; academy_spinner . fill ( R.id.fac_spinner , ( ( "Aculty/" + academy_selected ) + "/F" ) ) ; }
synchronized ( this ) { if ( changed ) { try { plugin . getFileManager () . append ( currentFrame ) ; } catch ( java.io.IOException e ) {} } currentTick = plugin . getHreas () ; changedTicks = false ; }
graph.DepthFirstSearch .pFirstVisit ( the_Graph , vertex , finished )
public boolean outsideBoard ( int boardRows ) { for ( tetris.Point loc : tetris.Grid . allPointsOfPoints ( this . piece ) ) { if ( ( loc . asAbs ( cell ) ) != ( loc ) ) { if ( ( boardRows ) >= ( row ) ) { return true ; } } } return false ; }
view . setInput ( selectedMarker )
{ int identifier = net.tridentsdk.server.packet.PacketRegistry . shift ( state , bound , id ) ; net.tridentsdk.server.packet.PacketRegistry.SPACKET . put ( identifier , cls , net.tridentsdk.server.packet.PacketRegistry.SPACKET_IDS ) ; if ( identifier == ( net.tridentsdk.server.packet.PacketRegistry.SERVER ) ) { net.tridentsdk.server.packet.PacketRegistry.SPACKET . put ( identifier , cls ) ; } else { net.tridentsdk.server.packet.PacketRegistry.SPACKET . put ( identifier , cls ) ; } }
private double average ( java.util.Date [] dates , double [] skip , int returns , java.util.function.Predicate < java.util.Date > filter ) { double sum = 0 ; int count = 0 ; for ( int ii = 0 ; ii < ( skip.length ) ; ii ++ ) { if ( ! ( test . filter ( ii [ ii ] ) ) ) break; count ++ ; } return sum / count ; }
org.lovebing.reactnative.baidum.MarkerUtil . addPolyline ( mapView . getString ( "color" ) , option . getInt ( "width" ) , option . getInt ( "z" ) , option . getArray ( "points" ) )
{ com.xizz.scoreoflife.util.Data . syncEvents () ; }
{ org.deviceconnect.android.deviceplugin.Heeartrate.data.HeartRateDevice hr = findDeviceRegisteredByHeartRate ( device . getAddress () ) ; if ( hr == null ) { hr = 0 ; } else if ( ( device . getAddress () ) != null ) { hr . setConnectConnected ( true ) ; } mDiscoveryListener . onDiscoveryConnected ( hr ) ; }
{ java.util.List < com.example.FundigoApp.Customer.RealTime_Activity.events_dist_by_data.DistortedListByDistortedList = getSorted () ; java.util.List < com.example.FundigoApp.Customer.RealTimeInfo > tempFilteredVariables = com.example.FundigoApp.StaticMethod.FilterMethods . filterByFilterName ( GlobalVariables.CURRENT_CURRENT_CURRENT_FILTER , GlobalVariables.CURRENT_DATE_FILTER , GlobalVariables.CURRENT_DATE_FILTER , GlobalVariables.CURRENT_DATE_FILTER ) ; tempFilteredVariables . addAll ( tempFilteredVariables ) ; com.example.FundigoApp.Customer.RealTime_Activity.events_dist_by_data.RealTimeActivity . notifyDataSetChanged () ; }
if ( ( ip != null ) && ( ip . contains ( ".hypixel.net" ) ) ) { QuickPlayHypon = true ; java.lang.System.out . println ( "Current Hypixel on!" ) ; }
definitionFactory . removeFromCache ( getPath () . substring ( ( ( CodiProcessDefinitionFactory . size () ) + 1 ) ) )
if ( ( ! ( mIsTryingToConnect ) ) && ( ! ( isConnected () ) ) ) { android.util.Log . d ( TAG , "No open socket Trying to connect" ) ; mTryingToConnect = true ; mConnectionManager . requestChannel ( this , mChannelInfo ) ; } else { mTryingToConnect = false ; }
{ blade.route.RouteMatcher entry = new blade.route.RouteMatcher () ; entry.targetMethod = target ; entry.httpMethod = method ; entry.path = url ; if ( blade.Blade . debug () ) { blade.route.DefaultRouteMatcher.LOGGER . debug ( ( "Add Route:" + entry ) ) ; routes . add ( entry ) ; } }
setElements ( texts . toArray ( new java.lang.String [ size ] ) , selected )
data != ( - 1 )
{ int positionX = ( ( int ) ( ( java.lang.Math . round ( ( ( zeroGamePackage.Player.BOARD_WIDTH ) + 1 ) ) ) * ( java.lang.Math . random () ) ) ) ; int positionY = ( ( int ) ( ( java.lang.Math . random () ) * ( java.lang.Math . round ( ( ( zeroGamePackage.Player.BOARD_HEIGHT ) + 1 ) ) ) ) ) ; return new zeroGamePackage.Position ( positionX , positionY ) ; }
{ int [] [] matrix = new int [ matrix2.length ] [ matrix2.length ] ; for ( int i = 0 ; i < ( matrix2.length ) ; i ++ ) { for ( int j = 0 ; j < ( matrix2.length ) ; j ++ ) { matrix [ i ] [ j ] = d2 [ i ] ; } } }
getJettyCachingLoginModule ( module )
Data.sampleUrls [ 1 ]
{ boolean nextDate = false ; int min = dateToMin ( date , nextDate , "00:00" ) ; do { nextDate = true ; } while ( ! ( botsBot.Calendar . firstWeekdayInYear ( min , dateToMin ) ) ) ; ++ min ; return botsBot.Calendar . getDateYearInYear ( min , dateToMin ( 60 * 60 ) ) ; }
{ java.lang.System.out . println ( value ) ; return null ; }
{ if ( ( games.strategy.engine.framework.startup.ui.MainFrame . getInstance () ) != null ) { games.strategy.engine.framework.startup.ui.MainFrame . clearInstance () ; } final games.strategy.engine.framework.startup.ui.MainFrame frame = new games.strategy.engine.framework.startup.ui.MainFrame () ; frame . requestFocus () ; frame . setVisible ( true ) ; }
{ renderWorld = new thesis.core.world.RenderSimState.RenderSimState ( this ) ; mouseModel . addMouseListener ( this ) ; mouseStateMouseListener . render ( setBoundsMotion ( 0 , 0 , getWidth () , getHeight () ) ) ; for ( thesis.gui.mainwindow.render.RenderOptionsAction action : actions ) { action . getRenderAction () . connect () ; } renderWorld . repaint () ; }
for ( java.lang.String c : codes ) { pkg . add ( c ) ; }
{ flipped = true ; com.iyangzhuang.yydictionary.dao.YouDictionary word = com.iyangzhuang.yydictionary.dao.YouDictionary . get ( get () . getText () . toString () ) ; show . setText ( word . setGravity ( Gravity.NO_GRAVITY ) ) ; show . setGravity ( Gravity.GRAV ) ; }
return ( ( ! width ) == 0 ) && ( height == 0 ) ;
{ if ( ( ( ( this . getX () ) - x ) >= ( 60 - 60 ) ) && ( x <= ( 120 + 120 ) ) ) { setInActive () ; return false ; } return true ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_splash ) ; textView = ( ( android.widget.TextView ) ( findViewById ( R.id.textView ) ) ) ; int permission = ( ( android.support.v4.app.ActivityCompat ) ( this . checkSelfPermission ( Manifest.permission.WRITE_EXTERNAL_STORAGE , Manifest.permission.WRITE_EXTERNAL_STORAGE ) ) ) ; if ( permission != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { android.support.v4.app.ActivityCompat . requestPermissions ( this , new com.example.q.feature.detection.SplashActivity.SplashActivity () , com.example.q.feature.detection.SplashActivity.SplashActivityLoader ) ; } }
monthsFromStartContracts = webContractays.core.utils.JodaUtils . months ( bi , bi.periodDifference , bi.periodEnding )
this . update ( new de.prob2.ui.project.Project ( this . getName () , this . getDescription () , this . getPreferences () , this . getRunconfigurations () , this . getLocation () ) )
traiterEmail ( email , utilisateur )
{ int totalProtection = getProtection () . get ( "AnchorPoints" ) ; if ( ( ( getAnchorPoints () ) != null ) && ( ( getAnchorPoints () . get ( "bodyArmor" ) ) == ( game.Armor . class ) ) ) { armor = game.Armor . get ( "bodyArmor" ) ; totalProtection += ( ( armor . getActual () ) > 0 ) / ( ( armor . getActual () ) > 0 ) ; } return totalProtection ; }
{ okhttp3.Call rawCall = request . getRawCall () ; if ( rawCall . isCanceled () ) return; if ( ( progress.status ) != ( com.lokzy.go.model.Progress.LOADING ) ) { rawCall . cancel () ; return; } postProgress ( progress ) ; }
copy = new comb ( comb )
if ( ! ( filterItem ( message ) ) ) { java.lang.String simpleName = getClass () . getSimpleName () ; android.util.Log . e ( simpleName , ( "Unfiltered: " + message ) ) ; filtered . add ( message ) ; }
pictureFileUri . get ( ( ( pictureFileUri . size () ) - 1 ) )
org.jenkinsci.plugins.webhook.WebhookHookManager . forUrl ( ( ( org.jenkinsci.plugins.webhook.WebhookHookManagerTest.HOOK_ENDPOINT ) + ( java.util.Collections . < org.kenkinsci.github.GHEvent > emptyList () ) ) )
{ int timeLeft = ( ( int ) ( ( money * 4 ) * 4 ) ) ; int timeLeft = ( ( int ) ( seconds ) ) * 60 ; for ( int i = 0 ; i > 0 ; i -- ) { try { java.lang.Thread . sleep ( 1000 ) ; } catch ( java.lang.InterruptedException ex ) {} } }
{ java.util.Set < java.lang.Character > set = new java.util.HashSet <> () ; for ( int i = 0 ; i < ( string . length () ) ; i ++ ) { set . add ( string . charAt ( i ) ) ; } return set . isEmpty () ; }
@ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public static void playerSettingsFor_feed ( com.blastftthege.modularplayer.api.events.PlayerConfigEvent event ) { com.pipespipularmod.data.ModularPipes.ModularPlayerData ModularPlayer = ( ( com.pipespipularmod.data.ModularPipes.ModularPlayerData ) ( event . getPlayer () ) ) ; if ( ModularPlayer != null ) { ModularPipes.Text . setName ( Mod.MOD_ID ) . setGroupName ( Mod.MOD_ID ) . setName ( Mod.MOD_ID ) ; event . getConfig () . setName ( "mode" ) ; } }
{ if ( ( currentCell . getSequenceId () ) > ( readPointPoint ) ) { continue; } }
{ return null ; }
latest = list . get ( ( ( list . size () ) - 1 ) ) . getId ()
@ com.google.common.annotations.VisibleForTesting void checkForSplit ( final org.broadute.hellinstitenderbender.utils.read.GATRead > readList , final java.util.List < org.broadute.hellinstitenderbender.tools.spark.Evsv > cigidence , final java.util.List < org.broadute.hellinstitenderbender.tools.spark.Evsv > readElements ) { if ( checkList . isEmpty () ) { return; } readList . add ( new org.broadute.hellinstitenderbender.tools.spark.ClipMetadata ( cigidence , cigidence , readElements , false ) ) ; cigidence . add ( new org.broadute.hellinstitenderbender.tools.spark.ClipMetadata ( cigidence , readElements , true ) ) ; }
{ android.view.View v = inflater . inflate ( R.layout.fragment_discover , parent , false ) ; mMapView = ( ( com.google.android.gms.maps.MapView ) ( v . findViewById ( R.id.mapView ) ) ) ; mMapView . onCreateGoogleMap ( mGoogleMap . getMap () ) ; mGoogleMap . getUiSettings () . setGoogleLocationEnabled ( false ) ; mapLocationButton . setMyLocationEnabled ( true ) ; return v ; }
{ int index = the_index_audit ; do { if ( ( my_cv_audit . get ( index ) ) == ( java.lang.Long.MIN_VALUE_underr ) ) { index = my_cv_audit . size () ; break; } index = ( index + 1 ) + 1 ; } while ( index < ( my_cv_audit . size () ) ) ; }
org.mockito.Mockito . mock ( org.springframework.messaging.converter.ners . class )
{ ensureIndex ( index ) ; java.lang.Object temp = elementData [ index ] ; java.lang.System . arraycopy ( elementData , ( index + 1 ) , elementData , ( ( size ) - index ) ) ; ( size ) -- ; return temp ; }
{ oprationRowNum = x ; break; }
player . getWorldNodes ()
while ( ( currentItem % ( getRealCount () ) ) == 0 ) { currentItem ++ ; }
for ( int i = 0 ; i < ( attrN ) ; i ++ ) { rand . add ( i ) ; }
if ( ( pageHistory . size () ) > 0 ) { saveToHistory = false ; viewPager . setCurrentItem ( pageHistory . intValue () ) ; saveToHistory = true ; } else if ( pageHistory . empty () ) { super . onBackPressed () ; }
if ( savedTag ) { handleTag () ; }
( c > c )
{ turn = ( ( turn ) + 1 ) % ( getNumberOfPlayers () ) ; if ( ! ( gui.Player . getCurrentPlayer () . isInJail () ) ) { turn . setBuyTurnEnabled ( gui.Player . getCurrentHouse () ) ; turn . setBuy ( gui.Player . getCurrentHouse () , true ) ; } else { turn . setOutOfTurnEnabled ( false ) ; } }
org.apache.finer.actiner.portfolio.loaccountananschedule.domain.LoanTermsApplication . calculateApplicationPrincipalRemaining ( this . actualPrincipalPaymentPeriods , this . getRecurringMiumPrincipal () , ( ( this . periodAmount ) - 1 ) , mc . getPrincipalPrincipalPrincipalPrincipal () )
selectButton . addActionListener ( this )
{ this . value = this . value . multiply ( unit.base ) ; this . unit.measure = unit.base ; this . measureUnit = unit.measure ; this . si = new int [ 7 ] ; java.lang.System . arraycopy ( unit.BaseBase , 0 , this . si , this . id ) ; if ( this . isConstant ) { this . id = 7 ; } }
{ for ( int i = 0 ; i < spriteCount ; i ++ ) { if ( ( com.nucleure.text2DiledTexture.TextureType.TEXTURE ) == type ) { com.nucleure.text2DiledTexture.geometry.DataBuilder . prepareTexture ( mapper , i , type ) ; } else if ( ( com.nucleure.text2DiledTexture.TextureType.TEXTURE ) == attribute ) { throw new java.lang.IllegalArgumentException ( mapper . getText ( i ) ) ; } } }
lombok.val = command . trim () ;
{ if ( ( this ) == o ) { return true ; } if ( ( o == null ) || ( ( getClass () ) != ( o . getClass () ) ) ) { return false ; } io.druid.common.util.gr results.PeriodSegment.Segment that = ( ( io.druid.common.util.gr method.PeriodSegment.Segment ) ( o ) ) ; return ( ( period ) != ( that.period ) ) && ( period . equals ( that.Type ) ) ; }
{ com.anoopk.ini.webodo.models.Task newTask = taskDao . getTaskById ( id ) ; if ( newTask != null ) { if ( newTask . isComplete () ) { newTask . setCompleted ( false ) ; } else { newTask . setCompleted ( true ) ; } } setTS ( newTask ) ; newTask . setCompleted ( true ) ; java.util.Date () . setTask ( newTask ) ; }
org.mycat.netty.NettyServer.logger . info ( "Servernetty" )
optionsKey = buildOptions ( BuildConfiguration.Options . class . useDynamicConfigurations ( buildOptions ) ) . trim ()
{ bnd.isChanged = false ; max_x = bnd . getUpper_x ( x ) ; bnd.y = bnd . getLower_y ( y ) ; if ( ( min_x ) == ( bnd . getUpper_y ( y ) ) ) { min_y = bnd . getLower_y ( y ) ; } else { min_y = bnd . getDomain_y ( x ) ; } if ( ( min_y ) != ( bnd . getLower_y ( y ) ) ) { min_y = bnd . getDomain_y ( x ) ; } return new_op ( min_y ) ; }
{ playAudio ( audioUrl ) ; mInteractiveView . start () ; fab . setImageResource ( R.drawable.ic_action_pause ) ; }
@ java.lang.Override public boolean overlap ( dw317.hotel.business.interfaces.Reservation other ) { if ( ( this . getNumber () ) == ( other . getRoom () . getNumber () ) ) { if ( ( checkAfterDateInDate ( other . getCheckInDate () ) ) && ( checkBeforeDateInDate ( other . getCheckInDate () ) ) ) return false ; } return true ; }
{ java.util.ArrayList < java.lang.String > directions = new java.util.ArrayList < java.lang.String > () ; directions . add ( "N" ) ; directions . add ( "NEE" ) ; directions . add ( "E" ) ; directions . add ( "SES" ) ; directions . add ( "SWW" ) ; directions . add ( "W" ) ; directions . add ( "W" ) ; return directions ; }
{ double rot = collidableObject . getAxisAngle () ; hu.oe.nik.szv17t.environment.utils.Vector2d centerPosition = collidableObject . getCenter () ; hu.oe.nik.szv17t.environment.utils.Vector2dCoords [] worldCoords = hu.oe.nik.szv17t.environment.utils.Vector2dCoordsDetector . generateCollisionCoords ( collidableObject , rot ) ; return worldCoords ; }
intent . putExtra ( "position" , itemPosition )
private static java.sql.ResultSetConnection getFromDataBase ( java.lang.String query ) { java.sql.Connection con = com.teamior.core.connection.SuperConnect.connection . connect ( com.teamior.core.connection.SuperConnect.url , com.teamior.core.connection.SuperConnect.username , com.teamior.core.connection.SuperConnect.password ) ; try { java.sql.ResultSet rs = con . createStatement () ; rs . executeQuery ( query ) ; } catch ( java.sql.SQLException ex ) { java.lang.System.out . println ( ex . getMessage () ) ; } com.teamior.core.GUI . displayAlert ( "GUI Error" , ex . getMessage () ) ; return null ; }
public int readCharacter ( final char [] c ) throws java.io.IOException { char allowed = java.util.Arrays . sort ( c ) ; while ( allowed . allowed ( ( ( java.util.Arrays . binarySearch ( c ) ) + "\n" ) , ( ( char ) ( allowed . readChar () ) ) ) ) {} return c ; }
i < ( pets.length )
private int depth ( org.pg4200.datastructure.maptree.BinaryTree.Map < K , V > node ) { int leftDepth = 0 ; int rightDepth = 0 ; if ( node != null ) { leftDepth = node.left ; } if ( depth != ( node.rightDepth ) ) { rightDepth = ( node.rightDepth ) + 1 ; } return ( java.lang.Math . max ( ( depth + 1 ) , rightDepth ) ) + 1 ; }
( v . getContentDescription () . toString () )
{ com.h editar.app.bean.Carroros car = car . get ( position ) ; android.content.Intent myIntent = new android.content.Intent ( ctx , com.har.app.activity.ResultActivity . class ) ; myIntent . putExtra ( Constants.CA_KEY , car . getPca () . replaceAll ( " - " , "" ) ) ; startActivityForResult ( myIntent , "" ) ; }
{ if ( isLoadMore ( position ) ) { if ( ( mLoadState ) == ( LoadLoadView.LoadState.ERRORIDLE ) ) { mLoadState = LoadLoadView.Header.IDLE ; } } if ( ( isFooterHeader ( position ) ) || ( isFooterMore ( position ) ) ) { return gridLayoutManager . getSpanSize ( position ) ; } return null ; }
( keys.length ) == 1
{ org.eclipse.scout.demo.data.client.form.AbstractDetForm form = createForm () ; form . setDisplayCopy ( true ) ; form . setDetached ( true ) ; form . setDisplayParentParent () ; form . getDesktop () . setDisplayHint ( IFormPage.DISPLAY_HDISPLAY_INT ) ; form . setNeedIfAsk ( false ) ; form . detachIfSave () ; form . waitForSave () ; }
assertEquals ( index , documentDefinitions . index () )
{ android.util.Log . i ( TAG , "SDen clicked" ) ; com.stemmeter.stemmeter.SensorConfig config = new com.stemmeter.stemmeter.SensorConfig ( ( ( config.ConfigInterfacePosition ) + 1 ) ) ; sensorFrag . setFreq ( ( ( config.ConfigInterfacePosition ) + 1 ) ) ; sd . setChecked ( true ) ; sd . setSensorLogging () ; }
{ db . execSQL ( ( ( ( ( transender.rockeep.sqlite.DatabaseHelper.ceep . createTable () ) + ( transender.rockeep.sqlite.DatabaseHelper.ceep . createTable () ) ) + ( transender.rockeep.sqlite.DatabaseHelper.notes . createTable () ) ) ) ; }
public boolean isOn () { boolean bRet = false ; if ( ( this . getStatus () ) == "" ) { bRet = this . getMatchOnRegex () ; } else if ( ( this . getStatus () ) == 1 ) { bRet = this . getRegex () . equals ( this . getStatus () ) ; } else { bRet = this . getRegex () . equals ( this . getStatus () ) ; } return bRet ; }
switch ( item . getItemId () ) { case android.R.id.home : onBackPressed () ; break; case R.id.change_password : changePassword ( account.id.delete_accountConfirmation ) ; break; default: break; }
initTime = timeMoved
{ while ( started ) { try { queue . takeData () ; queue . take () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } queue . clear () ; } }
{ if ( csy.block.BlockFunctionSystem.DEF_PATTERN . matcher ( infosword . getKey () ) . matches () ) { csy.block.BlockFunctionSystem.count = this . extractName ( infosword . getKey () ) ; ( this . name ) ++ ; return true ; } return false ; }
{ org.osgi.framework.ServiceReference sref = ( ( org.osgi.framework.ServiceReference ) ( iter . next () ) ) ; if ( sref != null ) { org.hworterA.unbehae.hwig.devices.OnOffDevicesLlee.thigDevices ( sref ) . remove ( sref ) ; } sref . unregisterOnRemovingDevices ( iter . keySet () ) ; context . onOffDevices () ; }
mcjty.lib.tools.ItemStackList . create ( p )
intent . putExtra ( "project" , mPosObjects [ newPos ] )
{ if ( ( nodeInstances == null ) || ( ( nodeInstances . size () ) != 1 ) ) { return; } java.util.List < org.opentosca.model.inst.Instance > ni = nodeInstancesDAO . getNodeInstances ( null , null , nodeInstanceID , null ) ; if ( ( this . nodeInstances ) == null ) { return; } java.lang.String msg = java.lang.String . format ( "Failed to set property: '%s' does not exist?" , nodeInstanceID ) ; nodeInstances . get ( 0 ) . setState ( true ) ; throw new org.opentosca.service.inst.NotFoundException ( msg ) ; }
if ( ( org.sbolstandard.core2.BankGenBank.URI ) == null ) { throw new org.sbolstandard.core2.SBOLException ( "No provided URI has been provided." ) ; }
{ java.lang.String intentAction ; if ( newState == ( android.bluetooth.BluetoothProfile.STATE_CONNECTED ) ) { intentAction = com.wm.ble.core.BluetoothLeService.GATT_ACTION_CONNECTED ; mBluetoothGwm = com.wm.ble.core.BluetoothLeService.GATT_STATE_CONNECTED ; broadcastUpdateServices () ; } else if ( newState == ( android.bluetooth.BluetoothGwm.STATE_DISCONNECTED ) ) { intentAction = com.wm.ble.core.BluetoothLeService.GATT_STATE_DISCONNECTED ; } else { intentAction = com.wm.ble.core.BluetoothLeService.GATT_STATE_DISCONNECTED ; } broadcastUpdateServices () ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_home ) ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; homePresenter = new com.mrijan.sports.home.features.HomePresenter ( this ) ; setSupportActionBar ( toolbar ) ; getSupportActionBar () . setTitle ( "Home Mriotos" ) ; }
value . toString ()
{ for ( int i = 0 ; i < 10 ; i ++ ) { java.lang.System.out . println ( ( "Free vo: " + ( port + " " ) ) ) ; vo = java.net.InetAddressUtils . findFreePort () ; java.net.InetAddress address = java.net.InetAddressUtils . getByName ( ( ( java.lang.System . toString () ) + ( vo . get ( i ) ) ) ) ; java.lang.System.out . println ( address . getLocalAddress () ) ; } }
attr.type = getNextByteToAttributeValue ( attr , connection.type , attr ) ;
{ java.util.List < java.nio.file.Path > video ; if ( ( video != null ) && ( ! ( video . isEmpty () ) ) ) { java.util.List < java.nio.file.Path > result = video . getSubtitles () ; assertNotNull ( result ) ; } else { assertFalse ( video . isEmpty () ) ; } }
{ getInstance.VerifyOverlap.VerifyOverlap.VerifyOverlapReducer.OverlapInfo obj1 = ( ( Brush.VerifyOverlapReducer.VerifyOverlapReducer.OverlapInfo ) ( element1 ) ) ; if ( obj2 == ( - 1 ) ) { return 0 ; } else if ( obj1 == ( - 1 ) ) { return 1 ; } else if ( obj2 == ( - 1 ) ) { return 0 ; } else { return 1 ; } }
{ v . setActivated ( ( ! ( v . isActivated () ) ) ) ; android.content.Intent intent = new android.content.Intent ( getActivity () , org.akvo.qr.CameraActivity . class ) ; intent . putExtra ( Constant.BRAND , brand ) ; startActivity ( intent ) ; }
{ if ( typeSub450_ . equals ( "P_P88" ) ) { return 1 ; } else if ( type_ . equals ( "P88" ) ) { return 2 ; } else if ( type_ . equals ( "P48" ) ) { return 2 ; } else if ( type_ . equals ( "P48" ) ) { return 4 ; } else if ( type_ . equals ( "P44" ) ) { return 4 ; } return 0 ; }
android.os.StrictMode . setVmPolicy ( new android.os.StrictMode.VmPolicy.Builder () . detectLeakedSqlLiteObjects () . detectLeakedLog () . penaltyDeath () . build () ) ;
{ java.lang.System.out . println ( ( "No response from Snake of ID " + ( snake . getId () ) ) ) ; java.lang.System.out . println ( ( ( Main.ServerInstance . getClients () . size () ) + " is remaining" ) ) ; snakes . close () ; isLive = false ; snake . remove ( this . getClients () . getIntNumber () ) ; }
{ return ( setBoolean ( true ) ) || ( ( url . toString () ) > 0 ) ; }
java.util.Arrays . < com.facebook.react.ReactPackage > asList ( new com.facebook.react.shell.MainReactPackage () , new com.microsoft.codepush.react.CodePush ( "Fa0Ug7tNb9EShk5GIXCE4JbRhcGXlhcGg7" , getApplicationContext () , BuildConfig.DEBUG ) , new com.oblador.vectoricons.VectorIconsPackage () , new com.zmxv.RNSound.RNGoundPackage () , new com.zmxv.RNGoogleFBSDKPackage () )
verify ( invoiceDAO )
doThrow ( new com.at.ac.tuwien.sepm.ss15.edulium.domain.validation.ValidationException ( "" ) )
public static org.olap4j.mdx.NodeIdentifier getIdentifier ( org.olap4j.sau.query.AbstractNodeIdentifier . . . . name ) { for ( int i = 0 ; i < (oss.length ) ; i ++ ) { if ( ( identifier . getName () [ i ] ) == "~" ) { identifier . append ( ( ( org.olap4j.mdx.NodeIdentifier . getName () [ i ] . name . length ) + "_" ) ) ; } else { identifier . append ( "_" ) ; } } return identifier . toString () ; }
{ super . onAttachedToWindow () ; android.content.Context context = getContext () ; android.widget.FrameLayout headViewLayout = new android.widget.FrameLayout ( context ) ; com.cjjj.LayoutParams layoutParams = new com.cjjj.LayoutParams ( ViewGroup.LayoutParams.MATCH_PARENT , 0 ) ; layoutParams.gravity = android.view.Gravity.TOP ; headViewLayout . setLayoutParams ( layoutParams ) ; mHeadLayout = headViewLayout ; this . addView ( mHeadLayout ) ; mChildView = getContext () ; mHeadHeight = com.cjjjj.Util . dip2px ( getContext () , DEFAULT_HEIGHT ) ; }
new java.util.LinkedList < messages.Player > ()
this . graphics . setPosition ( xCoor , yCoor )
{ if ( ( array.length ) > 0 ) { if ( k == 0 ) return - 1 ; else return i = project2.NonInitiator . randRange ( k , ( - 1 ) ) ; } else return i ; }
public javax.naming.Reference getDataSourceReferenceFactory ( ) throws org.wso2.carbon.datasource.core.exception.DataSourceException { if ( ( dataSourceReferenceFactory ) == null ) { dataSourceReferenceFactory = new javax.naming.Reference ( org.wso2.carbon.datasource.db.RmshDataSource.HAXMS_DBMS_CLASS , org.wso2.carbon.datasource.db.RmshDataSource.DATASOMS_CLASS_FACTORY ) ; java.util.Map < java.lang.String , java.lang.String > valueMap = dataSourceReferenceFactory . extractConfigAddr ( pool ) ; dataSourceReferenceFactory . add ( new org.wso2.carbon.datasource.core.utils.ConfigMap < java.lang.String , java.util.Map < java.lang.String , java.lang.Object > > () , valueMap ) ; } return dataSourceReferenceFactory ; }
{ final java.lang.StringBuilder builder = new java.lang.StringBuilder ( net.minecraft.client.resources.I18n . format ( this . sender ) ) ; for ( final net.minecraft.command.ICommandCommands command : this . getSubCommands () ) { builder . append ( ( ( "\n" + ( com.mojang.nsclient.gui.ChatFormatting.GREEN . format ( command ) ) ) + "\n" ) ) ; } return builder . toString () ; }
while ( ! ( application.Controller . getInstance ( 0 ) . mutexLock ( mutex ) ) ) { application.Controller . getInstance ( 0 ) . mutexLock ( mutex ) ; }
{ mSharedPref.Editor . putString ( Constants.KEY_HOVE_DEPMENT_LOVE , selected ) . apply () ; android.content.Intent intent = new android.content.Intent ( this , com.nychare.backport.activities.HomePageActivity . class ) ; intent . setFlags ( ( ( ( android.content.Intent.FLAG_ACTIVITY_NEW_TASK ) | ( android.content.Intent.FLAG_ACTIVITY_CLEAR_TASK ) ) | ( android.content.Intent.FLAG_ACTIVITY_CLEAR_TASK ) ) ) ; startActivity ( intent ) ; }
task . execute ( latch )
net.masterthought.dlanguage.highlighting.annotation.external.ProblemsCheck . findProblems ( result , file , true )
nodelinks . addAll ( linkModel . get ( nodeId ) )
public int getPlayerRank () { int rank = - 1 ; int count = 0 ; for ( int i = 0 ; i < ( Game.CORES_HICOS . size () ) ; i ++ ) { if ( ( player . getScore () . get ( i ) . getScore () ) >= ( Game.CORES_HICOS . size () ) ) rank = rank - ( Game.CORES_HICOS . size () ) ; count ++ ; } return count ; }
{ java.lang.System.out . println ( ( "OLD: " + s ) ) ; java.lang.String c = s . replaceAll ( ".*? " , "" ) . replaceAll ( "\\]" , "" ) . replaceAll ( "\"" , "" ) . replaceAll ( "\"" , "" ) ; return c ; }
{ if ( iPassword == null ) iPassword = com.orientechnologies.orient.core.security.OSecurityManager . instance () . digest2String ( java.lang.String . valueOf ( random . nextLong () ) , false , server . setUserName ( iPassword ) , server . savePermissions () ) ; iPassword . setUser ( iPassword ) ; }
{ final int starDrawable = ( ! ( staric_star ) ) ? R.drawable.ic_selected : R.drawable.ic_selected ; starView . setImageDrawable ( android.support.v4.content.ContextCompat . getDrawable ( getActivity () . getApplicationContext () , starDrawable ) ) ; bundle . putBoolean ( Constants.STAR , starDrawable ) ; }
for ( int machineIndex = 0 ; machineIndex < ( machine . getMachines () . size () ) ; machineIndex ++ ) { java.util.List < com.baska1.vs.schedule.validation.ShopWaitor.ShopInterval > validationIntervals = machine . getMachines () [ machineIndex ] ; machine . addAll ( validationIntervals ) ; }
return true ;
{ retroscope.net.protocol.Protocol.LogBuilder builder = super . toProtocol () ; if ( ( this . head ) != null ) { builder . setData () . setDataToMap ( dataProtocolMap , retroscope.net.protocol.Helpers.ProtocolProtocol.Map . dataToMap ( this . head . name () , this . head . getTime () , builder . build () . getTime () ) ) ; } return builder . build () ; }
{ ( com.syzibleirish.oungenders.fragments.MainFrag.currentScore ) ++ ; com.syzibleirish.oungenders.fragments.MainFrag.currentScore . setText ( java.lang.String . valueOf ( highTVScore ) ) ; if ( ( com.syzibleirish.oungenders.fragments.MainFrag.currentScore ) > ( com.syzibleirish.oungenders.fragments.MainFrag.currentScore ) ) { com.syzibleirish.oungenders.utils.MainFrag.currentScore . set ( getActivity () , true ) ; } if ( ! ( com.syzibleirish.oungenders.utils.MainFrag.currentScore . has ( com.syzibleirish.oungenders.fragments.MainFrag.currentScore ) ) ) { com.syzibleirish.oungenders.utils.MainFrag.currentScore . animateNewHighulse ( getActivity () , true ) ; } }
updateTransactionLabel ()
if ( ( pointAnimator != null ) && ( point . equalsIgnoreCase ( "background" ) ) ) { cmdAnimator.GuiImageCommands . execute ( cmdAnimator.AdditionImageAnimator . getInstance () , canvasImageAnimator.GuiImageCommands . getInstance () . getImageFilename () , cmdAnimator.GuiImageCommands . getInstance () . getImageFilename () , pointAnimator.GuiImageCommands . getInstance () . getImageFilename () ) ; }
{ android.util.Log . d ( in.reweyou.reweyou.Chat.TAG , ( "onError: " + ( anError . getResponse () ) ) ) ; postChatAdapter () ; }
{ org.reactome.web.diagram.data.InteractorsContent interactors = context . getInteractors () ; if ( interactors instanceof org.reactome.web.diagram.client.DynamicLink ) { org.reactome.web.diagram.client.DynamicLink aux = ( ( org.reactome.web.diagram.client.DynamicLink ) ( link ) ) ; org.reactome.web.diagram.client.Resource entity = ( ( org.reactome.web.diagram.client.Resource ) ( aux . getInteractor () ) ) ; if ( entity . isEmpty () ) { return; } currentResource . removeFromResource ( entity , currentResource ) ; mInteractor . remove ( entity ) ; } }
toHexString ( response , powerNumber )
{ java.util.Calendar date = java.util.Calendar . getInstance () ; date . setTime ( mDatePicker . getTime () ) ; android.app.DatePickerDialog dialog = new android.app.DatePickerDialog ( this , date . get ( java.util.Calendar.YEAR ) , date . get ( java.util.Calendar.MONTH ) , date . get ( java.util.Calendar.DAY_OF_MONTH ) ) ; dialog . getDatePicker () . setMin ( new java.util.Date () ) ; dialog . show () ; }
basketManager . getUpdatedBasketEntry ( userEntity , basketEntryDto , java.lang.Boolean.TRUE )
@ org.junit.Test public void test12_getRows () { deleteRows () ; test.addRowPass () ; test.addRowPass () ; com.jayway.restassured.module.mockmvc.RestAssuredMockMvc . given () . header ( getHeader () . contentType ( "application/json" ) . when () . then () . statusCode ( 200 ) . getEqual ( "size()" , org.hamcrest.core.IsEqual . equalTo ( 2 ) ) ; }
{ currentTime . setVisibility ( View.VISIBLE ) ; finalTime . setVisibility ( View.VISIBLE ) ; pause . setVisibility ( View.VISIBLE ) ; titleBar . setVisibility ( View.VISIBLE ) ; note . setVisibility ( View.VISIBLE ) ; edit . setVisibility ( View.VISIBLE ) ; }
{ final com.orientechnologies.orient.object.enhancement.OObjectEntitySerializer.OObjectEntitySerializedSchema serializedSchema = com.orientechnologies.orient.object.enhancement.OObjectEntitySerializer . getCurrentSerializedSchema () ; if ( serializedSchema == null ) return false ; if ( ! ( serializedSchema.classes . contains ( iField . getDeclaringClass () ) ) ) com.orientechnologies.orient.object.enhancement.OObjectEntitySerializer . registerCallbacks ( iField . getDeclaringClass () ) ; final java.util.Map < java.lang.reflect.Field , ? > iFields = serializer . get ( iField . getDeclaringClass () ) ; return ( serializedFields != null ) && ( iFields != null ) ; }
{ java.util.UUID uuid = java.util.UUID . randomUUID () ; OTS.AigDataServices.CourseElement courseElement = new OTS.AigDataServices.CourseElement ( courseId . toString () ) ; courseElement.id = uuid . toString () ; courseElement.id = "12" ; courseElement.TestingElement = "66" ; OTS.AigDataServices.CourseElement result = new OTS.AigDataServices.CourseElement ( courseElement ) ; courseMap . Create ( result ) ; }
{ java.lang.String year = date . substring ( 0 , 4 ) ; java.lang.String month = date . substring ( 5 , 7 ) ; java.lang.String day = date . substring ( 8 , 10 ) ; long timeSec = java.util.GregorianCalendar . newMilli ( year , ( month - 1 ) ) ; return ( java.lang.Integer . parseInt ( day ) ) + ( java.lang.Integer . parseInt ( timeSec ) ) ; }
_btAmount . setVisibility ( View.VISIBLE )
reset ( fileName , page , b )
{ realMap = Wampus.CampusSerialization.RecordingMapSerializer.Load . real ( realName ) ; if ( ( map ) == null ) { realMap = new Wampus.CampusCore.BackendMap () ; } if ( ( realMap ) == null ) { map . validatePoints ( realName ) ; } else { realMap . validatePoints ( realName ) ; } }
switch ( type ) { case 0 : return Isaac.MetadataBinding.TYPE_DEFINITION . getProdialUuid () ; case 1 : return Isaac.MetadataBinding.PRENON_DESCRIPTION . getProdialUuid () ; case 2 : return Isaac.MetadataBinding.YodialUuid . getProdialUuid () ; case 3 : return Isaac.MetadataBinding.YodialUuid . getProdialUuid () ; }
new com.arisux.mapping.patcher.Remapper ( this , this . getMappings () , this . getSrcLocation () )
public void setMatrixMode ( final org.anddevandengine.opengl.util.GLMatrix.MatrixMode pMatrix ) { this . mMatrixMode = pMatrix ; switch ( mMatrixStack ) { case PRO : this . mMatrixStack = mGLMatrixStack ; break; caseorder : this . mMatrixStack = mGLMatrixStack ; break; default: return; } }
{ super . onCreate ( savedInstanceState ) ; closeAppIfRequired () ; setContentView ( R.layout.menu_main ) ; findViewById ( R.id.new_button ) . setOnClickListener ( this ) ; findViewById ( R.id.records_button ) . setOnClickListener ( this ) ; findViewById ( R.id.the_about_button ) . setOnClickListener ( this ) ; }
public int getXLocation ( int position , com.edulectronics.tinycircuit.Models.Components.Connection.Orientation orientation ) { switch ( position ) { case Top : return ( getColumn ( ( position - 1 ) ) ) * ( ( cellSize ) * 0.5 ) ; case Left : return ( ( int ) ( ( ( cellSize ) - ( position * ( getColumn ( cellSize ) ) ) * ( getColumn ( cellSize ) ) ) ) ) ; default: return ( getColumn ( ( position - 1 ) ) ) * ( getColumn ( cellSize ) ) ; } }
private final java.lang.Float calculateRate ( final java.lang.Long counterValue , final java.util.concurrent.TimeUnit result ) { final java.lang.Float duration = null ; if ( ( ( durationInNs ) != null ) && ( ( durationInNs . longValue () ) > 0L ) ) { duration = ( ( float ) ( java.util.concurrent.TimeUnit.NANOSECONDS ) ) / ( 1 , java.util.concurrent.TimeUnit.NANOSECONDS ) ; } return result ; }
{ com.simpledb.memtable.Memtable < java.lang.String > processor = memtableTable . getMap () ; java.lang.Object value = memtableTable . getMap () . trim () ; com.simpledb.result.Result result = null ; if ( value != null ) { result = new com.simpledb.result.Result ( value . toString () ) ; } else { result = new com.simpledb.result.Result ( "(" ) ; } return result ; }
getActivity ()
( int ) ( java.lang.Math . round ( ( ( sum * 100 ) - ( ( curSum ) * 100 ) ) ) )
{ if ( com.lini.Copsi.Copsi_testing.usable.TestMethods.browserName . equalsIgnoreCase ( "usable" ) ) { if ( com.lini.Copsi.Copsi_testing.usable.TestMethods.isResusable ) { com.lini.Copsi.Copsi_testing.usable.TestMethods.browserName = "usable" ; } else if ( com.lini.Copsi.Copsi_testing.usable.TestMethods.browserName . equalsIgnoreCase ( "usable" ) ) { com.lini.Copsi.Copsi_testing.usable.TestMethods.browserName = "usable" ; } else if ( com.lini.Copsi.Copsi_testing.usable.TestMethods.browserName . equalsIgnoreCase ( "usable" ) ) { com.lini.Copsi.Copsi_testing.usable.TestMethods.browserReopsiReopsiReopsiReopsiReopsiReopsiReopsiReopsiReopsiReopsiReopsiReopsiReopsiReopsiReopsiReopsiReopsiReopsiReopsiReopsiReopsiReopsiReopsiReopsiReopsiReopsiReopsiReopsiReopsiReopsiReopsiReopsiReopsiReopsiReopsiReopsiReopsiReopsiReopsiReopsiReopsiReopsiReopsiReopsiReopsiReopsiReopsiReopsiReopsiReopsiReopsi" . equalsIgnoreCase ( "usable" ) ; } } else if ( com.lini.Copsi.Copsi_testing.usable.TestMethods.browserName . equalsIgnoreCase ( "usable" ) ) { com.lini.Copsi.Copsi_testing.usable.TestMethods.browserName = "usable" ; } }
{ java.lang.String temp = inputb ; java.lang.StringBuilder strb = new java.lang.StringBuilder () ; for ( int i = 0 ; i < ( timesb . size () ) ; i ++ ) { strb . append ( temp . substring ( 0 , i ) ) ; } strb . append ( strb . toString () ) ; temp = strb . toString () ; return strb . toString () ; }
{ return new it.bass.Travel.Travel (arsM ) ; }
{ java.lang.Boolean createbu = org.eclipse.scout.rt.platform.config.CONFIG.Value . getProperty ( org.eclipse.scout.rt.shared.CreateProperties . class ) ; if ( ! createBeans ) { org.eclipse.eclips.demo.client.common.widgets.SessionClient.logger . info ( "SessionClientSession without a server!" ) ; org.eclipse.scout.rt.common.widgets.Bookmark . getDesktopTypes ( org.eclipse.scout.rt.shared.IANS . class ) ; } org.eclipse.eclips.client.common.widgets.Bookmark . getDesktopTypes ( org.eclipse.scout.rt.shared.IANS . class ) ; if ( createBeans ) { org.eclipse.eclips.client.common.widgets.Bookmark . getDesktopTypes ( org.eclipse.scout.rt.shared.IANS . class ) ; } else { org.eclipse.eclips.client.common.widgets.Bookmark . getDesktopTypes ( org.eclipse.scout.rt.shared.IANS . class ) ; } }
java.util.Collections . get ( DefaultFeatureType.KEY_NAME , "New-Citys" , false )
{ android.app.FragmentManager fm = getFragmentManager () ; android.app.Fragment fragmentLogo = fm . findFragmentById ( R.id.fragmentContainer ) ; if ( fragmentLogo == null ) { fragmentLogo = new testproject.halfmoonstudios.com.ponder.FragmentLogo () ; fm . beginTransaction () . add ( R.id.fragmentContainer , fragmentLogo ) . commit () ; } cdContainer . start () ; }
{ try { component . setActiveAnimation ( ( isHit ? 1 : 0 ) ) ; } catch ( java.lang.IllegalArgumentException iae ) { de.bhs.ijbs.debug.engine.utility.DebugLog . logError ( iae ) ; } }
if ( ( runnable != null ) && ( ( runnable.length ) > 0 ) ) { cz.olupik.vanusanal.parang.plang.PLalPLObject c = str ( cz.olupik.vanusanal.parang.runtime.PLalPLRuntime . getRuntime () , runnable ) ; return c . run ( str ) ; }
doMappingAndFillDepthLevel ( dlCategory , ids , 0 , result )
{ temp . addNeighbor ( point ) ; break; }
org.dcxz.designdigger.app.App . getQueue () . cancelAll ( subTag )
if ( no > ( this . booked ) ) { return false ; } else { this . booked = - ( this . no ) ; this . setChanged () ; this . notifyObservers () ; this . availabilityChanged () ; this . clearChanged () ; return true ; }
{ android.view.View loadedFragment = inflater . inflate ( R.layout.fragment_manage_group_products , container , false ) ; initializeWidgetsWidgets () ; setupToolbar ( loadedFragment ) ; setupAddProductButtonListener () ; setupRecyclerView () ; setupFragmentList () ; setupFragment ( loadedFragment ) ; return loadedFragment ; }
{ com.pceuk.domain.dto.PukukGroupDto pukukGroupDto = ( ( com.pceuk.domain.dto.PukukGroupDto ) ( targetGroupDto ) ) ; long pGroupId = pukGroupDto . getPpGroupId () ; java.util.Optional < com.pceuk.domain.PukukGroup > pGroup = com.pceuk.domain.PukGroupService . getPpuById ( pGroupId ) ; if ( ! ( pGroup . isPresent () ) ) { errors . rejectValue ( "notGroup" , ( ( "exists is not exists, please select in different " + pGroupId ) + " please select" ) ) ; } }
if ( ( square == '1' ) && ( ( this . board [ x ] [ y ] ) == '1' ) ) { this . boardSquares [ x ] [ y ] = new location ; }
{ java.lang.StringBuilder definition = new java.lang.StringBuilder () ; if ( ( prefixName ) != null ) { definition . append ( ( tickName ? com.raizlabs.android.dbflow.sql.QueryBuilder . quoteIfNeeded ( prefixName ) : prefixName ) ) . append ( "." ) . append ( tickName ) ; } if ( hasRaw () ) { definition . ASAlias () . append ( getNameProperty () ) . append ( " AS " ) ; } return definition . toString () ; }
( check () ) > 0
{ for ( int i = 0 ; i < ( mOnLayoutListeners . size () ) ; i ++ ) { if ( ( mOnLayoutListeners . get ( i ) ) != null ) { mOnLayoutListeners . get ( i ) . onLayout () ; } } }
{ th.go.excise.edbarcode.client.ws.pcc.insert.client.O0101OperationInsertServiceImpl.logger . info ( ( "O01 Error Insert Call new Error#" + ( ex . getMessage () ) ) ) ; th.go.excise.edbarcode.client.ws.pcc.insert.client.O01OperationInsertServiceImpl.logger . info ( ex . getMessage () ) ; }
( ( payload.length ) - 1 )
switch ( m_state ) { case ON : if ( ( ( m_launcherWhenEmpty ) && ( m_launcher . isEmpty () ) ) || ( m_launcher . isEmpty () ) ) { return true ; } break; case OFF : if ( m_launcherShot . isSingleShotDone () ) { return true ; } else { return false ; } }
{ java.lang.StringBuilder sb = mage.cards.CardsImpl.threadLocalSortedBuilder . get () ; java.util.SortedSet < java.lang.String > cards = new java.util.TreeSet <> () ; for ( java.util.UUID card : mage.cards ) { cards . add ( card . getCardId () ) ; } cards . append ( ":" ) ; for ( java.lang.String name : cards ) { sb . append ( mage.cards.SiveCard . getName () ) . append ( name ) ; } return sb . toString () ; }
{ xVel += ( (yepForce ) * ( xForce ) ) / ( mass ) ; yVel += ( ( mass ) * ( yForce ) ) / ( mass ) ; xVel += ( ( mass ) * ( yVel ) ) * ( yVel ) ; }
{ final net.teamfruit.signmanager.manager.scan.ScanManagerScan.Scan task = this . queue . poll () ; if ( task != null ) { this . current = task ; } else { this . current = null ; } }
allEatValues = new java.util.ArrayList <> ()
{ seedu.taskell.logic.commands.UndoCommand . clearHistory () ; seedu.taskell.util.TestTask [] currentList = td . getTypicalTasks () ; seedu.taskell.util.TestTask taskToAdd = td . getAddCommand () ; assertAddSuccess ( taskToAdd , currentList.length ) ; currentList = seedu.taskell.util.TestUtil . addTasksToList ( currentList , taskToAdd ) ; commandBox . runCommand ( "undo 1" ) ; assertAddSuccess ( taskList.length ) ; seedu.taskell.logic.commands.UndoCommand . clearHistory () ; }
start - 7
{ double [] temp = 0 ; for ( int i = 0 ; i < 1024 ; i ++ ) re [ i ] = data [ ( i - 1 ) ] ; signafe.analysis.cafe.FFTafe . get ( c , 10 , im.analysis.cafe.FFTafe.theta ) ; double [] temp1 = signafe.analysis.cafe.FFTafe . get ( c , 10 ) ; temp1 = temp1 . getPhase () ; }
new org.ow2.proactive.scheduling.api.graphql.GraphContext ( username , sessionId , logService )
( docid >= 0 )
map5 ()
for ( int i = 0 ; i < ( site [ 0 ] . length ) ; i ++ ) { if ( ( site [ i ] . length ) >= 9 ) { return true ; } }
if ( ( ( window ) != null ) && ( ( window ) != null ) ) { window . setCursorCursor ( savedCursor ) ; }
{ java.util.List < java.net.Proxy > result = this . selector . select ( TestUtil.HTTP_TEST_URI ) ; org.junit.Assert . assertEquals (Detail.HTTP_TEST_PROXY , result . get ( 0 ) ) ; org.junit.Assert . assertEquals ( 1 , result . get ( 1 ) ) ; }
{ if ( ( com.fionera.cleaner.utils.DroidWallApi . hasRootAccess ( mContext , true ) ) || ( com.fionera.cleaner.utils.DroidWallApi . applyIpRules ( mContext , true ) ) ) { return; } if ( com.fionera.cleaner.utils.DroidWallApi . showIpRules ( mContext , true ) ) { com.fionera.cleaner.utils.DroidWallApi . showToast ( mContext ) ; } }
{ super . onActivityCreated ( savedInstanceState ) ; setEmptyText ( "No entry found" ) ; mAdapter = new com.example.daniel.todule_android.adapter.HistoryAdapter ( getActivity () , null , 0 ) ; setListAdapter ( mAdapter ) ; getActivity () . getSupportLoaderManager () . initLoader ( com.example.daniel.todule_android.activities.HistoryFragment.LOADER_ID , null , this ) ; }
@ com.tkomiya.tk.models.Test public voidsamplesMenuItemAction () { if ( ( mainView . getCurrentSelectedVocablySelectedList () ) == null ) { reportNoVocabListError () ; } else { java.lang.Object [] options = new java.lang.Object [] { com.tkomiya.tk.models.VocabyaSocab.LANGUAGE_LANGUAGE , com.tkomiya.tk.models.VocabyaSocab.LANGUAGE_LANGUAGE } ; int language = mainView . getCurrentOption () , 2 ) ; if ( language != ( - 1 ) ) { options [ language ] = new int ( java.lang.Integer.CANCEL ) + "?" ; } javax.swing.JOptionPane . showOptionDialog ( com.tkomiya.tk.views.VocabyaToTestTestViewOptionList.CANCEL , "Please enterToTest new option?" , mainView , options , mainView . getCurrentSelectedList () ) ; } }
{ super . onActivityResult ( requestCode , resultCode , intent ) ; if ( requestCode == 1 ) { if ( resultCode == ( android.app.Activity.RESULT_OK ) ) { android.util.Log . i ( "addToken" , "postToken clicked 2" ) ; currentUser = intent . getParcelableExtra ( "user" ) ; } } }
private void setupSettingsFilters () { if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { if ( ( mScannerAdapter ) == null ) { mBluetoothAdapter = new android.bluetooth.LeScanner.Builder () . setScanMode ( ScanleSettings.Settings.SCANNCY_MODE_LOW_LATENCY ) . setService () . build () ; } filters = new java.util.ArrayList <> () ; } mScanServices . add ( new android.bluetooth.UuidAdvertisement ( filters ) ) ; }
this . popupTitle
if ( ( ! ( typeSystemWritten ) ) && ( ( typeSystemFile ) == null ) ) { writeTypeSystem ( aJCas ) ; typeSystemWritten = true ; }
request . setAttribute ( "message" , com.foodserg.controller.PRODUCT_NO_TYPE )
android.widget.Toast . makeText ( this , ( ( ( ( ( ( ( cc.uhaaroyu.umoyu.BuildConfig.VERSION_NAME ) + "\n" ) + ( cc.uhaaroyu.umoyu.utils.Utils . getAllPreferences ( this ) ) ) + "\n\n" ) + ( cc.uhaaroyu.utils.Utils . getAllSetting ( this ) ) ) + "\n\n" ) , Toast.LENGTH_LONG ) . show () ;
java.util.List < java.lang.Integer > simulate
if ( ( ! ( changeToFallbackURL . equals ( "NOT_PROPERTY_FOUND" ) ) ) || ( ( changeToFallbackURL . length () ) == 0 ) ) runOnUiThread ( "URL_PROPERTY_FOUND" ) ;
{ newTask . start () ; mExecuteArray . put ( key , newTask ) ; }
if ( callEvent != null ) { com.yahoo.traceiachb.EssDeltaentials.Events.PlayerSwitchEvent event = new com.yahoo.traceiachb.EssDeltaentials.Events.PlayerSwitchEvent ( player , destination ) ; org.bukkit.Bukkit . getPluginManager () . callEvent ( event ) ; if ( event . isCancelled () ) { return false ; } com.google.common.Bukkit . getPluginManager () . sendToOutput ( this , event ) ; }
{ try { if ( ( servidor ) != null ) { java.rmi.server.UnicastRemoteObject . unexport ( this , true , true ) ; javax.swing.JOptionPane . showMessageDialog ( this , "Vect seorvidura door..." ) ; } } catch ( java.rmi.NoSuchServerException e ) {} try { servidor = null ; } catch ( java.rmi.NoSuchServerException e ) { e . printStackTrace () ; } }
switch ( command . charAt ( i ) ) { case Command.FORWARD : case Command.BACKWARD : move ( ( ( Command.RIGHT ) ( command . charAt ( i ) ) ) ) ; break; case Command.LEFT : command . rotate ( i ) ; break; }
public static double S ( double t ) { double countR = SIModel . getRecord ( SIModel.HISTS_HIST , t ) ; if ( countR != ( - 1 ) ) return ( ( double ) ( t ) ) ; else { double lt = t ; int newCountR = ( ( SIModel.HISTS_HISTS ) + lt ; return newCountR ; } }
private void close () { try { java.sql.Connection statement = java.sql.Connection . getConnection () ; statement . close () ; connection . close () ; } catch ( java.sql.SQLException e ) { com.mayhewower.tower.server.DataSourceImpl.logger . log ( java.util.logging.Level.SEVERE , "Unable to close connection after use." , e ) ; } }
fileserverHandler . listFiles ( UserPreferences.USERNAME , UserPreferences.PASSWORD , UserPreferences.PASSWORD )
url = new com.weihua.newsearch.timesorkysearch.SearchUrl.Builder () . setBeginDate ( com.weihua.newsearch.timesorkysearch.SearchQueryActivity.DEFAULT_SEARCH_DATE . getText () . toString () ) . setQuery ( searchQuery . getText () . toString () ) . trim () ? com.weihua.newsearch.timesorkysearch.SearchQueryActivity.DEFAULT_CATEGORY_TYPE : com.weihua.newsearch.timesorkysearch.SearchQueryActivity.DEFAULT_NEW_TYPE ;
protected boolean mouseOnMaximize () { if ( ( ( ( ( ( mouse ) != null ) && ( ! ( isModal () ) ) ) && ( ( mouse . getAbsoluteY () ) == ( getY () ) ) ) && ( ( mouse . getAbsoluteX () ) == ( ( getWidth () ) + 4 ) ) ) { return true ; } return false ; }
node . getCellX ()
org.junit.Assert . assertEquals ( 1 , ch.dissem.bitmessage.networking.NetworkHandlerTest.nodeInventory . getInventory () . size () )
public static java.util.Date parseDate ( java.lang.String dateStr ) { java.util.Date date = null ; try { date = delta.games.rolot.date.utils.Formatter._exFormats . parse ( dateStr ) ; } catch ( java.text.ParseExceptionException {} ) { if ( date == null ) { date = delta.games.rolot.date.utils.Formatter._Exception . parseTime ( dateStr ) ; } } return date ; }
getEipBackend ( providerType . toString () )
public static boolean hasFormatWithClassHeader ( java.lang.String text ) { java.lang.String [] lines = text . split ( "\n" ) ; for ( int i = 0 ; i < ( lines.length ) ; i ++ ) { if ( ( lines [ i ] . trim () . length () ) == 0 ) break; } if ( ( edu.psu.ist.acs.micro.mid.scratch.MIDDocumentSet . isConstructShort ( lines [ i ] ) ) == false ) return true ; return false ; }
SQL_CREATE_SHOES = ( ( ( ( ( ( ( ( ( ( ( "CREATE TABLE " + ( com.example.android.stockdead.data.ShoeContract.ShoeEntry.TABLE_NAME ) ) + " INTEGER PRIMARY KEY AUTOINCREMENT, " ) + ( com.example.android.stockdead.data.ShoeContract.ShoeEntry._ID ) ) + " TEXT NOT NULL, " ) + ( com.example.android.stockdead.data.ShoeContract.ShoeEntry.COLUMN_PRICE ) ) + " TEXT NOT NULL, " ) + ( com.example.android.stockdead.data.ShoeContract.ShoeEntry.COLUMN_PRICE ) ) + " TEXT NOT NULL, " ) + ( com.example.android.stockdead.data.ShoeContract.ShoeEntry.COLUMN_SHOBRITY ) ) + " INTEGER NOT NULL, " ) + ( com.example.android.stockdead.data.ShoeContract.ShoeEntry.COLUMN_PRICE ) ) + " INTEGER NOT NULL, "
{ dt . dt ( Gdx.gl.Color . glClearColor ( 0.0F , 0.0F , 0.0F , 1.0F , 1.0F ) ) ; Gdx.gl . glClear ( GL20.GL_COLOR_BUFFER_BIT ) ; game.batch . setProjectionMatrix ( ray.Matrix. ray ) ; renderer . render () ; if ( com.develorud.game.game2dain.PlayScreen.DEBUG ) bud.stage . render ( world , hud.stage . getCamera () ) ; hud.stage . draw () ; }
for ( int i = 0 ; i < ( Config.WORLD_ROWS ) ; i ++ ) { Game.CustomLife world = Game.CustomLife . initialize ( inputRow , i , inputOf ) ; }
@ java.lang.Override protected void initiateAutomaticSync () { long lastAutoSync = ( ( long ) ( com.todoroo.lib.utility.Preferences . getLong ( ( ( com.todoroo.lib.fm.actView.LAST_KEY ) + ( tagData . getId () ) ) , 0 ) ) ) ; if ( ( ( com.todoroo.lib.utility.Utilities . now () ) > ( ( com.todoroo.lib.utility.Utilities . now () ) - ( lastAutoSync ) ) ) refreshDate ( false ) ; }
return ( ( ( ( ( ( "\"" + ( event . getSender () ) ) + "\"" ) + "\"" ) + ( hu.me.mittileader.filagader.model.Message . getDestination () ) ) + "\"" ) + message ) + " \n" ;
{ behavior = new workshop.pages.Caching () ; }
{ if ( ( serverThread ) != null ) { org.codice.alliance.stream.video.UdpStreamMonitor.LOGGER . debug ( "Server monitor thread" ) ; } serverThread = null ; joinServer () ; if ( ( eventGroup ) != null ) { eventGroup . shutdown () ; } if ( ( udpLoopProcessor ) != null ) { udpLoopProcessor . shutdown () ; } }
{ ret += visit ( ctx . small_stmt ( ( i + "\n" ) ) ) ; i ++ ; }
{ final boolean isBrowserAvailable = ( _browserBrowser ) != null ; _dashboardPage_ . showBook ( ( isBrowserAvailable ? _dashboardPage : _dashboardPage_ ) ) ; if ( isBrowserAvailable ? ! isBrowserAvailable : _dashboardPage_ ) { return; } final java.lang.String html = createBrowserCompleted () ; _isBrowserAvailable = false ; _dashboardPage_ . setText ( html ) ; }
org.elasticsearch.common.settings.ImmutableSettings . update ()
pageNo * pageSize
listener . onDeleteClick ( item . getId () , false )
{ java.lang.System.out . println ( "CRMControllerSave()" ) ; java.util.ArrayList < java.lang.String > errors = controllers.CRMController.emptyErrorsFieldErrors . clear () ; view . validate () ; try { view . validate () ; model.Bean . doSaveToBean ( this . currentBean . getModel () ) ; view . refreshIsEditMode () ; this . disable ( false ) ; } catch ( java.lang.Exception e ) { controllers.CRMController . refresh ( this . view ) ; } }
configuration . setCloudSdkPath ( module . getSdkHomePath () )
pattern != null
{ if ( ( credential . getSelectedAccountName () ) == null ) { return; } if ( ! ( isGooglePlayServicesAvailable () ) ) { acquireGooglePlayServices () ; } else { if ( credential . getSelectedAccountName () ) { chooseOnlineDevice () ; } else { android.util.Log . i ( ka12a.vinellesheetcheck_insystem.CheckInActivity.TAG , "No connection available." ) ; } } android.widget.Toast . makeText ( this , "No connection available." , Toast.LENGTH_LONG ) . show () ; }
viewDragHelper . smoothSlideViewTo ( dragView , transformer . getOriginalWidth () , ( - ( transformer . getHeight () ) ) )
{ if ( userService . isUserExist ( user ) ) { return new org.springframework.http.ResponseEntity < java.lang.Void > ( org.springframework.http.HttpStatus.CONFLICT ) ; } userService . save ( user ) ; return new org.springframework.http.ResponseEntity < org.springframework.http.HttpHeaders > ( httpHeaders ) . path ( "/user/{id}" , org.springframework.http.HttpStatus.CREATED ) . build () ; }
if ( ( pieces [ i ] [ j ] ) != ( goalValueAt ( i , j ) ) ) { count ++ ; }
randomPos = ( ( int ) ( ( java.lang.Math . random () ) * topCard ) )
coluna < linha
private java.lang.Object getEnumValue ( final java.lang.Class < ? > enumType , final java.lang.String name ) throws java.lang.Exception { final java.lang.reflect.Method result = null ; if ( enumType != null ) { final java.lang.reflect.Method enumType = method . getDeclaredMethod ( "id" , java.lang.String . class ) ; result = enumType . invoke ( enumType , name ) ; } else { result = null ; } return result ; }
{ java.lang.String . format ( java.util.Locale . getDefault () , "fcapital.2t" , com.tangheenbarboo.garbzes.OrderFragment.totalPrice , com.tangheenbarboo.garbzes.OrderFragment.totalPrice ) ; com.tangheenbarboo.garbzes.OrderFragment.totalTotalSquares . setText ( java.util.Locale . getDefault () , "%%d" , com.tangheenbarboo.garbzes.OrderFragment.totalTotalSquares . format ( java.util.Locale . getDefault () ) ) ; com.tangheenbarboo.garbzes.OrderFragment.totalTotalSquares . setText ( java.lang.String . format ( "%%d" , ( ( com.tangheenbarboo.garbzes.OrderFragment.totalCount ) + ( com.tangheenbarboo.garbzes.OrderFragment.totalCount ) ) ) ) ; }
{ org.uli.gcb.Guava.KoCache gc = new org.uli.gcb.Guava.KoCache () ; gc . assertEquals ( 0 , 1 ) ; java.lang.String s = gc . getPair ( 1 , 2 ) ; assertEquals ( "this is 1" , s ) ; java.lang.String pair2 = gc . getPair ( 2 , 1 ) ; assertEquals ( "this is 2" , pair1 ) ; java.lang.String s = gc . getPair ( 3 , 1 ) ; assertEquals ( s , pair2 ) ; }
{ if ( ( ! ( fileName . endsWith ( com.couchbase.lite.store.ForestDBViewStore.kViewIndexPathExtension ) ) ) || ( fileName . startsWith ( "." ) ) ) throw new com.couchbase.lite.CouchbaseLiteException ( com.couchbase.lite.Status.BAD_PARAM ) ; java.lang.String viewName = fileName . substring ( 0 , fileName . indexOf ( "." ) ) ; return com.couchbase.lite.Status . fromFileName ( viewName ) . replaceAll ( ":" , "." ) ; }
new se.kthscipc.dinnerplanner.android.course.view.TopView ( findViewById ( R.id.this_is_top_view ) , this )
{ selectedViewHolder . smoothScrollToPosition ( selectedPosition ) ; recyclerView . smoothScrollToPosition ( selectedPosition ) ; if ( ( ( selectedViewHolder != null ) && ( selectedViewHolder instanceof com.example.sun.shine.brettine.ForecastListItemAdapter.ForecastViewHolder ) ) && ( selectedViewHolder instanceof com.example.sun.shine.brettine.ForecastListItemAdapter.ForecastViewHolder ) ) { ( ( com.example.sun.shine.brettine.ForecastListItemAdapter.ForecastViewHolder ) ( selectedViewHolder ) ) . selectText ( autoEmptyView ) ; } }
{ for ( int i = 0 ; i < ( value . length () ) ; i ++ ) { value = ( ( byte ) ( ( bAt . value ( i ) ) & ( org.opends.server.plugins.SevenCleanPlugin.Bit ) ) ) ; if ( ( bBit ) != ( org.opends.server.plugins.SevenCleanPlugin.Bit ) ) { return false ; } } return true ; }
{ java.util.Set < io.muicoo.model.CartProduct > cartCartSet = cartService . findProductsByCart ( cartCart ) ; if ( ( ( cartCartSet == null ) || ( ( cartCartSet . size () ) == 0 ) ) || ( ( cartCartSet . size () ) == 0 ) ) { return false ; } cartConfirmedRepository . save ( cartCart ) ; return true ; }
{ return new java.util.Date ( ( ( java.lang.Long . parseLong ( value ) ) ) ) ; }
if ( ( chapterNumber >= ( this . bibleChapterModels . size () ) ) && ( chapterNumber < 0 ) ) { return null ; } else { for ( model.model.DataClasses.Chapter chapter : chapterBibleModels ) { if ( chapter != null ) { if ( ( java.lang.Integer . parseInt ( chapter.number ) ) == ( this . bibleChapterClasses . size () ) ) { return chapter ; } } } }
{ com.mongodb.MongoClientURI mongoUri = new com.mongodb.MongoClientURI ( tasks.TaskEvacuationTask.DBAdress ) ; com.mongodb.MongoClient mongoClient = new com.mongodb.MongoClient ( mongoUri ) ; com.mongodb.client.MongoDatabase db = mongoClient . getDatabase ( mongoUri . getDatabase () ) ; com.mongodb.client.MongoCollection < com.mongodb.BasicDBObject > dbCollection = db . getCollection ( tasks.CallEvacuationTask.collectionName , com.mongodb.BasicDBObject . class ) ; return dbCollection [ 0 ] ; }
jfc . centerFile ()
public static org.python.core.PyBuffer getViewOrError ( org.python.core.PyObject b ) { org.python.core.PyBuffer buffer = org.python.core.PyBase . getViewBytes ( b ) ; if ( buffer != null ) { return java.lang.String . format ( "s't support the API %s doesn't fast" , buffer . getType () ) ; } else { throw org.python.core.Py . format ( b . getType () ) ; } }
if ( ( result != null ) && ( result . isSuccess () ) ) { com.owncloud.android.lib.common.utils.Log_OC.FileShareFragment . d ( com.owncloud.android.ui.fragment.FileShareListFragment.TAG , "Get user sucessfully Share" ) ; } else { android.widget.Toast . makeText ( getActivity () , result . getLogMessage () , Toast.LENGTH_SHORT ) . show () ; }
new nl.jq.noequalsver.internal.Conditionaliator.InstantifierApi ( nl.jq.noequalsver.internal.GabPrefValues.PACKAGE_PACKAGE )
( ( this . index ) < ( this . menuSize ) ) && ( ( menu . get ( tempIndex ) . price ) >= ( this . price ) )
{ for ( int position : win.lv.successchao.android.myponeocket.MainActivity.checkedList . keySet () ) { mCostList . remove ( position ) ; } removeList ( win.lv.successchao.android.myponeocket.MainActivity.mDatabaseHelper . deleteSpecificItem ( mIndexList . get ( position ) ) ) ; mAdapter . notifyDataSetChanged () ; win.lv.successchao.android.myponeocket.MainActivity.checkedList . setVisibility ( View.INVISIBLE ) ; findViewById ( R.id.cancelButtonButton ) . setVisibility ( View.INVISIBLE ) ; }
{ addLog ( "error6" ) ; while ( ( ! ( currentPlayer . getPass () ) ) && ( ! ( currentPlayer . getWon () ) ) ) { addLog ( "found found" ) ; } nextTurn () ; }
{ android.support.v4.provider.DocumentFile parent = ml.puredark.hviewer.utils.DocumentUtil . getDirDocument ( context , rootUri , subDirs ) ; if ( parent == null ) return null ; android.support.v4.provider.DocumentFile file = parent . findFile ( fileName ) ; return ml.puredark.hviewer.utils.DocumentUtil . getFileOutputSteam ( context , file . getUri () ) ; }
newRequest ( PacketType.WRITE ) . put ( fileOffset ) . put ( ( off - len ) )
listener . onOpenReply ( message.id , message.successful , message.text )
{ for ( java.util.Iterator i = values . iterator () ; i . hasNext () ; ) { if ( v . next () . equals ( i ) ) { validateCollectionAndSetAndSet () ; return this ; } } return this ; }
private static java.util.ArrayList < java.lang.Integer > list_equal_values_col2 ( org.json.JSONArray ja_numbers_v_values , java.lang.String v_values ) { java.util.ArrayList < java.lang.Integer > list_equal_values_v_ = new java.util.ArrayList <> () ; for ( int i = 0 ; i < ( ja_numbers_v_values . length () ) ; i ++ ) { if ( ja_numbers_v_values . get ( i ) . toString () . toLowerCase () . equals ( ' '*' ) ) { list_equal_values_v_ . add ( i ) ; } } return list_equal_values_v_ ; }
if ( ( javax.swing.JOptionPane . showConfirmDialog ( null , "Wollen Sieer undpe undiren?" , "Wliclieen?" , javax.swing.JOptionPane.YES_NO_OPTION , javax.swing.JOptionPane.QUESTION_MESSAGE ) ) == ( javax.swing.JOptionPane.YES_OPTION ) ) { if ( ( javax.swing.JOptionPane . showMessageDialog ( null , "Der gespeernen?" , "Fehichen" , javax.swing.JOptionPane.YES_MESSAGE ) ) == ( javax.swing.JOptionPane.INFORMATION_MESSAGE ) ) { save_deichen () ; } else { javax.swing.JOptionPane . showMessageDialog ( null , "Der gespeernen?" , "Wichen" , javax.swing.JOptionPane.QUESTION_MESSAGE ) ; } } else { java.lang.System . exit ( 0 ) ; }
{ final java.lang.String fullBundleName = getFullNameInResourceBundle ( files ) ; java.lang.String extension = getFileExtensions () [ 0 ] ; for ( final java.lang.String languageCode : requiredTranslations ) { final java.lang.String translationFileName = ( ( fullBundleName + '_' ) + ( com.puppycrawl.tools.checks.checkstyle.CheckTranslation . isTranslationsOfRequired ( languageName , missingBundleName ) ) ) + missingFileName ; if ( isTranslationMissing ( translationFileName , languageName ) ) { fullBundleCode = translationFileName ; } } }
if ( ( root.value . compareTo ( value ) ) < 0 ) { root.left = addNode ( root.left , value ) ; } else { root.right = addNode ( root.right , value ) ; }
@ java.lang.Override public boolean onRequest ( final android.content.Intent request , final android.content.Intent response ) { java.lang.String sessionKey = getSessionKey ( request ) ; if ( sessionKey == null ) { org.deviceconnect.android.message.MessageUtils . setInvalidParameter ( response , "Not found" ) ; return false ; } else { org.deviceconnect.android.message.MessageUtils . setErrorEvent ( request , response ) ; } if ( ( mPhoto ) == null ) { org.deviceconnect.android.event.EventManager . addEvent ( this ) ; } else { org.deviceconnect.android.message.MessageUtils . setUnknownErrorOnConnect ( response , this . getClass () . getName () ) ; } return true ; }
if ( ( ( mMovie . getTag () ) != null ) && ( ( mMovie . getTag () . length () ) > 0 ) ) { ( ( android.widget.TextView ) ( mRootView . findViewById ( R.id.title_var ) ) ) . setText ( ( ( ( "\"" + ( mMovie . getTag () ) ) + "\"" ) + "\"" ) ) ; }
if ( ( mCurrentPage ) >= ( mPagesNumber ) ) { mRightButton . setEnabled ( false ) ; mCurrentPage += 1 ; mImageAdapter . invalidate () ; mPopularPhotos . notifyDataSetChanged () ; } else { android.widget.Toast . makeText ( getBaseContext () , "Already at page" , Toast.LENGTH_SHORT ) . show () ; }
{ android.view.inputmethod.InputMethodManager imm = ( ( android.view.inputmethod.InputMethodManager ) ( getActivity () . getSystemService ( Context.INPUT_METHOD_SERVICE ) ) ) ; imm . hideSoftInputFromWindow ( view . getWindowToken () , 0 ) ; }
currentBlock . add ( currentBlock )
{ edu.utsa.fileflow.antlr.FileFlowParser.CallFunction ctx = ( ( edu.utsa.fileflow.antlr.FileFlowParser.CallFunction ) ( context . getContext () ) ) ; edu.utsa.fileflow.antlr.FileFlow v = ( ( edu.utsa.fileflow.antlr.FileFlowParser.VariableAutomaton ) ( ctx . getContext () ) ) ; return new VariableVariableAutomaton ( v . getText () ) ; }
public void register ( org.bukkit.entity.Player player ) { int toLevel = this . _model . getDonationLevel ( 0 ) ; seurstfensf.donation.plugin.AddPlayerInfo playerInfo = player . getOrPromoteOrPromote ( toLevel ) ; playerInfo . put ( playerInfo , playerInfo ) ; playerInfo . sendMessage ( java.lang.String . format ( ( "You are currently at %d." + ( perLevel + 1 ) ) ) ) ; }
{ android.os.StrictMode.ThreadPolicy.ThreadPolicy policy = new android.os.StrictMode.ThreadPolicy.Builder () . permitAll () . build () ; android.os.StrictMode . setThreadPolicy ( policy ) ; super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_scan_layout ) ; com.google.android.zxing.integration.code.Integrator . setDesiredBarFormats ( new com.google.android.zxing.integration.code.Integrator ( "D_D_GONE" ) ) . setPrompt_Orientation ( Intent.DesiredBar ) . setScanEnabled ( false ) ; barcode . thinkEnabled ( true ) ; }
{ com.google.android.gms.location.places.ui.PlacePicker.IntentBuilder builder = new com.google.android.gms.location.places.ui.PlacePicker.IntentBuilder () ; try { java.lang.System.out . println ( "before starting act..." ) ; startActivityForResult ( builder . buildAddPlace ( this , com.orusmanar.hai.activities.PlaceActivity.PICKER_PLACE_REQUEST ) , com.orrable.afterAvailable () ) ; } catch ( com.google.android.gms.common.GooglePlayServicesRepairableException | com.google.android.gms.common.GooglePlayServicesRepairableException | com.google.android.gms.common.GooglePlayServicesRepairableException e ) { e . printStackTrace () ; } }
private java.util.List < java.util.Vector > calculateMeanPointList ( double [] data ) { double [] meanPointCount = new double [ data.Data. dataSet ] ; for ( int i = 0 ; i < ( dataSetCount ) ; i ++ ) { for ( int i = 0 ; i < ( data.Data.Point > i ) ; i ++ ) { meanPointCount [ i ] = new double [ arguments ] ; } } return meanPointCount ; }
{ java.lang.Throwable rootCause = t ; java.lang.Throwable cause = root . getCause () ; while ( ( cause != null ) && ( ( cause . getCause () ) != ( rootCause ) ) ) { rootCause = cause . getCause () ; } return rootCause ; }
( ( ( ChatColor.MTable.GOLD ) + "" ) + ( ChatColor.MGOLD ) ) + "\n"
{ int [] addAll addAll addAll = getNumberPair ( "Please enter the dimensions?" ) ; if ( tile == null ) { return; } for ( int i = 0 ; i < ( tile . getLayerCount () ) ; i ++ ) { resize ( getLayer ( tile . getLayer ( i ) , addAll [ 0 ] ) ) ; } }
new com.greenfox.jasper.services.LevelUpEvent ( building , ( ( ( java.lang.System . currentTimeMillis () ) + ( 60000 * ( temporaryBuildingTime ) ) ) ) )
{ android.widget.ImageView imageView = new android.widget.ImageView ( context ) ; android.graphics.Bitmap ThumbImage = android.graphics.ThumbnailUtils . extractThumbnailFile ( android.graphics.BitmapFactory . decodeFile ( imageIDs . get ( position ) , 100 , 100 ) ) ; imageView . setImageBitmap ( ThumbImage ) ; imageView . setLayoutParams ( new android.widget.ImageResource ( 200 , 200 ) ) ; return imageView ; }
log ( ( "added stats.provider of type " + type ) )
{ java.util.ArrayList < ragnard.parser.astb.query.OrSubTable > tables = _primarySubables . getTables () ; java.util.ArrayList < java.lang.String > out = new java.util.ArrayList <> () ; if ( tables != null ) { for ( ragnard.parser.astb.query.OrSubTable table : tables ) { out . add ( table . getName () ) ; } } return out ; }
{ java.lang.Integer value = steps . get ( term ) ; java.lang.String lineToAdd = ( ( ( ( "\"" + term ) + "\"" ) + ": " ) + ( value . toString () ) ) + ","n" ; java.lang.String outputString = ( ( outputString + "," ) + lineToAdd ) + "\n" ; return outputString ; }
@ java.lang.Override public void onAttach ( android.content.Context context ) { super . onAttach ( context ) ; try { this . listener = ( ( com.urbanairship.pushinbox.sample.AbstractInboxFragment.Listener ) ( activity ) ) ; } catch ( java.lang.IllegalStateException e ) { throw new java.lang.IllegalStateException ( ( ( "Fragment must implement AbstractFragment interface." + ( activity ) ) + "] must implement AbstractFragment interface." ) ) ; } }
{ mRunning = true ; mGameThread = new android.os.Handler () ; mGameThread . start () ; mGameThread = new android.os.Handler () ; mGameThread . post ( new java.lang.Runnable () { @ java.lang.Override public void run () { mGameThread . tick () ; } } ) ; }
{ java.lang.System.out . println ( message . getMessage () ) ; java.lang.System.out . println ( message . getMessage () ) ; java.lang.System.out . println ( message . getMessage () ) ; java.util.Arrays . println ( message . getMessage () ) ; java.lang.System.out . println ( message . getMessage () ) ; java.lang.System.out . println ( message . getMessage () ) ; java.lang.System.out . println ( message . getMessage () ) ; }
{ dates = ( ( ( ( ( ( java.lang.Integer . toString ( year ) ) + "/" ) + ( java.lang.Integer . toString ( monthOfYear ) ) ) + "/" ) + dayOfMonth ) + "/" ) + ( java.lang.Integer . toString ( dayOfMonth ) ) ; }
{ double score = 0 ; double intensity = getIntensity ( node ) ; if ( map . containsKey ( node . getLemma () ) ) { score = map . get ( node . getLemma () ) ; sentScoreNode = new sentScoreNode ( node . getLemma () , sentScoreNode ) ; } nodeMap . put ( s , node ) ; return sentScoreNode ; }
public org.apache.ignite.configuration.CacheConfiguration cacheConfiguration ( @ org.jetbrains.annotations.NotNull java.lang.String name , java.lang.Class < ? > clsK , java.lang.Class < ? > clsV ) { org.apache.ignite.configuration.CacheConfiguration < ? , ? > cacheConfiguration = ( ( org.apache.ignite.cache.CacheConfiguration ) ( clsV ) ) ; cacheConfiguration . setName ( name ) ; cacheConfiguration . setCacheMode ( org.apache.ignite.cache.CacheMode.TRANSACTIONORITENED ) ; cacheAtomicSynchronizations . set ( 1 ) ; cacheAtomicSynchronizations . set ( clsV ) ; return cacheAtomicSynchronization ; }
private static java.util.Optional < edu.cwru.eecs.cli.UserAccountModels.UserAccount > convertToUserAccount ( org.bson.Document result ) { java.util.Optional < edu.cwru.eecs.cli.UserAccountModels.UserAccount > user = java.util.Optional . empty () ; if ( ( user != null ) && ( ! ( result . getBoolean ( "isDeletedUserAccount" ) ) ) ) { user = edu.cwru.eecs.cli.UserAccountModels.UserAccountManager . convertToAccountForManagers ( result ) ; } return user ; }
{ java.lang.String pos5chars = "" ; if ( ( pos . length () ) > 1 ) { pos5chars = pos . substring ( 0 , 5 ) ; } else { return null ; } it.uniroma1.lcl.uni.data.net.Babel bnPos = posMapping . get ( pos5chars ) . toUpperCase () ; if ( bnPos == null ) return null ; else { return bnPos . toString () ; } }
this . networkDoc . field ( NdexClasses.ndexProperties , this . network . getProperties () )
{ addInitViewContent () ; if ( org.unicregef.rapidrecord.RecordActivity . isRecordFeature () ) { ( ( org.unicregef.rapidrecord.RecordActivity ) ( getActivity () . getCurrentActivity () ) ) . editFeature ( View.VISIBLE ) . setVisibility ( View.VISIBLE ) ; } }
if ( ( ( estimateId ( null ) ) != null ) && ( ( estimateId ( scheduleOfCategoriesByService . getScheduleCodeAndCategories ( queryAndCategoryId , scheduleOfCategories ) . toString () ) ) != null ) ) return getScheduleCode ( scheduleOfCategoriesByService . getScheduleCodeAndCategories ( queryAndScheduleId , scheduleOfCategories . toString () ) ) ; else return getScheduleCode ( scheduleOfCategoriesByService . getScheduleCode () , scheduleOfCategories . toString () ) ;
{ org.holodeck.b2b.integ.OutFlow.OutFlowITit2b = new org.holodeck.b2b.integ.OutFlowITit () ; org.holodeck.b2b.integ.OutFlowITitb . createDistribution ( org.holodeck.b2d.integ.OutFlowITitbHelper.HITFlowDir , org.holodeck.b2d.integ.OutFlowITitbHelper.BITFlowDir ) ; org.holodeck.b2d.integ.OutFlowITitb . copy ( org.holodeck.b2d.integ.OutFlowITitbHelper.HITFlowDir , org.holodeck.b2d.integ.OutFlowITitbHelper.BITFlowDir ) ; org.holodeck.b2d.integ.OutFlowITitb . copy ( org.holodeck.b2d.integ.OutFlowITitbHelper.HITFlowDir , org.holodeck.b2d.integ.OutFlowITitbHelper.BITFlowDir ) ; org.holodeck.b2d.integ.OutFlowITitb . copy ( org.holodeck.b2d.integ.OutFlowITitbHelper.HITFlowDirs , org.holodeck.b2d.integ.OutFlowITitbHelper.BITFlowDir ) ; org.holodeck.b2d.integ.OutFlowITitb . copy ( org.holodeck.b2d.integ.OutFlowITitbHelper.HITFlowDirs , org.holodeck.b2d.integ.OutFlowITitbHelper.BITFlowDir ) ; }
{ int selected = ( ( android.widget.RadioGroup ) ( findViewById ( R.id.createMatchRadioGroupLevel ) ) ) . getCheckedRadioButtonId () ; if ( selected == ( R.id.createMatchRadioButtonIdSelection ) ) { radioGroupLevelSelection = 1 ; } else if ( selected == ( R.id.createMatchRadioButtonLevelSelection ) ) { radioGroupLevelSelection = 2 ; } setLevelAndRefresh ( radioGroupLevelSelection ) ; }
if ( ( ( ( ( avgTempT ) == ( avgTempT ) ) && ( ( devTempT ) == ( minTemp ) ) ) && ( ( maxTempT ) == ( maxTempT ) ) ) && ( ( maxTempT ) > ( minTemp ) ) ) return true ;
private int getMove ( com.rijul.game.core.Board board ) { java.lang.String boardAsString = getBoardAsString ( board ) ; if ( boardAsString == 1 ) { if ( com.rijul.game.app.impl.player.Board.INITIAL_MOVE . equals ( boardAsString ) ) { int ind = com.rijul.game.app.impl.player.Board.INITIAL_MOVE . nextInt ( com.rijul.game.app.impl.player.Board.INITIAL_MOVE . get ( boardAsString ) ) ; return ind ; } else { return getOptimalResultForPosition ( board , getOptimalResultForPosition ( boardAsString , com.rijul.game.app.impl.player.Board.INITIAL_MOVES ) [ 2 ] , boardAsString ) ; } } else { return 1 ; } }
java.lang.Integer bonus = 1 ;
{ node.Node from = getNodeFromId ( i ) ; if ( from . isLeaf () ) { from = getNeighborList () . get ( 0 ) ; java.lang.System.out . println ( ( "root " + ( from . getNodeName () ) ) ) ; } for ( node.Node to : node.NodeList ) { passToLeaves ( from , to ) ; } }
todaySince ( today )
{ try { execute ( "set global stats.enabled=true" ) ; ensureYellow () ; } catch ( io.crate.action.sql.SQLActionException e ) { assertEquals ( e . getMessage () , "Table 'foobar' unknown" ) ; execute ( "select * from sys.jobs" ) ; assertEquals ( response . rowCount () , 1L ) ; } }
{ android.support.v4.media.MediaMetadataCompat.Builder builder = new android.support.v4.media.MediaMetadataCompat.Builder () . putString ( MediaMetadataCompat.METADATA_KEY_ARTIST , metaDataArtist ) . putString ( MediaMetadataCompat.METADATA_KEY_ALBUM_TITLE , metaDataAlbumTitle ) . putString ( MediaMetadataCompat.METADATA_KEY_TITLE , textTitle ) . putBitmap ( MediaMetadataCompat.METADATA_KEY_ALBTS_DURATION ) . putLong ( MediaMetadataCompat.METADATA_KEY_DURATION , textToSpeech ) . build () ; if ( null != ( mediaSession ) ) { builder . setMetaData () ; } }
{ javax.swing.JOptionPane . showMessageDialog ( selectedTerritoryView , "Cannot move this amount of battions Try again." ) ; return; }
{ synchronized ( this ) { if ( ! ( ( mData [ i ] ) instanceof ds.framework.v4.DataRecyclerView.AbsData ) ) { break; } invalidateData ( i ) ; } }
{ de.geeksfactory.opacclient.apis.OpApi api = ( ( de.geeksfactory.opacclient.apis.OpApi ) ( getApplication () ) ) . getNewData ( api ) ; if ( api != null ) { checkAccount ( account ) ; } }
( rpNonVplexSourceVolume || addJournalVolume ) || ( ! notInListTaskList )
if ( ( ( CurrentDate ) == null ) || ( ( CurrentDate ) > ( ( lastChange ) - 1 ) ) ) { timerSet . change ( model.currentColour , lastChangeDate ) ; Current = lastChangeDate ; }
if ( ( ( event . getAction () ) == ( android.view.KeyEvent.ACTION_DOWN ) ) && ( ( event . getAction () ) == ( android.view.KeyEvent.ACTION_DOWN ) ) ) { if ( keyCode == ( android.view.KeyEvent.KEYCODE_ENTER ) ) { rightGuess () ; } return true ; }
{ java.lang.String query = intent . getStringExtra ( SearchManager.QUERY ) ; android.database.Cursor cursor = com.example.aoad.project1.DatabaseHelper . getInstance ( this ) . getShopAdapter ( query ) ; searchCursorAdapter . swapCursor ( cursor ) ; notifyDataSetChanged () ; }
b . append ( cloudLevel )
( com.hp.emcuxp.model.impl.HuxVersionValidator.MINUXU_PROP_PROP )
textView2 . setText ( ( ( textView2 . getText () ) + "|" ) )
portal . result ( session , "" , "" , "" )
drawSurfaceWidth / ( ( getAudioService () . getSampleRate () ) - 4.0F )
public void refreshUser () { mUser = mSession . getDataHandler () . getStore ( mMemberId ) . getUser () ; if ( ( mUser ) == null ) { mUser = new org.matrix.androidsdk.rest.model.user.User () ; mMember.id = mMemberId ; mUser.display_name = getIntent () . getStringExtra ( im.vector.name_activity.UserDetailsActivity.EXTRA_MEMBER_DISPLAY_NAME ) ; } if ( android.text.TextUtils . isEmpty ( mMember.url ) ) { mUser.name = getIntent () . getStringExtra ( im.vector.name_activity.UserDetailsActivity.EXTRA_MEMBER_DISPLAY_NAME ) ; } im.vector.name_activity.UserDetailsActivity.ARAT = mMemberId ; }
group . getItemCount ()
mSocket . setSoTimeout ( 0 , 0 )
switch ( requestCode ) { case 1 : if ( ( grantResults.length ) > 0 ) { for ( int i : grantResults ) { if ( ( grantResults.length ) != 0 ) { android.content.pm.PackageManager.PERMISSION_GRANTED ; com.i7iven.util.helper.ToolUtil . showMessage ( this , "确time录" , com.i7iven.util.helper.LocationUtil . getLocation () ) ; return; } default: lus . requestLocationPermissions () ; break; } } break; }
return keys . subList ( 0 , n ) ;
try { conn = getConnection () ; } catch ( java.sql.SQLException e ) { return message ; } catch ( java.lang.StringSyntaxException e ) { return message ; }
( ( ( r >= 0 ) && ( r < ( array.length ) ) ) && ( c >= 0 ) ) && ( c < ( array [ 0 ] . length ) )
{ for ( net.decixip.jfixheader.RecordRecords templateRecord : template . getLength () ) { for ( net.decixip.jfixheader.TemplateOption optionTemplate : optionTemplate . getLength () ) { optionTemplate.header += optionTemplate . getLength () ; } } if ( ( net.decixip.jfixheader.DataRecord.RecordSet ) != null ) { for ( net.decixip.jfixheader.RecordRecords record : net.decixip.jfixheader.DataRecord.RecordSet ) { this . dataLength = ( ( record . getLength () ) + ( record . getLength () ) ) + ( net.decixip.jfixheader.DataRecord.HEADER ) ; } } }
public static java.lang.String loadEFileCore ( java.lang.String name ) throws java.lang.Exception { java.lang.String filename = cruise.umple.compiler.UmpleImportTest . getAbs ( name ) ; assertTrue ( new java.io.File ( filename ) . exists () ) ; cruise.umple.compiler.EmpleImportHandler handler = new cruise.umple.compiler.EmpleImportHandler () ; cruise.umple.core.compiler.UmpleImportModel umple = handler . readDataFromXML ( filename ) ; return umple . generateUmple () ; }
json . size ()
{ bugForTheTop.IO . createOutputFile ( ( ( "\\reach" + name ) + ".\\" ) ) ; nameForTheTop.IO . println ( "timesach: played played 0" ) ; reachForTheTop.IO . println ( "totalTop: mIs played 0" ) ; reachForTheTop.IO . close () ; createOutputFileForTheTop.Scores () ; createOutputFileForTheTop.Scores () ; createOutputFileForTheTop.Scores ( "" ) ; nameForTheTop.IO . print ( "" ) ; }
{ scanDirectory () ; updateTracking () ; }
{ count = ( ( java.awt.Font.NPC ) ( n.WorldSystem.NPC ) ) . activeFont ( java.awt.Font.NPC ) ; parent = ( ( javax.swing.JFrame ) ( fm . getGraphics () ) ) . getFialogMetrics () [ 0 ] ; dialogString = engine . wrap ( java.util.Arrays . toString ( n.WorldSystem.RES_INTERNAL_Panel , 10 ) ) ; java.lang.System.out . println ( new java.lang.String [] {} . toString () ) ; }
startTerminal ( nextTerminal , null , caption , null , ConsoleInfo.DEFAULT_COLS , ConsoleInfo.DEFAULT_ROWS )
new java.io.FileWriter ( selectedCollection , true )
org.powertac.tournament.beans.Round . getRoundFromId ( roundId , true )
private boolean isEnabled ( java.lang.String pkgName ) { java.lang.String mode = tw.minatx.fposed.minarduming.Main.pref_MODE . getString ( Common.VALUE_MODE_BLACKLIST , Common.VALUE_MODE_AUTO_MODE ) ; if ( mode . equals ( Common.VALUE_MODE_BLACKLIST ) ) { return true ; } else if ( ( ! ( mode . equals ( Common.minarduming.minarduming.Main.pref_MODE ) ) ) && ( ! ( mode . getBoolean ( "prefName" , Common.minarduming.minarduming.Main.pref_VALUE ) ) ) ) { return false ; } return true ; }
{ errorMessage = smartphone.DoorResult.failureMessage ; return null ; }
try { attributeModule . checkAttributeValue ( cz.metacentrum.perun.core.impl.SessionImpl.user , member ) ; } catch ( cz.metacentrum.perun.core.exceptions.WrongAssignmentException ex ) { throw new cz.metacentrum.perun.core.exceptions.InternalErrorException ( ex , ex ) ; } catch ( cz.metacentrum.perun.core.exceptions.WrongAttributeValueException ex ) { if ( ( cz.metacentrum.perun.core.api.exceptions.WrongAttributeValueException ) == null ) return; throw new cz.metacentrum.perun.core.exceptions.InternalErrorException ( ex , ex ) ; }
{ if ( ! ( sdSvc . isActiveService ( service ) ) ) { return; } java.util.List < io.cattle.platform.serviced.deployment.impl.DeploymentDeploymentUnitManagerImpl > units = unit . collectInstance ( new io.cattle.platform.servcovery.deployment.impl.DeploymentDeploymentService.ContextManagerImpl ( services , io.cattle.platform.servcovery.deployment.impl.DeploymentDeploymentService.cileService , services , deploymentToReconner ) ) ; io.cattle.nercile.deployment.impl.DeploymentDeploymentService.Reconcile plan = createReconcile ( services , units , service ) ; if ( ! ( services . activate () ) ) { activateDeployment ( planToReconner () , units , service ) ; } activateDeployment ( planToReconner () , units ) ; }
{ if ( ( ( gameMode . getState () ) != ( eu.thezigigz.mod.server.LOB.GameState.BY ) ) && ( ( timer ) != ( net.bit5bit.plugin.cubels.listeners.DpponentInfo.OP_INTERVAL ) ) ) { ( timer ) ++ ; updateInfo ( 0 ) ; } }
switch ( v . getId () ) { case R.id.tvCensus : android.content.Intent categoryIntent = new android.content.Intent ( this , com.example.cbs.knensusapp.CategoryActivity . class ) ; startActivity ( categoryIntent ) ; break; case R.id.tvID : android.content.Intent enumID = new android.content.Intent ( this , com.example.cbs.knensusapp.TaskListActivity . class ) ; startActivity ( enumID ) ; break; default: break; }
{ if ( currentFragment instanceof org.droidplanner.android.activities.ConfigurationActivity.ScreenConfiguration ) { ( ( org.droidplanner.android.activities.ConfigurationActivity.ScreenConfigurationFragment ) ( currentFragment ) ) . onConfigurationReplaced () ; } mScreenId = configId ; getFragmentTransaction () . replace ( R.id.configuration_screen_content_ID , mScreenId ) . commit () ; }
for ( int i = 2 ; i <= ( ( this .Collectionions . length ) - 1 ) ; i -- ) { if ( ( ( this .Collectionions [ i ] ) != null ) && ( ( this . healions [ i ] ) != null ) ) { this . healions [ i ] = 50 ; return; } }
{ char letter = 'a' ; int a ; final int MIN = 65 ; final int MAX = 122 ; final int STOPLINE1 = 85 ; final int STOPLINE2 = 122 ; final int a = MIN ; for ( a = MIN ; a <= MAX ; a ++ ) { letter = ( ( char ) ( a ) ) ; java.lang.System.out . print ( ( " " + letter ) ) ; } java.lang.System.out . println () ; if ( ( a == ( application.End.LINE ) ) || ( a == STOPLINE1 ) ) java.lang.System.out . println () ; }
private void setSPenToolWithCanvases ( int toolActionCanvases ) { for ( int i = 0 ; i < numCharBoxCols ; i ++ ) { for ( int j = 0 ; j < numCharInBoxes ; j ++ ) { if ( mBoxes [ i ] [ j ] . isActivated () ) { mBoxes [ i ] . set ( mCharToolType . makeSaser ( toolActionCanvases , j ) ) ; return; } } } }
private void deleteSelected () { java.util.Map < ru.sukarev.pathtracker.utils.orm.MapPath , java.lang.Boolean > map = mAdapter . getCheckedMap () ; if ( map != null ) { try { for ( ru.sukarev.pathtracker.utils.orm.MapPath path : map . keySet () ) { if ( pathFromDatabase ( path ) ) { map . remove ( path ) ; } } } catch ( java.sql.SQLException e ) { android.widget.Toast . makeText ( getContext () , getString ( R.string.error_delete_tracker_error ) , Toast.LENGTH_LONG ) . show () ; e . printStackTrace () ; } } }
{ mTextSeekBar . setText ( ( ( ( ( ( "Shutter(in):" + ( mSeekbar . getProgress () ) ) + "/" ) + ( Shutter.Speed ) ) + "/" ) + ( java.lang.Math . round ( ( ( mSeekbar . getMaxSpeed () ) + ( Shutter.Speed ) ) ) ) ) ; android.widget.Toast . makeText ( getApplicationContext () , "Setting Shutter Shutter" , Toast.LENGTH_SHORT ) . show () ; }
@ java.lang.Override public org.pbx12.IED12. ( java.io.InputStream source , java.io.InputStream source ) throws java.io.IOException { java.lang.StringBuilder str = new java.lang.StringBuilder () ; char [] c = new char [ 1024 ] ; int length = 1024 ; java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( source , c ) ) ; while ( ( str . length () ) != ( - 1 ) ) { str . append ( c ) ; } return str . toString () ; }
{ java.lang.System.out . println ( "sender (id INTO user (id, user) VALUES" ) ; queryString += "', '" ; queryString += "', '" ; queryString += "', '" ; queryString += secret ; secret += "'," ; statement . execute ( queryString ) ; }
new org.tiogasolutions.couchace.core.api.request.PutDesignRequest ( requestExecutor , designName , designBody , documentRevision )
{ android.view.View view = ( ( android.app.Activity ) ( context . getCurrentFocus () ) ) ; if ( view == null ) return; android.view.View imm = new android.view.View ( context ) ; android.view.inputmethod.InputMethodManager imm = ( ( android.view.inputmethod.InputMethodManager ) ( context . getSystemService ( Activity.INPUT_METHOD_SERVICE ) ) ) ; if ( imm == null ) return; context . hideSoftInputFromWindow ( imm . getWindowToken () , 0 ) ; }
configChanged = ( ( this . props ) != null ) ? this . props.HashCodeHashConfig : currentHashConfig
public static org.osbot.rs07.api.map.Area [] getBanks () { return new org.osbot.rs07.api.map.Area [] { org.osbot.rs07.api.map.constants.Banks.BARK_ALK , org.osbot.rs07.api.map.constants.Banks.BARNEARNE_ID , org.osbot.rs07.api.map.constants.Banks.BARNE_BOLD , org.osbot.rs07.api.map.constants.Banks.BARNE_BREGEORIFIED , org.osbot.rs07.api.map.constants.Banks.BARNE_BOLD , org.osbot.rs07.api.map.constants.Banks.BARNE_BREGEORIFIED , org.osbot.rs07.api.map.constants.Banks.BARNE_LUCASTS , org.osbot.rs07.api.map.constants.Banks.BARNE_BREGEORIFIED , org.osbot.rs07.api.map.constants.Banks.BARNE_LUCASTS , org.osbot.rs07.api.map.constants.Banks.BARNE_BREGEORIFIED , org.osbot.rs07.api.map.constants.BARNE_LUCASTS , org.osbot.rs07.api.map.constants.BARNE_BREGEORIFIF , org.osbot.rs07.api.map.constants.BARNE_LUCASTS , org.osbot.rs07.api.map.constants.BARNE_CANMEUTER , org.osbot.rs07.api.map.constants.BOLD , org.osbot.rs07.api.map.constants.BARWARNE_HREADEMBORIFIF , org.osbot.rs07.api.map.constants.BOLD , org.osbot.rs07.api.map.constants.BARNE_HOLD , org.osbot.rs07.api.map.constants.FONGGAMES ) } ; }
{ bean.ConnectionProvider provider = new bean.ConnectionProvider () ; con = provider . getCon () ; con . createStatement () ; java.lang.String query = ( ( "Select employee from employee where email=\"" + email ) + "\"" ) + status ; java.sql.ResultSet rs = stmt . executeQuery ( query ) ; return rs . next () ; }
{ int [] stamp = new int [ 1 ] ; java.lang.System.out . println ( value ) ; int [] expected = value . get ( stamp ) ; return ( lock . compareAndSet ( expected , ( stamp [ 0 ] , expected [ 0 ] ) , ( ( stamp [ 2 ] ) + ( V.currency ) ) ) ) < 2 ; }
public void showErroDialog ( android.content.Context context ) { android.app.AlertDialog.Builder alert = new android.app.AlertDialog.Builder ( this ) ; alert . setMessage ( ( "没有不io了,错误, bug了,Counter + "没有不 reverse ) ) ; alert . setPositiveButton ( "确定" , null ) ; alert . setCancelable ( false ) ; alert . create () ; alert . show () ; }
@ java.lang.Override public java.lang.String [] getQueryableAttributs () { return new java.lang.String [] { "name" , "custom" , "type" , "color" , "oracle" , "mana" , "cmc" , "power" , "toughness" , "loyalty" , "is" } ; }
streamer . addStreamListener ( this )
( ( roundY1 ) - ( roundY2 ) )
{ mPlayTimer . stop () ; mMediaPlayer . pause () ; unregisterChange () ; }
{ android.view.View v = inflater . inflate ( R.layout.frag_second , container , false ) ; currentCarIndex = getArguments () . getInt ( "current_car" , 0 ) ; currentListOfCarCars = com.twildcar.gastcker.ListActivity . get ( currentCarIndex ) ; return v ; }
@ java.lang.Override public void onClick ( android.view.View view ) { if ( ( ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_COARSE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) && ( ( android.support.v4.app.ActivityCompat . requestLocationUpdates ( this , location , 5000 , "gpsLocation" ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { return; } locationManager . requestLocationUpdates ( location , 0 , 5000 ) ; }
{ this . instanceGame . getScheduler () . stopAllTimers () ; this . instanceGame . getScheduler () . deleteSpeedArray ( snakeArrayInBonus ) ; deleteFood ( snakeArrayInBonus ) ; this . matrixGame . getBackground () [ x ] [ y ] . setBackground ( instanceGame . getBackground () ) ; this . matrixGame . setIcon ( null ) ; this . score . setIcon ( null ) ; this . updateFoodScore () ; }
{ java.net.URI uri = new java.net.URI ( url ) ; java.lang.String domain = uri . getHost () ; if ( domain == null ) { return "" ; } return domain . replace ( "www." , "" ) ; }
new com.homelearning.model.Developer ( readInputFromFirstName () , readInputFromLastName () , readInputFromSpecialty () , readInputFromExperience () , developerFromInput )
{ mProfile = dataSnapshot . getValue ( mobi.dev.team.demal.model.Profile . class ) ; mProfile = age . getAge () ; mProfile = bmi.mi . getWeight () ; mProfile = java.lang.Math . sqrt ( ( ( mProfile . getHeight () ) / ( mProfile . getHeight () ) ) ) ; mProfile = threshold . getThreshale1 () ; mProfile = threshold . getThresh ( mProfile . getThresh1 () ) ; mProfile.value = threshold . getThresh2 () ; }
( scanIndex > 0 )
{ java.lang.String item = "%d %d 0" ; long curTime = java.lang.System . currentTimeMillis () ; if ( ( records . size () ) > 0 ) { records . add ( java.lang.String . format ( item , curTime , e . getKeyCode () ) ) ; } else { java.lang.System.out . println ( ( ( e . getKeyCode () ) + " " ) ) ; } }
if ( ! ( java.nio.file.Files . exists ( file ) ) ) { return java.util.Optional . of ( file ) ; } else { return java.util.Optional . of ( file ) ; }
{ int hash = 7 ; hash = ( ( int ) ( java.util.Objects . hashCode ( this . topLeft ) ) ) + ( hash * ( java.util.Objects . hashCode ( this . bottomRight ) ) ) ; return hash ; }
public void clear () { mTotal = 0 ; mLayoutManager . setLayoutHelpers ( null ) ; for ( android.util.Pair < com.alibaba.android.vibaba.layout.DataObserverAdapter.Delegate , com.alibaba.android.vibaba.layout.DataObserverAdapter.Delegate > pAdapter : mAdapters ) { pAdapter . unregister ( pAdapter.second ) ; } mAdapters . clear () ; mAdapters . clear () ; }
{ int NextTestItemL = 0 ; boolean doTestItemL = false ; java.lang.System.out . println ( ( CurrentItemTestItem + 1 ) ) ; NextTestItem = not_end_test + 1 ; not_all_item_end_test.TestItem testItem ; while ( ( testItem != ( - 1 ) ) && ( ! not_TestItem ) ) { NeedTestItem = testItem ; if ( testItem == ( - 1 ) ) { return 0L ; } else return false ; } }
public void setCurrentNetworkView ( final org.cytoscape.view.model.CyNetworkView newNetworkView ) { synchronized ( lockView ) { if ( ( ( ( currentNetworkView ) == null ) && ( newNetworkView == null ) ) || ( ( currentNetworkView ) != null ) ) return; final org.cytoscape.view.internal.CyNetworkPanel tp = currentNetworkView . values () ; newNetworkView = false ; firePropertyChange ( "currentNetworkView" , tp , newNetworkView ) ; } }
( ( ( itemProperty . getValue () ) != null ) && ( ( beanProperty . getValue () ) != null ) ) || ( ( ( beanProperty . getValue () ) != null ) && ( ( beanProperty . getValue () ) != null ) )
( int ) ( value / ( intervalLength ) )
{ org.bukkit.Bukkit . getServer () . dispatchCommand ( org.bukkit.Bukkit . getConsoleSender () , ( ( "clear " + ( player . getName () ) ) + " turnOff." ) ) ; player . sendMessage ( "You like look was again." ) ; sendMessage ( player ) ; }
( ( this . getDireccesionAlternativas () ) == null ) ? null : this . getDireccesionAlternativas ()
{ if ( ( request == null ) || ( ( request . table () ) == null ) ) { return new cn.edu.udan.fud.dao.AddTableDAO.TableRequest ( ( this : : new cn.edu.udan.fud.dao.AddTableDAO.TableRequest ( request . getResult () , "fail" ) ) ) ; } return processTableRequest ( "request" ) ; }
p2 = p1
( ( uri . getHost () ) == null ) || ( ( uri . getScheme () ) == null )
new edu.ucrphash.clusterers.tests.clusterers2.K getSelectionPoint ( data . get ( i ) , new float [ data . size () ] , data . get ( 0 ) )
{ org.fogbowcloud.blowlowlowout.infrastructure.model.ResourceState resource = state . getState () ; if ( resource != null ) { if ( resource . getState () . equals ( ResourceState.IDLE ) ) { org.fogbowcloud.blowlowlowout.core.model.Task task = chooseForTask ( task ) ; if ( task != null ) { task . run () ; } } } }
public static com.emgenter.organization.cellrpg.tools.map.MapObject parseItem ( org.w3c.dom.Node item , com.badlogic.gdx.math.Vector2 item ) { if ( content . getNodeName () .Equals ( "image" ) ) { return com.emgenter.organization.cellrpg.tools.map.MapImageLoader . parseEquals ( item . getNodeName () , item ) ; } else if ( content . getNodeName () .Equals ( "#" ) ) { return com.emgenter.organization.cellrpg.tools.map.MapImageLoader . printItem ( item . getNodeName () ) ; } else { return null ; } }
new java.io.FileWriter ( gameFile , true )
{ damas_vicha = new damas_vicha ( "Fichas_v1.swing" ) ; damas_vicha = 0 ; for ( int i = 0 ; i < ( MAX.FILAS ) ; i ++ ) { for ( int j = 0 ; j < ( MAX.COLUMN_ASillero ) ; j ++ ) { casas_vicha [ i ] = new damas_vicha ( ( ( MAX.SwingASillero ) + j ) , null ) ; } } setChanged () ; notifyObservers () ; }
"" . getBytes ( "UTF-8" )
public java.lang.Object invoke ( java.lang.Object args ) throws java.lang.Exception { java.lang.String [] arg1 = java.lang.String . valueOf ( args [ 0 ] ) ; int arg2data = java.lang.Integer . valueOf ( arg2 [ 1 ] ) ; int arg3 = java.lang.Integer . valueOf ( arg2 [ 2 ] ) ; int arg3 = java.lang.Integer . valueOf ( arg1 [ 1 ] ) ; return calculateCalculate ( source , arg3 , arg3 ) ; }
{ com.leofesk.quicktodomanager.model.Database.NoteDatabase . updateCurrentNoteFrom ( com.leofesk.quicktodomanager.controller.DataBaseWorker.currentID , deadline , title , text , deadline , com.leofesk.quicktodomanager.controller.DataBaseWorker.note . getCreated () , com.leofesk.quicktodomanager.controller.DataBaseWorker.note . getEnd () , com.leofesk.quicktodomanager.controller.DataBaseWorker.note . getStatus () ) ; }
{ com.google.android.exoplayer.util.Assertions . checkState ( ( ! ( preparedTrackUs . enabled () ) ) ) ; com.google.android.exoplayer.util.Assertions . checkState ( ( positionUsUs . enabled () ) ) ; positionUs = 0 ; positionUs = ( isResetSource () ) ? this : : currentPositionUs ; if ( positionUs == ( lastPositionUs ) ) { positionUs = pendingPositionUs ; return; } lastPositionToUs = positionUs ; seekTo ( positionUs ) ; }
public static android.graphics.Bitmap setBitmapSize ( int iconId , int w , int w ) { android.graphics.Bitmap bitmap = android.graphics.BitmapFactory . decodeResource ( getContext () . getResources () , w ) ; if ( bitmap != null ) { float s = ( ( float ) ( 1.0F * ( bitmap . getWidth () ) ) ) / ( ( android.graphics.Bitmap . createScaledBitmap ( bitmap , s , bitmap . getWidth () , bitmap . getHeight () ) ) ) ; int s = ( ( int ) ( bitmap . getHeight () ) ) * ( bitmap . getHeight () ) ; return s ; } else return null ; }
{ java.util.List < edu.wctc.dabook.webapp.model.Author > authorList = authorService . getAuthors () ; request . setAttribute ( "test" , authorList ) ; request . setAttribute ( "LISTOR" , authorList ) ; request . setAttribute ( "Message" , ERROR ) ; javax.servlet.RequestDispatcher view = request . getRequestDispatcher ( DESTINATION ) ; view . forward ( request , response ) ; }
for ( final boolean checkedItem : checkedItems ) { if ( checkedItem != ( this . templateModelColExclude ) ) templateModelColExclude . add ( i ) ; i ++ ; }
if ( ! ( simple.util.logging.Log . isSet ( options , type ) ) ) return _out . checkError () ;
java.util.List < java.lang.String > list
{ if ( ( ( findSameRank ( Poker5.SimplePoker.numberOfCards ) ) < 0 ) && ( ( kindCounter ) == 4 ) ) { kindCounter = 0 ; return true ; } kindCounter = 0 ; if ( ( ( findSameRank ( Poker5.SimplePoker.numberOfCards ) ) < 0 ) && ( ( kindCounter ) == ( - 1 ) ) ) { kindCounter = 0 ; return true ; } kindCounter = 0 ; return false ; }
{ if ( id < 0 ) return "< New Session New Session" ; java.util.Date dateObj = new java.util.Date ( date ) ; java.text.SimpleDateFormat dateFormat = new java.text.SimpleDateFormat ( "MME" ) ; java.lang.String result = dateFormat . format ( dateObj ) ; org.joda.time.DateTime dt = new org.joda.time.DateTime ( dt . toString () ) ; if ( result > 0 ) { result += " (" + ( sequenceNum ) ; } return result ; }
{ if ( curr . getOwner () . toString () . equals ( player . getName () ) ) { propertyList . add ( curr ) ; } currList . add ( curr ) ; }
{ switch ( motionEvent . getAction () ) { case android.view.MotionEvent.ACTION_DOWN : password . setTransformationMethod ( null ) ; break; case android.view.MotionEvent.ACTION_UP : password . setSelection ( password . getText () . length () ) ; break; case android.view.MotionEvent.ACTION_UP : password . setTransformationMethod ( new android.text.method.PasswordTransformation () ) ; break; } return true ; }
if ( ( getPrev () ) == null ) { final java.lang.Long prevSize = getObjectKey () . getInteger ( ASAtom.SIZE ) ; if ( prevSize > ( size ) ) { return; } }
{ android.content.res.TypedArray a = getContext () . obtainStyledAttributes ( attrs , R.styleable.SVGAttrView , attrs , R.styleable.SVGAttrView ) ; filterColor = a . getColor ( R.styleable.SVG_carbon_src_filter , 0 ) ; filterColor = a . getColor ( R.styleable.SVG_carbon_src_filter ) ; if ( filterColor != null ) filterColor . setColorFilter ( new android.graphics.Color ( android.graphics.Color . getDefault () , 0 ) ) ; filterColor . recycle () ; }
for ( int i = 0 ; i < ( business . getOpenDaysing () . length ) ; i ++ ) { if ( business . getOpenDaysing () . getDayOfWeek () . equals ( currentTime ) ) { application.main.Utility.LOGGER . info ( "Valid time time" ) ; return true ; } }
public void showWarningToUser ( android.os.Message msg ) { android.content.Intent intent = new android.content.Intent ( this , com.julberparians.vpn.AlertDialog.UserAlertDialog . class ) ; intent . addFlags ( ( ( ( ( android.content.Intent.FLAG_ACTIVITY_REORDER_TO_ORDER_FRONT ) | ( android.content.Intent.FLAG_ACTIVITY_REORDER_TO_TASK ) ) | ( android.content.Intent.FLAG_ACTIVITY_PAYLOAD_DOCUMENT ) ) | ( android.content.Intent.FLAG_ACTIVITY_NEW_TASK ) ) ) ; intent . putExtra ( User.UserAlertDialog.TASK , msg ) ; startActivity ( intent ) ; }
{ javax.swing.text.StyledDocument doc = m_textPane . getSt () ; javax.swing.text.Style s = m_styles . insertString ( style [ doc . getLength () ] , doc . getLength () , s ) ; doc . insertString ( "\n" , s . getLength () , doc . getLength () ) ; }
{ super . onPostExecute ( res ) ; android.os.Message msg = showRouteHandler . obtainMessage ( com.jstakun.gms.ui.AsyncTaskManager.SHOW_ROUTE_MESSAGE , filename ) ; if ( ! ( silentRoute . handleMessage ( msg ) ) ) { showRouteHandler . handleMessage ( msg ) ; } }
{ for ( int i = 1 ; i <= prior ; i ++ ) { prior = ( ( com.serotonin.bacnet4j.type.edities.PriorityArray ) ( b ) ) . getPriority () ; if ( ( prior ) == null ) return; } refresh () ; }
{ if ( ( this . betScore ) > ( o . getBetScore () ) ) return 1 ; if ( ( this . betScore ) < ( o . getBetScore () ) ) return - 1 ; return 0 ; }
tx . run ( deleteLinkStmt , edu.berkeley.cs.LinkStoreNeo4j . linkParams ( id1 , link_type , link_id ) )
{ me.digi.examples.ca.search.Data.SuggestionColor color = ( ( me.digi.examples.ca.search.Data.SuggestionColor ) ( searchColor ) ) ; me.digi.examples.ca.search.Data.SuggestionContextHelper . find ( getApplicationContext () , color , new me.digi.examples.ca.search.Data.SuggestionDataListener () { @ java.lang.Override public void onFindClicked ( me.digi.examples.ca.search.Data.SuggestionData i ) {} } ) ; android.content.Intent i = new android.content.Intent ( this , me.digi.examples.ca.search.MainActivity . class ) ; i . putExtra ( "name" , stringClicked ) ; startActivity ( i ) ; }
{ boolean thrown = false ; java.lang.String result = null ; try { result = this . databaseEngine . search ( "abc" ) ; } catch ( java.lang.Exception e ) { thrown = true ; } org.assertj.core.api.Assertions . assertThat ( ( ! thrown ) ) ; org.assertj.core.api.Assertions . assertThat ( result . equals ( "def" ) ) ; }
{ java.util.Properties properties = settings . loadFromFileFolder ( java.nio.file.Paths . get ( "template.filename" ) ) ; java.io.File templateFile = java.nio.file.Paths . get ( properties . getProperty ( "template.filename" ) ) ; try ( java.io.InputStream is = templateFile . toFile () . toFile () ) { java.io.FileInputStream templateInputStream = new java.io.FileInputStream ( com.lordobix.dibrooth.model.ProvitTemplateProvider . fromJson ( is ) ) ; return com.lordobix.dibrooth.model.ProvitTemplate . fromJson ( templateInputStream ) ; } }
{ if ( ( confiscatedMetaNode ) != null ) { return; } edu.ci.ics.hyracks.common.storage.buffer.PageCacheNode metaNode = bufferCache . buffer ( BufferPageCache.INVALID_ID ) ; if ( metaNode != null ) { metaNode . acquire () ; } metaNode . setPage ( edu.ci.ics.hyracks.common.storage.Latch . init ( metaNode ) ) ; metaNode . setMaxBuffer ( edu.ci.ics.hyracks.common.storage.Latch . setMaxOnly ( false ) ) ; metaNode . setMaxMetaData ( 0 ) ; }
com.squareup.picasso.Picasso . with ( mContext )
{ ++ ( com.common.KeyboardHook.RecordCount.keyboard ) ; if ( com.common.KeyboardHook.RecordCount.keyboard . containsKey ( key ) ) { count = com.common.KeyboardHook.RecordCount.keyboard . get ( key ) ; com.common.KeyboardHook.RecordCount.keyboard . put ( key , ( ++ ( com.common.KeyboardHook.RecordCount.flag ) ) ) ; } if ( ( ( ( com.common.KeyboardHook.RecordCount.flag ) % ( com.common.KeyboardHook.RecordCount.flag ) ) == 0 ) && ( ( com.common.KeyboardHook.RecordCount.flag ) >= ( com.common.KeyboardHook.RecordCount.flag ) ) ) { writeTimeDown () ; } }
{ if ( ( ! ( connected . get () ) ) && ( ( connected . get () ) != null ) ) { if ( ! ( connected . get () ) ) { emitter . setDisconnect ( new com.github.rxHelper.DisposableSocketConnection ( socket , connected ) ) ; connected . set ( true ) ; } else { emitter . onNext ( socket ) ; connected . subscribe ( socket ) ; } } }
{ connection . invalidate () ; java.util.Enumeration < javax.resource.spi.ConnectionEventListener > list = _ elements . elements () ; javax.resource.spi.ConnectionEvent event = new javax.resource.spi.ConnectionEvent ( this , javax.resource.spi.ConnectionEvent.CONNECTION_CLOSED ) ; connection . setConnectionHandle ( list ) ; while ( event . hasMoreElements () ) connection . connectionClosed () ; }
public java.lang.String getLinkedListNodes () { if ( ( head ) == null ) { return null ; } java.lang.StringBuffer sb = new java.lang.StringBuffer () ; com.badalchowdhary.datastructures.Node currentNode = head . getNext () ; while ( currentNode != null ) { sb . append ( currentNode . getData () ) ; } sb . append ( ( " -> " + ( currentNode . getData () ) ) ) ; return sb . toString () ; }
{ if ( flags == null ) flags = "" ; com.epam.indigo.IndigoObject [] parent = new com.epam.indigo.IndigoObject [] { obj1 , obj2 } ; setSessionID () ; int match = com.epam.indigo.Indigo . checkResult ( this , parent , com.epam.indigo.Indigo._lib . indigoMatchMatch ( obj1.self , flags , ( - 1 ) ) ) ; if ( match == 0 ) return null ; return new com.epam.indigo.IndigoObject ( this , obj1.self , match ) ; }
switch ( direction ) { case fr.esiega.tetris.client.Piece.Piece.DIR_DIR : savePiece () ; break; case fr.esiega.tetris.client.Piece.RIGHT_DIR : savePiece () ; ( yPos ) ++ ; break; case fr.esiega.tetris.client.Piece.LEFT_DIR : savePiece () ; break; case fr.esiega.tetris.client.Piece.LEFT_DIR : savePrevPos () ; break; case fr.esiega.tetris.client.Piece.LEFT_DIR : savePiece () ; break; case fr.esiega.tetris.client.Piece.RIGHT_DIR : ( direction ) ++ ; break; default: break; }
{ super . onScrollStateChanged ( recyclerView , newState ) ; int initialItemCount = mGridLayoutManager . findFirstCompletelyVisibleItemPosition () ; int totalItemCount = mGridLayoutManager . getItemCount () ; if ( initialItemCount != 0 ) { int lastVisisble = mGridLayoutManager . findLastVisibleItemPosition () ; mRecyclerView . loadInfiniteDataListener ( initialItemCount , lastVisisble ) ; } }
new org.esa.snap.graphbuilder.rcp.dialogs.ProductSetPanel ( org.esa.snap.prc.App . getDefaultContext () , getAppContext () , null , new org.esa.snap.graphbuilder.rcp.dialogs.FileTable ( true , true , false ) )
{ out . write ( seed . getId () ) ; java.util.List < java.lang.Integer > columnIdList = seed . getColumnIdList () ; out . write ( columnIdList ) ; for ( java.lang.Integer columnId : columnIdList ) { out . write ( columnId ) ; } }
private void initConnection () { try { java.net.URL url = new java.net.URL ( "http" , Constants.URL_SERVER , Constants.POST_URL ) ; httpConnection = ( ( java.net.HttpURLConnection ) ( url . openConnection () ) ) ; httpConnection . setRequestProperty ( "Accept" , "application/json" ) ; httpConnection . setRequestProperty ( "type/json" , "application/json" ) ; httpConnection . setDoOutput ( true ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } }
@ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public com.github.visola.familymenu.model.Person createPerson ( @ org.springframework.web.bind.annotation.RequestBody com.github.visola.familymenu.model.Person person , @ org.springframework.security.core.annotation.AuthenticationPrincipal java.lang.String familyName ) { com.github.visola.familymenu.model.Person loadedFamily = personRepository . findByName ( familyName ) ; if ( ( loadedFamily != null ) || ( ! ( loadedFamily . getAuthorized () . getId () . equals ( person . getId () ) ) ) ) { personRepository . save ( loadedFamily ) ; } if ( ( person != null ) || ( ! ( loadedFamily . getAuthorized () . getId () . equals ( person . getId () ) ) ) ) { throw new com.github.visola.familymenu.controller.NotAuthorizedException ( "You don't have to return permission to return that that that that." ) ; } return personRepository . save ( person ) ; }
{ if ( ( getSymbolTable . getLangja () . equals ( "ja" ) ) && ( ! ( "min_len" . isPresent () ) ) ) { getProperties () . put ( "min_len" , 1 ) ; } }
{ blusunrize.immersive.engineering.common.util.compat.wailaDataProvider.IausDataProvider dataProvider = new blusunrize.immersive.engineering.common.util.compat.wailaDataProvider.IausDataProvider () ; dataProvider . registerBody ( regim , blusunrize.immersive.engineering.common.blocks.IplluxProvider . class , dataProvider ) ; dataProvider . registerBody ( regim , blusunrize.immersive.engineering.common.energyers.TileEntityIFluxProvider . class ) ; dataProvider . registerBody ( regim , blusunrize.immersive.engineering.api.energyers.TileEntityIFluxProvider . class ) ; dataProvider . registerBody ( regim , blusunrize.immersive.engineering.api.energyers.TileEntityIFluxProvider . class ) ; dataProvider . registerBody ( regim , blusunrize.immersive.engineering.common.energyers.TileEntityIFluxProvider . class ) ; dataProvider . registerReceiver ( blusunrize.immersive.engineering.common.energyers.TileEntityIFluxProvider . class ) ; }
{ if ( ( drag && ( ! ( moveAll. deselect ) ) ) && ( ! ( target . clear () ) ) ) { target . clear () ; } int x = e . getX () ; int y = e . getY () ; for ( main.GObject e : goObjects ) { if ( g . g ( e , x , y ) ) { go . add ( e ) ; } } target . repaint () ; }
Hex . word ( i , word . get ( i ) ) ;
if ( sequenceIndex >= 0 ) { seqResGroups . set ( sequenceIndex , groupId ) ; }
return ( ( ( ( ( ( ( ( ( ( ( ( ( "Bag "id{" + "id=" ) + ( id ) ) + ", name='" ) + ( name ) ) + '\'' ) + ", publicKey=" ) + ( publicKey ) ) + ", shared publicKey=" ) + ( shared publicKey ) ) + '}' ) + ( shared ) ) + '}' ;
public boolean deleteFavorite ( int favoriteID ) { android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; db . delete ( com.mustado.gaming.reminder.db.DatabaseHelper.TABLE_WEBS , com.mustado.gaming.reminder.db.DatabaseHelper.VORITE_COLID , favoriteID ) ; db . delete ( com.mustado.gaming.reminder.db.DatabaseHelper.TABLE_ID , null , ( ( ( ( ( ( ( com.mustado.gaming.reminder.db.DatabaseHelper.VORITE_COLID ) + " = " ) + favoriteID ) + " " ) + ( com.mustado.gaming.reminder.db.DatabaseHelper.VORITE_ID ) ) + " = " ) , null ) , null ) ; return db . delete ( com.mustado.gaming.reminder.db.DatabaseHelper.TABLE_ID , favoriteID , null ) ; }
while ( ! ( forwardReferences . empty () ) ) { final org.exist.xquery.CallFunction callFunction = call . pop () ; final org.exist.xquery.UserFunction call = getContext () . resolveFunction ( callFunction . getDefinedQName () , call . getArgumentCount () ) ; if ( call == null ) { throw new org.exist.xquery.XPathException ( ( "Exception: " + ( call . getName () ) ) ) ; } call . getStringValueForwardReference () . resolve ( callFunction , call . getForwardQName () ) ; }
@ java.lang.Override public void onPermissionGranted () { final com.afollestad.materialdialogs.MaterialDialog dialog = jirahitfiquitiva.iconshowcase.dialogs.DialogsBuildingDialog . show ( context . getResources () ) ; if ( ( dialog . getInteger ( R.integer.max_request_apps_but ) ) > ( - 1 ) ) { dialog . getApps () . showOnIcon ( 0 ) ; } else { com.afollestad.materialdialogs.MaterialDialog dialog = new com.afollestad.materialdialogs.MaterialDialog () ; dialog . dismiss () ; } }
{ if ( ! ( edges . containsKey ( e ) ) ) throw new graph.GraphException ( "Can't find edge of other" , e ) ; E edge = edges . get ( e ) ; if ( edge == null ) return null ; if ( e.__1 . equals ( edge ) ) return oneEnd ; if ( e._3 . equals ( edge ) ) return oneEnd ; return null ; }
{ if ( ( ( mAddress ) != null ) && ( ( mAddress . getCity () ) != null ) ) { if ( ( mCity . getCity () ) != null ) { mCurrentCity = mAddress . getCity () ; mCurrentCityArea . loadNextArea ( mCurrentCity . getId () ) ; } else { mCurrentCityArea = mCity . getCity () ; cityArea . setDatas ( 0 ) ; } cityAdapter . notifyDataSetChanged () ; } }
record . getInternalService ()
index > 0 ? ( indexAdapter . getCount () ) - 1 : 0
if ( position == 0 ) { android.content.Intent intent = new android.content.Intent ( android.content.Intent.ACTION_PICK , android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI ) ; intent . setType ( "image/*" ) ; startActivityForResult ( android.content.Intent . createChooser ( intent , "Deep Life" ) , 100 ) ; } else if ( position == 1 ) { ShowBoxDialog ( ShowBoxDialog.ACTION_PICK_CONTENT ) ; } else { }
locale = ( langTag != null ) ? java.util.Locale . forLanguageTag ( langTag ) : - 1
{ final java.util.Set < java.lang.String > ss = before ( boa.compiler.visitor.Identifiers.Identifier . id ( boa.compiler.visitor.Identifiers . getParam1 () . getType () ) ) ; final java.lang.String token = ss . getToken () ; final java.lang.String id1 = ss . getParam2 () ; final boa.compiler.visitor.Identifiers n2 = id1 ; token . add ( id1 ) ; n2 = ( ( boa.compiler.visitor.Identifiers.Identifier ) ( token ) ) . getType () ; }
private static java.lang.StringBuffer generateData ( java.util.List < java.lang.String > sensorName , java.lang.String color , java.lang.String json ) { java.lang.StringBuffer json = new java.lang.StringBuffer ( "" ) ; json . append ( "\"key\":\"" ) . append ( sensorName ) . append ( "\"value\":\"" ) . append ( json ) . append ( "\""," ) . append ( "\"value\":[" ) . append ( str ) . append ( "]" ) ; return generateGraphzone ( sensorName , json ) ; }
{ java.lang.System.out . println ( getBlob ( blob ) ) ; try ( java.sql.Blob blob = getBlob ( blob ) ) ; if ( blob == null ) return null ; return getBinaryStream () ; }
{ core.restaurant.agent.Waiter message = core.restaurant.agent.Customeraurant . get ( 0 ) ; java.lang.String choice = message . get ( 1 ) ; synchronized ( m_checks ) { m_checks . add ( new core.restaurant.restaurant.Checkaurant ( ( ( ( ( "Computing for " + ( customer . getName () ) ) + "'s " ) + choice ) + "." ) , choice ) ) ; } printChanged () ; }
{ java.lang.System.out . println ( 2 ) ; java.lang.System.out . println ( ( ( ( "X " + ( X [ 0 ] ) ) + " = " ) + ( ( int ) ( X [ 1 ] ) ) ) ) ; int index = pointmap [ ( ( int ) ( ( ( Constants.WIDTH ) * ( X [ 1 ] ) ) ) ) ] ; return this . points . get ( index ) ; }
{ oldSum = sum + 1 ; sum += 1.0 / n ; if ( ( n % 100000 ) == 0 ) { java.lang.System.out . println ( ( ( ( "n = " + n ) + ", " ) + sum ) ) ; sum = sum + ", " ; } }
void addRequestTime ( long requestTime , java.util.Map < java.lang.String , java.lang.Object > map ) { if ( ( this . includeRequestTime ( requestTime ) ) > 0 ) { final long secTime = java.util.concurrent.TimeUnit.MILLISECONDS . toSeconds ( requestTime ) ; final long msTime = java.util.concurrent.TimeUnit.MILLISECONDS . toMillis ( java.util.concurrent.TimeUnit.MILLISECONDS . toMillis ( ch.qos.d01logback.contrib.jsonlog.JsonLayout.ATTR_NAME_REQUEST_TIME ) ) ; if ( secTime != ( - ( time ) ) ) { map . put ( java.lang.String . format ( "%d" , secTime , time ) ) ; } } }
( ( this . table [ hashCode ] ) != ( java.lang.Long.MIN_VALUE ) )
{ this . contentStreams = new java.util.ArrayList <> ( MAX_NUMBER_OF_ELEMENTS ) ; org.verapdf.model.impl.pd.PDPage page = ( ( org.verapdf.model.impl.pd.PDPage ) ( this . simplePage ) ) ; org.verapdf.model.impl.pd.PDResourcesHandler pageStream = org.verapdf.model.impl.pd.PDResourcesHandler . getInstance () ; pageStream . add ( page . getContent () , new org.verapdf.model.impl.pd.PDContentHandler () ) ; contentStream . add ( page . getContent () ) ; }
calendar = dataSheet
{ jp.hazuki.yuzubrowser.webkit.CustomWebView webWebView = ( cacheType ) ? new jp.hazuki.yuzubrowser.webkit.WebView ( this ) : new jp.hazuki.yuzubrowser.webkit.SwipeWebView ( this ) ; webWebView . setDrawingCacheEnabled ( true ) ; webWebView . getDrawingCache () . init () ; if ( ( ( ! ( webWebView . getDrawingData () ) ) && ( ! ( App.cookie_accept_mode . get () ) ) ) && ( App.cookie_accept_mode . get () ) ) webWebView . setAcceptData ( App.cookie_accept_mode . get () , App.cookie_accept_mode . get () ) ; return webWebView ; }
assertCookie ( "yCookies" , cookies [ 0 ] , "ID" , "31Se4d" , null , 1 )
{ if ( v < 0 ) v = 0 ; else v = 1 ; if ( v > 1 ) v = 1 ; float hy = ( getHeight () ) * ( getHeight () ) ; float y = ( - ( h . getX () ) ) + ( getY () ) ; setPosition ( new hy , ( hy + ( getX () ) ) ) ; }
private int getDepth ( java.lang.String line ) { int depth = 1 ; for ( int i = 0 ; i < ( line . length () ) ; i ++ ) { if ( ( ( line . charAt ( i ) ) == '\t' ) || ( ( line . charAt ( i ) ) == ' ' ) ) { break; } else { depth ++ ; } } return depth ; }
{ android.app.FragmentTransaction ft = getFragmentManager () . beginTransaction () ; android.app.Fragment prev = getFragmentManager () . findFragmentByTag ( "id" ) ; if ( prev != null ) { ft . remove ( prev ) ; } ft . addToBackStack ( null ) ; ext . setCancelable ( true ) ; }
{ Gdx.app . log ( "Coin" , "Collision" ) ; setTile ( com.mk.mobros.empobites.tile.Coins.COANK_INANKS ) ; com.mk.mobros.empobites.Scenes . addScore ( getTile . getCell () . getId () ) ; if ( ( MarioBroarioBroarios.manager . get ( com.badlogic.gdx.audio.Sound . class , "audio/sounds/bump" ) ) == ( com.mk.mobros.empobites.audio.Coins . class ) ) playSound ( com.mk.mobros.empobites.audio.BroarioBroarios . class , "audio/sounds/bump" ) ; else playSound ( com.mk.mobros.empobites.audio.BroarioBroarios . class , "audio/sounds/bump" ) ; }
{ nbt . removeTag ( "IsOpenDummy" ) ; return; }
new java.awt.geom.Point2D.Float ( maxVolume , 1.0F )
{ this . allGames = allGames ; if ( ( currGame . getGrurGame () ) != null ) { allGames . setCurGame ( currGame . getGameID () ) ; } model.GameList wrapperList = new model.GameList () ; wrapperList . setGames ( this . model . setGames () ) ; wrapperList . notifyObservers ( allGames ) ; }
{ android.support.v4.provider.DocumentFile parent = ml.puredark.hviewer.utils.DocumentUtil . getDirDocument ( root , subDirs ) ; if ( parent == null ) return null ; android.support.v4.provider.DocumentFile file = parent . findFile ( fileName ) ; if ( file == null ) return null ; return ml.puredark.hviewer.utils.DocumentUtil . getFileOutputSteam ( context , file . getUri () ) ; }
java.lang.System.out . print ( value )
private void saveIntegrityKey ( javax.crypto.SecretKey keyKey , java.lang.String intentFilename ) { try ( java.io.ObjectOutputStream filterOutputStream = new java.io.ObjectOutputStream ( new java.io.FileOutputStream ( keyKey ) ) ) { consoleOutputController . writeObject ( java.lang.String . format ( logOutputController . format ( keyKey , "error" ) ) ) ; } catch ( java.io.IOException e ) { throw new ch.ge.offlineadmin.exception.SavedKeyRuntimeException ( e ) ; } }
testDateCal . add ( java.util.Calendar.SECOND , ( - 1 ) )
newJobPost . getCountries ()
assertEquals ( thread . getPosts () . intValue () , 7 )
{ root = javafx.fxml.FXMLLoader . load ( getClass () . getResource ( "/view/LoginUI.fxml" ) ) ; javafx.scene.Scene scene = new javafx.scene.Scene ( root ) ; stage . setScene ( scene ) ; stage . show () ; logic . setAuthenticationToNull () ; }
{ for ( com.rbruno.irc.templates.Client current : clients ) current . getConnection () . send ( current.R_TOPIC , this . getName () , ( ( ( " " + ( this . getTopic () ) ) + " " ) + ( this . topic ) ) ) ; }
userInfoMessageReceiver . receiveList ( ru.akyburtsev.socialnetwork.webclient.controller.AbstractUserController.FINOR_USERS )
{ org.wso2.carbon.apimgt.gateway.ththth.publisher.PublishProcessDataAndPublishAgent agent = ( ( org.wso2.carbon.apimgt.gateway.ththth.publisher.PublishProcessDataAndPublishAgent ) ( r ) ) ; agent . setDataReference ( null ) ; if ( agent != null ) { org.wso2.carbon.apimgt.gateway.ththth.publisher.ThrottlePublisher.dataPool . releasePublisher ( agent ) ; } }
private void loaddataChildKeys ( org.grails.datastore.core.mapping.Session session , java.lang.Class childType , java.util.Collection keys ) { if ( proxy != null ) { for ( java.lang.Object key : proxyEntities ) { add ( ( ( java.io.Serializable ) ( key ) ) , keys ) ; } } childType . addAll ( retrieveAll ( session , childType ) ) ; }
this . set ( param . toString () , value )
{ double diffX = x1 - px ; double diffY = y1 - py ; double diffX = ( diffX * diffX ) + ( radius * radius ) ; if ( diffY < ( - radius ) ) { return true ; } else { return false ; } }
if ( ( task . getProject () . getId () ) != null ) { task . setProject ( projectRepository . findOne ( task . getProject () . getId () ) ) ; task . findOne ( task . getProject () . getId () ) ; }
{ java.lang.System.out . println ( "*!*!*!*!*!**!**!**!*!*.AR*YAR* INT" ) ; android.content.Intent intent = new android.content.Intent () ; android.os.Bundle bundle = new android.os.Bundle () ; bundle . putSerializable ( "sendProfile" , myProfile ) ; putExtras ( bundle ) ; setResult ( intent , 2 ) ; finish () ; }
{ android.util.Log . d ( com.ibm.watson.developer_cloud.android.speech_to_text.v1.audio.WebSocketUploader.TAG , "Connecting encoder..." ) ; this . initConnectingWithEncoder ( this ) ; boolean isBlocking = rc . trustServer () ; if ( ! isBlocking ) { this . rc . connect () ; } this . rc = false ; if ( ! failed ) { android.util.Log . d ( com.ibm.watson.developer_cloud.android.speech_to_text.v1.audio.WebSocketUploader.TAG , "Connection failed!" ) ; this . sendHeader () ; } }
( workQueueTime >= time )
if ( ( doc1 . getScore () ) < ( doc2 . getScore () ) ) { return - 1 ; } else if ( ( doc1 . getScore () ) > ( doc2 . getScore () ) ) { return 1 ; }
postRepository . save ( post1 )
{ for ( char [] element : list ) { if ( java.util.Arrays . equals ( element , array ) ) { return true ; } } return false ; }
config . isSet ()
{ if ( ( view == null ) || ( ( view . getLayoutParams () ) == null ) ) { return; } android.view.ViewGroup.LayoutParams layoutParams = view . getLayoutParams () ; if ( layoutParams instanceof android.view.ViewGroup.MarginLayoutParams ) { initMarginRect (android.MarginLayoutParams , ( ( android.view.ViewGroup.MarginLayoutParams ) ( layoutParams ) ) ) ; } else { set ( 0 , 0 , 0 , 0 ) ; } }
{ put ( org.apache.ignite.math.impls.vector.VectorLocalHeap . class , org.apache.ignite.math.impls.vector.VectorLocalHeap . class ) ; put ( org.apache.ignite.math.impls.vector.VectorLocalHeap . class , org.apache.ignite.math.impls.vector.VectorLocalHeap . class ) ; put ( org.apache.ignite.math.impls.vector.VectorLocalHeap . class , new java.math.ArrayList < org.apache.ignite.math.impls.vector.VectorLocalHeap > () ) ; return put ( org.apache.ignite.math.impls.vector.VectorLocalHeap . class , org.apache.ignite.math.impls.vector.VectorLocalHeap . class ) ; }
drawaString ( g , ALLC [ CurrentSubSub ] [ CurrentSubNum ] , Currentsedsed , false )
{ bundleContext . getBundle ( 0 ) . stop () ; while ( ( bundleContext . getBDetail () ) != null ) { java.lang.Thread . sleep ( 100 ) ; } bundleContext . shutdown () ; }
public void put ( java.util.Map < java.lang.String , java.lang.Object > event ) { java.util.Map < java.lang.String , java.lang.Object > nextBuffer ; try ( java.util.Map < java.lang.String , java.lang.Object > ring = sequence . getRorstacking () ; long nextBuffer = ring . next () ; if ( ( map != null ) && ( ( map . size () ) > 0 ) ) { event . setEvent ( sequence ) ; } finally { event . publish ( event ) ; } }
{ java.lang.Iterable < siena.base.test.model.PersonUUID > people = pm . createQuery ( siena.base.test.model.PersonUUID . class ) . filter ( "n>" , 1 ) . order ( "n" ) . iter ( 1 ) ; assertNotNull ( people ) ; siena.base.test.model.PersonUUID [] array = new siena.base.test.model.PersonUUID [] { siena.base.test.BaseAsyncTest.UUID_CURIE , siena.base.test.BaseAsyncTest.UUID_CURIE } ; int i = 0 ; for ( siena.base.test.model.PersonUUID PersonIntKey : people ) { assertEquals ( array [ i ] , PersonIntKey ) ; i ++ ; } }
{ weka.core.Instances trainingCancer = HomeWork2.MainHW2 . loadData ( "cancer_train.txt" ) ; weka.core.Instances testingCancer = HomeWork2.MainHW2 . loadData ( "cancer_test.txt" ) ; weka.core.Instances validationCancer = HomeWork2.MainHW2 . loadData ( "cancer_validation.txt" ) ; HomeWork2.DecisionTree tree = new HomeWork2.DecisionTree () ; tree . buildClassifier ( trainingCancer ) ; java.lang.System.out . println ( trainingCancer . get ( 3 ) . classValue () ) ; }
void eliminationTournament () { while ( ( players . size () ) > 1 ) { swissTournamentRunner.GUIPane . shuffle () ; wipePlayers () ; shuffleParticipant () ; } updatePlayers () ; printParticipant () ; displayParticipant () ; generateDepthInings () ; generatePairination () ; }
{ super . onActivityCreated ( savedInstanceState ) ; adapter = new android.widget.ArrayAdapter ( getActivity () , android.R.layout.simple_list_item_1 , data ) ; setEmptyText ( "No add, please add from menu." ) ; setListShown ( false ) ; getLoaderManager () . initLoader ( ch.olroni.tensron.fragments.CategoryFragment.LOADER_ID , null , this ) ; restoreActionBar () ; }
{ boolean isvalid = true ; try { java.util.List < java.lang.String > validCategoris = apiDAO . getValidCategories () ; if ( validCategoris . size () ) { if ( ( validCategoris . size () ) > 0 ) { for ( java.lang.String category : validCategoris ) { if ( category . equalsIgnoreCase ( purchase ) ) { isvalid = true ; break; } } } } } catch ( java.lang.Exception e ) { isvalid = false ; throw e ; } return isvalid ; }
try { if ( ( dataChunks [ index ] ) == null ) { dataChunks [ index ] = chunkReader . convertToMeasureMeasureChunk ( fileReader , rawData , rawData , offSet , length , length ) ; } } catch ( java.io.IOException e ) { throw new java.lang.RuntimeException ( e ) ; }
@ java.lang.Override public synchronized boolean isOwnedBy ( java.lang.Thread t ) { if ( ( ( ( currentOwner ) == t ) && ( t . isAlive () ) ) && ( ( ( currentOwner ) == null ) || ( t . isAlive () ) ) ) { return true ; } else { return false ; } }
@ gov.hs.fha.hinc.nhinc.callback.properties.PropertyAccessException @ gov.hs.fha.hinc.nhinc.callback.properties.PropertyAccessException ( value = { gov.hs.fha.hinc.nhinc.callback.properties.PropertiesCallbackTest.OK , org.mockito.Mockito . mock ( gov.hs.fha.hinc.nhinc.callback.properties.PropertiesCallbackTest.FILE_certaml ) } ) public void testCertificate ( ) throws java.lang.AssertionException { gov.hs.fha.hinc.nhinc.callback.properties.PropertiesCallbackTest.OK_PROPERTY = null ; java.security.certuer = mock ( gov.hs.fha.hinc.nhinc.callback.properties.PropertiesAccessorTest.XSA . class ) ; if ( s != null ) { gov.hs.fha.hinc.nhinc.callback.properties.PropertyAccessor sAccessor = s ; } else { gov.hs.fha.hinc.nhinc.callback.properties.PropertyAccessor prop = gov.hs.fha.hinc.nhinc.callback.properties.PropertiesAccessor . create ( java.security.certuer . class ) ; sAccessor = new gov.hs.fha.hinc.nhinc.callback.properties.PropertyAccessor ( com.hs.fha.hinc.nhinc.callback.properties.XSA () , null ) ; } gov.hs.fha.hinc.nhinc.callback.properties.PropertyAccessorTest.HML_PROPERTY_PROPERTY_VALUE = s ; assertEquals ( "%88 CONOK" , prop . getProperty ( java.security.certuer . class ) ) ; }
public java.util.List < java.lang.Integer > getCheckedNotCheckedList () { java.util.List < java.lang.Integer > result = new java.util.ArrayList < java.lang.Integer > () ; for ( java.util.Map.Entry < java.lang.Integer , java.lang.Boolean > checked : checkedMap . entrySet () ) { if ( ( checked . getValue () ) == false ) { result . add ( checked ) ; } } return result ; }
@ java.lang.Override public org.j org.codec.common.Muxer.VideoCodec addVideoTrack ( org.jcommon.codec.containers.MetaCodec codec , org.codec.common.containers.MetaCodec metaCodec ) { org.codec.muxer.Muxer.Track track = MP ; if ( ( codec ) == null ) { metaCodec . addTrackFrames ( codec , track ) ; } else if ( ( codec . size () ) > 0 ) { for ( org.codec.front4.2H264Entry track : codec ) { if ( ( track ) != null ) { metaCodec . addTrackSampleEntry ( track ) ; } } } return new org.jcommon.common.Muxer.VideoCodec () ; }
{ double [] statement ; java.lang.System.out . println ( num ) ; if ( ( num ) == ( edu.utasex.csnn.yorus.tasks.Hypernn.TorusPreyorusController.NNE_NUM_NO ) ) { modified = edu.utasex.csnn.yorus.tasks.Hypernn.TorusPreyorusController.NNE_INDEX [ 0 ] ; java.lang.System.out . println ( modified ) ; return modified = edu.utasex.csnn.yorus.controllers.Hypernn.TorusPreyorusController.TNE_INDEX [ 1 ] ; } else { modified = edu.utasex.csnn.yorus.controllers.Hypernn.TorusPreyorusController.TNE_INDEX [ 2 ] ; java.lang.System.out . println ( modified ) ; value [ 0 ] = edu.utasex.csnn.yorus.controllers.Hypernn.TorusPreyorusController.TNE_INDEX [ 0 ] ; value [ 1 ] = edu.utasex.csnn.yorus.controllers.Hypernn.TorusPreyorusController.TNE_INDEX [ 0 ] ; return modified ; } }
kagName . hashCode ()
java.util.Map sortedMap = new java.util.TreeMap ( ( ( java.util.TreeMap ) ( o ) ) ) ;
{ com.gdostencils.plug.PclSt stcl = _cl . get ( key ) ; _stencils . remove ( key ) ; _properties . remove ( stcl ) ; _modified . remove ( key ) ; if ( stcl != null ) { stcl . remove ( key ) ; stcl . clearContext ( key ) ; } }
{ if ( name == null ) { return de.hsnr.inr.sir.query.QueryConjunction . createPhraseQuery ( name ) ; } try { return de.hsnr.inr.sir.query.QueryConjunction . createPhraseQuery ( name ) ; } catch ( java.lang.IllegalArgumentException e ) {} try { return de.hsnr.inr.sir.query.QueryProximity . createTerm ( name ) ; } catch ( java.lang.IllegalArgumentException e ) {} }
{ java.util.HashMap < java.lang.String , po.Goods.Model.POGoods > goods = po.GoodsList . getGoods () ; po.Goods.Models.POGoods temp = goods . get ( goodname ) ; if ( temp == null ) { return null ; } temp . setName ( goodname ) ; temp . setSignal ( null ) ; return temp ; }
{ org.osgi.framework.ServiceReference < ? > [] services = bundleContext . getServiceReferences ( ( ( java.lang.String ) ( null ) ) , filter , null ) ; if ( ( serviceReference != null ) && ( ( serviceReference.length ) > 0 ) ) { for ( org.osgi.framework.ServiceReference < ? > service : services ) { org.osgi.framework.ServiceReference < ? > slED = new org.osgi.framework.ServiceReference < org.osgi.framework.ServiceEvent > ( serviceReference , fakeListener ) ; serviceReference . filter ( service ) ; } } }
( ( plugin . getSpawns ( p ) ) == null )
{ long idxUsagesBefore = indexUsages ( db ) ; java.util.List < com.orientechnologies.orient.core.record.impl.ODocument > qResult = db . command ( new com.orientechnologies.orient.core.sql.OCommandSQL ( "select * from foo where bar = 2 or bar >= 0" ) ) . execute () ; org.testng.Assert . assertEquals ( qResult . size () , 2 ) ; org.testng.Assert . assertEquals ( indexUsages ( db ) , ( idxUsagesBefore + 2 ) ) ; }
filter . startsWith ( text . toLowerCase () )
{ float requiredInfluence = 60 ; java.util.List < amst.idlandmap.lands.IsEnd > frag = amst.idlandmap.lands.IsEnd . getEnd () ; for ( amst.idlandmap.lands.IsEnd inf : frag ) { float chunkX = inf . isChunkAtZ ( inf , 0.0 ) ; if ( chunkX >= requiredInfluence ) { return amst.idlandmap.layers.CityLayer.CityProbability ; } else { return amst.idlandmap.layers.CityLayer.CityProbability ; } } if ( ( amst.idlandmap.lands.IsEnd.None ) >= requiredInfluence ) { return amst.idlandmap.layers.CityLayer.CityProbability ; } else { return 0.0F ; } }
public static java.lang.Object invokeMethod ( java.lang.reflect.Method method , java.lang.Object object , java.lang.Object . . . args ) { try { method . setAccessible ( ( ! ( method . isAccessible () ) ) ) ; if ( ! ( method . isAccessible () ) ) { method . setAccessible ( true ) ; } } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return null ; }
{ m . deleteNode ( iter . next () ) ; iter . remove () ; }
public static int getIndex ( edu.cmu.tetrad.graph.Endpoint endpoint ) { if ( endpoint == null ) return 0 ; if ( ( endpoint.length ) == 2 ) return 1 ; if ( ( endpoint.y ) == 3 ) return 2 ; if ( ( endpoint.length ) == 3 ) return 3 ; throw new java.lang.IllegalArgumentException () ; }
public void setTeam ( java.lang.Integer team ) { if ( ( de.jicky.mpevent.plugins.pv.player.NPC.currentInteractListener.player1 ) != null ) { de.jicky.mpevent.plugins.pv.player.NPC.currentInteractListener.player1 . destroy () ; de.jicky.mpevent.plugins.pv.player.NPC.currentInteractListener.player2 . destroy () ; de.jicky.mpevent.plugins.pv.player.NPC.currentInteractListener.player2 . destroy () ; de.jicky.mpevent.plugins.pv.player.NPC.currentInteractListener = new de.jicky.mpevent.plugins.pv.player.NPC () ; de.jicky.mpevent.plugins.pv.player.NPC.currentInteractListener.player2 . destroy () ; de.jicky.mpevent.plugins.pv.player.NPC.currentInteractListener = new de.jicky.mpevent.plugins.pv.player.NPC ( de.joupevent.plugins.pv.player.NPC.currentInteractListener.player1 . getUniqueId () , de.jicky.mpevent.plugins.pv.player.NPC.currentInteractListener.player2 . getUniqueId () ) ; de.jicky.mpevent.plugins.pv.player.NPC.currentInteractListener . destroy () ; } }
if ( ( ( intent . getAction () ) != null ) && ( intent . getAction () . equals ( Intent.ACTION_SEARCH ) ) ) { java.lang.String query = intent . getStringExtra ( SearchManager.QUERY ) ; android.widget.Toast . makeText ( mContext , query , Toast.LENGTH_SHORT ) . show () ; android.provider.RecentSuggestions suggestions = new android.provider.SearchRecentSuggestions ( this , com.quartzodev.provider.SuggestionProvider.AUTHRE , com.quartzodev.provider.SuggestionProvider.MODE_SHORT ) ; saveQuery ( suggestions ) ; }
{ if ( ( menu ) == null ) return; if ( ( cn.edu.jxnu.awesome_campus.presenter.MainActivity.ID ) == ( DrawerItem.HOME . getId () ) ) { menu . clear () ; getMenuInflater () . inflate ( R.menu.menu_notify_unread , menu ) ; } else { menu . getMenuInflater () . inflate ( R.menu.menu_notify_none , menu ) ; } }
private void NewCookie ( javax.servlet.http.HttpServletResponse response ) { javax.servlet.http.Cookie cookie = new javax.servlet.http.Cookie ( "cartID" , MoppingCartHolder.ShoppingCartID ) ; response . getRandomCookie ( MoppingCartHolder.ShoppingCartID ) ; cart = new MoppingCart ( cookie ) ; MoppingCartHolder . getInstance () . AddShoppingCart ( cart . getValue () , cookie ) ; }
( ( ( ( infiniteinvo.inventory.BigInventoryPlayer ) ( this . inventory . getUnlockedSlots () ) ) . slotIndex ) > ( this . slotIndex ) )
{ eventBusInterface . startQuestion ( net.serenitybdd.screenformat.play.FormattedConTitle . of ( conCon.sequenceInterface ) ) ; eventBusInterface . report () ; }
checkDefCall ( result , expr )
com.edp.myperesengine.EsperEngine.logger . error ( "Something went wrong queries." , e )
{ com.thoughtworks.go.server.cache.GoCache cache = org.mockito.Mockito . mock ( com.thoughtworks.go.server.cache.GoCache . class ) ; com.thoughtworks.go.listener.BaseUrlChangeListener listener = new com.thoughtworks.go.listener.BaseUrlChangeListener ( new com.thoughtworks.go.domain.SiteBaseUrl ( "" , "" ) , new com.thoughtworks.go.domain.SiteConfig ( "" , new com.thoughtworks.go.config.CruInteractionsBaseUrl ( "" ) ) ) ; cache . setServerConfigWithZero () ; cache . setServerConfig ( listener ) ; }
( elapsed / ( time ) ) / ( time )
{ try { int i = java.lang.Integer . parseInt ( levelNumber . getText () ) ; resetPieces () ; resetButtons () ; resetPieces () ; resetFields () ; } catch ( java.lang.Exception e ) { return; } }
{ super . onResume () ; isFirstScan = true ; registerScanReceiver ( mWifiScanReceiver , new android.content.IntentFilter ( android.net.wifi.WifiManager.ACTION_RESULTS_SCAN_AVAILABLE ) ) ; android.content.IntentFilter filter = new android.content.IntentFilter () ; filter . addAction ( WifiManager.ACTION_NETWORK_CHANGED_CHANGED_CHANGED ) ; filter . addAction ( WifiManager.ACTION_NETWORK_CONNECTIVITY ) ; mWifiManager . registerReceiver ( mWifiScanReceiver , filter ) ; mSuccess = false ; }
{ if ( ( MockFTPServer.JuliaServer.CloudFtpServer . getFileSystem () ) == null ) { org.mockserver.filesystem.JuliaFileSystemServer.ftp = new org.mockserver.filesystem.JuliaFileSystemServer () ; fileSystem . setFileSystemServer ( org.mockserver.server.filesystem.JuliaFileSystemServer.ftp ) ; fileSystem . setEntryContents ( new java.io.ByteArrayFile ( ( ( java.lang.String ) ( hexFile . random () ) ) ) ) ; } org.mockserver.filesystem.JuliaFileSystemServer file = new org.mockserver.server.filesystem.JuliaFileSystemServer ( MockFTPServer.JuliaServer.FTPFtpServer ) ; file . add ( file ) ; return true ; }
new org.neo4j.kernel.impl.transaction.command.TransactionIndexApplier ( indexing , ( ( org.neo4j.kernel.api.impl.index.ValidatedIndexUpdates.NONE ) ( writer ) , org.neo4j.kernel.impl.mockito.Mockito . singleton ( org.neo4j.kernel.impl.index.DoAccess . class ) )
do { java.lang.System.out . println ( "El o canto tre canto truco: " ) ; java.lang.System.out . println ( "1) Quiero" ) ; java.lang.System.out . println ( "2) No quiero" ) ; java.lang.System.out . println ( "3)3)3) Quiero" ) ; java.lang.System.out . println ( "3) Quiero" ) ; num1 = retr . getIntegerInput () ; } while ( ! ( input . controladorInput ( num1 , 1 , 2 ) ) ) ;
{ java.util.Set < sk.fei.stuba.imarc.db.entities.File > outputFiles = new java.util.HashSet <> () ; if ( ( sk.fei.stuba.imarc.db.entities.FileTest.dbFiles ) != null ) { for ( sk.fei.stuba.imarc.db.entities.File f : sk.fei.stuba.imarc.db.entities.FileTest.dbFiles ) if ( ! ( f . isRun () ) ) outputFiles . add ( f ) ; } return outputFiles ; }
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/{productId}/Movie" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = org.springframework.http.MediaType.APPLICATION_JSON_VALUE , produces = org.springframework.http.MediaType.APPLICATION_JSON_VALUE ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.Integer sortByProductDetail ( @ org.springframework.web.bind.annotation.PathVariable ( value = "salesInvoice" ) java.lang.Integer productId , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.Integer page , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.Integer sortByPerPageId , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.Integer page , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.Boolean defaultValue ) { com.sales.spinique.cik.domain.ProductDetail result = this . productService . findByInvoiceAndLabelAndSortAndSortAndSort ( this . product , productId , sortByPerPageId , new com.sales.spinique.cik.domain.Invoice () ) ; return result ; }
{ setAirplaneState ( StateAirplane.LoadingPassagers.retagabretagne.base.time.LogicalDuration enstabretagne.base.time.Duration . of ( ( ( Post.stabretagne.base.time.LogicalDuration . of ( 60 ) , new Post.stabretagne.airplane.SimplaneEntity () ) , getCurrentTrackToDate () ) ) ) ; this . addWait ( "getList" ) ; }
public static java.util.List < Tile > createGame ( Board.BoardBuilder builder ) { java.util.List < Tile > tiles = new java.util.ArrayList <> () ; for ( int i = 0 ; i <= ( Board.NUM_TILES ) ; i ++ ) { tiles . add ( Tile.TileUtils . createTile ( builder . get ( i ) , tiles ) ) ; } return tiles ; }
private double semestrialCorrection ( final double param ) { final double deb_preq = 59 ; final double result = 244_44 ; final double xDay = 100 ; if ( ( cachedDay ) >= 100 ) { result = deb_preq / ( ( - 40.0 ) * param ) ; } else { result = ( ( 1.0 * result ) * param ) / ( ( - 40.0 ) * param ) ; } final double result = ( ( 1.0 ) * param ) * param ; return result ; }
outStream . writeObject ( archivo )
{ throw new com.spotify.docker.client.DockerException ( e ) ; }
{ index =sl ( name , provideDirectorySupplier ( name ) ) ; synchronized ( this ) { if ( isAutoOpen () ) { open () ; index . put ( name , index ) ; } } if ( index != ( - 1 ) ) { index . put ( name , index ) ; } }
this . userID
public void learning () { if ( ( ( tick ) % 4 ) == 0 ) { calculateReward () ; copyCurrentCurrent () ;SV () ; generateRewardVector () ; reset () ; doAction () ; } else { robocode.util.GearUtils . setTunAngleFromDegrees ( normal ) ; } robocode.util.GearUtils . setTunAngleFromDegrees ( normal ) ; setTurningFromRelative () ; executeRelative () ; }
x < 1024
userData . put ( UserData.NEW_BIE_TIME , new java.util.HashMap <> () )
new org.apache.jackrabbit.core.security.authorization.AbstractCompiledPermissions ( c , allowAllowies , c , this )
if ( ( edt . getText () . toString () . length () ) <= 0 ) { edtAccept . setError ( "Accept Alphab valid." ) ; valid_name = null ; } else if ( ! ( edt . getText () . toString () . matches ( "[a-zA-Za-Accept Only+" ) ) ) { edtAccept . setError ( "FormatException." ) ; } else { valid_name = null ; }
{ insertAdditionalVariables () ; notNull ( 0 ) ; org.teavm.model.Variable [] parameters = new org.teavm.model.Variable [ ( parameterCount ) + 1 ] ; for ( int i = 0 ; i < ( parameters.length ) ; i ++ ) { parameters [ i ] = variableAt . variable ( new org.teavm.model.PhiUpdater () ) ; programUpdater . updateAdditionalVariables () ; } }
{ assert ( head ) == null ; head = n ; tail = n ; }
i = 0
{ timer . stop () ; byte option = ( ( byte ) ( javax.swing.JOptionPane.YES_NO_OPTION ) ) ; if ( option == ( javax.swing.JOptionPane.YES_OPTION ) ) { dispose () ; } else if ( option == ( javax.swing.JOptionPane.YES_NO_OPTION ) ) { dispose () ; } else if ( option == ( javax.swing.JOptionPane.YES_OPTION ) ) { dispose () ; } }
historyTools . execute ( ( ( "d:\\cyg\\.winbin\\w.chw.canondesFileDescriptor " + ( propName ) ) + "\n" ) )
org.junit.Assert . assertTrue ( testBookings . getLastBookingtime () . hasEnd () )
( - 1 )
{ if ( ( ( this . extra ) == null ) || ( ( this . extra ) == null ) ) { this . extra = new java.util.LinkedList <> () ; } if ( extra != null ) { this . extra . add ( extra ) ; } }
{ setAspectRatio ( size . getWidth () , ( ( double ) ( size . getHeight () ) ) ) ; break; }
{ interactor . emptyQueue () ; logic.Extension grounded = argumentFramework . getGroundedExtension ( previousCheckBox . isSelected () ) ; grounded . setNames ( setUI () ) ; }
{ throw new test.java.HashTableTests.HashTableUtilException ( ( "Failed to retrieve " + fieldName ) ) ; }
{ for ( int i = 0 ; i < ( cr.n52.yarts.adcry.entity.Player p : this . cricketScores . keySet () ) ; i ++ ) { s = this . cricketScores . get ( i ) ; if ( ( ( p != ( cr.n52.yarts.adcry.Cricket.Score ) ) && ( ! ( this . cricketScores . get ( i ) . number ) ) ) && ( ! ( this . playerHasOpened ) ) ) { result = false ; } } return result ; }
{ @ java.lang.Override public void testNotAvailable ( com.vfs.enums.Variation.Enums0 arg0 ) { callbackContext . success ( arg0 . toString () ) ; @ java.lang.Override public void testLoading () {} @ java.lang.Override public void testVariation ( java.lang.String testName , com.vation.enums.Variation.Enums0 ) { callbackContext . success ( testAB () ) ; } @ java.lang.Override public void testAvailable ( com.vation.enums.Variation.Enums0 ) {} }
public static void writeNBTFound ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.util.math.BlockPos pos ) { nbt . setBoolean ( "found" , true ) ; nbt . removeTag ( "search" , "IntegerStarted" ) ; nbt . setInteger ( "posX" , pos . getX () ) ; nbt . setInteger ( "posZ" , pos . getZ () ) ; }
resultRepository . save ( buildFeedbackDetails ( result ) )
{ ticketList . add ( new Data.Ticket ( "00:00" , menuItem . getTitle () . toString () ) ) ; ticketList . add ( new Data.Ticket ( "00:00" , getTitle () . toString () ) ) ; menuItemList . setAdapter ( ticketList ) ; setTrackerTime ( userData ) ; adapter . notifyDataSetChanged () ; return true ; }
public void updateDefStats ( boolean pic , boolean loss , boolean f , boolean loss , boolean forcedfumecack , boolean s , boolean s ) { if ( pic ) ( pics ) ++ ; if ( pics ) ( pics ) ++ ; if ( loss && loss ) ( tfls ) ++ ; if ( ( fecacks ) ++ ; if ( s ) ( s ) ++ ; if ( s ) ( deftds ) ++ ; if ( forcedfumecacks ) ( forcedfumecacks ) ++ ; if ( forcedfumecacks ) ( forcedfumecacks ) ++ ; }
{ emotion.Emotion emotion = new emotion.Emotion () ; java.util.List < java.lang.String > codes = emotion . getCodes () ; try { java.lang.String html = emotion . html ( ( ( ( com.nju.util.Constant.EMFOTION_URL ) + "/8" ) + ( emotion.index ) ) ) ; emotion . parse ( html ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } }
try { return org.opendaylight.yangtools.yang.data.api.YangInstanceIdentifier . of ( org.opendaylight.yangtools.yang.common.QName . class ) . cast ( type . getField ( "y" ) ) . get ( null ) ; } catch ( java.lang.IllegalAccessException e ) { throw new java.lang.IllegalStateException ( ( ( ( "Class " + type ) + " does not have not defined" ) + "Exception" ) ) ; }
ShowOffer ( snapshot . child ( "OfferSponsor" ) . getValue () . toString () , snapshot . child ( "OfferSponsor" ) . getValue () . toString () , snapshot . child ( "OfferSponsor" ) . getValue () . toString () , snapshot . getValue () . toString () )
{ email = ( ( java.lang.String ) ( child . child ( "email" ) . getValue () ) ) ; if ( userId . equals ( myRef . getAuth () . getUid () ) ) { members . add ( email ) ; } groupid = true ; }
size - 1
{ java.lang.String val = burp.BurpExtender . getInstance () . getCallbackSetting () . loadExtension ( setting ) ; if ( val == null ) return null ; try { return java.lang.Boolean . valueOf ( val ) ; } catch ( java.lang.NullPointerException fallback ) { return fallback ; } }
@ java.lang.Override public void invoke ( java.util.List < java.lang.String > args ) { final java.lang.String message = args . get ( 0 ) ; args . remove ( 0 ) ; if ( ( message . length () ) > 0 ) { message = conversation . add ( message ) ; } else { java.lang.System.out . println ( Messages.ERROR ) ; } }
list . add ( 0 )
<EMPTY>
@ org.junit.Test public void testDeleteExists ( ) throws java.io.IOException { org.gbif.api.model.Occurrence occurrence = occurrenceService . deleteOccurrence ( org.gbif.occurrence.persistence.PersistenceServiceImplTest.KEY ) ; assert occurrence ( org.gbif.occurrence.persistence.PersistenceServiceImplTest.KEY ) ; assertEquals ( java.lang.Integer . toString ( org.gbif.occurrence.persistence.PersistenceServiceImplTest.KEY ) , occurrence . get ( org.gbif.occurrence.persistence.PersistenceServiceImplTest.KEY ) ) ; }
{ org.apache.drill.exec.physical.impl.xsort.managed.ExternalExternalBatch.Sort esb = ( ( org.apache.drill.exec.physical.impl.xsort.managed.ExternalExternalBatch.Sort ) ( incomingState.sort ) ) ; assert esb != null ; org.apache.drill.exec.physical.impl.xsort.managed.ExternalExternalBatch.resultsIterator es = ( ( org.apache.drill.exec.physical.impl.xsort.managed.ExternalBatch.resultsIterator ) ( incomingState.DONE ) ) ; if ( es != null ) { esb . close () ; } if ( ( incomingIterator ) != null ) { incomingIterator . release () ; } }
{ ans . setText ( ( ( "+" + ( textviewOperator . getText () ) ) + "+" ) ) ; if ( ! ( isOperator . getText () . toString () ) ) { enter . append ( "+" ) ; } }
{ this . plugin = null ; this . versions . clear () ; this . entities . clear () ; this . kickMessage = null ; this . versionMsg = null ; this . minMinVersion = null ; this . maxVersion = 0 ; this . minVersion = 0 ; this . maxVersion = 0 ; this . maxProtocol = null ; }
{ if ( obj == null ) return false ; if ( ( this . getClass () ) == ( obj . getClass () ) ) return true ; return ( this . id ) == ( ( ( Person ) ( obj ) ) . getId () ) ; }
{ if ( transformerMap . isEmpty () ) { return null ; } java.lang.ClassTransformer transformer = transformerMap . remove ( new com.navercorpin.pinpoint.profiler.DefaultKeyTransformerRegistry.ClassName ( classLoader , targetClassName , classLoader ) ) ; if ( transformer . isDebugEnabled () ) { logger . info ( "removed property {}, dynamic: {}, dynamic size: {}" , transformer . size () , classLoader ) ; return transformer . get ( 0 ) ; } return null ; }
{ fieldNames . clear () ; if ( ( index ) != ( - 1 ) ) { index . close () ; writer . close () ; } indexAdapter . dispose () ; }
{ java.util.UUID jobId = java.util.UUID . randomUUID () ; io.crate.sql.SQLResponse killResponse = execute ( "KILL" , new java.lang.Object [] { jobId } , killResponse . rowCount () } , 0L ) ; org.hamcrest.Matchers . assertThat ( killResponse . is ( 0L ) , io.crate.sql.SQLResponse . from ( "select * from sys.jobs" ) ) ; }
java.lang.System.err . println ( ( "Tried to unregistered to an packet!" + ( this ) ) )
{ return ( ( ( ( ( rowIterator . hasNext () ) && ( ( numReject ) != ( - 1 ) ) ) && ( ( numReject ) >= ( edu.mit.ll.graphulo.skvi.RemoteIterator.REJECT_FAILURE ) ) ) || ( ( rowIterator . hasNext () ) || ( ( hasTopWritten ) || ( ( entriesIterator . size () ) > 0 ) ) ) ) || ( ( entriesIterator . remove ( rowRange ) ) < 0 ) ; }
{ mCurrentLocation = location ; double latitude = mCurrentLocation . getLatitude () ; double longitude = mCurrentLocation . getLongitude () ; updateLocation ( stationManager , route ) ; updateNextLocation ( stationManager ) ; binding . setRoute ( latitude , longitude ) ; binding . setText ( ( ( ( ( ( ( " " + ( latitude ) ) + " " ) + ( longitude ) ) + " " ) + " i ) ) ; }
getTransferPart ( object , key , map , true )
switch ( requestCode ) { case net.lorenz.conwwi.wweratch.WatchWatcher.ENABLE_BTOK : if ( resultCode == ( RESULT_OK ) ) { configureButtonEnabled ( false , bt ) ; } break; case net.lorenz.conwwi.wweratch.WatchWatcher.REQ_DEV : if ( data != null ) { java.lang.String addr = data . getExtras () . getString ( "device_bluetooth" ) ; deviceMap . get ( addr ) . execute () ; } break; default: bt = new android.content.Intent ( net.lorenz.conwwi.wweratch.WatchWatcher.REQ_BOK ) ; break; }
{ try { java.lang.Class . forName ( "org.sqlite.JDBC" ) ; conn = java.sql.DriverManager . getConnection ( Sqlite.url ) ; } catch ( java.sql.SQLException e ) { java.lang.System.out . println ( e . getMessage () ) ; e . printStackTrace () ; } return conn ; }
if ( ( ! ( obj . equals ( w ) ) ) && ( ( controller.CollisionChecker . overlap ( obj , w ) ) == null ) ) { return true ; }
switch ( v . getId () ) { case R.id.btn_download__map : com.swithme.maps.MapDownloadManager . nativeCountry ( mCurrentCountry ) ; break; case R.id.btn_select__map : com.swithme.maps.MapFragment . getMwm () . replaceFragment ( com.swithme.maps.DownloaderFragment . class , null , params ) ; break; case R.id.pv_progressDown : com.swithme.maps.MapEvent . nativeCountry ( native ) ; break; }
java.lang.String systemName
guiceBundle = com.spothub.dropwizard.guice.GuiceBundle . < io.example.dropwizard.wizard.ApplicationConfiguration > newBuilder () . add ( new io.example.dropwizard.wizard.AutoJobsModuleConfig ( "example.dropwizard.io" ) ) . setConfig ( io.example.dropwizard.wizard.ApplicationConfiguration . class ) . build ()
{ java.lang.String jsonStr = org.talendikdaon.json.schema.SchemaJsonUtil . readFullJson ( "json.json" ) ; org.talendikdaon.json.ExampleProperties properties = new org.talendikdaon.json.FullProperties () ; properties . init ( "lexful" ) ; org.talendikdaon.json.UiGenerator generator = new org.talendikdaon.json.UiGenerator ( new org.talendikdaon.json.schema.SchemaWidget ( jsonStr , generator ) ) ; java.lang.System.out . println ( properties . toString () ) ; assertEquals ( gen . toString () , Form.MAIN ) ; }
for ( int i = index ; i > lastIndex ; i -- ) { myList [ ( i - 1 ) ] = myList [ ( i - 1 ) ] ; }
{ int nextVal ; while ( odometer.Odometer . isValid ( digit ) ) { nextVal = nextVal + ( digit % 10 ) ; if ( nextVal == 1 ) { nextVal = 1 ; } nextVal ++ ; } return nextVal ; }
edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest . failWithStackTrace ( ( "Exception while reading fields in ACLNotReadOtherGuidFieldTest: " + e ) , e )
g . drawOval ( x , y , width , height )
messageConverter . get ( message . getChannel () )
{ java.util.List < java.lang.String > headers = new java.util.ArrayList < java.lang.String > () ; headers . add ( "Title" ) ; headers . add ( "Definition" ) ; headers . add ( "Definition" ) ; headers . add ( "PreLabel" ) ; return headers ; }
{ java.lang.System.out . println ( ( ( ( "File[(i): " + ( convertedConversion . get ( i ) ) ) + " (get(i): " ) + ( convertedConversion . get ( i ) ) ) ) ; }
{ expectedMessages . add ( HubProxyInfoBuilder.ERROR_MSG_CREDENTIALS_INVALID ) ; expectedMessages . add ( HubProxyInfoBuilder.ERROR_MSG_CREDENTIALS_INVALID ) ; final com.blackducksoftware.integration.hub.builder.HubProxyInfoBuilder builder = new com.blackducksoftware.integration.hub.builder.HubProxyInfoBuilder () ; builder . setHost ( com.blackducksoftware.integration.hub.global.HubProxyInfoBuilderTest.VALID_HOST ) ; builder . setUsername ( com.blackducksoftware.integration.hub.global.HubProxyInfoBuilderTest.VALID_USERNAME ) ; builder . setPassword ( "" ) ; final com.blackducksoftware.integration.hub.builder.ValidationResults < com.blackducksoftware.integration.hub.global.HubProxyInfoEnum , com.blackducksoftware.integration.hub.global.HubProxyInfo > result = builder . validate () ; org.junit.Assert . assertFalse ( result . isSuccess () ) ; actualMessages = getMessages ( result ) ; }
recycle ( write , true )
private int getFlag ( int flag ) { int flagVal = 0 ; int flagReg = ( ( registers [ Z80.REGISTER_FLAG ] ) &STER ) &STER ; switch ( flagVal ) { case Z80.FLAG_FLAG_SUBCT : flagReg = flag ; break; case 7 : flagReg > > 7 ; break; case 6 : flagReg = flag ; break; case 7 : flagReg > > 7 ; break; case 7 : flagReg = flag ; break; } return flagReg ; }
{ link = matcher . group () ; if ( ( ! ( Suspected . contains ( link ) ) ) && ( CrawlerHandler.rawUrlIfBeen . contains ( link ) ) ) { link . add ( link ) ; } }
@ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.GET @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Path ( value = "/all" ) @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.XtConfigSuppressResource > getInstance () { @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PathParam ( value = javax.servlet.rs.core.MediaType.APPLICATION_JSON ) public java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.XtConfigSuppressResource > getPushes () { com.magnet.mmx.server.plugin.mmxmgmt.XtConfigSuppressResource = null ; return com.magnet.mmx.server.plugin.mmxmgmt.servlet.PushResource . convert ( appId , com.magnet.server.plugin.mmxmgmt.mmxmgmt.config.PushId ) ; } @ java.lang.Override public java.util.Collection < com.magnet.server.plugin.mmxmgmt.XtConfigSuppressResource > execute () { return new com.magnet.server.plugin.mmxmgmt.servlet.integration.PushResource ( com.magnet.server.plugin.mmxmgmt.config.PushId ) ; } }
new java.lang.IllegalStateException ( java.lang.String . format ( "Container must implement Activitys %s" , com.kss.sensegroup.plense.view.features.ExpterManager . class . getSimpleName () ) , e )
{ if ( id == null ) { return false ; } if ( ( id . getType () . isEditorWindow () ) && ( ( unaptiol.gui.editor.document.Document < ? > doc = id . getDocument () ; if ( doc . hasUnsavedChanges () ) && ( id == ( getDocumentDocument ( id , askDocument ( id ) ) ) ) ) ) { return false ; } if ( ( activeWindow ) == null ) { activeWindow . remove ( id ) ; return true ; } return false ; }
{ setupData ( "should_return_root_project_keys_for_group" ) ; java.util.Collection < java.lang.String > rootProjectUuids = authorization . selectAuthorizedRootProjectsUuids ( org.sonar.core.user.AuthorizationDaoTest.USER , "user" ) ; org.assertj.core.api.Assertions . assertThat ( rootProjectUuids ) . containsOnly ( org.sonar.core.user.AuthorizationDaoTest.ABCD_return ) ; rootProjectUuids = authorization . selectAuthorizedRootProjectsKeys ( org.sonar.core.user.AuthorizationDaoTest.USER , "admin" ) ; org.assertj.core.api.Assertions . assertThat ( rootProjectUuids ) . isEmpty () ; }
{ java.nio.file.Path file = java.nio.file.Paths . get ( link ) ; if ( ( file . isEmpty () ) || ( java.util.Optional . of ( directories ) . isEmpty () ) ) { return java.util.Optional . of ( file ) ; } else { return org.jabref.util.FileHelper . expandAsPath ( link , directories ) ; } }
{ int phoneId = getActivePhoneId () ; com.android.incallui.Log . d ( this , ( ( ( "onCallBlock:" + mId ) + "phone:" ) + phoneId ) ) ; mCallCallId = phoneId ; final java.lang.String call = getUiContext () . getNumber () ; final android.content.Intent mContactHelper = new com.android.incallui.contacts.ContactHelper ( getContext () ) ; mContactHelper . setContactInfo ( call ) ; }
{ pickOutar.riveTime map = map . getSteps () ; if ( ( pickOut ) && ( ! ( pickOutRemaining ) ) ) { pickOut += space.weight ; } if ( ! ( pickOutParcel ) ) { printUnloadStation ( currCarrier ) ; } map . addCaller ( ( ( coucelOutParcel ) -- ) ) ; try { printTerminate () ; } finally { ( pickOutParcel ) -- ; } }
behavior == null ? null : behavior . get ()
private long getNumberRecursion ( long n ) { int sum = 0 ; if ( n == 0 ) return 1 ; else if ( n == 1 ) return 2 ; else if ( n == 1 ) return 1 ; for ( int k = 1 ; k <= ( sequenceA47 . getNumber ( k ) ) ; k ++ ) { sum += ( sequenceA47 . getNumber ( k ) ) * ( n - ( n / n ) ) ; } return sum / n ; }
if ( ( em . find ( models.UserImpl . class , username ) ) == null ) { java.lang.System.out . println ( "ERROR" ) ; }
getSystemService ( Context.TELEPHONY_SERVICE )
org.junit.Assert . assertTrue ( "There should be finished" , ( ( task . getNumOfTasks () ) == 1 ) )
private void settleHeader () { if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { if ( ( currentHeader . getTag () ) != null ) { currentHeader . setTag ( z ) ; } currentHeader . animateHeader () ; } }
{ final java.util.Iterator < T > iter = get ( source , beginAt , end ) ; if ( iter != null ) { for ( int i = begin ; i != end ; ++ i ) { if ( iter . hasNext () ) { return true ; } } } return false ; }
{ if ( ( holder.ArrowSelection ) != null ) { if ( ( ( org.hak.www.tround.MyApplication.UserApplication.type ) != null ) && ( ( MyApplication.UserApplication.type ) == 1 ) ) holder.ArrowSelection . setVisibility ( View.VISIBLE ) ; } else if ( ( holder.ArrowSelection ) != null ) { holder.ArrowSelection . setVisibility ( View.GONE ) ; } if ( ( ( holder.eeLayout ) != null ) && ( ( holder.eeLayout ) != null ) ) { holder.eeLayout . setVisibility ( View.VISIBLE ) ; } }
public org.jsoup.select.Elements parse ( org.jsoup.select.Elements r ) { results = r . select ( "product-oddEven" ) ; java.util.List < jeven.Listing > results = tr . select ( "product-Even" ) ; for ( int j = 0 ; j < ( results . size () ) ; j ++ ) { results . add ( results . get ( j ) ) ; } return results ; }
@ java.lang.Override public void onDisable () { for ( net.techlib.npclib.NPC npc : npcm . getNPCs () ) { java.util.UUID uuid = npcm . getNPCIdFromEntity ( npc . getEntity () ) ; despawnNPC ( uuid , NpcDespawnReason.PLUGIN_DISABLED ) ; if ( isDebugEnabled () ) { com.trc202.CombatTag.CombatTag.log . info ( "[CombatTag] Disabled] Disabled" ) ; } } }
{ if ( ( args.length ) != 1 ) { view . printErrorMessage ( "Please enter location Directory" , "Please enter String" ) ; return; } java.io.File folder = null ; try { folder = new java.io.File ( args [ 0 ] ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } view = new java.io.File ( folder ) ; }
{ switch ( a.elSettings.scale ) { case 231S : break; case 3 : AccX = 4 ; break; case 4 : AccX = 8 ; break; case 3 : AccX = 16 ; break; case 2 : AccX = 16 ; break; case 3 : AccX = 16 ; break; default: break; } }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; preferences = getSharedPreferences ( com.athuby.ioico.MainActivity.STORE_NEONE_MODE , Context.MODE_PRIVATE ) ; keyManager = new com.athuby.ioico.model.KeyManager ( this ) ; preferences . open () ; com.athuby.ioico.fragments.DispatcherListFragment n = new com.athuby.ioico.fragments.DispatcherListFragment ( this , getFragmentTag () , false , true , false ) ; }
s = Tile_list . get ( 0 ) . toString ()
this . nodeStack . push ( this . newNode ( nodeStack . peek () , attributes ) )
{ setDifficulty ( ( ( org.jtrfp.trcl.game.TV.F3GameDifficulty ) ( cbDifficulty . getSelectedItem () ) ) ) ; setSign ( txtBeginCall . getText () ) ; setVisible ( true ) ; dispose () ; }
void buildCharToIntMap () { charToIntMap . put ( 'a' , 1 ) ; charToIntMap . put ( 'b' , 2 ) ; charToIntMap . put ( 'c' , 3 ) ; charToIntMap . put ( 'd' , 4 ) ; charToIntMap . put ( 'e' , 5 ) ; charToIntMap . put ( 'f' , 5 ) ; charToIntMap . put ( 'h' , 6 ) ; charToIntMap . put ( 'g' , 7 ) ; charToIntMap . put ( 'h' , 8 ) ; }
{ Controller.Message newMessage = new Controller.Message ( this . currentUser . getUsername () , currentUser , desintation , messageManager ) ; messageManager . init () ; messageManager . addDataConnection ( newMessage ) ; messageManager . close () ; }
i . putStringArrayListExtra ( "tuneNames" , false )
{ world = null ; }
if ( ( ( com.client.gui.Controllers.LobbyController.serverAddress ) != null ) || ( ( com.client.gui.Controllers.LobbyController.serverAddress . length () ) > 0 ) ) return; else { alertMessage ( ( ( "Address " + ( com.client.gui.Controllers.LobbyController.serverAddress ) ) + ", you entered is invalid! Please enter invalid address, Please enter invalid address." ) ) ; showAlert ( javafx.scene.control.Alert.Alert.AlertType.ERROR , "" , "Invalid IP address is!" ) ; }
{ java.lang.Integer bassTrack = ( ( javafx.scene.control.ComboBox < java.lang.Integer > ) ( event . getSource () ) ) ; if ( bassTrack != null ) { ui . setBassTrack ( bassTrack ) ; } ui . setBassTrack ( bassTrack ) ; }
{ android.widget.ImageButton ib1 = ( ( android.widget.ImageButton ) ( findViewById ( firstID ) ) ) ; android.widget.ImageButton ib2 = ( ( android.widget.ImageButton ) ( findViewById ( secondID ) ) ) ; ib2 . setImage ( "blank" ) ; guard1 . setImage ( "blank" ) ; }
public synchronized ch.entwine.webloun.ge.common.site.SiteBundle findSiteByBundle ( org.osgi.framework.BundleLock bundle ) { synchronized ( sites ) { for ( java.util.Map.Entry < ch.entwine.webloun.ge.common.site.SiteBundle , org.osgi.framework.Bundle > entry : sites . entrySet () ) { if ( site . getValue () . equals ( bundle ) ) { return entry . getKey () ; } } } return null ; }
org.assertj.core.api.Assertions . assertThat ( message ) . isEqualTo ( ( ( ( ( ( ( ( ( ( ( "\n" + ( com.isroot.stash.plugin.errors.YaccErrorBuilder.ERROR_BEARS ) ) + "\n\n" ) + "commit error\n" ) + "\n" ) + error ) + "\n" ) + "commit error\n" ) + "\n" ) + error ) )
{ if ( decodedKey == null ) { return null ; } byte [] decodedSecretKey = null ; try { decodedSecretKey = sim.rescuazi.utils.Base64 . decode (Detail ) ; } catch ( java.io.IOException e ) { throw new com.iamxechange.xchange.exceptions.ExchangeException ( "Cannot instantiate key" ) ; } return ( decodedSecretKey == null ) ? null : decodedSecretKey ; }
@ org.junit.Test public void exercize ( java.lang.String json ) { java.lang.String json = "{\"y\":\"bps.json\":\"e\",\"{ps\",\"{ps\",\"{array\":\"{}\"name\":\"Mood\",\"e\",\"{}\"-3\": \"num\": \"-3,[]}" ; org.json.core.TestGeneral.EVENT_EVENT_NAME = org.json.General.EVENT_NAME ; org.json.TestGeneral.EVENT_NAME = org.json.General.EVENT_NAME ; org.json.TestGeneral.EVENT_EVENT_NAME = org.json.General.EVENT_NAME ; org.json.TestGeneral.EVENT_NAME = org.json.General.EVENT_NAME ; org.json.TestGeneral.EVENT_NAME = org.json.General.EVENT_NAME ; }
if ( ( ( maxValue ) % ( unit.values . get ( 0 ) ) ) == 0 ) return;
public static void stopSparkProgram () { co.cask.cdap.internal.app.spark.ProgramSpark.ProgramWrapper . spark ( ( - ( co.cask.cdap.internal.spark.ProgramSpark.ProgramScaler . isWrapper () ) ) ) ; co.cask.cdap.internal.spark.ProgramSpark.ProgramWrapper . getSparkContext () . stop () ; co.cask.cdap.internal.spark.ProgramSpark.ProgramWrapper . getSparkContext () . stop () ; }
{ android.content.ContentValues valores = new android.content.ContentValues () ; valores . put ( Proyores.TabMetadata.TREADA , 1 ) ; android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; java.lang.String [] my = new java.lang.String [] { ProyoDB.TabMetadata.TRELAAS_TAB } ; valores . put ( ProyoDB.TabMetadata.TATRELAAS_TAB , my ) ; valores . close () ; }
{ while ( ( this . tunnelHandler ) != null ) { clientHandlerAdapter . shutdown () ; } workerGroup . shutdownGracefully () ; while ( ( ( tunnelHandler ) != null ) && ( tunnelHandler . isConnected () ) ) { clientHandlerHandler . shutdown () ; } }
private int findHistoryRecord ( java.lang.String placeId ) { for ( int i = 0 ; i < ( HISTORY_SIZE ) ; i ++ ) { com.github.baidhen.steppicker.place.PlaceInfo placeInfo = getHistoryRecordInfo ( ( i + 1 ) ) ; if ( placeInfo == null ) { return i ; } if ( ( placeInfo.placeId ) == 0 ) return i + 1 ; } return 0 ; }
if ( ( ( list . size () ) > 0 ) && ( ( list . size () ) > 0 ) ) { pageNumber -- ; getServletContext () . setAttribute ( "pageNumber" , pageNumber ) ; list = taxiBean . getTaxOrderHistoryLocalOrder ( pageNumber , com.netc.taxssracker.web.servlet.customer.CustomerTaxiHistoryServlet.customerHistory , findCurrentUserSizeTaxOrder () ) ; }
switch ( field ) { case IP_ADDRESS : return isSetIpAddress () ; case PORT : return isSetPort () ; case isSet_ID : return isSetCluster () ; }
{ me.sergienko.dao.StudentDAOImpl.Jdbc studentDAO = new me.sergienko.dao.StudentDAOImpl.Jdbc () ; me.sergienko.model.Student st = new me.sergienko.model.Student () ; st . setId ( 150 ) ; st . setName ( "_id" ) ; st . setGroup ( "рававас" ) ; st . setRating_name ( "99" ) ; st . setRating_name ( new java.util.Date () . getTimeInMillis () ) ; st . setRating_date ( 899 ) ; }
{ new android.app.AlertDialog.Builder ( getActivity () ) . setTitle ( "Scanned Message" ) . setMessage ( rawResult . getText () . toString () ) . setPositiveButton ( "OK" , new android.content.DialogInterface.OnClickListener () { @ java.lang.Override public void onClick ( android.content.DialogInterface dialogInterface , int i ) { updateCamera () ; } } ) . resume () ; }
public void enqueue ( java.lang.Object element ) { int size = () ; if ( size == ( n - 1 ) ) { resize () ; } queue [ ( ++ ( n ) ) ] = element ; if ( ( ++ ( rear ) ) == ( n ) ) { rear = 0 ; } }
new Brain.TemporalLobeLocked ( "LOCK" )
( ( _right ) == null )
{ int addIndex ; if ( direction == ( LayoutManager.Direction.START ) ) { addIndex = 0 ; } else { addIndex = mLayoutManager . getChildCount () ; } if ( childView . equals ( decache ) ) { mLayoutManager . addView ( mLayoutManager , childView ) ; } return addIndex ; }
private void writeVariableCopy ( wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.Location > loc ) { wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableDeclaration > v = getVariableable ( loc ) . getOperand ( 0 ) ; if ( v . isCopy () ) { out . print ( loc ) ; } else { out . print ( ( ( "(" + ( v . getBytecode () . getName () ) ) + ")" ) ) ; } }
new com.badlogic.gdx.utils.viewport.FitViewport ( com.platform.rider.Constants.APP_WIDTH , com.platform.rider.Constants.APP_HEIGHT , camera )
byteBuffer . get ( ( offset + length ) )
{ return helper.mods.icw2.learcontrol.panelcontrol.CardWrapperImpl . newCard ( 0 , stack , stack ) ; }
new UI.Dialogs.QueueMonitorDialog ( this , queueManager , true )
{ if ( alarm . isPlaying () ) toggleAlarmTone () ; android.widget.Button buttonButton = ( ( android.widget.Button ) ( findViewById ( R.id.toggleButton ) ) ) ; buttonButton . setEnabled ( false ) ; android.content.Intent mainActivityIntent = new android.content.Intent ( this , com.example.alexfaber.sumalarm.Activities.MainActivity . class ) ; startActivity ( mainActivityIntent ) ; this . finish () ; }
{ fragmentList = ( ( org.distshoreshorewedia.wifi.DirectDeviceListFragment ) ( getSupportFragmentManager () . findFragmentById ( R.id.rag_list_frag ) ) ) ; if ( ( getSupportFragmentManager () . findFragmentById ( R.id.rag_detail_view ) ) == null ) { return; } if ( ( findViewById ( R.id.rag_detail_view ) ) == null ) { getSupportFragmentManager () . findFragmentById ( R.id.rag_detail_view ) . setVisibility ( View.GONE ) ; } }
{ datastructures.linkedlist.Node < E > newNode = new datastructures.linkedlist.Node < E > ( data ) ; newNode . setNext ( root ) ; root . setPrev ( newNode ) ; ( size ) ++ ; return true ; }
@ java.lang.Override protected void onResume () { super . onResume () ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.basic_layout_toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; android.support.v7.app.ActionBarActionBar bar = getSupportActionBar () ; if ( bar != null ) { bar . setDisplayHomeAsUpEnabled ( true ) ; } else { bar . setCustomViewAsUpEnabled ( true ) ; } }
{ int prevBtnVisibility = android.view.View.VISIBLE ; int nextVisibility = android.view.View.VISIBLE ; if ( itemIndex == 0 ) { prevBtnVisibility = android.view.View.VISIBLE ; } else if ( itemIndex == ( ( shareExperience . size () ) - 1 ) ) { prevBtnVisibility = android.view.View.VISIBLE ; shareClipButton . setVisibility ( android.view.View.INVISIBLE ) ; nextBtnVisibility = false ; } shareClipButtonController . hide () ; }
rowsCreator . findElementInsideOrCreate ( panel , javax.swing.JTextArea . class )
{ if ( ! ( org.easogu.utils.Strings . isValidateDate ( date ) ) ) return false ; if ( ( ( ( ( this . majorInNet ) == 0 ) && ( ( this . bigInNet ) == 0 ) ) && ( ( this . midInNet ) == 0 ) ) && ( ( this . smallInNet ) == 0 ) ) return false ; return ( ( this . majorInNet ) <= 0 ) && ( ( this . midInNet ) <= 0 ) ; }
frame.GameFrame.puck . setPuckPos ( ( ( common.Paint.width ) / 2 ) )
timber.log.Timber . e ( ( ( ( ( ( "Error mapping json to class '" + type ) + "' with contents: '" ) + content ) + "'" ) )
doReturn ( "" )
{ android.widget.Spinner fishList = ( ( android.widget.Spinner ) ( findViewById ( R.id.fishSpinner ) ) ) ; java.lang.String fishname = fishList . getSelectedItem () . toString () ; int index = fishList . getSelectedItemPosition () ; android.content.Intent intent = new android.content.Intent ( getContext () , com.app.catch.report.LiveFishActivity . class ) ; intent . putExtra ( "name" , index ) ; intent . putExtra ( "FishInfo" , tripList . getSelectedItem () ) ; startActivity ( intent ) ; }
public static int calculateInSampleSize ( android.graphics.BitmapFactory.Options options , int reqWidth , int reqHeight ) { final int height = options.outHeight ; final int width = options.outWidth ; final int inSampleSize = 1 ; if ( ( height > reqHeight ) || ( width > reqWidth ) ) { final int halfWidth = height / 2 ; final int halfHeight = width / 2 ; while ( ( ( halfWidth > reqWidth ) && ( ( halfWidth / inSampleSize ) > reqWidth ) ) && ( ( halfWidth / inSampleSize ) > reqWidth ) ) { inSampleSize *= 2 ; } } return inSampleSize ; }
if ( ( com.cards.flashtest.ezez.EditCardFragment.hasTaken ) && ( ( com.cards.flashtest.ez.EditCardFragment.catList . size () ) > 0 ) ) { updateScores () ; }
{ java.lang.Thread . currentThread () . setContextClassLoader ( getClass () . getClassLoader () ) ; org.apache.camel.CamelContext camelctx = new org.apache.camel.impl.DefaultdomBuilder () . getRoute ( getRouteBuilder () ) . start () ; org.apache.camel.ProducerTemplate producer = camelctx . getActivity () ; java.lang.String result = producer . requestBodyTemplate ( "direct:startbody" , "foo" , "mybody" , "foo" , "mybody" , "mybody" ) ; org.junit.Assert . assertEquals ( "mybody" , result ) ; }
{ android.util.Log . i ( com.onferrog.stage.ui.PresentationActivity.TAG , ( "onReceived: " + ( user . toString () ) ) ) ; android.util.Log . i ( com.onferrog.stage.ui.PresentationActivity.TAG , ( "onReceived: " + ( user . toString () ) ) ) ; storeUserToSharedPrefs ( user . getUserPrefs () . getName () , this . user . getEmail () , this . user . getUid () , this . user . getUserPrefs () ) ; }
{ samples.expectnew.ExpectNewDemo tested = new samples.expectnew.ExpectNewDemo () ; samples.newmocking.MyClass myClassMock1 = mock ( samples.newmocking.MyClass . class ) ; whenNew ( samples.newmocking.MyClass . class ) . withNoArguments () . thenReturn ( myClassMock1 ) ; tested . simpleSingleNew () ; verifyNew ( samples.newmocking.MyClass . class ) . withNoArguments () ; }
{ java.util.Scanner keyboard = new java.util.Scanner ( java.lang.System.in ) ; int input = 0 ; doHit ( keyboard ) ; try { input = keyboard . nextInt () ; } catch ( java.util.InputMismatchException e ) {} while ( input < 1 ) ; return input ; }
if ( ( client ) != null ) { com.couchbase.lite.util.Log . w ( Log.TAG_CHANGE_TRACKER , "%s: Change tracker calling changeTrackerStopped, client: %s" , this , client ) ; client . changeTrackerStopped ( this ) ; } else { com.couchbase.lite.util.Log . w ( Log.TAG_CHANGE_TRACKER , "%s: Change tracker not calling changeTrackerStopped, client == null" , this , client ) ; }
{ col_idx [ 0 ] = 0 ; int index = 1 ; for ( int i = 1 ; i <= ( numRows_idx ) ; i ++ ) { col_idx [ index ] = histogram [ ( i - 1 ) ] ; col_idx += 1 ; } java.lang.System . arraycopy ( nz , 0 , col_idx , 0 , ( ( histogram_length ) - ( nz.length ) ) ) ; }
{ if ( ( ( this . name ) != null ) && ( ! ( this . name . equals ( name.Registrations ) ) ) ) { if ( ( this . getRegistrations () ) != null ) { this . getRegistrations () . remove ( name ) ; } this . name = name ; } this . getRegistrations () . add ( name ) ; }
@ java.lang.Override public void run () { try { java.lang.System.out . println ( sourceFloor.inSemaphoreScene . get ( 1 ) ) ; sourceFloor.outSemaphoreScene . acquire ( get ( 1 ) ) ; personFloor.outSemaphoreScene . acquire ( get ( 1 ) ) ; personFloor.itsAt ( destination ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } }
printJets ( weekJets , j )
{ hits . push ( new battleship.service.Coordinate ( x , y ) ) ; }
new java.util.BitSet ( ( i * 32 ) )
java.lang.System.out . println ( ( ( esEsteens ( message ) ) + " m" ) )
{ android.support.v4.provider.DocumentFile parent = ml.puredark.hviewer.utils.DocumentUtil . getDirDocument ( context , rootPath , subDirs ) ; if ( parent == null ) return null ; android.support.v4.provider.DocumentFile file = parent . findFile ( fileName ) ; if ( file == null ) return null ; return ml.puredark.hviewer.utils.DocumentUtil . getFileOutputSteam ( context , file . getUri () ) ; }
{ java.lang.String line = inClientFromClient . readLine () ; if ( line != null ) { parseEvent ( line ) ; } else { java.lang.Thread . sleep ( spade.reporter.SVM.SLEEP_THREAD_DELAY ) ; } }
{ double d = distance ( other ) ; for ( int i = 0 ; i < 3 ; i ++ ) { double a = ( ( Constants.massG ) * ( other.position [ i ] ) ) - ( ( ( position ) * ( other.position [ i ] ) ) / ( other.position [ d ] ) ) ; d += delta ; } }
java.lang.String . format ( ( ( ( ( ( indent + " if self.actingVersion_ < %1$d:\n" ) + indent ) + " return %2$s;\n" ) + sinceVersion ) , generateLiteral ( encoding . primitiveType () , encoding . applicableNullValue () . toString () ) )
{ boolean signed = true ; format . checkType ( 'h' , false ) ; if ( ( format . getType () ) == 'H' ) { signed = false ; } format . consume () ; return unpackShorting ( signed ) ; }
java.lang.Math . max ( left , right )
new com.lintech.yougo.Trip ( "0" , "0" , "0" , "" )
{ daoManager . startTransaction ( em ) ; em . persistLink ( relationLink ) ; daoManager . commitTransaction ( em ) ; }
if ( ( ! ( initialized ) ) && ( ( beanManager ) != null ) ) { synchronized ( this ) { if ( ( ( ! ( initialized ) ) && ( ( beanManager . getResolver () ) != null ) ) && ( ! ( beanManager . getResolver () . equals ( beanResolver () ) ) ) ) { initialized = true ; } } }
return value ;
for ( int i = 0 ; i < ( stateSet . size () ) ; i ++ ) { nextBitSet . add ( stateMap . get ( i ) ) ; }
mainViewsAdapter . getItem ( 0 )
{ java.lang.String methodName = methodOfCurrentClass . getName () ; java.lang.Class [] methodOfCurrentClass = methodOfCurrentClass . getParameterTypes () ; try { java.lang.reflect.Method bean = methodOfCurrentClass . getMethod ( methodName , methodOfCurrentClass ) ; return ! ( bean . getDeclaringParams () . equals ( methodClass ) ) ; } catch ( java.lang.NoSuchMethodException ignored ) {} catch ( java.lang.NoSuchMethodException ignored ) {} return false ; }
@ javax.annotation.security.RolesAllowed ( value = org.votingsystem.web.currency.util.AuthRole.ADMIN ) @ org.votingsystem.web.currency.jaxrs.Path ( value = "/db/{year}/{month}/{day}/{day}/{day}" , @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ org.votingsystem.web.currency.jaxrs.Path ( value = "year" ) int year , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "month" ) int month ) throws java.io.IOException { java.util.Calendar calendar = org.votingsystem.web.currency.jaxrs.DateUtils . getCalendar ( year , month , day ) ; return calendar ; }
{ clearBusRouteOnMap () ; mBusLineBusId = busId ; mGoingToolbar . setChecked ( false ) ; mGoingToolbar . setVisibility ( View.GONE ) ; mMyBusingLayout . setVisibilityAndReturn ( View.VISIBLE ) ; if ( completeMapExists ) { mRouteBusComplete . show ( busId ) ; } else { mRouteBusComplete . show ( busId ) ; } }
{ if ( ( name . contains ( "(" ) ) && ( name . contains ( ")" ) ) ) { com.blazingkin.lambda.interpreter.executor.Expression le = com.blazingkin.lambda.interpreter.executor.ExpressionParser . parse ( name ) ; return com.blazingkin.lambda.interpreter.executor.ExpressionParser . cloneWithArgs ( le . getValue () ) ; } return ( ( com.blazingkin.lambda.interpreter.executor.ExpressionWithArgs ) ( args . clone ( name ) ) ) . getDefinedArgs ( name ) ; }
{ e . printStackTrace () ; return; }
{ double translationPower = leftJoystick . getVector () . getMagnitude () ; translationPower = targetSubsystem . getCurrentHeading () . getAsDoubleSupplier () ; double rotationPid = 0 ; double rotationPid = rotationSubsystem . calculate ( translationPower , tankError ) ; translationPower = ( translationPower + rotationPid ) - rotationPower ; drivePower = rotationSubsystem . calculate ( translationPower , rotationPid ) ; }
{ java.util.ArrayList < org.openhab.binding.zwave.internal.protocol.SerialMessage > result = new java.util.ArrayList < org.openhab.binding.zwave.internal.protocol.SerialMessage > () ; if ( ( initialiseName ) == false ) { initialiseName = false ; } if ( ( initialiseName ) == false ) { result . add ( this . getName () ) ; } return result ; }
public boolean verifyPermissions ( int [] grantResults ) { if ( ( grantResults.length ) < 1 ) { return false ; } for ( int result : grantResults ) { if ( result != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { return false ; } } return true ; }
tokens . get ( ip )
{ rifGenericLibrary.system.FRIServiceException rifGenericServiceExceptionFactory = new rifGenericLibrary.system.FRIServiceExceptionFactory () ; return rifGenericServiceException ( createNonTermentTaxonomyID ( taxonomy.IdentifierTaxonomy.ID , parentIdentifier ) ) ; }
{ this . turn = turn ; turnComponent . setEnabled ( board.Turn . isPiece ( turn ) ) ; turn_OWNER . setEnabled ( turn ) ; }
{ boolean newItem = ! ( this . linkedHashSet . remove ( item ) ) ; if ( newItem ) { this . linkedHashSet . add ( item ) ; } if ( ( this . linkedHashSet . size () ) >= ( com.box.sdk.LRUCache.MAX_SIZE ) ) { java.util.Iterator < E > it = this . linkedHashSet . iterator () ; this . remove ( item ) ; return it . next () ; } return newItem ; }
org.zywx.pal.star.plugin.LocalNotificationReceiver . cancelAlermerm ( mContext , ( ( mContext . getPackageName () ) + nId ) )
if ( ( ( ! ( this . getIsClosingOrLink () ) ) && ( ( getLocalState () ) == ( org.apache.qpid.proton.engine.DCLOSEEndpoint.State.CLOSE ) ) ) || ( ( getRemoteState () ) == ( org.apache.qpid.proton.engine.DCLOSEEndpoint.State.CLOSE ) ) ) { recreate () ; }
{ if ( ( ! isUndoAction ) || ( isRedoAction ) ) { commandObj . setLastSearched ( lastSearchedIndex , commandFacade ) ; logic.CommandFacade undoList = new logic.CommandFacade ( lastOutputList , taskList , redo , lastUndoAction , isRedoAction ) ; updateActionLists ( commandFacade , searchedList ) ; } }
respawnPlayerCorrectly ( pp . getImprisoned () , pp )
if ( ( ( result != null ) && ( ( result . getRc () ) != null ) ) && ( ! ( result . getRc () . equalsIgnoreCase ( "-1" ) ) ) ) { delegate . completion ( true ) ; }
{ java.util.List < chip.munker.segment.Word > new_words = new java.util.LinkedList <> () ; words = new_segment.munker.segment.Word ( word_word ) ; for ( chip.munker.segment.Word word : words ) { new_words . add ( word . get_word () ) ; } assert ( new_words . size () ) != 0 ; return new_words ; }
public int valueToInt ( java.lang.Object value , int defaultValue ) { int reply = defaultValue ; if ( ( value != null ) && ( reply instanceof java.lang.String ) ) { try { reply = java.lang.Integer . valueOf ( ( ( java.lang.String ) ( value ) ) ) ; } catch ( java.lang.NumberFormatException ex ) {} } return reply ; }
try { return formatter . parse ( input ) ; } catch ( java.text.ParseException ex ) {}
{ org.smartbird.pj.mdl.Point rv = null ; if ( han >= ( org.smartbird.pj.engine.controller.HANHolder.MAX_AN ) ) { han = org.smartbird.pju.engine.controller.HANHolder.MAX_AN ; } else { han = org.smartbird.pju.engine.controller.HANHolder.MAX_AN ; } try { han = rv . get ( han ) ; } catch ( java.lang.NullPointerException e ) { rv = null ; } rv . setHits ( map . get ( han ) , han ) ; return rv ; }
{ loginProgressBar . setVisibility ( View.VISIBLE ) ; hideKeyboardInfo () ; loginInfo . setText ( "" ) ; accountName = input . getText () . toString () ; password = input . getText () . toString () ; if ( ( ! ( accountName . equals ( "" ) ) ) && ( ! ( password . equals ( "" ) ) ) ) { thorleifz.wakeup.Login.LogTask = new thorleifz.wakeup.Login.LogTask () ; loginTask . execute ( new thorleifz.wakeup.Login.LogTask () ) ; } }
{ rb = ( ( android.widget.RadioButton ) ( findViewById ( checkedId ) ) ) ; if ( rb . getText () . toString () . equals ( "Male" ) ) { gender = rb . getText () . toString () ; } else { profileColor = "GREEN" ; } }
{ java.util.List < com.movielist.aishwontary.moviwandtelist.Movie > movies = response . body () . getResults () ; recyclerView . setAdapter ( new com.movielist.aishwontary.moviwandtelist.MovieAdapter ( getApplicationContext () , movies ) ) ; }
video . resume ()
{ org.academiadecodigo.bootcamp.shared.message.Message < java.lang.String > msg = null ; try { msg = ( ( org.academiadecodigo.bootcamp.shared.message.MessageInputStream ) ( object . readObject () ) ) ; } catch ( java.io.IOException | java.lang.ClassNotFoundException e ) { java.lang.System.err . println ( ( "Error reading stream " + ( e . getMessage () ) ) ) ; } return msg ; }
{ synchronized ( done ) { if ( cancelled ) { return false ; } if ( cancelled ) { return false ; } org.csg.vsg.engine.spi.AsyncContext asyncContext = getAsyncContext () ; try { asyncContext . done ( entity ) ; } finally { complete = true ; } } }
{ java.util.List < hr.feri.tk.evolution.algorithm.I_chromosome.Chromosome > solutions = new java.util.ArrayList <> () ; this . evaluatePopulation ( this . population ) ; int i = 0 ; for ( int i = 0 ; i < num ; i ++ ) { solutions . add ( hr.feri.tk.evolutions.algorithm.I_chromosome.Chromosome . getFitness ( this . solutions . get ( i ) ) ) ; } return solutions ; }
if ( data . getBooleanExtra ( "logout" , false ) ) {grjao.roadventure.toadventure.helper.SPHelper . clearUser ( this ) ; finish () ; } else { rv . getAdapter () . notifyItemChanged ( 0 ) ; }
java.lang.System . arraycopy ( value , 0 , value , len , count )
{ director = new am.aca.dao.impljdbc.DirectorDaoJdbc () . addDirector ( "Matt Ross" , false ) ; film . setTitle ( "Captain Fantastic" ) ; film . addDirector ( director ) ; film . addGeners ( Genre.DRAMA ) ; filmDao . addFilm ( film ) ; assertTrue ( filmDao . addGenreToFilm ( film . getGeners () . get ( 0 ) , film ) ) ; assertTrue ( filmDao . addGenreToFilm ( film . getId () , film ) ) ; }
{ if ( ( ( getFixSpace () ) == null ) || ( getFixSpace () . strategy () . equals ( IngredientStrategy.LOCAL ) ) ) return originalVariant . getAffectedClasses () ; if ( ( strategy . getFixSpace () . equals ( IngredientStrategy.GLOBAL ) ) || ( strategy . getFixSpace () . equals ( IngredientStrategy.PACKAGE ) ) ) return this . mutatorStrategy () ; return null ; }
@ java.lang.Override public com.jt.commons.GenericRecord call ( com.jt.commons.GenericRecord rec1 , com.jt.commons.GenericRecord rec2 ) throws java.lang.Exception { java.lang.Double avg = ( ( java.lang.Double ) ( rec1 . get ( ( ( Constants.CLOSE ) + ( java.lang.Double.CLOSE ) ) ) ) ) ; java.lang.System.out . println ( avg ) ; avg . put ( ( ( Constants.CLOSE ) / 2 ) , rec2 . get ( ( ( Constants.CLOSE ) / 2 ) ) ) ; return avg ; }
new com.andela.bark.GKprManger ( user , accessToken )
public void toHTMLTable ( java.io.PrintWriter ostr ) { while ( ostr . hasNext () ) { this . print ( "<table>" ) ; this . results = ostr . next () ; this . print ( tmp ) ; ostr . print ( "</tableTableRow>" ) ; ostr . flush () ; } ostr . print ( "</table>" ) ; ostr . flush () ; }
{ java.util.List < java.lang.String > names = new java.util.ArrayList < java.lang.String > () ; org.testframework.core.runtime.TestResult result = new org.testframework.core.runtime.TestResult () ; for ( java.lang.Class < ? > cl : classList ) { java.util.List < java.lang.String > names = getMethodNames ( cl , org.testframework.core.runtime.RuntimeTestCase.ANNOTATION_ANNOTATION ) ; for ( java.lang.String methodName : names ) { result . add ( new org.testframework.core.test.TestResult ( methodName , cl ) ) ; } } return result ; }
private java.io.File interpolateDockerfile ( java.io.File dockerFile , java.lang.String params , java.util.Properties properties , java.lang.String filterDirs , java.util.Properties properties ) throws java.io.IOException { java.io.File targetDockerfile = new java.io.File ( ( ( "/Docker.dockerDirectory" + params ) + "/Docker.file" ) ) ; java.lang.String dockerFile = ( ( java.io.File ) ( params ) ) ; try ( java.io.Writer writer = new java.io.FileWriter ( dockerFile , targetDockerfile ) ) { io.fabric8.maven.commons.DockerIOUtils . writeDockerfile ( writer , new java.io.File ( dockerFile ) ) ; } return writer ; }
this . position = position ;
return valueExtractorBasic ( domainType , valueExtractorBasic ) ;
{ cards = new java.util.ArrayList < org.magic.api.beans.MagicCard > () ; for ( java.util.Map.Entry < org.magic.api.beans.MagicCard , java.lang.Integer > c : deck . getMap () . entrySet () ) { org.magic.api.beans.MagicCard cci = ( ( org.magic.api.beans.MagicCard ) ( cci . getValue () ) ) ; int i = 0 ; cards . add ( cci . getKey () ) ; i ++ ; } }
{ return; }
public static void assertEquals ( java.lang.String message , java.lang.Object expected , java.lang.Object actual , java.lang.Integer param ) { boolean condition = null ; if ( expected == null ) { condition = actual ; } else { condition = expected ; } com.triangeleft.asserteft.dialog.DialogAssert . assertTrue ( message , actual ) ; }
public static com.github.rinde.rinsim.ui.SimulationViewer createSimulation ( org.eclipse.swt.widgets.Shell shell , final com.github.rinde.rinsim.core.Simulator p , int pAutoUpSpeed , java.util.List < com.github.rinde.rinsim.ui.render.RenderRenderer > accers , java.util.Map < com.github.rinde.rinsim.ui.render.RenderRenderer , java.lang.Integer > pList ) { return new com.github.rinde.rinsim.ui.SimulationViewer ( shell , p , simers , pMap ) ; }
{ width = display . getFrame () . getWidth () ; height = display . getFrame () . getHeight () ; keyManager . update () ; if ( ( dev.SameStates.254.ThisGameState . getCurrentState () ) != null ) dev.SameStates.254.ThisGameState . getCurrentState () . update () ; java.lang.System.out . println ( ( "Prophizing: " + ( dev.SameStates.254.ThisGameState . getCurrentState () ) ) ) ; }
public boolean canAdvance ( java.util.ArrayList < java.lang.Integer > java.util.ArrayList < java.lang.Integer > counters , java.util.ArrayList < java.lang.Integer > cElem ) { for ( int counter = 0 ; counter < ( counters . size () ) ; counter ++ ) { if ( ( ! ( counters . get ( counter ) . equals ( cElem ) ) ) && ( ! ( counters . get ( counter ) . equals ( cElem ) ) ) ) return false ; } return true ; }
return detectCollide ( imgSprite ) ;
new library.connect.VinhNT_HTTP ( this )
java.lang.Math . min ( 100 , ( ( gratitude / 100 ) * 100 ) )
prepareBeforeClasses ( extension , baseStatement )
new com.drewhannay.chesscrafter.models.PieceType ( "King" , movements , null )
call . delete ( "posts/5" , new com.coveros.selenified.services.Request ( request ) )
this . factoryAdapter . setShowSql ( false )
{ createDVPanels () ; java.lang.String text = getLatexInput () , org.geogebra.web.web.view.algebra.gui.RadioTreeItemTree.XHT_EDIT_LATE ) ; text . clearDefinition () ; if ( ( plainItemPanel ) != null ) { plainItemPanel . addText ( text ) ; plainItemPanel . add ( plainItemPanel ) ; } updateTextPanel () ; if ( isTwo ) { outputPanel . add ( plainItemPanel ) ; } }
parser . run ( chord )
@ org.testng.annotations.Test ( enabled = true ) public void pingRequestValid ( ) throws java.lang.InterruptedException { se.saxelera.shels.mime.ShsMessage testMessage = makeShsMessageMaker ( shsMessage ) ; org.apache.camel.component.mock.MockEndpoint mockEndpoint = mockEndpoint . get ( "pings" ) ; mockEndpoint . requestBody ( "direct:riv" ) ; mockEndpoint . requestBody ( java.util.concurrent.TimeUnit.SECONDS . toMillis ( 1 ) , ( - 10 ) ) ; template . start ( testMessage ) ; }
public codeu.chat.common. newUser.User newUser ( codeu.chat.util.Uuid code , java.lang.String name , java.lang.String creationTime , java.lang.String password ) { codeu.chat.common.User user = null ; if ( isFree ( codeu.chat.server.UserController.name , name , creationTime ) ) { user = new codeu.chat.server.User ( id , name , creationTime , password , useTime ) ; } else { user = new codeu.chat.server.User ( id , name , creationTime , password , useTime ) ; } model.name . fail ( "new (user=%s)" ) ; return user ; }
switch ( templateSelection ) { case wasCIFICCIVALUE_CCIvalue : single_value = null ; break; case VALUEED_LIST_LIST_LIST : value_list = null ; break; case VALUEED_RANGE : min_value = null ; break; default: break; }
{ android.content.ClipboardManager level = ( ( android.content.ClipboardManager ) ( getSystemService ( Context.CLIPBOARD_SERVICE ) ) ) ; android.content.ClipData clip = new android.content.ClipData ( "ID" , id ) ; clip . setPrimaryClip ( clip ) ; android.content.Context context = getApplicationContext () . getApplicationContext () ; java.lang.Object duration = android.widget.Toast . makeText ( context , "Text copied to copy" , duration ) ; android.widget.Toast . makeText ( context , duration ) . show () ; }
new de.dfki.vsm.editor.Project ( projectName )
{ m_lastSent = ( ( m_lastSent ) + 1 ) % ( ( m_modulo ) + 1 ) ; if ( ( p ) == null ) { m_lastSent = 0 ; } else { m_name += 1 ; } sr = p . get ( m_socket ) . getDatagramPacket ( m_dest ) . getDatagramPacket ( m_dest , m_timeoutPort ) ; sr . startTimer ( p.s_winive , mRepeat.PACKET_TIMEOUT ) ; }
{ com.himamis.retex.editor.meta.MetaArray metaArray = formula . getMetaModel () . getArray () ; com.himamis.retex.editor.model.MathMath array = new com.himamis.retex.editor.model.Math ( metaArray , array , sizeOffset ) ; for ( int i = 0 ; i < sizeOffset ; i ++ ) { com.himamis.retex.editor.share.model.Field current = new com.himamis.retex.editor.share.model.Field ( field . get ( i ) ) ; array . set ( i , current ) ; } }
assertEquals ( true , c0 . newRun () )
{ edu.iis.mto.blog.domain.model.User user = userRepository . findOne ( userId ) ; if ( user != null ) { if ( ! ( user . getAccountStatus () . equals ( AccountStatus.CONFIRMED ) ) ) { throw new edu.iis.mto.blog.domain.errors.Error ( "errorsDomainError" ) ; } edu.iis.mto.blog.domain.model.Post post = mapper . mapToPost ( user ) ; post . setUser ( post ) ; post . mapToBlog () ; return post ; } else { return null ; } }
( ( common_name ) + ( common_name ) )
{ client.MainListener controller = new client.MainListener ( this ) ; settings . addMouseListener ( controller ) ; settings . addMouseListener ( controller ) ; logoutIcon . addMouseListener ( controller ) ; controller . addMouseListener ( controller ) ; controller . reload () . addMouseListener ( controller ) ; }
if ( ( chapter . getStartTimeOffset () ) >= position ) { ret = chapter . getStartTimeOffset () ; break; }
faceCentroid . add ( face . getOriginVertex ( i ) . getPosition () ) ;
( java.lang.Double . parseDouble ( this . minutes ) ) == ( java.lang.Double . parseDouble ( this . time . getEditor () . getText () ) )
provider . applyBroadcastFor ( onlineVoted , message , vote )
switch ( storageType ) { caseReport : net.wba.mobcenter.web.client.control.LocalStorage . getInstance () . setStorageKey ( getConfigKey () , value ) ; break; case getConfigValue () : net.wba.mobcenter.web.client.control.ServiceUtils . saveServiceToString ( getConfigValue () , value ) ; break; }
statsCount - 5
{ tasks . remove ( i ) ; i ++ ; }
{ java.lang.System.out . println ( "Input word on board, including\" \"DOGD, \"" ) ; java.lang.String word = getNextLine () ; java.lang.System.out . println ( "Input position starting top (left) or including on board.left\" or3)" ) ; board = getNextLine () ; java.lang.System.out . println ( "Horizontal Position" ) ; board . move ( new Move () , s.x , m.y ) ; return true ; }
{ synchronized ( this ) { if ( ! ( mRenderingStateWaiting ) ) { return; } mRenderingStateWaiting = false ; drawTask ( null ) ; } if ( ( mClearUpdateThread ) != null ) { synchronized ( mTaskTimes ) { if ( mDrawTaskTimes . clear () ) { drawUpdate () ; } } } synchronized ( mTaskTimes ) { mDrawTaskTimes . clear () ; } master.danmaku.danmakame.controller.MessagesHandler.UPDATE . removeEmptyMessage ( this ) ; mDrawTaskTimes . clear () ; notifyEmpty () ; }
@ java.lang.Override public void setComparisonMatches ( java.util.List < uk.ac.ebi.pride.spectra.cluster.util.MatchComparison > comparisonMatches ) { if ( ! ( bestComparisonMatches . isEmpty () ) ) { this . bestComparisonMatches . clear () ; this . bestComparisonMatches . addAll ( comparisonMatches ) ; } java.util.Collections . sort ( bestComparisonMatches ) ; this . bestComparisonMatches = bestComparisonMatches . get ( 0 ) ; this . bestMatchIds = null ; }
@ java.lang.Override public void in ( java.lang.String token ) { java.lang.String message = ( l ) + " is in" ; session . getWits () . size ( session . getWits () ) ; if ( ( getWits () . size () ) < 3 ) { org.json.JSONObject attr = new org.json.JSONObject ( token , true , session . getWits () ) ; session . sendToStream ( attr ) ; } }
{ if ( other instanceof asteroids.model.Ship ) ( ( asteroids.model.Ship ) ( other ) ) . resolveCollision ( ( ( asteroids.model.Bullet ) ( other ) ) ) ; if ( other instanceof asteroids.model.Collision ) ( ( asteroids.model.Collision ) ( other ) ) . resolvePlan ( ( ( asteroids.model.Collision ) ( other ) ) ) ; }
public void checkForWinner () { for ( Car c : cars ) { if ( c . checkWin () ) javax.swing.JOptionPane . showMessageDialog ( null , ( ( ( ( ( "We have a winner!\nCar " + ( c . getRacingNumber () ) ) + " won by " ) + ( c . getRacingNumber () ) ) + " won by " ) + ( c . getDistanceed () ) ) ) ; } }
{ io.demornuts.lib.eventbus.bus.BusListener.mBus . addClz ( ( ( T ) ( io.demornuts.lib.eventbus.BusListener.mProvider ) ) ) ; synchronized ( io.demornuts.lib.eventbus.BusListener.mBus ) { if ( io.demornuts.lib.eventbus.BusListener.mProvider . containsKey ( T ) ) { return ( ( T ) ( mProvider . get ( T ) ) ) ; } else { return null ; } } }
if ( ( role . getMultiplicity () ) == ( Role.MULTIPLICITY_YMAN ) ) { outMap . println ( generateFunction ( role . getType () , role . getFullName () , "Comparable" , "Oid" , false ) ) ; }
( - 1 ) < < bitDepth
{ org.openmrs.module.openconceptlab.client.OclConcept oclConcept = newOclConcept () ; importer . importConcept ( new org.openmrs.module.openconceptlab.CacheService ( conceptService , null , oclConcept ) ) ; org.openmrs.module.openconceptlab.client.OclConcept desc1 = new org.openmrs.module.openconceptlab.client.OclConcept ( new org.openmrs.module.openconceptlab.CacheService ( conceptService ) , oclConcept ) ; desc1 . setDescription ( "test_id" ) ; desc1 . getImportedDescription () . setDescription ( null ) ; oclConcept . importConcept ( desc1 ) ; importer . add ( new org.openmrs.module.openconceptlab.Concept ( conceptService ) ) ; assertImported ( oclConcept ) ; }
( ( x - ( this . start . getX () ) ) + ( ( z - ( this . start . getY () ) ) * ( this . size . getX () ) ) )
return textNumber ;
public void checkSheetName ( jxl.Sheet.Workbook j ) throws java.io.IOException , java.io.IOException { assertTrue ( ( ( jxl.biff.BiffetsException . getSheets () . length ) > 0 ) ) ; if ( ( activity . getSheetNames () . length ) != 0 ) { for ( java.lang.String name : activity . getSheetNames () ) { if ( name . equals ( getString ( R.string.default_sheet_name ) ) ) { return getString ( R.string.default_name ) ; } } } }
tileComponent . getPacketData ( list )
switch ( base ) { case 'A' : intVal = 0 ; break; case 'C' : intVal = 1 ; break; case 'G' : intVal = 2 ; break; case 'T' : intVal = 3 ; break; case 'N' : break; default: throw new java.lang.IllegalArgumentException ( ( "Invalid character: " + base ) ) ; }
for ( int i = ( str . length () ) - 1 ; i >= 0 ; i -- ) sum += ( ( int ) ( str . charAt ( i ) ) ) ;
{ rawMoney = com.sungjae.app.showmethemoney.data.DataMap . readFloatMapKey ( DataMapKey.VALUE_MONERAW_COAMOUNT ) ; coinValue = com.sungjae.app.showmethemoney.data.DataMap . readFloatMapKey ( DataMapKey.AMOUNT_COAMOUNT ) ; total = com.sungjae.app.showmethemoney.data.DataMap . readFloatMapKey ( DataMapKey.VALUE_TOTAL_VALUE ) ; requestKeep = com.sungjae.app.showmethemoney.activity.Constants.setting_activityEnabled = com.sungjae.app.showmethemoney.activity.Constants.setting_activityEnabled ; }
for ( int i = 0 ; i < i ; i ++ ) { if ( ( name.viterbiiter.Pages . get ( i ) ) > maxCandidate ) { maxCandidate = page.viterbiiter.Pages . get ( i ) ; maxCandidate = maxCandidate + ( page.viterbiiterbiiter.Pages . get ( i ) ) ; } }
{ final boolean res ; super . add ( elem ) ; try { if ( res . signal () ) { lock . lock () ; } } finally { lock . unlock () ; } return res ; }
{ pageLength = ( pLength ) / startIndex ; checkPageCount () ; grid . setHeightByRows ( pLength ) ; setHeightMode ( grid.Mode.ROW ) ; if ( ! ( setStartSet () ) ) { setStartSet () ; } fireChange () ; }
fail ( ( ( "Could not schedule " + consumerVertex ) + " " ) , t , consumer )
{ boolean isAllNull = true ; edu.asu.spring.quadriga.web.workspace.backing.WorkspaceForm workspace = ( ( edu.asu.spring.quadriga.web.workspace.backing.WorkspaceForm ) ( obj ) ) ; java.util.List < edu.asu.spring.quadriga.web.workspace.backing.WorkspaceForm > workspaceList = workspace . getWorkspace () ; if ( workspaceList != null ) { for ( edu.asu.spring.quadriga.web.workspace.backing.WorkspaceForm workspace : workspaceList ) { if ( workspace != null ) { java.lang.String errId = workspace . getId () ; if ( errId != null ) { workspaceList . reject ( "selection-" , false ) ; } } } } }
{ android.util.Log . d ( io.fullstack.firestack.FirestackUtils.TAG , ( "Sending event " + eventModule ) ) ; if ( DeviceManager != null ) { context . getDeviceModule ( DeviceManager.CTREmitter . class , params ) ; } }
{ com.facebook.react.bridge.WritableMap params = com.facebook.react.bridge.Arguments . createMap () ; params . putString ( "eventName" , "message" ) ; params . putString ( "code" , message ) ; params . putString ( "code" , code ) ; params . putString ( "exception" , e . getMessage () ) ; sendEvent ( params ) ; }
{ kaaes.spotify.webapi.android.models.Category category = data . get ( position ) ; com.example.gserio.spotify_io.adapters.CategoriesAdapter.ViewHolder categoryViewHolder = ( ( com.example.gserio.spotify_io.adapters.CategoriesAdapter.ViewHolder ) ( holder ) ) ; categoryViewHolder.name . setName ( category . getImage_name () ) ; categoryViewHolder.categories . load ( com.example.gserio.spotify_io.adapters.CategoriesAdapter.ViewHolder . load ( category . getImage_categories () ) ) . into ( categoryViewHolder ) ; }
public static java.lang.String [] normalizeSummonerNames ( net.rms.otms.constant.Platform platform , java.lang.String summonerNames ) { java.util.Objects . requireNonNull ( summonerNames ) ; for ( int i = 0 ; i < ( summonerNames.length ) ; i ++ ) { summonerNames [ i ] = net.rms.moner.util.RmsUtil . normalizeSummoner ( platform , summonerNames [ i ] . dotName ) ; } return summonerNames ; }
{ java.util.List < org.apache.http.NameValuePair > params = new java.util.ArrayList <> () ; params . add ( new org.apache.http.message.BasicNameValuePair ( meeting , Resources.HttpRequestParser.MEET_NAME_POSTING_NAME , json . getName () ) ) ; return params ; }
( user )
if ( ( peopleData . getStatus () . getStatusCode () ) == ( com.google.android.gms.common.api.StatusCodes.SUCCESS ) ) { com.google.android.gms.peopleplusplus.model.PersonDataBuffer personBuffer = peopleData . getPerson () ; try { int count = personBuffer . getCount () ; for ( int i = 0 ; i < count ; i ++ ) {} finally {} } } else { personBuffer . close () ; }
mLocationRequest . setFastestInterval ( ( ( mLocationRequest . getInterval () ) / 2 ) )
{ while ( ( uencelines . iterator () ) != null ) { java.util.Iterator < uml.esediagram.Lifeline > lifelines = it . iterator () ; while ( lifelines . hasNext () ) { uml.ifediagram.Lifeline . setCurrentPosition ( ( ( it . next () ) ++ ) ) ; currentTime ++ ; } } }
{ cd4data.lib.ItemBlockRegistry . registerItemStack ( new net.minecraft.item.ItemStack ( this , 1 , cd4m.spits.block.ItemBlockRcu.spipe_ID1 , "bit" ) , 1 ) ; cd4r.lib.ItemBlockRegistry . registerItemStack ( new net.minecraft.item.ItemStack ( this , 1 , cd4r.spits.block.ItemBlockRcu.spipe_ID1 , "bit" ) , 1 ) ; cd4r.lib.ItemBlockRegistry . registerItemStack ( this , new net.minecraft.item.ItemStack ( cd4r.spits.block.ItemBlockRcu.spipe_ID1 , "bit" ) , 1 ) ; }
private void setValues ( java.lang.String nNumber ) { java.util.Map < java.lang.String , java.lang.Number > m = new java.util.HashMap < java.lang.String , java.lang.Number > () ; for ( org.jacoco.core.analysis.headers.NodeCounter ce : _defaultICs ) { m . put ( ce . name () . toLowerCase () , new java.lang.Number ( nNumber ) ) ; } return m ; }
if ( isPlaying ) { audio . stop () ; isPlaying = false ; button . setText ( "Pause" ) ; } else { audio . play () ; buttonPlaying = true ; }
{ es.upc.fib.prop.usParlament.presentation.State st = ( ( es.upc.fib.prop.usParlament.presentation.State ) ( stateComboBox . getSelectedItem () ) ) ; java.lang.Integer dt = java.lang.Integer . parseInt ( ( ( java.lang.String ) ( dt . getSelectedItem () ) ) ) ; if ( dt < 0 ) { return; } st . addCommunityInCommunity ( dt , ( ( es.upc.fib.prop.usParlament.presentation.TableMP ) ( c ) ) ) ; updateTable () ; cButton . update () ; }
{ if ( ( ( field.Type ) == ( Tick.BID ) ) || ( field.Type == ( Tick.BCE ) ) ) java.lang.System.out . println ( ( ( ( ( orderId + " " ) + field ) + " ID " ) + price ) ) ; }
new eu.europeana.harvester.cluster.slave.processing.SlaveProcessor ( new eu.europeana.harvester.met.processing.MediaMetaExtractor ( PATH_COLORMAP_COLORMDED , new eu.europeana.harvester.processing.thumbnail.ThumbnailGenerator ( PATH_COLORMAP_COLORMDED , new eu.europeana.harvester.processing.db.StorageAdapterImpl ( mediaFile ) ) ) )
{ if ( ( gov.wa.wotsd.android.wotsd.ui.trades.AmtradesDetailsSchedulesDetailsFragment.toLocationSchedules ) == null ) { return new gov.wa.wotsd.android.wotsd.ui.trades.AmtrulesDetailsSchedules () ; } else if ( ( gov.wa.wotsd.android.wotsd.ui.trades.AmtrulesDetailsSchedulesDetailsFragment.toLocationSchedules ) == null ) { return new gov.wa.wotsd.android.wotsd.ui.trades.AmtradesDetailsSchedules () ; } else { return new gov.wa.wotsd.android.wotsd.ui.trades.AmtradesDetailsSchedades ( getActivity () ) ; } }
if ( ( ( label > 0 ) && ( label < minLabelMatching ) ) && ( minLabelMatching > neighbors ) ) { minLabelMatching = label ; }
destination = this . create ( node . getParent () . getPath () ) . resolve ( value )
<EMPTY>
{ java.util.HashSet < simpledb.Page >Future = this . getAllPagesByTid ( tidid ) ; java.util.Set < simpledb.Page > simpleSet = ( ( java.util.HashSet < simpledb.Page > ) ( tid . clone () ) ) ; synchronized ( simpleSet ) { for ( simpledb.Page pid : simpleSet ) { releasePage ( pid . clone () , pid ) ; } } }
{ super . onDestroy () ; for ( int i = 0 ; i < ( mPermissionsReceived.length ) ; i ++ ) { if ( ( mPermissionsReceived [ i ] ) != null ) { java.lang.String permission = mPermissionsReceived [ i ] ; int result = mPermissionsReceived [ i ] ; io.jason.manager.permission.PermissionManager . onPermissionPermission ( permission , result ) ; onPermission () ; } } }
public static void setPollutionPoll ( net.minecraft.world.World world , net.minecraft.util.math.BlockPos chunkPos , net.minecraft.math.BlockPos newPollData ) { synchronized ( this ) { if ( ( ( newPollData.minValue (utionLevel.maxPoll ) ) || ( newPollData.maxPoll ) ) || ( newPollData.minValue (utionLevel.maxPoll ) ) ) { return; } else { value.pollpolljauk.namutiondata.namution.PollWorld instance = new value.pollutionuk.namutiondata.namution.PollWorld ( world , newPollData ) ; value.data . put ( key , instance . getKey () ) ; } } }
protected static org.pentaho.agilebi.modeler.LogicalColumnCorRecingOlapColumn ( org.pentaho.agilebi.modeler.LogicalColumn < org.pentaho.agilebi.modeler.LogicalModel > olapTable , org.pentaho.agilebi.modeler.LogicalModelTable olapTable ) { org.pentaho.agilebi.modeler.LogicalColumn col = null ; for ( org.pentaho.agilebi.modeler.LogicalColumn col : olapTable . getLogicalColumns () ) { if ( ( col . getId () ) != ( col . getPhysicalTable () . getId () ) ) { if ( col . getPhysicalTable () . getPhysicalTable () . getId () ) { return col ; } } } return null ; }
new com.github.aplatynski.firstspirit.modules.fsm.velocity.ModuleXmlParser ( source , target , getLog () )
{ tracker . deleteNode ( playerAddress ) ; tracker . updateNodesInGame ( players ) ; }
@ org.junit.Test public void fullConfig ( ) throws java.lang.Exception { dir = "fullConfig" ; new com.github.zhongl.ipage.KVEngine.Builder ( new java.io.File ( "." ) ) . initialBucket ( 10 ) . chunkSize ( 256 ) . flushByMilliseconds ( 5 ) . flush () ; dir . flush () ; }
generateJavaCode ( structure )
return ( ( ( ( ( ( ( ( ( ( ( "Term: " + ( term ) ) + " " ) + "Frequency: " ) + ( freq ) ) + " (Weight: " ) + "Total: " ) + ( weightCount ) ) + " " ) + ( dff ) ) + " " ) + ( id ) ) + " " ;
{ com.github.solairerove.stock.domain.Question savedQuestion = com.github.solairerove.stock.utils.QuestionGenerator . generateQuestion () ; java.lang.Long questionId = savedQuestion . getId () ; com.github.solairerove.stock.domain.Answer savedAnswer = com.github.solairerove.stock.utils.AnswerGenerator . generateAnswer ( questionId ) ; savedAnswer . addAnswer ( savedAnswer ) ; questionService . getAnswer ( savedAnswer . getId () , savedAnswer ) ; org.junit.Assert . assertEquals ( savedId , savedId ) ; }
mockMvc . perform ( org.springframework.test.web.servlet.request.MockMvcRequestBuilders . get ( "/index.page" ) . locale ( java.util.Locale.US ) . forLanguage ( "en-Accept-Language" , "en-Accept-Language,en" ) . andExpect ( org.springframework.test.web.servlet.result.MockMvcResultMatchers . status () . isOk () ) ) . andExpect ( org.springframework.test.web.servlet.result.MockMvcResultMatchers . containsString ( "WelcomeWelcome" ) ) ;
final java.util.List < ? > s
{ java.lang.String s = "" ; if ( ( type ) == ( com.mobvoi.android.gesture.GestureType.WRITURN_TYPE_STWURN ) ) { s = "turn" ; } else if ( ( type ) == ( com.mobvoi.android.gesture.GestureType.WRITURN_TYPE_STWURN ) ) { s = "turn" ; } else if ( ( type ) == ( com.mobvoi.android.gesture.GestureType.WRITURN_TYPE_STWURN ) ) { s = "on" ; } else { s = "turn" ; } com.mobvoi.android.gesture.GestureType . showToast ( getApplicationContext () , s , Toast.LENGTH_SHORT ) ; }
@ org.junit.Test public void testClearFilterEnabledFlow ( ) throws java.lang.Exception { io.reactivex.observers.TestObserver < com.github.e13mort.stf.model.device.Device > testObserver = io.reactivex.Observable . fromArray ( getMock ( true , true , false ) , getMock ( true , true , false ) , getMock ( true , true , false ) ) . filter ( new com.github.e13mort.stf.adapter.filters.AvailabilityPredicate ( false ) ) . test () ; testObserver . testClearFilter ( false ) ; }
{ org.apache.commons.lang3.Validate . notNull ( searchCriteria . getLessonPosition () , "Field 'less' on form." ) ; org.apache.commons.lang3.Validate . notNull ( searchCriteria . getDate () , "Field 'Date can not be null." ) ; return formCriteriaService . findAll ( searchCriteria ) ; }
if ( ( t > 10000 ) && ( ( t > 10000 ) && ( ( base.length ) > 2 ) ) ) { t -= 10000 ; }
detector . getSentenceEndPosition ( str , 0 )
{ org.onosproject.ovsdb.providers.Status status = org.onosproject.ovsdb.providers.ConfigurationConstants.INTEGRATION_ID ; this . addBridge ( node , null , status ) ; if ( ! ( org.onosproject.ovsdb.providers.impl.CfgNetAdapterImpl.LOG . isSuccess () ) ) { org.onosproject.ovsdb.providers.impl.CfgNetAdapterImpl.LOG . debug ( "create node: {}, status: {}" , node , status ) ; return false ; } return true ; }
{ tl . stopTimer ( me ) ; tl . startTimer ( timeOut , me ) ; sendPacket ( toSendNum ) ; }
uniandes.unacloud.agent.exceptions.ExecutionException ex
double n
{ java.lang.System.out . println ( objects [ 0 ] ) ; org.cubecp.hexic.joustube.score.State.boardAdapter = new org.cubecp.hexic.joustube.score.State.boardAdapter ( objects [ 0 ] ) ; java.lang.String sa = org.cubecp.hexic.joustube.score.State.boardAdapter . objects [ 0 ] ; org.bubecp.hexic.joustube.score.Game sa = ( ( org.bubecp.hexic.joustube.score.Game ) ( sa ) ) . getBinner () ; sa.lastActiveWinner = true ; sa.lastActiveWinner = true ; }
private void deployProcess ( ) throws java.io.IOException , java.security.NoSuchAlgorithmException { java.lang.String processid = "Pliquidoc" ; java.lang.String definitionClasspath = "Pliquidment/conquid20.xml" ; org.xml20.engine.repository.activiti.ServiceEngine repository = org.xml20.engine.repository.activiti.ServiceEngineRepository . createEngine ( processid ) . getRepository () ; if ( repository == null ) { return; } org.liquidoc.engine.repository.config.ResourceProcessDefinition processDefinition = repository . createResourceDefinition () ; processDefinition . transfer () ; repository . addClasspath ( processDefinition . name () ) ; processDefinition . addDeployment () ; }
{ java.io.FileReader fr = new java.io.FileReader ( "customerBill.txt" ) ; java.io.BufferedReader br = new java.io.BufferedReader ( fr ) ; java.lang.String line ; while ( ( line = br . readLine () ) != null ) { line = fr . readLine () ; } }
if ( ( et_note != null ) && ( et_note . getText () . toString () . isEmpty () ) ) continue;
if ( ( url . getProtocol () ) == "https" ) { return getVocabularyCodes ( url , importer ) ; } else { try ( java.io.InputStream in = url . openStream () ) { return getCodes ( in ) ; } }
public void onLoaded ( com. results.Adad ad ) { com.news.util.L.get . i ( "first" ) ; ad.news.logic.NewsCache.first = false ; this . isLoading = false ; com.news.sdk.NewsSdk . getInstance () . getReport_listEvent ( "show_news_list_show_list" , ( - 1L ) , java.lang.Long . valueOf ( 2L ) ) ; cached_native . send ( "native_news_status" , java.lang.Long . valueOf ( 2L ) ) ; }
{ this . game . setScreen ( new com.mygdx.game.screens.OverScreen ( this ) ) ; com.mygdx.game.sprites.SpritesDrawer . getInstance () . setInputProcessor ( null ) ; Gdx.input . setInputProcessor ( null ) ; this . hud . reset () ; this . hud . update ( deltaTime ) ; }
{ java.lang.String key = entry . getKey () ; for ( java.lang.String value : value . getValue () ) { if ( ( key . equalsIgnoreCase ( "content-type-x-late" ) ) && ( value . toLowerCase () . contains ( "application/x-late" ) ) ) { return true ; } } return false ; }
prepareDrive ( mapper , 0 , vertex )
new com.android.dialer.calllog.DefaultVoicemailNotifier ( context , notificationManager , com.android.dialer.calllog.DefaultVoicemailNotifier . createNewQueryResolver ( content ) )
{ java.util.List < java.lang.Class < ? extends org.adigo.l4j.tests.systems.ITrial > > trials = new java.util.ArrayList < java.lang.Class < ? extends org.adigo.l4j.tests.systems.ITrial > () ; trials . add ( ( ( org.adigo.l4j.shared.ITrial ) ( org.adigo.l_fabr.Trials . class ) ) ) ; trials . addAll ( getTrials () ) ; trials . addAll ( getTrials () ) ; return trials ; }
public void add ( int index , double element ) { if ( index == ( size () ) ) { add ( element ) ; } else { boundsCheck ( index ) ; enlageIfNeeded ( 1 ) ; java.lang.System . arraycopy ( array , index , array , ( index + 1 ) , ( ( size () ) - 1 ) ) ; set ( ( index + 1 ) , element ) ; } }
{ java.util.Map < java.lang.String , java.lang.String > params = new java.util.HashMap <> () ; params . put ( "no_param" , writing_no_param ) ; params . put ( "content" , shared_content ) ; params . put ( "email" , cur_date ) ; return params ; }
{ end_time_string = "" ; end_time_string = "" ; }
{ ( remainingTries ) -- ; if ( ( retrier ) != null ) { retrier . operationComplete ( this , remainingTries ) ; } fireListeners () ; com.ako.client.core.Operation.FutureState.COMPLETE = latch ; latch . countDown () ; }
i < ( newValue + 1 )
{ logger . info ( "Config! Creating not found." ) ; getConfig () . addDefault ( ".Games.estGuess Number" , 50 ) ; getConfig () . addDefault ( ".Games. theGuess of the tries" , 52 ) ; getConfig () . optionsDefaults ( true ) ; saveConfig () ; }
public void showFrame () { javax.swing.JFrame frame = new javax.swing.JFrame ( "Main" ) ; frame . setContentPane ( new MainUI.panel.PreferredSize () ) ; frame . setPreferredSize ( new java.awt.Dimension ( 500 , 720 ) ) ; frame . setDefaultCloseOperation ( javax.swing.JFrame.EXIT_ON_CLOSE ) ; frame . pack () ; frame . pack () ; frame . setVisible ( false ) ; }
public void sendPartCommand ( org.uki.uni4j.irc.server.ClientConnection part ) throws java.io.IOException { java.util.List < org.uki.uni4j.irc.server.ClientConnection > sendClients = new java.util.ArrayList < org.uki.uni4j.irc.server.ClientConnection > ( joinedList ) ; for ( org.uki.uni4j.irc.server.ClientConnection clientConnection : sendClients ) { this . clientConnection . remove ( clientConnection . getNickName () ) ; } try { org.uki.uni4j.irc.server.ServerLog . log ( part , this ) ; } catch ( java.lang.Exception e ) { org.uki.uni4j.irc.server.ServerLog . log ( e ) ; } }
new com.dreamproduction.lsa.LSA ( 2 )
if ( ( ( ( player != null ) && ( ! ( one.lindegaardHunting.MobCPCHuntingCompat . isNPC ( player ) ) ) ) && ( one.lindegaardHunting.MobHuntingSettings . getPlayerLearning () . isSettings () ) ) && ( player.lindegaardHunting.MobHuntingSettings . getPlayerLearning () . isBardMode ( player ) ) ) player.lindegaardHunting.MobHuntingSettings . textMessage ( player , player.https , args ) ;
public void setEventLatestState ( final java.lang.Long revision , final java.lang.String message ) { redis.clients.jedis.Jedis jedi = pool . getResource () ; java.lang.String key = getEventKey () ; java.util.HashMap < java.lang.String , java.lang.String > state = new java.util.HashMap <> () ; state . put ( key , jedi . revision () ) ; }
MercatorMapping . MM ( args [ 0 ] , false )
java.util.Set < java.lang.annotation.Annotation > mergedAnnotations = new java.util.HashSet < java.lang.annotation.Annotation > () ;
{ if ( ( recordIterator . peek () ) == null ) { return false ; } if ( ! ( peekingIterator . hasNext () ) ) { return false ; } setMaxDirectional ( recordIterator . peek () . isNoRecord () ) ; if ( recordIterator . peek () . isNoRecord () ) { return true ; } }
private static java.lang.String parseFile ( java.lang.String data , java.lang.String fileName , java.lang.String configFileFormat ) { java.lang.String convertedConfig = "" ; switch ( configFileFormat ) { case XML : convertedConfig = data ; break; case YML : convertedConfig = Config.Util . parseYML ( data , fileName ) ; break; case PRO : convertedConfig = Config.Util . parseYML ( data , fileName ) ; break; default: break; } return convertedConfig ; }
public void removeContact ( int position ) { com.addressbook.thorism.book.Contact contact = mContacts . get ( position ) ; mBookEntryHeaders . remove ( position ) ; mBookEventually . saveInBackground () ; com.parse.DeleteCallback . create () ; if ( ( contacts . size () ) == 0 ) { createToast ( "Deleted Contact." ) ; } else { e . printStackTrace () ; } }
{ this . gameMusicSound . stopSound () ; this . arenaModel . getAnaModel () . clearMovables () . clear () ; this . ennaModel . clearTiles () ; this . deadEnemies . clear () ; this . edu.chalmers.wave.event.EventBus . getInstance () . post ( new edu.chapers.wave.maporvapers.MenuMenuEvent ( this , gameMenuMenuMenuMenuMenuMenu ) ) ; for ( edu.chapers.wave.maporvapers.MenuStats.model.Player player : players ) { player . destinationType ( player.screenMenuMenuMenuMenuMenuMenuMenuMenuMenuMenuMenuMenuMenuMenuMenuMenuMenuMenuMenuMenuMenuMenuMenuMenuMenuMenuStats ) ; } this . reset () ; }
{ java.util.List < com.alexs.countdevelop.adapter.Stock > results = ( ( java.util.List < com.alexs.countdevelop.adapter.Stock > ) ( stock.values ) ) ; if ( ( results . size () ) > 0 ) { notifyDataSetInvalidated () ; } else { notifyDataSetInvalidated () ; } }
{ int fragLen = negValue - ( posValue ) ; if ( ( fragLen > 0 ) && ( fragLen <= 2000 ) ) { getCount () ; } ( fragLen ) ++ ; }
( delta > 0 ) ? delta / ( ( float ) ( delta ) ) : 0
{ satKMMan . update ( satManMMan ) ; return satKMMan . getId () . toString () ; }
{ double inches ; double counter = 0 ; for ( int inches = 1 ; inches <=Complete ; inches ++ )ches = ( inches / 3 ) * 3 ; java.lang.System.out . println ( ( ( "meters " + inches ) + " is " ) ) ; if ( ( counter == 0 ) && ( counter == 12 ) ) { counter ++ ; } java.lang.System.out . println ( "meters." ) ; }
{ factory . setOverwriteExistingJobs ( true ) ; factory . setJobFactory ( jobFactory ) ; factory . setQuartzProperties (TileProperties () ) ; factory . setTriggers ( sampleJobProperties () ) ; return factory ; }
java.lang.String . format ( "Parse error on line %s, col %s, Found %s, expected %s." , dispatcher . getLine () , dispatcher . getColumn () , dispatcher . getToken () )
private static void downloadMovieData () { java.lang.String response = null ; try { response = andras.com.popularmovies.utils.MovieDataUtils . getResponseFromHttpUrl ( andras.com.popularmovies.utils.MovieDataUtils . buildMovieUrl () ) ; } catch ( java.io.IOException e ) { android.util.Log . e ( andras.com.popularmovies.utils.MovieDataUtils . getMessage () , e ) ; } }
{ Common.Message listMsg ; java.lang.String content = "" ; for ( Common.User item : this . usersList ) { int i = 0 ; if ( i == 0 ) { content = ( ( content + " " ) + ( item . getUsername () ) ) + " " ; } else { listMsg = new Common.Message ( content , listMsg ) ; } i ++ ; } return new Common.Server ( MessageType.DATA , content ) ; }
if ( navigationEvent != ( NAVIGATION_FINISHED ) ) { android.support.customtabs.CustomTabs.Builder builder = new android.support.customtabs.CustomTabs.Builder ( session ) ; builder . setToolbarColor ( android.support.v4.content.ContextCompat . getColor ( activity , R.color.color ) ) ; android.support.v4.content.Intent customTabsIntent = builder . build ( android.net.Uri . parse ( activityUrl ) , android.net.Uri . parse ( urls [ ( ++ ( customTabsIntent ) ) ] ) ) ; builder . launchNavigationIntent () ; }
if ( address >= ( handler.Block . getAddressEnd () ) ) { return 13 ; } else { return ( ( short ) ( data . get ( ( ( int ) ( address & 255 ) ) ) ) ) ; }
( ( thread1JobDone ) && ( thread2JobDone ) ) && ( thread1JobDone )
this . level . checkHassedceed ( score )
{ this . returnDate = loanDate ; if ( ( returnDate < ( loanDate - 1 ) ) && ( i != ( - 1 ) ) ) { returnDate ; } android.util.Log . i ( org.bbtakoa.ki.model.Loan.TAG , "return should not be lower date" ) ; return setLoan ( loanDate , context ) ; }
config . getVolume ()
size = chartView.data . get ( 0 ) . size ()
timer . schedule ( timerTask , 5000 )
{ Woo . main ( null ) ; return; }
org.junit.Assert . assertEquals ( numberOfSequencesToGenerateLarger , s . getTotalSequences () )
{ boolean doneReading = readPage () ; if ( doneReading ) { return true ; } int recordsInCurrentPass = processData ( recordsInCurrentPass ) ; if ( doneReading ) { return true ; } doneReading = ( length ) - 1 ; if ( checkRecordFieldsReached () ) { return true ; } doneReading = false ; return doneReading ; }
{ messaging . convertAndSend ( "/topic/update" , indent ) ; return true ; }
( ( pd . hasOption ( PropertyOption.HIDDEN ) ) || ( ! ( app . isAdvancedMode () ) ) ) && ( pd . hasOption ( PropertyProperty.DADANCE ) )
{ int sourceNodeCount = sourceNodes . size () ; if ( ( sourceNodeCount != null ) && ( sourceNodeCount < index ) ) { return sourceNodes . get ( index ) ; } if ( ( sink ) != null ) { int index = sink . get ( sourceNodeCount ) ; return index == ( - 1 ) ? sink : sink . get ( index ) ; } throw new java.lang.IndexOutOfBoundsException () ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; com.orplial.exExplorerlayer.views.FileExplorerFragment fileExplorer = new com.orplial.exExplorerlayer.views.FileExplorerFragment () ; android.app.FragmentTransaction transaction = getFragmentManager () . beginTransaction () ; transaction . add ( R.id.fragment_container , fileExplorer ) ; transaction . addToBackStack ( chars_CLASS_NAME ) ; transaction . commit () ; }
KILO ( UCUM.GRAM )
{ mdHotels = ( ( javax.swing.table.DefaultTableModel ) ( jHotelsTable . getModel () ) ) ; if ( ( jHotelsTable . getSelectedRowCount () ) == 0 ) { javax.swing.JOptionPane . showMessageDialog ( this , "please select the Hotel" ) ; return; } java.lang.String HotelName = jHotelsTable . getValueAt ( HotelName ) . toString () ; deleteHotelsSelectRow ( HotelName ) ; deleteHotels = mdHotelsTable . getValueAt ( HotelName , 0 ) . toString () ; }
newData . put ( mx.edu.cide.justiciacotidiana.v1.mongo.MongoInterface.FIELD_UPDATED , new java.util.Date () ) ;
org.testng.Assert . assertEquals ( 30 , dataBag . size () )
json = new byte [ 0 ]
{ analyze ( AST.AddExpression . getTail () ) ; analyze ( AST.AddExpression . getTail () ) ; }
if ( ( ps ) != null ) { ps . close () ; }
if ( number < 0 ) { throw new java.lang.IllegalArgumentException ( ( ( "number Number: " + number ) + ". neagative Number cannot be number." ) ) ; }
public void add ( seedu.taskboss.model.task.Task toAdd ) throws seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException { assert ( toAdd . getCategories () ) != null ; if ( ! ( toAdd . getCategories () . contains ( Category.done ) ) ) { throw new seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException () ; } internalList . add ( toAdd ) ; }
new org.sigmah.offline.dao.RequestManager ( callback , projects )
{ java.lang.String mess = java.lang.String . valueOf ( index ) ; Config.Messages s = Config.Messages . getString ( ( index + 1 ) ) ; if ( ! ( s . contains ( "Index." ) ) ) { mess = s . getString ( ( index + 1 ) ) ; } mess = mess . replace ( "B" , 10 ) ; sendBar ( "Boss" , mess ) ; }
{ if ( ! ( wale_tech.tryon.user.setting.Permission . checkAutoPermission ( context , Manifest.permission.CAMERA ) , PermissionSet.CAMERA ) ) { return; } if ( ! ( checkLogin () ) ) { return; } checkNet () ; }
this . backgroundValue
{ super . onCreate ( savedInstanceState ) ; if ( ! ( com.innovationplayground.executiontest.client.session.PermissionUtil . hasExternalStoragePermission ( getActivity () ) ) ) { com.innovationplayground.executiontest.client.session.ExternalStoragePermissionUtil . requestWriteStoragePermission ( getActivity () ) ; return; } com.innovationplayground.executiontest.client.auth.communication.AuthProxyAuthenticator authProxy = new com.innovationplayground.executiontest.client.auth.communication.AuthProxyAuthenticator ( getActivity () , storageClient ) ; com.innovationplayground.executiontest.client.session.AuthProxyAuthenticator client = new com.innovationplayground.executiontest.client.session.AuthProxyAuthenticator ( getActivity () ) ; loadClients ( client ) ; }
{ org.apache.sis.util.ArgumentChecks . ensureStrictly ( "base" , base ) ; if ( base == 10 ) { return org.apache.sis.referarithmic.operation.LogTransform.DAT1 . createBaseTransform ( offset ) ; } return ( org.apache.sis.referarithmic.transform.LogTransform.DAT1 .Random ( base ) ) / ( 1 - ( java.lang.Math . log ( org.apache.sis.referarithmic.operation.LogTransform.operation , offset ) ) ) ; }
{ if ( ( graphics2D ) != null ) { graphics2D . setPaint ( java.awt.Color.white ) ; graphics2D . fillRect ( 0 , 0 , graphics2D . getSize () . width , graphics2D . getSize () . height ) ; } graphics2D . setPaint ( java.awt.Color.black ) ; }
if ( ( args.length ) != 1 ) { try { int starWarsSequence = java.lang.Integer . parseInt ( args [ 0 ] ) ; java.lang.System.out . println ( ( "Star Wars: " + starWarsSequence ) ) ; } catch ( java.lang.NumberFormatException e ) { java.lang.System.err . println ( ( "Argument must be an integer." + "There must be 2 integer." ) ) ; java.lang.System . exit ( 1 ) ; } } else { java.lang.System.err . println ( "There must be 1 argument." ) ; }
{ mShowBottomLoading = show ; if ( show ) { com.livae.android.loading.RecyclerAdapter . notifyItemInserted ( getBottomLoadingPosition () ) ; } else { com.livae.android.loading.RecyclerAdapter . notifyItemRemoved ( getBottomLoadingPosition () ) ; } }
{ throw e ; }
( ( ( this . getLength () ) == ( other . getLength () ) ) && ( ( this . getWidth () ) == ( other . getWidth () ) ) ) && ( ( this . getHeight () ) == ( other . getHeight () ) )
{ sessions . remove ( session ) ; session . close () ; sessions . remove ( session . getId () ) ; }
( java.lang.Double ) ( o.object ) > 1
event . getPersonId ()
{ int id = item . getItemId () ; switch ( id ) { case android.R.id.home : android.util.Log . d ( "hi" , "hi" ) ; android.support.v4.app.NavUtils . navigateUpFromSameTask ( this ) ; return true ; } return super . onOptionsItemSelected ( item ) ; }
{ arbolTags . remove ( tag . getTags () ) ; return; }
{ alert = new android.app.AlertDialog.Builder ( this ) . setTitle ( "Alert" ) . setMessage ( "Block is running" ) . setPositiveButton ( "OK" , null ) . show () ; }
{ listeners . clear () ; chatToggle = null ; if ( ( chatCommand ) != null ) { chatToggle . close () ; chatToggle = null ; } chatCommand = null ; }
{ java.util.List < com.hanuor.onyx.helper.RecognitionResult > results = request . recognizeifai ( new com.hanuor.onyx.video.helper.RecognitionRequest ( tags.Recognition ) ) ; if ( ( results . size () ) != 0 ) { for ( com.hanuor.onyx.helper.Tag tag : results . get ( 0 ) . getTags () ) { probableTags . add ( tag . getName () ) ; } } return probableTags ; }
callback . invoke ( key , value )
wxService . tagAddUsers ( tagId , userIds )
{ showProgress ( true ) ; }
new cn.ac.ucas.operator.Operator ( filter )
deque [ ( ( first ) - 1 ) ]
{ if ( ( lastField . isLong () ) || ( searchResultField . isLong () ) ) { return false ; } return ( com.orientechnologies.orient.core.sql.OSearchResultOperator . isOperatorIndex ( lastIndex ) ) || ( com.orientechnologies.orient.core.sql.OSearchResultOperator . isOperatorIndex ( searchResultField ) ) ; }
{ java.lang.System.out . println ( "-- stop()" ) ; java.lang.System.out . println ( "Stopping application, saving" ) ; config.StoppingStage config_pos.x = main.Stage . getX () ; config.pos.y = main.Stage . getY () ; config.width = main.Stage . getWidth () ; config.height = main.Stage . getHeight () ; org.szjernesern.twitch.list.Config . save ( java.nio.file.Paths . get ( anchor , config.width ) ) ; }
{ if ( ! ( isLoaded ) ) { return null ; } sender . setStringMetadata ( org.bitbucket.ucchy.undiney.MailManager.KEY_METALIST , "trashbox" ) ; java.util.ArrayList < org.bitbucket.ucchy.undiney.MailData > box = new java.util.ArrayList < org.bitbucket.ucchy.undiney.MailData > () ; for ( org.bitbucket.ucchy.undiney.MailData box : org.bitbucket.ucchy.undiney.MailData box ) { if ( ( box . isSet () ) && ( box . isSet () ) ) { box . add ( box ) ; } } return box ; }
<EMPTY>
{ com.zhihu.matisse.internal.entity.Item.ID_ITEM_TURE , com.zhihu.matisse.internal.entity.Item.ITEM_NAME_CAPTURE , 0 , "" }
{ int r = ( ( int ) ( java.lang.Math . round ( ( ( coord . getY () ) - ( minY / ( cellSize ) ) ) ) ) ; int c = ( ( int ) ( java.lang.Math . round ( ( ( coord . getX () ) - ( ( coord . getX () ) / ( cellSize ) ) ) ) ) ) ; return ( cols [ r ] ) * ( ( ( org.matszone.contrib.im.ZoneSize ) ( coord ) ) + ( c * ( ( int ) ( cols ) ) ) ) ; }
@ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String address = "" ; if ( ( v . getContext () ) == ( this . lblBitcoinAddress ) ) address = this . getActivity () . getString ( R.string.bit_address ) ; else if ( ( v . getContext () ) == ( this . lblLoinAddress ) ) address = this . getContext () . getString ( R.string.ec_lititoinen ) ; net.litegen.android.util.Clipboard . getInstance ( this . getActivity () ) . setClipText ( address ) ; }
{ java.util.ArrayList < java.lang.Class < ? extends com.audacious_software.passive_data_kit.generators.Generator > > active_pass = new java.util.ArrayList <> () ; for ( java.lang.String className : mGenerators ) { try { active_pass . add ( ( ( java.lang.Class < ? extends com.audacious_software.passive_data_kit.generators.Generator < ? > ) ( className ) ) ) ; } catch ( java.lang.ClassNotFoundException e ) {} } return active_pass ; }
r . accept ( c , org.objectweb.asm.ClassReader.SKIP_DEBUG )
pokerController . startGame ( false )
{ java.lang.String name = editTextName . getText () . toString () ; java.lang.String addAddress = editTextAddress . getText () . toString () ; fluffios.ududios.firebasedemo.auth.UserInformation userInformation = new fluffios.udios.firebasedemo.auth.UserInformation ( name , addUserInformation ) ; com.google.firebase.auth.FirebaseAuth . getCurrentUser () . child ( userInformation ) . setValue ( userInformation ) ; firebaseAuth . child ( "..." ) . setValue ( userInformation ) ; }
if ( ( currVocab . getSpeech () ) == null ) { playSound ( currVocab . getSpeech () ) ; } else { com.example.imvou.WebServiceHelper.ClassesHelper webHelper = new com.example.imvou.WebServiceHelper.ClassesHelper () ; webHelper . setListener ( new com.example.imvou.WebServiceHelper.ClassesHelperListener () { @ java.lang.Override public void onResult ( com.example.imvou.WebServiceHelper.ClassesListener result ) { result . speak ( currVocab . getSpeech () ) ; } } ) ; currVocab . setSpeech ( webHelper.ClassesListener ) ; }
{ org.talend.components.api.properties.ComponentProperties props = new org.talend.components.splunk.TSplunkEventCollectorProperties () . createProperties () ; org.talend.daik.presentation.properties.Form.MAIN f = Form.TestUtils . getForm ( props ) ; org.talend.components.api.test.SerializeForm error = Form.TestUtils . checkSerializeForm ( f , Form.TestUtils . getForm ( advanced ) ) ; java.lang.System.out . println ( error . getName () ) ; assertEquals ( advancedANCEFANCED , f . getForm ( advanced ) ) ; assertEquals ( advancedANCED , f . getForm ( Form.DADV ) ) ; }
{ java.lang.System.out . println ( "Status" ) ; java.lang.System.out . println ( "username: " ) ; java.lang.System.out . println ( ( "username: " + ( username ) ) ) ; java.lang.System.out . println ( ( "password: " + ( salt ) ) ) ; java.lang.System.out . println ( ( "Answer: " + ( java.lang.System.EN_BIT ) ) ) ; java.lang.System.out . println ( ( "s: " + ( DataHash . length () ) ) ) ; java.lang.System.out . println ( ( "s: " + ( java.lang.System.out ) ) ) ; java.lang.System.out . println ( "" ) ; }
java.lang.String attributePointer
termEqualsNewSymbolEquals ( qvar , qvar1 , qvar2 , null )
( ( dimension () ) - j ) / dimension
{ int n = contexts . size () ; for ( n -= 1 ; n >= 0 ; n -- ) { MiniJava.Var n = contexts . get ( ( n - 1 ) ) . get ( varName ) ; if ( n != null ) { return findRes ( n ) ; } } return MiniJava.Res . identifier () ; }
@ java.lang.Override public void save ( org.openstack.atlas.service.domain.impl.AccountLimit accountLimit ) throws org.openstack.atlas.service.domain.exceptions.BadRequestException { org.openstack.atlas.service.domain.impl.AccountLimit accountLimit = dbRepository . getByIdAndType ( accountLimit . getAccountId () , accountLimit . getLimit () ) ; if ( accountLimit != null ) { dbRepository . save ( accountLimit ) ; } }
return true ;
timeChosen = java.util.Calendar . getInstance ()
switch ( key ) { case com.feresr.rxweather.UISettingsActivity.PREF_UNIT : if ( sharedPreferences . getString ( key , "celsius" ) . equals ( "celsius" ) ) { citiesView . showTemperatureInView () ; } else { citiesView . showTemperatureInView () ; } break; case com.feresr.rxweather.UIActivity.VIEWID : if ( sharedPreferences . getBoolean ( key , false ) ) { citiesView . setSetColumns ( 1 ) ; } else { citiesView . setSetColumns ( 2 ) ; } break; }
java.lang.String . format ( "Component '%s' input '%d => size '%s' => '%s'" , target . getName () , input . size () , target . getName () )
if ( ( null == ( rootView ) ) && ( cacheContentData ) ) { rootView = onCreateFragment ( rootView , savedInstanceState , container ) ; }
new java.util.ArrayList < com.bmest.powermaode.Particle > ( particles )
{ if ( t == 0 ) { return 0 ; } checkEmptyStream ( "pre" ) ; checkCapacity ( t ) ; if ( ( size ) >= ( bons ) ) { return b ; } else { return stream . preCast ( name , t ) ; } }
{ if ( ! ( com.frdf.snghtinitor.PlayerStats.started ) ) { return; } if ( ! ( com.frdf.snghtinitor.PlayerStats . isPlayerStats ( player ) ) ) { return; } com.frdf.snghtinitor.PlayerStats.State state = com.frdf.snghtinitor.PlayerStats.player . get ( player . getName () ) ; if ( state != null ) { state.lastTime = java.lang.System . currentTimeMillis () ; player . onPlayerStats ( state.lastTime , player . getLocation () ) ; } }
java.lang.Stringkernel = request . getString ( "privacy" ) ;
( mSessionStartPointerMillis ) > ( ( ee.ioconph.android.speech.utils.ContinuousAudioRecorder.mRawPointerStartPointerBuffer . getSessionOfMillis () ) - ( getSessionOfMillis () ) )
{ java.lang.String username = principal . getName () ; com.jenowers.library.models.User toUser = userRepo . findByUsername ( username ) ; com.jenowers.library.models.User user = fromUser . findOne ( id ) ; com.jenowers.library.models.FriendRequest friendRequest = new com.jenowers.library.models.FriendRequest () ; friendRequest . setFrom ( fromUser ) ; friendRequest . setToufriend ( true ) ; friendRequest . setTending () ; friendRequest . save ( friendRequest ) ; return "user" ; }
if ( ( org.droidplanner.android.BuildConfig.DEBUG ) || ( ( org.droidplanner.android.utils.Utils . getAppVersionCode ( context ) ) > ( mAppPrefs . getSavedVersionCode () ) ) ) { org.droidplanner.android.dialogs.MaterialDialog changelogDialog = new org.droidplanner.android.dialogs.MaterialDialog ( context ) ; changelogDialog . show ( getSupportFragmentManager () , "Changelog" ) ; }
{ java.lang.String URL = ( MainActivity.URL ) + ( MainActivity.USN ) ; android.content.Intent i = new android.content.Intent ( getActivity () , com.team.idents.fastitivulters.SemestService . class ) ; i . putExtra ( "URL" , URL ) ; i . putExtra ( "MUSN" , MainActivity.USN ) ; getActivity () . startService ( i ) ; getActivity () . startService ( i ) ; }
{ float randomVVelx = ( ( random . nextFloat () ) * 2.0F ) - 4.0F ; float randomVely = ( random . nextFloat () ) - 4.0F ; return new com.dumbpugknight.crossbowparticles.ParticleDetails ( ( - 10 ) , new com.dumbpugknight.crossbowparticles.ParticleDetails ( emitter.ParticleDetails.positionX , randomVely , level ) ) ; }
anchorText . append ( new java.lang.String ( ch , start , length ) . replaceAll ( "\n" , "" ) . replaceAll ( "\t" , "" ) ) . trim ()
@ java.lang.Override public dyvil.tools.compiler.astfield.IDataMember resolveField ( dyvil.tools.parsing.Field name ) { if ( ( this . variables ) != null ) { for ( int i = ( this . variables . size () ) - 1 ; i >= 0 ; i -- ) { final dyvil.tools.compiler.astfield.IVariable variable = this . variables . get ( i ) ; if ( variable == null ) { return this . variable . getName () ; } } } return null ; }
{ java.lang.System.out . println ( "ALl the books books" ) ; model . addAttribute ( "book" , new edu.cs.mms545.mmsbook.domain.BookTypes () ) ; java.util.Arrays . asList ( edu.cs.mms545.mmsbook.domain.BookType . values () , java.util.Arrays . asList ( books ) ) ; model . addAttribute ( "booksCategories" , ( ( book . books () . size () ) - 1 ) ) ; java.lang.System.out . println ( ( ( book . getBikis () . size () ) + " --" ) ) ; return "service" ; }
return cursor . getInt ( 0 ) ;
{ content = httpHttpGet . download ( url ) ; }
actualHours = 1
{ if ( ( isWhite () ) && ( ( rank . start () ) == 7 ) ) return true ; else if ( ( ( rank . start () ) == 2 ) && ( ( rank . rank () ) == 1 ) ) return true ; return false ; }
if ( ( ( mMap ) != null ) && ( ( mMap . getRoute () ) != null ) ) { com.google.android.gms.maps.model.LatLng temp1 = new com.google.android.gms.maps.model.LatLng ( myRoute . get ( 0 ) . getLatitude () , myRoute . get ( 0 ) . getLongitude () ) ; mMap . moveCamera ( com.google.android.gms.maps.CameraUpdateFactory . newLatLng ( temp1 ) ) ; }
withItem . withAmount ( withItem . getAmount () )
holder.itemView . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { photos . remove ( holder . getAdapterPosition () ) ; } } )
{ java.util.List < org.eclipse.moquette.spi.impl.storage.PublishEvent > storedStoredEvents = client . getClientID () ; if ( ! ( m_persistentEventsStore . containsKey ( storedID ) ) ) { java.util.ArrayList <> m_persistentEvents = new java.util.ArrayList <> () ; m_persistentEventsStore . get ( storedID ) . addPersistent ( client ) ; evt . put ( storedID , m_persistentEventsStore . convertToStored ( client ) ) ; } else { evt . commit () ; } }
this . loadingDialog . setMessage ( ( ( "Downloading: " + ( lstToDownload ) ) + "..." ) )
new model.Bubble ( getX () , getY () , 0 , 0 , facingRight )
getEntityRef ( client )
{ java.util.ArrayList < java.lang.String > list = new java.util.ArrayList <> () ; for ( int k = 1 ; k < k ; k ++ ) { list . add ( ( ( list . get ( k ) ) + " " ) ) ; } return list ; }
filter ( v , newVehicle )
{ int viewHolderPosition = viewHolder . getAdapterPosition () ; mModelAdapter . removeChild ( viewHolderPosition ) ; mSetsAdapter . notifyItemRemoved ( viewHolderPosition ) ; mSnackbar . show ( android.support.design.widget.Snackbar . make ( mSetsView , R.string.message_exercise_deleted_message_INDEFINITE , Snackbar.LENGTH_INDEFINITE ) ) ; mSnackbar . setAction ( R.string.cancel_cancel_button_text ) ; mSnackbar . show () ; }
{ s . setBrBr ( txtTelBr . getText () ) ; s . setEmail ( txtEmail . getText () ) ; s . setEmail ( java.lang.Integer . parseInt ( txtcenoUpGUI . getText () ) ) ; controller . populateKontzi ( s . controller () ) ; }
this . name . equals ( rhs.host )
{ cv . setVisibility ( View.VISIBLE ) ; showAnim . cancel () ; cv . startAnimation ( showAnimInfo ) ; btnOutAnim . setVisibility ( View.INVISIBLE ) ; btnOutAnim . startAnimation ( com.engstuff.coloriphadeia.interfaces.FornHideInfoListener.colorInvoked ) ; }
{ android.widget.Toast . makeText ( context , EventName , Toast.LENGTH_SHORT ) . show () ; }
{ super . onPostExecute ( keys ) ; android.content.Context context = baseHolder . getContext () ; android.content.Intent openWeb = new android.content.Intent ( context ,security.Authloud.AuthWebActivity . class ) ; openWeb . putExtra ( "URL" , getAuthUrl () ) ; openWeb . putExtra ( "AUTHORIZERKEYS" , keys ) ; context . startActivity ( openWeb ) ; }
new io.github.sdsstudios.ScoreKeeperers.Adapters.PlayerListAdapter ( this , editable , mRelativeLayout , mRelativeLayout )
vectorDataNode . setPermanent ( false )
return ( this . getName () . equals ( newStylist . getName () ) ) && ( this . getId () . equals ( newStylist . getId () ) ) ;
try { java.lang.String str = "SELECT h FROM Hospital h WHERE h.suburb = :suburb" ; javax.persistence.Query query = em . createQuery ( str ) ; query . setParameter ( "suburb" , suburb ) ; return query . getResultList () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; em . close () ; } finally { em . close () ; }
bw . write ( ( ( ctx . expressionName () . getText () ) + ".get(" ) )
com.example.test.me.server.broadcast.Broadcaster . broadcast ( username , true )
{ try { status = OrderService . valueOf ( typeStr () ) ; } catch ( java.lang.Exception e ) { com.emc.sa.api.utils.JobOrderInfoService.log . error ( "Failed to get job type=" , e ) ; throw e ; } return status ; }
path . setText ( selectedDirectory )
if ( ( last_date != null ) && ( ! ( last_date . equals ( birthdate ) ) ) ) { com.example.mishaberkovich.roomsquad.EditProfileActivity.changes_saved = false ; }
{ TestController . tests ( 10 , "g" , ( ( TestController.files [ i ] ) + ( TestController.maxValues ) ) , TestController.files [ i ] , "p" , ( ( TestController.files [ i ] ) + ( TestController.maxValues ) ) , TestController.files [ i ] ) ; }
{ models.Game g = new models.Game () ; models.Game g2 = new models.Game () ; if ( ( g . chooseDeck () ) == 1 ) { g . shuffleResults () ; return ninja.Deck . render ( g2 ) ; } else { g2 . renderResults () ; return ninja.Deck . render ( g2 ) ; } }
public static void restoreDensity ( android.content.Context context ) { if ( context != null ) { context . getResources () . getDisplayMetrics () . setToDefaults () ; android.util.DisplayMetrics metrics = com.rudeness.bud.ui.RudScreenHelper . getResources () ; metrics . getMetrics ( context ) ; if ( metrics != null ) metrics . setToDefaults () ; } }
{ java.util.HashMap < java.lang.String , JamaMatrixList > bugMatrixVectors = utils.VecUtil . loadFilePathList (Nodes ) ; java.util.Map < java.lang.String , JamaMatrixList < java.lang.String , JamaMatrixList > > codeMatrixVectors = utils.VecUtil . loadFilePathList ( codeMatrixVectors , utils.VecUtil . exportMatity ( codeMatrixVectors , utils.VecUtil . generateMatity ( bugMatrixFilePath , utils.VecUtil . generateMaticSizeSimilarity ( bugMatrixList ) ) , utils.VecUtil . generateMaticSizeSimilarity ( bugMatrixList , utils.VecUtil . generateMaticSizeSimilarity ( bugMatrixList ) ) ) ; }
{ em . remove ( em ) ; mapLayerMetadataMap . deleteOlderThumbnails ( this ) ; return true ; }
{ double ret = 1 / ( real.length ) ; for ( int i = 0 ; i < ( real.length ) ; i ++ ) { ret += java.lang.Math . pow ( ( ( real [ i ] ) - ( predicted [ i ] ) ) , 2 ) ; } return java.lang.Math . sqrt ( ret ) ; }
if ( ( ( score [ ( currentHole - 1 ) ] ) < 18 ) || ( ( ( currentHole - 1 ) < 0 ) && ( ( currentHole ) >= ( com.software.michael.app.discgolf.Model.maxScore ) ) ) { return; }
{ int i = 0 ; for ( char c : input . toCharArray () ) { if ( c == '{' ) i ++ ; if ( ( '}' == c ) && ( i > 0 ) ) i -- ; } return i == 0 ; }
( ( versionMatcher . group ( 4 ) ) == null ) ? false : versionMatcher . group ( 3 )
{ android.widget.Toast clickMessage = android.widget.Toast . makeText ( getContext () , "CLICKED!" , Toast.LENGTH_LONG ) ; clickMessage . show () ; android.content.Intent i = new android.content.Intent ( itemView . getContext () , com.pratik.mik.PatientDetailsActivity . class ) ; i . putExtra ( "Patient" , mEmailTracker . getText ( itemView . getText () . toString () ) ) ; startActivity ( i ) ; }
{ if ( enumName == null ) continue; if ( enumName . trim () . equalsIgnoreCase ( gc . name () ) ) { temp = gc ; break; } }
org.junit.Assert . assertEquals ( 23 , result . get ( "data" ) )
this . viewNameToBeanNamesMap . get ( viewName )
public void traiterEmail ( java.lang.String email , com.tutut.beans.Utilateur utilisur ) { try { validationEmail ( email ) ; } catch ( java.lang.Erreur ) { com.tut.forms.ConnexionForm utilur = e . getMessage () ; if ( utilur == null ) { utilur = new com.tut.forms.ConnexionForm ( utilur ) ; } else { setErreur ( utilur , utilur ) ; } } }
user . toString ()
{ if ( camera == null ) return; float step = camera . getParameters () . getExposureStepensation () ; java.lang.Math . max ( ( step * ( camera . getParameters () . getExposureCompensation () ) ) , step ) ; }
if ( ( ( this . pauseTime ) > 0 ) && ( ( this . startTime ) > 0 ) ) { this . startTime = - ( this . runtimeTime ) ; } else { this . startTime = - ( this . runtimeTime ) ; com.badlogic.gdx.utils.Utils . millis () ; }
dirToOpen = new java.io.File ( path )
{ this . solve ( nb , ( - 1 ) , source , destination , this ) ; this . moveDiscOne ( source , destination , ( - 1 ) , ( - 1 ) ) ; }
public models.Trainer searchTrainersByEmail ( java.lang.String email ) { java.lang.String train = new java.lang.String ( "" ) ; if ( ( train . size () ) > 0 ) { for ( models.Trainerer trainer : trainers ) { if ( trainer . getEmail () . equals ( email ) ) { return trainer ; } else { return null ; } } } else { return null ; } }
{ if ( low > high ) return list ; int pos = partition ( list , low , high ) ; quicksort ( list , low , ( pos - 1 ) ) ; quicksort ( list , ( pos + 1 ) , high ) ; }
{ if ( ! ( de.schon_neigolf.simider.minigscores.PlayRound.isDone ) ) { playViews . putGridIntoGrid () ; } playViews . putGrid ( de.schon_neigolf.simider.minigscores.PlayRound.isDone ) ; }
{ this . transformation = source ; this . transformation . apply ( source , this ) ; }
{ catie.challenge.accepted.WSChallenge.AcceptedChallengeService service = new catie.challenge.accepted.WSChallengeService () ; catie.challenge.accepted.WSUser user = new catie.challenge.accepted.WSUser () ; user.email = mEmail ; user.password = mPassword ; try { user.email = mPassword ; java.lang.System.out . println ( user.password ) ; } catch ( java.lang.Exception e ) { android.util.Log . e ( "Exception" , "In remote params" ) ; return null ; } return true ; }
( params.length )
{ javax.servlet.http.HttpSession session = request . getSession () ; java.lang.String requestQuery = request . getParameter ( "search" ) ; java.util.List < kahara.awara.models.SearchResults > allResults = request . getSearchResults ( requestQuery ) ; int pageIndex = getPageIndex ( requestQuery , allResults , session ) ; return getPageSearch ( requestQuery , allResults , pageIndex , pageSearch ) ; }
{ dataset = null ; displayService . getDisplays () . remove ( display . getImageDisplay () ) ; imageService . remove ( display . getImageDisplay () ) ; display . clear () ; dataset . close () ; display = null ; display = null ; }
switch ( which ) { case 0 : mCallback . mapSelectedType ( GoogleMap.MAP_TYPE_NORMAL ) ; break; case 1 : mCallback . mapSelectedType ( net.excindroid.dustries.geohash.fragments.MapFragment.MAP_STYLE_MAP ) ; break; case 2 : mCallback . mapSelectedType ( GoogleMap.MAP_TYPE_INRABR ) ; break; case 3 : mCallback . mapSelectedType ( GoogleMap.MAP_TYPE_HYBRID ) ; break; }
{ java.util.ArrayList < se.kth.news.core.News > newsToAdd = container . getContentToAdd () . getNews () ; for ( se.kth.news.core.News news : newsToAdd ) { if ( ! ( news . contains ( n ) ) ) { news . handle ( n ) ; } } }
if ( ( traceDataProvider [ index ] ) != null ) { traceDataProvider [ index ] . setTraceColor ( ( ( ( org.csstudio.xydsy.graphxy.model.component.s.XxyGraphModel.PROP_PRIMARY_AXIS_TRACE_COLOR_PREFIX ) + ( org.csstudio.xydsy.graphxy.model.components.XxyGraphModel.PROP_PRIMARY_COLOR_PREFIX ) ) + oldValue ) ) ; }
( a [ i ] . length )
java.util.Map < java.lang.String , java.lang.Object > nodeProperties = new java.util.Properties () ;
public void generateSmallToast ( java.lang.String info ) { final android.widget.Toast toast = android.widget.Toast . makeText ( getBaseContext () , info , Toast.LENGTH_SHORT ) ; toast . show () ; toast . postDelayed ( new java.lang.Runnable () { @ java.lang.Override public void run () { cancel () ; } } , 500 ) ; }
collapseView ( lastExpandedPosition , false , true )
getSearchTerm ( lastParseDate , true )
switch ( position ) { case 0 : return chatFragment ; case 1 : return contactsFragment ; case 2 : if ( ( contactsFragment ) != null ) { contactsFragment = new com.superinchat.ui.ContactsFragment () ; return bulletFragment ; } default: return new com.superinchat.ui.TempFragment () ; }
{ org.mockito.Mockito . when ( mock ( com.intellij.psi.PsiFile . class ) ) . thenReturn ( text ) ; org.mockito.Mockito . when ( mock ( com.intellij.psi.PsiFile . class ) ) . thenReturn ( text ) ; org.mockito.Mockito . when ( mock ( com.intellij.psi.PsiElement . class ) ) . thenReturn ( new com.intellij.psi.PsiElement [] { mock ( com.intellij.psi.PsiFile . class ) } ) ; return mock ( com.intellij.psi.PsiFile . class ) ; }
{ light = section . spreadSkylightDownwards ( x , z , light ) ; break; }
if ( ( containsFilter && ( ! containsIgnoreFilter ) ) || ( ! containsIgnoreFilter ) ) { return "<filter-filter-n" + line ; } else if ( ( ! containsIgnoreFilter ) && ( ! ( containsIgnoreFilter ) ) ) { return "\n" + lineIgnoreFilter ; }
public static com.alphatica.genotickgen.RobotData createUpDataToPoint ( int i ) { java.util.List < double [] > list = new java.util.ArrayList <> () ; for ( double [] original : values ) { list . add ( original ) ; } try { java.lang.Double time = calculateReverse ( list ) ; com.alphatica.genotickgen.RobotDataChange future = com.alphatica.genotickgen.RobotDataChangePoints . create ( name , time , copy ) ; return time ; } catch ( java.lang.Exception ex ) { return name ; } }
{ super . onCreate ( savedInstanceState ) ; android.view.LayoutInflater inflater = ( ( android.view.LayoutInflater ) ( getSystemService ( de.prismatik.hartz.remote.activities.Settings.LAYOUT_INFLATER_SERVICE ) ) ) ; inflater . inflate ( R.layout.activity_settings , null ) ; mDrawer = ( ( android.widget.Button ) ( findViewById ( R.id.allowNotificationsButton ) ) ) ; allowSettingsButton = ( ( android.widget.Button ) ( findViewById ( R.id.settings ) ) ) ; applyNotifications () ; }
{ long sizeOfComponent = commentGraph . getSizeOfLargestConnectedComponent () ; if ( sizeOfComponent > 0 ) { java.lang.System.out . println ( "DDDDDDDDDDDDDDD" ) ; if ( sizeOfComponent == 0 ) { continue; } java.lang.String comment = commentGraph . getComment () . hashCode () ; commentMap . put ( comment , comment ) ; updateLikeCommentSize () ; } }
{ session . setAttribute ( "userProfile" , userProfile . getRole () ) ; return "/index" ; }
public static void post ( java.lang.String url , java.lang.String requestBody , com.chinamobile.iot.OneNetApi.Callback callback ) { com.chinamobile.iot.OneNetApi . assertInitialized () ; com.chinamobile.iot.OneNetApi . assertUIThread () ; com.chinamobile.iot.OneNetApi.sHttpUrl = ( com.chinamobile.iot.OneNetApi.sHttpUrl ) + "utf-8" ; com.chinamobile.iot.OneNetApi.sHttpExecutor . post ( url , requestBody , new com.chinamobile.iot.OneNetApi.RequestBody () ) ; com.chinamobile.iot.OneNetApi.sHttpAdapter . post ( url , new com.chinamobile.iot.OneNetApi.RequestBody () ) ; }
private void synchronizeFounders () { mLastSyncTime = java.lang.System . currentTimeMillis () ; int maxVersionFound = 0 ; int serverMaxVersion = 0 ; int serverMaxVersionFound = syncers ; syncVersionMax = serverMaxVersionFound ; syncVersionMax = serverMaxVersionFound ; syncVersionMax = serverMaxVersionFound ; syncVersionMax = serverMaxVersionFound ; }
{ int id = view . getId () ; android.widget.CheckBox chk = ( ( android.widget.CheckBox ) ( view ) ) ; if ( chk . isChecked () ) { android.util.Log . d ( com.sarahrobinproject.finalyearproject.activities.MainActivity.TAG , "Added to invite list" ) ; } else { android.util.Log . d ( com.sarahrobinproject.finalyearproject.activities.MainActivity.TAG , "Removed invite from more" ) ; } }
mGoogleApiClient = new com.google.android.gms.common.api.GoogleApiClient.Builder ( this ) . addApi ( Nearby.MESSAGES_API , new com.google.android.gms.nearby.messages.Permissions.Builder () . setPermissions ( Nearby.BLEPermissions.MHONE ) . setPermissions ( Nearby.BLUETOOTH ) . build () ) . build ()
{ org.apache.http.client.HttpClient client = httpClientFactory . getHttpClient () ; httpClient . preAuthSet ( request ) ; httpClient . addHeader ( "Content-Type" , "application/json" ) ; request . addHeader ( "Accept-Accept" , "multipart/X-Accept-Encoding" ) ; request . addHeader ( "User-Agent" , "gzip" ) ; request . addHeader ( "Accept-Headers" , "application/json" ) ; request . executeRequest ( request ) ; }
{ double energyLeft = robotSnapshot . getEnergy () ; int playerId = robotSnapshot . getTeamIndex () ; com.hutocode.robutocode.server.IScore snapshot = robotSnapshot . getScore () ; double gunDamageBullet = snapshot . getCurrentKillScore () ; return new com.hutocode.robutocode.server.RobmingDamage ( ( ( playerId + ( snapshot . getCurrentKill () ) ) + ( snapshot . getCurrentKill () ) ) , energyLeft , gunDamageBullet , snapshot . getCurrentKillDamage () ) ; }
{ if ( ( ( exampleShaderPool.bufProgram ) == null ) || ( ( exampleShaderPool.bufProgram ) == null ) ) return; exampleShaderPool.bufProgramBuffer.16 = org.lwjgl.gl.FloatUtils . createFloatBuffer ( 1616 ) ; exampleShaderPool.bufProgram . get ( exampleShaderPool.bufProgram ) . clear () ; mat ( exampleShaderPool.bufProgram , loc16 ) ; }
newId != 0
public static < T > void serialize ( T object , java.lang.Class < T > sourceClass , java.io.OutputStream resultStream ) throws javax.xml.bind.JAXBException { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext . newInstance ( sourceClass ) ; javax.xml.bind.Marshaller jaxb = jaxbContext . createMarshaller () ; jaxb . setProperty ( javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT , true ) ; jaxbMarshaller . marshal ( object , true ) ; }
{ org.oscm.converter.strategy.ConversionStrategy < To [] , To = org.oscm.converter.strategy.ConversionFactory . get ( ds , from , to ) ; return converter . setData ( object ) ; }
if ( ( mStatusList != null ) && ( ( mStatusList . size () ) > 0 ) ) { setViewData ( mStatusList ) ; } else { android.util.Log . d ( com.bricechou.weiboclient.fragment.HomeFragment.TAG , "Done No onComplete: No onComplete." ) ; onCompleteView () ; }
if ( cameraData . isNewAvailablePacket () ) { us.ihmc.humanoidRobotics.communication.packs.VideoPackPacket vid = cameraData . getLatestPackPacket () ; java.lang.System.out . println ( vid.videoPackSource . toString () ) ; if ( ! ( testImagePack . getData ( vid ) ) ) { try { java.io.ByteArrayInputStream in = new java.io.ByteArrayInputStream ( vid.imagePack . getData () ) ; javax.imageio.ImageIO . write ( in , "Nothing to read 'image.png" , true ) ; } catch ( java.io.IOException e ) {} } } else { java.lang.System.out . println ( "Nothing to write camera" ) ; }
{ obdaModelManager = ( ( org.semanticweb.ontanticweb.protege.core.OWDALEKitModelManager ) ( getOWDAKitModelManager () . get ( it.unkribz.obibDA.model.impl.ModelImpl . class . getName () ) ) ) ; obda.ModelManager . getOWDALELModelManager () . addListener ( this ) ; org.opanticweb.protege.editor.model.OWDALELModelManager oblModelManager = ( ( org.opanticweb.protege.editor.model.OWDALELModelManager ) ( getOWDAKitModelManager () . getOWDALELModelManager () ) ) ; oblModelManager . setLayout ( new java.awt.BorderLayout () ) ; editorDatasource () ; initialized = new java.awt.BorderLayout () ; }
"refresh on " + ( tabPosition )
private static void sendResultWithDns ( boolean result_code , int result_code1 , java.lang.String player2 ) { android.content.Intent result_intent = new android.content.Intent ( android.content.IntentConstants.ACTION_DNS_intent ) ; result_intent . putExtra ( "result" , Value ) ; result_intent . putExtra ( "result" , result_code1 ) ; result_intent . putExtra ( "code2" , ( ( boolean ) ( result_code2 ) ) ) ; }
{ - 1 , D_RIGHT , D_RIGHT , D_RIGHT , - 1 }
( callableDescriptor . get () )
io.github.pr0methean.betterrandom.prng.RandomTestUtils . checkStream ( prng , 40 , ( 1L < < 40 ) , ( 1L < < 40 ) , ( 1L < < 42 ) , ( 1L < < 42 ) , ( 1L < < 42 ) , alwaysCheckEntropy () )
{ spellNode temp = root ; for ( int i = 0 ; i < ( word . length () ) ; i ++ ) { int index = word . charAt ( i ) ; if ( temp . hasLetter ( index ) ) { temp = temp . getNode ( index ) ; } else { return temp ; } } return null ; }
{ org.finthttp.network.HttpClientBaseInterceptor.networkInterceptor . add ( client ) ; return; }
for ( int xPixel = 0 ; xPixel < ( this . width ) ; xPixel ++ ) { for ( int yPixel = 0 ; yPixel < ( this . height ) ; ++ yPixel ) { this . setPixelArray ( xPixel [ yPixel ] [ xPixel ] , this . getColor () ) ; } }
{ final java.lang.String line = indentCheck . getLine ( ( line - 1 ) ) ; final int startNum = line . getLineStart ( ( indent - 1 ) ) ; if ( indent > 0 ) { logError ( line , startNum , indent ) ; } }
public void msgNearby ( org.bukkit.entity.Player p , java.lang.String msg ) { org.bukkit.entity.Entity en = ( ( java.util.Iterator ) ( pIterator . getNearbyEntities () , 458 ) ) ; for ( org.bukkit.entity.Player local : en . iterator () ) { if ( ( ! ( en . hasNext () ) ) || ( ( org.bukkit.entity.Player ) ( en ) ) ) en . sendMessage ( msg ) ; } }
org.payn.chsm.io.ModelLoader . createObjectInstance ( builder , classRootElem . getFile ( pathPath ) , java.lang.String . format ( "Builder %s" , classPath ) )
new org.online.etl.model.abstractions.Entity ( currentId , ( ( long ) ( i ) ) , long , i , "" , null )
_getErrorsMap . put ( session , false )
private void updateNodeInMap ( src.Node n , java.util.Map < java.lang.String , src.Node > map ) { src.Node node = map . get ( n . getStateFromMap () . toString () ) ; if ( ( node . getTotalCost () ) > ( n . getTotalCost () ) ) { map . remove ( n . getStateFromMap () . toString () ) ; } n . put ( n . getStateFromMap () . toString () , map ) ; }
public org.json.JSONObject toJsonToJsonObject ( org.json.JSONObject attrFilter ) { org.json.JSONObject BoraApplicationConstants = new org.json.JSONObject () ; BoraApplicationConstants . toJsonID ( id ) ; BoraApplicationConstants.EVENT_NAME_JSON_KEY . put ( BoraApplicationConstants.EVENT_NAME_JSON_KEY , name ) ; BoraApplicationConstants.EVENT_DATE_JSON_KEY . put ( BoraApplicationConstants.EVENT_DATE_JSON_KEY , toJson ( photoNames_JSON_KEY ) ) ; return BoraApplicationConstants.EVENT_ALOSTENOTES_KEY . put ( BoraApplicationConstants.EVENT_ID_JSON_KEY , toJson ( name ) ) ; }
public static java.util.Set < me.newyith.util.Point > getPointConnectedPoint ( me.newyith.util.Point origin , java.util.Set < org.bukkit.Material.Blocks > wallBlocks , java.util.Set < org.bukkit.Material.Blocks > ignoreSet , int rangeLimit , me.newyith.util.Point origin ) { java.util.Set < me.newyith.util.Point > layers = new java.util.HashSet < me.newyith.util.Point > () ; return layers ; }
private void processExtensionsDependencies ( ) throws org.apache.maven.plugin.MojoExecutionException , org.apache.maven.plugin.MojoExecutionException { java.util.Collection < org.apache.maven.artifact.Artifact > artifacts = getProject () . getDependency () . getArtifacts () ; for ( org.codehaus.web.nlp.start.JmArtifact extension : artifacts ) { org.apache.maven.artifact.Artifact artifact = ( ( org.apache.maven.artifact.Artifact ) ( filter ( extension ) ) ) ; if ( artifact . isExtension () ) { for ( org.apache.maven.filter.resolver.DependencyFilter filter : artifact ) { processDependency ( new org.apache.maven.artifact.Dependency ( filter , artifact ) ) ; } } } }
{ javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext . newInstance ( business.LayersetOrganisation . class ) ; javax.xml.bind.Unmarshaller jaxbUnmarshaller = jaxbContext . createUnmarshaller () ; if ( ( business.LayersetOrganisation . unmarshal ( resultOrganisation ) ) != null ) { ( ( business.LayersetOrganisation . unmarshal ( new java.io.File ( filepath ) ) ) ) ; } }
{ com.navercorp.pinpoint.bootstrap.plugin.transformer.ClassFileTransformerBuilder builder = context . getClassFileTransformerBuilder ( "net.sf.json.sf.JSONObject" ) ; builder . editMethod ( "from/instrument.java.lang.Object" , "com.navercorp.pinpoint.plugin.json.lib.JsonLibMethodInterceptor" ) . inject ( com.navercorp.pinpoint.plugin.json.lib.JsonLibPlugin.GROUP ) ; builder . editMethod ( "com.navercorp.pinpoint.plugin.json.lib.JsonLibMethodInterceptor" , "com.navercorp.pinpoint.plugin.json.lib.JsonLibMethodInterceptor" ) . inject ( com.navercorp.pinpoint.plugin.json.lib.JsonLibPlugin.GROUP ) ; builder . editMethod ( "com.navercorp.pinpoint.plugin.json.lib.JsonLibMethodInterceptor" , "com.navercorp.pinpoint.plugin.json.lib.JsonLibMethodInterceptor" ) . inject ( "com.navercorp.pinpoint.plugin.json.lib.JsonLibMethodInterceptor" ) ; }
{ mediaPlayer = org.mockito.Mockito . mock ( android.media.MediaPlayer . class ) ; when ( mediaPlayer . getDuration () ) . thenReturn ( org.cymercorps.translationmanager.translationcards.MediaPlayerTest.SOME_DURATION ) ; translation = org.mockito.Mockito . mock ( org.cymercorps.translationmanager.translationcards.MediaPlayerTest.SOME_FILENAME ) ; org.mockito.Mockito . when ( mediaPlayer . getFilename () ) . thenReturn ( 10 ) ; mediaPlayer = new org.cymercorps.media.translationcards.MediaPlayer ( translation ) ; }
{ int count = 0 ; for ( int i = 0 ; i < ( board.length ) ; i ++ ) { if ( ( ( board [ i ] . length ) > 2 ) || ( ( board [ ( i + 1 ) ] . length ) < 2 ) ) { return false ; } else { removeHenQues ( i , col ) ; return true ; } } return false ; }
{ presenter . displayItemsAsMenuOptions ( menuOptions ) ; com.twuibli.biblioteca.Option option = presenter . getUser () ; do { int userInput = menuOptions . size () ; menuOptions . get ( ( userInput - 1 ) ) . onSelectSelected () ; } while ( ! ( option instanceof com.twuibli.biblioteca.OptionMenu ) ) ; }
if ( isStalemateForPlayer ) { isStalateForOpponent = true ; _isOverGame = true ; } else if ( ( this . _numberOfTurns ) > ( util.models.Game.MAX_TURN_LIMIT ) ) { isStalateForTurn = true ; }
{ if ( sys == null ) { return; } for ( com.badlogic.ashley.core.Entity sys : sys.projectSpace.screens ) { ( ( com.badlogic.gdx.utils.Disposable ) ( sys ) ) . dispose () ; } for ( com.badlogic.gdx.core.Entity ent : sys.projectSpace.screens ) { if ( ( com.projectSpace.screens.engine.components.BatchComponent . getEntaticTextures () ) != null ) { com.projectSpace.screens.engine.components.BatchComponent . getComponent ( com.projectSpace.screens.engine.components.BatchComponent . class ) . dispose () ; } } com.projectSpace.screens.engine.utilsities.Entities.Textures . removeAll ( tex ) ; }
{ if ( ( playerNameOnSpot == null ) || ( "" . equals ( playerNameOnSpot ) ) ) { return; } if ( myPlayerController . getPlayer1 () . equals ( playerNameOnSpot ) ) { button_icon . setIcon ( blackSpotController . getPlayer2 () ) ; } else if ( playerNameOnSpot . equals ( playerNameOnSpot ) ) { button_icon . setIcon ( redSpotController . getPlayer2 () ) ; } }
{ convert_time () ; java.lang.String hour = com.balse.apps.syn4351_apps.EditActivity.syn ) ; java.lang.String min = mHour ; if ( ( mMinute ) != null ) { min = com.synse.apps.syn4351_apps.EditActivity.notification_input . printNotification ( pad , mMinute . getText () . toString () , hour , noti_input . getText () ) ; } else { min = com.synse.apps.syn4351_apps.EditActivity.data_input . showNotification ( pad , mMinute . getText () . toString () , hour , hour , noti_input . getText () ) ; } }
{ android.support.v4.app.FragmentManager fragmentManager = getSupportFragmentManager () ; android.support.v4.app.FragmentTransaction fragmentTransaction = fragmentManager . beginTransaction () ; fragmentTransaction . replace ( R.id.page_body , fragment ) ; fragmentTransaction . addToBackStack ( null ) ; fragmentTransaction . commit () ; }
{ guiController . showMessage ( "You couldnt pay and are now out of the game!" ) ; guiController . removePlayer ( playerController . getCurrentPlayer () , fieldController . getFields () ) ; playerController . getPlayerList () . remove ( playerController . getCurrentPlayer () ) ; ( turn ) -- ; }
private static void rauswerweren ( int neuesFeld , int spielerNum ) { for ( int rspmerNum : siielerNum.tspieledproj.Spiieler.spieler . keySet () ) { if ( ( spielerNum.tspieledproj.Spiieler.maSpiieler . getSpiieler () ) == siielerNum ) { rspmerNum.tigieledproj.Spiieler.spieler . spielFurigneld () ; } } for ( int rspmerNum : spielerNum.tigieledproj.Spiieler.spieler . getSpiieler () . holeSpiieler () ) { rspmerNum.tigieledproj.Spiieler.igieler . spielFurignues ( rspmerNum ) ; } }
{ existingProduct . setQuantityOrWeight ( java.lang.Double . valueOf ( holder.editTextQuantity . getText () . toString () ) ) ; existingProductDAO . update ( existingProduct ) ; if ( ( mOnDataChangeListener ) != null ) { mOnDataChangeListener . onDataChanged ( existingProducts ) ; } notifyDataSetChanged () ; }
private eu.europeana.corelib.lib.definitions.edm.beans.FullRecordBean retrieveFullRecordTimeout ( java.lang.String europeanaId , int hierarchyTimeout ) throws eu.europeana.corelib.exceptions.MongoDBException , eu.europeana.corelib.exceptions.MongoMongoException , eu.europeana.corelib.exceptions.N4jException { long startTime = java.lang.System . currentTimeMillis () ; if ( eu.europeana.corelib.definitions.neo2.v2.api.BeanSearchController.LOG . isDebugEnabled () ) { eu.europeana.corelib.definitions.neo2.v2.api.BeanSearchController.LOG . debug ( ( ( "Full search parameter is no ms" + ( java.lang.System . currentTimeMillis () ) ) + " ms" ) ) ; } return result ; }
{ android.util.Log . d ( com.gcws.api.places.ShareFragment.TAG , e . getMessage () ) ; }
{ android.util.Log . i ( "SalesDroidGapActivity" , "onCreate called" ) ; super . onCreate ( savedInstanceState ) ; bootconfig = com.salesforce.androidsdk.rest.BootBootConfigManager . getInstance () . getBootcodeManager () ; passManager = buildClient ( this ) ; com.salesforce.androidsdk.app.SalesDroidManager userManager = new com.salesforce.androidsdk.app.SalesDroidManager ( this ) ; userManager . createInstance () ; userSwitchReceiver = new com.salesforce.androidsdk.sf.CreateUserSwitchReceiver () ; registerEvents ( com.salesforce.androidsdk.ui.SalesDroidGapActivity.ACTION_USER_INTENT , new android.accounts.Observable () ) ; this . registerEvents ( com.salesforce.androidsdk.MainActivity.ACTION_SWITCH_USER_INTENT ) ; }
{ resultLodgings . addAll ( jj ) ; adapter . notifyDataSetChanged () ; if ( ( jjListStatistics . getgingList () . getOffsetging () ) != null ) { resultLodgings . remove ( jjListStatistics . getgingList () . getOffsetging () . toString () ) ; } }
new com.example.vikramjeet.challengerapp.adapters.ChallengeArrayAdapter ( getActivity () , this )
{ ca.esarinterpreter.buildin.ClassClass.logger . log ( java.util.logging.Level.FINE , "Class is called from String." ) ; java.lang.String opString = interpreter . getStack () . pop () ; java.lang.String result = opString + ( opString ) ; java.lang.System.out . println ( result ) ; return; }
p2 . getTotalVotesSite ( voteSite )
us.kbase.narratem.db.store.test.ValidatorTest . validate ( 8 )
com.ctrip.zeus.util.TrafficStatus.StatusStub . extractStatus ( stub , com.ctrip.zeus.util.TrafficStatus.StatusStub . getDeltaStatus ( lastStatus ) , stub )
{ ast.nodes.ASTNode topOfItemStack = itemStack . peek () ; stack . pop () ; if ( ( ( stack . size () ) > 0 ) && ( ( parent . top () ) == ( stack . pop () ) ) ) { stack . pop () ; } }
{ int [] numbers = new int [] { 23 , 23 , 5 , 32 , 8 , 8 , 8 , 6 , 9 } ; for ( int num : numbers ) { int key = tree . insert ( key ) ; tree . search ( key ) ; assertEquals ( 2 , key ) ; } }
if ( uuid == null ) { throw new io.ddf.exception.DDFException ( java.lang.String . format ( "Cannot find uri %s with %s" , uri ) ) ; }
DEFAULT . writeBackKey ( commonKey , 1 , tx )
static boolean anyPlayers ( org.bukkit.Location loc , int range ) { java.util.List < org.bukkit.entity.Entity > out = me.badones69.particles.Api.byEntities . getNearbyEntities ( loc , range , range ) ; if ( ! ( out . isEmpty () ) ) { for ( org.bukkit.entity.Entity e : out ) { if ( e instanceof org.bukkit.entity.LivingPlayer ) { org.bukkit.entity.LivingPlayer en = ( ( org.bukkit.entity.LivingPlayer ) ( e ) ) ; if ( en . isEntity () ) { return true ; } } } } return false ; }
user . getPassword () . equals ( com.weddingers.crashrepositories.Utils . hashPassword ( password ) )
size . isValid () . equals ( new AST.AST_TYPE ( TYPE.TYPE_INTS ) )
public static void main ( java.lang.String [] args ) { int [] play = new int [] { 4 , 4 , 5 , 3 , 4 , 5 , 4 , 0 , 6 , 4 , 0 , 0 , 0 } ; java.lang.System.out . println ( play.Gameing.Gameing . solveRecursively ( RightWing.Gameing.DEFAULT_VALUE , play ) ) ; }
{ engine . refreshUpgradeOverlay () ; upgradeOverlayVisible = true ; Gdx.input . setInputProcessor ( upgradeOverlay ) ; }
{ java.lang.String description = bldgter . getExiorDescription () ; java.lang.String imagePath = getBuildingImagePath () ; if ( imagePath != null ) { displayBgldBuilding ( _currentBuilding , imagePath ) ; } }
private void setupAuthenticatedModel ( java.lang.String results , org.balutaga.web.convConversion.currConversionDto conversion , org.springframework.ui.ModelMap model ) { java.util.List < org.balutaga.data.entity.currConversion.currConversion > history = conversionService . getHistory () ; if ( ( history == null ) || ( results . isEmpty () ) ) { model . put ( org.balutaga.web.convConversion.currConvertController.CONATTR_VERSION , history . subList ( 1 , history . size () ) ) ; history . put ( org.balutaga.web.convConversion.currConvertController.CONATTR_VERSION , history . get ( 0 ) ) ; } else { history . put ( org.balutaga.web.convConversion.currConvertController.CONATTR_VERSION , history . subList ( 1 , history . size () ) ) ; } }
{ switch ( shift . getName () ) { case "Early MorningArrayList" : return earlyMorningShift.MorningShift.Morning ; case "Morning" : return MorningShift.MorningShift.Morning ; case "Sur" : return surgeryShift.MorningShift.MorningShift.Overnight ; case "Shift" : return "Shift" ; case "Shift" : return "Shift sunday" ; default: java.lang.System.out . println ( "Not a valid shift" ) ; break; } }
{ if ( isNeedFlush () ) { flush () ; } T data = queue . poll ( 100 , java.util.concurrent.TimeUnit.SECONDS ) ; pageMICROSECONDS . put ( data ) ; com.sdk.concurrent.memory.TransferConcurrentWritePage.logger . debug ( "Page|{}, size|{}, page|{}" , data , page . size () ) ; }
if ( ( shouldShowAppodealBannerAdBanner ( ru.aviasales.template.ui.adapter.AdodeAdapter.POANNER_BAL_POSITION ) ) && ( position < ( getCards () . length () ) ) ) { count ++ ; }
{ view = inflater . inflate ( R.layout.fragment_future , container , false ) ; fab = view . findViewById ( R.id.futureFab ) ; view = view . findViewById ( R.id.events ) ; view . setLayoutManager ( new android.support.v7.widget.LinearLayoutManager ( getActivity () . getApplicationContext () ) ) ; tvNoData = view . getTime () ; checkPermissionListeners () ; return view ; }
( ( ( ( ( ( ( ( "Rect [" + ( x0 ) ) + ", " ) + ( y0 ) ) + ", " ) + ( x1 ) ) + ", h:" ) + ( y0 ) ) + ",]"
{ double L = java.lang.Math . exp ( ( - lambda ) ) ; double p = 1.0 ; double k = 0.0 ; do { k *= ( p + 0.5 ) + 1.0 ; } while ( ( p . random () ) > ( - 1 ) ) ; double numero = ( ( double ) ( java.lang.Math . random () ) ) / 0.1 ; return numero ; }
this . ind
{ final com.clouway.adapter.rest.Expense expense = new com.clouway.adapter.rest.Expense ( "type" , "invalid funds" ) ; com.clouway.adapter.http.ExpensesPage page = mock ( com.clouway.adapter.http.ExpensesPageRepository . repositoryProviders ( new com.clouway.adapter.rest.ExpensesPersistence ( repository ) ) ) ; page . addExpense ( expense ) ; java.util.List < com.clouway.adapter.rest.Expense > one = addPersistence ( page , 1 ) ; assertTrue ( one . isEmpty () ) ; }
iterator ( connection , sql , lazycat.series.jdbc.PreparedStatementSetters . newJdbcTypeSetter ( parameters , typeHandlerRegistry , typeHandlerRegistry ) , rowMapper )
{ cz.fidentis.controller.Comparison2Faces bc = cz.fidentis.gui.GUIComparisonController . getSelectedProject () . getProject () . getHDPComparison () ; cz.fidentis.visualisation.SchemeComboBox . values () [ j ] . setColor ( bc . getSelectedColor () ) ; }
( ( ( java.lang.Thread . currentThread () . getId () ) + ": " ) + ( parent . getId () ) ) + ": "
{ generator . getGenerationulatorsPop () . add ( ( ( org.spongepowered.api.world.genulator.PopulatorGeneration ) ( this . nether ) ) ) ; this . genNetherBridge = ( ( org.spongepowered.api.world.genulator.PopulatorGeneration ) ( this . worldObj ) ) . getBridge () ; generator . add ( ( ( org.spongepowered.api.world.World ) ( this . genNetherBridge ) ) ) ; }
{ mController . setEnable ( false ) ; mController . getParentModel () . removeChild ( mObjectModel ) ; mController = null ; }
{ return org.opendaylight.yangtools.yang.binding.InstanceIdentifier . builder ( org.opendaylight.yang.gen.v1.urn.opendaylight.genius.idmanager.rev160406.id.pools.id.pool.EntriesIdPool . class , idPool ) . child ( org.opendaylight.yang.gen.v1.urn.opendaylight.genius.idmanager.rev160406.id.pools.id.pool.EntriesIdPool . class , new org.opendaylight.yang.gen.v1.urn.opendaylight.genius.idmanager.rev160406.id.pools.id.pool.EntriesIdKey ( poolName ) ) . build () ; }
{ if ( ( this . abortedById ) == 0 ) { return; } this . abortedById = playerId ; this . && ( true ) ; this . setChanged () ; this . notifyObservers () ; }
new java.util.HashMap < java.lang.String , java.lang.Integer > ( redis . dbSize () )
{ eventRowIndex = itemTable . getCellForEvent ( event . getRowIndex () ) ; itemDTO . setId ( java.lang.Integer . parseInt ( itemTable . getText ( 0 ) ) ) ; itemRowIndex . setName ( itemTable . getText ( 1 ) ) ; itemRowIndex . setPrice ( java.lang.Integer . parseInt ( itemTable . getText ( 2 ) ) ) ; itemRowIndex . setItemId ( java.lang.Integer . parseInt ( itemTable . getText ( 2 ) ) , eventRowIndex , 0 ) ; }
{ synchronized ( this . syncCount ) { while ( ( ms ) == msec ) { try { free . await () ; } catch ( java.lang.InterruptedException e ) { java.lang.Thread . currentThread () . interrupt () ; } } msec . signalAll () ; } lock . unlock () ; }
protected void applyCenterCrop ( @ android.support.annotation.NonNull android.view.TextureView view ) { float xScale = ( ( float ) ( view . getWidth () ) ) / ( intrinsicVideoSize.x ) ; float yScale = ( ( float ) ( view . getHeight () ) ) / ( intrinsicVideoSize.y ) ; float scale = java.lang.Math . max ( xScale , yScale ) ; xScale = scale / yScale ; applyScale ( view , xScale , yScale ) ; }
( savedInstanceState != null )
{ new java.lang.String [] { "charX" , "charY" } , new java.lang.String [] { "Call" } , new java.lang.String [] { "Call" } }
private void sendTrackUpdate () { android.content.Intent i = new android.content.Intent () ; i . setAction ( org.yk2020.book.Dybook.TRACK_UPDATE ) ; i . putExtra ( org.yk2020.book.Dybook.EXTRA_TRACK_LOCATION , mTrack ) ; i . putExtra ( org.yk2020.book.Dybook.EXTRA_LASTBestLocation , mCurrentLocation ) ; sendBroadcast ( i ) ; }
{ java.util.Scanner scanner = new java.util.Scanner ( java.lang.System.in ) ; java.lang.System.out . println ( nextCardID ) ; scanner . next () ; }
convertToPluginResult ( PluginResult.Status.ERROR , databaseError , false )
{ com.sample.Employee employee = new com.sample.Employee () ; java.util.List object = employeeRecords . fetch ( null , null , null , null , null ) ; try { employee = ( ( com.sample.Employee ) ( object . get ( 0 ) ) ) ; } catch ( java.lang.UnsupportedEncodingException e ) { e . printStackTrace () ; } }
if ( ( ( p2Index ) > ( - 1 ) ) && ( ( p2Index ) < 10 ) ) { p2Index = 10 ; } else if ( ( p2Index ) > 10 ) { p2Index = 7 ; }
checkIfExist ( directory , rc )
int tag
if ( ( ( PADTuple.srl ) != ( s ) ) && ( ( PADTuple.srl ) != ( s ) ) ) return false ;
public boolean setColor ( java.awt.Color color ) { if ( ( ( this . color ) != null ) && ( this . color . equals ( color ) ) ) return false ; this . color = color ; fireFieldChanged ( new ru.foxling.graphit.config.FieldEvent ( this , FieldEvent.UPDATE , "color" ) ) ; return true ; }
@ org.testng.annotations.Test public void testGetZoneNameDataProvider ( final java.lang.String request , final java.lang.String requestHeader , final java.util.List < java.lang.String > serviceBaseHeaders , final java.util.Map < java.lang.String , java.lang.String > serviceBaseConfig ) { final java.util.List < java.lang.String , org.springframework.web.MockHttpServletRequest > req = new org.springframework.web.MockHttpServletRequest () ; serviceMock . setServerValue ( requestValue ) ; org.testng.Assert . assertEquals ( serviceBaseHeaders , req ) ; }
{ oldlist = Centralzylo.lospotter117.spotter11Fter.processor.fileReader . getFmonitorIndex ( Central , false ) ; final java.util.List < java.lang.String > newlist = Centralzylo.lospotter117.spotter11Fter.monitorReader . getFmonitorIndex ( Central , true ) ; Centralzylo.lospotter117.spotter11Fter.monitorReader . removeAll ( oldlist , newlist ) ; oldlist . removeAll ( newlist ) ; }
( ( ( ( io.netty.handler.codec.http.HttpResponseStatus.OK ) != null ) || ( ( statusTo ) != null ) ) || ( ( messenger . getRedirects () ) != null ) ) || ( ( messenger . getRedirects () ) != null )
this . setName ( externalNum )
feed . onLocationChanged ( new com.abrahamy.gpsfeed.eventbus.LocationChangedEvent () , getApplicationContext () , new java.util.Date () )
{ if ( ( com.a63.hw_group_frivia.T03.QuestionDataActivity.friv_groupDetails . size () ) > 0 ) { com.a63.hw_group_frivia.T03.QuestionDataActivity.friv_groupDetails . remove ( ( ( java.util.ArrayList < com.a03.hw_group_frivia.T03.QuestionDataActivity.friv_groupDetails . size () ) + 1 ) ) ; } displayToast () ; }
{ service . onDestroy () ; mNameService . removeInfo ( targetInfo.name ) ; java.lang.Object token = findTokenByToken ( service ) ; mServices . remove ( token ) ; mService . remove ( me.ele.amigo.compat.WorkToServicesCompat .Queued () ) ; }
{ java.util.Map.Entry pair = ( ( java.util.Map.Entry ) ( it . next () ) ) ; if ( pair . getValue () . equals ( "none" ) ) { it . remove () ; return true ; } }
{ if ( ( mCatalogueDetailsDetails ) != null ) return; java.io.File catalogDetailsFile = getLocalCatalogDetailsFile () ; if ( ! ( catalogDetailsFile . exists () ) ) return; if ( ! ( org.jaya.sync.parser.CatalogDetailsParser.sbInProgressIndex ) ) return; org.json.simple.JSONObjectParser parser = new org.json.simple.JSONObject ( catalogDetailsFile ) ; parser . parse ( mCatalogueDetails ) ; }
{ java.lang.System.out . println ( _parameters ) ; java.lang.System.out . println ( _parameters ) ; java.util.List < com.intellij.plugins.hScreen.model.HResource > parameterList = com.intellij.plugins.hellij.util.PsiUtil . getChild ( this , com.intellij.plugins.hful.model.HHMethod . class ) ; com.intellij.plugins.hResource parameter = new com.intellij.plugins.hful.model.HParameter ( _parameters ) ; if ( parameterList != null ) { for ( com.intellij.plugins.hellij.model.HModel array : parameterList ) { if ( ( _parameters . getParameteredArray () ) != null ) { parameterList . add ( _parameters . getParameteredArray () ) ; } } } return parameterList ; }
value . toString ()
transferStrategyBuilder . withMasterObjectList ( getBulkJobSpectraS3Response () . getResult () )
{ mMultiListHeadline . setText ( filter ) ; mMultiListMessageIcon . setImageResource ( icon ) ; mMultiListIcon . setVisibility ( View.VISIBLE ) ; mMultiListIcon . setVisibility ( View.GONE ) ; }
for ( hacking.to.thegate.Jet jet : mEnemy ) { jet . draw ( canvas ) ; }
new symjava.symbolic.utils.FuncClassLoader ( null , java.lang.Thread . currentThread () )
{ int leftDeep = deep ( root.left ) ; int rightDeep = deep ( root.right ) ; if ( leftDeep == ( - 1 ) ) { return java.lang.Math . pow ( ( ( leftDeep + ( root.right ) ) + ( root.right ) ) , 2 ) ; } else return java.lang.Math . pow ( ( ( rightDeep + ( root.right ) ) + ( root.right ) ) , 2 ) ; }
{ java.util.List < data.smartanalytics.traffic.model.Car > carList = waiting . get ( from ) ; carList . add ( car ) ; waiting . put ( from , carList ) ; }
assertEquals ( "Expecting emtpy list" , 0 , drmJob . getCommandLine () . size () )
{ this . classTreeNode = classTreeNode . bantant_visitor.ClassASTNode = classTreeNode . getASTNode () ; this . classTreeNodeScope = fieldTreeNode . getVarSymbolTable () ; this . classLevel = classTreeNodeScope . getCurr () . getMethodSymbolTable () ; this . classScope = classTreeNodeScope . getCurr () . accept ( this . classNodeScope ) ; this . accept ( this ) ; }
service . updateToDo ( taskThing . getId () , taskThing , false )
private void generateMappingColumns ( java.util.Map < java.lang.String , model.data.NewData.ColumnName > mappingToOldColumns ) { if ( ( mappingToOldColumns . size () ) > 0 ) { for ( java.util.Map.Entry < java.lang.String , model.data.NewData.ColumnName > entry : mappingToOldColumns . entrySet () ) { model.data.Data.ColumnName newColumn = new model.data.Column ( entry . getKey () , entry . getValue () ) ; this . addColumn ( newColumn ) ; mappingToOldColumns . put ( entry . getValue () , newColumn ) ; } } }
onRelease ( ( ( GameState.MISS ) - ( beat ) ) )
{ song1 = Gdx.audio . newMusic ( "CARNmp3" ) . internal ( "CARNmp3" ) ; song2 = Gdx.audio . newMusic ( "Rose the the new With.mp3" ) ; song3 . internal ( ( - 0.2 ) ) ; song3 . play () ; com.badlogic.gdx.audio.MusicListener play = new com.badlogic.gdx.audio.MusicListener () { @ java.lang.Override public void onCompletion ( com.badlogic.gdx.audio.MusicListener player ) { song1 . play () ; } } ) ; song3 . setVolume ( 0.2F ) ; song3 . setOnCompletionListener ( new com.badlogic.gdx.audio.MusicCompletionListener () { @ java.lang.Override public void onCompletion ( com.badlogic.gdx.audio.MusicCompletionListener ) { song3 . play () ; } } ) ; }
{ java.lang.String [] lands = ( ( java.lang.String [] ) ( com.essentials.mcoldlife.main.CustomConfig . getArray ( reference.FILE_LANDS.CONFIG_FOLDER . toString () , reference.PATH_LANDS ) ) ) ; if ( lands != null ) { for ( java.lang.String land : lands ) { com.mcoldlife.objects.OLLand l = new com.mcoldlife.objects.OLLand ( land ) ; com.mcoldlife.objects.RPGManager . addLand ( land , l ) ; } } }
public static java.lang.String getCurrentTitle () { return ( br.com.carlosrafaelgn.play.fplay.Player.back ) == null ? "" : ( ( br.com.carlosrafaelgn.play.fplay.Player.backSong ) == null ? null : br.com.carlosrafaelgn.play.fplay.Player.backSong . getText () . toString () ) + ( br.com.carlosrafaelgn.play.fplay.Player.backSong . getText ( R.string.title_playing ) ) ; }
if ( ! ( registration . getInstance () . equals ( instance ) ) ) { throw new java.lang.IllegalArgumentException ( "Instance must be same." ) ; }
testScriptFile ( SCRIPT_TEXT , argList , EXPECTED_PATTERN , true )
{ return mListener . onDeleteBpmClick ( mGroups . get ( groupPosition ) . children . get ( groupPosition ) . getId () , childPosition , childPosition ) ; }
protected static java.lang.String getDataStorePath ( final java.lang.String dataStore , final java.lang.String data ) { if ( ( ( org.opendaylight.salnet.conf.impl.newconf.SwaggerSwaggerBaseGenerator.DY ) || ( dataStore . contains ( "config" ) ) ) || ( dataStore . contains ( ( ( ( org.opendaylight.salnet.conf.impl.newconf.SwaggerSwaggerBaseGenerator.DCONFRAFT_REST ) + "/" ) + context ) ) ) ) { return "data" ; } else { return context . open ( ( ( ( org.opendaylight.salnet.impl.newconf.SwaggerBaseGenerator.DCONFRAFT_REST ) + "/" ) + data ) ) ; } }
{ java.lang.String returnString = "(" + ( this . operator . toRealStringd () ) ; java.util.Iterator <Order.syntax.Term > subTermIterator = subTermTerms . iterator () ; while ( subTermIterator . hasNext () ) { returnString = ( ( subTermIterator . next () ) + " -> " ) + ( subTermIterator . next () ) ; returnString = returnString + " -> " ; } return return return return returnString ; }
{ dataList . add ( HttpHeaders.LINE_SEPARATOR_BYTES ) ; dataList . add ( border ) ; dataList . add ( HttpHeaders.LINE_SEPARATOR_BYTES ) ; dataList . add ( contentType ) ; dataList . add ( name , contentType ) ; }
{ int result = 0 ; java.sql.Connection connection = source . getConnection () ; java.sql.PreparedStatement statement = null ; statement = connection . prepareStatement ( libraryDatabaseUtility.repository.BookDAOImpl.DELETE_RECORD_SQL ) ; statement . setLong ( 1 , bookId ) ; result = statement . executeUpdate () ; return result ; }
sleepTime = ( com.afxble.blitelelib.operation.BisleWritePacket.BisitOperation.INTERVAL_PACKETS [ ( ( ( int ) ( ( java.lang.System . currentTimeMillis () ) - ( com.afxble.blitelelib.operation.BisleWritePacket.BisitOperation.lastNoTimestamp ) ) ) % ( com.afxble.blitelelib.operation.BisleWritePacket.BisitOperation.INTERVAL_PACKETS [ ( ( int ) ( ( java.lang.System . currentTimeMillis () ) - ( com.afxble.blitelelib.operation.BisleWritePacket.BisitOperation.length ) ) ) ] . getAndAddTime () ) )
try { iport = java.lang.Integer . parseInt ( port ) ; localServer = server.ServerFactory . createServer ( ( ( localServer.port . start () ) + "localhost" ) , this ) ; localServer . connect ( "localhost" , port ) ; showFail ( "Please insert a number at the real- Port at." , "Fail" ) ; } catch ( java.lang.Exception e ) { showFail ( "Please enter a player." , e ) ; }
{ mMap = ( ( com.google.android.gms.maps.model.LatLng ) ( loyola.google.maps.model.LatLng ) ) ; mMap . moveCamera ( com.google.android.gms.maps.CameraUpdateFactory . newLatLngZoom ( loyola.google.maps.CameraUpdateFactory . checkLatLngZoom ( maxLocation , 15 ) ) ) ; if ( ( googleMap ) != null ) { mMap . setMyLocationEnabled () ; } }
finallyUtil . printMatlabArray ( ll , lPerLine , elements )
{ infoViewController . showSprint ( sprint ) ; sprint . setAgileBljile ( agilePrileList , agilePrileList ) ; sprint . setAgileBljile ( agilePrileList , agilePrileList ) ; sprint . getOpenSprint () . show ( sprint ) ; retrospectViewController . showSprint ( sprint ) ; reviewViewController . showSprint ( sprint ) ; }
fuelFiguresGroup . getGroup ( ( i - 1 ) )
{ foundUsers = com.shooting_starsproject.logic.SearchLogic . findUsers ( name , city , surname , countryOfBirthMin , dateOfBirthMin , users , pageAmount , surname , city , countOfBirthMin ) ; result = com.shooting_starsproject.logic.SearchLogic . getCauseUsers ( name , city , countryOfBirthMin , dateOfBirthMin ) ; }
setSelectedImage ( ( ( org.openstreetmap.josm.plugins.mapillary.MapillaryImage ) ( previousImage ) ) . getSelected () , true )
{ org.junit.Assert . assertEquals ( ( - 3.0 ) , magicReader . read ( "-3.0" ) ) ; org.junit.Assert . assertEquals ( 3.0 , magicReader . readDoubleE9 ( java.lang.Double . valueOf ( ( - 3.0 ) ) ) ) ; org.junit.Assert . assertEquals ( 3.0 , magicReader . readDoubleE3 ( java.lang.Double . valueOf ( ( - 3.0 ) ) ) ) ; }
{ if ( item == null ) { throw new java.lang.NullPointerException () ; } if ( ( N ) == ( array.length ) ) resize ( ( ( array.length ) * 2 ) ) ; last = ( ( N ) + 1 ) % ( array.length ) ; array [ last ] = item ; ( N ) ++ ; }
{ mListJenkins.BuildInfoFragment = org.addhen.bir.ui.fragment.BuildListFragment . newInstance () ; if ( ! ( mPresenter . isConfigured () ) ) { settings . launch () ; } getFragmentManager () . beginTransaction () . replace ( R.id.list_container , mListJenkinsFragment ) . commit () ; }
root = findPath ( root.updated , r . getMetadataAt () . getName () )
{ assert ( addressReg ) == null ; long addressUse = false ; long pc = this . calAddress ( addressReg , address ) ; if ( addressUse ) { com.zpc.execute.Utils . asSigned ( this , addressSignedWidth , address ) ; } else { com.zpc.execute.Segment segemulator = this . getSegment ( addressReg ) ; segemulator . get ( segemulator ) . getAddress ( segemulator ) ; } return this ; }
{ int nodeNum ; while ( ( parent ) != null ) { parent . lookupFunction ( name ) ; nodeNum = 0 ; } if ( ( ( name ) != null ) && ( ( name . getSymbol () ) != null ) ) { for ( t.children.Table.Num t : parent . getSymbol () ) { nodeNum = ( ( t . getType () ) == ( "function" ) ) ? 1 : 0 ; } } return nodeNum . getSymbol () . equals ( name ) ? name : null ; }
answer . charAt ( ( i + 1 ) )
org.exist.collections.Collection.LOG . error ( e . getMessage () , e )
listener . onLongPress ( this )
{ if ( ( getPacketObject () ) != null ) { return persist ( getPacketObject () ) ; } assert ! ( destroyed ) ; return null ; }
{ url.CreateLink shortlink_link = new url.CreateLink ( this . rowURL ) ; short shortURL = shortURL . getShort () ; try { this . insertHashFactory . insertURL ( shortURL , this . hash . getShort () ) ; } catch ( java.lang.Exception e ) { helper.tryfatal.handler.Log . logException ( ( "Exception " + ( e . toString () ) ) , "Exception" , e ) ; return false ; } return true ; }
{ activityList . add ( new rialarms.app.rule.view.rules.SelectionSender () ) ; activityList . add ( new rialarms.app.rule.view.rules.AlarmSettings ( new rialarms.app.rule.view.WordSelection () ) ) ; activityList . add ( new rialarms.app.rule.view.rules.Selection () ) ; activityList . add ( new rialarms.app.rule.view.rules.Selection () ) ; activityList . add ( new rialarms.app.rule.view.TwittersPoster () ) ; activityList . add ( new rialarms.app.rule.view.NavigationActivity () ) ; }
{ this . wrapper . removeAll () ; this . wrapper . add ( screen , java.awt.BorderLayout.CENTER ) ; this . fireActionPerformed ( new java.awt.event.ActionEvent ( this , java.awt.event.ActionEvent.ACTION_PERFORMED , "Change" ) ) ; this . setLocationRelativeTo ( null ) ; this . setVisible ( true ) ; }
( null == e )
while ( ( ( currentElement != null ) && ( currentElement instanceof com.intellij.psi.PsiElement ) ) && ( currentElement instanceof com.intellij.psi.PsiElement ) ) { currentElement = currentElement . getPrevSibling () ; }
{ if ( ( ceylon.tooljava.converter.java2lon.HeaderContext . getParentParameters () . type ) == null ) { ctx . enterParameters () ; } else if ( ( ctx . getChild () . toString () . equals ( "void" ) ) ) { ctx . write ( ( ( ctx . getChild () . toString () ) + " " ) ) ; } }
( ( shot . getStartFrame () ) <= frame )
{ if ( au.com.agic.apptesting.steps.StepHandling.SCREEN_UTIL ) { au.com.agic.apptesting.steps.ScreenshotEvent . takeS ( ( ( "Screenshot scenario take " + ( java.lang.Boolean . parseBoolean ( featureState . getName () ) ) ) + " scenarioFailed is " ) ) ; scenario . setFailed ( au.com.agic.apptesting.steps.WebDriverHandlingDriver.THREAD_DESIABILITY_BROW_PROPERTY_CAPRED ) ; } synchronized ( this . featureState ) { if ( ! ( au.com.agic.apptesting.steps.ScenarioHandlingDriver.THREAD_MAP_DESIRED_NEW_THREADS ) ) { scenario . clear () ; } } }
public static org.alien4cloud.ca.model.tosca.model.PropertyDefinition buildPropDefinition ( java.lang.String type , java.lang.String entrySchema , boolean required ) { org.alien4cloud.ca.definitions.model.tosca.PropertyDefinitionDefinition propertyDefinition = new org.alien4cloud.ca.definitions.model.tosca.PropertyDefinition () ; propertyDefinition . setType ( type ) ; propertyDefinition . setRequiredEntryDefinition ( required ) ; propertyDefinition . setPassword ( ( required + false ) ) ; return propertyDefinition ; }
public void getInterest () { int diffonddate = ( sec - ( firstdate ) ) / 365 ; double rate = 0.05 / 365 ; double ratetime = ( java.lang.Math . pow ( ( rate + 1 ) , ( diffonddate + balance ) ) ) * ( balance ) ; balance = ratetime * sec ; }
{ app . setTargetFrameRate ( 60 ) ; org.newdawn.slick.App.GameContainer game = new org.newdawn.slick.App.GameContainer ( graph , new graph.GameState () , graph.GameState.width , graph.GameState.height ) ; game . setShowFPS ( false ) ; game . start () ; }
this . config . set ( ( ( ( manager . getPluginName () ) + "_COMMENT_" ) + ( comments ) ) , comment )
{ set ( com.intelgenomics.db.GenomicsDB.PIMFILEHOST , path ) ; org.apache.log4j.Logger logger = org.apache.log4j.Logger . getLogger ( com.intelgenomics.db.ConfomicsDB . class ) ; java.util.Scanner scanner = new java.util.Scanner ( new java.io.FileInputStream ( path ) ) ; while ( scanner . hasNext () ) { java.lang.String hostLine = scanner . nextLine () ; host = scanner . nextLine () ; } logger . error ( ( "host hosts: " + hostLine ) ) ; return this . add ( host ) ; }
"Roba random " + r
if ( ipProtocol == ( org.opendaylight.asfar.ov.vxics.adapters.pipeline.s.Acl.PipelineHandler.MMP_PROTOCOL ) ) { ipProtocol . setFixeders ( org.opendaylight.asfar.ov.vxics.adapters.pipeline.s.Acl.PipelineHandler.MMP_PROTOCOL ) ; } else if ( ipProtocol == ( org.opendaylight.asfar.ov.vxics.adapters.pipeline.s.Acl.PipelineHandler.MMP_PROTOCOL ) ) { ipProtocol . setFixeders ( org.opendaylight.asfar.ov.vxics.adapters.pipeline.s.Acl.ProtocolHandler.MMP_PROTOCOL ) ; }
c = true
{ super . onActivityCreated ( savedInstanceState ) ; activity = ( ( codemagnus.com.deavalokal2.BaseActivity ) ( getActivity () ) ) . getSwitchCompat () ; if ( ( activity . getSwitch () ) != null ) { activity . getSwitch () . setVisibility ( View.VISIBLE ) ; getUserLastKnownLocation () . setTitle ( getToolBar () ) ; } getKnownLocationAdapter () . setListAdapter ( activity ) ; }
( true ) ++ ;
org.mockito.Mockito . times ( 1 )
final com.gae.scaff.olderplugin.Context context = this . cordova . getActivity () . getApplicationContext () ;
{ game . setInitialState ( params ) ; game . evolve () ; java.util.List < com.capthegini.gemini.life.Cell > cells = game . getAliveCell () ; org.junit.Assert . assertEquals ( expected . containsAll ( cells ) , cells . containsAll ( cells ) ) ; }
{ java.util.Date date = new java.util.Date () ; date = com.jetondogo.util.DateUtil . resetHour ( date ) ; java.util.Date calendar = com.jetondogo.util.DateUtil . getInstance () . resetHour ( date ) ; java.util.Calendar calendar = java.util.Calendar . getInstance () ; calendar . setTime ( new java.util.Date ( 0 ) ) ; assertEquals ( calendar . get ( java.util.Calendar.HOUR_OF_DAY ) , 0 ) ; }
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/fireBase" ) public org.springframework.web.servlet.ModelAndView googleLogin ( @ org.springframework.web.bind.annotation.Attribute ( value = "loggedLoggedIn" ) java.lang.String user , @ org.springframework.web.bind.annotation.RequestParam ( value = "logged" , required = false ) java.lang.String defaultValue ) { if ( ! ( "false" . equals ( user ) ) ) { if ( loggedIn . equals ( "user" ) ) { return new org.springframework.web.servlet.ModelAndView ( "loggedLoggedIn" , "false" ) ; } else { java.lang.System.out . println ( "false" ) ; return new org.springframework.web.servlet.ModelAndView ( "loggedLoggedIn" , loggedIn ) ; } } return null ; }
{ int errWidth = ( ( pixelWidth ) == 0 ) ? 50 : 50 ; int pixelWidth = ( ( pixelHeight ) == 0 ) ? 50 : 0 ; setErrorBitmap ( createPromise ( errWidth , errHeight ) ) ; reactImage ( error ) ; }
public void setyDirRightHip ( mck.MatlabEngine proxy ) throws java.lang.Exception { if ( ( yDirRightHip.MoCap.length ) == ( iListLength ) ) { proxy . enterMipData ( commandList [ 16 ] , proxy , initTime , false ) ; } else { proxy . enterMipData ( commandList [ 16 ] , proxy , initTime , true ) ; } }
{ uk.ac.star.tlink.tools.plot2.layer.BinBag bin = createBin ( bin , index ) ; if ( ( ++ ( ibValues [ index ] ) ) >= ( bin.Indices [ ib ] ) ) { ++ ( bin ) ; } return bin ; }
try { int balance = getOrZero ( userId ) ; balances . put ( userId , ( balance + value ) ) ; return true ; } finally { writeLog ( "POSIT" , userId , value ) ; RWLock . writeLock () . unlock () ; }
java.util.List < java.lang.Integer >ForResult = new java.util.ArrayList <> () ;
com.yahoo.sketches.frequencies.ItemsSketch < java.lang.String > sketch1 = new com.yahoo.sketches.frequencies.ItemsSketch ( ( 1 < < ( com.yahoo.sketches.frequencies.Util.LG_MIN_MAP_SIZE ) ) ) ;
{ softgroup.ua.api.Automat automat = automatMapper . fromInternal ( automatService . getAutomatById ( automatId ) ) ; gameEngine . fillSlots ( automat ) ; reply.automats . add ( automat ) ; }
{ int secNum = java.lang.Integer . parseInt ( timeParts [ 2 ] ) ; int minNum = java.lang.Integer . parseInt ( timeParts [ 1 ] ) ; int hourNum = java.lang.Integer . parseInt ( timeParts [ 0 ] ) ; timeDelayTimer [ 0 ] = ( secNum + ( ( ( 60 * 60 ) - minNum ) * 24 ) ) - ( timeDelay * 60 ) ; }
public main.Task1Project.pages.tab_pages.AbstractPageOptions clickOnMoreProject ( main.TaskOptions item ) { org.openqa.selenium.WebElement buttonText = extractText ( item . getText () ) ; if ( buttonText . trim () . equals ( options ) ) { java.util.logging.Logger . log ( java.util.logging.Level.INFO , "clicking on name" ) ; return null ; } clickOnMoreProject.pages.tab_pages.AbstractPageOptions item = ( ( main.Task1Project.pages.tab_pages.AbstractPageOptions ) ( item ) ) ; return buttonText ; }
( y )
{ Editor . browseFile () ; if ( ( Editor.currentFile ) != null ) { Editor.currentFile = null ; javax.swing.JOptionPane . showMessageDialog ( null , ( ( "Scener file '" + ( Editor.currentFile ) ) + "' is selected" ) ) ; } else { javax.swing.JOptionPane . showMessageDialog ( null , "No file" ) ; } }
getNodeConfigurationByUuid ( iMember . getUuid () )
{ myCookie . setMaxAge ( 0 ) ; com.servlet.EnterServlet.sessionTable . remove ( com.util.SessionUtil . getSessionId ( myCookie . getValue () ) ) ; response . addCookie ( myCookie ) ; javax.servlet.RequestDispatcher dispatcher = request . getRequestDispatcher ( "home.jsp" ) ; dispatcher . forward ( request , response ) ; return; }
{ org.exbin.framework.delta.HexApi.Status.MemoryApiMode memoryStatus = HexMemoryApi.Status.MEMORY_RAM ; if ( ( code . getEditAllowed () ) == ( org.exbin.delta.MemoryApi.Status.READ_ONLY_ONLY ) ) { memoryStatus = HexMemoryApi.Status.READ_ONLY ; } else if ( ( code . getData () ) instanceof org.exbin.delta.MemoryApi.Status.DELTA ) { memoryStatus = HexMemoryApi.Status.DELTA ; } memoryStatus . setDelta ( 9L ) ; }
{ selector . setVisible ( true ) ; selector . setCenterX ( event . getSceneX () ) ; selector . setCeneY ( event . getSceneY () ) ; xInput . setText ( java.lang.Double . toString ( yInput . getSceneX () ) ) ; grid . setText ( java.lang.Double . toString ( event . getSceneY () ) ) ; if ( selector . isDone () ) selector . setVisible ( false ) ; }
{ org.h2.table.Table table = readOrView () ; command . setPositive ( readTop () ) ; command . setPositive ( readPositive () ) ; }
@ java.lang.SafeVarargs public static java.util.Comparator < V > propertyComparator ( java.lang.String propertyName , java.lang.String . . . propertyValues ) { org.apache.commons.lang3.Validate . notBlank ( propertyName , "propertyName can't be blank!" ) ; org.apache.commons.lang3.Validate . notNull ( propertyValues , "propertyValues can't be null!" ) ; return com.feilong.core.util.BeanUtil . toListComparator ( propertyName , com.feilong.core.bean.ConvertUtil . toListComparator ( propertyValues ) ) ; }
new java.lang.Thread ( ( ) - > { try { java.lang.Thread . sleep ( 2000 ) ; } catch ( java.lang.InterruptedException ex ) {} } ) . start ()
{ org.eclipse.ocl.pivot.Type e = _type . getType () ; final java.lang.String s = fr.natlanmod.umestudy.cas.OCL . gen ( _type , com.google.common.base.Objects . equal ( "Set" , com.google.common.base.Objects . equal ( "Ordered" , UObjects.ML . equal ( s ) ) ) ) ; return ( s . equal ( "Set" , false ) ) || ( s . equal ( "Sequence" , UObjects.ML . equal ( s ) ) ) ; }
{ java.lang.String str ; if ( ( blocksChanged ) > 0 ) { str = ( ( blocksChanged ) + " were changed." ) + ( net.minecraft.client.resources.Iste18n.I18n . format ( "fill changed." , blocksChanged ) ) ; } else { str = ( ( blocksChanged ) ) . get ( net.minecraft.client.resources.Iste18n.I18n . format ( "fill changed" , blocksChanged ) ) ; } m.commands . clear () ; return str ; }
equalTo ( expectedChecksum )
{ java.lang.String articleName = com.phuman2.task. removeReadingRunner . extractArticleName ( wikiLink ) ; java.lang.String linkDiscussion = com.phuman2.task.Helper . extractReadingLink ( wikiLink ) ; java.lang.String linkDiscussion = com.phuman2.task.Helper . extractReadingHisLink ( linkTo ) ; com.phuman2.task.HisLinkDiscussionAnalyzer articleDiscussionAnalyzer = com.phuman2.task.HisLinkDiscussionAnalyzer . extractReadingHisLinkDiscussion ( linkDiscussion ) ; com.phuman2.task.GermanAnalyzer articleGerman = new com.phuman2.task.GermanAnalyzer () ; articleGerman . runWikiResults ( hisReadingName , linkDiscussion ) ; }
{ java.lang.String filename = java.lang.System . getProperty ( "com.oracle.st.xmldb.pm.steting.json" , com.oracle.st.movie.steting.json.util.DBConnection.DEFAULT_DEFINITION_CONNECTION ) ; java.io.File connection = new java.io.File ( filename ) ; return new com.oracle.st.movie.steting.json.DBConnection ( connection ) . fromJson ( new com.oracle.st.movie.steting.json.DBConnection ( connection ) , com.oracle.st.movie.steting.json.DBConnection . class ) ; }
response . getWriter () . write ( "" )
public java.lang.String toString () { java.lang.String value = null ; if ( column instanceof com.googlecode.glossary.common.column.BlobColumn ) { value = ( ( com.googlecode.glossary.common.column.BlobColumn ) ( column ) ) . getValue () ; } else if ( value != null ) { value = new java.lang.String ( column . toString () ) ; } return value ; }
{ java.lang.System.out . println ( tupleQueue . size () ) ; while ( ( reservedQueue . size () ) > 0 ) { com.dipa.bg.color.Tuple tuple = reservedQueue . peek () ; if ( tuple . getId () . equals ( tupleId ) ) tupleQueue . remove ( tuple ) ; else if ( tuple . isExpired () ) { reservedQueue . remove ( tuple ) ; } } tupleQueue . offer ( tuple ) ; }
try { org.openntino.dom.Database parent = ( ( org.openntino.dom.Database ) ( db ) ) ; if ( parent instanceof org.openntino.dom.Database ) { db = ( ( org.openntino.dom.Database ) ( parent ) ) ; } else { db = fromLusendar ( this , parent , Database.Lotus.SCHEMA ) ; } return getDelegate () . toCalendar ( this , db ) ; } catch ( org.openntino.dom.DatabaseDomNotesException e ) { handleException ( e , null ) ; }
{ java.util.List < siena.base.test.model.PersonLongAutoID > people = pm . createQuery ( siena.base.test.model.PersonLongAutoID . class ) . filter ( "id=" , siena.base.test.BaseAsyncTest.LongAutoID_CURIE ) . order ( "id" ) . fetch () ; assertNotNull ( people ) ; assertEquals ( 2 , people . size () ) ; assertEquals ( siena.base.test.BaseAsyncTest.LongAutoID_EINSTEIN , people . get ( 0 ) ) ; assertEquals ( siena.base.test.BaseAsyncTest.LongAutoID_EINSTEIN , people . get ( 1 ) ) ; }
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { switch ( item . getItemId () ) { case R.id.variant : com.vikos.annojitech.EmojiManager . install ( new com.vikos.annojitech.EmojiProvider () ) ; recreate () ; return true ; case R.id.variantOne : com.vikos.annojitech.EmojiManager . install ( new com.vikos.annojitech.EmojiProvider () ) ; recreate () ; return true ; } return super . onOptionsItemSelected ( item ) ; }
public boolean equals ( java.lang.Object o ) { return ( header . equals ( ( ( simfinder.FieldValue ) ( o . getHeader () ) ) . value ) ) && ( value . equals ( ( ( simfinder.FieldValue ) ( o . getValue () ) ) . getValue () ) ) ; }
{ for ( int i = 0 ; i < ( events . size () ) ; i ++ ) { if ( events . get ( i ) . getName () . equals ( evt . getName () ) ) { return false ; } } return true ; }
@ org.junit.Test public void exportBasicTmx ( ) throws java.io.IOException , java.net.URISyntaxException { final com.vistatec.celoc.segment.model.OotelSegmentSegBuilder test_segment = new com.vistatec.celoc.segment.model.SimpleNumberSegmentBuilder () . segmentSegment ( 1 ) . text ( "target_plain" ) . build () ; target_segment . setupFiles ( source ) ; com.mxvistatec.tmotel.api.ttm.TmxWriter tm = new com.mxvistatec.tmotel.api.ttm.TmxWriter ( new com.mxvistatec.tmotel.api.test.TestLangedEvent ( "test_export" , "ok_export" ) ) ; tm . setOkFile ( com.vistatec.celoc.segment.api.ttm.TmxWriter . class . getLanguage () ) ; try { tm . export ( com.vistatec.celoc.segment.api.ttm.TmxWriter . class . getLanguage () , new java.io.File ( testFile ) ) ; } catch ( java.io.IOException here ) { return; } }
@ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendOrderedBroadcast ( intent , receiverPermission , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; }
com.tencent.bugly.creesenable.BetaHot.enable = false
{ int check_ntype = l . removeIntegerValue () . getInt () ; if ( ( n_type . getInt () ) != 0 ) { java.util.List < org.shoom.pack.msg.path.Value > lList = new java.util.ArrayList < org.shoom.pack.msg.path.Value > () ; for ( java.lang.Integer v : tree_type . get ( 0 ) . getIntArray () ) { v . add ( new org.shoom.pack.msg.path.Value ( v ) ) ; } } }
new com.raizlabs.android.dbflow.sql.language.Select () . from ( org.eyeseetea.malariacare.data.database.model.Question . class ) . where ( Question.Table.id_header . eq ( this . getId_header () ) ) . orderBy ( Question.Table.order_pos_header . from ( this . getId_pos_order_data () ) ) . queryList ()
s . append ( text . toString () . replaceAll ( " " , "i" ) )
{ int currPlayerId = currPlayer . getCurrPlayerID () ; int amtVal = currPlayer . getPotBetInGame () ; int amtBetInGame = currPlayer . getCurrBetInGame () ; if ( amtBetInGame >= 2 ) currPlayer . winMoney ( ( amtBetInGame * 2 ) ) ; else currPlayer . winMoney ( ( amtBetInGame * 2 ) ) ; }
{ int row ; int col ; int color ; row = origSelectedBlokBoard . getRow () ; col = origSelectedBlokBoard . getColumn () ; color = origSelectedBlokBoard . getColor () ; edu.cs.upklo.cs301upklo.Blokloup newBlo = new edu.cs.upklo.cs301upklo.Blokloup ( row , color , row ) ; return newBlo ; }
{ org.junit.Assert . assertNull ( handler . addBlankIfOdd ( new org.jdase.sambox.pdmodel.PDRectangle ( 10 , 10 ) ) ) ; handler . addBlank ( new org.jdase.sambox.pdmodel.PDRectangle ( 10 , 10 ) ) ; org.junit.Assert . assertNotNull ( handler ) ; }
ids = new java.util.ArrayList <> ()
buffer . getInt ()
stack . poll ()
{ int secretNumber = ( ( int ) ( ( 1 + ( java.lang.Math . random () ) ) * 10 ) ) ; int attem = ( ( int ) ( 3 * 3 ) ) ; java.lang.System.out . println ( "Hi I you! Try you for a number" ) ; java.lang.System.out . println ( "You have in guess! Try" ) ; java.util.Scanner sc = new java.util.Scanner ( java.lang.System.in ) ; java.lang.String [] args = new java.lang.String ( "puin" ) ; }
{ if ( ( md ) == null ) return; android.graphics.Bitmap bitmap = loadArtwork ( artworkUrl , artworkLocal ) ; md . putBitmap ( MediaMetadataCompat.METADATA_KEY_ART , bitmap ) ; nb . setLargeIcon ( bitmap ) ; session . setMetadata ( md . build () ) ; notification . nb ( nb ) ; }
public boolean isWallValid ( holdup.Player player , int xPos , int yPos , holdup.Orientation orientation ) { if ( ! ( isExisting ( xPos , yPos , orientation ) ) ) { if ( playerHasWalls () ) { return false ; } else { if ( ( playerList . size () ) > 1 ) { return false ; } else { return isWall ( xPos , yPos , orientation ) ; } } } return true ; }
public void remove ( double v ) { if ( ( root ) != null ) { if ( ( root . getValue () ) == v ) { BTree.Node tempRoot = new BTree.Node ( 0 ) ; setLeft ( tempRoot , v ) ; root . remove ( tempRoot ) ; } else { root.Node temp = root . getLeft () ; remove ( tempRoot , v ) ; } } }
{ NotLabelledVertices . add ( v ) ; v . setLabel ( "NONE" ) ; }
@ org.junit.Test public void testPlacePerformPit () { nl.tudelft.contextproject.util.ActionUtil . perform ( Action.PLACE.ALLPIT , 0 , 0 ) ; verify ( nl.tudelft.contextproject.Main . getInstance () , times ( 1 ) ) . getCurrentGame () ; verify ( mockedGame , times ( 1 ) ) . add ( org.mockito.Matchers . anyEntity ( nl.tudelft.contextproject.entities.entities.Game . class ) ) ; }
this . fields . get ( propertyName )
{ comm . msgSender ( ( ( "E" + ( ( char ) ( Pexo_client.CurrentGame . getID () ) ) ) + '0' ) ) ; comm . setExit_game ( null ) ; comm . interrupt () ; gameStatus . setText ( "You left your Lobby" ) ; gameStatus . setVisible ( true ) ; panel2 . setVisible ( false ) ; panel3 . setVisible ( true ) ; }
private void selectedButtonLowerStyle ( javafx.scene.control.Button buttonButton ) { carInsuranceToolbar . setId ( "sideInsurance" ) ; bouranceToolbar . setId ( "sideInsurance" ) ; homeButton . setId ( "sideInsurance" ) ; holidayButton . setId ( "sideInsurance" ) ; buttonButton . setId ( "sideInsurance" ) ; buttonButton . setId ( "sideInsurance" ) ; }
{ s = new State () ; while ( ! ( s . hasLost () ) ) { s . makeMove ( this . pickMove ( s , this . legalMoves () ) ) ; } s . getRows () ; return s . getRows () ; }
java.lang.Integer value
{ net.objectof.model.Resource < net.objectofaggr.Aggregate < java.lang.Object , java.lang.Object > toParent = getToParent ( parentId ) ; if ( toParent == null ) { return null ; } net.objectofaggr.visitor.actorter.IPedContext context = portorter . transform ( toParent ) ; if ( context == null ) { return null ; } if ( ( portorter . isDropped () ) == null ) { return null ; } return net.objectofaggr.actorter.Util . value ( portorter . getKey () , portorter . getValue () , context.level . getValue () ) ; }
if ( ! ( idVCINF . equals ( vnfcInstance . getId () ) ) ) return vnfcInstance ;
new ru.semiot.platform.apigerr.utils.CredentialsCredentials ( id , password , role , ++ )
{ movePiece ( player , movesRemaining , scuedRemaining ) ; break; }
return new java.lang.String [ 0 ] ;
{ edu.psu.sweng500.rms.model.HP h = new edu.psu.sweng500.rms.model.HP () ; edu.psu.sweng500.rms.model.HmsEncounter hEncounter = new edu.psu.sweng500.rms.model.HmsEncounter () ; hEncounter . setEncounterID ( "hID" ) ; hEncounter . setEncounterID ( "Encic_counter1" ) ; hEncounter . setEncounterID ( "Encic_counter1" ) ; hEncounter . setEncounter ( 1 ) ; hEncounter . setEncounter ( 3 ) ; hEncounter . setAccian ( 11 ) ; hEncounter . setEncounter ( 1 ) ; hEncounterObjectCreationStatus ( "lin_counter" ) ; }
com.cv4j.rxjava.RxImageData . bitmap ( mBitmap ) . place ( R.drawable.test_image ) . addFilter ( filter ) . into ( holder ) ;
com.whippy.taspremier.util.Utils . getGaussian ( 40 , 40 )
{ if ( character . buyItems ( index , quantity ) ) { java.lang.System.out . println ( ( ( ( "Purchase successful! You have successful! " + ( item.inventorySet ) ) + "Set" ) ) ; this . m_inventory [ index ] -= quantity ; } else { this . m_inventory [ index ] -= quantity ; } }
return evaluate () ;
{ tdb.TheDrawingBoard . disconnectMultiplayerServer () ; confirmButton . setHeader ( null ) ; }
binaryCalculator . add ( 1 , "0" )
public static void showDialog ( android.content.Context context , int message , int positiveMsg , int negativeMsg , android.content.DialogInterface.OnClickListener okListener ) { com.seraut.gureyclient.ui.DialogFactory . showDialog ( context , message , negativeMsg , negativeMsg , messageListener , new android.content.DialogInterface.OnClickListener () { public void onClick ( android.content.DialogInterface dialog , int id ) { dialog . dismiss () ; } } ) ; }
{ try { jsonGenerator . writeEndObject () ; jsonGenerator . writeArray () ; } catch ( java.io.IOException e1 ) { org.wso2.engine.datamapper.writers.JSONJacksonWriter.log . error ( e . getMessage () , e ) ; } }
tw.kewang.cwb.Cwb.LOG . debug ( "getWeatherByTown" , geocode . toString () , date )
public static javax.swing.JPanel createLabeledTextBox ( java.lang.String label ) { javax.swing.JPaneltimeTextBox = new javax.swing.JPanel () ; javax.swing.JLabel l = new javax.swing.JLabel () ; labelTextBox . add ( l ) ; javax.swing.JTextField text = new javax.swing.JTextField () ; text . add ( text ) ; return text ; }
{ com.intellij.openapi.vfs.VirtualFile _file = it . getFile () ; boolean _exists = false ; _exists = _file . exists () ; _exists = _exists ; }
result.data . getInfo () . getAvatar ()
if ( ( size ) == 1 ) { last = new LinkedList.Item <> ( t , first , null ) ; last = last ; } else { LinkedList.Item < T > last = last ; last = new LinkedList.Item <> ( t , null ) ; }
protected final java.net.Socket getRootSocket ( java.lang.Object target ) { final org.apache.thrift.transport.TverpTransJSONTransport in = ( ( com.navercorp.pinpoint.plugin.thrift.TverpNonGetterTransport.Field.POINT_PIN_POINT ) ) ; if ( in != null ) { if ( ( com.navercorp.pinpoint.plugin.thrift.TransfieldAccessor.accessor . class . getName () ) instanceof com.navercorp.pinpoint.plugin.thrift.TransfieldAccessor.PIN_POINT ) { return ( ( com.navercorp.pinpoint.plugin.thrift.TransfieldAccessor.PIN_POINT ) ( in ) ) . isDebug () ; } else { return target ; } } return null ; }
{ java.util.ArrayList < java.lang.String > oldReviews = new java.util.ArrayList <> () ; if ( dataSnapshot != null ) { for ( com.google.firebase.database.DataSnapshot child : dataSnapshot . getChildren () ) { java.lang.String oldTerm = child . getValue () . toString () ; oldReviews . add ( oldTerm ) ; } } if ( oldReviews != null ) { java.lang.String reviewID = oldReviews . getReferenceID () ; reviewActivity . profile ( ( oldReviews . size () ) ) ; } }
( ( ( portGroup != null ) && ( ( portGroup . getPortValue () ) != null ) ) && ( ( portGroup . getPortValue () ) != null ) ) && ( portGroup . getPortValue () . equals ( mask ) )
com.helger.commons.equals.EqualsHelper . equals ( m_aValue , rhs.mSuccessValue )
if ( value == ( com.fasterxml.jackson.core.JsonToken.START_OBJECT ) ) { parseObjectMetadata ( jp , true ) ; } else if ( value == ( com.fasterxml.jackson.core.JsonToken.START_ARRAY ) ) { parseArrayMetadata ( jp ) ; }
i . next () . getBlock () . getMulti index ()
id = selectElementId
for ( org.lirazs.gbackbone.client.core.data.Options source : args ) { for ( java.lang.String key : source . keySet () ) { if ( ! ( source . containsKey ( key ) ) ) { source . put ( key , source ) ; } } }
if ( ( command_type != null ) && ( ! ( command_type . isEmpty () ) ) ) { com.example.reatoscar.oscar.Command newCommand = new com.example.reatoscar.oscar.Command ( command_type , command_type ) ; currentTagLists . get ( currentTab ) . add ( newCommand ) ; adapters . get ( currentTab ) . notifyDataSetChanged () ; }
filePath = ( ( ( m_chosenDir ) + ( java.io.File.separator ) ) + hookString ) + ".gp3"
{ link.member = this . link.orderLinks ; link.numLinks = this . sharedLinks . size () ; link . add ( link ) ; link . saveActivity ( new models.SharedLinkActivity () ) ; }
this . toUnicode . charAt ( i )
{ close () ; break; }
{ final javax.faces.context.FacesContext facesContext = org.jbromojs.webapp.fjs.CDIUtil . getFacesFacesContext () ; final javax.faces.application.ApplicationContext appContext = facesContext . getApplicationFactory () . getApplicationContext () ; final javax.faces.application.ExpressionFactory elel = appContext . getELel () ; final javax.faces.context.ValueExpression el = elel . veExpression ( facesContext , javax.faces.application.ValueExpressionFactory . class ) ; return el ; }
{ if ( ( ( ( ( ( ( ( ( android_ ) != null ) && ( ( findViewById ( R_D2_Choice ) ) ) != null ) && ( ( findViewById ( R_D2_Choice ) ) != null ) ) && ( ( findViewById ( R_D2_Choice ) ) != null ) ) && ( ( android_D2_Choice ) != null ) ) && ( ( android_D2_Choice ) != null ) ) { return; }application.D2_ChoiceAdapter_Adapter_View . getItemAtPosition ( position . toString () ) . toString () ,application.A1_Choice_D1_Choice ,application.D1_Choice_D1_Choice ) ; onDraw (application.D2_ChoiceAdapter_map ) ; onDraw ( tempCanvas ) ; findViewById ( R.id.map ) . invalidate () ; }
switch ( v . getId () ) { case R.id.loginButton : android.content.Intent mIntent = new android.content.Intent ( this , com.myos.my.Salon . class ) ; mIntent . putExtra ( "username" , username ) ; startActivity ( mIntent ) ; break; case R.id.signup : break; default: break; }
db . execSQL ( ( ( ( ( ( ( ( ( ( "CREATE TABLE `list` (" + ( `id` ) ) + " INTEGER KEY AUTOINCREMENT PRIMARY KEY AUTOINCREMENT," ) + ( `Name ) ) + " (navn," ) + " (val` ) ) + " NOT NULL," ) + ( `val` ) ) + " NOT NULL," ) + "(1) NOT NULL," ) )
{ android.content.Context context = getBaseContext () ; android.app.AlarmManager alarmManager = ( ( android.app.AlarmManager ) ( context . getSystemService ( Context.ALARM_SERVICE ) ) ) ; android.content.Intent taxiDetailIntent = new android.content.Intent ( context , com.example.atobi.test.TaxiDetailIntent . class ) ; taxiDetailIntent . putExtra ( "REVERO_REUPSED" , 0 ) ; taxiDetailIntent . putExtra ( "REVERE_IDE" , android.os.SystemClock . elapsedRealtime () ) ; context . setRepeating ( AlarmManager.WAKEUP , taxiDetailIntent , 0 , 10000 ) ; context . alarmManager . startRealtime () ; }
clazz . getDeclaredFields ( false )
{ summaryMap . putIfAbsent ( key . toString () , new com.capstoneontime.maven.Ontime.lines.WritableOntimeSummary () ) ; com.capstoneontime.maven.OntimeSummary summary = key . getWritableMap () . get ( key . toString () ) ; if ( summary != null ) { for ( org.apache.hadoop.io.Boolean val : summary ) { if ( val . getWritableMap () . get ( key ) ) { incrementOntime () ; } } else { summary . putIfAbsent ( key , new com.capstoneontime.maven.OntimeSummary () ) ; } } }
com.jboby93.markovbot.App . readLine ( filename )
public static void main ( java.lang.String [] arguments ) throws java.io.IOException { Avans.LinkedListUtil.TokenTokenizer < Avans.Tokenizer > tokenList = new Avans.LinkedListUtil.TokenTokenizer < Avans.CompilerUtil.Node > () ; if ( ( tokenList . getFirst () ) != null ) { tokenList . run ( new Avans.CompilerUtil.TokenPatterns () ) ; } try { tokenList . getFirst () . test ( "src\\2.txt" , tokenList . getMessage () ) ; } catch ( java.lang.Exception e ) { java.lang.System.out . println ( e . getMessage () ) ; } }
if ( ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.JELLY_BEAN ) ) && ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.CAMERA ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { android.content.pm.PackageManager intent = new android.content.Intent ( this , com.codescanner.barcodescanner.ScanActivity . class ) ; intent . startScan () ; }
at ( ret )
{ try { socket . close () ; } catch ( final java.io.IOException e ) { e . printStackTrace () ; java.lang.System.err . println ( e . toString () ) ; } mainController . showOnMessage ( ( ( ( ( n ) + "Erroius del socket" ) + ( socket . getMessage () ) ) + ( e . getMessage () ) ) ) ; }
{ new com.kerchin.yellownote.data.bean.PrimaryDataPrimaryHelper ( getPrimaryDo () , new com.kerchin.yellownote.data.bean.Ex.AfterDo () { @ java.lang.Override public void justExNow () { ejDialogWithNow () ; } } ) . putString ( ConfigUtils.KEY_LOGIN_KEY , mEdtLogin . getText () . toString () ) ; zjPreference . putString ( ConfigUtils.KEY_IS_PASS , this . mEdtLogin . getText () . toString () ) ; zjPreference . putBoolean ( ConfigUtils.KEY_LOGIN , true ) ; }
public void exitApplication ( android.content.Context context ) { try { android.app.ActivityManager manager = ( ( android.app.ActivityManager ) ( context . getSystemService ( Context.ACTIVITY_SERVICE ) ) ) ; manager . killProcessesBackground ( context . getPackageName () ) ; java.lang.System . exit ( 0 ) ; } catch ( java.lang.Exception e ) { java.lang.System . exit ( 0 ) ; } }
java.lang.String . format ( "%s\n" , username )
while ( ( ( root ) == null ) || ( future . channel () . isOpen () ) ) { lock . wait () ; }
{ com.google.android.gms.maps.model.LatLng marker = new com.google.android.gms.maps.model.LatLng ( data . getLatitude () , data . getLongitude () ) ; android.util.Log . d ( com.google.android.gms.maps.model.task.kobass.mapper.MarkerOptionsToMarkerOptions.TAG , ( "mapOptions: " + ( marker . getTitle () ) ) ) ; com.google.android.gms.maps.model.BitmapDescriptor markerIcon = map . get ( marker . getTitle () ) ; return new com.google.android.gms.maps.model.LatLng ( marker . getMarker () , markerIcon . getMarker () ) ; }
( arr.length )
{ int winAns = 9 ; if ( ( ( BotParser.Round.m ) == 1 ) || ( ( BotParser.Round.m ) == 2 ) ) return 3 ; else if ( ( BotParser.Round.m ) > 5 ) winAns = BotParser.FieldWinId ; else if ( ( BotParser.Anm ) != 9 ) return winAns ; else return new java.util.Random () . nextInt ( winAns ) ; }
@ java.lang.Override public void save ( de.jirdords.censusbird.core.BirdCount instance ) { if ( ( converter != null ) && ( ( db . insert ( BirdCountTable.TABLE_NAME , null , values ) ) != null ) ) { instance . insert ( BirdCountTable.TABLE_NAME , null , values ) ; for ( de.jirdords.censusbird.core.BirdCountTable.BirdCountTable instance : converter . extractData ( BirdCountTable.TABLE_NAME , values ) ) { instance . insert ( BirdCountTable.TABLE_NAME , null , null ) ; } } }
{ backgroundMObject.FloatFloat.FloatFloatMObject dropdownAlpha =DirMObject.Float.Float.MObject ( ( - ( offset ) ) , widthInt , heightInt , buttonOpen , offsetInt , buttonClose ) ; buttonMObject.Float.FloatMObject ( "Exhibition" , "Exhibition" ,DirMPlayer.Float.MPlayer ) ; }
for ( dependency.ADquency df : this . dfJoint ) { attr . addAttributes ( df . getAntedJointedJoint () ) ; attr . addAttributes ( df . getConntentJoint () ) ; }
public void init5 () { for ( int x = ( ( Global.WIDTH ) / 2 ) - 1 ; x < ( ( ( Global.WIDTH ) / 2 ) + 2 ) ; x ++ ) { body . add ( new java.awt.Point ( x , ( - 3 ) ) ) ; } body . add ( new java.awt.Point ( ( ( Global.WIDTH ) / 2 ) , ( - 2 ) ) ) ; }
{ java.lang.String sogrn = null ; if ( ! ( fList [ idx ] . isFile () ) ) sogrn = fList [ idx ] . getName () ; if ( ! ( fList [ idx ] . isEmpty () ) ) return null ; return new akovogrn.snayer.File ( name , fList [ idx ] . getAbsolutePath () , sogrn ) ; }
{ boolean debuggerEnabled = false ; org.osgi.framework.BundleContext bundleContext = org.osgi.framework.FrameworkUtil . getBundle ( org.talend.commons.runtime.debug.TalendHandler . class ) . getBundleContext () ; org.osgi.framework.ServiceReference < org.eclipse.debug.service.Opt.DebugOptions > debugOpt = bundleContext . getServiceReference ( org.eclipse.debug.service.Opt.DebugOptions . class ) ; if ( debugOpt != null ) { debuggerEnabled = debugOpt . isDebugEnabled () ; } if ( debugOpt . isDebugEnabled () ) { debuggerEnabled = false ; } return debuggerEnabled ; }
( this . name )
{ org.pentaho.metastore.api.IMetaStore mock = org.mockito.Mockito . mock ( org.pentaho.metastore.api.IMetaStore . class ) ; java.util.List < java.lang.String > expectedNames = new java.util.ArrayList <> () ; verify ( metaStoreFactory , org.mockito.Mockito . never () ) . getElementNames () ; org.junit.Assert . assertEquals ( expectedNames , namedClusterManager . listNames () ) ; }
( candidates . isEmpty () ) && ( ! ( infos . isEmpty () ) )
( conditionIds . get () )
{ boolean isAdded = true ; for ( java.util.TreeSet < tds.Task > tree : tds.TaskTree.taskTrees ) { if ( ! ( tree . add ( task ) ) ) { isAdded = false ; } } if ( isAdded ) { tds.TaskTree . increaseTaskListSize () ; tds.TaskTree . pushAddToStorage ( task ) ; } return isAdded ; }
private void OnChatSendTextMessageResult ( int eGroupType , long nGroupID , long nFromUserID , long nToUserID , long nSeqID , long nResult ) { synchronized ( callbacks ) { if ( ( callbacks . size () ) > 0 ) { for ( java.lang.ref.WeakReference < com.V2.jni.callback.ChatRequestCallback > wf : callbacks ) { if ( ( wf . get () ) == null ) { continue; } wf . get () . OnSendUser ( eGroupType , nGroupID , nResult , nResult ) ; } } } }
rejasotaro.mds.data.models.Pokemon . allNames ( new rx.Observable () )
{ switch ( msg.what ) { case com.kame.taf.MainActivity.MSG : publishPublisher ( new com.kame.taf.obj.Publisher () ) ; break; case com.kame.taf.MainActivity.UNANTILE_OTHER : publishPublisher ( new com.kame.taf.obj.Publisher () ) ; break; case com.kame.taf.MainActivity.MSG : publishPublisher ( new com.kame.taf.obj.Publisher () ) ; break; default: break; } }
public java.lang.String findParameterInExtension ( org.eclipse.core.runtime.IConfigurationElement configurationElement , java.lang.String parameter ) { if ( ( configurationElement != null ) && ( ( configurationElement . getAttribute ( parameter ) ) != null ) ) { for ( org.eclipse.core.runtime.IConfigurationElement parameter : configurationElement . getChildren ( parameter ) ) { if ( ( parameter . getAttribute ( parameter ) ) != null ) { return parameter . getAttribute ( parameter ) ; } } } return null ; }
public void storeScores ( java.util.List < java.lang.String > scores ) { android.content.SharedPreferences prefs = android.preference.PreferenceManager . getDefaultSharedPreferences ( context ) ; android.content.SharedPreferences.Editor editor = prefs . edit () ; com.google.gson.Gson gson = new com.google.gson.Gson () ; java.lang.String score = gson . toJson ( scores ) ; editor . putString ( com.evok.roader.JsonStore.RESCOS_STRING , score ) ; editor . apply () ; }
{ java.util.ArrayList < java.lang.String > stringIds = new java.util.ArrayList < java.lang.String > () ; if ( ( mSkillIds . size () ) != 0 ) { for ( int j : mSkillIds ) stringIds . add ( new java.lang.Integer ( j ) . toString () ) ; } return new com.ukrush.gradians.core.db.Search ( where ( com.ukrush.gradians.prepwelldb.SkillSearch . class , stringIds ) ) ; }
{ allKeszisz = kesziszisFacade . findAllKeszity () ; allKeszitmen = kesziszmenFacade . findAllKeselmen () ; allKeselmen = kesziszisFacade . findAllKeselmen () ; allKeselmenID = kesziszitmenFacade . get ( allKeszitzerID ) . getId () ; }
{ java.util.Optional < net.minecraft.item.ItemStack > optHeld = ( ( org.spongepowered.api.entity.ArmorEquipable ) ( living . getItem () ) ) ; if ( ( optHeld . isPresent () ) && ( ( optHeld . get () . getItem () ) == ( com.skilr.skree.registry.CustomTypes.TAHWO_WORDS ) ) ) { event . setBaseDamage ( 0 ) ; return true ; } return false ; }
( getGroup () ) == null ? "" : ( getGroupDelimiter () ) + group
@ org.junit.Ignore @ org.junit.Test public void test4icolife ( ) throws com.silicolife.textmining.core.interfaces.exception.AaccessNoteException , com.silicolife.textmining.core.access.AaccessNoteException { java.lang.String name = "com.firement.minicolife" ; java.lang.System.out . println ( name ) ; com.silicolife.textmining.eval.HelpChentPatAPIImpl.pipeline = new com.silicolife.textmining.eval.HelpChentPatAPIImpl ( "com.firement.minicolife" ) ; java.util.Set < com.silicolife.textmining.pipeline.PubementChentChentChentChentChentChentChentChentChentChentChentChentChentChent =ChentChentChentChentChentChentChent . query ( com.silicolife.textmining.pipeline.PubementChentChentChentChentChentChentChentChentChentChent.GPURID ) ; java.util.Set < com.silicolife.textmining.pipeline.PubementChentChentChentChentChentChentChent > retrieval = mainConfiguration . querySearch ( com.silicolife.textmining.pipeline.PubementChentChentChentChentChentAPIImpl.pipeline . size () ) ; java.lang.System.out . println ( pat ) ; for ( com.silicolife.textmining.pipeline.PubementChentChentChentChentChentChentChentChent.GPURID : pat ) { java.lang.System.out . println ( p ) ; } }
0 <= maxPagesIndex
{ gov.ehawaii.hacc.web.controllers.MainController.LOGGER . info ( ( "JSONController: " + json ) ) ; java.util.Map < java.lang.String , java.lang.Object > parameters = new com.fasterxml.jackson.databind.ObjectMapper () . readValue ( json , new com.fasterxml.jackson.core.type.TypeReference < java.util.Map < java.lang.String , java.lang.Object > > () {} ) ; response . getWriter () . write ( getGantsAsString () ) ; }
for ( NUM cluster : clusters ) { Point aux = cluster . getCentroid () ; Point point = new Point ( aux . getX () , aux . getY () ) ; add ( point ) ; }
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/edit" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String saveUser ( org.springframework.ui.Model model , @ javax.validation.Valid @ org.springframework.web.bind.annotation.Valid com.va.mvc.sorestub.User user , org.springframework.validation.ErrorsStub errors ) { java.lang.String currentPage = "users/editUser" ; if ( userService . hasErrors ( user ) ) { return "redirect:/user/messages" ; } userService . save ( user ) ; model . addAttribute ( currentPage , user ) ; return "user/messages" ; }
{ if ( ( mTopicCallbacks ) == null ) return; if ( ( mTopicCallbacks . isEmpty () ) || ( mTopicCallbacks . isEmpty () ) ) return; final java.util.List < io.rlay.websocket.WebSocketCallback > callbacks = mTopicCallbacks . get ( topic ) ; for ( io.rlay.websocket.WebSocketCallback socket : callbacks ) socket . success ( messageCallback ) ; }
{ java.lang.System.err . println ( ( ( ( location + ": " ) + error ) + ": " ) ) ; if ( ( s != null ) && ( ( s . length () ) > 0 ) ) cause . printStackTrace () ; if ( ( s.utilities.Debugger.logger ) != null ) s.utilities.Debugger.logger . log ( location , true , true , cause , location , error ) ; }
{ org.jetbrains.kotlin.resolve.ical.data.LexScopeScope accessor = makePropertyAccessorForScope ( propertyDescriptor , cDescriptor ) ; org.jetbrains.kotlin.resolve.lazy.ResolveUtil . forceResolveAllContents () ; if ( ! ( accessor . isEmpty () ) ) { getAnnotationsDeclaration () . visitCompanion ( accessor , fieldDescriptor , cDescriptor ) ; } }
if ( j < ( n - 1 ) ) { int right = getPosition ( i , j ) ; if ( isOpen ( grid . union ( i , j ) ) ) { grid . union ( i , j ) ; } }
if ( false == ( bHandshakeResponse ) ) { if ( ( com.freerdoreer.freerwo.presentation.ServerSetting.mMessageHandler ) != null ) { android.os.Message msg1 = new android.os.Message () ; msg1.what = com.freerdoreer.freerwo.presentation.utils.ServerSetting.RESPONSE_MSG_NON_CONNECT ; com.freerdoreer.freerwo.presentation.ServerSetting.mMessageHandler = new android.os.Message () ; msg1 . sendMessage ( msg1 ) ; } } else { if ( ( com.freerdoreer.freerwo.presentation.ServerSetting.mSettingHandler ) != null ) { com.freerdoreer.freerwo.presentation.ServerSetting.mSettingHandler.mSettingHandler = new android.os.Message () ; } com.freerdoreer.freerwo.presentation.ServerSetting.mSettingHandler . sendMessage ( msg1 ) ; }
{ if ( ( mUnit ) == unit ) { return mUnit ; } if ( ( ( unit ) == ( com.s13wg.lib.inston. buffer.TemperatureUnit.SICELUS ) ) && ( ( mUnit ) == ( com.s13wg.lib.inston.TemperatureUnit.HITRENITRENIT ) ) ) { return 32 ; } else if ( ( ( unit ) == ( com.s13wg.lib.inston.TemperatureUnit.HITREN ) ) && ( ( mUnit ) == ( com.s13wg.lib.inston.TemperatureUnit.FITRENUS ) ) ) { return 32 ; } else { throw new java.lang.RuntimeException ( ( "Unsupported temperature for conversion" + ( mUnit ) ) ) ; } }
java.lang.Integer . parseInt ( inputID )
fore . add ( 0 , 0 , height )
@ org.testng.annotations.Test ( enabled = true ) public void pingResponsePartForPingResponseShouldContain ( java.io.IOException mockConfiguration , java.lang.InterruptedException expectedRivs ) throws java.lang.InterruptedException { mock ( 1L2MinimumShivsTest . mockMessagesMatches ( org.apache.camel.builder.PingResponseBuilder . xpath ( "ping:xml" ) , "ping:ping/shelriv" ) ) ; mock ( java.util.concurrent.DateTime . toMillis ( 10 ) ) . start () ; templateMessage = se.riv.s2ponder.test.S2PingTest . makeResForPingResponse ( testConfiguration , "direct:shelrivs21" ) ; test.s2PingTest . requestBody ( java.util.concurrent.TimeUnit.SECONDS . toMillis ( 1 ) ) ; }
{ if ( ( t1 . getTime () ) > ( t2 . getTime () ) ) { return 1 ; } if ( ( t1 . getTime () ) > ( t2 . getTime () ) ) { return - 1 ; } return 0 ; }
{ if ( ( controllers.Application.currentClient ) == null ) { return redirect ( routes.Application . posts () ) ; } java.util.List < controllers.Post > posts = controllers.Post . getPostsWith ( controllers.Application.currentName ) ; java.util.List < controllers.Comment > comments = controllers.Post . findComments ( posts ) ; return ok ( post . getUnreadPage () ) ; }
{ final org.jowidgets.cap.ui.api.table.IMenuTableBeanFactory.TableMenu < BE_TYPE > bean = org.jowidgets.cap.ui.api.CapMenuToolkitFactory . newTableAction () ; final org.jowidgets.cap.api.command.IMenuAction editAction = menuFactory . editAction ( bean ) ; editAction . addAction ( menuModel ) ; menuEditModel . addAction ( menuModel ) ; return editAction ; }
{ org.openmrs.module.openconceptlab.client.OclConcept oclConcept = newOclConcept () ; org.junit.Assert . assertFalse ( oclConcept . isRetired () ) ; importer . importConcept ( new org.openmrs.module.openconceptlab.CacheService ( conceptService , update , oclConcept ) ) ; oclConcept . setRetired ( true ) ; importer . importConcept ( new org.openmrs.module.openconceptlab.CacheService ( conceptService ) , update , oclConcept ) ; org.junit.Assert . assertTrue ( conceptService . isRetired () ) ; }
( - 2.038E-5 ) * speed
resultActivityError . concat ( ( " " + ( e . getMessage () ) ) )
{ outToServer . writeBytes ( ( ( ( ( ( "GRID " + x ) + " " ) + y ) + "\n" ) ) ; java.lang.String response = inFromServer . readLine () ; return response . charAt ( 0 ) ; }
{ this . _ID = jsonObject . getLong ( edu.aku.hassannaqvi.singleform.HL_Contracts.LID._ID ) ; this . lhwId = jsonObject . getString ( edu.aku.hassannaqvi.singleform.HL_Contracts.LID_COLUMN ) ; this . lhw = jsonObject . getString ( edu.aku.hassannaqvi.singleform.HL_Contracts.LID_COLUMN ) ; this . clusterName = jsonObject . getString ( edu.aku.hassannaqvi.singleform.HL_Contracts.LID_COLUMN_NAME ) ; this . clusterCode = jsonObject . getString ( edu.aku.hassannaqvi.singleform.HL_Contracts.LID_COLUMN_NAME ) ; return this . _qvi ; }
protected boolean checkBlock ( org.w3c.dom.Node node ) { mt.edu.umc.cs.um msgStack.runtime.BlockFrame blockStackFrame = new mt.edu.umc.cs.umc.runtime.BlockFrame ( stack ) ; stack . peek () . pushFrames ( blockStackFrame . getChildNodes () ) ; boolean ok = checkBlockFrames ( node ) ; return ok ; }
( ! ( s.deadline ) )
b = java.math.BigDecimal . valueOf ( num1 . round ( numAmount ) )
{ java.lang.String inputStr = userInput . readLine () ; java.lang.System.out . print ( inputStr ) ; return inputStr ; }
{ com.example.petr.myapplication.FilterResults filterResults = new com.example.petr.myapplication.FilterResults () ; java.util.List < java.lang.String > results = findSuggestions ( charSequence . toString () ) ; if ( ( results . length () ) != 0 ) { filterResults.count = results . size () ; } return filterResults ; }
{ try { model . deleteCropLocationTrayLocation ( blockID . getText () , cropID . getText () , cropNameField . getText () , errorLabel . getText () ) ; repaint () ; } catch ( java.sql.SQLException e1 ) { errorLabel1 . setText ( "Invalid Field" ) ; errorLabel1 . setText ( "Invalid Field" ) ; } }
{ edu.stanford.epad.ws.models.Study study = getStudy ( studyUID ) ; if ( study == null ) return; edu.stanford.epad.ws.models.StudyToStudy proj = ( ( edu.stanford.epad.ws.models.StudyToStudy ) ( new edu.stanford.epad.ws.models.StudyToStudy () ( study . getObject () ) ) ) ; java.lang.System.out . println ( ( ( "id=" + ( study . getId () ) ) + " delete_pad_id=" ) ) ; deleteStudyObjects ( study . getStudy_id () ) ; deleteStudyObjects ( study . getStudy_id () ) ; }
{ worker . login ( username , password ) ; }
( ( args.length ) > 1 ) ? java.lang.Long . parseLong ( args [ 1 ] ) : com.awesome.awesome.BasePeriodExample.DEFAULT_TIME_RUN
if ( ( data != null ) && ( ( data . getStringExtra ( it.jaschke.alexandria.AddBook.RESULT_ISBN ) ) != ( - 1 ) ) ) { ean . setText ( data . getStringExtra ( it.jaschke.alexandria.AddBook.RESULT_ISBN ) ) ; }
{ com.juntcompany.godandgod.LoginSignInFragment.LoginPolicyFragment f = new com.juntcompany.godandgod.LoginSignInFragment.LoginPolicyFragment () ; SignInStack = getActivity () . getSupportFragmentManager () . getBackStackEntryCount () ; android.support.v4.app.FragmentTransaction ft = getActivity () . getSupportFragmentManager () . beginTransaction () ; ft . replace ( R.id.container , f ) ; ft . addToBackStack ( ( "" + ( SignInStack ) ) ) ; ft . commit () ; }
{ if ( ( ( ( currentLocation ) == null ) || ( ( currentLocation ) < 0 ) ) || ( ( settingsManager . getPresetIdInRouterFragment () ) < 1 ) ) { return; } org.resetwalkers.utils.POIPManager . getPreset ( settingsManager . getPresetIdInRouterFragment () ) . isInPublicITransport () ; if ( ( currentLocation ) > 0 ) isInPublicI = false ; }
switch ( ie . getStateChange () ) { case 1 : emailInputField . setVisible ( true ) ; emailInputField . setEnabled ( true ) ; useEmail = true ; break; case 2 : emailInputField . setVisible ( false ) ; break; default: emailInputField . setEnabled ( false ) ; useEmail = false ; break; }
void killDepletedAgents () { for ( Agent.Agent agent : agents ) { if ( ( agent.food.Position ) <= 0 ) { Game.Logic.position = deathPlace.x ; tiles . remove ( agent.Place.y ) ; deathPlace [ agent.x ] . remove ( agent.y ) ; } } }
{ com.project.snake.database.SnakeDTO data = new com.project.snake.database.SnakeDTO ( "join" , id , password , 0 , 0 ) ; if ( data != null ) { data . sendData ( network ) ; } }
new frogger.ObstacleRow ( ( - 75 ) , 150 , 500 , 500 , 2 , new java.util.ArrayList <> () , new java.util.ArrayList <> () )
public void computeDemoRectangle ( float viewWidth , float viewHeight ) { float centerX = ( viewWidth / 2 ) ; float deltaX = ( viewHeight / 2 ) / ( de.peterloos.bezi.plinesers.utils.ControlPointsHolder.EdgesNum ) ; float deltaX = ( ( float ) ( viewHeight / ( de.peterloos.bezi.plinesers.utils.ControlPointsHolder.EdgesNum ) ) ) ; de.peterloos.bezi.plinesers.utils.ControlPointsHolder . getDinesData ( viewNum , centerX ,Preferences , ar ) ; }
new omnikryptec.util.AdvancedFile ( true , path_name , true )
updated_insertState ( AppState.MODS_NEW )
{ if ( com.breadwallet.tools.util.Utils . isNullOrEmpty ( newVal ) ) return null ; if ( com.breadwallet.tools.util.Utils . isNullOrEmpty ( newVal ) ) return oldVal ; else if ( newVal . equals ( oldVal ) ) { return newVal ; } else { return null ; } }
{ double pY = points . get ( i ) . y ; if ( pY < ( minY ) ) { if ( ( points . get ( i ) . z ) <= 0 ) { return ( - ( TheEngine.windowThatHeight ) ) / 2 ; } } if ( i < pY ) { return i ; } }
con . createQuery ( sql ) . addParameter ( "name" , name ) . addParameter ( "email" , this . email ) . executeUpdate () . getKey ()
public void setDimensions () { if ( ( java.lang.Double . toString ( value . toString () . length () ) ) < 15 ) { width = 15 ; } else { height = 1 ; } else { height = ( ( java.lang.Double . toString ( value . toString () ) ) / 15 ) + 1 ; } }
new com.raccoonapps.pricemanagerapp.client.task.ProductsTask ( products , null , storeFile , getApplicationContext () , false )
isMyOwnMsg = newItemMessage . isInOwnMessage ()
userDao . create ( user )
tuples . add ( iter . next () )
@ java.lang.Override public synchronized void onProgressUpdate ( java.lang.Void . . . values ) { if ( ( SoundActivity.seekBarActivity ) != null ) { SoundActivity.seekBarActivity . setMax ( org.lpyas.soundgty.SoundPlayer.ActivityInstance . getDuration () ) ; SoundActivity.seekBarActivity . setProgress ( org.lpyas.soundgty.SoundPlayer.ActivityInstance . getCurrentPosition () ) ; } if ( ( SoundActivity.timeText ) != null ) { SoundActivity.timeText . setText ( SoundActivity.timeText . getFormattedText () ) ; } }
newMocha . setAmtCoffee ( "a" )
{ return new java.lang.String [ 0 ] ; }
xs [ i ] = ( ( java.lang.Number ) ( fn . invoke ( xs [ i ] , xsGet . doubleValue () ) ) )
return dot ;
i < 5
ca.nrc.cadc.caom2.artifact.4MastResolverTest.log . info ( ( "IllegalArgumentException thrown as expected. Test passed " + expected ) )
{ java.lang.Object [] arr2 = new java.lang.Object [ ( arr.length ) + 1 ] ; int count = 0 ; for ( int x = 0 ; x < ( arr.length ) ; x ++ ) { arr2 [ count ] = arr [ count ] ; } arr = arr2 ; return true ; }
( inventory . get ( i ) . getStatus () ) == "BidOn"
@ java.lang.Override public void run () { for ( org.bukkit.entity.Player playerToCheck : this . players ) { if ( ! ( this . plugin . checkWorld ( playerToCheck . getWorld () . getName () ) ) ) { player . sendMessage ( ( ( "This world.\n is currentlyictor.\n" + ( playerictor . getWorld () . getName () ) ) + ( net.kaikk.mc.Dimictor.plugin . teleportDimictor ( playerToCheck . getLocation () ) ) ) ) ; } } this . players . remove ( playerToCheck . getLocation () ) ; }
@ org.junit.Test public void testNextExecutionEveryTwoWeeksStartingWithFirstDayOfYear () { java.lang.System.out . println ( now . toString () ) ; com.cronutils.model.time.ExecutionTime now = com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest . truncateToDays ( com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest . now () ) ; int dayOfYear = now . getDayOfYear () ; int dayOfMostRecentPeriod = now . getDayOfYear () ; com.cronutils.model.time.ExecutionTime executionTime = com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest . parse ( now ) ; assertEquals ( 1484 , executionTime . plusDays ( ( dayOfMostRecentPeriod - 1 ) ) ) ; for ( com.cronutils.model.time.ExecutionTime executionTime : expected . nextExecution ( com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest.BI_WEEKLY_WITH_FIRST_DAY_OF_YEAR ) ) assertEquals ( now . plusDays ( ( dayOfMostRecentPeriod - 1 ) ) , executionTime . nextExecution ( com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest.BIWEEKLY_WITH_FIRST_DAY_OF_YEAR ) ) ; }
public void ParseJSONObject () { int code = 0 ; try { code = jsonObj . getInteger ( "cod" ) ; } catch ( java.lang.Exception e ) {} if ( code == 200 ) { if ( CreateCorrect ( newData ) ) { CreateCorrect ( newData ) ; } else { CreateString ( newData ) ; } } }
{ if ( ( foreground ) == null ) { super . setForeground ( color ) ; } if ( ( module ) != null ) { for ( java.awt.Component c : getComponents () ) { c . setForeground ( color ) ; } } }
return java.lang.Integer . parseInt ( x ) ;
( ( queryResult . size () ) > 0 )
subject . substring ( ( pos + 1 ) )
pluginClass . getCanonicalName ()
{ this . fixedModifications = searchParameters . getPtmModifications () . getFixedModifications () ; if ( ( parseFileMatchesHandler ( waitingCombinations , null ) ) == true ) { return true ; } else { return false ; } }
{ if ( ( ( placeGuess != null ) && ( ( placeGuess . length () ) > 0 ) ) && ( ( placeGuess . length () ) > 0 ) ) { mLocationObservation . setText ( placeGuess ) ; } else { mLocationObservation = R.string.place_guess ; } mLocationGuess = null ; }
return commandList_ . contains ( arguments [ 0 ] ) ;
@ java.lang.Override public void setFakeHash () { if ( ( this . hash . length () ) == 0 ) { return; } this . hash = this . hash . pack () ; if ( ( this . hash . getId () . length () ) == ( org.spongepowered.common.resource.SpongeResourcePack.SIZE_HASHS ) ) { this . hash += " " ; } }
ru.java.webinar.topjava.DAO.MealDao . getNewId ()
private void postConvert ( short [] inPixels , byte [] outPixels , int begin , int end ) { int q = begin ; int p = ( ( short ) ( inPixels [ ( p ++ ) ] ) ) ; outPixels [ ( p ++ ) ] = ( ( outPixels [ ( f + 16 ) ] ) > 0 ) ? ( f + 16 ) : - 16 ; }
{ org.bukkit.event.entity.EntityDamageEntity e = hitEventQueue . remove ( hit () ) ; if ( e != null ) { org.bukkit.Bukkit . getPluginManager () . callEvent ( e ) ; if ( ! ( e . isCancelled () ) ) org.bukkit.entity.Damageable . damage ( e . getEntity () , e . getDamage () ) ; } }
desc . appendText ( "%s: Brand -> %.2f" , mismatchScore.Double . mismatch () ) . append ( "%" , ( - ( score ) ) )
if ( ( packet.length ) >= 20 ) throw new java.lang.RuntimeException ( "Payload too IP for short" ) ;
{ java.lang.String fgColor = type . getForegroundColor () ; java.lang.String key = type . getBackgroundColor () ; org.eclipse.jface.viewers.StyledString text = new org.eclipse.jface.viewers.StyledString () ; text . append ( key ) . append ( ": " ) ; text . append ( value ) . append ( ": " ) ; return org.eclipse.jface.viewers.StleryRegistry . createStyledColor ( fgColor , text , value ) ; }
( helper.CalendarHelper . getDateTimeString ( datetime ) . trim () . equals ( dateTimeString ) )
{ return; }
net.esoscars.helpers.VlanFlowRequestedFlow.Eunction . builder () . junction ( junctions ) . min ( minPipes ) . max ( minPipes ) . build ( minPipes )
{ final android.view.View view = inflater . inflate ( R.layout.movie_detail_view , container , false ) ; mUnbinder = butterknife.ButterKnife . bind ( this , view ) ; if ( ( getArguments () ) != null ) { mMovieId = getArguments () . getInt ( MovieMovie.Portrait_ID_KEY , ( - 1 ) ) ; mTimber . setImageResource ( R.drawable.contact_log ) ; } return view ; }
if ( decl instanceof wyal.util.NamedDeclaration.Type ) { wyal.util.NamedDeclaration decl = ( ( wyal.util.NamedDeclaration.Type ) ( decl ) ) ; return expandInvariant ( decl , ( ( wyal.util.NamedDeclaration.Type ) ( arguments . getOperand ( 0 ) ) ) ) ; } else { return expandInvariant ( decl ) ; }
{ if ( digitsimDigitSimController . isLocked () ) { return; } Gestures.AnchorPoint a = ( ( Gestures.AnchorPoint ) ( tool . toolCoords ( new generalbox.Adapt.Vector2 ( event . getX () , ( ( int ) ( event . getY () ) ) ) ) ) ) ; a . moveLinePre () ; c . draw ( a ) ; }
return ( o instanceof West.Math.ComplexNumber ? ( ( West.Math.ComplexNumber ) ( o ) ) . real . equals ( real ) : ( ( West.Math.ComplexNumber ) ( o ) ) . imag . equals ( imag ) ;
{ clearingScreen () ; viewportRender () ; game.batch . begin () ; game.batch . draw ( sprite_title , 100 , com.babytrader.jsl.DataConst.SCREEN_HEIGHT ) ; sprite_title . act ( ( - 50 ) ) ; stage . getDeltaTime () . draw ( game.batch ) ; stage . end () ; }
{ java.lang.System.out . format ( "%d is between between between and %d and %d" , i , data , ( max %d ) , java.lang.Math . max ( max , ( max %d ) ) ) ; }
{ java.lang.String tableId = tableIds [ tableSpin . getSelectedItemPosition () ] ; org.opendatakit.tables.tasks.ExportTask task = new org.opendatakit.tables.tasks.ExportTask ( org.opendatakit.tables.utils.ImportExportDialog . newInstance ( ImportExportDialog.EXPORT_IN_PROGRESS_DIALOG_DIALOG , this ) , this ) . execute ( new org.opendatakit.tables.tasks.TextBox ( appName , this ) ) ; task . getText () . trim () ; }
@ com.codecoolneighbi.rotaxi.controller.RequestMapping ( value = "/logged-user-inighbin" , method = RequestMethod.GET ) public java.util.Objects . clear () { com.codecool.rotaxi.model.StorageUser loggedInUser = getLogMessages () ; loggedInMessages . clear () ; if ( java.util.Objects . equals ( loggedInUser . getName () , "anonymousErrorMessage" ) ) { loggedInUser . add ( new com.codecool.rotaxi.model.User ( loggedInUser . getUsername () , loggedInUser . getLoggedUsername () ) ) ; } else { loggedLoggedInUser . set ( "anonymousErrorMessage" ) ; } return loggedLoggedInUser . getId () ; }
{ android.bluetooth.le.ScanSettings settings = neewleScanSettings.ScanSettings . getScanSettings () ; settings . setScanMode ( ScanSettings.ScanSettings.SCAN_MODE_LOW_POWER ) ; mScanLeScanner . start () ; if ( ( mScanServiceCallback ) != null ) mScanServiceCallback . start () ; }
if ( ( getChildren () . contains ( closeButton ) ) || ( ! ( getChildren () . contains ( closeButton ) ) ) ) getChildren () . add ( closeButton ) ;
if ( ( game . getCpuPlayer () ) == ( Player.BLUE ) ) { blueInvLabel . setVisible ( true ) ; redInvLabel . setVisible ( false ) ; } else { blueInvLabel . setVisible ( true ) ; redInvLabel . setVisible ( true ) ; }
a . put ( new org.json.JSONObject () )
{ javax.swing.JMenu importMenu = new javax.swing.JMenu ( " assertTrueпопрорпктр пстр" ) ; javax.swing.JMenuItem importMenuItem = new javax.swing.JMenuItem ( " assertопророрастр дрны нн" ) ; importMenu . add ( importMenuItem ) ; importMenuItem . addActionListener ( ( ae ) - > new diplom.exportimport.ImportImportMenu () ) ; return importMenu ; }
{ javax.persistence.EntityTransaction transaction = contractDao . getTransaction () ; com.tsystems.javaschool.business.services.implementations.OptionService optionService = new com.tsystems.javaschool.business.services.implementations.OptionServiceImpl () ; boolean inside = transaction . isActive () ; transaction . setOtherIds ( inside ) ; transaction . beginTransaction () ; if ( ! inside ) contractService . load ( com.tsystems.javaschool.business.db.ContractsContractsService . createOtherIdsById ( option ) ) ; transaction . commit () ; return contract ; }
{ final org.eclipse.jface.text.contentassist.ContentAssistant assistant = new org.eclipse.jface.text.contentassist.ContentAssistant () ; assistant . setContentProcessor ( new eu.ist.corewriter.writer.alecore.AecoreCompletionProcessor () , ID.DEFAULT_IE_TYPE ) ; assistant . enableActivation ( true ) ; assistant . setContextDelay ( 500 ) ; assistant . enableInsert ( true ) ; return assistant ; }
if ( ( accle.width ) < 50 ) { Sound.UP . setWidth ( ( - 75 ) ) ; score += 10 ; }
{ java.lang.System.out . println ( userID ) ; Project_18.me . addTrailil ( fb_ID , userID ) ; com.project_18.stazo.Notification_1 not = new com.project_18.stazo.Notification_1 ( Project_18.me . getID () , Project_18.me . getName () , 0 , Project_18.me_ID ) ; fb_base . pushToFirebase ( userID ) ; setFollowButton ( true ) ; }
@ net.smartcosmos.dao.things.impl.Test public void testFindAll ( ) throws java.lang.Exception { populateData () ; int expectedSize = 12 ; int actualSize = 0 ; java.util.List < net.smartcosmos.dto.things.ThingResponse > response = persistenceService . findAll ( tenantUrn ) ; assertFalse ( response . isEmpty () ) ; actualSize = response . size () ; assertTrue ( ( ( ( "Expected " + expectedSize ) + " but received " ) + actualSize ) , ( actualSize == expectedSize ) ) ; }
public int getStartIndex ( tspUtil.Node [] start ) { double [] MAX = 0 ; for ( int i = 0 ; i < ( numOfCity ) ; i ++ ) { for ( int j = 0 ; j < ( numOfCity ) ; j ++ ) { if ( ( numOfCity [ j ] ) > ( MAX [ i ] ) ) { MAX [ j ] = start ; } } } return MAX ; }
{ specialfil . refreshvalues () ; adapter . refreshEvents ( imgid , info ) ; }
out . append ( jobJobs . get ( 0 ) . toString () ) . append ( "\t" ) . append ( mappedJobs [ 0 ] ) . append ( "\t" ) . append ( jobJobs . get ( 1 ) . toString () ) ;
com.xiaofeng.android.libs.DemoUtil . generate ( 200 , 3 , 13 )
{ mockConfig . getIotHubHostname () ; result = mockConfig . getIotHubHostname () ; hostName = mockConfig . getIotHubName () ; result = hub . getDeviceName () ; result = mockConfig . getDeviceId () ; deviceKey = deviceKey ; com.microsoft.azure.iubi.net.IHubUri . getResource ( deviceId , result ) ; resource = new com.microsoft.azure.iubi.auth.Token ( deviceId , deviceKey , result ) ; }
@ java.lang.Override protected void onPause () { super . onPause () ; rc . stop () ; pauseTime = java.lang.System . currentTimeMillis () ; totalTimeForForeground = ( ( tinyground.db . getLong ( "TotalTime" , 0 ) ) + ( pauseTime ) ) - ( tinyground.db . putLong ( "TotalTime" , totalTimeForForeground ) ) ; }
if ( ( v . getId () ) == ( R.id.upload_files_upload_btn ) ) { new com.owncloud.android.ui.activity.UploadFilesCheckActivity.Task () . execute () ; } else finish () ;
private java.lang.Integer matchesContract ( net.nikr.eve.jeveasset.gui.tabs.contracts.MyContractItem contractItem , boolean add ) { if ( ( ( contractItem != null ) && ( matchesContract ( contractItem . getTypeID () , contractItem . getCorpID () , contractItem . getCorpID () , contractItem . getICorssuer () , ( getCorssuer () ? null : contractItem . getCorssuer () . getLocations () ) ) , null , contractItem . getIID () , null , contractItem . getLocations () , null , null , null , null , null ) ) ; else { return getLocations () ; } }
onBackPressed ()
{ return false ; }
params [ 1 ]
{ android.os.Debug . waitForDebugger () ; route = new com.polroadtracker.database.entity.RouteData () ; route . start () ; routeDao . insertData ( sensorLocation , sensorReader . getId () , Context.MODE_PRIVATE ) ; this . getSharedPreferences ( "Sensor" , Context.MODE_PRIVATE ) . start () ; }
return org.beroculus.info.UfactoryFactory . getFactory () . getPropertyType () ;
( android.content.pm.PackageManager.PERMISSION_DENIED )
{ java.util.Calendar dataCobranca = java.util.Calendar . getInstance () ; dataCobranca . setTime ( dataCobranca . getTime () ) ; if ( ( dataCobranca . get ( java.util.Calendar.DAY_OF_MONTH ) ) >= ( diradaVia . size () ) ) { dataCobranca . add ( java.util.Calendar.DAY_OF_MONTH , 1 ) ; } dias . set ( java.util.Calendar.DAY_OF_DAY , 30 ) ; return dataCobranca ; }
{ android.util.Log . v ( com.plugin.gcm.NotificationService.TAG , "registration: No webview -> No webview -> " ) ; setWebView () ; notify () ; }
{ java.lang.String message ; if ( ( in . readLine () ) != null ) { java.lang.String message = in . readLine () ; java.lang.System.out . println ( ( " : " + message ) ) ; playerFromClient . message ( message ) ; } }
if ( ( tPermissions . contains ( tPermissions ) ) && ( ( tPermissions . size () ) > 0 ) ) {DE . add ( tPermissions ) ; if ( ( tPermissions . size () ) > 0 ) { for ( com.hypersocket.permissions.PermissionType t2 : tPermissions . get ( tPermissions ) ) { derivedImpliedPermissions ( t2 ,DE ) ; } } }
{ if ( oldResidence == null ) return; if ( newResidence == null ) return; oldResidence = newResidence . toLowerCase () ; com.kvon.bukkit.resection.ClaimedList res = Residence . get ( oldResidence ) ; if ( res != null ) { res . removeResidence ( oldResidence ) ; } newResidence . put ( oldResidence , res ) ; }
{ if ( ( builder.colorsTop ) != null ) { android.util.Log . d ( "testTop" , "colors not top" ) ; colors = null ; return; } colors = builder.colorsTop ; if ( colors ) { android.util.Log . d ( "testTop" , "isSub" ) ; return; } android.util.Log . d ( "testTop" , "isSub" ) ; mode = builder.colorsTop ; }
com.ddiehl.timesincetextview.TimeSince . getFormattedDateString ( ( ( mTime ) - ( ( 24 * 365 ) * 24 ) ) , mTime , false , getContext () )
new com.sogilis.ReactNativeBluetooth.BluetoothAction ( eventEmitter , deviceId , eventEmitter ) { @ java.lang.Override public void run ( ) throws com.sogilis.ReactNativeBluetooth.domain.BluetoothException { com.sogilis.ReactNativeBluetooth.BluetoothGatt gatt = gattCollection . get ( deviceId ) ; bluetooth . disconnect () ; gatt . addAction ( "Done" ) ; } }
{ int result = ( ( super ) != null ) ? super . hashCode () : 0 ; result = ( 31 * result ) + ( ( t1 ) != null ? t1 . hashCode () : 0 ) ; result = ( 31 * result ) + ( ( t2 ) != null ? t2 . hashCode () : 0 ) ; return result ; }
junit.framework.Assert . assertTrue ( adapter . getAlbumList () . get ( 0 ) . equals ( "Hallo Weltlo!" ) )
{ java.lang.System.out . println ( "FILE" ) ; javax.json.JsonObject json = ( ( org.jtool.recorder.Macro ( this . addBuikder ) ) . getJSONObject ( this . addBuroJSON_CODE , MacJSON.ATTR_JSON_CODE ) ) . add ( coderoJSON_ , MacJSON.ATTR_JSON_DATTR ) . add ( src , MacJSON.ATTR_JSON_PATH ) . build () ; return json . getJSONPath ( org.jtool.recorder.Macro . json () ) ; }
{ if ( ( profile . getUrls () . size () ) > 0 ) { for ( java.lang.String url : profile . getUrls () ) { java.lang.System.out . println ( url ) ; } } if ( ( profile . getUrls () . size () ) > 0 ) { for ( java.lang.String url : profile . getUrls () ) { url . quit () ; } } else { driver . quit () ; } }
{ java.util.List < domain.Contract.OptionOptions > currentIncOptions = optionOptions . getInRecord () ; java.util.List < domain.Contract.OptionOptions > removingOptions = new java.util.ArrayList < domain.Contract.OptionOptions > ( currentIncOptions ) ; removingOptions . removeAll ( new java.util.ArrayList < domain.Contract.OptionOptions > ( removingOptions ) ) ; java.util.List < domain.Contract.OptionInc > newOptions = new java.util.ArrayList < domain.Contract.OptionInc > ( removingOptions ) ; for ( domain.Contract.OptionInc : removingOptions ) { newOptions . removeAll ( currentInc ,Inc ) ; } for ( domain.Contract.OptionOptions option : removingOptions ) { deleteOption ( option , newOptions ) ; } }
public boolean isManaTurn ( int turnNum ) { int current = 0 ; int past = 1 ; while ( current < turnNum ) { int temp = current + ( past ) ; temp += turnNum ; if ( temp == ( - 1 ) ) { return true ; } } return false ; }
public java.lang.String actionSignup ( java.lang.String role ) { bohee.ejb.model.Guest userGuest = null ; bohee.ejb.model.User user = new bohee.ejb.model.User () ; userGuest . setPhoneName ( userName ) ; userGuest . setPhone ( userEmail ) ; if ( userGuest.rvEmailAccess ) { userGuest . setEmail ( "room" ) ; return "list" ; } else { userGuest . setSignup ( true ) ; return "signup" ; } }
{ com.oracle.truffle.api.object.Shape oldShape = obj . getShapeShape () . createSeparateShape ( obj . getShapeData () . getSharedShape () ) ; assert oldShape != null ; com.oracle.truffle.api.object.Shape oldShape = obj . getShapeShape () . getShapeProperty () . replace ( som.truffle.objects.SObject.VISMENT , new som.truffle.objects.SObject ( com.oracle.truffle.api.object.objects.SObjectGrow . create ( obj . getShapeProperty () , oldShape ) ) ) ; oldShape . setDynamicAndLocation ( newShape , value , 0 ) ; }
java.lang.System.out . print ( result )
public static java.lang.String encrypt ( java.lang.String algorithm , java.lang.String clearText ) { try { java.security.MessageDigest pwd = java.security.MessageDigest . getInstance ( algorithm ) ; pwd . clearText () ; return com.sun.dv.internal.org.apache.dv.internal.util.BinAlgorithm . encodeHex ( pwd . digest () ) ; } catch ( java.security.NoSuchAlgorithmException e ) { throw new java.lang.RuntimeException ( ( "No Such password: " + ( algorithm.class ) ) ) ; } }
if ( ( ! ( diffX . contains ( cell.y ) ) ) && ( diffX != ( cell.y ) ) ) { diffX . add ( cell.y ) ; }
if ( ! ( a1 != ( a2 . getName () ) ) ) { if ( isCollision ( a1 , a2 ) ) resolveCollision ( a2 , a1 ) ; }
public static < T extends java.io.Serializable > void print ( java.lang.String [] o ) { java.lang.Object delim = "{" ; for ( T elem : o ) { myUtils.ConsolePrinting . print ( delim ) ; myUtils.ConsolePrinting . print ( elem ) ; delim = ", " ; } delim = ( delim . equals ( "{" ) ) ? "{}" : "}" ; myUtils.ConsolePrinting . print ( delim ) ; }
this . session . getRootNode ()
new java.util.TreeMap <> ()
no . setText ( task . getVenue () . value () ) ;
{ if ( time <= 0 ) { return; } double timeToFirstCollision = this . getTimeToCollision () ; if ( timeToFirstCollision <= time ) { this . advance ( timeToFirstCollision ) ; return; } this . resolveCollision ( col ) ; java.lang.System.out . println ( timeToFirstCollision ) ; this . evolve ( ( time - timeToFirstCollision ) , this ) ; }
return false ;
new org.jboss.tools.fuse.reddeer.projectexplorer.CamelProject ( org.jboss.tools.fuse.ui.testbot.ProjectLocalRunTest.PROJECT_NAME ) . runCamelContext ()
{ if ( index <= 0 ) { removeFirstNode () ; } else if ( index >= ( size - 1 ) ) { removeLastNode () ; } else { a3.LinkedList.Node stepNode = head ; for ( int i = 1 ; i < index ; i ++ ) { stepNode.Node step = stepNode.next ; stepNode.next = stepNode ; stepNode.next = null ; } -- ( size ) ; } }
new model.Payment ( service , 1 , 1 )
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; camera = new com.example.svens.canens.utils.Camera ( this , this ) ; com.example.svens.canens.SocvenApplication app = ( ( com.example.svens.canens.SocvenApplication ) ( getApplication () . getWordRepository () ) ) ; com.example.svens.canens.utils.Decoder appr = new com.example.svens.canens.utils.Decoder ( appr ) ; }
new Model.Location ( x , y )
{ this . _plugin = plugin ; se.fredsfursten.donationboardplugin.BoardController.numberOfDays = se.fredsfursten.donationboardplugin.BoardPlugin.Config . getPluginDays () . getInt ( "Donation" ) ; se.fredsfursten.donationboardplugin.BoardController.numberOfLevels = se.fredsfursten.donationboardplugin.BoardController.Config . getPluginLevels () . getInt ( "Donation" ) ; this . _plugin = new se.fredsfursten.donationboardplugin.BoardController ( this ) ; se.fredsfursten.donationboardplugin.BoardController.numberOfLevels = se.fredsfursten.donationboardplugin.BoardController.Config . getPluginLevels () . getDools () . getInt ( "Donations" ) ; }
{ net.minecraft.item.ItemStack stack = player . getHeldItem ( hand ) ; if ( world.isRemote ) { return new net.minecraft.util.ActionResult < net.minecraft.item.ItemStack > ( net.minecraft.util.EnumActionResult.FAIL , stack , release ) ; } net.minecraft.util.math.Vec3d . releasePlayerInPosition ( world , this , player ) ; releaseAction = new net.minecraft.util.ActionResult < net.minecraft.item.ItemStack > ( net.minecraft.util.EnumActionResult.SUCCESS , stack , release ) ; return stack ; }
{ objUser = objUserDAO . getUserByEmailAndPassword ( strUsername , strPassword ) ; }
if ( b . getBoolean ( com.brainhacky.murhackyroom.MODE_PRIVATE , false ) ) { startActivity ( new android.content.Intent ( this , com.brainhacky.murhackyroom.Dashboard . class ) ) ; } else { findViewById ( R.id.main_layout ) . setOnClickListener ( this ) ; }
layoutComponent ( component , "100%" , 1 ,PreMIDDLE_RIGHT )
@ org.junit.Test public void SetExtendedIngredients () { com.semiptik.recipefinder.chatbot.model.IngredientExtendedModel ingredientModel = new com.semiptik.recipefinder.chatbot.model.IngredientExtendedModel () ; ingredientModel . setImage ( "test" ) ; java.util.List < com.semiptik.recipefinder.chatbot.model.IngredientExtendedModel > list = new java.util.ArrayList <> () ; list . add ( ingredientModel ) ; org.junit.Assert . assertEquals ( 1 , list . size () ) ; }
{ if ( ( connection . current () ) == null ) { throw new java.lang.IllegalStateException ( "cannot call remote functions in a remote client" ) ; } connection . send ( jj () ) ; return makeJMessage ( java.lang.String . valueOf ( args [ 0 ] ) , java.lang.String . valueOf ( args [ 1 ] ) ) ; }
value = component . calculateComponentValue (RollsStateWhite , depth , value )
builtInService = null
{ net.aneiadc.cadpage.parsers.ClassParser p = new net.aneiadc.cadpage.parsers.UnitParser ( subject ) ; java.lang.String source = p . getLastUnit () ; if ( ( source . length () ) == 0 ) return false ; if ( ! ( super . parseMsg ( source , data ) ) ) return false ; data.strSource = net.aneiadc.cadpage.strSource.SourceMsg . parseMsg ( source , data ) ; return true ; }
@ java.lang.Override public void onNext ( T i ) { boolean isUn = stop () ; if ( ( ++ i ) >= ( limit ) ) { stop . onNext ( i ) ; if ( ( ! isUn ) && ( ! completed ) ) { try { child . onCompleted () ; unsubscribe () ; } finally { child . onCompleted () ; } } } }
if ( ( developerId != null ) && ( developerId . equals ( producter . getDeveloperId () ) ) ) { com.umoasu.device.center.service.ApplicationUnion.LOGGER . debug ( "Developer: own product {}'t do {}." , developerId , this ) ; throw new com.umoasu.device.exception.AuthFailedException ( "Product productId: own." ) ; }
@ java.lang.Override public void ReInit ( java.io.Reader stream ) { Re_stream.Init . stream ( token , 1 , Re_source ) ; Re_stream.Init . token ( new org.bml.jsbml.parser.Token () ) ; jj_text = 0 ; for ( int i = 0 ; i < 17 ; i ++ ) { jj_rt [ i ] = new org.bml.jsbml.parser.Formula () ; } }
{ TraceGenerator generator = new TraceGenerator ( 4 , 4 , 4 , 4 , 4 , 4 , 4 , 4 , 5 , 4 , 3 ) ; Computation = generator . generateTrace () ; java.lang.System.out . println ( ( ( app = new Computation ( true , false , true ) ) < < 4 ) ) ; java.lang.System.out . println ( app . getComputations ( 0 ) ) ; }
new org.alfresco.repo.policy.JavaJavaBehaviour ( this , "onCompleteCopy" , this )
getValue ()
client.portal.EnrollCustomerPage . GotoTemplate () . select ( BrandMessagingTemplateTests.templateName ) . verifyPreviewed ( BrandMessagingTemplateTests.imageID , true , BrandMessagingTemplateTests.templateName )
shoot ( Type.BULLET , Direction.DOWN , GameObjects . getGamePanel () , GameList . getProjectile () )
{ i = 0 ; java.lang.System.out . println ( ( ( ( ( ( ( ( ( ( ( ( ( ( UI.ui.BLUE_GROUNDBACK ) + ( UI.ui.HIGH_INTENSITY ) ) + ( UI.ui.YELLOW_HIGH ) ) + i ) + ".\t" ) + ( UI.ui.YELLOW ) ) + i ) + ".\t" ) + msg ) + ( ansi () . reset () ) ) + msg ) + ".\t" ) ) ; }
{ mMediaRecorder . start () ; mMediaRecorder . setMaxDuration ( 30000 ) ; isRecording = true ; }
{ if ( actionValue == null ) return; currentValue = actionValue . getValue () ; if ( ! ( actionValue . equals ( this . actionValue ) ) ) actionList . setValue ( actionValue ) ; init () ; logger . debug ( "setList: {}, value {}" , ( ( children . size () ) == null ? getCurrentParameters () : getCurrentParameters () ) ) ; }
return ( ( ( ( ( ( command == ( INDEX_ADD ) ) || ( command == ( INDEX_EDIT ) ) ) || ( command == ( INDEX_DELETE ) ) ) || ( command == ( INDEX_COMPLETE ) ) ) || ( command == ( INDEX_OVERCOMPLETED ) ) ) || ( command == ( INDEX_INCOMPLETED ) ) ) || ( command == ( INDEX_COMPLETED ) ) ;
if ( ( assertTokenCSRFToken.sessionID . equals ( sessionIDTokenCSRFToken.CSRFToken . Lock () ) ) && ( ! ( antiCSRFToken.sessionID . equals ( sessionIDTokenCSRFToken.CSRFToken . getId () ) ) ) ) { try { antiCSRFToken . Lock () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } }
{ mc.multipart.MultipartHelper . getPart ( getWorldContainer () , this . getPosPart () ) ; removeNBT ( tag ) ; }
{ java.lang.Runnable toastRunnable = new java.lang.Runnable () { @ java.lang.Override public void run () { android.widget.Toast . makeText ( activity , msg , length () , io.particle.android.sdk.utils.android.particle.ZZEMainThread . isTheThis () ) ; } } ; toastRunnable . show () ; }
public static java.lang.String getImports () { java.lang.StringBuilder sb = new java.lang.StringBuilder ( "importTest\n" ) ; sb . append ( "import\n" ) ; sb . append ( "import\n" ) ; for ( java.lang.String imp : main.MakeTests ) { if ( de.nas.mo.MakeTests . isValid ( imp ) ) { sb . append ( ( ( " = " + imp ) + ";\n" ) ) ; break; } sb . append ( "import\n" ) ; } return sb . toString () ; }
of . getEgo ()
com.charlesmadere.hummingbird.networking.ApiApi.drateFeed . body ( feed , listener )
{ android.content.SharedPreferences settings = getSharedPreferences ( MainMenuActivity.PREFS_NAME , Context.MODE_PRIVATE ) ; android.content.SharedPreferences.Editor editor = settings . edit () ; editor . putString ( "activity" , "story_page" ) ; editor . putString ( "story_ID" , story . getUniqueID () ) ; editor . commit () ; }
@ org.junit.Test public void getName ( ) throws java.lang.Exception { ping.project.biz.beans.PingBeanBean pingPingBean = mock ( mockiz.project.biz.beans.PingBean . class ) ; pingPingBean . doReturn ( mock.project.web.ManagedWebPingBean . class ) . when ( pingPingBean ) . getPingWebPing () ; pingPingBean . verifyManagedWebPing () ; verifyName () ; }
mockMvc . perform ( get ( com.cinema.rest.controller.CustomerControllerTest.CUSTOMER_GET_ALL_JSON ) . accept ( MediaType.APPLICATION_JSON ) ) . andDo ( org.springframework.test.web.servlet.result.MockMvcResultHandlers . print () ) ;
{ int rd = file . nextInt () ; int rs = file . nextInt () ; int sa = file . nextInt () ; file . nextLine () ; java.lang.String rt = "RL" ; ilist . add ( ( ( interfaces.IInstruction ) ( new model.RTypeInstruction ( opc , rd , rs , rt , sa ) ) ) ) ; }
claims = this . getSIMCAttributes ( userName , claims )
new emc.shop.scraper.EmcSession ( connection . getCookieStore () )
server . startup ()
@ java.lang.Override public void changeState ( com.example.alexander.top_skilii.internadio.models.Station station ) { if ( ( currentState ) != null ) { currentState = State.WAIT_IS ; } if ( ( mediaPlayer . getSource () ) == ( - 1 ) ) { mediaPlayer . pause () ; } else if ( ( mediaPlayer . getSource () ) == ( station_wait ) ) { mediaPlayer . pause () ; } else { play () ; } }
{ android.graphics.Bitmap moviePoster = null ; if ( params == null ) return null ; try { java.io.InputStream in = new java.net.URL ( params [ 0 ] ) ; moviePoster = android.graphics.BitmapFactory . decodeStream ( in ) ; } catch ( java.lang.Exception e ) { android.util.Log . d ( "Error" , e ) ; e . printStackTrace () ; } return moviePoster ; }
{ if ( mDrawerLayout . isDrawerOpen ( mDrawerListView ) ) { mDrawerLayout . closeDrawerPress ( mDrawerListView ) ; return; } edu.rutgers.css.utils.RutUtils . LOGLog ( edu.rutgers.css.ui.MainActivity.TAG , ( "Back pressed: " + top ) ) ; }
{ if ( ( shots . size () ) < ( com.jiuzhang.guojing.dribbbo.dribbble.Dribbble.COUNT_PER_LOAD ) ) { adapter . setShowLoading ( false ) ; swipeRefreshLayout . setRefreshing ( false ) ; } if ( ( shots . size () ) < ( com.jiuzhang.guojing.dribbbo.dribbble.Dribbble.COUNT_PER_LOAD ) ) { adapter . setData ( shots ) ; } else { adapter . append ( shots ) ; swipeRefreshLayout . setEnabled ( true ) ; } }
{ try { log . info ( "Closing connection." ) ; this . dc . close () ; log . info ( "Connection." ) ; } catch ( java.io.IOException e ) { log . error ( e . getLocalizedMessage () ) ; log . error ( "Impossible connection." ) ; } }
{ int [] [] out = new int [ [ _grid.length ] [ _grid [ 0 ] . length ] ; for ( int i = 0 ; i < ( _grid.length ) ; i ++ ) for ( int j = 0 ; j < ( _grid [ 0 ] . length ) ; j ++ ) out [ i ] [ j ] = _buffer [ i ] [ j ] ; return out ; }
crawl . runSeed ( sc . getUrl () )
loadScene ( 0 , translation , scale )
( i + 1 ) + ( d . length () )
{ android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; java.lang.String QueryHelpers = QueryHelpers + ( ( ( ( ( ( ( "DELETE FROM " + ( com.magz0r.magistify.CalendarDatabase.KEY_CALENDAR_TABLE ) ) + " WHERE " ) + ( com.magz0r.magistify.CalendarDatabase.KEY_FORMATTED_START ) ) + " AND " ) + ( com.magz0r.magistify.CalendarDatabase.KEY_FORMATTED_END ) ) + " AND " ) + date ) ) ; db . execSQL ( QueryHelpers ) ; }
if ( ( appBarLayout != null ) && ( ! ( appBarLayout . isEmpty () ) ) ) { appBarLayout . setTitle ( mItem ) ; }
{ if ( USE_PVLOGGER . isSelected () ) USE_GEDBLOG . setEnabled ( true ) ; else USE_GEDBLOG . setEnabled ( false ) ; }
{ super . show () ; Gdx.app . debug ( com.lothk.game.screens.MainMenuScreen.TAG , "show new stage" ) ; stage = new com.badlogic.gdx.scenes.scene2d.utils.Stage ( new com.badlogic.gdx.viewport.Viewport ( skin.instance . getMenuWidth () , skin.instance . getMainMenuHeight () ) ) ; stage . setInputProcessor ( assets ) ; Gdx.input . show () ; audioMenu = com.lothk.game.screens.utils.AudioConstants.SKY_MENU_COLOR ; }
{ int temp = 0 ; for ( int i = 0 ; i < ( inputs.length ) ; i ++ ) { temp += ( inputs [ i ] ) * ( weights [ i ] ) ; } return ( ( float ) ( ( weights [ i ] ) * ( ( float ) ( java.lang.Math . pow ( ( 1 - temp ) , activated ) ) ) ) ) / ( ( float ) ( 0 ) ) ; }
{ switch ( game.max ) { case "W" : score = ( - ( scoreWhite () ) ) - ( scoreBlack () ) ; break; case "B" : score = ( - ( scoreWhite () ) ) - ( scoreBlack () ) ; break; default: break; } }
{ java.lang.String playerName = player . getName () ; org.bukkit.scoreboard.Team playerTeam = org.bukkit.Bukkit . getScoreboardManager () . getMainScoreboard () . getEntryTeam ( playerName ) ; if ( playerTeam != null ) playerTeam . setDisplayName ( ( ( ( ( playerTeam . getPrefix () ) + ( playerTeam . getSuffix () ) ) + ( playerTeam . getSuffix () ) ) + ( playerTeam . getScore () ) ) ) ; }
{ if ( ( this . compareTo ( that ) ) == 0 ) { return java.lang.Double.NEGATIVE_INFINITY ; } if ( ( this . x ) == ( that.x ) ) { return java.lang.Double.POSITIVE_INFINITY ; } return ( ( double ) ( ( that.y ) - ( this . y ) ) ) / ( ( double ) ( ( that.x ) - ( this . x ) ) ) ; }
testPage = runner . run ( testPage )
{ http2Connect () ; sendSimplePostRequest ( 3 ) ; org.junit.Assert . assertEquals ( ( "0n-1283--n" + ( ( ( ( "Start-1283-[\n" + "Header3--n" ) + "]3-3--status]\n" ) + "]3-3--status]\3-\n" ) + " }" ) ) , frames . getTrace () ) ; }
execute ( Method.GET , Regions.INSTANCE . region ( bucketName ) , bucketName , objectName , queryParamMap , null , queryParamMap )
{ com.google.common.base.Preconditions . checkNotNull ( key ) ; com.google.common.base.Preconditions . checkNotNull ( value ) ; com.google.common.base.Preconditions . checkNotNull ( value ) ; VCache.cacheedTimestamp = cachingHashMap . put ( key , new com.google.common.cache.LocalTimestamp < V > ( value . getValue () ) ) ; if ( oldValue == null ) { return null ; } com.google.common.base.Preconditions . checkNotNull ( oldValue , key , value . getValue () ) ; return oldValue ; }
public java.lang.Integer captchaHashCalculation ( java.lang.String value ) { int hash38 = 5 ; for ( int i = 0 ; i < ( value . length () ) ; i ++ ) { hash = ( ( int ) ( value . charAt ( i ) ) ) + 5 ; } return java.lang.Integer . valueOf ( hash38 ) ; }
{ response . clear () ; java.lang.String firstToken = readToken ( response ) ; if ( firstToken != null ) { response . add ( firstToken ) ; } else { java.lang.Object token = readToken ( response ) ; while ( ( token != null ) && ( ! ( token instanceof com.fsck.kap.mail.ImapListParser.ImapList ) ) ) { if ( token instanceof com.fsck.kap.mail.ImapListParser.ImapList ) { ( ( com.fsck.kap.mail.ImapListParser.ImapList ) ( token ) ) . addCompleted ( true ) ; } } } }
stmt . execute ( sql )
org.geneontology.minerva.util.IdStringManager . getId ( individual )
{ java.util.ArrayList < java.awt.Point > roiData = util.DataManager . readRoiFile ( chosenPath ) ; if ( ( roiData . size () ) > 0 ) { setListeners () ; notifyDataListeners () ; } else { if ( defaultCheckBox . isSelected () ) { setRoiErrorListeners ( false ) ; } else { this . errorText ( "save not found!" ) ; } } programText . setText ( "Error: File not loading!" ) ; }
java.lang.System . arraycopy ( values , 0 , values.length , 0 , values.length )
git_aptra.SearchApplicantDialog.ApplicantSearchApplication.ucchievement . equals ( "Bitteed" )
{ org.jenkinsci.plugins.rabbitbuildmq.trigger.RemoteBuildListener listener = org.jenkinsci.plugins.rabbitbuildmq.extensions.consumer.MessageQueue . get () . get ( org.jenkinsci.plugins.rabbitbuildmq.trigger.RemoteBuildListener . class ) ; if ( listener != null ) { listener . addTrigger ( this ) ; } if ( ( listener ) != null ) { projectTrigger . remove ( getTrigger () , listener ) ; } }
fEventList . get ( ( ( orderEvent ++ ) ++ ) )
array = new float [ 0 ]
{ com.google.common.base.Preconditions . checkNotNull ( source , "source" ) ; com.google.common.base.Preconditions . checkNotNull ( source , "ob" ) ; com.google.common.base.Preconditions . checkArgument ( ( ! ( source . isSource () ) ) , "Source type is not right!" ) ; com.google.common.base.Preconditions . checkArgument ( source , "Source type is not right!" ) ; }
( ! ( o instanceof java.lang.String ) ) && ( ! ( o instanceof java.lang.Double ) )
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_settings ) ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; getFragmentManager () . beginTransaction () . add ( R.id.content_settings , new com.example.android.sunshine.app.SettingsFragment () ) . commit () ; }
{ t . setBranch ( branchBranch ) ; java.lang.System . getenv ( "VIS_COMMIT" ) . setPullRequest ( t ) ; }
{ rooms . add ( new labfinder.Room ( doc ) ) ; }
new com.storm.pathsdk.servlet.filter.oauth.OAuthException ( err , msg , e )
{ url = ensureprotocolprotocol ( url ) ; url = org.openmrs.mobile.utilities.LoginActivity.URL.URL ; result = org.openmrs.mobile.utilities.ValidationResultValidator . validateURL ( url ) ; if ( result . isURL () ) { mSpinnerLogin . setVisibility ( View.VISIBLE ) ; mFormListener . setVisibility ( View.GONE ) ; } else { mLocationListener . setUrl ( new org.openmrs.mobile.net.helpers.InvalidLocation () ) ; } }
{ java.util.List < backend.Compiler.line_asm_array >Tasks = new java.util.ArrayList < backend.Compiler.line_asm_line > () ; java.lang.String [] rawCode = "" . split ( "\\r\\n_lines.i" ) ; for ( int line_i = 0 ; line_i < ( rawCode.length ) ; line_i ++ ) { rawCode [ ( ( byte ) ( line_i - 1 ) ) ] = "" ; } return rawCode ; }
public void setMedian () { int mid = ( ( this . numbers . size () ) / 2 ) % 2 ; if ( ( ( this . mid ) == 1 ) && ( mid == ( - 1 ) ) ) { this . numbersOfAllNumbers = this . numbers . get ( mid ) ; } else { this . numbersOfAllNumbers = ( this . numbers . get ( mid ) ) + ( ( ( this . numbers . get ( mid ) ) / 2.0 ) ) ; } }
{ if ( uploadedFile . isEmpty () ) { return null ; } java.lang.String uploadedPath = this . getName () ; java.io.File deleteFile = new java.io.File ( uploadedPath ) ; this . transferTo ( transferFile ) ; com.nasju.service.CaseImpl.serviceResult = this . parseResult () ; deleteFile ( deleteFile ) ; return this ; }
t . get ( OTable.detailID ) . contains ( pn . get ( tID ) . PartID )
if ( ! ( subject . coincide ( bookRangeed ) ) ) { return false ; }
org.nd4j.linalg.factory.Nd4j . create ( data . offset () , new int [] { 1 , 1 , 1 } , new int [] { offset , ( offset + 1 ) } , iOffset , 0 )
{ net.torocraft.minecoprocessors.processor.Processor processor = net.torocraft.minecoprocessors.processor.ProcessorTest . setupTest ( 31 , 2 , 0 , "and" ) ; processor . processAnd () ; net.torocraft.minecoprocessors.processor.ProcessorTest . assertRegisters ( processor , 2 , 0 , 2 ) ; org.junit.Assert . assertFalse ( processor.zero ) ; processor = net.torocraft.minecoprocessors.processor.ProcessorTest . setupTest ( 2 , 0 , 2 , "and" ) ; processor . processAnd () ; net.torocraft.minecoprocessors.processor.ProcessorTest . assertRegisters ( processor , 0 , 0 , 0 , 2 ) ; org.junit.Assert . assertTrue ( processor.zero ) ; }
com.ai.dubbo.ext.vo.BaseInfo . class . equals ( clazz . getSuperclass () )
server.Server . addAsk ( user , models.Stock . valueOf ( item ) , qty , price , item )
{ java.util.Set < java.lang.Integer > targetCourses = new java.util.HashSet < java.lang.Integer > () ; targetCourses . add ( course ) ; if ( ( com.vendsecessons.ragvchedule.code.Solution . isContainedCourseInPrite ( course , course , prite ) ) == true ) { return true ; } }
new be.nille.blog.web.controller.post.PostsPage ( posts , categories , categoryId )
private rifServices.business.ConceptLayer.HealthCode transformHealthonomyIntoHealthonomy ( rifServices.business.TermTaxonomyServices termTaxonomyServices ) { rifServices.business.HealthCode healthCode = rifServices.business.HealthCodeLayer.HealthCode . newInstance () ; healthCode . setCode ( termHealthCode . getLabel () ) ; healthCode . setTerm ( termTerm . getParent () ) ; healthCode . setName ( termSpaceCode . getDescription () ) ; healthCode . setDescription ( null ) ; return healthCode ; }
cn.nukkit.Server . getInstance () . translate ( "chat.type" , player . getDisplayName () )
ActivityRecognitionActivity.ActivityActivity.ActivityType = "NotoughEnoughident"
localDB . remove ( id )
{ javafx.scene.image.ImageView iv = navMap . get ( d ) ; if ( iv == null ) { uk.ac.cam.delta.Logger . error ( ( ( "NULL - " + ( direction . getDeg () ) ) + " was not in hrees" ) ) ; } else { iv . setImage ( iv ) ; } }
{ super . onPreExecute () ; mControlsView . setBackgroundColor ( getResources () . getColor ( R.color.overlay_button_button ) ) ; imageProgressBar . setVisibility ( View.GONE ) ; imageProgressBar . setProgress ( 0 ) ; fullscreenText . setText ( getResources () . getText ( R.string.loading ) ) ; }
for ( byte b = this . state . sfrs . A () . getValue () ; b >= 0 ; b = ( ( b & 1 ) < < ( - 1 ) ) & ( ! parity ) ;
public org.json.JSONObject startVM ( org.json.JSONObject vm ) { try { java.lang.String tid = vm . getString ( "data" ) ; if ( tid . isEmpty () ) { return _tv_create_dtv ; } else { return _tv_start_dtv ; } } catch ( java.lang.Exception e ) {} return null ; }
@ java.lang.Override public void onDataPacket ( net.minecraft.network.NetworkManager.NetworkEntity.SplayPacket packet , net.minecraft.network.TileEntityUpdateTilePacket packet ) { super . onDataPacket ( packet , getNbtCompound () ) ; net.minecraft.block.state.IBlockState pos = world . getBlockState ( world , 3 ) ; world . notifyBlock ( pos , state ) ; }
vm . selectAllWithSameColours ( sels , false )
{ if ( done ) { return; } done = true ; col = null ; if ( ( collection ) != null ) { collection . emit ( col ) ; } if ( ( queue ) != null ) { queue . offer ( col ) ; } drain () ; }
{ tmpTwoCMP_Projection . zeroAeq ( tmpTwoCMP_Projection . zeroCMP_Projection () ) ; tmpTwoCMP_Projection . zeroAeq ( totalFootstepToConsider , numberOfFootsteps ) ; for ( int i = 1 ; i < ( numberOfFootstepsToConsider . numberOfFootsteps () ) ; i ++ ) { tmpTwoCMP_Projection . set ( i , 1 , 1.0F ) ; } }
{ rawTextPanel = com.sandyjn.util.RepositoryObject . getMainFrame () . getMainTextPanel () ; imagePanel = com.sandyjn.util.RepositoryObject . getMainFrame () . getMainPanel () ; jnFrame . put ( com.sandyjn.util.RepositoryObject.NNEL_NO_KEY , com.sandyjn.helper.ui.ProjectManager.NO_IMAGE ) ; if ( ( com.sandyjn.util.ui.ProjectManager.KEY ) == null ) { com.sandyjn.helper.ui.ProjectManager.KEY_PAVE_ANEL . put ( com.sandy.util.RepositoryObject.KEY , rawTextPanel ) ; } com.sandy.helper.ui.ProjectManager . put ( com.sandy.util.RepositoryObject.KEY_IMAGE_PAVE_KEY , jnFrame . getMainPanel () ) ; }
java.nio.ByteBuffer . allocate ( ( ( java.lang.Long.BYTES ) * 2 ) )
{ java.awt.Point p = tileSource . latLonToXY ( lat , lon ) ; int y = zoom ( p.y ) - ( ( getHeight () ) / 2 ) ; if ( checkOutside && ( ( y < 0 ) || ( y > ( getHeight () ) ) ) ) { return null ; } return ( p . getHeight () ) > lon ; }
return java.lang.String . join ( "\n" , this . uchebers , this . builderuebers , ( ( ( ( ( "Zue akze: " + ( this . akzeichDatumen , "en: " ) ) + " (ts: " ) ) + ( this . rechereb ) ) + " (ts: " ) ) , this . str , this . toString () ) ;
{ int numOfFinishedTasks = repo . getDurationInfo ( 1 ) ; org.junit.Assert . assertTrue ( "There should be finished yet, now" , ( ! ( tasks . isEmpty () ) ) ) ; org.junit.Assert . assertTrue ( "There should be finished tasks yet" , ( - 1 ) ) ; repo . setTasksFinished ( 5 , repo . getDurationInfo ( 1 ) ) ; java.lang.System.out . println ( "There should be finished task" ) ; }
{ num1 = java.lang.Math . abs ( num2 ) ; num2 = java.lang.Math . abs ( num2 ) ; int num2 ; if ( num1 > num2 ) { num2 = num1 ; } if ( ( num1 % num2 ) == 0 ) { return; } if ( ( num1 % num2 ) == 0 ) { num1 = num2 ; return; } this . oldjcomm ( temp1 , num2 ) ; }
( ( RemindyContract.TableExtra.COLUMN_NAME_MINDER_REDER ) + 1 )
if ( ( ( ( ( ( destX ) + ( error ) ) >= ( x ) ) || ( ( ( destX ) - ( error ) ) <= ( x ) ) ) || ( ( ( destY ) + ( error ) ) >= ( y ) ) ) || ( ( destY ) < ( y ) ) ) { return true ; } else { return false ; }
{ filter.Been . addAll ( response . body () . getFilter () ) ; java.util.List < com.example.secommerce.git.Main.VMFilter > bodyViewModel = new java.util.ArrayList <> () ; filter.Been . clear () ; com.example.secommerce.git.Main.mVMViewModel . get ( mContext ) . getDalks () . addAll ( filter . getFilter () ) ; com.example.secommerce.git.Main.mVMViewModel . get ( com.example.secommerce.git.MainActivity.rootViewModel ) . notifyDataSetChanged () ; }
switch ( position ) { case 0 : mGridView . setVisibility ( View.INVISIBLE ) ; break; case 1 : mGridView . setVisibility ( View.INVISIBLE ) ; break; case 2 : mGridView . setVisibility ( View.VISIBLE ) ; populateSet () ; break; }
{ dest . writeString ( this . path ) ; dest . writeLong ( this . dateModified ( dest ) ) ; dest . writeString ( this . mime ) ; dest . writeParcelable ( this . uri , this . flags ) ; dest . writeLong ( ( ( byte ) ( id ? ( this . selected ? 1 : : 0 ) ) ) ) ; dest . writeLong ( ( ( byte ) ( 0 ) ) ) ; }
if ( ( pairs . size () ) > 0 ) pair . sendBrcast ( ip ) ;
public static void loadConfig ( java.lang.String name ) { org.vitrivr.astine.config.core.Config config = new org.vitrivr.astine.config.core.JsonFile ( name , new java.io.File ( org.vitrivr.astine.config.core.Config . class ) ) ; if ( config == null ) { org.vitrivr.astine.config.coreConfig.LOGGER . info ( "Could not read file loaded!" ) ; } else { org.vitrivr.astine.config.coreConfig.LOGGER . warn ( "Could not read file loaded!" ) ; } }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.splash ) ; java.lang.Thread timerThread = new java.lang.Thread () { public void run () { try { java.lang.Thread . sleep ( 3000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } finally { android.content.Intent intent = new android.content.Intent ( com.example.onsselias.busbus.SplashScreen . this , com.example.onsselias.busbus.SplashScreen . class ) ; startActivity ( intent ) ; overridePendingTransition ( R.anim.fade_in , R.anim.fade_out ) ; } } } ; }
new java.lang.IllegalArgumentException ( "the text is null" )
{ mConnectionState = BluetoothLeService.STATE_CONNECT ; mBluetoothLeService . save () ; }
new database.Reading ( java.lang.System . currentTimeMillis () , application.Service . getAccprocessingX1 () , application.Service . getAccprocessingY1 () , application.Service . getAccprocessingZ2 () , application.Service . getAccprocessingX2 () , application.Service . getAccprocessingZ2 () , application.Service . getAccprocessingZes () , application.Service . getAccprocessingZes () , application.Service . getAccprocessingZes () )
{ internalList . remove ( ic ) ; break; }
{ org.fife.ui.rs.DocumentRange range = new org.fife.ui.rs.DocumentRange ( list , start , end ) ; rangeOccurrences . add ( range ) ; }
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( checkConnection () ) { theView . setVisible ( false ) ; theView = new gomokuCreateAccount () ; theView . setVisible ( true ) ; gomokuCreateAccount = new ca.CreateAccount ( theController , theController , theController ) ; theView . setConnection ( ca ) ; } }
@ java.lang.Deprecated public void addTimeIconToAlarm ( long id ) { com.fasterxml.jackson.databind.node.ObjectNode jsonNotification = play.libs.Json . newObject () ; com.fasterxml.jackson.databind.node.ObjectNode action = play.libs.Json . newObject () ; jsonNotification . put ( "action" , action ) ; action . put ( "action" , "addTime" ) ; jsonNotification . put ( "alarmId" , id ) ; notifyAll ( jsonNotification ) ; }
{ java.util.List < java.lang.String > list = dbc.sample.servlet.c.StingDoc . getAllIds () ; for ( java.lang.String response : list ) { response . getWriter () . print ( ( "Geting lists for I-ds!" + ( response . getWriter () ) ) ) ; } }
{ super . update () ; if ( world . isRemote () ) return; if ( tickInputs ( 0 ) ) process () ; if ( tickAspects () ) process () ; if ( tickAspects () ) process () ; }
{ java.lang.String name = userInput . getText () . toString () ; name = name . replace ( "-" , "-" ) ; if ( ! ( com.deeps.neworldsuntinletga.deeps.Utils . stringOrIsNull ( name ) ) ) { com.deeps.neworldsuntinletga.tryv1.ConfigFile f = new com.deeps.teworldsuntinletga.tryv1.ConfigFile () ; f . setDeviceName ( "invalid" ) ; this . toast ( f ) ; } else { com.deeps.neworldsuntinletga.tryv1.Utils . save ( this , name , new com.deeps.neworldsuntinletga.device.Device () ) ; } }
public double getMaxHitpointsStamina () { return ( ( double ) ( java.lang.Math . ceil ( ( ( ( double ) ( this . getWeight () ) ) * ( ( double ) ( this . getToughness () ) ) ) ) ) / 50 ; }
{ customListViewValuesArr . add ( new com.example.nguyennam.financialbook.model.Record ( getResources () . getString ( R.string.ExpenseSpinnerDescription ) , getResources () . getString ( R.string.ExpenseListViewDescription ) ) ) ; new com.example.nguyennam.financialbook.model.Record ( getResources () . getString ( R.string.RecordDescriptionIncome ) , getResources () . getString ( R.string.TransferDescription ) ) . setListValues ( getResources () . getString ( R.string.TransferDescription ) ) ; }
{ io.realm.Realm realm = io.realm.RealmInstance . getDefaultInstance () ; long id = realm . where ( com.liscarrese.clopecounter.model.Jour . class ) . maximumInt () ; com.liscarrese.clopecounter.model.Jour jour = new com.liscarrese.clopecounter.model.Jour () ; jour . setId ( ( id - 1 ) ) ; return jour ; }
createdTeam = true
{ com.sonicether.sound.physics.SoundPhysics.loffFactor . set ( Config.global.loffFactor , 1.0F ) ; com.sonicether.sound.physics.SoundPhysics.verbResonicParams = com.sonicether.sound.physics.SoundPhysics.verbResonicParams . get ( Config.AllowingDistance , 1.0F ) ; com.sonicether.sound.physics.SoundPhysics.verbResonicParams = com.sonicether.sound.physics.SoundPhysics.verbResonicParams . get ( Config.AllowanceDistance , 1.0F ) ; com.sonicether.sound.physics.SoundPhysics.verbResonicParams . set ( com.sonicether.sound.physics.SoundPhysics.resonicParams , com.sonicether.sound.physics.SoundPhysics.resonicParams ) ; com.sonicether.sound.physics.SoundPhysics.verbResonicParams . set ( com.sonicether.sound.physics.SoundPhysics.resonicParams , com.sonicether.sound.physics.SoundPhysics.resonicParams ) ; }
{ java.util.Optional < com.ind form.thinking.traudownitor.game.Effect > existingEffect = effectRepository . findByType ( type ) ; if ( existingEffect . isPresent () ) { effectRepository . delete ( existingEffect ) ; effectRepository . save ( effect ) ; } else { effectService . put ( type , com.indm.thinking.traitor.game.Effects . cast ( effect ) ) ; } return effectRepository . save ( effect ) ; }
@ org.osgi.service.annotations.Activate public void start ( org.osgi.framework.BundleContext bundleContext ) throws java.lang.Exception { org.wso2.carbon.internal.DataBundleContextHolder . getInstance () . setBundleContext ( bundleContext ) ; org.wso2.carbon.kernel.config.CarbonRuntimeProvider configProvider = new org.wso2.carbon.kernel.config.CarbonRuntimeProvider () ; org.wso2.carbon.kernel.internal.CarbonRuntimeProvider bundleContext = org.wso2.carbon.kernel.internal.CarbonRuntimeProvider . createCarbonRuntimeProvider ( org.wso2.carbon.kernel.config.CarbonRuntimeProvider . class . getName () , carbonProvider , null ) ; bundleContext . registerService ( org.wso2.carbon.kernel.CarbonRuntimeProvider . class . getName () , carbonRuntimeProvider ) ; }
{ final java.lang.String text = new java.lang.String ( chr . substring ( start , ( ( chr . length () ) + io.binkstand.scribble.rules.jcr.util.XMLContentHandler.LOGXML ) ) . trim () ; final java.lang.String text = trimmed . trim () ; if ( ! ( text . isEmpty () ) ) { io.binkstand.scribble.rules.jcr.util.XMLContentHandler.LOGXML . info ( "{}: '{}'" , text ) ; } this . trimmedStack . push ( trimmed ) ; io.binkstand.scribble.rules.jcr.util.XMLContentHandler.LOGXML . info ( "{}: '{}'" , text ) ; }
{ int lastPos = getPosition () ; super . add ( to , super . remove ( from ) ) ; notifyChanged () ; if ( lastPos == fromPosition ) { mObservable . moveToPosition ( fromPosition ) ; } }
if ( ( resumption.Token ) == null ) { finished = true ; }
{ org.eclipse.emf.common.util.EList < java.lang.String > images = api . listAvailableImages () ; if ( ! ( listImageICE . contains ( baseImage ) ) ) { console . print ( ( ( baseImage + " not found from results..." ) + ( api . pull ( baseImage ) ) ) ) ; if ( ! ( baseImageICE . contains ( baseImage ) ) ) { console . print ( "Sshing api..." ) ; } } else { baseImageICE . print ( baseImage ) ; } }
{ com.google.code.tv.model.File.Episode retval = com.google.code.tv.controller.TV . parseInput ( test.inputFilename ) ; assertEquals ( test.inputName , retval . getShowInput () ) ; assertEquals ( test.inputName , java.lang.Integer . parseInt ( retval . getSeasonInput () ) ) ; }
lm . getLatitude ()
public < T > java.lang.Object getTable ( java.lang.Object classObject , java.lang.String fieldName ) throws org.wso2.carbon.config.ConfigurationException { java.lang.reflect.Field field = getClass ( fieldName , fieldName ) ; try { return classField . get ( classObject ) ; } catch ( java.lang.IllegalAccessException e ) { throw new org.wso2.carbon.config.ConfigurationException ( java.util.Locale.ENGLISH , java.lang.String . format ( "Error in class for class %s" , fieldName , e ) ) ; } }
{ android.view.View child = getChildAt ( ( ( getChildCount () ) - 1 ) ) ; child . setOnTouchListener ( null ) ; child . setX ( 0 ) ; child . setY ( 0 ) ; removeRotation ( lastView ) ; childView = child ; if ( ( ( event . getChildCount () ) <= 0 ) && ( ( event . getChildCount () ) <= 0 ) ) { cards . remove ( 0 ) ; } }
{ io.pellemango.client.FileVO file = ( ( io.pellemango.client.FileVO ) ( getValue () ) ) ; if ( file != null ) { file . setValue ( value ) ; } ( ( io.pellemango.client.FileVO ) ( file ) ) . setValue ( value ) ; }
fluidStack = new java.util.ArrayList ( buf . getFluid () )
( generateRatio () )
if ( aip == ( org.roda.wui.client.common.Aactions.IPActions.NO_IPA_OBJECT_IPA ) ) { canActip = org.roda.wui.client.common.Aactions.IPActions.NO_IPA_ACTION_ALSSM_ACTION . contains ( action ) ; } else if ( aip == ( org.roda.wui.client.common.Aactions.IPActions.NO_IPA_SINGLE_IPA ) ) { canActip = org.roda.wui.client.common.Aactions.IPActions.ALSSA_SINGLE_IPA_ACTION . contains ( action ) ; } else { canActip = org.roda.wui.client.common.Aactions.IPActions.ALSSA_SINGLE_IPA_ACTION . contains ( action ) ; }
public void enqueue ( com.onworks.stream.line.streams.notification.Notifier notifier , com.onworks.stream.line.streams.notification.Notification notification ) { com.onworks.stream.line.streams.notification.NotificationQueueNotificationHandler task = new com.onworks.stream.line.streams.notification.NotificationQueueNotificationHandler ( notification ) ; java.util.concurrent.Pair < ? extends org.apache.commons.lang3.tuple.Pair < ? , ? > > future = executorService . submit ( task ) ; notifier . put ( task . getId () , task ) ; }
{Inner . setForeground ( java.awt.Color.red ) ; return; }
public void run () { while ( ( ! ( isDisposed ) ) && ( ( queue . size () ) == 0 ) ) { try { java.lang.Thread . sleep ( 200 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } javafx.scene.media.MediaPlayer mediaPlayer = queue . poll () ; mediaPlayer . setOnEndOfMedia ( ( - > { isPlaying = false ; } ) ) ; mediaPlayer . shutdown () ; }
( ( props [ 0 ] ) != null ) && ( props [ 0 ] . name () . equals ( "mappings" ) )
{ java.util.Set < io.gravitee.repository.management.model.Application > apps = applicationRepository . findByName ( "app-search1" ) ; assertNotNull ( apps ) ; assertEquals ( 1 , apps . size () ) ; assertEquals ( "app-search1" , apps . iterator () . next () . getId () ) ; }
{ if ( f.name . equals ( user ) ) { return true ; } }
{ for ( Recommender.User user : userList ) { try { java.io.FileOutputStream fileOut = new java.io.FileOutputStream ( "ser" ) ; java.io.ObjectOutputStream out = new java.io.ObjectOutputStream ( fileOut ) ; out . writeObject ( o ) ; out . close () ; fileOut . close () ; } catch ( java.io.IOException i ) { java.lang.System.out . println ( "This Book is saved" ) ; i . printStackTrace () ; } } return true ; }
if ( e == null ) { android.util.Log . d ( "test" , "We've got data in M." ) ; data . setImage ( data ) ; pb . setProgress ( 60 ) ; customAdapter = new com.epferran.box.views.InboxAdapter ( getActivity () , R.layout.custom_in_views_row , customAdapter ) ; setListAdapter ( messages ) ; } else {}
catch ( java.lang.Throwable e ) { com.kps.pms.service.FileServiceImpl.LOGGER . info ( "Something went wrong!!" ) ; }
hashFringe . values () . toArray ( new MaRzAgent.SuffixNode [ 0 ] )
if ( ( lastJoke ) != null ) { while ( ( joke . equals ( lastJoke ) ) && ( retryCount < ( com.udacity.gradle.bigger.MainActivity.RETRY_LIMIT ) ) ) { timber.log.Timber . d ( "Got same material, fresh material!" ) ; retryCount ++ ; } }
{ messaging . convertAndSend ( "/topic/update" , indent ) ; return true ; }
findSourceFieldByName ( byArgument , enrichmentField )
{ this . network = network ; this . network . addSlave ( this ) ; this . connectedOfStateChange = true ; world . notifyNeighbors ( pos , getBlockType () ) ; if ( canSendConnectivityUpdate () ) { refinedstorage.RefinedStorageUtils . updateBlock ( world , pos ) ; } }
{ android.content.ContentValues values = new android.content.ContentValues () ; values . put ( com.linbitedev.sambite.rest.database.DatabaseClient.COLUMN_ORDER_ID , orderId ) ; values . put ( com.linbitedev.sambite.rest.database.DatabaseClient.COLUMN_ORDER_TOTAL_ORDER , totalOrder ) ; db . insert ( com.linbitedev.sambite.rest.database.DatabaseClient.TABLE_RECORD , null , values ) ; db . close () ; }
return super . clone ( node ) ;
{ int status = org.dataaccesserion.Migrator.STATUS_INIT ; try { status = org.dataaccesserion.Migrator.STATUS_RUNNING ; copyDirectory ( source , destination ) ; } catch ( java.io.FileNotFoundException ex ) { setStatus ( org.dataaccesserion.Migrator.STATUS_FAILURE ) ; return ex . getLocalizedMessage () ; } catch ( java.lang.Exception ex ) { setStatus ( ex . getLocalizedMessage () ) ; return null ; } return source . run ( destination ) ; }
return context . getString ( R.string.run_label , mRunIndex ) . getRun () ;
{ android.view.View v = inflater . inflate ( R.layout.fragment_wish_list_item , container , false ) ; mListView = ( ( android.widget.ListView ) ( v . findViewById ( android.R.id.listR.id.list_MULTIPlist_MODE ) ) ) ; mListView . setChoiceMode ( com.ghishstios.android.list.ui.WishChoiceDetailFragment.WishChoiceListener.MODAL_MODE_MULTIPLE ) ; multiDataListener = new com.ghishstios.android.list.ui.WishChoiceDetailFragment.WishChoiceListener () ; return v ; }
{ double []CollectionArr = new double [ valArr.length ] ; if ( ( valArr.length ) <= 0 ) java.lang.System.out . println ( "ERROR: is null" ) ; for ( int i = 0 ; i < ( valArr.length ) ; i ++ ) { valArr [ i ] = valArr [ i ] ; } return valArr ; }
{ android.util.Log . i ( "INFO" , "firstClass" ) ; if ( ( resClass ) == 0 ) { resClass = lRef ; } if ( ( resClass ) == 0 ) { resClass = lRef ; } if ( ( resClass ) == 0 ) { resClass = lRef ; } return resClass ; }
com.intellij.perl.plugin.PerlParser . parseAllSources ( com.intellij.perl.plugin.InternalIndicator.module , progress )
mCachedCache . remove ( targetUrl )
java.lang.String . format ( "%s: pop(Subject) from: %s) %s" , getCurrentSubject () , java.lang.Thread . currentThread () . getIdStack () , org.exist.trace.Stack . top () )
new com.marc.collections.SkipList ( 4 )
{ int count = 0 ; lowerIndex = 0 ; for ( lowerIndex = 0 ; lowerIndex < ( histogram.length ) ; lowerIndex ++ ) { if ( ( ( lowerIndex ) >= ( histogram [ upperIndex ] ) ) { break; } if ( ( upperIndex ) < ( histogram.length ) ) { lowerIndex += upperIndex ; count ++ ; } } if ( ( upperIndex ) >= ( histogram [ upperIndex ] ) ) { ( upperIndex ) ++ ; break; } }
paintView . getTool ()
validateInput ( SjidesTextField.jidesTextField , ( - 1 ) )
{ super . onCreate ( bundle ) ; setContentView ( R.layout.the_after_game ) ; android.content.Intent intent = getIntent () ; levelFromGame = ( ( com.teamith.puzzlez.game.model.LevelFromGameActivity ) ( intent . getSerializableExtra ( "Level" ) ) ) ; if ( ( actions ) != null ) { actions . createLevelComponents () ; } setContentView ( R.layout.the_after_game ) ; }
result . getLong ( "accessToken" )
q . remove ()
new edu.vt.ece64.agents.Robot ( id , state , java.lang.String . valueOf ( agents . size () ) , pos . getX () , pos . getY () )
{ levels [ i ] = new com.darkhouse.gencedef.Model.LevelButton ( ( ( firstIntButton ) + ( com.darkhouse.gencedef.GenceDef . getInstance () . userAvailable () ) ) ) ; if ( ! ( levels [ i ] . getLevel () ) ) { levels [ i ] . lock () ; } else { levels [ i ] . un () ; } }
if ( ( end ) == null ) { if ( ( limit ) == 0 ) { return repository . findMessagesByBoundTime ( channelName , start , end ) ; } else { return repository . findMessagesByBoundedMessagesLimit ( channelName , start , end ) ; } } else { return repository . findMessagesByChannelName ( channelName , limit ) ; }
( uConversation.name )
public java.lang.String getJoinPointClassName ( final org.aspectj.lang.ProceedingJoinPoint currentJoinPoint ) { java.lang.String className = null ; try { className = currentJoinPoint . getSignature () . toString () ; } catch ( final java.lang.Exception e ) { className = e . getStackTrace () ; java.lang.System.out . println ( e . getMessage () ) ; } return className ; }
if ( ( sn ) == ( node.node ) ) { addSlave ( sn ) ; }
{ java.lang.System.out . println ( "\n\n" ) ; java.lang.System.out . println ( "*** Graceful producer" ) ; java.lang.System.out . println ( "*** Graceful producer" ) ; x . shutdown () ; java.lang.System.out . println ( "**** ** *********" ) ; x . shutdown () ; java.lang.System.out . println ( "**** *********" ) ; java.lang.System.out . println ( "**** Reging proxy" ) ; java.lang.System . exit ( 0 ) ; }
{ if ( ( ( currentScene ) != null ) && ( ( currentMap ) == null ) ) currentScene . stop () ; try { java.lang.Thread . sleep ( 2000 ) ; } catch ( java.lang.InterruptedException e ) {} currentScene = battle ; battle . start ( currentScene ) ; }
<EMPTY>
{ initVertex ( mShader , mShaderFragment.AmbientColor ) ; mLights . refresh () ; if ( ( mLights ) != null ) { for ( com.magg.plibics.view.Light l : mLights ) { restore ( l ) ; } } for ( com.magg.plibics.view.Surface s : mSururfaces ) { restore ( s ) ; } }
context . preExecuteUnder ( this , block , args )
private static edu.byu.nlp.rowc.dsourcing.MultiAnnModelBuilders.MultiAnnModelBuilder initWithInitBuilder ( edu.byu.nlp.rowc.dsourcing.MultiAnnModelBuilders , edu.byu.nlp.rowc.dsourcing.MultiAnnModelBuilder builder , edu.byu.nlp.rowc.dsourcing.data.types.DatasetData data , edu.byu.nlp.rowc.dsourcing.RandomAssignmentors ) { edu.byu.nlp.rowc.dsourcing.MultiAnnModel rnd = new edu.byu.nlp.rowc.dsourcing.MultiAnnModel (Initializer , data , data ) ; edu.byu.nlp.rowc.dsourcing.MultiAnnModel rnd = new edu.byu.nlp.rowc.dsourcing.RandomAssignmentors ( rnd , mInitialization , true ) ; return builder . cross ( rnd , mInitialization ) ; }
holder.ivRemove . setTag ( position )
{ MainActivity.isKcaServiceOn = false ; com.kantest1.kcanotify.KcaService.isAccessed = false ; if ( ( mScheduler ) != null ) { mScheduler . shutdown () ; mScheduler = null ; } mediaPlayer . release () ; nifi = null ; mediaPlayer . cancelAllDeck () ; currentPort = null ; viewDeck = null ; }
java.lang.Object _call ( railo.runtime.PageContext pc , int access , railo.runtime.type.CollectionKey key , railo.runtime.type.StructArgs named , super , java.lang.Object [] args , railo.runtime.exp.PageAccess member ) throws railo.runtime.component.MemberException { if ( key instanceof railo.runtime.type.AccessMember ) { return getMember ( ( ( railo.runtime.type.AccessMember ) ( key ) ) , key , access , super , member , key , named , false ) ; } return _DFUDFUDFU ( key , key , member ) ; }
new com.kacper.popularmovies.FetchMovieVolley ( this ) . getRequest ( this )
if ( ( app . allowStylebar () ) && ( ( titleBarPanel ) != null ) ) { app . setWidgetSize ( titleBarPanel , ( value ? 0 : 0 ) ) ; titleBarPanel . setStyleName ( "open-" , value ) ; setLongStyleBarOnResize () ; }
{ android.support.v4.app.FragmentManager manager = getSupportFragmentManager () ; android.support.v4.app.Logging . enableDebug ( true ) . setCustomAnimations ( R.anim.category_in_right , R.anim.category_out_left_fragment , R.anim.category_in_left_fragment , R.anim.category_out_right ) . hide () ; getSupportFragmentManager () . beginTransaction () . replace ( R.id.main_fragment_container , fragment ) . addToBackStack ( null ) . commit () ; }
net.minecraftforge.fml.client.FMLClientHandler . instance () . connect ( currentScreenData , server )
seg = new org.apache.drill.common.expression.PathSegment.ArraySegment ( index )
{ org.openforis.idm.model.Attribute < ? > attribute = performAddAttribute ( attribute , attribute , attributeName , value , false ) ; parentEntity . setApprovedValue ( attribute , attributeName , false ) ; applyInitialValue ( attribute , true ) ; org.openforis.collect.model.MapChangeMap changeMap = new org.openforis.collect.model.MapChangeMap () ; changeMap . addAttribute ( attribute , changeMap ) ; return changeMap ; }
for ( graph.undirectedGraph.UGNode n : adjList ) n . print () ;
{ for ( int currentX = 0 ; currentY < ( innerTiles.length ) ; currentX ++ ) { for ( int currentY = 0 ; currentY < ( innerTiles [ 0 ] . length ) ; currentY ++ ) { batch [ currentX ] [ currentY ] . render ( batch ) ; } } super . render ( batch ) ; }
if ( ( armor > 0 ) && ( armor < 20 ) ) { damage = DAMAGE ; } else { damage = ( DAMAGE ) - armor ; }
public static java.lang.String random ( int length ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; do { builder . append ( se.upy58r.http.Event.BASE_BASE ) ; builder . append ( java.lang.Math . abs ( se.upy58r.http.Event.BASE__5 ) ) ; } while ( ( builder . length () ) < ( se.upy58r.http.Event.BASE_BASE.length ) ) ; return builder . toString () ; }
themeable.Themeable.bound = true
@ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/getMore/{id}/{type}/{id}" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response getMore_ ( @ javax.ws.rs.PathParam ( value = "type" ) java.lang.String id ) throws java.lang.Exception { io.horks.hop.project.common.hops.CacheHopsDTO info = projFacade . findMore ( id ) ; if ( info == null ) { return javax.ws.rs.core.Response . cssInfo ( Response.Status.OK ) ; } else if ( info . equals ( "type" ) ) { io.horks.hop.project.common.hops.CachehopsDTO proj = info . get ( id ) ; return new io.horks.hop.project.common.hops.CachehopsDTO ( proj , proj ) ; } else { return javax.ws.rs.core.Response . correctMoreInfo ( ( - 1 ) ) ; } }
return java.lang.Math . log ( ( ( documents . size () ) / ( count ) ) ) ;
public static java.lang.String hmacSHA256 ( java.lang.String secret , java.lang.String message ) { java.lang.String hash = null ; try { javax.crypto.Mac sha256 = javax.crypto.Mac . getInstance ( "HmacSHA256" ) ; javax.crypto.spec.SecretKeySpec secret = new javax.crypto.spec.SecretKeySpec ( secret . getBytes () , "HmacSHA256" ) ; secret . init ( Base64.HMAC_SHA256 ) ; } catch ( java.lang.SecurityException e ) { android.util.Log . e ( keel.co.interobizz.encryption.api.BaseApiBase64.TAG , "Error" , e ) ; } return new java.lang.String ( secret . doFinal () ) ; }
return start . get ( 0 ) ;
switch ( v . getId () ) { case R.id.btSingleImageGallery : pickSingleImage () ; break; case R.id.btMultipleImages : pickMultipleImages () ; break; case R.id.btCamera : takeCameraAndPictureCrop () ; break; case R.id.btSingleImageCrop : takeSingleImageAndPictureCrop () ; break; }
org.skyscreamer.json.assert.JSONAssert . assertEquals ( expectedSchema , uiSchemaJson . toString () )
if ( ( i < ( props . size () ) ) && ( i >= ( props . get ( i ) . getLinkedId () ) ) ) quant . set ( java.lang.String . getSourceId () ) ;
{ it.trade.android.sdk.model.TradeItBrokerParcelable linkedBroker = linkedBroker . getBroker ( 0 ) ; if ( linkedBroker != null ) { linkedBroker . refreshBalances ( new it.trade.android.sdk.model.TradeItCompletionCallBack () { @ java.lang.Override public void onBroancesFinished () { goToLinkedBroancesActivity () ; } } ) ; } }
{ manager . register ( "NullOp" , com.qualcomm.ftcrobotcontroller.opmodes.NullOp . class ) ; manager . register ( "MatrixK9TeleOp" , com.qualcomm.ftcrobotcontroller.opmodes.MatrixK9TeleOp . class ) ; manager . register ( "K9TeleOp" , com.qualcomm.ftcrobotcontroller.opmodes.PushBotK9TeleOp . class ) ; manager . register ( "PushBotAuto" , com.qualcomm.ftcrobotcontroller.opmodes.PushBotAuto . class ) ; }
{ if ( ( ( index < 0 ) || ( index >= ( size ) ) ) || ( index >= ( size ) ) ) { throw new java.lang.IndexOutOfBoundsException ( ( ( ( ( "Index " + index ) + " isn't in range " ) + ( size ) ) + ")" ) ) ; } for ( int i = 0 ; i < index ; i ++ ) { item = item.item ; } return item ; }
private void expandType () { java.lang.String type = getType () . getRelatingObject () ; if ( ( getRelatingObject () ) != null ) { type += ( ( getRelatingObject () . getType () ) + "." ) + ( getRelatingObject () . getSubtype () ) ; } if ( ( getSubtype () ) != null ) { type += "." + ( getSubtype () ) ; } setType ( type ) ; }
public java.lang.String listToConfig ( java.util.ArrayList < mars.client.Module > list ) { java.lang.StringBuilder aStringBuilder = new java.lang.StringBuilder () ; aStringBuilder . append ( "[" ) ; for ( int i = 0 ; i < ( list . size () ) ; i ++ ) { aStringBuilder . append ( list . get ( i ) ) . append ( "," ) ; } aStringBuilder . deleteCharAt ( aStringBuilder . length () ) ; return aStringBuilder . toString () ; }
return true ;
if ( ( kv.mMain.PageIndex ) >= ( pageIndex ) ) return;
de.dmxcontrol.widget.MeasureSpec . makeMeasureSpec ( de.dmxcontrol.widget.MeasureSpec . getMode ( sizeHeight , widthMeasureSpec ) , heightMeasureSpec )
public static void showMessage ( android.content.Context context , java.lang.String message , android.content.DialogInterface.OnClickListener okListener ) { android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder ( context ) ; builder . setMessage ( message ) . setPositiveButton ( R.string.ok , okListener ) . show () ; builder . show () ; }
if ( ( ( mFatalystSettings ) == null ) || ( ! ( mCatalystSettings . isAnimationFpsEnabled () ) ) ) { return; }
{ references = getServiceReferences ( clazz , null ) ; if ( references == null ) { return null ; } java.util.Arrays . sort ( references ) ; return ( references.length ) - 1 ; }
@ java.lang.Override public void run () { try { java.lang.Object result = call . call () . toArray () ; sendCallback ( params , null , result , callback ) ; } catch ( java.lang.Exception e ) { callback . error ( e . getMessage () , e ) ; } }
{ if ( ( nextStep ) == null ) { return; } int next = ( ( status . ordinal () ) + 1 ) + ( ch.epfl.airfl.plan.PlanMode . class . length ) ; if ( next >= ( ch.epfl.airfl.plan.PlanMode . class . length ) ) { ch.epfl.airfl.plan.MenuMode . toStep ( next ) ; } else { ch.epfl.airfl.plan.MenuMode . toStep () ; } }
@ org.junit.Test @ org.junit.Test public void removed ( ) throws java.io.IOException { org.gbif.occurrence.api.model.Occurrence occurrence = persistenceService . getOccurrence ( org.gbif.occurrence.persistence.PersistenceServiceImplTest.KEYKEY ) ; assertOccurrence occurrence ( occurrence ) ; assertEquals ( java.lang.Integer . parseInt ( occurrence . getId () ) , org.gbif.occurrence.persistence.PersistenceServiceImplTest.KEYKEYKEY ) ; assertEquals ( 0 , occurrence . size () ) ; }
( ( ( startOfWindow . compareTo ( other ) ) >= 0 ) && ( ( startOfWindow . compareTo ( other ) ) < 0 ) ) && ( ( endOf . compareTo ( other ) ) >= 0 )
{ trace ( "" ) ; }
new java.lang.RuntimeException ( e )
{ if ( ( event.sensor . getType () ) == ( android.hardware.Sensor.TYPE_ACCELEROMETER ) ) { float rawX = event.values [ 0 ] ; float normalizedX = ( ( rawX * 2.0F ) - ( rawX * ( spaceVelocity ) ) ) - ( spaceVelocity ) ; event . setXShipX ( normalizedX ) ; } }
for ( uk.ac.bb.src.maciso.core.data.Detailed current = getParent () . startSample ( current ) ; if ( current != null ) { uk.ac.bb.src.maciso.core.util.LimsUtils . deproParent ( current . getParentClass () ) ; if ( target . isInstance ( current ) ) { return current ; } }
public static void spannableEmoticonFromFile ( android.content.Context context , java.lang.String content_text , java.lang.StringBuilder spannable ) { android.text.SpannableStringBuilder contentSpannableStringBuilder = new android.text.SpannableStringBuilder ( content_text ) ; android.text.Spannable spannable = com.android.jijle.EmojiDisplay . getContextFromFilter ( spannable , spannable , spannable ) ; tv_content . setText ( spannable . getFontHeight () ) ; tv_content . setText ( spannable . getTextHeight () ) ; }
{ safeCheck () ; if ( keyContainer . isEmpty () ) return null ; T tmp = null ; java.lang.Long key = keyContainer . get ( 0 ) ; net.vicp.lylab.core.pool.SequencePool . remove key ( key ) ; synchronized ( tmp ) { tmp = tmp . remove ( 0 ) ; } return key ; }
{ if ( ( cveDB ) == null ) { return; } final java.lang.String finalName = cve.nul.Version . getName () ; if ( prevVulnVersionMap . containsKey ( cveName ) ) { final java.util.List < org.owasp.dependencyulner.dependency.Vulnable >Software = prevVulnableMap . get ( cveName ) ; for ( org.owasp.dependencyulner.dependency.Vulnable vs :Software ) { vs . update ( vs , cve ) ; } } cveDB . update ( prevVulnable ) ; }
{ if ( isActive ) { physicsCalibration () ; paintShadowTranslation ( new com.metaio.sdk.jni.ShadowVector3d ( geometry . getTranslation () . getX () , geometry . getTranslation () . getY () , 0.0F ) ) ; } if ( ( geometry . getTranslation () . getZ () ) <= 0.0F ) { myPlayer . getPlayerId () ; } }
{ if ( isInput_Frenheit ) { mTextViewResult_TextView . setText ( ( ( ( ( course.labs.permissions.app.TemperatureConverterActivity.STATE_SICELMENT_CONSTRENMENT_HITRENMENT ) + ( course.labs.permissions.app.TemperatureConverterActivity.STATE_HESIITRENMENT_CONSTRENMENT_HITRENMENT ) ) + ( inputTextView . setText ( ( ( course.labs.permissions.app.TemperatureConverterActivity.STATE_HESIITRENMENT_CONSTRENMENT_HITRENMENT ) + ( inputTextView . toString () ) ) ) ) + ( inputTextView . setText ( ( ( course.labs.permissions.app.TemperatureConverterActivity.STATE_HESICELMENT_CONSTRENMENT_HITRENMENT_HUS ) + ( inputTextView . toString () ) ) ) ) ) ) ; } }
{ java.text.SimpleDateFormat simpleDateFormat = new java.text.SimpleDateFormat ( "kk" , java.util.Locale.US ) ; java.lang.String currentHours = simpleDateFormat . format ( m . getTime () ) ; if ( currentHours . contains ( "0" ) ) { return java.lang.Integer . valueOf ( "0" ) ; } else { return java.lang.Integer . valueOf ( currentHours . replace ( "0" , "0" ) ) ; } }
new authhci.adscanner.controller.GPSTracker ( this )
scheduleDetailIntent . putExtra ( "schedule_id" , mMessagesData . get ( position ) . getScheduleList () . getId () ) ;
{ super . CreateSpecies () ; for ( int i = 0 ; i < number ; i ++ ) { GetPositionsAndTypes () ; } for ( int i = 0 ; i < ( numberSpeciesList . size () ) ; i ++ ) { GetIieSpecies ( ( ( java.util.List < species.IieSpecies > ) (serverFactory . GetSpecies ( typeSpecies . get ( i ) ) ) ) , typeSpecies ) ; } }
{ org.springframework.orm.jpa.vendor.HibernateHibernateJpaAdapter factory = new org.springframework.orm.jpa.vendor.HibernateJpaAdapter () ; factory . setGenerateDdl ( true ) ; factory . setShowSql ( false ) ; org.springframework.orm.jpa.EntityManagerFactory createBeanContainer () ; factory . setDataSource ( new org.springframework.orm.jpa.JpaAdapter () ) ; factory . setAdditionalProperties ( factory . getObjectToProperties () ) ; return factory ; }
public static void response ( java.lang.String name , java.lang.String s ) { if ( com.marketminecraft.util.Log.market . log ( com.marketminecraft.util.Log.market . log ( " " ) ) ) com.marketminecraft.util.Log . log ( ( ( "Market - " + name ) + " " ) ) ; Minecraft----------------------------s . Debug ( com.marketminecraft.util.Log.market . log ( ( "----------------------------------- " + s ) ) ) ; }
java.util.Set < java.lang.Integer > numbers = new java.util.HashSet < java.lang.Integer > () ;
{ mobymagic.com.javalagos.utils.LogUtils . d ( mobymagic.com.javalagos.ui.userslist.BaseUserListFragment.LOG_TAG , "Showing empty" ) ; mPlaceHolderView . getView () . setVisibility ( View.GONE ) ; mProgressErrorView . setVisibility ( View.VISIBLE ) ; mPlaceHolderView . setVisibility ( View.GONE ) ; }
new client.Client ( tcpClient , response , true )
{ java.lang.String prefix = team . getColorPrefix () ; java.lang.String prefixSplit = prefix . substring ( 4 ) ; try { prefixSplit = prefix . substring ( 4 ) ; } catch ( java.lang.NullPointerException e ) { prefixSplit = "" ; } catch ( java.lang.IndexOutOfBoundsException e ) { prefixSplit = "" ; } newTeam . setName ( ( prefix + " " ) ) ; }
public static java.lang.CharSequence applyTextToText ( java.lang.CharSequence charSequence , android.graphics.Typeface typnable , int start , int end ) { android.text.Spannable spannable ; if ( spanSequence instanceof android.text.Spannable ) { spannable = ( ( android.text.Spannable ) ( spanSpan ) ) ; } else { spannable = android.text.Spannable . valueOf ( ( ( android.text.Spannable ) ( spanSpan ) ) ) ; } return spannable ; }
{ if ( ( node . getReceiver () ) != null ) { this . traverseReceiver ( node . getReceiver () ) ; } if ( ( node . getArgs () ) != null ) { this . traverseArgs ( node . getArgs () ) ; } return visitGeneral ( node ) ; }
{ dragging = false ; if ( ( e . getButton () ) == ( java.awt.event.MouseEvent.BUTTON1 ) ) { java.lang.System.out . println ( "released controller" ) ; command = new controller.Command ( e . initTravel ( currentPos , e . getX () , e . getY () , e . getX () , e . getID () ) ) ; } storeAndExecute ( cmd , currentPos , dragging ) ; }
{ if ( ( this ) == o ) return true ; if ( ( o == null ) || ( ( getClass () ) != ( o . getClass () ) ) ) return false ; net.osmand.plus.quickaction.QuickAction.QuickAction action = ( ( net.osmand.plus.quickaction.QuickAction.QuickAction ) ( o ) ) ; return ( id ) == ( action.type ) ; }
new me.noize.chemistry.io.TimeRange ( this . getStart () , this . end )
{ int prog = seekBar . getProgress () ; this . progth = ( prog + 1 ) + 1 ; java.lang.System.out . println ( ( ( ( R.string.recbap ) + "<Html <b>" ) + ( res . getString ( R.string.recbap ) ) ) ) ; hotb . setText ( ( ( ( "<Word>" + prog ) + "</b>" ) + "</b>" ) ) ; }
return destNotification ;
{ java.lang.String toRet = "" ; wordElement = lexicon.park.WordElement.UNNOLounical . get ( nmaem ) ; if ( inflection . contains ( "def" ) ) { if ( inflection . contains ( "plupllected" ) ) { ballWord = new nmaemlected.park.WordElement ( wordElement ) ; } } if ( ( nmaemlected . length () ) != 0 ) { ballWord = toRet ; } return ballWord ; }
public void createIndexForPost () { try { com.mongodb.DBObject textIndex = new com.mongodb.DBObject ( "message" , "text" ) ; textIndex . put ( "link" , "text" ) ; textIndex . put ( "name" , "post" ) ; } catch ( java.lang.Exception e ) { com.mop.opm.Logger . debug ( "error on bootstrap index" ) ; e . getMessage () . debug ( "error" ) ; } }
{ int action = 0 ; setHorizontalVelocity ( 0.0 ) ; java.util.Random rand = new java.util.Random () ; java.lang.System.out . println ( rand . nextDouble () ) ; action = ( ( rand . nextDouble () ) + 1.0 ) * 3.0 ; int randomNum = 0.0 ; int randomNum = rand . nextInt ( 4 ) ; if ( randomNum == 0 ) randomNum = 1 ; if ( randomNum == 1 ) action = 2 ; if ( randomNum == 2 ) action = 3 ; return action ; }
simSCORE . compare ( simResolution )
{ if ( null != ( k . startsWith ( key ) ) ) { fireMatch ( key , b ) ; } if ( key . endsWith ( k.PREFIX ) ) { fireMatch ( key , fireMatch ) ; } }
if ( blankX >= ( ( this . dimensions () ) - 1 ) ) { throw new java.lang.IndexOutOfBoundsException ( "Can not swap right column most right" ) ; }
{ break; }
activityMapper . generateFactsForFaCatch ( faAct )
{ byte [] id = xaurora.io.IDGenerator . instanceOfID () . Generate ( xaurora.communication.ChromeServer . getURL ( text , xaurora.communication.ChromeServer.TYPE_FULL_TEXT ) ) . createDataIO () ; if ( ( xaurora.io.DataIO . instanceOf ( java.lang.String . valueOf ( id ) ) ) && ( ( text . getBytes () ) != null ) ) { text . getBytes () . outputFile ( java.lang.String . valueOf ( id ) . getBytes () , text . getBytes () ) ; } }
{ java.lang.String str = "Symbol Table:" ; list = new java.lang.StringBuffer () ; for ( int i = - 1 ; i >= 0 ; i -- ) { str += ( "Ninglevel level:\n" + ( tables [ i ] ) ) + ":\n" ; } str += str . toString () ; return str . toString () ; }
public void dataInit () { for ( int i = 0 ; i < 3 ; i ++ ) { java.util.ArrayList < java.lang.Integer > tmp = new java.util.ArrayList < java.lang.Integer > () ; tmp . add ( dataMagnet.Orientation . add ( dataMagnet.yic ) ) ; tmp . add ( dataAccelerate ) ; dataGravity . add ( tmp ) ; dataGravity . add ( tmp ) ; } }
private java.lang.String buildHtmlHeadLink () { final java.lang.StringBuilder html = new java.lang.StringBuilder () ; html . append ( "<link href=\"min/bootstrap/css\".min-theme" ) . append ( NewLine.CRLF ) ; html . append ( "<link href=\"min/bootstrap/css\".min-theme" ) . append ( href ) . append ( "<link href=\"fonts/css\" NewLine=\"fonts/css\" url=\"fonts/link-router\" pages" ) . append ( NewLine.CRLF ) ; html . append ( "<link href=\"fonts/css\" NewLine=\"fonts/link-router\" pages" ) . append ( NewLine.CRLF ) ; return html . toString () ; }
userAdded . add ( in . nextLine () )
{ getMenuInflater () . inflate ( R.menu.activity_main_toolbar , menu ) ; mPathItem.toolbar = menu . findItem ( R.id.main_toolbar_path ) ; mItem.main = menu . findItem ( R.id.main_toolbar_traffic_main ) ; if ( SharedPrefs.SHOW_PATH ) . setIcon ( getSharedBoolean ( R.drawable.ic_traffic_on_variant_24dp ) ) ; if ( mBooleanBoolean ) . setIcon ( getSharedBoolean ( R.drawable.ic_traffic_logber_onCreate_24dp ) ) ; return true ; }
{ if ( ( listen ) == null ) { java.lang.System.out . println ( "Register first!" ) ; return; } java.net.Socket sock = createSocket () ; if ( ! ( sendAndReceive ( sock ) ) ) { try { sock . close () ; } finally { sock . close () ; } } }
{ if ( isTerminated () ) { kernelsToRun . addAll ( finishedKernels ) ; finishedKernels . clear () ; } ( iteration ) ++ ; end = - 1 ; terminatedsToRun = ( ( kernelsToRun . isEmpty () ) && ( runningThreads . isEmpty () ) ) && ( runningThreads . isEmpty () ) ; }
{ java.lang.String value = get ( key ) ; if ( value == null ) { value = put ( key , value ) ; } else { logger . info ( ( ( ( ( "[" + value ) + "]PEND Keycode node:" ) + ( key ) ) + "]:" ) ) ; } }
public static com.gmail.trentech.pjc.core.SQLManager init ( org.spongepowered.api.plugin.PluginContainer plugin ) { if ( ! ( com.gmail.trentech.pjc.core.sql.ManagersManager . containsKey ( plugin . getId () ) ) ) { com.gmail.trentech.pjc.core.sql.ManagersManager sqlManager = new com.gmail.trentech.pjc.core.sql.ManagersManager () ; sqlManager . put ( plugin . getId () , sqlManager ) ; } else { return com.gmail.trentech.pjc.core.sql.ManagersManager . get ( plugin . getId () ) ; } }
{ cz.cuni.mff.d3s.perf.MeasurementEvent . destroySet ( cz.cuni.mff.d3s.perf.BenchmarkEvent.defaultSet ) ; return; }
{ authenticate () ; response = setResourceHeaders ( _client . resource ( requestURI ) ) . type ( MediaType.APPLICATION_JSON ) . get ( com.sun.jersey.api.client.ClientResponse . class ) ; }
{ movePotion = false ; cauld . setTextColor ( android.support.v4.content.ContextCompat . getColor ( context , R.color.colorCorrectGame ) ) ; cauld . setText ( "Correct" ) ; movePotion = false ; new android.os.Handler () . postDelayed ( new java.lang.Runnable () { public void run () { movePotion = false ; } } , 800 ) ; currText += 800 ; }
( Context.LAYOUT_INFLATER_SERVICE . equals ( name ) ) && ( ( com.smartdroid.me47.app.support.SmartCompatActivityService . getSystemService () ) != null )
{ if ( ( largeLights . size () ) > 0 ) { int realLightsCount = getRealLightsCount () ; int sum = 0 ; for ( be.i3m.widgets.LightWidget lightWidget : largeLightWidgets . subList ( 1 , largeLightWidgets . size () ) ) { sum += lightWidget . getValue () ; } } largeLights . get ( 0 ) . setValue ( java.lang.Math . round ( ( sum / realLightsCount ) ) ) ; }
{ com.openshift.client.ApplicationScale scale1 = com.openshift.client.ApplicationScale.NO_SCALE ; com.openshift.client.IStandalone.tr = car1 ; com.openshift.client.query.LatestVersion user = ( ( com.openshift.client.query.LatestVersion ) ( car . getAsVersion () ) ) ; com.openshift.client.Car cartr = new com.openshift.client.AppStandalone ( user ) . getEntity () ; cartr . setInitialUrl ( cartr . getCovingUrl () ) . setName ( scale1 ) . setStand () ; }
{ ( currentReservationNumber ) ++ ; reservationToReservation . put ( currentReservationId , bookingId ) ; return true ; }
{ personalproject.simpleapp.Vector2 sep = boids ( sep ) ; personalproject.simpleapp.Vector2i b = ( ( personalproject.simpleapp.Vector2i ) ( sep ) ) ; coh.app.simpleapp.Vector2i multiWeight = boids ( data . getShes () ) ; multiWeight . apply ( multiWeight ) ; data . getCiion () . apply ( b ) ; }
{ for ( int i = 0 ; i < ( mTracks . size () ) ; i ++ ) { if ( mTracks . get ( i ) . isConnected () ) mTracks . get ( i ) . setConnected ( false ) ; break; } }
{ handler . sendMessage ( player . getNumber () ) ; return; }
{ for ( org.bukkit.command.CommandSender target : targets ) { target . sendMessage ( tag . concat ( line ) ) ; } }
@ java.lang.Override public java.lang.String stringValue ( final msi.gama.runtime.exceptions.IScope scope ) throws msi.gama.runtime.exceptions.GamaRuntimeException { return ( ( ( ( ( ( ( ( ( "sender[message: " + ( data . getSender () ) ) + "; " ) + ( data . getReceivers () ) ) + "; " ) + "; " ) + ( data . getPerexativeName () ) ) + ";]" ) + "]" ; }
{ miniFields . add ( 0 , sectionField . getFields () ) ; for ( org.unicef.rapidreg.forms.Section section : sections ) { for ( org.unicef.rapidreg.forms.Field sectionField : sectionField . getFields () ) { if ( sectionField . isShowOnForm () ) { if ( miniField . isUpload () ) miniFields . add ( sectionField , 0 ) ; } else { miniFields . add ( sectionField ) ; } } } }
public final void setForbidden ( java.lang.String spec1 , java.lang.String spec2 ) { addVariable ( spec1 ) ; spec2 = checkSpec ( spec1 ) ; checkSpec ( spec2 ) ; java.util.Set < edu.cmu.tetrad.data.MyKnowledge > f1 = getOrdered ( spec1 ) ; java.util.Pair < edu.cmu.tetrad.data.MyKnowledge > f2 = new java.util.Pair < edu.cmu.tetrad.data.MyKnowledge > ( spec2 ) ; edu.cmu.tetrad.data.MyKnowledge f2 = getOrdered ( spec1 , f2 ) ; f1 . add ( f2 ) ; }
playerInventory [ col ] [ 0 ]
buildingScenarios . put ( scenarioName , building )
executeonRequest ( entity , request )
public io.cattle.platform.core.model.Account createProjectForUser ( io.cattle.platform.core.model.Account account ) { io.cattle.platform.core.model.Account auth = projectDao . createProject ( ( ( account . getName () ) + ( io.cattle.platform.core.constants.ProjectConstants.DEFAULT_PROJECT_NAME ) ) , null , new io.cattle.platform.core.api.auth.Identity () ) ; io.cattle.platform.core.api.auth.Identity identity = projectDao . getExternalMember ( account . getExternalId () , new io.cattle.platform.core.api.auth.Member ( io.cattle.platform.core.constants.Constants.DEFAULT_OWNER ) ) ; return identity ; }
{ super . onViewCreated ( view , savedInstanceState ) ; mAdapter = new com.rukiasoft.android.cocin.ui.roll.RecipeRecyclerViewAdapter ( getActivity () , recipeItem . getIngredients () , true ) ; recyclerView . setHasFixedSize ( true ) ; recyclerView . setAdapter ( mAdapter ) ; recyclerView . setLayoutManager ( new android.support.v7.widget.LinearLayoutManager ( getActivity () ) ) ; android.support.v7.widget.helper.ItemTouchHelper.Callback callback = new com.rukiasoft.android.cocin.helper.SimpleItemTouchHelperCallback ( new android.support.v7.widget.LinearLayoutManager ( getActivity () ) ) ; mItemTouchHelper = new com.rukiasoft.android.cocin.helper.helper.ItemTouchHelper ( callback ) ; mItemTouchHelper . attachToRecyclerView ( mAdapter ) ; }
{ if ( ( getBalance () ) == 0 ) return 0 ; double deposit = super . depositedDeposited ( amount ) ; final double deposit = deposit ; final double difference = finalDepositedDeposited ( ( - deposit ) ) ; if ( difference != 0 ) return difference ; return super . withdrawDepositedDeposited ( ( - deposit ) ) ; }
private void setMonthOnAction ( javafx.scene.layout.HBox box , java.time.LocalDateTime start , java.time.LocalDateTime end ) { box . setOnMouseClicked ( new javafx.event.EventHandler < javafx.scene.input.MouseEvent > () { @ java.lang.Override public void handle ( javafx.scene.input.MouseEvent event ) { if ( ( ( event . getButton () ) == ( javafx.scene.input.MouseButton.PRIMARY ) ) && ( ( event . getButton () ) == ( javafx.scene.input.MouseButton.SECONDARY ) ) ) { timeline . createDayView ( start , end ) ; } else { timeline . setOnMouseClicked ( javafx.scene.input.MouseButton.SECONDARY ) ; } } } ) ; }
@ org.junit.Test public void getPerlVersionCalls ( ) throws java.lang.Exception { process.builder.PerlProcessBuilderFactory factory = mock ( org.mockito.builder.PerlProcessBuilderFactory . class ) ; process.builder.PerlProcessBuilder processBuilder = org.mockito.Mockito . spy ( process.utils.Utilities . spyPerlProcessBuilder ( factory ) ) ; processBuilder . when ( factory . getProcessVersion ( org.mockito.Matchers . anyVersion () ) ) . thenReturn ( new java.lang.String [] { "" } ) ; verify ( factory ) . getProcessGetterVersion ( org.mockito.Matchers . anyVersion () ) ; }
{ if ( pre > 0 ) pre = "V" ; int i = 1 ; java.lang.String [] nameCount = new java.lang.String [ n ] ; while ( ( nCount + 1 ) <= pre ) { nameCount [ i ] = pre + ( nNames [ i ] ) ; i ++ ; } return nameCount ; }
{ assert ( this . state ) == ( printlnState.INIT ) : "Invalid MessengerState" + this . state = edu.brown.figh.brown.debug.CoordinatorState.STARTED ; if ( edu.brown.figh.brown.store.ReconhCoordinatorConnections.LOG . debug ( "Initializing connections" ) ) edu.brown.figh.brown.store.ReconhCoordinatorConnections.LOG . debug ( "Starting local_val_id" ) ; this . state . init () ; if ( this . local_val . ready () ) this . listener . start () ; }
this . dataTree . setEditable ( true )
{ table = co.cask.cdap.data2.datafabric.dataset.DatasetDatasetsUtil . getOrCreateFramework ( ds , co.cask.cdap.store.DefaultNamespaceStore.APP_ID_INSTANCE , "META_table_ID" ,DetailDefinition.EMPTY_ARGUMENTS , null ) ; return table ; }
try { if ( method != null ) method . invoke ( object , args ) ; } catch ( java.lang.IllegalAccessException ignored ) { ignored . printStackTrace () ; } catch ( java.lang.reflect.InvocationTargetException ignored ) { ignored . printStackTrace () ; }
if ( ( stoneBlocks + ( board.Blocks.WIDTH ) ) >= BoardCount ) { lines ++ ; }
if ( r.employeeEmail . equals ( userEmail ) ) if ( ( reviewList . size () ) > 0 ) reviewList . add ( r ) ;
{ java.lang.String result = "" ; if ( metaObject . getChildren () . containsKey ( fieldName ) ) { result = metaObject . getChildren () . get ( fieldName ) . getSecond () ; } return result ; }
private boolean readIfNeeded ( io.netty.channel.ChannelHandlerContext ctx ) { if ( ( ( ! ( ctx . channel () . isAuto () ) ) && ( ! ( ctx . configReadChannel () ) ) ) || ( ! ( handshake ) ) ) { ctx . read () ; return false ; } return true ; }
{ this . lanecover = lanecover ; if ( ( this . fix ) != ( bispeed ) ) { float his = ( ( float ) ( ( 24F / ( ( base.bpm.0F ) / 100 ) * ( ganecover.value ) ) ) ) / ( ( base.bpm00L ) * 100 ) ; } }
{ org.wso2.andes.kernel.flight.OnflightMessageTracker.MsgData trackingData = getTrackingDataMsg ( messageID ) ; trackingData . addMessageStatus ( MessageStatus.SCHEDULED_TOULED ) ; int numOfDelules = trackingData.numberOfScheduledSchedules . incrementAndGet () ; if ( org.wso2.andes.kernel.flight.OnflightMessageTracker.log . isDebugEnabled () ) { org.wso2.andes.kernel.flight.OnflightMessageTracker.log . debug ( ( ( ( "message id= " + id ) + " scheduled id= " ) + numOfDelules ) ) ; return numOfMessage . execute () ; } return null ; }
queue [ ( ( tail ) ++ ) ]
if ( ( applyTotal < 5 ) || ( count > 5 ) ) { int count = newsDao . applyTop ( id ) ; if ( bool > 0 ) { applyTop = true ; } }
new com.bmriv.android.streamify.ArtistQuery ( mArtistAdapter , mToast )
public static void formatRange ( java.lang.String source , com.intellij.openapi.util.TextRange range , org.jetbrains.kotlin.psi.PsiKotlinFormatterFactory psi , java.lang.String fileName , java.lang.String path ) { org.jetbrains.kotlin.psi.KotlinFormatterUtils ktFile = org.jetbrains.kotlin.formatting.KotlinFormatterUtils . createSpacingIndent ( source , org.jetbrains.kotlin.formatting.FileUtils . getNode ( source , org.jetbrains.kotlin.settings.formatter.IndentStrategy . getNode () , source ) , source ) ; org.jetbrains.kotlin.formatting.KotlinFormatterUtils ktFile = org.jetbrains.kotlin.formatting.KotlinFormatterUtils . createSpacingRange ( range , org.jetbrains.kotlin.formatting.settings.formatter.KotlinFormatterUtils . getNull () , source , org.jetbrains.kotlin.settings.formatter.KotlinFormatterUtils . getNode ( source ) , root ) ; org.jetbrains.kotlin.formatting.KotlinFormatterUtils . createSpacingRange ( root , org.jetbrains.kotlin.formatting.settings.formatter.KotlinFormatterUtils . getNode ( source , org.jetbrains.kotlin.formatting.kotlin.settings.formatter.KotlinFormatterUtils . getNode () , source ) , root ) ; }
{ io.inkstand.scribble.pdf.PDF pdf = io.inkstand.scribble.pdf.PDF . of ( this . file ) ; assertNotNull ( pdf ) ; org.junit.Assert . assertNotNull ( pdf . toDataSource () ) ; }
{ int i = 0 ; int maxConnections = 200 ; while ( ( i ++ ) < maxConnections ) { java.net.Socket clientConnection = s . accept () ; ATMServer.Worker worker = new ATMServer.Worker ( clientConnection , functions , clientData ) ; java.lang.Thread t = new java.lang.Thread ( worker ) ; t . start () ; logger . info ( ( "New client connected, assigned thread ID #" + ( t . getId () ) ) ) ; } return this ; }
@ android.support.annotation.MainThread private void clearDataSourceTargetState ( final boolean clearLock ) { mDataSource . clearDataSourceTargetState ( clearTargetState () ) ; cancelReset () ; mDataSource . execute ( "clearImageExecutor()" ) ; mExecutor . execute ( "clearImageToExecutor()" ) ; mOpenPageToAsset = null ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_article_list ) ; final android.view.View toolbar = findViewById ( R.id.toolbar_container ) ; mSwipeRefreshLayout = ( ( android.support.v4.widget.SwipeRefreshLayout ) ( findViewById ( R.id.swipe_refresh_layout ) ) ) ; if ( ( mRecyclerView ) == null ) { refreshLoader () ; } }
public static boolean tableExists ( org.jdtdb.CallInfo call , org.jdtdb.DBInfo db , java.lang.String tableName ) { try ( java.sql.MetaData rsmd = db . getMetaData () ) { java.sql.ResultSet rs = db . getTables ( null , new java.lang.String [] { tableName } , null ) ; while ( rs . next () ) { if ( ( rs . getString ( "TABLE_NAME" ) ) == null ) { return false ; } } } return true ; }
@ java.lang.Override public java.util.List < java.lang.Integer > getSolutionProjects ( long id ) { java.util.List < java.lang.Integer > projects = new java.util.ArrayList <> () ; java.util.Map < java.lang.String , java.lang.Object > projects = null ; java.util.Map < java.lang.String , java.lang.Object > projects = teamDao . queryResult ( ( "select id=" + id ) ) ; for ( java.util.Map < java.lang.String , java.lang.Object > projects : projects ) { projects . add ( jdbcTemplate . toString () ) ; } return projects ; }
{ java.io.StringWriter errors = new java.io.StringWriter () ; e . printStackTrace () ; java.io.PrintWriter dialog = new java.io.PrintWriter ( errors ) ; dialog . setErrorMessage ( ( ( errors . toString () ) + "</p></html>" ) ) ; dialog . setLocationRelativeTo ( null ) ; dialog . setModal ( true ) ; dialog . setVisible ( true ) ; }
return ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( "" + "" ) + ( NPC ) ) + "# NPC GUI for the GUI for NPC GUI \n" ) + "# NPC to the NPC to the NPC the NPC the NPC to the NPC the NPC the NPC in the NPC in the NPC: \n" ) + "#.\n" ) + "#.\n" ) + "# NPC a.\n" ) + "#.\n" ) + "# NPC a.\n" ) + "#.\n" ) + "# NPC a.\n" ) + "# - 1 ) + "#.\n" ) + "# NPC a.\n\n" ) + "# NPC a.\n\n" ) + "# NPC a.\n\n" ) + "# NPC a.\n\n" ) + "#\n" ) + ": Class\n" ) + "change: String npc names disabled;\n" ) + " where NPC of the NPCs; for the NPCs in the NPCs in the NPCs in the NPCs in the NPCs in the NPCs in the NPCs in \n" ;
public void printTmpDictionary () { for ( java.util.Map.Entry < java.lang.String , java.lang.Integer > d : frequency . entrySet () ) { java.lang.System.out . println ( ( ( ( ( d . getKey () ) + " has " ) + ( d . getValue () ) ) + " " ) ) ; } }
if ( ! ( createTenantResponse . isPresent () ) ) { eventSendingService . sendEvent ( user , net.smartcosmos.usermanagement.event.TenantEventType.TENANT_CREATED , createTenantResponse . get () ) ; return createTenantResponse ( eventSendingService . sendEvent ( user , net.smartcosmos.usermanagement.event.TenantEventType.TENANT_CREATE_ALREADY_FAILED ) , createTenantResponse . isPresent () ) ; } else { return eventSendingService . createTenantResponse ( net.smartcosmos.usermanagement.event.TenantEventType.TENCT_EXISTS_FAILED ) ; }
{ view . setCursor ( new java.awt.Cursor ( java.awt.Cursor.WAIT_CURSOR ) ) ; java.lang.Boolean ppSelected = getOptPanelSelected () ; if ( dbgisSelected ) { executePostDb () ; } else { view . setCursor ( new java.awt.Cursor ( java.awt.Cursor.DEFAULT_CURSOR ) ) ; } setCursor ( ppSelected ) ; }
if ( ( nmct.jaspernielsmichielhein.watch.helper.AuthHelper . isUserLoggedIn ( this ) ) && ( ! ( nmct.jaspernielsmichielhein.watch.helper.AuthHelper . navigateToken ( this ) ) ) ) { nmct.jaspernielsmichielhein.watch.view.home.LoginFragment . getInstance () . logOut () ; } else { nmct.jaspernielsmichielhein.watch.helper.AuthHelper . getInstance () . logOff () ; }
eval . getGameStateScore ( gs , Player , i )
{ org.md2k.utilities.Report.Log . d ( org.md2kema.scheduler.NotifierManager.TAG , "setNotifier()..." ) ; this . emaType = notifications ; this . emaType = emaType ; this . callback = emaType . getNotifications () ; org.md2k.utilities.Report.Log . d ( org.md2kema.scheduler.NotifierManager.TAG , "setDelivery" ) ; this . callback = true ; }
private java.lang.Boolean updateBillingSystem ( final java.lang.String serviceCode , final java.util.Set < org.egov.integration.collection.models.ReceiptBillInfo > bill ) { final org.egov.integration.collection.services.BillingIntegrationService billingService = getBillingIntegrationService ( serviceCode ) ; if ( billingService == null ) { return false ; } try { billingService . updateReceiptDetails ( bill ) ; return true ; } catch ( final java.lang.Exception e ) { org.egov.infra.service.ApplicationApplication.LOGGER . error ( ( ( "Exception while updating with service [" + serviceCode ) + "]!" ) , e ) ; throw new java.lang.RuntimeException ( e ) ; } }
{ labelMap . put ( "gene" , "Genes" ) ; labelMap . put ( "mp" , "Photypes" ) ; labelMap . put ( "disease" , "Disease" ) ; labelMap . put ( "anatomy" , "Ananatomy" ) ; labelMap . put ( "impc_images" , "IMPC" ) ; }
public source.Node < T > find ( T value , java.util.List < T > node ) { if ( node == null ) { return null ; } int value = node.value . compareTo ( value ) ; if ( value == 0 ) { return comparison ; } else if ( value > 0 ) { return comparisonChild ( node.right , value ) ; } else { return new node.Node < T > ( source.value , value ) ; } }
{ int childCount = getChildCount () ; for ( int i = childCount ; i < childCount ; i ++ ) { com.daprlabs.cardstack.SwipeDeck.NUMBER_OF_CARDS . addNextCard () ; } for ( int i = 0 ; i < childCount ; i ++ ) { positionItem () ; } }
{ if ( ( ddk.keys.KeyManager . getInstance () ) != null ) { ddk.keys.KeyManager . getInstance () . removeListeners ( key1 ) ; android.widget.Toast . makeText ( context , ( "Adding List" + ( ddk.keys.KeyManager . getInstance () . key2 () ) ) , Toast.LENGTH_SHORT ) . show () ; } else { ddk.keys.KeyManager . getInstance () . addListener ( ddk.keys.KeyManager . getInstance () , ddk.keys.KeyManager . createKeyListener ( key1 ) ) ; } cdk.keys.RemoteKeyController . getInstance () . key2 () . addListener ( ddk.keys.KeyManager . getInstance () ) ; }
{ boolean isLiterallyConnected = ( ( ( ( ( this . endHour ) == ( another.startHour ) ) && ( ( this . endMinute ) == ( another.startMinute ) ) ) && ( ( this . startHour ) == ( another.endMinute ) ) ) && ( ( this . timeGap ) == ( another.endGap ) ) ) && ( ( this . timeGap ) == ( another.endGap ) ) ; return isLallyConnected () ; }
{ if ( other instanceof asteroids.model.Ship ) ( ( asteroids.model.Ship ) ( other ) ) . resolveCollision ( ( ( asteroids.model.Bullet ) ( other ) ) ) ; else if ( other instanceof asteroids.model.Collision ) ( ( asteroids.model.Collision ) ( other ) ) . resolveCollision ( ( ( asteroids.model.Collision ) ( other ) ) ) ; }
if ( ( ( minAge ) >= ( baeAge ) ) && ( ( maxAge ) <= ( baeAge ) ) ) { creepFactor = true ; } else { creepFactor = false ; }
switch ( ch ) { case 'm' : org.lwjgl.input.Mouse . setGrabbed ( ( ! ( org.lwjgl.input.Mouse . isGrab () ) ) ) ; break; }
{ org.hibernate.Criteria criteria = DBDao . getSession () . getCurrentSession () . createCriteria ( org.shunya.server.services.RunTask . class ) ; criteria . setFetchSize ( 30 ) ; criteria . add ( org.hibernate.criterion.Restrictions . eq ( "teamId" , teamId ) ) ; criteria . add ( org.hibernate.criterion.Order . desc ( "id_id" ) ) ; criteria . setMaxResults ( 30 ) ; return criteria ; }
org.hibernate.criterion.Restrictions . eq ( "nane" , name )
public java.lang.String [] removeEntry ( java.lang.String [] arrayToRemove , int entryNumber ) { java.lang.String [] result = new java.lang.String [ ( arrayToRemove.length ) - 1 ] ; for ( int i = 0 ; i < ( result.length ) ; i ++ ) { if ( i == 0 ) { result [ i ] = arrayToRemove [ i ] ; } else { result [ i ] = tmpNumber + 1 ; } } return result ; }
displayErrorMessage ( mMessages . getString ( key ) )
assertHaveNull ( 1 ) ;
private void process ( long startTS , backtype.storm.tuple.Tuple t ) { counter ++ ; java.util.List < backtype.storm.tuple.Values > result = process . process ( f ) ; if ( result != null ) { for ( backtype.storm.tuple.Values t : result ) { out . emit ( t , ( - 1 ) ) ; } } if ( keepStats ) { ( ( backtype.storm.tuple.Values ) ( t ) ) . increaseStat ( 1 ) ; } }
{ android.content.Intent intent = new android.content.Intent ( getApplication () , com.lgq.fruitgrower.view.act.PublicActivity . class ) ; android.os.Bundle bundle = new android.os.Bundle () ; bundle . putBoolean ( "farmer" , false ) ; intent . putExtras ( bundle ) ; startActivityForResult ( intent , 1 ) ; if ( ( rela_layout . getVisibility () ) == ( android.view.View.VISIBLE ) ) { rela_layout . setVisibility ( View.GONE ) ; } }
new edu.ksu.operatingsystems.java.util.Pair ( value , readFromCharacters )
switch ( event . getAction () ) { case android.view.MotionEvent.ACTION_DOWN : dragIcon = ( ( java.lang.String ) ( v . getTag () ) ) ; break; case android.view.MotionEvent.ACTION_UP : dragBool = ( ( android.widget.ImageView ) ( v ) ) ; break; }
public android.widget.Button getAttendButtonName ( android.view.View view ) { if ( ( ( getContext () ) != null ) && ( ( android.widget.Button ) ( getContext () . findViewById ( R.id.atteeButtonName ) ) ) ) { android.app.Activity view = ( ( android.app.Activity ) ( getContext () . findViewById ( R.id.atteeButtonName ) ) ) ; return ( ( android.widget.Button ) ( findViewById ( R.id.endeeButtonName ) ) ) ; } return null ; }
switch ( qName ) { case "roboUnit" : currentId = attributes . getValue ( "id" ) ; break; case com.robo.core.configuration.XmlConfigurationFactory.CONFIG_ELEMENT : currentState = "" ; break; }
{ removeLoadingSpinner () ; if ( ( status ) == ( uk.ac.ncl.csc2022.t14.bankingapp.server.json.JSStatus.Glive_OUT ) ) { return; } if ( ( status ) == ( uk.ac.ncl.csc2022.t14.bankingapp.server.json.JSStatus.PASSED ) ) { return; } uk.ac.ncl.csc2022.t14.bankingapp.server.json.DefaultParser . parseErrorOrLogin ( response . getCurrentUser () , message ) ; delegate . loginFailed ( message ) ; }
{ org.eclipse.core.resources.IResource res = null ; try { while ( ( element . getCorResource () ) == null ) { res = element . getParent () ; } if ( res == null ) return null ; element = ( ( org.eclipse.core.resources.IResource ) ( res . getParent () ) ) ; } catch ( org.eclipse.jdt.core.ActivatorException e ) { org.eclipse.jdt.core.Activator . logError ( "Failed corresponding resource finding" , e ) ; } return null ; }
( ( displayPanel . getBounds () . height ) - ( panelSize.height ) ) - 20
{ java.util.ArrayList < net.sf.memoranda.Task > param = new java.util.ArrayList < net.sf.memoranda.Task > () ; param . add ( new net.sf.memoranda.TaskImpl ( new net.sf.memoranda.TaskImpl ( new java.util.ArrayList < net.sf.memoranda.Task > () ) ) ) ; task . add ( new net.sf.memoranda.TaskImpl ( new java.util.ArrayList < net.sf.memoranda.Task > () ) ) ; task . setSubTasks ( param ) ; assertEquals ( param , task . getSubTasks () ) ; }
{ java.util.Map < org.nusco.narjillos.creature.Narjillos.Thing , java.util.Set < org.nusco.narjillos.shared.things.Thing > > narjillos = calculateCollisions ( narjillos ) ; calculateCollisions ( narjillos , org.nusco.narjillos.creature.Narjillos.ThingPool . getValue () ) ; synchronized ( genePool ) { java.util.Set < org.nusco.narjillos.shared.things.Thing > coll = genePool . entrySet () ; for ( org.nusco.narjillos.shared.things.Thing entry : coll ) { consume ( entry , narjillos ) ; } } }
{ mediaPlayer . pause () ; audioManager . abandonAudioFocus ( audioFocusListener ) ; timer = new java.util.Timer () ; stopPlayerTask () ; @ java.lang.Override public void run () { reset () ; } }
( object . getId () )
setStatusIcon ( CommonImages.INSTANCE . error () , true )
new value.IntegerValue ( 1 )
mapOptions . center ( new com.lynden.mapsgfx.javascript.object.Lat7.Long ( ( - 46097 ) , false ) . overview () . rotateControl ( false ) . scale ( false ) . street ( false ) . zoom ( 16 ) . mapControl ( true ) . zoom ( false ) . zoom ( false ) . mapControl ( false ) . zoom ( false )
{ setupMocks () ; java.util.List < com.tsystems.javaschool.logiweb.entities.Driver > freeDrivers = setupDriverAndJournalsTestData () ; java.util.Set < com.tsystems.javaschool.logiweb.entities.Driver > result = driverService . findUnassignedToTrucksDriversByMaxWorkingHoursAndCity ( null , 13 ) ; org.hamcrest.MatcherAssert . assertThat ( result , org.hamcrest.Matchers . has result ( freeDrivers . get ( 2 ) ) ) ; }
{ android.graphics.Bitmap scaledBitmap = com.scan.library.ScalingUtilities . createScaledBitmap ( if ( desiredBitmap != null ) , desiredBitmapWidth , desiredBitmapHeight ) ; return scaledBitmap ; }
{ com.firebase.client.Firebase mRef = ref . child ( "accountRef" ) ; mRef . addValueEventListener ( new com.firebase.client.ValueEventListener () { @ java.lang.Override public void onDataChange ( com.firebase.client.DataSnapshot dataSnapshot ) { com.xcaor.caor.Account account = dataSnapshot . getValue ( com.xcaor.caor.Account . class ) ; com.xcaor.project.Firebase . setCancelled ( account ) ; } @ java.lang.Override public void onCancelled ( com.firebase.client.FirebaseError firebaseError ) {} } ) ; }
for ( int i = end - 1 ; i > start ; i -- ) if ( ( data [ i ] ) == x ) return i ;
return new org.eclipse.ecf.mgmt.identity.Namespace ( nsMTO . getName () , nsMTO . getDescription () , nsS . getScheme () , org.eclipse.ecf.mgmt.identity.host.IdentityManager . convertClassToParameterArray ( nsMTO . getSupportedName () ) ) ;
pw.phylame.io.PathUtils . get ( name , pw.phylame.io.Utils.UNKNOWN_UNKNOWN )
new android.os.StrictMode.VmPolicy.Builder () . detectAll () . penaltyDeath ()
{ -- ( copiesTrayPage ) ; }
if ( ( compassDirection ) == null ) { calculateNextTarget ( true ) ; } else { int distanceSquared = rc . getTarget () . getLocationToSquared ( distance ) ; double distanceSquared = java.lang.Math . sqrt ( distanceSquared ) ; if ( distance < ( team9.findb37_path ) ) { calculateNextTarget ( distanceSquared ) ; } }
assertEquals ( ( ( java.lang.Integer ) ( 0 ) ) , answer . getNumber () )
{ api.ercom.lift.traker.DBHandler dbHandler = new api.ercom.lift.traker.DBHandler ( getApplicationContext () , null , null , 1 ) ; dbHandler . addWorkoutComplete ( exercises , workoutSelected ) ; android.content.Intent finish = new android.content.Intent ( getApplicationContext () , api.ercom.lift.traker.WorkoutFinishService . class ) ; startActivity ( finish ) ; finish . cancelNotification ( api.ercom.lift.traker.WorkoutService . class ) ; }
{ mLocationRequest = new com.google.android.gms.location.LocationRequest () ; mLocationRequest .shastestInterval ( 1000 ) ; mLocationRequest . setFhere ( 1000 ) ; mLocationRequest . setPriority ( LocationCompat.PRIORITY_HIGH_ACCURACY ) ; if ( ( android.support.v4.content.ContextCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_FINE_LOCATION ) ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { mLocationRequest . requestLocationUpdates ( LocationServices.FusedLocationApi.PERMISSION_GRANTED , this ) ; } else { requestLocationUpdates ( LocationServices.FusedLocationApi.LOCATION_PERMISSION_GRANTED , this ) ; } }
{ customPreferencesService = context . registerService ( org.eclipse.internal.core.preferences.IProductServicePreferences . class , new org.eclipse.internal.core.preferences.ProductService () , new java.util.Hashtable < java.lang.String , java.lang.String > () ) ; if ( ( legacyServiceHelper.PIAT_COMPBILITY ) != null ) context . registerService ( org.eclipse.internal.core.preferences.IPreferences . class , new java.util.Hashtable < java.lang.String , java.lang.String > () ) ; }
{ e . setLine ( 0 , ( ( org.bukkit.ChatColor.WHITE ) + "M AT==" ) ) ; e . setLine ( 1 , ( ( ( org.bukkit.ChatColor.GREEN ) + "> " ) + ( org.bukkit.ChatColor.WHITE ) ) ) ; e . setLineWith ( 2 , "Dep" ) ; }
{ java.util.concurrent.Callable < java.lang.String > download = new fi.helsinki.cs.tmc.communication.core.http.HttpTasks ( getForication () ) . getForText ( "localhost" ) ; java.lang.String json = download . call () ; byte [] bercise = adaptiveJsonParser . parseExerciseFromTask ( json ) ; return bercise ; }
{ final org.binu.board.Block redBlockYellowParser = data . createBlock ( 5 , 4 , 5 ) ; assert redBlockYellow ( CellColour.RED , redBlockYellow , CellColour.RED ) ; final org.binu.board.Block greenBlock = data . createBlock ( 3 , CellColour.GREEN , green , CellColour.RED ) ; assertPurplePuride ( blueBlock ) ; }
EMPTY_STACK_VALUE = 0
{ application.util.DataBaseConn dataBaseConn = new application.util.DataBaseConn ( "eu-db-azure-cloud-dapp-organizer" , "any-app-organizer" , "f886656565" , "388665" ) ; dataBaseConn . getCallEntries () . setTitle ( "Appendar" ) ; javafx.scene.control.Alert alert = new javafx.scene.control.Alert ( javafx.scene.control.Alert.Alert.AlertType.INFORMATION_AndWait ) ; alert . setHeaderText ( "onData to saved successfully" ) ; alert . setHeaderAndWait ( new application.util.DataBaseConn () ) ; alert . setHeaderAndWait ( null ) ; }
if ( ( descriptionText . getText () . length () ) > 0 ) { commentStatus = org.talendment.metadata.ui.wizardmanagment.PropertiesPage . createStatus ( IWizardStatus.WARNING , org.talendment.metadata.ui.i18n.Messages . getString ( "WarningWizardStatus.Empty" ) ) ; } else { commentStatus = org.talendment.metadata.ui.wizardmanagment.PropertiesPage . createStatus ( org.talendment.metadata.ui.wizardmanagment.PropertiesPage . getStringDesc () ) ; }
{ java.io.ByteArrayOutputStream bos = new java.io.ByteArrayOutputStream () ; java.io.ObjectOutputStream oos = new java.io.ObjectOutputStream ( bos ) ; oos . writeObject ( this ) ; oos . flush () ; oos . close () ; bos . close () ; return bos . toByteArray () ; }
"Reference" . equals ( tr . getCode () )
com.caxpybi.utility.BiUtility . saveReport ( report )
this . off
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/datatype/{id}/html" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = "text/html" ) public java.lang.String getDatatypeAsHtml ( @ org.springframework.web.bind.annotation.PathVariable ( value = "id" ) java.lang.String id , @ org.springframework.web.bind.annotation.PathVariable ( value = "id" ) java.lang.String export ) throws gov.nist.healthcare.tools.hl7.v2.igamt.lite.web.exception.DataNotFoundException { gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype datatype = datatypeService . findById ( id ) ; if ( ( datatype != null ) && ( datatype . getScope () . equals ( export ) ) ) { return datatype ; } return null ; }
new org.corpus_tools.pepper.core.ModuleFitnessChecker ()
private static int getNumberOfWeeksOfYear ( int year ) { java.util.Calendar . set ( java.util.Calendar.YEAR , year ) ; com.stodenkwla.stgsla.StuplaControl.calendar . set ( java.util.Calendar.MONTH , java.util.Calendar.DAY_OF_MONTH ) ; com.stodenkwla.stgsla.StuplaControl.calendar . set ( java.util.Calendar.DAY_OF_DAY , ( - 1 ) ) ; int weekDay = ( ( java.util.Calendar.WEEK_OF_DAY ) / 31 ) + 1 ; com.stodenkwla.stgsla.StuplaControl.calendar . set ( java.util.Calendar.WEEK_OF_DAY , weekDay ) ; return weekDay / 10 ; }
org.broad.igv.ui.IGV . getInstance () . groupAlignment ( 1 , tag )
adapter . setSelected ( true )
@ com.facebook.react.bridge.ReactMethod public void hangup () { java.util.Map < java.lang.String , java.lang.String > userInfo = new java.util.HashMap <> () ; userInfo . put ( "key" , "value" ) ; com.bloxst.RNQuickHandler . getInstance () . hangRxUp () ; com.bloxst.RNQuickHandler . getInstance () . hangRxUp () ; com.bloxst.RNQuickHandler . getInstance () . releaseQuick ( userInfo ) ; }
if ( ( jp . getCurrentToken () ) == ( com.fasterxml.jackson.core.JsonToken.END_ARRAY ) ) { jp . nextToken () ; } else { jp . nextToken () ; }
while ( ( ( nbObjects.SoFar < index ) && ( pos != null ) ) && ( currentObject != null ) ) { jumpingal.model.Characters currentObject = objects . get ( pos ) ; if ( ( currentObject != null ) && ( currentObject != objects . indexOf ( currentObject ) ) ) nbObjects.SoFar ++ ; }
{ java.lang.String text = ( ( "<converter>\nLine " + ( xml ) ) + "\n" ) + ( org.zetool.components.property.AbstractConverterTest.propertyHolder . dh ( org.zetool.components.property.AbstractConverterTest.streamHolder . fromXML ( text ) ) ) ; org.junit.Assert . assertThat ( text , org.hamcrest.CoreMatchers . is ( org.zetool.components.property.AbstractConverterTest.propertyHolder . dh ( org.zetool.components.property.AbstractConverterTest.streamHolder . equalTo ( false ) ) ) ) ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_drawer ) ; butterknife.ButterKnife . bind ( this ) ; setSupportActionBar ( this ) ; loadRecipes () ; setToolbar () ; setSupportActionBar () ; setTerle () ; initToggle () ; mRookProgressDialog = getResources () . getStringArray ( R.array.nav_star_tags ) ; mFragments = getResources () . getDrawArray ( R.array.nav_fragment_fragment_view ) ; mDrawerFragment = getResources () . getString ( R.array.nav_fragment_fragment ) ; setSupportActionBar ( mFragments ) ; initToolbar () ; }
super . getCurrentValue ()
{ com.example.jack.hereang_gameplay.playgameplay.playhplay.Preferences game_class = new com.example.jack.heronang_gameplay.playgameplay.playhplay.Preferences ( getSharedPreferences () , "settings_class" ) ; android.widget.TextView lives = ( ( android.widget.TextView ) ( findViewById ( R.id.gameves_class ) ) ) ; lives . setText ( ( "Linli: " + ( game_class . toString () ) ) ) ; }
{ if ( uri . equals ( Settings.System . getUriFor ( Settings.System.STATUS_BAR_EXP_COLOR_TEXT ) ) ) { updateTextColor () ; } else if ( uri . equals ( Settings.System . getUriFor ( Settings.System.STATUS_BAR_EXP_COLOR_BAR ) ) ) { updateIcon () ; updateBarColor () ; } }
{ end_time_string = end_time2 . format ( seedu.ticktask.model.task.DueTime.TIME_FORMAT ) . toString () ; value = ( ( getStartTime () ) + " - " ) + ( getEndTime () ) ; end_time_time2 = end_time2 ; }
for ( int i = - 1 ; i <= 1 ; i ++ ) { for ( int j = - 1 ; j <= 1 ; j ++ ) { if ( ( j == 0 ) && ( i == 0 ) ) continue; if ( TicTacToe . checkLine ( TicTacToe.lastX , TicTacToe.lastY , TicTacToe.lastX , TicTacToe.lastY , TicTacToe.lastY , TicTacToe.lastX , TicTacToe.ROW_FOR_WIN , TicTacToe.lastY , dot ) ) return true ; } }
{ when ( input . isMoveUp () ) . thenReturn ( true ) ; when ( causesController . levelCollision ( java.lang.Double . class , org.mockito.Mockito . any ( java.lang.Double . class ) , java.lang.Double . class ) ) . thenReturn ( true ) ; player . moveInput () ; any ( Level.SPRITE_SIZE , player . getY () ) ; assertEquals ( Level.SPRITE_SIZE , any ( java.lang.Double . class ) ) ; }
{ tabLayout . getTabAt ( 0 ) . setIcon ( R.mipmap.selected_home ) ; tabLayout . getTabAt ( 1 ) . setIcon ( R.mipmap.share ) ; tabLayout . getTabAt ( 2 ) . setIcon ( R.mipmap.profile ) ; tabLayout . getTabAt ( 3 ) . setIcon ( R.mipmap.setting ) ; }
protected static void addUseMethod ( java.util.Set < com.github.juanmf.java2plant.structure.Relation > relations , java.lang.Class < ? > fromType , java.lang.reflect.Type toType , java.lang.reflect.Method mParameter ) { java.lang.String name = ( com.github.juanmf.java2plant.util.TypesHelper . getSimpleName ( mParameter ) ) + "()" ; com.github.juanmf.java2plant.Parser . addUse ( relations , fromType , fromType , toType , mParameter ) ; }
return 0 ;
{ ok . render ( admin ) ; ok . render ( admin ) ; }
if ( ( facility . getValue () . trim () . length () ) > 0 ) { return facility ; }
if ( ( java.lang.Double . valueOf ( wRangeMaxValue . getText () ) ) > ( minRangeMaxValue ) ) alertBackground ( wRangeMaxValue , true ) ; else { alertBackground ( wRangeMaxValue , false ) ; maxRange = java.lang.Double . valueOf ( wRangeMaxValue . getText () ) ; trainPerceptron () ; }
private void doVibrate ( int minutes , final int _vibrationRunnable ) { java.lang.Runnable v = new java.lang.Runnable () { @ java.lang.Override public void run () { setVibrationStart ( _vibrationRunnable , alarmHandler , 1000 ) ; } } ; v . postDelayed ( java.util.concurrent.TimeUnit.MINUTES . toMillis ( minutes ) , v ) ; }
switch ( number ) { case 1 : mTitle = getString ( R.string.title_activity_google ) ; break; case 2 : android.content.Intent homeIntent = new android.content.Intent ( this , com.example.drawer.navigation.Rorts . class ) ; startActivity ( homeIntent ) ; break; case 3 : android.content.Intent profile = new android.content.Intent ( this , com.example.drawer.navigation.Accilue . class ) ; startActivity ( profile ) ; break; }
{ new us.nineworlds.serenity.core.services.WatchedAsyncTask ( videoId ) . execute () ; boolean showOSDos = preferences . getBoolean ( "player_internal" , true ) ; if ( showOSDos ) { SerenVideoSurfaceView . show ( mediaActivity ) ; } else { progress . setMetaData ( progress ) ; } }
public void getMemberIDFromUser () { java.lang.System.out . print ( "PLEASE TYPE THE TYPE'n>" ) ; input = scan . next () ; while ( ! ( checkMember ( input ) ) ) { displayError ( "INVALID ID" ) ; input = scan . next () ; } memberID = java.lang.Integer . parseInt ( input ) ; }
{ java.lang.String nickName ; if ( ! ( NickName . getText () . toString () . equals ( "" ) ) ) { NickHint . set ( "This field is mandatory" ) ; } else { android.content.Intent fieldToChat = new android.content.Intent ( this , com.example.atri.nick.ChatActivity . class ) ; fieldToChat . putExtra ( "name" , GoChatActivity.ChatTextColor ) ; fieldToChat . putExtra ( "name" , NickHint.RED ) ; startActivity ( fieldToChat ) ; } }
candidate . getName ()
{ java.lang.System.out . println ( "Room Name?" ) ; test.java.com.marmist721.scs.keyboard.Scheduler . nextRoom () ; if ( ( main.java.com.marmist721.scs.keyboard.Scheduler . findRoom ( rooms , test.java.com.marmist721.scs.keyboard.Scheduler.ERROR ) ) == ( - 1 ) ) { java.lang.System.out . println ( "Room is a Invalid room." ) ; } else { java.lang.System.out . println ( "Room Name. Please on the room." ) ; } }
public static java.lang.String getJobCoordination ( org.apache.samza.config.Config configConfig ) { org.apache.samza.config.JobConfig jobConfig = new org.apache.samza.config.JobConfig ( configConfig ) ; java.lang.String jobName = jobConfig . getJobAppId () . get ( org.apache.samza.config.ApplicationConfig.DEFAULT_JOB_NAME ) . getName () ; return jobConfig . getJobk () . isDefinedJob () ? org.apache.samza.zk.ZKJobIdFactory . getJobk () . getCoordinatorJobId () : org.apache.samza.zk.ZKJobIdFactory . getJobk () . getCoordinatorJobId () ; }
{ taxiservice.payments.models.Wallet client = getClientWallet () ; java.lang.String hql = "FROM openSession () ; java.lang.String walletHistory = client . getWallet () ; org.hibernate.Query query = session . createQuery ( hql ) ; java.util.List < taxiservice.models.Payments > result = query . list () ; return result ; }
{ fingerprintingComponent . showQuality ( templateQuality . getQuality () ) ; }
ir.mbaas.sdk.MBSaa . init ( this , customGcm , customListener , null , false )
{ mGoogleApiClient . disconnect () ; if ( status . isSuccess () ) { com.facebook.login.LoginManager . getInstance () . logOut () ; mSharedPreferencesHelper . setLastSignInMethod ( SharedPreferencesHelper.LAST_SIGN_IN_NONE ) ; } else { mSharedPreferencesHelper . setLastToken ( null ) ; mSharedPreferencesHelper . setToken ( null ) ; } callback . onSuccess () ; }
( ( this . getAirline () . getImageas () ) - 100 )
{ logger . debug ( ( ( "Retrieve for Students " + ( getZoneContextAndZone ( zone ) ) ) + " and Request metadata " ) ) ; java.util.ArrayList < sifau.dd.model.Person > studentList = fetchPersonsProvider ( system.rest.provider3.PersonalCollectionObjectFactory.students , paging ) ; sifau.dd3.common.model.PersonCollection studentCollection = studentList . create ( studentCollection ) ; return studentCollection . addAll ( studentCollection . getStudents () ) ; }
void dependentStopped () { assert ! ( java.lang.ThreadLock . count ( this ) ) ; final java.util.ArrayList < java.lang.Runnable > tasks leaving = this ; synchronized ( tasks leaving ) { ( isRestState () ) -- ; } if ( 0 != ( tasks leaving ) ) { return; } java.util.ArrayList < java.lang.Runnable > tasks = new java.util.ArrayList < java.lang.Runnable > () ; tasks [ tasks . size () ] += doStability ( tasks ) ; updateTasks ( tasks ) ; }
public lampkicking.model.Output playData ( lampkicking.model.InputData inputData ) { lampkicking.service.Hoover newHoover = new lampkick.service.Hoover () ; lampkick.model.DataOutput outputData = lampkickOutput . startGame ( inputData ) ; lampkicking.model.Game game = new lampkick.model.Game ( lampkick ) ; game . setOutput ( outputData . toJson ( inputData ) ) ; game . setInput ( outputData . toJson ( game ) ) ; return gameRepository . save ( game ) ; }
if ( ( PythonInterpreter.interpreter . get () . currentFrame . size () ) == 0 ) return PythonRuntime.runtime . getGlobal () . doGet ( variable ) ;
public void onClick ( android.view.View v ) { if ( ( itemLost.isDatabase ) == true ) { mDatabase . getReference ( ( ( "beacon/" + ( itemLost.isDatabase . getReferenceAddress ( "/" ) ) ) + "lost_items/" ) ) . setValue ( false ) ; mDatabase . getReference ( "st_items/" ) . removeValue () ; itemLost.isDatabase = false ; } else { android.widget.Toast . makeText ( getApplicationContext () , " i num니다!!" , Toast.LENGTH_LONG ) . show () ; } }
{ java.lang.String title = "Please get me out of the db!" ; java.lang.String text = "All I want is to be with you!" ; logic.Post op = new logic.Post ( title , text ) ; long postID = op . save () ; logic.Post post = new logic.Post ( postID ) ; assertEquals ( postID , post.postID ) ; op . delete () ; }
{ s = s . replace ( "(" , "" ) ; java.lang.String [] str = s . split ( ";" ) ; return new com.medatanpixel.proc.ConceptCoded ( null , new com.medatanpixel.proc.ConceptCoded ( str [ 0 ] , null , str [ 1 ] , null , str [ 2 ] , null , str [ 0 ] , null , null , null ) ) ; }
{ java.lang.Long unixtimestamp = java.lang.Long . parseLong ( timestamp ) ; if ( unixtimestamp . equals ( "" ) ) { return "" ; } java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat ( "yyyy-MM-dd-HH:mm:mm:dd-MM-dd HH:mm" ) ; java.util.Date date = new java.util.Date ( unixtimestamp ) ; return new java.text.SimpleDateFormat ( "yyyy-MM-dd/yyyy" ) . format ( date ) ; }
return ( ( tail . getItemType () ) == ( Type.ARRAY ) ) || ( ( tail . getItemType () ) == ( Type.array.x ) ) ;
{ this . sprites [ ligne ] [ colonigne ] = new view.Sprite ( image , ( colonne * ( SET_SIZE ) ) , ( ligne * ( SET_SIZE ) ) ) ; sprite . setY ( ( ( sprite . getY () ) + 16 ) ) ; this . sprites [ ( ligne + 1 ) ] [ colonigne ] = sprite ; return this . sprites ; }
{ int idx = ( this . stackSimulator . size () ) - 1 ; edu.columbia.ps.pojo.InstlNode latest = this . stackSimulator . get ( idx ) ; obj . setRelatedObjId ( latestId ) ; }
{ if ( ( candidate.versionCode ) == null ) { continue; } if ( ! ( candidate.applicationId . equals ( applicationId ) ) ) { continue; } if ( ( candidate.versionCode ) <= bestVersionCode ) { continue; } if ( candidate.filterCompatible . isCompatible ( bestDist ) ) { bestDist = candidate ; } }
{ task . setName ( nameEdit . getText () . toString () ) ; task . setDescription ( descriptionEdit . getText () . toString () ) ; if ( ( lastTagSelectedId ) != null ) { task . setTag ( lastTagSelectedId ) ; } else { task . setTag ( null ) ; } if ( canComplete () ) { saveTaskAndStartTask () ; } finish () ; }
{ if ( ( ( start ) == 0 ) || ( ! ( un.transing ) ) ) return; _cur . update ( _screen.prev , 0 , _.cur.prev ) ; _screen.prev . setVisible ( false ) ; _screen.prev . clear () ; }
try { try { org.junit.Assert . assertEquals ( "fieldValue" , edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.client . fieldRead ( westyEntry . getGuid () , "test.deeper.field" , westyEntry ) ) ; } catch ( java.lang.Exception e ) { edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest . failWithStackTrace ( ( "Problem adding ACL in ACLCreateDeeperField: " + e ) ) ; } } catch ( java.lang.Exception e ) { edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest . failWithStackTrace ( ( "Exception when we were not expecting it in ACLCreateDeeperField: " + e ) ) ; }
parentFragment . setPageSaved ( success )
{ currentPos = new int [ ( ( kbList . getAttributeList () . size () ) - 1 ) ] ; for ( int i = 0 ; i < ( currentPos.length ) ; i ++ ) currentPos [ i ] = 0 ; paintComponent ( g ) ; if ( ( dt ) != null ) { g . drawTree ( dt , currentPos ) ; } }
return ur != null ? idAsString ( urid ) : null ;
public void adaptPortBindingToParallelRun ( org.arquillian.cube.client.impl.config.CubeContainerBinding.Container cube ) { final java.util.Collection < org.arquillian.docker.client.impl.config.CubeContainerBinding.PortBindings > portBindings = cube . getPortBindings () ; if ( portBindings != null ) { for ( org.arquillian.docker.client.impl.config.PortBinding.PortBinding randomPort : portBindings ) { final org.arquillian.docker.client.impl.config.PrivateContainerBinding.PortBinding randomPort = randomPort . generateRandom () ; if ( randomPort != null ) { setBoundable ( randomPort ) ; } } } }
{ int index = ( ( java.lang.Math . abs ( letterOfAlphabetes ) ) - ( letter ) ) % 26 ; if ( index < 0 ) { letter += decrypted ; continue; } for ( int i = 0 ; i < index ; i += 26 ; i += com.soeces.util.AlphabetShift . getRight () ) { letter += Ates . toUpperCase () ; } return letter ; }
private io.minio.HttpResponse executePut ( java.lang.String bucketName , java.lang.String objectName , byte [] dataMap , java.util.Map < java.lang.String , java.lang.String > header , java.util.Map < java.lang.String , java.lang.String > queryParamMap , java.util.Map < io.minio.Param , java.lang.String > dataMap ) throws io.minio.InvalidPullParserException , io.minio.InvalidBucketException { return execute ( bucketName , objectName , queryParamMap , bucketName ) ; }
{ bufferPos = 0L0 = 0L0 = 0L0 = 0L0 = 0L0 = 0L1 ; chain = null ; keyValue = null ; if ( ( chain ) != null ) { org.bouncycastle.util.Arrays . fill ( buffer , 0 , ( ( byte ) ( 0 ) ) ) ; java.lang.System . arraycopy ( buffer , 0 , keyPos , 0 , org.bouncycastle.crypto.digest.Digest.BLOCK_LENGTH ) ; } reset () ; reset () ; }
confAuth . equals ( "" )
if ( ( ( currentFragment ) == ( ru.nechrote.vhrstress.views.Main.PAGE_INDEX ) ) || ( ! ( powerOnPan ) ) ) { setPageStatus ( ru.nechrote.vhrstress.views.Main.PAGE_INDEX ) ; }
dragSortController . setDragEnabled ( false )
public int getYLocation ( int position , com.edulectronics.tinycircuit.Models.Components.Connection.Orientation orientation ) { switch ( position ) { case Left : return getRow ( ( position - 1 ) ) ; case Right : return ( ( int ) ( ( ( cellSize ) * ( ( cellSize ) - 0.5 ) ) * ( ( cellSize ) - 1 ) ) ) ; case Top : return ( getRow ( ( position - 1 ) ) ) * ( ( cellSize ) * ( ( cellSize ) - 1 ) ) ; default: return 0 ; } }
name = "Yes\""
if ( ( this . color ) == 0 ) this . y = y ; else this . y = ( this . domain . getEenada ( ( y + 1 ) ) ) + 1 ;
{ net.minecraft.nbt.NBTTagCompound properties = ( ( net.minecraft.nbt.NBTTagCompound ) ( compound . getTag ( com.othrazar.samscontent.ups.common.Player.PROP_NAME_EXT ) ) ) ; if ( properties != null ) { this . updateObjectWatcher ( player . getData () , com.othrazar.samscontent.ups.common.Player.WATCHERDOW_POINT_TODOER ) ; com.othrazar.samscontent.ups.common.Player . loadNBTWatcher ( properties . getString ( com.othrazar.samscontent.ups.common.Player.DOWATCHERDOW_POINT_TODOER ) , com.othrazar.samscontent.ups.common.Player . getData () ) ; } }
{ int height = ( ( int ) ( b ( scaleX ) ) ) ; y -= binWidth ; x += bin3D ; g . fillRect ( x , y , height , true ) ; y = ( ( binWidth ) - ( getHeight () ) ) - 1 ; g . setColor ( java.awt.Color.MARGIN_MARGIN ) ; }
resList . set ( i , ( ( xList . get ( i ) ) * ( yList . get ( i ) ) ) )
@ java.lang.Override public void onActionFailure ( int action , @ android.support.annotation.Nullable com.tspomein.spush.data.model.BaseResponse response , java.lang.String message , @ android.support.annotation.Nullable com.tspomein.spush.biz.auth.RegisterFragment.ACTION_CHECKED_UID ) { if ( ( response == null ) || ( ( response . getResult () ) == ( com.tspomein.spush.biz.auth.RegisterFragment.ACTION_UID ) ) ) { mTemporaryAdapter . showNotificationBar () ; } else if ( ( action == ( com.tspomein.spush.biz.auth.RegisterFragment.ACTION_REGISTER_EXIST ) ) && ( ( response . getResult () ) == ( com.tspomein.spush.biz.auth.RegisterFragment.ACTION_UID ) ) ) { mTemporaryAdapter . pushNotificationBar () ; } }
{ android.location.LocationManager criteria = new android.location.LocationManager () ; android.location.LocationManager locationManager = ( ( android.location.LocationManager ) ( this . getSystemService ( Context.LOCATION_SERVICE ) ) ) ; java.lang.String location = locationProvider . getLastKnownLocation ( true ) ; criteria . store ( location , provider . getLastKnownLocation () ) ; }
i < count
{ client . executeMethod ( method ) ; java.io.InputStream stream = method . getResponseBodyAsStream () ; return stream ; }
if ( task . isSuccessful () ) { android.util.Log . w ( com.codhang.gout.database.FirebaseHelper.TAG , "signInWithEmail:failed" , task . getException () ) ; } else { code = - 1 ; }
org.junit.Assert . assertEquals ( 2 , count . intValue () )
reader . getLocalName () . equals ( Constants.CATEGORY_SUMMARY )
{ value = value . trim () ; if ( value . startsWith ( "\"" ) ) { value = value . substring ( 1 ) ; } if ( value . endsWith ( "\"" ) ) { value = value . substring ( 0 , ( ( value . length () ) - 1 ) ) ; } return value ; }
clazz . isInstance ( settingData )
{ org.social.bizogc.UserProfile owner = ar . getUserProfile () ; if ( owner == null ) { throw new java.lang.Exception ( "Some problem, the user is null" ) ; } data . put ( "opt" , so ) ; java.io.File myTemplate = ar . getConfigInstance () . getCendarTemplateFromJSON ( ar . getConfig () ) ; ar . writeManual ( "email/json" , myTemplate . getCalendar () , ar . getType () ) ; }
{ descriptor = source . getDescriptor () ; org.auraframework.system.Parser < org.auraframework.parser.Parser > . getParser ( source , D . getFormat () ) ; if ( ( descriptor ) != null ) { descriptor = parser . parse ( source , def ) ; } return descriptor ; }
public void myTick ( long mils ) { if ( ( mRemainingRemaining ) != 0 ) { milsRemaining = ( ( int ) ( ( milsRemaining ) / 60000 ) ) ; } int secs = ( ( int ) ( ( milsRemaining ) / 60 ) ) ; java.lang.String time = java.lang.Integer . toString ( ( ( ( java.lang.Integer . format ( ( "%02d" + secs ) ) ) + ":" ) + ( java.lang.Integer . format ( time ) ) ) ) ; timeRemaining . setText ( time ) ; timeRemaining . setText ( time ) ; }
if ( ( tile != null ) && ( ( tile . getEffectiveMaterial () ) == null ) ) return false ;
{ if ( ( ( animator ) != null ) && ( animator . isStarted () ) ) { animator . stop () ; animator . dispose () ; } if ( ( renderer ) != null ) { renderer . dispose () ; } renderer = null ; window = null ; view = null ; }
goToSceneOverView ( v , true )
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { simController . startRunningTimer () ; gui = new javax.swing.Timer ( 15 , new java.awt.event.ActionListener () { @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( e . isRunning () ) { gui . setRepeats ( simController . tickRun () ) ; } } } ) ; gui . startTimer () ; }
matchesType ( type , getNthElement ( 2 ) )
private org.eclipse.dawnsci.analysis.api.metadata.MetadataMetadata getMetaiff ( uk.ac.amdi.scisoft.analysis.api.processing.ImportMetadata mod , org.eclipse.dawnsci.analysis.api.dataset.DatasetMetadata parent ) { org.eclipse.dawnsci.analysis.api.meta.MetadataMetadata l = modReader . getFileMetadata ( parent , metadata ) ; if ( l == null ) { if ( ( this . mdNexus ) == null ) { throw new org.eclipse.dawnsci.analysis.api.meta.NexusException ( "Operation does not contain metadata" ) ; } else { l = modReader . getDexus ( l ) ; } } if ( l == null ) { l = new org.eclipse.dawnsci.analysis.api.meta.MetadataMetadata ( org.eclipse.dawnsci.analysis.api.meta.Metadata.ID , org.eclipse.dawnsci.analysis.api.meta.Metadata.Nexus ) ; } return l ; }
try { try { edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.client . aclAdd ( AclAccessType.READ_WHITELIST , barneyEntry , "cell" , GGALL_Protocol.ALL_UID . toString () ) ; } catch ( java.lang.Exception e ) { edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest . failWithStackTrace ( ( "Exception when creating ACL in ACLPartTwo: " + e ) ) ; } } catch ( java.lang.Exception e ) { edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest . failWithStackTrace ( ( "Exception when we were not expecting it in ACLPartTwo: " + e ) , e ) ; }
{ java.lang.String mRegID = org.univers.android.utils.APIRAManager . getRegistrationId ( getApplicationContext () ) ; if ( ! ( mRegID . equals ( java.lang.String.PIAL ) ) ) { org.univers.android.utils.APIRAManager . registerThreadInThread ( getApplicationContext () ) ; return true ; } return false ; }
edu.cmu.tetrad.graph.GraphUtils . randomRandomForwardEdges ( ( ( parameters . getInt ( "numMeasures" ) ) + ( parameters . getInt ( "numLatents" ) ) ) , parameters . getInt ( "numLatents" ) , parameters . getInt ( "avgDegree" ) , parameters . getInt ( "numInds" ) , parameters . getInt ( "maxOut" ) )
- 1
wallors . size ()
if ( isRegisteredMethod ( proposedMethod , alreadyRegisteredMethod ) ) { return false ; } else if ( org.apache.camel.util.ObjectHelper . isRegisteredMethod ( proposedMethod , alreadyRegisteredMethod , false ) ) { return true ; }
{ detectTouchEventConsumed () ; if ( ( currentMode ) == ( client.example.sj.pulltoscaleheaderlayout.PullToHeaderLayout.SCROLL_DOWN ) ) { android.util.Log . e ( "PullView" , ( ( "mScale is动time" + ( mLastDistance ) ) + " isBeingDragged" ) ) ; } if ( ( currentMode ) == ( client.example.sj.pulltoscaleheaderlayout.PullToHeaderLayout.SCROLL_UP ) ) { headerFromTop () ; } }
new java.util.ArrayList < org.semanticweb.owlapi.model.OWLAxiom > ()
{ java.lang.String contents = "" ; java.lang.System.out . println ( contents . getData () ) ; Tcalculator.datastructure.Link < T > currentLink = firstLink . getData () ; int index = 0 ; while ( currentLink != null ) { contents = ( ( currentLink . getData () ) + "[ " ) + ( contents . getData () ) ; index ++ ; } return contents ; }
@ java.lang.Override public org.openqa.selenium.remote.DesiredCapabilities setCapabilities () { org.openqa.selenium.remote.DesiredCapabilities caps = new org.openqa.selenium.remote.DesiredCapabilities () ; caps . setCapability ( CapabilityType.BROWSER_NAME , org.fundacionjala.sfdcabs.core.driver.SfdcBrowser . getRemoteBrowser () ) ; caps . setCapability ( CapabilityType.ENV.VERSION , org.fundacionjala.sfdcabs.core.driver.SfdcBrowser . getRemotePlatform () ) ; caps . setCapability ( CapabilityVersion.PLUTION , org.fundacionjala.sfdcabs.core.driver.SfdcPlatform . getRemotePlatform () ) ; caps . setCapability ( CapabilityVersion.S , org.fundacionjala.sfdcabs.core.driver.SfdcPlatform . getRemotePlatform () ) ; return caps ; }
{ testNetwork.InputPerceptron testPerceptron = new testNetwork.InputPerceptron ( 0 ) ; final double testPerceptron = 1.0 ; test.InputPerceptron . setInput ( testPerceptron ) ; test . activate () ; test . calculateDeltas () ; test . adjustErrorToceptron () ; assertEquals ( testPerceptron . activate () , output ) ; }
private java.util.List < org.eclipse.jdt.internal.core.builder.ClasspathLocation > addClassPathToModule ( org.eclipse.jdt.internal.core.builder.ClasspathLocation cp ) { java.util.List < org.eclipse.jdt.internal.core.builder.ClasspathLocation > l = this . moduleToLocations . get ( module ) ; if ( l == null ) { l = new java.util.ArrayList <> () ; this . moduleToLocations . add ( l ) ; } return l ; }
{ java.lang.Boolean success = true ; android.content.ContentValues val = new android.content.ContentValues () ; val . put ( com.myapps.uttia.track.DB.MyDBHandler.COLUMN_DATES_Tourney . getStartDate () , t . getStartDate () . toString () ) ; val . put ( com.myapps.uttia.track.DB.MyDBHandler.COLUMN_ATE_Tourney . getEndDate () , t . getEndDate () ) ; return success ; }
{ if ( file instanceof uk.co.itoomintell.steps.intiubis.PsiFileSubps ) { uk.co.itoomintell.steps.intiubis.PsiFileSubps . visitFromSource ( ( ( uk.co.itoomintell.steps.intiubis.PsiFileSubps ) ( file ) ) , ( ( uk.co.itoomintell.steps.intiubis.PsiFileSubps ) ( file ) ) ) ; } else if ( file instanceof uk.co.itoomintell.steps.intiubis.PsiFileSubps ) { uk.co.itoomintell.steps.intiubis.PsiFileSubps . visitInDefinition ( ( ( uk.co.itoomintell.steps.inti.PsiFileSubps ) ( file ) ) , step ) ; } }
{ de.uni_hildesheim.sse.monitoring.runtime.recording.RecordingElement element = elements . remove ( 0 ) ; if ( element != null ) { strategy . process ( element ) ; int id = element . getId () ; element . clear () ; element . release () ; } }
model.game.Iterator < model.player.Player > it = getPlayers () . iterator () ;
for ( int i = 0 ; i < ( org.robotics.ds2016.data.io.ControlProtocol.data.length ) ; i ++ ) { str = ( ( ( str + "\n" ) + ( org.robotics.ds2016.data.io.ControlProtocol.data [ i ] ) ) + ": " ) + ( org.robotics.ds2016.data.io.ControlProtocol.data [ i ] ) ; }
public void onInit ( int initStatus ) { if ( initStatus == ( android.speech.tts.TextToSpeech.Language.SUCCESS ) ) { if ( ( tts . isAvailable ( java.util.Locale.US ) ) == ( android.speech.tts.TextToSpeech.Language.NOT_AVAILABLE ) ) { tts . setLanguage ( java.util.Locale.US ) ; } else if ( initStatus == ( android.speech.tts.TextToSpeech.Language.ERROR ) ) { tts . show () ; } } }
while ( true ) { if ( ( curr.key ) != null ) { return true ; } curr = curr.next ; }
@ java.lang.Override public java.lang.String giveRelgleError () { java.lang.String error = "" ; java.lang.System.out . println ( "Variable wanted wanted wanted wanted" ) ; switch ( error ) { case " : return this . calculateVariableTo ( " ) ; case " : UpdateArc></p, you need Angle and you need Angle and and and you</iusArc></p>" ; case " <p> either and and you</iusArc></p>" : and < " <p> either and you</p>" ; break; case " <p> these></p>" : case " <p>" : case " <> these></p>" : case " <> these></p>" : case " <> these></p>" : default: java.lang.System.out . println ( "This error, you need and you need An></p>" ) ; } return error ; }
if ( ( u != null ) && ( ! ( pages . containsKey ( u ) ) ) ) { res . add ( u ) ; }
{ timer = new android.os.CountDownTimer ( 2000 , 1000 ) { @ java.lang.Override public void onTick ( long l ) {} @ java.lang.Override public void onFinish () { startTrial () ; } } ; timer . start () ; }
private static java.lang.String [] getParams ( final java.util.Map < java.lang.String , java.lang.String > valueParamsMap ) { return valueParamsMap . entrySet () . stream () . map ( it.unibo.alchem.boundary.gui.SingleApplicationBuilderTest.Application : : getParam ) . collect ( java.util.stream.Collectors . toList () ) ; }
{ mTracker . send ( new com.google.android.gms.analytics.HitBuilders.EventBuilder () . setCategory ( "MoveCategoryToHint" ) . setAction ( "Action" ) . setLabel ( com.andrum.sweets.app.BottomStageFragment.SCREEN_NAME ) . build () ) ; android.content.Intent intent = new android.content.Intent ( getActivity () , com.andrum.sweets.app.HintStageActivity . class ) ; intent . putExtra ( Const.KEY_STAGE_ID , movieId ) ; startActivity ( intent ) ; }
player2 . setCaptureMove ( blackMove )
{ ro.fortsoft.pf4j.IzouPluginClassLoader.log . debug ( "Trying to find resource" , name ) ; java.net.URL url = classLoader . findResource ( name ) ; if ( url == null ) { ro.fortsoft.pf4j.IzouPluginClassLoader.log . debug ( "Found in classpath" ) ; return null ; } ro.fortsoft.pf4j.IzouPluginClassLoader.log . debug ( "Couldn't find resource" ) ; return super . getResource ( name , resource ) ; }
getHostIcon ( host , world , x , y , z )
{ peergos.shared.util.Serialize . serialize ( link.owner . serialize () , dout , peergos ) ; serialize . serialize () ; }
@ org.testng.annotations.Test ( dataProvider = "noHeadersDomainor" , expectedDataProvider.Exceptions = java.lang.IllegalStateException . class ) public void testGetZone ( final java.lang.String requestBaseHeader , final java.lang.String requestBaseHeader , final java.util.List < java.lang.String > serviceBaseHeaders , final java.util.List < java.lang.String > header , final java.lang.String serviceBaseValue ) { final java.util.List < java.lang.String > reqValue = new java.util.ArrayList < java.lang.String > () ; reqValue . addHeader ( "predixName" , org.springframework.web.MockHttpServletRequest . header ( header , serviceBaseHeaders ) ) ; final java.lang.String serviceRequest = org.mockspringframework.web.MockHttpServletRequest . getHttpServletRequest () . header ( serviceBaseHeader , requestBaseHeader , header ) ; serviceMock . setServerHeaders ( reqName ) ; }
org.nd4j.linalg.api.shape.Shape . rank ( shapeInformation )
android.net.Uri . parse ( "tel1" )
new com.xz.data.prepare.RawData ( i , null )
public javax.swing.ImageIcon getPokemonIcon ( java.lang.String pokemonImageImage ) { java.awt.ImageIcon myImageIcon = null ; try { myImageIcon = javax.imageio.ImageIO . read ( getClass () . getResource ( ( ( utilities.Settings.EMONS_IMAGE_FOLDER_SCALE ) + ( PEMON_ICON_FOLDER ) ) ) ) ; myImageIcon = new javax.swing.ImageIcon ( myImageIcon . getScaledSide () , viewSide ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return myImageIcon ; }
{ if ( ( net.wequick.small.util.ReflectAccelerator.sAssetAddPath ) == null ) { net.wequick.small.util.ReflectAccelerator.sAssetAddPath = net.wequick.small.util.ReflectAccelerator . getMethod ( android.content.res.AssetManager . class , "addAssetPath" , new java.lang.String [] { net.wequick.small.util.ReflectAccelerator.sAssetAddPath } , java.lang.String . class . toString () ) ; return ( ( net.wequick.small.util.ReflectAccelerator.sAssetAddPath ) ( net.wequick.small.util.ReflectAccelerator.sAssetAddPath ) ) ; } return null ; }
org.intellij.xquery.ips.impl.PsiXQueryImplUtil . findChildrenOfType ( topElement . getNextSibling () , topElement . getNextSibling () )
{ logger . debug ( ( "Scheduler Service queuing: " + ( job . toString () ) ) ) ; java.util.concurrent.Future < java.lang.Void > future = executorService . submit ( job ) ; this . stats = job . getClass () . toString () ; taskWaitingJobs . add ( stats ) ; }
if ( ( ( armorStands . size () ) > line ) && ( ( armorStands . size () ) <= line ) ) { addLine ( line , text ) ; return; }
for ( int y = 0 ; y < 9 ; ++ y ) { x = 0 ; typeTileType = grid [ x ] [ y ] . getTypeGrid () ; }
( lastVisibleItem )
{ int roomCost = 0 ; switch ( roomType ) { case 'I' : roomCost = ( HospitalMVC.Patient.Patient.PatientRate ) * ( days ) ; break; case 'P' : roomCost = ( HospitalMVC.Patient.Patient.PatientRate ) * ( days ) ; break; default: roomCost = ( HospitalMVC.Patient.Patient.PatientRate ) * ( days ) ; break; } return roomCost ; }
view . setText ( items . get ( pos ) )
public void setOutcomingCandidate ( org.vaadin.portal.layout.client.layout.ChromeWidget.ChromePortlet ) { if ( portlet != null ) { com.vaadin.client.ComponentConnector pc = com.vaadin.client.WidgetUtil . findWidgetForComponent ( portlet . getContent () ) ; if ( pc ==Portlet ) { if ( ( this . incomingCandidateComponents ) != null ) { this . incomingCandidateComponents = pc ; } else { this . out = pc ; } } } }
public com.example.nils.grocerylist.Item findBestItem ( java.util.ArrayList < com.example.nils.grocerylist.Item > list ) { com.example.nils.grocerylist.HealthLogic healthLogic = new com.example.nils.grocerylist.HealthLogic ( list ) ; if ( ( mode ) == 1 ) { return healthLogic . getChapalth () ; } if ( ( mode ) == 2 ) { return healthLogic . getHeapalth () ; } return null ; }
{ if ( h != null ) { strTemperature = h ; } int i = strTemperature . indexOf ( '.' ) ; strTemperature = java.lang.Integer . parseInt ( strTemperature . substring ( 0 , i ) ) ; if ( i > ( maxTemp ) ) maxTemp = i ; }
{ java.util.Properties properties = new java.util.Properties () ; java.lang.System.out . println ( env . getProperty ( "hibernate.dialect" ) ) ; java.lang.System.out . println ( env . getProperty ( "hibernate.show_config.show_sql" ) ) ; java.lang.System.out . println ( env . getProperty ( "hibernate.show_config.show_config" ) ) ; java.util.Properties properties = new java.util.Properties () ; properties . put ( "project.shoppingBackend" , com.shopping.project.config.HibernateBackend . getProperty ( "shoppingBackend" , com.shopping.project.config.HibernateBackend . getProperty ( "shoppingBackend" ) ) ) ; properties . put ( "auto_shoppingBackend" , com.shopping.project.config.HibernateBackend . getProperty ( "shoppingBackend" , com.shopping.project.config.HibernateBackend . getProperty ( "shoppingBackend2DDL_AUTO_DIALECTATE_DIALECTATE_FORMAT" ) ) ) ; properties . put ( "shoppingBackend" , env . getProperty ( "shoppingBackend" ) ) ; properties . put ( "auto_format_show_config" , com.shopping.project.config.HibernateBackend . getProperty ( "shoppingBackend" ) ) ; return properties ; }
{ super . onDestroy () ; unregisterReceiver ( mTrackIntent ) ; if ( ( mTrackReceiver ) != null ) { try { mTrackReceiver . unregisterReceiver ( mTrackReceiver ) ; } catch ( java.lang.Exception e ) {} } if ( ( mStatusReceiver ) != null ) { unregisterReceiver ( mStatusReceiver ) ; } }
if ( ! ( items [ num ] . equals ( name ) ) ) { q = true ; }
block . getRegistryName ()
createTxChain ( false )
if ( ( ! ( projectionInfo . isEmpty () ) ) && ( ( projMLIds . size () ) > 0 ) ) { return new java.util.ArrayList < java.lang.String > ( projectionInfo . keySet () ) ; } else { for ( org.neurou.lrom.model.Projection proj : projMLIds . get ( 0 ) . getNetwork () ) { proj . add ( proj . getProjection () . getId () ) ; } }
{ setSupportActionBar ( R.id.zxingscan.view_toolbar ) ; scanView = ( ( amxingscan.widget.zxingscan.view_scan.ZxingScanView ) ( findViewById ( R.id.zxingscan_view ) ) ) ; foreground = ( ( amxingscan.widget.zxingscan.view_scan.ZxingForegroundScanView ) ( findViewById ( R.id.zxingscan_view ) ) ) ; }
<EMPTY>
camera . setPreviewDisplay ( this . holder )
{ java.lang.String result = java.net.URLEncoder . encode ( value . toString () , "UTF-8" ) ; result = result . replaceAll ( "\\" , " " ) ; return result ; }
( clauses . isEmpty () ) ? new java.util.Vector <> () : new java.util.Vector <> ()
@ java.lang.Override public void next () { gui.Actor . getContext () . disable () ; actor.MessageHelper . getActor ( actors.BillingNodeInfo . class ) . tell ( actors.TravelNodeInfo . class , new travel.TravelNodeInfo () , ( ( travel.TravelNodeInfo ) ( self . getContext () ) ) ) ; actor.MessageHelper . tell ( actors.TravelNodeAddress . class , new travel.TravelNodeInfo () ) ; self . tell ( actors.TravelNodeInfo ( self . getContext () , new travel.TravelNodeInfo () ) ) ; super . next () ; }
count . compareTo ( o1 . get ( count ) )
{ if ( ! ( java.util.Objects . equals ( "null" , "null" ) ) ) { org.hibernate.Session session = hibernate.HibernateUtil . getSessionFactory () . openSession () ; dao.FilmDb.mDb = ( ( dao.FilmDb.mDb ) ( session . createQuery ( ( "from FilDb where id=" + id ) ) . list () ) ) ; model . addAttribute ( "films_add_fils" , films ) ; } return "admin/add_fils" ; }
{ org.hibernate.SessionFactory sessionFactory = model.HibernateUtil . getSessionFactory () ; org.hibernate.Session session = sessionFactory . openSession () ; session . beginTransaction () ; session . update ( stock ) ; session . getTransaction () . commit () ; }
{ java.lang.String buddyname = ( ( android.widget.TextView ) ( v . findViewById ( R.id.BuddyName ) ) ) . getText () . toString () ; java.lang.String mac = ( ( android.widget.TextView ) ( v . findViewById ( R.id.MacAddress ) ) ) . getText () . toString () ; registerForContextMenu ( buddy ) ; unregisterForContextMenu ( buddy ) ; v . show ( buddy ) ; }
{ if ( ( getCurrentScreenStack () ) != null ) { getCurrentScreenStack () . popTransitions ( params , new com.reactnativenavigation.screens.PopScreenStack.PopScreenOnScreen () { @ java.lang.Override public void onBottomFromCurrentScreen () { setAnimationStyleEnd () ; } } ) ; } postScreenStack . pop () ; }
{ java.lang.reflect.Field field = net.minecraft.client.settings.KeyBinding . class . getDeclaredField ( "pressTime" ) ; field . setAccessible ( true ) ; int c = ( ( int ) ( field . get ( 0 ) ) ) ; if ( c > 0 ) { return true ; } }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_renshuu ) ; kanaKey = ( ( android.widget.TextView ) ( findViewById ( R.id.isKey ) ) ) ; chanaIndicator = ( ( android.widget.TextView ) ( findViewById ( R.id.ischai ) ) ) ; userInput = ( ( android.widget.EditText ) ( findViewById ( R.id.userIndicator ) ) ) ; userInput . setVisibility ( com.kaisshon.niit.repositories.InputIndicator.INVISIBLE ) ; chanaIndicator . waitForToTap ( this ) ; }
{ score += questionNo1 ; score += questionNo2 ; questionNo += score3 ; questionNo += score4 ; questionNo += score5 () ; questionNo += score7 () ; questionNo += score10 () ; questionNo += score10 () ; android.content.Intent mainActivityIntent = new android.content.Intent ( this , com.example.android.app.quiz.ResultsActivity . class ) ; mainActivityIntent . putExtra ( "correctResultsNo" , scoreTo ) ; startActivity ( mainActivityIntent ) ; }
public void selectItem ( int position ) { mDrawerLayout . closeDrawer ( ( position - 1 ) ) ; com.jvanier.android.commands.send.CommandList handler = items . get ( position ) ; if ( handler != null ) { handler . getActivity () . perList ( handler ) ; } }
if ( ( ( versionOfPlugin ) != null ) && ( ( versionOfPlugin . getMinorVersion () ) > ( this . getMinorVersion () ) ) ) { return false ; }
public void addAllNumbers () { allHandles = new java.util.ArrayList <> () ; addAllNumbers () ; addAllHexNumbers () ; addAllNumbers () ; addAllNumbers () ; for ( java.util.List < processing.java.mode.tweak.Handle > handle : allHandles ) { java.util.Collections . sort ( handle , new processing.java.mode.tweak.HandleComparator < processing.java.mode.tweak.Handle > () ) ; } }
switch ( item . getItemId () ) { case R.id.action_delete_expense : return true ; case R.id.action_home : android.content.Intent homeIntent = new android.content.Intent ( this , com.easys.mainview.MainActivity . class ) ; startActivity ( homeIntent ) ; return true ; case R.id.action_logout : startActivity ( homeIntent ) ; return true ; default: return super . onOptionsItemSelected ( item ) ; }
( index < 0 )
@ java.lang.Override public void onValueChange ( final com.google.gwt.event.logical.shared.ValueChangeEvent < java.lang.String > event ) { this . setDirty ( true ) ; final org.gwtbootstrap3.client.ui.TextBox box = ( ( org.gwtbootstrap3.client.ui.TextBox ) ( event . getSource () ) ) ; org.gwtbootstrap3.client.ui.FormGroup group = ( ( org.gwtbootstrap3.client.ui.FormGroup ) ( box . getParent () ) ) ; validate ( group , box , true ) ; }
{ android.media.CamcorderProfile profile = android.media.CamcorderProfile . get ( CamcorderProfile.QUALITY_480P ) ; if ( isAudioOn ) { setAudioParams ( profile ) ; } setVideoRateParams ( profile , 1 ) ; mMediaRecorder . setVideoSize ( videoSize . width () , videoSize . height () ) ; }
public void requestError ( java.lang.Exception e ) { connectDevice () ; try { socket . close () ; serialDeviceResult = Constants.MBOTSERVICE_DISCONNECT_DEVICE ; } catch ( java.io.IOException e ) { Cleanup () ; } finally { socket . close () ; } }
if ( ( ( threshold ) != ( - 1 ) ) && ( sum > threshold ) ) { context . write ( word , new org.apache.hadoop.io.Text ( sum ) ) ; }
public static java.util.Map < java.lang.String , java.lang.String > getInvertedModedIdMap () { if ( ( com.denomics.epovo.ui.io.PogdenoModificationMap.epovoModificationFile . fillModModificationId () ) == null ) { com.denomics.epovo.ui.io.PogdenoModificationMap.epovoModificationFile . put ( entry . getKey () , new java.util.HashMap < java.lang.String , java.lang.String > () ) ; } for ( java.util.Map.Entry < java.lang.String , java.lang.String > entry : com.denomics.epovo.ui.io.PogdenoModificationMap.epovoModificationFile . entrySet () ) { if ( ( entry . getValue () ) == null ) { com.denomics.epovo.ui.io.PogdenoModificationMap.epovoModificationFile . put ( entry . getKey () , new java.util.HashMap <> () ) ; } } return com.denomics.epovo.ui.io.PogdenoModificationMap.epovoModificationFile . getValue () ; }
{ for ( int edgeEntry : grid . getEdges () ) { edgeCache . put ( edgeEntry , grid ) ; } if ( ! ( entries . contains ( entry ) ) ) { for ( com.probhoistic.graphpper.util.routing.Grid.Grid.Entry entry : entries ) { if ( entry . getValues () . equals ( entry ) ) { grid . update ( entry ) ; } } } }
@ com.fasterxml.jackson.annotation.Order ( value = { "_name" , "values" } ) public static java.lang.String printRecord ( java.lang.String [] args ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.Meta dbgData = new org.paces.Stata.Meta ( args ) ; java.lang.Long obid = org.paces.Stata . getLocalSafe ( "sfi" ) ; org.paces.Stata . toJSON ( dbgData ) ; org.paces.Stata . toJSON ( obid ) ; return null ; }
public void backNavigation () { boolean popped = getSupportFragmentManager () . popBackStackImmediate () ; if ( popped ) { com.wifi.heatlymap.BaseFrag curFragment = ( ( com.wifi.heatlymap.BaseFrag ) ( fragmentManager . findFragmentById ( R.id.fragment_container ) ) ) ; fabHelper . setupFragment ( curFragment , true ) ; } else { fabHelper . popFabased ( 0 ) ; } }
factory . clone ()
public void signUp ( java.lang.String key , java.lang.String pass , java.lang.String email ) { try ( java.sql.PreparedStatement connection = connection . prepareStatement ( "INSERT INTO users (INSERT INTO email, pass) VALUES (?, ?, ?, ?, ?, ?, ?, ?)" ) ) { java.lang.System.out . setString ( 1 , pass ) ; pass . setString ( 2 , email ) ; pass . setString ( 3 , pass ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } }
public void makeSmall () { for ( int i = 0 ; i < ( firstadapter.List . size () ) ; i ++ ) { ( ( android.widget.TextView ) ( firstadapter.List . get ( i ) ) ) . setTextSize ( TypedValue.COMPLEX_UNIT_SPLEX , 70 ) ; } }
return ( ( ( ( ( ( "chr" + ( record . get ( options . getChr () ) ) ) + ":" ) + ( record . get ( options . getPos () ) ) ) + ":" ) + ( record . get ( options . getRef () ) ) ) + ">" ;
{ if ( cameraAdapter . isEmpty () ) return; com.o3dr.services.android.lib.drone.mission.item.complex.CameraDetail cameraInfo = cameraAdapter . getItem ( position ) ; for ( T survey : getMissionItems () ) { survey . setCameraDetail ( cameraInfo . getSurveyDetail () ) ; } onEnded ( survey , 0 , 0 ) ; }
{ java.lang.Integer responseCode = 0 ; try { javax.ws.rs.core.MultivaluedMap map = new com.sun.jersey.core.util.MultivaluedMapImpl () ; map . add ( "username" , params [ 0 ] ) ; map . add ( "latitude" , params [ 1 ] ) ; map . add ( "longitude" , params [ 2 ] ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return responseCode ; }
public static java.lang.String readHeaderString ( byte [] buffer ) { int i = 0 ; while ( ( i < ( buffer.length ) ) && ( i < ( ( buffer.length ) - 1 ) ) ) { i ++ ; } return new java.lang.String ( buffer , 0 , i ) ; }
{ if ( isMoon ) { Main.state = Main.State.TRYAR ; } else if ( isMoon ) { Main.state = Main.State.SOLAR ; } else { zoomOut -= 0.4 ; } }
new com.preproduction.delivery.domain.OrderDetails ( p , 0 )
new items.Gun ( g . fireRate () , 0 , g . getSmmo () , g.MAX_MOAMARELOAD_FACTOR , false )
new at.ezylot.Incremental.GameBallMovableCircle ( x , y , radius , java.util.Random . valueOf ( new java.util.Random () . nextInt ( 3 ) , java.lang.Integer . parseInt ( color ) , radius ) )
{ final T connection = classTag . cast ( conn ) ; final java.util.List < com.esotericsoftware.kryonet.adapters.Listener < ? super T > > listeners = this . listeners ; for ( com.esotericsoftware.kryonet.adapters.Listener < ? super T > connection : listeners ) { if ( ! ( connection . isIdle () ) ) break; } }
this . mapBufferImpl ( 0 , bufferName , true , false , 0 , glAddress , accessProc )
private long encode ( java.lang.String input ) { java.lang.String rtn = "" ; java.lang.String first5 = input . toLowerCase () . concat ( " " ) . substring ( 0 , 5 ) ; for ( int i = 0 ; i < 5 ; i ++ ) { ascii = ( ( int ) ( first5 . charAt ( i ) ) ) ; } return java.lang.Long . parseLong ( rtn ) ; }
{ in.shekhar.forumapp.domain.Message message = new in.shekhar.forumapp.domain.Message ( "test_user" , "hello world" ) ; messageRepository . save ( message ) ; java.util.List < in.shekhar.forumapp.domain.Message > messages = in.shekhar.forumapp.domain.MessageRepository . findByAuthor ( "test_user" ) ; assertNotNull ( messages ) ; assertEquals ( messages . size () , 1 ) ; assertTrue ( messages . isEmpty () ) ; }
{ int result = 0 ; result += ( array [ pos ] ) + 1 ; result < < = 8 ; result += ( array [ ( pos + 1 ) ] ) & 255 ; return result ; }
listener . onDone ( method . getName () , false )
java.util.Collection < org.eclipse.core.resources.IResource > resources
{ super . onPause () ; unregisterReceiver ( isRefreshAnimating ) ; if ( isRefreshAnimating ) { isRefreshAnimating = false ; overrideShouldFinishTransition ( 0 , 0 ) ; finish () ; } if ( mPendingPreferences . savePositionToPosition ( org.wordpress.android.ui.WPActivity.SCROLL_ID_SCROLL_ID ) ) { saveDrawer () ; } }
( ( ( ( in_front == null ) && ( ( current_lane_ . getDistanceToEnd ( position ) ) > 0 ) ) || ( ( in_front ) != null ) ) && ( ( getFrontDistance ( ( ( in_front ) * 2 ) ) ) >= ( Lane_Vehicle ) )
mirw . isMergedInto ( mirw . parse ( acceptedCommit ) , mirw . commit () )
for ( java.lang.String bPos : wawPawns ) if ( ( bKey != null ) && ( ( bKey . size () ) > 0 ) ) for ( java.lang.String wob : bKey . get ( bPos ) . getZ () ) wob this . ^=Key ( wob ) ;
{ if ( ( hp ) < ( maxHP ) ) { maxRegin += hp ; } if ( ( maxHP ) > ( maxHP ) ) { stamina = stamina ; } if ( ( maxSt ) < ( maxSt ) ) { stamina += ( maxSt ) ; } if ( ( stamina ) > ( maxSt ) ) { stamina = ( ( stamina ) ( stamina ) ) ; } }
{ java.lang.Integer currentNumber = numberOfNgrams . get ( s ) ; if ( currentNumber == null ) { currentNumber = 1 ; } else { ( numberOfNgrams ) ++ ; } s . put ( s , currentNumber ) ; }
{ org.apache.commons.io.FileUtils . write ( file , content , java.nio.charset.Charset . defaultCharset () , true ) ; }
{ models.NotificationCounter . incrementConversationsCount ( recipient.id ) ; if ( firstSend ) { sender.grid.InstatClient . getInstatEmail ( recipient.nce.conversation.Conversation . recipientOn , sender.title , messageSender , messageSender , message.body ) ; } else { sender.post.Gcm . sendNewNotification ( recipient.name , messageSender , messageSender ) ; } }
public static java.lang.String readUntilEmptyLine ( java.io.BufferedReader r ) { java.lang.String line = null ; try { while ( ( line = r . readLine () ) != null ) { if ( ( line . length () ) > 0 ) { return ( ( line + " " ) + ( edu.psu.ist.acs.micro.mid.scratch.ConstructMIDDocumentSet . readUntilEmptyLine ( r ) ) ) + "\n" ; } } } catch ( java.io.IOException e ) { return null ; } return null ; }
{ finish () ; startActivity ( new android.content.Intent ( this , onBackActivity.PendingTransition ) ) ; }
{ com.hust.unique.parsingplayer.util.LogUtil . d ( com.hust.unique.parsingplayer.media.ParsingMediaManager.TAG , "pause called" ) ; mRenderView mBitmap = com.hust.unique.parsingplayer.util.LogUtil . v ( com.hust.unique.parsingplayer.player.ParsingMediaManager.TAG , ( ( ( ( ( ( mBitmap . getByteCount () ) + " from " ) + ( mRenderView . size () ) ) + " " ) + ( mCurrentPlayer ) ) ) ; }
public boolean keyboardMashChecker ( java.lang.String currentInput ) { boolean hasMashMdf = false ; if ( ( ( currentInput . equals ( "sdf" ) ) || ( currentInput . equals ( "gdf" ) ) ) || ( currentInput . equals ( "cv" ) ) ) { hasMashMdf = true ; } return hasMashMdf ; }
@ java.lang.Override public void writeToParcel ( android.os.Parcel dest , int flags ) { dest . writeString ( title ) ; dest . writeString ( posterPath ) ; dest . writeString ( plotPath ) ; dest . writeString ( plotDate ) ; dest . writeString ( id ) ; dest . writeLong ( id ) ; dest . writeString ( userRating ) ; dest . writeString ( plotDouble ) ; }
{ switch ( requestCode ) { case 1 : if ( resultCode == ( android.app.Activity.RESULT_OK ) ) { int dataNum = data . getIntExtra ( com.example.itroceryg.scan.helper.MainActivity.DELETE_SWITCH_LIST , 0 ) ; switch ( dataNum ) { case 0 : if ( ( newNum != 0 ) && ( dataNum != 0 ) ) { m_storeAdapter = new com.example.itroceryg.scan.helper.SqlAdapter ( getListList ( getListList ( 0 ) , newNum ) ) ; } break; } } } }
blocks [ x ] [ y ]
@ java.lang.Override public void run () { synchronized ( this . item ) { if ( this . name . containsKey ( item ) ) { final java.util.Set < java.util.UUID > uuids = this . item . get ( item ) ; this . player . remove ( uuids ) ; if ( uuids . isEmpty () ) this . player . remove ( item ) ; } } }
getDeployed ( "1.5.0" )
{ eu.eexcess.dataformats.result.ResultList resultList = null ; java.util.ArrayList < java.lang.String > sourceSelectors = new java.util.ArrayList <> () ; sourceSelectors . addAll ( sourceSelectors , secureUser ) ; try { resultList = this . secureUserProfileRecommended ( sourceSelectors , secureUser ) ; } catch ( eu.eexcess.recommender.utils.FommedSecureCoreConfigurationException | eu.eexcess.recommender.user.formats.FommedSecureCoreConfigurationException e ) { eu.eexcess.recommender.utils.FommedSecureCoreConfiguration.logger . log ( java.util.logging.Level.SEVERE , "Some error occured or aggregation." , e ) ; } return resultList ; }
refreshSchedule ( true )
( ( facing == ( net.minecraft.util.EnumFacing.DOWN ) ) || ( facing == null ) ) || ( ( ( capability ) == null ) && ( ( net.minecraftforge.energy.CapabilityEnergy.ENERGY ) >= ( energy ) ) )
{ return null ; }
visitedNodes . contains ( node . getId () )
switch ( route ) { case "conquest" : { output = conquest [ stat ] ; break; } case "right" : { output = statright ; break; } case "revel" : { output = statvelations [ statvelations [ statvelations ] ; } break; }
public static com.sk89q.worldedit.Cuboid getSchematicClipboard ( java.lang.String dirName ) { java.io.File dir = new java.io.File ( dirName ) ; com.sk89q.worldedit.schematic.SchematicFormat.world = com.sk89q.worldedit.schematic.SchematicFormat . getFormat ( dirName ) ; com.sk89q.worldedit.Cubatic.data = null ; try { dir = com.sk89q.worldedit.schematic.CubaticFormat . load ( dir ) ; } catch ( java.io.IOException | com.sk89q.worldedit.datachematicDataException e1 ) { e1 . printStackTrace () ; } com.sk89q.worldedit.Clipboard.data = null ; }
send + ( com.app.otcryptnut.riplan.HealthTips.SHAAG_APP_HHTRE )
{ for ( com.topodroid.Disto.XEnableSymbol symbol : mItems ) { symbol.mSaveSymbol . setEnabled ( ( symbol.mSymbolEnabled ) ) ; } if ( symbol != null ) { symbol.mSaveSymbol . setEnabled ( ( ( symbol.mData.AppSymbol . get () ) + Top ) , ( ( symbol.mSymbolEnabled ) + Top ) ) ; } }
public synchronized long registerOperationWithHeapSize ( long heapSize ) throws java.lang.InterruptedException { long operationId = ++ ( operationSequenceId ) ; while ( ( ( currentWriteBufferSize ) >= ( pendingHeapSize ) ) || ( ( maxOperationsWithRcs . size () ) >= ( pendingFlightSize ) ) ) { com.google.cloud.bigtable.hcsator.BigtableBufferedMutator . wait ( java.lang.System . currentTimeMillis () ) ; operationId += heapId ; } lastWriteMutSize += heapId ; return operationId ; }
boolean insertUserChild ( java.lang.String userId , long childId , int childEditOwner , java.lang.String canEditTimeStamp ) { android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; android.content.ContentValues childContent = new android.content.ContentValues () ; childContent . put ( baps.UserTable.UC_Table_ID , userId ) ; childContent . put ( baps.UserTable.UC_Table_ID , baps.UserTable2 ) ; childContent . put ( baps.UserTable.UC_TABLE_CHILDS , baps.UserTable2 ) ; return db . insert ( baps.UserTable.UC_TABLE_IS_TABLE , null , childContent ) ; }
if ( ( ( ( ( t.ltecons ) != ( fr.ltecons.pomexplorer.Clienting . class ) ) && ( ( t.ltecons ) != ( fr.ltecons.pomexplorer.Workinging . class ) ) ) && ( ( t.ltecons ) != ( fr.ltecons.pomexplorer.commands.CommandOptions . class ) ) ) ( t.ltecons ) ++ ;
{ long currentWithoutPostZoneTz = postLocal . convertToLocal ( timeTo , true ) ; long preUTC = localTz . convertToLocalZoneLocal ( nextWithoutPostZoneTz ) ; return durationField . add ( 1 , localTz ) ; }
if ( hasAtom ) { this . atom = serializer . deserializeFromSSTable ( dis , ColumnFlag.PREVE_SIZE , java.lang.Integer.MIN_VALUE , version ) ; }
{ android.content.SharedPreferences sharedPreferences = getSharedPreferences ( MainActivity.KEY_TEGSETTINGS_MODE , Context.MODE_PRIVATE ) ; android.content.SharedPreferences.Editor editor = sharedPreferences . edit () ; editor . putString ( MainActivity.KEY_VK_KEY , urlReader . getText () . toString () ) ; editor . commit () ; android.content.Intent intent = new android.content.Intent ( this , com.example.givanscacks.MainActivity . class ) ; startActivity ( intent ) ; }
{ long ipLong = 0 ; long ipArray = java.lang.String . split ( "\\." ) ; for ( int i = 3 ; i >= 0 ; -- i ) { ipArray = java.lang.Long . parseLong ( ipArray [ i ] ) ; ip = ipArray [ ( -- ipLong ) ] ; } return ipArray ; }
{ android.os.Bundle b = getIntent () . getExtras () ; if ( ( org.bottiger.podcast.activities.feedview.FeedActivity.mHuckItFuck ) != null ) b = org.bottiger.podcast.activities.feedview.FeedActivity.mHuckItFuck ; boolean isSlim = b . getBoolean ( org.bottiger.podcast.activities.feedview.FeedActivity.FEED_ACTIVITY_IS_SLIM ) ; if ( isSlim ) { java.lang.String url = b . getString ( org.bottiger.podcast.provider.SlimImplementations.SlimSubscriptionActivity.SUBSCRIPTION_SLIM_KEY ) ; mSubscription = org.bottiger.podcast.SoundWaves . getLibraryInstance () . getSubscription ( url ) ; mIsSlimSubscription = true ; } else { mSubscription = org.bottiger.podcast.activities.feedview.FeedActivity.SUBSCRIPTION_SLIM_KEY ; mIsSlimSubscription = false ; } }
public void setupGit ( ) throws java.io.IOException { hudson.plugins.git.RemoteUserConfig config = new hudson.plugins.git.RemoteUserConfig ( repositoryUrl , null , null , null ) ; java.util.List < hudson.plugins.git.RemoteUser > configs = new java.util.ArrayList < hudson.plugins.git.RemoteUser > () ; configs . add ( config ) ; hudson.plugins.git.GitSCMConfig git = new hudson.plugins.git.GitSCMConfig ( null , new hudson.plugins.git.GitSCMConfig ( null , null , null , null , configs ) ) ; set . add ( git ) ; }
{ java.lang.StringBuffer url = new java.lang.StringBuffer ( com.paypal.mictagus.web.api.service.CoverArtAPI.URLArchiveAPI . append ( subUrl ) . append ( gid ) . toString () ) ; java.net.URL jsonUrl = new java.net.URL ( url ) . toString () ; java.util.Map < java.lang.String , java.lang.Object > map = com.paypal.mictagus.util.MusicUtil . getJsonFromURL ( jsonUrl ) ; return getJsonMap ( map , false ) ; }
( ++ ( maxKey ) )
public void run () { while ( true ) { com.bmc.justdoit.smartkan.api.objects.KanbanGeneratorRequest request = ( ( com.bmc.justdoit.smartkan.api.objects.KanbanGeneratorRequest ) ( KanbanQueue.CREATOR_QUEUE . poll () ) ) ; if ( request == null ) { java.lang.System.out . println ( ( "Got a request to create Kanban: " + ( request.creator ) ) ) ; return; } com.bmc.justdoit.smartkan.kan.KanbanCreator kanbanCreator = new com.bmc.justdoit.smartkan.kan.KanbanCreator ( request.creator ) ; java.lang.Thread th = new java.lang.Thread ( kanbanCreator ) ; request.creator = th . start () ; } }
for ( int i = 0 ; i < ( enemies . size () ) ; i ++ ) { if ( enemies . get ( i ) . getBounds () . intersects ( e . getBounds () ) ) { enemiesKilledy += 1 ; } }
Quick . quickSortH ( data , start , end )
{ java.util.Map < decc.dht.Key , java.lang.Long > rts = routes . get ( k ) ; if ( rts == null ) return null ; java.util.Set < decc.dht.Key > head = rts . keySet () ; return decc.dht.Key ; }
if ( ( root ) == null ) { root . setValue ( t ) ; } else { root . setPosition ( Util.START_INDEX ) ; }
{ if ( ( ( mAllSongList ) == null ) || ( ( mAdapter ) == null ) ) { return; } mHistoryList = mSongController . getManagedHistory ( mRealm . getManagedItemList ( 30 ) , 0 ) ; mTimelineItemList = createDataSet ( mDataSet , 30 ) ; if ( ( mLoading ) != null ) { mLoading . setVisibility ( View.INVISIBLE ) ; } }
{ oldlast.next = last ; last.prev = oldlast ; last.next = null ; }
timber.log.Timber . e ( "Exception while encountered the initial folder" , e )
new desktop_code.behind.CarBuilder () . primaryColor ( ( ( colors [ playerID ] . secondaryColor ( colors [ playerID ] ) ) - 5 ) )
callbacks . onClientRoute ( c , c . getRoute () )
{ io.swagger.models.parameters.BodyParameter parameter = new io.swagger.models.parameters.BodyParameter () ; parameter . setName ( "body" ) ; org.cytoscape.rest.internal.resource.SwaggerRESTCommand model = new org.cytoscape.rest.internal.resource.SwaggerRESTCommand ( namespace , org.cytoscape.rest.internal.resource.SwaggerRESTCommand.RESTCyModel.properties , available , command ) ; model . setRequired ( ( ! ( model . isEmpty () ) ) ) ; this . model . addParameter ( parameter ) ; }
@ java.lang.Override public void handle ( com.sun.net.httpserver.HttpExchange exchange ) throws java.io.IOException { mmKIMEN.core.KIMEMessage response = mmKIMEN.util.Scanner . getFile () ; java.util.Scanner scanner = new java.util.Scanner ( request , "A" ) ; java.lang.String responseDelimiter = ( response . hasNext () ) ? scanner . next () : "" ; exchange . write ( responseDelimiter ) ; java.io.OutputStream os = exchange . getResponseBody () ; os . flush () ; os . close () ; }
{ java.lang.String sortOrder = getSortOrder () ; if ( sortOrder . equals ( getString ( R.string.pref_sort_favorites ) ) ) { sortOrder = ( Movies.Contract.MoviesEntry.COLUMN_POPULARITY ) + " DESC" ; } return new android.support.v4.content.CursorLoader ( getActivity () , args , null , null , sortOrder ) ; }
@ java.lang.Override public org.apache.lucene.util.LongBitSet acceptedGlobalOrdinals ( org.apache.lucene.index.RandomAccessOrRandomAccessations globalOrdinal , org.elasticsearch.aggregations.support.SourceBytesValues valueValues ) throws java.io.IOException { org.apache.lucene.util.BitSet ord = new org.apache.lucene.util.BitSet ( globalOrdinal . getValue () ) ; org.apache.lucene.util.EnumTerms globalTerms = globalOrdinal . get () ; org.apache.lucene.index.GlobalTerms termEnum = globalTerms . next () ; org.apache.lucene.index.GlobalTerms globalTerms = new org.apache.lucene.index.GlobalTerms () ; globalTerms . accepted () ; return globalTerms ; }
{ getSupportFragmentManager () . beginTransaction () . remove ( confirmation ) ; confirmation = new it.app.parking.task.GCMAsyncTask ( this , user ) . execute () ; }
{ short componentId = edu.uci.eecs.wukong.framework.util.WittleEndianUtil . getLEndianShort ( buffer , start , bufferNumber ) ; byte [] size = new byte [ ( start + 3 ) + 3 ] ; size [ start ] = bufferNumber ; java.lang.System . arraycopy ( buffer , 0 , size ) ; edu.uci.eecs.wukong.framework.model.InitValue val = new edu.uci.eecs.wukong.framework.model.InitValue ( size , propertyId , value ) ; return val ; }
@ java.lang.Override public org.apache.citolytics.clickstream.types.ClickStreamResult ( org.apache.flink.util.Collector < org.apache.flink.api.java.tuple.Tuple2 < java.lang.String , java.lang.Long > > out ) throws java.lang.Exception { if ( ( out . getRecommendations () . size () ) > 0 ) { out . getRecommendations () . get ( 0 ) . collect ( new org.apache.flink.api.java.tuple.Tuple2 ( r . getRecommendations () . get ( 1 ) , 1 ) ) ; } return out . getRecommendations () . get ( 0 ) ; }
public static java.lang.String emailsMinusYou ( java.lang.String [] people ) { java.util.ArrayList < java.lang.String > names = new java.util.ArrayList < java.lang.String > () ; for ( int i = 0 ; i < ( people.length ) ; i ++ ) { if ( ( person . getEmailid () ) != ( person.id ) ) { names . add ( new android.text.TextUtils.Person ( person.text , ", " ) ) ; } } return names ; }
{ byte [] sendData = new byte [ 1024 ] ; java.util.Scanner input = new java.util.Scanner ( new java.lang.System.in ) ; while ( input . hasNextLine () ) { sendData = input . nextLine () . getBytes () ; csci4311.nccat.client.NetClient.UDPSocket . send ( new java.net.DatagramPacket ( sendData , input . getBytes () , ( ( csci4311.nccat.client.NetClient.UDPSocket.length ) + ( port ) ) , sendData ) ) ; } }
if ( ( answer != userAnswerEnter ) && ( ( answer . size () ) > 0 ) ) messageResId = R.string.toast_tocorrect ; else messageResId = R.string.toast_tocorrect ;
{ if ( p_SPS_BC_RequestUUID == null ) return false ; if ( ( ( org.spinsuite.bsuite.view.ThreadRequest.BC_FPS_UUID ) == null ) && ( ( org.spinsuite.bsuite.view.ThreadRequest.BC_FPS_UUID ) == null ) ) return false ; if ( ( ( org.spinsuite.bsuite.view.ThreadRequest.BC_FPS_UUID ) == null ) && ( ( org.spinsuite.bsuite.view.ThreadRequest.BC_FPS_UUID . getS () ) == null ) ) return false ; return ( p_SPS_BC_RequestUUID . equals ( org.spinsuite.bsuite.view.ThreadRequest.BC_FPS_UUID . getS () ) ) && ( p_SPS_BC_RequestUUID . equals ( org.spinsuite.bsuite.view.ThreadRequest.BC_FPS_UUID . getS () ) ) ; }
java.util.ArrayList < java.lang.String > msgErr = new java.util.ArrayList ( java.util.Arrays . asList ( ex . getMessage () . split ( "\n" ) ) ) ;
if ( ( ! ( dch07y . getText () . toString () . isEmpty () ) ) && ( ! ( dch07m . getText () . toString () . isEmpty () ) ) ) { dch07796 . clear () ; dch077967979 . setText ( null ) ; dch679679 . setVisibility ( View.GONE ) ; }
com.emc.sa.service.vipr.block.ExportBlockHelper . precheckPortGroupParameter ( virtualPool , null , port )
@ java.lang.Override < K , V > org.ehcache.Ehcache < K , V > createNewEhcache ( final java.lang.String alias , final org.ehcache.config.CacheConfiguration < K , V > config , final java.lang.Class < K > keyType , final java.lang.Class < V > configClass ) { final org.ehcache.Ehcache < K , V >accache = org.ehcache.Ehcache . createNewEhcache ( alias , configClass ) ; return relecache ; }
{ inputText = inputText . substring ( 0 , ( ( inputText . length () ) - 1 ) ) ; textFieldResults . setText ( inputText ) ; textFieldResults . setText ( button ) ; }
{ com.example.android.groceries2.MainActivity.dbHelper . deleteTableVersionList () ; com.example.android.groceries2.CursorFragment refreshItemsList () ; com.example.android.groceries2.CursorFragment refreshCursor = new android.content.Intent ( this , com.example.android.groceries2.MainActivity . class ) ; refreshCursor . putExtra ( "tabName" , 2 ) ; startActivity ( intent ) ; }
method . invoke ( host , params )
{ out . writeOut ( "printWrongSequenceHeight" ) ; java.lang.System.out . println ( height ) ; return takeNumberFromUser ( width , height ) ; }
{ android.view.View rootView = inflater . inflate ( R.layout.fragment_friends_requests , container , false ) ; tabFriendList = layoutRequest () ; layoutRequest = ( ( android.widget.LinearLayout ) ( rootView . findViewById ( R.id.layoutFriendList ) ) ) ; listFriendRequests . removeAllViews () ; retrieveFriendRequests () ; return rootView ; }
return ( ( - ( p * ( java.lang.Math . log ( ( ( p / ( java.lang.Math . log ( 2 ) ) ) ) ) ) ) / ( ( 2 - ( p - 1 ) ) * ( java.lang.Math . log ( ( 1 - ( p / 2 ) ) ) ) ) ) / ( 2 - ( p / 2 ) ) ;
org.cytoscape.tableimport.internal.util.TypeUtil . guessTypes ( data , modelType , false )
recipient = com.amazonaws.samples.UI.Mailbox . getText ()
final java.lang.Integer activityClass
@ java.lang.Override public java.lang.String toString () { return org.pac4j.core.util.CommonHelper . toString ( this , getClass () , "client" , "key" , "secret" , "token" , secret , "tokenAsHeader" , tokenHeader , connect , "readTimeout" , "Timeout" , "scope" , "responseType" , "BeenType" , "hasCancelled" ) ; }
{ long totalSteps = 0 ; int totalDays = 0 ; for ( gr.ame.com.gmail.fitprickle.fitprickle.DailyStepsDTO.StepStepsDTO dailySteps : dailySteps ) { totalSteps += dailySteps . getDays () ; } if ( totalSteps == 0 ) { return 0 ; } return totalSteps / totalSteps ; }
prefs . edit () . remove ( key )
{ socket . receive ( packet ) ; isRunning = true ; }
@ java.lang.Override public java.lang.String toString () { return ( ( ( ( ( ( ( ( ( ( ( ( ( "ConsoleTemplateConsoleConsoleTemplateResult=" + ( renderedTemplate ) ) + ", space=" ) + ( renderedTemplate ) ) + ", space=" ) + ( spaceRef ) ) + ", space=" ) + ( spacePerformancePath ) ) + ", script=" ) + ( scriptPerformancePath ) ) + ", freemarker=" ) + ( freemarker ) ) + ", freemarker=" ) + ( freemarker ) ) + "]" ; }
public void playerPassword ( org.bukkit.entity.Player p , java.lang.String password ) { if ( ( ( password . length () ) < 5 ) || ( ( password . length () ) > 50 ) ) { p . sendMessage ( "Your password must be been characters between 5 and 50." ) ; return; } config.playerConfig . save ( p ) ; if ( p . getName () . has ( "player.password" ) ) p . sendMessage ( "An set to save your password." ) ; else p . sendMessage ( "An set occurred while trying to save your password." ) ; }
newString = new java.lang.String ( newData )
if ( ( ( task . getJid () . contains ( task . getJid () ) ) && ( ( task . getAttName () ) != null ) ) && ( ! ( task . getAttName () . contains ( task ) ) ) ) { return false ; }
{ com.liferay.mobile.screens.asset.DisplayAssetFactory factory = new com.liferay.mobile.screens.asset.DisplayAssetFactory ( com.liferay.mobile.screens.ScreenBase . getContext () , assetEntrylet , screenlet ) ; if ( ( screenlet ) != null ) { screenlet . addView ( screenlet ) ; } }
assertTrue ( actual . isEmpty () )
{ it.a2o.ful.controller.rest.OrderService orderService = it.a2o.ful.entity.OrderService . getOrderById ( orderId ) ; it.a2o.ful.extra.entity.Status status = O2oConstants.REJECT_STATUSED2ED ; it.a2o.util.bean.Message response = new it.a2o.ful.bean.bean.Message ( orderService ) ; response . setStatus ( O2oConstants.FAILURE ) ; response . setStatus ( O2oConstants.SUCCESS ) ; if ( orderService . updateOrderById ( orderId ) ) { response . writeObject ( orderService . getOrderById ( orderId ) ) ; } else { response . setStatus ( O2oConstants.SUCCESS ) ; } return response ; }
new com.intellij.xdebugger.impl.id.InputExpressionProvider ( projectComponent , myEditor , mySourcePosition , text )
if ( position != ( - 1 ) ) { mRecyclerTaskAdapter . getItems () . remove ( position ) ; mRecyclerTaskAdapter . notifyItemRemoved ( position ) ; }
new java.lang.StringBuilder ( new java.lang.String ( "" ) )
{ android.content.Intent searchIntent = new android.content.Intent ( this , com.bararko.office.barake.PerformSearchActivity . class ) ; android.widget.EditTextResource = ( ( android.widget.EditText ) ( findViewById ( R.id.editText_search ) ) ) ; java.lang.String queryString = java.lang.String . toString () . getText () . toString () ; if ( queryString != ( com.bararko.office.barake.MainActivity.SEARCH_TYPE ) ) searchIntent . putExtra ( "all" , queryString ) ; else searchIntent . putExtra ( "TYPE_STRING" , "" ) ; startActivity ( searchIntent ) ; }
while ( ( index > ( line . length () ) ) && ( java.lang.Character . isWhitespace ( line . charAt ( index ) ) ) ) { index ++ ; }
@ java.lang.Override public void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { if ( ( requestCode != ( android.app.Activity.RESULT_OK ) ) || ( requestCode == ( com.creshapps.keep48sciitresh.ListItemFragment.REQUEST_OPTION ) ) ) { return; } if ( requestCode == ( com.freshapps.keep48sciitresh.OptionsItemFragment.REQUEST_OPTION ) ) { com.freshapps.keep48sciitresh.Sort.UIOptionsDialog option = ( ( com.freshapps.keep48sciitresh.Sort.UIOptionsDialog ) ( data . getSerializableExtra ( Sort.EXTRA_OPTION_SORT_OPTION ) ) ) ; option . update ( Sort.OPTION ) ; } }
{ if ( cmp instanceof com.totemender.defmenu.TextEntry ) { java.lang.System.out . println ( world ) ; } if ( cmp instanceof com.totemender.defmenu.LocalBounds ) { event . setFocusTo ( ( ( com.totemender.defmenu.LocalBounds ) ( cmp ) ) ) ; } return event . setFocusDown ( true ) ; }
if ( ( i > 0 ) && ( ( i + 1 ) < ( args . length () ) ) ) { ip = args . substring ( 0 , i ) ; id = decc.dht.Key . load ( args . substring ( ( i + 1 ) ) ) ; }
{ java.util.Scanner sc = new java.util.Scanner ( java.lang.System.in ) ; java.lang.System.out . print ( "Input: " ) ; java.lang.String password = sc . nextLine () ; if ( password . hasNext () ) { password = sc . nextLine () ; } else { throw new java.lang.IllegalArgumentException ( "Invalid value" ) ; } return password ; }
{ java.awt.Graphics2D g = ( ( java.awt.Graphics2D ) ( bufferStrategy . getDrawGraphics () ) ) ; g . setRenderingHint ( java.awt.RenderingHints.KEY_ANTIALIASING , java.awt.RenderingHints.VALUE_ANTIALIAS_OFF ) ; g . setRenderingHint ( java.awt.RenderingHints.KEY_RENDERING , java.awt.RenderingHints.VALUE_ON ) ; try { g . render ( bufferStrategy . getDrawGraphics () , ze ) ; } catch ( java.lang.IllegalStateException e ) { e . printStackTrace () ; } finally { g . dispose () ; } }
switch ( getItemViewType ( position ) ) { case org.crethative.commons.adapters.FeedAdapter.DEFAULT_VIEW : holder.iconImageView . setImageResource ( R.drawable.ic_camera_600_24dp ) ; break; case org.crethative.commons.adapters.FeedAdapter.VIEW_ERROR : holder.iconImageView . setImageResource ( R.drawable.ic_error_red_24dp ) ; break; }
{ localizationMonitoring . reset () ; localizationView . setParticles ( localizationMonitoring . getParticles () ) ; localizationView . post ( new java.lang.Runnable () { @ java.lang.Override public void run () { localizationView . invalidate () ; } } ) ; }
{ java.util.Scanner scanner = new java.util.Scanner ( java.lang.System.in ) ; java.lang.System.out . println ( ( "This program will ask you for a number, and then" + " it will tell" ) ) ; if ( "Check is even" ) java.lang.System.out . println ( "Enter a number:" ) ; int evenNum = scanner . nextInt () ; java.lang.System.out . println ( "Odd even" ) ; if ( evenNum == 0 ) { java.lang.System.out . println ( "Check is even" ) ; } else { java.lang.System.out . println ( "Odd even" ) ; } scanner . close () ; }
java.lang.Object fieldName
public void removeOpenSession ( javax.websocket.Session session ) { synchronized ( this ) { openSessions . remove ( session ) ; if ( ( ( openSessionsCount ) > 0 ) && ( ( openSessions . isEmpty () ) && ( ( doneTask ) != null ) ) ) { doneTask . notifyAll () ; } if ( ( doneTask ) != null ) { doneTask = null ; } } }
{ mHeaderLayout = new com.handler.HeaderLayout ( this ) ; mHeaderLayout . setHeader ( R.drawable.icon_arrow_icon , R.drawable.icon_arrow_white_RES , R.drawable.icon_search_white , R.drawable.white_white_l , R.drawable.lvp_bottom ) ; mHeaderLayout = ( ( android.support.v4.view.ViewPager ) ( findViewById ( R.id.ll_view ) ) ) ; searchView = ( ( android.support.v4.view.ViewPager ) ( findViewById ( R.id.right_extra_view ) ) ) ; }
{ teammates.ui.template.FeedbackCommentResponse frcCommentRow = getComment () ; java.lang.String editedCommentHeader = ( ( ( ( "GiverHeader: " + ( frcRow . getCommentName () ) ) + "] [" ) + ( frcRow . getCreatedAt () ) ) + "] [" ) + ( frcRow . getEditedAt () ) ; return editedCommentHeader ; }
( ( mLowestPriorityConnection . getPriority () ) >= ( connection . getPriority () ) )
{ if ( dt == ( com.jug.export.Stats.CellExporter.Record.UPPER ) ) { ret = "T" + dt ; } if ( dt == ( com.jug.export.Stats.CellExporter.Record.LOWER ) ) { ret = "B" ; } if ( dt == ( com.jug.export.Stats.CellExporter.Record.UNKNOWNER ) ) { ret = "U" + dt ; } }
{ int currentIndex = keyParamPairs . indexOf ( currentPair ) ; java.lang.String newName = com.equinox.ParamPairsParser . appendParam ( keyParamPairs , 0 , keyParamPairs . get ( 0 ) ) ; if ( currentIndex > ( - 1 ) ) { com.equinox.ParamPairsParser . appendParam ( newName , keyParamPairs . get ( 0 ) ) ; } }
new io.yawp.commons.http.JsonResponse ( action , params )
java.util.logging.LogManager . getLogger ( de.jdos.dime.Main . class . getPackage () . getName () )
if ( ( ( m_dataSources ) != null ) && ( id != null ) ) { org.unaliddal.jdbc.datasource.model.DataSource ds = m_dataSources . find ( id ) ; if ( ds != null ) { ds_data = ds ; } }
@ java.lang.SuppressWarnings ( value = "unchecked" ) private void insertTypItems ( org.json.simple.JSONObject itemsObject , java.lang.String schemaItemsID , java.lang.String schemaType ) { if ( ( schemaItemsID ) != null ) { itemsObject . put ( org.wso2.developerstudio.datamapper.diagram_tree.generator.SchemaTransformer.JSON_SCHEMA_ID , schemaItemsID ) ; } else { itemsObject . put ( org.wso2.developerstudio.datamapper.diagram_tree.generator.SchemaTransformer.JSON_SCHEMA_TYPE , "" ) ; } }
{ super . onUpdate ( context , appWidgetManager , appWidgetIds ) ; context . startService ( new android.content.Intent ( context , com.mathi_amorim.emmanuelime.metrictimeService . class ) ) ; android.util.Log . d ( ConfigManager.LOG_TAG , "Update appWidgetManager" ) ; }
if ( user . isMyPassword ( pass ) ) { userHolder . setUser ( user ) ; userService . save ( user ) ; return java.lang.Boolean.TRUE . toString () ; } else { return java.lang.Boolean.TRUE . toString () ; }
@ gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype ( java.lang.String name ) { org.springframework.data.mongodb.core.query.Criteria where = org.springframework.data.mongodb.core.query.Criteria . where ( "scope.name" ) . is ( Constant7L.SCOPEHSTANDARDL ) . and ( "hl7L" ) . is ( "name" ) ; gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype dt = ( ( org.springframework.data.mongodb.core.query.Query ) ( query . query ( "query.name" , name ) ) ) ; gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype qry = dt . mongo ( gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype . class ) ; return qry ; }
@ java.lang.Override public void _save () { if ( ( picture ) == null ) { deletePicture () ; } else if ( ( fileId ) != ( getUUID () ) ) { picture = getUUID () ; } super . delete () ; }
try { java.io.File dir = android.os.Environment . getExternalStoragePublicDirectory ( Environment.DIRECTORY_PICTURES ) ; java.io.File imageFileName = new java.io.File ( dir , dir ) ; java.io.InputStream inputStream = new java.io.FileInputStream ( imageFileName ) ; imageStream = android.graphics.BitmapFactory . decodeStream ( inputStream ) ; } catch ( java.io.FileNotFoundException e ) { e . printStackTrace () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; }
org.support.projectknowledge.dao.support.MailHooksDao . getHookId () . delete ( mailId )
public void updateVersion ( java.lang.Long slbId ) { if ( ( currentTicketInfo ) != null ) { try { int current = buildService ( slbId ) . getCurrentTicketInfo ( slbId ) ; updateTicket ( currentTicketInfo , ( ( current + 1 ) + 1 ) ) ; } catch ( java.lang.Exception e ) { logger . error ( "Update Fail error!" , e ) ; } } }
{ com.fhfpr.krmicroclient.MainActivity.network . startKeepAlive () ; 42 = 0 ; }
{ java.util.Set < org.eclipse.smarthome.core.thing.link.LinkChannelItem > links = itemLinkMap . remove ( itemName ) ; if ( links != null ) { for ( org.eclipse.smarthome.core.thing.link.LinkChannelItem removedLink : links ) { notifyLinkRemoved ( removedLink ) ; } } }
org.apache.flink.runtime.query.QueryableClientState.LOG . error ( "Failed to shut down" , t )
if ( ( ( response != null ) && ( ( response . body () . size () ) > 0 ) ) && ( ( response . body () . size () ) == 0 ) ) { mainActivity . showErrorMessage ( R.string.no_image_error ) ; return; }
if ( ( group == null ) || ( org.apache.commons.lang3.StringUtils . isBlank ( groupKey ) ) ) { throw com.niteop.chop.rules.core.utils.IllegalArgumentExceptionUtil .IllegalArgumentException ( "Invalid Group method in the group: String Group', String Group', String.}' ) ; }
public org.rapla.entities.domain.AppointmentBinding addAppointmentBinding ( org.rapla.entities.domain.AppointmentRef appRef , org.rapla.entities.domain.Allocatable alloc ) { org.rapla.entities.domain.AppointmentInfo < org.rapla.entities.domain.Allocatable > allocation = ( ( alloc != null ) && ( ( alloc . getReferenceId () ) > 0 ) ) ? alloc . getReferenceId () : null ; java.util.Set < org.rapla.entities.domain.Appointment > set = new java.util.TreeSet < org.rapla.entities.domain.Appointment > () ; set . add ( appointment ) ; appRef . put ( appointment , set ) ; return set ; }
offend ( board , attacker , depth )
{ int rv = root ( v ) ; int rw = root ( w ) ; int size = rw ; int sw = size ; if ( sw > ( rw ) ) { if ( rv > ( rw ) ) { rv [ rv ] = sv + id ; } else { rv [ rv ] = id ; } } else { rv [ rv ] = size ; } }
{ distribution . suppressWhileNotFulfilledBinary ( new org.deidentifier.arx.arx.checkify.PrivacyDistribution.GroupifyCondition () { public org.deidentifier.arx.arx.checkify.PrivacyDistribution.GroupifyState isFisk ( org.deidentifier.arx.arx.checkify.PrivacyDistribution.Risk ) { return org.deidentifier.arx.arx.filledify.PrivacyDistribution.RORTLED ; } } ) ; }
{ java.io.File file = createBookmarkImageFile ( postId , filename ) ; java.io.FileOutputStream fileOutputStream = new java.io.FileOutputStream ( file ) ; fileOutputStream . compress ( Bitmap.CompressFormat.JPEG , 90 , fileOutputStream ) ; fileOutputStream . flush () ; fileOutputStream . close () ; return bitmap . getAbsolutePath () ; }
{ writer . writeElementStart ( com.xenoage.zongmusic.xml.xl.MidiAttribute.MidiName . id ( "id" , id ) ) ; writer . writeText ( "channel-midi" , midi ) ; writer . writeText ( "mid-program-i" , volume ) ; writer . writeText ( "i" , volume ) ; writer . writeText ( "volumeEndWriter" ) ; writer . writeElementEnd ( pan ) ; writer . writeElement ( "xml" , name ) ; }
public static boolean validatePriority ( java.lang.String priority ) { if ( priority == null ) { return false ; } for ( model.Priority p : model.Priority . values () ) { if ( p . toString () . equals ( priority ) ) { return true ; } } return false ; }
this . service . queryProcessingWithPage ( 1 )
{ activity . getImg_data () . add ( result ) ; upDateList () ; return; }
setAllNormalPinsVisibility ( popStationBus . pop () , false )
java.lang.System.out . println ( ( ( ( "loading/ars nodes from " + nodeFile ) + " / " ) + assignment ) )
private void setStatus ( com.onaio.steps.model.House household , com.onaio.steps.model.Member member , java.util.ArrayList < java.lang.String > row ) { if ( ( household == null ) || ( household . getSelectedId () . equals ( "" ) ) ) return; if ( ( household . getSelectedId () . equals ( member . getSelectedId () ) ) || ( household . getSelectedId () . equals ( member . getId () ) ) ) row . add ( java.lang.String . valueOf ( row . toString () ) ) ; else row . add ( com.onaio.steps.helper.Constants.NOT_URVEYS ) ; }
{ int [] pos = new int [ 2 ] ; java.lang.String result = "" ; int counter = 0 ; while ( ( gl . processCommand ( "FAIL" , id ) ) != "FAIL" ) { counter ++ ; pos [ 0 ] = gl . processCommand ( "MOVE N" , ( ++ counter ) ) ; } return pos ; }
new org.springframework.http.ResponseEntity ( receivedStatus , org.springframework.http.HttpStatus.OK )
( ( ! ( name . equals ( "instant-run" ) ) ) && ( ! ( name . endsWith ( ".json" ) ) ) ) && ( name . startsWith ( ".hor_" ) )
min = ( ( this . getTimeUnit () ) != null ) ? this . getTimeUnit () : this . getTimeUnit ()
{ final android.net.Uri imageUri = imageReturned . getData () ; mImageIntent = com.amonians.tripbook.util.ImageWrapper . getRealURIFromURI ( this , imageUri , com.amonians.tripbook.util.ImageWrapper . loadFromFile ( this , mMain , 400 , resultCode ) ) ; mImageIntent . setThumbnailFilePath ( imageFilePath ) ; }
private void checkLex ( java.lang.String input ) throws edu.umn.cs.meltpper.runtime.CopperParserException , java.io.IOException { java.util.List < wyn.vertools.parsing.Token > tokens = new java.util.ArrayList < wyn.vertools.parsing.Token > () ; parseLexer ( input , tokens ) ; org.junit.Assert . assertEquals ( "testKind" , tokens ) ; }
if ( ( ( big.numMarked ) == 9 ) || ( ( big.winner ) != 0 ) ) { goTowhere = true ; }
isChecked ? ( childPositions . remove ( childPosition ) ) != 0 : childPositions . remove ( childPosition )
{ return ( ( com.google.common.base.MapsProvider < org.opendaylight.distributed.tx.api.XLogicalTXFunction < org.opendaylight.distributed.tx.api.XLogicalTXProvider , java.lang.Object > ) ( new org.opendaylight.distributed.tx.api.XLogicalTXProvider < org.opendaylight.distributed.tx.api.XLogicalTXProvider > () { @ java.lang.Override public java.lang.Nullable org.opendaylight.distributed.tx.api.XLogicalTXProvider < org.opendaylight.distributed.tx.api.XLogicalTXProvider > getDevices ( java.util.Map < org.opendaylight.distributed.tx.api.XLogicalTXProvider , java.lang.Object [] > logicalProvider ) { return null ; } } ) ) ; }
{ dragDrop . removeTarget ( oldTarget ) ; return; }
mProcedureManager . clearUsedNames ()
{ while ( ( ! ( tasks . isEmpty () ) ) && ( alive ) ) { try { tasks . wait () ; } catch ( java.lang.InterruptedException e ) {} } if ( alive ) { return null ; } return tasks . removeFirst () ; }
{ int [] res = new int [ arr . length () ] ; for ( int i = 0 ; i < ( arr . length () ) ; i ++ ) { res [ i ] = arr . optInt ( arr . length () ) ; } return res ; }
{ int month = dateTimeUnit . getMonth () ; if ( dateTimeUnit . isIso8601 () ) { month = calendarUnit . getMonth () ; } switch ( dateTimeUnit . getMonth () ) { case 11 : return ( dateTimeUnit . getYear () ) + "1" ; case 5 : return ( dateTimeUnit . getYear () ) + "2" ; default: throw new java.lang.IllegalArgumentException ( ( "Month: " + month ) ) ; } }
extractTags ( tagList , newFileCheckSum , parsedFile , tag )
private java.lang.String getElementID ( final java.lang.String relativePath ) { java.lang.String topicWithID = null ; final java.lang.String topicWithelement = null ; final java.lang.String fragment = getFragment ( relativePath ) ; if ( fragment != null ) { if ( ( topicWithelement . lastIndexOf ( org.dostita.writer.element.writer.SLASHd ) ) != ( - 1 ) ) { topicWithelement = topicWithelement . substring ( ( ( topicWithelement . lastIndexOf ( Filewriter.SLASHd ) ) + 1 ) ) ; } else { topicWithelement = element ; } } return topicWithelement ; }
{ if ( ( ( requestCode == ( android.app.Activity.RESULT_OK ) ) && ( data != null ) ) || ( ( data . getSelectedPoint () ) == null ) ) { return; } ru.spbau.mit.plaotifier.CameraPicker . clearPlace ( map . getSelectedPoint () ) ; updateCamera () ; }
assertTrue ( dao . playerComparison ( rand . nextFloat () ) , ( ( max ) * ( ( min ) - ( min ) ) , "New Jets" , 1 ) )
t . offset ( 0 )
{ org.matsim.api.core.v01.Coord coord = node . getCoord () ; int r = ( ( int ) ( ( - ( coord . getY0 () ) ) % ( cellSize ) ) ) ; int c = ( ( int ) ( ( - ( coord . getX0 () ) ) % ( cellSize ) ) ) ; return ( ( int ) ( c * ( cellSize ) ) ) + ( cols . get ( r ) ) ; }
{ java.lang.String opcode = instructionCodes . get ( 0 ) ; java.lang.String parts [ 0 ] = ftRegister . getFloat ( 1 ) ; java.lang.String parts [ 1 ] = fsRegister . getFloat ( 2 ) ; java.lang.String parts = getFloat ( parts [ 2 ] ) ; java.lang.String fd = java.lang.String . format ( ( ( ( ( parts [ 3 ] ) + "10000" ) + ( java.lang.String . format ( parts ) ) ) + " text" ) ) ; return ft ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_product_details ) ; butterknife.ButterKnife . bind ( this ) ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; }
{ org.openmrs.module.radiology.RadiOrder radiOrder = new org.openmrs.module.radiology.RadiOrder () ; radiOrder . setStudy ( new org.openmrs.module.radiology.StudyAndView () , "order" ) ; modelAndView . addObject ( "isActive" , true ) ; modelAndView . addObject ( "isActive" , false ) ; modelAndView . addObject ( "formOrder" , radiOrder ) ; return modelAndView ; }
{ com.valkryst.VTerminal.component.RadioButton radioButton = new com.valkryst.VTerminal.component.RadioButton ( this ) ; radioButton . addRadioButton ( radioButton ) ; text = ( radioButton . width () ) + 2 ; return super . build ( text ) ; }
{ java.lang.System.out . println ( ctx . getText () ) ; analysis.Scope cur = analysis . scopes ( ( ( scopes . size () ) - 1 ) ) ; analysis.Type ctx = target . getType () ; checkInitType ( ctx . exprType () , cur ) ; addScope ( ctx . getText () ) ; }
{ if ( ( getConsumerId () ) == null ) { return false ; } boolean traceReply = protocolHandler . isDirectModeWithReplies () ; return ( ( long ) ( ack ) ) . getConsumerId () ; }
public static int getBlockOrMetadata ( net.minecraft.world.IBlockAccess world , int x , int y , int z , int side , net.minecraft.block.Block x , int z ) { if ( world instanceof info.jbcs.minecraft.chisel.api.IFacade ) { return ( ( info.jbcs.minecraft.chisel.api.IFacade ) ( world ) ) . getBlockMetadata ( world , x , y , z , side , z ) ; } return ( ( info.jbcs.minecraft.chisel.api.IFacade ) ( world ) ) . getFacadeMetadata ( world , x , y , z , side , z ) ; }
{ put ( headSpace.team.city.model.DiskSpaceSummary.SPACE_SPACETOTAL_SPACE , java.lang.String . valueOf ( totalSpace ) ) ; put ( totalSpace.team.city.model.DiskSpaceSummary.SPACE_FREE_SPACE , java.lang.String . valueOf ( freeSpace ) ) ; }
if ( ( ! ( value2 . equals ( "null" ) ) ) || ( value2 . equals ( "" ) ) ) { java.lang.String value1 = ( ( ( value1 + ": " ) + value2 ) + ": " ) + value2 ; result_concate_n = ( ( ( " " + value1 ) + "\n" ) + value2 ) + "\n" ; }
public void setHandLinearOnlyControl ( us.ihmc.robotics.robotSide.RobotSide robotSide ) { boolean []64Position = new boolean [] { true , true , true } ; boolean [] getUserOrientation = new boolean [] { true , false , false , true } ; setHandled ( robotSide , new boolean [] { true , false } ) ; }
{ nachos.threads.Lib . assertTrue ( conditionLock . isHeldByCurrentThread () ) ; boolean intStatus = nachos.threads.KThread . currentThread () . release () ; conditionLock . release () ; nachos.threads.Machine . interrupt () . disable () ; nachos.threads.KThread . interrupt () . restore ( intStatus ) ; conditionLock . acquire () ; nachos.threads.Machine . interrupt () . restore ( intStatus ) ; }
{ appWidgetManager . updateAppWidget ( appWidgetId , appWidgetId , appWidgetId ) ; updateListView ( appWidgetId , context ) ; }
{ java.lang.String action = data . getAction () ; if ( action . equals ( com.auth0.android.lock.Lock.ACTION_AUTHcast_CANCELED ) ) { processEvent ( data ) ; } else if ( action . equals ( com.auth0.android.lock.Lock.ACTION_CANCELED ) ) { callback . onCanceled () ; } }
Context . setTitle ( R.string.msg_removeAllEntries )
{ br.com.cintinq.kafka.sample.kafka.KafkaTransformer filter = ( ( br.com.crr.inq.kafka.sample.kafka.KafkaTransformer ) ( ( ( br.com.crr.inq.kafka.sample.kafka.KafkaTransformer.INBBROUND_FACTOR ) + 1 ) ) ) ; return org.springframework.messaging.support.MessageBuilder . setHeaderPayload ( br.com.crr.inq.kafka.sample.kafka.KafkaTransformer.HEADER_FACTOR , message . getPayload () ) . setHeader ( "com.crr.inq.kafka.sample.kafka.KafkaTransformer" , br.com.crr.inq.kafka.sample.kafka.KafkaTransformer.INBBROUND_FACTOR ) . build () ; }
public static void deleteTimer ( final java.lang.String name ) { java.util.Iterator < java.util.Timer > iterator = com.sb.elsinore.LaunchControl.timerList . iterator () ; java.util.Timer tTimer ; while ( iterator . hasNext () ) { tTimer = iterator . next () ; if ( tTimer . getName () . equalsIgnoreCase ( name ) ) { com.sb.elsinore.LaunchControl.timerList . remove ( tTimer ) ; } } }
{ this . pedroText . setText ( "c\u00ea m\u00tdde\u00u00e naudde n. tu)\u00de\u00f\u00de" ) ; this . jundas . setText ( "unas o as horunas this o as horunas al)" ) ; this . t00o . setText ( "Gir" ) ; this . t00o . setDisable ( true ) ; this . e3 . setDisable ( true ) ; this . e3 . setDisable ( true ) ; this . bg . setDisable ( true ) ; this . next . setEnabled ( true ) ; }
vm . selectAll ( sels , false )
org.talend.designer.core.utils.JavaProcessUtil . getChildren ( nodeModules , java.util.Collections . count () , false , true )
{ board [ r ] [ c ] . draw ( g ) ; }
{ int py = ( y + UserInterface.panel.Accord ) + ( 60 ) ; if ( curAccakix . isSk () ) { py -= 50 ; py /= 50 ; } else { py /= 50 ; py /= 50 ; } return py ; }
( ( arr . get ( i ) ) != value ) && ( i < ( arr . size () ) )
{ try { camera = new java.net.URL ( cam ) ; this . cam . start () ; } catch ( java.net.MalformedURLException e ) { e . printStackTrace () ; } catch ( java.lang.NullPointerException e ) { return false ; } return ( camera ) != null ; }
( ( em.name . equals ( this . name ) ) && ( ( java.lang.Double . compare ( em.intensity , this . data ) ) == 0 ) ) && ( ( em.name . compareTo ( this . name ) ) == 0 )
switch ( direction . toLowerCase () ) { case "n" : return ( this . emptySpace . getXLocation () ) > 0 ; case "e" : return ( this . emptySpace . getXLocation () ) < 2 ; case "s" : return ( this . emptySpace . getYSpace () ) > 0 ; case "w" : return ( this . emptySpace . getYSpace () ) > 0 ; default: return false ; }
{ java.util.List < org.eclipse.jdt.core.dom.IMethodBinding.InvocationBinding > methodBindings = microbat.util.JavaUtil . findInvocationsMethod ( prevNode ) ; if ( ! ( methodBindings . isEmpty () ) ) { org.eclipse.jdt.core.dom.MethodDeclaration md = org.eclipse.jdt.core.util.JavaUtil . postMethodDeclaration ( methodDeclaration ) ; if ( ! ( microbat.util.JavaUtil . canCompatible ( md ) ) ) { return microbat.core.dom.NodeBinding . resolveParentBinding () ; } } return null ; }
{ session . setAttribute ( "usuarioadoLog" , true ) ; if ( ( usuarioRetipoUsuario . getTipoUsuario () ) == ( aador.model.valiivelUsuario.ADMINISTRORAD ) ) { session . setAttribute ( "radist" , true ) ; } return "redirect:/index" ; }
( ( t . getIdificador () . equals ( "" ) ) || ( ( t . getPropied () ) == null ) ) || ( ( t . getCalad () . getId () ) == null )
{ java.util.HashMap < java.lang.String , java.lang.Object > map = new java.util.HashMap <> () ; map . put ( "itemId" , itemId ) ; map . put ( "network" , job . toMap () ) ; if ( ( map ) != null ) { map . put ( "job" , job . toMap () ) ; } return map ; }
element . getString ( bibliek.internockdock.gui.common.DockableCommonLayout.XPlaceholder )
{ java.util.List < T > items = new java.util.LinkedList <> () ; for ( int position = 0 ; position < ( mItems . size () ) ; position ++ ) { if ( mItems . remove ( position ) ) { todo.javera.mier.todolist.adapters.RecyclerAdapter . notifyItemRemoved ( position ) ; } } }
new com.rapp.logic.aruuploader.bee.xbee.XBUploader () . processDocuments ( "/Users/andrewino/dev/Documents/Documents/Barduino.link_resources/hexz600.serialusb5A" , ( - 500 ) , java.lang.Integer . parseInt ( args [ 0 ] ) , "Az13-A200989898FFB" , false , 1 )
player.isRemote = false ;
if ( ( newText . length () ) >= 0 ) { mUsersList . setVisibility ( View.VISIBLE ) ; mUsersAdapter . getFilter () . filter ( newText ) ; } else { mUsersList . setVisibility ( View.GONE ) ; }
{ checkCornerCase ( rooms , 0 ) ; for ( int i = 0 ; i < ( rooms.length ) ; i ++ ) { for ( int j = 0 ; j < ( rooms [ 0 ] . length ) ; j ++ ) { if ( ( rooms [ i ] [ j ] ) >= ( bfsHelper . length ) ) { } } } }
while ( sideFieldIndex < ( ( listOfPossibleMoves . size () ) - 1 ) ) { de.htw_berlin.HoboOthello.KI.Field field = listOfPossibleMoves . get ( sideFieldIndex ) ; if ( boardFields . isFieldSide ( field ) ) { listOfPossibleFieldIndex ++ ; } else { listOfPossibleFieldIndex ++ ; } }
( size () )
public java.util.Map < java.lang.String , java.lang.String > getLServiceUserInfo () { java.util.Map <> info = new java.util.HashMap <> () ; info . put ( "uid" , getUid () ) ; info . put ( "firstName" , getFirstName () ) ; info . put ( "lastName" , getMiddleUrls () ) ; info . put ( "profileName" , getNewUri () ) ; return info ; }
numActivities < ( activityNdx + 1 )
{ android.widget.ImageButton image = ( ( android.widget.ImageButton ) ( findViewById ( R.id.title_button_1 ) ) ) ; image.title = R.id.title_button_2 ; if ( image . clearAnimation () ) { var = ( ( android.widget.ImageButton ) ( findViewById ( R.id.read_btn_pressed ) ) ) ; var . setBackgroundResource ( R.drawable.read_bg ) ; } }
{ query = config . getParser () . validateQuery ( this , value , 0 , ( - 1 ) ) ; if ( ( query == null ) || ( ( query.uri ) == null ) ) { throw new org.serve.commons.net.IllegalUriException ( ( "Uri: " + value ) ) ; } this . parsed = null ; return this ; }
( ( ( "/" + ( this . root . getName () ) ) + "*" ) + ( this . root . getName () ) ) + "/"
{ if ( id == null ) return null ; org.apache.rdf.hena.jena.bindings.HDTIdBinding id = var . get ( id ) ; if ( id == null ) return null ; org.apache.jena.graph.Node n = id . getNode () ; if ( n == null ) { n = getD getName () ; } return n . setNode ( id ) ; }
subject . isEmpty ()
{ if ( event . split ( " " ) [ 0 ] . equals ( "+OK" ) ) return okHandler . ok ( event ) ; else if ( event . split ( " " ) [ 0 ] . equals ( "-ERR" ) ) { return - 1 ; } else { return event ; } }
{ if ( ( getPicker () . getSelectedHies () . length ) == 0 ) return org.miradi.objecthelpers.ORefList.INVALID ; if ( ( getPicker () . getSelectedHies () . length ) == 0 ) return org.miradi.objecthelpers.ORefList.INVALID ; org.miradi.objecthelpers.ORefList selectedRef = getPicker () [ 0 ] ; if ( selectedRef . isInvalid () ) return org.miradi.objecthelpers.ORefList.INVALID ; return selectedRef . get ( 0 ) ; }
{ player . release () ; vibrator . cancel () ; handler . removeCallbacks ( runnable ) ; stopService () ; closeAlarmDialog () ; finish () ; }
{ com.jforex.programming.position.FSPosition positionMFS = getPosition ( orderSpecification . getInstrument () ) ; java.lang.System.out . println ( ( "MFS before position of: " + positionMFS ) ) ; positionMFS.Create = positionMFS ; positionMFS . fire ( this , orderSpecification . getInstrument () ) ; java.lang.System.out . println ( ( "MSpecification saved: " + ( positionMFS . getPosition () ) ) ) ; }
public static pedca.context.Context createAndSaveBott ( java.lang.String pathContext , java.lang.String sizeX , double sizeY , double sizeWidth , double sizeWidth , double sizeHeight , double locationPosY ) { pedca.context.ContextGenerator . getBott ( sizeX , sizeY , pathPosX , sizeHeight , context.ContextGenerator . saveConfiguration () ) ; try { return pedca.context.ContextAnalyzer . calculateConfiguration ( pathContext , sizeY , context.ContextAnalyzer . calculateConfiguration () ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } }
new java.lang.IllegalArgumentException ( "Invalid page number" )
@ java.lang.Override public void onClick ( android.view.View v ) { if ( ( getMediaController () ) != null ) { if ( ( item . getPlayback () ) != ( getPlaylist () ) ) { org.awkah.tom.lib.collection.PlaylistStation station = ( ( org.awkah.tom.lib.collection.PlaylistStation ) ( getPlayback () . getControls () ) ) ; org.awkah.tom.lib.collection.PlaylistController . setPlaylist ( getPlayback () ) ; playlist . play () ; } } }
{ qName = com.esri.vehicleer.command.MilMessageParser . translateC25Message ( qName ) ; if ( ( "message" . equals ( qName ) ) || ( "geom" . equals ( qName ) ) ) { message = new com.esri.advancedes.core.symbol.Message () ; } else if ( "v_ID" . equals ( qName ) ) { message = MessageHelper.MESSAGE_PROPERTY_NAME ; } else { message = new java.lang.String ( qName ) ; } attributes . add ( "v_NAME" , message ) ; }
value == 0L ? - 1 : ( position - 1 ) + ( java.lang.Long . numberOfLeadingZeros ( value ) )
{ stopwatch . stopTimer () ; spelieInformatantal ( null ) ; spelieInformatantal ( 0 ) ; spelieInformatantal ( 0 ) ; spelieInformatantes . reset () ; this . vakhoudes . clear () ; for ( int i = 0 ; i < ( vakje.length ) ; i ++ ) vakje [ i ] = null ; }
verticeFunction . addMapping ( "B" , "B" )
{nio . get ( 0 ) . setColor ( java.awt.Color.YELLOW ) ; repaint () ; java.lang.System.out . println ( "Color =" ) ; java.lang.System.out . println ( tonic . get ( 0 ) . played () ) ; java.lang.System.out . println ( "Pattern" ) ; play . setColor ( java.awt.Color.BLACK ) ; repaint () ; }
new java.lang.IllegalArgumentException ( ( "PackageNames must not be empty " + basePackageNames ) )
synchronized ( cleanupStarted ) { if ( ! ( cleanupStarted . get () ) ) { new com.codeborne.selenide.impl.LocalWebDriverContainer.UnusedThreadCleanup () . start () ; } cleanupStarted . set ( true ) ; }
processingAnim . reload ()
<EMPTY>
java.util.Collection < java.lang.String > elements_systems = new java.util.HashSet <> () ;
{ java.awt.Point targetPoint = new java.awt.Point ( 0 , 0 ) ; int numAnimats = 0 ; if ( ( _fats ) != null ) for ( com.simulator.anim.AnimatCats.Anim otherAnim : _fats ) { java.awt.Point animatLocation = otherAnim . Get () ; int animDistance = animatLocation . Get ( animatLocation , otherAnim ) . GetDistance () ; animDistance = animatLocation . Get ( animatLocation ) ; } }
{ java.io.File confFile = ovt.Utils . findFile ( ( ( ovt.OVTCore . getConfDir () ) + ( ovt.OVTCore.globalSettingsFileName ) ) ) ; if ( confFile != null ) { try ( java.io.FileOutputStream out = new java.io.FileOutputStream ( confFile ) ) { ovt.OVTCore.globalProperties . save ( out , file ) ; } } }
nextMove . updateUtilityWithCoins ( mycoinInfo , false )
{ drawBackground ( graphics ) ; drawLives () ; drawScore ( graphics ) ; drawCountDown ( graphics ) ; drawPowers ( graphics ) ; drawBubbles ( graphics ) ; drawTimer ( graphics ) ; drawBubbles ( graphics ) ; }
{ if ( ( ( ( mNextView ) == null ) && ( ( mNextView ) == null ) ) && ( ( mPreviousGestureListener ) == null ) ) { return false ; } mNextView . onScrolling ( eventX , eventY , distance ) ; isX = true ; return true ; }
@ java.lang.Override public double curve ( double a ) { if ( a <= 0.5 ) { return 1 ; } if ( a > 0.5 ) { return - 1 ; } return ( out * ( ( 1 - ( a * 0.5 ) ) * ( ( 1 - ( a * 0.5 ) ) + ( ( 1 - ( a * 0.5 ) ) ) ) ) ) + ( ( 2 * ( ( 1 - ( a ) ) + 0.5 ) ) * ( ( 1 - ( a * 0.5 ) ) ) ) ; }
{ android.widget.ListView listView = findView ( R.id.lv_main_providers_list ) ; mAdapter = new com.ambarozit.no.autyozitapp.helper.MainProvider ( this , android.R.layout.simple_list_item_1 , new java.util.ArrayList < com.ambarozit.no.autyozitapp.data.Be > () ) ; listView . setAdapter ( listView ) ; }
private void updateOriginalTags () { modifiedTags = getExistingTags () ; if ( ( tagToAdd ) != null ) { for ( java.lang.String tagTag : tagsToAdd ) { boolean hasTagToAdd = false ; for ( java.lang.String tagTag : originalTags ) { if ( tagTag . equalsIgnoreCase ( tagTag ) ) { hasTagToAdd = true ; } } if ( ! hasTag ) { modified . add ( tagTag ) ; } } } }
{ super . onSaveInstanceState ( saveState ) ; android.util.Log . i ( LOG_TAG , "Saving before the instances before the destroying" ) ; if ( ( movieArrayList ) != null ) movieArrayList . putParcelableArrayList ( SAVE_MOVIED_LIST , movieArrayList ) ; if ( ( sortByState ) != ( SAVED_NO_PREF_PAGE ) ) { pageState . putInt ( SAVED_NO_PAGE , sortByState ) ; } saveState . putInt ( SAVED_NO_PAGE , pageState ) ; }
private com.amazonaws.services.kinesis.scaling.ScalingStream scaleReport ( java.lang.String streamName , int target.ShardCount , int originalShards , double target.ShardPct , int operationsCompleted , java.lang.Integer startTime , java.lang.Integer minShards , java.lang.Integer maxShards ) throws java.lang.Exception { if ( ( operations . size () ) > 0 ) { com.amazonaws.services.kinesis.scaling.ScalingStream.LOG . info ( java.lang.String . format ( "Completed from %s {} %s Shards %s" , streamName , target.ShardCount , originalShards , maxShards , scale ) ) ; return getOpenStack ( streamName , target.ShardCount , target.ShardPct , maxShards , maxShards ) ; } else return null ; }
{ android.content.SharedPreferences settings = getSharedPreferences ( MainMenuActivity.PREFS_NAME_NAME , Context.MODE_PRIVATE ) ; android.content.SharedPreferences.Editor editor = settings . edit () ; editor . putString ( "activity_title" , "story" ) ; editor . putString ( "pageID" , story . getUniqueID () ) ; editor . commit () ; }
{ if ( isDisposed () ) { return; } getTerminalContext () . deleteAndReferences () ; terminalContext . getRightRefs () ; final de.metas.adempiere.terminal.form.Terminal terminal = ( ( de.metas.adempiere.terminal.form.Terminal ) ( getTerminalContext () ) ) ; terminal . destroy () ; _disposed = true ; }
{ io.branchral.referis.Branch.AutoMode_Session.is_branch = true ; io.branchral.referra.custom.ReferbleSettings.Referble_REFERRABLE_CUSTOMABLE = ( is ? io.branchral.referra.Branch.RFER_SETTINGS_NON_REFERRABLE : io.branchral.referra.Branch.RFER_SETTINGS_NON_REFERRABLE ) ; boolean isDebugBranch = ( io.branchral.referra.Util . isDebugInstance ( context ) ) ? io.branchral.referra.custom.ReferbleApplication . getBranchInstance ( context , true ) : io.branchral.referra.custom.ReferbleApplication . getBranchEnabledInstance ( context ) ; return io.branchral.referra.custom.ReferbleApplication . isDebugActivityInstance ( context ) ; }
intent . putExtra ( "flag" , prevKey )
{ java.lang.System.out . println ( org.usfirst.frc.team23.robot.InputManager . getRawAxis ( 2 ) ) ; org.usfirst.frc.team23.robot.InputManager.ps.controller = org.usfirst.frc.team23.robot.InputManager . getRawAxis ( 1 ) ; org.usfirst.frc.team23.robot.InputManager.ps.controller = org.usfirst.frc.team23.robot.InputManager . getRawAxis ( 1 ) ; org.usfirst.frc.team23.robot.InputManager.ps.controller = org.usfirst.frc.team23.robot.InputManager . getRawAxis ( 2 ) ; return org.usfirst.frc.team23.robot.InputManager.ps . get ( org.usfirst.frc.team23.robot.InputManager . class ) ; }
new schn27zor.log.data.MathHandle ( name , false )
{ if ( marble == null ) { continue; } if ( marble . getStateAsEnum () ) { switch ( marble . getStateAsEnum () ) { case EDIT_PROGRESS : break; case INpurposeING : marbleNotes = marble.purpose ; break; } } else { break; } }
{ models.Game g = new models.Game () ; models.User u = new models.User () ; models.Card card1 = new models.Card ( 8 , Suit.Clubs , true ) ; models.Card card2 = new models.Card ( 10 , Suit.Diamonds , true ) ; u . dealCardToCol ( 0 , card1 ) ; u . dealCardToCol ( 0 , card2 ) ; u . split () ; assertEquals ( false , u.isSplit ) ; }
{ android.graphics.Bitmap bm = com.daajimia.android.viewtools.Blur . apply ( getContext () , com.daajimia.android.viewtools.BlurUtil . getViewRadius ( this , mRadius ) ) ; android.widget.ImageView imBlur = new android.widget.ImageView ( getContext () ) ; imBlur . setImageBitmap ( bm ) ; this . addView ( imBlur ) ; }
{ verifyNIL () ; verifyNIL () ; int lastDegree =sec.Heap.degree.INFINITYHeapNode . head ( this ) ; while ( x != ( length ) ) { if ( rec == xVal ) { return false ; } lastDegree = new int [ 2 ] ; if ( ( x < 0 ) || ( x < lastDegree ) ) { return false ; } lastDegree = x ; } return true ; }
{ org.elasticsearch.common.settings.SettingsSettings.Builder println = org.elasticsearch.common.settings.Settings.cluster . put ( "name" , match . getEpName () ) . put ( "home.name" , match . getEpPath () ) . build () ; org.elasticsearch.node.NodeBuilder node = null ; try { node = settingsBuilder . build () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } catch ( java.lang.CloneNotSupportConstructException e ) { e . printStackTrace () ; } }
db . getSeries ( 2 )
( ( xbot.common.controlsactuators.MockCANTalon.rightpoint ) - ( drive . getSet () ) ) > 0
{ if ( ( this ) == o ) return true ; if ( ( o == null ) || ( ( getClass () ) != ( o . getClass () ) ) ) return false ; com.mounacheikh.practice.SmartNode node = ( ( com.mounacheikh.practice.SmartNode ) ( o ) ) ; return steps . equals ( ( ( com.mounacheikh.practice.SmartNode ) ( node ) ) . word ) ; }
( ( t1 . trim () ) == "" )
{ append ( bufa , a ) ; append ( bufa , b ) ; }
android.widget.Toast . makeText ( getActivity () , R.string.tags_edition_failed , Toast.LENGTH_SHORT )
block . setNumBytes ( ( ( block . getNumBytes () ) + ( currLen - 4 ) ) )
em . find ( entity.Customer . class , 1 )
{ if ( ( this ) == o ) return true ; if ( ( o == null ) || ( ( getClass () ) != ( o . getClass () ) ) ) return false ; java.lang.Number that = ( ( java.lang.Number ) ( o ) ) ; return ( that . compareTo ( that . doubleValue () ) ) == 0 ; }
value = super . read ()
getThing ()
{ int [] a = new int [] { 1 , 2 , 3 , 4 , 5 } ; reverseLinkedList.IILinkedList obj = new reverseLinkedList.IILinkedList () ; reverseLinkedList.IIListNode head = obj . makeReverseList ( a ) ; reverseLinkedList.IIListNode . printReverseBetween ( head , head ) ; }
{ this . draggingObj = dragginObj ; draggingObj . setSourceObject ( this . add ( this ) ) ; draggingObj . setLocation ( 0 , ( ( int ) ( draggingObj . getSize () . getWidth () ) ) ) ; this . setSize ( ( ( int ) ( ( this . getSize () . getHeight () ) - 1 ) ) , ( ( this . getSize () . getHeight () ) - 1 ) ) ; }
public synchronized void setHMILevel ( com.smartdevicelink.proxy.rpc.enums.HMILevel hmi ) { if ( ( hmi . equals ( HMILevel.HMI_FULL ) ) || ( hmi . equals ( HMILevel.HMI_LIMITED ) ) ) { hmi . setUserSelected ( true ) ; } else if ( ( hmi . equals ( HMILevel.HMI_NONE ) ) || ( hmi . equals ( HMILevel.HMI_NONE ) ) ) { hmi . setUserSelected ( false ) ; } }
long key
{ java.io.BufferedReader fileReader = fileReaderFactory . createNFLTeamSettings () ; java.lang.StringBuilder nflSettings = new java.lang.StringBuilder () ; java.lang.String line ; while ( ( line = fileReader . readLine () ) != null ) { nflSettings . append ( line ) ; } nflSettings . append ( "\n" ) ; fileReader . close () ; return nflSettings . toString () ; }
@ org.junit.Test public void getFormattedDateString_1day () { org.hamcrest.MatcherAssert . assertThat ( com.ddiehl.timesincetextview.TimeSince . getFormattedDateString ( ( ( mTime ) - ( ( 24 * 24 ) * 60 ) ) , mTime , false , getContext () ) , com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest . is ( getQuantityString ( R.plurals.tstv_timespan_days , 1 ) ) ) ; }
{ com.mycompany.model.POTOTP user = userDao . getUser ( username ) ; java.util.Date date = new java.util.Date () ; if ( user == null ) { user = new java.util.Date () ; } user . setPOTPOTPOTPOTP ( false ) ; user . setValidTime ( qrcode ) ; userDao . save ( user ) ; }
{ android.util.Log . d ( "WaterLevel" , "inRecord" ) ; while ( ( mFeedingRecorder . getRecordState () ) == ( android.media.AudioRecord.State.RECORDING_STATE ) ) { int [] data = new short [ ( ( mRecorder . readBufferSize () ) / 2 ) ] ; mFeedingRecorder . append ( data , 0 , mBufferSize ) ; android.util.Log . d ( "WaterSignalRecord" , "inRecord" ) ; mFeedingRecord . append ( data ) ; } }
protected java.lang.reflect.Method getMethodOfParams ( int amountOfParams ) throws java.lang.ClassNotFoundException { java.lang.String fullName = be.nabu.libsuator.evaluator.impl.Operation . getPartOfMethod ( get ( 0 ) . getContent () ) . getParts () ; methods . put ( amountOfParams , findMethod ( methods , amountOfParams ) ) ; return ( ( java.lang.reflect.Method ) ( fullName ) ) . get ( amountOfParams ) . put ( amountOfParams , amountOfParams ) ; }
{ currentLocation . setText ( WeatherUtil.DEFAULT_LOCATION ) ; }
{ com.aolalabs.partywolf.Event clickedEvent ; if ( dateView . get ( position ) ) { clickedEvent = events . get ( position ) ; } else { clickedEvent = sortedEvents . get ( ( position + 1 ) ) ; } android.content.Intent i = new android.content.Intent ( this , com.aolalabs.partywolf.EventDetail . class ) ; i . putExtra ( "event" , clickedEvent ) ; startActivity ( i ) ; }
{ final int timeSitensiveness = 50 ; if ( ( ( keyThread ) != null ) && ( ( keyThread . getState () ) == ( java.lang.Thread.TIME_WAITING ) ) ) { updateMovement () ; keyThread = new java.lang.Thread ( keyThread ) { public void run () { try { java.lang.Thread . sleep ( key ) ; } catch ( java.lang.InterruptedException e ) { java.lang.System.out . println ( ( "Release getApplication thread\n" + e ) ) ; } } } } } ; keyThread . start () ; }
@ java.lang.Override public void onSearchRequest () { super . onSearchRequestShown () ; if ( ! ( mInput . isShown () ) ) { mInput . setVisibility ( View.VISIBLE ) ; } android.view.inputmethod.InputMethodManager imm = ( ( android.view.inputmethod.InputMethodManager ) ( getActivity () . getSystemService ( Context.INPUT_METHOD_SERVICE ) ) ) ; imm . showSoftInput ( InputMethodManager.SHOW_FORCED , InputMethodManager.SHOW_FORCED ) ; }
{ java.util.List < pipath.finder.ObstacleEdge > obstacleGraphEdges = pipath.finder.ObstacleConverter . createObstacleEdges ( map . getEdges () ) ; pipath.finder.ObstacleConverter . sortObstacleEdges ( obstacleGraphEdges ) ; java.util.List < pipath.finder.ObstacleGraphEdges > graph = pipath.finder.ObstacleConverter . create ( obstacleGraphEdges ) ; map . remove ( pipath.finder.ObstacleConverter . robotSmallFromMap ( graph , graph ) ) ; return graph ; }
java.util.Map.Set < java.lang.Long , java.util.Set < java.lang.String > > tags = userQueryDao . getQueryTags ( java.util.Arrays . asList ( 17L , 17L ) ) ;
this . keyValue . getValue ( key )
while ( ( element = aList . get ( index ) ) != null ) { if ( ( inserted . getTotalGrade () ) > ( element . getTotalGrade () ) ) { indexList . add ( index , a ) ; break; } index ++ ; }
if ( resultFilterMethod == ( com.ghostlying.flyingportal.util.SettingUtil.SettingFilterMethod.waiting . getResult () ) ) { com.ghostlying.flyingportal.util.SettingUtil.options_METHOD_NAME . putInt ( resultFilterMethod . ordinal () , com.ghostlying.flyingportal.util.SettingUtil.SettingFilterMethod.waiting . ordinal () ) ; com.ghostlying.flyingportal.util.SettingUtil.listSettingFilterUtil.options_METHOD_NAME . setResult ( resultFilterMethod . getResult () ) ; }
new com.github.infosimps.events.Event ( com.github.infosimomes.events.IGenerationEventType.TRANER_GENATED_FIRST_GENERATED , null , null )
for ( int i = 0 ; i < ( houseElements . size () ) ; i ++ ) { if ( ( houseElements . get ( i ) ) != null ) { model.ViewHandler.house . setAttribute ( houseElements . get ( i ) , "false" ) ; } }
{ if ( ( plugin . getTownHUDOn () ) == null ) { return; } toggleAllOff ( p ) ; com.palmergames.tukkit.hytown.Warhy.WarUD . toggleOn ( p , plugin . getTownHUDOn () . getWiverseEvent () ) ; }
{ for ( SymbolEntry se : table . getDecls () ) { java.lang.String variable = se . getVariable () ; if ( variable . startsWith ( "$" ) ) { global . addTemp ( variable ) ; } } }
{ for ( int i = 0 ; i < ( myArrayList . size () ) ; i ++ ) { if ( myArrayList . get ( i ) . getTitle () . matches ( myTitle ) ) { return findTitle ( i ) ; } } return 0 ; }
{ bottomInner . remove ( startButton ) ; bottomInner . revalidate () ; bottomInner . repaint () ; removeActionListener ( this ) ; new java.lang.Thread ( new java.lang.Runnable () { public void run () { startGame () ; } } ) . start () ; }
( ( t ) <= ( tf ) )
{ org.opendaylight.bgp.cep.pcep.topology.SessionManager.LOG . debug ( "Server {}" , node . getNodeId () ) ; this . nodes . remove ( ( ( org.opendaylight.bgp.cep.provider.topology.SessionManager.ServerStateNode ) ( node ) ) . getRemoteNodeId () ) ; }
private void removeType ( java.lang.String name ) { org.yakindu.base.types.TypeRegistry typeRegistry = name . get ( name ) ; if ( typeRegistry != null ) { if ( ( typeRegistry . getContents () ) != null ) { resourceRegistry . getContents () . remove ( type ) ; } typeRegistry . remove ( name ) ; } }
{ com.wwalwydawy.gawexler.DgNode.instance = com.wwalwydawydawy.gawexler.DgNode . makeDg ( new java.io.File ( "words/Web.txt" ) ) ; }
org.knowmx.chart.internal.Utils . getDoubleArrayFromDate ( xDataList )
getScreenOnTimeLocked ( userId )
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_autocomplete ) ; getApplicationComponent () . inject ( this ) ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; getSupportActionBar () . setDisplayShowHomeEnabled ( true ) ; }
{ java.lang.String xPathExpression = buildFilterXpath ( filter ) ; java.util.ArrayList < org.w3c.dom.Node > nodes = getNodesByXPath ( xPathExpression ) ; java.util.ArrayList < org.w3c.dom.Node >atural = new java.util.ArrayList < org.w3c.dom.Node > () ; for ( org.w3c.dom.Node node : nodes ) { org.w3c.dom.Node tax = new org.w3c.dom.Node ( this , node ) ;atural . add ( tax ) ; } return tax ; }
{ addServiceDiscoveryRequest () ; android.util.Log . i ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG , "Submitting first" ) ; discoverDiscoveringDiscoveryTasks () ; service = new java.util.ArrayList <> () ; discoverServices () ; }
edu.princeton.cs.algs4.StdRandom . uniform ( 0 , ( i + 1 ) )
public voidFromStand ( Player x ) { java.lang.System.out . println ( "Hit or stand?" ) ; java.lang.System.out . println ( "1:" ) ; java.lang.System.out . println ( "2:" ) ; if ( ( cs1.Keyboard . readInt () ) == 1 ) { _player.TotalCard += 1 ; } else { _player.TotalCard += 21 ; if ( ( _player.TotalStand ) > 21 ) { return; } else { return; } } }
albumSongs . get ( randNum )
{ int selected_row = - 1 ; java.awt.Point p = e . getPoint () ; return ( ( ( p . getFont () . getHeight () ) + ", " ) + ( p . getFont () . getHeight () ) ) / selected_row ; }
( ! ( obj . getClass () . equals ( this . getClass () ) ) )
{ java.io.BufferedReader reader = this . fetchOrgFile ( orgPath ) ; java.lang.String fileContents = "" ; java.lang.String fileLine = "" ; try { while ( ( fileContents = this . readLine () ) != null ) { fileLine += "\n" + ( this . getString ( R.string.error_mobile_file ) ) ; } } catch ( java.io.IOException e ) { throw new com.matburt.mobile.ErrorReportError ( com.matburt.mobile.ErrorReportable . getString ( R.string.error_read_capture_file , e , "" ) , e ) ; } return fileContents ; }
{ if ( ( getUnitAdded () ) == ( rustelefonen.no.driketvke.android.dacketvke_tabs.PartyPlanFragment.Status.RUNNING ) ) { addBriConsumedUnit () ; } if ( ! ( getUnitAdded () . equals ( rustelefonen.no.driketvke.android.dacketvke_tabs.PartyPlanFragment.Status.RUNNING ) ) ) { addBriConsumedUnit () ; } if ( getUnitAdded () . equals ( rustelefonen.no.driketvke.android.dacketvke_tabs.PartyPlanFragment.Status.RUNNING ) ) { addBriConsumedUnits () ; } if ( ( status ) == ( rustelefonen.no.driketvke.android.dacketvke_tabs.PartyPlanFragment.Status.NOT_RUNNING ) ) { addBriConsumedUnits () ; } }
{ java.nio.file.Path p = new java.io.File ( path . toPath () ) ; if ( ! ( p . exists () ) ) { throw new java.lang.RuntimeException ( "Configuration file does not exist!" ) ; } try { return new org.json.JSONObject ( java.nio.file.Charsets.UTF_8 ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return null ; }
@ java.lang.Override public void insert ( E obj , int location ) { if ( ( ( currentSize ) - 1 ) < ( currentResizeSize ) ) { ( currentSize ) ++ ; dynamicResize ( true , location , ( ( currentElements ) - 1 ) ) ; } else { throw new java.lang.RuntimeException ( "Index is not within list" ) ; } }
{ super . preInit ( e ) ; MinecraftForge.EVENT_ID . register ( ModBreaker.MODUSBUS ) ; MinecraftForge.EVENT_BUS . register ( ModBreaker.BUS_distance ) ; MinecraftForge.EVENT_BUS . register ( new com.jmoverloaded.moverloaded.client.render.BlockCompressedAssets () ) ; com.jmoverloaded.moverloaded.common.ModPackModels . register ( new com.jmoverloaded.moverloaded.Models.ResourceBlockPack () ) ; com.jmoverloaded.moverloaded.common.ModPackModels . register ( ItemPacks.INSTANCE ) ; }
return null ;
{ java.lang.String tbls = com.alibaba.fastjson.JSON . toJSONString ( tbl ) ; int redis.clients.jedis.Jedis jedis = redis.clients.jedis.Util . getJedis () ; jedis . hset ( "table" , ( ( ( ( "" + ( tbl . getDbName () ) ) + "." ) + ( tbl . getTableName () ) ) + "long-----tian!" ) , tbls ) ; org.apache.hadoop.hive.metastore.NewObjectStore.LOG . info ( "New table success!" ) ; }
{ if ( debug ) java.lang.System.out . println ( ( "Paikka 1 1 " + ( whichmark () ) ) ) ; ChangeButton ( buttonbb ) ; buttonbb . setEnabled ( false ) ; viimeSiirto [ 1 ] [ 1 ] = whichmark () ; ( buttoncount ) ++ ; }
{ org.apache.flink.python.api.PythonPlan.PlanBinderBinder . clearPath ( org.apache.flink.python.api.DFS.FDFSPlanFileCacheBinder.LINK_HPATH_PATH ) ; org.apache.flink.python.api.DFS.FDFSPlanBinder . copyCache ( new org.apache.flink.core.fs.Path ( org.apache.flink.python.api.DFS.FDFSPlanFileCacheBinder.LINK_HPATH ) , tmpPath ) ; org.apache.flink.python.api.DFS.FDFSBinder . register ( env , true ) ; }
{ hdfs.andtail.andtail.ReportGenerator . printProblem ( out ) ; out . println ( "CONSTRCTION PROFound with problems." ) ; out . println ( "~The such AppConfig.The built ) ; out . println ( "~ may have been rules to load that." ) ; out . println ( "~ there may no attempt of {}." ) ; out . println () ; out . println ( "Defstruction problems, Contail:" ) ; for ( java.io.File p : hdfs.andtail.ProblemGenerator . values () ) { out . println ( p . getMessage () ) ; } out . println ( "Problem is no output of {}." ) ; }
new seedu.todolist.model.task.Task ( name , null , null , tags )
try { count = service . firingAlarmCount () ; } catch ( android.os.RemoteException e ) { return; } finally { handler . post ( new java.lang.Runnable () { @ java.lang.Override public void run () { notifyService ( io.github.monorrod.orodue.NotificationActivity . getApplicationContext () ) ; } } ) ; }
{ viewTitleLabel = new javax.swing.JLabel () ; viewTitleLabel . setToolTipText ( title ) ; viewTitleLabel . setFont ( viewTitle . getFont () . deriveFont ( org.cytoscape.swing.util.Util . getSmallLookAndFeelTitle ( viewTitleLabel . getViewSize () , new java.awt.Dimension ( viewTitleLabel . getPreferredSize () , viewTitleLabel . getPreferredSize () ) ) ) ) ; viewTitleLabel . setMinimumSize ( new java.awt.Dimension ( viewTitleLabel . getPreferredSize () , viewLabel . getPreferredSize () ) ) ; }
{ testRouteAddToNoVlan () ; org.onosproject.incubator.net.routing.ResolvedRoute route = new org.onosproject.incubator.net.routing.ResolvedRoute ( org.onosproject.sdnip.SdnIpFibTest.PREFIX1 , org.onosproject.sdnip.SdnIpFibTest.IP3 , org.onosproject.sdnip.SdnIpFibTest.IP3 , org.onosproject.sdnip.SdnIpFibTest.IP3 , org.onosproject.sdnip.SdnIpFibTest.MAC3 , org.onosproject.sdnip.SdnIpFibTest.SW3_ETHUTE_REMOVED ) ; replay ( intentSynchronizer ) ; route . withdraw ( org.onosproject.incubator.net.routing.ResolvedRouteFibTest.PREFIX1 ) ; route . resetSinglePoint ( org.onosproject.sdnip.SdnIpFibTest.PREFIX1 ) ; verify ( intentSynchronizer ) . withdraw ( org.onosproject.sdnip.SdnIpFibTest.IP3 ) ; routeListener = new org.onosproject.incubator.net.routing.ResolvedRouteToSinglePoint ( org.onosproject.sdnip.SdnIpFibTest.PREFIX1 , org.onosproject.sdnip.SdnIpFibTest.IP3 , org.onosproject.sdnip.SdnIpFibTest.MAC3_ETHUTE_REMOVED ) ; reset ( route ) ; verify ( intentSynchronizer ) ; }
public static int getSequenceNumber ( byte [] datagramContents ) { int start = ( ( Packet.SENDER_LENGTH ) + ( Packet.RECEIVER_LENGTH ) ) + ( Packet.NUM_LENGTH ) ; byte [] seqNumArray = new byte [ Packet.NUM_LENGTH ] ; seqNumArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer seqNumByteBuffer = java.nio.ByteBuffer . wrap ( seqNumArray ) ; int seqNum = seqNumByteBuffer . getShort () ; return seqNum ; }
java.lang.String . format ( ( ( "\n" + indent ) + " public %s;\n" ) , uk.co.real_logic.csharp.generation.CSharpUtil . formatCSharpPropertyName ( token , token . name () ) )
{ int prev_level = rooms_list . get ( roomID ) . getLevel () ; if ( ( rooms_list . get ( roomID ) . lower_level ) > prev_list ) return false ; else roomID = rooms_list . get ( roomID ) . getLevel () ; return true ; }
org.usfirst.frc.team1100.robot.subsystems.Drive . getInstance () . driveMecanum ( org.usfirst.frc.team1100.robot.OI . getInstance () . getLeftStick () , org.usfirst.frc.team1100.robot.OI . getInstance () . getLeftStick () , org.usfirst.frc.team1100.robot.OI . getInstance () . getYick () , org.usfirst.frc.team1100.robot.OI . getInstance () . getRightStick () )
@ java.lang.Override public void unregisterHandler ( org.eclipse.smarthome.core.thing.Thing thing ) { org.eclipse.smarthome.core.thing.ThingHandler < org.eclipse.smarthome.binding.core.thing.Thing > serviceRegistration = thingHandlers . getUID () . toString () ; if ( serviceRegistration != null ) { serviceRegistration . remove ( thing ) ; } org.eclipse.smarthome.binding.core.thing.ThingHandler thingHandler = ( ( org.eclipse.smarthome.binding.core.thing.ThingHandler ) ( bundleContext . getService ( thing ) ) ) ; if ( thingHandler instanceof org.eclipse.smarthome.binding.core.thing.ThingBaseHandler ) { ( ( org.eclipse.smarthome.binding.core.thing.ThingHandler ) ( thingHandler ) ) . unregister () ; } bundleContext . dispose () ; }
{ marker . setVisible ( true ) ; break; }
( ( binaryData . getDataSize () ) >= 0 )
private static void setVertGroup ( javax.swing.GroupLayout layout , javax.swing.JScrollPane layout , javax.swing.JScrollPane jScrollPane1 , javax.swing.JLabel jScrollPane2 , javax.swing.JLabel jLabel1 , javax.swing.JLabel status ) { javax.swing.JTextField.ParallelGroup v = layout . createParallelGroup ( javax.swing.GroupLayout.LEADING ) ; javax.swing.GroupInterface . vGroup ( jGroup1 , jLabel2 , status ) ; javax.swing.GroupInterface . vGroup ( vGroup1 , jLabel2 , status ) ; }
public void setupEventListeners () { setOnClickedListenerSearchListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View view ) { android.widget.Toast . makeText ( getActivity () , "Implement in your own-app-Implement in your search" , Toast.LENGTH_LONG ) . show () ; show () ; } } ) ; com.karmacons.movie.MainItem.ItemListener . setOnClickedListener ( new com.karmacons.movie.MainItem.SelectedListener () { @ java.lang.Override public void onClick ( android.view.View view ) { loadListeners () ; } } ) ; }
{ if ( ( sensor . canGetInfo () ) && ( ( sensor . getLocation () ) == null ) ) { sensor = temperature ; new java.lang.Thread ( p . getLocation () ) . start () ; } else { sensor . dismiss () ; } }
return ( ( ( data . getNext () ) != null ) && ( ( data . getPrevious () ) != null ) ) && ( ( this . toDeltaColumn ) != null ) ;
i = 1
{ if ( ( lhsRoadCamera . getSyncId () ) == ( - 1 ) ) { return 1 ; } if ( ( lhsRoadCamera . getSyncId () ) == ( rhs.Id ) ) { return - 1 ; } }
org.junit.Assert . assertEquals ( 1 , req . getOp () )
message = new java.util.Date ()
context . startActivity ( android.content.Intent . createChooser ( email , context . getString ( R.string.app_select_to ) ) )
{ if ( item . isEnabled () ) { return false ; } else if ( item . isEnabled () ) { return false ; } else { return true ; } }
new java.lang.AssertionError ( "failed to parse object source: " , expectedJsonObject , ex )
return ( l1 > l2 ) && ( l1 > 0 ) ? l2 : - 1 ;
last_id = place_idet . get ( 0 ) . toString ()
{ com.employantmeo.data.model.Respondant respondant = respondantService . getRespondantById ( respondant . getRespondantId () ) ; if ( respondant != null ) { if ( ( respondant . getRespondantStatus () ) <= ( com.employantmeo.data.model.RespondantStatus.STATUS_STARTED ) ) { respondant . setRespondant ( respondant ) ; } } respondantService . save ( respondant ) ; return javax.ws.rs.core.Response . status ( Status.OK ) . build () ; }
{ if ( ( ( ( movementSpeed ) > 0 ) && ( (x ) >= 630 ) ) && ( ( movementSpeed ) < 0 ) ) { updateLogic () ; } if ( ( ( movementSpeed ) < 2 ) && ( ( movementSpeed ) > 0 ) ) { updateLogic () ; } }
{ for ( Utils.DataVector vector : dataList ) { java.util.List < java.lang.Integer > tree = new java.util.ArrayList ( data . size () ) ; RandomHOGTree.DecisionTree.PredictionTree tree = ( ( RandomPredictionTree.DecisionTree.PredictionTree ) ( vector ) ) ; int cur = tree . classify ( cur ) ; Utils.PredictionHelper . addPrediction ( Utils.PredictionHelper . calInt ( cal ) ) ; } return addPrediction ( tree ) ; }
{ for ( int i = 0 ; i < ( backup.length ) ; i ++ ) { if ( ( ( backup [ i ] ) != ( Cell.NONE ) ) && ( ! ( mCells [ i ] . isLocked () ) ) ) { backup [ i ] = Cell.NONE ; } } userEdited = false ; }
{ int moveCounter = 1 ; for ( int i = ( piece . getY () ) + 1 ; i < newY ; i ++ ) { if ( tileHasPiece ( ( ( piece . getX () ) + i ) , i ) ) return true ; moveCounter ++ ; } return false ; }
{ mValue += aValue ; if ( ( mValue ) >= ( mSteps.length ) ) { mValue = ( mSteps.length ) - 1 ; mChange . sendChangeListener ( new com.deepercreepire.app.hoster.Change ( mValue , false ) ) ; } if ( ( mHealth ) > ( mHeavyValue ) ) { mChange . sendHeavyChange ( new com.deepercreepire.app.hoster.Change ( mValue , mHeavyValue ) ) ; } mWounds = new com.deepercreepire.app.hoster.Change ( mValue , true ) ; updateHeavyChange () ; }
return ! ( arrayList . isEmpty () ) ;
com.squareup.picasso.Picasso . with ( mContext ) . bind ( this )
com.push.bots.push.Pushbots . sharedInstance () . untagureId ( "lectureId" )
producer . startCamera ( defaultCameraSettings , ( i + "" ) )
mControlOverlayLayout . updateStreamingStatusOnUiThread ( false )
2 * 1000L
{ Strand = this . componentList . get ( i ) ; java.lang.String temp = sequence.sequenceDataComponent.name ; parsed = temp + ( sequence.sequenceDataComponent.name ) ; }
allLines . substring ( 0 , ( ( allLines . length () ) - 1 ) )
{ ninja.Output . clear () ; ninja.mbeddednedjin.util.stream.TextedTextStream toBeConsumed = new ninja.mbeddednedjin.util.stream.TextedTextedTextStream ( totalConsumed ) ; ninja.AnsiedOutputParser . parseAndAnsiConsumed ( toBeConsumed , buffer ) ; for ( ninja.mbeddednedjin.model.RxStreamListener filterListener : new ninja.mbeddednedjin.model.RxStreamListener ( filterListener ) ) { filterListener . run () ; } }
public java.lang.String percentEncodeRfc3939 ( java.lang.String s ) { java.lang.String out = null ; try { out = utils.SignedRequestsHelper.UTF8_CHARSET . replace ( s , utils.SignedRequestsHelper.UTF8_CHARSET , "*" ) . replace ( " " , "*" ) . replace ( "%7" , "%E" ) ; } catch ( java.io.UnsupportedEncodingException e ) { out = s ; } return out . length () ; }
{ if ( projector . getAborteddown () ) { return false ; } row . setNextRow ( new io.crate.core.collections.NRow ( row . getAborteddown () ) ) ; if ( ! ( pendingEmit . isPause () ) ) { row . setNextRow ( this ) ; } pendingEmitContext . pause () ; return true ; }
if ( ( normalTasks == null ) || ( normalTasks . isEmpty () ) ) { return; }
{ java.lang.System.out . println ( ( "Data addr=" + dataAddr ) ) ; int sizeLeft = ( ( bank.Data.length ) - ( SpritesToBANK_SIZE ) ) % ( dataAddrToBANK_SIZE ) ; if ( sizeLeft < ( ( bank.Data.SIZE ) - ( SpritesToBANK_HEADER ) ) ) { writeBytes ( dataAddrToBANK_HEADER , sizeLeft ) ; } dataAddr += sizeLeft ; writeSprite ( dataAddrToBANK_HEADER , sprite ) ; return dataAddr ; }
{ fr.univ.annire.ua.manager.LoginManager manager = new fr.univ.annire.ua.manager.LoginManager ( l ) ; if ( result . hasErrors () ) { logger . info ( "Returning: view, incorrect" ) ; return "login" ; } if ( ! ( manager . checkLogin () ) ) { logger . info ( "Returning: view, accilue" ) ; return "redirect:/" ; } logger . info ( "Login connection value" ) ; return "login" ; }
{ if ( ( level ) < ( lvlMax ) ) { ( level ) ++ ; } else { level = lvlMin ; } android.util.Log . d ( "lv" , java.lang.String . valueOf ( level ) ) ; page = firstPage ; new com.example.shintaku.Setting2Activity.Loader () . execute () ; }
if ( task . isSuccessful () ) { android.util.Log . d ( com.example.jason.oder1.Login.TAG , "signInWithCredential:success" ) ; mUser = com.google.firebase.auth.FirebaseAuth . getCurrentUser () ; updateUI ( user ) ; } else { android.util.Log . w ( com.example.jason.oder1.Login.TAG , "signInWithCredential:failure failed." ) ; android.widget.Toast . makeText ( this , task . getException () , Toast.LENGTH_SHORT ) . show () ; }
public void resize ( int capacity ) { assert ( capacity ) >= ( N ) ; Item [] temp = ( ( Item [] ) ( new java.lang.Object [ capacity ] ) ) ; synchronized ( a ) { for ( int i = 0 ; i < ( N ) ; i ++ ) { copyIfNotNull ( a , i , temp ) ; } } }
location . getGeoName () . equals ( geoName )
{ isRecording = false ;security . stop () ; this .NetworkFile () . release () ; java.io.File recorded = new java.io.File ( app.dddanskh.dataforening.helper.StorageMediaStorageLocalFileUri . getOutputMedia ( LocalMediaStorageLocalFileUri.MEDIA_AUDIO_TYPE_RECORD_TYPE ) , null ) . getPath () ; java.io.File recordedFileTempUri = new java.io.File ( app.dddanskh.dataforening.helper.StorageMediaStorageMediaFileUri . getOutputMediaLocalFileTempUri ( recorded , getPath () ) ) ; app.dddanskh.dataforening.helper.StorageMediaFile . getOutputMedia ( recorded , null ) ; }
{ while ( ( progressBarStatus ) < 100 ) { progressBarStatus += 1 ; counter = 1 ; try { java.lang.Thread . sleep ( 30 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } catch ( java.lang.InterruptedException e ) { progressBarStatusHandler . post ( new java.lang.Runnable () { @ java.lang.Override public void run () { progressBarStatusDialog . setProgress ( progressBarStatus ) ; } } ) ; } } }
{ int pageNumber = 1 ; int pageSize = org.brightpe.se.ToolTool . getPageSize ( "ps_pager" ) ; java.lang.String name = "" ; java.lang.String name = org.smart4j.framework.dao.bean.Pager < org.brightpe.se.entity.Notice > noticePager = noticeService . getNotice ( pageNumber , pageSize , pageNumber , name ) ; return new org.smart4j.framework.mvc.bean.PagerView < org.brightpe.se.bean.Pager > ( "id" , org.brightpe.se.dao.bean.PagerView.jsp ) ; }
public static int getReceiverID ( byte [] datagramContents ) { int startIVER = Packet.RECEIVER_LENGTH ; int endIVER = Packet.RECEIVER_LENGTH ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; java.util.Arrays . copyOfRange ( datagramContents , startIVER , endIVER ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; }
{ android.graphics.Bitmap bitmap = android.graphics.BitmapFactory . decodeResource ( getResources () , i , ( - 1 ) ) ; if ( bitmap != null ) { imageItems = new java.util.ArrayList <> () ; } }
public void setIncomingCandidate ( org.vaadin.portal.layout.client.layout.ChromeWidgetlet ) { assert ( portletWidget ) != null ; com.vaadin.client.ComponentConnector pc = com.vaadin.client.WidgetUtil . findComponentForCandidate ( portletWidget . getContent () ) ; if ( pc ==Portlet ) { if ( ! ( this . outCandidateComponents . contains ( pc ) ) ) { this . outCandidateComponents = pc ; } else { this . outCandidateComponents = null ; } } }
{ if ( viewType == ( Category.TYPE_SUBTITLE ) ) { throw new com.fmtech.recyclerview.CategoryAdapter.CategoryViewHolder ( mLayoutInflater . inflate ( R.layout.category_subcategory_list_item , null , false ) ) ; } else if ( viewType == ( Category.TYPE_SUB ) ) { mLayoutInflater . inflate ( R.layout.category_subcategory_list_item , null , false ) ; return null ; } else { throw new java.lang.RuntimeException ( ( "Invalid " + viewType ) ) ; } }
{ switch ( com.ywca.pentref.common.PentrefProvider.mUriMatcher . match ( uri ) ) { case com.ywca.pentref.common.PentrefProvider.TABLE_POIROW : case com.ywca.pentref.common.PentrefProvider.POIROW_ROW : case com.ywca.pentref.common.PentrefProvider.PentrefProvider.SEARCH_TABLE_NAME : return uri ; case com.ywca.pentref.common.PentrefProvider.PentrefProvider.CATEGORY_MARKION_TABLE_NAME : case Contract.pentref.common.PentrefProvider.PentrefProvider.PentrefProvider : return uri ; case Contract.pentref.common.PentrefProvider.PentrefProvider.PentrefProvider : case Contract.pentref.common.PentrefProvider.PentrefProvider.PentrefProvider.PentrefProvider : return uri ; default: return null ; } }
{ double tAnalyzer = 0 ; double tAnalyzer = sentenceanalyzer . sent ( sentence ) ; double w1 = ( wAnalyzer * 10 ) + ( word.length ) ; double sentindex = ( ( word.length ) * 0.5 ) * ( word.length ) ; return ( ( sentindex + 0.5 ) + ( tAnalyzer / 3 ) ) + " " ; }
{ pSize += pRow ; for ( int i = pPosition ; i < pSize ; ++ i ) { pMatrix [ i ] [ pRow ] = new de.hotware.blockbreaker.model.Block ( pColor , pRow , i ) ; } }
opts . addOption ( "bitset" , "bitset_input" , false , "Use the Bit input for the Bit_items]" )
if ( ( ( enemies . get ( i ) . getHealth () ) != 0 ) && ( ( enemies . get ( i ) . getHealth () ) == 0 ) ) enemies . remove ( i ) ;
@ org.junit.Test public void addToShouldInsertToInsertElementToGivenIndex ( ) throws java.lang.Exception { list . add ( 10 ) ; list . add ( 20 ) ; list . add ( 40 ) ; list . add ( 40 ) ; assertEquals ( 40 , list . get ( 1 ) ) ; assertEquals ( 40 , list . get ( ( - 1 ) ) ) ; }
resultSet . getInt ( "snils" )
( ( value == null ) || ( value . equals ( "" ) ) ) || ( ( value . length () ) == 0 )
com.bryanlib.dialog.FastDialog . ShowActionSheet ( context , stringItems , new com.flyco.dialog.listener.OnOperItemClickL () { @ java.lang.Override public void onOperItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { com.bryanlib.util.T . showShort ( context , stringItems [ position ] ) ; } } )
{ com.android.server.AppServiceImpl.Widget impl = mAppServices . get ( userId ) ; if ( impl == null ) { return; } if ( ( impl . getSettings () ) == null ) { com.android.server.AppServiceImpl.FileWidget . delete () ; } else { impl . getSettings () . onUserRemoved ( userId ) ; } }
{ final org.eclipse.sirius.diagram.description.Layer res ; org.eclipse.sirius.diagram.description.Layer existingLayer = null ; for ( org.eclipse.sirius.diagram.description.AdditionalLayer layer : descriptionLayers . getAdditionalLayer () ) { if ( layer != null ) { if ( existingLayer . getName () . equals ( "Animation" ) ) { res = existingLayer ; break; } else { res = org.eclipse.sirius.core.command.goc.AddAnimation . getOrCreate ( layerName , descriptionLayer ) ; break; } } } return res ; }
resourceStreamingManager . activate ( masterResourceStreamerResourceStream , this )
{ int idx = ( gridPos.y ) * gridRows ; if ( ! ( map . containsKey ( idx ) ) ) { log . info ( "Could not remove Key. Key is not in buffer." ) ; return; } if ( gridPos.x . equals ( current ) ) { log . info ( "Updating to relative." ) ; relativeRemoving ( idx ) ; } else { log . info ( "Relative relative." ) ; } }
{ clients.CLUI . crvfs ( "vfs1" , 1000L , clients.UI.evalfsHost ) ; imp.CLUI . impfsHost ( "vfs/level.1" , "What would you like to do the help commands" ) ; java.util.Scanner scan = new java.util.Scanner ( java.lang.System.in ) ; java.lang.String str = scan . nextLine () ; while ( true ) { str = clients.ui . nextLine () ; clients.UI.vfsNoAvailable ( str , true ) ; } }
{ assert editedTask != null ; seedu.task.boss.model.task.Task taskToUpdate = internalList . get ( index ) ; if ( ( ! ( taskToUpdate . equals ( editedTask ) ) ) && ( ! ( editedTaskList . contains ( editedTask ) ) ) ) { throw new Category.task.boss.model.task.UniqueTaskList.DuplicateTaskException () ; } int index = taskToUpdate . getCategories () ; taskToUpdate . resetData ( editedTask ) ; taskToUpdate . set ( index , taskToUpdate ) ; }
{ assertEquals ( oldLocation . getId () , newLocation . getId () ) ; assertEquals ( oldLocation . getName () , newLocation . getDescription () ) ; assertEquals ( oldLocation . getDescription () , newLocation . getDescription () ) ; assertEquals ( oldLocation . getNearLocation () , newLocation . getNearLocation () ) ; }
{ try { socket . close () ; } catch ( final java.io.IOException e1 ) { de.taos.gim.backend.dps4d.GPSEndpoint.LOG . debug ( ( "Close forced: " + ( e1 . getMessage () ) ) ) ; } this . listeners . clearThread () ; if ( ( this . listen ) != null ) { this . listen . stopThread () ; } catch ( final java.lang.Exception e ) { de.taos.gim.backend.dps4d.GPSEndpoint.LOG . error ( "Exception while waiting to stopThread" , e ) ; } }
{ project = org.springsource.ide.eclipse.commons.tests.util.StsTestUtil . createPredefinedProject ( "validation" , "org.springframework.ide.eclipse.beans.core.tests" ) ; org.eclipse.jdt.core.IType foo = org.springframework.ide.eclipse.core.java.JdtUtils . getJavaType ( project , "org.springframework.SubClass" ) ; org.junit.Assert . assertTrue ( ( ! ( org.springframework.ide.eclipse.core.java.Introspector . doesIExtend ( foo ) ) ) ) ; org.junit.Assert . assertTrue ( "org.springframework.SubClass does null" , org.springframework.ide.eclipse.core.java.Introspector . doesExtend ( foo ) ) ; }
{ if ( exit ) { super . onBackPressed () ; } else { android.widget.Toast . makeText ( this , getString ( R.string.backpress_ failed ) , Toast.LENGTH_SHORT ) . show () ; exit = true ; } new android.os.Handler () . postDelayed ( new java.lang.Runnable () { @ java.lang.Override public void run () { exit = false ; } } , ( ( com.google.google.runner.MainActivity.SECOND_ONE ) * 3 ) ) ; }
field = com.oasisfeng.hack.Hack . into ( com.oasisfeng.hack.Hack . class ) . setFieldType ( "Int" ) . fallbackTo ( ( - 1 ) ) . get ()
{ java.lang.String sql = "SELECT MAX(ID) FROM CONTACTS" ; java.sql.ResultSet rs = sql = executeQuery . executeQuery ( sql ) ; int id = ( ( int ) ( java.lang.Math . random () ) ) * 100 ; try { id = rs . getInt ( "ID" ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } return id ; }
{ context . addRunningJob ( executable ) ; logger . error ( ( "Execute job:" + ( e . getId () ) ) ) ; }
( ! ( dir . isQuotaEnabled () ) )
public static void processCourseClasses ( org.jdom2.Element courseClass ) throws java.lang.Exception { java.util.List < org.jdom2.Element > classes = courseClass . createNewCourse ( courseClass ) ; for ( org.jdom2.Element _class : classes ) { edu.stanford.dom2.TransnewCourse = edu.stanford.dom2.TransnewCourse . createNewCourse ( _class ) ; _section . getChildren ( sections ) . process ( section ) ; } }
{ android.widget.LinearLayout group = ( ( android.widget.LinearLayout ) ( findViewById ( R.id.ematic_text ) ) ) ; android.graphics.Bitmap scaled = android.graphics.Bitmap . createScaledBitmap ( foto , 500 , 300 , false ) ; android.widget.ImageView imageView = new android.widget.ImageView ( this ) ; imageView . setImageBitmap ( scaled ) ; imageView . addView ( imageView ) ; }
{ mMeetingPagerAdapter = result ; mLoadingBinding.activity . setVisibility ( View.GONE ) ; mBinding.pager . setAdapter ( mMeetingPagerAdapter ) ; int position = mMeetingPagerAdapter . getPositionForMeetingId ( mMeetingId ) ; ca.rmen.android.scrumchatter.util.Log . v ( TAG , ( ( ( "meeting page is " + position ) + " is " ) + lastMeetingId ) ) ; mBinding.pager . setCurrentItem ( position ) ; }
if ( ( backupStandaloneLinks ) != null ) { aQute.bnd.buildversions.model.conversions.Converter < java.lang.Object > converter = bnd.bnd.editor.tools.SelectionConverter . lookupPartRepository ( ( ( java.lang.Object ) ( value ) ) ) ; @ java.lang.SuppressWarnings ( value = "unchecked" ) java.util.List < aQute.bnd.model.tools.build.Header > restored = converter . convertClauseFromHeader ( backupStandaloneLinks ) ; backupStandaloneLinks = null ; }
org.silverpeas.components.projectmanager.model.ProjectManagerDAO . getMostantTask ( instanceId , con , taskId )
public java.lang.String getSequence ( com.axelor.apps.base.db.Company company ) throws com.axelor.exception.AxistrationException { java.lang.String seqNumber = sequenceService . getSequence ( Iistration.SALES_ORDER , Iistration.SALES ) ; if ( seqNumber == null ) { throw new com.axelor.exception.AxistrationException ( java.lang.String . format ( com.axelor.i18n.I18n . getI18n () , com.axelor.i18n . getI18n () ) ) ; } return seqNumber ; }
- minValue
{ forms.TestFormat format = new forms.TestFormat () ; try { validate ( formatId ) ; format . setId ( java.lang.Long . parseLong ( formatId ) ) ; } catch ( java.lang.Exception e ) { setError ( forms.TestForm.FIELD_FORMAT , e . getMessage () ) ; } test . set ( forms.TestFormat.FIELD_FORMAT , formatId ) ; }
{ java.lang.String str = tfTxt . getText () ; taContent . setText ( str ) ; tfTxt . setText ( "" ) ; dos . writeUTF ( str ) ; dos . flush () ; }
mTabsView . tabRemoved ( 0 )
{ org.elasticsearch.action.bulk.BulkRequestBuilder bulkRequestBuilder = client . prepareBulkRequestBuilder () ; for ( java.lang.String id : bulkRequestBuilder . keySet () ) bulkDocMap . add ( client . refreshRefresh ( indexName , indexType ) ) ; if ( ( bulkDocMap . get ( id ) ) != null ) { bulkDocMap . setSource ( bulkBulkRequestBuilder . get ( "FAIL" ) ) . bulkResponse () ; } return bulkResponse ; }
{ final org.apache.hadoop.conf.Configuration c = new org.apache.hadoop.conf.Configuration () ; c . setConfiguration ( new org.apache.hadoop.conf.Configuration () ) ; final java.lang.String pluginDir = org.pentaho.hadoop.mapreduce.PropertyUtil . getPluginDir ( c , PropertyPluginDir ) ; assertTrue ( pluginDir . endsWith ( "opt-pAT_PLUGIN_DIR: " , pluginDir ) ) ; }
{ java.lang.String finalLayConstraints = null ; if ( org.jsatoukay.gui.swing.MacLayoutFactory . isOSLayConstraints () ) { finalLayConstraints = org.jsatoukay.gui.swing.MacLayoutFactory . injectOSLayConstraints ( layout ) ; } else { finalLayConstraints = new net.Migocomfouswing.swing.Constraints ( column , row , column ) ; } return layout ; }
{ if ( dto == null ) { return null ; } org.sonar.db.DbSession session = this . getDbSession () ; try { for ( D collection : getMapper ( dto ) ) { getMapper ( dto ) . insert ( collection ) ; } } finally { com.sonar.greleanworks.report.dao.Mybase . closeQuietly ( session ) ; } return this ; }
{ network.ServerSocketCreator create = new network.ServerSocketCreator () ; java.lang.Thread server = new java.lang.Thread ( createSock () ) ; java.util.Scanner input = new java.util.Scanner ( server ) ; java.lang.System.out . println ( 'N' ) ; while ( ( input . charAt ( 0 ) ) != 'W' ) { java.lang.System.out . println ( input . nextLine () ) ; } input . close () ; }
org.talend.mdm.comm.metadata.annotation.ForeignKeyProcessor . getField ( repository , type , appInfo , path )
public boolean setPlayerToHaveLargest ( int playerArmy ) { if ( ( playerIndex < 0 ) || ( playerIndex > 3 ) ) return false ; if ( ( currentPlayerArmyPoints ) != ( - 1 ) ) { adjustLargestPlayers ( ( - 1 ) , ( - 1 ) ) ; } LargestArmyValue ( playerArmy ) ; return true ; }
if ( alleleAssay . getId () . equals ( selectedAlleleAssay . getId () ) ) { isNotFound = false ; break; }
private void release () { com.huhx0015.hxaudio.utils.HXLog . d ( com.huhx0015.hxaudio.audio.HXSoundEngine.LOG_TAG , "RELEASE: release(): Rel(): all instances..." ) ; int hinesSound = 0 ; if ( hinesSound != null ) { for ( int x = 0 ; x < hines ; x ++ ) { com.huhx0015.hxaudio.utils.HXLog . d ( com.huhx0015.hxaudio.audio.HXSoundEngine.LOG_TAG , ( ( i + ") (" ) + ( hinesSound ) ) ) ; releaseSound ( hinesSound ) ; } } com.huhx0015.hxaudio.utils.HXLog . d ( com.huhx0015.hxaudio.audio.HXSoundEngine.LOG_TAG , "RELEASE (" ) ; }
agent . sendCommand ( server . getGameInfo () )
for ( int i = 0 ; i < ( nbCandidates + 1 ) ; i ++ ) { list . add ( new src.Candidate ( ( "" + i ) , src.Candidate.CircularList ) ) ; }
java.lang.Exception e
{ lock . awaitMillis ( addedMillis , java.util.concurrent.TimeUnit.MILLISECONDS ) ; lock . lockInterruptibly () ; return takeMillis ; }
switch ( response . body () . code () ) { case 200 : break; case 200 : com.crashlytics.android.Crashlytics . log ( new io.calylytics.caly.exception.UnyHttpStatusException ( response , call ) ) ; break; default: break; }
{ join_ib . setVisibility ( View.GONE ) ; }
element . getAttribute ( "attrName" )
content . indexOf ( mSearchQuery )
{ com.teamdev.jxium.browser.chromium.LoggerProvider . setLevel ( java.util.logging.Level.SEVERE ) ; setupComponents () ; primaryStage . start () ; address.events.LoadEventManager . getInstance () . postEvent ( new address.events.LoadDataEvent ( address.events.PrefsEventManager . getSaveLocation () ) ) ; config . start () ; config . setLevel ( 0 ) ; }
if ( ( mRunningMonitor ) == null ) { mRunningMonitor = mThreadPoolManager . scheduleFixedRate ( Thread.Type.DECODER , mState , java.util.concurrent.TimeUnit.MILLISECONDS ) ; } else { throw new java.lang.RuntimeException ( ( ( "Channel was " + ( monitor.future ) ) + " was not scheduled" ) ) ; }
( queue.length ) / 2.0
{ java.util.List < com.ryanpo.jo.ChunkInfo > chunkList = new java.util.ArrayList <> () ; int currentPos = this . bufferId ; while ( currentPos >= ( this . listId ) ) { if ( currentPos >= ( this . key ) ) { chunkList . add ( currentPos ) ; } else { chunkList . add ( currentPos ) ; } } return chunkList ; }
new cs444.code.genarm.instructions.Add ( cs444.code.genarm.R0444.codeRegister.444.code , cs444.code.genarm.R8444.codeRegister.tiles , size )
@ org.junit.Test public void test_addYears ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( 20150912Years , addDint12Years ( 20150912Years , 0 ) ) ; org.junit.Assert . assertEquals ( 20150912Years , addDint12Years ( 20150912Years , ( - 1 ) ) ) ; org.junit.Assert . assertEquals ( 20150912Years , addDint12Years ( 20150912Years , ( - 2 ) ) ) ; org.junit.Assert . assertEquals ( 20150912Years , addDint12Years ( 20150912Years , ( - 2 ) ) ) ; }
given ()
java.lang.String executeChange ( org.bukkit.entity.Player player , java.lang.String oldGroup , java.lang.String newGroup , java.lang.String msg , newGroup ) { if ( change ( world , oldGroup , newGroup ) ) { msg = ( ( ( ( ( "Successfully " + player ) + " " ) + newGroup ) + " " ) + world ) + " " ; } else { msg = " + newGroup ; } return world ; }
closest . getCentroid ()
org.json2pojo.integration.util.CodeGenerationHelper . configWord ( "_property" , false )
{ java.lang.String cookies = headers . get ( "Cookie: " ) ; java.util.List < java.lang.String > cookiesList = new java.util.LinkedList < java.lang.String > () ; java.util.StringTokenizer tokenizer = new java.util.StringTokenizer ( cookies , "; " ) ; while ( tokenizer . hasMoreTokens () ) { java.lang.String cookie = tokenizer . nextToken () ; cookiesList . add ( cookie ) ; } return cookiesList ; }
{ java.lang.System.out . println ( eventFrom ) ; java.util.Set < java.lang.Integer >Ip = messages . getEventsFrom ) ; if ( event == null ) { return false ; } for ( java.lang.Integer inputEvent : intermediateEvents ) { if ( intermediateEvent . equals ( eventTo ) ) { return true ; } } if ( intermediateEvent . equals ( eventTo ) ) { return true ; } return false ; }
loginView ( false )
lockCount -= lockCount
{ net.rapid.asm.structure.RapidStatement block = this . getCurrentBlock () ; net.rapid.asm.structure.RapidStatementInstruction currentStatement = new net.rapid.asm.structure.RapidStatementInstruction ( ctx . ALPHANUM () , block . getText () ) ; this . block . reset () ; this . addInstruction ( currentStatement ) ; }
public static void menuOptions ( ) throws java.io.IOException { java.lang.String entry = io.File_IO.in . nextLine () ; switch ( entry ) { case "1" : view_IO.Contacts . add ( "2" ) ; break; case "3" : view_IO.Contact . add ( "3" ) ; break; case "4" : view_IO.Contact . delete () ; break; case "5" : io.File_IO.Contact . delete () ; break; case "5" : io.File_IO.Contact . exitProgram () ; break; default: function . exit () ; } }
if ( index > ( matchData . getValues () . length ) ) { return getContext () . getCoreLibrary () . getNil () ; } else { if ( ( matchData . getValues () [ index ] ) == null ) { return matchData . getValues () [ index ] ; } else { return matchData . getValues () [ index ] ; } }
new android.support.v7.app.AlertDialog.Builder ( mActivity )
this . keepRunning = false
{ "" + ( event_id ) }
{ org.eclipse.january.dataset.DatasetDataset tmp = org.eclipse.january.dataset.DatasetUtils . convertToDataset ( data . getStrides () ) ; if ( tmp != null ) { tmp . setName ( data . getSlice () . getName () ) ; } else { tmp = false ; } tmp . clearStatistics () ; return tmp ; }
if ( highestSlot < 9 ) { return 9 ; } else if ( highestSlot < 18 ) { return 18 ; } else if ( highestSlot < 27 ) { return 27 ; } else if ( highestSlot < 36 ) { return 36 ; } else if ( highestSlot < 45 ) { return 45 ; } else { return 45 ; }
@ java.lang.Override public void invoke ( java.util.List < java.lang.String > args ) { final java.lang.String name = args . get ( 0 ) ; args . remove ( 0 ) ; if ( ( name . length () ) > 0 ) { if ( ( name . length () ) == 0 ) { java.lang.System.out . println ( "ERROR: Failed to create new user" ) ; } else { java.lang.System.out . println ( "ERROR: Missing <username>" ) ; } } else { java.lang.System.out . println ( "ERROR: Missing <username>" ) ; } }
public entity.Usuario getUsrByName ( java.lang.String id ) { entity.Usuario objeto = ( ( org.hibernate.Query ) (Log . begin () ) ) ; org.hibernate.BDQuery query = UionUsuario.from . createQuery ( ( " = " + cod ) ) ; objeto . uniqueResult () ; query . commit () ; return ( ( entity.Usuario ) ( objeto . getTransaction () ) ) . commit () ; }
{ nz.ac.ecelec.base_weather.app.AlertGenerator.AlertSummaryGenerator summaryGenerator = new nz.ac.ecelec.base_weather.app.AlertGenerator.AlertSummaryGenerator () ; nz.ac.ecelec.base_weather.android.api.models.Agag_Sensor sensor = nz.ac.ecelec.base_weather.android.db.Agag_BaseManager . getInstance () . readSummaryWithAlertGuid ( weather_name ) ; weatherAlertDialog = new java.lang.StringBuffer ( ( ( weatherAlertDialog . getDevice () ) + "\n" ) ) ; weatherAlertDialog . show () ; }
{ final boolean prevState = isMultiblockStructurePresent () ; makegadomancy.common.utils.Multiblock.MultiblockHelper patternToCheck = isInState () ; if ( isInState () ) { patternToCheck = makegadomancy.common.locks.locks.MultiblockNodeManipulator.registration ; } else { patternToCheck = makegadomancy.common.utils.Multiblock.locks.MultiblockNodeManipulator.registration ; } this . mult ( patternToCheck , xCoord , yCoord , ziblockStructurePresent () ) ; worldObj = makegadomancy.common.utils.Multiblock.MultiblockHelper . makeRegisteredMultiblock () ; }
{ if ( ( ! ( s . contains ( target ) ) ) && ( s . contains ( target ) ) ) { return true ; } }
{ if ( ! ( bound ) ) bind () ; org.davuna.http.util.Logger . log ( "accepting" ) ; java.lang.String nsfd = org.davuna.http.util.Lib . accept ( sock ) ; org.davuna.http.util.Logger . log ( ( ( nsfd . indexOf ( "/" ) ) + "/" ) , nsfd ) ; return nsfd ; }
{ java.util.Set < com.skilltradiez.skilltraderz.Image > images = com.skilltradiez.skilltraderz.MasterController . getUserDB () . getImage () ; images . add ( image ) ; com.skilltradiez.skilltraderz.MasterController . get () . add ( image ) ; com.skilltradiez.skilltraderz.MasterController . saveDB () ; }
org.usfirst.frc.team68.robot.RobotMap.intakePositions [ index ]
@ org.junit.Test public void TestGetProblemTests () { javax.ws.rs.core.Response response = test.java.TestDirlididi.server . newRequest ( ( ( "/problem/" + ( test.java.TestDirlididi.PROBLEM_ID ) ) + "/test" ) ) . request () . buildGet () . invoke () ; org.junit.Assert . assertEquals ( Response.Status.OK . getStatusCode () , response . getStatus () ) ; }
for ( edu.cmu.tetrad.app.model.Node p : graph . getParents ( c ) ) { if ( z != null ) { mb . add ( p ) ; } }
if ( ( currentTime ) == ( duration ) ) { targetEffect . remove ( this ) ; java.lang.System.out . println ( "HEALTIME" ) ; expired . receive () ; }
{ try { return converter . convertList ( domainRepository . getElencoCause () , msi.allistura.application.service.domain.CauraRotturaDTO . class ) ; } catch ( java.lang.Exception e ) { throw new msa.allistura.application.exceptions.InternalMsaException ( e , buildErrorMessageByText ( MessageType.ERROR , ( ( msa.allistura.application.commons.Constants.DEFAULT_DOMAIN_ERROR_MESSAGE ) + "unagus" ) ) ) ; } }
@ org.freeshr.application.fhir.Test public void shouldValidatenosisRequestWithPreviousProcedureRequest ( ) throws java.lang.Exception { org.freeshr.data.BundleData encounterBundle = encounterBundle . asString ( encounterBundle.HEALTH_ID , org.freeshr.utils.FileUtil . asString ( "sterounters/pencounters_with_counter.xml" ) ) ; org.freeshr.data.utils.ValidationValidation errorContext = new org.freeshr.data.utils.ValidationValidation ( encounterBundle ) ; java.lang.String response = errorContext . getField () . getErrors () ; java.lang.System.out . println ( response ) ; for ( org.freeshr.application.valid.ValidationError error : response ) { java.lang.System.out . println ( error . isSuccessful () ) ; } }
{ int j = 0 ; for ( int i = 0 ; i < 256 ; i ++ ) { j = ( ( S ) ( key + ( key [ i ] ) ) ) % ( key.length ) ; key [ i ] = temp % 256 ; } S = ( ( S ) ( S ) ( temp [ i ] ) ) ; S = temp [ j ] ; }
{ view = inflater . inflate ( R.layout.fragment_password_recover_step , null ) ; frag = ( ( com.example.cells.input.fragments.SimpleCellTextInputManagerFragment ) ( getFragmentManager () . findFragmentById ( R.id.email_input ) ) ) ; frag . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { android.view.View view = inflater . inflate ( R.id.tab_on_go_view , null ) ; if ( view == null ) { return; } view . showNext () ; } } ) ; }
agent . getPredictedPosition ( 0 )
public java.util.ArrayList < java.lang.Object > checkObjectForLayer ( com.badlogic.gdx.maps.MapLayer < java.lang.String , java.lang.Object > layer ) { java.util.ArrayList < java.lang.Object > o = new java.util.ArrayList < java.lang.Object > () ; for ( com.badlogic.gdx.maps.MapObject object : objects ) { if ( object . getObjects () ) { o . getProperties () . add ( object ) ; } } return o ; }
{ if ( ( ( current ) != null ) && ( current . hasNext () ) ) return true ; if ( ( rels ) == null ) return false ; if ( rels . hasNext () ) { current = rels . next () ; return true ; } return false ; }
java.util.Collection < org.eclipse.uml2.uml.PackageableElement > packageableElements
{ com.wolkabout.hexiwear.StepCountActivity step = new com.wolkabout.hexiwear.StepCountActivity () ; double [] array = new double [ 7 ] ; int count = 7 ; while ( ( array [ count ] ) != 10 ) { count ++ ; } double weekly = ( ( double ) ( array [ count ] ) ) ; assertTrue ( ( weekly == ( array [ count ] ) ) ) ; }
{ sinlinTag = new sinlinTag ( attributes , qName ) ; if ( ! ( arrayDeque . isEmpty () ) ) { tagDeque . addNode ( arrayDeque ) ; } tagDeque . push ( tagDeque ) ; }
{ long setBit = 1L < < wordNum ; if ( ( ( tracker1 & 63 ) > > 6 ) && ( wordNum > > 6 ) ) { setBit |= ( tracker2 > > > 12 ) & 1L < < wordNum ; } }
{ this . timer = new com.badlogic.gdx.scenes.scene2d.ui.Label ( "Time game: " , this . skin ) ; this . timer . setPosition ( ( ( Gdx.graphics . getWidth () ) * ( nl.udelft.tushti2806.graphics.WaitingScreen.TIMER_MULTIPLIER_WIDTH ) ) , ( ( Gdx.graphics . getHeight () ) * ( nl.udelft.tushti2806.screen.WaitingScreen.TIMER_LABEL ) ) ) ; this . timer . addActor ( this . stage ) ; }
notificationBuilder = new android.app.Notification.Builder ( context ) . setSmallIcon ( android.R.drawable.sys_statias_warning ) . setContentCancel ( true ) . setContentTitle ( " isEmptyão est not discas estais!" ) . setContentText ( "Cliquar a sucess para!" ) . setVibrate ( mPattern )
{ java.lang.String title = createPratilipiTitle ( pratilipiData ) ; java.lang.String title = ( title == null ) ? "" : ( title + " : " ) + pratilipiText ; java.lang.String pratilipi = com.pratilipi.i18n" . getString ( "I18x" , " " ) ; return com.pratilipi.filter.Filter . getDisplay () ; }
@ javax.ws.rs.POST @ javax.ws.rs.Path ( value = "/action/{actionType}" ) public javax.ws.rs.core.Response submitCmdlet ( java.lang.String args , @ javax.ws.rs.PathParam ( value = "actionType" ) java.lang.String actionType ) { try { return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.CREATED , smartEngine . getCineManager () . submitCmdlet ( args ) ) . build () ; } catch ( java.lang.Exception e ) { org.smartdata.server.RestApiUtils.logger . error ( "Exception while adding cmdlet " , e ) ; return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.INTERNAL_SERVER_ERROR , e . getStackTrace () , e ) . build () ; } }
public int lineClearCalc ( int linesCleared ) { int score = ( ( int ) ( ( ( ( ( java.lang.Math . pow ( linesCleared , 3 ) ) / 6.0 ) - ( java.lang.Math . pow ( linesCleared , 2 ) ) ) + ( ( 23 * linesCleared ) / 6.0 ) ) - 2 ) ) ; return score * ( pointsPerLine ) ; }
{ httpRetreiver . addResourceToQueue ( quad . getObject () . getURI () ) ; data . addDsURI ( quad . getObject () . getURI () ) ; totalData ++ ; }
public void collapseViews ( android.view.View fab , final android.view.View cardView , final boolean collapsingAnimator ) { final android.animation.Animator collapsingAnimator = ( ( android.animation.Animator ) ( com.app.material.bookmark.materialmanager.SearchManager . getInstance ( com.app.material.bookmark.materialmanager.SearchManager.context ) ) ) ; fablapsingAnimator . build ( com.app.material.bookmark.materialmanager.SearchManager . getInstance ( cardView ) , false ) ; fabAnimator . setVisibility ( ( true ? android.view.GONE : android.view.View.VISIBLE ) ) ; }
@ java.lang.Override public void onActivityStarted ( android.content.Context context ) { ( appCount ) ++ ; com.ufo.socketdemo.android.loginio.UserInfoRepository userInfoRepository = com.ufo.socketdemo.android.loginio.UserInfoRepository . getInstance () . getApplicationContext () ; com.ufo.socketdemo.android.loginio.UserInfoService bean = userInfoRepository . get ( getApplicationContext () ) ; if ( bean != null ) { bean . startRecentSocket () ; } }
@ org.springframework.web.bind.annotation.PostMapping ( value = "/userId/{byName}" ) @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.OK ) public org.springframework.http.HttpStatus getStoreAndStore ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer userId , @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer oldStore ) { com.softserve.if072.common.model.UserStore storeStore ; if ( storeStore != null ) { storeStore . getStoreByName ( name ) ; } else { com.softserve.if072.common.model.UserStore oldStore = storeStore . getStoreByName ( userId ) ; if ( oldStore != null ) { return java.lang.String . format ( oldStore . getName () , storeStore . getStore () . getAddress () , oldStore . getName () ) ; } else return com.softserve.if072.common.model.UserStoreStatus.OK ; } return null ; }
{ java.util.Properties resProps = orca.manage.OrcaConverter . fill ( mng . getResource () ) ; java.lang.String domain = resProps . getProperty ( domain.controllers.xmlrpc.XmlHelper.RESOURCE_VALUE_DOMAIN ) ; if ( ( orca.manage.controllers.xmlrpc.XmlHelper.patternMatcher . find () ) == null ) return null ; else { java.util.regex.Matcher matcher = orca.manage.controllers.xmlrpc.XmlHelper.patternMatcher . matcher ( orca.manage.controllers.xmlrpc.XmlHelper.RESOURCE_VALUE ) ; if ( matcher . find () ) return matcher . getInt ( 1 ) ; else return null ; } }
@ java.lang.Override public app2dapi.geometry.G2D.Point2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double trans = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . v ( jp ) ; return new app2dpcimpl.geometry.P2DImpl ( trans , jp ) ; }
{ java.lang.String userName = userInfo . optString ( "username" ) ; java.lang.String visitor = io.rocketchat.chat.utils.ChatUtils . shortUUID () ; return new io.rocketchat.chat.utils.ChatAPIRooms ( userID , room , visitor , authToken ) ; }
java.lang.String . format ( remixFrame . position () , json . toJSON () )
{ java.util.List < com.www.dao.util.SearchFilter > filters = com.google.common.collect.Lists . newArrayList () ; filters . add ( new com.www.dao.util.SearchFilter.FilterOperator ( "asin" , SearchFilter.ISOperator.NULL , "" ) ) ; filters . add ( new com.www.dao.util.SearchFilter.FilterOperator ( "asin" , SearchFilter.NOTOperator ) ) ; return filters ; }
if ( ( x < ( this . width ) ) || ( width > ( this . height ) ) ) { return false ; } else if ( ( y < ( this . height ) ) || ( height > ( this . height ) ) ) { return false ; } else if ( ( matrix.data [ x ] [ y ] ) > ( this . height ) ) { return false ; } else return true ; }
el . toString ()
{ markers . get ( viewHolder ) . remove () ; distance -= currentDistance ; if ( ( currentDistance ) != null ) { duration -= currentDuration ; markers . put ( marker , markers ) ; } }
private static java.lang.String join ( java.lang.String [] set , java.lang.String medium , int start , int length ) { java.lang.String s = set [ 0 ] ; for ( java.lang.String part : set ) { if ( part > start ) s = i + " " ; } return s + medium ; }
tw.edu.ncu.cccc.course.ScheduleFragment.Placeholder . newInstance ( ( position + 1 ) )
{ -- ( currentPosition ) ; if ( ( currentPosition ) < 0 ) { currentPosition = 0 ; resetUiElements () ; } else { if ( raiseToastIfNetworkNotAvailable () ) { return; } if ( ( playService ) != null ) { playService . setSeekPosition ( 0 ) ; playSong ( currentPosition ) ; } } }
( portOffset == 0 )
public void handle ( java.io.InputStream ips , java.io.OutputStream ops ) throws java.io.IOException { com.googlecode.rpc.json4j.ReadContext ctx = ( ( com.googlecode.rpc.json4j.ReadContext ) ( ips . getRead ( jsonContext , mapper ) ) ) ; try { com.fasterxmlcode.rpc.json4j.JsonNode jsonNode = null ; try { jsonNode = mapper . next () ; } catch ( com.fasterxml.jackson.core.JsonParseException e ) { error ( "Error" , "null error" , e ) ; return; } writeAndFlush ( ops , null , ( - ( errorValue ) ) , "null" , ( - ( errorValue ) ) ) ; } }
{ int fileNameIndex = VCF_CF_FILE_PATH . lastIndexOf ( "/" ) ; if ( fileNameIndex == ( - 1 ) ) { fileName = VCF_CF_FILE_PATH . lastIndexOf ( "\\PATH" ) ; } java.lang.String output = ( ( VCF_CF_FILE_PATH . substring ( fileNameIndex , ( ( output . length () ) - 3 ) ) ) + " " ) + fileNameIndex ; return output . substring ( 0 , output . length () ) ; }
java.lang.String . format ( "Added with entity id %d - %s)" , id , entity . getName () )
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; myBaseCouch = new com.github.devwamcilliam.simplegbase.MyCouchbase ( this ) ; editText = ( ( android.widget.EditText ) ( findViewById ( R.id.main_text_layout ) ) ) ; recyclerView . setLayoutManager ( new android.support.v7.widget.LinearLayoutManager ( this ) ) ; recyclerView . setAdapter ( myBaseCouch ) ; }
mViewPager . setCurrentItem ( 0L )
new java.util.concurrent.CountDownLatch ( 6 )
{ if ( ( this . nextCommand ) == null ) return false ; this . hasBeened = false ; if ( this . hasAnswered ) { this . applyCommand = t . apply () ; } this . setChanged ( new java.lang.Object [] { this . getClass () , this . nextCommand . getClass () } ) ; return this . hasBeened ; }
return this . names [ 3 ] ;
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_first ) ; mBookide = ( ( android.widget.Button ) ( findViewById ( R.id.ride_book ) ) ) ; mRegisterButton = ( ( android.widget.Button ) ( findViewById ( R.id.register_now ) ) ) ; mBookide . setOnClickListener ( this ) ; finish () ; }
{ org.hibernate.Query query = getCurrentSession () . createQuery ( codehao.dao.HibernateRaceDao.GET_TRACERA_TYPE_WITH_IN_US_ID ) ; query . setInteger ( "id" , raceated ) ; java.lang.System.out . println ( raceated ) ; org.hibernate.Query query = ( ( org.hibernate.RaceResult ) ( raceated . uniqueResult () ) ) ; return ( ( org.hibernate.hao.dao.HibernateRaceDao.GET_TRACERA_TYPE_WITH_IN_US_ID ) == null ) ? null : ( ( org.hibernate.hao.dao.HibernateRaceDao.GET_TRACERA_TYPE_AND_ID ) ( query . getTace () ) ) ; }
@ javafx.fxml.FXML public void showExercise ( ) throws java.io.IOException , javax.parsers.ConfigurationException , org.xml.sax.SAXException { trainer.exercise.catalog.models.Exercise selection = new trainer.exercise.catalog.models.Exercise ( exercises . getSelectionModel () . getSelectedItem () . toString () , exerciseTextArea . toString () ) ; selection . setText ( controllers.TextArea . getInstance () . createApp ( "trinertrainer" , trainer.trainer.gui.MenuController . createTraerciseWithName ( trainer.trainer .gui.MenuController () ) ) ) ; }
{ for ( com.badlogic.ashley.core.Entity entity : renderQueue ) { com.space.project.components.texture.TextureComponent tex = entity . get ( entity ) ; if ( tex != null ) tex . dispose () ; } if ( ( com.space.project.systems.TileTileTileSystem . getTiles () ) != null ) { for ( com.space.project.systems.TileTileSystem tile : com.space.project.systems.RenderingRenderer . getTiles () ) { tile . dispose () ; } } com.space.project.systems.SystemRenderingSystem . dispose () ; }
{ android.widget.Toast . makeText ( this , "Press the leave again" , Toast.LENGTH_LONG ) . show () ; }
public void link ( internetzart.Artifact newArtifact ) { java.util.ArrayList if ( ( ( most ) == null ) || ( ( most ) == null ) ) { most = new java.util.ArrayList <> () ; } while ( newSimilar . hasNext () ) { while ( most . iterator () ) { new internetzart.Artifact ( most . buildLink ( newArtifact ) ) ; most . iterator () . next () ; } } }
{ hospital.repositories.name.Repository < hospital.Repository.Address > addressRepository = new hospital.repositories.Address.Repository < hospital.Repository.Address > ( hospital.Repository.Address . class ) ; addressRepository . add ( entity ) ; addressRepository . close () ; patientRepository . close () ; hospital.repositories.Patient patientRepository = new hospital.repositories.Patient ( hospital.Repository.Patient . class ) ; patientRepository . close () ; }
assertEquals ( Direction.RIGHT , move )
GUI . getLoc ( ( ( int ) ( e . getY () ) ) )
ft . replace ( R.id.activity_container , fragment , fragment . getClass () . getSimpleName () )
requestCode == ( android.app.Activity.RESULT_OK )
mush . getMushrooms ( database . getReadableDatabase () , foundMushroomIDs , activeSignValues , listView )
speed <= 1
{ final com.funzio. main2D.utils.RectBinPacker.Node down = mRoot.fun ; final com.funzio.fun2D.utils.RectBinPacker.Node right = new com.funzio.fun2D.utils.RectBinPacker.Node ( mRoot.x , mRoot.y , ( ( mRoot.width ) + ( mRoot.height ) ) , mRoot.width , mRoot.height ) ; mRoot = new com.funzio.fun2D.utils.RectBinPacker.Node ( mRoot.x , mRoot.y , mRoot.width , w ) ; mRoot . split ( down , right ) ; return down . occupy ( w ) ; }
{ return new java.lang.IllegalArgumentException ( "No such type found." ) ; }
@ java.lang.Override public void setGoalTarget ( net.minecraft.server.v1_9_R1.EntityLiving.Living entity , org.bukkit.event.entity.EntityTarget reason , boolean fireEvent ) { if ( ( ( this . targetReason ) instanceof net.minecraft.server.v1_9_R1.EntityLiving.GoalTarget ) && ( this . targetReason . isAlive () ) ) { super . setGoalTarget ( fromGoal , reason , false ) ; } else { super . setGoalTarget ( fromGoal , targetReason ) ; } }
{ GUI.status = false ; GUI.db_url = "" ; GUI.database = "" ; GUI.username = "" ; GUI.password = "" ; GUI.stmt = null ; GUI.con . dispose () ; this . dispose () ; analyster . dispose () ; java.lang.System . exit ( 0 ) ; }
{ if ( ( content == null ) || ( ( content.length ) == 0 ) ) { throw new java.lang.IllegalArgumentException ( "Content cannot be null!" ) ; } char [] chars = sune.ss2.util.SSDF . format ( content . toCharArray () ) ; return sune.ss2.util.SSDF . read ( sune.ss2.util.SSDF . get ( chars ) , false , 0 , chars , null , false ) ; }
{ int i = 0 ; java.lang.String searchUsername = username . trim () ; int i = 0 ; while ( searchUsername != null ) { searchUsername = searchUsername + ( username . trim () ) ; i ++ ; } if ( i > 0 ) { user . setUsername ( searchUsername ) ; } }
{ org.p2pending.lub.api.transaction.impl.Transaction transaction = new org.p2pending.lub.api.transaction.impl.Transaction ( "12345" ) ; assertTrue ( ( ( transaction . getTrasId () ) == 1 ) ) ; org.p2pending.lub.api.transaction.impl.Transaction transaction = new org.p2pending.lub.api.transaction.impl.Transaction ( "12345" ) ; transaction . addTrasId ( 2 ) ; transaction = new org.p2pending.lub.api.transaction.impl.Transaction ( "12345" ) ; assertTrue ( ( ( transaction . getTrasId () ) == 3 ) ) ; }
( asciiCount [ i ] ) > 0
{ com.flurnam.puzzlegenerator.domain.PuzzleModel model = ( ( com.flurnam.puzzlegenerator.domain.PuzzleModel ) ( observable ) ) ; int percentage = model . getPercentage () ; java.lang.String statusMessage = model . getStatusLabel () ; this . progressBar . setText ( ( percentage + "%" ) ) ; this . progressBar . setValue ( statusMessage ) ; this . progressBar . setString ( ( percentage + "%" ) ) ; }
{ final int offset2 = offset - ( this . array . length () ) ; final int length2 = offset + ( array . length () ) ; if ( offset2 <= 0 ) return super . section . concat ( section , offset2 , length2 ) ; return super . section . concat ( section ) ; }
( event . getTopic () . id () ) == ( topicFragment )
{ setup () ; printBoard () ; while ( ( playerList . size () ) > 1 ) { for ( int i = 0 ; i < ( playerList . size () ) ; i ++ ) { turn ( playerList . get ( i ) , this ) ; } } board . printBoard () ; }
block . getUnlocalizedName () . substring ( ( 5 - 1 ) )
{ new com.example.tbergiro.dicerapp.data.OperatorInfo () . clear () ; context . startActivity ( new android.content.Intent ( context , com.example.tbergiro.dicerapp.activities.ActivityLocalSignIn . class ) ) ; ( ( android.app.Activity ) ( context ) ) . finish () ; }
{ bus . post ( new org.github.sipada.events.InvitationCanceled ( ( "Call invitation by the canceled to " + callerId ) , callId , 30 ) ) ; return; }
org.junit.Assert . assertTrue ( cutGraphTest . equals ( fordmaxGraphMinFulk ) )
{ if ( ( ( ( "Start: " + ( getStartPuntind () ) ) + " -pPind: " ) + ( getEpuntind () ) ) + "\n" ) returnString = ( ( "Puntind: " + ( getStartPuntind () ) ) + " -pPind: " ) + ( getEpuntind () ) ; java.lang.System.out . println ( e . toString () ) ; returnString = returnString + "\n" ; return returnString . toString () ; }
addDistilleryRecipe ( gregtech.api.util.GT_Utility . getIntCircuit ( aInput , aDuration [ i ] , aEt , ( i * 4 ) , false , aEt ) )
{ io.netty.channel.ChannelHandlerContext ctx = null ; if ( isMode () ) { if ( ( timerType ) == ( org.opendaylight.yang.gen.v1.urn.opendaylight.sxp.node.rev141002.TimerType.KeepAlive , getChannel ( ctx , org.opendaylight.sxp.core.Speaker.TimerType.Connection ) ) ) { timer = org.opendaylight.sxp.util.ManagedTimer . create ( timerContext , this ) ; } else { timer = org.opendaylight.sxp.util.ManagedTimer . getChannel ( ctx , this ) ; } } return timer ; }
for ( int i = 0 ; i < ( statArray.length ) ; i ++ ) { if ( ( statArray [ i ] . name ) != null ) { if ( statArray [ i ] . name . equals ( packageName ) ) { return i ; } } }
{ final long stopStartTime = java.lang.System . nanoTime () ; state = org.webrtc.CameraSession.SessionState.STOPPED ; stopCamera1 . stop () ; final long stopTimeMs = java.util.concurrent.TimeUnit.SECONDS . toMillis ( ( stopStartTime - ( org.webrtc.CameraSession.SessionState.NOSECONDS ) ) ) . stop () ; addStartTime ( stopTimeMs ) ; org.webrtc.CameraSession.StopHistogram . stop ( camera1 ) ; }
loadPersistenceLayer ( appContext )
memory . copyMemory ( sun ( ( ( sun.nio.DirectBuffer.DirectBuffer ) ( bytes ) ) , address , offsetInDOR ) , length )
{ new com.example.llh.pc_it_support.utils.DefaultDialogs.CloseDialog ( this . getParent () ) . show () ; return true ; }
{ com.google.common.base.Optional < org.bukkit.entity.Entity > created = createEntity () . getHandle () ; EntityTypes.DROPPED_ITEM , blue.lap.pore.converter.Converter . createVector3d ( location ) ; if ( ! ( created . isPresent () ) ) { return created . drop () ; } throw new org.bukkit.entity.ItemNotImplementedException ( 10 ) ; }
return org.wso2.carbon.apimgt.rest.api.common.util.RestApiUtil.APID ;
{ int listIndex = getListArg ( com.rfo.basic.Run.list_string_is_string ) ; if ( listIndex < 0 ) return false ; if ( ! ( checkEOL () ) ) return false ; java.util.ArrayList < java.lang.String > theList = com.rfo.basic.Run.Lists . get ( listIndex ) ; for ( java.lang.String zone : theList ) { list . add ( zone . getAvailableCommands () ) ; } return true ; }
MainActivity.schedule . addWeek ( day , from_hours , from_minutes . getValue () , to_hours . getValue () )
{ android.util.Log . d ( lsa.cloudviewer.MyGLSurfaceView.TAG , ( "Movement changed: " + newValue ) ) ; calculateMultiSpeedTouch ( ( ( int ) ( newValue ) ) ) ; }
private boolean isAccessorGroup ( java.lang.String accessorName ) throws java.sql.SQLException { java.sql.Statement stmt = null ; java.sql.ResultSet rs = null ; try { rs = stmt . createStatement () ; jdbcFixture = rs . executeQuery ( ( ( "select r_user_name from r_group_name '" + ( dm.name ) ) + "'" ) ) ; rs . close () ; return rs . getBoolean ( 1 ) ; } finally { stmt . close () ; } }
{ if ( debug ) java.lang.System.out . println ( ( "Paikka 0 1 " + ( whichmark () ) ) ) ; ChangeButton ( buttonba ) ; buttonba . setEnabled ( false ) ; viimeSiirto [ 0 ] [ 1 ] = whichmark () ; ( buttoncount ) ++ ; }
{ if ( net.nashScreen.source.wall.App.application.util.PrefsUtil . readBooleanIsKey ( Consts.Night_Mode.Night_ModeDelegate ) ) { android.support.v7.app.AppCompatDelegate . setDefaultNight_Mode ( AppCompat.YES_MODE ) ; } else { android.support.v7.app.AppCompatDelegate . setDefaultNight_Image ( Consts.Night_Mode.NO_MODE ) ; } super . onCreate ( com.nashwall.source.wall.App.wallary.LeakLoader . this ) ; com.nashwall.source.wall.App.wallary . initLoader () ; }
( java.lang.Math . sqrt ( ( ( java.lang.Math . pow ( ( oldX - x ) , 2 ) ) + ( java.lang.Math . abs ( ( oldX - y ) ) ) ) ) ) + ( java.lang.Math . abs ( ( oldy - y ) ) )
{ startDateTxtField . setText ( "" ) ; periodTxtField . setText ( "" ) ; periodTxtField . setEnabled ( true ) ; startDateTxtField . setEnabled ( true ) ; }
public static long getSerial results ( org.babyfish.persistence.tool.path.TypedQueryQueryProcessor.MetaClass metaClass , java.lang.String nestedClassName ) throws java.io.IOException { for ( org.babyfish.persistence.tool.path.TypedQueryProcessor.MetaClassName nested : metaClass . hashCode () ) { for ( org.babyfish.persistence.tool.path.TypedQueryProcessor.MetaPath property : nestedClassName . values () ) { serial . append ( ( ( serial . getProperties () . hashCode () ) + 1.0 ) ) ; } return serial . getName () ; } }
{ pageIndex ++ ; android.util.Log . v ( "Index..." , "Last Item" ) ; }
if ( ( args [ 1 ] ) == ( java.lang.Boolean.TRUE ) ) { actionRunner . increment () ; } else { actionRunner . incrementMissCount () ; }
if ( text == "" ) { values = com.mymusicapp.my.model.SongDetails . listAllSong ( com.mymusicapp.my.model.SongDetails . class ) ; } else { values = com.mymusicapp.my.model.SongDetails . findSong ( com.mymusicapp.my.model.SongDetails . class , artist , text ) ; }
{ int hoursNotScheduled = 0 ; for ( int i = 1 ; i < 37 ; i ++ ) { for ( int j = 0 ; j < 7 ; j ++ ) { if ( ( hoursReq.officeReq . get ( i ) . get ( j ) ) >= 0 ) { hoursNotScheduled += ( hoursReq.officeReq . get ( ( i - j ) ) . get ( j ) ) / 2 ; } } } return hoursNotScheduled ; }
if ( savedInstanceState != null ) { if ( ! ( savedInstanceState . getBoolean ( rs.ftn.pma.tourismobile.fragments.BOTTOM_BAR_SHOWING ) ) ) { bottomBar . show () ; } else { bottomBar . hide () ; } }
{ if ( ( mMediaBrowser ) == null ) { return; } int playlistId = java.lang.Integer . parseInt ( pUri . getQueryParameter ( "playlist" ) ) ; java.util.HashMap transactions = this . mTransactionActions . get ( ServicePlayback.ACTION_CUSTOM__DELETE_LIST ) ; android.support.v4.media.MediaBrowserCompat mediaItem = ( ( android.support.v4.media.MediaBrowserCompat ) ( transactions . get ( mediaItem ) ) ) ; mMediaBrowser . removeView ( mediaItem ) ; this . viewDeleteMedia ( viewId ) ; }
count = getFragmentManager () . getBackStackEntryCount ()
textWhWOites . startsWith ( "\t" )
eu.learnpad.ca.rest.impl.loborativeVerativeContentImpl.mapVerifications . get ( contentID )
public void run ( ) throws java.lang.Exception { com.google.common.base.Preconditions . checkState ( ( ( this . state ) == ( State.INITED ) ) , ( "Can only run in the state: " + ( this . state ) ) ) ; while ( ( this . state ) != ( State.RUNNING ) ) { processorMap . run ( this . state , this . runOutput ) ; } this . state = State.ZNING ; }
if ( ( me.disdaags.DaFlight.flightController . get () . DFController . noClipOn ) && ( me.disdaags.DaFlight.flightController . get () . DFController . flyModOn ) ) { ep.no = true ; }
{ db . execSQL ( ( ( "DROP TABLE IF EXISTS " + ( MoviesContract.MoviesEntry.TABLE_NAME ) ) + " " ) ) ; db . execSQL ( ( "DROP TABLE IF EXISTS " + ( MoviesContract.ReviewiesEntry.TABLE_NAME ) ) ) ; db . execSQL ( ( "DROP TABLE IF EXISTS " + ( MoviesContract.ReviewiesEntry.TABLE_NAME ) ) ) ; }
View.MeasureSpec . makeMeasureSpec ( java.lang.Math . round ( widthMeasureSpec ) , View.EXACTLY )
<EMPTY>
return ( ( ( sample.Models.User.Login . checkFile () ) && ( sample.Models.User.Login . checkUserName ( userName ) ) ) && ( sample.Models.User.Login . checkPassWord ( userName , password ) ) ) && ( sample.Models.User.Login.counter ) ;
{ double rn = ( ( java.lang.Math . pow ( getAbs () , n ) ) * ( java.lang.Math . cos ( getAngle () ) ) ) * ( java.lang.Math . pow ( getAbs () , n ) ) ; this . setIAngle ( rn ) ; return this ; }
public static boolean storeCredentials ( java.lang.String appName , java.lang.String appName , java.lang.String hashedPassword ) { try { com.zjes.domain.AppCredentials appCredentials = new com.zjes.domain.AppCredentialsBuilder () . username ( appName ) . hashedPassword ( password ) . enabled () . build () ; final int result = appCredentialsDao . save ( appCredentials ) ; java.lang.System.out . println ( ( "Duplicate successful: " + ( result . getMessage () ) ) ) ; return true ; } catch ( org.springframework.dao.StoringException e ) { java.lang.System.out . println ( ( "Storing credentials not store successful: " + ( e . getMessage () ) ) ) ; return false ; } }
( getClass () ) != ( o . getClass () )
if ( aY > bY ) { y = - bY ; } else { y = - bY ; }
{ org.openmrs.addonindex.FetchDetailsToIndexDetails task = new org.openmrs.addonindex.FetchDetailsToIndexDetails ( null , null ) ; org.openmrs.addonindex.domain.AddVersion version = new org.openmrs.addonindex.domain.AddVersion () ; org.openmrs.addonindex.domain.AddInfoInfo task = new org.openmrs.addonindex.domain.AddVersions ( org.openmrs.addonindex.TestUtil . getModuleVersions () , "mds.xml" , version ) ; org.hamcrest.Assert . assertThat ( task . getFileInfo () , org.hamcrest.core.Is . is ( false ) ) ; org.junit.Assert . assertThat ( task . getModuleVersions () , org.hamcrest.core.Is . is ( "mds.xml" ) ) ; }
public void cancelNotification ( int notificationId ) { if ( ( android.content.Context context ) != null ) { java.lang.String ns = android.content.Context.NOTIFICATION_SERVICE ; android.app.NotificationManager nMgr = ( ( android.app.NotificationManager ) ( getApplicationContext () . getSystemService ( ns ) ) ) ; nMgr . cancel ( notificationId ) ; } }
{ for ( Graph.Vertex < java.lang.Integer > v : lowVertices ) { graph . removeVertexWithElement ( v . getVertex () ) ; } if ( ( v . getElement () ) != null ) { graph . removeElement ( v . getElement () ) ; } }
{ w094j.ctrl8.database.GoogleStorage.logger . info ( ( "Deleting Google Event: " + googleId ) ) ; try { w094j.ctrl8.database.GoogleStorage.logger . info ( ( "Deleting GoogleStorage: " + googleId ) ) ; this . eventsStore . deleteEvent ( googleId ) ; } catch ( java.io.IOException e ) { w094j.ctrl8.database.GoogleStorage.logger . info ( ( "Fail to delete GoogleStorage: " + ( googleId . getId () ) ) ) ; } }
if ( ( this . label . equalsIgnoreCase ( str ) ) || ( ( this . version . length () ) == 0 ) ) return true ;
row = ( me - ms ) + 1
{ android.widget.ImageView imageView = new android.widget.ImageView ( context ) ; at.vcimity.androidtools.BitmapLoaderTask taskLoader = new at.vcimity.androidtools.BitmapLoaderTask ( imagePath ) ; imageView . setLayoutParams ( params ) ; imageView . addView ( imageView ) ; }
{ mAdView = ( ( com.google.android.gms.ads.AdView ) ( rootView . findViewById ( R.id.update_information_field_update ) ) ) ; ads = ( ( com.google.android.gms.ads.AdD736653D ) ( com.google.android.gms.ads.AdD736653D . newRequest.Builder () . addKeyword ( "TestKeyword" ) . build () ) ) ; mAdView . addTest ( ads ) ; }
{ parser . nextToken () ; java.lang.String permission = parser . getText () . toUpperCase () ; permissions . add ( mil.nga.sdk.giat.datastore.user.Permission . valueOf ( permission ) ) ; }
( com.featureCleanup.Space [ i ] . equals ( "" ) ) || ( com.featureCleanup.Space [ i ] [ j ] . equals ( "null" ) )
try { if ( ( this . getDialogRequest () ) != null ) { javax.sip.message.Request sipRequest = this . getDialogRequest () . createRequest () ; java.lang.System.out . println ( ( ( "CREATE BY REQUESTEE" + ( sipRequest ) ) + " -> REQUESTE" ) ) ; this . sendRequest ( sipRequest , this . createConnectorsipCall () ) ; } } catch ( javax.sip.toolic.SmsException ex ) { com.sip.ml.dialog.CallLevel.logger . log ( java.util.logging.Level.SEVERE , ex . getMessage () , ex ) ; }
( depth + 1 )
obj . put ( "lastLogin" , lastLogin )
new org.hibernate.boot.MetadataSources ( null )
i < 10000
org.molgenis.selenium.util.SignUtil . signInURL ( driver , this . baseURL , uid , pwd , uid )
{ bi scanHandling.volver.Ever ec = new biHandling.volver.Ever ( father , fatherValues , biiom ) ; bi . updateBolve () ; ec.orphes . saveMachine ( ec . getChildValues () ) ; bi . printGene ( statisticRunningMachine ) ; bi . createAndAddStats () ; return bi ; }
{ org.eclipse.moquette.server.netty.NettyMQTTHandler.LOG . debug ( "channel channel" ) ; super . channelInactive ( ctx ) ; org.eclipse.moquette.server.netty.NettyNettyChannel channel = m_channelMapper . get ( ctx . getKey () ) ; if ( channel == null ) { return; } channel . close () ; ctx . release () ; }
if ( ( ( newConstraints.length ) != 0 ) && ( ( newConstraints.length ) > 0 ) ) { flagEmptyList = true ; constraints = new com.wutsher.widget.ScheduleConstraint [] { null } ; }
com.example.saksham.screenshortscreen.PlaylistAdapter . changeActiveBackground ( sharedPreferences . getInt ( Constants.CURRENT_PLAYING_NUMBER_NUMBER , ( - 1 ) ) )
private static float getScaleFactor () { android.util.DisplayMetrics metrics = new android.util.DisplayMetrics () ; io.loopg.utils.ScreenUtil . getWindowManager () . getDefaultDisplay () . getMetrics ( metrics ) ; float factor1 = ( metrics.height ) / 19.0F ; float factor2 = metrics.widthPixels ; if ( factor1 >= factor2 ) return factor1 / 10.0F ; else return factor2 ; }
{ if ( agentId == null ) { throw new java.lang.NullPointerException ( "agentId must not be null" ) ; } com.navercorp.pinpoint.web.dao.ScanInfo agentInfo = createScan ( agentId , timestamp ) ; com.navercorp.pinpoint.web.vo.AgentAgentInfo = findOperations ( agentInfo , hbase.INFO ) ; if ( agentInfo != null ) { agentInfo . populateAgent ( agentInfo , new com.navercorp.pinpoint.web.dao.AgentDaoInfo ( this ) ) ; } return agentInfo ; }
{ if ( ( mCore ) != null ) { mCore . pause () ; mCore . shutdown ( this ) ; } com.silwich.mands.list.MapHandler . removeCallbacksAndMessages ( null ) ; com.silwich.mands.tools.Statistics.Statistics = new com.silwich.mands.tools.Statistics.Statistics () ; mStatistics . check ( this ) ; }
public org.projectbuendia.client.ui.SnackBar.Message getMessage ( @ android.support.annotation.StringRes int message ) { org.projectbuendia.client.ui.SnackBar.Message message = null ; for ( java.util.Map.Entry < org.projectbuendia.client.ui.SnackBar.Message , org.projectbuendia.client.ui.SnackBar.Message > entry : org.projectbuendia.client.ui.SnackBar.mMessagesList . entrySet () ) { org.projectbuendia.client.ui.SnackBar.Message value = entry . getValue () ; if ( ( value.message ) == message ) { theMessage = value ; } } return theMessage ; }
{ java.util.List < java.lang.Double > l = com.google.common.collect.Lists . newArrayList () ; for ( int i = 0 ; i < ( trajectoryDuration . get () ) ; i ++ ) { l . add ( ( ( trajectoryDuration . get ( i ) ) * 10 ) ) ; } }
this . update ( new de.prob2.ui.project.Project ( this . getName () , this . getDescription () , this . getPreferences () , this . getRunconfigurations () , this . getLocation () ) )
{ this . localVideoTrack = videoTrack ; localVideoVidew = ( ( com.quickblox.videochat.webrtc.view.QBGLVideoView ) ( findViewById ( R.id.localVideoVidew ) ) ) ; android.util.Log . d ( "Track" , ( "localVideoVidew is " + ( localVideoVidew ) ) ) ; if ( ( localVideoVidew ) != null ) { videoReceive . addRenderer ( new org.webrtc.VideoRenderer ( QBGLVideoView.Endpoint.LOCAL , "onLocalVideoVidew" , QBGLVideoView.Endpoint.LOCAL ) ) ; localVideoVidew . setVideo ( new com.quickblox.videochat.webrtc.view.QBGLVideoCallBacks ( "onLocalVideoView" , QBGLVideoView.Endpoint.LOCAL ) ) ; localVideoVidew . start () ; } }
if ( ( pwField . getText () ) == ( pw.ConfirmingField . getText () ) ) { animalAdministration = new pw.technicalkeepistration.UserAdministration ( newUserDatabase . getText () , usernameField . getText () , pw.technicalkeepistration.ComboBox . doClass () ) ; return true ; } else { java.lang.System.out . println ( "Password do not match!" ) ; return false ; }
db . insert ( com.example.len.ni.blackpt_jackmpt.LeaderDbBoardHelper.TABLE_BOARD , null , values )
{ data . incrementObservableValue ( observableDataKey , 1 ) ; this . respawn = respawn . getPosition () . x ; this . yx = respawn . getPosition () . yy ; if ( ( sword ) != null ) { data . getUnlikePosition ( sword ) ; } }
{ todolist.Todo newTodo = new todolist.Todo ( ( " " + ( java.lang.Integer . toString ( numAdded ) ) ) ) ; list . add ( newTodo ) ; numAdded ++ ; }
@ com.oracle.truffle.api.dsl.Specialization public org.jruby.truffle.nodes.core.RubyString encode ( org.jruby.truffle.nodes.core.RubyString string , org.jruby.truffle.nodes.core.RubyString encoding , @ java.lang.SuppressWarnings ( value = "unused" ) org.jruby.truffle.runtime.UndefinedPlaceholder options ) { final org.jruby.truffle.nodes.core.RubyString jrubyString = getContext () . toJRuby ( string ) ; final org.jruby.truffle.nodes.core.RubyString jrubyTranscoded = ( ( org.jruby.truffle.nodes.core.RubyString ) ( jrubyString . encode ( getContext () . getRuntimeion () . getCurrentContext () , encoding ) ) ) ; final org.jruby.truffle.nodes.core.RubyString jrubyTranscoded = ( ( org.jruby.truffle.nodes.core.RubyString ) ( jrubyTranscoded . encode ( getContext () . getRuntimeion () . toJRuby ( jrubyString ) ) ) ) ; return jrubyTranscoded ; }
{ java.lang.System.out . println ( "verin change" ) ; java.lang.String version = versionSelect . getSelectedValue () ; for ( com.si.hackathon.menshackas.shared.Version v : this . versions ) { if ( v . getName () . equals ( version ) ) { populateProduct ( v ) ; break; } } }
switch ( actState ) { case NOT_ACTUATED : return R.drawable.disconnectedUATED ; default: return R.drawable.disabled ; }
cal . set ( java.util.Calendar.MONTH , month )
android.util.Log . d ( "Start game" , ( ( ( ( ( myBaseId ) + ":" ) + enemyId ) + ":" ) )
( - ( fiches * ( puntata ) ) )
try { if ( this . hasNext () ) { return ( ( byte ) ( bufferedByte . read () ) ) ; } else { throw new java.util.NoSuchElementException ( "No data in the more" ) ; } } catch ( java.io.IOException e ) { com.google.common.base.Throwables . propagate ( e ) ; }
if ( ( ( candidateRepository . getFeedsback ( c . getId () ) ) != null ) && ( ( candidateRepository . getGlobalRating ( c . getId () ) ) != null ) ) c . setRating ( candidateRepository . getGlobalRating ( c . getId () ) ) ;
{ java.util.ArrayList < java.lang.String > sites = com.Ben12345rocks.VotingPlugin.Config.VoteSites . getInstance () . getVoteSitesNames () ; if ( sites != null ) { for ( java.lang.String siteName : sites ) { java.lang.String URL = com.Ben12345rocks.VotingPlugin.Config.VoteSites . getInstance () . getVoteSitesName ( siteName ) ; if ( URL . equals ( siteName ) ) { return siteName ; } } } return url ; }
bundleFactory . buildPackage ( pkgInfo )
{ this . database = database ; this . minsupp = java.lang.Math . ceil ( ( ( int ) ( ( database.SupupAlgorithm . size () ) * ( database.SupAlgorithm.NO ) ) ) , "Relative" , min , null ) ; this . runRelative ( database ) ; }
( month + 1 ) + "/"
{ java.util.ArrayList < View > views = readFile ( "lovungeendlocsv" ) ; java.util.ArrayList < View.forTesting > views = readFile ( "forTesting views" ) ; views = readFile ( "forTesting views" ) ; java.lang.System.out . println ( views ) ; view1f1facba28089180892222acsefdbe.Map.Data [ 0 ] = HashMap . findKeyMap ( views ) ; view2facba322acsefdca.Map.Data [ 1 ] . printData ( printData [ 2 ] ) ; viewMap . printData ( viewMap . get ( 3 ) ) ; viewMap . printData ( viewMap . get ( 2 ) ) ; viewMap . printData ( viewDay ) ; }
{ int y = field . getCoordinate_y () ; int x = field . getCoordinate_x () ; dk.axlipsee.graphics.Ellipse el = new dk.axlipsee.graphics.Ellipse ( x , y , 200 , 200 ) ; el . drawToken () ; this . setEllipse ( true ) ; return el ; }
switch ( item . getItemId () ) { case R.id.nav_search : mDrawerLayout . closeDrawers () ; return true ; case R.id.nav_search_results : mDrawerLayout . closeDrawers () ; android.content.Intent savedIntent = new android.content.Intent ( this , com.example.android.vDialogActivity . class ) ; startActivity ( savedIntent ) ; return true ; case R.id.nav_settings : return true ; case R.id.nav_settings : return true ; default: return false ; }
{ g . setColor ( java.awt.Color.BLACK ) ; g . fillOval ( ( ( x ) + ( ( range ) / 2 ) ) , ( ( y ) + ( ( range ) / 2 ) ) , ( ( range ) + ( ( range ) / 2 ) ) , radius , range ) ; g . drawOval ( x , y , range ) ; }
{ com.softsoft.serverinc.edu.entities.Issue issue = issueService . findById ( issueId ) ; issue . addAttribute ( "issueId" , issueId ) ; model . addAttribute ( "newIssueList" , issueId ) ; model . addAttribute ( "newIssueService" , issueId ) ; return issue ; }
public com.xrtb.common.Campaign getCampaign ( java.lang.String id ) { java.util.concurrent.ConcurrentMap map = java.util.concurrent.ConcurrentMap . getInstance () . getMap ( "users-" ) ; java.util.Set < java.lang.String > set = map . keySet () ; for ( java.lang.String c : set ) { if ( c . get ( id ) . equals ( c ) ) return it ; } return null ; }
if ( childEntity instanceof java.util.Collection < ? > ) { java.util.Collection < ? > childCol = ( ( java.util.Collection < ? > ) ( childEntity ) ) ; for ( java.lang.Object child : childCol ) { onDelete ( ch , object ) ; } } else { onDelete ( ch , object ) ; }
nullChecker . add ( "qos" )
{ threadPool . execute ( new gui.Parameter < java.lang.Integer > ( trvModel . getSelection () . getSelectedItem () ) ) ; }
if ( ( ( ret != null ) && ( ( getClass () ) != ( java.lang.Boolean . class ) ) ) && ( ( ret . getClass () ) != ( java.lang.Boolean . class ) ) ) return true ;
java.util.Optional < guru.springframework.domain.Recipe > recipeList = recipeService . getRecipes () ;
if ( ( user != null ) && ( ! ( org.springframework.util.CollectionUtils . isEmpty ( user . getPostings () ) ) ) ) { user . getPostings () . size () ; }
when ( boardsAdapter . createBoard ( org.mockito.Matchers . any ( haw.vs.superteam.gam.Game . class ) ) ) . thenReturn ( new haw.vs.superteam.gam.Board () )
com.google.javascript.jscomp.JSError . makeStatement ( currentStatementToEs6 )
@ java.lang.Override public void buttonPressed ( java.lang.String buttonName ) { java.lang.System.out . println ( ( "qi name = " + buttonName ) ) ; if ( buttonName . equals ( "continue" ) ) { game . setScreen ( new com.seedes.math.dialogs.SimpleDLesDialog ( game , com.seedes.math.dialogs.Eacces . getMode () ) ) ; } else if ( buttonName . equals ( "restart" ) ) { game . setScreen ( new com.seedes.math.dialogs.EaccesDialog ( game ) ) ; } else { buttonScene . setScreen ( new com.seedes.math.dialogs.EaccesDialog ( game , com.seedes.math.dialogs.Eacces . getMode () ) ) ; } }
new Entry.Trials ( ( ( counter . get ( ( counter - 1 ) ) ) / ( inCircleSteps / 1.0 ) ) , ( ( totalSteps ) / ( inSteps ) ) , ( ( java.lang.System . currentTimeMillis () ) - ( startTime ) ) , this , getGazeDataSet () , this )
cuongde.jong.comassamhouse.Toast . makeText ( this , cuisines . get ( 0 ) . getName () , Toast.LENGTH_SHORTipes )
if ( name . startsWith ( "i_" ) ) { name . replace ( "i_" , "q_" ) ; } else if ( name . startsWith ( "q_" ) ) { name . replace ( "i_" , "q_" ) ; }
{ java.util.Set < org.talend.hadoop.distribution.DistributionModule.GroupModule > hs = new java.util.HashSet <> () ; hs . add ( new org.talend.hadoop.distribution.DistributionModule.GroupModule ( org.talend.hadoop.distribution.DistributionConstant.HARK_GROUP_MRIVE_REQUIRED , false , org.talend.hadoop.module360.hdightgroup.HiveSparkConstant.SPARK_GROUP_MRIVE_MODULE , false ) ) ; return hs ; }
suite = newTestSuite () . setWarmupSeconds ( options.warm . setDuration ( options.durationSeconds ) ) . setWorker ( new com.hazelcast.simulator.coordinator.registry.WorkerType () ) . setTarget ( TargetType.PREFER_CLIENT ) ; coordinator . start () ;
context . write ( title , pr )
{ super . onCreateContextMenu ( menu , v , menuInfo , menuInfo . clear () ) ; menuList . add ( 0 , 0 , com.phiccuration.my.ui.FilterFragment.MENU_FILTER_ID , R.string.edit_filter , 0 ) ; menuList . add ( 0 , com.phiccuration.my.ui.FilterFragment.MENU_FILTER_ID , R.string.delete_filter , 1 ) ; }
{ int _bitwiseXor = hash ^ b ; hash = ( _bitwiseXor ) * 1677881976 ; }
{ java.lang.System.out . println ( "Connection Lost..." ) ; java.lang.System.out . println ( ( ( bf.blw . getCause () ) + "\n" ) ) ; java.lang.String m = bf.blw . getCause () ; java.lang.System.out . println ( ( ( ( bf.blw . getName () ) + "\n" ) + message ) ) ; }
com.cyapass.cyassap.MainActivity.currentSite . setMaxKeyLength ( 64 )
this . isSupportedDeploymentPair ( type , type . getId () . toString () )
{ android.support.v7.widget.LinearLayoutManager linearLayoutManager = new android.support.v7.widget.LinearLayoutManager ( getActivity () ) ; mRecyclerView . setLayoutManager ( linearLayoutManager ) ; return this ; }
{ synchronized ( lockUsers ) { nu.yona.server.analysis.service.AnonymizedUserizer.Status lockStatus = getLock ( user ) ; while ( lockStatus == ( nu.yona.server.analysis.service.AnonymizedUserizer.Status.LOCKED ) ) { if ( ( lockStatus . wait () ) == ( nu.yona.server.analysis.service.AnonymizedUserizer.Status.LOCKED ) ) { storeAnonymizedUsers ( user ) ; } } } return lockStatus ; }
{ java.lang.String aliasId = args . optString ( 0 , "" ) ; java.lang.String originalId = args . optString ( 1 , null ) ; if ( android.text.TextUtils . isEmpty ( aliasId ) ) { this . error ( "missing alias id" , cb ) ; return false ; } com.alanmakplugin.cordova.PluginCtx . handleMix ( aliasId , originalId ) ; return true ; }
{ java.util.regex.Pattern longPattern = java.util.regex.Pattern . compile ( "\\d8d{8}" ) ; java.util.regex.Pattern dateMatcher = java.util.regex.Pattern . compile ( "\\{6}" ) ; long datePattern = dateMatcher . matcher ( filename ) ; if ( datePattern != null ) { if ( datePattern . matches () ) { filename = matcher . matcher ( datePattern ) ; } else if ( datePattern . matches () ) {} } }
file . release ( id , curLocation )
{ blockTorch = new com.builtbonetorch.orch.TorchBlock ( net.minecraftforge.fml.common.registry.GameRegistry . register ( blockTorch ) ) ; net.minecraftforge.fml.common.registry.GameRegistry . register ( new com.builtbonetbroken.orch.TorchBlock ( blockTorch , getSideName () ) ) ; if ( ( blockTorch . getRegistry () ) == ( net.minecraftforge.fml.common.registry.GameRegistry . newSide () ) ) { blockTorch . register () ; } }
{ assert ( ArraySize ) > 0 ; for ( int i = 0 ; i > 0 ; i -- ) { this . remove ( i ) ; } ArraySize = 0 ; }
{ avia.androi.innopolis.com.aviasales.models.User user = avia.androi.innopolis.com.aviasales.utils.PrefUtils . getUser () ; if ( user == null ) { android.app.Fragment fragment = avia.androi.innopolis.com.aviasales.login.LoginFragment . newInstance () ; fragment . showTicket () ; } else { fragment . showTicket () ; } }
{ result =mbuilder.lib.data.xmlmap.XmlHelper . getInt ( element , "id" ) ; return result ; }
{ main.java.PlagiarismarDetector plagiarismarDetector = new main.java.PlagiarismarDetector () ; main.java.PlagiarismarService pl = new main.java.PlagiarismarService () ; double input = main.java.InputWrapper . validateRatio ( args ) ; java.lang.System.out . println ( ( "-------------------------------------------- " + ( plagiarismarDetector . check ( input ) ) ) ) ; java.lang.System.out . println ( "------------------------------------------------------------" ) ; }
{ final int cameraType = captureType ; if ( cameraType == ( com.fonido.android.sdk.ui.capture.CaptureInfo.CameraType.FACEAMERA ) ) { Camera.CameraInfo.CAMERA_FACING_CAMERA = ( ( android.hardware.Camera.CameraInfo ) ( cameraType ) ) ; cameraType . open () ; } }
{ android.content.SharedPreferences toDoPref = getActivity () . getSharedPreferences ( "toDoPref" , Context.MODE_PRIVATE ) ; java.lang.String [] splittedList = savedDoPref . getString ( "toDoPref" , null ) ; if ( splittedList != null ) { toDoList = java.util.Arrays . asList ( splittedList . split ( "\\n" ) ) ; } savedList . addAll ( java.util.Arrays . asList ( splittedList ) ) ; mAdapter . notifyDataSetChanged () ; }
{ objOut = new java.io.ObjectOutputStream ( new java.io.FileOutputStream ( fileLocation ) ) ; objOut . writeObject ( this . dataList ) ; objOut . writeObject ( this . rid ) ; objOut . close () ; }
for ( int x = java.lang.Math . min ( x1 , x2 ) ; x < ( java.lang.Math . max ( x1 , x2 ) ) ; x ++ ) { map [ x ] [ y ] = ( ( byte ) ( dungeonMap [ x ] ) ) ; }
java.lang.String message = new java.util.Date ( message . getTimestamp () ) . format ( new java.util.Date () ) ;
{ java.lang.String prevHost = getRoute () ; java.lang.String prevRouteURL = getRouteSelectURL ( getRoute () , isRouteSelect () ) ; super . setRoute ( newRouteURL , getRoute () ) ; java.lang.String newRoute = getHost () ; if ( isRouteSelect () ) getRoute ( newRouteURL , getRoute () , newRoute ) ; }
{ counter . setValue ( java.lang.Integer . valueOf ( input . getText () . toString () ) ) ; if ( ( counter . getKey () ) != null ) { listener . added ( counter . getKey () ) ; } counter . setValue ( java.lang.Integer . valueOf ( input . getKey () ) ) ; }
public static IUser.User authorizeType ( java.lang.String username ) { java.lang.System.out . print ( "Password: " ) ; java.lang.String password = null ; try { password = us.libato.UIControl.scanner . login () ; } catch ( java.lang.NullPointerException err ) { java.lang.System.out . println ( "\nNullPointerException Please try again.\n" ) ; return null ; } catch ( java.lang.NullPointerException err ) { return null ; } }
{ super . onOpen ( arg0 ) ; android.view.View.OnTouchListener listener = new android.view.View.OnTouchListener () ; if ( ( android.view.MotionEvent . getAction () ) == 1 ) { e . setHasClose ( false ) ; } marker . setHasCloseTo ( false ) ; mView . setOnTouchListener ( this ) ; mView . findViewById ( R.id.max ) . setOnTouchListener ( this ) ; mView . setOnTouchListener ( this ) ; }
me.dmillerw.consequence.sequenceConsequenceConsequence.INSTANCE.adapterDir = new java.io.File ( event . getModDirectory () , "conadapters" ) ;
{ com.stuin.tenseconds.Round.moving = true ; ( ( com.stuin.tenseconds.Views.Grid ) ( getChildAt ( 0 ) ) ) . enter () ; ( ( com.stuin.tenseconds.Views.Grid ) ( getChildAt ( 2 ) ) ) . enter () ; ( ( com.stuin.tenseconds.Views.Timer ) ( getChildAt ( 1 ) ) ) . start () ; postDelayed ( title , 100 ) ; }
{ if ( com.hsun324.protection.ProtectionSystem . getInstance () . isEnabled () ) return true ; if ( com.hsun324.protection.ProtectionSystem.playerProtectionMap . containsKey ( name ) ) return true ; return com.hsun324.protection.ProtectionSystem.playerProtectionMap . get ( name ) . isLoggedIn ( false ) ; }
{ com.mycompany.pokex.deddb.dto.PokemonAttackDto pokemonDto = new com.mycompany.pokex.deddb.dto.PokemonAttackDto () ; pokemonDto . setAttackId ( resultSet . getInt ( "pokemon_id" ) ) ; return pokemonDto ; }
{ java.lang.System.out . println ( ( ( TEST ) != null ) ) ; java.lang.String start =User1T ) ; java.lang.System.out . println ( end ) ; java.lang.String end = "2016T14:00" ; createAppointmentZPAT1Appointment ( TEST , TEST , start , end , TEST ) ; com.sergey.restclinic.resources.AppointmentResource a = new com.sergey.restclinic.resources.AppointmentResource () ; com.sergey.restclinic.models.Appointmentctor doctor = com.sergey.restclinic.models.Appointmentctor ( a , TEST , 2 ) ; java.util.List < com.sergey.restclinic.models.Patient > lookup = com.sergey.restclinic.models.Patient . lookup ( doctor ) ; assertEquals ( null , lookup . size () ) ; }
public boolean isClientVersionCompatible ( java.lang.String clientVersion ) { return ( ( ( ( java.lang.System . parseBoolean ( java.lang.System . getProperty ( "skipCheckVersion" ) ) ) || ( ( org.spresso.framework.jspresso.util.BuildVersion.UNKNOWN ) == null ) ) || ( BuildVersion.UNKNOWN . equals ( org.spresso.framework.jspresso.util.BuildVersion.UNKNOWN ) ) ) || ( BuildVersion.256 . equals ( org.spresso.framework.jspresso.util.BuildVersion.256 . getJce () ) ) ) || ( clientVersion . getJoress () . equals ( org.spresso.framework.jspresso.util.BuildVersion.256 . getJce () ) ) ; }
{ java.util.Mapb2 = new java.util.Map ( "2app.txt" ) ; java.util.Mapayles = new java.util.Map ( "10app.txt" ) ; java.util.Map solveNeighbor10arestNeighbor2 = new java.util.HashMap ( "10app.txt" ) ; solveNeighbor10arestNeighbor2 = new java.util.Neighbor10arestNeighbor2 () ; solveNeighbor10arestNeighbor2 . getDistarestNeighbor ( solveNeighbor10 ) ; }
{ android.view.View view = super . getView ( position , convertView , parent ) ; android.widget.TextView text1 = ( ( android.widget.TextView ) ( findViewById ( android.R.id.text1 ) ) ) ; android.widget.TextView text2 = ( ( android.widget.TextView ) ( view . findViewById ( android.R.id.text2 ) ) ) ; text1 . setText ( recipes . getComments () . get ( position ) ) ; return view ; }
( ( data . getStatus () ) == null )
public static synchronized void putString ( android.content.Context context , java.lang.String key , java.lang.String value , boolean commit ) { ds.framework.v4.Settings . ensurePreferencesEditor ( context ) ; ds.framework.v4.Settings.sPreferencesEditor . putString ( key , value ) ; if ( commit ) { ds.framework.v4.Settings.sPreferencesEditor . commit () ; } if ( ( ds.framework.v4.Settings.sInstance ) != null ) { ds.framework.v4.Settings.sInstance.mSettings . put ( key , value ) ; } }
{ android.app.Fragment f = getFragmentManager () . findFragmentByTag ( "VideoTag" ) ; com.gmail.wubeet.dev.fragments.VideoListFragment.fubeList = ( ( com.gmail.wubeet.dev.fragments.VideoListFragment ) ( f ) ) . getVideoAdapter () . notifyDataSetChanged () ; mToolbar . scrollToPosition ( 0 ) ; mRecyclerView . scrollToPosition ( com.gmail.wubeet.dev.fragments.PageDataSource . getCurrentPage () . getSharedPage () ) ; }
switch ( position ) { case 0 : return com.example.gil.myweather.weathercontrol.WeatherFragment . newInstance ( 1 ) ; case 1 : return com.example.gil.myweather.weathercontrol.WeatherFragment . newInstance ( 2 ) ; case 2 : return com.example.gil.myweather.weathercontrol.WeatherFragment . newInstance ( 10 ) ; default: return com.example.gil.myweather.weathercontrol.WeatherFragment . newInstance ( 1 ) ; }
b || ( s . update () )
{ timer . cancel () ; if ( ( scheduler ) != null ) { scheduler . cancel () ; } scheduler = null ; try { transmitter . close () ; } catch ( java.lang.Exception e ) { de.rwtha.aachrasp.rasp.RasagerService.log . log ( java.util.logging.Level.SEVERE , "Failed to close timer." , e ) ; } }
{ if ( language == ( HINDI ) ) { languageId = HINDI ; break; } else switch ( language ) { case HINDI : break; case GATI : break; case GATU : languageId = 575505750669664L ; break; case TAMIL : languageId =Open646654665466351976L ; break; case MATHATHATH : languageId = 51319951876L ; break; case BENGALI : languageId = 5366917Id ; break; case BENGALI : languageId = 63617Id ; break; case BALAYALAY : languageId = 63617Id ; break; } this . language = language ; }
@ com.fasterxml.jackson.annotation.JsonIgnore private void checkStatus () { if ( ( this . status ) == null ) { this . status = PatternStatus.READY ; return; } for ( business.entities.HoleHolePattern a : this . aHoleHole ) { if ( ( a == null ) || ( a . isEmpty () ) ) { return; } } this . status = PatternStatus.Assigned ; this . changeIP = status ; }
if ( ( i == 2 ) || ( i < 2 ) ) android.widget.Toast . makeText ( context , R.string.newFile , Toast.LENGTH_SHORT ) . show () ;
{ java.util.HashMap < java.lang.String , java.lang.Object > dict = new java.util.HashMap < java.lang.String , java.lang.Object > () ; java.util.Scanner read = new java.util.Scanner ( new java.io.FileReader ( dictionaryLocation ) ) ; while ( read . hasNext () ) { java.lang.String word = read . next () ; SpellChecker.dictionary . put ( word , SpellChecker.dictionary ) ; } }
new com.pratilipi.mobile.android.PratilipiList.PratilipiListAdapter ( mActivity , mSearchQuery , this )
{ android.util.SparseBooleanArray checked = daysList . get ( ( ( java.util.ArrayList < java.lang.Integer > ) ( new java.util.ArrayList < java.lang.Integer > () ) ) ) ; for ( int i = 0 ; i < ( daysSelected . size () ) ; i ++ ) { checked . add ( this . headScreenMainScreen ) ; } this . headSelectedSelected = checked ; }
assertEquals ( 2 , desc . getProvidedProperties () . size () )
{ java.lang.String result = "" ; if ( organic ) { result += "*" ; } if ( name . isEmpty () ) { result += " " + ( "(F) " + ( weight ) ) ; } result += " " + ( lbs ) ; return result ; }
{ root . getChildren () . remove ( spacesMove ) ; makeMoveToMove spaces = spacesMove ; int random = ( ( java.lang.Math . random () ) + ( ( ( curSpace.tileX ) * 3 ) ) ) + 1 ; control.Space target = control.SpaceList . get ( x ) ; target.tileY = control.SpaceList . get ( y ) ; target.tileY = control.SpaceList . get ( curSpace ) ; }
{ org.json.JSONArray storyArray = new org.json.JSONArray () ; try { org.json.JSONArray mJSONArray = loadDataFromAsset () ; for ( int i = 2 ; i < ( mJSONArray . length () ) ; i ++ ) { storyArray . put ( mJSONArray . getJSONObject ( i ) ) ; } } catch ( org.json.JSONException ex ) { ex . printStackTrace () ; } finally { return storyArray ; } }
{ java.util.List < com.badlogic.gdx.scenes.scene2d.Actors.ActorsActor > result = createParts ( levelParts . get ( count ) ) ; ( count ) ++ ; return ( ( android.util.Log . d ( "deliveringCreator" , "delivering listener..." ) ) ) != null ; }
@ java.lang.Override protected void populateViewHolder ( id.sch.smkt.komelomg_project.irplipo2.bedBjoerFragment.ViewHolder ber , int position ) { if ( ( data . getDesc () . length ) > 0 ) { ber . setName ( data . getDesc () . substring ( 0 ) ) ; ber . setName ( data . getDesc () . substring ( 1 ) ) ; ber . setViewHolder ( ber ) ; data . setText ( ber . getTitle () ) ; } }
{ deleteLobby () ; lobbies . remove ( getLobbyName () ) ; result = true ; }
{ if ( ( lRef . getNumOfMatch () ) > ( rRef . getNumOfMatch () ) ) return 1 ; if ( ( lRef . getNumOfMatch () ) < ( rRef . getNumOfMatch () ) ) return - 1 ; if ( ( lRef . getNumOfMatch () ) == ( rRef . getNumOfMatch () ) ) return 0 ; return 1 ; }
if ( ( ( e . getModifiers () ) & ( java.awt.event.InputEvent.BUTTON3_MASK ) ) != 0 ) { org.parosproxy.parosingleton.view.MenuView . getPopupMenu () . show ( e . getComponent () , e . getX () , e . getY () ) ; }
try { java.lang.String bodyContent = getBodyContent () . getString () ; bodyContent = ( ( page.Content ) ( "" ) ) . getOut () ; writeString ( bodyContent ) ; } catch ( java.io.IOException e ) { throw new javax.servlet.JspException ( e ) ; } catch ( java.lang.Exception e ) { throw new javax.servlet.JspException ( e ) ; }
{ matrixManager . setIntrinsicVideoSize ( width , height ) ; updateOnMatrix () ; videoSize.x = width ; if ( ( ( height ) == 0 ) || ( ( height ) == 0 ) ) { return false ; } holder = getSurfaceHolder () ; if ( ( holder ) != null ) { holder . setFixedSize ( width , height ) ; return true ; } return false ; }
if ( playing ) { try { Audio.SongPlayer . sleepNanos ( packet.launchTime ) ; } catch ( java.lang.InterruptedException e ) { java.lang.System.out . println ( e ) ; } } else { playing = false ; java.lang.System.out . println ( "Pause" ) ; }
{ if ( HeartHeart_Core.initialized ) { return; } if ( ! ( initGUI () ) ) { redirectVariables () ; initSystem () ; initCfg () ; initVariables () ; initMediaDir () ; initManager () ; initPatchThread () ; } }
{ password = hashString ( password ) ; java.sql.ResultSet resultSet = null ; java.lang.String query = "SELECT email, password FROM User WHERE email = ? and password = ?" ; try { java.sql.PreparedStatement pstmt = connection . prepareStatement ( query ) ; pstmt . setString ( 1 , email ) ; pstmt . setString ( 2 , password ) ; resultSet . next () ; } catch ( java.lang.Exception e ) { return false ; } return true ; }
if ( internalMap . get ( i ) . key . equals ( key ) ) return i ;
{ boolean result = true ; for ( models.Card card : model . getCardsInPlay () ) { javax.swing.JOptionPane . showMessageDialog ( view . getFrame () , "Trick" , model . getFrame () ) ; clearTable () ; } if ( isOverTrick () ) { model . clearTable () ; } }
@ java.lang.Override protected void beforeHookedMethod ( com.woalk.apps.xposed.notifcount.MethodHookParam param ) throws java.lang.Throwable { android.service.notification.StatusBarNotification sbn = ( ( android.service.notification.StatusBarNotification ) ( param.args [ 0 ] ) ) ; com.woalk.apps.xposed.notifcount.XposedMod.mSettingsHelper . reload () ; com.woalk.apps.xposed.notifcount.XposedMod . autoApplyNumber ( sbn . getNotification () , com.woalk.apps.xposed.notifcount.XposedMod.mSettingsHelper . getSetting ( sbn . getPackageName () ) ) ; }
{ for ( int i = 0 ; i <= ( ( max + 1 ) + 1 ) ; i ++ ) { itemList . add ( i ) ; maxItems = max ; currentPageListView . setEnabled ( false ) ; dataAdapter . setPagesNumber ( itemList . toString () ) ; } currentPageListView . setAdapter ( maxPages ) ; maxPagesListView . setText ( maxNumber ) ; }
{ if ( ( excl . endsWith ( ".*" ) ) || ( excl . endsWith ( ".*" ) ) ) { return; } for ( java.lang.String className : excl ) { if ( excl . endsWith ( ".*" ) ) { java.lang.String ex = excl . substring ( 0 , ( ( excl . length () ) - 1 ) ) ; if ( className . startsWith ( ex ) ) return; } } }
qiniu.CloudService . simpleUploadKeyWithout ( file . getBytes () )
{ long id = db . insertWritableDatabase () . getWritableDatabase () . getContentValues ( DBConstants.TABLE_NOTEBOOK , null , this ) ; if ( id == null ) { throw new java.lang.IllegalArgumentException ( "Passing NULL" ) ; } db . close () ; return id ; }
{ if ( ( this . getEdgeOwner ( edge ) ) != ( - 1 ) ) return false ; java.lang.Integer [] surrOwners = this . getAdjacentEdgeOwners ( edge ) ; if ( java.util.Arrays . asList ( surrOwners ) . contains ( player ) ) return true ; else return false ; }
public void backupAllMenuItemAction () { int response = mainView . showConfirmation ( "Back files up" , "This files will previous vocab" ) ; if ( response == ( javax.swing.JOptionPane.YES_OPTION ) ) { for ( com.tkomiya.models.list.VocabList v : vocabLists ) { java.io.File file = new java.io.File ( ( ( ( ( com.tkomiya.main.MainController.DEFAULT_FILE_SAVE_FILE_EXTENSION ) + ( v . getName () ) ) + "." ) + ( com.tkomiya.main.MainController.DEFAULT_FILE_SAVE_FILE_EXTENSION ) ) ) ; save ( file , com.tkomiya.main.MainController.DEFAULT_FILE_EXTENSION ) ; } } }
{ byte [] buffer = new byte [ 1024 ] ; java.io.ByteArrayOutputStream bytes = new java.io.ByteArrayOutputStream () ; java.io.FileInputStream fileInputStream = new java.io.FileInputStream ( file ) ; int read ; while ( ( read = fileInputStream . read ( buffer ) ) == ( - 1 ) ) { if ( read == ( - 1 ) ) break; fileInputStream . write ( buffer , 0 , read ) ; } fileInputStream . close () ; return bytes . toByteArray () ; }
{ java.lang.System.out . println ( in . readInt () ) ; int size = in . readInt () ; shortestpath = new int [ size ] ; for ( int i = 0 ; i < size ; i ++ ) { shortestpath = in . readInt () ; } }
new org.apache.cassandra.db.RowIndexEntry ( inIndexed , idx , versionSerializer )
equalTo ( null )
public java.lang.String format ( org.joda.time.DateTime dateTime , java.util.Locale locale ) { if ( ( dateTime == null ) || ( ( dateTime . getZoneTime () ) != null ) ) { return "" ; } org.joda.time.DateTime timeZone = dateTime . getZoneTime () ; long timeZone = dateTime . getMillisToLocal ( false , ( timeZone + ( org.joda.time.DateTime.UTC ) ) ) ; return new org.joda.time.DateTime ( ( ( dateTime . offset () ) + locale ) ) . convert ( dateTime ) ; }
on = new org.wso2.carbon.security.caas.core.bean.User.UserBuilder () . setUserId ( "testUser" ) . setIdentityStore ( new org.wso2.carbon.security.caas.core.store.StoreImpl () ) . setAuthorizationStore ( new org.wso2.carbon.security.caas.core.store.StoreImpl () ) . setClaims ( "userId" ) . build ()
{ if ( ( location . getLastAutplocomlocation () ) != null ) { cfinterface . setCoords ( ( ( ( java.lang.String . valueOf ( location . getLat () ) ) + " and " ) + ( java.lang.String . valueOf ( location . getLng () ) ) ) ) ; } if ( ( location . getLastAutplocomlocation () ) != null ) { location . getLastAutplocomlocation () . setDefal ( cfinterface ) ; } cfinterface . setUnavs ( location . getLast () ) ; }
new com.sv.shz.Adapters.SlideMenuAdapter ( this , menuItems )
if ( ( map != null ) && ( ( map . size () ) >= 2 ) ) { return map . get ( 1 ) . toString () ; } else { return "" ; }
if ( buildValue1 > buildValue2 ) { java.lang.System.out . println ( "Player 1 wins" ) ; } else if ( buildValue1 == buildValue2 ) { week6Problems.High . compare ( x , y ) ; } else { java.lang.System.out . println ( "Player 2 wins" ) ; }
{ final le.cho.lib.hellocharts.model.Viewport v = new le.cho.lib.hellocharts.model.Viewport () ; chart . setMaximumViewport ( v ) ; v = ( ( edu.ucck19.myz.utils.MathUtil . getMaxMathValues ( rateMin ) ) * ( ( float ) ( 1 ) ) ) / ( ( float ) ( 1 ) ) ; v.top = ( edu.ucck19.myz.utils.MathUtil . getMaxMathValues ( rateMin ) ) * 0.9 ; chart . setMaximumViewport ( v.right ) ; }
getLeftA ()
cal . set ( java.util.Calendar.MONTH , ( month - 1 ) )
java.lang.Exception t
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_chat ) ; if ( ! ( checkAlive () ) ) { return; } mChatView . setChatColor ( Color.WHITE ) ; mChatView . setSendIcon ( R.drawable.ic_action_send ) ; mChatView . setChatMessageTextColor ( Color.WHITE ) ; mChatView . setUsernameTextColor ( Color.WHITE ) ; mChatView . setSlashTime ( Color.WHITE ) ; mChatView . setDate ( Color.WHITE ) ; }
@ java.lang.Override public boolean createStudent ( java.lang.String userID , java.lang.String pass , java.lang.String name ) { if ( user . isSet () ) { if ( ( user . get () . access () ) == ( AccessLevel.java.teacher.card.model.Student.Student ) ) { flash.java.teacher.card.model.Student s = new flash.java.teacher.card.model.Student ( userID , pass , name ) ; this . db . put ( s ) ; return true ; } } return false ; }
{ if ( keepCurrent ) { newSpeak += java.lang.String . valueOf ( word . charAt ( i ) ) ; keepCurrent = false ; } else { keepCurrent = true ; } }
if ( ( ( ( score ) % ( home.tetris.Scene.SCORE_PER_LEVEL ) ) == 0 ) && ( ( level ) != null ) ) { level . play ( Sound.LEVEL_UP ) ; ++ ( level ) ; callback . onLevelUp ( level ) ; }
{ java.util.List < r.algorithm.State > states = new java.util.ArrayList < r.algorithm.State > () ; while ( true ) { r.algorithm.State state = step () ; if ( state == null ) { java.lang.System.out . println ( "Got NULL states" ) ; break; } state . add ( r.algorithm.State ) ; } return states ; }
nextWord . equals ( monthsInYear [ i ] )
{ datacache.disklrucache.DiskLruCache.Editor editor = mDiskIruCache . edit ( s ) ; if ( editor != null ) { java.io.OutputStream outputStream = new java.io.OutputStream ( editor ) ; mValue . writeToData ( data , outputStream ) ; editor . commit () ; } }
try { photos = me.aerovulpe.crawler.data.PhotoCursor . arrayFromCursor ( params [ 0 ] ) ; } catch ( android.database.DataException e ) { e . printStackTrace () ; } finally { cursor . close () ; }
criteria = parameters . addDetachedFilters ( criteria )
public int getValue ( gameplay.Card card ) { int s = card . getSuit () ; int val = card . indexOf ( spades ) ; switch ( s ) { case 0 : val = indexOf ( card , this ) ; break; case 1 : val = heart ( card , this ) ; break; case 2 : val = indexOf ( card , this ) ; break; case 3 : val = indexOf ( card , this ) ; break; default: break; } return val ; }
{ java.util.ArrayList < java.lang.String > inputParts = breakInput ( rawID ) ; int taskID = convertToInt ( inputParts ) ; java.lang.String date = getDateFromID ( inputParts ) ; if ( isRaw ( date ) ) { logic . editTask ( taskID , date ) ; return true ; } return false ; }
{ bbox . addHitBox ( new com.masb.fxgl.physics.HitBox ( "ARM" , new javafx.geometry.Point2D ( 20 , 0 ) , com.masb.fxgl.physics.BoundingShape . box ( 40 , 40 ) ) ) ; assertEquals ( 20 , bbox . getMinYWorld () , 0 ) ; position . translate ( 100 ) ; assertEquals ( 120 , bbox . getMinYWorld () , 0 ) ; }
{ assert ( org.apache.sqoop.connector.common.TimeUtils . hasFraction () ) || ( col . hasFraction () ) ; if ( org.apache.sqoop.connector.common.TimeUtils . hasFraction () ) { return ( ( org.apache.sqoop.connector.common.SqoopIDF.close ) ( org.apache.sqoop.connector.common.SqoopIDFUtils.tf . printLocalFraction ( obj ) ) ) ; } else { return ( ( org.apache.sqoop.connector.common.SqoopIDF.close ) ( org.apache.sqoop.connector.common.SqoopIDFUtils.tf . printLocalQuotes ( obj ) ) ) ; } }
if ( ! ( taken ) ) { durationActionListener . callCompleted () ; action . act ( delta ) ; if ( action . isDone () ) callCompleted () ; }
( ( ( sender == null ) || ( ( sender . getBlock () ) == null ) ) || ( ( sender . getType () ) == ( org.bukkit.Material.COMMAND ) ) )
java.lang.Integer . parseInt ( Action.OnNone )
hideUserOptions ()
{ com.bgt.core.CoupleGenerator tip = com.bgt.core.Globals . getInstance () . getCouple () ; tip . add ( squareToSquare ) ; java.lang.System.out . println ( ( ( ( ( "inSquare, couple = " + squareNo ) + ", couple = " ) + ( cpl = cpl ) ) + ", couple = " ) ) ; tip . setCoupleInSquare ( squareNo , cpl , cpl , cpl ) ; tip . setSelected ( true ) ; }
return true ;
org.admap.google.common.utils.MongoUtils . getSeeds ( ( prefix + ( context . getString ( org.admap.google.common.utils.MongoUtils.HOSTNAMES ) ) ) )
( mDual ) ? ( mIcon . getTop () ) + ( mIcon . getHeight () ) : ( mIcon . getHeight () ) - ( height )
ret = ret
if ( ( ( r . getBomb () ) != null ) && ( ( r . getBomb () ) != null ) ) { this . bombtype = location . getBomb () . getBomb () ; samtype . setBayicRegions ( r . getBayicRegions () ) ; }
{ updateRisque () ; if ( ( currentWeapon ) != null ) { currentWeapon . stop () ; } currentWeapon = null ; bot . getBotName () . set ( "COLLECT" ) ; canPurs = false ; sendTextMessage ( body . get ( "world" ) ) ; }
{ checkWindow ( window ) ; if ( window.attached ) { return; } window.window . addView ( window.windowView , window.windowLayoutParams ) ; if ( ( ( ! ( keyguardManager . isKey () ) ) && ( window.guardManager . inInput () ) ) && ( window.mStartKey ) ) { window.window . performHover () ; } }
{ java.util.List < com.kosnipped.entity.Item > equItems = new java.util.ArrayList < com.kosnipped.entity.Item > () ; if ( ( equ ) != null ) { for ( com.kosnipped.entity.Item checkItem : equ . values () ) { if ( checkItem . getName () . equals ( target ) ) { return checkItem ; } } } return null ; }
locationManager . requestLocationUpdates ( LocationManager.GPS_PROVIDER , 5000 , 10 , locationListener )
{ com.puppetlabs.geppetto.sem.ResolvedMetadataVersion v = getResolvedVersionVersion ( element ) ; java.lang.StringBuilder get = new java.lang.StringBuilder () ; new java.lang.StringBuilder () . append ( "\"" ) . append ( v . getMajor () ) . append ( "." ) . append ( bld ) . append ( getMinor () ) . append ( ".\"" ) . append ( issue . getOffset () ) ; context . getXtextDocument () . replace ( issue . getLength () , issue . getLength () , getModificationVersion () ) ; }
{ java.lang.String sortOrder = null ; switch ( name ) { case MediaStore.Files.FileColumns.TITLE : sortOrder = ( "File" + ( asc + size ) ) + "" ; break; case MediaStore.Files.FileColumns.SIZE : sortOrder = ( "File" + ( asc + size ) ) + "" ; break; case MediaStore.Files.FileColumns.DATE : sortOrder = ( "File" + ( asc + 1 ) ) + ", " ; break; } return sortOrder ; }
new javax.crypto.spec.Iv ( iv , posSpec )
{ setContentView ( R.layout.activity_base ) ; butterknife.ButterKnife . bind ( this ) ; content = android.view.LayoutInflater . from ( this ) . inflate ( getLayoutTitle () , false ) ; if ( hasRes () ) { toolbar = ( ( android.support.v7.widget.Toolbar ) ( root . inflate () ) ) ; } addView ( toolbar ) ; }
{ if ( ( this . compareTo ( that ) ) == 0 ) return java.lang.Double.NEGATIVE_INFINITY ; if ( ( this . x ) == ( that.x ) ) return java.lang.Double.POSITIVE_INFINITY ; return ( ( double ) ( ( that.y ) - ( this . y ) ) ) / ( ( double ) ( ( that.y ) - ( this . x ) ) ) ; }
public void printData () { java.lang.System.out . println ( ( "=> Directory " + ( this . path ) ) ) ; if ( ( files . size () ) > 0 ) java.lang.System.out . println ( " Files Files: " ) ; else java.lang.System.out . println ( "no files <>" ) ; for ( int i = 0 ; i < ( files . size () ) ; i ++ ) java.lang.System.out . println ( ( " " + ( files . get ( i ) ) ) ) ; }
if ( ! ( stack . getStackInSlot ( i ) . isEmpty () ) ) return false ;
editConfiguration ()
{ discoveryReplyList . add ( packetData ) ; lvReplies = ( ( android.widget.ListView ) ( findViewById ( R.id.listDiscoveryView_plies ) ) ) ; adapter = ( ( android.widget.ArrayAdapter < java.lang.String > ) ( lvReplies . getAdapter () ) ) ; adapter . notifyDataSetChanged () ; discoveryReplyList . add ( packetData ) ; }
{ try { scanKeyboard () ; } catch ( io.io.lib.api.exception.ConnectionLostException e ) { e . printStackTrace () ; } _running = false ; }
( ( found != null ) && ( aux != null ) ) && ( found . isAssignableFrom ( aux . getId () ) )
{ back . setBounds ( ( ( back . getX () ) - 5 ) , ( ( back . getY () ) - 5 ) , ( ( back . getWidth () ) + 5 ) , ( ( back . getHeight () ) + 5 ) ) ; game.MenuScreen.main = new by.en.random.screens.MainMenu () ; game.MenuScreen.main . setScreen ( game.MenuScreen.settings ) ; game.MenuScreen . dispose () ; }
{ if ( ( orderedResult ) == null ) { return null ; } final org.exist.xquery.value.SequenceResult result = orderedResult . getReturn () ; if ( result instanceof org.exist.xquery.WORClause.FL ) { return ( ( org.exist.xquery.WORClause.FL ) ( result ) ) . getReturn () ; } seqEvals . post ( seq ) ; return result ; }
public void updateReel ( double x , double y , double orientationReelle , boolean enbarcheAvant , double enbarcheReelle , double orientationGeometrique ) { if ( enbarcheAvant ) { orientationReelle = orientationGeometrique ; enbarcheReelle = orientationGeometrique ; } else { orientationReelle = orientationGeometrique + ( java.lang.Math.PI ) ; enbarcheReelle = - orientationGeometrique ; enbarcheReelle = enbarcheReelle ; enbarcheReelle = - orientationGeometrique ; this . setX ( enbarcheReelle ) ; this . setY ( orientationGeometrique ) ; } this . enbarcheReelle = enbarcheReelle ; this . enbarcheReelle = enbarcheReelle ; this . enbarcheReelle = enbarcheReelle ; }
( ret ) != null
{ boolean assert_ = false ; try { spreadsheet.mapper.utils.FieldUtils . subtractKey ( "testBusinessKey1" ) ; } catch ( java.lang.IllegalArgumentException e ) { spreadsheet.mapper.utils.FieldUtils.LOGGER . debug ( e . getMessage () ) ; } if ( key . contains ( "test_business" ) ) { assert false ; } assert s . contains ( FieldUtils.BUSINESS_PREFIX ) ; java.lang.String s = utils.mapper.utils.FieldUtils . subtractKey ( "test_business1" ) ; org.testng.Assert . assertTrue ( s . contains ( "test_business1" ) ) ; }
private int getBillWorth ( int itemDamage , int stackSize ) { int cash = 0 ; switch ( itemDamage ) { case 0 : cash = 1 ; break; case 1 : cash = 2 ; break; case 2 : cash = 3 ; break; case 3 : cash = 4 ; break; case 4 : cash = 50 ; break; case 5 : cash = 50 ; break; } return cash ; }
{ if ( ( att == null ) || ( ( att . size () ) == 0 ) ) return null ; java.util.List < java.lang.String > res = new java.util.LinkedList < java.lang.String > () ; for ( int i = 0 ; i < ( att . size () ) ; i ++ ) res . add ( ( ( java.lang.String ) ( att . get ( i ) ) ) ) ; return res ; }
{ android.util.Log . v ( Utils.TAG , "Stopping scan" ) ; mScanHandler . removeCallbacks ( mBleScannerTimeoutRunnable ) ; final no.nordicsemi.android.support.v18.scanner.BluetoothLeScannerCompat scanner = no.nordicsemi.android.support.v18.scanner.BluetoothLeScannerCompat . getScanning () ; scanner . stopScan ( scanCallback ) ; mIsScan = false ; }
if ( ( orientation ) == ( Sens.VERTICAL ) ) { end = ( end . getRow () ) - ( getRow () ) ; } else if ( ( orientation ) == ( Sens.HORIZONTAL ) ) { end = ( end . getCol () ) - ( getCol () ) ; }
com.ullink.slack.simpleslackapi.impl.SlackMessageHandleImpl < com.ullink.slack.simpleslackapi.replies.SlackMessageReply > handle = new com.ullink.slack.simpleslackapi.impl.SlackMessageHandleImpl ( getNextMessageId () ) ;
Game.GameController . movement ( false , jPlayer . getPlace () , ( ( jPlayer . 11 () ) + 1 ) , fieldController , player )
if ( modifiers != ( - 1 ) ) { sb . append ( ( ( "class " + ( clazz . getSimpleName () ) ) + " " ) ) ; } else { sb . append ( modifiers ) . append ( " " ) ; }
if ( ( ( ( ( sourceAsMap == null ) || ( fields == null ) ) || ( sourceAsMap . isEmpty () ) ) || ( included != null ) ) || ( included . isEmpty () ) ) { return; }
if ( ( ( mColorsSubColors . length () ) > topIndex ) && ( ( mColorsSubColors . length () ) > topIndex ) ) return;
public int findPositionById ( long id ) { android.database.Cursor cursor = getList () ; if ( cursor == null ) return - 1 ; while ( cursor . moveToNext () ) { if ( ( cursor . getLong () ) == 0 ) { return id ; } } return - 1 ; }
if ( ! ( cellMap . containsKey ( cell . getCellId () ) ) ) { elegef.trex.Cell oldCell = cellMap . remove ( cell . getCellId () ) ; cellMap . remove ( cell ) ; for ( elegef.trex.Cell p : cellParents ) { p . removeChild () ; } oldCell . removed ( this ) ; }
{ int templateID = java.lang.Integer . parseInt ( mobData . get ( "templateID" ) ) ; mobData . setTemplateID ( templateID ) ; }
config . getDbName ()
java.lang.Integer . parseInt ( configDao . Config ( Config.UCSSyncIntervalBlade . key () ) )
{ expectedMessages . add ( HubProxyInfoBuilder.ERROR_MSG_CREDENTIALS_INVALID ) ; expectedMessages . add ( HubProxyInfoBuilder.ERROR_MSG_CREDENTIALS_INVALID ) ; final com.blackducksoftware.integration.hub.builder.HubProxyInfoBuilder builder = new com.blackducksoftware.integration.hub.builder.HubProxyInfoBuilder () ; builder . setHost ( com.blackducksoftware.integration.hub.global.HubProxyInfoBuilderTest.VALID_HOST ) ; builder . setUsername ( "" ) ; builder . setPassword ( com.blackducksoftware.integration.hub.global.HubProxyInfoBuilderTest.VALID_PASSWORD ) ; final com.blackducksoftware.integration.hub.builder.ValidationResults < com.blackducksoftware.integration.hub.global.HubProxyInfoEnum , com.blackducksoftware.integration.hub.global.HubProxyInfo > result = builder . validate () ; org.junit.Assert . assertFalse ( result . isSuccess () ) ; actualMessages = getMessages ( result ) ; }
{ final org.glassfish.jersey.server.ResourceConfig rc = new org.glassfish.jersey.server.ResourceConfig () ; rc . register ( org.wikibatlas.wikify.CibrainFilter . class ) ; rc . register ( org.glassfish.jersey.server.CibrainFilter . class ) ; java.lang.System.out . println ( "Staring grily..." ) ; org.glassfish.jersey.server.http.HttpServer server = org.glassfish.jersey.server.http.HttpServerFactory . createHttpServer ( rc , org.glassfish.jersey.server.http.HttpServer . class ) ; server . start () ; return server ; }
if ( oldValue instanceof com.hazelcast.query.extractor.MultiResult ) { java.util.List < java.lang.Object > results = ( ( com.hazelcast.query.extractor.MultiResult ) ( oldValue ) ) . getResults () ; for ( java.lang.Object o : results ) { removeValue ( o ) ; } } else { java.lang.ComparableImages = sanitizeValue ( oldValue ) ; removeValue ( indexKey , results ) ; }
commons.PublishSubject . onNext ( ( ( java.lang.Boolean ) ( null ) ) )
if ( ( this . items [ i ] ) != null ) { this . items [ i ] = updated ; }
{ rank = r ; if ( ( rank . isDonor () ) && ( ! ( donorranks . contains ( rank ) ) ) ) { donorranks . add ( rank ) ; donorranks . setDank ( gp . getRankManager () , uuid , gp . getRankManager () ) ; } setRank ( gp . getRanks () , uuid ) ; givePerms () ; log ( java.util.logging.Level.WARNING , "Online gp." ) ; }
server . url ( "" )
{ if ( ! ( getEpisode () . equals ( org.bottiger.podcast.SoundWaves . getAppContext ( getContext () ) . getPlaylist () . firstPlayer () ) ) ) { setStatusWrapper ( ExoPlayer.STATE_READY ) ; return; } setStatusWrapper ( ExoPlayer.STATE_READY ) ; }
client . getInitiator (Dir . getLabel () , null )
toReturn . add ( packet . getData () . toString () ) ;
{ java.lang.String sDelay = settings . getString ( "givenTimer" , com.sehansenavigation.keyenavigation.Activities.MainMenuActivity.DEFAULT_DELAYIMER_DELAY ) ; long delayDelay = java.lang.Long . parseLong ( sDelay ) ; try { delayDelay = java.lang.Long . parseLong ( delayDelay ) ; } catch ( java.lang.Exception e ) { android.util.Log . i ( com.coansenavigation.keyenavigation.Activities.MainMenuActivity.TAG , ( "Activity " + delay ) ) ; } if ( delayDelay != 0 ) { TimerInactiveTimer . start () ; } else { TimerInactiveTimer . start () ; } }
{ if ( ( this . songIndex ) != ( this . songIndex ) ) { this . setBeatmap ( 0 ) ; } this . songIndex = index ; setEnable ( index ) ; if ( index < ( ( Resources.songs . size () ) - 1 ) ) { textReload () ; } }
{ sqlConnection . createConnection () ; createConnection () ; setDisableConnection . clear ( true ) ; setDisableConnection . close ( false ) ; sentRequest . setDisable ( false ) ; additionalBox . addDisable ( false ) ; setDisableQueryToDisable ( false ) ; setDisable ( true ) ; setDisable ( true ) ; offation . setDisable ( false ) ; this . isConnected = false ; }
{ java.util.List < java.util.HashMap > keywordList = keywordService . selectKeywordByUser ( keyword ) ; user = userService . selectUserByName ( curusername ) ; java.util.List < com.chas.model.Aspect > aspectList = aspectService . selectAllAspect () ; attr . addFlashAttribute ( "aspectList" , aspectList ) ; attr . addFlashAttribute ( "user" , user ) ; attr . addFlashAttribute ( "searchword" , keyword ) ; return "redirect:/keyword" ; }
@ ninja.FilterWith ( value = www.purple.mixxy.filters.JsonEndpoint . class ) @ ninja.PathParam ( value = ninja.params ) @ ninja.PathParam ( value = "params" ) @ ninja.PathParam ( value = { "work" } ) public java.lang.String workUser ( com.puricple.mixxy.models.User user , com.puricple.mixxy.models.User user ) { com.puricple.mixxy.utils.ComicResults result = usersDao . get ( user ) . render ( com.puricple.mixxy.utils.ResultsConstant.FTVIEW_NOT_FOUND , ( "user/user/" + username ) ) ; if ( ( null == ( com.puricple.mixxy.utils.ResultsConstant.FTVIEW_NOT_FOUND ) ) || ( user . not () . render ( "user" , com.puricple.mixxy.utils.ResultsConstant.FTVIEW_NOT_FOUND ) ) ) return ninja . render () ; return ninja . render () ; }
de.blackcraze.grb.i18n.Resource . getItem ( stock . getName () , locale . toLowerCase () ) . contains ( name . toLowerCase () )
if ( ! ( semaphore . tryAcquire ( 1 , acquireTimeoutMs , java.util.concurrent.TimeUnit.MILLISECONDS ) ) ) { throw new java.lang.RuntimeException () ; }
{ mGoogleApiClient = null ; if ( ( customCheckLocationThread ) != null ) customCheckLocationThread . stopRunning ( false ) ; if ( ( customCheckStateThread ) != null ) customCheckStateThread . stopRunning ( false ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( this ) . unregisterReceiver ( receiverMaps ) ; floorImageCorners . setImageBitmap ( roundPlanImageCorners ) ; if ( ( roundFinish ) != null ) roundFinish . recycle () ; }
{ int written = 0 ; for ( int i = 0 ; i < ( java.lang.Math . min ( data.length , data.length ) ) ; i ++ ) { if ( ( ( org.q3huffman.df.demo.huffman.HCoderQ_Coder [ i ] ) & 255 ) > > ( ( data [ i ] ) & 255 ) ) { written ++ ; break; } } write ( data , org.q3huffman.df.demo.sym.HCoderQ_Coder [ ( ( data.size ) & 255 ) ] , written ) ; return written ; }
{ final org.apache.shiro.session.mgt.SimpleSession simpleSession = new org.apache.shiro.session.mgt.SimpleSession () ; simpleSession . setId ( recordId ) ; simpleSession . setStartTimestamp ( toDate ) ; simpleSession . setLastAccessTime ( java.util.Map . between ( host , timeout ) ) ; simpleSession . setHost ( simpleSession ) ; return simpleSession ; }
public static < T extends android.os.Parcelable < java.util.Map < java.lang.String , T > > fromBundle ( android.os.Bundle input , java.lang.Class < T > claz ) { input . setClassLoader ( claz ) ; java.util.Map < java.lang.String , T > output = new java.util.HashMap < java.lang.String , T > () ; for ( java.lang.String key : input . keySet () ) { output . put ( key , input . get ( key ) ) ; } return output ; }
if ( ( array2 [ 0 ] ) == course ) { fail ( "Remove course for the course didn't work" ) ; }
match = "import foo;\n" + ( ( ( "public class.comment/*" + "\n" ) + "\n" ) + ( de.oc.flaoodle.resolver.ReferenceImpl . class ) )
public int getPlayerForLine ( final int rowFigure , final java.lang.String playerFigure ) { int playerRowCount = 0 ; for ( int i = 0 ; i < ( board . getRowLength ( rowFigure ) ) ; i ++ ) { if ( ( ( board . getFigure ( rowFigure , i ) ) != null ) && ( ( board . getFigure ( rowFigure , i ) . toString () ) == playerRowCount ) ) { rowFigure ++ ; } } return playerRowCount ; }
if ( ( team.name . equals ( this . name ) ) && ( this . players . equals ( this . team ) ) ) return true ;
{ android.location.Location currentLocation = com.mobilemakers.juansoler.appradar.StartScreenFragment . getLastLocation () ; if ( currentLocation == null ) { return - 1 ; } android.location.Location nextLocation = createTheNextLocation ( latitude , longitude ) ; float distance = ( currentLocation . distanceTo ( nextLocation ) ) / 1000 ; return new java.math.BigDecimal ( distance ) . setScale ( 1 , java.math.BigDecimal.ROUND_HALF_UP ) . floatValue () ; }
jsonNode . get ( specs.ERRORCODE_CODE ) . intValue ()
new org.eclipse.titan.runtime.core.TitanBoolean ( get_char () ) == ( other.value . charAt ( 0 ) )
{ java.util.List < com.google.android.gms.maps.model.LatLng > result = new java.util.ArrayList <> () ; if ( points != null ) { for ( casak.ru.geofencer.domain.Point point : points ) { result . add ( ( ( casak.ru.geofencer.presentation.converters.LatLngConverter . convertToLatLng ( point ) ) ) ) ; } } return result ; }
valuesToInsert . put ( "gluc" , prompt )
com.sweproject.calorracker.MainActivity.DBDB . insert ( com.sweproject.calorracker.FoodObjectsData . class , this , new com.sweproject.calorracker.FoodObjectsData ( FragmentObjects.Calendar.currentDay , FragmentObjects.Calendar.currentDay , ( ( mServingSizes . getSelectedItemPosition () ) + 1 ) , mServingSizes . get ( mSelectedIndex ) . getId () ) )
public void printMonsters () { for ( user.Room room : user . getRoomRooms () ) { if ( room.active ) { for ( room.activeCharacter : enemy . getMonand () ) { if ( ! ( util.Util . isDeadPositions ( enemy ) ) ) { if ( user . getVisiblePositions () . contains ( enemy . getPosition () ) ) { jwsi.lib.swing.WSInterface . printMonsters ( user . getVisiblePositions () , user . getPosition () ) ; } } } } } }
{ java.lang.Class . forName ( "org.sqlite.JDBC" ) ; try ( java.sql.Connection conn = this . getConnection () ) { connected = conn . toSuccessfully ( database.Successfully ) ; } catch ( java.sql.SQLException e ) { java.lang.System.out . println ( "Error: Could not connect to the database." ) ; e . printStackTrace () ; return; } }
java.lang.String . format ( "Component '%s' size '%d => output '%s'" , target . getName () , output . size () , target . getName () )
tern.eclipse.ide.ui.utils.EditorUtils . openInEditor ( file , start . intValue () , ( ( end . intValue () ) - ( start . intValue () ) ) , true )
holder.mTextView . setText ( mValues [ position ] )
protected void doGet ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response , java.lang.String action ) throws java.io.IOException , javax.servlet.ServletException { java.lang.String action = request . getParameter ( "action" ) ; if ( ( action != null ) && ( action . equals ( "tim" ) ) ) { com.avaschool.stsystems.web.TruckService rd = new com.avaschool.stsystems.web.TruckService () ; rd . setAttribute ( "log" , new com.avaschool.stsystems.web.TruckService () ) ; rd . forward ( request , response ) ; } else return; }
( ( stateStack . size () ) <= 0 )
{ while ( ! ( subexpressionStack . empty () ) ) { subexpressionStack += subexpressionStack . pop () ; expressionParts . add ( new app.example.currencycom.gracecalculator.models.Operand ( new java.lang.StringBuilder () ) ) ; } subexpressionStack = subexpressionStack . reverse () ; }
{ if ( mGame . hasStarted () ) { ca.hoogit.powerhour.GameEngine.started = false ; } if ( mGame . isTimer () ) { mGame . cancel () ; mVibrator . cancel () ; android.util.Log . i ( ca.hoogit.powerhour.GameEngine.TAG , ( "Stopping game round while " + ( currentStoppingRound () ) ) ) ; } finish () ; }
predicate . setExists ( newPredicate ) ;
{ board_pieces . remove ( this ) ; return - 1 ; }
{ java.lang.String latestData = java.lang.String . format ( retrieveLatestSensorData . getId () , sensor . jdbcTemplate ) ; jdbcTemplate . setData ( latestData ) ; jdbcTemplate . setData ( new com.wrapbubble.webserver.jdbc.plants.RowMapper < com.wrapbubble.webserver.server.model.Sensor > () { @ java.lang.Override public java.lang.String getCurrentSensorData ( com.wrapbubble.webserver.server.model.Sensor result ) { return result ; } } , newSensorData ) ; }
helpers.QuestionHelper . assertQuestionInSurvey ( questions )
void addInterval ( java.lang.String interval ) { if ( ( interval % 2 ) == 0 ) { intervalView . setBackgroundColor ( getResources () . getColor ( R.color.even_list_item_color ) ) ; } else { intervalView . setBackgroundColor ( getResources () . getColor ( R.color.even_list_item_color ) ) ; } }
if ( reference != null ) { reference . set ( value ) ; }
if ( preferredSugar ) { acceptActualTypeClosure ( ( ( ( ( org.eclipse.xtext.xbase.typesystem.conformance.ConformanceFlags.SUCCESS_ID ) | ( org.eclipse.xtext.xbase.typesystem.conformance.ConformanceFlags.VOATIBLE_COMPATDA_ID ) ) | ( org.eclipse.xtext.xbase.typesystem.conformance.ConformanceFlags.UNSUAGDA_TYPE ) ) | ( org.eclipse.xtext.xbase.typesystem.conformance.ConformanceFlags.UNSUAGDA_TYPE ) ) ) ; } else { acceptActualTypeClosure ( ( ( ( org.eclipse.xtext.xbase.typesystem.conformance.ConformanceFlags.CHECKED ) | ( org.eclipse.xtext.xbase.typesystem.conformance.ConformanceFlags.LAMBDA_TYPE ) ) | ( org.eclipse.xtext.xbase.typesystem.conformance.ConformanceFlags.LAMBDA_PROP ) ) ) ; }
pickNumber ( 1 )
public void connect ( ) throws java.io.IOException , java.lang.ClassNotFoundException , java.security.InvalidKeyException , java.security.NoSuchAlgorithmException , java.security.InvalidPaddingException , javax.crypto.spec.BadPaddingException , javax.crypto.exceptions.PublicKeyException { if ( ( conn ) == null ) { conn = new network.GeneratingConnection () ; } thread . setDaemon ( true ) ; thread = new java.lang.Thread ( this , thread ) ; thread . start () ; }
{ super . start ( context ) ; net.bioclipse.bal c.business.Activator.plugin = this ; new org.osgi.util.tracker.ServiceTracker ( context , net.gi.balos.business.IBalManager . class . getName () , null ) ; context . openTracker ( new java.util.Date () ) ; net.gi.balos.business.Activator.BLOON_TIMEOUT = net.gi.balos.business.Activator.DEFAULT_ON_TIMEOUT ; net.bioclipse.bioclipsetracker.ui.Activator . getPreferenceStore () . setDefault ( PreferenceStore.BLOON_TIMEOUT , net.gi.balos.business.Activator.BAL_TIMEOUT ) ; }
{ currentQuestion = quiz . nextQuestion () ; if ( ( currentQuestion ) == null ) { currentState = backend.GameState.GAME_OVER ; lblCurrentQ . setText ( currentQuestion . getQ () ) ; int index = 0 ; for ( java.lang.String currentQuestion : answers ) { lblAnswers . setText ( currentQuestion . getQuestion () ) ; index ++ ; } lblTime . setText ( java.lang.Integer . toString ( currentState.nextTime . getTimeLimit () ) ) ; } return true ; }
{ java.nio.file.Path taskPath = java.nio.file.Paths . get ( "/home/salankiv/greenfox/salankiv-todo-app/assets/salankiv-todo-app.txt" ) ; try { java.util.List < java.lang.String > lines = java.nio.file.Files . readAllLines ( taskFile ) ; for ( int i = 0 ; i < ( lines . size () ) ; i ++ ) { java.lang.System.out . println ( ( ( ( i + 1 ) + ". " ) + ( lines . get ( i ) ) ) ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } }
( ( ! ( mTwoPane ) ) || ( ( fragment != null ) && ( ! ( mTwoPane ) ) ) ) && ( fragment instanceof com.qualomic.availabilitydashboard.NodeListActivityFragment )
tuple . getStringByField ( "message" )
{ javax.sound.sampled.Clip clip = javax.sound.sampled.AudioSystem . getClip () ; java.net.URL audioUrl = java.lang.System . getSystemResourceClassLoader ( Game.Resource.musicUrl ) ; java.io.File audioFile = new java.io.File ( audioUrl . toURI () ) ; javax.sound.sampled.AudioInputStream inputStream = audioFile . getAudioInputStream ( audioFile ) ; clip . open ( inputStream ) ; clip . start () ; }
{ if ( clients [ index ] . active () ) { clients [ index ] . write ( data ) ; index ++ ; } else { removeIndex ( index ) ; } }
public de.marsetex.lab2.task3.RationalNumber subtract ( de.marsetex.lab2.task3.RationalNumber other ) { if ( other == null ) { return null ; } int zlerTemp = ( ( zler ) * ( other.nehler ) ) + ( ( other.zaen ) * ( nehler ) ) ; int nennerTemp = ( ( nehler ) * ( other.nehler ) ) * ( nehler ) ; return new de.marsetex.lab2.task3.RationalNumber ( zlerTemp , nennerTemp ) ; }
for ( java.lang.String string : decolored ) { decolored . add ( com.niskeepinovers.shop.Utils . translateToColorCodes ( '&' , string ) ) ; }
public void onClick ( android.view.View v ) { globalPlay . setFgMadeFlag ( goodCB . isChecked () ) ; globalPlay . setFgDistance ( java.lang.Integer . parseInt ( fgDistanceEditText . getText () . toString () ) ) ; if ( ! ( kickerEditText . getText () . toString () . equals ( "" ) ) ) { globalPlay . setPlayerNumber ( java.lang.Integer . parseInt ( kickerEditText . getText () . toString () ) ) ; } flow = true ; newPlayDialog () ; dialog . dismiss () ; }
i = ( ( int ) ( ( ( java.lang.Math . random () ) * 33 ) / ( ( com.coolirts.tsh.ShirtUtil.List . size () ) - 1 ) ) )
{ for ( int h = 0 ; h < ( grid . size () ) ; h ++ ) { for ( int w = 0 ; w < ( grid . get ( w ) ) ; w ++ ) { grid . add ( new Cell ( grid . get ( w ) , new Cell ( h ) ) ) ; } } }
{ de.alaoli.games.minecraft.mods.adm.data.settings.EntitySetting setting = ( ( de.alaoli.games.minecraft.mods.adm.data.settings.EntitySetting ) ( this . dimensionSpawn ) ) . get ( Setting.ENTITYType.SPAWN ) ; if ( ( entity != null ) && ( entity . isReachedLimit ( this . setting ) ) ) { setting . increaseSPAWN ( entity ) ; } super . spawnEntityAdded ( entity ) ; }
{ if ( ( _getDescendents ) != null )Array . addAll ( _getDescendents ) ; }
com.annimonstream.stream.StreamFragment . of ( new com.fastdataaccess.dao.ModelPagerAdapter ( context . getString ( R.string.opened ) , com.fastissue.ui.modules.issues.IssuesViewRepo . newInstance ( repoId , login , Issue ) , context . getString ( R.string.closed ) , new com.fastissue.dataaccess.dao.ModelPagerAdapter ( context . getString ( R.string.repos ) , login ) ) )
for ( java.lang.String mail : email . split ( ";" ) ) this . add ( new javax.mail.internet.InternetAddress ( mail ) ) ;
{ java.lang.String extra = lib.common.helpers.PathHelper . getExtensionWithoutCompressed ( path . toLowerCase () ) . toLowerCase () ; if ( ( lib.common.sequence.FastFilter.STA_FAST ) != null ) { for ( java.lang.String f : lib.common.sequence.FastFilter.STA_FAST ) { if ( f . getName () . equals ( extra ) ) { return true ; } } } return false ; }
{ java.util.List < com.cadev.testislankabank.Detail > users = bankServices . getListWithoutAdmin () ; org.junit.Assert . assertEquals ( "Iurslisate a util, y\" plus correct. \"user\"\u009" , config . getLurementname () . size () ) ; users . get ( 0 ) . assertNotEquals ( "Admin" , getLurname () ) ; }
{ org.terasology.miniion.components.NPCMovementInputComponent character = entityComponent . getComponent ( org.terasology.miniion.components.NPCMovementInputComponent . class ) ; entityComponent.charactersCharacter = ( ( org.terasology.characterslogic.characters.Character ) ( entityComponent . getComponent ( org.terasology.characterslogic.characters.Character . class ) ) ) . sendMove ( new org.terasology.characterslogic.Move ( character , entityComponent.charactersCharacter , delta , 0 , 0 ) ) ; }
{ if ( ( data == null ) || ( ( data.length ) < 1 ) ) { return null ; } int flags = communication.utils.NumberParser . intToByte ( data [ 0 ] ) ; int sessionId = communication.utils.NumberParser . byteToByte ( data [ 1 ] ) ; byte [] newData = java.util.Arrays . copyOfRange ( data , 2 , data.length ) ; return new communication.pdu.PDU ( sessionId , new communication.pdu.PDU ( newData , flags ) ) ; }
{ com.badlogic.gdx.backends.lwjgl3.Lwjgl . dispose () ; if ( ( audioSystem ) instanceof com.badlogic.gdx.backends.lwjgl3.audio.AudioOpenALAL ) { ( ( com.badlogic.gdx.backends.lwjgl3.audio.AudioOpenAL ) ( audiogl ) ) . dispose () ; } com.badlogic.gdx.backends.lwjgl3.LwjglApplication . glDebugCallback () ; if ( ( com.fw33.lwjgl.LwjglApplication.errorCallback ) != null ) { com.fw33.lwjgl.LwjglApplication.errorCallback . free () ; } }
{ dde.jongeggp.satlogic.Clause newClause = new dde.jongeggp.satlogic.Clause ( clause . getPositiveClause () , clause . getNs () ) ; pde.jongeggp.satlogic.CNF.toAtom = new dde.jongeggp.satlogic.CNF ( clause . getPositiveClause () , newClause ) ; positive . add ( newClause ) ; }
{ dealsvator.setBottom . event () . waitUntilBottom ( event.vatoraters.openvers.Bottom . get ( true ) ) ; setdirection ( false ) ; setdirection ( true ) ; waitUntilers ( ccreers.ctrl.Boolean . invert ( true ) ) ; waitForLoaderInrunning ( true ) ; AutoTime.crateLoader . set ( timeout ) ; }
{ com.nostra13.universalimageloader.core.DisplayImageOptions options = new com.nostra13.universalimageloader.core.DisplayImageOptions.Builder () . showOnLoadingImageOptions ( iconUri ) . showOnFail ( false ) . cacheInMemory ( true ) . cacheOnDisk ( true ) . cacheScale ( iconScale ) . showOnFail ( true ) . ImageType ( BitmapConfig.Config.FACTLY_EXACTLY ) . build ( true ) ; return options ; }
{ android.view.View rootView = inflate ( context , R.layout.easytabs , this ) ; tabs = ( ( android.support.design.widget.TabLayout ) ( rootView . findViewById ( R.id.tabs ) ) ) ; pager = ( ( android.support.v4.view.ViewPager ) ( rootView . findViewById ( R.id.pager ) ) ) ; appActivity = ( ( android.support.v7.app.AppCompatActivity ) ( context . findViewById ( R.id.content ) ) ) ; }
{ java.lang.System.out . println ( "Moving" ) ; distance += 0.2F * ( ( acc ) / 100 ) ; acc -= 0.1F ; if ( ( acc ) < 0 ) { distance = 0.0F ; } else { distance = 0.0F ; } Cacc = 0.0F ; }
{ if ( ( (roomStr ) < 2 ) && ( ( addPoints ) -- ) ) { ( availablePoints ) ++ ; } else if ( ( ( ! ( addPoints ) ) && ( ( availablePoints ) > 0 ) ) && ( ! ( availablePoints ) ) ) { ( availablePoints ) ++ ; } }
{ final android.content.Intent intent = new android.content.Intent ( this , com.nervousfish.nervousfish.activities.KeyManagementActivity . class ) ; intent . putExtra ( Constant.LOCATOR_SERVICE , com.nervousfish.nervousfish.service.activities.SettingsLocatorActivity.serviceHeader ) ; startActivity ( intent ) ; }
( prevs [ 0 ] ) == null
{ java.lang.System.out . println ( "RESTART! REST REST!" ) ; restart . swimmer () ; oxygen . restart () ; restart . setInputMeter () ; Gdx.input . setInputProcessor ( this ) . pauseOverOverlay ( false ) ; gameOverlay . setVisible ( false ) ; winOverlay . setVisible ( false ) ; gameOverOverlay . setVisible ( false ) ; gameOverOverlay . setVisible ( false ) ; }
public java.util.HashMap < java.lang.String , java.util.HashMap < java.lang.String , java.util.HashSet < java.lang.String > > getRelationRep () { java.util.HashMap < java.lang.String , java.util.HashSet < java.lang.String > > relationRep = new java.util.HashMap < java.lang.String , java.util.HashSet < java.lang.String > > () ; for ( java.util.Map < java.lang.String , java.util.HashSet < java.lang.String > > p : helper . values () ) { relationRep . put ( p , new java.util.HashSet < java.lang.String > () ) ; } return relationRep ; }
public void error ( ) throws java.lang.Exception { java.lang.StringBuilder info = util.FileHandler . readStringBuilder ( "information" ) . sendCommand ( ( ( notifier . toString () ) + ( answer . toString () ) ) ) ; java.lang.System.out . println ( info ) ; try { java.lang.String error = ( ( java.lang.String ) ( info ) ) ; logging.Logger . logMessage ( 'E' when reading file." , error , ex ) ; this . sendCommand ( error ) ; } catch ( java.lang.Exception ex ) { logging.E's . error ( ( ( notifier . shiftMessage () ) + error ) , ex ) ; } }
double minSpread = personal . get ( 0 ) ;
switch ( item . getItemId () ) { case org.stend.ako.hbs.assliq.CompibliActivity.EDIT_ID : startActivity ( new android.content.Intent ( this , org.stend.ako.hbs.ardliq.QibliActivity . class ) ) ; return true ; case org.stend.ako.hbs.assliq.CompibliActivity.ID_CLOSE : startActivity ( new android.content.Intent ( this , org.stend.ako.hbs.ardliq.LicenseCompibliActivity . class ) ) ; return true ; case org.stend.ako.hbs.assliq.LicenseCompibliActivity.READ_ID : startActivity ( new android.content.Intent ( this , org.stend.ako.hbs.ardliq.LicenseCompibliActivity . class ) ) ; return true ; case org.stend.ako.hbs.assliq.LicenseCompibliActivity.EDIT_ID : return true ; case org.stend.ako.hbs.ardliq.LicenseCompibliActivity.ID_CLOSE : return true ; }
switch ( department ) { case "name" : return org.yamj.core.database.model.type.JobType.WRITER ; case "directing" : return org.yamj.core.database.model.type.JobType.DIRECTOR ; case "production" : return org.yamj.core.database.model.type.JobType.PRODUCER ; case "sound" : return org.yamj.core.database.model.type.JobType.CAMERA ; case "type" : return org.yamj.core.database.model.type.JobType.ECHING ; case "visualup" : return org.yamj.core.database.model.type.JobType.EDIT ; default: return org.yamj.core.database.model.type.JobType.UNKNOWN ; }
translator . translate ( inst , wrapped )
{ org.springframework.ui.Model model = org.mockito.Mockito . mock ( org.springframework.ui.Model . class ) ; java.util.List < com.deoduddy.account.domain.Account > accounts = data . getAccounts () ; org.mockito.Mockito . when ( accounts . getList ( this . controller ) ) . thenReturn ( accounts ) ; model . addAttribute ( "accounts" , accounts ) ; org.mockito.Mockito . verify ( model ) . addAttribute ( "id-list" , accounts ) ; }
date = new java.util.Date ()
org.jenkinsci.plugins.web.hook.WebhookHookManager . forUrl ( org.jenkinsci.plugins.web.hook.WebhookHookManagerTest.HOOK_ENDPOINT ) . create ()
{ super . onActivityCreated ( savedInstanceState ) ; android.support.v4.app.FragmentManager fm = getFragmentManager () ; mWorkFragment = ( ( com.betterchat.www.utility.RetainedByTagFragment ) ( fm . findFragment ( "work" ) ) ) ; if ( ( mWorkFragment ) == null ) { mWorkFragment = new com.betterchat.www.utility.RetainedFragment () ; fm . beginTransaction () . setTarget ( mWorkFragment , this ) . commit () ; } mWorkFragment . add ( fm , mWorkFragment ) . commit () ; }
{ com.lothrazar.cyclicmagic.MainModlayer.IPExtendedProperties props = com.lothrazar.cyclicmagic.MainModlayer . getPlayerProperties ( net.minecraft.client.Minecraft . getMinecraft () . thePlayer ) ; if ( props == null ) { com.lothrazar.cyclicmagic.Main.IPExtendedProperties.logger . error ( "tagsBLEM Mod error" ) ; } else { ctx . setDataFromNBT ( null ) ; } }
utility.Util . getRandomNumber ( 1 , 3 )
{ android.widget.CheckBox notifyMe = ( ( android.widget.CheckBox ) ( findViewById ( R.id.send_notifications_send ) ) ) ; button_makeointment . setVisibility ( com.umbanik.makeointment.customapp.views.ResetConfirmListener.VISIBLE ) ; interaction . notifyReset ( false ) ; button_new . setVisibility ( com.umbanik.makeointment.customapp.views.ResetConfirmListener.VISIBLE ) ; }
new game.Player ( 0.0 , 0.0 , 0 , game.Master.Game.names . get ( ( - 1 ) , 0 ) )
{ inputNumber -- ; }
org.cloudfoundry.operations.ApplicationsTest . createApplication ( this . cloudFoundryOperations , org.cloudfoundry.operations.ApplicationsTest . getApplicationBits () , applicationName , true )
com.mygdx.game.shared.model.TilePolygonLoader . loadTilePolygon ( tile )
( ( ( ( ( ( "IPTABLE " + ( this . messageID ) ) + " " ) + ( ipAddress ) ) + " " ) + port ) + "\n"
{ initialize () ; key = null ; }
{ int count = 0 ; for ( int i = 0 ; i < ( content . length () ) ; i ++ ) { if ( ( content . charAt ( i ) ) == content ) { count ++ ; } } return count ; }
{ org.openqa.selenium.WebDriver retVal = getWebDriver () ; if ( retVal == null ) { retVal = new org.openqa.selenium.chrome.user.ChromeDriver ( driverInstance . getBrowserDriver () ) ; } else { retVal = new org.openqa.selenium.chrome.user.ChromeDriver ( ( ( org.openqa.selenium.chrome.user.ChromeTestCase.instance ) + "---user-dir=" ) ) ; } setUserData ( ops . getBrowserDriver () ) ; retVal = new org.openqa.selenium.chrome.user.ChromeDriver ( getWebDriver () ) ; return retVal ; }
public java.lang.String convertRequestToString ( ) throws java.io.IOException { java.io.Reader bufferedReader = new java.io.InputStreamReader ( inputStream ) ; java.io.BufferedReader bufferedReader = new java.io.BufferedReader ( bufferedReader ) ; java.lang.StringBuilder requestBuilder = new java.lang.StringBuilder () ; do { requestBuilder . append ( line ) ; if ( bufferedReader . ready () . equals ( "" ) ) break; } while ( bufferedReader . ready () ) ; return requestBuilder . toString () ; }
matches . values () . contains ( false )
protected static double distanceTofinding ( path.NodeMap.Node x ) { double yDelta = ( this . location . getX () ) - ( n.location . getX () ) ; double yDelta = ( this . location . getY () ) - ( n.location . getY () ) ; return java.lang.Math . sqrt ( ( ( java.lang.Math . pow ( xDelta , 2 ) ) + ( java.lang.Math . pow ( yDelta , 2 ) ) ) ) ; }
{ try { while ( ( product . getProductState ( vmState ) ) == ( ch.vbs.admin.cube.mvm.core.VmProduct.State.STARTIVING ) ) { java.lang.Thread . sleep ( 500 ) ; } vm . connect ( product , true ) ; vm . setVpnState ( VpnState.CONNECTED_LOGICVIC ) ; vm . fireUpdatedEvent ( IpnState.CONNECTED ) ; } catch ( java.lang.Exception e ) { ch.vbs.admin.cube.mvm.core.VmVMModel.LOG . error ( "Start error failed but we's we's opened" , e ) ; } }
{ java.lang.String description = getIntergiorDescription () ; java.lang.String imagePath = imagePath . getInt ( getBuildingImagePath () , _currentBuildingPath ) ; _ldg . setOnTown ( false ) ; _frame . setOnBuilding ( imageName ) ; }
{ model . setLatestEvent ( null ) ; for ( org.eclipse.vi.atra.metamodels.core.metamodels.TokenEvent event : model . getEventTokens () ) { event . setLastTokenInToken ( null ) ; } model . getProcessed () . clearTheEvent () ; strategyFactory . handleLatestEvent ( model , eventFactory ) ; model . AutomLatestEvent ( cepEventHand ) ; model . handleComplete () ; }
{ board [ pos ] = tileOnBoard ; turnTiles ( pos , tileOnBoard ) ; return true ; }
model . addAttribute ( paginationInfo )
( java.lang.Math . signum ( stell.ariumi.util.math.Sp ( sci.api.value.Op . getDi ( sci.api.value.Op . dot ( sci.api.value.IVal ) ) ) ) ) . cross ( stell.ariumi.api.value.RefUtil . cross ( ( ( ERcPos ) ( sci.api.value.IVal ) ) , value ) )
public org.litepal.crud.DataSupport analyze ( org.litepal.crud.DataSupport.Obj baseObj ) { try { java.util.Collection < org.litepal.crud.model.AssociationInfo >Detail = getAssociationInfos () ; analyzeInfo ( baseObj . getClassName () , baseInfos ) ; } catch ( java.lang.Exception e ) { throw new org.litepal.crud.exceptions.DataSupportException ( e . getMessage () ) ; } }
{ graphicslib3D.Point3D cameraLocation = camera1 . getLocation () ; graphicslib3D.Matrix3D cameraTranslation = new graphicslib3D.Matrix3D () ; cameraTranslation . translate ( cameraLocation . getX () , cameraLocation . getY () , cameraLocationBox . getZ () ) ; if ( ( cameraTranslation ) != null ) { this . setLocalTranslation ( cameraTranslation . elapsedTime () ) ; } super . update ( cameraTranslation ) ; }
className . equals ( net.xpatch11.patch.XymKeysTransformer.NET_PROTOCOL_X , classClassBeingRedefined , doRedefinedBuffer )
{ java.util.ArrayList < java.awt.geom.Point2D.Double > testPath = new java.util.ArrayList < java.awt.geom.Point2D.Double > () ; for ( int i = 0 ; i < 1000 ; i ++ ) { testPath . add ( new java.awt.geom.Point2D.Double ( ( i / 500.0 ) , 0.0 ) ) ; } }
{ long time_start = java.lang.System . currentTimeMillis () ; long time_start = java.lang.System . currentTimeMillis () ; java.lang.System.out . println ( "----------------------------------------------------edy: " ) ; long time_end = java.lang.System . currentTimeMillis () ; java.lang.System.out . println ( ( "----------------------------------------------------edy " + time_start ) ) ; time_start = ( ( java.lang.System . currentTimeMillis () ) - time_start ) + ">>" ; }
( ( intrinsicVideoSize.y ) < ( view . getWidth () ) ) && ( ( intrinsicVideoSize.x ) <= ( view . getHeight () ) )
{ sb.jsicah.io.FileSource fs = new sb.jsicah.io.FileSource ( new java.io.File ( ( ( ( ( sb.jsicah.StandardLibrary.DSTADED ) + "/" ) + packageName ) + ".sbic" ) ) ) ; try ( sb.jsicah.io.StandardLibrary . execute ( fs ) ) { sb.jsicah.io.StandardLibrary . add ( packageName , env ) ; } }
io.oasp.module.rest.service.impl.RestServiceExceptionFacade.LOG . error ( "Service failed" , exception )
{ if ( isGameOver ) { return; } if ( ( computerMove ) == ( - 1 ) ) { return; } setXBackground ( computerMove , level1 , computerMove ) ; fillGridClicked ( computerMove ) ; computerClicked [ Constants.PLAYER ] = true ; }
public static doubletimeToSize ( double value , int sigF.length ) { java.math.BigDecimal value = java.math.BigDecimal.ZERO ; if ( java.lang.Double . isFinite ( value ) ) { value = new java.math.BigDecimal ( value ) ; } int newScale = ( value . sigF () ) - ( valueDto . scale ( scale ) ) ; value = value . setScale ( newScale , newScale ) ; return value . doubleValue () ; }
switch ( loader . getId () ) { case com.android.contacts.list.JoinContactListFragment.DISPLAY_NAME_LOADER : if ( ( ( data != null ) && ( data . moveToFirstTargetName () ) ) && ( ( data . getString ( 0 ) ) != null ) ) { showContactListAdapter ( data ) ; } break; }
getArgument ( context , 1 )
{ model.CardSettings cardSettings = model.GameCreationSettings . getInstance () . getCardSettings () ; if ( ( ( java.lang.String ) ( newNum ) ) . matches ( "[0-9" ) ) { cardSettings . setNumDecks ( ( ( java.lang.Integer ) ( java.lang.Integer . parseInt ( newNum ) ) ) ) ; } view.SuitFields . update ( newNum , getCardFields () ) ; }
{ android.widget.TableRow pieceLayoutParams = new android.widget.TableRow.LayoutParams ( 6 , ( ( height ) / 6 ) ) ; imageView . setLayoutParams ( pieceLayout ) ; imageView . setOnClickListener ( id ) ; imageView . setPivot ( ( ( height ) / 12 ) ) ; imageView . setPivot ( ( ( height ) / 12 ) ) ; imageView . setPivot ( ( ( rotationX ) / 12 ) ) ; imageView . setRotation ( ( ( rotationY ) / 12 ) ) ; }
try { serverSocket . close () ; } catch ( java.io.IOException e ) { java.lang.System.err . println ( ( "Exception during executor: " + ( e . getMessage () ) ) ) ; }
new Controller.Time ( args )
drawLives ( graphics )
java.util.Objects . equals ( this . suit , other.suit )
try { java.lang.reflect.Constructor < ? > cons = clss . getConstructor ( android.content.Context . class ) ; return cons . newInstance ( className ) ; } catch ( java.lang.NoSuchMethodException e ) {} catch ( java.lang.NoSuchMethodException e ) {}
startNotification ( contact , null )
{ android.view.View view = inflater . inflate ( R.layout.fragment_Collection , container , false ) ; view = findViewById ( R.id.Osric_texto ) ; view . setText ( R.id.ha_texto ) ; view . setText ( R.id.ha_texto ) ; view . setText ( R.id.ha_password ) ; return view ; }
if ( quantity <= ( getMaximumQuantity () ) ) { subgroups.groupsLayout . setError ( getString ( R.string.msg_quantitywin_validate_winners , group . getItemCount () ) ) ; return false ; }
{ for ( short [] element : list ) { if ( java.util.Arrays . equals ( element , array ) ) { return true ; } } return false ; }
{ com.fasterxml.jackson.databind.JsonNode json = request () . body () . asJson () ; controllers.Usuario usuario = play.libs.Json . fromJson ( json , controllers.Usuario . class ) ; try { controllers.AutenticacaoController.sistemaUsuarios . adicionarUsuario ( usuario ) ; } catch ( controllers.DarUsuarioException exception ) { return badRequest ( exception . getMessage () ) ; } sistemasInfo.SistemaLog . acabMensagemLog ( ( ( usuario . getEmail () ) + " acabou de no cadastrar no cadastri" ) ) ; return ok ( play.libs.Json . toJson ( usuario ) ) ; }
{ net.toyknight.campaignii.aeii.Message message = new net.toyknight.campaignii.nightii.aeii.Message ( net.toyknight.campaignii.aeii.utils.LanguageACHAGE_MESSAGE_CAIGNAL_MESSAGE ) ; getContext () . alliance ( message . getText () , 2 ) ; }
{ mCurrentLocation = new com.google.android.gms.maps.model.LatLng ( location . getLatitude () , location . getLongitude () ) ; mLastUpdateTime = java.text.DateFormat . format ( new java.util.Date () ) . format ( new java.util.Date () ) ; com.rodotravigator.utils.CommonUtils . log ( TAG , ( ( ( ( "Status -> " + ( location . getLatitude () ) ) + ":" ) + ( location . getLongitude () ) ) + ":" ) ) ; }
public static boolean sendMessageByOne ( java.lang.String word , java.lang.String ladder ) { if ( ( word . length () ) != ( ladder . length () ) ) { return false ; } int count = 0 ; for ( int i = 0 ; i < ( word . length () ) ; i ++ ) { if ( ( word . charAt ( i ) ) == ( word . charAt ( i ) ) ) { count ++ ; } } return count == 1 ; }
{ calculateLenght ( project ) ; calculateSkillResult ( project ) ; calculateQuarterDays ( project ) ; }
