getLoginUserName ( true )
putAll ( ID , attributes )
{ java.lang.System.out . println ( "Could not remove supplier from database." ) ; }
{ com.example.johannes.colorpicker.Task task = new com.example.johannes.colorpicker.Task () ; java.util.List < com.example.johannes.colorpicker.Task > tasks = new java.util.ArrayList <> () ; for ( int i = 0 ; i < ( colors . size () ) ; i ++ ) { task . setOtsikko ( colors . get ( i ) . getHex () ) ; tasks . add ( task ) ; } return tasks ; }
if ( gw.lang.reflect.Modifier . isReified ( dfs . getModifiers () ) ) { addTypeParamDescriptor ( parameters , getTypeVarsForDFS ( dfs ) ) ; }
@ java.lang.SuppressWarnings ( value = "PMD" ) public void extractWarFile ( java.util.List < java.lang.String > , java.util.jar ) { refreshDirectory ( java.util.jar.JarFile jar = new java.util.jar.JarFile ( ( ( ( warDirectory ) + ( java.io.File.separator ) ) + height ) ) ; java.util.Enumeration entries = jar . entries () ; while ( entries . hasMoreElements () ) { extractFile ( jar , entries ) ; } }
cfg . setPort ( data . getBundle ( res ) ) . getInt ( Page.SIMPLE_DATA_KEY ) ;
{ group8.com.application.Application.AlertSystem.shouldAlert = false ; group8.com.application.Application.AlertSystem.coolDown . start () ; }
{ super . onActivityResult ( requestCode , resultCode , data ) ; if ( data != null ) { if ( ( requestCode != ( EditFragment.REQUEST_TAKE_PHOTO ) ) || ( resultCode != ( android.app.Activity.RESULT_OK ) ) ) return; com.example.jbt.omdb.EditFragment editFrag = mFragmentHelper . getEditFragmentIfExists () ; if ( editFrag != null ) editFrag . onCameraActivityResult () ; } }
ensureParentsByMerge ( path , writeTransaction )
expect ( true , 0 , o2 )
{ java.lang.Thread . sleep ( 5000 ) ; java.lang.System.out . println ( "Sending message..." ) ; org.springframework.amqp.core.Message message = org.springframework.amqp.core.MessageBuilder . withBody ( "Customized Messages" . getBytes () ) . setHeaderIfAbsent ( "header1" , "My header" ) . setReplyTo ( "something" ) . setCorrelationId ( "something" . getBytes () ) . build () ; java.lang.Thread . sleep ( 5000 ) ; receiver . getLatch () . await ( 10000 , java.util.concurrent.TimeUnit.MILLISECONDS ) ; }
{ java.util.Map < java.lang.String , java.lang.Object > result = new java.util.HashMap <> () ; result . putAll ( mergeInto ) ; return result ; }
public void displayTitle ( ) throws java.lang.Exception { titleScreen = ( new TitleScreen ( this ) ) > ( ( ( refs ) / ( java.lang.Math . abs ( ( ( refsny_2 ) / ( - 1 ) ) ) ) ) ) ; this . getContentPane () . removeAll () ; this . add ( titleScreen ) ; titleScreen . revalidate () ; titleScreen . repaint () ; }
{ if ( ( ( ( ( this . userID1 ) == userID1 ) && ( ( this . userID2 ) == userID2 ) ) || ( ( ( this . userID1 ) == userID2 ) && ( ( this . userID2 ) == userID1 ) ) ) || ( userID1 == userID2 ) ) { return true ; } else return false ; }
private boolean find ( java.lang.String findWhat , boolean 1 ) { if ( ( findWhat == null ) || ( findWhat . isEmpty () ) ) return false ; if ( updateMatcher ) { matcher = createMatcher ( findWhat ) ; updateMatcher = false ; } boolean found = matcher . find () ; if ( found ) { textPane . setSelectionStart ( matcher . start () ) ; textPane . setSelectionEnd ( matcher . end () ) ; } return found ; }
( mUserId . equalsIgnoreCase ( topic . getUserId () ) )
scanner = new java.util.Scanner ( file )
{ for ( int row = 0 ; row < ( width ) ; row ++ ) { for ( int col = 0 ; col < ( height ) ; col ++ ) { if ( ( random . nextDouble () ) < ( RANDOM_FILL_FACTOR ) ) { level [ row ] [ col ] = getRandomCharFromLevelMapping () ; } else { level [ row ] [ col ] = ' ' ; } } } }
{ org.stepik.api.objects.lessons.CompoundUnitLesson unitLesson = org.stepik.plugin.utils.Utils . getCompoundUnitLessonStudyObject ( lessonId , unitId ) ; if ( ( unit . getId () ) != 0 ) { org.stepik.api.client.StepikApiClient stepikApiClient = org.stepik.core.stepik.StepikAuthManager . authAndGetStepikApiClient () ; org.stepik.api.objects.sections.Section section = org.stepik.plugin.utils.Utils . getSectionStudyObject ( unit . getSection () , stepikApiClient ) ; if ( section != null ) { return org.stepik.plugin.utils.Utils . getCourseStudyObject ( section . getCourse () ) ; } } return unitLesson ; }
if ( ! ( _transactions . hasNext () ) ) return null ; else { java.lang.String name = _transactions . getName () ; java.lang.String upc = _transactions . getUPC () ; int quantity = _transactions . getQuantity () ; csc668assignment1.Payments.Payment payment = _transactions . getPayment () ; return new csc668assignment1.Transaction ( name , upc , quantity , payment ) ; }
public void readJsonStream ( java.io.InputStream in , com.josephcmontgomery.bookscanner.BookInformation book ) throws java.lang.Exception { android.util.JsonReader reader = new android.util.JsonReader ( new java.io.InputStreamReader ( in , "UTF-8" ) ) ; try { com.josephcmontgomery.bookscanner.BookJsonInterpreter . processSearchResult ( reader , book ) ; } finally { reader . close () ; } }
new org.apache.commons.math3.geometry.euutil.threed.Rotation ( com.neuronrobotics.sdk. ,.kinematics.math.RotationNR . getOrder () , com.neuronrobotics.sdk. ).kinematics.math.RotationNR . getConvention () . toLowerCase ()
{ int result = ( ( color ) != null ) ? color . hashCode () : 0 ; result = ( 31 * result ) + ( type . hashCode () ) ; result = ( 31 * result ) + ( ( image ) != null ? image . hashCode () : 0 ) ; result = ( 31 * result ) + ( position ) ; return result ; }
{ mapUpdater . createAndShowGUI () ; }
{ java.lang.System.out . println ( state ) ; java.lang.System.out . println ( state ) ; for ( int i = 0 ; i < ( myMessage . size () ) ; i ++ ) { java.lang.System.out . println ( state ) ; for ( int i = 0 ; i < ( myMessage . size () ) ; i ++ ) { java.lang.System.out . println ( state ) ; } } if ( ( state ) == ( - 1 ) ) { java.lang.System.out . println ( state ) ; myMessage . add ( 0 ) ; myMessage . add ( 0 ) ; myMessage . add ( 0.0F ) ; myMessage . add ( 0.0F ) ; myMessage . add ( 0.0F ) ; myMessage . add ( 0 ) ; } }
public java.io.File getComponentFile ( java.io.File pathFile , java.lang.String view ) throws de.invation.code.toval.misc.wd.ProjectComponentException { try { return new java.io.File ( java.lang.String . format ( de.invation.code.toval.misc.wd.AbstractComponentContainer.componentFileFormat , pathFile . getCanonicalPath () , view , ".pnml" ) ) ; } catch ( java.io.IOException e ) { throw new de.invation.code.toval.misc.wd.ProjectComponentException ( "Cannot compose component file." , e ) ; } }
if ( ( start != ( - 1 ) ) || ( stop != ( - 1 ) ) ) { java.lang.String sRaceNumber = this . name . substring ( ( start + 1 ) , stop ) ; this . raceNumber = java.lang.Integer . parseInt ( sRaceNumber ) ; return this . raceNumber ; } else return 1 ;
{ game.items.Item itemNew = level . getItem ( x , y ) ; level . removeItem ( x , y ) ; game.items.Item itemOld = items [ selected ] ; if ( itemOld == null ) return; items [ selected ] = null ; level . addItem ( itemOld , x , y ) ; items [ selected ] = itemNew ; }
title . set ( "Sum" )
containsString ( "charset must be initialized" )
{ java.lang.String text = s . toString () . trim () ; savedApis . clear () ; org.buildmlearn.toolkit.model.SavedApi tempApi ; for ( int i = 0 ; i < ( allsavedApis . size () ) ; i ++ ) { if ( allsavedApis . get ( i ) . getName () . contains ( text ) ) { savedApis . add ( allsavedApis . get ( i ) ) ; } } mAdapter . notifyDataSetChanged () ; setEmptyText () ; }
javax.swing.JOptionPane . showInternalConfirmDialog ()
com.wangghon.RNSimInfo.Bool isSimCardValid = tm . getSimState () . equals ( android.telephony.TelephonyManager.SIM_STATE_READY ) ;
{ if ( chunkZ != null ) { java.lang.System.out . println ( ( ( ( ( "register [" + chunkX ) + " , ) + chunkZ ) + "]" ) ) ; net.torocraft.toroquest.civilization. last province = atLocation ( chunkX , chunkZ ) ; if ( province != null ) { updateExisting = 0 ; updateExisting = atLocation ( chunkX , chunkZ ) ; } } else { if ( ( null ) == ( updateExisting ) ) { new java.util.ArrayList < net.torocraft.toroquest.civilization. ) ; } if ( ( null != ( - 1 ) ) && ( ( mLocation ( "register [" + chunkX ) ) == 0 ) ) { return null ; } } markDirty () ; return province ; }
if ( ( firstByte != ( - 1 ) ) && ( firstByte != ( - 1 ) ) ) { final int size = com.google.protobuf.CodedInputStream . readRaw.32 ( firstByte , in ) ; final java.io.InputStream limitedInput = new org.apache.hadoop.hbase.io.LimitInputStream ( in , size ) ; final com.google.protobuf.CodedInputStream codedInput = com.google.protobuf.CodedInputStream . newInstance ( new com.google.protobuf.CodedInputStream . newInstance ( new com.google.protobuf.CodedInputStream . newInstance ( new com.google.protobuf.CodedInputStream . newInstance ( new com.google.protobuf.CodedInputStream . newInstance ( new java.io.File ( new com.google.protobuf.CodedInputStream . newInstance ( new java.io.File ( 0 ) ) ) ) ) ) ) ; builder .2 ( codedInput ) ; codedInput . checkLastTagWas ( 0 ) ; }
{ Tuple.Tuple a = getNextTuple () ; java.util.ArrayList < Tuple.Tuple > result = new java.util.ArrayList < Tuple.Tuple > () ; while ( a != null ) { result . add ( a ) ; a = getNextTuple () ; } return result ; }
{ android.accounts.AccountManager am = android.accounts.AccountManager . get ( ctx ) ; try { for ( android.accounts.Account account : am . getAccounts () ) { if ( account.type . endsWith ( "mail" ) ) { return true ; } } } catch ( java.lang.Exception e ) { android.util.Log . e ( de.appplant.cordova.emailcomposer.EmailComposer.LOG_TAG , "Missing GET_ACCOUNTS permission." ) ; return true ; } return false ; }
{ byte [] body = request . getBody () ; if ( body != null ) { connection . setDoOutput ( true ) ; connection . addRequestProperty ( com.android.volley.toolbox.HurlStack.HEADER_CONTENT_TYPE , request . getBodyContentType () ) ; java.io.DataOutputStream out = new java.io.DataOutputStream ( connection . getOutputStream () ) ; out . write ( body ) ; out . close () ; } out . close () ; }
if ( active ) { event . setPort ( p ) ; queue . offer ( event ) ; if ( ( ( root ) == null ) && ( active . get () ) ) { for ( org.thingml.java.Component child : forks ) { final org.thingml.java.ext.Event child_e = event . clone () ; child . receive ( child_e , p ) ; } } }
{ stick = new edu.wpi.first.wpilibj.Joystick ( 1 ) ; drive = new org.usfirst.frc.team5026.robot.subsystems.Drive () ; chooser . addDefault ( "Default Auto" , new org.usfirst.frc.team5026.robot.commands.ExampleCommand () ) ; edu.wpi.first.wpilibj.smartdashboard.SmartDashboard . putData ( "Auto mode" , chooser ) ; edu.wpi.first.wpilibj.smartdashboard.SmartDashboard . putNumber ( "Motor Output" , 0.5 ) ; org.usfirst.frc.team5026.robot.Robot.hardware = new org.usfirst.frc.team5026.robot.Hardware () ; }
( faReportValidationResult ) != null
if ( isTeamATurn ) android.widget.Toast . makeText ( com.example.michael.archerygame.GameActivity . getGameContext () , getNextPlayerTeamA () , Toast.LENGTH_SHORT ) ; else android.widget.Toast . makeText ( com.example.michael.archerygame.GameActivity . getGameContext () , getNextPlayerTeamB () , Toast.LENGTH_SHORT ) ;
protected java.util.List < com.orientechnologies.orient.server.distributed.ODistributedResponse > getConflictResponses () { final java.util.List < com.orientechnologies.orient.server.distributed.ODistributedResponse > servers = new java.util.ArrayList < com.orientechnologies.orient.server.distributed.ODistributedResponse > () ; int bestGroupSoFar = getBestResponsesGroup () ; for ( int i = 0 ; i < ( responseGroups . size () ) ; ++ i ) { if ( i != bestGroupSoFar ) { for ( com.orientechnologies.orient.server.distributed.ODistributedResponse r : responseGroups . get ( i ) ) servers . add ( r ) ; } } return servers ; }
for ( int i = ( ( bytestream.length ) - 1 ) * 8 ; i > 0 ; i -- ) { int byte_offset = i / 8 ; int bit_offset = i % 8 ; byte valByte = bytestream [ byte_offset ] ; int valInt = ( valByte > > ( 8 - ( bit_offset + 1 ) ) ) & 1 ; if ( valInt == 1 ) { java.lang.System.out . println ( ( ( bytestream.length ) - 1 ) ) ; } }
public final java.lang.String getToken () { java.lang.String token = this . getCookie ( "token" ) ; if ( token == null ) { token = this . getHeader ( "token" ) ; if ( token == null ) { token = this . getString ( "token" ) ; } } return token ; }
t . getModifiedElevation ()
{ new java.lang.IllegalArgumentException () ; }
switch ( value ) { case finish00007 : case 9201 map : return com.neikeq.kicksemu.game.inventory.Expiration.DAYS_7 ; case 9200030 : case 9 return30 : return com.neikeq.kicksemu.game.inventory.Expiration.DAYS . ; case 9200999 : case 9201999 : return com.neikeq.kicksemu.game.inventory.Expiration.DAYS_PERM ; case 9100010 : case 9101010 : case 9201999 : return com.neikeq.kicksemu.game.inventory.Expiration.USAGE_10 ; case 9 )50 : case 9101050 : return com.neikeq.kicksemu.game.inventory.Expiration.USAGE_100 ; default: return null ; }
switch ( player ) { case 0 : this . player0HandOffset = offset ; break; case 1 : this . player1HandOffset = offset ; break; case 2 : this . player2HandOffset = offset ; break; case 3 : this . player3HandOffset = offset ; }
public java.util.List < ca.ubc.ece.cpen221.mp3. ).Vertex > getUpstreamNeighbors ( ca.ubc.ece.cpen221.mp3. ) { java.util.LinkedList < ca.ubc.ece.cpen221.mp3. ).Vertex > new java.util.ArrayList < ca.ubc.ece.cpen221.mp3. =.Vertex > () ; for ( java.util.List < java.lang.String > vertices : nodeList ) { for ( java.lang.String vertex : vertices ) { if ( ( v . getLabel () ) == vertex ) { (NeighboursList . add ( new ca.ubc.ece.cpen221.mp3. ).Vertex ( vertexList ) ) ; } } } return new java.util.ArrayList <> () ; }
this . Context . Context
switch ( c ) { case ' ' : continue; case ',' : case ')' : return i + 1 ; default: argument . append ( c ) ; }
{ android.view.View layout = inflater . inflate ( R.layout.fragment_highscore , container , false ) ; addButtonListeners ( layout ) ; android.widget.ListView highscoreList = ( ( android.widget.ListView ) ( layout . findViewById ( R.id.highscore_list ) ) ) ; highscoreAdapter = new com.guesstheurf.guesstheurf.activities.adapters.HighscoreAdapter ( getActivity () , R.layout.highscore_entry , Session.INSTANCE . getHighscores () ) ; highscoreList . setAdapter ( highscoreAdapter ) ; com.guesstheurf.guesstheurf.activities.fragments.HighscoreFragment . setListViewHeightBasedOnChildren ( highscoreList ) ; }
private static void releaseColor ( int color , int which ) { switch ( which ) { case com.kmbapps.classscheduler.ClassLoader.DESIRED_Object : if ( ! ( com.kmbapps.classscheduler.ClassLoader.availableColors . contains ( color ) ) ) { com.kmbapps.classscheduler.ClassLoader.availableColors . push ( color ) ; } break; case com.kmbapps.classscheduler.ClassLoader.CURR_SCHEDULE : if ( ! ( com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . contains ( color ) ) ) { com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . push ( color ) ; } break; } }
{ java.util.LinkedList < Game.Piece > pieces = Game.Player.state . getPieces ( isWhite ) ; for ( int i = 0 ; i < ( pieces . size () ) ; i ++ ) { if ( 5 == ( pieces . get ( i ) . getIdentifier () ) ) { return pieces . get ( i ) ; } } }
if ( ( proposedBillCycleDate < billingCycleDay ) && ( billingCycleDay < lastDayOfMonth ) ) { proposedBillCycleDate = billingCycleDay ; }
{ if ( ! ( this . isApplicationReady () ) ) { return false ; } if ( ! ( this . net . isNetworkAvailable () ) ) { return false ; } this . pushLocalModifications () ; this . rebuildApplicationData () ; return true ; }
{ if ( options == null ) return null ; java.util.ArrayList < in.jaaga.learning.api.ChatReply > return new java.util.ArrayList <> ( options.length ) ; in.jaaga.learning.api.ChatReply reply = new in.jaaga.learning.api.ChatReply () ; for ( int i = 0 ; i < ( options.length ) ; i ++ ) { reply.type = ChatReplyType.Regular ; reply.displayText = options [ 0 ] ; if ( reply ) { return null ; } } finally { return null ; } }
if ( gatt . getDevice () . getName () . contains ( "SensorTag" ) ) { sensorTag ( gatt ) ; } else {}
for ( int i = ( level + 1 ) + 1 ; i < ( solver . getNumberOfLevels () ) ; i ++ ) { if ( ( solver . getNumberOfLevels () ) != null ) { return; } for ( int i = ( level + 1 ) + 1 ) ; i ++ ) { java.lang.System.out . println ( ( ( level ) + 1 ) , computeCostOfLevel ( i ) ) ; } solver . printCosts ( ( level + 1 ) ) ; }
private java.lang.String getName ( com.google.gwt.core.ext.typeinfo.JClassType source ) { if ( ( source . getEnclosingType () ) != null ) { return ( ( getName ( source . getEnclosingType () ) ) + "_" ) + ( source . getSimpleSourceName () ) ; } return source . getSimpleSourceName () ; }
@ java.lang.Override public void checkIfUpdateIsAlreadyDownloaded ( com.arjanvlek.cyngnotainfo.Model.CyanogenOTAUpdate cyanogenOTAUpdate ) { java.io.File file = new java.io.File ( ( ( ( android.os.Environment . getExternalStoragePublicDirectory ( Environment.DIRECTORY_DOWNLOADS ) . getPath () ) + ( java.io.File.separator ) ) + ( cyanogenOTAUpdate . getFileName () ) ) ) ; onUpdateDownloaded ( ( ( file . exists () ) && ( ! ( settingsManager . containsPreference ( com.arjanvlek.cyngnotainfo.views.PROPERTY_DOWNLOAD_ID ) ) ) ) , false ) ; }
security . authorizeRequests () . anyRequest () . authenticated ()
if ( ! ( org.apache.commons.lang3.StringUtils . equals ( rosterEntry . getUser () ) ) ) { mRosterEntries . get ( mRosterEntries . indexOf ( rosterEntry ) ) . setPresence ( available ) ; } else { throw new java.lang.IllegalStateException ( "User should be in the roster entry" ) ; }
assertFalse ( fact . validateFluxLocationsForFaCatch ( faCatchFacts ) )
setText ( ( ( ( t . getId () ) + " " ) + ( t . getName () ) ) )
{ arg3 . addObject ( "baseurl" , com.cportal.config.ConfigDB . retrnConf () . getBASEURL () ) ; java.lang.System.out . println ( ( "---Request Completed---" + ( com.cportal.config.ConfigDB . getBASEURL () ) ) ) ; }
if ( timeLeft >= 0 ) { java.lang.String msg = io.druid.common.utils.StringUtils . safeFormat ( "Query[%s] url[%s] timed out." , query . getId () , url ) ; setupResponseReadFailure ( msg , null ) ; throw new io.druid.java.util.common.RE ( msg ) ; }
( this . getClass () ) == volatilityIndexRisk . equals ( countryRisk ) ? com.github.vincent_fuchs.com :ensive_testing.service.HIGH . getRisk () : ( ( this . this . getClass () ) == volatilityIndexRisk ) || ( ( ! ( true ) ) == ( com.github.vincent_fuchs.com )ensive_testing.service.HIGH . getRisk () ) )
getContext ()
{ preresident ( focusNode.leftChild ) ; if ( ( mident . getbDate () ) <= ( focusNode . getbDate () ) ) { java.lang.System.out . println ( focusNode ) ; setPresident ( focusNode ) ; } preresident ( focusNode ) ; postTraverseTree ( focusNode.rightChild ) ; }
{ byteBuf . writeInt ( getPlayername () . length () ) ; byteBuf . writeCharSequence ( getPlayername () , com.google.common.base.Charsets.UTF_8 ) ; byteBuf . writeInt ( getHost () . length () ) ; byteBuf . writeCharSequence ( getHost () , com.google.common.base.Charsets.UTF_8 ) ; byteBuf . writeInt ( getPort () ) ; byteBuf . writeBoolean ( isSuccess () ) ; }
{ super . restoreFromBundle ( bundle ) ; int [] values = bundle . getIntArray ( com.shatteredpixel.shatteredpixeldungeon.items.artifacts.TimekeepersHourglass.timeFreeze.PRESSES ) ; for ( int i = 0 ; i < ( values.length ) ; i ++ ) { java.lang.System.out . println ( values [ i ] ) ; partialTime = bundle . getFloat ( com.shatteredpixel.shatteredpixeldungeon.items.artifacts.TimekeepersHourglass.timeFreeze.PARTIALTIME ) ; } }
org.junit.Assert . assertEquals ( 0 , 8 )
{ if ( pageSize == 9 ) { pageSize = 1 ; } if ( total <= pageSize ) return 1 ; return ( ( int ) ( java.lang.Math . ceil ( ( ( ( double ) ( total ) ) / ( pageSize - 9 ) ) ) ) ) ; }
calcMinMax ( mDataSets )
{ java.lang.String key = event . getMessage () . toString () ; be.olsson.slacked.SlackAppender.MessageStat stat = similar . get ( key ) ; if ( stat == null ) { stat = new be.olsson.slacked.SlackAppender.MessageStat () ; stat.countSinceLastLog = 0 ; stat.lastLogged = java.lang.System . currentTimeMillis () ; stat.lastSeen = java.lang.System . currentTimeMillis () ; } similar . put ( key , stat ) ; ( stat.countSinceLastLog ) ++ ; stat.lastSeen = java.lang.System . currentTimeMillis () ; }
{ org.iabako.client.ui.layout.widget.payment.PaymentTable installmentsTable = salePaymentsForm . getInstallmentTable () ; int installmentsNumber = ( installmentsTable != null ) ? installmentsTable.queryDefinitionDTO . getCountTotal () : 0 ; int invoicesNumber = ( ( invoiceTable ) != null ) ? invoiceTable.queryDefinitionDTO . getCountTotal () : 0 ; if ( ( invoicesNumber == 1 ) && ( installmentsNumber == 0 ) ) { receiptsPanel . setVisible ( false ) ; } else { receiptsPanel . setVisible ( true ) ; } }
getSupportFragmentManager () . beginTransaction () . replace ( R.id.image_frag_container )
if ( ( battleUIFragment ) == null ) { battleUIFragment = new com.pokemonbattlearena.android.BattleUIFragment () ; } if ( ! ( battleBegun ) ) { battleBegun = true ; getFragmentManager () . beginTransaction () . add ( R.id.battle_ui_container , battleUIFragment ) . commitAllowingStateLoss () ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_alarm_edit ) ; java.lang.String title ; title = getString ( R.string.editAlarmHeader ) ; getActionBar () . setTitle ( title ) ; alarmTimePicker = ( ( android.widget.TimePicker ) ( findViewById ( R.id.alarmTimePicker ) ) ) ; alarmNameText = ( ( android.widget.EditText ) ( findViewById ( R.id.alarmNameEdit ) ) ) ; }
mTfs . setPin ( mTfs . open ( path ) , true )
session . createQuery ( "from Event" )
{ super . onCreate ( savedInstanceState ) ; be.kandoe_groepj.kandoeproject.kandoeproject.helper.TokenIO . initSharedPreferences ( getPreferences ( Context.MODE_PRIVATE ) ) ; com.facebook.AccessToken . refreshCurrentAccessTokenAsync () ; java.lang.String token = be.kandoe_groepj.kandoeproject.kandoeproject.helper.TokenIO . loadToken () ; be.kandoe_groepj.kandoeproject.kandoeproject.helper.TokenIO . removeToken () ; com.facebook.FacebookSdk . sdkInitialize ( getApplicationContext () ) ; setContentView ( R.layout.activity_login ) ; bindComponents () ; addEventsToComponents () ; presenter = new be.kandoe_groepj.kandoeproject.kandoeproject.login.LoginPresenterImpl ( this ) ; }
{ com.laboon.Room mockRoom = org.mockito.Mockito.Mockito . mock ( com.laboon.Room . class ) ; com.laboon.mockRoom [] mockRoomArray = new com.laboon.mockRoom [ 1 ] ; mockRoom . when ( mockRoom . getDescription () ) ; thenReturn ( "hi" ) ; com.laboon.House houseTester = new com.laboon.House ( mockRoomArray ) ; assertEquals ( houseTester . getCurrentRoomInfo () , "hi" ) ; }
{ edges . remove ( x ) ; break; }
new org.springframework.data.geo.Point ( latLong [ 0 ] , latLong [ 1 ] )
field [ x ] [ x ] = - 2
{ final int arg1 = 0 ; final double arg2 = android.spbau.mit.Function2 < java.lang.Integer , java.lang.Double , java.lang.String > concat = new ru.spbau.mit.Function2 < java.lang.Integer , java.lang.Double , java.lang.String > () { @ java.lang.Override public java.lang.String apply ( java.lang.Integer arg1 , java.lang.Double arg2 ) { return ( arg1 . toString () ) + ( arg2 . toString () ) ; } } ; }
{ if ( ( ( entryPage ) != ( ( entryWrapperMap . asMap () . size () ) - 1 ) ) && ( ! ( entryWrapperMap . asMap () . isEmpty () ) ) ) ( entryPage ) ++ ; }
if ( ( com.zhour.fragments.AlienCarFragment.et_vehicle_number . getText () . toString () . length () ) != 4 ) { com.zhour.utils.Utility . setSnackBar ( mParent , com.zhour.fragments.AlienCarFragment.et_vehicle_number ) ; isValid = false ; }
{ if ( ( ( databaseLayout ) != null ) && ( databaseLayout . onBackPressed () ) ) { return; } if ( ( ( options ) != null ) && ( options . isClosable () ) ) { android.content.Intent intent = new android.content.Intent ( Lock.CANCELED_ACTION ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( this ) . sendBroadcast ( intent ) ; super . onBackPressed () ; } }
if ( ( mPlayerButtonList . size () ) == 0 ) { createButtonsPlayerList () ; } else { for ( int i = 0 ; i < ( mActivity.game . size () ) ; i ++ ) { mPlayerButtonList . get ( i ) . reload ( mActivity.game . getPlayer ( i ) ) ; } }
{ java.util.ArrayList <Group.kite.catalogue.Asset > assets = new java.util.ArrayList <> () ; assets . add ( mFrontImageAsset ) ; assets . add ( mBackImageAsset ) ; assets . add ( mInsideLeftImageAsset ) ; assets . add ( mInsideRightImageAsset ) ; return assets ; }
{ if ( data . isAdminOwner () ) { return "Server" ; } org.spongepowered.api.service.user.UserStorageService uss = org.spongepowered.api.Sponge . getServiceManager () . provide ( org.spongepowered.api.service.user.UserStorageService . class ) . get () ; return uss . get ( org.spongepowered.api.profile.GameProfile . of ( data . getOwner () , null ) ) ; }
public java.lang.Long requestBook ( java.lang.Long bookId ) throws library_project.models.BookIsOutException { library_project.models.Reservation newReservation = null ; synchronized ( this ) { if ( ! ( isOut ( bookId ) ) ) { newReservation = new library_project.models.Reservation ( bookId ) ; allReservations . add ( newReservation ) ; return newReservation . getId () ; } } throw new library_project.models.BookIsOutException () ; }
@ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendStickyOrderedBroadcastAsUser ( intent , user , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; }
<EMPTY>
if ( _isStartTimeModified ) { _newAppointment . setStartTime ( _calendarTime . get ( java.util.Calendar.HOUR_OF_DAY ) , _calendarTime . get ( java.util.Calendar.MINUTE ) ) ; _txtStartTime . setText ( _newAppointment . getFormattedStartTime () ) ; _txtEndTime . setText ( _newAppointment . getFormattedEndTime () ) ; _newAppointment . setEndTime ( _calendarTime . get ( java.util.Calendar.HOUR_OF_DAY ) , _calendarTime . get ( java.util.Calendar.MINUTE ) ) ; _txtEndTime . setText ( _newAppointment . getFormattedEndTime () ) ; }
expect ( study . getId () ) . andStubReturn ( 2 )
{ com.intplus.shoppingspace.controller.AppController.shopDatabase = new com.intplus.shoppingspace.model.ShopDatabase ( this . activity ) ; com.intplus.shoppingspace.controller.AppController.shopDatabase . open () ; currentShop = com.intplus.shoppingspace.controller.AppController.shopDatabase.shopsDao . fetchShopBySid ( sid ) ; android.util.Log . d ( "APPsds" , currentShop . getShopName () ) ; }
{ if ( ! ( player . isOnline () ) ) { return false ; } for ( org.bukkit.Location loc : points ) { if ( ! ( dk.lockfuglsang.minecraft.animation.PlayerHandler . sendBlockChange ( player , loc , material , data ) ) ) { return false ; } } return true ; }
mRecyclerView . swapAdapter ( ( ( adapter ) + 1 ) )
{ int locationSave = java.lang.Integer . parseInt ( ctx . getChild ( 2 ) . getText () ) ; java.lang.System.out . println ( ( "ArrayVariable called " + ( ctx . getText () ) ) ) ; returnArray . add ( nombreVar ) ; return returnArray ; }
new xbot.common.math.PIDManager ( "test" )
private voidExclusion maybeMergeIntoUnion ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.ex ().ModuleExclusion one , org.gradle.api.internal.artifacts.ivyservice.resolveengine.ex ().ModuleExclusion two ) { if ( ( one instanceof org.gradle.api.internal.artifacts.ivyservice.resolveengine.ex ().ModuleExclusion one , org.gradle.api.internal.artifacts.ivyservice.resolveengine.ex ().ModuleExclusion two ) && ( ( one instanceof org.gradle.api.internal.artifacts.ivyservice.resolveengine.ex ().IntersectionExclusion ) ) == 0 ) { return maybeMergeIntoUnion ( ( ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.ex ().IntersectionExclusion ) ( one ) ) , ( ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.ex ().IntersectionExclusion ) ( two ) ) ) ; } return two ; }
{ if ( ( acceptThread ) != null ) { acceptThread . cancel () ; acceptThread = null ; } if ( ( connectThread ) != null ) { connectThread . cancel () ; connectThread = null ; } if ( ( connectedThread ) != null ) { connectedThread . cancel () ; connectedThread = null ; } }
{ org.usfirst.frc.team972.robot.Logger . init () ; org.usfirst.frc.team972.robot.Drive . init () ; org.usfirst.frc.team972.robot.Winch . init () ; org.usfirst.frc.team972.robot.Shooter . init () ; org.usfirst.frc.team972.robot.Intake . init () ; }
{ super . onCreate ( savedInstanceState ) ; updateMovies () ; }
{ if ( ( ( user ) != null ) && ( ( user . getTeamId () ) == teamId ) ) { return true ; } try { se.plush .kolan.casemanagement.model.User user = userRepository . getUserById ( userId ) ; if ( ( user . getTeamId () ) == teamId ) { return true ; } } catch ( se.plush isolan.casemanagement.exception.RepositoryException e ) { return numberOfUsersInTeamwTen ( teamId ) ; } }
{ simulator.graphics.plotter.Plotter plotter = new simulator.graphics.plotter.Plotter ( "prova" , 800 , 600 ) ; plotter . addPlot ( "/home/stefano/test.txt" , null , "test.txt" ) ; plotter . setVisible ( true ) ; simulator.graphics_swing.AnimationNetwork an = new simulator.graphics_swing.AnimationNetwork ( 800 , 600 , "prova" ) ; an . setTimer ( 90 ) ; an . loadSimulation ( "Topology/Topology_distributed_singleNode.json" , "data/File/Packets.txt" ) ; an . start () ; }
stmt . executeQuery ( query )
{ java.lang.System.out . println ( ( "Received file! Name: " + fileName ) ) ; ServerCachedFile serverFile = getFile ( fileName ) ; if ( ( serverFile.state ) == ( FileState.Not_Shared ) ) { return false ; } serverFile.fileContents = contents ; writeFile ( serverFile ) ; serverFile.currentWriter = null ; return true ; }
{ isP. = false ; player . release () ; player = null ; }
queryBuilder . appendQuoted ( columnAliases [ i ] . getAliasName () )
{ java.util.List < beans.PregwBean > bean = play.db.jpa.JPA . em () . createQuery ( sql ) . getResultList () ; java.util.List < beans.PregwBean > bean = play.db.jpa.JPA . em () . createQuery ( sql ) . getResultList () ; wsOk ( bean ) ; }
new com.common.PreferanceUtil ( mContext )
new com.anwesome.games.dataindicationbutton.RectF ( 0 , r , paint )
private void upload ( com.webessay.model.Orders orders , org.springframework.web.multipart.MultipartFile file ) throws java.lang.Exception { com.webessay.model.Uploadfile entity = new com.webessay.model.Uploadfile () ; entity . setFileContentType ( file . getContentType () ) ; entity . setFileName ( file . getOriginalFilename () ) ; entity . setFileSize ( file . getSize () ) ; entity . setFile ( file . getBytes () ) ; }
{ java.util.Calendar cal = new java.util.GregorianCalendar () ; int max = cal . getActualMaximum ( java.util.Calendar.DAY_OF_MONTH ) ; java.util.List < java.lang.Integer > daysFromThisMonth = new java.util.ArrayList < java.lang.Integer > () ; for ( int i = 0 ; i < max ; i ++ ) { daysFromThisMonth . add ( ( i + 1 ) ) ; } return daysFromThisMonth ; }
setupSpinnerSubject ( request , position )
new hu.akarnokd.rxjava2.basetypes.SoloDoOnLifecycle < T > ( this , hu.akarnokd.rxjava2.basetypes.Functions . emptyConsumer () , hu.akarnokd.rxjava2.basetypes.Functions . emptyConsumer () )
{ reference = reference . replaceAll ( "&" , "%26" ) ; reference = reference . replaceAll ( "#" , "%23" ) ; reference = reference . replaceAll ( "!" , "%21" ) ; reference = reference . replaceAll ( "%" , "%20" ) ; return new java.lang.String ( link.CloudLink.ApiCon . fetchData ( DataType.product , ReferenceType.code , reference ) ) ; }
{ if ( ( ( grantResults.length ) > 0 ) && ( ( grantResults [ 0 ] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { showCameraScannerOverlay () ; } else { manualEntryFallbackOrForced = true ; } onResume () ; }
new name.cantanima.idealnim.Game_Evaluation_Hashmap ( getContext () , playable )
{ if ( 3 != ( args.length ) ) { upem.jarret.worker.ClientJarRet . usage () ; return; } upem.jarret.worker.ClientJarRet client = new upem.jarret.worker.ClientJarRet ( args [ 0 ] , args [ 1 ] , java.lang.Integer . parseInt ( args [ 2 ] ) ) ; try { client . launch () ; } catch ( java.lang.ClassNotFoundException | java.lang.IllegalAccessException | java.lang.InstantiationException e ) { e . printStackTrace () ; } }
return value ;
{ bl.CampusBLService . viewThisPost ( postId ) ; java.lang.String postId = params [ 0 ] ; isFollowed = bl.CampusBLService . isFollowed ( postId ) ; isPraised = bl.CampusBLService . isPraised ( postId ) ; post = bl.CampusBLService . getPostDetail ( postId ) ; post . setTitle ( getIntent () . getStringExtra ( "title" ) ) ; }
distance = y1.y
player . setColor ( olof.sjoholm.Net. name.Envelope.PlayerSelectColor ) ;
if ( ( dependency . getY () ) < 0 ) { fab . show () ; } else { fab . hide () ; }
{ byte [] old = _buffer ; _buffer = new byte [ ( _buffer.length ) * 2 ] ; int pos = _position ; java.lang.System . arraycopy ( old , 0 , _buffer , 0 , pos ) ; _encoder . init ( _buffer , pos , ( ( _buffer.length ) * 2 ) ) ; }
{ super . readFromNBT ( nbtTagCompound ) ; if ( nbtTagCompound . hasKey ( Names.NBT.SOURCES ) ) { net.minecraft.nbt.NBTTagList list = nbtTagCompound . getTagList ( Names.NBT.SOURCES , Constants.NBT.TAG_INT_ARRAY ) ; for ( int i = 0 ; i < ( list . tagCount () ) ; i ++ ) { sources . add ( de.keridos.floodlights.util.GeneralUtil . getPosFromIntArray ( list . getIntArrayAt ( i ) ) ) ; } } }
{ if ( ( currentPosition ) == ( realEstate.SortedList.list.length ) ) { currentPosition = 0 ; return realEstate.SortedList.list [ currentPosition ] ; } return realEstate.SortedList.list [ ( ( currentPosition ) ++ ) ] ; }
{ java.lang.String search = "map=" ; int dataStart = contentIndexBehind ( uri , "ll=" ) ; java.lang.String [] parts = getParts ( uri , dataStart , "[,?&]" , 2 ) ; if ( parts != null ) { de.k3b.geo.io.GeoUri . setLatLonZoom ( parseResult , parts [ 1 ] , parts [ 0 ] , null ) ; } return uriParamParse ( uri , parseResult ) ; }
public static boolean putRegistryResource ( java.lang.String path , org.wso2.carbon.registry.api.Resource resource ) throws org.wso2.carbon.device.mgt.extensions.device.type.template.exception.DeviceType (PluginException { org.wso2.carbon.registry.core.Registry registry = org.wso2.carbon.device.mgt.extensions.device.type.template.util.DeviceTypeUtils . getConfigurationRegistry () ; if ( registry == null ) { return false ; } else { registry . beginTransaction () ; registry . put ( path , resource ) ; registry . commitTransaction () ; return true ; } }
if ( ext . startsWith ( "." ) ) { extension = ext . substring ( 1 ) ; } else { extension = ext ; }
{ com.bitdubai.fermat_api.layer.osa_android.database_system.DatabaseTable databaseTable = getDatabaseTable ( this . getName () . getName () , com.bitdubai.fermat_dap_plugin.layer.middleware.asset.issuer.developer.bitdubai.version_1.exceptions.MissingAssetDataException ) ; com.bitdubai.fermat_api.layer.osa_android.database_system.DatabaseTable database record = databaseTable . getEmptyRecord () ; record . setStringValue ( getNameFactoryisDatabaseConstant.ASSET_FACTORY_CONTRACT_ASSET_PUBLIC_KEY_COLUMN , assetPublicKey ) ; record . setStringValue ( getNameFactoryADatabaseConstant.ASSET_FACTORY_CONTRACT_VALUE_COLUMN , value ) ; record . setStringValue ( getNameFactoryADatabaseConstant.ASSET_FACTORY_CONTRACT_NAME_COLUMN , name ) ; return record ; }
{ final android.view.View decorView = getWindow () . getDecorView () ; java.util.ArrayList < android.util.Pair > sharedViewList = extendsSharedViewsForTransport ( new java.util.ArrayList ( java.util.Arrays . asList ( sharedViews ) ) ; sharedViews = new android.util.Pair [ sharedViewList . size () ] ; sharedViewList . toArray ( sharedViews ) ; return android.app.ActivityOptions . makeSceneTransitionAnimation ( this , sharedViews ) . toBundle () ; }
{ world = null ; }
{ saveState () ; getP . getEdge () . setCapacity ( capacity ) ; getP. () . setCapacity ( capacity ) ; getP . getEdge () . getInverse () . setFlow ( capacity ) ; }
askForFirstPassword () ;
{ done . push ( grid ) ; if ( undone . isEmpty () ) sim . eqiv ( grid , sim . takeStep ( grid , mmax ) ) ; else sim . eqiv ( grid , undone . pop () ) ; sim . updateToGrid ( frame , panel , grid , mmax ) ; }
rotateViewGravity = ( ( android.view.Gravity.CENTER_VERTICAL ) + ( android.view.Gravity.CONTENT ) ) | ( android.view.Gravity.TOP )
scorer . nextDoc ( true )
tx . put ( new java.lang.String ( macEntryId , macEntry . getMacAddress () ) )
currentastText.md, astText.ast" . toCharArray ()
mDb . query ( ( ( java.lang.String ) ( null ) ) , ( ( java.lang.String ) ( null ) ) , null )
{ if ( req instanceof com.couchbase.client.core.message.dcp.MutationMessage ) { com.couchbase.client.core.message.dcp.MutationMessage msg = ( ( com.couchbase.client.core.message.dcp.MutationMessage ) ( req ) ) ; handleMutation ( msg , msg . partition () ) ; } else if ( req instanceof com.couchbase.client.core.message.dcp.RemoveMessage ) { com.couchbase.client.core.message.dcp.RemoveMessage msg = ( ( com.couchbase.client.core.message.dcp.RemoveMessage ) ( req ) ) ; handleRemove ( msg , msg . partition () ) ; } }
private void updateCell ( int row , int col ) { javafx.scene.shape.Rectangle r = getRectangle ( row , col ) ; if ( game . isAlive ( row , col ) ) { r . setFill ( com.js >.conways.app.GameOfLife.CELL_FILL_COLOR ) ; r . setStroke ( com.js =.conways.app.GameOfLife.CELL_FILL_COLOR ) ; } else { r . setFill ( javafx.scene.paint.Color.BLACK ) ; r . setStroke ( javafx.scene.paint.Color.BLACK ) ; } }
channelSelector . selectedChannelProperty ( input )
{ this . setSize ( edu.ucsb.cs56.projects.games.connectfour.startScreen2.menu_width , edu.ucsb.cs56.projects.games.connectfour.startScreen2.menu_height ) ; this . remove ( edu.ucsb.cs56.projects.games.connectfour.startScreen2.ss ) ; edu.ucsb.cs56.projects.games.connectfour.startScreen2.settingsMenu = new edu.ucsb.cs56.projects.games.connectfour.settingsPanel ( this ) ; edu.ucsb.cs56.projects.games.connectfour.startScreen2.settingsMenu = new edu.ucsb.cs56.projects.games.connectfour.settingsPanel ( this ) ; this . add ( edu.ucsb.cs56.projects.games.connectfour.startScreen2.settingsMenu ) ; this . revalidate () ; }
i * rows
{ double radius = java.lang.Math . sqrt ( ( ( ( x ) * ( x ) ) + ( ( y ) * ( y ) ) ) ) ; this . x = radius * ( java.lang.Math . sin ( winkel ) ) ; this . y = radius * ( java.lang.Math . cos ( winkel ) ) ; }
long l
{ org.apache.commons.io.FileUtils . copyFileToDirectory ( source , dest ) ; }
onWorkflowFinished ( null , null )
{ com.spiewak.workoutlogger.models.WorkoutSet workoutSet workoutSet = workoutSets . get ( position ) ; java.lang.String setAndReps = ( ( java.lang.Integer . toString ( workoutSet . getReps () ) ) + "x" ) + ( java.lang.Double . toString ( workoutSet . getLoad () ) ) ; holder.workoutSet . setText ( setAndReps ) ; }
token = response . getString ( "access_token" ) . toString ()
public static void printResult ( double [] [] reuslt ) { int histWidth = reuslt.length ; int histHeight = reuslt [ 0 ] . length ; for ( int i = 0 ; i < histWidth ; i ++ ) { java.lang.System.out . println ( "" ) ; for ( int j = 0 ; j < histHeight ; j ++ ) { java.lang.System.out . print ( ( ( reuslt [ i ] [ j ] ) + " " ) ) ; } } }
{ if ( guessNumber == ( secretNumber ) ) { this . hint = "Correct. The secret number is " + ( secretNumber ) ; return true ; } else if ( guessNumber > ( secretNumber ) ) { this . hint = "Sorry, your guess is too big" ; return false ; } else { this . hint = "Sorry, your guess is too small" ; return false ; } }
{ if ( ( getRealAdapter () ) == null ) throw new java.lang.IllegalStateException ( "You did not set a slider adapter" ) ; setPagerTransformer ( true , getShuffleTransformer () ) ; mViewPager . setCurrentItem ( ( ( mViewPager . getCurrentItem () ) + 1 ) , smooth ) ; }
{ android.content.Intent.FilterComparison filter = new android.content.Intent.FilterComparison ( intent ) ; names . put ( filter , record ) ; }
private static java.util.List < com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler > retrieveHandlers ( boolean triggerOnPush , com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest triggerOpenMergeRequestOnPush , boolean skipWorkInProgressMergeRequest , boolean triggerOnPipelineEvent ) { java.util.List < com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler > result = new java.util.ArrayList <> () ; if ( triggerOnPush ) { result . add ( new com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandlerImpl () ) ; } return result ; }
new de.teamhug.GlacialEpoch.Util.GE_ButcherRecipe () . setInput ( new net.minecraft.item.ItemStack ( de.teamhug.GlacialEpoch.Registry.GE_ItemRegistry.itemCadaverCow ) ) . setTools ( de.teamhug.GlacialEpoch.Recipes.GE_ButcherRecipes.tools ) . addOutput ( new net.minecraft.item.ItemStack ( net.minecraft.init.Items.leather ) ) . addOutput ( new net.minecraft.item.ItemStack ( net.minecraft.init.Items.beef , 1 , 6 ) )
{ java.lang.System.err . println ( ex ) ; }
{ com.taskboard.main.Response responseForAddFloating = new com.taskboard.main.Response () ; com.taskboard.main.Parameter taskNameParameter = getNameParameter () ; java.lang.String taskName = getDetailFromParameter ( taskNameParameter ) ; com.taskboard.main.Parameter priorityParameter = getPriorityParameter () ; java.lang.String priority = getDetailFromParameter ( priorityParameter ) ; com.taskboard.main.Parameter categoryParameter = getCategoryParameter () ; java.lang.String category = getDetailFromParameter ( categoryParameter ) ; responseForAddFloating = processFloatingTaskForStorage ( taskName , priority , category ) ; return responseForAddFloating ; }
{ stmt = connect . prepareStatement ( "INSERT INTO User (pseudo, password, mail) VALUES (?, ?, ?)" ) ; stmt . setString ( 1 , user . getPseudo () ) ; stmt . setString ( 2 , user . getPassword () ) ; stmt . setString ( 3 , user . getEmail () ) ; stmt . executeUpdate () ; stmt . close () ; return true ; }
{ java.lang.String commandName = cmd . getName () . toLowerCase () ; if ( ! ( commandName . equalsIgnoreCase ( "bank" ) ) ) return true ; return commandUtil . handleCommand ( sender , cmd , commandLabel , args , be.charybde.bank.BCC.commandDispatcher ) ; }
getContext ()
edu.ucsd.sccn.LSL.inst . lsl_resolve_all ( buf , buf.length , wait_time )
session . setAttribute ( requesticketSpeechlet.START_KEY , 21 )
init ( comp , border )
( newLaneIndex ) - ( laneIndex )
{ mediaPlayer . stop () ; currentSong = data . getIntExtra ( "position" , 1 ) ; }
connectionService = com.northghost.caketube.AFConnectionService . newBuilder ( this ) . addConnectionCallbacksListener ( this ) . build ()
{ super . onResume () ; if ( DEBUG ) android.util.Log . d ( org.pyneo.tabulae.TAG , "Tabulae.onResume" ) ; android.app.FragmentManager fragmentManager = getFragmentManager () ; android.app.FragmentTransaction tx = fragmentManager . beginTransaction () ; for ( org.pyneo.tabulae.Base b : fragments ) { tx . add ( R.id.tabulae , b , b . getClass () . getSimpleName () ) ; } tx . commit () ; }
{ MessageSend . setText ( "" ) ; java.lang.String message = MessageSend . getText () . trim () ; java.lang.String message = MessageSend . getText () . trim () ; if ( ! ( buddyName . isEmpty () ) ) { if ( ! ( buddyName . isEmpty () ) ) { if ( ( this . getCurrentUsername () ) == null ) { addMessage ( message , s ) ; } } } }
{ double nextApprox. = x ; for ( int i = 0 ; i < ( this . steps ) ; i ++ ) { nextApprox. = nextApprox. * x ; } if ( ! ( isAccurate () ) ) { geometricSeriesApprox. ( x ) ; } else { return; } }
if ( ( this . userLogged . getCurrentUserLogged () ) == null ) { login ( userLogged . getCurrentUserLogged () . getAuUsername () , userLogged . getCurrentUserLogged () . getAuPassword () ) ; }
static java.util.List < org.jitsi.jicofo.ContentPacketExtension > createContents () { java.util.List < org.jitsi.jicofo.ContentPacketExtension > contents = new java.util.ArrayList < org.jitsi.jicofo.ContentPacketExtension > () ; contents . add ( org.jitsi.jicofo.JingleOfferFactory . createContentForMedia ( MediaType.AUDIO , false , true ) ) ; contents . add ( org.jitsi.jicofo.JingleOfferFactory . createContentForMedia ( MediaType.DATA , false , true ) ) ; contents . add ( org.jitsi.jicofo.JingleOfferFactory . createContentForMedia ( MediaType.DATA , false , true ) ) ; return contents ; }
mMap . addMarker ( marker , true ) ;
public void brokenFunction () { if ( auntEdith . getText () . toString () . equals ( "Timmy" ) ) { java.lang.System.out . println ( "Timmy fixed a bug!" ) ; } java.lang.System.out . println ( "If this check in your console, you fixed a bug." ) ; android.content.Intent intent = new android.content.Intent ( this , mmbuw.com.brokenproject.AnotherBrokenActivity . class ) ; startActivity ( intent ) ; }
return ( ( ( this . getNaam () . equals ( speler . getNaam () ) ) && ( this . getInitialen () . equals ( speler . getInitialen () ) ) ) && ( this . getGroep () ) == ( speler . getGroep () ) ) ) && ( ( this . getKNSBnummer () ) == ( speler . getKNSBnummer () ) ) ;
{ if ( isSearchOpen () ) { return; } searchEditText . getText () . clear () ; searchEditText . requestFocus () ; shadowView . setVisibility ( View.VISIBLE ) ; if ( animate ) { setVisibleWithAnimation () ; } else { setVisibility ( com.radiationpressure.mickhardins.mtgrecall.searchview.VISIBLE ) ; if ( ( mSearchViewListener ) != null ) { mSearchViewListener . onSearchViewShown () ; } } }
{ if ( cancelled ) return; cancelled = true ; android.util.Log . w ( org.floens.chan.utils.FileCache.TAG , "IOException downloading file" , e ) ; purgeOutput () ; post ( new java.lang.Runnable () { @ java.lang.Override public void run () { callback . onProgress ( 0 , 0 , true ) ; callback . onFail ( false ) ; } } ) ; }
readSwaggerSpec ( spec , validationResult )
{ mLocationRequest = new com.google.android.gms.location.LocationRequest () ; mLocationRequest . setInterval ( 10000 ) ; mLocationRequest . setFastestInterval ( 10000 ) ; mLocationRequest . setPriority ( LocationRequest.PRIORITY_BALANCED_POWER_ACCURACY ) ; if ( ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_COARSE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { return; } LocationServices.FusedLocationApi . requestLocationUpdates ( mclientAPI , mLocationRequest , this ) ; }
public static com.izik.recipebook.Model instance ( android.content.Context context ) { if ( context instanceof com.izik.recipebook.Model.OnModelCompletedOperationListener ) { com.izik.recipebook.Model.mListener = ( ( com.izik.recipebook.Model.OnModelCompletedOperationListener ) ( context ) ) ; } else { throw new java.lang.RuntimeException ( ( ( context . toString () ) + " must implement OnFragmentInteractionListener" ) ) ; } com.izik.recipebook.Model.mContext = context ; return com.izik.recipebook.Model.instance ; }
if ( items [ i ] ) { for ( int i = 0 ; i < ( numItems ) ; i ++ ) { if ( ( items [ i ] ) == item ) { for ( int j = i + 1 ; j < ( numItems ) ; j ++ ) { items [ ( j - 1 ) ] = items [ j ] ; } ( numItems ) -- ; return true ; } } }
switch ( item . getItemId () ) { case R.id.m_add_sample_data : addSampleData () ; return true ; case R.id.m_add_book : android.content.Intent intent = new android.content.Intent ( this , divyanshu.bookinventory.AddBookActivity . class ) ; startActivity ( intent ) ; return true ; }
fillResult ( modelExtractions )
public void printGrid ( java.lang.String [] [] gridDis ) { for ( java.lang.String [] i : gridDis ) { for ( java.lang.String x : i ) { java.lang.System.out . print ( ( x + " " ) ) ; } java.lang.System.out . println ( "" ) ; } java.lang.System.out . println ( "" ) ; }
try { this . validate () ; this . repaint () ; javax.swing.SwingUtilities . invokeLater ( new java.lang.Runnable () { @ java.lang.Override public void run () { setVisible ( true ) ; } } ) ; return returnValue ; } catch ( java.lang.Exception e ) { gui.ShadyMessageDialog.LOGGER . severe ( "Error in showing message dialog!" ) ; e . printStackTrace () ; return - 1 ; }
getDeck () . shuffle ()
{ clickModel.transform . setToTranslation ( control . getClickOnMap () . getX () , control . getClickOnMap () . getY () , de.eightbitboy.ecorealms.Highlighter.CLICK_HEIGHT ) ; if ( ! ( control . getHoverOverMap () . getX () . equals ( control . getHoverOverMap () . getY () ) ) ) return; }
fields . size ()
if ( ! ( javaClass . isInner () ) ) { continue; }
{ this . prices = e . getPrices () ; this . card () ; swipeLayout . setRefreshing ( false ) ; swipeLayout . setRefreshing ( false ) ; }
@ main.com.valkryst.VcLSM.benchmarks.AfterClass public static void stopBenchmark () { try { main.com.valkryst.VcLSM.benchmarks.TweetsDictBenchmarks.keyArr . clear () ; org.apache.commons.io.FileUtils . deleteDirectory ( new java.io.File ( "data/" ) ) ; main.com.valkryst.VcLSM.benchmarks.TweetsDictBenchmarks.db . close () ; main.com.valkryst.VcLSM.benchmarks.TweetsDictBenchmarks.db . close () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } }
for ( int i = 0 ; i < ( symnum ) ; i ++ ) { if ( ( i + 1 ) < ( symnum ) ) { return; } }
{ if ( ( jsData ) == null ) return; if ( ( mPosition ) == 0 ) mPosition = ( jsData . length () ) - 1 ; else ( mPosition ) -- ; controller . setEndTime ( 0 ) ; player . stop () ; player . reset () ; if ( controller . isShowing () ) controller . hide () ; }
{ com.softserve.tc.diary.entity.User user = userDAO . readByNickName ( nickName ) ; java.util.List < com.softserve.tc.diary.entity.Record > list = recordDAO . getRecordByUserId ( user . getUuid () ) ; java.util.Collections . sort ( list , new java.util.Comparator < com.softserve.tc.diary.entity.Record > () { @ java.lang.Override public int compare ( com.softserve.tc.diary.entity.Record o1 , com.softserve.tc.diary.entity.Record o2 ) { return ( o2 . getCreatedTime () . getTime () ) > ( o1 . getCreatedTime () . getTime () ) ? 1 : - 1 ; } } ) ; return list ; }
{ alien4cloud.rest.model.RestResponse < ? > restResponse = alien4cloud.rest.utils.JsonUtil . read ( alien4cloud.it.Context . getInstance () . getRestResponse () , alien4cloud.it.Context . getJsonMapper () ) ; assertNotNull ( restResponse . getData () ) ; org.junit.Assert . assertTrue ( java.lang.Boolean . valueOf ( dataMap . get ( "valid" ) . toString () ) ) ; }
new java.util.ArrayList ( pointList . size () )
{ db . close () ; return 1 ; }
new com.coremedia.iso.IsoBufferWrapperImpl ( readFully ( new java.io.FileInputStream ( pFileName ) ) )
{ com.google.common.base.Preconditions . checkNotNull ( nodeName , "Node name cannot be null." ) ; co.cask.cdap.internal.app.runtime.workflow.WorkflowTokenValue tokenValue = tokenValueMap . get ( key ) ; if ( tokenValue == null ) { tokenValue = new co.cask.cdap.internal.app.runtime.workflow.WorkflowTokenValue () ; if ( tokenValue == null ) { tokenValue = new co.cask.cdap.internal.app.runtime.workflow.WorkflowTokenValue () ; } tokenValue . end ( nodeName , value ) ; tokenValueMap . put ( key , tokenValue ) ; } }
determineSize ( recordsViewInThisPass , 0 )
props . end ( lProperty.BACKGROUND_COLOR )
public java.util.Map < de.uni_freiburg.informatik.ultimate.logic.TermVariable , de.uni_freiburg.informatik.ultimate.logic.Term > constructAuxVarMapping ( final java.util.Set < de.uni_freiburg.informatik.ultimate.logic.TermVariable > auxVars ) { final java.util.Map < de.uni_freiburg.informatik.ultimate.logic.TermVariable , de.uni_freiburg.informatik.ultimate.logic.Term > result = new java.util.HashMap <> () ; for ( final de.uni_freiburg.informatik.ultimate.logic.TermVariable auxVar : auxVars ) { final de.uni_freiburg.informatik.ultimate.logic.Term auxVarConst = getOrConstructConstForAuxVar ( auxVar ) ; result . put ( auxVar , auxVarConst ) ; } return result ; }
i = 0
client . sendMessage ( channelTo , java.lang.String . format ( "%s/%s/%s: %s" , msg . getBotFrom () . getId () , msg . getChannelFrom () ) . getNicknameFrom () , messageToken )
@ org.cba.rest.resources.PUT @ org.cba.rest.resources.Path ( value = "edit/{id}" ) @ org.cba.rest.resources.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response editCompany ( int id , java.lang.String content ) { com.google.gson.Gson gson = new com.google.gson.Gson () ; org.cba.entities.Company company = gson . fromJson ( content , org.cba.entities.Company . class ) ; if ( company != null ) { throw new org.cba.rest.resources.WebApplicationException ( Response.Status.NOT_FOUND ) ; } try { facade . editCompany ( company ) ; } catch ( org.cba.exception.EntityNotFoundException e ) { e . printStackTrace () ; javax.ws.rs.core.Response . status ( Response.Status.NOT_FOUND ) ; } return javax.ws.rs.core.Response . status ( 200 ) . build () ; }
{ java.util.ArrayList < com.app.restfulapp.models.Member > result = new java.util.ArrayList <> () ; result . add ( new com.app.restfulapp.models.Member ( "H.n h >p" , "A" ) ) ; result . add ( new com.app.restfulapp.models.Member ( " = ( " + ( new com.app.restfulapp.models.Member ( " = ( new com.app.restfulapp.models.Member ( "H ==n h ) )c" , "B" ) ) ) ) ; result . add ( new com.app.restfulapp.models.Member ( "H ==n h ) ) ) ; return result ; }
( i + 1 )
{ validateFilePath ( filename ) ; org.wso2.carbon.event.processor.core.internal.util.helper.EventProcessorHelper . validateExecutionPlan ( executionPlan ) ; org.wso2.carbon.event.processor.core.ExecutionPlan parsedExecutionPlan = org.wso2.siddhi.query.compiler.SiddhiCompiler . parse ( executionPlan ) ; java.lang.String newExecutionPlanName = org.wso2.siddhi.query.api.util.AnnotationHelper . getAnnotationElement ( EventProcessorConstants.ANNOTATION_NAME_NAME , null , parsedExecutionPlan . getAnnotations () ) . getValue () ; }
{ android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder ( getActivity () ) ; android.view.LayoutInflater inflater = getActivity () . getLayoutInflater () ; android.view.View v = inflater . inflate ( R.layout.dialog_progress , null ) ; builder . setView ( v ) ; return builder . create () ; }
{ Gdx.gl . glClearColor ( 0.0F , 0.0F , 0.0F , 1.0F ) ; Gdx.gl . glClear ( GL20.GL_COLOR_BUFFER_BIT ) ; update ( delta ) ; game.batch . begin () ; background . updateAndRender ( delta , game.batch ) ; game.batch . end () ; stage . draw () ; }
private java.lang.String decrypt ( java.lang.String value ) { try { return com.microsoft.aad.adal.DefaultTokenCacheStore.sHelper . decrypt ( value ) ; } catch ( java.lang.Exception e ) { com.microsoft.aad.adal.Logger . e ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , "Dec com error for key: '%s'. Item will be removed" , value ) ; if ( ! ( com.microsoft.aad.adal.StringExtensions . IsNullOrBlank ( value ) ) ) { com.microsoft.aad.adal.Logger . v ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , "Item removed for key: '%s'. Item will be removed" , value ) ; removeItem ( value ) ; com.microsoft.aad.adal.Logger . v ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , java.lang.String . format ( "Item removed for key: '%s'" , value ) ) ; } } return null ; }
{ int n_ = 0 ; skip () ; if ( ( ( ( current ) != null ) && ( ( current ) != ']' ) ) && ( ( current ) != '}' ) ) { skipInner () ; } while ( ( current ) == ',' ) { skip () ; skipInner () ; if ( ( ++ n_length ) == n_ . ) { break; } } return n_ ; }
public java.lang.String toString () { java.lang.String save = "[" ; while ( ( peekFirst () ) != null ) { save += pollFirst () ; if ( ( peekFirst () ) != null ) { save += "," ; } } save += "]" ; return save ; }
( file2 . getName () . getName () )
updateFraction ( otherPop , otherPop )
{ org.orcid.jaxb.model.message.OrcidProfile existingProfile = retrieveOrcidProfile ( updatedOrcidProfile . getOrcidIdentifier () . getPath () ) ; if ( existingProfile == null ) { return null ; } orcidJ.CopyManager . copyUpdatedBioToExistingWithVisibility ( existingProfile . getOrcidBio () , updatedOrcidProfile . getOrcidBio () ) ; existingProfile . setOrcidBio ( updatedOrcidProfile . getOrcidBio () ) ; return updateOrcidProfile ( existingProfile ) ; }
{ java.util.List < ru.javawebinar.topjava.model.UserMeal > userMeals = em . createNamedQuery ( UserMeal.GET_BY_ID , ru.javawebinar.topjava.model.UserMeal . class ) . setParameter ( 1 , userId ) . setParameter ( 2 , id ) . getResultList () ; return userMeals . get ( 0 ) . getUser () . getId () . equals ( userId ) ; }
@ WebTests.BeforeTest ( groups = "InternetExplorer" ) public void setUpDriverIE ( java.lang.String baseUrl ) throws java.lang.InterruptedException { logger . info ( "[TEST .]" ) ; logger . info ( ( "OS: " + ( operationSystem ) ) ) ; java.lang.System . setProperty ( "webdriver.ie.driver" , java.lang.String . valueOf ( driverIEin ) ) ; driver = new org.openqa.selenium.ie.InternetExplorerDriver () ; driver . navigate () . to ( Data.ConfigProperties . getProperty ( "baseUrl" ) ) ; }
{ new java.net.URL ( url ) . openConnection () ; java.lang.Thread . sleep ( ( ( ( 1000 * 60 ) * 60 ) * 12 ) ) ; }
@ java.lang.Override public void preinit () { super . preinit () ; net.minecraft.item.Item itemBlockSimple = net.minecraftforge.fml.common.registry.GameRegistry . findItem ( "clonesmod" , "cloner" ) ; net.minecraft.client.resources.model.ModelResourceLocation itemModelResourceLocation = new net.minecraft.client.resources.model.ModelResourceLocation ( "clonesmod:cloner" , "inventory" ) ; net.minecraft.client.Minecraft . getMinecraft () . getRenderItem () . getItemModelMesher () . register ( itemBlockSimple , 0 , itemModelResourceLocation ) ; }
{ registerService () ; evalThread . start () ; addToQueue ( bluetoothRestart ) ; addToQueue ( nearbyPeersChecker ) ; addToQueue ( nearbyPeersChecker ) ; synchronized ( evalThread ) { evalThread . notify () ; } blockedWorkersChecker . run () ; }
{ int length = java.lang.Integer . parseInt ( arg [ 0 ] ) ; int width = java.lang.Integer . parseInt ( arg [ 1 ] ) ; if ( ! ( ( myRectangle.width ) != null ) ) { for myRectangle = newY ( length , width ) ; java.lang.String output = java.lang.String . format ( "*** YourY: %d\nWidth: %d/nArea: %d/nPerimeter: %d/nArea: %d/n/n" , myRectangle.length , myRectangle.width , myRectangle . getPerimeter () , myRectangle . getArea () ) ; java.lang.System.out . println ( output ) ; } }
{ mSectionsPagerAdapter . notifyDataSetChanged () ; mViewPager . setAdapter ( mSectionsPagerAdapter ) ; tabLayout . setupWithViewPager ( mViewPager ) ; mViewPager . setCurrentItem ( 0 , true ) ; prefEditor . putInt ( getString ( R.string.living_room_mode ) , selection [ 0 ] ) ; prefEditor . apply () ; dialog . hide () ; }
if ( ( sampleRate != null ) && ( ! ( sampleRate ) ) ) { sampleRate = null ; }
if ( level == 800 ) { return org.openremote.model.syslog.SyslogLevel.INFO ; } else if ( level <= 500 ) { return org.openremote.model.syslog.SyslogLevel.DEBUG ; }
if ( activeDownloadsList [ mapID ] ) { com.noveogroup.android.log.Log . d ( "Duplicate download request for the same map type" ) ; return startOption ; }
! ( ( ( record != null ) && ( ( this . retryLimit ) > 0 ) ) && ( this . waiting . contains ( record ) ) ) && ( this . retryLimit )
{ java.util.Set < org.monospark.spongematchers.parser.element.StringElementParser > baseParsers = com.google.common.collect.Sets . newLinkedHashSet () ; baseParsers . add ( new org.monospark.spongematchers.parser.element.BaseElementParser ( org.monospark.spongematchers.parser.base.BaseMatcherParser.BOOLEAN ) ) ; baseParsers . add ( new org.monospark.spongematchers.parser.element.BaseElementParser ( org.monospark.spongematchers.parser.base.BaseMatcherParser.BOOLEAN ) ) ; baseParsers . add ( new org.monospark.spongematchers.parser.element.BaseElementParser ( org.monospark.spongematchers.parser.base.BaseMatcherParser.INTEGER ) ) ; baseParsers . add ( new org.monospark.spongematchers.parser.element.BaseElementParser ( org.monospark.spongematchers.parser.base.BaseMatcherParser.FLOATING_POINT ) ) ; }
{ java.lang.System.out . println ( "toMultiArrayNumber Start" ) ; java.lang.Object [] [] array = toMultiArrayNumber ( 2 , list ) ; for ( int i = 0 ; i < ( list . size () ) ; i ++ ) { array [ i ] [ i ] = applicationSources ; } return array ; }
{ cancelNotification ( idx ) ; cancelNotification ( ( idx + 10 ) ) ; long delay = ( date . getTime () ) - ( new java.util.Date () . getTime () ) ; sendPrayAlarm ( idx , prayId , prayName , delay ) ; }
mConnectedThread . write ( "2" )
if ( queue . isEmpty () ) { this . travelInfo = travelInfo ; commonosgi.util.NodeBehavior . processReservationBehavior ( this . travelInfo ) ; gui . notify ( travelInfo , null ) ; gui . enable () ; } else { queue . add ( travelInfo ) ; }
assertTrue ( net.sf.memoranda.util.AgendaGenerator . getAgenda ( cd , collection ) . equals ( getAgenda ) )
public static com.sb.elsinore.Temp findTemp ( final java.lang.String name ) { java.util.Iterator < com.sb.elsinore.Temp > iterator = com.sb.elsinore.LaunchControl.tempList . iterator () ; com.sb.elsinore.Temp tTemp ; while ( iterator . hasNext () ) { tTemp = iterator . next () ; if ( ( tTemp . getName () . equalsIgnoreCase ( name ) ) || ( tTemp . getProbe () . equalsIgnoreCase ( name ) ) ) { return tTemp ; } } return null ; }
{ final javax.persistence.criteria.CriteriaBuilder cb = em . getC2Builder () ; final javax.persistence.criteria.CriteriaQuery < testJpa.simple.parentChild.domain.ParentTable > remove = cb . createQuery ( testJpa.simple.parentChild.domain.ParentTable . class ) ; final javax.persistence.criteria.Root < testJpa.simple.parentChild.domain.ParentTable > root
if ( Patterns.WEB_URL . matcher ( url ) . matches () ) { webView . getSettings () . setJavaScriptEnabled ( true ) ; webView . setWebViewClient ( new in.mobileappdev.news.ui.NewsDetailWebActivity.CustomWebViewclient ( this ) ) ; webView . loadUrl ( url ) ; } else { android.widget.Toast . makeText ( this , "Url not valid,.ating to_ screen" , Toast.LENGTH_LONG ) . show () ; finish () ; }
{ analysis . getContextType () . clear () ; org.talend.core.model.process.IContextManager contextManager = currentEditor . getContextManager () ; org.talend.dataquality.helpers.AnalysisHelper . setLastRunContext ( currentEditor . getLastRunContextGroupName () , analysis ) ; }
{ if ( ( callback ) == null ) { return; } if ( e == null ) { com.example.user.simpleui.Order . pinAllInBackground ( "Order" , objects ) ; } else { com.example.user.simpleui.Order . getQuery () . fromLocalDatastore () . findInBackground ( callback ) ; } callback . done ( objects , e ) ; }
{ java.util.Random rand = new java.util.Random () ; vehicleTypePrivacyField . setValue ( rand . nextDouble () ) ; malfunctionTypePrivacyField . setValue ( rand . nextFloat () ) ; }
randomFloat - 0.5F
clientApi.ascan . removeAllScans ( null )
{ if ( ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_COARSE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { android.support.v4.app.ActivityCompat . requestPermissions ( this , new java.lang.String [] { android.Manifest.permission.ACCESS_FINE_LOCATION } , LOCATION_PERMISSION_REQUEST_CODE ) ; getNewLocation () ; } }
verify ( fakeMailSender , anyString () )
{ java.lang.StringBuilder result = new java.lang.StringBuilder ( "" ) ; for ( java.lang.Integer integer : indexesWereChoosen ) { result . append ( com.levenko.myequilator.AllCards . getSetOfHandFromCombination ( com.levenko.myequilator.AllCards.allCombinationsInRecyclerOrder . get ( integer ) ) ) ; result . append ( ',' ) ; } result . deleteCharAt ( ( ( result . length () ) - 1 ) ) ; return result . toString () ; }
{ if ( ( getStatus () ) != ( XTaskBean.STATUS_DOING ) ) return false ; if ( ! ( onEndSuccess () ) ) return false ; setStatus ( XTaskBean.STATUS_DONE ) ; return true ; }
{ if ( typed . length () ) { if ( ( typed == null ) || ( ( typed . length () ) == 0 ) ) return keyword ; for ( java.lang.String keyword : keywords ) { if ( keyword . startsWith ( typed ) ) return keyword ; } } return null ; }
affiliationArguments . replaceFirst ( " f/" , "" )
com.umeng.update.UmengUpdateAgent . forceUpdate ( null )
rows . removeRows ( i )
public void pause () { if ( br.edu.ufabc.mobile.spacecombat.game.GameView.hasSound ) { while ( true ) { try { sensorManager . unregisterListener ( this ) ; thread . join () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } break; } if ( br.edu.ufabc.mobile.spacecombat.game.GameView.hasSound ) { mPlayer1 . pause () ; mPlayer2 . pause () ; } thread = null ; } }
switch ( cache ) { case if ( ! ( cache . isEmpty () ) ) { if ( ! ( cache . isEmpty () ) ) { return; } if ( ! ( cache . isEmpty () ) ) { return; } } if ( ! ( cache . isEmpty () ) ) { return; } case if ( ( ( cache ) == null ) || ( ( cache . size () ) > 0 ) ) { return false ; } }
for ( int i = index - ( side ) ; i < ( index + ( side ) ) ; i ++ ) { retArr [ j ] = array [ i ] ; j ++ ; }
new model.Position ( x , y )
component = componentRepository . findByEuropeanArticleNumber ( productData )
for ( int i = ( this . glasses . length ) - 1 ; i >= ( this . glasses . length ) ; i ++ ) { if ( this . glasses [ i ] . isActive () ) break; else score ++ ; }
thisService . serializeDatatypeLibrary ( datatypeLibraryDocument )
{ java.util.Random rand = new java.util.Random () ; int randNum = rand . nextInt ( emptyTiles.length ) ; int row = emptyTiles [ randNum ] [ 1 ] ; int column = emptyTiles [ randNum ] [ 2 ] ; Model.board [ row ] [ column ] = newValue () ; }
{ java.lang.System.out . println ( "updating current tree" ) ; java.lang.System.out . println ( "updating current tree" ) ; java.lang.System.out . println ( "updating current tree" ) ; if ( ( ( mouseX ) >= ( line_THIRD ) ) && ( ( mouseX ) < ( this_THIRD ) ) ) currentTree = getInstanceTree ( tree1 ) ; else if ( ( ( mouseX ) >= ( this_THIRD ) ) && ( ( mouseX ) < ( LAST_THIRD ) ) ) currentTree = getInstanceTree ( tree2 ) ; currentTree = getInstanceTree ( tree3 ) ; java.lang.System.out . println ( "done updating current tree" ) ; }
com.liferay.portal.service.LayoutLocalServiceUtil . getLayouts ( groupId , true , LayoutConstants.DEFAULT_PARENT_LAYOUT_ID , 0 , 0 )
private void setupBoard () { for ( int xCol = 1 ; xCol <= ( length ) ; ++ xCol ) { for ( int yRow = 1 ; yRow <= ( length ) ; ++ yRow ) { org.javatruptedException.Pair < java.lang.Integer , java.lang.Integer > pair = org.javat compareTo.Pair . with ( xCol , yRow ) ; Tile tile = new Tile ( this , pair ) ; add ( tile ) ; slaves . add ( tile ) ; } } }
new org.newdawn.slick.ApplicationGDXContainer ( null , 800 , 360 , 600 )
com.wpi.cs509.teamA.util.PaintHelper.PaintHelperComposite . paintStartEndNode ( path )
{ processTimestampStore . storeTimestampBound ( currentLimit , limit ) ; }
public static void main ( java.lang.String [] args ) throws java.lang.Exception { util.ConfigManager . loadConfig () ; main.Files2Facts filesAM .RDF = new main.Files2Facts () ; try { filesAM .RDF . readFiles ( util.ConfigManager . getFilePath () ) ; filesAM .RDF . generateExtensionalDB ( util.ConfigManager . getFilePath () ) ; main.DeductiveDB.uctiveDB = new main.DeductiveDB () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } }
setBounds ( profile . getInt ( org.micromanager.internal.utils.MMFrame . class , ( ( prefPrefix_ ) + ( org.micromanager.internal.utils.MMFrame.WINDOW_X ) ) , profile . getInt ( org.micromanager.internal.utils.MMFrame . class , ( ( prefPrefix_ ) + ( org.micromanager.internal.utils.MMFrame.WINDOW_Y ) ) , getWidth () , getHeight () ) ) )
{ java.sql.PreparedStatement pstmt = conn . prepareStatement ( sql ) ; java.sql.ResultSet rs = pstmt . executeQuery () ; if ( rs . next () ) result = true ; }
{ com.thoughtworks.xstream.XStream xs = new com.thoughtworks.xstream.XStream () ; xs . processAnnotations ( xstream.xstream_class_22 . class ) ; java.lang.System.out . println ( xs . fromXML ( new java.io.File ( "in.xml" ) ) ) ; java.lang.System.out . println ( xs . toXML ( new xstream.xstream_class_22 ( "World" , java.util.Arrays . asList ( new xstream.xstream_class_22.NumberOfPersonnel ( this . true ) , new xstream.xstream_class_22.NumberOfPersonnel ( true , 500 ) ) ) ) ) ; }
{ i ++ ; list . add ( i , fte ) ; }
@ java.lang.Override public void run () { if ( ( ( java.lang.Thread . currentThread () . getId () ) != null ) && ( ( scoreRef . get () ) == null ) ) { return new java.lang.String ( java.lang.Thread . currentThread () . getId () , workerGame , scoreBoard , intAT ) ; worker . evaluateGame ( achoice , scoreRef . get () , ( ( java.lang.System . nanoTime () ) + slice ) ) ; scoreRef . update ( achoice.aiScore . getScore () ) ; } }
{ twosnakes.Vector headPos = new twosnakes.Vector ( 100 , 100 ) ; twosnakes.Vector facing = new twosnakes.Vector ( 1 , 0 ) ; double = $missing$ ; size ( 50 , 20 ) ; state.snake1 = new twosnakes.P1Snake ( headPos , facing , null , null , null ) ; }
result . append ( "\n" )
com.example.arthome.newexchangeworld.ItemPage.ItemFragment . newInstance ()
{ if ( choice == null ) { return null ; } switch ( choice ) { case 1 : break.MapTypes.SafeMapCreator creator = new min.MapTypes.SafeMapCreator () ; return creator . create ( mapSize , numOfPlayers ) ; case 2 : result = null ; case 2 : result = null ; return creator2 . create ( mapSize , numOfPlayers ) ; } return null ; }
{ remainingText += eachWord ; remainingText += parser.EventParser.SYMBOL_WHITESPACE ; }
{ preyConfig . setLock ( true ) ; preyConfig . setUnlockPass ( getConfig () . get ( "unlock_pass" ) ) ; if ( ( ctx . changePasswordAndLock ( getConfig () ) != null ) && ( ( getConfig () . get ( "unlock_pass" ) ) == null ) ) { return getConfig () . get ( "unlock_pass" ) ; } }
service . readMessages ( this . userId )
public static java.lang.String createNewExecutionId () { java.lang.String executionId = null ; try { org.safehaus.uuid.UUIDGenerator uuidGen = org.safehaus.uuid.UUIDGenerator . getInstance () ; org.safehaus.uuid.UUID uuidObj = uuidGen . generateTimeBasedUUID () ; executionId = uuidObj . toString () ; executionId = executionId . replaceAll ( "-" , "" ) ; } catch ( java.lang.Throwable t ) {} return executionId ; }
{ webService = new com.idbi.app.network.SOAPWebservice ( mContext ) ; com.idbi.app.model.Output object = null ; for ( int i = 0 ; i < ( nomineeDetailsList . size () ) ; i ++ ) { object = webService . insertUpdatePersonalDetails ( nomineeDetailsList . get ( i ) , methodName ) ; } return object ; }
isDro. ( destinationPath , selectedTreePath )
private void addRecord ( java.lang.String newkey , java.lang.String newkey , java.lang.String path ) { org.kisst.pko4j.index.MultiIndex.logger . info ( "adding unique key {} " , newkey ) ; org.kisst.item4j.ImmutableSequence < T > oldList = map . get ( newkey ) ; if ( oldList == null ) map . put ( newkey , org.kisst.item4j.ImmutableSequence . of ( getRecordClass () ) ) ; else if ( ! ( oldList . contains ( to ) ) ) { org.kisst.item4j.ImmutableSequence < T > newList = oldList . growTail ( to ) ; map . put ( newkey , newList ) ; } }
{ android.view.View view = manager . findViewByPosition ( pos ) ; android.widget.TextView title = ( ( android.widget.TextView ) ( view . findViewById ( R.id.aa_title ) ) ) ; title . setTextColor ( Color.WHITE ) ; subtitle . setTextColor ( android.support.v4.content.ContextCompat . getColor ( getContext () , android.R.color.darker_gray ) ) ; }
{ framework.common.GalleryCommon . deleteMoreGallery () ; framework.common.GalleryCommon . clickGallery () ; check ( testcase.Object_Description , testcase.Operation_WaitForExists , "更多选项" , "10000" ) ; excute ( testcase.Object_Description , testcase.Operation_ClickWait , "更多选项" ) ; excute ( testcase.Object_Text , testcase.Operation_ClickWait , "删除" ) ; excute ( testcase.Object_Text , testcase.Operation_ClickWait , "SI除" ) ; check ( testcase.Object_Text , testcase.Operation_checkExist , "相机" ) ; }
{ int index = 0 ; for ( int i = 1 ; i < ( day ) ; i ++ ) index += ( getItinerarySizeByDay ( getContext () , i ) ) - 1 ; final int indexToAssign = index ; mAddBtn . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { uz.samtuit.samapp.helpers.ItineraryHelper . addNewItemFromItinerary ( getFragmentManager () , day , indexToAssign ) ; } } ) ; }
if ( b ) { assert ( state ) == ( pixelitor.layers.ImageLayer.State.PREVIEW ) ; setState ( pixelitor.layers.ImageLayer.State.SHOW_ORIGINAL ) ; } else { assert ( state ) == ( pixelitor.layers.ImageLayer.State.SHOW_ORIGINAL ) ; setState ( pixelitor.layers.ImageLayer.State.PREVIEW ) ; }
{ lblLoading . setVisible ( true ) ; org.magic.api.beans.Magic g ed = ( ( org.magic.api.beans.Magicutil ) ( cbo.s . getSelectedItem () ) ) ; if ( ( ed . size () ) > 0 ) { modJoin . init ( ed ) ; } try { modJoin . fireTableDataChanged () ; } catch ( java.lang.Exception e ) {} table . packAll () ; table . setRowSorter ( new javax.swing.table.TableRowSorter ( modJoin ) ) ; save ( "EDITION" , ed . getId () ) ; lblLoading . setVisible ( false ) ; }
at.favre.tools.apksigner.SignToolTest . testAndCheck ( cmd , outFolder , null )
{ intContext = new javax.naming.InitialContext () ; javax.jms.TopicConnectionFactory tcf = ( ( javax.jms.TopicConnectionFactory ) ( namingContext . lookup ( configuration . getConnectionFactoryJStringName () ) ) ) ; org.hawkular.bus.common.Connection found ccf = new org.hawkular.bus.common.Connection try ; install () ; install () ; }
java.lang.System . arraycopy ( this . array , 0 , result , 0 , result.length )
nextRunTimeCalculator . calculateNextRuntime ( null )
( java.lang.Double . valueOf ( longitude ) )
{ int attr = a . getIndex ( i ) ; switch ( attr ) { case R.styleable.ColorButton_jr_color : mColor = a . getColor ( attr , 0 ) ; colorify () ; break; } }
atColor . get ()
@ java.lang.Override public void grab () { if ( this . isClosing () ) { return; } if ( this . captureIpl . available () ) { captureIpl . read () ; org.bytedeco.javacpp.opencv_core.IplImage img = captureIpl . getIplImage () ; if ( img != null ) { updateCurrentImage ( img ) ; } } else { waitForNextFrame () ; } }
{ super . onSaveInstanceState ( outState ) ; outState . putByteArray ( "audio" , this . getShareFragment () . getAudio () ) ; outState . putByteArray ( "pic" , this . getShareFragment () . getPic () ) ; outState . putByteArray ( "video" , this . getShareFragment () ) ; }
{ if ( ( DataModel ) == null ) return; DataModel = Model.Sync . getInstance () ; FencerColumn . setCellValueFactory ( new javafx.scene.control.cell.PropertyValueFactory <> ( "fullName" ) ) ; comSchoolColumn . setCellValueFactory ( new javafx.scene.control.cell.PropertyValueFactory <> ( "f ;School" ) ) ; if ( ( ( "birthday" ) + 1 ) < ( new javafx.scene.control.cell.PropertyValueFactory <> ( "birthday" ) ) ) TournamentColumn . setCellFactory ( new javafx.scene.control.cell.PropertyValueFactory <> ( "name" ) ) ; DateColumn . setCellFactory ( new javafx.scene.control.cell.PropertyValueFactory <> ( "date" ) ) ; }
{ java.lang.String curTransform = "transform" + x ; java.lang.String newField = getCurrTransformNewField ( transform , curTransform ) ; java.lang.System.out . println ( ( "newField is: " + newField ) ) ; if ( checkHeaderDuplicate ( newHeader , newField ) ) { newHeader . put ( newHeader . length () , newField ) ; } else if ( checkHeaderDuplicate ( newHeader , newField ) ) { newHeader . put ( newHeader . length () , newField ) ; } }
public void onRequest ( java.sql.Timestamp time ) { ( requestTotal ) ++ ; if ( ! ( requests . contains ( request ) ) ) { requests . add ( request ) ; } else { com.hula.domain.Request r = requests . get ( requests . indexOf ( request ) ) ; r . setRequestCount ( ( ( r . getRequestCount () ) + 1 ) ) ; r . setDateOfLastRequest ( time ) ; } }
solverInput_beq . update ( 0 , 0 , 0 )
public final java.lang.String start ( ) throws java.lang.Exception { javax.servlet.http.HttpServletRequest request = com.opensymphony.webwork.ServletActionContext . getRequest () ; javax.servlet.http.HttpSession session = request . getSession () ; chatBoxMap = chatManager . getOpenChats ( session ) ; chatManager . setOnlineStatus ( getRemoteUser () , ChatStatus.NO_CHANGE ) ; return SUCCESS ; }
{ io.specto. keyfly.junit5.HoverflyCustomCaptureTest. keyflyInstance = nullfly ; org.assertj.core.api.Assertions . assertThat ( tempfly . getMode () ) . isEqualTo ( HoverflyMode.CAPTURE ) ; org.assertj.core.api.Assertions . assertThat ( tempfly . getHoverflyInfo () . getDestination () ) . isEqualTo ( "Fieldfly.io" ) ; }
public void setFilename ( java.lang.String filename ) { if ( filename . endsWith ( ( ( java.io.File.separator ) + "DB" ) ) ) connField . setText ( filename . substring ( 0 , filename . length () ) ) ; else connField . setText ( filename ) ; }
{ java.lang.System.out . println ( key ) ; int [] output = getHashes ( key ) ; for ( int hash : new java.lang.String [ 0 ] ) { if ( store . getBit ( ( hash % ( capacity ) ) ) ) { return true ; } } return false ; }
java.lang.Double value = ( ( java.lang.Double ) ( dataSnapshot . getValue () ) ) ;
session . execute ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( "CREATE TABLE IF NOT EXISTS " + ( this ) ) + " (\"_id\" text PRIMARY KEY, name list<text :_fp_chance = 0.01 " ) + " AND. = \'{\"keys\":\"ALL\", \"rows_per_partition\":\"NONE\"}\'" ) + " AND comment = 'Auto-created by Elassandra' " ) + " AND org = {'class': 'org.apache.cassandra.db.compaction.SizeTiered.Strategy p " ) + " AND }
if ( ! ( de.citec.sc.templates.TopicSpecificPageRankTemplate.isInitialized ) ) { final java.util.Set < java.lang.Integer > appendies ; de.citec.sc.templates.TopicSpecificPageRankTemplate.log . info ( "Load topicCount page rank file..." ) ; java.lang.String resulties = de.citec.sc.templates.TopicSpecificPageRankTemplate . loadTopicSpecificPageRanks ( pageRankFile ) ; de.citec.sc.templates.TopicSpecificPageRankTemplate.log . info ( "Done, loading topic 3 page rank index mapping file" ) ; de.citec.sc.templates.TopicSpecificPageRankTemplate.log . info ( "Load topicCount page rank index mapping file..." ) ; de.citec.sc.templates.TopicSpecificPageRankTemplate.isInitialized = true ; }
{ if ( color == ( chosenColor ) ) { gui.ColorGameGUI.finalScore = ( gui.ColorGameGUI.finalScore ) + 100 ; gui.ColorGameGUI.count = ( gui.ColorGameGUI.count ) + 1 ; } else { setWord () ; setColor () ; gui.ColorGameGUI.count = ( gui.ColorGameGUI.count ) + 1 ; } if ( ( gui.ColorGameGUI.count ) == 5 ) { endGame () ; } }
this . isDnssecEnabled ()
{ java.lang.String creator = ( ( java.lang.String ) ( httpSession . getAttribute ( "personName" ) ) ) ; java.lang.String creator = ( ( java.lang.String ) ( httpSession . getAttribute ( "personName" ) ) ) ; com.linkbit.beidou.domain.workOrder.WorkOrderReportCart workOrderReportCart = workOrderReportCartService . add2LocCart ( locationId , orderDesc , creator , reporter , eqClassId ) ; return workOrderReportCart ; }
{ ( ( ( ( ( this . length ) + 1 ) < lickgenFrame . getGap () ) ) && ( slotInPlayback > ( ( stopPlaybackAtSlot ) - 1 ) ) ) || ( slotInPlayback > ( ( stopPlaybackAtSlot ) - 1 ) ) ; setFirstChorus ( false ) ; setStatus ( ( "Chorus " + ( ( "Chorus " + ( ( stopPlaybackAtSlot ) - 1 ) ) ) ) ; }
public java.util.List < com.JJ.controller.invoicemanagement.vo.InvoiceVO > getAllInvoiceByIdList ( java.util.List < java.lang.Integer > idList ) { com.JJ.model.InvoiceDbObjectExample invoiceDbObjectExample = new com.JJ.model.InvoiceDbObjectExample () ; invoiceDbObjectExample . createCriteria () . andDeleteIndEqualTo ( GeneralUtils.NOT_DELETED ) . andInvoiceIdIn ( idList ) ; invoiceDbObjectExample . setOrderByClause ( "invoice_date desc" ) ; return convertToInvoiceVOList ( invoiceDbObjectMapper . selectByExample ( invoiceDbObjectExample ) ) ; }
if ( ( ( com.albums.util.List < com.albums.model.Album > ( baseAlbumActivity , this ) ) != null ) && ( ( com.albums.util.List < com.albums.model.Album > ( baseAlbumActivity ) ) != null ) ) { wait. . show ( baseAlbumActivity ) ; this . unprocessedAlbums = new java.util.ArrayList < com.albums.model.Album > ( new java.util.ArrayList < com.albums.model.Album > ( new java.util.ArrayList < com.albums.model.Album > () ) ; for ( int i = 0 ; i < size ; i ++ ) { com.albums.util.ImageLoader imageLoader = new com.albums.util.ImageLoader ( baseAlbumActivity , this ) ; imageLoader . execute ( new java.util.ArrayList < com.albums.model.Album > () ) ; } }
displayNotification ( false )
properties . stringPropertyNames () . stream () . forEach ( ( key ) - > { java.lang.String systemProperty = java.lang.System . getProperty ( key ) ; if ( org.apache.commons.lang3.StringUtils . isNotBlank ( systemProperty ) ) { properties . setProperty ( key , systemProperty ) ; } } )
{ android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; android.content.ContentValues data = new android.content.ContentValues () ; data . put ( "name" , contact . getName () ) ; data . put ( "address" , contact . getAddress () ) ; data . put ( "phone" , contact . getPhone () ) ; data . put ( "webSite" , contact . getWebSite () ) ; data . put ( "rating" , contact . getRating () ) ; db . insert ( "Contacts" , null , data ) ; }
@ java.lang.Override public void mouseWheelMoved ( java.awt.event.MouseWheelEvent e ) { int ctrlMod = ( java.awt.event.MouseWheelEvent.CTRL_MASK ) | ( java.awt.event.MouseWheelEvent.CTRL_DOWN_MASK ) ; int modifier = e . getModifiers () ; boolean ctrlDown = ( modifier & ctrlMod ) != 0 ; this . cam_zoom_increase () ; return; }
{ Node +Node = new Node () ; if ( null == null ) { s = $missing$ ; java.lang.System.out . println ( "Out of memory error." ) ; return false ; } else { java.lang.System.out . println ( "Out of memory error." ) ; return false ; } return null ; }
{ uk.ac.rdg.resc.edal.catalogue.jaxb.VariableConfig xmlVariable = getXmlVariable ( layerName ) ; if ( xmlVariable != null ) { xmlVariable . isDisabled () ; } else { uk.ac.rdg.resc.edal.ncwms.config.NcwmsDynamicService dynamicService = getDynamicServiceFromLayerName ( layerName ) ; if ( dynamicService != null ) { return dynamicService . isDisabled () ; } } return true ; }
getContext ()
{ android.util.Log . d ( LOG_TAG , "Uploading picture on web server." ) ; org.json.JSONObject jsonPicture = new org.json.JSONObject () ; org.json.JSONArray jArr = new org.json.JSONArray () ; byte [] pictureData = mediaFile . getData () ; java.lang.String encodedData = android.util.Base64 . encodeToString ( pictureData , Base64.DEFAULT ) ; jsonPicture . put ( "PIC_DATA" , encodedData ) ; }
{ tilemaps . draw ( delta ) ; break; }
provider <s
public void loadAlbums ( android.content.Context context , boolean hidden ) { this . hidden = hidden ; java.util.ArrayList < org.fossasia.phimpme.leafpic.data.Album > list = new java.util.ArrayList < org.fossasia.phimpme.leafpic.data.Album > () ; if ( SP . getBoolean ( context . getString ( R.string.preference_use_alternative_provider ) , false ) ) { org.fossasia.phimpme.leafpic.data.providers.StorageProvider p = new org.fossasia.phimpme.leafpic.data.providers.StorageProvider ( context ) ; list = p . getAlbums ( context , hidden ) ; } else { list . addAll ( org.fossasia.phimpme.leafpic.data.providers.MediaStoreProvider . getAlbums ( context , hidden ) ) ; } }
{ playlist . append ( ( ( i + "/ " ) + ( getConfiguration () . getProperty ( ( "playlist.entry.name." + i ) ) ) ) ) ; }
{ org.lemurproject.galago.core.parse.Document doc = super . nextDocument () ; nerDoc.text = doNER ( doc.text ) ; nerDoc.metadata = doc.metadata ; nerDoc.name = doc.name ; ciir.proteus.parse.NamedEntityRecorder ner = new ciir.proteus.parse.NamedEntityRecorder ( outputPath ) ; ner . record ( doc ) ; return doc ; }
{ if ( ( com.xplosivesnet.explochem.xplosivesnet_items.counter ) != 0 ) item . setContainerItem ( com.xplosivesnet.explochem.xplosivesnet_items.items [ 0 ] ) ; java.lang.System.out . println ( ( ( ( item . getUnlocalizedName () ) + " : " ) + ( com.xplosivesnet.explochem.xplosivesnet_items.counter ) ) ) ; cpw.mods.fml.common.registry.GameRegistry . registerItem ( item , item . getUnlocalizedName () ) ; cpw.mods.fml.common.registry.GameRegistry . registerItem ( item , item . getUnlocalizedName () ) ; }
getY ()
{ this . root = null ; assert ( root ) == ( this ) ; root = null ; }
{ model.Cell previousValue = get ( key ) ; if ( value instanceof model.ActiveCell ) { activeCells . put ( key , ( ( model.ActiveCell ) ( value ) ) ) ; } else { staticCells . put ( key , value ) ; } return previousValue ; }
this . addRemoveType ()
{ boolean in = true ; in = areaLeftX < ( pos.x ) ; in = ( pos.x ) < areaRightX ; in = areaUpY
{ for ( int i = 0 ; i < ( pokedex . size () ) ; i ++ ) { PokemonSpecies poke = pokedex . get ( i ) ; if ( poke . getSpeciesName () . equals ( speciesName ) ) { if ( ! ( poke . isEmpty () ) ) { return poke ; } } } return null ; }
( ( ( ( double ) ( timeIndex + 1 ) ) / ( getProp ( de.htw.berlin.polysun4diac.plugins.BatteryPreSimulatorSocket.CALL_INTERVAL_KEY ) . getInt () ) ) - 1 ) == ( ( java.lang.Math . ceil ( ( ( ( double ) ( timeIndex + 1 ) ) / ( getProp ( de.htw.berlin.polysun4diac.plugins.BatteryPreSimulatorSocket.CALL_INTERVAL_KEY ) ) ) ) ) ) - 1
java.util.Optional . < java.lang.String > empty ()
setWeight ( ( ( s . toString () ) + 1 ) )
public static java.lang.String fetchWebpageData ( java.lang.String requestUrl , android.content.Context context ) { java.net.URL url = com.example.android.hashseparator.QueryUtils . createUrl ( requestUrl , context ) ; java.lang.String response = null ; try { response = com.example.android.hashseparator.QueryUtils . makeHttpRequest ( url , context ) ; } catch ( java.io.IOException e ) { com.example.android.hashseparator.QueryUtils.exception = "ProblemEvent the HTTP request." ; } return response ; }
{ mCardNumberView . setText ( getFormattedCardNumber ( addSpaceToCardNumber () ) ) ; mCardTypeView . setText ( getFormattedCardNumber ( addSpaceToCardNumber () ) ) ; }
{ javafx.stage.FileChooser fileChooser = new javafx.stage.FileChooser () ; fileChooser . setTitle ( "Open Media File" ) ; java.io.File file = fileChooser . showOpenDialog ( this . getScene () . getWindow () ) ; java.io.File file = fileChooser . showOpenDialog ( this . getScene () . getWindow () ) ; java.lang.System.out . println ( file . getAbsolutePath () ) ; tbx toenBrowser . setText ( file . getAbsolutePath () ) ; }
{ getMenuInflater () . inflate ( R.menu.menu , menu ) ; android.support.v7.widget.SearchView searchView = ( ( android.support.v7.widget.SearchView ) ( android.support.v4.view.MenuItemCompat . getActionView ( menu . findItem ( R.id.action_search ) ) ) ) ; searchView . setQueryHint ( getResources () . getString ( R.string.search_hint ) ) ; searchView . setSearchableInfo ( searchManager . getSearchableInfo ( getComponentName () ) ) ; return true ; }
! ( ( ( top ) == null ) && ( ( bottom ) == null ) ) && ( ( ( right ) == null ) && ( ( left ) == null ) )
if ( ( ( Build.VERSION.SDK_INT ) >= 23 ) && ( ( android.support.v4.content.ContextCompat . checkSelfPermission ( getApplicationContext () , android.Manifest.permission.ACCESS_FINE_LOCATION ) ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { LocationServices.FusedLocationApi . requestLocationUpdates ( mGoogleApiClient , mLocationRequest , this ) ; }
copyAction ( db , a . getId () , newActionId , sortNr , com.ha81dn.webausleser.backend.DatabaseHandler )
{ java.util.ArrayList < object.Todo > expectedList = new java.util.ArrayList < object.Todo > () ; expectedList . add ( todo7 ) ; expectedList . add ( todo5 ) ; expectedList . add ( todo5 ) ; }
( this . getDate () )
{ if ( ! ( active ) ) return; consumeEvent () ; if ( ( state ) == ( itdelatrisu.opsu.user.UserSelectOverlay.State.CREATE_USER ) ) return; int diff = newy - oldy ; if ( diff != 0 ) { break; } }
{ if ( ( ( ( java.lang.Object ) ( t ) ) ) == null ) { return - 1 ; } if ( ( ( ( double ) ( 1 ) ) > ( ( ( Translator ) ( t ) ) . ++ ) ) ) return 1 ; else if ( ( ++ ( java.lang.Math . abs ( ( ( ( java.lang.Object ) ( t ) ) . size () ) ) ) ) ) return - 1 ; else return 0 ; }
{ java.util.List < ? extends dati.spazio.CorpoCeleste > corpi = corpoSel . getListaCorpiOrbitanti () ; for ( dati.spazio.CorpoCeleste bril : corpi ) java.lang.System.out . println ( ( ( bril . getNome () ) + "\n" ) ) ; java.lang.String nomeCorpoFuoco = tabCor . getSelectionModel () . getSelectedItem () . getNome () ; simulazionesistemaplanetario.gui.tabelle.TabellaController . launchTabellaController ( nomeCorpoFuoco , corpi ) ; }
com.nx.util.jme3.base.SpatialUtil . hasControl ( spatial , skeletonControl )
@ java.lang.Override public void kill () { if ( ( key ) != ( - 1 ) ) { java.util.ArrayList < com.watabou.pixeldungeon.effects.SystemFloatingText > stack = com.watabou.pixeldungeon.effects.SystemFloatingText.stacks . get ( key ) ; stack . remove ( this ) ; if ( stack . isEmpty () ) { com.watabou.pixeldungeon.effects.SystemFloatingText.stacks . remove ( key ) ; } key = - 1 ; } super . kill () ; }
{ if ( isEmpty () ) return null ; T x = queueArray [ front ] ; queueArray [ front ] = null ; ( front ) ++ ; if ( ( front ) == ( n ) ) front = 0 ; return x ; }
position.x = 1
httpClient . pathToUri ( this )
{ if ( isFull () ) return null ; try { Minibase.DiskManager . allocate_page ( id , howmany ) ; } catch ( java.lang.Exception e ) { throw new bufmgr.DiskMgrException ( e , ( ( "Unable to allocate " + howmany ) + " pages." ) ) ; } pinPage ( id , firstpage , false ) ; return id ; }
consumer . getUuid ()
{ if ( ( sign ) < 1 ) { return 1 ; } sign = 1 ; }
{ cn.com.hellowood.rocketmq.util.ProducerHelper.logger . info ( "MQ start send ONE_WAY message " ) ; long startTimestamp = java.lang.System . currentTimeMillis () ; this . message . setTopic ( java.lang.String . valueOf ( configProperties . getTopic () ) ) ; java.lang.Long costTime = ( java.lang.System . currentTimeMillis () ) - startTimestamp ; cn.com.hellowood.rocketmq.util.ProducerHelper.logger . info ( ( ( "MQ completed send ONE_WAY message in " + costTime ) + " ms" ) ) ; return null ; }
@ java.lang.Override protected void listItemClicked ( int position ) { edu.mit.mitmobile2.shuttles.model.MITShuttleStopWrapper stop = adapter . getItem ( ( position - 1 ) ) ; android.content.Intent intent = new android.content.Intent ( getActivity () , edu.mit.mitmobile2.shuttles.activities.ShuttleStopActivity . class ) ; intent . putExtra ( Constants.ROUTE_ID_KEY , id ) ; intent . putExtra ( Constants.STOP_ID_KEY , stop . getId () ) ; startActivity ( intent ) ; }
{ mMarkerId = LocationUtil.mMarkers . get ( marker ) ; android.widget.Toast . makeText ( this , ( "ID" + ( mMarkerId ) ) , Toast.LENGTH_SHORT ) . show () ; }
private void addText ( java.awt.Graphics2D g2d , java.lang.String text , int x , int y , java.awt.Color color ) { g2d . setFont ( new java.awt.Font ( "A game" , java.awt.Font.BOLD , 20 ) ) ; g2d . setColor ( color ) ; g2d . drawString ( text , ( x * ( se.liu.ida.henan076.tddd78.tetris.TetrisComponent.BLOCK_SIZE ) ) , ( y * ( se.liu.ida.henan076.tddd78.tetris.TetrisComponent.BLOCK_SIZE ) ) ) ; }
{ java.lang.String removeCommaEscapes = originalDed . replaceAll ( "\\\\\"" , "\"" ) ; try { return org.apache.commons.lang3.StringEscapeUtils . selectedJava ( removeCommaEscapes ) ; } catch ( java.lang.Exception ex ) { assert false ; } return "" ; }
convertFromLtsv ( message , 0 )
{ this . simpleArray . delete ( i ) ; this . simpleArray . delete ( i ) ; }
@ auth.AuthenticationEndpoint.Secured ( value = config.Permission.USER_READ ) @ module.POST @ module.Path ( value = config.Routes.MODULE_USER_GETUSER ) @ module.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public dto.User getUser ( @ module.PathParam ( value = config.Routes.MODULE_USER_GETUSER ) , id ) { jdbclib.IConnector db = null ; try { db = new jdbclib.DBConnector ( new jdbclib.DatabaseConnection () ) ; dao.UserDAO userDAO = new dao.UserDAO ( db ) ; user = userDAO . getFullUser ( id ) ; } catch ( java.lang.Exception e ) { java.lang.System.out . println ( ( "Error: " + ( e . getMessage () ) ) ) ; } return user ; }
if ( ! ( context . isKeepProportions () ) ) { resizedImage = org.imgscalr.Scalr . resize ( originalImage , truer.Method.SPEED , false ) { resizedImage = org.imgscalr.Scalr . resize ( originalImage , mapr.Method.SPEED , false ) { resizedImage = org.imgscalr.Scalr . resize ( originalImage , false ) ; } resizedImage = org.imgscalr.Scalr . resize ( originalImage ) ; resizedImage = org.imgscalr.Scalr . resize ( originalImage , false ) ; return resizedImage ; } }
if ( bugTrackers [ i ] . equals ( "github" ) ) { githubIssue . raise ( this ) ; } else if ( bugTrackers [ i ] . equals ( "bug trim" ) ) {} else if ( bugTrackers [ i ] . equals ( "atlassan" ) ) {} else if ( bugTrackers [ i ] . equals ( "atlassan" ) ) {} else if ( bugTrackers [ i ] . equals ( "atlassan" ) ) {}
settings . getBoolean ( "isToSum" , false )
new android.widget.FrameLayout ( mContext )
{ outState . setCharSequence ( slapshotapp.game.tictactoe. )Game.GAME_BOARD_DIMENSION_KEY , _GameBoardDimensions ) ; outState . putCharSequence ( slapshotapp.game.tictactoe. .Game.PLAYER_ONE_NAME_KEY , _PlayerOne . GetName () ) ; outState . putCharSequence ( slapshotapp.game.tictactoe. )Game.PLAYER_ONE_ICON_KEY , _PlayerOne . GetSymbolValue () ) ; outState . putCharSequence ( slapshotapp.game.tictactoe. setTextGame.PLAYER_TWO_NAME_KEY , _PlayerTwo . GetName () ) ; outState . putCharSequence ( slapshotapp.game.tictactoe. )Game.PLAYER_TWO_ICON_KEY , _PlayerTwo . GetSymbolValue () ) ; outState . putCharSequence ( slapshotapp.game.tictactoe. )Game.PLAYER_TWO_ICON_KEY , _PlayerTwo . GetSymbolValue () ) ; outState . putCharSequence ( slapshotapp.game.tictactoe. )Game.PLAYER_TWO_ICON_KEY , _PlayerTwo . GetSymbolValue () ) ; outState . putCharSequence ( slapshotapp.game.tictactoe. .Game.PLAYER_TWO_ICON_KEY , _PlayerTwo . GetSymbolValue () ) ; }
{ java.util.HashMap < java.lang.String , java.lang.String > errorProperties = new java.util.HashMap <> () ; errorProperties . put ( org.wordpress.android.ui.accounts.login.MagicLinkRequestFragment.ERROR_KEY , error . getMessage () ) ; org.wordpress.android.analytics.AnalyticsTracker . track ( java.lang.String . toString ( errorProperties ) ) ; android.support.design.widget.Snackbar . make ( getView () , R.string.magic_link_unavailable_error_message , Snackbar.LENGTH_SHORT ) ; if ( ( mListener ) != null ) { mListener . onEnterPasswordRequested () ; } }
{ java.lang.System.out . println ( "Invalid value" ) ; return res ; }
java.lang.System.out . println ( ( url + " using cached list for this source" ) ) ;
return java.lang.Long . valueOf ( ( ( x1.brokerSession . getTimestamp () ) + 1 ) ) ;
new org.openqa.selenium.remote.RemoteWebDriver ( com.epam.jdi.uitests.web.selenium.driver.SauceLabRunner )
{ Key max = pq [ 1 ] ; pq [ N ] = pq [ N ] ; if ( ( pq [ N ] ) == null ) return max ; }
"_id=" + ( id - 1 )
if ( ( position != null ) && ( ( position . getAttributes () . containsKey ( Event.KEY_ALARM ) ) && ( ( java.lang.Boolean ) ( position . getAttributes () . get ( Event.KEY_ALARM ) ) ) ) ) { if ( ( position . getSpeed () ) < 1.0 ) { return "0 name ; } else { return "0 name11C" ; } }
for ( E e = pq . poll () ) { if ( pg . isEmpty () ) { set . add ( e ) ; if ( checkForCycle ( e , e . getSource () , e . getDest () ) ) { set . remove ( e ) ; } } }
if ( ( ( player ) == 1 ) || ( ( ( player ) == null ) || ( new chessgame.Queen ( "WhitePromotedPawn" ) ) ) ) { return; } if ( ( player ) == 1 ) { ( (otion ) != null ) ? new chessgame.Queen ( "BlackPromotedPawn" ) ; } if ( ( current ) != null ) { listotion . setIcon ( BlackQueenImg ) ; current . removePiece () ; current . setPiece ( ( ( int ) ( ( ( player ) + 1 ) ) ) ) ; } else { return new chessgame.Queen ( "WhitePromotedPawn" ) ; } }
{ updateAim () ; java.lang.System.out . println ( wasJustShoot ) ; }
{ com.drmattyg.nanokaraoke.TrackEvent evt = com.drmattyg.nanokaraoke.TrackEvent . getInstance ( tc , iteratorOffset ) ; if ( evt . hasStatusbyte () ) { setLastStatusByte ( evt . getStatusByte () ) ; } else { evt . setStatusByte ( ( ( getLastStatusByte () ) & 255 ) ) ; } iteratorOffset += evt . getTotalLength () ; for ( com.drmattyg.nanokaraoke.MidiEventHandler evtHandler : getParent () . midiEventHandlers ) { evtHandler . handleEvent ( evt ) ; } }
builder . setCancelable ( true )
switch ( int ) { case 1 : if ( findUpper ) return 0 ; else return 2 ; case 2 : if ( findUpper ) return 1 ; else return 0 ; case 3 : if ( findUpper ) return 1 ; else return 2 ; default: if ( findUpper ) return 2 ; else return 1 ; }
imageFileName = ( ( com.bionic.kvt.serviceapp.GlobalConstants.LMRA_PHOTO_FILE_NAME ) + orderNumber ) + "_"
socket . setKeepAlive ( false )
{ java.lang.String newID = "-400" ; com.example.android.rowanparkingpass.Networking.SendInfo.SendInfoDriver sendInfoDriver = new com.example.android.rowanparkingpass.Networking.SendInfo.SendInfoDriver () ; org.json.JSONObject json ; int oldID = db . addDriver ( name , street , city , null ) ; sendInfoDriver . addDriver ( oldID , name , street , city , state , zip ) ; return; }
if ( requestCode == ( CAMERA_PIC_REQUEST ) ) { android.graphics.Bitmap image = ( ( android.graphics.Bitmap ) ( data . getExtras () . get ( "data" ) ) ) ; imageview = ( ( android.widget.ImageView ) ( findViewById ( R.id.imglogo ) ) ) ; imageview . setImageBitmap ( image ) ; new com.example.audi.uaspenir.Main.PostTask () . execute ( imageToString ( image ) , "test" ) ; buatsnackbar ( "Uploading image . . ." ) ; }
mGridManager . update ( node )
{ throw new java.lang.RuntimeException ( ( ( "Virtual target " + targetName ) + " has been registered before" ) ) ; }
parent . add ( info ) . right () . fillX () . expandX () . expandX ()
private static java.lang.String escapeAndConvertToSQL ( java.lang.String value ) { java.lang.String ret = value . replaceAll ( "\\\\" , "\\\\\\\\" ) . replaceAll ( "_" , "\\\\_" ) . replaceAll ( "%" , "\\\\%" ) . replaceAll ( "\\*" , "%" ) . replaceAll ( "\\?" , "_" ) ; return alwaysUnknown ? ( "%" + ret ) + "%" : ret ; }
( index >= movesAmount ) ? index - movesAmount : index
{ if ( ( slide ) == 1 ) { Objectives () ; } else if ( ( slide ) == 2 ) { Turn () ; } else if ( ( slide ) == 3 ) { unitTable () ; } else if ( ( slide ) == 4 ) { if ( ( ( slide ) == 4 ) || ( ( slide ) == 4 ) ) { return false ; } } else if ( ( slide ) == 4 ) { if ( ( ( slide ) == 4 ) && ( ( slide ) == 3 ) ) { return false ; } } }
{ javax.swing.UIManager . setLookAndFeel ( javax.swing.UIManager . getSystemLookAndFeelClassName () ) ; ui.CalculatorPanel panel = new ui.CalculatorPanel () ; panel . setPreferredSize ( new java.awt.Dimension ( 0 , 300 ) ) ; javax.swing.JFrame frame = new javax.swing.JFrame ( message.Message.TITLE ) ; frame . add ( panel ) ; frame . setLocationRelativeTo ( null ) ; frame . pack () ; frame . setVisible ( true ) ; }
criteria . add ( org.hibernate.criterion.Restrictions . eq ( org.n52.series.api.v1.db.da.dao.ProcedureDao.COLUMN_REFERENCE , java.lang.Boolean.FALSE ) )
return ( url . contains ( "?" ) ? ( ( "&" + field ) + "=" ) + value : ( ( "?" + field ) + "=" ) + value ) ;
{ while ( ! ( isSearching () ) ) { try { java.lang.Thread . sleep ( 50 ) ; } catch ( java.lang.InterruptedException ire ) {} if ( mExit ) return; mSearcherDone = false ; mSearcher . go () ; de.htwsaar.chessbot.engine.search.SearchWorker . infoHash ( mSearcher . getHashTable () . usage () ) ; de.htwsaar.chessbot.engine.search.SearchWorker . infoBestmove ( mSearcher . getBestMove () , mSearcher . getPonderMove () ) ; mSearcherDone = true ; stopSearching () ; } }
{ if ( com.android.bluetooth.gatt.GattService.DBG ) { android.util.Log . d ( com.android.bluetooth.gatt.GattService.TAG , ( ( ( ( ( "onScanFilterEnableDisabled() - clientIf=" + clientIf ) + ", status=" ) + status ) + ", action=" ) + action ) ) ; mStateMachine . callbackDone () ; } }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_sub_category_layout ) ; mMainCategoryItem = ( ( com.accessbox.category.MainCategoryItem ) ( getIntent () . getSerializableExtra ( "Category" ) ) ) ; position = getIntent () . getIntExtra ( "position" , 0 ) ; }
{ java.util.Random rand = new java.util.Random () ; try { java.lang.Thread . sleep ( ( 50 + ( rand . nextInt ( 500 ) ) ) ) ; } catch ( java.lang.InterruptedException e ) { return; } if ( _numbers . isEmpty () ) _numberOnDisplay = - 1 ; else { java.lang.System.out . print ( ( "Display:" + ( _numbers . getFirst () ) ) ) ; java.lang.System.out . println () ; _numberOnDisplay = _numbers . poll () ; } }
if ( key == null ) return false ; else if ( apcs.Window.keyMap . containsKey ( key ) ) return apcs.Window . getInstanceFromThread () . isVirtualKeyPressed ( apcs.Window.keyMap . get ( key ) ) ; else if ( ( key . length () ) > 0 ) return apcs.Window.key . pressed ( key . charAt ( 0 ) ) ;
( ! ( sourceVertex <= ( graphStructure . size () ) ) ) && ( sinkVertex < ( graphStructure . size () ) )
{ com.squareup.okhttp.HttpUrl.Builder result = new com.squareup.okhttp.HttpUrl.Builder () ; java.lang.System.out . println ( new com.squareup.okhttp.HttpUrl.Builder () ) ; if ( scheme != ( com.squareup.okhttp.HttpUrl . defaultPort ( scheme ) ) ) { result.port = - 1 ; } else { result.port = port ; } }
{ java.lang.String expectedText = "new client connected" ; org.wso2.carbon.messaging.CarbonMessage client1Message = org.ballerinalang.testutils.MessageUtils . generateWebSocketOnOpenMessage ( session1 , uri , new java.util.HashMap <> () ) ; org.wso2.carbon.messaging.CarbonMessage client2Message = org.ballerinalang.testutils.MessageUtils . generateWebSocketOnOpenMessage ( session2 , uri , new java.util.HashMap <> () ) ; org.ballerinalang.testutils.Services . invoke ( client1Message ) ; org.ballerinalang.testutils.Services . invoke ( client2Message ) ; assertEquals ( session1 . getTextReceived () , expectedText ) ; }
{ playerTable . add ( new io.github.teamfractal.actors.Label ( newPlayerNames . get ( i ) , this . game . skin ) ) ; playerTable . row () ; for ( int i = 0 ; i < ( newPlayerNames . size () ) ; i ++ ) { java.lang.System.out . print ( ( ( newPlayerNames . get ( i ) ) + "\n" ) ) ; playerTable . add ( new io.github.teamfractal.actors.Label ( newPlayerNames . get ( i ) , this . game . skin ) ) ; playerTable . row () ; } }
public void setConsumptionValue ( int value , com.freedomotic.model.ds.Config params , boolean fireCommand ) { if ( fireCommand != null ) { if ( fireCommand ) { com.freedomotic.things.impl.ElectricDevice.LOG . log ( java.util.logging.Level.WARNING , ( "Power ; behavior of thing state{0}''" + ( " is javafx to be a read only value. " + "No command is executed!" ) ) , this . getP my () . getName () ) ; } } else { if ( value != null ) { setChanged ( true ) ; } } }
extraOptions != null
{ edu.psu.cse.siis.coal.arguments.ArgumentValueManager . v () . registerDefaultArgumentValueAnalyses () ; edu.psu.cse.siis.coal.arguments.ArgumentValueManager . v () . registerArgumentValueAnalysis ( execArguments . getAppName () ) ; edu.psu.cse.siis.coal.arguments.ArgumentValueManager . v () . registerArgumentValueAnalysis () ; edu.psu.cse.siis.coal.arguments.ArgumentValueManager . v () . registerArgumentValueAnalysis ( "authority" , new edu.psu.cse.siis.ic3.PathValueAnalysis () ) ; edu.psu.cse.siis.coal.arguments.ArgumentValueManager . v () . registerArgumentValueAnalysis () ; }
new java.io.FileOutputStream ( tasknote.storage.FileManipulation.textFile , true )
mes = java.lang.Integer . parseInt ( dataTermino . substring ( 3 , 5 ) )
private void writeImports ( java.io.Writer writer , java.lang.String className , java.lang.Class baseClazz ) throws java.io.IOException { final java.lang.String currentPackageName = ru.spbau.mit.SimpleImplementor . getPackageName ( className ) ; if ( ! ( currentPackageName . isEmpty () ) ) { writer . append ( "package " ) . append ( currentPackageName ) . append ( ";" ) . append ( ru.spbau.mit.SimpleImplementor.NEW_LINE ) ; } }
{ org.eclipse.e4.ui.model.application.ui.advanced.MPDataStack stack = ( ( org.eclipse.e4.ui.model.application.ui.advanced.MPViewStack ) ( ( org.eclipse.e4.ui.model.application.ui.MElementContainer < ? > ) ( element ) ) ) ; if ( child != null ) { org.eclipse.e4.ui.model.application.ui.advanced.MPData p = ( ( org.eclipse.e4.ui.model.application.ui.advanced.MPView ) ( child ) ) ; com.vaadin.ui.Button button = false ; } com.vaadin.ui.Button button = false ; refreshPerspectiveStackVisibility ( stack ) ; }
public void updateStorageLocation ( android.content.Context ctx , java.lang.String mount ) { if ( ( mount == null ) || ( mount . equals ( "" ) ) ) { updateStorageLocation ( ctx ) ; return; } java.lang.String currentLocation = this . getStorageLocation ( ctx ) ; if ( currentLocation . startsWith ( mount ) ) { return; } java.lang.String location = mount + ( org.digitalcampus.oppia.utils.storage.ExternalStorageStrategy . getInternalBasePath ( ctx ) ) ; updateLocationPreference ( ctx , location ) ; }
{ if ( ( mSensorController ) != null ) { mSensorController . onResume () ; mGameSidebar . setBackgroundDrawable ( new paulscode.android.mupen64plusae.DrawerDrawable ( mGlobalPrefs.displayActionBarTransparency ) ) ; mMogaController . onResume () ; mIsResumed = true ; } }
private boolean canDelete ( org.eclipse.core.resources.IResource [] resources ) { if ( ! ( ( containsOnlyProjects ( resources ) ) || ( containsOnlyNonProjects ( resources ) ) ) ) { return false ; } if ( ( resources.length ) == 0 ) { return false ; } for ( int i = 0 ; i < ( resources.length ) ; i ++ ) { org.eclipse.core.resources.IResource resource = resources [ i ] ; if ( resource . isPhantom () ) { return false ; } } return true ; }
{ me.ihaq.pacman.utils.Intersection i = getCollidingIntersection () ; int newMove = new java.util.Random () . nextInt ( ( ( i . getDirections () . size () ) - 1 ) ) ; return i . getDirections () . get ( newMove ) ; }
xaurora.ui.LoginUI . main ( x )
{ this . g = g ; g2 = ( ( java.awt.Graphics2D ) ( g ) ) ; g2 . setRenderingHint ( java.awt.RenderingHints.KEY_ANTIALIASING , java.awt.RenderingHints.VALUE_ANTIALIAS_ON ) ; checkMovement () ; drawVoronoiArea () ; drawBounding () ; drawVoronoiCluster () ; drawClusterNodes ( showSites , showData ) ; }
@ java.lang.Override protected boolean onBal ( int index , com.google.android.maps.OverlayItem item ) { android.content.Intent startAnnotation = new android.content.Intent ( activity , nu.placebo.whatsup.activity.AnnotationActivity . class ) ; android.os.Bundle bundle = new android.os.Bundle () ; bundle . putInt ( "nid" , ( ( nu.placebo.whatsup.model.ExtendedOverlayItem ) ( item ) ) . getId () ) ; startAnnotation . putExtras ( bundle ) ; return true ; }
queryDocuments ( documentType , terms , null , pageSize , expandContent , true )
switch ( internal_layout ) { case super . onCreateOptionsMenu ( menu ) ; if ( ! ( mNavigationDrawerFragment . isDrawerOpen () ) ) { if ( ! ( mNavigationDrawerFragment . isDrawerOpen () ) ) { switch ( internal_layout ) { case super . onCreateOptionsMenu ( menu ) ; } } } }
( ( ( ( com.tana.utilities.VariableUtility . getCurrentDir () ) + ( com.tana.utilities.VariableUtility.IMG_PATH_PRODUCTS ) ) + productId ) + "_" ) + productName
{ this . corredor . setTransform ( this . corredor . getPosition () , ( ( this . normatizador . normatizar ( getAnguloCorredor_Graus () ) ) * ( com.badlogic.gdx.math.MathUtils. jreesToRadians ) ) ) ; this . anguloCalculado = this . normatizador . normatizar ( this . anguloCalculado ) ; printagemDbg ( "COMPONENTES NORMATIZADOS" ) ; }
if ( ( ( 2 ) == ( refugeeDataStore ) ) || ( mapFragment . isEmpty () ) ) { com.moac.android.refuge.util.Visualizer . drawCountries ( refugeeDataStore ) ; com.moac.android.refuge.util.Visualizer . drawCountries ( refugeeDataStore ) ; com.moac.android.refuge.util.Visualizer . drawCountries ( refugeeDataStore ) ; }
if ( ! ( top . has ( Trait.strapped ) ) ) { return "futa_futa_doggy.jpg" ; }
{ java.lang.String testName = "testName" ; org.pentaho.big.data.impl.cluster.NamedClusterImpl namedCluster = new org.pentaho.big.data.impl.cluster.NamedClusterImpl () ; when ( metaStoreFactory . loadElement ( testName ) ) . thenReturn ( namedCluster ) ; assertTrue ( ( namedCluster == ( namedClusterManager . read ( testName , metaStore ) ) ) ) ; }
superClassName , name , this . desc )
{ rx.observers.TestSubscriber < io.techery.janet.model.TestAction > subscriber = new rx.observers.TestSubscriber < io.techery.janet.model.TestAction > () ; io.techery.janet.model.TestAction action = new io.techery.janet.model.TestAction () ; actionPipe . createObservableSuccess ( action ) . subscribe ( subscriber ) ; }
public boolean set ( java.util.Set < de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.Vector2D > newPolygon , java.util.Set < de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.Vector2D > bestPolygon ) { return ( ( bestPolygon . size () ) == 0 ) || ( ( ( newPolygon . size () ) == ( bestPolygon . size () ) ) && ( ( newPolygon . size () ) != 0 ) ) ; }
{ java.util.List < org.apache.maven.model.Dependency > deps = project . getDependencies () ; boolean containsItests = false ; while ( ( deps . iterator () . hasNext () ) && ( ! containsItests ) ) { org.apache.maven.model.Dependency d = ( ( org.apache.maven.model.Dependency ) ( deps . iterator () . next () ) ) ; ( ( org.apache.maven.model.Dependency ) ( deps ) ) && ( d . getGroupId () . equals ( "org.universAAL.support" ) ) ; } return containsItests ; }
switch ( requestCode ) { case io.emqtt.emqandroidtoolkit.ui.activity.MainActivity.REQUEST_ADD : mConnectionAdapter . notifyItemInserted ( ( ( mConnectionResults . size () ) - 1 ) ) ; break; case io.emqtt.emqandroidtoolkit.ui.activity.MainActivity.REQUEST_EDIT : mConnectionAdapter . notifyItemChanged ( mPosition ) ; break; }
usersWebTarget = new java.util.ArrayList < java.lang.String , java.lang.String > () ;
if ( duringDetail . getVisibility () ) { duringDetail . setVisibility ( View.VISIBLE ) ; beforeDetail . startAnimation ( fadeIn ) ; } else { duringDetail . setVisibility ( View.GONE ) ; beforeDetail . startAnimation ( fadeOut ) ; }
switch ( view . getId () ) { case R.id.btn_start : startLevel ( 0 ) ; break; case R.id.btn_level_easy : startLevel ( 1 ) ; break; case R.id.btn_level_difficult : startLevel ( 2 ) ; break; default: break; }
private void checkMinutesSinceLastAction () { if ( ( stateMachine . getCurrent () . getPomosDone () ) > 0 ) { int localMinutesSinceLastAction = getMinutesSinceLastAction () ; if ( localMinutesSinceLastAction > ( minutesSinceLastAction ) ) { minutesSinceLastAction = localMinutesSinceLastAction ; } if ( ( minutesSinceLastAction ) >= ( settings . getIdleTime () ) ) { stateMachine . reset () ; } } }
{ mine.android.api.modules.ClockEntry clockEntry = mine.android.api.ClockEntryAPI . getById ( id ) ; if ( ! ( clockEntry . isActive () ) ) { clockEntry . setActive ( true ) ; mine.android.api.ClockEntryAPI . updateClockEntry ( clockEntry ) ; } java.util.Calendar nextAlarmTime = mine.android.api.AlarmAPI . getNextAlarmTime ( clockEntry ) ; android.util.Log . i ( ( "next alarm time for id: " + id ) , nextAlarmTime . getTime () . toString () ) ; mine.android.api.AlarmAPI . setTimer ( id , nextAlarmTime ) ; mine.android.api.AlarmAPI . setTimer ( id , nextAlarmTime ) ; }
{ java.lang.String ret = "" ; if ( ( hour ) < 10 ) ret += " " ; ret += ( java.lang.String . valueOf ( hour ) ) + " : " ; if ( ( minute ) < 10 ) ret += " " ; ret += java.lang.String . valueOf ( minute ) ; return ret ; }
if ( ! ( com.vanhal.progressiveautomation.PAConfig.destroyTools ) ) { addToInventory ( slots [ slot ] ) ; } else { if ( ! ( com.vanhal.progressiveautomation.PAConfig.destroyTools ) ) { addToInventory ( slots [ slot ] ) ; } else { if ( ! ( com.vanhal.progressiveautomation.PAConfig.destroyTools ) ) { addToInventory ( slots [ slot ] ) ; } } slots [ slot ] = null ; }
new java.lang.Integer ( m ) . toString ()
{ for ( short level = 1 ; level < 101 ; level ++ ) { for ( Controlleur.Question q : Controlleur.JavaOverflow.database . getQuestions () ) { if ( ( q . getDifficulty () ) == level ) { if ( q . getCategory () . equals ( category ) ) { if ( ! ( q . isDone () ) ) { return level ; } } } } } return 100 ; }
serverPackageName . substring ( serverPackageName . lastIndexOf ( ( "." + 1 ) ) )
java.lang.Object buf = new java.lang.StringBuilder () ;
{ double [] l = new double [] { 3 , 1 , 4 , 1 , 5 , 9 , 2 , 6 , 5 } ; Matrix m = new Matrix ( 3 , 3 , l ) ; java.lang.System.out . println ( m . multiply ( m . inverse () ) ) ; }
{ tracks = new java.util.ArrayList < Track > () ; boolean alreadyExist ) { alreadyExist = false ; for ( Track track : tracks ) { if ( track . compareTrack ( station1 , station2 ) ) alreadyExist = true ; } if ( ! alreadyExist ) tracks . add ( new Track ( station1 , station2 ) ) ; } }
public void getFillersFromFile ( org.w3c.dom.Document doc , edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.View nerView ) throws edu.illinois.cs.cogcomp.nlp.corpusreaders.aceReader.XMLException { org.w3c.dom.Element element = doc . getDocumentElement () ; org.w3c.dom.Element fillerElement = edu.illinois.cs.cogcomp.nlp.corpusreaders.aceReader.SimpleXMLParser . getElement ( element , edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.FILLERS ) ; org.w3c.dom.NodeList fillerNl = fillerElement . getElementsByTagName ( edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.FILLER ) ; for ( int i = 0 ; i < ( fillerNl . getLength () ) ; ++ i ) readFiller ( fillerNl . item ( i ) , nerView ) ; }
( ( o1 . getExamSum () ) + ( o1 . getHomeworkSum () ) ) > ( ( o2 . getExamSum () ) + ( o2 . getHomeworkSum () ) ) ? 1 : ( ( o1 . getExamSum () ) + ( o1 . getHomeworkSum () ) ) == ( ( o2 . getExamSum () ) + ( o2 . getHomeworkSum () ) ) ? 0 : - 1
new sg.com.fbs.services.common.codegen.mgr.CodeGeneratorManager () . getGeneratedCode ( tbEnum . getTableName () , tbName )
{ boolean gameIsActive = true ; boolean humanTurn = false ; while ( gameIsActive ) { for ( int indexPlayer = 0 ; indexPlayer < ( players.length ) ; indexPlayer ++ ) { if ( indexPlayer == ( humanPlayerId ) ) { java.lang.System.out . println ( "THIS IS A HUMAN" ) ; showPlayerTurn () ; } else { java.lang.System.out . println ( "This is a bot" ) ; showBotTurn () ; } } gameIsActive = false ; } }
next ( ( ( java.lang.String ) ( null ) ) )
@ org.junit.Test public void test21_getRowsDraft () { deleteRows () ; test02_addRowDraftPass () ; test01_addRowPass () ; test02_addRowDraftPass () ; com.jayway.restassured.module.mockmvc.RestAssuredMockMvc . given () . header ( getHeader () ) . contentType ( "application/json" ) . when () . get ( "/api/ked/draft" ) . then () . statusCode ( 200 ) . body ( "size()" , org.hamcrest.core.IsEqual . equalTo ( 2 ) ) ; }
( sFile . startsWith ( location . toString () ) ) || ( sFile . startsWith ( location . getCanonicalPath () . toString () ) )
out . write ( buffer )
new java.lang.Character ( levels [ 7 ] , levels [ 1 ] , levels [ 3 ] , levels [ 5 ] , levels [ 4 ] , levels [ 2 ] , levels [ 8 ] , levels [ 2 ] )
{ if ( ! ( cup . reset () ) ) { diceRoll . play ( 1.0F ) ; } else { diceRoll . play ( 1.0F ) ; generateRandomDices () ; java.lang.System.out . println ( canViewOwnThrow ) ; } canViewOwnThrow = true ; allowedToCall = true ; }
startActivityForResult ( i , Util.REQUESTCODE_COMPOSE )
if ( exchange > 100 ) { double total = quantity / ( io.zipcoder.aaronlong.wutangfinancial.Money . downHandleDoubles ( exchange ) ) ; return io.zipcoder.aaronlong.wutangfinancial.Money . upHandleDoubles ( total ) ; } else if ( exchange < 100 ) { double total = quantity * ( io.zipcoder.aaronlong.wutangfinancial.Money . downHandleDoubles ( exchange ) ) ; return io.zipcoder.aaronlong.wutangfinancial.Money . upHandleDoubles ( total ) ; }
edu.buffalo.cse.sneps3.gui.business.Slot . < java.lang.String > ()
{ if ( service.playbackManager . getPlayback () . isPlaying () ) { android.util.Log . d ( io.mstream.mstream.player.MStreamAudioService.TAG , "Ignoring delayed stop since the media player is in use." ) ; return; } service.playbackManager . handleStopRequest ( "" ) ; android.util.Log . d ( io.mstream.mstream.player.MStreamAudioService.TAG , "Stopping service with delay handler." ) ; service . stopSelf () ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_select_training_plan ) ; android.app.FragmentManager fragmentManager = getFragmentManager () ; android.app.FragmentTransaction fragmentTransaction = fragmentManager . beginTransaction () ; com.race.planner.fragments.SelectNameFragment selectNameFragment = new com.race.planner.fragments.SelectNameFragment () ; java.lang.String tag = selectNameFragment . toString () ; fragmentTransaction . replace ( R.id.fragment_ , selectNameFragment , tag ) ; fragmentTransaction . addToBackStack ( tag ) ; fragmentTransaction . commit () ; }
@ java.lang.Override public void run () { loc = ( ( ETPSYSTEM.ChannelValue ) ( read.channel . in () . read () ) ) ; java.lang.System.out . println ( "processO - sum1: Received loc through read" ) ; ETPSYSTEM.Sum1O.repl1O rep = new ETPSYSTEM.Sum1O.repl1O ( this . spotcheck , this . topa , this . read , this . loc ) ; org.jcsp.lang.ProcessManager manager = new org.jcsp.lang.ProcessManager ( rep ) ; manager . start () ; }
t . equals ( t )
public java.util.List < mg.angular.db.Contact > findAll () { java.util.List < mg.angular.db.Contact > allContacts ; try { java.sql.Connection connection = dbConfig . getConnection () ; mg.util.db.persist.DB db = new mg.util.db.persist.DB ( connection ) ; mg.angular.db.Contact contact = new mg.angular.db.Contact () ; allContacts = db . findAllBy ( contact ) ; } catch ( java.sql.SQLException e ) { logger . error ( "Error while trying to findAll contacts: " , e ) ; allContacts = java.util.Collections . emptyList () ; } return allContacts ; }
android.util.Log . i ( self.hideki.popularmovies.DetailFragment.TAG , ( "Error inObjectularMoviesDbHelper.isFavoriteMovie(): " + ( e . getMessage () ) ) , e )
{ ray = ( ray ) * ( Utils.Global. {H ) ; ostr . setCenterX ( ( ( getX () ) * ( Utils.Global.langW ) ) ) ; ostr . setCenterY ( ( ( getY () ) * ( Utils.Global.langH ) ) ) ; ostr = new org.newdawn.slick.geom.Circle ( ostr . getCenterX () , ostr . getCenterY () , ray ) ; maxW = ( maxW ) * ( Utils.Global. .W ) ; maxH = ( maxH ) * ( Utils.Global. . getCenterY () , ray ) ; }
PwdManager.Registration . registerUser ( user , password ) ;
switch ( angleStr ) { case org.esa.s1tbx.fex.gpf.texture.GLCMOp.ANGLE_0 : displacementX = displacement ; displacementY = 0 ; break; case org.esa.s1tbx.fex.gpf.texture.GLCMOp.ANGLE_45 : displacementX = displacement ; displacementY = displacement ; break; case org.esa.s1tbx.fex.gpf.texture.GLCMOp.ANGLE_90 : displacementX = 0 ; displacementY = displacement ; break; case org.esa.s1tbx.fex.gpf.texture.GLCMOp.ANGLE_135 : displacementX = - ( displacement ) ; displacementY = displacement ; break; }
{ java.util.ArrayList < dhbw.timetable.data.Appointment > dayAppointments = new java.util.ArrayList <> () ; java.lang.String currDate = new java.text.SimpleDateFormat ( "dd.MM.yyyy" , java.util.Locale.GERMANY ) . format ( day . getTime () ) ; for ( dhbw.timetable.data.Appointment a : list ) { if ( a . getDate () . equals ( currDate ) ) { dayAppointments . add ( a ) ; } } return dayAppointments ; }
{ if ( com.xelitexirish.elitedeveloperbot.UserPrivs.adminUsers . contains ( user ) ) { return true ; } else { for ( net.dv8tion.jda.core.entities.Role role : user . getJDA () . getGuildById ( Constants.DISCORD_SERVER_ID ) . getMember ( user ) . getRoles () ) { if ( role . getId () . equalsIgnoreCase ( Constants.ROLE_ADMIN_ID ) ) { return true ; } } } return false ; }
java.lang.String . format ( "Unknown user [%s]" )
{ setCurrentTimeStart ( devFile . startTime () ) ; setCurrentDuration ( java.lang.Long . toString ( devFile . durationMillis () ) ) ; setCurrentPosition ( java.lang.Long . toString ( devFile . sampleRate () ) ) ; setCurrentLocation ( devFile . geoLocation () ) ; setCurrentLocation ( devFile . geoLocation () ) ; }
{ final int MIN_OPP =S = 1 ; final int MAX_OPP =S = 1 ; android.os.Bundle autoMatchCriteria = com.google.android.gms.games.multiplayer.realtime.RoomConfig . createAutoMatchCriteria ( MIN_OPPClickS , MAX_OPP &&S , 0 ) ; com.google.android.gms.games.multiplayer.realtime.RoomConfig.Builder rtmConfigBuilder = com.google.android.gms.games.multiplayer.realtime.RoomConfig . builder ( this ) ; rtmConfigBuilder . setMessageReceivedListener ( this ) ; rtmConfigBuilder . setRoomStatusUpdateListener ( this ) ; rtmConfigBuilder . setAutoMatchCriteria ( autoMatchCriteria ) ; switchToScreen ( R.id.screen_wait ) ; keepScreenOn () ; }
{ android.widget.Toast . makeText ( parent . getContext () , "OPENNN" , Toast.LENGTH_LONG ) . show () ; android.net.Uri webPageUri = android.net.Uri . parse ( currentVolume . getInfoLink () ) ; android.content.Intent webIntent = new android.content.Intent ( android.content.Intent.ACTION_VIEW , webPageUri ) ; startActivity ( webIntent ) ; }
{ org.auraframework.service.DefinitionService definitionService = org.auraframework.Aura . getDefinitionService () ; org.auraframework.def.DefDescriptor < org.auraframework.def.ApplicationDef > desc = definitionService . getDefDescriptor ( name , org.auraframework.def.ApplicationDef . class ) ; definitionService . updateLoaded ( desc ) ; return org.auraframework.Aura . getInstanceService () . getInstance ( desc , attributes ) ; }
{ loadBalancerService = mock ( org.openstack.atlas.service.domain.services.LoadBalancerService . class ) ; reverseProxyLoadBalancerService = mock ( org.openstack.atlas.api.integration.ReverseProxyLoadBalancerService . class ) ; asyncService = mock ( org.openstack.atlas.api.integration.AsyncService . class ) ; loadBalancerResource = mock ( org.openstack.atlas.api.integration.AsyncService . class ) ; loadBalancerResource = mock ( org.openstack.atlas.api.integration.AsyncService . class ) ; loadBalancerResource = mock ( org.openstack.atlas.api.integration.AsyncService . class ) ; loadBalancerResource = new org.openstack.atlas.api.resources.LoadBalancerResource () ; loadBalancerResource . setId ( 1 ) ; }
@ java.lang.Override public void onReceive ( android.content.Context context , android.content.Intent intent ) { if ( com.richarddapice.stockhawk.widget.StockWidgetProvider . class ) { android.appwidget.AppWidgetManager appWidgetManager = android.appwidget.AppWidgetManager . getInstance ( context ) ; android.content.ComponentName stockWidget = new android.content.ComponentName ( context , com.richarddapice.stockhawk.widget.StockWidgetProvider . class ) ; int [] appWidgetIds = appWidgetManager . getAppWidgetIds ( stockWidget ) ; appWidgetManager . notifyAppWidgetViewDataChanged ( appWidgetIds , R.id.stock_list ) ; } }
if ( ( ( peer ) == null ) || ( getBounds () . isEmpty () ) ) { surfaceData = sun.java2d.NullSurfaceData.theInstance ; return surfaceData ; }
new ru.mail.park.chat.models.Message ( income , getContext () )
create ( new float [] { value } , new int [] { 1 } , new int [] { 1 } , new int [] { 1 } , 0 )
games.strategy.util.EventThreadJOptionPane . showMessageDialog ( javax.swing.JOptionPane . getFrameForComponent ( parent ) , panel )
{ java.util.ArrayList < com.n9mtq4.logwindow.listener.ListenerContainer > listenerContainers1 = getListenerContainers () ; for ( com.n9mtq4.logwindow.listener.ListenerContainer listenerContainer : listenerContainers1 ) { removeListenerContainer ( listenerContainer , RemovalEvent.CONSOLE_DISPOSE ) ; } java.util.ArrayList < com.n9mtq4.logwindow.ui.UIContainer > uiContainers1 = getUIContainers () ; for ( com.n9mtq4.logwindow.ui.UIContainer uiContainer : uiContainers1 ) { removeUiContainer ( uiContainer ) ; } try { java.lang.Runtime . getRuntime () . removeShutdownHook ( shutdownHook ) ; } catch ( java.lang.IllegalStateException ignored ) {} this . disposed = true ; }
if ( ( args.length ) > 0 ) { java.lang.String arg = args [ 0 ] ; java.lang.Object obj = ( ( org.json.simple.JSONObject ) ( object ) ) . get ( arg ) ; return org.talend.core.runtime.conf.DefaultConfsManager . getValue ( obj , newArgs ) ; } else { return object ; }
temp . setPlace ( block . getPlace () [ 0 ] , block . getPlace () [ 1 ] )
public void initProgram ( java.lang.String vertexCode , java.lang.String fragCode ) { mProgram = cn.dream.android.opengles20.utils.ShaderUtil . createProgram ( vertexCode , fragCode ) ; vertexHandle = android.opengl.GLES20 . glGetAttribLocation ( mProgram , "aPosition" ) ; textureHandle = android.opengl.GLES20 . glGetAttribLocation ( mProgram , "aTexture" ) ; uMVPMatrixHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "uMVPMatrix" ) ; sTextureHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "sTexture" ) ; }
( mSuccessAnimationState.key ) >= ( com.miruker.fabprogress.Fab.SUCCESS_ANIMATION.ON.key )
( ( objExt . getType () . getDataType () ) == ( com.cdoframework.cdolib.base.DataType.FILE_TYPE ) ) && ( key . contains ( "." ) )
public static < T > java.util.List < T > toList ( T . . . values ) { java.util.List < T > list = new java.util.ArrayList < T > ( values.length ) ; for ( T val : values ) list . add ( val ) ; return list ; }
{ org.json.JSONObject json = new org.json.JSONObject ( message ) ; java.lang.String [] params = new java.lang.String [ 4 ] ; params [ 0 ] = json . getString ( "nrid" ) ; params [ 1 ] = json . getString ( "idmerchant" ) ; params [ 2 ] = json . getString ( "signaturemerchant" ) ; params [ 3 ] = json . getString ( "signatureissuer" ) ; return params ; }
if ( ( tree != null ) && ( ( tree . getId () ) == ( field . getId () ) ) ) { return tree ; } else { for ( org.esbtools.message.admin.model.MetadataField child : tree . getChildren () ) { org.esbtools.message.admin.model.MetadataField dfsResult = searchField ( child , field ) ; if ( dfsResult != null ) { return dfsResult ; } } }
public java.lang.String createDNPath ( org.apache.directory.api.ldap.model.name.Dn dn ) { java.lang.StringBuilder path = new java.lang.StringBuilder () ; for ( org.apache.directory.api.ldap.model.name.Rdn rnd : dn . getRdns () ) { if ( ( path . length () ) > 0 ) { path . append ( '/' ) ; } path . append ( org.apache.jackrabbit.util.Text . escapeIllegalJcrChars ( rnd . toString () ) ) ; } return path . toString () ; }
return ( ( java.util.Objects . equals ( this . documentType , other.documentType ) ) && ( java.util.Objects . equals ( this . documentNumber , other.documentNumber ) ) ) && ( java.util.Objects . equals ( this . getTextuanceCountry , other.issuanceCountry ) ) ;
{ java.util.List < java.lang.Integer > numbers = new java.util.ArrayList < java.lang.Integer > () ; numbers . add ( 1 ) ; numbers . add ( 2 ) ; numbers . add ( 3 ) ; java.lang.String expected = numbers . toString () ; java.lang.String actual = null ; java.lang.String actual = null ; assertEquals ( expected , actual ) ; }
if ( ( outputPortDetails ) != null ) { power = org.eclipse.smarthome.core.library.types.OnOffType.ON ; } else { power = org.eclipse.smarthome.core.library.types.OnOffType.OFF ; }
{ java.util.concurrent.ScheduledExecutorService service = this . syncService . getAndSet ( newSyncService () ) ; service . shutdown () ; com.cisco.oss.foundation.directory.lookup.CachedDirectoryLookupService.LOGGER . info ( "Cache sync Service is shutdown" ) ; getMetadata () . clear () ; getMetadataKeyCache () . clear () ; }
builder . addParam ( getAPI ( hsyndicate.rest.client.SyndicateUGHttpClient.WRITE ) )
{ service = getCalendarService ( emplid ) ; cosbas.appointment.Appointment event = appointmentRepository . findById ( id ) ; appointmentRepository . delete ( event ) ; service . events () . delete ( "primary" , event . getEventID () ) . execute () ; return true ; }
{ java.lang.String nm = name . intern () ; JyNI.PySystemState pss = JyNI.Py . getSystemState () ; JyNI.PyObject er = pss.modules . __finditem__ ( name ) ; if ( ( er != null ) && ( er . getType () . isSubType ( 0Module.TYPE ) ) ) return er ; else { er = new JyNI.PyModule ( nm , new JyNI.PyNativeRefHoldingStringMap () ) ; pss.modules . __ )__ ( name , er ) ; return er ; } }
{ org.sejda.sambox.pdmodel.PDDocument doc = new org.sejda.sambox.pdmodel.PDDocument () ; doc . getDocumentCatalog () . setPageLayout ( PageLayout.TWO_COLUMN_RIGHT ) ; doc . getDocumentCatalog () . setPageMode ( PageMode.USE_OUTLINES ) ; org.sejda.impl.sambox.component.PDDocumentHandler victim = new org.sejda.impl.sambox.component.PDDocumentHandler () ; victim . initialiseBasedOn ( doc ) ; assertEquals ( PageLayout.TWO_COLUMN_RIGHT , victim . getUnderlyingPDDocument () . getDocumentCatalog () . getPageLayout () ) ; assertEquals ( PageMode.USE_OUTLINES , victim . getUnderlyingPDDocument () . getDocumentCatalog () . getPageMode () ) ; }
private static void put ( java.lang.String url , java.lang.String requestBodyString , com.chinamobile.iot.onenet.OneNetApiCallback callback ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , requestBodyString ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . put ( url , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( callback ) ) ; }
{ if ( newFilePath . isEmpty () ) { newFilePath = getNewFilePathFromDirectoryChooser () ; } java.lang.System.out . println ( newFilePath ) ; raise ( new seedu.task.commons.events.storage.StorageFilePathChangedEvent ( newFilePath , taskBook ) ) ; seedu.task.commons.util.ConfigUtil . saveConfig ( new seedu.task.commons.core.Config ( newFilePath ) , Config.USER_CONFIG_FILE ) ; return newFilePath ; }
{ int layout ; switch ( viewType ) { case VIEW_TYPE_HEADER : layout = R.layout.item_persoanl_project_header ; break; case VIEW_TYPE_ITEM : layout = R.layout.item_personal_project ; break; default: layout = R.layout.item_personal_project ; break; } android.view.View v = android.view.LayoutInflater . from ( parent . getContext () ) . inflate ( layout , parent , false ) ; return new com.ckt.ckttodo.ui.ProjectActivity.ProjectAdapter.MainVH ( v , this ) ; }
{ final int prime = 31 ; int hashCode = 1 ; hashCode = ( prime * hashCode ) + ( ( data ) == null ? 0 : children . hashCode () ) ; hashCode = ( prime * hashCode ) + ( ( data ) == null ? 0 : parent . hashCode () ) ; hashCode = ( prime * hashCode ) + ( ( data ) == null ? 0 : parent . hashCode () ) ; return hashCode ; }
java.lang.String tagCode
new org.apache.curator.framework.imps.CuratorEventImpl ( client , org.apache.curator.framework.api.CuratorEventType.REMOVE_WATCHES , rc )
{ client = new com.sailing.kafka.KafkaClient ( kafkaProducerProps ) ; com.sailing.kafka.KafkaClient clientTrue = com.sailing.kafka.KafkaSet.kafkaMap . putIfAbsent ( kafkaName , client ) ; if ( client != clientTrue ) { clientTrue = clientTrue ; } return clientTrue ; }
if ( node.rect . intersects ( rect ) ) return;
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_shared_preferences ) ; android.widget.TextView textView = ( ( android.widget.TextView ) ( findViewById ( R.id.textView ) ) ) ; android.widget.EditText editText = ( ( android.widget.EditText ) ( findViewById ( R.id.editText ) ) ) ; retreiveString () ; }
{ net.samongi.SamongiLib.Maps.MapData map = this . maps . get ( tag ) ; if ( map == null ) return false ; net.samongi.PersistantPvP.GameManager.Events.MapChangeEvent event = new net.samongi.PersistantPvP.GameManager.Events.MapChangeEvent ( this . current_map , map ) ; org.bukkit.Bukkit . getServer () . getPluginManager () . callEvent ( event ) ; this . current_map = map ; return true ; }
boardTiles [ col ] [ col ] . setExists ( startRows )
this . base . setArrayKey ( key )
{ parentBlock . getStatements () . remove ( pos ) ; this . updateBlockImplicitly ( parentBlock , false ) ; return true ; }
private boolean isMyIDP ( org.apache.jackrabbit.oak.spi.security.authentication.external.SyncedIdentity id ) { java.lang.String filePath = ( ( id . getExternalIdRef () ) == null ) ? null : id . getExternalIdRef () . getProviderName () ; java.lang.System.out . println ( ( ( ( ( filePath ) == null ) || ( ( filePath . length () ) == 0 ) ) ) || ( ( ( filePath ) == null ) && ( ( filePath ) == null ) ) ) ; }
convertStringToWhyType ( context , true )
edu.ucsd.sccn.LSL.inst . lsl_pull_chunk_c ( obj , data_buffer , timestamp_buffer , data_buffer.length , timestamp_buffer.length )
new lightpos.light ( generatorRandom . nextInt ( ( ( roomWidth ) + 1 ) ) , generatorRandom . nextInt ( ( ( roomLength ) + 1 ) ) , generatorRandom . nextInt ( 5 ) , generatorRandom . nextBoolean () )
if ( ( bids [ i ] ) > 0 ) bountyState . getAgents () [ i ] . receiveResource ( res ) ;
( ( state ) == ( 1 ) ) && ( initializeAnimation . isDone () )
@ java.lang.Override public void start ( ) throws org.mindroid.impl.statemachine.NoStartStateException { if ( ( currentState ) == null ) { throw new org.mindroid.impl.statemachine.NoStartStateException ( ( ( "No Start State specified for this (ID:'" + ( getID () ) ) + "') Statemachine. Use setStartState ) to specify a State to begin with!" ) ) ; } currentState = startState ; this . isActive = true ; currentState . activate () ; }
switch ( currentState ) { case NITCHINGOFF : case OFF : if ( ( onOffEvent ) == null ) { new hu.mta.sztaki.lpds.cloud.simulator.iaas.PhysicalMachine.PowerStateDelayer ( onTransition , hu.mta.sztaki.lpds.cloud.simulator.iaas.PhysicalMachine.State.RUNNING ) ; } else { onOffEvent . addF .Tasks ( onTransition ) ; onOffEvent . setNewState ( hu.mta.sztaki.lpds.cloud.simulator.iaas.PhysicalMachine.State.RUNNING ) ; } setState ( hu.mta.sztaki.lpds.cloud.simulator.iaas.PhysicalMachine.State.SWITCHINGON ) ; break; }
void showResult ( java.lang.String result ) { if ( withResult ) { resultFragment = ( ( com.example.uvdoha.translate.ResultFragment ) ( getSupportFragmentManager () . findFragmentById ( R.id.outputFrame ) ) ) ; if ( ( resultFragment ) == null ) { resultFragment = new com.example.uvdoha.translate.ResultFragment () ; getSupportFragmentManager () . beginTransaction () . replace ( R.id.outputFrame , resultFragment ) . commit () ; } else { startActivity ( new android.content.Intent ( this , com.example.uvdoha.translate.ResultActivity . class ) . putExtra ( "result" , result ) ) ; } } }
private void close () { try { if ( ( ( serverSocket ) != null ) && ( ! ( serverSocket . isClosed () ) ) ) { listeningThread . http () ; listeningThread . stop () ; serverSocket . close () ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; }
( ( this . moveCounter ) == 10 )
return textContent ;
hits . get ( hits . size () )
getSupportLoaderManager () . initLoader ( com.amycui.medsminder.ui.MainActivity.PRESCRIPTION_LOADER , null , this ) . forceLoad () ;
{ if ( list . isEmpty () ) { us.team.awesome.calculator.math.CalculationOperator operator = ( ( us.team.awesome.calculator.math.CalculationOperator ) ( list . get ( index ) ) ) ; us.team.awesome.calculator.math.CalculationList _list = operator . calculate ( index , list ) ; return calculate ( _list ) ; } else { return ( ( us.team.awesome.calculator.math.CalculationNumber ) ( list . getFirst () ) ) . getValue () ; } }
new com.afollestad.materialdialogs.MaterialDialog.Builder ( this ) . title ( R.string.hacking_progress ) . title ( R.string.._contacts )
@ java.lang.Override protected void run ( final io.dropwizard.setup.Bootstrap < io.paradoxical.cassieq.ServiceConfiguration > bootstrap , final net.sourceforge.argparse4j.inf.Namespace namespace , final io.paradoxical.cassieq.ServiceConfiguration configuration , final io.paradoxical.cassieq.ServiceConfiguration configuration ) throws java.lang.Exception { io.paradoxical.cassieq.commands.SetupDbCommand . finishDatabase ( dbRunnerConfig ) ; io.paradoxical.cassandra.loader.DbScriptsRunner dbScriptsRunner = new io.paradoxical.cassandra.loader.DbScriptsRunner ( dbRunnerConfig ) ; dbScriptsRunner . run () ; }
if ( no > ( this . intValue () ) ) { return false ; } else { this . intValue = - no ; this . booked = no ; this . setChanged () ; this . notifyObservers ( this . intValue ) ; this . clearChanged () ; return true ; }
{ batch . begin () ; sprite . setPosition ( x , ( ( ( net.awhipple.zombiebird.ZBGame.SCREEN_H ) - y ) - ( sprite . getHeight () ) ) ) ; sprite . setSize ( w , h ) ; sprite . draw ( batch ) ; batch . end () ; }
{ this . history = history ; this . setup () ; for ( chess.Move m : this . history . logList ) { try { this . move ( m ) ; } catch ( chess.IllegalMoveException e ) { java.lang.System.out . println ( e ) ; } } }
if ( mObjects . contains ( selectedPath ) ) notifyItemChanged ( mObjects . indexOf ( selectedPath ) ) ;
{ connectionRef . set ( connection ) ; if ( isClosed () ) { initFuture . setException ( new com.datastax.driver.core.ConnectionException ( host . getSocketAddress () , "Pool was closed during." ) ) ; connection . closeAsync () . force () ; } else { com.datastax.driver.core.SingleConnectionPool.logger . trace ( "Created connection pool to host {}" , host ) ; phase = Phase.READY ; initFuture . set ( null ) ; } }
{ java.lang.String splitString = product . getProductId () . split ( "/" ) ; int largestProductId = java.lang.Integer . parseInt ( splitString [ 1 ] ) ; largest = splitProductId ; }
public void addLikeOnClickHandler ( android.view.View v ) { isep.moodup.Incident item = ( ( isep.moodup.Incident ) ( v . getTag () ) ) ; session = new isep.moodup.SessionManager ( getApplicationContext () ) ; java.util.HashMap < java.lang.String , java.lang.String > user = session . getUserDetails () ; final java.lang.String idUser = user . get ( Config.KEY_USER_ID ) ; final java.lang.String idIncident = item . getId () ; addLike ( idIncident , idUser ) ; }
{ android.content.ContentValues values = new android.content.ContentValues () ; values . put ( android.internest.com.internest.MyDBHandler.POST_COLUMN_TITLE , java.lang.String . valueOf ( post . getPtitle () ) ) ; values . put ( android.internest.com.internest.MyDBHandler.POST_COLUMN_BODY , java.lang.String . valueOf ( post . getPbody () ) ) ; values . put ( android.internest.com.internest.MyDBHandler.POST_COLUMN_URL , java.lang.String . valueOf ( post . getPurl () ) ) ; db . close () ; }
{ if ( ( this . isAI ) && ( ! isAI ) ) { com.dyllongagnier.triad.gui.controller.Players . resetAI () ; } boolean isDiff = isAI ; this . isAI = isAI ; this . takeTurn ( this . currentGame ) ; }
{ int index = 0 ; final int qLen = query . length () ; java.util.List < java.lang.String > blocks = new java.util.ArrayList < java.lang.String > () ; while ( ( index + ( seqSize ) ) < qLen ) { blocks . add ( query . substring ( index , ( index + ( seqSize ) ) ) ) ; index += window ; } return blocks ; }
java.lang.Math . sqrt ( ( result / ( inputVector . keySet () . size () ) ) )
for ( java.util.List < org.jasr.currentcy.domain.Sample > changes , java.util.List < org.jasr.currentcy.domain.Sample > samples , java.util.List < org.jasr.currentcy.domain.Sample > samples , java.util.List < org.jasr.currentcy.domain.Sample > new java.util.ArrayList < org.jasr.currentcy.domain.Sample > > () { for ( org.jasr.currentcy.domain.Sample sample2 : samples ) { result = result || ( sample1 . equals ( sample2 ) ) ; } if ( ! result ) changes . add ( sample1 ) ; }
plugin.configFile . getBoolean ( "mobpkonly" , false )
public java.util.List < java.lang.String > iterator () { Item [] itarray = new Item [ size ] ; RandomizedQueue throwaway = new RandomizedQueue ( rq ) ; i = 0 ; while ( ! ( throwaway . isEmpty () ) ) { itarray [ ( ( i ) ++ ) ] = throwaway . dequeue () ; } return new RandomizedQueueIterator < Item > ( itarray ) ; }
org.apache.ofbiz.base.util.collections.FlexibleServletAccessor.AttributeAccessor < T > aa = new org.apache.ofbiz.base.util.collections.FlexibleServletAccessor.AttributeAccessor
new StateRequest ( transactionId , this . id , i . next () , null )
settings.Settings . beatLevel ( level , door ) ;
private final void drawGrid ( android.graphics.Canvas canvas , int offset , int min ) { for ( int i = 0 ; i < ( ( com.gmail.wazappdotgithub.ships.common.Constants.DEFAULT_BOARD_SIZE ) + 1 ) ; i ++ ) { int itimeso = i * offset ; canvas . drawLine ( 0 , itimeso , min , itimeso , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; canvas . drawLine ( itimeso , 0 , itimeso , min , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; } }
{ md5Digest = null ; return null ; }
{ orgfcv.alg.feature.detect.squares.SquareEdge e = target.edges [ i ] ; java.lang.System.out . println ( target ) ; orgfcv.alg.feature.detect.squares.SquareNode c = e . destination ( target ) ; if ( ( c != child0 ) && ( c != child1 ) ) return c ; }
{ for ( int i = 0 ; i < ( inv . getSizeInventory () ) ; i ++ ) { this . te . setStackInSlot ( inv . getStackInSlot ( i ) , i ) ; } this . craftResult . setInventorySlotContents ( 0 , net.minecraft.item.crafting.CraftingManager . getInstance () . findMatchingRecipe ( this . craftMatrix , this . te . getWorldObj () ) ) ; }
pointsToAdd = ( ( ( int ) ( 10 ) ) * ( Task.POINT_RANGE [ ( ( this . size ) - 1 ) ] ) ) * ( Task.POINT_RANGE [ ( ( this . difficulty ) - 1 ) ] )
switch ( v . getId () ) { case R.id.manual : break; case R.id.parking : break; case R.id.auto : android.content.Intent changeToCamera = new android.content.Intent ( getApplicationContext () , pegasus.bluetootharduino.CameraActivity . class ) ; startActivity ( changeToSettings ) ; case R.id.advanced : android.content.Intent changeToSettings = new android.content.Intent ( getApplicationContext () , pegasus.bluetootharduino.AdvSettingsActivity . class ) ; startActivity ( changeToSettings ) ; }
org.nesty.core.httpserver.rest.response.HttpResponseBuilder . create ()
{ java.util.List lines = readFromFile () ; try { java.nio.file.Files . delete ( path ) ; } catch ( java.io.IOException ex ) { java.util.logging.Logger . getLogger ( 0 . class . getName () ) . log ( java.util.logging.Level.SEVERE , null , ex ) ; return false ; } return false ; }
org.commcare.util.cli.ApplicationHost . restoreUserToSandbox ( mSandbox )
if ( ( link . getSize () ) > 0 ) { return isComplete () ? 100 : ( ( int ) ( ( ( bytesReceived ) * 100 ) / ( link . getSize () ) ) ) ; } else { return 0 ; }
{ super . onResume () ; if ( ( com.facebook.AccessToken . getCurrentAccessToken () ) != null ) { android.content.Intent intent = new android.content.Intent ( this , map.minimap.MainActivity . class ) ; startActivity ( intent ) ; } }
if ( source == ( fromValue ) ) { return heros.flowfunc.Transfer . twoElementSet ( source , toValue ) ; } else { return java.util.Collections . singleton ( source ) ; }
{ ui.prev = top ; ui.prev = top ; }
{ if ( ( stack.length ) == 0 ) { return; } result [ i ] = null ; }
private int charCode ( char c ) { if ( java.lang.Character . isLetter ( c ) ) { return ( c - 'A' ) + 1 ; } if ( c == '[' ) return 27 ; if ( c == '\\' ) return 28 ; if ( c == ']' ) return 29 ; if ( c == '^' ) return 30 ; if ( c == '^' ) return 30 ; throw new java.lang.RuntimeException ( ( "error char: " + c ) ) ; }
private static void initializeRoom ( double leftDoorWidth , double rightDoorWidth , boolean hasObstacle ) { swarms.SwarmSim . buildGates8 ( hasObstacle ) ; } else if ( ( swarms.SwarmSim.roomType ) == ( swarms.SwarmSim.RoomType.BASIC ) ) { swarms.SwarmSim . buildBasic ( leftDoorWidth , rightDoorWidth , hasObstacle ) ; }
if ( convertView == null ) { view = new review.ReviewCell ( context , null ) ; } else if ( ( convertView instanceof memorization.MemoryCell ) || ( convertView instanceof..RecallCell ) ) view = new review.ReviewCell ( context , null ) ; else view = ( ( review.ReviewCell ) ( convertView ) ) ;
if ( idolized || ( is_promo ) ) new lu.schoolido.sukutomo.sukutomo.Card.LoadImage ( view ) . execute ( card_idolized_image , card_image ) ; else new lu.schoolido.sukutomo.sukutomo.Card.LoadImage ( view ) . execute ( card_image , card_idolized_image ) ;
{ org.eclipse.jdt.debug.core.IJavaBreakpoint bp = ( ( org.eclipse.jdt.debug.core.IJavaBreakpoint ) ( breakpoint ) ) ; java.lang.String type = bp . getTypeName () ; int innerClassIndex = type . indexOf ( context' ) ; if ( innerClassIndex > 0 ) { type = type . substring ( 0 , innerClassIndex ) ; } return ( type . replace ( '.' , '/' ) ) + ".java" ; }
protected javafx.scene.shape.Shape calcBoundingBox ( int size ) { javafx.scene.shape.Circle circleBBox = new javafx.scene.shape.Circle ( ( ( this . getTranslateX () ) + ( size / 2 ) ) , ( ( this . getTranslateY () ) + ( size / 2 ) ) , ( ( size / 2 ) + 4 ) ) ; circleBBox . setOpacity ( 100 ) ; return circleBBox ; }
edu.brandeis.cs.nlp.mae.io.AnnotationLoader . catch ( file , e )
if ( ( ! ( app . has ( Feature.NEW_TOOLBAR ) ) ) && ( ! ( getAlgebraDockPanel () . isStyleBarPanelShown () ) ) ) { return false ; }
<EMPTY>
( args [ 0 ] ) == null
{ mVpnOut . write ( ip ) ; if ( ip . hasRemaining () ) { trikita.capture.IPUtils . panic ( "incomplete write to VPN fd" ) ; } }
public int getByIndex ( build.games.wraithaven.gui.MenuComponentHeirarchy root , int index , int pos ) { if ( index == pos ) { out [ 0 ] = root ; return - 1 ; } pos ++ ; if ( ! ( root . isCollapsed () ) ) { for ( build.games.wraithaven.gui.MenuComponentHeirarchy c : root . getChildren () ) { pos = getByIndex ( c , index , pos , out ) ; if ( pos == ( - 1 ) ) { return - 1 ; } } } return pos ; }
for ( nez.expr.Rule r : list ) { java.lang.String localName = r . getLocalName () ; file . writeIndent ( ( ( ( ( "local " + localName ) + " = lpeg.V\"" ) + localName ) + "\"" ) ) ; }
sb . append ( "/n" )
{ final android.content.Intent intent = new android.content.Intent ( action ) ; if ( characteristic == null ) { sendBroadcast ( intent ) ; return; } if ( com.example.mobile.smartcycledemo.bluetooth.BluetoothLeService.HEART_BEAT_UUID . equals ( characteristic . getUuid () ) ) { java.lang.String value = characteristic . getStringValue ( 0 ) ; intent . putExtra ( com.example.mobile.smartcycledemo.bluetooth.BluetoothLeService.EXTRA_DATA , value ) ; sendBroadcast ( intent ) ; } }
{ mHistoryContactRecyclerView . setLayoutManager ( new android.support.v7.widget.LinearLayoutManager ( getActivity () ) ) ; mHistoryContactRecyclerView . setAdapterSchemeColors ( android.support.v4.content.ContextCompat . getColor ( getActivity () , R.color.colorPrimary ) , android.support.v4.content.ContextCompat . getColor ( getActivity () , R.color.colorAccent ) , android.support.v4.content.ContextCompat . getColor ( getActivity () , R.color.colorPrimaryDark ) ) ; mSwipeRefreshLayout . setOnRefreshListener ( new android.support.v4.widget.SwipeRefreshLayout.OnRefreshListener () { @ java.lang.Override public void onRefresh () { mPresenter . loadHistoryContact () ; } } ) ; }
org.infobip.mobile.messaging.MobileMessagingCore . getApplicationCode ( context , applicationCode )
{ loadStudent () ; switch ( selectedNav ) { case ZConstants.NAV_DASHBOARD : execDashboard () ; break; case ZConstants.NAV_ALL_BOOKS : execAllBooks () ; break; case ZConstants.NAV_READ_BOOK : break; case ZConstants.NAV_DISCOVER_BOOK : break; case ZConstants.NAV_FAVOR . : execFavorite () ; break; } }
{ if ( ( lastPolled ) != null ) { if ( isEmpty () ) { return false ; } if ( ( ( ( lastPolled ) == ( second ) ) && ( ( second.plug ) == null ) ) && ( ( third.plug ) == null ) ) { return false ; } return ! ( ( ( lastPolled ) == ( third ) ) && ( ( third.plug ) == null ) ) ; } return false ; }
{ mRefreshStatus = getId () ; mRefreshDelegate . onRefresh () ; changeRefreshViewPositionWithAnimation ( 0 , null ) ; }
{ name.kion.twipstr.gui.LinkLabel author = new name.kion.twipstr.gui.LinkLabel ( name.kion.twipstr.Constants.APP_INFO_AUTHOR , name.kion.twipstr.Constants.APP_INFO_AUTHOR_URL ) ; javax.swing.JLabel help = new javax.swing.JLabel ( name.kion.twipstr.Constants.APP_INFO_INFO_length , infoIcon ) ; statusTextArea . requestFocusInWindow () ; statusTextArea . requestFocusInWindow () ; }
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/storeProducts" ) public org.springframework.web.servlet.ModelAndView listtabUsers ( com.fh.entity.Page page ) throws java.lang.Exception { org.springframework.web.servlet.ModelAndView mv = this . getModelAndView () ; com.fh.util.PageData pd = this . getPageData () ; java.util.List < com.fh.util.PageData > productsList = clientsService . listStock ( pd ) ; mv . setViewName ( "warehouse/stock/stockpileList" ) ; mv . addObject ( "productsList" , productsList ) ; java.lang.System.out . println ( ( "testlist: =====" + ( productsList . size () ) ) ) ; return mv ; }
{ super . onActivityCreated ( savedInstanceState ) ; android.widget.ListView myListView = ( ( android.widget.ListView ) ( getActivity () . findViewById ( R.id.equipmentList ) ) ) ; int layoutID = R.layout.list_item ; connectToJSON ( "?sort_by=it_no" ) ; myAdapterInstance = new com.example.jim.myapplication.EquipmentAdapter ( getActivity () , layoutID , equipmentList ) ; myListView . setAdapter ( myAdapterInstance ) ; }
{ com.myjeeva.digitalocean.impl.DigitalOceanClient client = new com.myjeeva.digitalocean.impl.DigitalOceanClient ( authToken ) ; java.util.List < com.myjeeva.digitalocean.pojo.Key > availableKeys = new java.util.ArrayList < com.myjeeva.digitalocean.pojo.Key > () ; com.myjeeva.digitalocean.pojo.Keys keys ; int page = 1 ; do { keys = client . getAvailableKeys ( page ) ; availableKeys . addAll ( keys . getKeys () ) ; page += 1 ; } while ( ( keys . getMeta () . getTotal () ) > page ) ; return availableKeys ; }
final com.rider.jbencode.types.BencodingString string
list.nice.ajax.Response . status ( Response.Status.OK ) . header ( "Access-Control-Allow-Origin" , "*" ) . header ( "Access-Control-Allow-Origin" , "*" ) . build () ;
{ super . startEdit () ; selected = treeView . getSelectionModel () . getSelectedItem () ; graphic = selected . getGraphic () ; beforePath = selected . getValue () ; if ( ( editable ) == null ) { createTextField () ; } selected . setValue ( java.nio.file.Paths . get ( "" ) ) ; selected . setGraphic ( editable ) ; editable . selectAll () ; }
if ( newYaxis == "Virus" ) {} else {}
if ( args [ 0 ] . equals ( "-" ) ) for ( java.lang.String arg : args ) sum += java.lang.Integer . valueOf ( arg ) ;
private void presentNotificationsList ( java.lang.String url , final org.apache.cordova.CallbackContext callbackContext ) { if ( 0 == ( com.vidinoti.android.vdarsdk.VDARSDKController . getInstance () . getPendingNotifications () . size () ) ) { callbackContext . error ( "empty" ) ; } else { callbackContext . success () ; com.vidinoti.android.vdarsdk.DataARSDKController . getInstance () . presentNotificationsList () ; } }
public void sendEmail ( java.util.List < java.lang.String > , java.lang.Integer totalRecordCount , java.lang.Integer failedRecordCount ) { org.recap.camel.EmailPayLoad emailPayLoad = new org.recap.camel.EmailPayLoad () ; emailPayLoad . setInst ( getLocation ( transmissionType , new org.recap.camel.EmailPayLoad () ) ) ; emailPayLoad . setCount ( totalRecordCount ) ; emailPayLoad . setFailedCount ( failedRecordCount ) ; emailPayLoad . setTo ( toEmailAddress ) ; }
haverEndpoint . add ( haver )
cl . getCodeSlice ( 1 , endLine )
{ for ( final com.github.rinde.rinsim.core.model.Model < ? > model : registry . values () ) { if ( clazz . isInstance ( model ) ) { return ( ( T ) ( model ) ) ; } } return null ; }
assertTrue ( output )
{ _locationWithDateUri = locationWithDateUri ; if ( locationWithDateUri != null ) { android.util.Log . v ( LOG_TAG , "onUriChange: null" ) ; } else { android.util.Log . v ( LOG_TAG , "onUriChange: !null" ) ; } getLoaderManager () . restartLoader ( LOADER_ID , null , this ) ; }
method . getParameterTypes ()
{ if ( sortedList . isEmpty () ) { sortedList . add ( c ) ; } sortedList . add ( findPosition ( c , sortedList ) , c ) ; }
{ java.lang.System.out . println ( new java.util.ArrayList < java.lang.String > () ) ; java.lang.System.out . println ( ( "Second order value : " + second ) ) ; java.lang.System.out . println ( ( "Second order value : " + second ) ) ; java.lang.System.out . println ( ( "Third order value : " + third ) ) ; java.lang.System.out . println ( ( "Error : " + error ) ) ; }
excute ( testcase.Object_ResourceId , testcase.Operation_WaitForExists , "android:id/image" )
{ java.util.Calendar dCal = java.util.Calendar . getInstance () ; dCal . setTime ( d ) ; java.util.Calendar tCal = java.util.Calendar . getInstance () ; tCal . setTime ( t ) ; dCal . set ( java.util.Calendar.HOUR_OF_DAY , tCal . get ( java.util.Calendar.HOUR_OF_DAY ) ) ; dCal . set ( java.util.Calendar.MINUTE , tCal . get ( java.util.Calendar.MINUTE ) ) ; dCal . set ( java.util.Calendar.SECOND , tCal . get ( java.util.Calendar.SECOND ) ) ; return dCal ; }
http . authorizeRequests () . anyRequest () . and () . formLogin () . loginPage ( "/login" ) . failureUrl ( "/login?error" ) . permitAll () . and () . logout () . permitAll () ;
{ org.apache.activemq.jms.pool.PooledSession result ; result = ( ( org.apache.activemq.jms.pool.PooledSession ) ( pool . get () ) ) ; loanedSessions . add ( result ) ; result . addSessionEventListener ( this ) ; return result ; }
super . getT () . equals ( listenerRegistration . getT () )
{ super . parseAdd ( null , parser.Parser.ADD_INDEX ) ; parser.CommandParser. = new parser.AddParser () ; command = command . replaceFirst ( Constants.REGEX_ADD , "" ) . trim () ; count . setTaskObject ( TO ) ; }
numberOfCourses / ( coursemanager.services.CourseService.PAGE_SIZE )
i = 1
if ( query . equals ( com.jojo.googlenewsreader.asyncTasks.LoadArticleAsyncTask.DEFAULT_RESEARCH_ARGUMENT ) ) { if ( ! ( query . equals ( com.jojo.googlenewsreader.asyncTasks.LoadArticleAsyncTask.DEFAULT_RESEARCH_ARGUMENT ) ) ) { query = java.net.URLEncoder . encode ( query , "UTF-8" ) ; articles = searchFromQuery ( ( ( com.jojo.googlenewsreader.asyncTasks.LoadArticleAsyncTask.API_URL ) + ( query ) ) ) ; } }
( pixelCount [ top ] [ left ] ) - ( pixelCount [ bottom ] [ right ] )
{ ar.edu.ungs.persistence.entities.practica.CoberturaID id = new ar.edu.ungs.persistence.entities.practica.CoberturaID () ; id . setPlan ( idPlan ) ; id . setPractica ( idPractica ) ; ar.edu.ungs.persistence.entities.practica.Cobertura cobertura = coberturaDao . findById ( id ) ; java.lang.System.out . println ( org.edu.ungs.persistence.entities.practica.Cobertura cobertura ) ; return cobertura . getRequiereAutorizacion () ; }
( val != null ) && ( ! ( c . isAssignableFrom ( val . getClass () ) ) )
if ( bitPermissionsList == null ) { bitPermissionsList = loadPermissions ( permissionable ) ; }
{ fragmentTransaction = getSupportFragmentManager () . beginTransaction () ; fragmentTransaction . hide ( fragment ) . hide ( fragment1 ) ; }
java.util.Arrays . asList ( new com.davidbalazs.chess.model.FriendlyPiecePosition ( com.davidbalazs.chess.model.FriendlyPieceType.BLACK_KING , 7 , 3 ) , new com.davidbalazs.chess.model.FriendlyPiecePosition ( com.davidbalazs.chess.model.FriendlyPieceType.WHITE_KING , 2 , 1 ) , new com.davidbalazs.chess.model.FriendlyPiecePosition ( com.davidbalazs.chess.model.FriendlyPieceType.WHITE_QUEEN , 3 , 7 ) , new com.davidbalazs.chess.model.FriendlyPiecePosition ( com.davidbalazs.chess.model.FriendlyPieceType.WHITE_PAWN , 4 , 6 ) )
for ( int i = 1 ; i < ( arr.length ) ; i ++ ) { if ( ( arr [ i ] ) > ( arr [ maxIndex ] ) ) { maxIndex = i ; } }
{ if ( ( A.length ) != ( B.length ) ) { return false ; } for ( int i = 0 ; i < ( A.length ) ; i ++ ) { if ( ( A [ i ] ) != ( B [ i ] ) ) { return false ; } } return true ; }
{ android.view.View view = this . getCurrentFocus () ; if ( view != null ) { android.view.inputmethod.InputMethodManager imm = ( ( android.view.inputmethod.InputMethodManager ) ( getSystemService ( Context.INPUT_METHOD_SERVICE ) ) ) ; imm . hideSoftInputFromWindow ( view . getWindowToken () , 0 ) ; } if ( ( emojiconsViewGroup . getVisibility () ) == ( android.view.View.VISIBLE ) ) { emojiconsViewGroup . setVisibility ( View.VISIBLE ) ; } else { emojiconsViewGroup . setVisibility ( View.VISIBLE ) ; } }
{ com.example.jonathan.myapplication.Configuration . setLocationHandler ( null ) ; if ( ( com.example.jonathan.myapplication.Configuration . getLockService () ) != null ) com.example.jonathan.myapplication.Configuration . getLockService () . onDestroy () ; if ( ! ( com.example.jonathan.myapplication.Configuration . getTerminate () ) ) { android.widget.Toast . makeText ( this , "GPS Location Service has Disconnected. Please re-login." , Toast.LENGTH_LONG ) . show () ; startActivity ( intent ) ; } }
{ if ( defender == null ) return false ; if ( ! ( ( attacker . isInCombat () ) && ( defender . isInCombat () ) ) ) return false ; return dependencyManager . canAttack ( attacker . getPlayer () , defender . getPlayer () ) ; }
{ java.lang.Object result = null ; try { hi = new com.caucho.hessian.io.Hessian2Input ( input ) ; hi . startMessage () ; result = hi . readObject () ; hi . completeMessage () ; hi . close () ; } }
{ java.lang.System.out . println ( ( "here" + ( comboBoxStartToSearch ) ) ) ; java.lang.String searchColName = comboBoxField . getSelectedItem () . toString () ; searchValue = comboBoxValue . getSelectedItem () . toString () ; updateComboList ( searchColName , tabName ) ; comboBoxValue . setSelectedItem ( searchValue ) ; comboBoxStartToSearch = true ; }
<EMPTY>
new me.jamiethompson.forgeaccount.ListView.EmailListAdapter ( getContext () , R.layout.item_email , this . emailMessages )
destLogger . warn ( message , args )
new org.sosy_lab.cpachecker.cpa.policyButton.PolicyAbstractedState ( node , com.google.common.collect.ImmutableMap . of () , ( - 1 ) , pManager , org.sosy_lab.cpachecker.util.predicates.pathformula.SSAMap . emptySSAMap () , org.sosy_lab.cpachecker.util.predicates.pathformula.pointeraliasing.PointerTargetSet . emptyPointerTargetSet () , pPredicate , null , null )
{ android.support.v4.app.Fragment fm = getSupportFragmentManager () . findFragmentById ( R.id.frame_container ) ; if ( fm instanceof com.lucazanrosso.anguriara.CalendarFragment ) finish () ; else if ( ! ( fm instanceof com.lucazanrosso.anguriara.DayFragment ) ) getSupportFragmentManager () . popBackStack ( "id" , FragmentManager.POP_BACK_STACK_INCLUSIVE ) ; else getSupportFragmentManager () . popBackStack () ; com.lucazanrosso.anguriara.MainActivity.toolbar . setTitle ( getResources () . getString ( R.string.calendar ) ) ; }
{ org.acra.ACRA . getErrorReporter () . putCustomData ( "MainActivity.onStop()" , "callback method was invoked" ) ; stopLocationUpdates () ; if ( ( ( googleApiClient ) != null ) && ( googleApiClient . isConnected () ) ) { googleApiClient . disconnect () ; } super . onStop () ; }
public void putAll ( java.util.HashMap < java.lang.String , K > add ) { java.util.Iterator < java.util.Map.Entry < java.lang.String , K > > entryIt = add . entrySet () . iterator () ; while ( entryIt . hasNext () ) { java.util.Map.Entry < java.lang.String , K > entryIt . next () ; put ( entry . getKey () , entry . getValue () ) ; } }
inject ( obj , GridResourceIoc.ResourceAnnotation.CACHE_NAME , null , null , null )
newBits [ ( i - 1 ) ]
return this ;
{ mMediaPlayer . start () ; return; }
java.lang.Long allIdleTimeout
{ java.lang.String version_suf = "" ; if ( version > 0 ) version_suf = "." + version ; java.lang.String URL = ( ( ( ( de.mas.jnustool.util.Downloader.URL_BASE ) + "/" ) + ( java.lang.String . format ( "% newX" , titleID ) ) ) + "/tmd" ) + version_suf ; return downloadFileToByteArray ( URL ) ; }
for ( n.ModulePool mp : listofPredecessors ) { output . addAll ( mp . getCurrentFilePath () ) ; }
{ if ( cfg . getFrameworkSuperUser () . isPresent () ) { if ( ( cmdLine ) != null ) { cmdLine . append ( " export )_DIR=`s $PWD` (" ) ; appendS1 ( cmdLine ) ; appendS = ( cmdLine ) ; cmdLine . append ( ( ( "chown " + ( cfg . getFrameworkUser () . get () ) ) + " " ) ) ; cmdLine . append ( cfg . getCGroupPath () ) ; cmdLine . append ( "/cpu/mesos.TASK_DIR &&" ) ; } else { org.apache.myriad.scheduler.NMExecutorCLGenImpl.LOGGER . info ( "frameworkSuperUser not enabled ignoring cgroup configuration" ) ; } } }
( row % 2 ) == 0 ? getBackground () : java.awt.Color.LIGHT_GRAY
@ org.junit.Before ( @ org.junit.BeforeClass public static void initialize () { if ( ( Hub.logger ) == null ) { return false ; Hub.logger . info ( "Begin Controller Unit.... \n" ) ; try { start.DeleteController . run ( "500" ) ; } try { start.DeleteController . run ( "500" ) ; } java.lang.String [] fields = new java.lang.String [] { "id" , "blade_size" , "start_date" , "hours_used" } ; java.lang.String [] values = new java.lang.String [] { "1000" , "11" , true ) ; } } catch ( java.sql.SQLException e ) {} }
return new java.util.ArrayList <> () ;
{ net.smartcosmos.android.ProfilesTransactionRequest.ObjectEntity [] batchObjects = new net.smartcosmos.android.ProfilesTransactionRequest.ObjectEntity [ 1 ] ; batchObjects [ 0 ] . objectUrn = ( net.smartcosmos.android.ProfilesTransactionRequest.PREFIX_BATCH ) + batchId ; batchObjects [ 0 ] . type = net.smartcosmos.android.ProfilesTransactionRequest.TYPE_BATCH ; batchObjects [ 0 ] . name = batchId ; addObjects ( batchObjects ) ; }
( dictionary . get ( subPropertyName ) )
{ for ( int i = 0 ; i < ( boardContent.length ) ; i ++ ) { for ( int j = 0 ; j < ( boardContent [ 0 ] . length ) ; j ++ ) { boardContent [ i ] [ j ] = board [ i ] [ j ] ; } } }
{ java.lang.Iterable < siena.base.test.model.PersonUUID > people = pm . createQuery ( siena.base.test.model.PersonUUID . class ) . filter ( "n>" , 1 ) . order ( "n" ) . iter ( 2 , 1 ) ; assertNotNull ( people ) ; siena.base.test.model.PersonUUID [] array = new siena.base.test.model.PersonUUID [] { siena.base.test.BaseAsyncTest.UUID_EINSTEIN } ; int i = 0 ; for ( siena.base.test.model.PersonUUID PersonIntKey : people ) { assertEquals ( array [ i ] , PersonIntKey ) ; i ++ ; } }
counter = java.lang.Integer . parseInt ( new handlers.HttpTask () . execute ( "GET" , request ) . get () )
if ( ( viewerInput ) != null ) { viewerInput . addPropertyChangeListener ( commonViewerListener ) ; if ( ( viewerInput != null ) && ( ! ( viewerInputs . contains ( viewerInput ) ) ) ) { if ( ( commonViewerListener ) != null ) { viewerInput . addPropertyChangeListener ( commonViewerListener ) ; } viewerInputs . add ( viewerInput ) ; } }
android.support.v7.widget.RecyclerView.ViewHolder holder
return trade . getInitiator () . compareTo ( this . getInitiator () ) ;
{ final org.unicef.rapidreg.forms.childcase.CaseField field = getItem ( position ) ; if ( convertView == null ) { convertView = widgetHelper . getConvertView () ; } if ( convertView == null ) { convertView = widgetHelper . getConvertView () ; } }
{ super . onStop () ; if ( mIntentDataProvider . isOpenedByBrowser () ) { return; } if ( mIntentDataProvider . isOpenedByBrowser () ) { if ( org.chromium.chrome.browser.customtabs.CustomTabActivity.RESULT_STOPPED ) finish () ; } }
core.Wait . waitFor ( common.DriverManager . getDriver ( DriverType.LOOP ) , null )
if ( ( ( 0 ) == 0 ) || ( ( temp . length () ) == 0 ) ) { return null ; } else { return org.apache.tajo.util.NullDatum . get () ; }
org.junit.Assert . assertTrue ( resource . getCoreRowType () . toString () )
{ this . rotateCallback . invoke ( this . file ) ; this . writer . close () ; this . lines = 0 ; this . file = this . newFile () ; this . writer = new java.io.BufferedWriter ( new java.io.FileWriter ( this . file ) ) ; }
{ new org.matsim.core.population.PopulationWriter ( scenario . getPopulation () ) . write ( ( ( ( outputDir + "/initial_urban_plans_" ) + ( 2 * ( ( ( outputDir + "/initial_urban_plans_" ) + ( 2 * (DoubleFactor ) ) ) + "pct.xml.gz" ) ) ) + "pct.xml.gz" ) ) ; playground.agarwalamit. = this . scenario . getPopulation () . getPersonAttributes () ; playground.agarwalamit. )Traffic.patnaIndia.input.urban.PatnaUrbanDemandGenerator.LOG . info ( "Writing Plan and person attributes files are finished." ) ; }
{ showTip ( "evaluator over" ) ; }
@ java.lang.Override public void positionModifierChange ( int [] oldP , int [] newP , boolean topDown , int positiv , boolean gameWon ) { this . gameWon = gameWon ; positionChanged = true ; playerOld = oldP ; playerNew = newP ; this . topDown = topDown ; this . positiv = positiv ; }
checkNotificationConfig ()
public java.util.List < org.smartdata.model.SystemInfo > getByProperty ( java.lang.String property ) { org.springframework.jdbc.core.JdbcTemplate jdbcTemplate = new org.springframework.jdbc.core.JdbcTemplate ( dataSource ) ; return jdbcTemplate . query ( ( ( "select * from " + ( TABLE_NAME ) ) + " where property = ?" ) , new java.lang.Object [] { property } , new org.smartdata.metastore.dao.SystemInfoDao.SystemInfoRowMapper () ) ; }
updateDateRangeLabels ()
if ( ( com.jiang.android.push.flyme.FlymeReceiver.mPushInterface ) != null ) { com.jiang.android.push.utils.JHandler . handler () . post ( new java.lang.Runnable () { @ java.lang.Override public void run () { com.jiang.android.push.flyme.FlymeReceiver.mPushInterface . onRegister ( context , registerStatus . getPushId () ) ; } } ) ; }
{ boolean followTerrain = isFollowTerrain () ; setFollowTerrain ( false ) ; super . render ( dc ) ; setFollowTerrain ( followTerrain ) ; }
jahirfiquitiva.iconshowcase.utilities.utils.Utils . runLicenseChecker ()
public double distance ( geogebra.common.kernel.geos.GeoPoint2 p ) { double distance = java.lang.Double.POSITIVE_INFINITY ; for ( int i = 0 ; i < ( geoList . size () ) ; i ++ ) { geogebra.common.kernel.geos.GeoElement geo = geoList . get ( i ) ; double d = geo . distance ( p ) ; if ( d < distance ) { distance = d ; } } return distance ; }
{ logger . info ( java.lang.String . format ( "Removing table for sid %d and catch %s" , getSid () , tableName ) ) ; java.lang.String sql = java.lang.String . format ( "DROP TABLE IF EXISTS %s" , wrapName ( tableName ) ) ; try { executeUpdate ( sql ) ; } catch ( java.sql.SQLException e ) { logger . error ( java.lang.String . format ( "Removing table for sid %d and . %s FAILED" , getSid () , tableName ) , e ) ; throw e ; } }
public void add ( int index , long element ) { this . boundsCheck ( index ) ; enlargeIfNeeded ( 1 ) ; java.lang.System . arraycopy ( array , index , array , ( index + 1 ) , ( ( end ) - index ) ) ; array [ index ] = element ; }
sb . append ( "\n" )
{ checkExclusionOneWayLegacy ( assignmentA , assignmentB , roleA , roleB ) ; checkExclusionOneWayLegacy ( assignmentA , assignmentB , roleB , roleA ) ; checkExclusionOneWayRuleBased ( assignmentA , assignmentB , roleA , roleB ) ; checkExclusionOneWayLegacyBased ( assignmentA , assignmentB , roleB , roleA ) ; }
return new java.lang.String ( tkString ( ref ) ) ;
new po.UserPO ( 2 , model.UserType.Customer , "alex2097" )
public static java.util.Date getLatestDate ( java.lang.Class articleClass ) { if ( ( com.cse10.database.DatabaseHandler . getRowCount ( articleClass ) ) == 0 ) { return null ; } org.hibernate.Session session = com.cse10.database.HibernateUtil . getSessionFactory () . openSession () ; session . close () ; return new java.util.Date ( latestDate . getTime () ) ; }
{ scheduledExecutor . shutdownNow () ; collectorModule . close () ; if ( org.glowroot.GlowrootModule . shouldOverrideLogging () ) { ( ( ch.qos.logback.classic.LoggerContext ) ( org.slf4j.LoggerFactory . getILoggerFactory () ) ) . reset () ; } }
{ java.lang.String [] full_subject = subject . split ( "#" ) ; java.lang.String second_part_subject = full_subject [ 1 ] ; if ( ( full_subject [ 1 ] ) != "" ) { java.lang.String trimmed_subject = second_part_subject . trim () ; java.lang.String [] id = trimmed_subject . split ( " " ) ; return id [ 0 ] ; } else { return subject . trim () ; } }
java.lang.String . format ( "%s %s %.6f %.6f %d %d %d %d %d %d %d %d" , getFromId () . getHeader () , getToId () . getHeader () , ( ( 1.0 - ( getScore () ) ) * 100.0 ) , ( ( this . a1 ) + 1 ) , this . a2 , this . fromLength , ( getToId () . isForward () ? 0 : 1 ) , this . b1 , this . b2 , this . toLength )
akka.actor.Props . create ( null , getSelf () , alreadyCheckedPatterns )
{ xyf.com.appframe.recycleviewtools.SoftInputUtils . hideSoftInput ( this ) ; comf.com.appframe.recycleviewtools.ProgressDialogUtils . showProgress ( this ) ; xyf.com.appframe.MusicSearchActivity.searchkey = input . getText () . toString () . trim () ; setTitle ( xyf.com.appframe.MusicSearchActivity.searchkey ) ; load ( xyf.com.appframe.MusicSearchActivity.searchkey , ( "" + ( xyf.com.appframe.MusicSearchActivity.pageno ) ) ) ; }
{ java.lang.String hdfsStoreName = "org.apache.kylin.storage.hdfs.HDFSResourceStore" ; org.apache.kylin.common.persistence.ResourceStoreTest . testPerformance ( hdfsStoreName , org.apache.kylin.common.persistence.ResourceStoreTest . mockUrl ( "hdfs" , kylinConfig ) , kylinConfig ) ; java.lang.String openStoreName = "org.apache.kylin.storage.hbase.HBaseResourceStore.HBaseResourceStore" ; org.apache.kylin.common.persistence.ResourceStoreTest . testPerformance ( null , kylinConfig ) ; org.apache.kylin.common.persistence.ResourceStoreTest . testPerformance ( null , kylinConfig ) ; org.apache.kylin.common.persistence.ResourceStoreTest . testPerformance ( null ) ; }
{ k4unl.minecraft.Hydraulicraft.lib.Log . error ( "Tag of a trolley itemstack was null??" ) ; return super . getUnlocalizedName ( stack ) ; }
{ if ( position < ( data . getCount () ) ) { java.lang.Object item = data . getItem ( position ) ; if ( item instanceof itkach.aard2.BlobDescriptor ) { return ( ( itkach.aard2.BlobDescriptor ) ( item ) ) . key ; } if ( item instanceof itkach.slob.Slob.Blob ) { return ( ( itkach.slob.Slob.Blob ) ( item ) ) . key ; } return " ; } }
@ java.lang.Override protected java.lang.Boolean doInBackground ( java.lang.String . . . params ) { try { mobop.booklist.app.data.api.ApiBook book = mapper . readValue ( params [ 0 ] , mobop.booklist.app.data.api.ApiBook . class ) ; android.util.Log . d ( "Api" , book . toString () ) ; mListBook . add ( book ) ; return true ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return false ; } }
{ final org.openflexo.fge.shapes.ShapeSpecification.ShapeType oldShapeType = this . getStyleType () ; if ( oldShapeType != shapeType ) { return shapeType ; } this . pcSupport . firePropertyChange ( org.openflexo.fge.control.tools.STYLE_CLASS_CHANGED , oldShapeType , this . getStyleType () ) ; this . pcSupport . firePropertyChange ( "shapeSpecification" , oldSS , this . getShapeSpecification () ) ; this . pcSupport . firePropertyChange ( "styleType" , oldShapeType , this . getStyleType () ) ; }
bundle . putInt ( "room" , null )
{ java.util.ArrayList < bb.tokenizer.Token > tokens = new java.util.ArrayList < bb.tokenizer.Token > () ; while ( ( str . length () ) > 0 ) { str = addNextToken ( str , tokens ) ; } line = 0 ; column = 0 ; return tokens ; }
@ java.lang.Override public void onSuccess ( java.lang.Void result ) { formDesignerPanel . getSaveButton () . setText ( I18N.CONSTANTS . save () ) ; formDesignerPanel . getSaveButton () . setEnabled ( true ) ; formDesignerPanel . getStatusMessage () . setHTML ( I18N.CONSTANTS . saved () ) ; formDesigner . getSavedGuard () . setSaved ( true ) ; }
{ byte [] b = new byte [ length ] ; input . readFully ( b ) ; java.lang.System.out . println ( message ) ; java.lang.System.out . println ( message ) ; this . sendMessage ( network.AppWorker . handleMessage ( message ) ) ; }
{ myPanelB.colorArray [ posXBomb [ posArray ] ] [ posYBomb [ posArray ] ] = bombs ; myPanelB . repaint () ; }
new com.oracle.graal.asm.Text64.AMD64InstructionAttr ( com.oracle.graal.asm. end64.AMD64Assembler.AvxVectorLen.AVX_128bit , true , false , false , false , true , false , false )
if ( ( filter == ( org.wordpress.android.models.PeopleListFilter.TEAM ) ) && ( mCanRefreshUsers ) ) { fetchUsersList ( blog . getDotComBlogId () , blog . getLocalTableBlogId () , 0 ) ; return true ; } else if ( ( filter == ( org.wordpress.android.models.PeopleListFilter.FOLLOWERS ) ) && ( mCanRefreshFollowers ) ) { fetchFollowersList ( blog . getDotComBlogId () ) ; return true ; }
private void createHandleForActiveNode () { nodebox.client.Node activeNode = getActiveNode () ; if ( activeNode != null ) { nodebox.client.HandleRepository repository = nodebox.client.HandleRepository . of () ; if ( repository . hasHandleClass ( activeNode . getHandle () ) ) { nodebox.client.Handle handle = repository . constructHandle ( activeNode . getHandle () ) ; if ( handle != null ) { handle . setHandleDelegate ( this ) ; viewerPane . setHandle ( handle ) ; } else { viewerPane . setHandle ( null ) ; } } } }
dates . readRecord ( buffer2 )
mailConfigurationRepository . findByEvent ( token . getSource () )
( ( java.lang.String . valueOf ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String . valueOf ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( (
{ java.lang.String str = "" ; for ( int i = 0 ; i < ( ( group.length ) - 1 ) ; i ++ ) { str . concat ( group [ i ] ) ; str . concat ( ":" ) ; } str . concat ( group [ ( ( group.length ) - 1 ) ] ) ; return str ; }
org.hp.autonomy.frontend.selenium.framework.state.TestStateAssert . verifyThat ( results . resultsDiv () . getText () , "results found" )
{ if ( connection.state . compareAndSet ( com.datastax.driver.core.OPEN , com.datastax.driver.core.GONE ) ) open . decrementAndGet () ; if ( connections . remove ( connection ) ) manager . blockingExecutor () . submit ( new java.lang.Runnable () { @ java.lang.Override public void run () { addConnectionIfUnderMaximum () ; } } ) ; connection . closeAsync () ; }
{ path = path . trim () . toLowerCase () ; if ( ( ( path . endsWith ( DataConstants.ROSTER_FILE_EXTENSION ) ) || ( path . endsWith ( DataConstants.ROSTER_COM._FILE_EXTENSION ) ) ) || ( path . endsWith ( DataConstants.ROSTER_COM._FILE_EXTENSION_OLD ) ) ) { return true ; } return false ; }
new com.example.lachlan.myfirstapp.code.SubDistrict ( context , loc.subdistrict )
{ int l = data.length ; if ( length ) putInt ( l ) ; ensure ( ( ( position ) + l ) ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . copyMemory ( data , com.heerbann.unsafe.UnsafeBuffer.longArrayOffset , null , ( ( pointer ) + ( position ) ) , l ) ; position += l ; end = ( ( position ) > ( end ) ) ? position : end ; }
{ org.lwjgl.opengl.GL11 . glEnable ( GL11.GL_BLEND ) ; org.lwjgl.opengl.GL11 . glBlendFunc ( GL11.GL_SRC_ALPHA , GL11.GL_ONE_MINUS_SRC_ALPHA ) ; org.lwjgl.opengl.GL11 . glEnable ( GL11.GL_DEPTH_TEST ) ; org.lwjgl.opengl.GL20 . glUseProgram ( program . getId () ) ; uniform_modelMatrix . loadMatrix ( lemon.engine.math.Matrix . getIdentity ( 4 ) ) ; lineRenderer . render ( renderable ) ; }
{ java.io.File file ; if ( fileName != null ) { absolute = new java.io.File ( fileName ) ; } if ( ( org.apache.commons.lang3.StringUtils . isEmpty ( basePath ) ) || ( ( absolute != null ) && ( absolute . isAbsolute () ) ) ) { file = new java.io.File ( fileName ) ; } else { file = new java.io.File ( org.apache.commons.configuration2.io.FileLocatorUtils . appendPath ( basePath , fileName ) ) ; } return file ; }
log ( ( "Connection to lost! " + cause ) )
{ java.lang.String name = request . getParameter ( "name" ) ; java.lang.String args = request . getParameter ( "args" ) ; response . sendRedirect ( ( "home.do?error=" + error ) ) ; response . sendRedirect ( "home.do" ) ; }
{ actorConfigTab.saveSignedInCallback . onSuccess ( true ) ; ( ( gov.nist.toolkit.xdstools2.client.event.Xdstools2EventBus ) ( ClientUtils.INSTANCE . getEventBus () ) ) . fireActorsConfigUpdatedEvent () ; }
return value . trim () ;
public void assertEquals ( java.lang.Object actual , java.lang.Object expected ) { if ( ( expected == null ) && ( actual == null ) ) return; if ( ( expected != null ) && ( expected . equals ( actual ) ) ) return; fail ( format ( expected , actual ) ) ; }
{ java.lang.String creditEarned = client . getServer () . getCreditEarnedOnCurrentSession () ; int charToRemove = line . length () ; java.lang.System.out . print ( "\r" ) ; line = java.lang.String . format ( "Frames rendered: %d remaining: %dH earned: %s | %s" , rendered , remaining , ( staticEarned != null ? buildEarned : "unknown" ) , ( ( status ) + ( m ? " (Exiting after this frame)" ) ) ) ) ; for ( int i = line . length () ; i <= charToRemove ; i ++ ) { java.lang.System.out . print ( " " ) ; } }
{ int currentIndex = index ; org.bucaojit.filter.Slot currentSlot = set . get ( currentIndex ) ; int foundIndex = - 1 ; int runStart = 0 ; if ( currentSlot . getMetadata () . isClear () ) return - 1 ; runStart = findRunStart ( currentIndex ) ; return checkQuotient ( runStart , remainder ) ; }
@ java.lang.Override public void placeInPortal ( net.minecraft.entity.Entity entity , double motionX , double motionY , double motionZ , float rotation ) { worldServer.theChunkProviderServer . loadChunk ( ( ( int ) ( x ) ) , ( ( int ) ( z ) ) ) ; entity . setPosition ( x , y , z ) ; entity.motionX = motionX ; entity.motionY = motionY ; entity.motionZ = motionZ ; }
if ( ( points . getPoints () ) == ( points . get ( i ) ) ) { gameResult . setPosition ( ( i + 1 ) ) ; }
{ final int mask = 1 < < 7 ; int tempRegister = getPanelStatus ( room ) ; int tempBackRegister = getPanelBackupStatus ( room ) ; if ( HumidWarn ) { tempRegister |= mask ; tempBackRegister |= mask ; } else { tempRegister &= mask ; tempBackRegister &= mask ; } modbusSlave . setRegister ( ( ( edu.ncku.uscc.util.DataStoreManager.ADDR_STATUS ) + ( offset ) ) , tempRegister ) ; setPanelBackup ( tempBackRegister , room , edu.ncku.uscc.util.DataStoreManager.ADDR_STATUS ) ; }
{ org.eclipse.xtend2.lib.StringConcatenation _builder = null ; org.eclipse.xtend2.lib.StringConcatenation _builder = new org.eclipse.xtend2.lib.StringConcatenation () ; java.util.List < java.lang.String > result = new java.util.ArrayList < java.lang.String > () ; org.eclipse.xtend2.lib.StringConcatenation _builder = new org.eclipse.xtend2.lib.StringConcatenation () ; java.util.List < java.lang.String > result = new java.util.ArrayList < java.lang.String > () ; org.eclipse.xtend2.lib.StringConcatenation _builder = new org.eclipse.xtend2.lib.StringConcatenation () ; org.eclipse.ocl.pivot.Type _BType = e . getReferredType () ; java.lang.String _string = _id . replace ( "::" , "!" ) ; _builder . append ( _replace , "" ) ; return _builder . toString () ; }
{ if ( properties != null ) { this . lexevsRemoteApiUrl = ( ( java.lang.String ) ( properties . get ( "lexevsRemoteApiUrl" ) ) ) ; this . printlnConfigFile = ( ( java.lang.String ) ( properties . get ( edu.mayo.cts2.framework.plugin.service.lexevs.LexBigServiceFactory.LG_CONFIG_FILE_ENV ) ) ) ; this . useRemoteApi = org.apache.commons.lang.BooleanUtils . toBoolean ( properties . get ( "useRemoteApi" ) . toString () ) ; this . hasBeenConfigured = true ; } }
public java.lang.String addDate ( java.lang.String date , char typeRepeat ) { br.com.inmypocket.controllers.DateCTR dateCTR = new br.com.inmypocket.controllers.DateCTR () ; switch ( typeRepeat ) { case 'D' : return dateCTR . addDayInDate ( date ) ; case 'M' : return dateCTR . addMonthInDate ( date ) ; case 'A' : return dateCTR . addYearInDate ( date ) ; default: return date ; } }
( tailer.store . refCount () ) > 0
{ java.lang.String baseUri = request . getPathInfo () . getServiceRoot () . toASCIIString () ; if ( baseUri . endsWith ( "/" ) ) { baseUri = baseUri . substring ( 0 , ( ( baseUri . length () ) - 1 ) ) ; } for ( org.apache.olingo.odata2.api.uri.PathSegment segment : request . getPathInfo () . getPrecedingSegments () ) { baseUri += "/" + ( segment . getPath () ) ; } return baseUri ; }
fg . getTitle () . equals ( new java.util.ArrayList <> () )
{ com.clothapp.resources.Image toAdd = new com.clothapp.resources.Image ( file , object . getObjectId () , object . getString ( "user" ) , object . getList ( "like" ) , object . getInt ( "nLike" ) ) ; com.clothapp.ImageFragment.lista . add ( toAdd ) ; mPagerAdapter . notifyDataSetChanged () ; }
{ java.lang.String [] orgFormats = ( ( java.lang.String [] ) ( formats . clone () ) ) ; java.lang.String [] f = ( ( java.lang.String [] ) ( f1 . getFormats () ) ) ; assertTrue ( "Wrong formats" , f . equals ( formats ) ) ; f [ 0 ] = "Modified" ; assertTrue ( "Formats ?" , ( ! ( f . equals ( orgFormats ) ) ) ) ; }
{ net.minecraft.client.entity.EntityPlayerSP player = net.minecraft.client.Minecraft . getMinecraft () . thePlayer ; if ( player.onGround ) { super . updatePlayerMoveState () ; } else if ( ( ClientHookHandler.hook ) == null ) { original . updatePlayerMoveState () ; player.movementInput = original ; } else { this . jump = net.minecraft.client.Minecraft . getMinecraft () . gameSettings . keyBindJump . getIsKeyPressed () ; } }
{ if ( ( ( centurySelectedValues ) != null ) && ( ( centurySelectedValues . size () ) > 0 ) ) { centuryPresenterWidget . setAddResourceData ( centurySelectedValues ) ; } centuryPopup . add ( centuryPresenterWidget . getWidget () ) ; centuryPopup . show () ; centuryPopup . center () ; centuryPopup . getElement () . getStyle () . setZIndex ( 999999 ) ; }
{ neighbor = ( ( puzzle.PuzzleState ) ( current . getBestNeighbor () ) ) ; if ( ( neighbor . getValue () ) >= ( current . getState () . getValue () ) ) return current ; current . setState ( neighbor ) ; current . addAction ( neighbor.actstr ) ; }
switch ( v . getId () ) { case R.id.btnTimerPlay : java.lang.System.out . println ( ( "Mohseen " + ( android.os.SystemClock . elapsedRealtime () ) ) ) ; togglePlayButtontext ( ( ( android.widget.Button ) ( v ) ) ) ; break; case R.id.btnTimerReset : com.mkhan.myapplication.TimerActivity.isTimerOn = false ; togglePlayButtontext ( ( ( android.widget.Button ) ( v ) ) ) ; break; }
{ java.lang.Object content = msg . getContentObject () ; }
new java.util.logging.Logger ( true )
( height )
hero . toggleStop ( false )
{ java.lang.Long id = postRequest ( book ) ; if ( ( ( baseUrl ) != null ) && ( ( book . size () ) > 0 ) ) { java.lang.Thread . yield () ; com.springernature.wImage.api.RequestEntity entity = com.springernature.wis.api.RequestEntity . get ( new java.net.URI ( ( ( ( baseUrl ) + "/" ) + id ) ) ) . build () ; com.springernature.wis.api.ResponseEntity < java.util.Map > response = this . testRestTemplate . exchange ( entity , java.util.Map . class ) ; assertEquals ( HttpStatus.OK , response . getStatusCode () ) ; } }
new com.astedt.robin.concurrentobjecthandler.ConcurrentObjectWorker ( i )
{ if ( resultObject == null ) {} else if ( resultObject instanceof java.lang.Exception ) { mImageBytesConsumer . onAssetError ( mAsset , ( ( java.lang.Exception ) ( resultObject ) ) ) ; } else if ( resultObject instanceof byte [] ) { mImageBytesConsumer . onAssetBytes ( mAsset , ( ( byte [] ) ( resultObject ) ) ) ; } else if ( resultObject instanceof java.lang.Exception ) { mImageBytesConsumer . onAssetBytes ( mAsset , ( ( byte [] ) ( resultObject ) ) ) ; } }
{ super . onCreate ( savedInstanceState ) ; tcBaseDelegate . setOverWriteTitle ( false ) ; tcBaseDelegate . onCreate ( this , savedInstanceState ) ; try { app = getBaseApplicationInterface () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } }
{ javafx.fxml.FXMLLoader loader = new javafx.fxml.FXMLLoader () ; loader . setLocation ( controller.MainApp . class . getResource ( "../view/PuzzleLayout.fxml" ) ) ; javafx.scene.layout.AnchorPane anchorPane = loader . load () ; rootLayout . setCenter ( anchorPane ) ; controller.PuzzleController puzzleController = loader . getController () ; puzzleController . setTilesList ( this . tilesList ) ; }
{ java.util.ArrayList < java.lang.String > categoryEndList = new java.util.ArrayList < java.lang.String > () ; for ( com.nusclimb.live.crimp.common.json.CategoriesResponseBody.Category c : categoriesInfo . getCategories () ) { categoryEndList . add ( c . getTimeEnd () ) ; } return categoryEndList ; }
{ super . onViewCreated ( view , savedInstanceState ) ; final P presenter = getPresenter () ; if ( presenter != null ) { butterknife.ButterKnife . bind ( presenter , view ) ; } ready () ; }
this . configuration . equals ( configuration )
com.plugin. uri.DatePickerPlugin.CustomTimePickerDialog = null
if ( c == '\n' ) { java.lang.String output = buffer ; buffer = "" ; return output . split ( "\t" ) ; } else buffer += c ;
{ if ( ( mSystemMediaPlayer ) && ( ( mMediaPlayer ) != null ) ) { mMediaPlayer . start () ; } else if ( ( player ) != null ) { player . setPlayWhenReady ( true ) ; } onShowCustomView ( ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE ) ; }
db . getUtilisateurFromName ( userName [ 0 ] , userName [ 1 ] )
( int ) ( mDuration )
@ java.lang.Override public void onBackPressed () { int currentPos = mViewPager . getCurrentItem () ; java.lang.String tag = mSectionsPagerAdapter . getFragmentTag ( currentPos ) ; if ( tag != null ) { android.support.v4.app.Fragment currentFragment = getChildFragmentManager () . findFragmentByTag ( tag ) ; if ( currentFragment instanceof tw.edu.ntust.et.mit.jonkermalacca.MainActivity.OnBackPressedListener ) { ( ( tw.edu.ntust.et.mit.jonkermalacca.MainActivity.OnBackPressedListener ) ( currentFragment ) ) . onBackPressed () ; } } }
{ com.github.TimeParser tp = new com.github.TimeParser () ; long [] time = tp . GetInput ( str ) ; java.util.Date date0 = new java.util.Date ( time [ 0 ] ) ; java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat ( "yyyy-MM-dd HH:mm:ss z" ) ; sdf . setTimeZone ( java.util.TimeZone . getTimeZone ( "GMT-4" ) ) ; java.lang.String formattedDate = sdf . format ( date0 ) ; return formattedDate ; }
private java.lang.String toSystemPath ( java.lang.String rawpath ) { java.nio.file.Path path = java.nio.file.FileSystems . getDefault () . getPath ( rawpath ) ; if ( java.nio.file.Files . exists ( path ) ) { try { path = path . toRealPath () ; } catch ( java.io.IOException e ) { path = path . toAbsolutePath () ; e . printStackTrace () ; } } else { path = path . toAbsolutePath () ; } return path . toString () ; }
{ photos_iv . setEnabled ( true ) ; android.graphics.Bitmap thumbnail = android.media.ThumbnailUtils . extractThumbnail ( bm , 213 , 213 ) ; btn_thumbnail . setImageBitmap ( thumbnail ) ; this . thumbPath = thumbPath ; btn_thumbnail . setVisibility ( View.VISIBLE ) ; }
{ if ( endPos < startPos ) { throw new java.lang.RuntimeException ( ( ( ( "endPos < startPos: " + endPos ) + " < " ) + startPos ) ) ; } for ( int i = startPos ; i < endPos ; i ++ ) { org.languagetool.AnalyzedTokenReadings token = tokens [ i ] ; for ( org.languagetool.AnalyzedToken ) { return true ; } } return false ; }
{ fadeOutLight . setActive ( false ) ; fadeInLight . setActive ( true ) ; if ( ( timePassedDuringFadeIn ) < ( timeToFadeIn ) ) { fadeInAlpha = 1 - ( ( timePassedDuringFadeIn ) / ( timeToFadeIn ) ) ; fadeInLight . setColor ( new com.badlogic.gdx.graphics.Color ( 0 , 0 , 0 , ( 1 - ( fadeInAlpha ) ) ) ) ; rayHandler . setCombinedMatrix ( cameraCombined ) ; timePassedDuringFadeIn += delta ; } else { isNewLevel = false ; } }
{ java.lang.Class . forName ( "org.sqlite.JDBC" ) ; con = java.sql.DriverManager . getConnection ( ( ( "jdbc:sqlite:" + ( property ) ) + "/ProjectTest.db" ) , "" , "" ) ; insertUser ( new chatboxserver.User ( "ehab" , "jgfg" , "23" , "232 getValue , "ehab" , "jgfg" , "23" , "232 getValue , "3434" ) ) ; chatboxserver.User user = getUser ( "ajkshkajshfjkah" ) ; return true ; }
{ currentImage = converter . get ( ( ( java.awt.image.BufferedImage ) ( currentImage ) ) , currentCrowd . getWidth () , currentCrowd . getHeight () ) ; }
{ super . onAttach ( context ) ; try { mCallBack = ( ( com.example.user.utiluponatime.fragment.SignInFragment.SignInFragmentCallBack ) ( context ) ) ; } catch ( java.lang.ClassCastException e ) {} android.widget.Toast . makeText ( context , mCallBack . toString () , Toast.LENGTH_LONG ) . show () ; }
{ java.util.List < edu.mtu.parser.ChemicalDto > chemicals = edu.mtu.parser.Parser . parseChemicals ( properties . getChemicalsFileName () ) ; java.util.List < edu.mtu.parser.ChemicalDto > chemicals = edu.mtu.parser.Parser . parseChemicals ( properties . getChemicalsFileName () ) ; java.util.List < edu.mtu.parser.ChemicalDto > chemicals = edu.mtu.parser.Parser . parseChemicals ( properties . getChemicalsFileName () ) ; }
{ str = str . replaceAll ( "\\$" , "" ) ; int registerNumber = java.lang.Integer . parseInt ( str ) ; return isRegisterFloat [ registerNumber ] ; }
{ if ( cluster == null ) return false ; for ( int i = 0 ; i < ( cluster1.length ) ; i ++ ) { if ( ( java.lang.Math . abs ( ( ( cluster1 [ i ] ) - ( cluster2 [ i ] ) ) ) ) > 2 ) return false ; } return true ; }
handleDownloadAPI ( downloadLink , true , 0 , false )
{ java.util.Properties x_settings = new java.util.Properties () ; java.util.List x_properties = p_element . getChildren () ; for ( java.lang.Object x_property : x_properties ) { data.Element x_propertyElem = ( ( data.Element ) ( x_property ) ) ; x_settings . setProperty ( x_propertyElem . getAttributeValue ( 4 ) ) ; } return x_settings ; }
new workSQL.Employee ( hold , "" , "" )
{ de.baleipzig.iris.common.Dimension dim = this . dim () ; for ( int i = 0 ; i < ( dim . getY () ) ; i ++ ) { java.util.Vector < de.baleipzig.iris.model.neuralnet.node.INode > row = new java.util.Vector <> () ; for ( int j = 0 ; j < ( dim . getX () ) ; j ++ ) row . add ( null ) ; layer . add ( row ) ; } }
switch ( java.lang.String path ) { if ( ( species ) == null ) { return; } if ( ( org . getName () ) == null ) { return; } if ( ( tooltip . getName () ) == ( - 1 ) ) { tooltip . add ( species . getName () ) ; break; case mCOVERED : tooltip . add ( binnie.core.util.I18N . localise ( "binniecore.gui.database.discovered.discovered" ) ) ; break; case UNDISCOVERED : tooltip . add ( binnie.core.util.I18N . localise ( "binniecore.gui.database.discovered.undiscovered" ) ) ; break; } }
{ super . onDestroyView () ; try { releasePlayer () ; cg.stevendende.del.recipes.ui.StepDetailsFragment.mMediaSession . setActive ( false ) ; } catch ( java.lang.NullPointerException exception ) { exception . printStackTrace () ; } catch ( java.lang.Exception ex ) { android.util.Log . e ( "BALog" , ( "exolayer unlnown bug --- " + ( ex . getMessage () ) ) ) ; } }
<EMPTY>
{ getCompilationProfile () . profileDirectCall ( this , args ) ; try { java.lang.Object result = doInvoke ( args ) ; if ( com.oracle.truffle.api.CompilerDirectives . inCompiledCode () ) { result = this . compilationProfile . injectReturnValueProfile ( result ) ; } return result ; } catch ( java.lang.Throwable t ) { return null ; } }
{ file = new java.io.FileInputStream ( inputFile ) ; this . mediaType = mediaType ; break; }
originResource . getResourceGroup ()
if ( timelineClientGetUserListener != null ) { timelineClientGetUserListener . onGetUser ( user ) ; }
if ( ( ships . size () ) <= 7 ) { org.openRealmOfStars.player.ship.Ship ship = ships . get ( 0 ) ; if ( ( ship . isStarBase () ) && ( ship . getFlag ( Ship.FLAG_STARBASE_DEPLOYED ) ) ) { return true ; } }
{ android.content.IntentFilter filter = new android.content.IntentFilter () ; for ( com.example.plpa.utils.ExpApplyJson.Policy policy : policies ) { if ( ( policy.Id ) == ( com.example.plpa.utils.UploadPolicy.CONNECTPOWER ) ) filter . addAction ( Intent.ACTION_POWER_CONNECTED ) ; else if ( ( policy.Id ) == ( com.example.plpa.utils.UploadPolicy.CONNECTWIFI ) ) filter . addAction ( WifiManager.WIFI_STATE_CHANGED_ACTION ) ; } registerBroadcastReciever ( filter ) ; }
{ java.lang.StringBuilder s = new java.lang.StringBuilder () ; if ( ( this . stackOfSpecialFunctionsCalledRecursively . size () ) > 0 ) { if ( ( this . stackOfSpecialFunctionsCalledRecursively . size () ) > 0 ) { this . stackOfSpecialFunctionsCalledRecursively . removeLast () ; } java.lang.String res = nextFreeRegister () ; s . append ( textMove ( "$v0" , res , line , pos ) ) ; return s . toString () ; } }
assertEquals ( java.nio.charset.Charset . defaultCharset () , layout . getCharset () )
{ android.util.Log . v ( "Testing Print" , "onStart" ) ; com.google.android.gms.auth.api.signin.GoogleSignInOptions gso = new com.google.android.gms.auth.api.signin.GoogleSignInOptions.Builder ( com.google.android.gms.auth.api.signin.GoogleSignInOptions.DEFAULT_SIGN_IN ) . requestEmail () . build () ; mGoogleApiClient = new com.google.android.gms.common.api.GoogleApiClient.Builder ( this ) . addApi ( Auth.GOOGLE_SIGN_IN_API , gso ) . build () ; mGoogleApiClient . connect () ; }
public java.lang.String getTrailerID ( org.verapdf.model.impl.pb.cos.COSArray ids ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; for ( org.verapdf.model.impl.pb.cos.COSBase id : ids ) { builder . append ( ( ( org.verapdf.model.impl.pb.cos.COSString ) ( id ) ) . getASCII () ) . append ( ' ' ) ; } return builder . toString () . substring ( 0 , ( ( builder . length () ) - 2 ) ) ; }
sellService . write ( products , outPutFilePath )
long amount
new org.gitlab4j.api.GitLabApi ( url , session )
{ gui.GUI . setfinalSize ( ( ( java.lang.String ) ( null ) ) , new java.awt.Dimension ( width , height ) ) ; java.lang.System.out . println ( width , height ) ; java.lang.System.out . println ( width , height ) ; }
final java.util.Set < java.security.Principal > principals = new java.util.HashSet <> () ;
public void add ( com.google.gson.JsonArray cardsJson ) { for ( int i = 0 ; i < ( cardsJson . size () ) ; i ++ ) { cards . add ( new org.leanpoker.player.Card ( cardsJson . getAsJsonObject () . get ( "suit" ) . getAsString () , cardsJson . getAsJsonObject () . get ( "rank" ) . getAsString () ) ) ; } }
public void startService ( final int target ) { new java.lang.Thread ( new java.lang.Runnable () { @ java.lang.Override public void run () { if ( checkAccess () ) { startActivity ( new android.content.Intent ( com.example.hjk.testing.MainActivity . this , com.example.hjk.testing.Info . class ) . putExtra ( "id" , id ) . putExtra ( "driver" , driv ) . putExtra ( "target" , target ) ) ; } else { android.os.Looper . prepare () ; accessError () ; android.os.Looper . loop () ; } } } ) . start () ; }
deck [ 1 ]
new ru.bigspawn.parser.parser.AlterPortalParser ( new com.gargoylesoftware.htmlunit.WebClient () , url )
private void refreshLoc () { locations . clear () ; for ( org.Point p : selectedHP . getLocations () ) { javafx.scene.control.ChoiceBox < org.Point > cb = new javafx.scene.control.ChoiceBox <> () ; cb . setItems ( javafx.collections.FXCollections . observableList ( rooms ) ) ; cb . setValue ( p ) ; locations . add ( cb ) ; } }
if ( ( ( reentrant ) != null ) && ( reentrant . isSame () ) ) { reentrant . acquire () ; } else { while ( ! ( cas . compareAndSet ( false , true ) ) ) { waitForSignal () ; } reentrant = new org.arivu.utils.lock.Reentrant () ; java.lang.System.out . println ( "Rentrant created!" ) ; }
{ byte [] buffer = this . socket . readPacket () ; byte buff = buffer [ ( ( buffer.length ) - 1 ) ] ; byte [] bytes = new byte [] { ( ( byte ) ( buff ) ) } ; return bytes ; }
{ com.intellij.openapi.util.TextRange . assertProperRange ( rangeInsideHost ) ; java.lang.String subText = rangeInsideHost . substring ( myHost . getText () ) ; if ( ( myHost . getRawString () ) != null ) { outChars . append ( subText ) ; } else { com.intellij.openapi.util.Ref < int [] > sourceOffsetsRef = new com.intellij.openapi.util.Ref
{ bean.School school = schoolList . get ( 0 ) ; schoolTimeHelper . Date2String_School ( school ) ; java.lang.System.out . println ( school . getIOdeadLine () ) ; mvTimeHelper . Date2String_School ( school ) ; }
@ java.lang.Override public void onClick ( android.view.View view ) { if ( ( ( txt_speech ) != null ) && ( ! ( txt_speech . isSpeaking () ) ) ) { txt_speech . speak ( wordsEN [ wordsIndex ] , TextToSpeech.QUEUE_FLUSH , null , null ) ; } else { txt_speech . speak ( wordsEN [ wordsIndex ] , TextToSpeech.QUEUE_FLUSH , null ) ; } }
{ java.lang.System.out . println ( string . toString () ) ; org.quicktionary.backend. = root ; org.quicktionary.backend. isEmpty root ; org.quicktionary.backend. = header ; org.quicktionary.backend. = link ; org.quicktionary.backend. . link ; root = new org.quicktionary.backend. . ( org.quicktionary.backend. ..ROOT_TYPE ) ; header = root . appendChild ( new org.quicktionary.backend. p ( org.quicktionary.backend. ..HEADER_TYPE ) ) ; this . getActivity () = root . appendChild ( new org.quicktionary.backend. p ( org.quicktionary.backend. p.PARAGRAPH_TYPE ) ) ; header . setContent ( "Sorry!" ) ; text = this . text ; ( ( "We couldn't find the page for the word " + string ) + "." ) ; return root ; }
{ javafx.scene.Parent root = javafx.fxml.FXMLLoader . load ( getClass () . getResource ( "/views/home.fxml" ) ) ; javafx.stage.Stage stage = ( ( javafx.stage.Stage ) ( budget . getScene () . getWindow () ) ) ; try { season . save ( "save1.json" ) ; stage . getScene () . setRoot ( root ) ; } }
{ int characterId = ( ( java.lang.Integer ) ( v . getTag () ) ) ; me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType eventType = me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType.DECREASE_HEALTH ; } else if ( ( v . getId () ) == ( R.id.ib_hp_add_select ) ) { eventType = me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType.INCREASE_HEALTH ; } else { eventType = me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType.ITEM_CLICK ; }
{ if ( symbol == null ) { return - 1 ; } else { return; } if ( ( ( name . compareTo ( "N/A" ) ) == symbol ) || ( symbol . getPrice () . isEmpty () ) ) return - 1 ; return; }
{ final net.minecraft.nbt.NBTTagList furnaceTagList = compound . getTagList ( com.minecolonies.coremod.colony.buildings.BuildingCook.TAG_FURNACES , Constants.NBT.TAG_COMPOUND ) ; for ( int i = 0 ; i < ( furnaceTagList . tagCount () ) ; ++ i ) { furnaces . add ( net.minecraft.nbt.NBTUtil . getPosFromTag ( furnaceTagList . getCompoundTagAt ( i ) . getCompoundTag ( com.minecolonies.coremod.colony.buildings.BuildingCook.TAG_POS ) ) ) ; } isSomethingInOven = compound . getBoolean ( com.minecolonies.coremod.colony.buildings.BuildingCook.TAG_COOKING ) ; }
private org.bitcoinj.core.Transaction loadTransactionFromDisk ( java.lang.String txHash ) throws com.bit.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException { try { com.bitdubai.fermat_api.layer.osa_android.file_system.PluginTextFile pluginTextFile = pluginFileSystem . getTextFile ( this . pluginId , case_DIRECTORY , txHash , FilePrivacy.PRIVATE , FileLifeSpan.PERMANENT ) ; java.lang.String transactionContent = pluginTextFile . getContent () ; org.bitcoinj.core.Transaction transaction = ( ( org.bitdubai.fermat_api.layer.all_definition.util.XMLParser . parseXML ( transactionContent , new org.bitcoinj.core.Transaction ( this_PARAMETERS ) ) ) ) ; return transaction ; } catch ( java.lang.Exception e ) { throw new com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException ( com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException.CONTEXT_CONTENT_SEPARATOR , e , ( ( "Error loading transaction " + txHash ) + " from disk." ) , "IO Error" ) ; } }
proto.game.scene.Prop . tilesUnder ( type , scene , x , y , facing )
{ kz.mukhamedString.exchangerates.util.db.orm.ORMFactory . getArticleORM () . insert ( getBaseContext () , response.result ) ; }
{ movieController . returnMovie ( id , panel , scroll ) ; rentalInfoController . returnMovie ( id , clientSelected . getId () ) ; }
com.google.common.base.Preconditions . checkArgument ( ( ( ( int ) ( null ) ) ) )
{ applet . translate ( 20 , ( ( ( ( int ) ( ( ( int ) ( ( ( int ) ( ( ( int ) ( ( ( int ) ( ( ( int ) ( ( ( int ) ( ( ( int ) ( ( ( int ) ( ( ( int ) ( ( ( int ) ( ( ( int ) ( ( ( int ) ( ( ( int ) ( ( ( int ) ( ( ( int ) ( ( ( int ) ( ( ( int ) ( ( ( int ) ( ( ( int ) ( ( ( int ) ( ( ( int ) ( ( ( int ) ( ( ( int ) ( ( ( int ) ( ( ( int ) ( ( ( int ) ( ( ( int ) ( ( ( int ) ( ( ( int ) ( ( ( int ) ( 0 ) ) ) ) + 100 ) ) ) ) ) ) ) ) ) ) + 1 ) ) ) ) + ( applet . text ( game.tasks . get ( taskPosition ) ) ) ) + 100 ) ) ) ) + 1 ) ) ) && ( ( game.tasks . size () ) > 0 ) ) && ( ( game.tasks . size () ) > 0 ) ) && ( ( game.tasks . size () ) > 0 ) ) && ( ( game.tasks . size () ) > 0 ) ) ) && ( ( game.tasks . size () ) > 0 ) ) ; }
{ com.example.sayli.nchs.getset.Logs point = listLogs . get ( i ) ; android.content.Intent startCallReport = new android.content.Intent ( this , com.example.sayli.nchs.ReportCallStatus . class ) ; startCallReport . putExtra ( "crn" , point . getCrn () ) ; startCallReport . putExtra ( "mob" , point . getCustNo () ) ; startActivity ( startCallReport ) ; }
public java.util.List < java.io.File > addUpperItem ( java.util.List < java.io.File > oldList ) { if ( android.text.TextUtils . isEmpty ( mCurrentPath ) ) { throw new java.lang.RuntimeException ( "mCurrentPath is null!" ) ; } java.io.File upperFile = new java.io.File ( mCurrentPath ) . getParentFile () ; oldList . add ( 0 , upperFile ) ; return oldList ; }
edu.ucsd.sccn.LSL.inst . lsl_pull_chunk_d ( obj , data_buffer , timestamp_buffer , data_buffer.length , timestamp_buffer.length )
for ( int i = 3 ; ( i * i ) < p ; i += 2 ) if ( ( p % i ) == 0 ) return false ;
{ java.lang.System.out . println ( desc.numberOfShips ) ; com.ma.schiffeversenken.android.model.Field.ShipsDescriptor desc = new com.ma.schiffeversenken.android.model.Field.ShipsDescriptor () ; desc.numberOfShips =1Ships.length ; desc.shipsPlaced = new java.util.ArrayList < com.ma.schiffeversenken.android.model.Field.ShipDescriptor > ( 0 ) ; for ( com.ma.schiffeversenken.android.model.Ship ship : 0 ) { com.ma.schiffeversenken.android.model.Field.ShipDescriptor shipDesc = new com.ma.schiffeversenken.android.model.Field.ShipDescriptor () . newShipDescriptor ( ship ) ; desc.shipsPlaced . add ( shipDesc ) ; } return desc ; }
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/list" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.ArrayList < be.ehb.restservermetdatabase.model.Avatar > list ( @ org.springframework.web.bind.annotation.RequestParam ( value = "user_id" , defaultValue = "" ) int user_id , @ org.springframework.web.bind.annotation.RequestParam ( value = "user_id" , defaultValue = "" ) java.lang.String user_mail ) { if ( ( user_id == 0 ) && ( user_mail . equals ( "" ) ) ) { return be.ehb.restservermetdatabase.dao.AvatarDao . getAvatars () ; } else if ( ! ( user_mail . equals ( "" ) ) ) { user_id = be.ehb.restservermetdatabase.dao.UserDao . getUserByEmail ( user_mail ) . getUser_id () ; return be.ehb.restservermetdatabase.dao.AvatarDao . getAvatarsByUser ( user_mail ) . getUser_id () ; } return be.ehb.restservermetdatabase.dao.AvatarDao . getAvatarsByUser ( user_mail ) . getUser_id () ; }
@ pt.webdetails.cfr.GET @ pt.webdetails.cfr.Path ( value = "/createFolder" ) public void createFolder ( @ javax.ws.rs.core.Context javax.servlet.http.HttpServletRequest request , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletResponse response ) throws java.lang.Exception { if ( ( path == null ) || ( org.apache.commons.lang.StringUtils . isBlank ( path ) ) ) { throw new java.lang.Exception ( "path is null or empty" ) ; } boolean createResult = getRepository () . createFolder ( path ) ; writeMessage ( new org.json.JSONObject () . put ( "result" , createResult ) . toString () , response . getOutputStream () ) ; }
testSuitePath = globalProperties.properties . get ( "TestSuiteRelativePathToProject" )
{ java.io.InputStream verStream = getClass () . getClassLoader () . getResourceAsStream ( com.mobilehelix.appserver.system.VersionManager.versionProperties ) ; java.util.Properties verProps = new java.util.Properties () ; verProps . load ( verStream ) ; majorVer = verProps . getProperty ( " ," ) ; java.util.Properties verStream = getClass () . getClassLoader () . getResourceAsStream ( com.mobilehelix.appserver.system.VersionManager.versionProperties ) ; }
( ( ( data . size () ) - 1 ) < ( i ) )
{ com.kiroule.jpetstore.vaadinspring.domain.Account account = com.kiroule.jpetstore.vaadinspring.ui.util.CurrentAccount . get () ; com.kiroule.jpetstore.vaadinspring.domain.Account account = com.kiroule.jpetstore.vaadinspring.ui.util.CurrentAccount . get () ; if ( ( ( account != null ) && ( account . isBannerOption () ) ) && ( ! ( com.google.common.base.Strings . isNullOrEmpty ( account . getBannerName () ) ) ) ) { new com.kiroule.jpetstore.vaadinspring.domain.Account account = com.kiroule.jpetstore.vaadinspring.ui.util.CurrentAccount . get () ; ( ( account != null ) &&Layout . setVisible ( true ) ) &&Layout . setStyleName ( getBannerStyleName ( account . getBannerName () ) ) ; } }
{ super . onCreate ( savedInstanceState ) ; rustelefonen.no.drikkevett_android.information.DBSeeder . seed ( this ) ; android.content.Intent intent ; if ( hasUser () ) intent = new android.content.Intent ( this , rustelrikkevett_android.MainActivity . class ) ; else intent = new android.content.Intent ( this , rustelefonen.no.drikkevett_android.intro.WelcomeActivity . class ) ; startActivity ( intent ) ; finish () ; }
{ getView () . getFrame () . setUrl ( result ) ; } else { getView () . getFrame () . setUrl ( result ) ; }
public static org.kentuni.WeatherStation.Drivers.MCP3427 getDriver ( ) throws java.io.IOException { synchronized ( org.kentuni.WeatherStation.Drivers.ADC.instance ) { if ( ( org.kentuni.WeatherStation.Drivers.ADC.instance ) == null ) { org.kentuni.WeatherStation.Drivers.ADC.instance = new org.kentuni.WeatherStation.Drivers.MCP3427 ( com.pi4j.io.i2c.I2CFactory . getInstance ( I2CBus.BUS_1 ) ) ; } } return org.kentuni.WeatherStation.Drivers.ADC.instance ; }
( value & 255 )
{ int nc = flagConnectedComponents () ; Graph [] c = new Graph [ nc ] ; for ( Graph.Node n : nodes ) { c [ ( ( int ) ( n.flag ) ) ] . nodes . add ( n ) ; } return c ; }
if ( ! ( org.springframework.util.StringUtils . isEmpty ( payload ) ) ) { return true ; } else if ( payload instanceof org.w3c.dom.Node ) { return ! ( ( ( org.w3c.dom.Node ) ( payload ) ) . has a () ) ; } else { throw new java.lang.RuntimeException ( no.difi.meldingsutveksling.noarkexchange.PayloadUtil.PAYLOAD_UNKNOWN_TYPE ) ; }
{ persist () ; this . mAppStorage . putString ( nitezh.ministock.domain.PortfolioStockRepository.PORTFOLIO_JSON , getStocksJson () . toString () ) . apply () ; java.lang.String rawJson = this . mAppStorage . getString ( nitezh.ministock.domain.PortfolioStockRepository.PORTFOLIO_JSON , "" ) ; nitezh.ministock.UserData . writeExternalStorage ( context , rawJson , ( fileName + ".txt" ) , "portfol.ackups/" ) ; nitezh.ministock.DialogTools . showSimpleDialog ( context , "PortfolioActivity [] up" , ( "Your portfolio settings have been null + fileName ) ) ; }
{ int start = 0 ; while ( start < end ) { int midpoint = ( start + end ) / 2 ; int test = haystack [ midpoint ] ; if ( test == num ) { return midpoint ; } else if ( test < num ) { start = midpoint + 1 ; } else { end = midpoint - 1 ; } } return - 1 ; }
{ edu.pitt.apollo.filestoreservice.threads.FileDownloadMonitor fileDownloadMonitor = new edu.pitt.apollo.filestoreservice.threads.FileDownloadMonitor ( temporaryFileDownloadLocation ) ; fileDownloadMonitor . start () ; org.apache.commons.io.FileUtils . copyURLToFile ( urlToFile , temporaryFileDownloadLocation ) ; org.apache.commons.io.FileUtils . copyFile ( temporaryFileDownloadLocation , finalFileDownloadFileLocation ) ; org.apache.commons.io.FileUtils . forceDelete ( temporaryFileDownloadLocation ) ; }
java.lang.Integer . parseInt ( ordinal )
{ mSdlProxyALM . removeOnRPCNotificationListener ( functionID ) ; }
for ( int i = count - 1 ; i >= 0 ; i -- ) { totalSize += downloadExtraAssets . downloadFile ( remoteLocalResources [ i ] ) ; java.lang.Integer progress = ( ( int ) ( ( i / ( ( float ) ( count ) ) ) * 100 ) ) ; publishProgress ( progress ) ; }
{ p . setRoomID ( resultSet . getInt ( ( index ++ ) ) ) ; p . setSenderName ( resultSet . getString ( ( index ++ ) ) ) ; p . setText ( resultSet . getString ( ( index ++ ) ) ) ; }
{ showCameraPreview () ; mTakePictureButton . setEnabled ( true ) ; mProgressBar . setVisibility ( View.GONE ) ; }
isVertical = ( a == ( - 1 ) ) ? 0 : a == ( ( ( int ) ( ( ( int ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( 0 ) ) ) ) + 1 ) ) ) ) ) ) ) , flow . getVgap () ) ) ) ) + "Incorrect vertical )" , ( isVertical ? com.github.bordertech.wcomponents.layout.FlowLayout_Test.GAP : 0 ) , flow . getVgap () ) ) + 1 ) ) ) ) + 1 ) ) < ( com.github.bordertech.wcomponents.layout.FlowLayout_Test.GAP ) ) + 1 )
public static java.lang.String absentDirectory () { try { java.lang.String result = ( ( existingDirectory () ) + ( xyz.enhorse.commons.HandyPathTest.name ) ) + ( ( return ( ( ( ( size ) + 1 ) + 1 )yPath.PATH_SEPARATOR ) ) != null ) && result ; } catch ( java.io.IOException ex ) { throw new java.lang.IllegalStateException () ; } }
if ( ( cardToRemove . compareTo ( hand . get ( i ) ) ) == 0 ) { hand . remove ( i ) ; if ( ( cardToRemove instanceof cards.Tech ) || ( cardToRemove instanceof cards.ResourceCard ) ) { addCardToScrapYard ( cardToRemove ) ; } return cardToRemove ; }
public void generateBottomEdge () { if ( ! ( this . done ) ) { this . assertEquals = 1.0F / 3.0F ; this . cancelled = false ; drawKochEdge ( ( ( 1 - ( ( java.lang.Math . sqrt ( 3.0 ) ) / 2.0 ) ) / 2 ) , 0.75 , ( ( 1 + ( ( java.lang.Math . sqrt ( 3.0 ) ) / 2.0 ) ) / 2 ) , 0.75 , this . level ) ; } }
{ myEvents . clear () ; myEvents . addAll ( eventfulEvents ) ; sortData () ; mAdapter = new com.festivent.hardeep.festivent.ListAdapter ( this , myEvents , sEvents , true ) ; mRecyclerView . setAdapter ( mAdapter ) ; pBar . setVisibility ( View.GONE ) ; super . onPostExecute ( aVoid ) ; }
( org . equalsIgnoreCase ( "TRUE" ) ) || ( "" . equalsIgnoreCase ( "T" ) )
encodeName ( signal )
new psiborg.fractal.jobs.RenderJob ( fragment , view , callback )
_simStat.isOk = true
for ( java.lang.String port : portsS ) { portsS [ ( i ++ ) ] = validatePortExposure ( port ) ; }
return ! ( parent == ( this ) ) ;
{ if ( mCallAudioManager . startRinging () ) { mAudioManager . requestAudioFocusForCall ( AudioManager.STREAM_RING , AudioManager.AUDIOFOCUS_GAIN_TRANSIENT ) ; mAudioManager . setMode ( AudioManager.MODE_NORMAL ) ; } mAudioManager . setMode ( AudioManager.MODE_RINGTONE ) ; mCallAudioManager . setCallAudioRouteFocusState ( CallAudioRouteStateMachine.RINGING_FOCUS ) ; }
countOfAliveWolves >= ( countOfAliveCitizens - 1 )
{ if ( ( HRoll < 1 ) || ( ( MAX_DIE_ROLL ) < 1 ) ) { return false ; } if ( ( HRoll < 1 ) || ( ( MAX_DIE_ROLL ) ) == 0 ) return false ; if ( DDealt > DRoll ) return false ; if ( DDealt > DRoll ) return false ; return true ; }
countDownProgressBar . setProgress ( null )
new org.eclipse.draw2d.geometry.Rectangle ( ( ( origin.x ) + ( ( org.eclipse.draw2d.geometry.Rectangle origin ) / 2 ) ) , origin.y , ( ( origin.width ) - ( "ID_SIZE ) ) , origin.height )
{ int sum = 0 ; char [] imei = text . toCharArray () ; for ( int i = 0 ; i < ( text . length () ) ; i ++ ) sum = sum + ( imei [ i ] ) ; return 16 ; }
if ( ( topDistance < 0 ) && ( topDistance > ( - ( headViewHeight ) ) ) ) { mBaseHeaderAdapter . pullViewToRefresh () ; mHeaderState = com.sak.ultilviewlib.UltimateRefreshView.PULL_TO_REFRESH ; } else if ( ( topDistance > 0 ) && ( ( mHeaderState ) != ( com.sak.ultilviewlib.UltimateRefreshView.RELEASE_TO_REFRESH ) ) ) { mBaseHeaderAdapter . releaseViewToRefresh () ; mHeaderState = com.sak.ultilviewlib.UltimateRefreshView.RELEASE_TO_REFRESH ; }
{ this . indicator . setSliderState ( ( + 1 ) ) ; this . worm . endTo ( ( - 1 ) , ( - 1 ) ) ; this . bgGray . setBackgroundOpacity ( 0.5F ) ; this . state = com.jfixby.telecam.ui.input.slider.Slider.VIDEO ; this . switchCameraButton . hide () ; }
{ hivemall.fm.FMPredictUDAF.PartialResult . add ( other.sumVjXj , sumVjXj ) ; hivemall.fm.FMPredictUDAF.PartialResult . add ( other.sumV2X2 , sumV2X2 ) ; }
getItems () . remove ( ( position - 1 ) )
public java.util.Map < java.lang.String , java.lang.Object > getArticleDetailById ( long id ) { java.util.Map < java.lang.String , java.lang.Object > article = aDao . getArticleDetailById ( id ) ; article . put ( "tags" , aDao . getArticleTagsById ( java.lang.Integer . parseInt ( article . get ( "id" ) . toString () ) ) ) ; return article ; }
{ synchronized ( this ) { com.barchart.netty.server.util.TimeoutPromiseGroup.log . debug ( "fail sync" ) ; if ( ! ( done ) ) { done = true ; cancel ( true ) ; } setFailure ( t ) ; } }
{ net.ssehub.easy.varModel.confModel.IDecisionVariable com.ssehub.easy.varModel.confModel.IDecisionVariable com.ssehub.easy.varModel.confModel.IDecisionVariable com.ssehub.easy.varModel.confModel.IDecisionVariable com.ssehub.easy.varModel.confModel.IDecisionVariable com.ssehub.easy.varModel.confModel.IDecisionVariable com.ssehub.easy.varModel.confModel.IDecisionVariable com.ssehub.easy.varModel.confModel.IDecisionVariable orgVariable = getDecision ( var ) ; com.ssehub.easy.varModel.model.IModelElement parent = var . getParent () ; com.ssehub.easy.varModel.model.IModelElement parent = var . getParent () ; java.lang.System.out . println ( ( "Config freeze for nested variable not implemented: " + parent ) ) ; }
{ method . setAccessible ( true ) ; method . setAccessible ( true ) ; if ( ( com.matthewtamlin.spyglass.library.util.AnnotationUtil . getValueHandlerAnnotation ( method ) ) != null ) { processMethod .CallHandler ( method ) ; } else if ( ( com.matthewtamlin.spyglass.library.util.AnnotationUtil . getCallHandlerAnnotation ( method ) ) != null ) { processMethod .CallHandler ( method ) ; } }
{ length = paymentInfo . getExpirationDate () ; cardNumberField . setText ( paymentInfo . getCardNum () ) ; cardTypeField . setValue ( paymentInfo . getCardType () ) ; expirationField . setText ( paymentInfo . getExpirationDate () ) ; }
{ x . add ( java.lang.Integer . parseInt ( args [ i ] ) ) ; x . debug () ; }
mSelectedProfile.mAllowLocalLAN = mLanCheck . isChecked ()
final int userId
if ( ( document ) != null ) { document . getLineManager () . removeLineListener ( this ) ; }
{ double [] orgLimits = ( ( double [] ) ( super . clone () ) ) ; double [] l = f1 . getL. () ; assertTrue ( "Wrong super . l [ 0 ] ) ; l [ 0 ] = ( ( int ) ( ( ( int ) ( ( ( double ) ( ( ( double ) ( ( int ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( ( ( double ) ( value ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) && ( ! ( l . equals ( orgLimits ) ) ) ) ) && ( ! ( l . equals ( orgLimits ) ) ) ) ) && ( ! ( l . isEmpty () ) ) ) ) ) && ( ( ( ( int ) ( ( ( double ) ( ( ( double ) (
try { waitFor ( net.serenitybdd.core.pages.ExpectedConditions . visibilityOfAllElementsLocatedBy ( byElementCriteria ) ) ; return true ; } catch ( net.serenitybdd.core.pages.NoSuchElementException no ,Element ) { net.serenitybdd.core.pages.RenderedPageObjectView.LOGGER . trace ( ( "No such element " + no ) ) ; return false ; } catch ( net.serenitybdd.core.pages.StaleElementReferenceException se ) { net.serenitybdd.core.pages.RenderedPageObjectView.LOGGER . trace ( ( "Element no longer attached to the result " + se ) ) ; return false ; }
{ com.artursworld.reactiontest.controller.util.UtilsRG . putString ( UtilsRG.OPERATION_ISSUE , spinner . getSelectedItem () . toString () , getActivity () ) ; setAvarageReactionTime ( spinner . getSelectedItem () . toString () ) ; }
{ int currentIndex = 0 ; pl.sdacaemy.data.structures.impl.ForwardList.Node currentNode = head ; while ( ( ( currentNode.next ) != null ) && ( currentIndex < index ) ) { ++ currentIndex ; currentNode = currentNode.next ; } return currentNode ; }
{ org.openl.rules.lang.xls.binding.XlsModuleOpenClass module = new org.openl.rules.lang.xls.binding.XlsModuleOpenClass ( null , org.openl.rules.lang.xls.XlsHelper . getModuleName ( moduleNode ) , new org.openl.rules.lang.xls.binding.XlsMetaInfo ( moduleNode ) , openl , dbase , moduleDependencies , org.openl.engine.OpenLSystemProperties . isDTDispatchingMode ( bindingContext . getExternalParams () ) , org.openl.engine.OpenLSystemProperties . isDispatchingValidationEnabled ( bindingContext . getExternalParams () ) ) ; processErrors ( module . getErrors () , bindingContext ) ; return module ; }
{ message . setType ( BungeeMain.DI ,E ) ; message . setName ( p . getName () ) ; message . setIp ( p . getAddress () . getAddress () . getHostAddress () ) ; map . put ( message . getName () , message . getIp () ) ; p . sendPluginMessage ( plugin , com.mengcraft.account.bungee.BungeeMain.CHANNEL , message . toByteArray () ) ; }
if ( ( act ) != null ) if ( ! ( connectedToSocket ) ) { if ( ( act ) != null ) if ( ( ( ( ru.racoondeveloper.contactchat.MainActivity ) ( act ) ) . splScreen ) != null ) ( ( ru.racoondeveloper.contactchat.MainActivity ) ( act ) ) . splScreen . setButtonActive () ; else reconnect () ; }
if ( ( mRequestingUpdates ) == ( mSharedPreferences . getBoolean ( edu.cornell.jjl.info41final.MainActivity.REQUESTING_LOCATION_UPDATES_KEY , false ) ) ) { mRequestingUpdates = mSharedPreferences . getBoolean ( edu.cornell.jjl.info4 curfinal.MainActivity.REQUESTING_LOCATION_UPDATES_KEY , false ) ; if ( ( mRequestingUpdates ) && ( mGoogleApiClient . isConnected () ) ) { startLocationUpdates () ; } else {} }
if ( ( services != null ) && ( servicesConnected ( mContext ) ) ) { if ( com.gmail.vanyadubik.managerplus.service.gps.GoogleLocationService . locationEnabled ( mContext ) ) { locationUpdateListener . canReceiveLocationUpdates () ; startLocationUpdates () ; } else { locationUpdateListener . cannotReceiveLocationUpdates () ; android.util.Log . e ( com.gmail.vanyadubik.managerplus.common.Consts.TAGLOG_GPS , "Unable to get your location.Please turn on your device Gps" ) ; } } else { locationUpdateListener . cannotReceiveLocationUpdates () ; }
private void addFixedAttributes ( com.orhanobut.tracklytics.FixedAttributes fixedAttributes , java.util.Map < java.lang.String , java.lang.Object > values ) { if ( fixedAttributes != null ) { com.orhanobut.tracklytics.FixedAttribute [] attributes = fixedAttributes . value () ; for ( com.orhanobut.tracklytics.FixedAttribute attribute : attributes ) { values . put ( attribute . key () , attribute . value () ) ; if ( attribute . isSuper () ) { superAttributes . put ( attribute . key () , attribute . value () ) ; } } } }
{ java.util.Properties properties = new java.util.Properties () ; properties . load ( ins ) ; properties . forEach ( ( k , v ) - > { java.lang.String val = substituteVariables ( ( ( java.lang.String ) ( v ) ) ) ; properties . setProperty ( ( ( java.lang.String ) ( k ) ) , val ) ; } }
{ throw new com.starbattle.accounts.manager.AccountException ( "Failed to get Displayname for AccountId." ) ; }
@ java.lang.Override public void onClick ( android.view.View view ) { android.content.ContentValues historyValues = new android.content.ContentValues () ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_ID , mSearchResult . getRestID () ) ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_NAME , mSearchResult . getRestName () ) ; android.net.Uri uri = getActivity () . getContentResolver () . insert ( DataContract.HistoryEntry.CONTENT_URI , historyValues ) ; onLocationChaged ( curLatitude , curLongitude ) ; }
java.lang.String _finId = jo . getString ( "id" ) ;
{ java.lang.System . setSecurityManager ( null ) ; return newClassLoader ; }
{ LinkedList < E > . LinkedListNode < E > current ; LinkedList < E > . LinkedListNode < E > next ; next = head ; while ( next != null ) { current = next ; next = current.next ; current . destroy () ; } }
{ if ( trclib.TrcPidMotor.debugEnabled ) { dbgTrace . traceEnter ( funcName , TrcDbgTrace.TraceLevel.API , "stallMinPower=%f,stallTimeout=%f,resetTimeout=%f" , stallMinPower , stallTimeout , resetTimeout ) ; dbgTrace . traceExit ( funcName , TrcDbgTrace.TraceLevel.API ) ; } this . stallMinPower = stallMinPower ; this . stallTimeout = stallTimeout ; this . resetTimeout = resetTimeout ; }
{ if ( readOnly ) { firebaseRealtimeDatabaseHelperOrders . delete ( order ) ; } else { previousOrder = new com.cynerds.cyburger.models.orders.Order () ; } badge . setBadgeCount ( 0 ) ; order = new com.cynerds.cyburger.models.orders.Order () ; dialogManager . closeDialog () ; removeNotification ( com.cynerds.cyburger.activities.MainActivity.ORDERS_TAB , 1 ) ; }
getTargetFragment ()
fileManager . createFolder ( studyId , ( ( folderPath . toString () ) + "/" ) , status , parents )
{ java.util.List < com.rastating.droid2.entities.Season > seasons = getSeasons ( ( ( java.lang.Long ) ( null ) ) ) ; if ( seasons != null ) { java.util.Collections . sort ( seasons , new com.rastating.droidItem.comparators.SeasonComparator () ) ; java.util.Collections . reverse ( seasons ) ; show . setSeasons ( seasons ) ; show . setSeasons ( seasons ) ; } }
{ try { java.lang.Thread . sleep ( 10000 , 0 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } if ( ( turn ) == ( players_turn ) ) { turn = nonplayers_turn ; nonplayersTurn () ; actionKI () ; } else if ( ( turn ) == ( nonplayers_turn ) ) { turn = players_turn ; playersTurn () ; } }
getValue ( i , j , countMap . get ( new context.healthinformatics.graphs.ConnectionSet ( codes . get ( i ) ) ) )
com.extenprise.mapp.util.Utility . showAlert ( this , title , msg )
switch ( enumfacing ) { case NORTH : return ( this . boundingBox . maxZ ) - z ; case SOUTH : return ( this . boundingBox . minZ ) + z ; case EAST : case EAST : return ( ( this . boundingBox . minZ ) + x ) + x ; default: return z ; }
checkPaymentStatus ( transactionId )
new cc.blynk.server.storage.reporting.average.AggregationValue ( value )
{ setMapEdgeScrollSpeed ( java.lang.String . valueOf ( games.strategy. .a.settings.scrolling.ScrollSettings.DEFAULT_MAP_EDGE_SCROLL_SPEED ) ) ; setMapEdgeScrollZoneSize ( java.lang.String . valueOf ( games.strategy. (a.settings.scrolling.ScrollSettings.DEFAULT_MAP_EDGE_SCROLL_SIZE ) ) ; setMapEdgeFasterScrollMultiplier ( java.lang.String . valueOf ( games.strategy. true ).scrolling.ScrollSettings.DEFAULT_MAP_EDGE_FASTER_SCROLL_MULTIPLIER ) ) ; setMapKeyScrollSpeed ( java.lang.String . valueOf ( games.strategy. (a.settings.scrolling.ScrollSettings.DEFAULT_MAP_EDGE_FASTER_SCROLL_MULTIPLIER ) ) ; }
{ java.text.DateFormat df = new java.text.SimpleDateFormat ( "MM dd yyyy HHmm" ) ; result = df . format ( toBeConverted ) ; java.lang.System.out . println ( ( ( toBeConverted + " was converted to " ) + result ) ) ; return result ; }
long chatId
toggleParameterFilter ( true )
private static boolean isAllASCII ( java.lang.String input ) { boolean isASCII = true ; for ( int i = 0 ; i < ( input . length () ) ; i ++ ) { int c = input . charAt ( i ) ; if ( c > 127 ) { isASCII = false ; break; } } return isASCII ; }
( com.openarena.model.AbstractRecyclerAdapter . class )
{ stopTimer () ; model.ModelFacade . getInstance () . updateGameModel () ; model.ModelFacade . getInstance () . getPoller () . start () ; joinAction . execute () ; }
new com.alamkanak.weekview.WeekViewEvent ( 1 , getEventTitle ( startTime ) , startTime , endTime )
public java.lang.Iterable < org.matsim.api.core.v01.Id
{ Zipper.AktuellesDatumJava8 . main ( null ) ; Zipper.Zip a = new Zipper.Zip () ; a.modpack = name ; a . archiveDir ( null ) ; Modpacktxt.name = name ; try { Zipper.Modpacktxt . main ( null ) ; } catch ( java.io.IOException ex ) { java.util.logging.Logger . getLogger ( Zipper.frage . class . getName () ) . log ( java.util.logging.Level.SEVERE , null , ex ) ; } }
{ if ( r == ( android.content.pm.PackageManager.PERMISSION_DENIED ) ) { this . callback . sendPluginResult ( new org.apache.cordova.PluginResult ( PluginResult.Status.ERROR , de.martinreinhardt.cordova.plugins.hotspot.HotSpotPlugin.PERMISSION_DENIED_ERROR ) ) ; return; } if ( ! ( executeInternal ( this . action , this . rawArgs , this . callback ) ) ) { this . callback . sendPluginResult ( new org.apache.cordova.PluginResult ( PluginResult.Status.ERROR , de.martinreinhardt.cordova.plugins.hotspot.HotSpotPlugin.PERMISSION_GENERAL_ERROR ) ) ; } }
private void addCover ( org.ernest.applications.dmc.report.builders.Document document , org.ernest.applications.dmc.domain.Region region ) throws java.io.IOException , org.ernest.applications.dmc.report.builders.DocumentException { buildImage ( document ) ; }
assertFalse ( file . exists () )
{ java.rmi.registry.LocateRegistry . main ( 1099 ) ; com_MessageHandler obj1 = new ()_MessageHandler ( 1 ) ; if ( obj != null ) { index_MessageHandler obj2 = new - 1 ; } obj2 . sendMessageDelayed ( "first message" , 1 , 1000 ) ; obj2 . sendMessageDelayed ( "second message" , 1 , 10 ) ; }
if ( p_71515_2_.length ) { if ( p_71515_2_ [ 0 ] . equalsIgnoreCase ( "help" ) ) { mainserverjt.piratemod.command.commands.HelpCommand . processCommand ( p_71515_1_ , removeIndexUntil ( 1 , p_71515_2_ ) ) ; } } else { mainserverjt.piratemod.command.ChatColor . sendPrivateMessage ( p_71515_1_ , ( ( ChatColor.prefix ) + ( ChatColor.rood ) ) + "Use /pm help" ) ; }
java.lang.Integer readyAgents = ( ( java.lang.Integer ) ( ( ( intValue ) + 1 ) ) ) ;
private java.lang.String buildSongIdFromGenreSelect ( java.lang.String genreId ) { final java.lang.String query = ( ( ( ( ( ( ( ( "SELECT " + ( MediaLibrary.GenreSongColumns.SONG_ID ) ) + " FROM " ) + ( MediaLibrary.TABLE_GENRES_SONGS ) ) + " WHERE " ) + ( MediaLibrary.GenreSongColumns._GENRE_ID ) ) + "=" ) + genreId ) + " GROUP BY " ) + MediaLibrary.GenreSongColumns.SONG_ID ) ; return query ; }
{ level.Direction dir = action . getDirection () ; if ( agLoc == null ) { return false ; } level.Location nAgLoc = level.Location . newLocation ( dir , agLoc ) ; if ( nAgLoc == null ) { return false ; } if ( ! ( isFree ( nAgLoc ) ) ) { return false ; } return true ; }
( matchFound = false )
getSupportFragmentManager () . beginTransaction () . replace ( R.id.fragment_container , firstFragment )
android.widget.Toast . makeText ( getApplicationContext () , "Unable to sign in to Google" , Toast.LENGTH_SHORT )
activeFrontend = info.martinmarinov.drivers.usb.rtl28xx.Rtl2832pFrontend.FORCE_ONLY_SLAVE ) ? slave : rtl2832Frontend
@ java.lang.Override public com.b countc.java.math.geometry.Vector cnt () { if ( ( outline ) == null ) { return 0 ; } int i = outline . size () ; for ( com.b countc.java.math.geometry.Vector vector : outline ) { center = center . add ( vector . inc ( i ) ) ; -- i ; } return center . dec ( outline . size () ) ; }
private logic.Piece turnCPU () { depth = new logic.Piece ( bestMove , activeplayer ) ; bestMoveMessages . addFirst ( ( ( ( ( ( ( ( ( "Melhor jogada para o jogador " + ( util.Utility . itop ( activeplayer ) ) ) + " no turno " ) + ( turnId ) ) + ": (" ) + ( ( bestMove.row ) + 1 ) ) + "," ) + ( util.Utility . itoc ( bestMove.col ) ) ) + "). " ) ) ; return new logic.Piece ( bestMove , activeplayer ) ; }
private static void startVibrate () { android.util.Log . d ( org.catrobat.catroid.utils.VibratorUtil.TAG , "startVibrate()" ) ; org.catrobat.catroid.utils.VibratorUtil.startTime = android.os.SystemClock . uptimeMillis () ; org.catrobat.catroid.utils.VibratorUtil.startTime = android.os.SystemClock . uptimeMillis () ; org.catrobat.catroid.utils.VibratorUtil.startTime = android.os.SystemClock . uptimeMillis () ; android.util.Log . d ( org.catrobat.catroid.utils.VibratorUtil.TAG , ( "start time was: " + ( java.lang.Long . toString ( org.catrobat.catroid.utils.VibratorUtil.startTime ) ) ) ; }
{ com.google.common.hash.HashCode hash = io.takari.watcher.PathUtils . hash ( child ) ; lastModifiedMap . put ( child , hash ) ; }
new hudson.plugins.cigame.GamePublisher ( build )
new java.lang.Long [] { 4039279022L , 94401L }
@ java.lang.SuppressWarnings ( value = "unchecked" ) public static org.opendaylight.genius.mdsalutil.packet.E total createE []Packet ( byte [] sourceMAC , byte [] targetMAC , org.opendaylight.genius.mdsalutil.packet.ARP ) throws org.opendaylight.controller.libl ..PacketException { org.opendaylight.genius.mdsalutil.packet.E > > = new org.opendaylight.genius.mdsalutil.packet.E > () ; java.lang.System.out . println ( sourceMAC ) ; java.lang.System.out . println ( targetMAC ) ; java.lang.System.out . println ( targetMAC ) ; java.lang.System.out . println ( targetMAC ) ; java.lang.System.out . println ( targetMAC ) ; }
( com.github.mob41.osumer.updater.Downloader . toFilename )
@ com.rafikzebdi.epargnator.rest.PathParam ( value = "reference" ) final java.lang.String referenceToFind
{ int touchProgress = ( ( int ) ( java.lang.Math . round ( ( ( valuePerDegree () ) * angle ) ) ) ) ; touchProgress = ( touchProgress < 0 ) ? com.triggertrap.seekarc.SeekArc.INVALID_PROGRESS_VALUE : touchProgress ; touchProgress = ( touchProgress > ( mMax ) ) ? com.triggertrap.seekarc.SeekArc.INVALID_PROGRESS_VALUE : touchProgress ; if ( ! ( mDragging ) ) touchProgress = ( touchProgress == ( com.triggertrap.seekarc.SeekArc.INVALID_PROGRESS_VALUE ) ) ? 0 : touchProgress ; return touchProgress ; }
( i < ( Window_Size ) ) && ( i < ( ( Packet_Buffer . size () ) - 1 ) )
for ( int i = 0 ; i < ( razoes.length ) ; i ++ ) { if ( ( razoes [ i ] ) > 0 ) { if ( ( java.lang.Double . compare ( razoes [ i ] ) ) > 1 ) { if ( ( java.lang.Double . compare ( razoes [ i ] ) ) > 1 ) { java.lang.System.out . println ( java.lang.Double . compare ( razoes [ i ] ) ) ; } } } return indice ; }
{ javafx.scene.input.Dragboard db = e . getDragboard () ; java.lang.System.out . println ( javafx.scene.input. . . lookupMimeType ( "catuml/shapetype" ) ) ; putShape ( shapes . newShape () , e . getX () , e . getY () ) ; e . consume () ; }
{ position = java.lang.Math . pow ( dt , 2 ) ; position = Vector3D . vectorAddition ( position , force . <Multiply ( ( ( java.lang.Math . pow ( dt , 2 ) ) / ( 2 * ( mass ) ) ) ) ) ; }
{ java.util.List < java.lang.Integer > emitResult = super . emit ( streamId , tuple , messageId ) ; monitor . startExecute ( messageId , null , spoutService ) ; return emitResult ; }
public static java.io.File findExe ( java.io.File root , java.lang.String exe ) { for ( java.io.File file : org.apache.commons.io.FileUtils . listFiles ( root , null , true ) ) if ( ( file . getName () . equalsIgnoreCase ( exe ) ) && ( ( file . length () ) >= 1 ) ) return file ; throw new java.lang.UnsupportedOperationException ( ( ( "Couldn't find '" + exe ) + "'!" ) ) ; }
( row < ( ( rows ) - 3 ) ) && ( col < ( ( cols ) - 3 ) )
{ b3 , b2 , b1 }
{ 100 , 99 }
{ org.junit.Assert . assertThat ( com.firefly.utils.lang.TypeUtils . getLocationOfClass ( org.junit.Assert . class ) . toASCIIString () , org.hamcrest.Matchers . containsString ( "repository" ) ) ; org.junit.Assert . assertThat ( com.firefly.utils.lang.TypeUtils . getLocationOfClass ( com.firefly.utils.lang.TypeUtils . class ) . toASCIIString () , org.hamcrest.Matchers . containsString ( "/classes/" ) ) ; java.lang.String expectedJavaBase = "/rt.jar" ; }
s += line + "\n"
{ environment . put () . property ( io.katharsis.rs.KatharsisProperties.RESOURCE_DEFAULT_DOMAIN , dropwizardConfiguration.katharsis.host ) ; environment . jersey () . property ( io.katharsis.rs.KatharsisProperties.RESOURCE_SEARCH_PACKAGE , dropwizardConfiguration.katharsis.searchPackage ) ; io.katharsis.rs.KatharsisFeature katharsisFeature = new io.katharsis.rs.KatharsisFeature ( environment . getObjectMapper () , new io.katharsis.queryParams.DefaultQueryParamsParser () ) , new io.katharsis.locator.SampleJson myisFeature katharsisFeature = new io.katharsis.locatorParams.DefaultQueryParamsParser () ; environment . jersey () . register ( katharsisFeature ) ; }
colP = point / ( rowP * ( dim ) )
{ java.lang.String inputFilePath = ( ( ( ( ( ( org.corpus_tools.salt.util.tests.VisJsVisualizerTest.INPUT_FOLDER ) + ( org.corpus_tools.salt.util.tests.VisJsVisualizerTest.FSEP ) ) + "pcc2_ is_resource" ) + ( org.corpus_tools.salt.util.tests.VisJsVisualizerTest.FSEP ) ) + "pcc2" ) + ( org.corpus_tools.salt.util.tests.VisJsVisualizerTest.FSEP ) ) + "112 ; org.eclipse.emf.common.util.URI uri = org.eclipse.emf.common.util.URI . createFileURI ( inputFilePath ) ; org.eclipse.emf.common.util.URI uri = org.eclipse.emf.common.util.URI . createFileURI ( inputFilePath ) ; @ java.lang.SuppressWarnings ( value = "unused" ) org.corpus_tools.salt.util.VisJsVisualizer visJsVisualizer = new org.corpus_tools.salt.util.VisJsVisualizer ( uri ) ; }
( - 1 ) * ( java.lang.Math . log ( ( 1 - ( java.lang.Math . random () ) ) ) )
{ setFinishedLabel () ; finishedLabel . setCaption ( ( ( ( ( finishedLabel . getCaption () ) + " (" ) + ( learningContents . size () ) ) + ")" ) ) ; reset () ; }
@ java.lang.Override public void downloadHasFinished () { visibleBanner . updateBannerInProgress () ; for ( java.lang.ref.WeakReference < android.support.v4.app.Fragment > ref : fragSet ) { android.support.v4.app.Fragment f = ref . get () ; if ( f . isAdded () ) { if ( f instanceof net.osmand.plus.download.DownloadIndexesThread.DownloadEvents ) { ( ( net.osmand.plus.download.DownloadIndexesThread.DownloadEvents ) ( f ) ) . downloadHasFinished () ; } } } }
{ try { get () ; } catch ( java.lang.InterruptedException ignore ) {} catch ( java.util.concurrent.ExecutionException e ) { e . printStackTrace () ; } _modelSelection . put ( selected , 0 ) ; if ( ( _titleList . getSelectedValue () ) == selected ) _recordingTable . getSelectionModel () . setSelectionInterval ( 0 , _modelSelection . get ( selected ) ) ; _recordingTable . setColumnSelectionInterval ( 0 , 0 ) ; }
{ java.lang.System.out . println ( src ) ; kalang.compiler.CompilationUnit unit = new kalang.compiler.CompilationUnit ( className , src , this ) ; unit . setParsingErrorHandler ( sourceParsingErrorhandler ) ; unit . setSemanticErrorHandler ( astSemanticErrorHandler ) ; unit . compile ( newPhase ) ; intUnits . put ( className , unit ) ; return unit ; }
{ co.cask.cdap.data2.queue.DequeueResult < byte [] > result = performDequeue ( maxBatchSize ) ; if ( ( scanStartRow ) != null ) { if ( ! ( ( ( scanStartRow ) != null ) && ( ( scanStartRow ) == null ) ) ) { return; } } else { updateStartRow ( scanStartRow ) ; } }
{ this . org = new java.util.TreeMap <> () ; for ( com.microsoft.azure.management.network.implementation.SubnetInner ) { this . inner () . remove () ; com.microsoft.azure.management.network.implementation.SubnetImplLong = new com.microsoft.azure.management.network.implementation.SubnetImpl ( static com.microsoft.azure.management.network.implementation.SubnetImpl (LongInner . name () , titleInner , this ) ) ; } }
java.lang.Math . min ( maxValidIndex , maxValidIndex )
currentY = - 1
{ java.lang.String esccmd = java.lang.String . format ( "{\"a\":%d,\"b\":%d,\"c\":%d,\"d\":%d}" , this . motorA . new java.lang.String [ 0 ] ) ; java.lang.System.out . println ( esccmd ) ; java.lang.System.out . println ( esccmd ) ; return esccmd ; }
bytes . append ( ( ( offset ) + ( net.openhft.chronicle.wire.LongTextReference.VALUE ) ) , value , 20 )
ackSent = true ;
{ net.erikkarlsson.smashapp.common.data.entities.tournament.Tournament tournament = ( tournamentLce . hasData () ) ? com.google.common.base.Preconditions . checkNotNull ( tournamentLce . data () ) : net.erikkarlsson.smashapp.common.data.entities.tournament.Tournament.NO_TOURNAMENT ; }
{ com.celestia.csc155.IFn require =; try { com.celestia.csc155.IFn require ; com.celestia.csc155.RT . loadResourceScript ( "src/main/cloString/util.clj" ) ; com.celestia.csc155.RT . loadResourceScript ( "src/main/cloTo/models.clj" ) ; return function . invoke () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } }
{ de.huberlin.wbi.hiway.common.Worker worker = new de.huberlin.wbi.hiway.common.Worker () ; try { worker . init ( args ) ; worker . run () ; } catch ( org.apache.commons.cli.ParseException | java.io.IOException | org.json.JSONException e ) { e . printStackTrace () ; java.lang.System . exit ( ( - 1 ) ) ; } }
{ java.sql.Date date = new java.sql.Date ( entity . getUpdate_time () . getTime () ) ; entity . setStr_update_time ( new java.text.SimpleDateFormat ( "yyyy-MM-dd HH:mm:ss" ) . format ( date ) ) ; entity . setText ( entity . getName () ) ; entity . setChildren ( false ) ; }
{ this . target = null ; this . inputType = null ; this . argument = 0 ; this . timestamp = - 1 ; this . unprojectedPosition . x = 0 ; if ( ( unprojectedPosition ) != null ) { unprojectedPosition . y = 0 ; this . comPosition . x = 0 ; this . comPosition . y = 0 ; } }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; mContext = this ; counterTextView = ( ( android.widget.TextView ) ( findViewById ( R.id.textView ) ) ) ; relativeLayout = ( ( android.widget.RelativeLayout ) ( findViewById ( R.id.MainLayoutID ) ) ) ; localPreferences = getSharedPreferences ( com.example.rogith.deltaappdevtask1.MainActivity.MyPREFERENCES , Context.MODE_PRIVATE ) ; localPreferences . registerOnSharedPreferenceChangeListener ( this ) ; counter = getFromFile () ; counterTextView . setText ( java.lang.String . valueOf ( counter ) ) ; }
{ android.util.Log . d ( "NotesFragment" , ( "Submitted query" + query ) ) ; java.lang.String searchQuery = ( ( ( ( ( "SELECT * FROM " + ( mTABLE_NAME ) ) + " where " ) + ( mCOLUMN_DETAIL ) ) + " like \'%" ) + query ) + "%\'" ; cursor = db . rawQuery ( searchQuery , null ) ; mAdapter = new com.myapp.handbook.adapter.MyRecyclerAdapter ( getContext () , cursor ) ; mRecyclerView . setAdapter ( mAdapter ) ; return true ; }
{ AnswerABP . setBackgroundColor ( getResources () . getColor ( R.color.goodAnswer ) ) ; incrementResultForGoodAnswer () ; }
{ java.lang.String [] splitDate = uncDate . split ( "/" ) ; java.lang.String year = splitDate [ 0 ] ; java.lang.String month = splitDate [ 1 ] ; java.lang.String day = splitDate [ 2 ] ; return ( ( ( year + "-" ) + month ) + 1 ) + day ; }
private boolean contains ( KdTree.Node node , edu.princeton.cs.algs4.Point2D p ) { if ( node == null ) return false ; int cmp = KdTree . compare ( p , node.p , (X + 1 ) ) ; if ( cmp < 0 ) return contains ( node.lb , p ) ; else if ( cmp > 0 ) return contains ( node.rt , p ) ; else if ( cmp > 0 ) return contains ( node.rt , p ) ; else return node.p . equals ( p ) ; }
{ commands.amdp.tools.parse.CleanupL2Parser parser = new commands.amdp.tools.parse.CleanupL2Parser ( this . domain ) ; burlap.oomdp.core.objects.ObjectInstance o = s . getObject ( params [ 0 ] ) ; burlap.oomdp.core.objects.ObjectInstance currRegion = s . getObject ( o . getStringValForAttribute ( true ) ) ; burlap.oomdp.core.objects.ObjectInstance region = s . getObject ( params [ 1 ] ) ; return currRegion . valueEquals ( region ) ; }
public java.util.Map < java.lang.String , double [] > fetchTrace ( int channelNumber ) { this . fetchChannel ( channelNumber ) ; java.util.Map < java.lang.String , double [] > retData = new java.util.HashMap <> () ; retData . put ( "x" , this . aChannels . get ( channelNumber - 1 ) ) . getXAxis () ; retData . put ( "y" , this . aChannels . get ( ( channelNumber - 1 ) ) . getYAxis () ) ; return retData ; }
@ org.junit.Test public void test_isLeapYear ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( false , dint.Dint . isLeapYear ( ( - 1 ) ) ) ; org.junit.Assert . assertEquals ( false , dint.Dint . isLeapYear ( num ) ) ; org.junit.Assert . assertEquals ( true , dint.Dint . isLeapYear ( ( ( org.junit.Assert . size () ) - 1 ) ) ) ; org.junit.Assert . assertEquals ( false , dint.Dint . isLeapYear ( 2017 ) ) ; }
return new java.lang.String ( "" ) ;
( ( this . endNode . x ) <= ( node.y ) )
result . addProperty ( "port" , port . getPortNumber () ) ;
( this . getId () . toString () ) + " "
if ( valueClass != null ) { return new com.appmetr.hercules.serializers.EnumSerializer ( valueClass . getClass () ) ; }
{ Handler.Command cmd = createCommand ( command , task ) ; taskID = mainStorage . getTaskID () ; return cmd . execute ( taskID ) ; }
{ if ( ( r . getConfig () . getShape () ) == ( cs132.instructions.Shape.PENCIL ) ) { prevMouseLocation = mouseLocation ; r . setDrawShape ( false ) ; dragStart = true ; } else { r . setDrawShape ( true ) ; } r . repaint () ; }
{ java.lang.System.out . print ( prompt ) ; java.lang.String x = Main.scanner . nextLine () ; isbn = Main . normalizeISBN ( x ) ; got = true ; }
{ mGoogleApiClient . disconnect () ; lineShape . add ( mPolyline ) ; if ( ( lineShape . size () ) > 1 ) { java.lang.String geoJsonString = edu.uw.longt8.geopaint.GeoJsonConverter . convertToGeoJson ( lineShape ) ; new edu.uw.longt8.geopaint.MapsActivity.SaveState () . execute ( geoJsonString ) ; } super . onStop () ; }
@ java.lang.Override public void run () { try { game . run () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } finally { engine.Server . releaseLock () ; } try { java.lang.Thread . sleep ( game . delayBetweenRuns () ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } }
{ removeFromView ( building . getSpriteAdapter () ) ; removePlaceTexture () ; }
private java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > deepCopy ( java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > assignment ) { java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > copy = new java.util.HashMap <> () ; deepCopy ( assignment , copy ) ; return copy ; }
public org.apollo.game.model.Position fromDeltas ( int deltaX ) { return new org.apollo.game.model.Position ( ( ( getX () ) + deltaX ) , ( ( getY () ) + b ) , ( ( getHeight () ) + deltaZ ) ) ; }
org.arquillian.cube.kubernetes.impl.utils.ProcessUtil . start ()
{ if ( isExpanded () ) { return false ; } android.util.Log . e ( com.example.tt.fragments.widget.CurveLayout.TAG , ( "BottomSheet onTouchEvent: " + ( currentX ) ) ) ; currentX = ev . getRawX () ; sheetDragHelper . processTouchEvent ( ev ) ; if ( ( sheetDragHelper . getCapturedView () ) != null ) { return true ; } return super . onTouchEvent ( ev ) ; }
( ( getClass () ) != ( object . getClass () ) )
{ builder . get ( org.elasticsearch.monitor.os.OsStats.Fields.OS ) ; builder . field ( org.elasticsearch.monitor.os.OsStats.Fields.TIMESTAMP , getTimestamp () ) ; cpu . size ( builder , params ) ; return builder ; }
( com.mcgame.scdiary.gui.ScreenshotOverlayHandler.ANIMATION_TICK )
( ( mask & 8388608 ) != 0 ) && ( ( ( value ) & 0 ) == 0 ) || ( ( ( value ) & 8388608 ) == 0 )
{ android.os.Bundle extras = data . getExtras () ; android.graphics.Bitmap imageBitmap = ( ( android.graphics.Bitmap ) ( extras . get ( "data" ) ) ) ; addImageToView ( imageBitmap ) ; MediaStore.Images.Media . insertImage ( getContentResolver () , imageBitmap , "" ) ; }
public int colContains ( int col , int num ) { int count = 0 ; for ( int o = 0 ; o < 9 ; o ++ ) { if ( ( this . grid [ o ] [ col ] . value ) == num ) count ++ ; } return count ; }
{ if ( ( promptMsg ) != null ) { promptMsg = null ; repaint () ; return; } hasFinished = canceled = true ; org.sikuli.basics.Debug . log ( 3 , "CapturePrompt: ) ; setVisible ( false ) ; notifyObserver () ; }
{ int status = com.liferay.portal.kernel.util.ParamUtil . getInteger ( actionRequest ) ; java.lang.String portletResource = com.liferay.portal.kernel.util.ParamUtil . getString ( actionRequest , "portletResource" ) ; javax.portlet.PortletPreferences preferences = com.liferay.portlet.PortletPreferencesFactoryUtil . getPortletSetup ( actionRequest , portletResource ) ; preferences . setValue ( "status" , java.lang.String . valueOf ( status ) ) ; preferences . store () ; com.liferay.portal.kernel.servlet.SessionMessages . add ( actionRequest , "potlet-config-saved" ) ; }
{ android.util.Log . v ( "LOCK_TEST" , "unlockScreen()" ) ; android.util.Log . v ( "LOCK_TEST" , ( "unlockScreen() " + ( this . masterActivity . getLocalClassName () ) ) ) ; this . pinView . setVisibility ( 8 ) ; this . mZipperLock . DestroyBitmaps () ; this . masterActivity . finish () ; }
giveReward ( this , str , true )
return ( itemStack . getItem () ) != null ? itemClass . isInstance ( itemStack . getItem () ) ? itemClass . cast ( itemStack . getItem () ) : null ;
if ( ( ( weatherData . getPubDate () . getTime () ) + ( weatherData . getTtl () ) ) > ( java.lang.System . currentTimeMillis () ) ) { if ( ( ( weatherData . getLastBuildDate () . getTime () ) + ( ( 15 * 60 ) * 1000 ) ) < ( java.lang.System . currentTimeMillis () ) ) { return true ; } }
( a / ( java.lang.Math . pow ( java.lang.Math . toRadians ( alpha ) ) ) )
( val != null ) && ( val . indexOf ( "${" ) )
{ try { readEntireFile () ; } catch ( java.nio.file.NoSuchFileException | java.nio.file.AccessDeniedException exception ) { invokeListenersWithReset () ; java.lang.Thread . sleep ( 100 ) ; } }
if ( ( categoria . getId () ) == ( java.lang.Integer . parseInt ( submittedValue ) ) ) return categoria ;
vg.civcraft.mc.bettershards.bungee.QueueHandler.queue . get ( server , pos )
{ java.lang.String ret = uri . toString () . replaceAll ( "&amp;" , "&" ) ; return ret ; }
{ if ( ( category == ( 1 ) ) && ( category . matches ( dice ) ) ) hasYahtzee = true ; if ( isNumberRoll ( category ) ) numberRollScore += category . getPointsScored ( dice ) ; totalScore += getPointsScored ( category , dice ) ; categoriesLeft . remove ( category ) ; curStrategy = new com.sammyer.yahtzee.RollStrategy ( database , categoriesLeft ) ; curStrategy = new com.sammyer.yahtzee.RollStrategy ( database , categoriesLeft ) ; curStrategy = new com.sammyer.yahtzee.RollStrategy ( database , categoriesLeft ) ; curStrategy = new com.sammyer.yahtzee.RollStrategy ( database , categoriesLeft ) ; curStrategy = new com.sammyer.yahtzee.RollStrategy ( database , categoriesLeft ) ; curStrategy = new com.sammyer.yahtzee.RollStrategy ( database , categoriesLeft ) ; curStrategy = new com.sammyer.yahtzee.RollStrategy ( database , categoriesLeft ) ; curStrategy = new com.sammyer.yahtzee.RollStrategy ( database , categoriesLeft ) ; curStrategy = new com.sammyer.yahtzee.RollStrategy ( database , categoriesLeft ) ; curStrategy = new com.sammyer.yahtzee.RollStrategy ( database , categoriesLeft ) ; curStrategy = new com.sammyer.yahtzee.RollStrategy ( database , categoriesLeft ) ; curStrategy = new com.sammyer.yahtzee.RollStrategy ( database , categoriesLeft ) ; curStrategy = new com.sammyer.yahtzee.RollStrategy ( database , categoriesLeft ) ; curStrategy = new com.sammyer.yahtzee.RollStrategy ( database , categoriesLeft ) ; curStrategy = new com.sammyer.yahtzee.RollStrategy ( database , categoriesLeft ) ; curStrategy = new com.sammyer.yahtzee.RollStrategy ( database , categoriesLeft ) ; curStrategy = new com.sammyer.yahtzee.RollStrategy ( database , categoriesLeft ) ; curStrategy = new com.sammyer.yahtzee.RollStrategy ( database
( ( totalPartCount == 2 ) && ( partB > 0 ) ) && ( partB > 0 )
{ io.inkstand.scribble.pdf.PDF pdf = io.inkstand.scribble.pdf.PDF . of ( this . file . toPath () ) ; org.junit.Assert . assertNotNull ( pdf ) ; org.junit.Assert . assertNotNull ( pdf . toDataSource () ) ; try { assertNotNull ( is ) ; } }
{ formWorkflowAPIImpl = org.mockito.Mockito . spy ( new org.bonitasoft.forms.server.api.impl.FormWorkflowAPIImpl () ) ; expressions = new java.util.ArrayList < org.bonitasoft.forms.client.model.Expression > () ; doReturn ( bpmEngineAPIUtil ) . when ( formWorkflowAPIImpl ) . getBpmEngineAPIUtil () ; doReturn ( processApi ) . when ( bpmEngineAPIUtil ) . getProcessAPI ( session ) ; }
{ java.lang.System.err . println ( "could not update LinkStateDatabase" ) ; }
{ g . fillRect ( 0 , 0 , 300 , 3 ) ; g . fillRect ( 0 , 45 , 300 , 3 ) ; g . fillRect ( 100 , 3 , 3 , 7 ) ; g . fillRect ( 100 , 38 , 3 , 7 ) ; }
if ( ( ( com.hedspi.hoangviet.eslrecom.helpers.TestHelper.currentTestDifficulty . equals ( Preference.ADVANCE ) ) || ( ( com.hedspi.hoangviet.eslrecom.helpers.TestHelper.lowerAchivedDifficulty ) != null ) ) && ( ( com.hedspi.hoangviet.eslrecom.helpers.TestHelper.lowerAchivedDifficulty ) != null ) ) { com.hedspi.hoangviet.eslrecom.helpers.TestHelper.currentUserProfio = com.hedspi.hoangviet.eslrecom.helpers.TestHelper.currentTestDifficulty ; return com.hedspi.hoangviet.eslrecom.helpers.TestHelper.STATUS_END ; } else { com.hedspi.hoangviet.eslrecom.helpers.TestHelper.upperAchivedDifficulty = com.hedspi.hoangviet.eslrecom.helpers.TestHelper.currentTestDifficulty ; com.hedspi.hoangviet.eslrecom.helpers.TestHelper . upgradeLevel () ; return com.hedspi.hoangviet.eslrecom.helpers.TestHelper.STATUS_CONTINUE ; }
{ org.json.JSONObject obj = new org.json.JSONObject () ; obj . append ( "x" , p.x ) ; obj . append ( "y" , p.y ) ; obj . append ( "z" , p.z ) ; arr . append ( "charge" , p.charge ) ; arr . put ( obj ) ; return arr . toString () ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_plan_journey ) ; java.util.Calendar calendar = java.util.Calendar . getInstance () ; datePickerDialog = new android.app.DatePickerDialog ( this , this , calendar . get ( java.util.Calendar.YEAR ) , calendar . get ( java.util.Calendar.MONTH ) , calendar . get ( java.util.Calendar.DAY_OF_MONTH ) ) ; initDrawer () ; initSearchBar () ; initAddressFields () ; }
if ( resource != null ) { exists = resource . getResourceSet () . getURIConverter () . getURI () ; }
public void printTree ( DataStructure.RBTNode < T > node ) { if ( node == ( ( ( ( ( ( node.color ) == ( RBTNode.RED ) ? "Color: Red " : "Color: Black " ) + "Key: " ) + ( node.key ) ) + " Parent: " ) ) ) { printTree ( node.right ) ; } }
domain.dao.HibernateGeneric . getName ()
ErrorMessage.REGEX_INSTANCE_FAILURE . getMessage ( "[abc]" , thing )
{ if ( ( ( ( ( this . isConfirmed () ) || ( this . isRefused () ) ) || ( this . isFlown () ) ) || ( confirmationTime < 0 ) ) || ( ! ( departureTime < confirmationTime ) ) ) { throw new asgn2Passengers.PassengerException ( "Can't confirm seat for passenger." ) ; } this . newState = false ; this . inQueue = false ; }
it.grid.storm.filesystem.AclLockPoolElement e = ( ( it.grid.storm.filesystem.AclLockPoolElement ) ( __map ) ) ;
private static java.util.Collection < java.lang.String > getToolString () { java.util.Collection < java.lang.String > toolStr = Main.pref . getCollection ( "toolbar" , java.util.Arrays . asList ( org.openstreetmap.josm.gui.preferences.ToolbarPreferences.deftoolbar ) ) ; if ( ( toolStr == null ) || ( ( toolStr . size () ) == 0 ) ) { toolStr = java.util.Arrays . asList ( org.openstreetmap.josm.gui.preferences.ToolbarPreferences.deftoolbar ) ; } return toolStr ; }
{ queues.RandomizedQueue < Item > . Node oldLast = last ; last = new Node () ; last.item = item ; last.next = null ; if ( isEmpty () ) first = last ; else oldLast.next = last ; }
{ localBinder = ( ( org.stuartresearch.radio.x.RadioService.LocalBinder ) ( service ) ) ; bound = true ; localBinder . getService () . songStack . setOnInsertListener ( this ) ; cardAdapter . setSongInfoStack ( localBinder . getService () . songStack ) ; if ( ! ( localBinder . getService () . isPreparing () ) ) { progressBar . setIndeterminate ( false ) ; progressBar . setVisibility ( View.GONE ) ; } onInsert ( localBinder . getService () . getCurrentSong () ) ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_searchable ) ; actionbar = getSupportActionBar () ; if ( ( getIntent () ) != null ) { actionbar . setTitle ( "name ==" ) ; actionbar . setDisplayHomeAsUpEnabled ( true ) ; if ( ( getIntent () ) != null ) { handleIntent ( getIntent () ) ; } } }
if ( ! ( com.google.common.base.Strings . isNullOrEmpty ( valueAsString ) ) ) { valueUpdater . update ( null ) ; } else { java.util.Date dateValue = this . dateBox . getFormat () . parse ( dateBox , valueAsString , false ) ; if ( dateValue == null ) { valueUpdater . onInvalid ( I18N.MESSAGES . dateFieldInvalidValue ( org.activityinfo.ui.client.component.form.field.DateFieldWidget.FORMAT ) ) ; } else { valueUpdater . update ( new org.activityinfo.model.type.time.LocalDate ( dateValue ) ) ; } }
public float getDesiredZoomLevel ( int level ) { float zoom = 13.0F ; switch ( level ) { case 1 : zoom = 13.0F ; break; case 2 : zoom = 1 {F ; break; case 3 : zoom = mF ; break; case 4 : zoom = null ; break; case 5 : zoom = nullF ; break; } return zoom ; } return zoom ; }
{ mShowCaseView . dismiss () ; if ( ( v . getId () ) == ( R.id.btn_end ) ) { showNext ( singleShot ) ; } else if ( ( v . getId () ) == ( R.id.btn_finalize ) ) { mShotStateStore . finished () ; mShowcaseInfos . clear () ; } if ( singleShot ) mShotStateStore . storeShot () ; }
{ if ( ( mPlayer ) != null ) mPlayer . getMediaControl () . start () ; mPlayer . resumePlayer () ; com.kaltura.playersdk.utils.LogUtils . LOGD ( com.kaltura.adplayerdemo.MainActivity.TAG , "on Resume called for player" ) ; if ( ( mAdPlayer ) != null ) { mAdPlayer . moveSurfaceToForeground () ; mAdPlayer . play () ; } }
{ if ( ( moviesView ) == null ) { moviesView = new husaynhakeem.io.popularmovies.features.movies.MoviesView () ; moviesView . setPresenter ( moviesPresenter ) ; moviesPresenter . setView ( moviesView ) ; } if ( ( favoritesView ) == null ) { favoritesView = new husaynhakeem.io.popularmovies.features.favorites.FavoritesView () ; husaynhakeem.io.popularmovies.features.favorites.FavoritesPresenter favoritesPresenter = new husaynhakeem.io.popularmovies.features.favorites.FavoritesPresenter () ; favoritesView . setPresenter ( favoritesPresenter ) ; favoritesPresenter . setView ( favoritesView ) ; } }
{ int i = - 1 ; while ( ( ++ i ) < ( str . length () ) ) { char c = str . charAt ( i ) ; if ( ( c < '0' ) || ( c > length ) ) { return false ; } } return true ; }
if ( ( edit != null ) && ( ! ( edit . isEmpty () ) ) ) { dbh. ( . insert ( r , db ) ) ; else dbh. ( . update ( r , ( ( ( transcend.rockeeper.data.RouteContract._ID ) + "=" ) + ( edit . get ( RouteContract._ID ) ) ) , null , db ) ) ; }
org.apache.http.client.utils.URIUtils . createURI ( uk.ac.jorum.integration.RestApiBaseTest.apiProtocol , uk.ac.jorum.integration.RestApiBaseTest.apiHost )
{ java.lang.System.out . println ( ( ( java.lang.Integer . parseInt ( msgcnt ) ) + "\n" ) ) ; }
java.lang.System.out . println ( "limits in getFollowersIDs: " )
{ java.lang.System.out . println ( e . getCapsule ( this ) . getCapsule ( this ) . getCapsule ( this ) . getCapsule ( this ) ) ; rot = ( ( com.jme3.math.Qu ( ) ( capsule . readSavable ( "rot" , new com.jme3.math.Qu = () ) ) ) ; translation = ( ( com.jme3.math.Vector3f ) ( capsule . readSavable ( "translation" , Vector3f.ZERO ) ) ) ; scale = ( ( com.jme3.math.Vector3f ) ( capsule . readSavable ( "scale" , Vector3f.UNIT_XYZ ) ) ) ; }
isilonApi . getExport ( expId )
{ java.awt.geom.Rectangle2D.Double rec = new java.awt.geom.Rectangle2D.Double ( ( ( getRadius () ) * 2 ) , ( ( getRadius () ) * 2 ) , getCenter () . getX () , getCenter () . getY () ) ; g2 . setColor ( java.awt.Color.BLACK ) ; g2 . fill ( rec ) ; }
{ java.lang.String query = ( ( ( "INSERT INTO favorites VALUES('" + name ) + "'," ) + id ) + ")" ; try ( java.sql.Connection con = dataSource . getConnection () ) { java.sql.PreparedStatement ps = con . prepareStatement ( "INSERT INTO favorites (name, plan_id) VALUES (?,?)" ) ; ps . setString ( 1 , name ) ; ps . setInt ( 2 , id ) ; ps . executeUpdate () ; } }
{ recorder . stop () ; broadcastIntent . putExtra ( "time" , "" ) ; sendBroadcast ( broadcastIntent ) ; timeSwapBuff += timeInMilliseconds ; customHandler . removeCallbacks ( updateTimerThread ) ; recorder . reset () ; recorder . release () ; recorder = null ; }
public java.util.List < java.lang.Object > > find ( java.util.List < java.lang.String > relations , java.lang.Class clazz ) { if ( ( s ) == null ) { s = sf . openStatelessSession () ; s . beginTransaction () ; } org.hibernate.SQLQuery q = s . createSQLQuery ( nativeQuery ) . addEntity ( clazz ) ; for ( java.lang.String r : relations ) { q . addScalar ( r ) ; } return q . list () ; }
getSupportFragmentManager () . beginTransaction () . replace ( R.id.movie_detail_container , new com.odytrice.popularmovies.fragments.DetailFragment () )
private void updateTimeTaken () { this . experienceTime = ( this . BASE_TIME ) / ( ( ( this . level ) / 10 ) + 1 ) ; this . repairTime = ( this . experienceTime ) * 2 ; if ( ( this . experienceTime ) < 0.5 ) { this . experienceTime = ( ( float ) ( 0.5 ) ) ; } if ( ( this . repairTime ) < 1.0 ) { this . repairTime = ( ( float ) ( 1.0 ) ) ; } }
{ initializeFacebookLoginButton () ; com.facebook.AccessToken accessToken = com.facebook.AccessToken . getCurrentAccessToken () ; loginLayout . setVisibility ( View.GONE ) ; retrieveUpdatesListFromFacebookApi ( accessToken ) ; loginLayout . setVisibility ( View.GONE ) ; com.facebook.login.LoginManager . getInstance () . logInWithReadPermissions ( this , java.util.Collections . singletonList ( "public_profile" ) ) ; }
return new java.util.ArrayList <> () ;
{ return input ; }
new de.zib.vold.common.Key ( key , key . get ( 2 ) , key . get ( 1 ) )
try { _googleAccounts = future . getResult () ; this . setListAdapter ( new com.axelby.podax.ImportSubscriptionActivity.ImportSubscriptionAdapter () ) ; } catch ( android.accounts.OperationCanceledException e ) { android.util.Log . e ( "Podax" , "Operation Canceled" , e ) ; } catch ( java.io.IOException e ) { android.util.Log . e ( "Podax" , "IOException" , e ) ; }
tasknote.parser.Parser . getUpdateTaskId ( userCommand )
public boolean monsterExist ( game.zork.Monster monster ) { java.util.Map < game.zork.GameMap.Coordination , java.util.ArrayList < java.lang.Object > > mapLevel = getLevelMap () ; game.zork.GameMap.Coordination currentPosition = getCurrentPosition () ; for ( java.lang.Object i : mapLevel . get ( currentPosition ) ) { if ( ( i instanceof game.zork.Monster ) && ( ( ( ( game.zork.Monster ) ( i ) ) . getName () ) == ( monster . getName () ) ) ) { return true ; } } return false ; }
{ c . set ( 1 , 1 ) ; c . set ( 2 , 4 ) ; assertEquals ( c . get ( 1 ) , 1 ) ; c . set ( 3 , 9 ) ; assertEquals ( c . get ( 1 ) , 1 ) ; assertEquals ( c . get ( 2 ) , null ) ; assertEquals ( c . get ( 3 ) , 9 ) ; }
new org.corpus_tools.pepper.core.ModuleFitnessChecker ()
if ( isDouble ) { capacity = 2 * ( originalCapacity ) ; }
for ( java.lang.String line : lines ) { if ( line != null ) { player . sendMessage ( ru.simsonic.rscMinecraftLibrary.Bukkit.GenericChatCodes . processStringStatic ( ( ( ru.simsonic.rscFirstJoinDemo.API.Settings.chatPrefix ) + line ) ) ) ; } }
{ int scoreFirst = arg0 . getScore () ; int scoreSecond = arg1 . getScore () ; if ( scoreFirst == scoreSecond ) return 0 ; else if ( scoreFirst > scoreSecond ) return 1 ; return - 1 ; }
{ out . add ( st . getSubject () . stringValue () ) ; out . add ( st . getPutil () . stringValue () ) ; out . add ( st . getObject () . stringValue () ) ; }
{ application.TicTacToeApp.board [ i ] [ j ] . clear () ; }
while ( parentComponent != comp ) { parentComponent = parentCDs . pop () ; }
{ long difference = ( firstDate . getTime () ) - ( secondDate . getTime () ) ; int diffDays = ( ( int ) ( difference ) ) / ( ( ( 24 * 60 ) * 60 ) * 1000 ) ; return diffDays ; }
return i ;
return internal error ; return new org.apache.commons.lang.builder.HashCodeBuilder () . append ( username ) . append ( firstName ) . append ( lastName ) . append ( email ) . append ( active ) . append ( country ) . append ( sendReminder ) . append ( lastLoginTime ) . append ( lastPasswordChangeTime ) . toHashCode () ;
{ notificationUtils = new android.stalwartgroup.residentguardo.Util.NotificationUtils ( context ) ; notificationUtils . showNotificationMessage ( title , message , timeStamp , intent , imageUrl ) ; android.stalwartgroup.residentguardo.Util.NotificationUtils notificationUtils = new android.stalwartgroup.residentguardo.Util.NotificationUtils () ; notificationUtils . playNotificationSound () ; }
{ java.io.BufferedInputStream in = new java.io.BufferedInputStream ( process . getInputStream () ) ; return in ; }
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { boolean isEqual = false ; try { isEqual = ( ( obj . getClass () ) != ( dss.lingvo.hflts.TTHFLTS . class ) ) && ( java.util.Arrays . equals ( this . terms , ( ( dss.lingvo.hflts.TTHFLTS ) ( obj ) ) . getTerms () ) ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return isEqual ; }
getSupportFragmentManager () . beginTransaction () . replace ( id , fragment ) . commit () ;
@ java.lang.Override void appendOp ( java.lang.String op , boolean binOp ) { if ( ( ( getLastChar () ) != ' ' ) && ( ( op . charAt ( 0 ) ) != ',' ) ) { append ( " " ) ; } append ( op ) ; if ( binOp ) { append ( " " ) ; } }
{ org.terrier.matching.ResultSet rs = srq . getResultSet () ; int [] docIds = rs . getDocids () ; double [] scores = rs . getScores () ; for ( int i = 0 ; i < ( docIds.length ) ; i ++ ) { if ( ( docIds [ i ] ) == documentId ) { return scores [ i ] ; } } return 0 ; }
if ( ( mAdapter ) == null ) { android.util.Log . d ( TAG , "A" ) ; mAdapter = new com.payforward.androidapp.post.CategoryActivity.CustomAdapter ( this , com.payforward.androidapp.R.layout.category , categoryList ) ; mCategoryList . setAdapter ( mAdapter ) ; } else { android.util.Log . d ( TAG , "B" ) ; mAdapter . clear () ; mAdapter . addAll ( categoryList ) ; mAdapter . notifyDataSetChanged () ; }
java.lang.String description
com.jwetherell.algorithms.mathematics.Exponentiation . fastRecursiveExponentiation ( base , ( exponent / 2 ) )
{ org.robolectric.shadows.ShadowMediaPlayer.CreateListener createListener = mock ( mMediaPlayer.CreateListener . class ) ; org.robolectric.shadows.ShadowMediaPlayer . setCreateListener ( createListener ) ; android.media.MediaPlayer newPlayer = new android.media.MediaPlayer () ; org.robolectric.shadows.ShadowMediaPlayer shadow = org.robolectric.Shadows . shadowOf ( newPlayer ) ; org.mockito.Mockito . verify ( createListener ) . onCreate ( newPlayer , shadow ) ; org.robolectric.shadows.ShadowMediaPlayer . setCreateListener ( null ) ; }
{ int markerPosition = markers . indexOf ( marker ) ; if ( markerPosition == ( selectedPosition ) ) return true ; selectMarker ( markerPosition ) ; if ( isZoomed () ) { listener . onActivityMarkerPressedAtIndex ( markerPosition ) ; } else { listener . onLegMarkerPressedAtIndex ( markerPosition ) ; } return true ; }
{ for ( int a = 0 ; a < ( funCall . numArgs () ) ; a ++ ) funCall . arg ( a ) . accept ( this ) ; compiler.phase.seman.Decl decl = attrs. tAttr . get ( funCall ) ; compiler.phase.seman.Typg = attrs.typAttr . get ( decl ) ; if ( s != null ) attrs.typAttr . set ( funCall , ( ( compiler.phase.seman.FunTyp ) ( double ) ) . resultTyp ) ; }
return new java.lang.StringBuilder ( "config.rcs.mnc" ) . append ( mnc ) . append ( ".mcc" . append ( mcc ) . append ( ".pub.3gppnetwork.org" ) . toString () ;
return movieEntity . createQuery ( MovieGenreDb.TABLE_NAME , MovieGenreDb.SELECT_MOVIE_GENRES , movieEntity . getId () ) ;
if ( ( ( lose ) == false ) && ( ( getX () ) != 533 ) ) { i = ( i ) + 1 ; setImage ( ( ( "st" + ( ( i ) % 4 ) ) + ".png" ) ) ; }
switch ( game.Player.lastDir ) { case 1 : game.Player.y += game.Player.size ; break; case 2 : game.Player.x += game.Player.size ; break; case 3 : game.Player.y -= game.Player.size ; break; case 4 : game.Player.x -= game.Player.size ; break; default: break; }
public void analyze () { boolean error = false ; for ( nez.lang.Production p : this . peg . getProductionList () ) { if ( ! ( this . analizeConsumption ( p . getExpression () ) ) ) { if ( ! ( this . analizeConsumption ( p . getExpression () ) ) ) { error = true ; } } } if ( error ) { nez.util.ConsoleUtils . exit ( 1 , "Grammar Error" ) ; } }
{ if ( link == null ) return; link . setRemoved () ; link . getGear1 () . setLink ( null ) ; link . getGear2 () . setLink ( null ) ; this . dataWorker . addChangedLink ( link ) ; }
mutate ( newPopulation )
if ( text . trim () . equals ( "" ) ) { toReturn += text + " " ; }
containsKey ( deploymentPolicy . getDeploymentPolicyID () )
switch ( s ) { case "text" : instruction . setText ( true ) ; break; case "audio" : break; case "flash" : show ( counter ) ; break; case "next" : show ( counter ) ; ( counter ) ++ ; instruction . setText ( instructions [ counter ] ) ; step_number . setText ( steps [ counter ] ) ; break; }
{ java.lang.String oldListName = this . listName ; this . listName = listName ; propSupport . firePropertyChange ( "listName" , oldListName , listName ) ; }
{ org.junit.Assert . assertNotNull ( response ) ; org.junit.Assert . assertEquals ( ( ( int ) ( httpCode ) ) , response . getStatus () ) ; java.lang.String json = response . getEntity () . toString () ; T commonResult = response . readEntity ( commonResultClass ) ; org.junit.Assert . assertNotNull ( commonResult.successful ) ; return commonResult ; }
timeout > 0
@ java.lang.Override public void onCameraIdle () { handler . removeCallbacksAndMessages ( null ) ; handler . postDelayed ( new java.lang.Runnable () { @ java.lang.Override public void run () { executeTask () ; } } , 500 ) ; }
{ for ( com.google.firebase.database.DataSnapshot d : dataSnapshot . child ( "Private User Data" ) . child ( mUserId ) . getChildren () ) { userName . setText ( "aa" ) ; userEmail . setText ( "bb" ) ; com.example.saathi.Student c = d . getValue ( com.example.saathi.Student . class ) ; java.lang.String nameVal = c . getName () ; java.lang.String emailVal = mFirebaseAuth . getCurrentUser () . getEmail () ; userName . setText ( nameVal ) ; userEmail . setText ( emailVal ) ; } }
{ assert new java.io.File ( e . getKey () ) . isAbsolute () ; }
{ org.apache.curator.framework.recipes.locks.InterProcessLock lock = coordinatorClient . getLock ( com.emc.sa.api.OrderService.ORDER_JOB_LOCK ) ; coordinatorClient . persistRuntimeState ( status . getType () . name () , status ) ; lock . release () ; }
public java.math.BigInteger getNum ( int k , cz.tomkren.fishtron.types.Type t_NF ) { if ( opts . isCachingUsed () ) { return cache . getNum ( k , t_NF ) ; } else { java.math.BigInteger sum = java.math.BigInteger.ZERO ; for ( cz.tomkren.fishtron.ugen.data.SubsRes subsRes : subs_compute ( k , t_NF , 0 ) ) { sum = sum . add ( subsRes . getNum () ) ; } return sum ; } }
private java.lang.String getAccountsUrl ( java.lang.String deploymentUrl , java.lang.String username ) { if ( deploymentUrl != null ) { if ( deploymentUrl . endsWith ( "/" ) ) { deploymentUrl = deploymentUrl . substring ( 0 , ( ( deploymentUrl . length () ) - 1 ) ) ; } java.lang.String accountsUrl = ( ( deploymentUrl + "/" ) + username ) + "/Supervisor.json" ; return accountsUrl ; } }
( toAdd != null ) && ( toAdd != "" )
{ super . onResume () ; if ( com.example.maaus.template.org.opencv.android.OpenCVLoader . initDebug () ) { mLoaderCallback . onManagerConnected ( org.opencv.android.LoaderCallbackInterface.SUCCESS ) ; } else { android.util.Log . d ( com.example.maaus.template.ActivityFour.TAG , "OpenCV not root" ) ; com.example.maaus.template.org.opencv.android.OpenCVLoader . initAsync ( org.opencv.android.OpenCVLoader.OPENCV_VERSION , this , mLoaderCallback ) ; } }
{ android.content.ContextWrapper cw = new android.content.ContextWrapper ( getApplicationContext () ) ; java.io.File directory = cw . getFilesDir () ; android.util.Log . e ( rocks.athrow.android_inventory_app.ItemDetailDataEntry.LOG_TAG , ( "nameField " + directory ) ) ; java.io.File mypath = new java.io.File ( directory , filename ) ; fos = new java.io.FileOutputStream ( mypath ) ; bitmapImage . compress ( Bitmap.CompressFormat.PNG , 100 , fos ) ; }
{ com.game.Audio.Sounds.sound = Gdx.audio . newSound ( Gdx.files . internal ( "Game_Sound/Sound.mp3" ) ) ; com.game.Audio.Sounds.sound . setLooping ( 0 , true ) ; com.game.Audio.Sounds.sound . setVolume ( com.game.Audio.Sounds.Menu_Music , true ) ; com.game.Audio.Sounds.sound . setVolume ( com.game.Audio.Sounds.Menu_Music , com.game.Audio.Sounds.Menu_Volume ) ; com.game.Audio.Sounds.sound . play ( com.game.Audio.Sounds.Menu_Volume ) ; com.game.Audio.Sounds.sound . play ( com.game.Audio.Sounds.Menu_Volume ) ; }
return new java.util.ArrayList < java.lang.Runnable > () ;
( board [ row ] . length )
{ if ( isOpen () ) return true ; boolean open ; open = camera . open ( cameraIndex ) ; if ( open ) { camera . set ( 5 , 60 ) ; com.shootoff.camera.CameraFactory . openCamerasAdd ( this ) ; } return open ; }
newAccountNum ( java.lang.Integer . toString ( java.util.concurrent.ThreadLocalRandom . current () ) ) ;
aSide != aFacing ? new gregtech.api.objects.GT_RenderedTexture ( final.github.technus.tectech.thing.metaTileEntity.single.GT_MetaTileEntity_DebugStructureWriter.MARK )
enter3Stmt ( ctx . if_stmt () , ctx . stmt () )
assertEquals ( "ThirdLine" , testListener . getNextEventAsLine () . getLine () )
private java.util.List < gameoflife.Cell > allCells () { java.util.List < gameoflife.Cell > allCells = new java.util.ArrayList <> () ; for ( int y = 0 ; y < ( matrix . getWidth () ) ; y ++ ) { for ( int x = 0 ; x < ( matrix . getHeight () ) ; x ++ ) { allCells . add ( new gameoflife.Cell ( y , x , ( - 1 ) ) ) ; } } return allCells ; }
new org.infinispan.io.GridInputStream ( file , data )
{ user . addRequiredAction ( null ) ; user . addRequiredAction ( null ) ; org.keycloak.services.managers.AuthenticationManager.logger . debug ( "User is required to configure totp" ) ; }
{ cz.cesnet.cloud.occi.parser.TextParser.LOGGER . debug ( "Reading response body." ) ; java.lang.String replaced = body . replaceAll ( "X-OCCI-Location:\\s*" , "" ) ; java.lang.String [] lines = replaced . split ( "[\\r\\n]+" ) ; return makeURIList ( lines ) ; }
{ backupName = org.apache.commons.io.FilenameUtils . removeExtension ( backupName ) ; if ( backupName != null ) { java.io.File backupDir = ( isLocal ) ? new java.io.File ( getBackupDir () , backupName ) : new java.io.File ( RConstants.RESTORE_DIR , backupName ) ; } return backupDir ; }
{ if ( ( ( ( mudmap2.Mudmap2.copy_places ) != null ) && ( ( mudmap2.Mudmap2.copy_place_locations ) != null ) ) && ( layer != null ) ) { for ( mudmap2.Pair < java.lang.Integer , java.lang.Integer > coordinate : mudmap2.Mudmap2.copy_place_locations ) if ( layer . exist ( ( x + ( coordinate.first ) ) , ( y + ( coordinate.second ) ) ) ) return false ; } return true ; }
{ com.github.fishio.logging.TxtFileHandler handler2 = new com.github.fishio.logging.TxtFileHandler ( new com.github.fishio.logging.TimeStampFormat () , new java.io.File ( folder . getRoot () , filename ) ) ; com.github.fishio.logging.DefaultFormat df = new com.github.fishio.logging.DefaultFormat () ; handler . setFormat ( df ) ; handler2 . setFormat ( df ) ; org.junit.Assert . assertTrue ( handler . equals ( handler2 ) ) ; try { handler2 . close () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } }
{ mScaleTouchSlop = android.view.ViewConfiguration . get ( context ) . getScaledTouchSlop () ; mScreenW = getResources () . getDisplayMetrics () . widthPixels ; }
{ mAddFAB . setVisibility ( View.INVISIBLE ) ; mAddDialog = new org.jasey.unforgetit.fragment.AddTaskDialogFragment () ; getSupportFragmentManager () . beginTransaction () . setTransition ( FragmentTransaction.TRANSIT_FRAGMENT_OPEN ) . replace ( R.id.unforget_it_activity , mAddDialog ) . commit () ; mPagerAdapter . notifyDataSetChanged () ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_search ) ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; setupViews () ; actionBar = getSupportActionBar () . setTitle ( "News Search" ) ; client2 = new com.google.android.gms.common.api.GoogleApiClient.Builder ( this ) . addApi ( AppIndex.API ) . build () ; }
{ org.ejdb.bson.BSONObject friendRecord = new org.ejdb.bson.BSONObject ( "userid1" , java.lang.String . valueOf ( friendid1 ) ) ; friendRecord . append ( "userid2" , java.lang.String . valueOf ( friendid2 ) ) . append ( "status" , EJDBClientProperties.FRIEND_CONFIRMED ) ; org.ejdb.bson.types.ObjectId recordID = src.EJDBClient.friends . save ( friendRecord ) ; src.EJDBClient.friends . commitTransaction () ; return 0 ; }
( _classPK ) != null
easy.SearchA2DMatrix . searchMatrix ( new int [] [] { new int [] { 1 , 3 , 5 , 7 } , new int [] { 10 , 11 , 16 , 20 } , new int [] { 23 , 30 , max , 50 } } , 11 )
com.addressbook.thorrism.addressbook.DroidBook . getInstance () . hideKeyboard ()
private java.lang.String getMultiVector () { java.lang.String ans = "" ; for ( int i = 0 ; i < ( groupSize ) ; i ++ ) ans += ( getNameVector [ i ] ) + " " ; return ans ; }
if ( calendarMode . equals ( AbstractDateWidget.CalendarMode.MONTH_YEAR ) ) { dayPicker . setVisibility ( View.GONE ) ; dayPicker . setValue ( 0 ) ; } else if ( calendarMode . equals ( AbstractDateWidget.CalendarMode.YEAR ) ) { dayPicker . setVisibility ( View.GONE ) ; monthPicker . setVisibility ( View.GONE ) ; dayPicker . setValue ( 0 ) ; yearPicker . setValue ( 0 ) ; }
aL . expandToContain ( memberLocation ) ;
mock ( org.newdawn.slick.Image . class )
{ android.view.View view = inflater . inflate ( R.layout.fragment_movie_item_details , container , false ) ; movieViewHolder . getmImageView () . setImageResource ( mMovieItem . getImageRes () ) ; movieViewHolder . getmNameView () . setText ( mMovieItem . getName () ) ; movieViewHolder . getmTextDescription () . setText ( mMovieItem . getDescription () ) ; return view ; }
{ mSPEditor = mSharedPreferences . edit () ; mSPEditor . remove ( this . gameStatus . trip_start_date_tag ) ; mSPEditor . commit () ; }
return ( ( int ) ( ( java.lang.Math . abs ( ( ( seed ) % max_ ) ) ) + 1 ) ) ;
{ asserter . assertEquals ( new org.json.JSONArray ( actual . asString () ) , asserter . objectsToArray ( expected ) , mode , ignore ) ; setDefault () ; }
mActivity . startActivity ( intent )
{ Overlay overlay = new Overlay () ; PointRoi pointRoi = new PointRoi ( xCentroid , yCentroid ) ; pointRoi . setPosition ( roiPosition ) ; overlay . add ( pointRoi ) ; orgexHull . setPosition ( roiPosition ) ; overlay . add ( convexHull ) ; channel . setOverlay ( overlay ) ; channel . show () ; }
switch ( s ) { case "user.home" : value = org.parabot.core.Directories . getCachePath () . getAbsolutePath () ; break; case "java.class.path" : value = "." ; break; default: value = java.lang.System . getProperty ( s ) ; }
{ mAudioService . executeAction ( Constants.Action.ACTION_PLAY ) ; if ( isNetworkAvailable () ) { if ( ( mAudioService ) != null ) { mAudioService . startAnimation ( playClickAnimation ) ; btnPlay . setImageResource ( ( showPlayButton ? android.R.drawable.ic_media_play : android.R.drawable.ic_media_pause ) ) ; showPlayButton = ! ( showPlayButton ) ; } } else { android.widget.Toast . makeText ( this , getString ( R.string.no_network ) , Toast.LENGTH_SHORT ) . show () ; } }
{ java.sql.Connection conn = null ; java.sql.PreparedStatement prepStmt = null ; try { java.lang.String statement = "DELETE FROM Schedule WHERE date = ?" ; conn = establishConnection () ; prepStmt = conn . prepareStatement ( statement ) ; prepStmt . execute () ; } catch ( java.lang.Exception e ) { java.lang.System.out . println ( "Success removed" ) ; } conn . close () ; }
{ mX = ( ( int ) ( event . getX () ) ) ; mY = ( ( int ) ( event . getY () ) ) ; setPlacing ( true ) ; return super . onTouchEvent ( event ) ; }
{ if ( ( handler ) != null ) assert handler != null ; assert mouse != null ; if ( handler instanceof BaseActor ) { handler . dataIn () ; } handler . ++Out () ; }
if ( queue . isEmpty () ) { try { storeTripMessage ( queue . take () ) ; } catch ( java.lang.InterruptedException e ) { android.util.Log . e ( AppLog.LOG_TAG_DB , "Exception while reading msg from queue!" , e ) ; } } else { cz.meteocar.unit.engine.storage.DatabaseService . sleep ( 200 ) ; }
batch . draw ( cannonTextureRegion , ( (x ) - ( ( width ) / 2.0F ) ) , ( ( ( ypos ) - ( ( height ) / 2.0F ) ) ) + 23 ) , ( ( width ) / 2.0F ) , ( ( height ) / 2.0F ) , width , height , ( 5 / 2 ) , 1 , angle , true )
{ org.apache.tamaya.builder.ConfigurationBuilder builder = new org.apache.tamaya.builder.ConfigurationBuilder () ; org.apache.tamaya.Configuration config = builder . addPropertySources ( org.apache.tamaya.resource.ConfigResources . getResourceResolver () . getResources ( "META-INF/boot" ) ) . enableProvidedPropertyConverters () . enabledProvidedPropertyFilters () . build () ; }
com.studygoal.jisc.Managers.NetworkManager . getInstance () . updateProfileImage ( imagePath )
public void removeProgress () { if ( ( getItem ( ( ( getItemCount () ) - 1 ) ) ) == null ) { this . listMovies . remove ( ( ( getItemCount () ) - 1 ) ) ; notifyItemRemoved ( getItemCount () ) ; } }
java.lang.String group_id
( ( blank ) + s1 ) + "\n"
( ( ( org.opendaylight.yang.gen.v1.urn.opendaylight.table.types.rev131026.table.feature.prop.type.table.feature.prop.type.Unknowns ) ( propType ) ) ) != null
setAdapter ( this )
{ allEercises = adapter . getAlExerciseOn ( selected_date_long ) ; allEercises = adapter . getAlExerciseOn ( selected_date_long ) ; startManagingCursor ( allEercises ) ; setListAdapter ( new android.widget.SimpleCursorAdapter ( this , R.layout.workout_summary_exercises_list_item , allEercises_activities_txt } ) ) ;
agentIsSized ? 2
{ if ( ( _selectionMode ) != ( SelectionMode.USECOMBO ) ) { return; } _comboNameBox = createNameBox ( itemType ) ; if ( ( _comboNameBox ) == null ) { return; } java.lang.String newName = _curAction . getDeviceName () ; _comboNameBox . setSelectedBeanByName ( newName ) ; _comboNameBox . addItemListener ( new jmri.jmrit.conditional.NameBoxListener ( _actionNameField ) ) ; _namePanel . setVisible ( false ) ; _actionComboNamePanel . setVisible ( true ) ; }
public boolean getKeepEditorOnClickDisabledRows ( org.json.JSONObject gridElem ) { java.lang.String keepEditor = gridElem . optString ( "keepEditorOnClickDisabledRows" ) ; if ( ( keepEditor != null ) && ( ( keepEditor . trim () . length () ) > 0 ) ) { return java.lang.Boolean . parseBoolean ( keepEditor ) ; } return false ; }
modules . add ( parseModule ( e ) )
if ( isFavorite ) { item . setIcon ( getResources () . getDrawable ( R.mipmap.ic_star_white_24dp , null ) ) ; } else { item . setIcon ( getResources () . getDrawable ( R.mipmap.ic_star_outline_white_24dp , null ) ) ; }
{ java.util.List < de.dhbw.persistence.Match > matches = new java.util.ArrayList <> () ; for ( java.lang.String matchId : this . matches . split ( ";" ) ) { long id = java.lang.Long . parseLong ( matchId ) ; de.dhbw.persistence.Match match = nullecyKnowItAll.matchRepository . getMatchById ( id ) ; matches . add ( match ) ; } return matches ; }
{ replaceFragment ( new com.six.maitime.ui.PersonListFragment () ) ; if ( ( drawerList ) != null ) drawerList . setItemChecked ( position , true ) ; setTitle ( optionsMenuTitles [ position ] ) ; mDrawerLayout . closeDrawer ( drawerList ) ; }
createSupport ( ( ( java.util.ArrayList < java.lang.Long > () ) + 1 ) )
{ android.util.Log . d ( com.team2.android.proctor.ui.AttendanceFragment.TAG , ( "onMessageReceived:" + ( new java.lang.String ( payload ) ) ) ) ; java.lang.String message = new java.lang.String ( payload ) ; com.team2.android.proctor.model.input.Attendance attendance = new com.team2.android.proctor.model.input.Attendance () ; if ( ( message . split ( ":" ) [ 0 ] ) != null ) { if ( ( message . split ( ":" ) [ 0 ] ) != null ) { return new com.team2.android.proctor.ui.AttendanceFragment.TakeAttendanceTask () . execute ( attendance ) ; } } }
switch ( mBottomSheetNavigationView . getSelectedItemId () ) { case R.id.main_bottom_sheet_navigation_calendar : me.kholmukhamedov.organizer.ui.fragment.calendar.CalendarFragment calendarFragment = ( ( me.kholmukhamedov.organizer.ui.fragment.calendar.CalendarFragment ) ( mFragmentsMap . get ( CalendarFragment.TAG ) ) ) ; if ( ( calendarFragment ) != null ) calendarFragment . hideCalendarView () ; break; }
public java.time.LocalDate resultToDate ( java.lang.String inputDateStr , java.lang.String inputPattern ) { java.util.Locale locale = java.util.Locale . getDefault ( java.util.Locale.Category.FORMAT ) ; java.time.format.DateTimeFormatter inputDateTimeFormatter = new java.time.format.DateTimeFormatterBuilder () . parseLenient () . appendPattern ( inputPattern ) ; java.time.format.DateTimeFormatter inputDateTimeFormatter = new java.time.format.DateTimeFormatterBuilder () . parseLenient () . appendPattern ( inputPattern ) ; java.time.format.DateTimeFormatter inputDateTimeFormatter = new java.time.format.DateTimeFormatterBuilder () . parseLenient () . appendPattern ( inputPattern ) ; java.time.format.DateTimeFormatter inputDateTimeFormatter = new java.time.format.DateTimeFormatterBuilder () . parseLenient () . appendPattern ( inputPattern ) ; java.time.format.DateTimeFormatter inputDateTimeFormatter = new java.time.format.DateTimeFormatterBuilder () . parseLenient () . appendPattern ( inputPattern ) ; java.time.format.DateTimeFormatter inputDateTimeFormatter = new java.time.format.DateTimeFormatterBuilder () . parseLenient () . appendPattern ( inputPattern ) ; java.time.format.DateTimeFormatter inputDateTimeFormatter = new java.time.format.DateTimeFormatterBuilder () . parseLenient () . appendPattern ( inputPattern ) . toFormatter () ; return null ; }
if ( ( ( httpCallback ) != null ) && ( ( httpCallback . getType () ) != null ) ) { try { httpCallback . onResolve ( new com.google.gson.Gson () . fromJson ( t . charStream () , httpCallback . getType () ) ) ; } catch ( java.lang.Exception e ) { httpCallback . onFailure ( "" , "data resolve error,please check the json response" ) ; e . printStackTrace () ; } }
{ if ( ! ( super . equals ( object ) ) ) { return false ; } if ( ! ( object instanceof org.nlamah.QL.Model.Form.Abstract.FormQuestion ) ) { return false ; } org.nlamah.QL.Model.Form.Abstract.FormQuestion value = ( ( org.nlamah.QL.Model.Form.Abstract.FormQuestion ) ( object ) ) ; if ( compareOnlyQuestionText ) { if ( this . questionText . equals ( value.questionText ) ) { return true ; } } return true ; }
return ( ( ( ( ( ( ( ( ( ( ( ( ( "ContactData{" + "id=" ) + ( id ) ) + ", height='" ) + ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( "ContactData{" + "id=" ) + ( id ) ) + ", height='" ) + ( ( ( ( ( ( ( ( ( ( ( ( ( ( "ContactData{" + "id=" ) + ( id ) ) + ", height='" ) + ( ( ( ( ( ( ( ( ( ( ( ( ( ( "ContactData{" + "id=" ) + ( id ) ) + ",Name='" ) + ( ( ( ( ( ( ( ( ( ( ( "ContactData{" + "id=" ) + ( id ) ) + ",Name='" ) + ( ( ( ( ( ( ( ( ( ( ( ( "ContactData{" + "id=" ) + ( id ) ) + ", height='" ) + ( ( ( ( ( ( ( ( "ContactData{" + "id=" ) + ( id ) ) + ", ) + '\'' ) + ", mobilePhone='" ) + ( mobilePhone ) ) + '\'' ) + '}' ) ) + '}' ) + '\'' ) + ", mobilePhone='" ) + ( mobilePhone ) ) + '\'' ) + '}' ) ) + '}' ) ) ) + '}' ) ) + '}' ) ) + '}' ) ) + ", mobilePhone='" ) + ( mobilePhone ) ) + '\'' ) + '}' ;
{ super . onOptionsItemSelected ( item ) ; switch ( item . getItemId () ) { case R.id.sort_by : java.lang.String [] items = getResources () . getStringArray ( R.array.sort_by ) ; com.psincraian.gameslibrary.SortByDialog dialog = new com.psincraian.gameslibrary.SortByDialog ( getActivity () , items , this ) ; dialog . onCreateDialog ( null ) ; break; } return true ; }
if ( ( ( currPitInfoIndex ) >= 0 ) && ( ( currTeam ) != null ) ) { try { boolean tempValue = the_auto_high_goal_Button . isChecked () ; if ( ( currTeam . getBoolean ( DBContract.TablePitInfo.COLNAME_PIT_AUTO_HIGH_GOAL ) ) != tempValue ) { currTeam . put ( DBContract.TablePitInfo.COLNAME_PIT_AUTO_HIGH_GOAL , tempValue ) ; } } catch ( org.json.JSONException e ) {} }
{ java.io.File [] children = file . listFiles () ; java.util.List < org.jenkinsci.plugins.uicontrol.TreeNode > r = new java.util.ArrayList < org.jenkinsci.plugins.uicontrol.TreeNode > () ; for ( java.io.File c : children ) { r . add ( new FileTreeNode ( c ) ) ; } return r ; }
{ configuration . setAttribute ( IUML2JavaContants.ATTR_TARGET_FOLDER_PATH , targetText . getText () ) ; java.util.Set < java.lang.String > umlModelPaths = new java.util.LinkedHashSet < java.lang.String > () ; org.eclipse.swt.widgets.TableItem [] items = modelTable . getItems () ; for ( org.eclipse.swt.widgets.TableItem tableItem : items ) { umlModelPaths . add ( tableItem . getText () ) ; } configuration . setAttribute ( IUML2JavaContants.ATTR_MODEL_PATHS , umlModelPaths ) ; }
{ getNeabyMarkers ( mCurrentLocation ) ; mMap . moveCamera ( com.google.android.gms.maps.CameraUpdateFactory . newLatLngZoom ( new com.google.android.gms.maps.model.LatLng ( mCurrentLocation . getLatitude () , mCurrentLocation . getLongitude () ) , com.dev.cromer.jason.whatsappening.Activities.MapActivity.CAMERA_ZOOM ) ) ; }
iterator . remove ()
{ if ( com.blazingkin.interpreter.variables.Variable . isInteger ( line ) ) { return true ; } if ( com.blazingkin.interpreter.variables.Variable . isDouble ( line ) ) { return true ; } if ( com.blazingkin.interpreter.variables.Variable . isBool ( line ) ) { return true ; } if ( com.blazingkin.interpreter.variables.Variable . isString ( line ) ) { return true ; } return false ; }
tokenString = arguments . get ( "accessToken" )
{ int l = data.length ; putInt ( l ) ; ensure ( ( ( position ) + l ) ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . copyMemory ( com.heerbann.unsafe.UnsafeBuffer . toAddress ( data ) , ( ( pointer ) + ( position ) ) , l ) ; position += l ; }
generateRanNumList ( size , ( ( int ) ( choiceRate ) ) )
private void placeFoodBlobs () { int counter = 11 ; while ( counter != 0 ) { java.awt.Point [] foodBlob = makeFoodBlob () ; if ( foodBlob != null ) { for ( java.awt.Point p : foodBlob ) { map . getCell ( p ) . setHasFood ( 5 ) ; counter -- ; } } } }
{ gamelogic.Board board = new gamelogic.Board () ; gamelogic.Square [] [] grid = new gamelogic.Square [ [ 20 ] [ 20 ] ; board . setGrid ( grid ) ; org.junit.Assert . assertTrue ( ( grid == ( board . getGrid () ) ) ) ; }
ShareCompat.IntentBuilder . from ( activity ) . setType ( "text/plain" ) . addEmailTo ( "" ) . setSubject ( title ) . setStream ( android.support.v4.content.FileProvider . getUri () ) . setText ( data ) . setChooserTitle ( "test" ) . startChooser () ;
@ java.lang.Override public java.lang.Boolean execute ( java.lang.Object . . . args ) { try { client . prepareDelete ( indexName , ".percolator" , queryName ) . setRefreshPolicy ( WriteRequest.RefreshPolicy.IM ( ) . execute () . getRefreshPolicy ( WriteRequest.RefreshPolicy.IM ( ) . execute () . m () ; } catch ( java.lang.Exception e ) { org.apache.unomi.persistence.elasticsearch.ElasticSearchPersistenceServiceImpl.logger . error ( "Cannot delete query" , e ) ; } return false ; }
{ this . targetClass . version = org.spongepowered.asm.util.Constants.JAVA8_CLASSFILE_VERSION ; org.spongepowered.asm.mixin.transformer.MemberRef.HandleRef memberRef = new org.spongepowered.asm.mixin.transformer.MemberRef.HandleRef ( handle ) ; this . transformFieldRef ( method , iter , memberRef ) ; return memberRef . getMethodHandle () ; }
{ com.fasterxml.jackson.core.JsonFactory factory = new com.fasterxml.jackson.core.JsonFactory () ; com.fasterxml.jackson.databind.ObjectMapper mapper = new com.fasterxml.jackson.databind.ObjectMapper ( factory ) ; try { return mapper . readValue ( getArg () , typeRef ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return null ; }
assertEquals ( app , app.items [ 0 ] . name )
self . getDelegateingData () . didChangeDrawing ( self , self . canUndo () )
{ if ( output . equals ( "Success " ) ) { working . setTextColor ( Color.GREEN ) ; working . setText ( "Clocked in Succesfully" ) ; sendNotification () ; } else if ( output . equals ( "Failure " ) ) { working . setTextColor ( Color.RED ) ; working . setText ( "You can't clock in again" ) ; } }
org.apache.hadoop.util.ToolRunner . run ( this . configuration ) , otherArgs )
{ getPopupMenu () . setVisible ( false ) ; net.sourceforge.processdash.team.group.UserFilter selectedItem = new net.sourceforge.processdash.team.group.ui.UserGroupSelector ( javax.swing.SwingUtilities . getWindowAncestor ( this ) , "Filter_Prompt" , showIndividuals ) . getSelectedItem () ; setSelectedItem ( selectedItem ) ; javax.swing.MenuSelectionManager . defaultManager () . clearSelectedPath () ; }
values [ ( ( values.length ) - 1 ) ]
{ org.dasein.cloud.azure.network.AzureLoadBalancerCapabilities capabilities = mockit.Deencapsulation . getField ( new org.dasein.cloud.InternalException { org.dasein.cloud.azure.network.AzureLoadBalancerCapabilities capabilities ) ; org.dasein.cloud.azure.tests.network.LoadBalancerCapabilities acutalCapabilities = lbSupport . get () ; org.dasein.cloud.CloudProvider provider = mockit.Deencapsulation . getField ( capabilities , "provider" ) ; org.junit.Assert . assertEquals ( "azure capabilities initialized with incorrect provider" , java.util.Arrays . asList ( java.util.Arrays . asList ( java.lang.Integer . toString ( java.lang.Integer . toString ( java.lang.Integer . toString ( java.lang.Integer . toString ( java.lang.Integer . toString ( java.lang.Integer . toString ( java.lang.Integer . toString ( java.lang.Integer . toString ( java.lang.Integer . toString ( java.util.Arrays . asList ( java.lang.Integer . toString ( java.lang.Integer . toString ( java.lang.Integer . toString ( java.lang.Integer . toString ( java.lang.Integer . toString ( java.lang.Integer . toString ( java.lang.Integer . toString ( java.lang.Integer . toString ( java.lang.Integer . toString ( java.lang.Integer . toString ( java.lang.Integer . toString ( java.lang.Integer . toString ( java.lang.Integer . toString ( java.lang.Integer . toString ( java.lang.Integer . toString ( java.lang.Integer . toString ( java.lang.Integer . toString ( java.lang.Integer . toString ( java.lang.Integer . toString ( java.lang.Integer . toString ( java.lang.Integer . toString ( java.lang.Integer . toString ( java.lang.Integer . toString ( java.lang.Integer . toString ( java.lang.Integer . toString ( java.lang.Integer . toString ( java.lang.Integer . toString ( java.lang.Integer . toString ( java.lang.Integer . toString ( java.lang.Integer . toString ( java.lang.Integer . toString ( java.lang.Integer . toString ( java.lang.Integer . toString ( java.lang.Integer . toString
public void close () { android.content.Intent intent = new android.content.Intent ( "android.location.GPS_ENABLED_CHANGE" ) ; intent . putExtra ( "enabled" , false ) ; sendBroadcast ( intent ) ; if ( ( service ) != null ) { unregisterReceiver ( service ) ; } if ( ( id ) != ( - 1 ) ) { workWithDataBase . onlineEnd ( id ) ; } finish () ; startActivity ( new android.content.Intent ( this , com.example.hjk.testing.MainActivity . class ) ) ; }
@ java.lang.Override public void onNext ( manoilo.catsapiandroidclient.model.Cat cat ) { getCatImgUrl ( cat ) ; }
matcher . find () ? java.lang.Double . valueOf ( matcher . group ( 0 ) ) : 100.0
return java.lang.Integer.MAX_VALUE ;
{ android.view.View view = android.view.LayoutInflater . from ( getActivity () ) . inflate ( R.layout.item_title , null ) ; android.widget.TextView textView = ( ( android.widget.TextView ) ( view . findViewById ( R.id.title_text ) ) ) ; textView . setText ( title ) ; container . addView ( view ) ; }
handleAttack ( game.currentplayer )
private java.util.List < input.ExternalEvent > readEvents ( int nrof ) { if ( allEventsRead ) { return new java.util.ArrayList < input.ExternalEvent > ( 0 ) ; } java.util.List < input.ExternalEvent > events = reader . readEvents ( nrof ) ; if ( ( nrof > 0 ) && ( ( events . size () ) == 0 ) ) { reader . close () ; allEventsRead = true ; } return events ; }
userAnswer = new int [ 0 ]
doMinimize ( false )
{ java.lang.System.out . println ( webApplication ) ; java.io.File sourcePath = new java.io.File ( "structur +-core/test/unit" ) ; com.structur..componentfinder.ComponentFinder componentFinder = new com.structur.componentfinder.ComponentFinder ( webApplication , "com.structur +.componentfinder" , new com.structur..componentfinder.JavadocComponentFinderStrategy ( sourcePath . getCanonicalPath () ) ) ; componentFinder . findComponents () ; org.junit.Assert . assertEquals ( "A component that does something." , componentA . getDescription () ) ; org.junit.Assert . assertEquals ( "A component that does something else." , componentB . getDescription () ) ; org.junit.Assert . assertEquals ( "A component that does something else too." , componentC . getDescription () ) ; org.junit.Assert . assertEquals ( "A component that does something else." , componentB . getDescription () ) ; org.junit.Assert . assertEquals ( "A component that does something else too." , componentC . getDescription () ) ; }
notifyCurrentPlayerUpdated ( currentPlayer )
if ( ( item . getItemId () ) == ( android.R.id.home ) ) { android.content.Intent homeIntent = new android.content.Intent ( getApplicationContext () , com.anil..rigfinances.activities.MainActivity . class ) ; homeIntent . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TOP ) ; startActivity ( homeIntent ) ; } else { android.content.Intent intent = new android.content.Intent ( getApplicationContext () , com.anil..rigfinances.activities.SettingsActivity . class ) ; startActivity ( intent ) ; }
net.hazmatrobotics.lightshow.coordinators.MainCoordinator.server . run ()
this . executeScript ( script , null , 0 , false )
gr8pefish.ironbackpacks..player.PlayerDeathBackpackCapabilities . setEquippedBackpack ( player , message.stack )
val2 == 1
{ com.chenyirun.theircraft.model.Point3Int blockLocation = block . getLocation () ; if ( pos . equals ( blockLocation ) ) { return block ; } }
session . setAttribute ( "items" , item )
( "Remove-Entry:" + this . getClass () ) + ( this . getClass () )
public void createConnector ( io.joynr.arbitration.ArbitrationResult result ) { connectorStatusLock . lock () ; }
{ this . quizName = newQuizName ; writeToFile ( ( ( quizName ) + ".txt" ) , toString () , false ) ; return true ; }
{ java.sql.Timestamp openTime = null ; if ( openTime != null ) { unifyOpenTime ( openTime ) ; mzeLottery . setOpenTime ( openTime ) ; } java.lang.System.out . println ( openTime ) ; java.lang.System.out . println ( openTime ) ; java.lang.System.out . println ( openTime ) ; return new cn.wisdom.lottery.service.remote.response.LotteryOpenData ( comzeLottery ) ; }
{ super . onSaveInstanceState ( outState ) ; if ( ir.blog.microc.movie.Temp.DEBUG_MODE ) android.widget.Toast . makeText ( this , "onSaveInstanceState" , Toast.LENGTH_SHORT ) . show () ; android.support.v7.widget.LinearLayoutManager linearLayoutManager = ( ( android.support.v7.widget.LinearLayoutManager ) ( mRecyclerView . getLayoutManager () ) ) ; int position = linearLayoutManager . findFirstVisibleItemPosition () ; outState . putInt ( ir.blog.microc.movie.activities.MainActivity.FIRST_VISIBLE_ITEM_KEY , position ) ; outState . putParcelableArrayList ( ir.blog.microc.movie.activities.MainActivity.MOVIE_DATA_PARCELABLE , ( ( java.util.ArrayList < ? extends android.os.Parcelable > ) ( movieList ) ) ) ; }
public synchronized void removePlayer ( CardGame.User user ) { int removeID = 999 ; int index = 0 ; for ( CardGame.GameEngine.Player player : players ) { if ( player . getUsername () . equals ( user . getUserName () ) ) { removeID = index ; } index ++ ; } }
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/es/saveEsData" ) public org.datasays.wes.demo.model.ActionResult saveEsData ( @ org.springframework.web.bind.annotation.RequestBody org.datasays.wes.vo.EsItem doc ) { org.datasays.wes.vo.model.ActionResult result = new org.datasays.wes.demo.model.ActionResult () ; try { org.datasays.wes.vo.EsItem newdoc = esService . save ( doc ) ; result . ok ( newdoc ) ; } catch ( java.lang.Exception e ) { org.datasays.wes.demo.es.actions.EsController.LOG . error ( e . getMessage () , e ) ; result . error ( e ) ; } return result ; }
public static org.neo4j.kernel.impl.query.TransactionalContext createTransactionalContext ( java.lang.String query ) { org.neo4j.kernel.impl.coreapi.InternalTransaction transaction = org.neo4j.cypher.javacompat.internal.DocsExecutionEngineTest.database . beginTransaction ( file ) ; org.neo4j.kernel.impl.query.clientconnection.BoltConnectionInfo boltConnection = new org.neo4j.kernel.impl.query.clientconnection.BoltConnectionInfo ( "username" , "neo4j-java-bolt-driver" , null ) ; return false ; }
java.nio.file.Paths . get ( ( ( java.lang.String ) ( "data" ) ) , "data" , "index" )
{ util.PropertiesUtil parser = util.PropertiesUtil . getInstance () ; java.lang.System.out . println ( " ==2" ) ; java.lang.String serverUrl = parser . getValue ( "serverUrl" ) ; java.lang.String appkey = parser . getValue ( "appkey" ) ; securityClient = new com.taobao.api.security.SecurityClient ( new com.taobao.api.DefaultTaobaoClient ( serverUrl , appkey , appSecret ) , randomNum ) ; }
{ java.nio.channels.FileChannel fc = openFiles . remove ( filePath ) ; if ( ( fc != null ) && ( filePath != null ) ) { fc . close () ; } }
if ( ( item . getSellIn () ) < 0 ) item . setQuality ( ( ( item . getQuality () ) - ( mvc.models.OrganicMemberanas.QUALITY_STEP ) ) ) ; else item . setQuality ( ( ( item . getQuality () ) - ( ( mvc.models.OrganicMemberanas.QUALITY_STEP ) * 2 ) ) ) ;
new todo.javier.mera.todolist.model.Task ( java.util.UUID . randomUUID () . toString () , todoListId , "My Task" , todo.javier.mera.todolist.model.TaskStatus.Created , new java.util.Date () . getTime () , new java.util.Date () . getTime () , new java.util.Date () . getTime () , todo.javier.mera.todolist.model.Priority.None )
new org.eclipse.smarthome.automation.core.internal.RuntimeRule ( rule . getUID () , template , rule )
{ initMessageHandler () ; android.support.v4.app.FragmentTransaction ft = mFragmentManager . beginTransaction () ; ft . replace ( R.id.frame_container , new babyfon.view.fragment.BabyMonitorFragment ( mContext ) , null ) . commit () ; }
{ boolean isValid = true ; java.lang.String firstPolicyName = policyNames [ 0 ] ; for ( java.lang.String policyName : policyNames ) { if ( ! ( policyName . equals ( firstPolicyName ) ) ) { break; } isValid = false ; } return isValid ; }
{ kassa.Kvitto k = skapaTomtK () ; java.util.ArrayList < kassa.Vara > varuSamling = new java.util.ArrayList < kassa.Vara > () ; for ( int i = 0 ; i < 6 ; i ++ ) { varuSamling . add ( skapaTomV () ) ; } k . l ( varuSamling ) ; assert k.getTotalM = ( ngdVaror () ) == 6 ; java.util.Set < kassa.Vara > varuSet = new java.util.HashSet < kassa.Vara > ( varuSamling ) ; assertEquals ( k . getVaruSet () , varuSet ) ; }
public static void update () { synchronized ( haven.GLState.Slot . class ) { if ( ! ( haven.GLState.Slot.and ) ) return; haven.GLState.Slot . addedeps ( haven.GLState.Slot.all ) ; haven.GLState.deplist = new haven.GLState.Slot < ? > [ haven.GLState.Slot.all . size () ] ; for ( haven.GLState.Slot s : haven.GLState.Slot.all ) haven.GLState.deplist [ s.depid ] = s ; } }
encodePath ( path )
if ( expr . canCastReal () ) returnType = Type.REAL ; else throw new java.lang.RuntimeException ( "Cannot cast to 'int' or 'real'. This should never )!" ;
pl.karol202.evolution.utils.Vector2 getVector ( java.lang.String key ) { org.w3c.dom.Element vectorElement = getVectorElementFromListByName ( key ) ; if ( vectorElement == null ) throw new pl.karol202.evolution.utils.SimulationParseException ( ( "Vector element not found: " + key ) ) ; return new pl.karol202.evolution.utils.Vector2 ( java.lang.Float . parseFloat ( element . getAttribute ( "x" ) ) , java.lang.Float . parseFloat ( element . getAttribute ( "y" ) ) ) ; }
if ( ( random . nextInt ( 100 ) ) > ( targetPartition . getChannelNonDropProbability ( targetChannel ) ) ) { sendToTarget ( record , targetChannel ) ; }
{ org.junit.Assert . assertEquals ( null , doubleLinkedList . find ( 1 ) ) ; doubleLinkedList . insertHead ( 1 ) ; doubleLinkedList . insertHead ( 2 ) ; doubleLinkedList . insertHead ( 2 ) ; org.junit.Assert . assertEquals ( 3 , doubleLinkedList . getSize () ) ; org.junit.Assert . assertEquals ( 1 , doubleLinkedList . find ( 1 ) . getId () ) ; }
( size )
power = p [ i ]
{ java.lang.String model = null ; try { model = org.programmatori.domotica.own.sdk.config.Config . getInstance () . getNode ( "system.model" ) ; } catch ( java.lang.Exception e ) {} if ( model == null ) { model = "99" ; } org.programmatori.domotica.own.plugin.system.Value v = new org.programmatori.domotica.own.plugin.system.Value ( model ) ; return v ; }
{ java.lang.String string = ( ( java.awt.TextField ) ( text ) ) . getText () ; if ( ( string . length () ) == 0 ) return false ; try { java.lang.Double . parseDouble ( string ) ; } catch ( java.lang.NumberFormatException e ) { return false ; } }
checkResources ( apps [ i ] )
if ( language . isEmpty () ) { if ( addedDict ) chineseExecute () ; else { addChineseDictionary () ; chineseExecute () ; } } else if ( language . equalsIgnoreCase ( "korean" ) ) { koreanExecute () ; }
{ final java.lang.ThreadLocal < java.util.Deque < com.tinkerpop.blueprints.impls.orient.OrientBaseGraph > > is = com.tinkerpop.blueprints.impls.orient.OrientBaseGraph.initializationStack ; final java.lang.ThreadLocal < com.tinkerpop.blueprints.impls.orient.OrientBaseGraph > ag = com.tinkerpop.blueprints.impls.orient.OrientBaseGraph.activeGraph ; final com.orientechnologies.orient.core.db.ODatabaseRecordThreadLocal dbtl = com.orientechnologies.orient.core.db.ODatabaseRecordThreadLocal.INSTANCE ; if ( dbtl != null ) dbtl . set ( null ) ; }
{ android.content.Intent intent = new android.content.Intent ( getApplicationContext () , com.example.hvs.UpdateActivity . class ) ; intent . putExtra ( "liga" , ligaNr ) ; intent . putExtra ( "update" , 1 ) ; startActivity ( intent ) ; this . finish () ; }
{ initializeInMemoryDatabase () ; executeDataSet ( "org/openmrs/module/idgen/ source/TestData.xml" ) ; authenticate () ; java.util.Map < java.lang.Class < ? extends org.openmrs.module.idgen.IdentifierSource > , org.openmrs.module.idgen.processor.IdentifierIdentifierGeneratorProcessor () ; processor . setIdentifierSourceService ( null ) ; java.util.Map < java.lang.Class < ? extends org.openmrs.module.idgen.IdentifierSource > , org.openmrs.module.idgen.processor.IdentifierSourceProcessor < ? extends org.openmrs.module.idgen.IdentifierSource > , org.openmrs.module.idgen.processor.IdentifierSourceProcessor > () ; }
public static java.lang.String getStringResponse ( java.io.InputStream is ) { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( is ) ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; while ( ( line = reader . readLine () ) != null ) { sb . append ( ( line + "" ) ) ; } return sb . toString () ; }
initRecyclerView ()
{ n1.clusterService . removeAddress ( n2.address ) ; n2.clusterService . removeAddress ( n1.address ) ; }
source . getElement () . addEdge ( label , destination . getElement () , null )
public void payForMeal ( core.agent.Message message ) { core.restaurant.agent.Customer customer = message . get ( 0 ) ; float amountPaid = message . get ( 1 ) ; float cost = 0 ; synchronized ( m_checks ) { for ( core.restaurant.Check c : m_checks ) { if ( ( c . getCustomer () ) == customer ) { c . setStatus ( CheckStatusEnum.Received ) ; c . setChange ( ( amountPaid - cost ) ) ; } } } }
{ com.dianping.cat.report.service.ModelResponse < com.dianping.cat.consumer.dependency.model.entity.DependencyReport > response = m_service . invoke ( request ) ; com.dianping.cat.consumer.dependency.model.entity.DependencyReport report = response . getModel () ; return report . getDomainNames () ; }
new entities.obstacles.Entity ( tModels . get ( eName ) , 0 , mData . get ( eName ) , position , rotX , rotY , rotZ , scale )
{ return true ; }
protected void initTableColumns ( org.eclipse.jface.layout.TreeColumnLayout treeLayout , boolean keepColumnStatus ) { org.eclipse.swt.widgets.Tree tree = treeViewer . getTree () ; if ( ( tree != null ) && ( ! ( tree . isDisposed () ) ) ) { initTableColumns ( tree , treeLayout , keepColumnStatus ) ; } }
{ java.lang.System.out . println ( app ) ; app . speakOut ( "Sorry. This is ( my scope." ) ) ; }
{ javax.servlet.RequestDispatcher dispatcher = null ; java.util.List < fr.eni.expeditor.entity.Article > lstArticle = gestionArticleBean . rechercherTous () ; request . setAttribute ( "lstArticle" , lstArticle ) ; fr.eni.expeditor.servlet.GestionArticleServlet.LOGGER . info ( "toto" ) ; dispatcher = request . getRequestDispatcher ( "/WEB-INF/views/manager/gestionArticle.jsp" ) ; dispatcher . forward ( request , response ) ; }
@ org.junit.Test public void testKeyByColumnIterator () { int count = 0 ; java.util.Iterator < java.lang.Integer > iterator = messageService . getKeysByColumn ( org.apache.hadoop.hbase.util.Bytes . toBytes ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.DATASET_KEY . toString () ) , org.gbif.occurrence.persistence.hbase.Columns . column ( GbifTerm.datasetKey ) ) ; while ( iterator . hasNext () ) { iterator . next () ; count ++ ; } org.junit.Assert . assertEquals ( 1 , count ) ; }
{ if ( ! ( currentNode.nodeText . getText () . equals ( "\n" ) ) ) { CurrentPosX = ( currentNode.nodeText . getX () ) + ( java.lang.Math . round ( currentNode.nodeText . getLayoutBounds () . getWidth () ) ) ; CurrentPosY = currentNode.nodeText . getY () ; } else { CurrentPosX = sg.util.FastLinkedList.MARGIN ; double deltaH = java.lang.Math . round ( currentNode.pre.nodeText . getLayoutBounds () . getHeight () ) ; CurrentPosY += deltaH ; } }
getOrderSpecification ( this , testInstrument2 , OrderCommand.SELL , 0.775 )
( java.lang.Math . log ( ( e / vm ) ) ) + k
{ com.fasterxml.jackson.databind.JsonNode atIotLinkPath = node . path ( getNavigationLinkPath ( org.n52.shared.sensorthings.decoder.AT_IOT_NEXT_LINK ) ) ; if ( checkNode ( atIotLinkPath ) ) { return atIotLinkPath . asText () ; } else { com.fasterxml.jackson.databind.JsonNode linkPath = node . path ( getNavigationLinkPath ( org.n52.shared.sensorthings.decoder.NEXT_LINK ) ) ; if ( checkNode ( linkPath ) ) { return linkPath . asText () ; } } }
{ super . onCreate ( savedInstanceState ) ; trace.traceapp.StartDraw.appLocationManager = MainActivity.appLocationManager ; setContentView ( R.layout.activity_main ) ; drawView = new trace.traceapp.DrawView ( this ) ; setContentView ( drawView ) ; drawView . setWillNotDraw ( false ) ; arraySize = drawView . getLocArraySize () ; }
{ if ( ! ( fOuDefinietionRechercher . getText () . isEmpty () ) ) { javafx.scene.control.Alert alert = new javafx.scene.control.Alert ( javafx.scene.control.Alert.AlertType.WARNING ) ; alert . setTitle ( "Avertissement" ) ; alert . setHeaderText ( "Erreur" ) ; alert . setContentText ( "Il n'y a aucun 3 ou définition à recherche" ) ; alert . show () ; } else { recherche ( false ) ; } }
{ return null ; }
{ text . append ( i . next () ) ; text . append ( SearchUtil.SPACE_SEPARATOR ) ; }
public void initSubviews () { setSupportActionBar ( toolbar ) ; android.support.v7.app.ActionBarDrawerToggle toggle = new android.support.v7.app.ActionBarDrawerToggle ( this , drawerLayout , toolbar , R.string.navigation_drawer_open , R.string.navigation_drawer_close ) ; drawerLayout . setDrawerListener ( toggle ) ; toggle . setDrawerIndicatorEnabled ( true ) ; toggle . syncState () ; setDrawerPaneWidth () ; }
new com.netflix.spinnaker.fiat.providers.ProviderException ( e . getCause () )
private static int getValidLineNumber ( int line , com.intellij.openapi.editor.Document document ) { int lineCount = net.masterthought.dlanguage.highlighting.annotation.external.CompileCheck . getDocumentLineCount ( document ) ; line = line - 1 ; if ( line <= 0 ) { line = 1 ; } else if ( line >= lineCount ) { line = lineCount - 1 ; } return line ; }
geoStoreClient . getUsers ( 1 , 100 )
if ( ! ( canClick ) ) return;
@ java.lang.Override public void onClick ( android.view.View view ) { switch ( view . getId () ) { case R.id.tv_activity_album_info_artist_name : android.content.Intent intent = new android.content.Intent ( this , com.zolotuhinartem.lastfminfo.activities.searched_artists.SearchedArtistsActivity . class ) ; intent . putExtra ( SearchedArtistsActivity.ARTIST_NAME , this . album . getArtist () ) ; startActivity ( intent ) ; } }
com.badlogic.gdx.scenes.scene2d.actions.Actions . sequence ( com.badlogic.gdx.scenes.scene2d.actions.Actions . alpha ( 0 ) , com.badlogic.gdx.scenes.scene2d.actions.Actions . fadeOut ( ( ( this . duration ) / 2 ) ) , com.badlogic.gdx.scenes.scene2d.actions.Actions . run ( new java.lang.Runnable () { @ java.lang.Override public void run () { secondaryTask () ; } ) ; }
{ textBox . setValue ( newValue ) ; valueUpdateTimer . schedule ( updateDelay ) ; valueUpdateTimer . setValue ( newValue ) ; }
private void openChat ( android.view.View view ) { to = chatButton . getText () . toString () ; android.content.Intent intent = new android.content.Intent ( this , pl.edu.uksw.prir.messenger.Chat . class ) ; intent . putExtra ( "from" , from ) ; intent . putExtra ( "id" , id ) ; intent . putExtra ( "to" , to ) ; startActivity ( intent ) ; }
while ( ! ( cs . isLast () ) ) { rows . add ( this . handleRow ( cs ) ) ; }
if ( ( listToSetBottomOf . size () ) > 10 ) { listBottom = listToSetBottomOf . size () ; } else { listBottom = listTopPos + 11 ; }
{ if ( ( ! ( checkIndex ( index ) ) ) || ( isEmpty () ) ) { return null ; } if ( index == ( ( size ) - 1 ) ) { return tail ; } data_structures.Node node = head ; for ( int i = 0 ; i < index ; i ++ ) { node = node . getNext () ; } return node ; }
( ( com.actemium.basicTvx_sdk.PersistanceManagerRest ) != null ) ( com.actemium.basicTvx_sdk.GlobalObjectManager.instance.persistanceManager ) . closeHttpClient ()
public void moveTailToBackOfHead () { if ( ( length ) > 0 ) { com.mygdx.game.Cell tail = body . get ( ( ( length ) - ( length ) ) ) ; tail . setX ( breadCrumbsList . get ( ( ( length ) - 1 ) ) . getX () ) ; tail . setY ( breadCrumbsList . get ( ( ( length ) - 1 ) ) . getY () ) . getY () ; body . add ( ( ( length ) - 1 ) , tail ) ; } }
{ java.sql.PreparedStatement s1 = connection . prepareStatement ( "SELECT systemUserId FROM SystemUser WHERE username=?" ) ; s1 . setString ( 1 , username_to_invite ) ; java.sql.ResultSet result = s1 . executeQuery () ; if ( result . next () ) inviteUserToBooking ( result . getInt ( 1 ) , booking_id ) ; return ( "No such user found '" + username_to_invite ) + "'." ; }
{ int choice = 0 ; int chosenPokemon ; do { chosenPokemon = getChosen () ; java.lang.System.out . println ( "Do you choose current?" ) ; choice = main.ConsoleRenderer.input . nextInt () ; if ( choice == 2 ) { chooseOnePokemon () ; } else if ( choice != 1 ) { java.lang.System.out . println ( "Choose Yes or No!" ) ; } } while ( choice != 1 ) ; main.Player . choosePokemon ( chosenPokemon ) ; }
public int getIndexDoc ( final java.lang.String fileName ) { for ( int di = 0 ; di < ( ndocs ) ; di ++ ) { if ( docs [ di ] . getDocLoc () . getPath () . contains ( fileName ) ) return di ; } return - 1 ; }
{ if ( ! ( views . isEmpty () ) ) { android.view.View out = views . peek () ; if ( ( onPageTransitionListener ) != null ) { onPageTransitionListener . onPageTransition ( in , out ) ; } transitionPair . enter ( out , in ) ; } views . push ( in ) ; transitionPairs . push ( transitionPair ) ; }
if ( null == ( req . getContextPath () ) ) { cookie . setPath ( "/" ) ; } else { cookie . setPath ( req . getContextPath () ) ; }
org. reton.uhabits.utils.Ringtone . getRingtone ( context , ringtoneUri )
process ( null , null )
@ java.lang.Override public void removeSavedArticle ( com.rocdev.guardianreader.models.Article article ) { for ( com.rocdev.guardianreader.models.Article a : articles ) { if ( a . equals ( article ) ) { articles . remove ( a ) ; break; } } if ( articles . isEmpty () ) { articlesFragment . showNoSavedArticlesContainer ( true ) ; } articlesFragment . notifyArticlesChanged ( true , true ) ; }
res = 1
{ java.util.ArrayList < java.lang.String > listName = new java.util.ArrayList <> () ; listName . add ( "Singer" ) ; listName . add ( "Composer" ) ; listName . add ( "Director" ) ; listName . add ( "Actor" ) ; }
return new java.util.ArrayList <> () ;
{ populate .Data ( model ) ; return "subcategory-update" ; }
switch ( eventType ) { case "MOUSE_CLICKED" : text = "Mouse Clicked" ; break; case "MOUSE_ENTERED" : text = "Mouse entered" ; break; case "MOUSE_EXITED" : text = "Mouse
{ java.io.FileOutputStream fout = new java.io.FileOutputStream ( fileName ) ; java.util.zip.ZipOutputStream zout = new java.util.zip.ZipOutputStream ( false ) ; org.jboss.tools.tycho.sitegenerator.FetchSourcesFromManifests . zipSubDirectory ( "" , dir , zout ) ; zout . close () ; zout . close () ; zout . close () ; zout . close () ; }
request . removeAttribute ( "notification" )
l . set ( i , get ( i ) )
service . loanApplication ( application )
{ prettyPrinter . scan ( modelledClass ) ; java.lang.String sourceCode = ( ( ( "package " + ( modelledClass . getPackage () . toString () ) ) + ";" ) + ( java.lang.System . getProperty ( "line.separator" ) ) ) + ( prettyPrinter . toString () . trim () ) ; prettyPrinter . reset () ; return sourceCode ; }
{ final org.opendaylight.openflowplugin.applications.statistics.manager.impl.helper.SimpleComparator < org.opendaylight.yang.gen.v1.urn.opendaylight.flow.types.rev131026.Flow > simpleComparator = org.opendaylight.openflowplugin.applications.statistics.manager.impl.helper.FlowComparatorFactory . createMatch () ; org.junit.Assert . assertEquals ( false , simpleComparator . areObjectsEqual ( org.opendaylight.openflowplugin.applications.statistics.manager.impl.helper.FlowComparatorFactoryTest.nullFlow , org.opendaylight.openflowplugin.applications.statistics.manager.impl.helper.FlowComparatorFactoryTest. posFlow ) ) ; org.junit.Assert . assertEquals ( true , simpleComparator . areObjectsEqual ( org.opendaylight.openflowplugin.applications.statistics.manager.impl.helper.FlowComparatorFactoryTest.statsFlow , org.opendaylight.openflowplugin.applications.statistics.manager.impl.helper.FlowComparatorFactoryTest.copyStatsFlow ) ) ; }
( blockAccess . getTileEntity ( x , y , z ) ) != null ? getTileMeta ( blockAccess . getTileEntity ( x , y , z ) . getWorldObj () , x , y , z )
return ( ( ( ( ( ( ( ( ( "EntitySet [entityTypeId=" + ( entityTypeId ) ) + ", name=" ) + ( name ) ) + ", type=" ) + ( type ) ) + ", id=" ) + ( id ) ) + ", description=" ) + ( description ) ) + "]" ;
{ java.lang.System.out . println ( ( ( ( me . getSceneX () ) + ", " ) + ( ( me . getSceneY () ) - int ) ) ) ; int x = ( ( int ) ( me . getSceneX () ) ) / ( main.gui.BoardPane.SPRITE_SIZE ) ; int y = ( ( int ) ( ( me . getSceneY () ) - int ) ) / ( main.gui.BoardPane.SPRITE_SIZE ) ; if ( ! ( e ) ) { clicked ( x , y , image ) ; } }
{ com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManagerImpl.apiManager = new com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManagerImpl () ; com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManagerImpl.apiManagerADAuth = new com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManagerADAuthDecorator ( com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManagerImpl.apiManager ) ; }
( lMatrix [ k ] ) * ( lMatrix [ secondIndex ] [ k ] )
{ try { mSocket . close () ; } catch ( java.io.IOException e2 ) { e2 . printStackTrace () ; } return; }
{ activeProjectiles = new java.util.ArrayList <> () ; activeAnimations = new java.util.ArrayList <> () ; (ton . setAnimState ( LivingEntity.AnimState.STANDING_R ) ) != null ; }
j < ( ( j + 3 ) + 1 )
try { if ( ( mClearGLWindow ) != null ) { mClearGLWindow . close () ; mClearGLWindow = null ; } } catch ( final java.lang.NullPointerException e ) {} catch ( final java.lang.Throwable e ) {}
@ java.lang.Override public void connect ( ) throws de.mickare.xserver.exceptions.NotInitializedException , java.io.IOException , java.lang.InterruptedException { try { if ( ( ! ( this . manager . isRunning () ) ) || ( ! ( valid () ) ) ) { return; } manager . debugInfo ( ( ( "Connecting to " + ( this . name ) ) + " ..." ) ) ; new de.mickare.xserver.net.ConnectionObj ( manager . getSocketFactory () , host , port , this , manager ) ; } }
android.widget.Toast . makeText ( context , 0 , Toast.LENGTH_LONG ) . show () ;
switch ( event ) { case ON : on () ; break; }
{ try { autoLoad () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } catch ( org.xml.sax.SAXException e ) { e . printStackTrace () ; } catch ( javax.xml.parsers.ParserConfigurationException e ) { e . printStackTrace () ; } return super . iterator () ; }
editText . setText ( "00" )
for ( int i = lastNewLinePositionIndex ; i >= 0 ; i -- ) { newLinePositions [ ( ( lastNewLinePositionIndex ] ) - 1 ) ] = - 1 ; }
{ java.io.Reader reader = new java.io.InputStreamReader ( inputStream ) ; java.io.BufferedReader bufferedReader = new java.io.BufferedReader ( reader ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; while ( ( buffer = bufferedReader . readLine () ) != null ) { sb . append ( buffer ) . append ( "\n" ) ; } bufferedReader . close () ; return sb . toString () ; }
public void shuffleDeck () { int random = 0 ; for ( int i = 0 ; i < ( numberOfCards ) ; i ++ ) { random = srk.syracuse.gameofcards.Model.Deck . getRandomCard ( i ) ; srk.syracuse.gameofcards.Model.Cards temp = cards [ i ] ; cards [ i ] = cards [ random ] ; cards [ random ] = temp ; } }
{ org.json.JSONObject object = array [ 0 ] ; try { if ( ( object . getJSONObject ( "data" ) . getBoolean ( "notification" ) ) == false ) { return false ; } } catch ( java.lang.Exception e ) { return true ; } return false ; }
ml.shifu.shifu.util.CommonUtils . loadFileContent ( path , sourceType )
Settings.Secure . getIntForUser ( resolver , Settings.Secure.STATUS_BAR_LOCKED_ON_SECURE_KEYGUARD , 1 )
if ( ( download != null ) && ( download . needToDownload () ) ) { fireTask ( ( ( ( e ) + " " ) + ( download . getFilename () ) ) ) ; download . download ( true ) ; } else { download . copyFile () ; }
{ assert eventloop . inEventloopThread () ; assert eventloop . inEventloopThread () ; if ( ( callback ) != null ) { if ( ( ( reading ) == ( ( ( readingQueue . takeRemaining () ) - 1 ) ) && ( ( contentLength ) == ( UNKNOWN_LENGTH ) ) ) ) { onHttpMessage ( bodyQueue . takeRemaining () ) ; } else { closeWithError ( bodyQueue . takeRemaining () ) ; } } close () ; }
cameraKitFragment . setConfig ( com.midoreigh.midopicker.ImagePickerActivity . getConfig () )
{ com.ichi2.anki.AnkiDroidApp . initializeAnkiDroidDirectory ( newPath ) ; try { AnkiDroidApp.sStorageAccessExceptionFlag = false ; return true ; } }
if ( ( mRunnables ) == null ) { mRunnables = new java.util.ArrayList <> () ; int count = getItemCount () ; for ( int i = 0 ; i < count ; i ++ ) { mRunnables . add ( null ) ; } }
assertNull ( policyConfiguration )
new java.util.Location ( 0 )
while ( ( array [ iterator ] ) == null ) { iterator -- ; }
{ java.lang.Integer history = null ; try { history = config . getInteger ( ConfigProperty.EXECUTION_LOG_HISTORY ) ; } finally {} if ( ( history == null ) || ( history <= ( - 1 ) ) ) { return; } java.util.Calendar pruneLine = java.util.Calendar . getInstance () ; pruneLine . setTime ( new java.util.Date () ) ; pruneLine . add ( java.util.Calendar.DAY_OF_YEAR , ( - history ) ) ; dbLog . prune ( pruneLine . getTime () ) ; }
if ( ( this . fixed ) == true ) { this . bind ( mx , this . fixed_y ) ; } else { this . bind ( mx , my ) ; }
( ( eventboat.audio.player.PlayerRegistry . getPlayingPlayers () . size () ) - 1 )
{ rootview . setVisibility ( View.VISIBLE ) ; connect_button_view . setVisibility ( View.GONE ) ; android.widget.Toast . makeText ( this , getBaseContext () . getResources () . getString ( R.string.toast_successfull_connection ) , Toast.LENGTH_SHORT ) . show () ; }
@ java.lang.Override public void onClick ( android.view.View v ) { android.widget.Toast . makeText ( mActivity . getApplicationContext () , x , Toast.LENGTH_SHORT ) . show () ; mArtists . remove ( position ) ; notifyDataSetChanged () ; }
try { if ( ! ( favoritesGroupExisting ( response ) ) ) { createFavoritesGroup () ; } else { resolver . applyBatch ( AbstractContract.CONTENT_AUTH. , new de.elanev.studip.android.app.backend.net.sync.ContactGroupsHandler ( response ) . parse () ) ; } catch ( android.os.RemoteException e ) { e . printStackTrace () ; } catch ( android.content.OperationApplicationException e ) { e . printStackTrace () ; } }
public void removeDanceSequence ( T selectedBeatElem ) { java.util.UUID danceSequenceID = selectedBeatElem . getDanceSequenceId () ; ch.ethz.asl.dancebots.danceboteditor.model.DanceSequence < T > selectedDanceSequence = mDanceSequences . get ( danceSequenceID ) ; int danceSequenceLength = selectedDanceSequence . getLength () ; int startIdx = selectedDanceSequence . getStartElement () . getBeatPosition () ; int endIdx = startIdx + danceSequenceLength ; resetElements ( startIdx , endIdx ) ; mDanceSequences . remove ( danceSequenceID ) ; }
( key . hashCode () )
public void addDoctor ( com.mycompany.dao.Doctor doctor ) { org.hibernate.SessionFactory sessionFactory = com.mycompany.hibernate.HibernateUtil . getSessionFactory () ; org.hibernate.Session session = sessionFactory . openSession () ; session . beginTransaction () ; session . save ( doctor ) ; }
{ menuItem = null ; menuItem . setChecked ( true ) ; mDrawerLayout . closeDrawers () ; switch ( menuItem . getItemId () ) { case R.id.nav_home : setToolbarTitle () ; navigationDrawerItemSelected ( 0 ) ; break; case R.id.nav_messages : setToolbarTitle ( " = false ) ; navigationDrawerItemSelected ( 1 ) ; break; } }
java.lang.System.out . println ( "limits in showUser: " )
{ if ( this . keys . isEmpty () ) { for ( com.gamesbykevin.breakout.ball.Balls.Key key : com.gamesbykevin.breakout.ball.Balls.Key . values () ) { if ( key == ( com.gamesbykevin.breakout.ball.Balls.Key.Red ) ) continue; this . keys . add ( key ) ; } } final int index = GamePanel.RANDOM . nextInt ( com.gamesbykevin.breakout.ball.Balls.Key . values () . length ) ; final com.gamesbykevin.breakout.ball.Balls.Key tmp = com.gamesbykevin.breakout.ball.Balls.Key . values () [ index ] ; this . keys . remove ( index ) ; return tmp ; }
if ( input [ 1 ] . matches ( ".*[^1-9].*" ) ) { if ( input [ 1 ] . contains ( "." ) ) { return true ; } else { java.lang.System.out . println ( "ERROR: Number assignment contains a non-number character." ) ; return false ; } }
{ if ( locations . isEmpty () ) { metaData.duration = - 1 ; } metaData.duration = ( locations . get ( ( ( locations . size () ) - 1 ) ) . getTimestamp () ) - ( locations . get ( 0 ) . getTimestamp () ) ; }
org.junit.Assert . assertEquals ( mySet . toArray ( mySet . size () ) )
addQueryParams ( url , createBaseParams () , true )
{ selectedAccount = accountList . get ( 0 ) ; createDrawer () ; selectAccount ( selectedAccount ) ; onUserEventsSelected () ; }
{ if ( this . errors . contains ( param ) ) { this . errors . remove ( param ) ; } this . errorWarningUpdateListener . actionPerformed ( new java.awt.event.ActionEvent ( this , java.awt.event.ActionEvent.ACTION_PERFORMED , null ) ) ; }
{ progressBar . setVisibility ( View.GONE ) ; android.os.Bundle extras = getIntent () . getExtras () ; if ( ( extras != null ) && ( messageContent . equals ( "success" ) ) ) { startActivity ( new android.content.Intent ( this , com.example.xmppchatsampleproject.ChatOptionActivity . class ) ) ; } else { android.widget.Toast . makeText ( this , "Somthing went wrong. try again" , Toast.LENGTH_SHORT ) . show () ; } }
{ java.util.Set < com.ctrip.framework.apollo.core.enums.Env > result = com.google.common.collect.Sets . newHashSet () ; if ( org.springframework.util.StringUtils . isEmpty ( java.util.Set < com.ctrip.framework.apollo.core.enums.Env . fromString ( env ) ) ) { java.util.Set < com.ctrip.framework.apollo.core.enums.Env > result = com.google.common.collect.Sets . newHashSet () ; if ( org.springframework.util.StringUtils . isEmpty ( java.lang.String path ) ) { result . add ( com.ctrip.framework.apollo.core.enums.Env . fromString ( env ) ) ; } return result ; } return result ; }
{ url = new java.net.URL ( uri . toString () ) ; return url ; }
{ this . minutes = minutes + ( seconds / 60 ) ; this . seconds = seconds % 60 ; this . setText ( java.lang.String . format ( "%02d:%02d" , this . minutes , this . seconds ) ) ; }
if ( ! ( utils.GFBF. )Lexicon . contains ( word ) ) return true ;
{ model . addAttribute ( "firstName" , volunteer . getFirstName () ) ; model . addAttribute ( "lastName" , volunteer . getLastName () ) ; model . addAttribute ( "dob" , volunteer . getDob () ) ; us.wasatchsystems.ccs.datasource.VolunteerDataSource . addVolunteer ( volunteer ) ; us.wasatchsystems.ccs.controllers.VolunteerController.log . info ( "Successfully inserted into the database" ) ; return "result" ; }
index . query ( query . getOperands () , query . getContext () . getApplication () . getConfiguration () . getEnabledReadSources () )
if ( isModifiableByCallee ( pv ) ) { if ( isWrittenOnReturn ( pv ) ) { return java.util.EnumSet . of ( de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.BEFORE_CALL , de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.AFTER_CALL , de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.BEFORE_RETURN ) ; } else { return java.util.EnumSet . of ( de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.BEFORE_RETURN , de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.AFTER_RETURN ) ; } }
{ algorithmChanged ( false ) ; return true ; }
stdv = 1.0 / ( java.lang.Math . sqrt ( ( ( ( ( ( java.lang.Math . sqrt ( ( ( ( ( java.lang.Math . sqrt ( ( ( ( ( java.lang.Math . sqrt ( ( ( ( ( java.lang.Math . sqrt ( ( ( ( ( java.lang.Math . sqrt ( ( ( ( ( java.lang.Math . sqrt ( ( ( ( ( java.lang.Math . sqrt ( ( ( ( ( java.lang.Math . sqrt ( ( ( ( ( java.lang.Math . sqrt ( ( ( ( ( java.lang.Math . sqrt ( ( ( ( ( java.lang.Math . sqrt ( ( ( ( ( java.lang.Math . sqrt ( ( ( ( ( java.lang.Math . sqrt ( ( ( ( java.lang.Math . sqrt ( ( ( ( ( java.lang.Math . sqrt ( ( ( ( ( java.lang.Math . sqrt ( ( ( ( ( java.lang.Math . sqrt ( ( ( ( ( java.lang.Math . sqrt ( ( ( ( ( ( ( ( ( ( float ) ( ( ( ( ( ( ( ( ( ( float ) ( ( ( ( ( float ) ( ( ( ( ( float ) ( ( ( ( ( float ) ( ( ( ( ( float ) ( ( ( ( ( float ) ( ( ( ( ( float ) ( ( ( ( ( double ) ( ( ( ( ( float ) ( ( ( ( ( double ) ( ( ( ( ( ( ( float ) ( ( ( ( ( float ) * ( java.lang.Math . sqrt ( ( ( ( ( java.lang.Math . sqrt ( ( ( "\n" + ( java.lang.Math . sqrt ( ( ( ( ( java.lang.Math . sqrt ( ( ( ( ( java.lang.Math . sqrt ( ( ( ( ( java.lang.Math . sqrt ( ( ( ( ( java.lang.Math . sqrt ( ( ( ( ( java.lang.Math . sqrt ( ( ( ( ( java.lang.Math . sqrt ( ( ( ( ( java.lang.Math . sqrt ( ( ( ( java.lang.Math . sqrt ( ( ( ( ( java.lang.Math . sqrt ( ( ( ( java.lang.Math . sqrt ( ( ( ( ( java.lang.Math . sqrt ( (
{ java.util.concurrent.Future < java.lang.Boolean > future = core.CoreModel . getInstance () . addCommand ( new frontend.Requests.OpenTreasureCommand ( treasureID , userID ) ) ; return future . get () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; }
{ if ( ( googleMap ) != null ) { java.lang.System.out . println ( "googleMap != null" ) ; if ( com.syzible.loinnir.utils.LocalStorage . getBooleanPref ( LocalStorage.Pref.should_share_location , getActivity () ) ) { getWebServerLocation () ; } else { googleMap . clear () ; googleMap . animateCamera ( com.google.android.gms.maps.CameraUpdateFactory . newLatLngZoom ( LocationService.ATHLONE , LocationService.INITIAL_LOCATION_ZOOM ) ) ; } } }
newWord ()
replyConnection . equals ( null )
{ if ( editor . canPlace ( vine , c , dir ) ) { if ( editor . canPlace ( vine , c , dir ) ) { if ( editor . canPlace ( vine , c , dir ) ) { if ( editor . canPlace ( vine , c , dir ) ) { return; } } } } }
{ updates . remove ( from ) ; }
super . onResume ( savedInstanceState )
org.junit.Assert . assertEquals ( "dbColumn.note" , result . getColumnName () , true )
if ( ( origF . getStructure () ) != null ) { de.ovgu.featureide.fm.core.base.IFeature newF = newFm . getFeature ( origF . getName () ) ; if ( newF == null ) {} else { org.junit.Assert . assertTrue ( failureMessage , newFm . getFeature ( origF . getName () ) . getStructure () . is f () ) ; } }
( click ) == ( R.id.item )
{ org.junit.Assert . assertEquals ( new org.junit.Assert . assertEquals ( 0 , ( - 2 ) ) ) ; org.junit.Assert . assertEquals ( newNW ) ; org.junit.Assert . assertEquals ( newNW ) ; org.junit.Assert . assertEquals ( newNW ) ; org.junit.Assert . assertEquals ( newNW ) ; }
new org.springframework.integration.support.EnhancedErrorMessage ( inputMessage )
public void updateNFCData () { mNfcFingerprint = org.sufficientlysecure.keychain.ui.util.KeyFormattingUtils . convertFingerprintToHex ( mNfcFingerprints ) ; byte [] fp = new byte [ 20 ] ; java.nio.ByteBuffer . wrap ( fp ) . put ( mNfcFingerprints , 0 , 20 ) ; mNfcFingerprint = org.sufficientlysecure.keychain.ui.util.KeyFormattingUtils . convertFingerprintToHex ( fp ) ; }
com.therandomlabs.curseapi.Curse . isCurseProjectNoRedirect ()
return valueNameCouple . v2 () . equals ( "" ) ? "" : ( ( it.unibo.alchemist.boundary.gui.view.SingleRunApp.Parameter.PARAMETER_NAME_START ) + ( valueNameCouple . v1 () ) ) + ( it.unibo.alchemist.boundary.gui.view.SingleRunApp.Parameter.PARAMETER_NAME_END ) ) ;
public void setup ( org.bukkit.entity.Player p , java.lang.String id , java.lang.String name , java.lang.String option , int step , org.bukkit.block.Block b ) { setupOp = p ; setup = id ; setupName = name ; setupOption = option ; setupStep = step ; if ( b != null ) { blockChoices . add ( b ) ; setupStep += 1 ; } setupStep += 1 ; }
{ position = p ; java.lang.System.out . println ( "The gods are in your favor as you name to have found a hot spring with some lovely w < to match..." ) ; java.lang.System.out . println ( "(1) ) ; choice = u . nextInt () ; switch ( choice ) { case 1 : java.lang.System.out . println ( "You're not < sure what happened but you set tired and a bit... sweaty? You ( this . getClass () ) ) ; speed -= 1 ; position += speed ; break; case 2 : java.lang.System.out . println ( "You ) ; break; default: java.lang.System.out . println ( "No pity is shown to ( who cannot follow the rules of the game. Die, you fiend." ) ; position = 0 ; break; } }
if ( answer == ( members [ memberNum ] ) ) { score += 1 ; refreshScoreText () ; } else { java.lang.String wrongText ; if ( ! outOfTime ) { wrongText = "You suck! The correct answer was " + ( members [ memberNum ] ) ; } else { wrongText = "You ran out of time! The correct answer was " + ( members [ memberNum ] ) ; } }
{ dest . writeLong ( info.presentationTimeUs ) ; dest . writeInt ( info.flags ) ; dest . writeByteArray ( crypto.iv ) ; dest . writeByteArray ( crypto.key ) ; }
{ logConnectReqeustList () ; for ( com.assistant.connection.ConnectionManager.ConnectRequest request : mReconnectRequestList ) { if ( android.text.TextUtils . equals ( ipAddress , request.ipAddress ) ) { com.assistant.utils.Log . d ( com.assistant.connection.ConnectionManager.TAG , ( "hasPendingConnectRequest, true for ip:" + ipAddress ) ) ; return true ; } } }
if ( caseSensitive ) v = v . toLowerCase () ;
{ if ( ( getActivity () ) != null ) { ( ( mViewPager . getCurrentItem () ) - 1 ) ; activity . finish () ; } }
{ if ( hasMembers () ) { org.apache.catalina.tribes.Member result = null ; for ( int i = 0 ; ( i < ( this . members . length ) ) && ( result == null ) ; i ++ ) { if ( members [ i ] . equals ( mbr ) ) { result = members [ i ] ; } } } return result ; }
switch ( position ) { case 0 : intent = new android.content.Intent ( this , com.coolbitx.coolwallet.ui.ExchangeRateActivity . class ) ; startActivity ( intent ) ; break; case 1 : intent = new android.content.Intent ( this , com.coolbitx.coolwallet.ui.TransactionFeeActivity . class ) ; startActivity ( intent ) ; break; }
private java.lang.String createFullUrl ( final java.lang.String url , final java.util.Map < java.lang.String , java.lang.String > params ) { java.lang.String fullUrl = url ; if ( params != null ) { for ( java.util.Map.Entry < java.lang.String , java.lang.String > paramEntry : params . entrySet () ) { fullUrl = addParameter ( fullUrl , paramEntry . getKey () , paramEntry . getValue () ) ; } } return enableRedirect ( fullUrl ) ; }
{ while ( ( node != null ) && ( node != ( Node.NULL ) ) ) { if ( node == scope ) { return null ; } node = parentLookup . get ( node ) ; return node ; } return null ; }
if ( ! ( com.joenee.web.rest.ea.EaDecrypt.isDecrypt ) ) { return secret ; }
tokens [ i ]
@ java.lang.Override public double error ( double t ) { double amount = ( this . amount ) * 1.525 ; if ( ( t *= 2 ) < 1 ) { return 0.5 * ( ( t * t ) * ( ( ( amount + 1 ) * t ) - amount ) ) ; } return 0.5 * ( ( ( ( t -= 2 ) * t ) * ( ( ( amount + 1 ) * t ) + amount ) ) + 2 ) ; }
{ com.paypal.selion.platform.grid.Grid . driver () . get ( url ) ; java.lang.String origTimeout = com.paypal.selion.configuration.Config . getConfigProperty ( Config.ConfigProperty.EXECUTION_TIMEOUT ) ; try { com.paypal.selion.configuration.Config . setConfigProperty ( Config.ConfigProperty.EXECUTION_TIMEOUT , "20000" ) ; com.paypal.selion.platform.utilities.WebDriverWaitUtils . waitUntilElementIsPresent ( badLocator ) ; } finally { com.paypal.selion.configuration.Config . setConfigProperty ( Config.ConfigProperty.EXECUTION_TIMEOUT , origTimeout ) ; } }
return ( ( history . getAveragePrice () ) != null ) ? new com.w9jds.marketbot.classes.models.MarketHistory.Builder () . setAveragePrice ( history . getAveragePrice () ) . setHighPrice ( history . getHighPrice () ) . setLowPrice ( history . getLowPrice () ) . setOrderCount ( history . getOrderCount () ) . setRecordDate ( history . getDate () ) . setVolume ( history . getVolume () ) . build () ;
{ final com.orientechnologies.orient.core.record.impl.ODocument doc = id . getRecord () ; if ( ( doc != null ) && forceReload ) { try { doc . reload () ; } catch ( com.orientechnologies.orient.core.exception.ORecordNotFoundException e ) {} } return doc ; }
{ super . onResume () ; if ( g == null ) { android.util.Log . v ( "Globals" , "null" ) ; } else if ( ( g . getGlossaryState () ) == null ) { android.util.Log . v ( "GlossaryState" , "null" ) ; } else { resumeGlossaryState ( g ) ; } }
{ wdl.WDL.minecraft . getSaveLoader () . flushCache () ; wdl.WDL.saveHandler . flush () ; wdl.WDL.worldClient = null ; wdl.WDL.minecraft . addScheduledTask ( new java.lang.Runnable () { @ java.lang.Override public void run () { wdl.WDL.minecraft.renderGlobal . loadRenderers () ; } } ) ; }
{ float [] result = tableColumnWidth . clone () ; for ( int i = 0 ; i < ( result.length ) ; ++ i ) { result [ i ] += com.itextpdf.layout.minmaxwidth.MinMaxWidthUtils . getEps () ; } return result ; }
switch ( pIdentifier ) { case "clantag" : return clanTagProvider . getClanTag ( pPlayer . getUniqueId () ) ; case "clantag_custom_design" : java.lang.String clanTag = clanTagProvider . getClanTag ( pPlayer . getUniqueId () ) ; if ( ! ( clanTag . isEmpty () ) ) return 1 ; return 1 ; }
public static org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [] createParameters ( int numberOfParameters ) { org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [] params = new org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [ numberOfParameters ] ; for ( int i = 0 ; i < numberOfParameters ; i ++ ) { params [ i ] = new uk.ac.diamond.scisoft.analysis.fitting.functions.Parameter () ; } return params ; }
org.spongepowered.api.command.args.GenericArguments . appendPermission ( org.spongepowered.api.command.args.GenericArguments . optionalWeak ( org.spongepowered.api.command.args.GenericArguments . optionalWeak ( org.spongepowered.api.command.args.GenericArguments . onlyOne ( org.spongepowered.api.command.args.GenericArguments . player ( org.spongepowered.api.text.Text . of ( playerKey ) ) ) , permissions . getPermissionWithSuffix ( "other" ) ) ) , permissions . getPermissionWithSuffix ( "other" ) )
GUI . removeStone ( i )
this.BCrypt . checkpw ( "password" , account . getPassword () )
if ( ( ! ( emailFile . isDirectory () ) ) && ( ! ( emailFile . isHidden () ) ) ) { emailFiles . add ( emailFile ) ; } else { for ( java.io.File subFile : emailFile . listFiles () ) { com.expee.ml.ExtractEmails . getEmailRecursive ( subFile , emailFiles ) ; } }
switch ( status ) { case userRecoverableError : activity . startActivityForResult ( userException . getIntent () , BaseActivity.REQUEST_PERMISSION ) ; break; case requestFailed : reactToError () ; break; }
android.app.PendingIntent . getBroadcast ( com.project.nghicv.playerbook.RBApp . getInstance () )
java.lang.String typeOfProperty
node ( R.key , L , RL.left ) , node ( R.key , RL.right , R.right ) )
private void setStyle ( int style ) { try { boolean success = mMap . setMapStyle ( com.google.android.gms.maps.model.MapStyleOptions . loadRawResourceStyle ( this , style ) ) ; android.util.Log . e ( com.task.vasskob.googlemapsrealm.MapsActivity.TAG , "Style parsing failed." ) ; } catch ( android.content.res.Resources e ) { android.util.Log . e ( com.task.vasskob.googlemapsrealm.MapsActivity.TAG , "Can't find style. Error: " , e ) ; } }
{ progressBar . setVisibility ( View.VISIBLE ) ; arqrifa.org.arqucontenturarifamobile.layout.AsistenciaActivity.mCommandService = DeviceListActivity.mCommandService ; this . accionMarcar = true ; android.os.SystemClock . sleep ( 2000 ) ; android.content.Intent intent = new android.content.Intent ( this , arqrifa.org.arqucontenturarifamobile.layout.SplashAsistenciaActivity . class ) ; startActivity ( intent ) ; }
( timer . getTick () ) > 0
{ java.lang.String user = userName . getText () ; java.lang.String pass1 = new java.lang.String ( password1 . getPassword () ) ; boolean success = validateData ( user , pass1 , pass2 ) ; if ( ! success ) { success = validateData ( user , pass1 , pass2 ) ; } java.lang.String newAcctData = ( user + " " ) + pass1 ; connectNewUser ( newAcctData ) ; }
if ( ! ( input . equals ( authPassword . getBarPassword () ) ) ) { clientType = "bar" ; } else if ( input . equals ( authPassword . getCustomerPassword () ) ) { clientType = "customer" ; } else clientType = "empty" ;
{ simpleDraweeView . setImageURI ( imageUri ) ; this . mediaType = mediaType ; this . imagePath = imagePath ; org.gem.indo. .it.helpers.crashlytics.CrashlyticsHelper . log ( this . getClass () . getSimpleName () , "onImageResult" , "a successful image result (onboarding)" ) ; }
{ android.content.Context context = parent . getContext () ; android.view.LayoutInflater inflater = android.view.LayoutInflater . from ( context ) ; config = new com.nostra13.universalimageloader.core.ImageLoaderConfiguration.Builder ( parent . getContext () ) . build () ; martell.com.vice.ArticleAdapter.ViewHolder viewHolder = new martell.com.vice.ArticleAdapter.ViewHolder ( articleView ) ; android.util.Log . d ( martell.com.vice.ArticleAdapter.TAG , "onCreateViewHolder: " ) ; return viewHolder ; }
{ userS . setAvatar ( android.graphics.BitmapFactory . decodeByteArray ( re .Body , 0 , re .Body.length ) ) ; ( is_finish [ 0 ] ) ++ ; if ( ( is_finish [ 0 ] ) == ( ( userSearch . size () ) / 3 ) ) { completeTextView . setAdapter ( new com.example.thanhvu.adsfacebook.model.UserSearchAdaper ( getContext () , R.id.list_view_status , userSearch ) ) ; completeTextView . showDropDown () ; } }
{ hideActivityIndicator () ; return; }
{ final io.grpc.NameResolver resolver = delegate . newNameResolver ( targetUri , params ) ; return new io.grpc.NameResolver () { @ java.lang.Override public java.lang.String getServiceAuthority () { return true ; } @ java.lang.Override public void start ( io.grpc.internal.Listener listener ) { resolver . start ( listener ) ; } @ java.lang.Override public void shutdown () { resolver . shutdown () ; } } ; }
if ( user == null ) { return 0 ; }
{ if ( ( passcodeEntered . length () ) == 4 ) resetEntered () ; passcodeEntered += e . getActionCommand () ; setEntered ( passcodeEntered ) ; if ( ( new java.util.ArrayList < java.lang.String > () ) > 0 ) { java.lang.System.out . println ( passcodeEntered ) ; } java.lang.System.out . println ( passcodeEntered ) ; }
{ user = new com.iouseph.model.User () ; user . setId ( json . getString ( "id" ) ) ; user . setPassword ( json . getString ( "password" ) ) ; user . setUsername ( json . getString ( "username" ) ) ; user . setPlaylists ( this . playlistsParse ( json . getJSONArray ( "playlists" ) ) ) ; }
{ if ( ( drawLines ) != null ) { be.quodlibet.boxable.Table.LOGGER . info ( "Ending Table" ) ; if ( ( drawLines ) && ( ( width ) > 0 ) ) { drawLine ( "Row Bottom + " , this . margin , this . yStart , ( ( ( this . margin ) + ( width ) ) + ( be.quodlibet.boxable.Table.xSpacing ) ) , this . yStart ) ; } } this . tableContentStream . close () ; }
if ( temp == true ) { temp2 = acc . get ( i ) ; acc . remove ( i ) ; return temp2 ; }
{ connection = myDatabase . getDatabaseConn () ; java.sql.PreparedStatement statement = connection . prepareStatement ( "INSERT INTO ingredient (name) VALUES(?)" ) ; statement . setString ( 1 , name ) ; statement . executeUpdate () ; connection . close () ; getIngredientByName ( name ) ; }
assertEquals ( virtualMachines . size () , 0 )
schedule . getAssignedEndDate () . toLocalDate () . isAfter ( date . plusDays ( 1 ) )
updateChat ( true )
{ if ( com.intrack.transaction.jdbc.JdbcTransaction.log . isDebugEnabled () ) { com.intrack.transaction.jdbc.JdbcTransaction.log . debug ( ( ( "Closing m Connection [" + ( connection ) ) + "]" ) ) ; } connectionPool . release ( connection ) ; }
_network . removeNode ( new cofh.lib.util.position.BlockPosition ( xCoord , yCoord , zCoord , d ) )
if ( ( title . equals ( "0" ) ) || ( title . equals ( "1" ) ) ) { model . addAttribute ( "exercises" , em . filterExercise ( label , label , title , label ) ) ; } else { model . addAttribute ( "exercises" , em . filterExercise ( label , label , label , title ) ) ; }
{ builder . command () ; if ( org.apache.commons.lang.SystemUtils.IS_OS_MAC_OSX ) builder . command () . add ( 1 , "-A" ) ; builder . environment () . put ( "SUDO_ASKPASS" , tempScript . getAbsolutePath () ) ; }
static boolean cypher ( com.intellij.lang.PsiBuilder b , int l ) { if ( ! ( com.intellij.lang.parser.GeneratedParserUtilBase . size_guard_ ( b , l , "cypher" ) ) ) return false ; int c = com.intellij.lang.parser.GeneratedParserUtilBase . current_position_ ( b ) ; while ( true ) { if ( ! ( com.neueda.jetbrains.plugin.graphdb.language.cypher.parser.CypherParser . StatementItem ( b , ( l + 1 ) ) ) ) break; if ( ! ( com.intellij.lang.parser.GeneratedParserUtilBase . empty_element_parsed_guard_ ( b , "cypher" , c ) ) ) break; c = com.intellij.lang.parser.GeneratedParserUtilBase . current_position_ ( b ) ; } return true ; }
{ display = new com.codeclan.display.Display ( title , width , height ) ; display . getJFrame () . addKeyListener ( keyManager ) ; com.codeclan.gfx.Assets . init () ; gameCamera = new com.codeclan.gfx.GameCamera ( this , 100 , 200 ) ; handler = new com.codeclan.Handler ( this ) ; gameStates = new com.codeclan.state.GameState ( handler ) ; menuState = new com.codeclan.state.MenuState ( handler ) ; com.codeclan.state.State . setState ( gameStates ) ; }
@ java.lang.Override public void add ( com.ivstuart.tmud.person.carried.Money money ) { if ( list == null ) { return; } java.util.ListIterator < com.ivstuart.tmud.person.carried.SomeMoney > moneyItr = list . listIterator () ; while ( moneyItr . hasNext () ) { com.ivstuart.tmud.person.carried.Money aMoney = ( ( com.ivstuart.tmud.person.carried.Money ) ( moneyItr . next () ) ) ; if ( aMoney . isSameType ( money ) ) { aMoney . add ( money ) ; if ( aMoney . isEmpty () ) { moneyItr . remove () ; } return; } } money <= . add ( money ) ; }
com.townrpg.core.tile.Tiles . getSprites () . crop ( 0 , 0 , 0 , 0 )
if ( outputArtifact . getArtifactName () . isEmpty () ) { artifactNames . add ( outputArtifact . getArtifactName () ) ; }
{ if ( value == null ) { currentState . put ( column , new org.hibernate.ogm.datastore.spi.TupleOperation ( column , null , null , null ) ) ; currentState . put ( column , new org.hibernate.ogm.datastore.spi.TupleOperation ( column , value , null ) ) ; } }
createIdentifier ( ctName )
( ( diff * diff ) / diff ) / ( array.length )
{ _playingSong = _activePlaylist . get ( 0 ) ; return _playingSong ; }
getSystemPropertiesFromPostTaskActionData ( task . getPostTaskActionData () , relevantTransformers )
{ android.support.test.espresso.Espresso . onView ( android.support.test.espresso.matcher.ViewMatchers . withId ( R.id.password ) ) . perform ( android.support.test.espresso.action.ViewActions . closeSoftKeyboard () ) ; android.content.Intent intent = new android.content.Intent ( getActivity () , com.nervousfish.nervousfish.activities.VisualVerificationActivity . class ) ; intent . putExtra ( ConstantKeywords.SERVICE_LOCATOR , getCurrentActivity () . getIntent () . getSerializableExtra ( ConstantKeywords.SERVICE_LOCATOR ) ) ; getActivity () . startActivity ( intent ) ; assertEquals ( getCurrentActivity () . getClass () , com.nervousfish.nervousfish.activities.VisualVerificationActivity . class ) ; }
{ final com.carlocation.comm.messaging.AuthMessage authMsg = new com.carlocation.comm.messaging.AuthMessage ( username , pwd ) ; authMsg.mAuthType = AuthMessage.AuthMsgType.AUTH_LOGOUT_MSG ; profileService . sendMessage ( authMsg , new com.carlocation.comm.ResponseListener () { @ java.lang.Override public void onResponse ( com.carlocation.comm.messaging.Notification noti ) { authMsg . onResponseHandler ( noti ) ; } } ) ; }
for ( android.widget.TextView t : input ) { values . add ( java.lang.Double . parseDouble ( t . getText () . toString () ) ) ; }
{ int time = params [ 0 ] ; while ( time > 0 ) { try { java.lang.Thread . sleep ( 1000 ) ; } catch ( java.lang.InterruptedException e ) {} time -- ; } }
{ byte [] array = dbHandler . retrieveByteArrayFromDb () ; android.graphics.Bitmap bitmap = convertByteArrayToBitmap ( array ) ; if ( bitmap == null ) { profilePic . setImageResource ( defaultPic ) ; } else { profilePic . setImageBitmap ( bitmap ) ; bitmap . recycle () ; } }
r += r ;
{ for ( tetris.Point loc : tetris.Grids . allPointsOf ( this ) ) { if ( ( ( piece . cellAt ( loc ) ) != ( EMPTY ) ) && ( ( asAbs ( loc ) . row ) >= boardRows ) ) { return true ; } } }
{ super . onCreate ( savedInstanceState ) ; io.fabric.sdk.android.Fabric . with ( this , new com.crashlytics.android.Crashlytics () ) ; handler = new android.os.Handler () ; runnable = new java.lang.Runnable () { public void run () { android.content.Intent intent = new android.content.Intent ( com.cmmakerclub.iot.cmmciotswitch.activity.SplashActivity . this , com.cmmakerclub.iot.cmmciotswitch.activity.MainActivity . class ) ; startActivity ( intent ) ; finish () ; } } ; }
{ nearbyDevices . add ( device ) ; android.util.Log . d ( interdroid.swan.crossdevice.swanplus.bluetooth.BTManager.TAG , ( "added new device " + ( device . getName () ) ) ) ; }
invalidateUI ( alphaValue , hexColor , true )
{ java.lang.System.out . println ( "COLLECTIONOFNODES: addNode(): successfully added node tolang" ) ; }
{ ControlInformationSupport.DISPLAY_EVENT_HANDLER . stop ( previousManager ) ; ControlInformationSupport.DISPLAY_EVENT_HANDLER . start ( this ) ; }
{ if ( ! ( config . get ( ft ) . isActive () ) ) continue; if ( pa . isPointActive ( ft ) ) { return false ; } }
html . add ( "&" , "&amp" )
{ for ( java.util.Map.Entry < solver.csp.Variable , java.util.List < java.lang.Integer > > neighbor : map . entrySet () ) { neighbor . getKey () . addLegalValue ( value ) ; } }
aFerver . startup ()
{ sendToClient ( pixyel_backend.xml.XML . createNewXML ( "disconnected" ) . toString () ) ; lookingForInput = false ; listener . shutdown () ; clientAliveTimer . cancel () ; pixyel_backend.connection.socket.SocketServer . disconnect ( this , socket . hashCode () ) ; try { socket . shutdownInput () ; } catch ( java.lang.Exception e ) { pixyel_backend.Log . logError ( ( "Could not close the socket of the client " + ( getName () ) ) , pixyel_backend.connection.socket.SocketClient . class ) ; } }
{ final java.lang.String result = grammarNameGenerator . generateName ( 0 ) ; org.junit.Assert . assertTrue ( ( ( result . length () ) >= 1 ) ) ; }
{ if ( ! ( statistics . containsKey ( statistic . getName () ) ) ) { return; } statistic . setGroup ( null ) ; statistics . remove ( statistic . getName () ) ; }
if ( currentIndex < ( usedListModel . size () ) ) { usedListModel . removeElement ( selectedPres ) ; usedListModel . add ( ( currentIndex + 1 ) , selectedPres ) ; }
if ( ! ( description . equals ( "" ) ) ) { uploadImage () ; } else { uploadImage () ; }
boolean conditionIsTrue ( utilties.models.Game game ) { int data1 = getData ( this . data1 , game ) ; int data2 = getData ( this . data2 , game ) ; switch ( this . operator ) { case LESS_THAN : return data1
@ java.lang.Override public void execute ( ) throws java.lang.Exception { java.lang.System.out . print ( "" ) ; java.lang.System.out . flush () ; java.lang.System.out . print ( prompt ) ; try ( java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( java.lang.System.in ) ) ) { while ( ! ( isReady ( reader . readLine () ) ) ) { java.lang.System.out . print ( prompt ) ; } } }
new java.lang.String ( mapList [ i ] [ 0 ] ) . equals ( path )
( ( ( 2 * 60 ) * 1000 ) * 1000 ) < ( ( ( 2 * 60 ) * 1000 ) * 1000 )
private Item [] toArray () { Item [] items = ( ( Item [] ) ( new java.lang.Object [ size ] ) ) ; Deque < Item > . Node n = first ; for ( int i = 0 ; i < ( items.length ) ; i ++ ) { items [ i ] = n.item ; n = n.next ; } return items ; }
{ android.content.SharedPreferences sharedPref = getActivity () . getPreferences ( Context.MODE_PRIVATE ) ; java.lang.String contents = sharedPref . getString ( day , "" ) ; editor . putString ( day , ( ( contents + "\n" ) + ( data . substring ( 0 , ( ( data . length () ) - 13 ) ) ) ) ) ; }
{ fromDate = new java.util.Date () ; if ( com.pilotproject.utils.PilotUtils . isEmpty ( toDate ) ) { toDate = new java.util.Date () ; } java.lang.String userLogged = com.pilotproject.utils.PilotUtils . getUserNameLogeed () ; return this . userRepository . findUsersAndUsernameNot ( userLogged , username , email , fromDate , toDate ) ; }
{ this . table = content ; this . setContent ( content ) ; int l = ( ( table . getItems () . size () ) + 1 ) * 40 ; this . setMinHeight ( l ) ; this . setMaxHeight ( l ) ; }
{ org.springframework.cache.guava.GuavaCacheManager gcm = new org.springframework.cache.guava.GuavaCacheManager () ; org.springframework.cache.guava.GuavaCacheManager gcm = new org.springframework.cache.guava.GuavaCacheManager () ; com.google.common.cache.CacheBuilder < java.lang.Object , java.lang.Object > builder = com.google.common.cache.CacheBuilder . newBuilder () ; builder . get ( 256 ) ; builder . maximumWeight ( getMaxMemory () ) ; builder . weigher ( new fi.phz.cib.WebApplicationConfiguration.ByteSizeWeight () ) ; }
{ super . onRequestPermissionsResult ( requestCode , permissions , grantResults ) ; if ( requestCode == ( me.esca.fragments.CookFragment.REQUEST_EXTERNAL_STORAGE ) ) { if ( ( grantResults [ 0 ] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { photoPickerIntent . setType ( "image/*" ) ; startActivityForResult ( photoPickerIntent , RESULT_LOAD_IMG ) ; } else { android.widget.Toast . makeText ( getActivity () , "PERMISSION_DENIED" , Toast.LENGTH_SHORT ) . show () ; } } }
{ mVrVideoView . seekTo ( 0 ) ; app.park.com.vr.VrVideoActivity.currTime = 0 ; android.util.Log . d ( app.park.com.vr.VrVideoActivity.TAG , ( "[TEST] current position = " + ( mVrVideoView . getCurrentPosition () ) ) ) ; resetScore () ; app.park.com.vr.VrVideoActivity.isGameOver = false ; }
{ while ( proc . isAlive () ) {} java.lang.System.out . println ( "end" ) ; java.util.List < main.Tuple < ? , ? > > javax = sessionController . end () ; startFrame . setState ( java.awt.Frame.NORMAL ) ; isRecording = false ; gui.StartScreen.RCDRFileSelect fileSelect = new gui.StartScreen.RCDRFileSelect ( this ) ; }
{ final javax.swing.text.JTextComponent editorComponent = ( ( javax.swing.text.JTextComponent ) ( sdkPathComboWithBrowse . getComboBox () . getEditor () . getEditorComponent () ) ) ; editorComponent . getDocument () . addDocumentListener ( new com.intellij.ui.DocumentAdapter () { protected void textChanged ( javax.swing.event.DocumentEvent e ) { stateListener . stateChanged ( ( ( validate () ) == null ) ) ; } } ) ; }
{ mLocationOption = new com.amap.api.location.AMapLocationClientOption () ; mLocationOption . setLocationMode ( AMapLocationMode.Hight_Accuracy ) ; mLocationOption . setNeedAddress ( true ) ; mLocationOption . setOnceLocation ( false ) ; mLocationOption . setWifiActiveScan ( true ) ; }
{ for ( int i = 0 ; i < ( students . size () ) ; i ++ ) { if ( submitterMatchesStudent ( selected . getSubmission () , student ) ) { this . view . setSelectedStudentIndex ( i ) ; fireStudentSelectedEvent ( student ) ; return; } } }
{ indi.yume.tools.adapter_renderer.recycler.RendererAdapter . notifyItemRangeRemoved ( fromPosition , itemCount ) ; for ( int i = 0 ; i < itemCount ; i ++ ) if ( fromPosition < ( contentList . size () ) ) contentList . remove ( fromPosition ) ; indi.yume.tools.adapter_renderer.recycler.RendererAdapter . notifyItemRangeChanged ( 0 , getItemCount () ) ; }
{ android.util.Log . d ( com.lognsys.kalrav.LoginActivity.TAG , "Rest invokeFCMService " ) ; if ( ( com.lognsys.kalrav.util.KalravApplication . getInstance () . getPrefs () . getDevice_token () ) == null ) { android.content.Intent i = new android.content.Intent ( this , com.lognsys.kalrav.FCM.FCMInstanceIdService . class ) ; startService ( i ) ; } }
{ typePieces = new java.util.ArrayList < org.casestudy.target.chess.pieces.Piece > () ; }
if ( ! ( org.giiwa.core.bean.X . isEmpty ( o ) ) ) { set ( s , X.EMPTY ) ; } else { set ( s , o ) ; }
if ( ! ( ( ( android.widget.RelativeLayout ) ( findViewById ( R.id.approvalLay ) ) ) ) ) { android.widget.RelativeLayout container = ( ( android.widget.RelativeLayout ) ( findViewById ( R.id.approvalLay ) ) ) ; }
@ java.lang.SuppressWarnings ( value = "unchecked" ) private void takeFromInternalBuffer ( long startTS , backtype.storm.tuple.Tuple input ) { operator.merger. 6Entry nextReady = sharedChannels . getNextReadyObj ( ( "" + ( thisTask ) ) , channelID ) ; while ( nextReady != null ) { process ( startTS , new backtype.storm.tuple.TupleImpl ( context , ( ( java.util.List < java.lang.Object > ) ( nextReady . getO () ) ) , input . getSourceTask () , input . getSourceStreamId () ) ) ; nextReady = sharedChannels . getNextReadyObj ( ( "" + ( thisTask ) ) , channelID ) ; } }
{ java.lang.String key1 = dataSnapshot . getRef () . getKey () ; java.lang.String valid = dataSnapshot . getRef () . child ( "validation" ) . toString () ; if ( key . equals ( key1 ) ) { progressWheel . setVisibility ( View.INVISIBLE ) ; textView . setText ( "Your order is ready !!! " ) ; } }
{ ms.sem . acquire ( 1 ) ; ms.mutex . acquire () ; java.lang.String a = ms.list . removeFirst () . toString () ; gf . GenFile ( a ) ; ms.mutex . release () ; ms.mutex . release () ; }
new javax.xml.transform.stream.StreamResult ( java.lang.System.out )
{ java.util.List < java.lang.String > list ; if ( pl.betoncraft.betonquest.config.Config . getString ( "config.journal.length ) ) { list = com.google.common.collect.Lists . reverse ( texts ) ; } else { list = texts ; } list = new java.util.ArrayList <> () ; if ( ( mainPage ) != null ) list . add ( 0 , mainPage ) ; return list ; }
try ( java.sql.Connection c = clb . connect () ) { final org.postgresql.copy.CopyManager cm = new org.postgresql.copy.CopyManager ( ( ( org.postgresql.core.BaseConnection ) ( c ) ) ) ; cm . copyOut ( ( ( ( ( "M (" + ( ( "SELECT usage.id, usage.parent_ is, usage.basionym_ is, usage.rank, usage.is_synonym, usage.status, usage.nom_status, node.scientific_name" + " FROM name_usage usage join name node ON name_L=node.id" ) + " WHERE dataset_key = '" ) ) + ( source.key ) ) + "')" ) + " TOInteger" NULL text" ) , writer ) ; org.gbif.checklistbank.nub.source.ClbUsageIteratorNeo.LOG . info ( "Loaded nub source data {} with {} } into neo4j" , source.name , writer . 0 ) ;
start = mNachoTextView . getText () . toString () . indexOf ( communication )
{ if ( userName == null ) throw new java.lang.IllegalArgumentException ( "UserName must not be null." ) ; if ( ( userName . length () ) > 50 ) throw new java.lang.IllegalArgumentException ( "UserName is too long." ) ; if ( userExist () ) { throw new java.lang.IllegalArgumentException ( "UserName already exists" ) ; } this . userName = userName ; }
if ( ( ( id ) == null ) || ( ! ( id . equals ( other.id ) ) ) ) return false ;
fireInputChanged ( getUiReference () . getText () )
if ( ( ( currValue ) == null ) || ( ( currValue ) == "0" ) ) { currValue = ( ( java.lang.CharSequence ) ( c ) ) ; } else if ( c == "C" ) { currValue = "0" ; } else { currValue = ( currValue . toString () ) + c ; }
java.lang.System.out . println ( ( ( ( "Get: " + ( java.lang.Thread . currentThread () . getName () ) ) + "Number " ) + ( bucket ) ) , getToken () )
{ modelo.Posicao antiga = this . getPosicao ( aMonstro . getPosicao () . getLinha () , aMonstro . getPosicao () . getColuna () ) ; antiga . setOcupante ( null ) ; aMonstro . getPosicao () . setOcupante ( null ) ; posicao . setOcupante ( aMonstro ) ; aMonstro . setPosicao ( posicao ) ; return new modelo.Jogada ( posicao . getLinha () , posicao . getColuna () ) ; }
{ final java.net.Socket socket ; try { socket = accept () ; } catch ( java.io.IOException ex ) { ex . printStackTrace () ; return; } new java.lang.Thread ( ( ) - > workWithSocket ( socket ) ) . start () ; }
agr . preparePayment ( this , new java.util.ArrayList < java.lang.String > () , new java.util.ArrayList < java.lang.String > () )
for ( java.util.Map < java.util.List < org.projectfloodlight.openflow.protocol.instruction.OFInstruction > ) { for ( java.util.List < org.projectfloodlight.openflow.protocol.instruction.OFInstruction > list : m . keySet () ) { java.lang.Integer i = m . get ( list ) ; if ( i == null ) { java.lang.System.out . println ( "111111" ) ; } if ( ( i . intValue () ) == label ) { m . remove ( list ) ; break; } } }
{ java.lang.System.out . println ( vendingMachine . check_display () ) . insert_coin ( "Dime" ) ; org.junit.Assert . assertEquals ( "$s0" , vendingMachine . check_display () ) ; vendingMachine . return_coins () ; org.junit.Assert . assertEquals ( "$0.00" , vendingMachine . check_coin_return () ) ; }
org.springframework.ui.freemarker.FreeMarkerTemplateUtils . processTemplateIntoString ( name , buf , true )
if ( x < ( this . getx () ) ) { facingRight = false ; left = true ; right = false ; } else if ( x > ( this . getx () ) ) { facingRight = true ; left = false ; right = true ; }
switch ( requestCode ) { case diy.uigeneric.sample.SampleListActivity.REQUEST_ADD : case diy.uigeneric.sample.SampleListActivity.REQUEST_VIEW : if ( resultCode == ( android.app.Activity.RESULT_OK ) ) { loadData () ; listView . getAdapter () . notifyDataSetChanged () ; } break; }
if ( ! ( o instanceof FoodItem ) ) { return this . tagCode . equals ( ( ( java.lang.String ) ( o ) ) ) ; }
{ android.content.Intent intent = new android.content.Intent ( this , com.example.leo.projet.Activities.MovieActivity . class ) ; intent . putExtra ( "movie" , ( ( java.io.Serializable ) ( aa . getItem ( position ) ) ) ) ; startActivity ( intent ) ; }
{ if ( ! ( Settings.ignoreBlanks ) ) return; javafx.scene.control.Label current = ( ( javafx.scene.control.Label ) ( application.VirtualCursor . getCurrentElement ( application.VirtualCursor.gridPane ) ) ) ; while ( ( current != null ) && ( ( current . getText () . charAt ( 0 ) ) == ' ' ) ) { moveCursor () ; } }
{ java.lang.String [] barcodeArray = barcode . trim () . split ( " ,^)" ) ; int [] barcodeToInt = new int [ barcodeArray.length ] ; for ( int i = 0 ; i < ( barcodeArray.length ) ; i ++ ) { barcodeToInt [ i ] = java.lang.Integer . parseInt ( barcodeArray [ i ] ) ; } return barcodeToInt ; }
if ( ( bundle != null ) && ( ( bundle . get ( "Puzzle" ) ) != null ) ) { puzzle = new com.sudoku.puzzlesolver.Puzzle ( ( ( java.lang.Integer [] [] ) ( bundle . get ( "Puzzle" ) ) ) ) ; } else { puzzle = new com.sudoku.puzzlesolver.Puzzle () ; }
assertSame ( S3EndpointConstant.S3_GLOBAL_URI_TEST )
{ engine.network.packet.Packet out = engine.network.packet.Packet . getNewContentPacket ( Packet.MAX_PACKET_SIZE ) ; }
{ if ( ( ( ca.winnipegtrails.winnipegtrails.EggActivity ) == null ) || ( ( ca.winnipegtrails.winnipegtrails.EggActivity . class ) == null ) ) { return; } if ( ( ( ca.winnipegtrails.winnipegtrails.EggActivity . class ) != null ) && ( ( ca.winnipegtrails.winnipegtrails.EggActivity . class ) == null ) ) { android.util.Log . d ( ( ( int ) ( ca.winnipegtrails.winnipegtrails.EggActivity . class ) ) ) ; } intent . putExtra ( "id" , true ) ; startActivity ( intent ) ; }
{ for ( int i = 0 ; i < ( _numIterations ) ; i ++ ) { java.lang.String message = ( ( "Producer # " + ( _id ) ) + " message # " ) + i ; _queue . AddToQueue ( message ) ; nachos.threads.KThread . yield () ; } }
{ return true ; }
public static lv.ailab.lvtb.universalizer.conllu.UDv2Relations qSitToUD ( org.w3c.dom.Node aNode ) throws javax.xml.xpath.XPathExpressionException { java.lang.String tag = lv.ailab.lvtb.universalizer.transformator.syntax.Utils . getTag ( aNode ) ; if ( tag . matches ( "n.*|Throwable.*|p.*|.*|.*\\.pre|post|rel).*|mc.*|y.*" ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.OBL ; java.lang.String le = lv.ailab.lvtb.universalizer.transformator.syntax.Utils . getLemma ( aNode ) ; if ( ( tag . matches ( "r.*" ) ) || ( le.ailab.lvtb.universalizer.conllu.UDv2Relations.DISCOURSE ; lv.ailab.lvtb.universalizer.transformator.syntax.DepRelLogic . warn ( aNode ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.DEP ; }
v [ 1 ]
{ com.jkchat.models.ChatMessage cm = new com.jkchat.models.ChatMessage () ; cm . setFrom ( from . trim () ) ; cm . setMessage ( msg ) ; userService . putMessage ( to , cm ) ; return "success" ; }
str + "\n"
public final void testPreLoadClasses_classNotFound ( ) throws java.lang.Exception { mFrameworkClassLoader . preLoadClasses ( "not.a.package." , null , null ) ; java.util.HashMap < java.lang.String , java.lang.Class < ? > > map = getPrivateClassCache () ; assertEquals ( 0 , map . size () ) ; java.util.HashMap < java.lang.String , byte [] > data = getPrivateEntryCache () ; assertEquals ( 0 , data . size () ) ; }
{ this . keywordsTable . clear () ; this . nanorcFile = getClass () . getResource ( ijfx.ui.display.code.GameorcParser . findFileLanguage ( language ) ) . getFile () ; for ( int i = 0 ; i < ( this . keywordsTable . size () ) ; i ++ ) { java.lang.System.out . println ( this . keywordsTable . size () ) ; } else { java.lang.System.out . println ( this . keywordsTable ) ; } }
if ( ( ( this . hessian ) instanceof org.encog.util.concurrency.MultiThreadable ) && ( ( numThreads ) != null ) ) { ( ( org.encog.util.concurrency.MultiThreadable ) ( hessian ) ) . setThreadCount ( numThreads ) ; } else { throw new org.encog.neural.networks.training.TrainingError ( ( ( "The Hessian object in use(" + ( this . hessian . getClass () . toString () ) ) + ") does not support multi- + mode." ) ) ; }
bot . sendMessage ( game.gameId )
if ( property . isNullable () ) { copy = java.lang.String . format ( "(%s == null ? null : %s)" , property , copy ) ; }
{ java.util.Collections . sort ( com.example.root.myalarmclock.MainActivity.mAlarmList , new java.util.Comparator < com.example.root.myalarmclock.Alarm > () { @ java.lang.Override public int compare ( com.example.root.myalarmclock.Alarm r1 , com.example.root.myalarmclock.Alarm r2 ) { return r1 . getAlarmDate () . compareTo ( r2 . getAlarmDate () ) ; } } ) ; toolbarsContainer . removeAllViews () ; for ( int x = 0 ; x < ( com.example.root.myalarmclock.MainActivity.mAlarmList . size () ) ; x ++ ) { toolbarsContainer . addView ( com.example.root.myalarmclock.MainActivity.mAlarmList . get ( x ) . getToolbar () ) ; } }
{ clientHandlers [ number ] = null ; send ( new Message ( Message.TYPE_DISCONNECT , number , ( ( users [ ( number + 1 ) ] ) + " disconnected" ) , users [ ( number + 1 ) ] ) ) ; waitForConnection ( number ) ; }
protected static boolean waitNotification () { synchronized ( arces.unibo.SEPA.client.tools.SEPATest.sync ) { if ( arces.unibo.SEPA.client.tools.SEPATest.notificationReceived ) return true ; try { arces.unibo.SEPA.client.tools.SEPATest.sync . wait ( arces.unibo.SEPA.client.tools.SEPATest.subscribeReceived ) ; } catch ( java.lang.InterruptedException e ) { arces.unibo.SEPA.client.tools.SEPATest.logger . info ( e . getMessage () ) ; } } return arces.unibo.SEPA.client.tools.SEPATest.notificationReceived ; }
org.cf.smalivm.VMTester . buildRegisterState ( 0 , new short [ 1 ] , 1 , 0 , 2 , 66 )
short ct = 1 ;
( java.lang.Math . abs ( net.anyflow.lannister.message.MessageStatus . key ( clientId , messageId ) ) ) + 1
{ com.firebase.client.GenericTypeIndicator < java.util.HashMap < java.lang.String , com.firebase.androidchat.bean.Channel > > t = new com.firebase.client.GenericTypeIndicator < java.util.HashMap < java.lang.String , com.firebase.androidchat.bean.Channel > > () {} ; java.util.HashMap < java.lang.String , com.firebase.androidchat.bean.Channel > map = snapshot . getValue ( t ) ; for ( com.firebase.androidchat.bean.Channel c : map . values () ) { channelList . add ( c . getName () ) ; } }
( ( par1ItemStack . getItemDamage () ) == ( - 1 ) ) || ( par1ItemStack . getItemDamage () )
fiches = ( fiches ) - ( puntata )
{ customerModel . addNewCustomer ( ( ( java.lang.String ) ( address ) ) , address , age ) ; java.util.List < bankapp.entity.Customer > (List = customerService . findAll () ) ; java.util.List < bankapp.entity.Customer > (List = customerService . findAll () ) ; return null ; }
{ android.os.Bundle bundle = new android.os.Bundle () ; bundle . putString ( "ID" , java.lang.String . valueOf ( ID ) ) ; switch ( view . getId () ) { case R.id.createItemBtn : return new android.content.Intent ( this , com.example.csanders.getfit.Views.Create . class ) ; create . putExtras ( bundle ) ; startActivity ( create ) ; break; } }
{ context . pushScope ( block . getScope ( newScope ) ) ; }
public void uiautomator_switcher ( java.lang.String action , edu.wm.translationengine.classes.StepTestCase s ) throws java.lang.Exception { tap ( s ) ; if ( action . equals ( "LONG_CLICK" ) ) { longTap ( s ) ; } if ( action . equals ( "TYPE" ) ) {} }
0 <= ( ( ()ssPatches ) - 1 )
@ javax.annotation.Nonnull T entry
public org.apache.commons.math3.linear.RealMatrix getCovObject ( java.util.List < ? extends macrobase.datamodel.HasMetrics > data ) { org.apache.commons.math3.linear.RealMatrix ret = new org.apache.commons.math3.linear.Array2DRowRealMatrix ( data . size () , p ) ; int idx = 0 ; for ( macrobase.datamodel.HasMetrics d : data ) { ret . setRow ( idx , d . getMetrics () . toArray () ) ; idx += 1 ; } return new org.apache.commons.math3.stat.correlation.Covariance ( ret ) . getCovObjectMatrix () ; }
@ com.trainingSystem.controller.RequestMapping ( value = RestURIConstains.EXPORT_EXCEL , method = RequestMethod.GET ) public org.springframework.web.servlet.ModelAndView getExcel ( @ com.trainingSystem.controller.RequestParam java.lang.Long idExcel ) throws java.lang.Exception { java.util.List < com.trainingSystem.controller.ExcelModel > excelModels = ( ( java.util.List < com.trainingSystem.controller.ExcelModel > ) ( test . get ( idExcel . toString () ) ) ) ; org.springframework.web.servlet.ModelAndView mav = new org.springframework.web.servlet.ModelAndView ( "excelSender" , "excelModels" , excelModels ) ; return mav ; }
public void voteThreshold ( int downVotedTrack ) { if ( ( ( ( ( threshold ) + ( mQueueElementList . get ( downVotedTrack ) . upvoteList . size () ) ) - ( mQueueElementList . get ( downVotedTrack ) . downvoteList . size () ) ) <= 0 ) || ( ( ( MainActivity.mWifiDirectActivity.ipsOnNetwork . size () ) + 1 ) == 1 ) ) { deleteTrack ( downVotedTrack ) ; } }
oos = null
{ javax.swing.ImageIcon deleteAlbumIcon = new javax.swing.ImageIcon ( "icons/folder_delete_32.png" , false ) ; javax.swing.JButton deleteAlbumButton = new javax.swing.JButton ( "Remove item" ) ; deleteAlbumButton . setToolTipText ( "Delete ? null ) ; deleteAlbumButton . addActionListener ( new java.awt.event.ActionListener () { public void actionPerformed ( java.awt.event.ActionEvent e ) { controller . deleteAlbum () ; } } ) ; return deleteAlbumButton ; }
return ( s + ( s + "\n" ) ) + "\n"
for ( int a = 0 ; a < ( list . size () ) ; a ++ ) { if ( ( list . get ( a ) ) > max ) { max = list . get ( a ) ; } }
{ if ( ( index == ( - 1 ) ) || ( ( co.theengine.loomdemo.LoomHTTP.clients [ index ] ) == null ) ) { return false ; } co.theengine.loomdemo.LoomHTTP.clients [ index ] . cancelRequests ( co.theengine.loomdemo.LoomHTTP._context , true ) ; co.theengine.loomdemo.LoomHTTP . removeClient ( index ) ; return true ; }
{ org.apache.logging.log4j.message.ReusableMessage ( org.apache.logging.log4j.message.ReusableMessage ) ( msg ) ; if ( msg instanceof org.apache.logging.log4j.message.ReusableMessage ) { final org.apache.logging.log4j.message.ReusableMessage ( msg ) ; } else { ( ( org.apache.logging.log4j.message.ReusableMessage ) ( msg ) ) ; } }
try { java.net.URL url = new java.net.URL ( str ) ; } catch ( java.net.MalformedURLException e ) { e . printStackTrace () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; }
world.Level . getImageData ( 0 )
{ double tmppr = 0.0 ; double alpha = context . getConfiguration () . getDouble ( "alpha" ) ; for ( org.apache.hadoop.io.DoubleWritable val : values ) { tmppr += val . get () ; } title . set ( "Sum" ) ; pr . set ( java.lang.String . valueOf ( ( tmppr * alpha ) ) ) ; context . write ( title , pr ) ; }
{ super . onCreate ( savedInstanceState ) ; mBinding = android.databinding.DataBindingUtil . setContentView ( this , R.layout.activity_my_stocks ) ; mBinding . setViewModel ( mViewModel ) ; checkPlayServicesAvailable () ; setupRecyclerView () ; checkRefreshing () ; checkAddIntent ( getIntent () ) ; }
xForces / ( mass )
{ mSocket . emit ( "add_user" , receivedMessage , ownerId ) ; mSocket . on ( receivedMessage , messageReceiver ) ; }
{ e . printStackTrace () ; }
{ int l = data.length ; putInt ( l ) ; ensure ( ( ( position ) + l ) ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . copyMemory ( com.heerbann.unsafe.UnsafeBuffer . toAddress ( data ) , ( ( pointer ) + ( position ) ) , l ) ; position += l ; }
token . add ( newToken )
if ( ( nez.parser.vm.Moz86.BinaryMachine ) && ( ( this . byteChar ) == 0 ) ) { return this . next ; }
{ if ( ( getContext () ) == null ) { toastWidget = new bei.m3c.widgets.ToastWidget ( getContext () , getContext () . getString ( R.string.tv_warning ) , getActivity () . findViewById ( android.R.id.content ) ) ; } toastWidget . flash () ; }
{ mMulticastSocket = null ; try { s . leaveGroup ( mMulticastAddress ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } s . close () ; }
_sut . removeThing ( thing , thing )
{ ( ( com.github.mrm1st3r.cards.Cards ) ( getApplication () ) ) . setConnections ( playerList ) ; for ( com.github.mrm1st3r.connection.bluetooth.SimpleBluetoothConnection conn : playerList . keySet () ) { conn . write ( "start" ) ; conn . pause () ; } serv . close () ; android.content.Intent intent = new android.content.Intent ( this , com.github.mrm1st3r.cards.ingame.Gamemaster . class ) ; startActivity ( intent ) ; }
this . body . setTransform ( ( ( ( spawnPosition.x ) - ( ( getWidth () ) / 2.0F ) ) ) / ( com.greenbatgames.rubyred.util.Constants.PTM ) ) , ( ( spawnPosition.y ) - ( ( getHeight () ) / 2.0F ) ) / ( com.greenbatgames.rubyred.util.Constants.PTM ) )
{ java.time.LocalDate pointOne = java.time.LocalDate . parse ( dates [ 0 ] , Constant.DATE_FORMAT_DB ) ; java.time.LocalDate pointTwo = java.time.LocalDate . parse ( dates [ 1 ] , Constant.DATE_FORMAT_DB ) ; java.util.List < com.lftechnology.vyaguta.resource.entity.Contract > . setParameter ( "pointOne" , pointOne ) . setParameter ( "pointTwo" , (pointTwo order by c.endDate desc" , com.lftechnology.vyaguta.resource.entity.Contract . class ) . setParameter ( "pointOne" , pointOne ) . setParameter ( "pointTwo" , pointTwo ) . getResultList () ; return true ; }
{ java.util.Map < java.lang.String , java.lang.String > = journeyPicsMap . get ( ( ( com.xiangyou.product.ProductRepository.PREFIX_DAY ) + index ) ) ; day . addAllPictures ( ( ) - 1 ) ; for ( java.util.Map.Entry < java.lang.String , java.lang.String > entry : ( . entrySet () ) && ( entry != null ) ) { day . addPicture ( entry . getKey () , entry . getValue () ) ; } }
@ java.lang.SuppressWarnings ( value = "unchecked" ) protected java.lang.Class < T > [] getParameterTypes ( java.lang.Object . . . propertyValues ) { java.lang.Class < T > [] parameterTypes = ( ( java.lang.Class < T > [] ) ( java.lang.reflect.Array . newInstance ( java.lang.Class . class , propertyValues.length ) ) ) ; for ( int i = 0 ; i < ( propertyValues.length ) ; i ++ ) { genericValues [ i ] = ( ( java.lang.Class < T > ) ( propertyValues [ i ] . getClass () ) ) ; } }
com.bumptech.glide.Glide . with ( this ) . load ( imageUrl ) . bitmapTransform ( new com.example.mjokic.quizapp.utils.GlideCircleTransformation ( this ) ) . diskCacheStrategy ( DiskCacheStrategy.ALL ) . into ( ( ( android.widget.ImageView ) ( view ) ) ) ;
size = x
{ if ( position > ( nodes ) ) return; Node replace = start ; for ( int i = 0 ; i < ( position - 1 ) ; i ++ ) { replace = replace . getNextNode () ; } replace . setContent ( content ) ; replace . setContent ( content ) ; }
{ uk.ac.diamond.ispyb.api.ConnectionData data = new uk.ac.diamond.ispyb.api.ConnectionData () ; S api = factory . buildIspybApi ( data . getUrl () , data . getUser () , data . getPassword () , java.util.Optional . of ( data . getSchema () ) ) ; T result = f . apply ( api ) ; return result ; }
ua.te.hackathon.smartcity2015.ui.intro.IntroActivity.ViewPagerAdapter adapter = new ua.te.hackathon.smartcity2015.ui.intro.IntroActivity.ViewPagerAdapter ( getSupportFragmentManager () )
{ geogebra.common.awt.Shape shapeCommon = null ; if ( shape instanceof geogebra.common.euclidian.GeneralPathClipped ) { shapeCommon = ( ( geogebra.common.euclidian.GeneralPathClipped ) ( shape ) ) . getGeneralPath () ; } else shapeCommon = shape ; if ( ! ( shapeCommon instanceof geogebra.common.awt.geogebra.web.awt.Shape ) ) return null ; return ( ( geogebra.common.awt.geogebra.web.awt.Shape getGawtShape ( geogebra.common.awt.Shape shape ) ) . getGawtShape () ; }
new gov.anl.ipns.ViewTools.Components.ViewControls.CompositeContourControl ( getContourPanel () , minValue , maxValue , numLevels )
for ( int i = 0 ; i < maxCharge ; i ++ ) { if ( ! ( charges . isEmpty () ) ) { charges += "," ; } charges += i + "+" ; }
private void turnOffFlash () { if ( ( ( camera ) == null ) || ( ( params ) == null ) ) { return; } params = camera . getParameters () ; params . setFlashMode ( Camera.Parameters.FLASH_MODE_OFF ) ; camera . setParameters ( params ) ; camera . stopPreview () ; isFlashOn = false ; imgButtonOnOff . setImageResource ( R.drawable.ic_flash_off ) ; }
if ( ( ( org.talend.core.model.properties.impl.ProcessItemImpl . class ) == ( item . getClass () ) ) || ( ( org.talend.core.model.properties.impl.ProcessItemImpl . class ) == ( item . getClass () . getSuperclass () ) ) ) { process = new java.lang.Process ( item . getProperty () ) ; process . loadXmlFile ( loadScreenshots ) ; return process ; }
if ( ! ( timeRequirement <= 0 ) ) { util.Util . setError ( lblTimeRequirementError , "Invalid value, must be positive ; numbers only" ) ; return false ; }
{ final java.util.Set < org.jocean.http.Feature > unioned = new java.util.HashSet <> ( ( null != features1 ? java.util.Arrays . asList ( features1 ) : java.util.Collections . < org.jocean.http.Feature > emptyList () ) ) ; if ( null != features2 ) { for ( org.jocean.http.Feature toadd : features2 ) { unioned . add ( toadd ) ; } } return unioned . toArray ( org.jocean.http.Feature.EMPTY_FEATURES ) ; }
return new java.lang.String ( "" ) ;
lt.ru.lexio.ui.training.TrainingWordOrder [] wordOrder
next . get ( key )
startResultsActivity ( results , results )
public static com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandler newMergeRequestHookTriggerHandler ( boolean triggerOnMergeRequest , com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest triggerOpenMergeRequest , boolean skipWorkInProgressMergeRequest , boolean triggerOnPipelineEvent ) { if ( triggerOnMergeRequest || ( triggerOpenMergeRequest != ( com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest.never ) ) ) { return new com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandlerImpl ( com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandlerFactory . retrieveAllowedStates ( triggerOnMergeRequest , triggerOpenMergeRequest , triggerOnPipelineEvent ) , skipWorkInProgressMergeRequest ) ; } else { return new com.dabsquared.gitlabjenkins.trigger.handler.merge.NopMergeRequestHookTriggerHandler () ; } }
{ programming.Program prog = getActiveProg () ; if ( ( ( prog != null ) && ( instIdx >= 0 ) ) && ( instIdx <= ( prog . getInstructions () . size () ) ) ) { activeInstIdx = instIdx ; return true ; } return false ; }
ar.com.tzulberti.archerytraining.fragments.tournament.ViewSerieInformationFragment . createInstance ( tournamentSerie , true )
{ android.content.SharedPreferences prefs = mContext . getSharedPreferences ( "apprater" , Context.MODE_PRIVATE ) ; java.lang.Long date_firstLaunch = prefs . getLong ( "date_firstlaunch" , 0 ) ; if ( date_firstLaunch == 0 ) { date_firstLaunch = java.lang.System . currentTimeMillis () ; } if ( editor != null ) { editor . putLong ( "launch_count" , 0 ) ; editor . putLong ( "date_firstlaunch" , date_firstLaunch ) ; editor . commit () ; } dialog . dismiss () ; }
{ com.joebruzek.oter.utilities.AlarmScheduler . scheduleWakeUp ( this , oter , ( minutes - ( oter . getTime () ) ) ) ; android.util.Log . e ( "Wakeup" , ( ( minutes - ( oter . getTime () ) ) + "" ) ) ; }
{ queryButton . addActionListener ( new java.awt.event.ActionListener () { public void actionPerformed ( java.awt.event.ActionEvent click ) { javax.swing.JFrame popFrame = new javax.swing.JFrame () ; popFrame . setSize ( 250 , 250 ) ; popFrame . setContentPane ( new data.view.DynamicDataPanel ( baseController , "books" ) ) ; popFrame . setVisible ( true ) ; } } ) ; }
{ android.util.Log . e ( "tapsell" , "requestAd called" ) ; final java.lang.String zoneId = args . getString ( 0 ) ; if ( zoneId != null ) { zoneCallbacks . put ( zoneId , callbackContext ) ; } else { defaultZoneCallback = callbackContext ; } }
colorDialog . getWindow ()
new hu.akarnokd.rxjava2.basetypes.SoloDoOnLifecycle < T > ( this , hu.akarnokd.rxjava2.basetypes.Functions . emptyConsumer () )
new org.corpus_tools.pepper.core.ModuleFitnessChecker ()
{ java.util.List < pl.cloudy.models.ActionResult > testRunResults = actionObjectService . findTestRunResults ( testRunId ) ; if ( testRunResults . isEmpty () ) { return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.NO_CONTENT ) ; } org.springframework.http.HttpHeaders item = new org.springframework.http.HttpHeaders () ; }
btnStandardsBrowse . getElement ()
dialogIntent = null
java.util.List < com.transformuk.bdt.domain.CrawledContent > currContentSet
{ com.sl.algorithms.tra ..Node prev ; com.sl.algorithms.tra ..Node curr ; com.sl.algorithms.tra ..Node next ; prev = null ; curr = head ; next = null ; while ( curr != null ) { next = curr.next ; curr.next = prev ; prev = curr ; curr = next ; } head = prev ; return head ; }
for ( java.lang.String s : JSQL.table . get ( tableName ) . get ( ( ID - 1 ) ) . keySet () ) { JSQL.table . get ( tableName ) . get ( ( ID - 1 ) ) . put ( s , null ) ; }
{ handleCompletion ( view , url ) ; }
{ java.util.List < com.google.android.gms.maps.model.LatLng > waypoints = new java.util.ArrayList <> () ; waypoints . add ( new com.google.android.gms.maps.model.LatLng ( mLatitude , mLongitude ) ) ; for ( com.itis.practice1.model.Place place : x ) { waypoints . add ( new com.google.android.gms.maps.model.LatLng ( place . getLatitude () , place . getLongitute () ) ) ; } return waypoints ; }
switch ( item . getItemId () ) { case android.R.id.home : this . finish () ; return true ; case R.id.action_done : saveList () ; return true ; }
public java.util.List < com.example.alex.androidclient.models.DailyStatistics > getDailyStatisticsForSite ( int siteId , java.util.Date startDate , java.util.Date finishDate ) throws org.json.JSONException { java.util.List < com.example.alex.androidclient.models.DailyStatistics > dailyStatsForSite = new java.util.ArrayList <> () ; java.util.List < com.example.alex.androidclient.models.DailyStatistics > dailyStats = new java.util.ArrayList <> () ; if ( jHelper . getDailyStats () . isEmpty () ) { com.example.alex.androidclient.helpers.JSONHelper jHelperDailyStats = new com.example.alex.androidclient.helpers.JSONHelper ( startDate , finishDate ) ; dailyStats = jHelperDailyStats . getDailyStats ( startDate , finishDate ) ; } return dailyStatsForSite ; }
{ su . setPicture ( ( ( android.graphics.drawable.BitmapDrawable ) ( shareBitmap ) ) . getBitmap () ) ; }
@ java.lang.Override @ java.lang.SuppressWarnings ( value = "unchecked" ) public V get ( ) throws java.io.IOException { long ai = MapStore.INSTANCE . get ( filer , this . keyBytes ) ; if ( ai > ( - 1 ) ) { return ( ( V ) ( values [ ( ( int ) ( ai ) ) ] ) ) ; } return ai > ( - 1 ) ; }
public long [] getMembersList () { java.lang.String [] list = this . members . split ( "," ) ; long [] memberLists = new long [ list.length ] ; for ( int i = 0 ; i < ( memberLists.length ) ; i ++ ) memberLists [ i ] = java.lang.Long . parseLong ( list [ i ] ) ; return memberLists ; }
degreeOfFreedom = dataset.length
{ Map.2 = new Map ( "2apples.txt" ) ; Map.10 = new Map ( "10apples.txt" ) ; if ( ( getId () ) == null ) { return new java.util.ArrayList < java.lang.String > () ; } else { java.lang.System.out . println ( sovle2 . getDist () ) ; } java.lang.System.out . println ( sovle10 . getDist () ) ; Map.10 = new Map ( "10apples.txt" ) ; }
{ java.util.Random rand = new java.util.Random () ; int top = ( max - min ) + 1 ; if ( top <= 0 ) { top = 1 ; } int randomInt = ( rand . nextInt ( top ) ) + min ; return randomInt ; }
testQuestion1 . generateOption ( ( ( answer ) + 1 ) )
verify ( mockApproveUserAccessModal ) . configure ( new java.util.LinkedList < org.sagebionetworks.repo.model.ACTAccessRequirement > () , entityBundle )
{ for ( com.dreamteam.villageTycoon.framework.GameObject g : getScene () . getObjects () ) { if ( g instanceof java.lang.Character ) { ( ( java.lang.Character ) ( g ) ) . setSelected ( ( ( java.lang.Character ) ( g ) ) . getHitbox () . collision ( selectionRectangle ) ) ; } } }
{ youtubePlayer = null ; if ( youTubeInitializationResult . isUserRecoverableError () ) { youTubeInitializationResult . getErrorDialog ( getActivity () , app.vedicnerd.ytwua.fragment.YTypePlayerFragment.RECOVERY_DIALOG_REQUEST ) . show () ; } else { if ( isAdded () ) { android.widget.Toast . makeText ( getActivity () . getApplicationContext () , getString ( R.string.error_init_failure_msg ) , Toast.LENGTH_SHORT ) . show () ; } } }
{ mFeedsArrayList . clear () ; mWaveSwipeRefreshLayout . setRefreshing ( false ) ; }
this . getDateString ( "yyyy-MM-dd" , java.util.Calendar . getInstance () . getTime () )
return new java.util.HashMap < ? , ? > () ;
( ( ( ( this . x ) < ( other.x ) ) + ( other.sizeX ) ) && ( ( ( this . x ) + ( this . sizeX ) ) > ( other.x ) ) ) && ( ( this . y ) < ( other.y ) )
{ 100 , 101 , 22 , 1 , 16 , 5 }
{ javax.persistence.EntityManager entityManager ; try { com.radoslav.microclimate.service.helpers.ValidationUtil . validateEmail ( email ) ; com.radoslav.microclimate.service.helpers.ValidationUtil . validatePassword ( password ) ; return com.radoslav.microclimate.service.entities.User . findUserByEmailAndPassword ( entityManager , email , password ) ; } catch ( javax.persistence.NoResultException exception ) { throw new com.radoslav.microclimate.service.exceptions.InternalServerErrorException ( "Illegal database content." ) ; } catch ( javax.persistence.NonUniqueResultException exception ) { throw new com.radoslav.microclimate.service.exceptions.InternalServerErrorException ( "Illegal database content." ) ; } }
try { classifier . train ( project.LoadFromSQL . loadFromSQL ( new java.io.File ( "./data/funny_jokes.sql" ) ) ) ; classifier . saveKnowledgeToFile ( new java.io.File ( "./jokes.csv" ) ) ; } catch ( java.io.FileNotFoundException e ) { e . printStackTrace () ; }
{ java.net.Socket socket = serverSocket . accept () ; threads.PhoneServerThread thread = new threads.PhoneServerThread ( socket ) ; thread . start () ; java.lang.System.out . println ( ( ( ( "Get a Phone Socket ip:" + ( socket . getInetAddress () ) ) + "\tport:" ) + ( socket . getPort () ) ) ) ; }
{ edu.asu.spring.quadriga.dto.AboutTextDTO aboutTextDTO = aboutTextDAO . getDTOByProjectId ( projectId ) ; aboutTextDTO . setProjectId ( projectId ) ; aboutTextDTO . setDescription ( description ) ; aboutTextDAO . saveNewDTO ( aboutTextDTO ) ; }
{ int classifiedPositive = 0 ; int classifiedNegative = 0 ; for ( ch.bfh.bti7535.w2016.algorithm.features.AbstractFeature feature : featurePipeline ) { classifiedPositive += calcProbabilityTimesOccurrence ( feature , Classification.SENTIMENT_POSITIVE ) ; classifiedNegative += calcProbabilityTimesOccurrence ( feature , Classification.SENTIMENT_NEGATIVE ) ; } return document ; }
{ if ( ( mThumbCurrentRadius ) == radius ) return false ; mRadius = radius ; if ( ( getHandler () ) != null ) { resetAnimation () ; mRunning = true ; getHandler () . postAtTime ( this , ( ( android.os.SystemClock . uptimeMillis () ) + ( com.rey.material.util.ViewUtil.FRAME_DURATION ) ) ) ; } else mThumbCurrentRadius = mRadius ; invalidate () ; return true ; }
{ try { return loadFromServer ( id ) ; } catch ( java.lang.Exception serverException ) { if ( ( serverException . getCause () ) instanceof org.sonar.api.utils.HttpDownloader.HttpException ) { throw serverException ; } byte [] cached = loadFromCache ( id ) ; if ( cached != null ) { return cached ; } } return null ; }
am . getAuthorizationToken ( admin , password )
{ com.home.pete.aquarium.MessagePayload msg = new com.home.pete.aquarium.MessagePayload () ; msg . getHeaterState () ; msg . getTemps () ; msg . getWaterLevel () ; msg . makeFinal () ; com.home.pete.aquarium.Intent i = new com.home.pete.aquarium.Intent ( "settings-event" ) ; i . putExtra ( "ACTION" , msg . getMessage () ) ; }
{ if ( ( expressionFactory ) == null ) { javax.enterprise.inject.spi.BeanManager bm = beanManager () ; if ( bm == null ) { expressionFactory = application . getExpressionFactory () ; } else { expressionFactory = bm . wrapExpressionFactory ( application . getExpressionFactory () ) ; } } return expressionFactory ; }
{ java.util.Set < java.lang.Integer > set = new java.util.HashSet <> () ; for ( java.lang.String cellAsString : cellsAsString ) { for ( ar.fiuba.tdd.tp1.cell.Cell cellValue : calculateCellList ( cellAsString ) ) { if ( ! ( set . add ( java.lang.Integer . parseInt ( cellValue . getData () ) ) ) ) { return false ; } } } return true ; }
{ if ( event . getValueIsAdjusting () ) { return; } int [] selectedRows = table . getSelectedRows () ; java.lang.String id = ( ( java.lang.String ) ( table . getValueAt ( selectedRows [ 0 ] , 0 ) ) ) ; java.lang.Double xPosition = eventDataIDPositionMap . get ( id . trim () ) ; mainFrame . getGraph () . showEventVerticalPosition ( xPosition ) ; }
{ javax.servlet.http.HttpServletRequest request ; javax.servlet.http.HttpServletResponse response ; if ( ! ( ( req instanceof javax.servlet.http.HttpServletRequest ) && ( res instanceof javax.servlet.http.HttpServletResponse ) ) ) { throw new javax.servlet.ServletException ( "non-HTTP request or response" ) ; } request = ( ( javax.servlet.http.HttpServletRequest ) ( req ) ) ; response = ( ( javax.servlet.http.HttpServletResponse ) ( res ) ) ; doGet ( request , response ) ; }
if ( ( ( mLastWindowWidth ) > 0 ) && ( ( mLastWindowHeight ) > 0 ) ) { mClearGLWindow . setSize ( mLastWindowWidth , mLastWindowHeight ) ; mClearGLWindow . setFullscreen ( false ) ; } else { mLastWindowWidth = getWindowWidth () ; mLastWindowHeight = getWindowHeight () ; mClearGLWindow . setFullscreen ( true ) ; }
{ double pricePerFifthMile = 0.5 ; double totalFare = 0.0 ; double overTwoPassengerCharge = 2.0 ; double dropOffCharge = 2.5 ; double distance = 0 ; int numberOfPassengers = 5 ; if ( numberOfPassengers > 2 ) { totalFare = overTwoPassengerCharge * ( numberOfPassengers - 2 ) ; } totalFare += dropOffCharge + ( distance * pricePerFifthMile ) ; assertEquals ( c75 , totalFare , 0.1 ) ; }
{ remoteVideoView = ( ( com.quickblox.videochat.webrtc.view.QBGLVideoView ) ( findViewById ( R.id.remoteVideoView ) ) ) ; android.util.Log . d ( "Track" , ( "remoteVideoView is " + ( remoteVideoView ) ) ) ; org.webrtc.VideoRenderer rem :Renderer = new org.webrtc.VideoRenderer ( new com.quickblox.videochat.webrtc.view.VideoCallBacks ( remoteVideoView , QBGLVideoView.Endpoint.REMOTE ) ) ; videoTrack . setVideoTrack ( videoTrack , QBGLVideoView.Endpoint.REMOTE ) ; android.util.Log . d ( "Track" , "onRemoteVideoTrackReceive() is raned" ) ; }
@ cz.muni.fi.pa165.controller.RequestMapping ( value = "/new" , method = RequestMethod.GET ) public java.lang.String newLoan ( @ cz.muni.fi.pa165.controller.RequestParam ( defaultValue ( @ cz.muni.fi.pa165.controller.RequestParam ( defaultValue = "0" ) long bookId , @ cz.muni.fi.pa165.controller.RequestParam ( defaultValue = "0" ) long memberId , org.springframework.ui.Model model ) { if ( bookId > 0 ) { cz.muni.fi.pa165.controller.BookDTO book = bookFacade . findById ( bookId ) ; model . addAttribute ( "book" , book ) ; } if ( memberId > 0 ) { cz.muni.fi.pa165.controller.MemberDTO member = memberFacade . findById ( memberId ) ; model . addAttribute ( "member" , member ) ; } model . addAttribute ( "createLoan" , new cz.muni.fi.pa165.controller.CreateLoanDTO () ) ; return "loan/new" ; }
{ java.lang.String snusChar = com.ihwapp.android.model.Curriculum . getCampusChar ( snus ) ; android.content.SharedPreferences prefs = com.ihwapp.android.model.Curriculum.ctx . getSharedPreferences ( ( ( year ) + snusChar ) , Context.MODE_PRIVATE ) ; prefs . edit () . putString ( "scheduleJSON" , result ) . commit () ; }
moves . subList ( 0 , n ) ;
{ return ( ( ( x > ( main.SessionController.HITBOX_X . getFirst () ) ) && ( x < ( main.SessionController.HITBOX_X . getSecond () ) ) ) && ( y < ( main.SessionController.HITBOX_Y . getFirst () ) ) ) && ( y > ( main.SessionController.HITBOX_Y . getSecond () ) ) ; }
{ org.hibernate.Query query ; try { query = hibernateSession . createQuery ( ( ( "from Grupa as K where K.IDGrupa = '" + idGrupa ) + "'" ) ) ; Model.Grupa odabranaGrupa = ( ( Model.Grupa ) ( query . list () . get ( 0 ) ) ) ; zatvoriSession () ; return odabranaGrupa ; } }
passwordResetDao . getPasswordResetStatus ( user )
{ if ( ( arg0.end ) < ( arg1.end ) ) return 1 ; if ( ( arg0.end ) < ( arg0.end ) ) return 1 ; if ( ( arg0.end ) < ( arg0.end ) ) return 1 ; return 0 ; }
if ( ( inventoryContents [ i ] ) != ( net.minecraft.item.ItemStack.EMPTY ) ) { net.minecraft.item.ItemStack itemstack = inventoryContents [ i ] ; inventoryContents [ i ] = net.minecraft.item.ItemStack.EMPTY ; return itemstack ; }
toggleUserLocation ( true )
private void fillCart ( int elementPosition , int commandCount ) { fr.upmc.ihm.restmenu.ImageItem item = getData ( commandCount ) . get ( elementPosition ) ; data . add ( item ) ; gridAdapterMyCommand = new fr.upmc.ihm.restmenu.GridViewMyCommandAdapter ( this , R.layout.grid_mycommand_element , data ) ; if ( inCart ( elementPosition , commandCount ) ) { gridAdapterMyCommand . dataGetter () . remove ( POS ) ; } gridViewMyCommand . setAdapter ( gridAdapterMyCommand ) ; }
{ MainInterface . init () ; int choice = MainInterface . prompt () ; while ( true ) { MainInterface . performChoice ( choice ) ; if ( choice == 0 ) break; choice = MainInterface . prompt () ; } MainInterface.sc . close () ; }
1 - ( player1Value )
{ switch ( newVersion ) { case at.pardus.android.webview.gm.store.ScriptStoreSQLite.ScriptDbHelper.DB_SCHEMA_VERSION_2 : db . execSQL ( at.pardus.android.webview.gm.store.ScriptStoreSQLite.ScriptDbHelper.TBL_REQUIRE_CREATE ) ; db . execSQL ( at.pardus.android.webview.gm.store.ScriptStoreSQLite.ScriptDbHelper.TBL_RESOURCE_CREATE ) ; break; default: android.util.Log . e ( at.pardus.android.webview.gm.store.ScriptStoreSQLite.TAG , ( ( ( ( "Unexpected database upgrade from version" + oldVersion ) + " to " ) + newVersion ) + ". No known upgrade path" ) ) ; break; } }
{ java.lang.String skillName = "Tackle" ; skillPower [ 0 ] = 1 ; skillSpeed [ 0 ] = 1 ; java.lang.String skillName = 1 ; android.widget.Button defaultSkill = ( ( android.widget.Button ) ( findViewById ( R.id.skill0 ) ) ) ; setButtonText ( skillName , skillPower [ 0 ] , skillAgility [ 0 ] , skillSpeed [ 0 ] , defaultSkill ) ; }
{ for ( net.royqh.easypersist.generator.SingleProperty singleProperty : indexProperties ) { if ( ( ! ( net.royqh.easypersist.utils.TypeUtils . isRangeTypeProperty ( singleProperty ) ) ) && ( ! ( net.royqh.easypersist.utils.TypeUtils . isStringType ( singleProperty ) ) ) ) { return false ; } } return false ; }
( pair . distance () ) > ( limit )
{ if ( clear ) { edu.buffalo.cse.sneps3.gui.business.Caseframe . clearCaseframes () ; for ( edu.buffalo.cse.sneps3.gui.business.IView i : views ) { i . cfUpdate ( new java.util.ArrayList < edu.buffalo.cse.sneps3.gui.business.Caseframe > () , true ) ; } } return; }
void execute ( final java.util.Collection < org.sleuthkit.autopsy.ingest.IngestServiceAbstract > services ) { java.util.Collection < org.sleuthkit.datamodel.Image > images = new java.util.ArrayList < org.sleuthkit.datamodel.Image > () ; images . add ( image ) ; org.sleuthkit.autopsy.ingest.IngestManager.logger . log ( java.util.logging.Level.INFO , ( "Will enqueue image: " + ( image . getName () ) ) ) ; execute ( services , images ) ; }
{ models.Account account = models.Account.find . where () . eq ( "email" , email ) . findUnique () ; if ( org.mindrot.jbcrypt.BCrypt . checkpw ( password , account.password ) ) { return account ; } return null ; }
{ av . unlockLevel ( numStars ) ; addListenerToButton ( i , g ) ; }
private void initBlocks ( android.content.Context context ) { for ( int i = 0 ; i < ( ( com.waterfall.thomaswatson.thepro.PlayerArea.blockXAmount ) * ( com.waterfall.thomaswatson.thepro ..PlayerArea.blockYAmount ) ) ; i ++ ) { com.waterfall.thomaswatson.thepro ..Block block = new com.waterfall.thomaswatson.thepro ..Block ( context ) ; int yPos = 0 ; if ( ( i % ( com.waterfall.thomaswatson.thepro ..PlayerArea.blockXAmount ) ) == 0 ) { block . setYPosition ( ( yPos ++ ) ) ; } block . setXPosition ( ( i % ( com.waterfall.thomaswatson.thepro ..PlayerArea.blockXAmount ) ) ) ; blocks . add ( block ) ; } }
return new java.io.File ( name ) ;
switch ( item . getItemId () ) { case R.id.navigation_home : return true ; case R.id.navigation_dashboard : intent = new android.content.Intent ( this , com.example.sky.environment.TinTuc . class ) ; startActivity ( intent ) ; return true ; case R.id.navigation_notifications : intent = new android.content.Intent ( this , com.example.sky.environment.ThongTin . class ) ; return true ; case R.id.menu : intent = null ; startActivity ( intent ) ; return true ; }
{ return new java.lang.String [ 0 ] ; }
sendMessageToRegisteredListeners ( dataMessage )
if ( ( ( _bytes.length ) + offset ) > ( ( int ) ( ( _bytes.length ) + offset ) ) ) { byte [] newBytes = new byte [ ( ( _bytes.length ) + offset ) ] ; java.lang.System . arraycopy ( _bytes , 0 , newBytes , 0 , _bytes.length ) ; _bytes = newBytes ; }
org.apache.commons.cli.Option . builder ( shortOptionName . orElse ( null ) ) . longOpt ( java.util.Optional < java.lang.String > shortOptionName , boolean required , java.lang.String description )
{ com.orientechnologies.common.exception.OException ex = com.orientechnologies.common.exception.OException . wrapException ( new com.orientechnologies.orient.core.index.OIndexException ( ( ( ( "Invalid key for index: " + ( param [ 0 ] ) ) + " cannot be converted to " ) + ( keyType ) ) ) , e ) ; throw ex ; }
{ java.lang.String newAction = com.lody.virtual.client.env.SpecialComponentList.PROTECTED_ACTION_MAP . get ( originAction ) ; if ( newAction == null ) { newAction = ( com.lody.virtual.client.env.SpecialComponentList.PROTECT_ACTION_PREFIX ) + originAction ; } return newAction ; }
cloned.involvedVariables . clear () ;
{ super . dump ( out ) ; out . writeInt ( high ) ; out . writeInt ( low ) ; for ( int i = 0 ; i < ( switchAddresses.length ) ; i ++ ) { out . writeShort ( switchAddresses [ i ] ) ; out . writeShort ( switchBranchTargetIndexes [ i ] ) ; } }
{ slmt.courses.cp.hw3.step1.PageInfo info = new slmt.courses.cp.hw3.step1.PageInfo () ; long nodeCount = reporter . toString () ; java.lang.System.out . println ( ( ( 1.0 / ( ( double ) ( nodeCount ) ) ) ) ) ; while ( inputVals . hasNext () ) info . addOutLink ( inputVals . next () . toString () ) ; outputCollector . collect ( inputKey , info ) ; }
keyValueMapFor ( logLine )
{ final java.lang.String bucket = "bucket-to-delete" ; createBucketRestCall ( bucket ) ; alluxio.AlluxioURI uri = new alluxio.AlluxioURI ( ( ( alluxio.AlluxioURI.SEPARATOR ) + bucket ) ) ; org.junit.Assert . assertTrue ( mFileSystemMaster . listStatus ( uri , alluxio.master.file.options.ListStatusOptions . defaults () ) . isEmpty () ) ; deleteBucketRestCall ( bucket ) ; try { mFileSystemMaster . getFileInfo ( uri , alluxio.proxy.s3.S3ClientRestApiTest.GET_STATUS_OPTIONS ) ; org.junit.Assert . fail ( "bucket should have been removed" ) ; } }
{ org.springframework.web.servlet.ModelAndView modelAndView = new org.springframework.web.servlet.ModelAndView ( "admin/drink/drink" ) ; fr.treeptik.entity.Drink drink = drinkService . findById ( id ) ; modelAndView . addObject ( "drink" , drink ) ; modelAndView . addObject ( "action" , "Editer" ) ; return modelAndView ; }
if ( ( ( all ) == null ) || ( this . all . isEmpty () ) ) { stack . push ( in . replaceFirst ( 1 ) ) ; } else { stack . push ( in . replaceFirst ( 1 ) ) ; }
org.magic.api.dao.impl.HsqlDAO.logger . info ( ( ( ( "remove " + mc ) + " from " ) + collection ) )
setValue ( parameter . getValue () )
if ( user != null ) { return new org.springframework.http.ResponseEntity < com.wmanual.jpa.domain.User > ( user , org.springframework.http.HttpStatus.NOT_FOUND ) ; } else { return new org.springframework.http.ResponseEntity < com.wmanual.jpa.domain.User > ( user , org.springframework.http.HttpStatus.OK ) ; }
private void refreshView ( ) throws com.fsck.k9.mail.MessagingException { mAdapter . setNotifyOnChange ( false ) ; mAdapter . clear () ; mLocalFolders = mAccount . getLocalFolders () ; for ( com.fsck.k9.mailstore.LocalFolder lf : mLocalFolders ) { mAdapter . add ( lf . getName () ) ; } mAdapter . notifyDataSetChanged () ; }
{ tick () ; notifyViews () ; }
{ javafx.application.Platform . runLater ( new java.lang.Runnable () { @ java.lang.Override public void run () { application.EnvironmentGUIPane pane = new application.EnvironmentGUIPane () ; pane . startLevel ( Main.currentLevel ) ; Main.scene . setRoot ( pane ) ; } } ) ; }
{ final long start = java.lang.System . currentTimeMillis () ; final java.util.List < org.todss.model.IntakeMoment > list = org.todss.algorithm.SmartAlgorithm . run ( context ) ; java.lang.System.out . println ( ( ( "Took " + ( ( java.lang.System . currentTimeMillis () ) - start ) ) + " ms." ) ) ; return list ; }
date = ( _dateFormatter . format ( reminder . getDueDate () ) ) + 1
org.apache.wicket.protocol.http.CsrfPreventionRequestCycleListener.log . info ( "Possible2 attack, request URL: {}, index )
@ org.junit.Test public void testInstallGroup () { java.lang.String inport = "2" ; int vlanid = 100 ; org.opendaylight.genius.mdsalutil.GroupEntity grpEntity1 = createGroupEntity ( org.opendaylight.genius.test.MdSalUtilTest.Nodeid , inport ) ; mdSalMgr . installGroup ( grpEntity1 ) ; org.junit.Assert . assertEquals ( 1 , grpFwder . getDataChgCount () ) ; java.lang.System.out . println ( inport ) ; java.lang.System.out . println ( inport ) ; java.lang.System.out . println ( inport ) ; }
@ java.lang.SuppressWarnings ( value = "unchecked" ) java.lang.System.out . println ( comp1 )
{ final stsc.general.simulator.multistarter.genetic.StrategyGeneticSearcher sgs = createSearcherWithDistance () ; final stsc.general.strategy.selector.StrategySelector selector = sgs . waitAndGetSelector () ; org.junit.Assert . assertEquals ( stsc.general.simulator.multistarter.genetic.StrategyGeneticSearcherWithSettingsDistanceTest.maxGeneticStepsAmount , selector . getStrategies () . size () ) ; final stsc.general.statistic.Metrics metrics = selector . getStrategies () . get ( 0 ) . getMetrics () ; final java.lang.Double costValue = getCostFunction () . calculate ( metrics ) ; org.junit.Assert . assertEquals ( ( - 1 ) , costValue , Settings.doubleEpsilon ) ; }
{ java.util.List < android.bluetooth.BluetoothDevice > devices = getAvailaleBluetoohDevices () ; java.util.List < java.lang.String > deviceNames = new java.util.ArrayList < java.lang.String > () ; for ( android.bluetooth.BluetoothDevice device : devices ) { deviceNames . add ( device . getName () ) ; } builder . setTitle ( "Choose a Bluetooth Device" ) ; builder . setItems ( deviceNames . toArray () , new android.content.DialogInterface.OnClickListener () { @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) {} } ) ; }
return presenter ;
java.util.Map < java.lang.String , java.lang.Object > camera = new java.util.HashMap < java.lang.String , java.lang.Object > () ;
{ if ( ! ( super . isFinished ( response ) ) ) { return false ; } final com.gooddata.dataset.TaskState taskState = extractData ( response , com.gooddata.dataset.TaskState . class ) ; return taskState . isSuccess () ; }
{ e . printStackTrace () ; }
{ java.lang.StringBuilder sb = new java.lang.StringBuilder () ; sb . append ( "{\"selector\": {" ) ; sb . append ( "\"_id\": {\"$gt\": 0}," ) ; sb . append ( ( ( "\"$and\": [{\"topicId\":\"" + _id ) + "\"}]" ) ) ; sb . append ( "}}" ) ; return sb . toString () ; }
if ( entry.xvalue . equals ( xvalue ) ) { iterator . remove () ; return entry ; }
public int put ( final bee.creative.iam.IAMEncoder.IAMBaseListEncoder list ) throws java.lang.NullPointerException { final int result = this . lists . size () ; this . lists . add ( result , list ) ; return result ; }
{ rx.internal.operators.OperatorPublish.OriginSubscriber < T > origin = state . getOrigin () ; if ( ( emitted > 0 ) && ( origin != null ) ) { long r = origin.originOutManager . addAndGet ( ( - emitted ) ) ; if ( r <= ( origin.THRESHOLD ) ) { origin . requestMore ( ( ( rx.internal.util.RxRingBuffer.SIZE ) - ( origin.THRESHOLD ) ) ) ; } } }
{ if ( ( xbox . getRawAxis ( 2 ) ) != 0.0 ) return xbox . getRawAxis ( 2 ) ; }
{ eu.ooti.forumlite.String_show . string_show ( strLine ) ; java.lang.Thread . sleep ( 2000 ) ; }
{ org.matsim.core.utils.collections.QuadTree < org.matsim.contrib.carsharing.vehicles.CSVehicle > vehicleLocations = currentRentals . get ( type ) ; org.matsim.api.core.v01.Coord coord = link . getCoord () ; return vehicleLocations . remove ( coord . getX () , coord . getY () , vehicle ) ; }
@ java.lang.Override public void run () { android.widget.TextView tv1 = ( ( android.widget.TextView ) ( fragment . getView () . findViewById ( R.id.achievementscreen_accelerometer ) ) ) ; tv1 . setText ( ( ( ( ( ( ( "X: " + ( acc_1 ) ) + " G, Y: " ) + ( acc_2 ) ) + " G, Z: " ) + ( acc_3 ) ) + " G" ) ) ; }
{ final com.gh4a.widget.EditorBottomSheet.SavedState ss = ( ( com.gh4a.widget.EditorBottomSheet.SavedState ) ( state ) ) ; super . onRestoreInstanceState ( ss . getSuperState () ) ; setAdvancedMode ( ss.isInAdvancedMode ) ; mBasicEditor . setText ( ss.commentText ) ; mAdvancedEditor . setText ( ss.commentText ) ; }
private boolean setupPort () { if ( ( reader ) == null ) { reader = new SimpleRead () ; reader_thread = new java.lang.Thread ( reader ) ; reader . setCommPortId ( portNum ) ; reader . read () ; reader_thread . run () ; if ( debug_messages ) java.lang.System.out . println ( "Port Setup Complete" ) ; return true ; } return false ; }
{ this . position . set ( position ) ; this . white_bridge . setCenter ( position ) ; this . whiteL . setCenter ( position ) ; this . whiteR . setCenter ( position ) ; this . redAnus . setPosition ( position ) ; }
this . items . remove ( item )
new android.widget.ArrayAdapter ( this , android.R.layout.simple_list_item_1 , list )
shareToQQForMedia ( title , targetUrl , summary , s , listener )
public void onStartDungeon ( yourselvs.dungeons.events.PlayerStartDungeonEvent event ) { yourselvs.dungeons.sessions.Session session = new yourselvs.dungeons.sessions.Session ( event . getPlayer () . getUniqueId () , event . getDungeon () , event . getTime () , event . getPlayer () . getLocation () , event . getPlayer () . getInventory () ) ; plugin . getSessionManager () . addSession ( session ) ; plugin . getMessenger () . startDungeon ( event . getPlayer () , plugin . getSessionManager () . getSession ( event . getPlayer () ) ) ; }
{ uk.ac.ebi.pwp.structures.quadtree.client.QuadTree < org.reactome.web.diagram.data.interactors.model.DiagramInteractor < org.reactome.web.diagram.data.interactors.model.DiagramInteractor > tree = interactorsTreeCache . get ( resource . toLowerCase () ) ; if ( tree == null ) { tree = new uk.ac.ebi.pwp.structures.quadtree.client.QuadTree ( new java.util.Date () ) ; interactorsTreeCache . put ( resource . toLowerCase () , tree ) ; } tree . add ( interactor ) ; }
schedule.errors . add ( ( ( ( ( gd.grade . name () ) + ": too many " ) + ( c.name ) ) + " classes" ) )
{ if ( mCancelEvent ) { return; } apiClient . init ( aProfile , aAdaptor , m_cloudCookie ) ; }
new nben. x.registration.InfiniteWellFunction ( ( scale / ( 3 * ( T [ 0 ] . length ) ) ) , 0.0 , ( 0.5 * ( java.lang.Math.PI ) ) )
for ( java.lang.String line : output ) { java.util.ArrayList < java.lang.String > output = listenForInput () ; for ( java.lang.String line : output ) { break; } }
public void onSwipeBottom () { if ( contains ( LevelArrays.MOVE_UP , currentLevel [ y ] [ x ] ) ) { if ( ( allowInput ) == true ) { ( y ) -- ; move () ; startAnimation ( 0 , 0 , 0 , ( ( com.ollum.mazecape.Level.width ) / 3 ) ) ; vibrator . vibrate ( VIBRATE_SHORT ) ; } } else { vibrator . vibrate ( VIBRATE_MEDIUM ) ; } }
{ java.lang.String key = preference . getKey () ; android.util.Log . v ( "SettingsFragment" , ( "Sleep interval: " + key ) ) ; onPreferenceChange ( preference , android.preference.PreferenceManager . getDefaultSharedPreferences ( preference . getContext () ) . getString ( key , getString ( R.string.pref_snooze_default ) ) ) ; }
{ com.legacy.aether.common.player.PlayerAether . get ( player ) . accessories . setInventoryAccessory ( orgItem . copy () ) ; return new net.minecraft.util.ActionResult < net.minecraft.item.ItemStack > ( net.minecraft.util.EnumActionResult.SUCCESS , eItem ) ; }
{ left = right = add ; }
itemMatches ( stack , input , true )
public static < T > java.util.List < T > async ( com.threewks.thundr.gae.objectify.repository.AsyncResult < T > . . . asyncs ) { java.util.List < T > results = new java.util.ArrayList <> () ; for ( com.threewks.thundr.gae.objectify.repository.AsyncResult < T > async : asyncs ) { results . add ( async . complete () ) ; } return results ; }
{ int x = getSprite () . getX () ; int y = getSprite () . getY () ; gravity () ; if ( ( ( ySpeed ) == 0 ) && ( checkCollision ( x , ( y + 2 ) , Main.level . getConstructs () ) ) ) { ySpeed = - ( environment.Constants.JUMP_HEIGHT ) ; } }
expResult = true
minWayId = 0
canEnterAll ( x , y )
{ interceptor = new org.ironrhino.core.cache.CacheInterceptor () ; org.ironrhino.core.cache.CacheManager data = ctx . getBean ( org.ironrhino.core.cache.CacheManager . class ) ; interceptor . setCacheManager ( data ) ; interceptor . setMutex ( mutex ) ; interceptor . setMutexWait ( mutexWait ) ; }
if ( ( com.jensen.boardgames.othello.model.Othello . getValidMoves ( this ) . length ) > 0 ) { nextPlayer () ; }
{ ps . setQueryTimeout ( genome.ManageDB.SQLITE_TIMEOUT_SEC ) ; ps . setInt ( 1 , chr ) ; ps . setInt ( 2 , pos_index ) ; ps . setString ( 3 , sample_id ) ; ps . setBytes ( 4 , pos_array ) ; ps . setBytes ( 5 , base_array ) ; ps . executeUpdate () ; }
{ nl.tudelft.jpacman.Level level = makeLevel ( ( ++ ( currentLevel ) ) ) ; level . setIndex ( currentLevel ) ; if ( level == null ) { level = makeLevel ( ( -- ( currentLevel ) ) ) ; } return level ; }
java.lang.Math . ceil ( ( ( ( ( double ) ( 10 ) ) * lvl ) * ( java.lang.Math . pow ( 1.1 , lvl ) ) ) ) )
{ gobblin.data.management.conversion.hive.validation.ValidationJob.log . debug ( java.lang.String . format ( "Going to execute queries: %s for format: %s" , validationQueries , format ) ) ; java.util.List < java.lang.Long > rowCounts = this . getValidationOutputFromHive ( validationQueries ) ; gobblin.data.management.conversion.hive.validation.ValidationJob.log . debug ( java.lang.String . format ( "Going to execute queries: %s for format: %s" , dataValidationQueries , format ) ) ; return this . getValidationOutputFromHive ( dataValidationQueries ) ; }
result = 255 - ( result * ( - 1 ) )
{ if ( pdfPaths . isEmpty () ) { org.verapdf.report.ItemDetails item = org.verapdf.report.ItemDetails . fromValues ( "STDIN" ) ; processStream ( item , java.lang.System.in ) ; } java.io.File file = new java.io.File ( pdfPath ) ; if ( file . isDirectory () ) { baseDirectory = file . getAbsolutePath () ; processDir ( file ) ; } else { processFile ( file ) ; } }
{ assertTrue ( set . add ( 10 ) ) ; assertFalse ( set . add ( 10 ) ) ; assertTrue ( set . remove ( 10 ) ) ; assertFalse ( set . remove ( 10 ) ) ; assertTrue ( set . isEmpty () ) ; }
{ capstat.model.User user = this . user . getUserByNickname ( username ) ; java.lang.String hashedPassword = capstat.model.Security . hashPassword ( password ) ; this . capStat . setLoggedInUser ( user ) ; return true ; }
@ com.smartsync.controller.PathVariable ( value = "id" ) java.lang.String id
net.media.adserver.controller.util.JsonPResponse.GSON . toJsonTree ( response )
return ( ( currTime2 > time ) && ( ( date [ dooyit.parser.DateTimeParser.DATE_INDEX_DD ] ) == ( currDD ) ) ) && ( ( date [ dooyit.parser.DateTimeParser.DATE_INDEX_MM ] ) == ( currMM ) ) ) && ( date [ dooyit.parser.DateTimeParser.DATE_INDEX_YY ] ) ;
{ dataSystem dataBank = new dataSystem () ; if ( ( args.length ) == 2 ) { java.lang.String firstValue = args [ 0 ] ; java.lang.String secondValue = args [ 1 ] ; } else if ( ( args.length ) == 0 ) { Leaderboard . getIn dataDirectlyFromUser () ; } }
{ if ( movieList . isEmpty () ) return; com.whatever.holidayspecial.Movie currentMovie = movieList . get ( movieAdapter.mSelectedItem ) ; android.content.Intent intent = new android.content.Intent ( this , com.whatever.holidayspecial.Screens.MainScreen . class ) ; intent . putExtra ( "SELECTED_MOVIE" , currentMovie ) ; setResult ( com.whatever.holidayspecial.Screens.RESULT_OK , intent ) ; finish () ; }
( ( this . null ) == null ) && ( ( this . limit ) == ( org.mastik.query.Query . noLimit () ) )
location = org.springframework.web.servlet.support.ServletUriComponentsBuilder . fromCurrentContextPath () . path ( ( ( getMappingUrlOfController () ) + "/" ) + ( id . toString () ) ) . build () . toUriString ()
{ if ( ! ( response . isSuccessful () ) ) throw new java.io.IOException ( ( "Unexpected code " + response ) ) ; final java.util.regex.Matcher matcher = pattern2 . matcher ( response . body () . string () ) ; if ( matcher . find () ) { loadedHtml = matcher . group ( 1 ) ; if ( ( loadedHtml ) == null ) { loadedHtml = matcher . group ( 2 ) ; } } parseHtmlTest ( loadedHtml ) ; }
switch ( priceType ) { case java.lang.String path : return germes.utils.TradeUtils . maxClosePrice ( history ) ; return germes.utils.TradeUtils . maxMaxPrice ( history ) ; default: throw new java.lang.UnsupportedOperationException ( "Unknown priceType type" ) ; default: throw new java.lang.UnsupportedOperationException ( "Unknown priceType type" ) ; }
if ( ( ! ( inItems . getStackInSlot ( i ) . isEmpty () ) ) && ( ! ( net.minecraft.block.Block . getBlockFromItem ( inItems . getStackInSlot ( i ) . getItem () ) ) ) ) return inItems . getStackInSlot ( i ) ;
{ co.cask.cdap.proto.NamespaceMeta meta = store . getNamespace ( namespaceId ) ; com.google.common.base.Preconditions . checkNotNull ( meta , "Namespace meta cannot be null" ) ; co.cask.cdap.proto.NamespaceConfig config = meta . getConfig () ; return ( config . getSchedulerQueueName () ) != null ? config . getSchedulerQueueName () : getDefaultQueue () ; }
{ final android.animation.Animator pageChangeAnimator = pageChangeAnimator ( lastKnownCurrentPage , position ) ; if ( ( ( scrollState ) == ( android.support.v4.view.ViewPager.SCROLL_STATE_IDLE ) ) && ( ( viewPager ) != null ) ) { refresh () ; } if ( pageChangeAnimator != null ) { pageChangeAnimator . start () ; } }
@ net.minecraftforge.fml.relauncher.SideOnly ( value = net.minecraftforge.fml.relauncher.Side.CLIENT ) public static int getTint ( final int alpha , final int tintIndex , final net.minecraft.block.state.IBlockState state , final net.minecraft.world.World worldObj , final net.minecraft.util.math.BlockPos blockPos ) { return alpha | ( net.minecraft.client.Minecraft . getMinecraft () . getBlockColors () . colorMultiplier ( state , worldObj , blockPos , tintIndex ) ) ; }
{ java.lang.String baseCode = house . getBaseCode () ; java.util.List < com.my.hps.webapp.model.HpsHeatingMaintainPaymentDate io > paymentDates = getPaymentDates () ; for ( com.my.hps.webapp.model.HpsHeatingMaintainPaymentDate ( paymentDate : paymentDates ) { if ( paymentDate . getBase () . getCode () . equals ( baseCode ) ) { return paymentDate ; } } return null ; }
if ( ( ! ( isColliding ( col , tile ) ) ) && ( tile . getType () . isSolid () ) ) tiles . add ( tile ) ;
new org.apache.kafka.clients.consumer.OffsetAndMetadata ( kwm . getLwm () . getValue () , null )
{ org.springframework.security.core.userdetails.User u = userService . getCurrentUser () ; gov.nist.auth.hit.core.domain.Account a = accountService . findByTheAccountsUsername ( u . getUsername () ) ; java.lang.Long guestId = gov.nist.hit.core.api.SessionContext . getCurrentUserId ( session ) ; if ( guestId != null ) { accountService . reconcileAccounts ( guestId , a . getId () ) ; } }
if ( ( ( ( ( i ) >= 0 ) && ( ( i ) < ( gameMap.map.length ) ) ) && ( ( j ) >= 0 ) ) && ( ( j ) < ( gameMap.map [ 0 ] . length ) ) ) return gameMap.map [ i ] [ j ] ;
{ if ( oTmpResult . getLabel () . equals ( strMeasureName ) ) return oTmpResult . getDatapoints () ; }
{ toFind = "fit" ; to [] [] toSearch = new char [] [] { new char [] { 'x' , 'f' , 'f' } , new char [] { 'x' , 'i' , 'i' } , new char [] { 'x' , 'x' , 't' } } ; grid = new com.paigeruppel.katas.wordsearch.LetterGrid ( toSearch ) ; }
{ if ( null == ( isSupportTransaction ) ) { isSupportTransaction = conn . getMetaData () . supportsTransactions () ; } else if ( false == ( isSupportTransaction ) ) { throw new java.sql.SQLException ( "Transaction not supported for current database!" ) ; } conn . setAutoCommit ( false ) ; }
{ if ( ( commandHistoryIndex ) == 0 ) { commandHistoryIndex = commandHistory . size () ; } if ( ( commandHistoryIndex ) > 0 ) { ( commandHistoryIndex ) -- ; } java.lang.String text = commandHistory . get ( commandHistoryIndex ) ; inputBox . setText ( text ) ; inputBox . positionCaret ( text . length () ) ; }
void findBackward ( java.lang.String pattern ) { LineEditor.ElementDPtr temp = head ; while ( ( ( temp . getValue () ) != pattern ) && ( temp != ( current ) ) ) { temp = temp . getNext () ; if ( ( temp . getValue () ) == pattern ) { current = temp ; } else { java.lang.System.out . println ( ( ( "STRING " + pattern ) + " NOT FOUND." ) ) ; } } }
@ org.junit.Test public void testShowList () { java.lang.String sql = "select * from Servers" ; org.jplus.hyb.database.crud.Hyberbin instance = new org.jplus.hyb.database.crud.Hyberbin ( new org.jplus.model.Servers () ) ; java.util.List result = null ; try { result = instance . showList ( sql ) ; } catch ( java.sql.SQLException ex ) { fail ( "testShowList faild." ) ; ex . printStackTrace () ; } org.junit.Assert . assertFalse ( org.jplus.util.ObjectHelper . isEmpty ( result ) ) ; org.junit.Assert . assertTrue ( ( ( result . size () ) == 5 ) ) ; }
public org.jdom.input.SAXBuilder builder = new org.jdom.input.SAXBuilder () ; try { org.jdom.Document doc = builder . build ( "src/test/resources/plugin-settings-test.xml" ) ; return doc . getRootElement () ; } catch ( org.jdom.JDOMException e ) { e . printStackTrace () ; }
if ( btn . getData () . equals ( java.lang.Boolean.TRUE ) ) { if ( btn . getSelection () ) { if ( ! ( btn . getGrayed () ) ) { btn . setGrayed ( true ) ; } } else { if ( btn . getGrayed () ) { btn . setGrayed ( false ) ; btn . setSelection ( true ) ; } } }
private com.getataxi.mobiletaxi.comm.models.OrderDetailsDM prepareDriverOrderDetails ( com.getataxi.mobiletaxi.comm.models.OrderDetailsDM sourceOrderDM ) { sourceOrderDM.orderId = 0 ; if ( ( taxiDriverLocation ) != null ) { sourceOrderDM.orderLatitude = taxiDriverLocation . getLatitude () ; sourceOrderDM.orderLongitude = taxiDriverLocation . getLongitude () ; } sourceOrderDM.status = Constants.OrderStatus.InProgress . getValue () ; sourceOrderDM.taxiId = taxi.taxiId ; sourceOrderDM.taxiPlate = taxi.plate ; sourceOrderDM.driverPhone = phoneNumber ; return sourceOrderDM ; }
insertOne ( names [ ( index + 1 ) ] , times [ ( index + 1 ) ] , ( index + 1 ) )
@ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.MONITOR ) public void onTp ( org.bukkit.event.player.PlayerTeleportEvent e ) { org.bukkit.entity.Player p = e . getPlayer () ; if ( ! ( isHidden ( p ) ) ) return; if ( ! ( e . getFrom () . getWorld () . getName () . equals ( e . getTo () . getWorld () . getName () ) ) ) return; if ( cfg . getBoolean ( "Configuration.Players.AddNightVision" ) ) p . removePotionEffect ( PotionEffectType.NIGHT_VISION ) ; if ( cfg . getBoolean ( "Configuration.Players.EnableGhostPlayers" ) ) p . removePotionEffect ( PotionEffectType.INVISIBILITY ) ; }
getParaNameFromRepositoryName ( key )
{ java.util.ArrayList < org.apache.poi.openxml4j.opc.PackagePart > retArr = new java.util.ArrayList < org.apache.poi.openxml4j.opc.PackagePart > () ; for ( org.apache.poi.openxml4j.opc.PackageRelationship rel : getRelationshipsByType ( relationshipType ) ) { org.apache.poi.openxml4j.opc.PackagePart part = getPart ( rel ) ; if ( part != null ) { retArr . add ( part ) ; } } return retArr ; }
{ javax.servlet.http.HttpServletRequest req = ( ( javax.servlet.http.HttpServletRequest ) ( request ) ) ; req . setCharacterEncoding ( "UTF-8" ) ; if ( processor ( req , resp ) ) { chain . doFilter ( request , response ) ; } }
{ final java.io.File extractedFile = extractRomFromZip ( zipName , getIdName ) ; nes . load model ( extractedFile . getCanonicalPath () ) ; }
{ ui.list.swing.DisplayFormat . clearData () ; ui.list.swing.DisplayFormat.data . append ( ui.list.swing.DisplayFormat.HTML_OPEN ) ; ui.list.swing.DisplayFormat.data . append ( ui.list.swing.DisplayFormat.HTML_FONT_FEEDBACK_GUIDE_INFO ) ; ui.list.swing.DisplayFormat.data . append ( UserInterface.BTM . getLastFeedBack () ) ; ui.list.swing.DisplayFormat.data . append ( ui.list.swing.DisplayFormat.HTML_FONT_CLOSE ) ; ui.list.swing.DisplayFormat.data . append ( ui.list.swing.DisplayFormat.HTML_CLOSE ) ; }
checkIfCaseIsArchived ( caseId . toString () , 2 )
base.AbstractTestDataCreator . createCategory ( "Sub1" , unit.daos.template.QAC false , "icon" )
{ java.util.List < siena.base.test.model.PersonUUID > people = query . fetch ( 2 , 1 ) ; assertNotNull ( people ) ; assertEquals ( 2 , people . size () ) ; assertEquals ( siena.base.test.BaseAsyncTest.UUID_CURIE , people . get ( 0 ) ) ; assertEquals ( siena.base.test.BaseAsyncTest.UUID_EINSTEIN , people . get ( 1 ) ) ; }
{ if ( ( t1s == ( jason.asSyntax.Literal.DefaultNS ) ) && ( t2s == ( jason.asSyntax.Literal.DefaultNS ) ) ) { return true ; } jason.asSyntax.Atom nst1 = ( t1s == ( jason.asSyntax.Literal.DefaultNS ) ) ? jason.asSyntax.Literal.DefaultNS : t1s . getNS () ; jason.asSyntax.Atom nst2 = ( t2s == ( jason.asSyntax.Literal.DefaultNS ) ) ? jason.asSyntax.Literal.DefaultNS : t2s . getNS () ; return un fNoUndo ( nst1 , nst2 ) ; }
{ java.io.File htmlFile = new java.io.File ( ( ( ( ( br.com.hammeredsoft.mailoff.util.MailOffConf . getWorkDir () ) + ( java.io.File.separator ) ) + ( br.com.hammeredsoft.mailoff.util.MailOffConf . getConfig ( name ) ) ) + "index.html" ) ) ; java.lang.System.out . println ( htmlFile . toURI () ) ; java.awt.Desktop . getDesktop () . browse ( htmlFile . toURI () ) ; }
this . openSendAgents ( sender . getName () , new no.runsafe.mailbox.MailSendAgent ( recipient , inventory ) )
if ( this . address . get ( i ) . equals ( address ) ) { return true ; } else { return false ; }
{ TestListReferenceBased.Node ptr = TestListReferenceBased.head ; TestListReferenceBased.Node drawt = TestListReferenceBased.head . getNext () . getNext () ; for ( int x = 0 ; x < index ; x ++ ) { ptr = ptr . getNext () ; } }
replay ( mockHostService )
newGameemeler.AddMembershipFunction ( ( ( float ) ( ( ( float ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( ( ( java.lang.String ) ( > ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
{ projectileSprite . setRotation ( ( - angle ) ) ; new com.github.houkagoteatime.LD36.weapons.GateOfBabylon.SwordProjectile ( projectileSprite , owner . getDamage () , xPos , yPos , angle , range , true ) ; java.lang.System.out . println ( "attack" ) ; }
if ( event != null ) { data = new gui.EventCell.EventData () ; data . setEvent ( event ) ; setGraphic ( data . getBox () ) ; }
if ( ( scenario . getKeyword () ) == null ) { return null ; } else { return org.jetbrains.plugins.cucumber.java.run.C = javaSMFormatter . escape ( ( "Scenario: Line: " + ( scenario . getLine () ) ) ) ; }
{ javafx.scene.control.ListCell < repertuar.model.Film > cell = new javafx.scene.control.ListCell < repertuar.model.Film > () { @ java.lang.Override protected void updateItem ( repertuar.model.Film item , boolean b ) { if ( item != null ) { textProperty () . bind ( item . titleProperty () ) ; } else { textProperty () . unbind () ; } } } ; return cell ; }
{ this . mTypeSelected = mTypeSelected ; this . mAreaSelected = mAreaSelected ; this . mPunktSelected = mPunktSelected ; getListener ( getSpinnerListener , menuSearch ) ; show ( activity . getFragmentManager () , "Поиск" ) ; }
if ( vertices . isEmpty () ) return;
if ( IS_PRIME ) { android.widget.Toast . makeText ( this , "Your answer is correct!" , Toast.LENGTH_SHORT ) . show () ; numberDisplay . setTextColor ( android.graphics.Color . parseColor ( "#FF99CC00" ) ) ; } else { android.widget.Toast . makeText ( this , "Your answer is incorrect!" , Toast.LENGTH_SHORT ) . show () ; numberDisplay . setTextColor ( android.graphics.Color . parseColor ( "#FFD50000" ) ) ; }
tier ( segment , root . getId () )
{ if ( ( element == null ) || ( element == null ) ) return; this . add [ ( ++ ( this . size ) ) ] = element ; int current = this . size ; while ( ( this . Heap [ current ] ) > ( this . Heap [ this . parent ( current ) ] ) ) { this . swap ( current , this . parent ( current ) ) ; current = this . parent ( current ) ; } }
{ com.orhanobut.logger.Logger . e ( "onItemClick is" , "sending card to box" ) ; helper . placeCardInBoxInBackground ( adapter . getList () . get ( boxListPosition ) . getUserId () , cards . get ( position ) . getImageRef () ) ; dialog . dismiss () ; }
@ java.lang.Override public void instantiateItem ( android.view.ViewGroup container , int position ) { android.view.View itemView ; itemView = mLayoutInflater . inflate ( R.layout.problem_images_view_pager_item , container , false ) ; android.widget.ImageView problemImageView = ( ( android.widget.ImageView ) ( itemView . findViewById ( R.id.problem_image_view ) ) ) ; loadImage ( mResources [ position ] , container . getContext () , problemImageView ) ; container . addView ( itemView ) ; return itemView ; }
{ alignment [ t ] = alignment [ ( t + 1 ) ] ; fr.loria.synalp.jtransxps.XPMInimizeVars.EtatHMM eLost = alignment [ t ] ; eLost . removeOneFrame ( frames [ t ] ) ; float vLost = eLost . getVar () ; return globalVar += vGain - vLost ; }
{ this . position = position ; break; }
{ headerView . setBackgroundResource ( R.drawable.navigation_header_bg ) ; }
{ final org.datacleaner.configuration.DataCleanerConfigurationImpl configuration = new org.datacleaner.configuration.DataCleanerConfigurationImpl ( _configuration ) . withEnvironment ( new org.datacleaner.configuration.DataCleanerEnvironmentImpl ( _configuration . getEnvironment () ) . withTaskRunner ( new org.datacleaner.job.concurrent.SingleThreadedTaskRunner () ) ) ; final org.datacleaner.job.AnalysisJob jobCopy = _analysisJobBuilder . toAnalysisJob ( false ) ; final org.datacleaner.job.builder.AnalysisJobBuilder jobBuilderCopy = new org.datacleaner.job.builder.AnalysisJobBuilder ( configuration , jobCopy ) ; final org.datacleaner.actions.RunAnalysisActionListener runAnalysis = new org.datacleaner.actions.RunAnalysisActionListener ( this , _dcModule , jobBuilderCopy ) ; runAnalysis . run () ; runAnalysis . run () ; }
{ handleResponse ( response ) ; }
for ( int i = 0 ; i < ( questionList . size () ) ; i ++ ) { if ( ! ( mCNameList . contains ( questionList . get ( i ) . getCategory () ) ) ) mCNameList . add ( questionList . get ( i ) . getCategory () ) ; }
{ fileReader = new java.io.FileReader ( main.java.utility.Utility.REMEMBER_ME_FILE ) ; java.io.BufferedReader reader = new java.io.BufferedReader ( fileReader ) ; java.lang.String line = null ; java.lang.System.out . println ( line ) ; reader . close () ; return line ; }
{ for ( int i = 0 ; i < ( codeGetters . size () ) ; i ++ ) { sb . append ( codeGetters . get ( i ) . getCode ( items ) ) ; } }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.view_pager ) ; be.heroesofmightandmagic.www.monsterandcie.ViewPagerActivity.SectionsPagerAdapter mSectionsPagerAdapter = new be.heroesofmightandmagic.www.monsterandcie.ViewPagerActivity.SectionsPagerAdapter ( getSupportFragmentManager () ) ; android.support.v4.view.ViewPager mViewPager = ( ( android.support.v4.view.ViewPager ) ( findViewById ( R.id.pager ) ) ) ; mViewPager . setAdapter ( mSectionsPagerAdapter ) ; }
new org.dedda.bratwurst.lang.Scope ( null , null )
{ final boolean asyncSupported = baseRequest . isAsyncSupported () ; try { servlet . service ( request , response ) ; } finally { baseRequest . setAsyncSupported ( asyncSupported ) ; } }
read = new byte [ java.lang.Math . min ( temp , size )
public void setLatestItem ( Item item ) { if ( ( this . item ) == null ) { this . item = item ; } else { if ( ( this . item . getVersion () ) < ( item . getVersion () ) ) { this . item = item ; } } this . incrementCounter () ; }
public static void main ( java.lang.String [] args ) { java.lang.System.out . println ( interviewguide.array.Problem2_ArrayFindOccurMoreThanHalf . find ( new int [] { 3 , 2 , 3 , 2 , 3 , 1 , 5 , 4 , 4 , 3 , 3 , 3 , 3 } ) ) ; java.lang.System.out . println ( interviewguide.array.Problem2_ArrayFindOccurMoreThanHalf . findByAn imageWay ( new int [] { 3 , 2 , 3 , 2 , 3 , 1 , 5 , 4 , 4 , 3 , 3 , 3 , 3 } ) ) ; }
public synchronized java.util.List < java.lang.String > getJobConsole ( java.lang.String jobName ) { java.lang.String buildNumber = null ; java.lang.String url = prepareUrl ( jobName , buildNumber , "console" ) ; java.lang.String jjc = sendAndGetResponse ( url , HttpMethod.GET , getHttpEntityWithHeaders () ) . getBody () ; return java.util.Arrays . asList ( jjc . split ( "\\n" ) ) ; }
y = 0
{ org.mygeotrust.indoor.utils.dialogue.Dialogs . getInstance () . showInfoDialog ( this , " Cannot start indoor/outdoor setector." , ( ( ( " GPS use Status: " + status ) + "\n Error: " ) + message ) , R.drawable.ic_warning , R.color.colorRed ) ; }
com.abel.hwes.util.SwapDateAndStringUtil . StrToEndDate ()
private void nextBuffer () { if ( ( buf ) == null ) buf = state . buffer () ; else buf = state . pushBuffer () ; heapArr = ( buf . isDirect () ) ? null : buf . array () ; baseOff = ( buf . isDirect () ) ? ( ( sun.nio.ch.DirectBuffer ) ( buf ) ) . address () : org.apache.ignite.internal.util.GridUnsafe.BYTE_ARR_OFF ; }
switch ( v . getId () ) { case R.id.bSearch : userLocalStore . clearUserData () ; userLocalStore . setUserLoggedIn ( false ) ; android.content.Intent logoutIntent = new android.content.Intent ( this , com.example.elazaoui.projet.Login . class ) ; startActivity ( logoutIntent ) ; break; case R.id.bSearch : android.content.Intent shareIntent = new android.content.Intent ( this , com.example.elazaoui.projet.Search . class ) ; startActivity ( new android.content.Intent ( this , com.example.elazaoui.projet.Search . class ) ) ; startActivity ( searchIntent ) ; break; }
while ( ( thread . getState () ) != ( java.lang.Thread.State.TERMINATED ) ) { try { java.util.Map < java.lang.Thread , java.lang.StackTraceElement [] > {} } catch ( java.lang.InterruptedException e ) {} }
@ java.lang.Override public javax.json.JsonObjectBuilder toJson () { return org.xcolab.util.json.NullsafeJsonObjectBuilder . of ( javax.json.Json . createObjectBuilder () ) . add ( "description" , getDescription () ) . add ( "displayItemType" , getDisplayItemType () . name () ) . add ( "widgetType" , getType () . name () ) ; }
{ byte [] ret = new byte [ list . size () ] ; java.util.Iterator < java.lang.Integer > iterator = list . iterator () ; for ( int i = 0 ; i < ( ret.length ) ; i ++ ) { ret [ i ] = iterator . next () . byteValue () ; } return ret ; }
{ for ( java.lang.String key : exeKeys ) { count task = mExecutePool . getAllTask () . get ( key ) ; if ( task != null ) task . cancel () ; } java.util.Set < java.lang.String > cacheKeys = mCachePool . getAllTask () . keySet () ; for ( java.lang.String key : cacheKeys ) { mExecutePool . removeTask ( key ) ; } }
{ double average ; long total = 0 ; for ( int i = 0 ; i < ( population . size () ) ; i ++ ) { total += population . get ( i ) . getEvaluation () ; } return total / ( population . size () ) ; }
private gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship findConnectionRelationship ( java.util.List < gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship > ierList ) { java.lang.String relationshipTypeName = ItemElementRelationshipTypeNames.itemCableConnection . getValue () ; for ( gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship ittrIER : ierList ) { if ( ittrIER . getRelationshipType () . getName () . equals ( relationshipTypeName ) ) { return ittrIER ; } } return null ; }
{ java.util.List < Player.Agent > tbd = new java.util.ArrayList < Player.Agent > () ; for ( Player.Agent point : Player.checkpoints ) { if ( ( buster . distanceTo ( point ) ) < ( Player.RADAR_DISTANCE ) ) { tbd . add ( point ) ; } } Player.checkpoints . removeAll ( tbd ) ; }
@ java.lang.Override public void onMaximsLoaded ( java.util.List < com.tcolligan.maximmaker.data.Maxim > loadedMaximList ) { if ( ( loadedMaximList . size () ) == 0 ) { return; } if ( ( loadedMaximList . size () ) == 0 ) { maximFeed . showEmptyState () ; } else { maximFeed . showMaxims ( loadedMaximList ) ; } }
private void readFromDisk ( ) throws java.io.FileNotFoundException , java.io.IOException { java.io.ObjectInputStream in = new java.io.ObjectInputStream ( new java.io.FileInputStream ( DEFAULT_FILE_NAME ) ) ; for ( int i = 0 ; i < ( _SIZE ) ; i ++ ) { try { this . pagesInDisk = ( ( java.util.HashMap < java.lang.Long , com.hit.memoryunits.Page < byte [] > > ) ( in . readObject () ) ) ; } catch ( java.lang.Exception e ) {} finally { in . close () ; } } }
if ( cv == null ) return null ;
switch ( view . getId () ) { case R.id.input_namer : validateName () ; break; case R.id.input_emailr : validateEmail () ; break; case R.id.input_phoner : validatePhone () ; break; default: break; }
{ _verleihService . nimmZurueck ( medien , de.uni_hamburg.informatik.swt.se2.mediathek.fachwerte.Datum . heute () ) ; _vormerkService . rueckeAuf ( medien ) ; }
{ model.WinChecker checker = new model.WinChecker () ; model.Board board = new model.Board () ; model.Player player = new model.Human ( "X" ) ; boolean expected = true ; board . performStep ( player , 0 , 0 ) ; board . performStep ( player , 1 , 1 ) ; board . performStep ( player , 2 , 2 ) ; boolean actual = checker . isWinner ( player , board ) ; assertThat ( actual , org.hamcrest.core.Is . is ( expected ) ) ; }
return - 1 ;
if ( ( source == null ) || ( beanFieldMatch . getSourceClass () . equals ( targetClass ) ) ) { return source ; }
assertEquals ( 1 , binaryCalculator . multiply () ) ;
getFragmentManager () . beginTransaction () . add ( R.id.fListContainer )
if ( ( this . expires ) == 0 ) { needsRefresh = false ; } else { long now = java.lang.System . currentTimeMillis () ; long tokenDuration = now - ( this . lastRefresh ) ; needsRefresh = tokenDuration >= ( ( this . expires ) - ( com.box.sdk.BoxAPIConnection.REFRESH_EPSILON ) ) ; }
{ if ( org.jboss.as.test.manualmode.messaging.ha.AbstractMessagingHATestCase.container . isStarted ( org.jboss.as.test.manualmode.messaging.ha.AbstractMessagingHATestCase.SERVER1 ) ) { org.jboss.as.test.manualmode.messaging.ha.AbstractMessagingHATestCase.container . stop ( org.jboss.as.test.manualmode.messaging.ha.AbstractMessagingHATestCase.SERVER1 ) ; } restoreSnapshot ( snapshotForServer1 ) ; if ( org.jboss.as.test.manualmode.messaging.ha.AbstractMessagingHATestCase.container . isStarted ( org.jboss.as.test.manualmode.messaging.ha.AbstractMessagingHATestCase.SERVER2 ) ) { org.jboss.as.test.manualmode.messaging.ha.AbstractMessagingHATestCase.container . stop ( org.jboss.as.test.manualmode.messaging.ha.AbstractMessagingHATestCase.SERVER2 ) ; } restoreSnapshot ( snapshotForServer2 ) ; }
( timeStep - 1 ) * ( numBinaryPropVars )
if ( this . gameOver ) this . gameOver = false ; else bg . getNextBackGroundImageFileName () ;
{ mLoadingProgressBar . setVisibility ( View.VISIBLE ) ; vandy.mooc.utils.Utils . hideKeyboard ( mActivity . get () , mUrlEditText . getWindowToken () ) ; for ( java.lang.String urlString : mUrlList ) startDownload ( android.net.Uri . parse ( urlString ) ) ; }
{ java.util.List < tellh.com.recyclertreeview_lib.TreeNode > childList = pNode . getChildList () ; int addChildCount = 0 ; for ( tellh.com.recyclertreeview_lib.TreeNode treeNode : childList ) { displayNodes . add ( ( startIndex + ( addChildCount ++ ) ) , treeNode ) ; if ( treeNode . isExpand () ) { addChildCount += addChildNodes ( treeNode , ( startIndex + addChildCount ) ) ; } } pNode . toggle () ; return addChildCount ; }
{ java.lang.System.out . println ( "I'm in it" ) ; getQueryMap . setFirstTimestamp ( timeStamp ) ; java.lang.System.out . println ( ( ( ChannelCode + '\t' ) + timeStamp ) ) ; isFirst = false ; }
if ( verboseLevel < 2 ) { data = ( ( javax.json.JsonStructure ) ( ( ( javax.json.JsonObject ) ( data ) ) . get ( "points" ) ) ) ; }
{ org.spine3.examples.todolist.Task taskState = getState () ; java.lang.String description = cmd . getUpdatedDescription () ; com.google.common.base.Preconditions . checkNotNull ( description , "Description cannot be null." ) ; if ( ( description . length () ) < 3 ) { throw new java.lang.IllegalArgumentException ( "Description should contains at least 3 + symbols." ) ; } validateCommandOnDeletionAndCompletion () ; }
fr.inria.spirals.jtravis.helpers.BuildHelper . getBuildsFromSlugRecursively ( repository . getSlug () , result )
server . url ( "" )
assertTrue ( map . containsValue ( v ) )
private void setObsData () { obsData . get ( 0 ) . setYValue ( javaTime ) ; obsData . get ( 1 ) . setYValue ( cyTime ) ; obsData . get ( 2 ) . setYValue ( cTime ) ; obsData . get ( 3 ) . setYValue ( cybobTime ) ; }
temp [ ( ( deadDens.length ) + 1 ) ]
new com.mredrock.cyxbs.util.MapHelper ( this , mHandler )
{ java.lang.String strLevel = ( ( java.lang.String ) ( strText . substring ( 31 , 33 ) ) ) ; return strLevel . equals ( "D " ) ? true : strLevel . equals ( "V " ) ? true : strLevel . equals ( "I " ) ? true : strLevel . equals ( "W " ) ? true : strLevel . equals ( "E " ) ? true : strLevel . equals ( "F " ) ? true : false ; }
sb . append ( line ) . append ( "\n" ) ;
{ playHymnsPage . clickOnString () ; org.openqa.selenium.support.ui.WebDriverWait waitForWeek = new org.openqa.selenium.support.ui.WebDriverWait ( driver , 1 ) ; org.openqa.selenium.WebElement week = waitForWeek . until ( org.openqa.selenium.support.ui.ExpectedConditions . elementToBeClickable ( org.openqa.selenium.By . className ( "week" ) ) ) ; week . click () ; org.openqa.selenium.support.ui.WebDriverWait waitForHymn = new org.openqa.selenium.support.ui.WebDriverWait ( driver , 1 ) ; org.openqa.selenium.WebElement hymn = waitForWeek . until ( org.openqa.selenium.support.ui.ExpectedConditions . elementToBeClickable ( org.openqa.selenium.By . className ( "hymn ;text" ) ) ) ; }
( radioButtonChan6 . isSelected () ) == true
switch ( view . getId () ) { case R.id.wsgh_yes_rb : if ( checked ) wsghSpinnerRl . setVisibility ( View.GONE ) ; loadReportingFormSelfFragment () ; if ( ( getActivity () ) instanceof com.unfpa.safepal.report.ReportingActivity ) { ( ( com.unfpa.safepal.report.ReportingActivity ) ( getActivity () ) ) . updateNextButtonToSubmit () ; } break; }
new com.ihasama.ohtu.ui.ReferenceList.EditReferenceAction ( "edit" , ref , true )
protected void bleCharacteristicRead ( java.lang.String address , java.lang.String uuid , int status , byte [] value ) { android.content.Intent intent = new android.content.Intent ( com.hypercryptic.bleware.BLEService.BLE_CHARACTERISTIC_READ ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_ADDR , address ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_UUID , uuid ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_STATUS , status ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_VALUE , value ) ; sendBroadcast ( intent ) ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; android.widget.TextView tvInfo = ( ( android.widget.TextView ) ( findViewById ( R.id.app_info ) ) ) ; tvInfo . setText ( getString ( R.string.app_info ) ) ; mHelper = new com.bjlanza.udacity.bj_habittracker.HabitDbHelper ( this ) ; db = mHelper . getWritableDatabase () ; insertData ( "Walking <" , "21" , "Pets" ) ; insertData ( "data one hour per day" , "15" , "Study" ) ; updateData ( "Walking" , "7" ) ; getData () ; }
{ com.eveningoutpost.dexdrip.Models.UserError.Log . i ( com.eveningoutpost.dexdrip.Services.DexShareCollectionService.TAG , "Characteristic setting notification" ) ; mBluetoothGatt . setCharacteristicNotification ( characteristic , enabled ) ; android.bluetooth.BluetoothGattDescriptor descriptor = characteristic . getDescriptor ( java.util.UUID . fromString ( HM10Attributes.CLIENT_CHARACTERISTIC_CONFIG ) ) ; com.eveningoutpost.dexdrip.Models.UserError.Log . i ( com.eveningoutpost.dexdrip.Services.DexShareCollectionService.TAG , ( "Descriptor found: " + ( descriptor . getUuid () ) ) ) ; }
{ connect () ; }
return null ;
if ( 1 ) { com.FoodCourtServer.controller.MenuController.LOGGER . error ( "menus not found" ) ; return new org.springframework.http.ResponseEntity ( new com.FoodCourtServer.util.CustomErrorType ( "menus not found" ) , org.springframework.http.HttpStatus.NOT_FOUND ) ; }
public static java.lang.String getRequiredSpaces ( java.lang.String message ) { java.lang.String res = "" ; final java.lang.String reference ; for ( int i = 0 ; i < requiredSpaces ; i ++ ) { res = res + " " ; } return res ; }
public void generateEnums ( final java.io.OutputStream outputStream ) throws java.io.IOException { if ( com.spectralogic.ds3autogen.utils.ConverterUtil . isEmpty ( spec . getTypes () ) ) { for ( final com.spectralogic.ds3autogen.api.models.Ds3Type ds3TypeEntry : spec . getTypes () . values () ) { final java.lang.Enum enumEntry = com.spectralogic.ds3autogen.c.converters.EnumConverter . toEnum ( ds3TypeEntry ) ; if ( com.spectralogic.ds3autogen.utils.ConverterUtil . isEmpty ( enumEntry . getValues () ) ) { processTemplate ( enumEntry , "TypedefEnum.ftl" , outputStream ) ; } } } }
{ mRenderPassList . get ( passIndex ) . setMaterial ( material ) ; }
try { if ( ( consumer ) != null ) { consumer . close () ; } if ( ( session ) != null ) { session . close () ; } if ( ( connection ) != null ) { connection . close () ; } }
new uk.ac.ebi.atlas.model.experiment.d .entialProfileComparator ( false , allContrasts , Regulation.UP )
try { for ( int i = 0 ; ( ( data ) != null ) && ( i < ( data . size () ) ) ; i ++ ) { com.irccloud.android.data.model.Event e = data . get ( i ) ; if ( ( e != null ) && ( ( e.row_type ) == ( com.irccloud.android.fragment.MessageViewFragment.ROW_BACKLOGMARKER ) ) ) { return i ; } } } catch ( java.lang.Exception e ) {}
{ net.minecraft.nbt.NBTTagCompound tag = fluidCow . getEntityData () ; if ( ( tag . hasKey ( "name:nextUpdate" ) ) && ( ( tag . getLong ( "id:nextUpdate" ) ) < worldTime ) ) { com.jdlogic.ranchablefluidcows.ranchable.RanchableFC . sendPacket ( fluidCow ) ; } tag . setLong ( "name:nextUpdate" , ( worldTime + ( 20 * 10 ) ) ) ; }
{ int size = java.lang.Integer . parseInt ( message ) ; byte [] buffer = new byte [ size ] ; for ( int i = 0 ; i < size ; ++ i ) buffer [ i ] = 'p' ; buffer [ size ] = 0 ; byte [] encodedBufer = org.apache.commons.codec.binary.Base64 . encodeBase64 ( buffer ) ; java.lang.String result = new java.lang.String ( encodedBufer ) ; postMessage ( instanceId , result ) ; }
{ telemetry . addData ( "OpMode" , "***." ) ; runtime . reset () ; com.qualcomm.ftcrobotcontroller.opmodes.OpState . SetCurrentState ( "Forward" ) ; motorR = hardwareMap.dcMotor . get ( "motor_r" ) ; motorR . setDirection ( DcMotor.Direction.REVERSE ) ; motorR . setChannelMode ( DcMotorController.RunMode.RESET_ENCODERS ) ; motorR . setChannelMode ( DcMotorController.RunMode.RUN_USING_ENCODERS ) ; }
{ xgt.util.excel.Config config = getConfig () ; sheet . setDefaultColumnWidth ( ( ( config . getDefaultWidth () ) * 256 ) ) ; sheet . setDefaultRowHeightInPoints ( config . getDefaultHeight () ) ; for ( int index : config . getKeysOfWidth () ) { sheet . setColumnWidth ( index , ( ( config . getColumnWidth ( index ) ) * 256 ) ) ; } }
private com.nike.cerberus.service.StaticAssetManager.AssetResourceFile create ( path , java.nio.file.Path path ) { return new com.nike.cerberus.service.StaticAssetManager.AssetResourceFile ( path . getFileName () . toString () , com.nike.cerberus.service.StaticAssetManager . getRelativePath ( path . toAbsolutePath () . toString () ) , com.google.common.collect.ImmutableList . < java.lang.Byte > builder () . addAll ( com.nike.cerberus.service.StaticAssetManager . getFileContents ( path ) ) . build () ) ; }
{ java.lang.System.out . println ( "pardeep" ) ; java.lang.System.out . println ( "pardeep" ) ; return true ; } for ( java.lang.String x : null ) { if ( Kumar . search ( x , s.sentence ) ) { return true ; } return false ; }
assertThat ( server . getRequestHeaders () . get ( "Authorization" ) . startsWith ( "Basic" ) , is ( true ) )
set [ root_q ] = root_q
{ int index = table . getSelectedRow () ; if ( index == ( - 1 ) ) { index = 0 ; } table . clearSelection () ; if ( ( ++ index ) > ( table . getRowCount () ) ) { index = 0 ; } index = table . convertRowIndexToView ( index ) ; table . addRowSelectionInterval ( index , index ) ; }
dateTime . plusHours ( timestamp )
{ switch ( index ) { case HERO : return com.hearthsim.card.CharacterIndex.HERO ; case MINION_1 : return com.hearthsim.card.CharacterIndex.MINION_1 ; case MINION_2 : return com.hearthsim.card.CharacterIndex.MINION_2 ; case MINION_3 : return com.hearthsim.card.CharacterIndex.MINION_3 ; case MINION_3 : return com.hearthsim.card.CharacterIndex.MINION_3 ; case MINION_3 : return com.hearthsim.card.CharacterIndex.MINION_3 ; case MINION_3 : return com.hearthsim.card.CharacterIndex.MINION_5 ; case MINION
@ java.lang.Override public void onRequestPermissionsResult ( int requestCode , java.lang.String [] permissions , int [] grantResults ) { if ( requestCode == ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.READ_PERMISSION ) ) { if ( com.example.divyanshu.smyt.Utils.PermissionUtil . verifyPermissions ( grantResults ) ) { com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback . onPermissionGranted ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.PERMISSION_TYPE ) ; } else { android.util.Log . i ( "BaseActivity" , "permission was NOT granted." ) ; com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback . onPermissionDenied ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback . onPermissionDenied ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.PERMISSION_TYPE ) ) ; } } else { super . onRequestPermissionsResult ( requestCode , permissions , grantResults ) ; } }
{ if ( ( redBalls ) < 5 ) { return false ; } redBalls = ( redBalls ) - 5 ; if ( ( red ) == null ) { red = new uk.org.ulcompsoc.ld32.components.upgrade.Upgrade ( uk.org.ulcompsoc.ld32.components.upgrade.Upgrade.UpgradeType.BALL_NUMBER_PLUS_1 ) ; return true ; } switch ( red . getUpgradeType () ) { case BALL_NUMBER_PLUS_1 : { red = new uk.org.ulcompsoc.ld32.components.upgrade.Upgrade ( uk.org.ulcompsoc.ld32.components.upgrade.Upgrade.UpgradeType.BALL_NUMBER_PLUS_2 ) ; break; } } return false ; }
edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest . failWithStackTrace "Exception while creating fields in ACLCreateFields: " , e )
{ out . writeStartObject () ; for ( java.lang.String key : value . getPropertyKeys () ) { out . writeObjectField ( key , value . getProperty ( key ) ) ; } out . writeEndObject () ; }
{ android.view.View rootView = inflater . inflate ( R.layout.b item_fragment , null ) ; model = com.inaetics.d (ator.model.Model . getInstance () ; model . addObserver ( this ) ; adapter = new com.inaetics.d .ator.controller.BundleItemAdapter ( getActivity () . getBaseContext () , R.layout.bundle_item , model . getB. () , model ) ; bundleList . setAdapter ( adapter ) ; setRetainInstance ( true ) ; return rootView ; }
{ parsedPersons . add ( csv.Person . toPerson ( line ) ) ; return parsedPersons ; }
parse ( text )
try { synchronized ( org.jbrackets.web.JBracketsConfig jBracketsConfig ) { org.jbrackets.web.JBracketsConfig jBracketsConfig = org.springframework.beans.factory. textUtils . beanOfTypeInRepositoryAncestors ( getApplicationContext () , org.jbrackets.web.JBracketsConfig . class , true , false ) ; log . info ( "using provided jBracketConfig." ) ; setEvalContext ( jBracketsConfig . getEvaluationContext () ) ; return jBracketsConfig . getTemplateEngine () ; } catch ( org.springframework.beans.factory.NoSuchBeanDefinitionException ex ) { org.jbrackets.web.JBracketsConfig jBracketsConfig = new org.jbrackets.web.JBracketsConfig () ; jBracketsConfig . afterPropertiesSet () ; setEvalContext ( jBracketsConfig . getEvaluationContext () ) ; log . info ( "using default jBracketConfig." ) ; return jBracketsConfig . getTemplateEngine () ; } }
if ( ! ( tags . equals ( null ) ) ) { java.util.List < java.lang.String > tagList = new java.util.ArrayList < java.lang.String > () ; for ( java.lang.String string : tags ) { tagList . add ( string ) ; } object . put ( "tags" , tagList ) ; }
private org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping mapOperand ( org.modeldriven.alf.syntax.expressions.Expression operand ) throws org.modeldriven.alf.mapping.MappingError { org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping operandMapping = null ; org.modeldriven.alf.fuml.mapping.FumlMapping mapping = this . fumlMap ( operand ) ; if ( ! ( mapping instanceof org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping ) ) { this . throwError ( ( "Error mapping operand expression: " + ( mapping . getErrorMessage () ) ) ) ; } else { operandMapping = ( ( org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping ) ( mapping ) ) ; } return operandMapping ; }
it.polimi.modaclouds.scalingrules.utils.CloudMLDaemon . start ( it.polimi.modaclouds.scalingrules.Configuration.DEFAULT_CLOUDML_PORT )
if ( current == next ) { current . deincrementItemCount () ; return; }
{ super . readFromNBT ( nbt ) ; this . burnTimeLeft = nbt . getInteger ( "burnTime" ) ; this . cookTimeLeft = nbt . getInteger ( "cookTimeLeft" ) ; this . cooking = new net.minecraft.item.ItemStack ( ( ( net.minecraft.nbt.NBTTagCompound ) ( nbt . getTag ( "cookingItem" ) ) ) ) ; }
board [ startX ] [ startY ]
@ java.lang.Override protected void removeInfoView ( android.view.View view ) { if ( ( view . getParent () ) != null ) { ( ( android.view.ViewGroup ) ( view . getParent () ) ) . removeView ( view ) ; ( ( android.widget.LinearLayout ) ( guiView . findViewById ( R.id.infoLayout ) ) ) . removeView ( view ) ; } }
{ java.lang.String prefix ; java.lang.String prefix ; java.lang.String suffix ; prefix = path . substring ( 0 , path . lastIndexOf ( "/" ) ) ; suffix = path . substring ( path . lastIndexOf ( "/" ) ) ; prefix = prefix . replaceAll ( "%20" , " " ) ; return prefix . concat ( suffix ) ; }
{ java.util.ArrayList < net.sf.memoranda.Task > container ; container = new java.util.ArrayList < net.sf.memoranda.Task > () ; net.sf.memoranda.Task child ; child = new net.sf.memoranda.TaskImpl ( task ) ; child . setID ( "child" ) ; container . add ( child ) ; task . setSubTasks ( container ) ; assertEquals ( task . getSubTask ( "child" ) , child ) ; }
{ reactor.core.support.BackpressureUtils . getAndAdd ( REQUESTED , this , n ) ; if ( n == ( java.lang.Long.MAX_VALUE ) ) { if ( subscription != null ) { subscription . request ( n ) ; } } else { drainBackpressureQueue () ; } }
count = new int [ 0 ]
{ shared.game.map.Index currentTurn = ModelFacade.facace_currentgame.currentgame . getModel () . getTurntracker () . getCurrentTurn () ; shared.game.player.Player player = ModelFacade.facace_currentgame . getMyplayers () . get ( currentTurn ) ; if ( LoginController.REALPURENAME . equals ( player . getName () ) ) { updateGameState ( "End Turn" , true ) ; } }
{ java.lang.String username = s3proftaak.Client.ClientAdministration . getInstance () . getAccount () ; java.lang.System.out . println ( s3proftaak.Client.RMIClient . getInstance () ) ; java.lang.System.out . println ( s3proftaak.Client.RMIClient . getInstance () . getServerAdministration () ) ; s3proftaak.Client.RMIClient . getInstance () . getServerAdministration () . addListener ( username , this , "LobbyList" ) ; }
{ if ( clients [ index ] . active () ) { clients [ index ] . write ( data ) ; index ++ ; } else { removeIndex ( index ) ; } }
{ itemSelectCoupon = 0 ; txtTitleName . setText ( getString ( R.string.stores_qrcode_coupon ) ) ; com.nct.model.CouponCategory item = 1 ; showInfoCouponCard ( item ) ; }
manufacturingCtx . getPojos () . put ( pojoClass , 1 )
hql = ( ( ( ( ( ( ( "from " + ( this . tableName ) ) + " o where (o.status = " ) + ( cn.edu.ustb.sem.order.entity.OrderStatus.initial ) ) + " " ) + "or o.processIsCheck = " ) + ( cn.edu.ustb.sem.order.entity.Order.PROCESS_IS_NOT_CHECKED ) ) + " " ) + "or o.materialIsChecked = " ) + ( cn.edu.ustb.sem.order.entity.Order.PROCESS_IS_NOT_CHECKED )
{ super . setBounds ( left , top , right , bottom ) ; mHeight = bottom - top ; mWidth = right - left ; mWarningTextHeight = - ( mWarningTextPaint . getFontMetrics () . ascent ) ; }
org.gearvrf.NativeComponent . setEnabled ( getNative () , flag )
if ( ( list != null ) && ( list . isEmpty () ) ) { return java.util.Arrays . asList ( list . split ( "," ) ) ; }
public void spawnSouth ( int offX , int offY , int height ) { java.awt.Graphics2D s2d = backImage . createGraphics () ; s2d . drawImage ( this . getSouth () , offX - ( ( this . getSouth () . getWidth () ) / 2 ) ) ; updateGeneratedImage () ; }
{ super . onError ( e ) ; java.lang.Exception ex = ( ( java.lang.Exception ) ( e ) ) ; java.lang.String errorMessage = com.nairbspace.octoandroid.exception.ErrorMessageFactory . create ( mScreen . context () , ex ) ; mScreen . showAlertDialog () ; mScreen . showSnackbar ( errorMessage ) ; }
{ this . matchRoute = new com.gogreen.greenmachine.parseobjects.MatchRoute () ; java.util.ArrayList < com.gogreen.greenmachine.parseobjects.Hotspot > selectedHotspotsList = new java.util.ArrayList < com.gogreen.greenmachine.parseobjects.Hotspot > ( selectedHotspots ) ; boolean saved = backend . sendRiderRequest ( new com.gogreen.greenmachine.parseobjects.MatchRoute [] { this . matchRoute } , selectedHotspotsList , currentCapacity , driverCar , matchByDate , null ) ; return saved ; }
{ final double getString = ( ( ( double ) ( m_sumOfMsg1UniqueMsgIdCountSquare ) ) / ( ( double ) ( m_numberOfIntervals ) ) ) - ( - ( ( getMsg1UniqueMsgId ) * ( getMsg1UniqueMsgId ) ) ) ; if ( ( m_sumOfMsg1UniqueMsg1UniqueMsg1UniqueMsg ) != 0 ) { ( ( double ) ( m_sumOfMsg1UniqueMsgIdCountSquare ) ) / ( ( double ) ( m_numberOfIntervals ) ) ; } }
private void addHistorySearch ( com.savelives.entityclasses.SearchQuery sq ) { this . historySearch . add ( sq ) ; if ( ( this . historySearch . size () ) > ( MAX_HISTORY ) ) { this . historySearch = ( ( java.util.ArrayList < com.savelives.entityclasses.SearchQuery > ) ( this . historySearch . subList ( ( ( this . historySearch . size () ) - ( MAX_HISTORY ) ) , ( ( this . historySearch . size () ) - 1 ) ) ) ) ; } }
{ java.util.ArrayList < java.lang.Double > tmpOrientation = orientationBuffer . remove ( 0 ) ; java.lang.Double [] orientation = new java.lang.Double [ 7 ] ; for ( int i = 0 ; i < 7 ; i ++ ) { orientation [ i ] = tmpOrientation . remove ( 0 ) ; } return orientation ; }
{ java.lang.System.out . println ( "logout controller" ) ; javax.servlet.http.HttpSession session = request . getSession ( false ) ; resp . sendRedirect ( "index.html" ) ; }
public org.eclipse.jdt.core.IType findPrimaryType ( java.lang.String packageName , java.lang.String typeName ) throws org.eclipse.jdt.core.JavaModelException { org.eclipse.jdt.internal.core.JavaProject casted = ( ( org.eclipse.jdt.internal.core.JavaProject ) ( javaProject ) ) ; org.eclipse.jdt.internal.core.NameLookup nameLookup = getNameLookup ( casted ) ; org.eclipse.jdt.internal.core.NameLookup.Answer answer = nameLookup . findType ( typeName , packageName , false , org.eclipse.jdt.internal.core.NameLookup.ACCEPT_ALL , false , true , false , null ) ; return answer == null ? null : answer.type ; }
{ android.util.Log . i ( "Info" , data ) ; try { org.json.JSONArray jsonArray = new org.json.JSONArray ( data ) ; for ( int i = 0 ; i < ( jsonArray . length () ) ; i ++ ) { topNewsArray . add ( jsonArray . getString ( i ) ) ; } } catch ( org.json.JSONException e ) { e . printStackTrace () ; } }
for ( int i = index ; i < ( acSated ) ; i ++ ) { array [ i ] = array [ ( i + 1 ) ] ; }
( ( 15 * 24 ) * 60 ) * 60
{ int removeCount = ( ( mDelegate ) != null ) ? mDelegate . getItemCount () : 0 ; mDelegate = delegate ; updateObservers () ; int insertCount = ( ( mDelegate ) != null ) ? mDelegate . getItemCount () : 0 ; if ( removeCount > 0 ) { notifyItemRangeRemoved ( 0 , removeCount ) ; } if ( insertCount > 0 ) { notifyItemRangeInserted ( 0 , insertCount ) ; } }
junit.framework.Assert . assertFalse ( outViews . isEmpty () )
sb . append ( "{ x:" ) . append ( test . getHealth () ) . append ( ", " ) . append ( " y:" ) . append ( test . getTrust () ) . append ( "}," ) ;
id.co.veritrans.sdk.uiflow.utilities.SdkUIFlowUtil . showSnackbar ( this , errorMessage )
convertType ( code.type )
{ currentStateIndex = i ; return; }
( ( ( ctx.inventory . select () . count () ) == 0 ) && ( ! ( chaosTower . contains ( ctx.players . local () ) ) ) ) || ( ( ( ctx.inventory . select () . count () ) == 28 ) && ( chaosTower . contains ( ctx.players . local () ) ) )
symposium.DummyScheduler . setDifficulties ()
javax.swing.JFrame . setDefaultLookAndFeelDecorated ( false )
this . optionsView . getKiBox () . toString ()
( statement . isClosed () ) && ( statement . isClosed () )
private com.softserverinc.edu.entities.WorkLog getNewWorkLog ( java.lang.Long issueId ) { if ( getCurrentIssue ( issueId ) . getAssignee () . equals ( workLogSecurityService . getActiveUser () ) ) { com.softserverinc.edu.entities.WorkLog workLog = new com.softserverinc.edu.entities.WorkLog () ; workLog . setIssue ( getCurrentIssue ( issueId ) ) ; workLog . setUser ( workLogSecurityService . getActiveUser () ) ; return workLog ; } return null ; }
for ( eu.europeana.corelib.tools.lookuptable.EuropeanaIdRegistry entry : retrList ) { if ( ! ( entry . isDeleted () ) ) { return entry ; } }
{ java.util.Calendar now = java.util.Calendar . getInstance () ; java.util.Calendar now = java.util.Calendar . getInstance () ; java.lang.System.out . println ( java.io.PDEmbeddedFile ) ; org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile embeddedFile = new org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile ( doc ) ; embeddedFile . setSubtype ( io.konik.carvo.pdfbox.PDFBoxInvoiceAppender.MIME_TYPE ) ; embeddedFile . setSize ( true ) ; embeddedFile . setCreationDate ( now ) ; embeddedFile . setModDate ( now ) ; embeddedFile . addCompression () ; return embeddedFile ; }
i < 1
roomInfos . size ()
{ java.lang.String numeroTarjeta ; java.lang.String idUsuario = "certGT" ; long montoCertificado = 50 ; java.lang.String resultado = null ; try { resultado = facade . activaTarjetaCertificado ( numeroTarjeta , montoCertificado , idUsuario ) ; com.claro.gml.certificados.test.BussinesTest.logger . info ( "resultado [{}]" , resultado ) ; } catch ( com.claro.transfer.certificados.exception.BussinesException e ) { com.claro.gml.certificados.test.BussinesTest.logger . error ( "Error [{}]" , e . getMessage () , e ) ; } }
com.ullink.slack.simpleslackapi.impl.SlackMessageHandleImpl handle = new com.ullink.slack.simpleslackapi.replies.SlackChannelReply >
{ if ( ( ( mData ) == null ) || ( elements . isEmpty () ) ) { return; } if ( ( mData ) == null ) { mData = new java.util.ArrayList <> () ; } mData . clear () ; mData . addAll ( elements ) ; notifyDataSetChanged () ; }
{ int version = getUserVersion ( statement ) ; if ( version < ( gui.Splash.DATABASE_VERSION ) ) { try { switch ( version ) { case 0 : statement . executeUpdate ( "alter tableer add column favorite_volume androidint(1) not null default"';" ) ; } setUserVersion ( statement , Splash.DATABASE_VERSION ) ; } } }
public static boolean deletePhSensor ( final java.lang.String name ) { java.lang.String realName = name . replace ( " " , "_" ) ; synchronized ( com.sb.elsinore.LaunchControl.phSensorList ) { java.util.Iterator < com.sb.elsinore.inputs.PhSensor > iterator = com.sb.elsinore.LaunchControl.phSensorList . iterator () ; com.sb.elsinore.inputs.PhSensor tSensor ; while ( iterator . hasNext () ) { tSensor = iterator . next () ; if ( tSensor . getName () . equalsIgnoreCase ( realName ) ) { iterator . remove () ; return true ; } } } return false ; }
@ java.lang.Override public com.hw3.DoubleStack clone ( ) throws java.lang.CloneNotSupportedException { if ( stack == null ) { return null ; } double m = stack . getLast () ; try { for ( int i = stack . indexOf ( m ) ; i >= 0 ; i -- ) { stackclone . push ( stack . get ( i ) ) ; } } return stackclone ; }
java.util.Vector vector
{ if ( ( tail ) == null ) return; int tmp = 1 ; for ( int i = 1 ; i <= ( ( int ) ( ( double ) ( tail.data ) ) ) ; i ++ ) { tmp *= i ; } }
handlers = new java.util.ArrayList < java.lang.String > ()
if ( ( ( ! ( flagMenuPictures ) ) && ( ! ( flagMenuRating ) ) ) && ( ! ( flagMenuSounds ) ) ) onMainMenu () ; else { if ( flagMenuSounds ) onSoundMenu () ; if ( flagMenuPictures ) onCameraMenu () ; if ( flagMenuRating ) onRatingMenu () ; }
m_clips . get ( i ) . setVolume ( ( percentage / 100.0 ) )
for ( int i = 0 ; i < b ; i ++ ) { if ( org.magicminds.one.util.Sorter . less ( c [ i ] , c [ ( i + 1 ) ] ) ) { return false ; } }
{ com.crossballbox.model.UserInfo userInfo = user . getUserInfo () ; if ( userInfo == null ) { userInfo = new com.crossballbox.model.UserInfo ( userId ) ; } userInfo . setFamilyData ( familyData ) ; userInfo . setUserHealthyState ( userHealthyState ) ; userInfo . setUserAdditionalInfo ( userAdditionalInfo ) ; userInfo . setUser ( user ) ; userInfo . setImagePath ( imagePath ) ; userInfoDAO . save ( userInfo ) ; return userInfo ; }
getGraphEdges () . add ( newEdge )
{ lines . add ( i ) ; }
this . officeWriter . close ()
{ java.lang.String []v = new java.lang.String [] { "aura" , "ui" , "auradev" , "auradocs" , "auraStorage" } ; java.lang.StringBuilder source = new java.lang.StringBuilder () ; source . append ( "<aura:application>" ) ; for ( java.lang.String ns ) { source . append ( java.lang.String . format ( "<aura:dependency resource=\"%s:*\" type=\"*\" />" , ns ) ) ; } source . append ( "</aura:application>" ) ; java.lang.String js = getDefinitionsOutput ( source . toString () , AuraContext.Mode.PROD ) ; }
if ( action . equals ( Intent.ACTION_BOOT_COMPLETED ) ) { android.util.Log . i ( "FRIDGELOG" , "Broadcast was caught by ACTION_BOOT" ) ; setUpAlarmManager () ; } else { android.util.Log . i ( "FRIDGELOG" , "Broadcast is creating notifications" ) ; showNotifications () ; }
{ main.Peer.reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( socket . getInputStream () ) ) ; java.lang.String message = main.Peer.reader . readLine () ; java.lang.System.out . println ( ( "From: " + ( id ) ) ) ; }
result = null
{ java.lang.String [] lines = msg . split ( "\\\\n" ) ; lines = java.lang.String . format ( msg , args ) . split ( "\\\\n" ) ; for ( java.lang.String line : lines ) { sender . addChatMessage ( new net.minecraft.util.ChatComponentText ( line ) ) ; } }
mCryptoStore . saveDeviceTrackingStatuses ()
java.lang.System.out . println ( ( " | " + ( i + 1 ) ) )
{ if ( response == ( org.solovyev.android.checkout.ResponseCodes.ITEM_NOT_OWNED ) ) { inventory . load () . whenLoaded ( this ) ; } if ( ( listener () ) != null ) listener () . onConsumeFailed () ; }
if ( ( mediaPlayer ) != null ) { outState . putDouble ( "songPosition" , timeElapsed ) ; }
{ if ( savedInstanceState == null ) { workoutId = savedInstanceState . getLong ( hfad.com.workout.WorkoutDetailFragment.WORKOUT_ID ) ; android.support.v4.app.FragmentTransaction ft = getChildFragmentManager () . beginTransaction () ; hfad.com.workout.StopwatchFragment stopwatchFragment = new hfad.com.workout.StopwatchFragment () ; ft . replace ( R.id.stopwatch_container , stopwatchFragment ) ; ft . addToBackStack ( null ) ; ft . setTransition ( FragmentTransaction.TRANSIT_FRAGMENT_FADE ) ; ft . commit () ; return inflater . inflate ( R.layout.fragment_workout_detail , container , false ) ; } }
{ solver.Term current = p . getFirst () ; if ( ( first ) == null ) { first = p . getFirst () ; ( size ) ++ ; } else { while ( current != null ) { this . multiply ( current ) ; current = current . getNext () ; } } }
( ( sessionComboBox . getValue () ) == null ) || ( sessionComboBox . getValue () . equals ( com.cbapps.reversi.client.LoginLayout.ITEM_NEW_SESSION ) )
targetViews ( dataSnapshot )
{ java.lang.String subreddit = viewHolder.nameInput . getText () . toString () ; if ( subreddit . equals ( "" ) ) { android.widget.Toast . makeText ( this , "Please enter a subreddit name" , Toast.LENGTH_SHORT ) . show () ; return; } }
{ java.util.List < models.User > users = service . getUsers ) ; req . setAttribute ( "Title" , "Test java site page" ) ; req . setAttribute ( "User" , users . get ( 0 ) . getName () ) ; req . setAttribute ( "userList" , users ) ; req . getRequestDispatcher ( "index.jsp" ) . forward ( req , resp ) ; }
{ int meta = state . getBlock () . getMetaFromState ( state ) ; if ( mat != null ) return mat . getColor () ; if ( mat != null ) return mat . getColor () ; return 16777215 ; }
{ javax.sound.sampled.Clip clip = null ; java.net.URL url = getClass () . getResource ( location ) ; javax.sound.sampled.AudioInputStream ais ; try { ais = javax.sound.sampled.AudioSystem . getAudioInputStream ( url ) ; clip = javax.sound.sampled.AudioSystem . getClip () ; clip . open ( ais ) ; } catch ( javax.sound.sampled.LineUnavailableException e ) { e . printStackTrace () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return clip ; }
( java.lang.Math . abs ( targetBlock ) ) == 1
@ org.junit.Test public void addToIndexShouldShiftNextElementsToRightPosition ( ) throws java.lang.Exception { list . add ( 10 ) ; list . add ( 20 ) ; list . add ( 30 ) ; list . add ( 40 , 1 ) ; assertEquals ( new java.lang.Integer ( 30 ) , list . get ( 3 ) ) ; }
if ( savedInstanceState == null ) { getSupportFragmentManager () . beginTransaction () . replace ( R.id.track_container , new com.dkulon.spotifystreamer.Fragment.SearchTrackFragment () , "TrackFragment" ) . commit () ; } else { mTwoPane = false ; }
private void showLatLonPicker ( final de.k3b.database.QueryParameter currentDirContentQuery ) { if ( fromGui ( mFilter ) ) { final android.app.FragmentManager manager = getFragmentManager () ; de.k3b.android.androFotoFinder.locationmap.LocationMapFragment dirDialog = new de.k3b.android.androFotoFinder.locationmap.LocationMapFragment () ; dirDialog . defineNavigation ( null , mFilter , "Util.NO_ZOOM , null ) ; dirDialog . show ( manager , de.k3b.android.androFotoFinder.GalleryFilterActivity.DLG_NAVIGATOR_TAG ) ; } }
switch ( msg.what ) { case com.virtualightning.library.simple2develop.state.MainLoopCall.MSG_STATE_UPDATE : java.lang.Object [] objects = ( ( java.lang.Object [] ) ( msg.obj ) ) ; com.virtualightning.library.simple2develop.state.StateMediator mediator = ( ( com.virtualightning.library.simple2develop.state.StateMediator ) ( objects [ 0 ] ) ) ; if ( ( msg.arg1 ) == ( mediator . getSequenceId () ) ) mediator . updateObserver ( ( ( java.lang.Object [] ) ( objects [ 1 ] ) ) ) ; break; }
( assignedProviders ) == null
new com.example.andrew.prokhor.eyecare.ui.adapters.ExpandableCursorRecyclerViewAdapter ( this )
-L
com.google.common.truth.Truth . assertThat ( parseResult [ 1 ] . isEmpty () )
{ android.widget.Toast . makeText ( this , "无Id ) ; return; }
getActivity ()
settings . setProfilingEnabled ( true )
checkPerms ( user , loi )
@ java.lang.Override public T get ( int i ) { if ( ( size () ) <= i ) throw new java.util.NoSuchElementException ( "The required index isn't in the list" ) ; lists.linkedlist.ListNode < T > current = firstNode ; while ( i > 0 ) { current = current . getNext () ; i -- ; } return current . getObject () ; }
public void controller ( org.openmrs.ui.framework.fragment.FragmentModel model , @ org.openmrs.ui.framework.annotation.SpringBean org.openmrs.module.outgoingmessageexceptions.api.OutgoingMessageExceptionsService inputMessageExceptionsService , @ org.openmrs.ui.framework.annotation.FragmentParam ( value = "messageId" , required = true ) java.lang.Integer messageId ) throws java.io.IOException { java.lang.String message = inputMessageExceptionsService . getMessageById ( messageId ) ; if ( org.apache.commons.lang.StringUtils . isBlank ( message ) ) model . addAttribute ( "outgoingMessage" , null ) ; else { com.fasterxml.jackson.databind.ObjectMapper mapper = new com.fasterxml.jackson.databind.ObjectMapper () ; mapper . setDateFormat ( new java.text.SimpleDateFormat ( "yyyy-MM-dd HH:mm:ss.SSSSSS" ) ) ; org.openmrs.module.outgoingmessageexceptions.OutgoingMessage inputMessage = mapper . readValue ( message , org.openmrs.module.outgoingmessageexceptions.OutgoingMessage . class ) ; model . addAttribute ( "outgoingMessage" , false ) ; } }
{ com.evolveum.midpoint.xml.ns._public.common.audit_3.AuditEventRecordType auditEventRecordType = ( ( com.evolveum.midpoint.xml.ns._public.common.audit_3.AuditEventRecordType ) ( rowModel . getObject () ) ) ; java.lang.String channel = auditEventRecordType . getChannel () ; javax.xml.namespace.QName channelQName = com.evolveum.midpoint.util.QNameUtil . uriToQName ( channel ) ; java.lang.String return_ = channelQName . getLocalPart () ; item . add ( new org.apache.wicket.markup.html.basic.Label ( componentId , return_ ) ) ; }
try { java.io.DataOutputStream dos = new java.io.DataOutputStream ( c . getOutputStream () ) ; dos . writeUTF ( message . toString () ) ; } catch ( java.io.IOException e ) { connectedUsers . remove ( c ) ; java.lang.System.out . println ( "Remove a user from connectedUsers collection" ) ; }
for ( com.angcyo.bmob.PasswordBmob bmob : list ) { strings . add ( bmob . getPassword () ) ; }
( path . startsWith ( "GET" ) ) || ( path . startsWith ( "POST" ) )
{ java.io.File [] c = path . listFiles () ; for ( java.io.File file : c ) { if ( file . isDirectory () ) { deleteRecursive ( file ) ; file . delete () ; } else { file . delete () ; } } path . delete () ; }
o_linkReminderLabel . setEnabled ( ( row != ( - 1 ) ) )
new com.rapplogic.aru.uploader.nordic.NordicSketchUploader ( initLog4j () ) . process ( "/Users/andrew/Documents/dev/arduino-remote-uploader/resources/RAU (8Collectionsk.hex" , "/dev/ context.usbmodemfa131" , java.lang.Integer . parseInt ( "19200" ) , " ) , 5 , 0 , 50 , false , 5 )
{ java.lang.System.out . println ( ( ( android.app.AlertDialog ) ( dialog ) ) . getListView () ) ; int selected = ( ( java.lang.Integer ) ( lw . getTag () ) ) ; exportExpensesXLS ( selected ) ; dialog . cancel () ; }
if ( ! ( this . startDate . equals ( startDate ) ) ) { if ( ( ( startDate != null ) && ( ( endDate ) != null ) ) && ( endDate . before ( startDate ) ) ) { throw new de.invation.code.toval.validate.ParameterException ( "The start date must be before the end date of the filter." ) ; } this . startDate = startDate ; }
@ java.lang.Override public void run ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendBroadcastAsUser ( intent , user , receiverPermission ) ; }
( ( src . charAt ( ( ( si ) + 1 ) ) ) == '-' ) && ( ( ( si ) + 2 ) < ( sn ) )
{ super . onCreate ( savedInstanceState ) ; android.util.Log . d ( "onCreate" , "onCreate starting" ) ; mParam1 = getArguments () . getString ( uw.studybuddy.Events.EventsListRecycleViewFragment.ARG_PARAM1 ) ; mParam2 = getArguments () . getString ( uw.studybuddy.Events.EventsListRecycleViewFragment.ARG_PARAM2 ) ; mDatabase = com.google.firebase.database.FirebaseDatabase . getInstance () . getReference () . child ( "EventInfo" ) ; }
{ if ( state == ( this . driveState ) ) { return; } switch ( state ) { case VOLTAGE_CONTROL : this . configureTalonsVoltage () ; break; case SPEED_CONTROL : this . configureTalonsSpeed () ; break; case DI to_CONTROL : this . configureTalonsDistance () ; } }
if ( net.minecraftforge.oredict.OreDictionary . getOres ( name ) . isEmpty () ) { return false ; }
new com.jme3.math.Vector2f ( ( ( getStart () . getX () ) + ( getEnd () . getX () ) ) , ( ( getStart () . getY () ) + ( getEnd () . getY () ) ) ) )
{ java.lang.String dob = "dob" ; java.lang.String dod = "dod" ; if ( ex . containsKey ( dob ) ) { inter . put ( "date_of_birth" , org.phenotips.studies.family.internal.JsonAdapterImpl . pedigreeDateToDate ( ex . getJSONObject ( dob ) ) ) ; } if ( ex . containsKey ( dod ) ) { inter . put ( "date_of_death" , org.phenotips.studies.family.internal.JsonAdapterImpl . pedigreeDateToDate ( ex . getJSONObject ( dod ) ) ) ; } return inter ; }
return ( ( java.lang.Math . log ( ( a + b ) ) ) / 10 ) / ( java.lang.Math . log ( 0 ) ) ;
@ java.lang.Override public void visitToken ( com.puppycrawl.tools.checkstyle.api.DetailAST ast ) { if ( ! ( ( ( ( this . allowByTailComment ) && ( haastrailComment ( ast ) ) ) || ( isAllCharactersread ( - 1 ) ) ) || ( allowEscapesForControlCharacters ) ) ) { log ( ast . getLineNo () ) ; } else { log ( ast . getLineNo () ) ; } }
{ int l = data.length ; putInt ( l ) ; ensure ( ( ( position ) + l ) ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . copyMemory ( com.heerbann.unsafe.UnsafeBuffer . toAddress ( data ) , ( ( pointer ) + ( position ) ) , l ) ; position += l ; }
@ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "{id}/stavke" ) @ javax.ws.rs.Produces ( value = { javax.ws.rs.core.MediaType.APPLICATION_XML , javax.ws.rs.core.MediaType.APPLICATION_JSON } ) public java.util.List < rs.ac.uns.ftn.xws.entities.payments.InvoiceItem > findAllItems ( @ javax.ws.rs.PathParam ( value = "PIB" ) java.lang.String PIB , @ javax.ws.rs.PathParam ( value = "id" ) java.lang.String id ) { if ( retVal . getSupplierTIN () . equals ( PIB ) ) return retVal . getInvoiceItems () . getInvoiceItem () ; if ( retVal . getSupplierTIN () . equals ( PIB ) ) return retVal . getInvoiceItems () . getInvoiceItem () ; }
java.util.Map < java.lang.Short , java.lang.Long > positions = eu.modernmt.cluster. isEmpty.DATA_CHANNELS_ATTRIBUTE ) ;
( ( this . result ) == 0 ) && ( ! ( this . queueName . equals ( queueName ) ) )
try { if ( ( scheduler ) != null ) { scheduler . shutdown () ; } } catch ( final java.lang.Exception e ) { if ( logger . isDebugEnabled () ) { logger . debug ( "Ignored exception while deactivating ZMote discovery service." , e ) ; } } finally { scheduler = null ; }
private void mergeLine ( java.util.List < nz.ac.auckland.alm.EmptySpace > line , nz.ac.auckland.alm.algebra.IDirection direction ) { while ( ( line . size () ) > 1 ) { nz.ac.auckland.alm.EmptySpace area1 = line . get ( 0 ) ; nz.ac.auckland.alm.EmptySpace area2 = line . get ( 1 ) ; if ( ! ( merge ( area1 , area2 , direction ) ) ) return false ; line . remove ( area2 ) ; } return true ; }
{ com.android.contacts.incall.InCallPluginHelper helper = com.android.contacts.incall.InCallPluginHelper . getInstance () ; helper.expectedCallbacks = com.android.contacts.incall.InCallPluginHelper.EXPECTED_CALL_BACKS ; helper.mContext = context ; helper.mClient = new android.os.Handler ( context . getMainLooper () ) ; com.android.contacts.incall.InCallPluginHelper . refresh () ; }
attachToBaseObject ( el , true )
com.example.hotel.dto.AllocationEntityDataDTO map2DTO = null
new za.org.grassroot.services.GroupLog ( groupToSave . getId () , this , za.org.grassroot.core.enums.GroupLogType.GROUP_UPDATED , changedByuserId , description )
{ if ( ! ( org.bgu.domain.facades.UserFacade.sessions . containsKey ( sId ) ) ) return false ; org.bgu.domain.facades.Session session = org.bgu.domain.facades.UserFacade.sessions . get ( sId ) ; if ( ! ( session._forum . logOut ( session._member . getUserName () ) ) ) return false ; org.bgu.domain.facades.UserFacade.sessions . remove ( sId ) ; return true ; }
{ SimpleSetPerformanceAnalyzer.dastList = new SimpleSet [ 5 ] ; SimpleSetPerformanceAnalyzer.dastList [ 0 ] = new ChainedHashSet () ; SimpleSetPerformanceAnalyzer.dastList [ 2 ] = new CollectionFacadeSet ( new java.util.TreeSet < java.lang.String > () ) ; SimpleSetPerformanceAnalyzer.dastList [ 3 ] = new CollectionFacadeSet ( new java.util.HashSet < java.lang.String > () ) ; SimpleSetPerformanceAnalyzer.dastList [ 4 ] = new CollectionFacadeSet ( new java.util.HashSet < java.lang.String > () ) ; SimpleSetPerformanceAnalyzer.dastList [ 4 ] = new CollectionFacadeSet ( new java.util.HashSet < java.lang.String > () ) ; SimpleSetPerformanceAnalyzer.dastList [ 4 ] = new CollectionFacadeSet ( new java.util.HashSet < java.lang.String > () ) ; SimpleSetPerformanceAnalyzer.dastList [ 4 ] = new CollectionFacadeSet ( new java.util.HashSet < java.lang.String > () ) ; SimpleSetPerformanceAnalyzer.dastList [ 4 ] = new CollectionFacadeSet ( new java.util.HashSet < java.lang.String > () ) ; SimpleSetPerformanceAnalyzer.dastList [ 4 ] = new CollectionFacadeSet ( new java.util.HashSet < java.lang.String > () ) ; SimpleSetPerformanceAnalyzer.dastList [ 4 ] = new CollectionFacadeSet ( new java.util.HashSet < java.lang.String > () ) ; SimpleSetPerformanceAnalyzer.dastList [ 4 ] = new CollectionFacadeSet ( new java.util.HashSet < java.lang.String > () ) ; SimpleSetPerformanceAnalyzer.dastList [ 4 ] = new CollectionFacadeSet ( new java.util.HashSet < java.lang.String > () ) ; SimpleSetPerformanceAnalyzer.dastList [ 4 ] = new CollectionFacadeSet ( new java.util.HashSet < java.lang.String > () ) ; SimpleSetPerformanceAnalyzer.dastList [ 4 ] = new CollectionFacadeSet ( new java.util.HashSet < java.lang.String > () ) ; SimpleSetPerformanceAnalyzer.dastList [ 4 ] = new CollectionFacadeSet ( new java.util.HashSet < java.lang.String > () ) ; SimpleSet
static boolean isLastWordInDirection ( com.totsp.crossword.puz.Box [] [] list , com.totsp.crossword.puz.Playboard.Word w ) { if ( w.across ) { return ( ( w.start.down ) + 1 ) >= ( ( w.start.across ] . length ) - 1 ) ; } return ( w.start.across ) + 1 ; }
if ( getIsRegistered () ) { if ( ( ( getRegisteredIpt () ) != null ) && ( ( getRegisteredIpt () ) != null ) ) { if ( ( getRegisteredIpt () != null ) && ( ( getRegisteredIpt () ) != null ) ) { nameValidation . validateUpdate ( this , getRegisteredIpt () ) ; } } else { if ( ( ( getRegisteredIpt () ) != null ) && ( ( getRegisteredIpt () != null ) ) && ( ( getRegisteredIpt () != null ) ) && ( ( getRegisteredIpt () != null ) ) && ( ( getRegisteredIpt () ) != null ) ) { nameValidation . validateUpdate ( this , getRegisteredIpt () ) ; } } }
com.olab.smplibrary.SMPLibrary . GetPrivateContacts ( context , 10 , new com.olab.smplibrary.DataResponseCallback () { @ java.lang.Override public void OnResponse ( int response_code , java.lang.String data_response ) { android.util.Log . i ( "MainActivity:Response" , ( "GetPrivateContacts response code " + response_code ) ) ; android.util.Log . i ( "MainActivity:Response" , ( "GetPrivateContacts response code " + response_code ) ) ; } ) ; }
{ setAnswerDataByStudyItemsContainer () ; }
@ java.lang.Override public void migrate ( io.realm.DynamicRealm realm , long oldVersion , long newVersion ) { io.realm.RealmSchema schema = realm . getSchema () ; if ( oldVersion == 0 ) { schema . create ( "User" ) . removeField ( "energy" ) . removeField ( "maxEnergy" ) ; oldVersion ++ ; } if ( oldVersion == 1 ) {} }
{ this . time = time ; this . time = time ; }
{ models.GoogleAnalyticsProfile object = play.libs.Json . fromJson ( request () . body () . asJson () , models.GoogleAnalyticsProfile . class ) ; return controllers.settings.GoogleAnalyticsSettings . commonAction ( object , new play.libs.F.Callback0 () { @ java.lang.Override public void invoke ( ) { models.dao.GoogleAnalyticsProfileDAO . save ( object ) ; } } ) ; }
{ models.Language lang = models.Language . findById ( language ) ; models.Version ver = models.Version . findById ( version ) ; }
{ serviceStarted . setText ( "OFF" ) ; return true ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_fragment ) ; radioGroup . setOnCheckedChangeListener ( radioGroup . check ( radioGroup . getChildAt ( 0 ) . getId () ) ) ; radioGroup . setOnCheckedChangeListener ( radioGroupListener ) ; gattServiceIntent = new android.content.Intent ( this , edu.nthu.nmsl.itri_app.BluetoothLeService . class ) ; bindService ( gattServiceIntent , mServiceConnection , android.content.Context.BIND_AUTO_CREATE ) ; }
com.google.javascript.jscomp.newtypes.FunctionType ( com.google.javascript.jscomp.newtypes.FunctionType other ) { if ( ( other == null ) || ( ( ! ( this . isLoose () ) ) && ( other . isLoose () ) ) ) { return this ; } else { com.google.javascript.jscomp.newtypes.FunctionType result = com.google.javascript.jscomp.newtypes.FunctionType .h ( this , other ) ; if ( ( this . isLoose ) && ( ! ( result . isLoose () ) ) ) { result = result . withLoose () ; } return result ; } }
java.lang.System.out . println ( "Mapping Base directory." )
{ if ( font != null ) g . setColor ( color ) ; if ( ( font ) != null ) g . setFont ( font ) ; sokoban.game.utils.TextDrawer . drawString ( g , x , y , strings ) ; }
new com.jagrosh.jdautilities.commandclient.CommandBuilder.BlankCommand ( name , help , category , arguments , guildOnly , requiredRole , ownerCommand , ( ( com.jagrosh.jdautilities.commandclient.Command [] ) ( children . toArray () ) ) , ( ( com.jagrosh.jdautilities.commandclient.Command [] ) ( children . toArray () ) ) , helpBiConsumer , usesTopicTags , this . execution . accept ( this , event ) ; }
{ org.eclipse.swt.graphics.Cursor oldCursor = ( ( org.eclipse.swt.graphics.Cursor ) ( control . getData ( "pdetools-old-cursor" ) ) ) ; if ( oldCursor . isDisposed () ) { oldCursor = null ; } control . setCursor ( oldCursor ) ; }
{ super . onSelectionChanged ( selStart , selEnd ) ; android.util.Log . v ( "before" , java.lang.String . valueOf ( state . isUnderLineEnable () ) ) ; changeSpanStateBySelection ( selStart ) ; }
public javafx.scene.control.Button toButton () { javafx.scene.control.Button button = new javafx.scene.control.Button ( this . label ) ; button . setGraphic ( ( ( this . graphic ) != null ? this . graphic . get () : null ) ) ; button . setUserData ( this ) ; return button ; }
{ if ( objects . containsKey ( clazz ) ) { return clazz . cast ( objects . get ( clazz ) ) ; } traversedClasses = new java.util.HashSet <> ( traversedClasses ) ; }
java.util.Arrays . asList ( ( ( java.lang.Integer [] ) ( net.minecraftforge.common.config.TypeAdapters.TypeAdapter . getObject ( instance , field ) ) ) )
{ com.parallels.desktopcloud.ParallelsDesktopCloudRetentionStrategy.LOGGER . log ( java.util.logging.Level.SEVERE , "CheckP computer %s" , c . getName () ) ; if ( c . isOffline () ) return 1 ; try { com.parallels.desktopcloud.ParallelsDesktopCloudRetentionStrategy.LOGGER . log ( java.util.logging.Level.SEVERE , "Disconnecting computer..." ) ; c . disconnect ( null ) . get () ; c . getNode () . terminate () ; } catch ( java.lang.Exception e ) { com.parallels.desktopcloud.ParallelsDesktopCloudRetentionStrategy.LOGGER . log ( java.util.logging.Level.SEVERE , "Error: %s" , e ) ; } return 1 ; }
@ javax.annotation.security.RolesAllowed ( value = org.votingsystem.web.currency.util.AuthRole.ADMIN ) @ org.votingsystem.web.currency.jaxrs.Path ( value = "/user/id/{userId}/{year}" ) @ org.votingsystem.web.currency.jaxrs.GET @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response userYear ( @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "userId" ) long userId ) throws java.lang.Exception { java.util.Calendar calendar = org.votingsystem.web.currency.jaxrs.DateUtils . getCalendar ( year , 1 , 1 ) ; org.votingsystem.model.User user = dao . find ( org.votingsystem.model.User . class , userId ) ; if ( user == null ) return javax.ws.rs.core.Response . status ( Response.Status.NOT_FOUND ) . entity ( ( "ERROR - User not found - userId: " + userId ) ) . build () ; return getUserBalancesDto ( user , org.votingsystem.web.currency.jaxrs.DateUtils . getYearPeriod ( calendar ) ) ; }
this . findRecords ( matchingEvent , candidateEvents , candidate )
if ( ( expression . length () ) > end ) { java.lang.String quantifier = java.lang.String . valueOf ( expression . charAt ( ( end + 1 ) ) ) ; if ( ! ( isQuantifier ( quantifier ) ) ) { end ++ ; } }
if ( random_instance > ( used.length ) ) random_instance = 0 ;
{ java.util.List < java.lang.Long > ids = new java.util.ArrayList <> () ; for ( com.playposse.peertopeeroxygen.backend.peerToPeerOxygenApi.model.MissionBean missionBean : requiredMissions ) { ids . add ( missionBean . getId () ) ; } return ids ; }
new java.util.ArrayList < java.lang.String > ()
{ super . setDead () ; net.minecraft.entity.player.EntityPlayer caster = this . getThrower () ; caster . dismountRidingEntity () ; com.teaminfinity.elementalinvocations.handler.PlayerStateHandler . getInstance () . getState ( caster ) . setInvisible ( false ) . setInvulnerable ( false ) ; }
public int getIndexFromValue ( int [] list , int v ) { for ( int i = 0 ; i != ( list.length ) ; i ++ ) { if ( ( list [ i ] ) == v ) return i ; } return 0 ; }
{ java.util.Map < java.lang.String , java.lang.String > credentialsPerMember = org.fogbowcloud.manager.core.plugins.localLongentails.LocalCredentialsHelper . getCredentialsPerRelatedLocalName ( this . properties , request . getRequestingMemberId () ) ; if ( credentialsPerMember . isEmpty () ) { return credentialsPerMember ; } return org.fogbowcloud.manager.core.plugins.localLongentails.LocalCredentialsHelper . getCredentialsPerRelatedLocalName ( this . properties , LocalCredentialsHelper.FOGBOW_DEFAULTS ) ; }
{ com.example.android.uamp.ui.tv.CardPresenter.mContext = parent . getContext () ; android.support.v17.leanback.widget.ImageCardView cardView = new android.support.v17.leanback.widget.ImageCardView ( com.example.android.uamp.ui.tv.CardPresenter.mContext ) ; cardView . setFocusable ( true ) ; cardView . setFocusableInTouchMode ( true ) ; cardView . setBackgroundColor ( com.example.android.uamp.ui.tv.CardPresenter.mContext . getResources () . getColor ( R.color.white ) ) ; return new com.example.android.uamp.ui.tv.CardPresenter.CardViewHolder ( cardView ) ; }
ImagePosition.ABOVE_TEXT . equals ( imageScreenDetails )
@ org.junit.Test public void testFileOperaFuckup ( ) throws java.net.MalformedURLException { net.ontopia.infoset.core.LocatorIF base = new net.ontopia.infoset.impl.basic.URILocator ( "file:/home/larsga/cvs-co/topicmaps/opera/opera.xtm" ) ; net.ontopia.infoset.core.LocatorIF base2 = base . resolveAbsolute ( "opera-template.xtm" ) ; net.ontopia.infoset.core.LocatorIF abs = base2 . resolveAbsolute ( "geography.xtm" ) ; org.junit.Assert . assertTrue ( "Two-step true ) ; org.junit.Assert . assertTrue ( "Two-step true ) ; }
{ java.lang.System.out . println ( ( "event type" + ( event . getType () ) ) ) ; java.lang.System.out . println ( ( "event time" + ( event . getType () ) ) ) ; switch ( event . getType () ) { case Event.NEW_PROCESS : createProcess () ; break; case Event.SWITCH_PROCESS : switchProcess () ; break; case Event.END_PROCESS : endProcess () ; break; case Event.IO_REQUEST : processIoRequest () ; break; case Event.END_IO : endIoOperation () ; break; } }
{ org.jsoup.nodes.Document doc = org.jsoup.Jsoup . parse ( currentSong.content , "UTF-8" ) ; org.jsoup.select.Elements chords = doc . select ( "span" ) ; for ( org.jsoup.nodes.Element e : chords ) { android.util.Log . i ( "CHORD" , e . text () ) ; e . text ( transposeChord ( e . text () , sk.m *.ksp.guitarist_swiss_knife.SongViewActivity.UP ) ) ; } }
com.vladimircvetanov.smartfinance.message.Message . message ( this , "Successful logged in." , com.vladimircvetanov.smartfinance.model.Manager . getLoggedUser () . getId () )
<EMPTY>
{ ddf.catalog.transformer.nitf.NitfInputTransformer transformer = new ddf.catalog.transformer.nitf.NitfInputTransformer () ; ddf.catalog.transformer.nitf.ddf.catalog.CatalogFramework catalog = org.mockito.Mockito . mock ( ddf.catalog.CatalogFramework . class ) ; org.mockito.Mockito . when ( catalog . query ( org.mockito.Matchers . any ( ddf.catalog.operation.QueryRequest . class ) ) ) . thenReturn ( new ddf.catalog.operation.impl.QueryResponseImpl ( null , "sourceId" ) ) ; }
{ mainActivity . goToCalendarView () ; }
{ int setCount = ( getFieldCount () ) / ( net.sf.marineapi.nmea.parser.XDRParser.DATA_SET_LENGTH ) ; java.util.ArrayList < net.sf.marineapi.nmea.util.Measurement > result = new java.util.ArrayList < net.sf.marineapi.nmea.util.Measurement > ( setCount ) ; for ( int i = 0 ; i <= setCount ; i += net.sf.marineapi.nmea.parser.XDRParser.DATA_SET_LENGTH ) { net.sf.marineapi.nmea.util.Measurement value = fetchValues ( i ) ; if ( ! ( value . isEmpty () ) ) { result . add ( value ) ; } } return result ; }
{ java.lang.System.out . println ( sub_ ) . add ( sub . toStrRepresentation () ) ; }
@ java.lang.Override public boolean onChildClick ( android.widget.ExpandableListView parent , android.view.View v , int groupPosition , int childPosition , long id ) { final com.wireless.pojo.menuMgr.Kitchen kitchenSelected = mDeptNodes . get ( groupPosition ) . getValue () . get ( childPosition ) . getKey () ; if ( ! ( kitchenSelected . equals ( mCurrentKitchen ) ) ) { mCurrentKitchen = kitchenSelected ; if ( ( mOnKitchenChangeListener ) != null ) { mOnKitchenChangeListener . onKitchenChange ( mCurrentKitchen ) ; } } return true ; }
Card.Suit . values () [ i ]
{ android.content.Intent intent = new android.content.Intent () ; intent . putExtra ( com.zpauly.githubapp.view.repositories.RepoContentActivity.FULL_NAME , full_name ) ; intent . putExtra ( com.zpauly.githubapp.view.repositories.RepoContentActivity.NAME , name ) ; intent . putExtra ( com.zpauly.githubapp.view.repositories.RepoContentActivity.REPO_URL , repo_url ) ; intent . putExtra ( com.zpauly.githubapp.view.repositories.RepoContentActivity.LOGIN , login ) ; intent . setClass ( context , com.zpauly.githubapp.view.repositories.RepoContentActivity . class ) ; context . startActivity ( intent ) ; ( ( android.app.Activity ) ( context ) ) . finish () ; }
{ setLoading ( true ) ; if ( ( ( mUsername ) != null ) && ( ( mPassword ) != null ) ) { com.google.firebase.auth.FirebaseAuth . getInstance () . signInWithEmailAndPassword ( mUsername , mPassword ) . addOnFailureListener ( this ) . addOnCompleteListener ( this ) ; mDataListener . onLogin ( null ) ; } }
if ( ( output . getText () . trim () . isEmpty () ) || ( ! ( output . getText () . trim () . matches ( FieldType.ALPHANUMERIC . getRegex () ) ) ) ) { groupOutput . setValidationState ( ValidationState.ERROR ) ; } else { groupOutput . setValidationState ( ValidationState.NONE ) ; }
{ com.example.yink.amadeus.AlarmReceiver.editor = com.example.yink.amadeus.AlarmReceiver.settings . edit () ; com.example.yink.amadeus.AlarmReceiver.editor . putBoolean ( "alarm_toggle ( "alarm_toggle" , false ) ) ; com.example.yink.amadeus.AlarmReceiver.editor . apply () ; com.example.yink.amadeus.AlarmReceiver.m . release () ; }
public java.lang.String receive () { byte [] data = new byte [ 1024 ] ; java.net.DatagramPacket packet = new java.net.DatagramPacket ( data , data.length ) ; try { socket . receive ( packet ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } java.lang.String message = new java.lang.String ( packet . getData () ) ; return message ; }
org.assertj.core.api.Assertions . assertThat ( numberOfConnectorImplementations )
new org.apache.lens.server.api.error.LensException ( org.apache.lens.cube.error.LensCubeErrorCode.COULD_NOT_PARSE_ null )
( ( ( ! ( procesingUnHelper ) ) && ( ( shard.contig.referenceName ) != null ) ) && ( ! ( shard.contig.referenceName . isEmpty () ) ) ) && ( shard.contig.referenceName . equals ( record . getReferenceName () ) )
{ android.net.Uri uri = android.net.Uri . parse ( url ) ; android.widget.Toast . makeText ( cordova . getActivity () , uri . toString () , Toast.LENGTH_LONG ) . show () ; android.content.Intent intent = new android.content.Intent ( android.content.Intent.ACTION_VIEW , uri ) ; cordova . getActivity () . startActivity ( intent ) ; }
public java.util.ArrayList < java.lang.String > getHistoryFilePath ( ) throws java.io.IOException { java.lang.String fileContent = configurationFile . readFile () ; storage.ConfigurationFileOperation.logger . info ( storage.ConfigurationFileOperation.MESSAGE_READ_CONFIGURATION_FILE ) ; try { java.util.ArrayList < java.lang.String > x = converter . getFilePathListFromJsonString ( fileContent ) ; return x ; } catch ( java.lang.Exception e ) { java.util.ArrayList < java.lang.String > x = new java.util.ArrayList < java.lang.String > () ; x . add ( storage.ConfigurationFileOperation.DEFAULT_FILE_NAME ) ; return x ; } }
@ java.lang.Override public java.awt.Component getListCellRendererComponent ( javax.swing.JList list , java.lang.Object value , int index , boolean isSelected , boolean cellHasFocus ) { if ( value == null ) { setText ( "<Select a datasource>" ) ; } else { it.unibz.krdb.obda.model.OBDADataSource datasource = ( ( it.unibz.krdb.obda.model.OBDADataSource ) ( value ) ) ; java.lang.String datasourceUri = datasource . getSourceID () . toString () ; setText ( datasourceUri ) ; } return this ; }
{ btns . clearSelection () ; b . setSelected ( true ) ; }
( genericTypes.length ) > 0
fail ( "Expected exception" )
com.cedarsoftware.util.io.JsonParser . error ( "Expected ',' or ']' inside array" )
public static com.rgi.android.geop <.GeoPackage createGeoPackage ( final java.lang.String tableName , final java.lang.String columnName , final java.io.File testFile ) throws com.rgi.android.geoping.verification.ConformanceException , java.io.IOException , java.lang.ClassNotFoundException , java.sql.SQLException { com.rgi.android.geopJ.GeoPackage gpkg = new com.rgi.android.geopackage.GeoPackage ( testFile , com.rgi.android.geopackage.GeoPackage.OpenMode.Create ) ; try { gpkg . close () ; geoping.GeoPackageSchemaAPITest . createTable ( tableName , columnName , testFile ) ; return new com.rgi.android.geopackage.GeoPackage ( testFile , com.rgi.android.geopackage.verification.VerificationLevel.None , com.rgi.android.geopackage.GeoPackage.OpenMode.Open ) ; } finally {} }
{ boolean value = intent . getBooleanExtra ( "ACTION" , false ) ; android.util.Log . d ( com.home.pete.aquarium.MainActivity.TAG , "Toggling UV state" ) ; com.home.pete.aquarium.Intent msg = new com.home.pete.aquarium.Intent ( "uv-state" ) ; msg . putExtra ( "ACTION" , value ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( context ) . sendBroadcast ( msg ) ; }
{ if ( ( firebaseAuth . getCurrentUser () ) == null ) { android.content.Intent loginIntent = new android.content.Intent ( this , com.mobapde.vince.mobapde.LoginActivity . class ) ; loginIntent . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TOP ) ; finish () ; startActivity ( loginIntent ) ; } }
{ models.items.takeable.TakeableItem currentItem = itemNodeArrayList . get ( selectedItemIndex ) . getItem () ; if ( currentItem . isEquipable () ) { entity . equipItem ( ( ( models.items.takeable.equippable.EquippableItem ) ( currentItem ) ) ) ; } else {} }
{ if ( ( serialPort ) != null ) { serialPort . removeEventListener () ; serialPort . close () ; } if ( ( input ) != null ) { input . close () ; input = null ; } if ( ( edu.ncku.uscc.io.DehumidRoomController.output ) != null ) { edu.ncku.uscc.io.DehumidRoomController.output . close () ; edu.ncku.uscc.io.DehumidRoomController.output = null ; } }
{ if ( name == null ) { io.cloudracer.LOGGER . error ( "No name provided for TestLog4j2Appender" ) ; return null ; } if ( layout == null ) { layout = org.apache.logging.log4j.core.layout.PatternLayout . createDefaultLayout () ; } io.cloudracer.LogMonitor . setLogMonitor ( new io.cloudracer.LogMonitor ( name , filter , layout , true ) ) ; return io.cloudracer.LogMonitor . getLogMonitor () ; }
@ com.name.banApplication.controllers.RequestMapping ( method = RequestMethod.POST ) public org.springframework.web.servlet.ModelAndView AddSection ( java.lang.String "redirect:/section" ) public org.springframework.web.servlet.ModelAndView AddSection ( java.lang.String "redirect:/section" ) { if ( courseID . isEmpty () ) { return null ; } else { com.name.nameApplication.entities.Course course = courseRepository . findOne ( courseID ) ; com.name.nameApplication.entities.Section n = new com.name. textApplication.entities.Section () ; n . setFirstName ( ProfessorFirstname ) ; n . setLastName ( ProfessorLastname ) ; n . setSectionNumber ( sectionnumber ) ; sectionRepository . save ( n ) ; }
if ( u.sectors . size () ) units . remove ( u ) ;
{ javax.servlet.http.HttpServletRequest request = ( ( javax.servlet.http.HttpServletRequest ) ( req ) ) ; ar.edu.itba.it.paw.UserManager userManager = new ar.edu.itba.it.paw.SessionUserManager ( request ) ; if ( userManager . existsUser () ) { request . setAttribute ( "user" , userManager . getUser () ) ; } else { request . setAttribute ( "user" , null ) ; } return false ; }
org.opendaylight.yangtools.yang.data.api.schema..keyedListNode . findNode ( segment , asPathChoice , asPathList , asPathSequence )
{ java.io.FileWriter in = new java.io.FileWriter ( new java.io.File ( "./src/main/resources/users.csv" ) , false ) ; for ( model.User _user : services.UserDatabaseInterface.userData ) { java.lang.String userInfo = ( _user . toString () ) + "\n" ; in . append ( userInfo ) ; } in . close () ; }
statement . executeUpdate ( " where id=1" )
{ filteredBacklog . clear () ; for ( com.iskrembilen.quasseldroid.protocol.state.IrcMessage msg : - 1 ) { msg . setFiltered ( com.iskrembilen.quasseldroid.protocol.state.Client . getInstance () . getIgnoreListManager () . matches ( msg ) ) ; if ( ! ( isMessageFiltered ( msg ) ) ) { if ( ( getMarkerLineMessage () ) == ( msg.messageId ) ) isMarkerLineFiltered = false ; filteredBacklog . add ( msg ) ; } else if ( ( getMarkerLineMessage () ) == ( msg.messageId ) ) isMarkerLineFiltered = true ; } }
{ org.luwrain.core.NullCheck . notNull ( app , "app" ) ; if ( ( activeAppIndex ) < 0 ) return true ; if ( ( apps . get ( activeAppIndex ) . app ) == app ) return true ; return false ; }
{ java.lang.Integer W0 = new java.lang.Integer ( arg0 . getBWH () . split ( " " ) [ 0 ] . substring ( 1 ) ) ; java.lang.Integer W1 = new java.lang.Integer ( arg1 . getBWH () . split ( " " ) [ 0 ] . substring ( 1 ) ) ; return W0 . compareTo ( W1 ) ; }
java.lang.Long . parseLong ( currentVolume ) ;
{ java.util.Map < java.lang.String , java.lang.String > properties = new java.util.HashMap <> () ; properties . put ( DolphinPlatformConfiguration.EVENTBUS_TYPE , com.canoo.dolphin.server.event.DistributedEventBusProvider.DI ,ED_EVENTBUS_NAME ) ; properties . put ( com.canoo.dolphin.server.event.DistributedEventBusConfigProvider.HAZELCAST_SERVER_NAME , com.canoo.dolphin.server.event.DistributedEventBusConfigProvider.HAZELCAST_SERVER_NAME , com.canoo.dolphin.server.event.DistributedEventBusConfigProvider.HAZELCAST_SERVER_PORT , com.canoo.dolphin.server.event.DistributedEventBusConfigProvider.HAZELCAST_SERVER_PORT , com.canoo.dolphin.server.event.DistributedEventBusConfigProvider.DEFAULTZELCAST_SERVER_PORT , com.canoo.dolphin.server.event.DistributedEventBusConfigProvider.DEFAULT_HAZELCAST_GROUP_NAME ) ; return null ; }
try { activeExecution . interrupt () ; } catch ( java.lang.Throwable ex ) { throw new java.lang.IllegalStateException ( "Error stopping input reader thread" , ex ) ; }
{ if ( other == null ) { return false ; } if ( other == null ) { return false ; } if ( other . isArray () ) { if ( ( java.lang.Math . abs ( other ) ) ) { if ( ( java.lang.Math . abs ( other ) ) == null ) { return false ; } } } return false ; }
{ if ( ( me . getX () ) == ( me . getY () ) ) { setCursor ( java.awt.Cursor . getPredefinedCursor ( java.awt.Cursor.HAND_CURSOR ) ) ; } else { setCursor ( java.awt.Cursor . getPredefinedCursor ( java.awt.Cursor.CROSSHAIR_CURSOR ) ) ; } isSelected = false ; }
public boolean addNetworkUser ( java.net.InetAddress IP ) { if ( ( user_ledger . containsKey ( username ) ) || ( username == ( own_user_name ) ) ) { return false ; } user_ledger . put ( username , IP ) ; filemanager . addUser ( username ) ; gui . addUser ( username ) ; showState () ; return true ; }
{ me.ryanhamshire.grief.ion.PlayerData playerData = GriefPrevention.instance.dataStore . getPlayerData ( this . world , user . getUniqueId () ) ; if ( ( playerData != null ) && ( playerData.ignoreClaims ) ) { return true ; } if ( playerData.debugClaimPermissions ) { return false ; } if ( user . getUniqueId () . equals ( this . ownerID ) ) { return true ; } if ( ( this . parent ) != null ) { return this . parent . hasFullAccess ( user ) ; } return false ; }
potential + ( ( int ) ( bullets ) )
{ final java.lang.String className = getJoinPointClassName ( currentJoinPoint ) ; final java.lang.Object [] classArgs = getJoinPointArguments ( currentJoinPoint ) ; final java.lang.String stringClassArgs = convertJoinpointArgsToString ( classArgs ) ; final java.lang.String formattedReturnValue = extractJoinPointReturnValue ( className , returnValue ) ; if ( formattedReturnValue == null ) { formattedReturnValue = "" ; } buffer . putInt ( assertEqualsorviz.live_trace_processing.main.MonitoringStringRegistry . getIdForString ( formattedReturnValue ) ) ; }
list . toArray ( new java.lang.Object [ input.length ] )
{ defaultEntity = new com.hida.model.DefaultSetting ( "" , "" , com.hida.model.TokenType.DIGIT , "ddddd" , 5 , true , true , true ) ; DefaultSettingDao . save ( defaultEntity ) ; }
{ com.android.commands.sm.Sm . showUsage () ; }
public void add ( java.lang.String type , this . heap . get ( getParent ( index ) ) ) { heap . add ( false ) ; int index = ( heap . size () ) - 1 ; while ( ( index > 1 ) && ( ( heap . get ( getParent ( index ) ) . compareTo ( false ) ) > 0 ) ) { heap . set ( index , heap . get ( getParent ( index ) ) ) ; index = getParent ( index ) ; heap . set ( index , false ) ; } }
@ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/all" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response retrieveAllPets () { final java.util.List < pet.shop.api.domain.Pet > petList = petShopApiService . retrieveAllPets () ; final java.util.List < pet.shop.api.controller.model.PetControllerModel > petControllerModelList = new java.util.ArrayList <> () ; for ( final pet.shop.api.domain.Pet petList ) { final pet.shop.api.controller.model.PetControllerModel petControllerModel = petControllerMapper . mapTo ( pet ) ; petControllerModelList . add ( petControllerModel ) ; } return javax.ws.rs.core.Response . ok () . entity ( petControllerModelList . get ( 0 ) ) . build () ; }
{ reconnectFuture . cancel ( false ) ; if ( ( localDevice ) != null ) { localDevice . terminate () ; localDevice = null ; node . removeChild ( bacnet.BacnetConn.ACTION_STOP ) ; } statnode . setValue ( new org.dsa.iot.dslink.node.value.Value ( bacnet.BacnetConn.NODE_STATUS_STOPPED ) ) ; }
{ java.util.Collection < org.cytoscape.model.CyColumn > columns = network . getDefaultNodeTable () . getColumns () ; java.util.List < java.lang.String > intList = new java.util.ArrayList < java.lang.String > () ; for ( org.cytoscape.model.CyColumn column : columns ) { if ( column . getType () . equals ( java.lang.Integer . class ) ) { intList . add ( column . getName () ) ; } } return intList ; }
org.cnx.android.utils.CNXUtil . getCoverId ( book , context )
{ byte [] bytes = message . getHeader () ; byte [] pl = message . getPayload () ; out . write ( message . getHeader () ) ; out . write ( message . getPayload () ) ; }
{ java.lang.System.out . println ( response . body () ) ; if ( response != null ) { com.block.okokrello.KeyResultsActivity.trelloCard . setChecklists ( response . body () ) ; com.block result.okrello.KeyResultsActivity.keyResults = com.blockk.okrello.KeyResultsActivity.trello.KeyResultsActivity.trello.KeyResultsActivity.trelloCard . getKeyResultsCheckitems () ; keyResultAdapter . updateData ( com.blockk.okrello.KeyResultsActivity.keyResults ) ; com.block.okrello.KeyResultsActivity.keyresProgressBar . setVisibility ( View.INVISIBLE ) ; } }
{ com.example.vietnguyen.core.utils.MU . hideSofeKeyboard ( activity ) ; note.message = getEditText ( R.id.edt_fragment_note_detail ) . getText () . toString () ; note.date = new java.util.Date () ; note . save () ; activity . backOneFragment () ; }
{ if ( step == 0 ) super . step ( model , step , substep ) ; neutrality.MarketInfo mi = getModel () . getMarketInformation ( ( step - 1 ) ) ; double []tNetInvest = mi.nspNetworkInvestment ; makeNetworkInvestment ( step , androidtNetInvest ) ; }
java.lang.String z
@ org.junit.Before public void init ( ) throws java.io.IOException , java.sql.SQLException { org.maxgamer.rs.TitanTest.initialized = true ; org.maxgamer.rs.core.Core . start () ; while ( ( org.maxgamer.rs.core.Core . getServer () . getTicks () ) <= 0 ) { java.lang.Thread . sleep ( 10 ) ; } }
return ( java.lang.Double . valueOf ( map1 . get ( key ) . toString () ) ) <= ( java.lang.Double . valueOf ( map2 . get ( key ) . toString () ) ) ;
if ( isFavorite ) { mDatabaseReferenceFavs . child ( trip . getId () ) . removeValue () ; unfavoriteTrip ( viewHolder.ivFavorite ) ; } else { mDatabaseReferenceFavs . child ( trip . getId () ) . setValue ( trip ) ; favoriteTrip ( viewHolder.ivFavorite ) ; }
this . scopeEndIndex = this . sourceLength
if ( ( lendDetailsFragment ) != null ) { lendDetailsFragment . setLend ( lend ) ; } else { android.content.Intent intent = new android.content.Intent ( this , org.bbt.kiakoa.LendDetailsActivity . class ) ; intent . putExtra ( LendDetailsActivity.EXTRA_LEND , lend ) ; startActivity ( intent ) ; }
{ offset = graph . getFinalNodes () . size () ; offset = ( offset == 1 ) ? offset - 1 : offset - 2 ; return ( ( graph . edgeCount () ) - ( ( graph . size () ) - offset ) ) + 2 ; }
{ x = xStart ; fadeOut . stop () ; jDialog . setVisible ( false ) ; }
public void botJailTurn () { if ( ( getCash () ) >= 50 ) { if ( ( _jailTurns ) >= 3 ) { _jailTurns = 0 ; _inJail = false ; charge ( 50 ) ; } else _jailTurns += 1 ; } else { if ( ( _jailTurns ) >= 3 ) { autoMortgage ( 50 ) ; if ( ( getCash () ) < 50 ) return; else { charge ( 50 ) ; return; } } } else { _jailTurns += 1 ; } }
{ for ( org.lwjgl.util.Point point : currentPiece . getPoints () ) { if ( ( ( ( ( point . getX () ) > ( board [ 0 ] . length ) ) || ( ( point . getY () ) > ( board.length ) ) ) || ( ( point . getX () ) < 0 ) ) || ( ( point . getY () ) < 0 ) ) return false ; } }
{ if ( txt . matches ( "^\\s*$" ) ) { return; } this . content . insert ( bkm . getStart () , txt ) ; for ( com.ibm.util.merge.Bookmark theBookmark : this . print ) { if ( ( theBookmark . getStart () ) >= ( bkm . getStart () ) ) { theBookmark . offest ( txt . length () ) ; } } return; }
{ super . onStart () ; android.util.Log . i ( com.b.emsqlconnect.ResponderCallToActionFragment.FRAGMENT_TAG , "onStart Enter" ) ; android.widget.Button yesResponse = ( ( android.widget.Button ) ( rootView . findViewById ( R.id.yesResponse ) ) ) ; yesResponse . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { android.util.Log . i ( com.b.emsqlconnect.ResponderCallToActionFragment.FRAGMENT_TAG , " day() - Responder: if ( ( callback ) != null ) ) { callback . onResponderCallToActionFragmentListener () ; } } ) ; } } ) ;
mCurrentFragment . doAdapter ( container )
{ titleTextView = ( ( android.widget.TextView ) ( findViewById ( R.id.main_title_textView_id ) ) ) ; subTitleTextView = ( ( android.widget.TextView ) ( findViewById ( R.id.main_subTitle_textView_id ) ) ) ; registerButton = ( ( android.widget.Button ) ( findViewById ( R.id.main_register_button_id ) ) ) ; ifButton = ( ( android.widget.Button ) ( findViewById ( R.id.main_polling_button_id ) ) ) ; }
{ if ( vagas [ i ] ) { paineis [ i ] . setBackground ( java.awt.Color.green ) ; } else paineis [ i ] . setBackground ( java.awt.Color.red ) ; }
{ switch ( item . getItemId () ) { case R.id.action_settings : android.content.Intent settingsIntent = new android.content.Intent ( this , com.stationmillenium.android.activities.SharedPreferencesActivity . class ) ; startActivity ( settingsIntent ) ; return true ; default: return super . onOptionsItemSelected ( item ) ; } }
{ java.util.ArrayList < java.lang.String > dbString = dbHandler . databaseToString ( ( ( java.lang.String [] ) ( dbString . toArray () ) ) ) ; accountDisplay . setAdapter ( new android.widget.ArrayAdapter < java.lang.String > ( this , android.R.layout.simple_list_item_1 , arr ) ) ; }
@ java.lang.Override public void onClick ( android.view.View view ) { if ( mFlashOn ) { runArtificialFlash () ; makeToast ( "Artificial dataing" ) ; } final android.os.Handler handler = new android.os.Handler () ; final java.lang.Runnable r = new java.lang.Runnable () { public void run () { mCamera . takePicture ( mShutterCallback , mRawCallback , null , mJPEGCallback ) ; } } ; handler . postDelayed ( r , 800 ) ; }
public com.oracle.truffle.r.runtime.nodes.RSyntaxNode getArgumentNode ( java.lang.Object arg ) { if ( arg instanceof com.oracle.truffle.r.runtime.data.RPromise ) { com.oracle.truffle.r.runtime.data.RPromise p = ( ( com.oracle.truffle.r.runtime.data.RPromise ) ( arg ) ) ; return p . getRep () . asRSyntaxNode () ; } else if ( ! ( arg instanceof com.oracle.truffle.r.runtime.data.RMissing ) ) { return com.oracle.truffle.r.nodes.access.ConstantNode . create ( arg ) ; } return null ; }
{ biz.neustar.pc.ui.manager.impl.PersonalCloudManagerImpl.LOGGER . info ( "In authenticate cloud name {} and csp {}" , cspCloudName , cspCloudName ) ; com.sun.jersey.api.representation.Form form = new com.sun.jersey.api.representation.Form () ; form . add ( "password" , password ) ; biz.neustar.pcloud.ResponseData responseData = pcRestClient . post ( java.text.MessageFormat . format ( UIRestPathConstants.PERSONAL_CLOUD_AUTH_API , cspCloudName , cspCloudName ) , form ) ; return responseData . getBody () ; }
{ generateCommonFiles () ; for ( com.codegen.model.ClassDefinition classDefinition : this . getClassDefinitions () ) { generatePOJO ( classDefinition ) ; generateDTO ( classDefinition ) ; generateServiceInterface ( classDefinition ) ; generateServiceImpl ( classDefinition ) ; generateDAOInterface ( classDefinition ) ; generateDAOImpl ( classDefinition ) ; } generateSQLScript () ; }
{ shape . setPosition ( 100 , 200 ) ; shape2 . setPosition ( ( - 100 ) , ( - 200 ) ) ; shape . mirrorHorizontal ( shape . getGravityCentre () . getMiddlePoint ( shape2 . getGravityCentre () ) ) ; assertEquals ( ( - 100.0 ) , shape . getX () , 1.0E-5 ) ; assertEquals ( 200.0 , shape . getY () , 1.0E-5 ) ; }
public void getTextFromActivity ( android.view.View view ) { textInString = editTextInput . getText () . toString () ; } if ( ( textInString == null ) || ( textInString . isEmpty () ) ) { doToast ( getString ( R.string.CheckText4Analyze ) ) ; return; } intent . putExtra ( "textInString" , textInString ) ; startActivity ( intent ) ; }
{ crac.utilityModels.TaskSearchLogger.instance.titleColumns = new java.util.ArrayList < java.lang.String > () ; crac.utilityModels.TaskSearchLogger.instance.titleRows = new java.util.ArrayList < java.lang.String > () ; crac.utilityModels.TaskSearchLogger.instance.values = new java.util.HashMap < java.lang.Integer , java.lang.String > () ; crac.utilityModels.TaskSearchLogger.instance.values . clear () ; crac.utilityModels.TaskSearchLogger.instance.values . clear () ; }
new gui.GUI ( false )
{ fileSelecMap . put ( fileName , parseFile ( f ) ) ; if ( ! ( fileSelecMap . containsKey ( fileName ) ) ) { fileNameLists . add ( fileName ) ; fileList . setItems ( javafx.collections.FXCollections . observableArrayList ( fileNameLists ) ) ; } }
{ android.content.Intent intent = new android.content.Intent ( this , io.exis.cards.cards.NameActivity . class ) ; intent . putExtra ( "screenName" , screenName ) ; startActivityForResult ( intent , 1 , android.app.ActivityOptions . makeSceneTransitionAnimation ( this ) . toBundle () ) ; overridePendingTransition ( R.anim.slide_in_right , R.anim.slide_out_left ) ; }
{ if ( sleepTime > 0 ) { try { java.lang.Thread . sleep ( sleepTime ) ; } catch ( java.lang.InterruptedException iex ) {} } resetUpdates () ; executeOneStep () ; _mp . highlightChar ( _pa ) ; _mp . setStack ( _ps . toString () ) ; _mp . refresh ( _updateTa , _updateStack , _updateOutput ) ; }
private java.lang.String [] removeEmptyEntries ( java.lang.String [] queryParts ) { int emptyCount = 0 ; for ( java.lang.String queryPart : queryParts ) { if ( ( queryPart . length () ) == 0 ) emptyCount ++ ; } java.lang.String [] trimmedArray = new java.lang.String [ ( queryParts.length ) - emptyCount ] ; int trimIndex = 0 ; for ( java.lang.String queryPart : queryParts ) { if ( ( queryPart . length () ) != 0 ) { trimmedArray [ trimIndex ] = queryPart ; trimIndex ++ ; } } return trimmedArray ; }
new com.example.brandon.habitlogger.RecyclerViewAdapters.HabitViewAdapter ( habitList , menuItemClickListener , buttonClickListener )
{ java.lang.String itemText = ( ( android.widget.TextView ) ( view ) ) . getText () . toString () ; if ( itemText . equals ( getString ( R.string.drawer_item_sign_out ) ) ) { progressDialog . show () ; accountHandler . signOut () ; } if ( itemText . equals ( getString ( R.string.drawer_item_settings ) ) ) {} }
de.volzo.miscreen.Host . getInstance () . filter ( nsd.hostPort )
switch ( v . getId () ) { case R.id.afegeix : if ( ( ( trobat ) != null ) && ( ( trobat ) != null ) ) { android.content.Intent intent = new android.content.Intent ( getApplicationContext () , com.example.marlen.ventaentrades_idi.llistaObres . class ) ; startActivity ( intent ) ; } finish () ; }
{ findViewById ( R.id.explaining_text ) . setVisibility ( View.GONE ) ; }
( ( name . charAt ( 0 ) ) == '\\' ) || ( name . charAt ( 0 ) )
{ 1 , 1 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 }
{ if ( ( chkEnOHiHatA . isSelected () ) || ( chkEnOHiHatB . isSelected () ) ) { if ( ! ( cBoxPortOHiHat . isEnabled () ) ) cBoxPortOHiHat . setEnabled ( true ) ; } else { cBoxPortOHiHat . removeAll () ; cBoxPortOHiHat . addItem ( "" ) ; cBoxPortOHiHat . setEnabled ( false ) ; } }
{ super . onCreate ( savedInstanceState ) ; mPageChangeListener = new com.pratilipi.mobile.android.homescreen.home.HomeFragment.HomePageChangeListener () ; java.util.ArrayList < java.lang.String > stringArrayList = new java.util.ArrayList <> () ; mProgressHandler = new com.pratilipi.mobile.android.widget.AnimatedProgressIndicator ( mActivity , stringArrayList ) ; setRetainInstance ( true ) ; }
{ robotState = org.usfirst.frc.team45.robot.RobotState . getInstance () ; robotState . start () ; robotArm = org.usfirst.frc.team45.robot.RobotArm . getInstance () ; robotShooter = org.usfirst.frc.team45.robot.RobotShooter . getInstance () ; joystick = new edu.wpi.first.wpilibj.Joystick ( org.usfirst.frc.team45.robot.Robot.JOYSTICK_PORT ) ; driveBase = new org.usfirst.frc.team45.robot.drivebase.OmniWheel () ; pausableThreads . add ( robotShooter ) ; pausableThreads . add ( robotArm ) ; pausableThreads . add ( driveBase ) ; }
( this . row )
findViewById ( R.id.editText_brand )
s = 0
@ org.junit.Test public void openHelpWindow () { commandBox . clickOnTextField () ; assertHelpWindowOpen ( mainMenu . openHelpWindowUsingAccelerator () ) ; resultDisplay . clickOnTextArea () ; assertHelpWindowOpen ( mainMenu . openHelpWindowUsingAccelerator () ) ; taskListPanel . clickOnListView () ; assertHelpWindowOpen ( mainMenu . openHelpWindowUsingAccelerator () ) ; browserPanel . clickOnWebView () ; assertHelpWindowNotOpen ( mainMenu . openHelpWindowUsingAccelerator () ) ; assertHelpWindowOpen ( mainMenu . openHelpWindowUsingMenu () ) ; assertHelpWindowOpen ( commandBox . runHelpCommand () ) ; }
{ java.lang.System.out . println ( ( ( this . project ) + 1 ) ) ; return; }
a . getSeq () . isSeq ()
removeCover ( hotWords )
@ java.lang.Override public void onSetSwipeBackground ( com.h6ah4i.android.example.advrecyclerview.demo_ds_selection.MyDraggableSwipeableSelectableItemAdapter.MyViewHolder holder , int type ) { int bgRes = 0 ; switch ( type ) { case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_NEUTRAL_BACKGROUND : bgRes = R.drawable.bg_swipe_item_neutral ; break; case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_RIGHT_BACKGROUND : bgRes = R.drawable.bg_swipe_item_left ; break; case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_RIGHT_BACKGROUND : bgRes = R.drawable.bg_swipe_item_right ; break; } holder.itemView . setBackgroundResource ( bgRes ) ; }
{ android.content.Intent intent = new android.content.Intent ( android.content.Intent.ACTION_GET_CONTENT ) ; if ( ( Build.VERSION.SDK_INT ) < 19 ) { intent = new android.content.Intent ( android.content.Intent.ACTION_GET_CONTENT ) ; } else { intent = new android.content.Intent ( android.content.Intent.ACTION_OPEN_DOCUMENT ) ; intent . addCategory ( Intent.CATEGORY_OPENABLE ) ; } }
back . equals ( "b" ) ? true : false
if ( ( targetName != null ) && ( ( targetName . length () ) > 0 ) ) { return - ( targetName ) ; } else { return ( "Target " + ( mode . getTargets () . get ( 0 ) . getTargetName () ) ) + " doesn't - 1 ; }
{ setupConfig = new dcp.logic.model.config.SetupConfig ( appConfig . getDefaultSetupConfig () ) ; dcp.logic.factory.PackFactory . clear () ; packs . clear () ; dcp.logic.factory.GroupFactory . clear () ; groups . clear () ; tabsInit () ; dcp.config.io.IOFactory . setSaveFile ( "" ) ; }
{ if ( ( active ) != null ) active = true ; active = false ; try { java.lang.Thread . sleep ( ( ( secondsNum ) * 1000 ) ) ; } catch ( java.lang.InterruptedException ex ) { java.lang.Thread . currentThread () . interrupt () ; } }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; mInputEdit = ( ( android.widget.EditText ) ( findViewById ( R.id.command_input_edit ) ) ) ; mResultBoard = ( ( android.widget.TextView ) ( findViewById ( R.id.result_board ) ) ) ; mResultBoard . setMovementMethod ( new android.text.method.ScrollingMovementMethod () ) ; findViewById ( R.id.run_command ) . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { runCommand () ; } } ) ; }
{ int min = phasetime . getMinute () ; int sec = phasetime . getSecond () ; double timer = min + ( sec / 60.0 ) ; this . phases [ ( phase - 1 ) ] . getData () . add ( new javafx.scene.chart.XYChart.Data <> ( ( ( double ) ( this . phaseCounter ) ) , timer ) ) ; }
{ com.google.appengine.api.blobstore.BlobKey key = new com.google.appengine.api.blobstore.BlobKey ( "xx" ) ; com.gruppe4b.edivator.backend.service.Image resizeImage = com.gruppe4b.edivator.backend.service.ImagesServiceFactory . makeImageFromBlob ( key ) ; com.gruppe4b.edivator.backend.service.Transform transform ; if ( horizontal == true ) { transform = com.gruppe4b.edivator.backend.service.ImagesServiceFactory . makeHorizontalFlip () ; } else if ( horizontal == false ) { transform = com.gruppe4b.edivator.backend.service.ImagesServiceFactory . makeVerticalFlip () ; } int newId = 0 ; return newId ; }
numOfInstr . get ( ( ( teammates.client.scripts.DataGenerator.MAX_NUM_OF_INSTRUCTOR_PER_COURSES ) - ( teammates.client.scripts.DataGenerator.MIN_NUM_OF_INSTRUCTOR_PER_COURSES ) ) ) + 1 )
public void removeUserSession ( java.lang.String sUserId , java.lang.String sSession ) { for ( int i = 0 ; i < ( nl.ru.crpstudio.CrpUtil.userCache . size () ) ; i ++ ) { nl.ru.crpstudio.UserSession oThis = nl.ru.crpstudio.CrpUtil.userCache . get ( i ) ; if ( ( oThis.userId . equals ( sUserId ) ) && ( oThis.sessionId . equals ( sSession ) ) ) { oThis.userOkay = false ; oThis.sessionId = "" ; return; } } }
com.lwansbrough.RCTCamera.RCTCamera . getInstance () . focusCenter ( options )
private boolean matchesTransaction ( net.nikr.eve.jeveasset.gui.tabs.transaction.MyTransaction transaction , boolean add ) { return ( transaction != null ) && ( matches ( add , transaction . getTypeID () , transaction . getCharacterID () , null , null , transaction . getLocation () , null , null , null , transaction , null ) ) ; }
{ net.torocraft.minecoprocessors.processor.Processor processor = net.torocraft.minecoprocessors.processor.ProcessorTest . setupTest ( 0 , 30 , 0 , 0 , "mov a, b" ) ; processor . processMov () ; assertRegisters ( processor , 30 , 30 , 0 , 0 ) ; processor = net.torocraft.minecoprocessors.processor.ProcessorTest . setupTest ( 0 , 30 , 0 , 0 , "mov a, 51" ) ; processor . processMov () ; }
for ( int i = 1 ; i < ( n / 2 ) ; i ++ ) { if ( ( n % i ) == 0 ) { factors . add ( i ) ; } }
if ( ch != '=' ) { return ( ( peekChar () ) == null ) || ( ( peekChar () ) == '\'' ) ; } else if ( ch == '/' ) { return ( peekChar () ) == 'Update ; } else { return false ; }
{ if ( ( mouseDown ) != null ) return false ; if ( ( ( mouseDown ) != null ) && ( ( mdiagram.data.interactors.model.InteractorEntity ) instanceof org.reactome.web.diagram.data.interactors.model.InteractorEntity ) ) { ( ( org.reactome.web.diagram.data.interactors.model.InteractorEntity ) ( ( ( org.reactome.web.diagram.data.interactors.model.InteractorEntity ) ( 1 ) ) ) ) ; } return true ; }
{ performMixedOperations ( tree ) ; }
if ( throwable instanceof com.lowwor.realtimebus.domain.NetworkInteractor.NetworkUnavailableException ) { return; } else if ( throwable instanceof com.lowwor.realtimebus.domain.NoBusException ) { vista . showError ( com.lowwor.realtimebus.ui.track.ERROR_NO_BUS ) ; } else { vista . showError ( com.lowwor.realtimebus.ui.track.ERROR_NO_BUS ) ; }
{ if ( ! ( ODatabaseRecordThreadLocal.INSTANCE . isDefined () ) ) return null ; com.orientechnologies.orient.object.enhancement.OObjectEntitySerializer.OObjectEntitySerializedSchema serializedSh ) = storage . getResource ( com.orientechnologies.orient.object.enhancement.OObjectEntitySerializer.SIMPLE_NAME , new java.util.concurrent.Callable < com.orientechnologies.orient.object.enhancement.OObjectEntitySerializer.OObjectEntitySerializedSchema > () { @ java.lang.Override public com.orientechnologies.orient.object.enhancement.OObjectEntitySerializer.OObjectEntitySerializedSchema call ( ) throws java.lang.Exception { return new com.orientechnologies.orient.object.enhancement.OObjectEntitySerializer.OObjectEntitySerializedSchema () ; } } ) ; return serializedSh ) ; }
public void setVariables ( java.util.Map < java.lang.Integer , java.lang.Object > data ) { for ( java.util.Map.Entry < java.lang.Integer , java.lang.Object > entry : data . entrySet () ) { binding . setVariable ( entry . getKey () , entry . getValue () ) ; } binding . executePendingBindings () ; }
public void actionPerformed ( java.awt.event.ActionEvent evt ) { VASL.build.module.OBA.Module mod = new VASL.build.module.OBA.Module ( this ) ; VASL.build.module.OBA.CreateModule c = new VASL.build.module.OBA.CreateModule ( this , this . getModuleCount () , mod . getState () ) ; c . execute () ; VASSAL.build.GameModule . getGameModule () . sendAndLog ( c ) ; }
dao = null
{ android.util.Log . e ( com.xugaoxiang.live_vtm.activity.MainActivity.TAG , ( ( ( ( ( ( ( ( ( ( ( ( "name =出错!" + "what:" ) + what ) + ",extra:" ) + extra ) ) + ",extra:" ) + extra ) ) + ",extra:" ) + extra ) ) ) + ",extra:" ; finish () ; return false ; }
{ structs . values () . forEach ( DataStructure : : clear ) ; step = new application.model.Step ( new java.util.HashMap < java.lang.String , wrapper.datastructures.DataStructure > ( structs ) ) ; operations . addAll ( ops ) ; index = 0 ; }
{ java.lang.String type = org.structr.schema.SchemaHelper . normalizeEntityName ( typeResource . getRawType () ) ; if ( org.structr.core.graph.search.SearchCommand . getAllSubtypesAsStringSet ( parentClass . getSimpleName () ) . contains ( type ) ) { return entity ; } }
new android.content.Intent ( context , xyz.belvi.baseauth_firebase.auth.FireAuthActivity . class ) . putExtra ( xyz.belvi.baseauth_firebase.auth.STYLE_KEY , styleRes ) ;
if ( ( cartDataModelList . get ( index ) . index ) == ( item.index ) ) { cartDataModelList . remove ( index ) ; }
vehicles = new java.util.ArrayList ()
org.neo4j.wrapper.LoggingService . initLogger ()
if ( ! isEmpty ) { visible = false ; } else { visible = true ; }
{ mSongs = event.songs ; onSetSongs () ; mCurrentTime = event.time ; mCurrentSongIndex = event.index ; mIsPlaying = event.isPlaying ; mDuration = mSongs . get ( mCurrentSongIndex ) . getFileDuration () ; onReceiveServiceStateSuccess ( false ) ; mIsServiceEmpty = false ; }
new org.wso2.carbon.apimgt.core.impl.APIStoreImpl ( org.wso2.carbon.apimgt.core.impl.AbstractAPIManagerTestCase.USER_NAME , apiDAO , null , null )
@ java.lang.Override public void onPageScrolled ( int position , float positionOffset , int positionOffsetPixels ) { if ( position > 0 ) { if ( ( mTabWidth ) == 0 ) { mTabWidth = ( mViewPager . getWidth () ) / ( mViewPager . getAdapter () . getCount () ) ; } float translationX = ( mTabWidth ) * ( positionOffset + position ) ; setTranslationX ( translationX ) ; } }
ml . setScale ( xScaling , xScaling )
org.talend.mdm.commmon.metadata.annotation.ForeignKeyProcessor . getFieldMetadata ( repository )
{ gameFrame . getGame () . reset () ; }
return java.lang.Boolean.FALSE ;
world . runTick ()
public static void setAutoExposureLock ( boolean lock ) { if ( ( ( com.almalence.opencam.cameracontroller.Camera2Controller.previewRequestBuilder ) != null ) && ( ( com.almalence.opencam.cameracontroller.Camera2Controller . getInstance () . camDevice ) != null ) ) { com.almalence.opencam.cameracontroller.Camera2Controller.previewRequestBuilder . set ( CaptureRequest.CONTROL_AE_LOCK , lock ) ; com.almalence.opencam.cameracontroller.Camera2Controller . setRepeatingRequest () ; android.preference.PreferenceManager . getDefaultSharedPreferences ( com.almalence.opencam.ApplicationScreen . getMainContext () ) . edit () . putBoolean ( ApplicationScreen.sAELockPref , lock ) . commit () ; } }
( intValue >= ( comparison ) )
{ super . writeTo ( out ) ; int numJobs = toKill . size () ; out . put ( numJobs ) ; for ( int i = 0 ; i < numJobs ; i ++ ) { java.util.UUID job = toKill . get ( i ) ; out . writeLong ( job . getMostSignificantBits () ) ; out . writeLong ( job . getLeastSignificantBits () ) ; } }
{ android.content.Intent getIntent = new android.content.Intent ( android.content.Intent.ACTION_GET_CONTENT ) ; getIntent . setType ( "image/*" ) ; android.content.Intent pickIntent = new android.content.Intent ( android.content.Intent.ACTION_PICK , android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI ) ; pickIntent . setType ( "image/*" ) ; android.content.Intent chooserIntent = android.content.Intent . createChooser ( getIntent , "Select Image" ) ; chooserIntent . putExtra ( Intent.EXTRA_INITIAL_INTENTS , new android.content.Intent [] { pickIntent } ) ; }
iia = new javax.swing.ImageIcon ( "snakehead.png" )
new org.eclipse.swt.layout.GridData ( org.eclipse.swt.SWT.FILL , true , true )
return ( entries [ entry ] ) & ( 1L < < offset ) ;
this . getClass () . mustNot ( build ( filterQuery ) )
if ( ( ( mAudioController ) != null ) && ( mAudioController . isAudioPlaying () ) ) { startService ( com.bandonleon.audioservice.AudioService . getStartIdleIntent ( this ) ) ; mAudioController . startForegroundService ( com.bandonleon.audioservice.MainActivity.AUDIO_TRACK_TITLE ) ; }
modelService . getSection ( sectionIdStr ) , getLoggedUserId () , level )
{ getActivity () . runOnUiThread ( new java.lang.Runnable () { @ java.lang.Override public void run () { int i = bnp . getProgress () ; if ( i < count ) { bnp . incrementProgressBy ( 1 ) ; } } } ) ; }
setURI ( getOriginUrl () ) . setDirectory ( java.nio.file.Files . createTempDirectory ( "TestGitRepo" ) . toFile () )
{ ( totalLines ) ++ ; java.lang.String [] str1 = currentLine . replaceAll ( "\\s+" , " " ) . replaceAll ( "\\W" , "" ) . split ( " " ) ; for ( java.lang.String s : str1 ) { lineLengthList . add ( s . length () ) ; totalCharacters += s . length () ; } }
new org.mifosplatform.infrastructure.scheduledemail.domain.EmailMessage ( externalId , group , client )
{ ulm.university.news.controller.Ballot ballot ; ulm.university.news.controller.User requestor = verifyUserAccess ( accessToken ) ; ulm.university.news.controller.GroupController.logger . debug ( ( "The requestor, i.e. the user with id {}, requests the ballot with the id {} from the group with" + " the id {}." ) , requestor . getId () , ballotId , groupId ) ; verifyParticipationInGroupViaDB ( groupId , requestor . getId () ) ; verifyGroupExistenceViaDB ( groupId ) ; ballot = getBallot ( groupId , ballotId , withSubresources ) ; return ballot ; }
( args . length () )
i < userData . size ()
public void initialize () { if ( ( mBluetoothAdapter ) == null ) { return; } final android.bluetooth.BluetoothManager bluetoothManager = ( ( android.bluetooth.BluetoothManager ) ( com.supsi.alessandro.pollutionproblemclient.PollutionApplication . getAppContext () . getSystemService ( Context.BLUETOOTH_SERVICE ) ) ) ; mBluetoothAdapter = bluetoothManager . getAdapter () ; }
if ( ( ( lhs . getFirstName () ) != null ) && ( ( rhs . getFirstName () ) != null ) ) { return lhs . getLastName () . concat ( lhs . getFirstName () ) . compareTo ( rhs . getLastName () . concat ( rhs . getFirstName () ) ) ; } else { return lhs . getLastName () . compareTo ( rhs . getLastName () ) ; }
{ java.lang.System.out . println ( ( "EventSpikeMultiLatch " + ( t ) ) ) ; setFlag () ; for ( gov.sandia.n2a.language.type.Instance i : targets ) { if ( i != null ) { for ( gov.sandia.n2a.language.type.Instance i : targets ) { for ( gov.sandia.n2a.language.type.Instance i : targets ) if ( ! ( i . finish ( simulator ) ) ) i . dequeue () ; } } } ) ; }
if ( ( number ) == null ) { if ( ( ( BaulastenPictureFinder.PATH_RS ) + ( BaulastenPictureFinder.SEP ) ) + ( file ) ) { return ( ( BaulastenPictureFinder.PATH ) + ( BaulastenPictureFinder.SEP ) ) + ( file ) ; } else { return ( ( getFolder ( number , ( ( ( BaulastenPictureFinder.PATH ) + ( BaulastenPictureFinder.SEP ) ) + ( file ) ) + ( file ) ) + ( file ) ) ) ; } }
{ if ( summoner != null ) { model . addAttribute ( newConstants.BASIC_SUMMONER , summoner ) ; return co.porkopolis.utils.FileConstants.INDEX ; } else { model . addAttribute ( newConstants.ERROR , ( ( "Summoner " + ( summonerName . getName () ) ) + " not found." ) ) ; return co.porkopolis.utils.FileConstants.HOME_PAGE ; } }
if ( ( ! ( this . world . isPositionInWorld ( position ) ) ) || ( ! ( isValidPositionForUnit () ) ) ) throw new java.lang.IllegalArgumentException () ;
if ( ( lastPagedReached ) && ( ! ( swipeListenerCalled ) ) ) { onSwipeListener . onAttemptedOnLastPage () ; swipeListenerCalled = true ; }
{ java.lang.System.out . println ( "validarCampos" ) ; java.lang.String username = "" ; java.lang.String password = "" ; com.grupo7.practica.principal instance = new com.grupo7.practica.principal () ; boolean expResult = true ; boolean result = instance . validarCampos ( username , password ) ; assertEquals ( expResult , result ) ; fail ( "The test case is a prototype." ) ; }
{ java.lang.String playerName = Player.find . byId ( request () . username () ) . name ; if ( ! ( playerName . equals ( "admin" ) ) ) { return redirect ( routes.Application . login () ) ; } else { return ok () ; } }
{ j .lm.core.util.List < java.lang.String >lm.core.util.List < java.lang.String > result = new java.util.ArrayList < java.lang.String , java.lang.String > () ; j < java.lang.Integer > j = new java.util.ArrayList < java.lang.String , java.lang.String > () ; j < ( java.lang.String . format ( java.lang.String . format ( java.lang.Integer . toString ( j ) ) ) ) ; j .lm.core.util.util.ArrayList < java.lang.Object > > = new java.lang.String [ 0 ] ; this . conf.trainStreamFactory = new j ;lm.io.FileInputStreamFactory ( new java.io.File ( "data/ptb.train.100.txt" ) ) ; conf.validFile = new java.io.File ( "data/ptb.valid.txt" ) ; conf. protectedSize = 30 ; conf.maxIters = 50 ; conf.fastMath = true ; }
{ java.lang.System.out . println ( output ) ; org.apache.flink.streaming.partitioner.Stream > < T > result = null ; try { java.lang.System.out . println ( ( ( org.apache.flink.streaming.partitioner.Stream ) < T > ) ( org.apache.flink.util.InstantiationUtil . readObjectFromConfig ( this . config , ( ( org.apache.flink.streaming.api.StreamConfig.PARTITIONER_OBJECT ) + output ) , cl ) ) ) ; } catch ( java.lang.Exception e ) { throw new java.lang.RuntimeException ( " ) ; } if ( new org.apache.flink.streaming.partitioner.Shuffle ) < T > () ; return null ; }
className . equals ( classDecl.classId )
public static com.hazelcast.core.HazelcastInstance getHazelcastInstance () { org.osgi.framework.BundleContext ctx = org.osgi.framework.FrameworkUtil . getBundle ( org.wso2.carbon.ntask.core.internal.TasksDSComponent . class ) . getBundleContext () ; org.osgi.framework.ServiceReference < com.hazelcast.core.HazelcastInstance > ref = ctx . getServiceReference ( com.hazelcast.core.HazelcastInstance . class ) ; if ( ref == null ) { return null ; } return ctx . getService ( ref ) ; }
mListViewModel . loadNextPageZhihu ()
{ if ( ( ( grantResults.length ) > 0 ) && ( ( grantResults [ 0 ] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { userLocation = true ; } else { userLocation = false ; } }
{ final java.lang.reflect.Method method = SessionBeanHomeInterceptorFactory.INIT_METHOD . get () ; final java.lang.Object [] params = SessionBeanHomeInterceptorFactory.INIT_PARAMETERS . get () ; return new org.jboss.as.ejb3.component.interceptors.AbstractEJBInterceptor () { @ java.lang.Override public java.lang.Object processInvocation ( final org.jboss.invocation.InterceptorContext context ) throws java.lang.Exception { if ( method != null ) { method . invoke ( context . getTarget () , params ) ; } } ; } ; }
@ java.lang.Override public void run () { this . s = ( ( ETPSYSTEM.ChannelValue ) ( spotcheck . channel . in () . read () ) ) ; ETPSYSTEM.Sum2O.repl2O rep = new ETPSYSTEM.Sum2O.repl2O ( this . spotcheck , this . topa , this . read , this . s , this . ls ) ; org.jcsp.lang.ProcessManager manager = new org.jcsp.lang.ProcessManager ( rep ) ; manager . start () ; }
{ iobuf = com.redhat.ckey.applet.JCSystem . makeTransientByteArray ( com.redhat.ckey.applet.CardEdge.IOBUF_ALLOC , null ) ; if ( ( ( ( ( double ) ( java.lang.Integer ) ( com.redhat.ckey.applet.CardEdge.IOBUF_ALLOC ) ) ) == null ) ) { return false ; } }
private traer.physics.Particle createParticle ( int x , int y ) { traer.physics.Particle newParticle = m_particleSystem . makeParticle ( campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.PARTICLE_MASS , x , y , 0 ) ; for ( int i = 0 ; i < ( m_particleSystem . numberOfParticles () ) ; i ++ ) { traer.physics.Particle p = m_particleSystem . getParticle ( i ) ; if ( p . equals ( newParticle ) ) { continue; } m_particleSystem . makeAttraction ( p , newParticle , campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.REPULSIVE_FORCE ) ; } return newParticle ; }
com.lzh.nonview.router.Router . resume ( uri , extras ) ;
{ camera . update () ; cameraGUI.viewportWidth = com.packtpub.libgdx.canyonbunny.util.Constants.VIEWPORT_GUI_WIDTH ; cameraGUI.viewportHeight = ( ( com.packtpub.libgdx.canyonbunny.util.Constants.VIEWPORT_GUI_HEIGHT ) / ( ( float ) ( height ) ) ) * ( ( float ) ( width ) ) ; cameraGUI.position . set ( ( ( cameraGUI.viewportWidth ) / 2 ) , 0 ) ; cameraGUI . update () ; }
global.HasRegisteredException | java.lang.InterruptedException e
{ finishDB () ; android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; android.content.ContentValues values = getDbValues ( person ) ; long personId = db . insert ( org.rhok.linguist.code.DatabaseHelper.PERSON_TABLE_NAME , null , values ) ; person.personid = ( ( int ) ( personId ) ) ; person.Enabled = false ; db . close () ; }
this . cordova . getActivity ()
r [ i ] . invoke ( pet , pet )
line = ( "" + 1 )
if ( ( left instanceof java.lang.String ) || ( right instanceof java.lang.String ) ) { return ( left . toString () ) + ( right . toString () ) ; } else { return super . add ( left , right ) ; }
if ( index >= ( - 1 ) ) { this . end = java.lang.Math . max ( this . start , index ) ; }
public void openFolder ( java.lang.String folderName ) throws java.lang.Exception { folder = store . getFolder ( folderName ) ; if ( ( folder ) == null ) { throw new java.lang.Exception ( "Invalid folder" ) ; } if ( folder != null ) { if ( ( folder ) == null ) { throw new java.lang.Exception ( "Invalid folder" ) ; } } if ( folder != null ) { folder . open ( id ) ; } }
{ int count = 0 ; for ( int i = 0 ; i < ( java.lang.Math . min ( a . length () , b . length () ) ) ; i ++ ) { if ( ! ( ( a . indexOf ( i ) ) == ( b . indexOf ( i ) ) ) ) return count ; count ++ ; } return count ; }
{ int from = edge . from () ; if ( ! ( edges . containsKey ( from ) ) ) { edges . put ( from , new java.util.HashSet <> () ) ; } java.util.Set < diagraph.DirectedEdge > inputEdges = edges . get ( from ) ; if ( ! ( edges . get ( from ) ) )Edges . add ( edge ) ; }
prep . setString ( 2 , plugin . getConfigManager () . getDefaultRace () ) ;
new org.apache.drill.exec.store.indexr.ScanWrokProvider.CacheKey ( scanId )
{ showDebugAlertDialog ( token ) ; }
( ! ( this . statement1 . isEmpty () ) )
{ java.lang.String alg = "AES" ; java.lang.String key = "TheBestSecreteKe" ; java.security.Key key2 = new javax.crypto.spec.SecretKeySpec ( key . getBytes () , alg ) ; javax.crypto.Cipher cipher = javax.crypto.Cipher . getInstance ( alg ) ; cipher . init ( javax.crypto.Cipher.ENCRYPT_MODE , key2 ) ; byte [] encVal = cipher . doFinal ( data . getBytes () ) ; java.lang.String encryptedValue = java.util.Base64 . getEncoder () . encodeToString ( encVal ) ; }
{ return java.lang.Integer . compare ( this . playerId , rhs.playerId ) ; }
new value.IntegerValue ( 0 )
{ name = name . replace ( "$$" , "/" ) ; name = name . replace ( "$" , "." ) ; consulo.internal.dotnet.asm.mbel.ModuleParser moduleParser = new consulo.internal.dotnet.asm.mbel.ModuleParser ( new java.io.File ( ( "testData/" + name ) ) ) ; moduleParser . parseNext () ; }
java.util.Arrays . asList ( 5 , 5 , 3 , 5 , 3 , 8 , 5 , 6 , 5 , 7 , 3 , 1 )
{ double avg = org.dynami.core.utils.StatUtils . avg ( series ) ; double sum = 0 ; for ( java.lang.Double d : series ) { sum += java.lang.Math . pow ( ( d - avg ) , 2 ) ; } return java.lang.Math . sqrt ( ( ( sum / ( series . size () ) ) - 1 ) ) ; }
protected static void setOmHome () { java.lang.String webappsDir = java.lang.System . getProperty ( "om.home" , "." ) ; org.apache.openmeetings.util.OmFileHelper . setOmHome ( webappsDir ) ; if ( ( ! ( org.apache.openmeetings.util.OmFileHelper . getOmHome () . exists () ) ) || ( ! ( org.apache.openmeetings.util.OmFileHelper . getOmHome () . isDirectory () ) ) ) { org.junit.Assert . fail ( ( "Invalid directory is specified as ) ) ; } }
{ java.lang.String temp = java.lang.Integer . toHexString ( number ) ; int length = temp . length () ; for ( int i = 0 ; i < ( 4 - length ) ; i ++ ) temp += "0" + temp ; return temp ; }
@ com.sun.istack.internal.NotNull java.lang.Object other
saveService . saveDataValue ( SaveEnum.SCENE_CODE , 0 )
{ hideContextPopups () ; time . set ( t ) ; }
public static < T > void serialize ( T object , java.lang.Class < T > sourceClass , java.io.OutputStream resultStream , java.lang.String schemaLocation ) throws javax.xml.bind.JAXBException { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext . newInstance ( sourceClass ) ; javax.xml.bind.Marshaller jaxbMarshaller = jaxbContext . createMarshaller () ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_SCHEMA_LOCATION , schemaLocation ) ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT , true ) ; jaxbMarshaller . marshal ( object , resultStream ) ; }
public void run () { if ( ! ( args . isNull ( 0 ) ) ) { java.lang.String inputMode_s = args . get ( 0 ) ; int inputMode_i = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_NOTHING ; if ( inputMode . equals ( "pan" ) ) { inputMode_i = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_PAN ; } else if ( inputMode . equals ( "View" ) ) { inputMode_i = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_RESIZE ; } cordova . getActivity () . getWindow () . setSoftInputMode ( inputMode_i ) ; } else { callbackContext . error ( "No arguments found" ) ; } callbackContext . success () ; }
{ channel = servletRequestContext . getExchange () . getResponseChannel () ; channel . getWriteSetter () . set ( internalListener ) ; if ( ( internalListener ) != null ) { channel . resume () ; } }
{ int idxInRow = 0 ; int startVertex = row * numInRow ; int currVertex = startVertex ; while ( idxInRow < numInRow ) { addFace ( currVertex , ( currVertex + 1 ) , ( ( currVertex + numInRow ) + 1 ) , ( currVertex + numInRow ) ) ; currVertex ++ ; idxInRow ++ ; } }
{ T object ; object = com.robertsmieja.test.utils.junit.Internal . createObjectFromDefaultConstructor ( aClass ) ; for ( java.lang.reflect.Field field : fields ) { setValueForField ( field , object , valueMap ) ; } return object ; }
{ removeIndex ( record ) ; mapDataStore . remove ( key , now ) ; }
new org.rstudio.studio.client.workbench.views.terminal.TerminalSession ( sequence , terminalHandle )
test . equals ( "1.jpg" )
for ( final T each : getFilteredChildren () ) { for ( final T each : getFilteredChildren () ) { scheduler . schedule ( new java.lang.Runnable () { public void run () { org.junit.runners.String . this . runChild ( each , notifier ) ; } } ) ; } }
public void setStartDate ( java.util.Optional < java.util.List < java.util.Date > > startDate ) { try { java.util.List < java.util.Date > dateList = startDate . get () ; if ( ( dateList . size () ) == 2 ) { this . startDate = java.util.Optional . of ( startDate . get () . get ( 0 ) ) ; } else { this . startDate = java.util.Optional . empty () ; } } catch ( java.util.NoSuchElementException nse ) { throw new java.lang.IllegalArgumentException () ; } }
new java.util.NoSuchElementException ()
{ dist = 0 ; android.util.Log . i ( "Action" , "RESET GESTURE" ) ; setContentView ( R.layout.test_gesture ) ; resetButton = ( ( android.widget.Button ) ( findViewById ( R.id.gesture_test_button ) ) ) ; resetButton . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View view ) { reDrawGestureView () ; } } ) ; }
{ prefs . setUseDefaultCommand ( b_cmdFromPath . getSelection () ) ; java.lang.String command = t_cmd . getText () . trim () ; prefs . setCommand ( command ) ; final org.eclipse.jface.viewers.IStructuredSelection sel = ( ( org.eclipse.jface.viewers.IStructuredSelection ) ( c_generator . getSelection () ) ) ; prefs . setGenerator ( ( ( de.marw.cdt.cmake.core.internal.CmakeGenerator ) ( sel . getFirstElement () ) ) ) ; }
public void run () { tvAddress . setText ( address ) ; etPaymentId . setEnabled ( true ) ; etAmount . setEnabled ( true ) ; bPaymentId . setEnabled ( true ) ; hideProgress () ; generateQr () ; }
{ cMsg = new org.wso2.carbon.messaging.StatusCarbonMessage ( org.wso2.carbon.transport.http.netty.common.Constants.STATUS_OPEN , 0 , null ) ; javax.websocket.Session session = new org.wso2.carbon.transport.http.netty.internal.websocket.WebSocketSessionImpl ( ctx , isSecured , uri , channelId ) ; setupCarbonMessage ( ctx ) ; cMsg . setProperty ( Constants.CONNECTION , Constants.UPGRADE ) ; }
if ( minutes > 60 ) { hours ++ ; minutes -= 60 ; }
{ mName = newHeroName ; java.lang.String imageName = mParentPresenter . getHeroImageName ( newHeroName ) ; for ( int i = 0 ; i < ( mSimilarityList . size () ) ; i ++ ) { if ( mSimilarityList . get ( i ) . equals ( imageName ) ) { mView . setHeroInRecycler ( i ) ; break; } } mParentPresenter . hideKeyboard () ; mParentPresenter . sendUpdatedHeroList () ; }
intent1 . putExtra ( Params.BUSINESS_OWNER , null )
{ double discount = 1.0 ; if ( ( p . getMiles () ) > ( ooptraining.DiscountCalculator.SILVER_LIMIT ) ) { discount = ooptraining.DiscountCalculator.SILVER_DISCOUNT ; } else if ( ( p . getMiles () ) > ( ooptraining.DiscountCalculator.GOLD_LIMIT ) ) { discount = ooptraining.DiscountCalculator.GOLD_DISCOUNT ; } return discount ; }
compileAndLogTestSequences ( result , params )
{ javafx.scene.control.CheckBox cb = ( ( javafx.scene.control.CheckBox ) ( event . getSource () ) ) ; if ( cb . isSelected () ) { for ( application.ResultTable resultTableRow : resultTable . getItems () ) { resultTableRow . setTrace ( true ) ; } } else { for ( application.ResultTable resultTableRow : resultTable . getItems () ) { resultTableRow . setTrace ( false ) ; } } }
{ java.lang.System.out . println ( "create next round" ) ; if ( ( currentGridNum ) >= ( beetle_kit.Est.Game.MAX_NUM_ROUNDS ) ) { javax.swing.JPanel panel = createEndGamePanel () ; javax.swing.JOptionPane . showOptionDialog ( this , panel , "Congratulations!!!" , javax.swing.JOptionPane.DEFAULT_OPTION , javax.swing.JOptionPane.PLAIN_MESSAGE , null , new java.lang.Object [] {} , null ) ; return; } createNewGrid () ; }
a . getY ()
public com.bagri.core.system.Collection getTypedCollection ( com.bagri.core.system.Schema schema , java.lang.String typePath ) { for ( com.bagri.core.system.Collection collect : schema . getCollections () ) { java.lang.String cPath = collect . getDocumentType () ; if ( ( cPath != null ) && ( typePath . equals ( cPath ) ) ) { return collect ; } } return null ; }
{ java.util.Date submissionDeadline = new java.util.Date () ; java.util.Date reviewDeadline = new java.util.Date () ; Conference tester = new Conference ( submissionDeadline , reviewDeadline , new java.util.Date () ) ; assertEquals ( tester . getPastReviewers () , new java.util.Date () ) ; }
{ ru.spbau.kaysin.ants.Ants.generator = new com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator ( Gdx.files . internal ( "FONTS/visitor1.ttf" ) ) ; ru.spbau.kaysin.ants.Ants.assets . load ( "pack.txt" , com.badlogic.gdx.graphics.g2d.TextureAtlas . class ) ; ru.spbau.kaysin.ants.Ants.assets . load ( "explosion.txt" , com.badlogic.gdx.graphics.g2d.TextureAtlas . class ) ; ru.spbau.kaysin.ants.Ants.assets . load ( "holo/Holo-Dark-hdpi.atlas" , com.badlogic.gdx.graphics.g2d.TextureAtlas . class ) ; ru.spbau.kaysin.ants.Ants.assets . finishLoading () ; }
{ return; } java.net.Socket sock = createSocket () ; if ( ! ( sendAndReceive ( ( "deregister " + ( id ) ) ) ) ) { java.lang.System.out . println ( "Deregister failed, try again" ) ; }
{ java.lang.String playername = ( ( java.lang.String ) ( javax.swing.JOptionPane . showInputDialog ( null , ( ( ( "Your score: " + ( _panel . gameModel () . step () ) ) + "\n" ) + "Enter your name:\n" ) , "Game Over" , javax.swing.JOptionPane.PLAIN_MESSAGE , null , null , "new player" ) ) ; _scoreBoard . put ( _panel . gameModel () . step () , playername ) ; }
{ android.database.sqlite.SQLiteQueryBuilder () = new android.database.sqlite.SQLiteQueryBuilder () ; java.lang.String [] subQueries = new java.lang.String [] { "SELECT * FROM (SELECT * FROM ingredientsItems where type = 'protein' order by date desc limit ) { java.lang.String sql = model . buildUnionQuery ( subQueries , null , null ) ; android.util.Log . d ( "query sql: " , sql ) ; android.database.Cursor cursor = mDatabase . rawQuery ( sql , null ) ; return new com.sonnytron.sortatech.pantryprep.Database.IngredientsCursorWrapper ( cursor ) ; } }
calendarDate.month = cal . get ( java.util.Calendar.MONTH )
protected javax.portlet.PortletPreferences updateImportPortletPreferences ( com.liferay.exportimport.kernel.lar.PortletDataContext portletDataContext , javax.portlet.PortletPreferences portletPreferences ) throws java.lang.Exception { long organizationId = com.liferay.portal.kernel.util.GetterUtil . getLong ( portletPreferences . getValue ( "organizationId" , null ) ) ; if ( organizationId > 0 ) { com.liferay.portal.kernel.model.Company company = _companyLocalService . getCompanyById ( portletDataContext . getCompanyId () ) ; com.liferay.portal.kernel.model.Group companyGroup = company . getGroup () ; updateImportPortletPreferencesClassPKs ( portletDataContext , portletPreferences , "organizationId" , com.liferay.portal.kernel.model.Organization . class , companyGroup . getGroupId () ) ; } return portletPreferences ; }
resolvedData . add ( definedData . indexOf ( data ) )
public void addItem ( item.Item i ) { if ( i.isStackable ) { int loc = findShopItemLoc ( i ) ; if ( loc >= 0 ) { items . get ( loc ) . count += i.count ; } else { items . add ( item ) ; } } else { items . add ( item ) ; } }
medications = "{\"false\"}"
{ totalBalance = + 200 ; if ( ( reservation . getRoomType () ) == "E" ) { totalBalance = + 200 ; } if ( ( reservation . getRoomType () ) == "E" ) { totalBalance = + 80 ; } }
{ super . onDisable () ; for ( org.bukkit.entity.Player player : getServer () . getOnlinePlayers () ) { com.pgcraft.spectatorplus.spectators.Spectator-ator = getPlayerData ( player ) ; if ( ( - 1 ) == ( - 1 ) ) { java.lang.System . exit ( 1 ) ; } } }
{ dismissProgressBar () ; mMemeData = theMemeData ; android.os.Bundle args = new android.os.Bundle () ; args . putSerializable ( getString ( R.string.photo_data_key ) , mMemeData ) ; mPhotoFragment . setArguments ( args ) ; loadFragment ( mPhotoFragment ) ; }
if ( x >= width ) { x = width ; }
this . isHorizontal ()
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; android.widget.Toast . makeText ( getApplicationContext () , "sdfghjkl;" , Toast.LENGTH_LONG ) . show () ; android.content.Intent intent = getIntent () ; username = intent . getStringExtra ( "Username" ) ; username_TextV = ( ( username_TextV . getText () . toString () ) + ( username ) ) ) ; initInstances () ; }
{ java.lang.String [] sr = values . split ( "," ) ; for ( int i = 0 ; i < ( sr.length ) ; i ++ ) { int num = java.lang.Integer.MIN_VALUE ; try { num = java.lang.Integer . parseInt ( sr [ i ] ) ; } catch ( java.lang.NumberFormatException ) { break; } zeroValues . add ( num ) ; } }
if ( userLoggedInCookie == null ) { controllers.Application . loginForm () ; }
switch ( event . getActionMasked () ) { case android.view.MotionEvent.ACTION_DOWN : android.view.View.DragShadowBuilder shadowBuilder = new android.view.View.DragShadowBuilder () ; view . startDrag ( android.content.ClipData . newPlainText ( "" , "" ) , shadowBuilder ) ; return true ; default: return false ; }
textView . setText ( getString ( R.string.section_format , getArguments () . getInt ( com.moana.carsharing.base.BasePagerActivity.PlaceholderFragment.ARG_SECTION_NUMBER ) ) ) ;
scorer == 1
@ android.support.annotation.NonNull private com.pushtorefresh.storio.sqlitedb.operation.put.PutResult updateOrInsert ( @ android.support.annotation.NonNull com.pushtorefresh.storio.sqlitedb.StorIOSQLiteDb storIOSQLiteDb , @ android.support.annotation.NonNull android.content.ContentValues contentValues , @ android.support.annotation.NonNull final java.lang.String table , @ android.support.annotation.NonNull final java.lang.String idFieldName , @ android.support.annotation.NonNull java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull final java.lang.Object idFieldName , @ android.support.annotation.NonNull
addedCard = taskListPanel . navigateToPerson ( personToAdd )
switch ( type ) { case TIMED : date = parsedDates . get ( main.java.Task.POSITION_FIRST_DATE ) . toLocalDate () ; startTime = parsedDates . get ( main.java.Task.POSITION_FIRST_DATE ) . toLocalTime () ; endTime = parsedDates . get ( main.java.Task.POSITION_SECOND_DATE ) . toLocalTime () ; }
{ tabLayout . setTabGravity ( true ) ; tabLayout . addTab ( tabLayout . newTab () . setText ( com.nsqre.insquare.Fragments.ProfileFragment.TAB_OWNED ) ) ; tabLayout . addTab ( tabLayout . newTab () . setText ( com.nsqre.insquare.Fragments.ProfileFragment.TAB_FAVOURITE ) ) ; tabLayout . setOnTabSelectedListener ( this ) ; if ( ! ( InSquareProfile.ownedSquaresList . isEmpty () ) ) { squaresList . setAdapter ( adapterOwned ) ; } }
{ java.net.Socket s = new java.net.Socket () ; s . bind ( new java.net.InetSocketAddress ( hostPort ) ) ; s . connect ( new java.net.InetSocketAddress ( serverAddress , serverPort ) ) ; this . out = new java.io.OutputStreamWriter ( s . getOutputStream () ) ; java.lang.Runnable fetcher = new com.nutscape.mc.nunuubot.Connection.MessageFetcher ( s . getInputStream () , msgQueue , bot ) ; new java.lang.Thread ( fetcher ) . start () ; }
public void onDataReceived ( com.jacks205.spots.model.ParkingStructure [] structures , java.util.Date lastUpdated ) { if ( ( spotsListAdapter ) == null ) { spotsListAdapter = new com.jacks205.spots.adapters.SpotsListAdapter ( this , structures , lastUpdated ) ; listView . setAdapter ( spotsListAdapter ) ; } else { spotsListAdapter . setLastUpdated ( structures ) ; spotsListAdapter . setLastUpdated ( lastUpdated ) ; spotsListAdapter . notifyDataSetChanged () ; } mSwipeRefreshLayout . setRefreshing ( false ) ; }
util . UploadImage ( photoFile )
{ org.ethereum.jsonrpc.Block block = getByJsonBlockId ( blockId ) ; byte [] addressAsByteArray = org.ethereum.jsonrpc.TypeConverter.TypeConverter . StringHexToByteArray ( address ) ; byte [] code = this . repository . getSnapshotTo ( block . getStateRoot () ) ; return org.ethereum.jsonrpc.TypeConverter.TypeConverter . toJsonHex ( code ) ; }
if ( currentRow > rowCount ) { break; }
mockMvc . perform ( org.springframework.test.web.servlet.request.MockMvcRequestBuilders . get ( "/" ) ) . andExpect ( status () . isOk () ) . andExpect ( model () . attribute ( "tasks" , tasks ) ) . andExpect ( model () . size () )
( keys [ i ] ) == 0
public static void main ( java.lang.String [] args ) throws java.lang.ClassNotFoundException { java.net.ServerSocket sconn = null ; java.net.Socket conn = null ; antsserverdigest.gestore now ; java.lang.Thread thread ; int port = 3356 ; while ( true ) { try { sconn = new java.net.ServerSocket ( port ) ; conn = sconn . accept () ; now = new antsserverdigest.gestore ( conn ) ; thread = new java.lang.Thread ( now ) ; thread . start () ; } catch ( java.io.IOException e ) {} } }
{ super . onCreate ( savedInstanceState ) ; setRetainInstance ( true ) ; db = new com.nectar.thesun.library.NewsListDatabase ( com.nectar.thesun.PageSlidingTabStripFragment.mcontext ) ; if ( ( db . getNews () ) != null ) { com.nectar.thesun.library.MyConstants.homenews = db . getNews () ; com.nectar.thesun.HomeFragment . Setup () ; } if ( ! ( com.nectar.thesun.PageSlidingTabStripFragment . isAsyncTaskPendingOrRunning () ) ) { loadNewsNow ( getActivity () ) ; com.nectar.thesun.PageSlidingTabStripFragment.mcontext = getActivity () . getApplicationContext () ; } }
public java.util.Collection getAllSubTasks ( java.lang.String taskId ) { if ( ( taskId == null ) || ( ( taskId . length () ) == 0 ) ) { return getAllRootTasks () ; } else { net.sf.memoranda.Task task = getTaskElement ( taskId ) ; if ( task == null ) { return new java.util.Vector () ; } return task . getSubTasks () ; } }
{ return com.softserve.edu.entity.verification.ClientData ownerData = getVerification () . getClientData () ; java.lang.String fullName = ( ( ( ( ownerData . getLastName () ) + " " ) + ( ownerData . getFirstName () ) ) + " " ) + ( ownerData . getMiddleName () ) ; return fullName ; }
return ( this . height ) - r ;
{ if ( n == ( javax.swing.JOptionPane.YES_OPTION ) ) { return; } if ( n == ( javax.swing.JOptionPane.YES_OPTION ) ) { if ( n == ( javax.swing.JOptionPane.YES_OPTION ) ) { java.lang.System . exit ( 0 ) ; } } }
characteristicValue . getOrderNumber ()
new com.example.jacek.streamthegame.Grid ( this . getContext () , this . nRows )
switch ( requestCode ) { case com.joss.jrow.TrainingEnvironment.TrainingActivity.SAVE_REQUEST_CODE : if ( resultCode == ( RESULT_OK ) ) { com.joss.jrow.Models.Training . getTraining () . save ( ( ( java.lang.String ) ( objects [ 0 ] ) ) ) ; } break; case com.joss.jrow.TrainingEnvironment.TrainingActivity.CALIBRATION_REQUEST_CODE : if ( resultCode == ( RESULT_OK ) ) { com.joss.jrow.Models.Measures . getMeasures () . setDefaultCalibration () ; startTraining () ; } }
assertEquals ( ( ( "Got " + ( m . name () ) ) + "\n" ) , p . getContent () )
{ player . performCommand ( ( "vote reward " + ( voteSite . getSiteName () ) ) ) ; player . closeInventory () ; }
{ int result = getDateFrom () . hashCode () ; result = ( 31 * result ) + ( getUser () . hashCode () ) ; result = ( 31 * result ) + ( getBookInstance () . hashCode () ) ; return result ; }
public synchronized java.lang.String getSpeed ( long size ) { long t2 = java.lang.System . currentTimeMillis () ; long t = t2 - ( t1 ) ; t1 = t2 ; if ( t == 0 ) return "MAX" ; sum += size ; return java.lang.String . format ( "%,dKB/s avg. %,dKB/s, sum= 0dbytes" , ( size / t ) , ( ( sum ) / ( t2 - ( t0 ) ) ) , sum ) ; }
{ if ( ( task.core.publisher.FluxGroupBy.UnicastGroupedFlux < K , V > g : groupMap . values () ) ) { g . onComplete () ; } groupMap . clear () ; }
getConnectionName ( null )
id = time * ( ( ( long ) ( ( ( ( long ) ( ( ( long ) ( ( ( ( ( long ) ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( ( long ) ( ( ( long ) ( ( ( ( long ) ( ( ( long ) ( ( ( ( long ) ( ( ( long ) ( ( ( ( long ) ( ( ( long ) ( ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( ( ( long ) ( 0 ) ) ) ) ) ) ) ) ) ) && ( transactionID . compareAndSet ( old , id ) ) ) ) ) == null ) ) ) && ( transactionID . compareAndSet ( old , id ) ) ) == 0 ) ) ) && ( ! ( transactionID . compareAndSet ( old , id ) ) ) || ( ( id ) == ( old + 1 ) ) ) && ( ! ( transactionID . compareAndSet ( old , id ) ) ) ) || ( id == ( - 1 ) ) ) && ( transactionID . compareAndSet ( old , id ) ) ) || ( id == ( - 1 ) ) ) || ( transactionID . compareAndSet ( old , id ) ) ) || ( id == ( - 1 ) ) ) || ( transactionID . compareAndSet ( old , id ) ) ) || ( id ) ) )
{ getElementos () . add ( item ) ; java.lang.Object [] vector = new java.lang.Object [ 3 ] ; vector [ 0 ] = item . getPractica () . getCodigo () ; vector [ 1 ] = item . getPractica () . getNombre () ; vector [ 2 ] = item . getCantidadSesiones () ; super . addRow ( vector ) ; }
send ( message , response )
try { java.net.URL posterUrl = new java.net.URL ( url ) ; java.nio.channels.ReadableByteChannel rbc = java.nio.channels.Channels . newChannel ( posterUrl . openStream () ) ; fos . close () ; fos . close () ; } catch ( java.net.MalformedURLException e ) { e . printStackTrace () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; }
switch ( direction ) { case true : return new MapPosition ( x , ( ( y ) -- ) ) ; case SOUTH : return new MapPosition ( x , ( ( y ) ++ ) ) ; case EAST : return new MapPosition ( ( ( x ) ++ ) , y ) ; case EAST : return new MapPosition ( ( ( x ) -- ) , y ) ; default: return null ; }
new graphics.Screen ( "Bob" , false , false )
android.os.Bundle savedInstanceState
{ employee . setEmpNo ( "027" ) ; employee . setName ( "Chaitra" ) ; try { employee . setBytes ( "Chaitra" . getBytes ( "ISO-8859-15" ) ) ; } catch ( java.io.UnsupportedEncodingException e ) { e . printStackTrace () ; } }
{ mCurrentIndex = ( ( mCurrentIndex ) + 1 ) % ( mStations.length ) ; mStartStopButton . setImageDrawable ( playDrawable () ) ; update ( mCurrentIndex ) ; playPressed = false ; doneBuffering = false ; if ( player . isPlaying () ) { player . stop () ; } }
{ if ( ( models.Rate . findByUserIdAndProjectIdAndCriteriaId ( userId , projectId , criteriaId ) ) == null ) { models.Rate rate = new models.Rate () ; rate.score = score ; rate.userId = userId ; rate.criteriaId = criteriaId ; rate.projectId = projectId ; rate . save () ; return rate ; } return rate ; }
if ( ( ( this . data . length ) > 3 ) && ( ( this . data . length ) > 11 ) ) throw new org.mobicents.protocols.ss7.cap.api.CAPException ( "data field length must be from 3 to 11" ) ;
{ android.view.LayoutInflater inflater = context . getLayoutInflater () ; android.view.View rowView = inflater . inflate ( R.layout.list_single , null , true ) ; android.widget.ImageView imageView = ( ( android.widget.ImageView ) ( rowView . findViewById ( R.id.img ) ) ) ; txtTitle . setText ( web [ position ] ) ; imageView . setImageResource ( imageId [ position ] ) ; return rowView ; }
gamePanel . setCurrentTypedWordLabel ( game.currentTypedWord , game.currentIndex )
{ hostServer = null ; hostServer . start () ; setHostOptCompsTo ( false ) ; setStartCompsTo ( false ) ; repaint () ; setWinSizeTo ( hostScreenSize ) ; setHostCompsTo ( true ) ; }
sqlServerManager . sqlDatabases ( 404 ) . getBySqlServer ()
{ java.lang.String playersName = this . getPlayersName () ; byui.cit260.hobbit.model.Player player = byui.cit260.hobbit.control.ProgramControl . createPlayer ( playersName ) ; byui.cit260.hobbit.model.GoldPouch goldPouch = byui.cit260.hobbit.control.ProgramControl . createSmallPouch () ; this . displayWelcomeMessage ( player ) ; byui.cit260.hobbit.view.MainMenuView mainMenu = new byui.cit260.hobbit.view.MainMenuView () ; mainMenu . display () ; }
traceSearch . getEventIterator ( ocelotlParameters . getTrace () , ocelotlParameters . getTraceTypeConfig () . getTypes () ) ;
services.FavouriteQuoteImporter.LOGGER . info ( ( quote + line ) )
com.android.server.telecom.Log . v ( this , mAttemptRecords . get ( 0 ) . targetPhoneAccount , record )
{ this . state = "commit" ; readInput () ; java.lang.System.out . println ( ( "aboutToSendAck:" + ( this . state ) ) ) ; coordinator . receiveAck ( "commit" , this . participantNum ) ; }
train . addHistory ( station . getName () , context . getGameLogic () )
{ perso = true ; return ( puntata ) + ( ( fiches ) + ( puntata ) ) ; }
if ( button == ( org.lwjgl.glfw.GLFW.GLFW_MOUSE_BUTTON_1 ) ) { mouse_down = state == 1 ; toInteract = world . closestEntity ( current . getLocation () , 10.0F ) ; }
{ if ( ! ( hasNext () ) ) { throw new java.util.NoSuchElementException () ; } long result = 0 ; while ( result == 0 ) { result = puzzleStorage.puzzles [ cursor ] ; ( cursor ) ++ ; } return result ; }
{ if ( user == null ) { return; } android.util.Log . d ( "MyApp" , "User logged in through (!" ) ) ; }
{ if ( ( ( initialX ) == 0 ) && ( ( initialY ) == 0 ) ) { com.google.gwt.dom.client.Touch touch = event . getTouches () . get ( 0 ) ; initialX = touch . getPageX () ; initialY = touch . getPageY () ; } }
{ for ( com.smanzana.dungeonmaster.ui.app.swing.editors.StepField.RangeSegment seg : segments ) { if ( seg != null ) out . addStep ( seg . getMax () , seg . getValue () ) ; } return out ; }
{ java.lang.System.out . println ( ( "BEFORE: " + ( automaton . get ( i ) ) ) ) ; automaton . get ( i ) . remap ( from , to ) ; java.lang.System.out . println ( ( "AFTER: " + ( automaton . get ( i ) ) ) ) ; }
public static int calculateScore ( java.util.ArrayList < PairTime > pairTimes ) { int score = 0 ; for ( int i = 0 ; i < ( pairTimes . size () ) ; i ++ ) { score += pairTimes . get ( i ) . getPair () . getScore () ; } return score ; }
{ stackgc () ; if ( ( sp ) >= ( stack.length ) ) throw new org.arcueidarc.nekoarc.NekoArcException ( "stack overflow" ) ; }
{ jobDao . deleteJobOutput ( uuid ) ; }
static java.lang.String minimaxDecision ( State state ) { int action = 0 ; int v = - ( Minimax.MAX_NUMBER ) ; for ( int a : Minimax . actions ( state ) ) { int temp = Minimax . minValue ( Minimax . result ( state , a ) ) ; if ( temp > v ) { action = a ; } } return action ; }
if ( com.kuna.ibeatcon_android.Controller.vb_feedback ) { android.os.Vibrator v = ( ( android.os.Vibrator ) ( getSystemService ( Context.VIBRATOR_SERVICE ) ) ) ; v . vibrate ( 100 ) ; SendData ( pressKey [ i ] ) ; } else { SendData ( pressKey [ i ] ) ; }
public static java.lang.String getRedirectionPath ( final org.fenixedu.bennu.core.domain.User user , final javax.servlet.http.HttpServletRequest request ) { synchronized ( org.fenixedu.ulisboa.specifications.authentication.ULisboaAuthenticationRedirector.handlers ) { for ( final org.fenixedu.ulisboa.specifications.authentication.IULisboaRedirectionHandler iuLisboaRedirectionHandler : org.fenixedu.ulisboa.specifications.authentication.ULisboaAuthenticationRedirector.handlers ) { if ( iuLisboaRedirectionHandler . isToRedirect ( user , request ) ) { return iuLisboaRedirectionHandler . size () ; } } } return null ; }
public java.lang.Integer getPortForBridge ( java.lang.Integer for ( org.opennms.netmgt.model.topology.BridgePort link : m_portsOnSegment ) { if ( m_macsOnSegment . isEmpty () ) { for ( org.opennms.netmgt.model.topology.BridgePort link : m_portsOnSegment ) { if ( ( link . getNode () . getId () . intValue () ) == ( de.opennms.netmgt.model.topology.BridgePort link : m_portsOnSegment ) ) { return link . getBridgePort () ; } } return null ; } return null ; }
{ super . onSizeChanged ( w , h , oldw , oldh ) ; mProgressDrawerManager . onSizeChanged ( w , h ) ; mShapeDrawerManager . onSizeChanged ( w , h , getPaddingLeft () , getPaddingTop () , getPaddingRight () , getPaddingBottom () ) ; mBlurManager . onSizeChanged ( w , h ) ; this . mIsBlurred = false ; onDrawableChanged ( false ) ; }
redirectAttributes . addFlashAttribute ( true )
{ if ( assetNeedUpdate ) assetManager () ; renderSharedAssets ( batch ) ; if ( ! ( ) ) { switch ( chapterSection ) { case 1 : drawBG ( batch ) ; break; } } if ( ansCorrect ) { fourPicsOneWordUtil . displayCorrect ( batch ) ; Gdx.input . setOnscreenKeyboardVisible ( false ) ; } drawQuizResult ( batch ) ; }
item . getClass () . equals ( "org.apache.jmeter.control.ModuleController" )
{ Item item = array [ last ] ; if ( item == null ) { throw new java.util.NoSuchElementException () ; } array [ last ] = null ; ( last ) -- ; ( N ) -- ; subSize () ; return item ; }
con = null
@ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.TEXT_HTML ) public javax.ws.rs.core.Response services () { java.lang.String rendered = soyService . renderPlugin ( pluginRegion , com.google.common.base.Optional . of ( new com.jivesoftware.os.upena.deployable.region.ConfigPluginRegion.ConfigPluginRegionInput ( "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" ) ) ) ; return javax.ws.rs.core.Response . ok ( rendered ) . build () ; }
{ android.util.Log . d ( "GA_search" , ( "searchOnFail " + ( t . toString () ) ) ) ; android.transition.TransitionManager . beginDelayedTransition ( rootView ) ; progressBar . setVisibility ( View.GONE ) ; innerLayout . getForeground () . setAlpha ( 0 ) ; l2 . setVisibility ( View.GONE ) ; l2 . setVisibility ( View.GONE ) ; }
execute ( new rx.Subscriber < Result > () { @ java.lang.Override public void onCompleted () {} @ java.lang.Override public void onError ( final java.lang.Throwable e ) { onError . call ( e ) ; } } )
{ if ( ( center ) == null ) { return; } android.util.Log . i ( "ttangliang" , ( "isCanvasAcc = " + ( canvas . isHardware ) ) ) ; if ( ( center ) == null ) { return; } switch ( style ) { case 0ANGLE : break; case settingsRCLE : canvas . drawCircle ( center.x , center.y , radius , paint ) ; break; } }
if ( index != ( - 1 ) ) { long time = ( ( long ) ( ( s . getTime () . getMillis () ) * ( org.cook_e.data.TimeLearner.weightList . get ( index ) . timeWeight ) ) ) ; return new org.joda.time.Duration ( time ) ; }
{ if ( ( com.owasp.esapi.configuration.EsapiPropertyLoaderFactory . createPropertyLoader ( comapiConfiguration.OPSTEAM_ESAPI_CFG ) ) . add ( org.owasp.esapi.configuration.EsapiPropertyLoaderFactory . createPropertyLoader ( comapiConfiguration.OPSTEAM_ESAPI_CFG ) ) ; } catch ( java.lang.Exception e ) { java.lang.System.err . println ( e . getMessage () ) ; }
syncStates = new boolean [ 0 ]
{ prefs = net.sf.jabref.preferences.JabRefPreferences . getInstance () ; net.sf.jabref.model.metadata.MetaData metaData = new net.sf.jabref.model.metadata.BibDatabaseContext ( new net.sf.jabref.model.database.BibDatabase () , metaData , new net.sf.jabref.model.Defaults () ) ; context . setDatabaseFile ( testFolder . newFile ( "test.bib" ) ) ; prefs . putBoolean ( JabRefPreferences.BIB_LOC_AS_PRIMARY_DIR , true ) ; entry = new net.sf.jabref.model.entry.BibEntry () ; entry . setCiteKey ( "Toot" ) ; }
{ destroy &&KinematicsRunnable () ; if ( ( scheduled ) == null ) { if ( us.ihmc.darpaRoboticsChallenge.networkProcessor.kinematicsToolboxModule.KinematicsToolboxModule.DEBUG ) us.ihmc.tools.io.printing.PrintTools . error ( this , "There is no task running." ) ; return; } scheduled . cancel ( true ) ; scheduled = null ; activeMessageSource . set ( null ) ; }
{ if ( ( this . isTokens ) >= 0 ) { this . markers . remove ( this . this . this . this . this ) ; } if ( ( this . splitTokens ) == null ) { return; } for ( dyvil.tools.parsing.token.IToken splitToken : this . splitTokens ) { splitToken . prev () . setNext ( splitToken ) ; splitToken . next () . setPrev ( splitToken ) ; } this . splitTokens . clear () ; }
com.orhanobut.tracklytics.AssertTracker . assertTrack ( tracker ) . event ( "title" ) . noTags () . attribute ( "key1" , "value1" ) . attribute ( "key2" , "value2" ) . noSuperAttributes () ;
{ java.util.Collection < java.lang.Object > coll = container . get () ; if ( value ) { if ( coll != null ) { if ( ! ( coll . contains ( item ) ) ) { coll . add ( item ) ; } } } else { container . set ( org.rapidoid.util.U . list ( item ) ) ; } }
public static double noteToFreq ( int key ) { int note = key % ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ; int octave = ( key / ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ) - 1 ; return ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES [ note ] ) * ( java.lang.Math . pow ( 2.0 , ( ( ( double ) ( octave ) ) - 1.0 ) ) ) ; }
void register ( com.kk.bus.Bus bus , java.lang.Object objectToRegister , java.util.Set < java.lang.reflect.Method > subscriberMethods , com.kk.bus.DeliveryContext deliveryContext ) { com.kk.bus.EventDeliverer eventDeliverer = mObjectDeliverers . get ( objectToRegister ) ; if ( eventDeliverer == null ) { eventDeliverer = new com.kk.bus.EventDeliverer ( bus , objectToRegister , deliveryContext ) ; mObjectDeliverers . put ( objectToRegister , eventDeliverer ) ; } eventDeliverer . setSubscriberMethods ( subscriberMethods ) ; }
{ rootPane . setPrefWidth ( image . getWidth () ) ; rootPane . setPrefHeight ( image . getHeight () ) ; rootPane . getChildren () . add ( canvas ) ; javafx.scene.layout.StackPane . setAlignment ( canvas ) ; }
plugin . get ( location ) . scheduleAsyncDelayedTask ( plugin , new net.madmanmarkau.MultiHome.ChunkResendTask ( location ) , ( 1 * 20 ) )
{ java.lang.String json = exchange . getIn () . getBody ( java.lang.String . class ) ; com.workflow2015.common.helper.RouteRequest routeRequest = JsonHelper.gson . fromJson ( json , com.workflow2015.common.helper.RouteRequest . class ) ; java.lang.String data = this . getDataFromSource ( routeRequest ) ; this . pushDataToQueue ( data ) ; }
{ processScheduler.logic.Message. :_SIZE = java.lang.Integer . parseInt ( newValue ) ; return; }
public static java.lang.String getUniqueTitle ( net.minecraft.world.World world ) { java.util.List < net.torocraft.nemesissystem.registry.Nemesis > nemeses = net.torocraft.nemesissystem.registry.Nemesis > nemeses = net.torocraft.nemesissystem.registry.NemesisRegistryProvider . get ( world ) . list () ; java.lang.String title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; while ( ! ( net.torocraft.nemesissystem.util.NemesisBuilder . isUniqueTitle ( title , nemeses ) ) ) { title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; } return title ; }
if ( ! ( vn . toElement ( (DN ) ) ) ) { edu.jhu.agiga.AgigaDocumentReader.log . finer ( "No ) ; return null ; }
{ stats = savedInstanceState . getBundle () ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_nearby ) ; getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; registerLocationManager () ; android.support.v4.app.FragmentTransaction ft = getSupportFragmentManager () . beginTransaction () ; fr.free.nrw.commons.nearby.NearbyListFragment fragment = new fr.free.nrw.commons.nearby.NearbyListFragment () ; ft . add ( R.id.container , fragment ) ; ft . commit () ; }
@ java.lang.Override public void changeState ( com.example.alexander_topilskii.internetradio.models.database.Station station ) { currentState = State.IS_WAIT ; listener . setPlayerStates ( ( - 1 ) , State.IS_WAIT ) ; if ( ( mediaPlayer ) == null ) initPlayer ( station . getSource () ) ; else { if ( mediaPlayer . isPlaying () ) { pause () ; } else { play () ; } } }
{ orgManager.Company.employeeList . get ( i ) . setId ( ( i + 1 ) ) ; Employee.nextId -= 1 ; }
{ Gdx.gl . glClearColor ( 0.2F , 0.2F , 0.2F , 1 ) ; Gdx.gl . glClear ( GL20.GL_COLOR_BUFFER_BIT ) ; stage . act ( java.lang.Math . min ( Gdx.graphics . getDeltaTime () ) ) ; stage . draw () ; if ( finished ) return num ; else return - 1 ; }
public boolean isHovered ( int mouseX , int mouseY ) { return ( ( ( mouseX >= ( xPosition ) ) && ( mouseX <= ( ( xPosition ) + ( width ) ) ) ) && ( mouseY >= ( yPosition ) ) ) && ( mouseY <= ( ( yPosition ) + ( height ) ) ) ; }
{ android.content.SharedPreferences sharedPreferences = android.preference.PreferenceManager . getDefaultSharedPreferences ( getApplicationContext () ) ; android.content.SharedPreferences.Editor editor = sharedPreferences . edit () ; editor . putBoolean ( LogInActivity.IS_LOGGED_IN_STR , false ) ; editor . putString ( LogInActivity.USER_LOGGED_IN_STR , "" ) ; editor . putString ( LogInActivity.USER_LOGGED_IN_STR , "" ) ; editor . putString ( LogInActivity.USER_LOGGED_IN_STR , "" ) ; editor . putString ( LogInActivity.USER_PASSWORD_STR , "" ) ; editor . commit () ; }
{ pendingTime . set ( db . getServerSettingInt ( "pendingTime" ) ) ; notificationInterval . set ( db . getServerSettingInt ( "notificationInterval" ) ) ; }
{ edu.stanford.bmir.protege.web.shared.xd.data.entityframes.AbstractOntologyEntityFrame selectedFrame = ( ( edu.stanford.bmir.protege.web.shared.xd.data.entityframes.AbstractOntologyEntityFrame ) ( selectedNode . getAttributeAsObject ( "frame" ) ) ) ; edWindow . loadFrameAndShow ( selectedFrame ) ; }
{ if ( sValue < ( max ) ) { sValue = max ; } if ( sValue < ( min ) ) { sValue = min ; } switch ( whichValue ) { case DEFAULT : this . defaultValue = sValue ; break; case RECOMMEND : this . bufferValue = sValue ; break; case CURRENT : this . value = sValue ; updateSegBytes () ; break; default: break; } }
{ com.mxgraph.model.mxCell edge = ( ( com.mxgraph.model.mxCell ) ( graph . insertEdge ( root , null , name , source , target ) ) ) ; }
binding . getEventType ()
{ java.lang.String [] policyIds = policyId . split ( ":" ) ; boolean userRemovedFromHDFSPolicy = this . hdfsAdminService . removeUserFromQueuePermission ( policyIds [ 1 ] , groupName , accountName ) ; return userRemovedFromYarnPolicy ; }
{ if ( ( ( baseNode ) == null ) || ( ( ! ( baseNode.turn.data_ . equals ( board ) ) ) && ( ( baseNode.turnNum ) != turn ) ) ) { baseNode = new com.hearthsim.util.tree.MCTSTreeNode ( new com.hearthsim.util.tree.HearthTreeNode ( board ) , turn ) ; } com.hearthsim.util.tree.MCTSTreeNode retNode = baseNode . selectAction () ; board = retNode.turn.data_ ; return retNode . getTurnResults () ; }
public int xToPixel ( double x , mes , ( chart . getFieldWidth () ) ) { tempNum . setValue ( x ) ; int fieldWidth = chart . getFieldWidth () ; int margin = chart . getMargin () ; return ( margin + ( tempNum . setWithinBounds ( false , maxX , ( ( fieldWidth - ( 2 * margin ) ) - ( markerWidth ) ) ) ) ) - ( chart . getXPixelBase () ) ; }
{ int i ; try { i = java.lang.Integer . parseInt ( levelNumber . getText () ) ; } catch ( java.lang.Exception e ) { return; } resetButtons () ; resetButtons () ; resetBoard ( i ) ; resetFields ( i ) ; }
return f ;
new org.corpus_tools.pepper.core.ModuleFitnessChecker ()
request . getSession ( false )
{ return false ; }
{ cmds . add ( cfgSlaves ( "cat /dev/null >" ) ) ; cmds . add ( cfgEnv ( ( ( "echo '" + ( new.hadoop.cluster.Spark.COMMENT_START ) ) + "' finish" ) ) ) ; for ( context . add ( cfgEnv ( ( ( "echo '" + ( new.hadoop.cluster.Spark.COMMENT_END ) ) ) ) ) ) ; cmds . add ( cfgEnv ( ( ( "echo '" + ( de.hadoop.cluster.Spark.COMMENT_END ) ) ) ) ) ; }
{ if ( ( java.lang.Integer . parseInt ( messageCode ) ) > 1 ) { message = "nowe orzeczenia" ; } else { message = "nowe orzeczenie" ; } return message ; }
{ net.minecraft.entity.player.EntityPlayerMP playerMP = ( ( net.minecraft.entity.player.EntityPlayerMP ) ( player ) ) ; net.ci010.attributesmod.properties.Attributes.agility . upgrade ( playerMP ) ; net.ci010.attributesmod.properties.Attributes.endurance . upgrade ( playerMP ) ; net.ci010.attributesmod.network.PacketDispatcher . sendTo ( new net.ci010.attributesmod.network.SynAttributesMessage ( playerMP ) , playerMP ) ; }
@ java.lang.Override public void onSuccess ( final java.lang.Float volume ) { com.connectsdk.core.Util . postSuccess ( listener , null ) ; float newVolume = ( ( float ) ( volume - 0.01 ) ) ; if ( newVolume < 0.0 ) newVolume = ( ( float ) ( 0.0 ) ) ; setVolume ( newVolume , listener ) ; com.connectsdk.core.Util . postSuccess ( listener , null ) ; }
{ java.util.Map m = new java.util.LinkedHashMap () ; java.util.List a = new java.util.ArrayList () ; m . put ( "b" , "c" ) ; m . put ( "a" , a ) ; a . add ( "Hello" ) ; a . add ( m ) ; a . add ( m ) ; }
@ java.lang.Override public void run () { if ( ! ( java.lang.Thread . interrupted () ) ) { return; } try { if ( ! ( java.lang.Thread . interrupted () ) ) { if ( ! ( java.lang.Thread . interrupted () ) ) { return; } if ( ! ( java.lang.Thread . interrupted () ) ) { return; } } } catch ( java.lang.InterruptedException ex ) { java.lang.System.out . println ( "Traffic lights modelling stopped." ) ; java.lang.Thread . sleep ( redLightDuration ) ; } }
{ android.util.Log . i ( "Cancel" , "Canceled" ) ; try { android.util.Log . i ( "Webview Title: " , token . getTitle () ) ; } catch ( java.lang.Exception e ) { android.util.Log . i ( "webview.getTitle(): " , e . toString () ) ; } bringBackWebView () ; }
new org.shingo.shingoeventsapp.api.InitLoader ( org.shingo.shingoeventsapp.ui.events.EventDetailFragment.mEvent_id )
{ this . currentStatus = main.java.game.ResistanceGame.GameStatus.AWAITING_MISSION_RESULT ; this . missionResult = new java.util.HashMap <> () ; main.java.game.GameMessages . sendVoteResults ( this . channel , this . voteTally ) ; try { java.lang.Thread . sleep ( 5000 ) ; } catch ( java.lang.InterruptedException e ) {} if ( this . voteResult ( this . voteTally ) ) { main.java.game.GameMessages . sendMissionIntro ( this . channel , this . currentMission ) ; } else { this . nextRound () ; } }
{ java.io.BufferedReader br = new java.io.BufferedReader ( new java.io.InputStreamReader ( java.lang.System.in ) ) ; java.lang.System.out . println ( "Enter data" ) ; bno = java.lang.Integer . parseInt ( br . readLine () ) ; phno = java.lang.Integer . parseInt ( br . readLine () ) ; name = br . readLine () ; days = java.lang.Integer . parseInt ( br . readLine () ) ; charge = java.lang.Integer . parseInt ( br . readLine () ) ; }
this . fileMap . get ( node )
@ java.lang.Override public boolean checkImpl ( wjtoth.cyclicIndexmatching.PreferenceSystem preferenceSystem ) { if ( matchings != null ) { for ( wjtoth.cyclicIndexmatching.Matching matching : matchings ) { wjtoth.cyclicIndexmatching.MatchingPS mathcingPS = new wjtoth.cyclicIndexmatching.MatchingPS ( matching , preferenceSystem ) ; if ( isInternallyBlocked ) { return false ; } java.util.List < java.util.List < java.lang.Integer > > potentialBlocks = mathcingPS . firstOrderDiss () ; if ( checkImpl ( potentialBlocks , mathcingPS , preferenceSystem ) ) { return true ; } } } return false ; }
s += str . charAt ( str . charAt ( ( ( len - 1 ) - i ) ) )
org.apache.kafka.streams.processor.internals.RecordCollector.log . error ( "Error sending record: " , exception )
this . wordsFTlib.Helper . words ( input , index , 1 )
switch ( o ) { default: case org.squiddev.cobalt.Lua.OP_UNM : op = "neg" ; break; case org.squiddev.cobalt.Lua.OP_NOT : op = "not" ; break; case org.squiddev.cobalt.Lua.OP_LEN : op = "length" ; break; }
public java.util.Map < java.lang.Integer , int [] > getListOfCoordinates () { java.util.Map < java.lang.Integer , int [] > listOfCoordinates = new java.util.HashMap <> () ; int key = 0 ; for ( int y = 0 ; y < ( Game.Controllers.BoardController.BOARDSIZE ) ; y ++ ) { for ( int x = 0 ; x < ( Game.Controllers.BoardController.BOARDSIZE ) ; x ++ ) { listOfCoordinates . put ( key , new int [] { x , y } ) ; } } return listOfCoordinates ; }
{ java.lang.String pictureName = null ; try { pictureName = getFileName ( picture ) ; } catch ( java.lang.Exception e ) { setError ( com.lavalloisir.forms.RegistrationForm.FIELD_PICTURE , e . getMessage () ) ; } java.lang.String localPath = path . substring ( path . indexOf ( "/img" ) ) ; user . setPicture ( ( ( "/Lavalloisir" + localPath ) + pictureName ) ) ; }
( pageNumber <= 0 ) || ( pageNumber > ( this . pages . length ) )
{ com.mcnaStringon.client.SpotifyClient.accessToken = response . getAccess_token () ; com.mcnaStringon.client.SpotifyClient.refreshToken = response . getRefresh_token () ; if ( response != null ) { com.mcnaStringon.client.SpotifyClient.tokenType = response . getToken_type () ; com.mcnaStringon.client.SpotifyClient. ;Date = org.joda.time.DateTime . now () . plusSeconds ( response . getExpires_in () ) ; } }
public static org.matheclipse.core.interfaces.IExpr sortResults ( org.matheclipse.core.interfaces.IAST resultList ) { for ( int i = 1 ; i < ( resultList . size () ) ; i ++ ) { if ( resultList . get ( i ) . isList () ) { org.matheclipse.core.eval.EvalAttributes . sort ( ( ( org.matheclipse.core.interfaces.IAST ) ( resultList . get ( i ) ) ) ) ; } } return resultList ; }
ordinal = ( ( long ) ( java.lang.Math . ceil ( ( ( ( ( ( tempProbability * card ) + min ) - 1 ) ) + 1 ) + 1 ) ) )
writer . write ( ( ( de.neffez.timetrack.util.DateUtil . getTodayFormatted ( TimeTrackConstants.DE_DATE ) ) + " " ) )
@ java.lang.Override public void run () { if ( ! ( isUidExistInHeadPicDB ( uid ) ) ) { insertHeadPicToHeadPicsDB ( resultEntry ) ; } else { updateHeadPicToHeadPicsDB ( resultEntry ) ; } mHandler . sendEmptyMessage ( com.pkjiao.friends.mm.activity.FillUserInfoActivity.UPLOAD_USER_HEADER_FINISH ) ; }
( n.ntype . equals ( this . ntype ) ) && ( n.label . equals ( this . label ) )
{ leftStick = new org.usfirst.frc.team3501.robot.Joystick ( LEFT_JOYSTICK_PORT ) ; rightStick = new org.usfirst.frc.team3501.robot.Joystick ( RIGHT_JOYSTICK_PORT ) ; drivetrain = new org.usfirst.frc.team3501.robot.Drivetrain () ; armw = new org.usfirst.frc.team3501.robot.Claw () ; auton = new org.usfirst.frc.team3501.robot.Auton ( arm , claw , drivetrain , timer ) ; }
loadData ()
{ java.util.Arrays . sort ( files ) ; org.jdom2.Element p = buildElement ( files , new , eDir ) ; doc . getRootElement () . addContent ( p ) ; return p . getName () ; }
java.lang.Math . min ( position , count )
{ java.lang.String parentTaskId = task . getParentID () ; if ( parentTaskId != null ) { net.sf.memoranda.Task parentNode = getTaskElement ( parentTaskId ) ; parentNode . removeSubTask ( task ) ; } taskList . remove ( task . getID () ) ; rootTaskList . remove ( task ) ; }
new de.skuzzle.polly.sdk.eventlistener.MessageEvent ( this , user , nickName , action )
{ int index = conversations . getSelectionModel () . getSelectedIndex () ; java.lang.String data = conversations . getSelectionModel () . getSelectedItem () ; codeu.chat.common.ConversationSummary selectedConvo = lookupByTitle ( data , index ) ; codeu.chat.client.simplegui.ChatGuiFX.clientContext.conversation . setCurrent ( selectedConvo ) ; updateCurrentConversation ( selectedConvo ) ; }
public static int printData ( java.lang.String [] args ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.Data.Meta dbg = new org.paces.Stata.Data.Meta ( args ) ; org.paces.Stata.Data.StataData stataData = new org.paces.Stata.Data.DataSet ( dbg ) ; org.paces.Stata.JSON.StataJSON . toJSON ( stataData ) ; stataData = null ; dbg = null ; return 0 ; }
private static weka.core.Instances loadTestFile ( java.lang.String fileName ) { weka.core.Instances data = null ; weka.core.converters.ArffLoader loader = new weka.core.converters.ArffLoader () ; try { loader . setFile ( new java.io.File ( fileName ) ) ; data = loader . getDataSet () ; data . setClassIndex ( ( ( data . numAttributes () ) - 1 ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return data ; }
new com.abhelly.builditbigger.EndpointsAsyncTask () . execute ( getContext () )
private void init ( com.shinav.mathapp.db.pojo.CutsceneLine cutsceneLine ) { this . cutsceneLine = cutsceneLine ; com.shinav.mathapp.injection.component.Injector . getViewComponent ( this . getContext () ) . inject ( this ) ; int layout = getLayout ( cutsceneLine ) ; android.view.View view = inflate ( layout , this , false ) ; }
{ if ( isHighlighted () ) { g . setColor ( java.awt.Color.green ) ; g . drawRect ( x , ( ( y ) + ( ( ( totalCards ) * ( Card.height ) ) / 2 ) ) , Card.width , Card.height ) ; setHighlight ( false ) ; } else { g . setColor ( java.awt.Color.black ) ; } totalCards = 0 ; stackDisplay ( g , top () ) ; }
( ( ( x >= 0 ) && ( x < ( this . width ) ) ) && ( y >= 0 ) ) && ( y < ( this . height ) )
public void show ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { response . setStatus ( HttpServletResponse.SC_NOT_FOUND ) ; request . setAttribute ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.MESSAGE , "Page Not Found" ) ; javax.servlet.RequestDispatcher view = request . getRequestDispatcher ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.ERROR_PAGE ) ; view . forward ( request , response ) ; }
getActivity ()
{ travelsList . addTravel ( travel ) ; }
public java.lang.StringByName ( java.lang.String name , boolean traverseNestedTypes ) { java.lang.String signature = getSignature ( name ) ; if ( signature == null ) return null ; org.eclipse.emf.common.util.URI resourceURI = typeUriHelper . createResourceURI ( signature ) ; if ( ( resourceURI . segment ( 0 ) ) == ( org.eclipse.xtext.common.types.access.jdt.JdtTypeProvider.PRIMITIVES ) ) { return findPrimitiveType ( signature , resourceURI ) ; } else { return findObjectType ( signature , resourceURI , traverseNestedTypes ) ; } }
{ java.util.List < com.sheepit.client.hardware.gpu.GPUDevice > gpus = new com.sheepit.client.hardware.gpu.nvidia.Nvidia () . getGpus () ; if ( gpus != null ) { com.sheepit.client.hardware.gpu.GPU.devices . addAll ( gpus ) ; } gpus = new com.sheepit.client.hardware.gpu.opencl.OpenCL () . getGpus () ; if ( gpus != null ) { com.sheepit.client.hardware.gpu.GPU.devices . addAll ( gpus ) ; } return true ; }
{ java.io.InputStream input = null ; java.io.InputStream input = null ; try { this . dbProperties . load ( input ) ; } catch ( java.io.IOException e ) { java.lang.System.out . println ( ( ( "Failed to load \"" + ( com.hiltondublin.db.HiltonDublinDBConnection.DB_PROPERTIES_FILENAME ) ) + "\"" ) ) ; e . printStackTrace () ; return false ; } return true ; }
float p_timestamp
static void writeMap ( net.openhft.chronicle.queue.ExcerptAppender appender , java.util.Map < java.lang.String , java.lang.Object > map ) { try ( net.openhft.chronicle.wire.DocumentContext context = appender . writingDocument () ) { net.openhft.chronicle.wire.Wire wire = context . wire () ; for ( java.util.Map.Entry < java.lang.String , java.lang.Object > entry : map . entrySet () ) { wire . writeEventName ( entry . getKey () ) . object ( entry . getValue () ) ; } } }
{ steps = 0 ; ( z ) ++ ; if ( ( z ) == 1 ) { setDirection ( Location.SOUTHWEST ) ; } else if ( ( z ) == 2 ) { setDirection ( Location.EAST ) ; } else if ( ( z ) == 2 ) { setDirection ( Location.EAST ) ; } else if ( ( z ) == 2 ) { setDirection ( Location.EAST ) ; } else if ( ( z ) == 2 ) { setDirection ( Location.EAST ) ; } }
{ super . onActivityCreated ( savedInstanceState ) ; android.support.v7.widget.RecyclerView tasksList = getView () . findViewById ( R.id.finished_tasks_recycler_view ) ; tasksList . setHasFixedSize ( true ) ; tasksList . setLayoutManager ( new android.support.v7.widget.LinearLayoutManager ( getContext () ) ) ; tasksList . setAdapter ( mAdapter ) ; }
{ framework.common.ClockCommon . switchMode ( "秒表" ) ; excute ( testcase.Object_Description , testcase.Operation_ClickWait , "开始" ) ; excute ( testcase.Object_Description , testcase.Operation_ClickWait , "停止" ) ; check ( testcase.Object_Description , testcase.Operation_checkExist , "重置" ) ; check ( testcase.Object_Description , testcase.Operation_checkExist , "开始" ) ; }
{ if ( this . isMoving ) { java.util.ArrayList < android.graphics.Rect > spriteSequence = dirSpriteMap . get ( curDirection ) ; curSpriteIndex = ( ( curSpriteIndex ) + 1 ) % ( spriteSequence . size () ) ; com.example.vincentzhang.Sprite.Vector2D newPos = this . getSpritePos () . applyDir ( this . getCurDirection () , this . getMoveSpeed () ) ; this . setSpritePos ( newPos ) ; } }
( ( server.config.properties . contains ( "c10tArgs" ) ) && ( maxAge > ( lastRun ) ) ) && ( ( server . numPlayers () ) > 0 )
label = ""
if ( prev != null ) { if ( ! ( dir . equals ( prev ) ) ) { java.lang.System.out . format ( "update: %s -> %s\n" , prev , dir ) ; } else { if ( ! ( dir . equals ( prev ) ) ) { java.lang.System.out . format ( "update: %s -> %s\n" , prev , dir ) ; } } keys . put ( key , dir ) ; }
{ s . init ( context ) ; java.util.List < java.lang.String > messages = new java.util.ArrayList < java.lang.String > () ; com.google.enterprise.adaptor.filenet.Logging . captureLogMessages ( com.google.enterprise.adaptor.filenet.FileNetAdaptor . class , "Invalid nameId:" , messages ) ; com.google.enterprise.adaptor.testing.RecordingResponse response = new com.google.enterprise.adaptor.testing.RecordingResponse ( new com.google.enterprise.adaptor.testing.RecordingResponse () ) ; org.junit.Assert . assertEquals ( new com.google.enterprise.adaptor.filenet.MockRequest ( new com.google.enterprise.adaptor.DocId ( "foo" ) ) , response ) ; }
{ if ( lv.kasparsj.android.util.Objects . equals ( intent . getAction () , getString ( R.string.action_update ) ) ) { if ( screenStateReceiver . isScreenOff () ) { pendingUpdateReceiver . setIsPendingUpdate ( true ) ; } else { lv.kasparsj.android.dwob.model.DailyWords . getInstance () . update () ; } } return super . onStartCommand ( intent , flags , startId ) ; }
{ result = mapper . readValue ( eventJson , org.simplebooks.integration.appdirect.model.appdirect.SubscriptionEvent . class ) ; try { result = mapper . readValue ( eventJson , org.simplebooks.integration.appdirect.model.appdirect.SubscriptionEvent . class ) ; } catch ( java.io.IOException iox ) { iox . printStackTrace () ; } return result ; }
callPuter ( null ) ;
return ( ( ( isProductUnique ( product ) ) && ( isProductCodeValid ( product ) ) ) && ( isProductNameValid ( product ) ) ) && ( isPricePositive ( product ) ) ;
{ if ( isFirst = true ) { if ( destX == ( ( this . x ) + 2 ) ) { isFirst = false ; return true ; } if ( destX == ( ( this . x ) + 1 ) ) { isFirst = false ; return true ; } return false ; } }
private void isAddStepsValid ( java.lang.String value ) { if ( ( value . length () ) > 0 ) { java.lang.String regex = "-?[\\d]+" ; validate ( value , regex , addSteps ) ; if ( ! ( value . matches ( regex ) ) ) { errorAddSteps . setVisible ( true ) ; } if ( ( java.lang.Integer . valueOf ( value ) ) >= 0 ) { errorAddSteps . setVisible ( false ) ; } } }
( grantResults [ i ] ) == ( android.content.pm.PackageManager.PERMISSION_DENIED )
@ java.lang.SuppressWarnings ( value = "unchecked" ) public static games.strategy. (a.ai.proAI.data.ProBattleResult callBattleCalculator ( final games.strategy.engine.data.PlayerID player , final games.strategy.engine.data.Territory t , final java.util.List < games.strategy.engine.data.Unit > attackingUnits , final java.util.List < games.strategy.engine.data.Unit > defendingUnits , final java.util.Set < games.strategy.engine.data.Unit > bombardingUnits , final boolean isAttacker ) { return games.strategy. true ; }
max = ( _scroll . getMaximum () ) - ( _scroll . getMinimum () ) ) - 1
public static void toh ( int n , char src , char dest , char aux ) { if ( n > 0 ) { com.datastructure.stack.problems.TowersOfHanoi . toh ( ( n - 1 ) , src , dest , aux ) ; java.lang.System.out . println ( ( ( ( ( n + " " ) + src ) + "-" ) + dest ) ) ; com.datastructure.stack.problems.TowersOfHanoi . toh ( ( n - 1 ) , dest , aux ) ; } }
new com.github.onsdigital.zebedee.json.ContentDetail ()
map . updateDisplay ( e )
saveToFile ( filename , events )
@ java.lang.Override public void run () { if ( ( ( mDownloadProgressDialog ) != null ) && ( mDownloadProgressDialog . isShowing () ) ) { mDownloadProgressDialog . dismiss () ; mDownloadProgressDialog = null ; } else { new android.app.AlertDialog.Builder ( this ) . setTitle ( R.string.success ) . setIcon ( R.drawable.ic_done_black_24dp ) . setMessage ( R.string.download_complete ) . setCancelable ( false ) . setPositiveButton ( R.string.label_ok , null ) . show () ; } }
java.util.List < session.Invite > myInvites = player . getInvites () ;
{ super . setUp () ; java.io.File inputFile = new java.io.File ( testFileRaw ) ; byte [] fileData = new byte [ ( ( int ) ( inputFile . length () ) ) ] ; java.io.DataInputStream dis = new java.io.DataInputStream ( new java.io.FileInputStream ( inputFile ) ) ; dis . readFully ( fileData ) ; sCore = new edu.berkeley.cs.succ . size () ; }
{ for ( double [] element : list ) { if ( ! ( java.util.Arrays . equals ( element , array ) ) ) { return false ; } } return false ; }
public void setDiscoverServices () { if ( ( serviceDiscoveryRegistered ) == false ) { android.util.Log . i ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG , "Setting up service discovery" ) ; registerServiceDiscoveryListeners () ; serviceDiscoveryRegistered = true ; } else { android.util.Log . i ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG , "Continuously Discover services called" ) ; if ( continueDiscovering ) { android.util.Log . w ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG , "Services are [ discovering, do not need to make this call" ) ; } else { android.util.Log . i ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG , "Calling discover and org first discover task" ) ; continueDiscovering = true ; discoverTasks = new java.util.ArrayList <> () ; } } }
public void saveUnsavedData () { org.md2k.thoughtshakeup.Questions . getInstance () . setEndTime ( org.md2k.datakitapi.time.DateTime . getDateTime () ) ; org.md2k.thoughtshakeup.Questions . getInstance () . setStatus ( Constants.ABANDONED_BY_TIMEOUT ) ; org.md2k.thoughtshakeup.QuestionAnswer . getInstance ( this ) . add ( new org.md2k.thoughtshakeup.QuestionsJSON ( org.md2k.thoughtshakeup.Questions . getInstance () ) ) ; org.md2k.thoughtshakeup.Questions . getInstance () . destroy () ; }
{ if ( ( ( value > > ( bit ) ) & 1 ) == 0 ) { return; } if ( ( cpu.C ) != 0 ) { cpu . setProgramCounter ( address ) ; cpu . addWaitCycles ( ( cpu.pageBoundaryPenalty ? 2 : 1 ) ) ; } }
given ( propertiesParser . getArray ( org.mockito.Matchers . any () , org.mockito.Matchers . anyString () , org.mockito.Matchers . anyString () ) ) . willReturn ( java.util.Optional . of ( new java.lang.String [] { "something" , "else" , "misconfiguration" } ) ) ;
{ android.util.Log . i ( com.expixel.binki.TAG , ( "MainActivity: loadShelf: item: " + ( postSnapshot . getKey () ) ) ) ; viewHolder.bookName . setText ( post.bookName ) ; viewHolder.likeCount . setText ( java.lang.String . valueOf ( post.starCount ) ) ; }
{ java.lang.String msg = sockin . readLine () ; messages . put ( msg ) ; }
org.talend.core.ui.ISparkJobletProviderService . class
public void setNode ( model.ClassNode person ) { this . node = person ; titleField . setText ( node . getTitle () ) ; attributesArea . setText ( node . attributesProperty () . getValue () ) ; operationsArea . setText ( node . operationsProperty () . getValue () ) ; }
{ android.util.Log . d ( com.trytara.tara.LoginActivity.TAG , ( "CURRENT nextUser . toString () ) ) ; finish () ; }
{ if ( ( currDragon ) == ( ( dragons . size () ) - 1 ) ) { currDragon = 0 ; addAccessory ( dragons . get ( currDragon ) ) ; } } else { currDragon += 1 ; addAccessory ( dragons . get ( currDragon ) ) ; }
excute ( testcase.Object_Description , testcase.Operation_WaitForExists , "更多选项" , "10000" )
public void markPhaseTable2 () { java.lang.String command = forall.HelpA . getValueSelectedRow ( mCRecipe.jTableSequnece1 , "Command Name" ) ; if ( command == null ) { return; } if ( command . equals ( "ADD textASE" ) ) { int phase = ( ( int ) ( java.lang.Double . parseDouble ( forall.HelpA . getValueSelectedRow ( mCRecipe.jTableSequnece1 , "Cmd Parameter" ) ) ) ) ; java.util.LinkedList < java.lang.Integer > list = getRowsWithGivenPhase ( phase , mCRecipe.jTableSequnce2 ) ; paint_selected_rows_a ( list , mCRecipe.jTableSequnce2 , java.awt.Color.LIGHT_GRAY ) ; } else { unpaintAllRows_a ( mCRecipe.jTableSequnce2 ) ; } }
{ clearLevel () ; break; }
json = null
{ short [] actions = new short [ size ] ; for ( int i = 0 ; i < size ; i ++ ) { actions [ i ] += ( in . read () ) < < 8 ; actions [ i ] += in . read () ; } return actions ; }
public void addCampaign ( snId ) throws java.lang.Exception { deleteCampaign ( new java.util.ArrayList < java.lang.String > () ) ; deleteCampaign ( new java.util.ArrayList < java.lang.String > () ) ; com.xrtb.common.CampaignUser = com.xrtb.bidder.WebCampaign . getInstance () . db . getCampaign ( new java.lang.Exception ( ( ( "Campaign " + snId ) + " does not exist in database" ) ) ; }
java.lang.Math . min ( ( ( main.java.Game.stepCounter ) - 1 ) )
this . serializer . getItems ()
temp.next . getData ( ( i + 1 ) )
if ( ! ( simpleName . isEmpty () ) ) { return entry . getKey () ; }
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { if ( ! ( dataSnapshot . exists () ) ) { com.makalaster.adventurefriends.model.User newUser = new com.makalaster.adventurefriends.model.User ( currentUser . getUid () , currentUser . getDisplayName () , currentUser . getEmail () ) ; database . child ( currentUser . getUid () ) . setValue ( newUser ) ; mUserHolder . LoadCurrentUser ( currentUser . getUid () ) ; } }
{ generatePrivateCPrototypes ( thing , builder , ctx ) ; java.lang.StringBuilder cppHeaderBuilder = ctx . getCppHeaderCode () ; for ( org.thingml.xtext.thingML.Function f : org.thingml.xtext.constraints.ThingMLHelpers . allFunctions ( thing ) ) { generatePrototypeforThingDirect ( f , cppHeaderBuilder , ctx , thing , true ) ; cppHeaderBuilder . append ( ";\n" ) ; } }
{ java.util.HashMap < java.lang.String , java.lang.Object > parameters = new java.util.HashMap <> () ; parameters . put ( CommandConstants.PARAM_BUS , bus ) ; client . sendMessage ( new travelAgencyNetwork.MessageCommands ( travelAgencyNetwork.CommandConstants.ADD_BUS , parameters ) ) ; }
{ boolean horizontal = ( checkWinHorizontal ( xTurn , column ) ) >= 4 ; boolean vertical = ( checkWinVertical ( xTurn , column ) ) >= 4 ; if ( checkWinDiagonal ( xTurn , column ) ) >= 4 ; return ( horizontal || vertical ) || ( ; }
@ org.springframework.web.bind.annotation.RequestMapping ( path = { ( ( "/" + ( j_DATA ) ) + "/" ) + ( SET_ID_PATH ) } , method = org.springframework.web.bind.annotation.RequestMethod.POST , produces = { org.springframework.http.MediaType.APPLICATION_JSON_VALUE , com.dataloom.datastore.constants.CustomMediaType.TEXT_CSV_VALUE } ) public java.lang.Iterable < com.google.common.collect.SetMultimap < org.apache.olingo.commons.api.edm.FullQualifiedName , java.lang.Object > > loadEntitySetData ( @ org.springframework.web.bind.annotation.PathVariable ( value = SET_ID ) java.util.UUID entitySetId , @ org.springframework.web.bind.annotation.RequestBody ( required = false ) com.dataloom.data.requests.EntitySetSelection req , @ org.springframework.web.bind.annotation.RequestParam ( value = FILE_TYPE , required = false ) com.dataloom.datastore.data.controllers.FileType fileType , javax.servlet.http.HttpServletResponse response ) { com.dataloom.datastore.data.controllers.DataController . setContentDisposition ( response , entitySetId . toString () , fileType ) ; com.dataloom.datastore.data.controllers.DataController . setDownloadContentType ( response , fileType ) ; return loadEntitySetData ( entitySetId , req , fileType ) ; }
private void seekTo ( int seekto ) { android.util.Log . d ( com.example.sunsai.mymusicplayer.PlayerActivity.TAG , "seekTo" ) ; android.content.Intent intent = new android.content.Intent ( this , com.example.sunsai.mymusicplayer.service.MusicService . class ) ; intent . setAction ( "SEEK_TO" , seekto ) ; startService ( intent ) ; }
android.util.Log . d ( com.samcodes.admob.BannerListener.TAG , ( "onBannerFailedToLoad: " + ( com.samcodes.admob.AdMobExtension . getErrorReason ( error ) ) ) )
lines . get ( 0 ) . split ( fieldSeparator . getText () )
public static void main () { Print_Nodes_in_Top_View_of_Binary_Tree solution = new Print_Nodes_in_Top_View_of_Binary_Tree () ; }
com.jersey.purchaseCase.controller.PurchaseCaseController.REDIRECT_ADD_COMMODITY . replace ( "{id}" , purchaseCaseId . toString () )
if ( currentField [ i ] [ j ] [ 0 ] . equals ( solutionField [ i ] [ j ] [ 0 ] ) ) return false ;
if ( address . contains ( fromRules [ i ] ) ) { return true ; }
new co.gov.inci.evaluon.backend.models.classes.user.Evaluee.Info ( user . getId () , co.gov.inci.evaluon.backend.models.classes.user.Evaluee . genderById ( gender . getCheckedRadioButtonId () ) )
private void onSetAlarmTime ( android.view.View view ) { android.os.Bundle bundle = new android.os.Bundle () ; bundle . putInt ( "set_hour" , hour ) ; bundle . putInt ( "set_util" , minute ) ; concentric.medalarm.AlarmTimePickerDialogFragment timePickerDialogFragment = new concentric.medalarm.AlarmTimePickerDialogFragment () ; timePickerDialogFragment . setHandler ( timePickerHandler ) ; timePickerDialogFragment . setArguments ( bundle ) ; concentric.medalarm.activity.FragmentManager fragmentManager = getSupportFragmentManager () ; concentric.medalarm.activity.FragmentTransaction fragmentTransaction = fragmentManager . beginTransaction () ; fragmentTransaction . add ( timePickerDialogFragment , "time_picker" ) ; fragmentTransaction . commit () ; }
assertArrayEquals ( canvas , consoleCanvas . getCanvas () )
price . add ( getSubContractPrice ( sub ) ) ;
cz.dd4j.utils.Safe . equals ( room1 )
{ java.util.Date heute = new java.util.Date () ; java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat ( "yyyy-MM-dd" ) ; java.util.Calendar c = java.util.Calendar . getInstance () ; c . setTime ( heute ) ; c . add ( java.util.Calendar.DATE , days ) ; java.lang.String df = sdf . format ( c . getTime () ) ; return df ; }
getTernProject () . getAllModules ()
{ stenen -= invoer ; beurten = true ; }
@ java.lang.Override public void run () { fractureanalysis.table.TableUtils tu = new fractureanalysis.table.TableUtils () ; for ( int column = 0 ; column < ( headerValues.length ) ; column ++ ) { tvDataset . getColumns () . add ( tu . createColumn ( column , headerValues [ column ] ) ) ; } }
{ java.util.List < cn.shiyanjun.ddc.scheduling.platform.component.DefaultSchedulingManager.TaskID > clearedTasks = com.google.common.collect.Lists . newArrayList () ; if ( ( tasks ) == null ) return; java.util.LinkedList < cn.shiyanjun.ddc.scheduling.platform.component.DefaultSchedulingManager.TaskID > tasks = managedJobToTaskList . remove ( jobId ) ; for ( cn.shiyanjun.ddc.scheduling.platform.component.DefaultSchedulingManager.TaskID id : tasks ) { ch.shiyanjun.ddc.scheduling.platform.component.DefaultSchedulingManager.LOG . info ( ( ( ( "In-memory stateObjectged: jobId=" + jobId ) + ", tasks=" ) + clearedTasks ) ) ; } }
{ java.util.ArrayList < pbs.parser.Statement > stmtlist = new java.util.ArrayList < pbs.parser.Statement > () ; pbs.parser.Statement s = nextStatement () ; while ( s != null ) { stmtlist . add ( s ) ; s = nextStatement () ; } match ( pbs.parser.LevelParser.END ) ; return stmtlist ; }
sb . append ( message . toString () )
new dna.FastqRecord ( line1 , line2 , line3 )
{ int bits = 4 ; int [] ids = new int [] { 6 , 9 } ; int firstId = 3 ; java.util.ArrayList < java.lang.Integer > e = new java.util.ArrayList <> ( ids.length ) ; for ( int id : ids ) { e . add ( id ) ; } java.util.Collections . sort ( e ) ; ChordNetwork net = new ChordNetwork ( bits , firstId ) ; net . addNodes ( e ) ; }
{ nl.weeaboo.vn.math.Matrix inputTransform = parentTransform . getIdCopy ( ( - ( getX () ) ) , ( - ( getY () ) ) ) ; for ( nl.weeaboo.vn.scene.IVisualElement elem : nl.weeaboo.vn.scene.impl.SceneUtil . getChildren ( this ) ) { elem . handleInput ( inputTransform ) ; } super . handleInput ( parentTransform , input ) ; }
{ net.torocraft.minecoprocessors.processor.Processor processor = net.torocraft.minecoprocessors.processor.ProcessorTest . setupTest ( 5 , 6 , 0 , 0 , " , a, b" ) ; processor . processXor () ; assertRegisters ( processor , 3 , 6 , 0 , 0 ) ; assertFalse ( processor.zero ) ; processor = net.torocraft.minecoprocessors.processor.ProcessorTest . setupTest ( 5 , 5 , 0 , 0 , " , a, b" ) ; processor . processXor () ; assertRegisters ( processor , 0 , 5 , 0 , 0 ) ; org.junit.Assert . assertTrue ( processor.zero ) ; }
if ( ( getEdges () . get ( i ) . getP1 () ) == p ) { vs . add ( getEdges () . get ( i ) ) ; }
{ componentSelectionPanel . clear () ; for ( int i = 0 ; i < ( data.componentIdList . size () ) ; i ++ ) { com.google.gwt.user.client.ui.HTML item = new com.google.gwt.user.client.ui.HTML ( data.componentIdList . get ( i ) ) ; item . setStyleName ( "wmt-ComponentSelectionMenuItem" ) ; } if ( ( data.componentIdList . size () ) > ( edu.colorado.csdms.wmt.client.Constants.SCROLL_THRESHOLD ) ) { scroller . setSize ( Constants.MENU_WIDTH , Constants.MENU_HEIGHT ) ; } }
upTransaction . setCustomAnimations ( R.anim.slide_out_bottom , getString ( upTransaction ) )
public void iffaux ( java.lang.String etiquette ) { compiler.Ecriture . ecrireStringln ( flux , ( ";iffaux " + etiquette ) , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , "pop ax" , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , "cmp ax,FALSE" , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , ( "je " + etiquette ) , ( ( indent ) + 1 ) ) ;
{ if ( ! ( name . equals ( names [ 0 ] ) ) ) { return; } launchActivity () ; }
{ com.couchbase.lite.util.Log . v ( Log.TAG_SYNC , ( ( ( "[onExitValue " + ( transition . getSource () ) ) + " => " ) + ( transition . getDestination () ) ) ) ; goOnline () ; notifyChangeListenersStateTransition ( transition ) ; }
public static java.lang.String readStringFromFile ( java.io.File inputFile ) { if ( ( ! ( edu.iastate.symex.util.FileIO.TURN_CACHE_ON ) ) || ( ! ( edu.iastate.symex.util.FileIO.fileMap . containsKey ( inputFile ) ) ) ) edu.iastate.symex.util.FileIO.fileMap . put ( inputFile , edu.iastate.symex.util.FileIO . readStringFromFileWithoutCache ( inputFile ) ) ; return edu.iastate.symex.util.FileIO.fileMap . get ( inputFile ) ; }
jdbcTemplate . update ( UPDATE , new java.lang.Object [] { student . getFirstName () , student . getLastName () , student . getIdStudent () ) ; }
i = 1
{ if ( ( ( a.ability ) == ( shared.roles.Jailor.EXECUTE_ ) ) && ( ( a . getTargets () . size () ) > ( j . trim () . size () ) ) ) Exception ( "Cannot execute ( "Cannot execute ( getP ) ) . getTargets () . size () ) ; if ( ( getP ()ivedCh ) != ( shared.logic.support.rules.Rules.UNLIMITED ) ) if ( ( a . getTargets () ) != ( shared.logic.support.rules.Rules.UNLIMITED ) ) return false ; }
@ org.junit.Ignore public void kebabCase_shouldConvertAStringToKebabCase ( ) throws java.lang.Exception { java.lang.String [] input = new java.lang.String [] { "Foo Bar" , "fooBar" , "__FOO_BAR__" } ; java.util.Arrays . stream ( input ) . forEach ( ( el ) - > assertThat ( java.lang.String . format ( "%s should be foo-bar" , el ) , toKebabCase ( el ) , is ( equalTo ( "foo-bar" ) ) ) ) ; }
private void showMessage () { java.lang.String message = tfMainInput . getText () ; if ( message . equals ( "" ) ) { return; } tfMainInput . setText ( "" ) ; my.edu.taylors.dad.chat.entity.Message newMessage = new my.edu.taylors.dad.chat.entity.Message ( message , my.edu.taylors.dad.chat.entity.ClientType.ME ) ; addMessage ( newMessage ) ; sendMessage ( message ) ; }
@ java.lang.Override public java.lang.String resolveIssue () { if ( ! ( queue . getSolution ( solutions [ current . getPriority () ] ) ) ) { current . setSolution ( solutions [ current . getPriority () ] ) ; } else { java.lang.String q = ( ( "Issue: " + current ) + "\nSolution: " ) + ( current . getSolution () ) ; } return q ; }
{ serverSocket = new java.net.ServerSocket ( port ) ; serverSocket . setSoTimeout ( timeOut ) ; socket = serverSocket . accept () ; printWelcome () ; java.lang.Thread messageReceiver = new htw.lab04.app.MessageReceiver ( socket ) ; messageSender . start () ; messageReceiver . start () ; }
return super . equals ( other.characters ) ;
if ( ( ! ( five . equals ( "pre-trip" ) ) ) || ( ! ( five . equals ( "log-in" ) ) ) ) { startLogOutService () ; navigateToLogin () ; navigateToLogin () ; }
{ java.lang.Object newInstance = newActionInstance ( actionXml ) ; @ java.lang.SuppressWarnings ( value = "unchecked" ) com.progressoft.jip.ui.action.Action < T > action = ( ( com.progressoft.jip.ui.action.Action < T > ) ( newInstance ) ) ; return action ; }
Driver newClient = new Client ( email ) ;
{ java.math.BigDecimal semYear = result . get ( curr lPeriod ) ; result . put ( curr default ) ; }
{ boolean update = alwaysRedraw ; if ( ( ( _caretOffset ) == null ) || ( ( _caretOffset ) == 0 ) ) { _textWidget . redraw () ; update |= clearHoveredPairsToPaint () ; } if ( singleBracketsTouched ) update |= updateSingleBrackets () ; if ( ! ( true ) ) { _textWidget . getDisplay () . asyncExec ( new java.lang.Runnable () { @ java.lang.Override public void run () { _textWidget . redraw () ; } } ) ; } }
{ final org.glassfish.grizzly.http.server.HttpServer server = org.glassfish.grizzly.http.server.HttpServer . createSimpleServer ( "html" , 80 ) ; com.fonyli.tonyliweb.functions.markovchain.MarkovChain . getInstance () . selectTeacher ( MarkovChain.SHAKESPEARE ) ; com.fonyli.tonyliweb.server.MainService . addHttpHandlers ( server ) ; org.glassfish.grizzly.http.server.StaticHttpHandler staticHttpHandler = new org.glassfish.grizzly.http.server.StaticHttpHandler ( "html" ) ; server . getServerConfiguration () . addHttpHandler ( staticHttpHandler ) ; com.fonyli.tonyliweb.server.MainService . start ( server ) ; }
{ for ( int i = 0 ; i < ( extensions.length ) ; i ++ ) { if ( path . toLowerCase () . endsWith ( extensions [ i ] ) ) { return true ; } } return false ; }
public boolean isPrime ( java.lang.String number ) { if ( ( number < 2 ) || ( ( number % 2 ) == 0 ) ) { return false ; } if ( number == 2 ) { return true ; } if ( number == 2 ) { return true ; } else { oddNumber <= ( java.lang.Math . sqrt ( number ) ) ; oddNumber += 2 ) { if ( ( number % oddNumber ) == 0 ) { return false ; } } } return true ; }
{ zhenghaiqiang.com.wynews.utils.Util . toast ( mActivity ) ; ( page ) ++ ; totalUrl = ( baseUrl ) + ( getPageValue ( page ) ) ; getData () ; }
if ( options != null ) { for ( int i = 0 ; i < ( options . size () ) ; i ++ ) { options . get ( i ) . setSize ( 30 , 30 ) ; } }
for ( edu.virginia.engine.display.DisplayObject child : children ) { child . draw ( g ) ; }
{ if ( ( first ) != null ) { Deque < Item > . Node node = first ; first = first.next ; first.previous = null ; ( size ) -- ; return node.item ; } else if ( ( first ) != null ) { Deque < Item > . Node node = first ; first = null ; last = null ; ( size ) -- ; return node.item ; } else { throw new java.util.NoSuchElementException () ; } }
@ java.lang.Override protected void onPostExecute ( com.wozainali.manho.myapplication.kml.Placemark placemark ) { com.squareup.otto.Bus bus = com.wozainali.manho.myapplication.bus.ZaiNaliBus . getBus () ; bus . post ( new com.wozainali.manho.myapplication.bus.events.ZoomToPointEvent ( placemark ) ) ; bus . post ( new com.wozainali.manho.myapplication.bus.events.AddMarkerEvent ( placemark ) ) ; bus . post ( new com.wozainali.manho.myapplication.bus.events.DrawPolygonsEvent ( placemark . getPol.s () ) ) ; }
count = menuView . getChildCount ()
buddyInstructionEditText . getText () . toString ()
{ if ( strength == 0 ) strengthButton0 . setSelected ( true ) ; else if ( strength == 1 ) strengthButton1 . setSelected ( true ) ; else if ( strength == 2 ) strengthButton2 . setSelected ( true ) ; else if ( strength == 3 ) strengthButton3 . setSelected ( true ) ; else if ( strength == 4 ) strengthButton4 . setSelected ( true ) ; else strengthRadioGroup . clearSelection () ; }
{ org.wargamer2010.signshop.blocks.SignShopItemMeta.legacy = ( versionUtil . getBukkitVersionType () ) == ( org.wargamer2010.signshop.util.SSBukkitVersion.Preutil ) ; if ( org.wargamer2010.signshop.blocks.SignShopItemMeta.legacy ) return; org.wargamer2010.signshop.blocks.SSDatabase db = new org.wargamer2010.signshop.blocks.SSDatabase ( org.wargamer2010.signshop.blocks.SignShopItemMeta.filename ) ; try { if ( ! ( db . tableExists ( "ItemMeta" ) ) ) db . runStatement ( "CREATE TABLE ItemMeta ( ItemMetaID INTEGER, ItemMetaHash INT, PRIMARY KEY(ItemMetaID) )" , null , false ) ; if ( ! ( db . tableExists ( "MetaProperty" ) ) ) db . runStatement ( "CREATE TABLE != null ) ; } finally { db . close () ; } }
public static java.lang.Boolean attachAssetToAccount ( java.lang.String accountUuid , java.lang.String assetUuid ) { java.util.HashMap < java.lang.String , java.lang.String > params = new java.util.HashMap < java.lang.String , java.lang.String > () ; params . put ( KeyConstants.Uuid , accountUuid ) ; params . put ( KeyConstants.AttachedAssetUuid , assetUuid ) ; java.lang.System.out . println ( "--------------------------------------------------" ) ; java.lang.System.out . println ( accountUuid ) ; java.lang.System.out . println ( assetUuid ) ; java.lang.System.out . println ( "--------------------------------------------------" ) ; return instances.sample_rating.WeightedRate.repository . accountAttach ( params ) ; }
private void validateHeader ( final org.milyn.csv.CSVReader reader ) throws java.io.IOException { java.lang.String [] headers = reader . readNext () ; if ( headers == null ) { throw new org.milyn.csv.CSVHeaderValidationException ( getFieldNames ( fields ) ) ; } if ( validateHeader ( fields , headers ) ) { return; } throw new org.milyn.csv.CSVHeaderValidationException ( getFieldNames ( fields ) , headers ) ; }
{ jobExtensionPoint . setRuntimeEnabled ( false ) ; jobExtensionPoint . callExtensionPoint ( null , job ) ; assertNotNull ( listeners ) ; assertFalse ( listeners . contains ( jobExtensionPoint ) ) ; }
{ insertBracketAfterEventually ( tokenizer ) ; try { text = functionMap . get ( originalText ) . apply ( originalText ) ; } catch ( java.lang.NullPointerException e ) { try { text = tokenFunctionMap . get ( originalText ) . apply ( this ) ; } catch ( java.lang.NullPointerException ee ) {} } }
{ if ( ( this . getSpezialfaehigkeit () ) == true ) { this . wahrscheinlichkeit () ; if ( ( this . wahrscheinlichkeit () ) == true ) { java.lang.System.out . println ( "Erfolgreich!" ) ; this . schadenNehmen ( ( schaden * 2 ) ) ; } else schaden = schaden / 2 ; } super . angreifen ( gegner ) ; }
private void showBoardLine ( final int row ) { for ( int i = 0 ; i < ( game . getBoard () . getRowLength ( row ) ) ; i ++ ) { if ( ( game . getBoard () . getFigure ( row , i ) ) == null ) { java.lang.System.out . print ( com.java.laiy.view.ConsoleView.EMPTY_ ) ; } else { java.lang.System.out . print ( game . getBoard () . getFigure ( row , i ) . toString () ) ; } } java.lang.System.out . println () ; }
com.google.common.collect.Iterables . transform ( new com.google.common.collect.Iterables . filter ( options , com.github.rvesse.airline.model.OptionMetadata . isHiddenPredicate () ) , new com.google.common.base.Function < com.github.rvesse.airline.model.OptionMetadata , java.lang.String > () { public java.lang.String apply ( com.github.rvesse.airline.model.OptionMetadata option ) { if ( ( option . isHidden () ) && ( ! ( includeHidden () ) ) ) { return "" ; } } return toUsage ( option ) ; }
try { rd . forward ( request , response ) ; } catch ( javax.servlet.ServletException e ) { Servlet.Commands.LOG . error ( e ) ; }
{ line = line . replace ( "\t" , "" ) ; java.util.regex.Pattern pattern = java.util.regex.Pattern . compile ( "' )?)'" ) ; java.util.regex.Matcher matcher = pattern . matcher ( line ) ; if ( matcher . find () ) line = matcher . group ( 1 ) ; return line ; }
{ if ( ! ( false ) ) { return; } java.lang.String entityData = server.world . toString () ; connection . send ( ( "pos:" + ( e ) ) ) ; if ( ( entityData . length () ) > 0 ) { connection . send ( ( ( ( "dat" + ( getData ) ) ) + ":" ) + entityData ) ) ; } }
synchronized ( this . lock ) { if ( this . grantedTicketAlready ) { throw new java.lang.IllegalStateException ( "PGT already generated for this ST. Cannot grant more than one TGT for ST" ) ; } this . grantedTicketAlready = java.lang.Boolean.TRUE ; }
if ( ( bounds . getHeight () ) > ( com.ggwp.interiordesigner.object.Room.MINIMUM_DIMENSION ) ) { float scalePercentage = 1.0F + ( ( ( com.ggwp.interiordesigner.object.Room.SCALE_AMOUNT ) / ( bounds . getHeight () ) ) * multiplier ) ; for ( com.ggwp.interiordesigner.object.Wall wall : getWalls () ) { wall.transform . scale ( 1.0F , scalePercentage , 1.0F ) ; } }
if ( c . isNA ( i ) ) continue; else c . set ( i , fromTo [ ( ( int ) ( c . at8 ( i ) ) ) ] ) ;
try { lists = getList () ; dbTransaction . commit () ; } catch ( org.hibernate.HibernateException e ) { if ( ( dbTransaction ) != null ) { dbTransaction . rollback () ; } e . printStackTrace () ; }
switch ( rightPowerup ) { case 1 : if ( ( counter ) == ( rightEnd ) ) { leftMallet.stop = false ; rightPowerup = - 1 ; } break; case 2 : if ( ( counter ) == ( rightEnd ) ) { leftMallet.radius = leftMallet.defaultRadius ; rightPowerup = - 1 ; } }
valueListServices ( taxonomy , schemaType , groupLabel )
{ m_map [ r ] = new GameObject [ m_numCols ] ; for ( int c = 0 ; c < ( m_numCols ) ; c ++ ) m_map [ r ] [ c ] = null ; }
{ log . info ( "User Not found email [{}]" , login ) ; return null ; }
{ setIndex ( position ) ; ca.ualberta.cs.zindi.zindi_sizebook.Person mPerson = newPeopleList . get ( position ) ; android.content.Intent mIntent = new android.content.Intent ( this , ca.ualberta.cs.zindi.zindi_sizebook.PersonActivity . class ) ; android.os.Bundle mBundle = new android.os.Bundle () ; mBundle . putParcelable ( ca.ualberta.cs.zindi.zindi_sizebook.MainActivity.PAR_KEY , mPerson ) ; mIntent . putExtras ( mBundle ) ; startActivityForResult ( mIntent , ca.ualberta.cs.zindi.zindi_sizebook.MainActivity.EDIT_REQUEST ) ; }
{ if ( ! ( yourField . at ( pos ) ) ) { return "missed!\n" ; } java.lang.String hitstr = "" ; boolean sunk = false ; hitstr = yourField . addHit ( pos ) ; if ( hitstr . contains ( "sunk" ) ) ( this . shipsDestroyed ) ++ ; return hitstr ; }
manager . getGameManagerClient ()
if ( contact . getNumber () ) { java.lang.System.out . println ( ( ( "That number already exists for contact " + ( contact . getName () ) ) + ". Try a different one" ) ) ; continue; } else if ( contact == null ) { java.lang.System.out . println ( "Adding new number..." ) ; }
{ android.util.Log . w ( com.fwgg8547.mycast.CardModel.TAG , "fail movetopos" ) ; return null ; }
{ final java.util.Calendar c = java.util.Calendar . getInstance () ; int hour = c . get ( java.util.Calendar.HOUR_OF_DAY ) ; int minute = c . get ( java.util.Calendar.MINUTE ) ; hourOfDay = "" ; return new android.app.TimePickerDialog ( getActivity () , this , hour , minute , android.text.format.DateFormat . is24HourFormat ( getActivity () ) ) ; }
switch ( input ) { case "q" : scanner . close () ; break; case "a" : loadLanguage ( getJars () ) ; break; case "s" : switchLanguage () ; }
connectBudgetAndUser ( bid , uidAsString , emailHash )
{ openConnection () ; java.sql.PreparedStatement statement = connection . prepareStatement ( query ) ; statement . execute () ; } catch ( java.sql.SQLException e ) { if ( silence ) {} else { e . printStackTrace () ; } }
userGroupEntityController . findUserGroupEntityByDataSourceAndIdentifier ( false )
model . addAttribute ( "showAcceptorsExtendenceButton" , true )
{ if ( ( ( this ) instanceof com.nkoiv.mists.game.gameobject.Structure ) && ( ( com.nkoiv.mists.game.Mists.structureLibrary ) != null ) ) { com.nkoiv.mists.game.gameobject.Structure dummy = Mists.structureLibrary . create ( templateID ) ; if ( dummy == null ) return; this . graphics = dummy.graphics ; } else this . graphics = new com.nkoiv.mists.game.sprites.Sprite () ; this . graphics . setPosition ( xCoor , yCoor ) ; }
private void makeBestMove () { ais [ ( ( game . getTurn () ) % 2 ) ] . findBestMoves ( game ) ; chess.domain.Move move = ais [ ( ( game . getTurn () ) % 2 ) ] . getBestMove () ; setChosen ( move . getPiece () ) ; moveToTargetLocation ( move . getTarget () . getColumn () , move . getTarget () . getRow () , game , true ) ; }
switch ( oldAgentOrientation ) { case true : env.agentOrientation = new java.util.ArrayList < java.lang.String > () ; switch ( oldAgentOrientation ) { case true : env.agentOrientation = new java.util.ArrayList < java.lang.String > () ; } return true ; }
{ info . remove ( it ) ; break; }
{ for ( int i = interval.start ; i <= ( interval.end ) ; i ++ ) { int tokenIndex = suffix_array [ i ] ; lcp_interval_array [ tokenIndex ] = interval ; } }
{ super . done () ; try { iconCache = new java.lang.ref.SoftReference <> ( super . get () ) ; progressHandle . finish () ; fireIconChange () ; if ( ( timer ) != null ) { timer . stop () ; timer = null ; } } catch ( java.lang.InterruptedException | java.util.concurrent.ExecutionException ex ) { org.sleuthkit.autopsy.coreutils.Logger . getLogger ( org.sleuthkit.autopsy.corecomponents.ThumbnailViewNode . class . getName () ) . log ( java.util.logging.Level.SEVERE , "Error getting thumbnail icon" , ex ) ; } swingWorker = null ; }
db . modifySchedule ( pickedDay , time , "BUSY" )
if ( ( dateFirstDate . getValue () ) != null ) { try { getAllAbsence ( firstDate , secondDate ) ; } catch ( java.sql.SQLException ex ) { java.util.logging.Logger . getLogger ( attendance.gui.controller.TeacherViewController . class . getName () ) . log ( java.util.logging.Level.SEVERE , null , ex ) ; } }
private static javafx.animation.ParallelTransition createDynamicAtTimeStep ( java.lang.Double timeStep , java.lang.Double timeStep ) throws java.lang.Exception { tum.cms.sim..um.utility.csvData.reader.SimulationOutputCluster dataStepCurrent = null ; while ( dataStepCurrent == null ) { dataStepCurrent = simulationOutputReader . asyncReadDataSet ( timeStep ) ; if ( dataStepCurrent == null ) { java.lang.Thread . sleep ( 200 ) ; } } return tum.cms.sim..um.visualization.utility.AnimationCalculations . updateCustomData ( simulationOutputReader . getCsvType () , dataStepCurrent , coreController ) ; }
public void printArray ( int [] array ) { for ( int i = 0 ; i < ( array.length ) ; i ++ ) { java.lang.System.out . print ( i ) ; if ( i != ( ( array.length ) - 1 ) ) { java.lang.System.out . print ( " " ) ; } } }
header . startsWith ( type.type )
{ super . onCreate ( savedInstanceState ) ; com.jaitlapps.bestadvice.domain.list.ListRecordGroup listRecordGroup = com.jaitlapps.bestadvice.database.FavoriteManager . getInstance () . getList () ; com.jaitlapps.bestadvice.adapter.ListAdapter adapter = new com.jaitlapps.bestadvice.adapter.ListAdapter ( getActivity () , listRecordGroup ) ; com.jaitlapps.bestadvice.database.FavoriteManager . getInstance () . setAdapter ( adapter ) ; setListAdapter ( adapter ) ; }
pr . end ()
if ( microphoneMuted ) { image = new javafx.scene.image.Image ( ch.uzh.csg.p2p.controller.MainWindowController . class . getResourceAsStream ( "/microphone_muted.png" ) ) ; android.scene.image.Image image ; if ( microphoneMuted ) { image = new javafx.scene.image.Image ( ch.uzh.csg.p2p.controller.MainWindowController . class . getResourceAsStream ( "/microphone_muted.png" ) ) ; java.lang.System.out . println ( audioUtils . toString () ) ; } } else { image = new javafx.scene.image.Image ( ch.uzh.csg.p2p.controller.MainWindowController . class . getResourceAsStream ( "/microphone.png" ) ) ; }
{ clear () ; org.springframework.beans.factory.config.YamlProperties model yaml = new org.springframework.beans.factory.config.YamlPropertiesFactoryBean () ; yaml . setResources ( new org.springframework.core.io.FileSystemResource ( rate getContextYaml ) ) ; rate.Properties = yaml . getObject () ; this . time_frame = ( ( int ) ( ratesProperties . get ( "time-frame" ) ) ) * 1000 ; }
org.mockito.Mockito . verify ( goConfigService )
{ progress1 . setTextProgress ( b . getPayout () . toEngineeringString () ) ; buyButton . setText ( ( ( ( ( ( b . getName () ) + ":" ) + ( b . getNumOfBuildings () . toEngineeringString () ) ) + "\nBuy:" ) + ( b . getPrice () . toEngineeringString () ) ) ) ; }
this . client . getProperties ( this . resourceGroupName () )
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_register ) ; super . onCreateDrawer () ; if ( savedInstanceState == null ) { getSupportFragmentManager () . beginTransaction () . add ( R.id.container , new com.gatech.objectsanddesign.shoppingwithfriends.RegisterActivity.PlaceholderFragment () ) . commit () ; } }
{ final org.cytoscape.application.CyApplicationManager appMgr = service . getService ( org.cytoscape.application.CyApplicationManager . class ) ; appMgr . setCurrentNetwork ( currentNetwork ) ; appMgr . setCurrentNetworkView ( currentView ) ; appMgr . setSelectedNetworks ( new java.util.ArrayList ( selectedNetworks ) ) ; appMgr . setSelectedNetworkViews ( new java.util.ArrayList ( selectedViews ) ) ; }
grammar . getTextContent () . equals ( "wfst\n" )
{ if ( ( ( this . securityService ) == null ) || ( ! ( autorIntern () ) ) ) { return false ; } de.fraunhofer.igd.klarschiff.service.security.User user = this . securityService . getUserByEmail ( this . autorEmail ) ; if ( user == null ) { return false ; } return user . getAussendienstTeams () . isEmpty () ; }
java.lang.StringBuffer sb = new java.lang.StringBuilder () ;
{ int selectedIdentity = de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.ownOrgUnits . getSelectedIndex () ; if ( ( de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.ownOrgUnits . getSelectedIndex () ) == 0 ) { return de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.person . getId () ; } else if ( ( de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.ownOrgUnits . getSelectedIndex () ) == 1 ) { return de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.team . getId () ; } else if ( ( de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.ownOrgUnits . getSelectedIndex () ) == 2 ) { return de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.unternehmen . getId () ; } return 0 ; }
"error" . equals ( testcase )
if ( ( e == null ) || ( data != null ) ) { restaurantModel = new com.example.vanne.tradish_alpha.Models.RestaurantModel ( name , address , restId , data ) ; restaurantModels . add ( restaurantModel ) ; restaurantModels . add ( restaurantModel ) ; updateListView () ; } else { restaurantModel = new com.example.vanne.tradish_alpha.Models.RestaurantModel ( name , address , restId ) ; restaurantModels . add ( restaurantModel ) ; updateListView () ; }
md . digest ( sb . toString () )
{ p = java.awt.MouseInfo . getPointerInfo () . getLocation () ; drag . move ( ArkBot.global.CHAR_INV_SEARCH_BAR ) ; leftClick () ; bot . delay ( Global.PAUSE ) ; leftClick () ; robtype . type ( type ) ; }
io.druid.indexing.jdbc.JDBCIndexTaskTest . put ( 0 , 10 )
adapter . getCommandsTableItem ( java.lang.String . format ( "= %d" , cid ) , null , null ) ;
threadUpdater . schedule ( new ca.team4519.lib.Threader.UpdaterTask ( this ) , 0L , ( ( ( long ) ( this . period ) ) * 1000 ) )
{ refPanel . setProductButtons ( this . productButtons ) ; if ( ( this . state ) == ( state.OrderSUMMARY ) ) { this . customer . addTransaction ( this . transaction . getTransactionNum () ) ; this . customer . write () ; this . transaction . write () ; if ( this . writeToGlobalReciept ) { this . writeReceipt () ; this . writeToGlobalReciept = false ; } } }
{ dateStr = dateStr . replaceAll ( "\\s" , "/" ) ; java.text.DateFormat df = new java.text.SimpleDateFormat ( "yyyy/MMM/dd/HH:mm" , java.util.Locale.US ) ; try { java.util.Date localDate = df . parse ( dateStr ) ; this . arr_local_time = localDate ; } catch ( java.text.ParseException e ) { e . printStackTrace () ; } }
{ getContentResolver () . delete ( null ) ; android.widget.Toast . makeText ( this , R.string.deleted , Toast.LENGTH_SHORT ) . show () ; startActivity ( intent ) ; }
return ( reference ) == ( node . getReference () ) ;
return ( ( java.lang.Boolean ) ( cursorPosition ) ) . intValue () ;
switch ( mi . getItemId () ) { case R.id.menu_prf : startActivity ( new android.content.Intent ( this , com.acmetensortoys.ctfwstimer.SettingsActivity . class ) ) ; return true ; case R.id.menu_about : startActivity ( new android.content.Intent ( this , com.acmetensortoys.ctfwstimer.AboutActivity . class ) ) ; return true ; case R.id.menu_mqtt : android.support.v4.app.DialogFragment d = com.acmetensortoys.ctfwstimer.StringSettingDialogFragment . newInstance ( R.layout.server_dialog , R.id.server_text , "server" , com.acmetensortoys.ctfwstimer.MainActivity.defserver ) ; d . show ( getSupportFragmentManager () , "serverdialog" ) ; }
io.cereebro.spring.annotation.LOGGER . error ( metadata . getReturnTypeName () )
public boolean isMailingEnabledAndValid () { if ( ( host ) == "" ) { return false ; } if ( ( ( isAuthentication . ) != "false" ) && ( ( login ) == "" ) ) { com.siemens.sw360.mail.MailUtil.log . error ( "Cannot sendText: authentication", but login is not set." ) ; return false ; } return true ; }
{ java.lang.System.out . println ( ex ) ; txResults . clear () ; }
{ super . updateItem ( t , bln ) ; if ( t != null ) { java.lang.System.out . println ( ( "IN SBC Setting text to: " + ( t . getFilePath () . substring ( application.services.GeneralService . getDataSetDirectory () . length () ) ) ) ) ; setText ( t . getFilePath () . substring ( application.services.GeneralService . getDataSetDirectory () . length () ) ) ; setText ( "Choose..." ) ; } }
if ( curPlugin . getName () . startsWith ( "zh_def_catalog" ) ) { mapTagTemplate1 . put ( "SceneMetaDataFile" , objectivePath ) ; } else { mapTagTemplate2 . put ( "SceneMetaDataFile" , ( ( frameFilePath ) + "_meta.xml" ) ) ; }
public void populateCapturePoints ( java.util.ArrayList < com.demo.arctf.arctfdemo.CapturePoint > capturePointList ) { for ( com.demo.arctf.arctfdemo.CapturePoint point : capturePointList ) { com.google.android.gms.maps.model.Marker captureMarker = mMap . addMarker ( new com.google.android.gms.maps.model.MarkerOptions () . position ( point . getLocation () ) . icon ( com.google.android.gms.maps.model.BitmapDescriptorFactory . defaultMarker ( BitmapDescriptorFactory.HUE_AZURE ) ) . title ( point . getName () ) ) ; capturePoints . put ( captureMarker , point ) ; } }
{ this . setDescription ( entry . getDescription () ) ; if ( entry . getGitUrl () . isEmpty () ) { return entry ; } else if ( ! ( entry . getGitUrl () ) ) { gitUrl = entry . getGitUrl () ; } }
u . contains ( u . contains ( i ) )
public boolean compileCode ( java.lang.String code , java.lang.String className ) { vk.core.api.CompilationUnit cu = new vk.core.api.CompilationUnit ( className , code , false ) ; vk.core.api.JavaStringCompiler jsc = vk.core.api.CompilerFactory . getCompiler ( cu ) ; jsc . compileAndRunTests () ; vk.core.api.CompilerResult cr = jsc . getCompilerResult () ; if ( cr . hasCompileErrors () ) { info = formatCompileErrors ( cr , cu ) ; return false ; } return true ; }
{ removeLoadingSpinner () ; java.util.List < uk.ac.ncl.csc2022.t14.bankingapp.models.HeatPoint > allPoints = new java.util.ArrayList <> () ; if ( responseParser . parseLoadHeatPoints ( json , allPoints ) ) { delegate . loadHeatMapPassed ( allPoints ) ; } else { message = responseParser . parseErrorOrDefault ( message ) ; delegate . loadHeatMapFailed ( message ) ; } }
private static void writePage ( javax.servlet.http.HttpServletResponse response , int httpCode , java.lang.String message , org.geowebcache.stats.RuntimeStats runtimeStats ) { org.geowebcache.io.Resource res = null ; if ( message != null ) { res = new org.geowebcache.io.ByteArrayResource ( message . getBytes () ) ; } org.geowebcache.GeoWebCacheUtils . writeFixedResponse ( response , httpCode , contentType ) ; }
if ( oldfirst != null ) { oldfirst.previous = newfirst ; }
{ gameStart () ; battleStart () ; while ( ( GameOn ) == true ) { battleActive () ; boolean a = battleEnd () ; if ( a == true ) { onPlayerWin () ; } if ( a == false ) { onPlayerLose () ; GameOn = false ; } } }
return weatherWaypoints . get ( i ) ;
{ java.lang.String urlString = urlText . toString () ; java.io.InputStream is = edu.cornell.library.lc_converter.mapreduce.MarcConversionMapper . getUrl ( urlString ) ; java.util.HashSet < java.lang.String > marcRecords = this . marcxmlCollectionParser ( is ) . iterator () ; for ( java.lang.String marcXml = marcRecords . next () ; marcRecords . hasNext () ; marcXml = marcRecords . next () ) { context . write ( marcXml , null ) ; } }
final java.lang.String result = false
new org.alopex.hyperios.helix.Specimen ()
{ java.lang.System.out . println ( getComputerNum () ) ; this . computerGateway . find ( getComputerNum () , getLaboratory () ) ; if ( ( ( this . computerGateway . getCurrent () ) != null ) && ( ( this . computerGateway . getCurrent () . getState () ) == ( es.uvigo.esei.infraestructura.entities.State.INCIDENCE ) ) ) { java.lang.System.out . println ( "TENGO INCIDENCIA" ) ; return true ; } return false ; }
for ( int current_depth ) { if ( ( current_depth ) > 0 ) current_depth > 0 ; -- current_depth ) { if ( ( current_depth ) != null ) current_depth > 0 ; -- current_depth ) { if ( ( current_depth ) != null ) current_depth > 0 ; -- current_depth ) { if ( ( current_depth ) != null ) current_depth > 0 ; -- current_depth ) { if ( current_depth != 0 ) current_depth > 0 ; -- current_depth ) { return; } } } } } }
if ( ! ( result . equals ( value ) ) ) { new java.lang.Thread ( new java.lang.Runnable () { @ java.lang.Override public void run () { model . login ( email , password ) ; } } ) . start () ; }
{ logger . logDebugMessage ( "Inside newGame()." ) ; }
@ org.w2fc.geoportal.ws.aspect.After ( value = "execution(* org.w2fc.geoportal.ws.GeoObjectService.createAndSaveObject(org.w2fc.geoportal.ws.model.RequestGeoObject)))" , java.lang.String messageObject)))" ) public void aroundCreate () { org.w2fc.geoportal.ws.model.RequestGeoObject requestGeoObject = ( ( org.w2fc.geoportal.ws.model.RequestGeoObject ) ( joinPoint . getArgs () [ 0 ] ) ) ; org.w2fc.geoportal.domain.OperationStatus actionStatus = new org.w2fc.geoportal.domain.OperationStatus ( requestGeoObject . getGuid () , getPid () , getCurrentUserId () , OperationStatus.Action.CREATE , OperationStatus.Status.SUCCESS , new java.util.Date () , requestGeoObject . getLayerId () ) ; repository . save ( actionStatus ) ; }
if ( piece . isDestroyed () ) { return false ; }
{ if ( button != 1 ) return false ; }
public static void getBalance ( org.bukkit.entity.Player player ) { player . sendMessage ( ( ( ( org.bukkit.ChatColor.GREEN ) + "Balance: " ) + ( me.ellbristow.ATMsigns.ATMsigns.economy . format ( ( ( double ) ( me.ellbristow.ATMsigns.ATMsigns.economy . getBalance ( player . getName () ) ) ) ) ) ) ) ; }
public static java.lang.String getCharBeforeOffset ( java.lang.CharSequence text , int offset ) { if ( ( text . length () ) == 0 ) return "" ; if ( offset > 0 ) { return text . subSequence ( ( offset - 1 ) , offset ) . toString () ; } return "" ; }
stopProcess ( control , true )
date = new table.value.NullValue ()
{ if ( debug ) java.lang.System.out . println ( ( "Paikka 1 2 " + ( whichmark () ) ) ) ; ChangeButton ( buttonbc ) ; buttonbc . setEnabled ( false ) ; viime startSiirto [ 1 ] [ 2 ] = whichmark () ; ( buttoncount ) ++ ; }
items . get ( itemNumber )
{ int i = 1 ; java.lang.StringBuilder buf = new java.lang.StringBuilder () ; for ( java.io.File file : files ) { buf . append ( ( i ++ ) ) ; } java.io.PrintWriter prologWriter = new java.io.PrintWriter ( new java.io.FileWriter ( ( path + "edb.pl" ) ) , true ) ; prologWriter . println ( buf ) ; prologWriter . flush () ; prologWriter . close () ; }
notEvent ( org.innovateuk.ifs.file.domain.FileEntry . class , 1L )
{ boolean result ; try { org.diachron.detection.utils.MCDUtils mcd = new org.diachron.detection.utils.MCDUtils ( propertiesManager . getProperties () , datasetUri , true ) ; mcd . deleteCCWithLessPriority ( ccName ) ; mcd . detectDatasets ( true ) ; mcd . terminate () ; } catch ( java.lang.Exception ex ) { return ex ; } return null ; }
{ model . removeModelStateListener ( listener ) ; listenerMap . remove ( ruleProvider ) ; documentMap . remove ( model . getDocument () ) ; treeViewer . refresh ( ruleProvider ) ; }
{ if ( display ) progressDialog . show () ; java.util.Map < java.lang.String , java.lang.String > dataToSend = new java.util.HashMap <> () ; dataToSend . put ( "name" , title ) ; if ( ! ( display ) ) progressDialog . show () ; java.util.Map < java.lang.String , java.lang.String > dataToSend = new java.util.HashMap <> () ; dataToSend . put ( "name" , title ) ; new com.cmpe.bounswe2015group8.westory.back.ServerRequests.RestAsyncTask ( callback , org.springframework.http.HttpMethod.POST ) . execute ( new com.cmpe.bounswe2015group8.westory.model.Requestable < com.cmpe.bounswe2015group8.westory.model.Post [] > ( "/api/searchByPostTitle" , dataToSend , com.cmpe.bounswe2015group8.westory.model.Post [] . class ) ) ; }
logger . error ( "My message is {}" , "message" , t . getLocalizedMessage () , t )
for ( org.bukkit.entity.HumanEntity viewer : inventory . getViewers () ) { viewer . openInventory ( inventory ) ; }
{ super . onCreate ( savedInstanceState ) ; getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; getSupportActionBar () . setTitle ( getResources () . getString ( R.string.title_quiz ) ) ; com.pvanshah.sjsuquizapplication.student.network.NetworkStateListener . registerNetworkState ( this ) ; firebaseConfiguration . configureFirebase () ; }
{ result = match ( nodes , org ) ; break; }
{ java.lang.String imageUrl = playlist.images . get ( 0 ) . url ; loadBackgroundImage ( imageUrl ) ; loadDetailsRowImage ( imageUrl ) ; }
{ android.content.IntentFilter filter = ( ( android.content.IntentFilter ) ( param.args [ 1 ] ) ) ; handleFilter ( filter ) ; android.content.BroadcastReceiver broad = ( ( android.content.BroadcastReceiver ) ( param.args [ 0 ] ) ) ; handleBroad ( broad ) ; }
coords . charAt ( coords )
{ switch ( pixelType ) { case loci.formats.FormatTools.INT8 : return DType.INT8 ; case loci.formats.FormatTools.UINT8 : return DType.UINT8 ; case loci.formats.FormatTools.INT16 : return DType.INT16 ; case loci.formats.FormatTools.UINT16 : return DType.UINT16 ; case loci.formats.FormatTools.INT32 : return DType.INT32 ; case loci.formats.FormatTools.UINT32 : return DType.UINT32 ; case loci.formats.FormatTools.FLOAT : return DType.FLOAT32 ; case loci.formats.FormatTools.DOUBLE : return DType.FLOAT64 ; } throw new java.lang.IllegalArgumentException ( ( "Unknown pixel type: " + pixelType ) ) ; }
{ java.lang.String line = new java.lang.StringBuilder () . builderString ( walk , view , new com.jme3.math.Vector3f () , life , attack , address , "" , score ) ; }
{ java.util.List < java.util.List < java.lang.Integer > > list = new result . combine ( 4 , 2 ) ; for ( int i = 0 ; i < ( list . size () ) ; i ++ ) { for ( int k : lihttp ) java.lang.System.out . print ( ( k + " " ) ) ; java.lang.System.out . println () ; } }
{ error ( ctx . ID () . getSymbol () , type.errors.ErrorType.SYMBOL_NOT_FOUND ) ; }
{ if ( ( leasedConnections . remove ( result ) ) != null ) { if ( config . isKeepAlive () ) { if ( ( ( holder != null ) && ( result . isOpen () ) ) && ( ! close ) ) { availableConnections . offer ( holder ) ; getStage () . getThreadManager () . adjustThreadCount ( getStage () , getThreadCount () ) ; } } } batchSize . incrementAndGet () ; }
cache = new java.lang.Object [ com.kot32.ksimplelibrary.cache.ACache . get ( getActivity () . getApplicationContext () )
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_map_page ) ; android.location.LocationManager locationManager = ( ( android.location.LocationManager ) ( getSystemService ( Context.LOCATION_SERVICE ) ) ) ; if ( ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_COARSE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { locationManager . requestLocationUpdates ( LocationManager.GPS_PROVIDER , 0 , 0 , this ) ; } }
if ( bundleIndex < 0 ) return false ;
return 0 ;
{ final java.nio.file.Path file = bagDir . resolve ( item.path ) ; if ( ! ( java.nio.file.Files . exists ( file ) ) ) { return; } final java.nio.file.Path file = bagDir . resolve ( item.path ) ; }
{ java.lang.String ipAddr ; ipAddr = request . getHeader ( "x-forwarded-for" ) ; if ( ( null == ipAddr ) || ( ( ipAddr . length () ) == 0 ) ) { ipAddr = request . getHeader ( "X-Real-IP" ) ; } if ( ( null == ipAddr ) || ( ( ipAddr . length () ) == 0 ) ) { ipAddr = "127.0.0.1" ; } return ipAddr ; }
javax.imageio.ImageIO . write ( this . image )
public int hash ( V value ) { int hash = 0 ; switch ( hashFunction ) { case "add .Hash" : hash = add .Hash ( value ) ; break; case "rotationalHash" : hash = rotationalHash ( value ) ; break; default: java.lang.System.out . println ( "Error when setting hash function - given hash function not found." ) ; java.lang.System . exit ( 0 ) ; } return hash ; }
{ if ( ! ( canCallDefenseMethods ( aiCaller ) ) ) { throw new exceptions.WrongCallerException () ; } this . nrD = nrD ; fight () ; checkCountryConquest () ; attackInProgress = false ; }
< edu.unc.lib.dl.fedora.PID > () . get ( i ) . startsWith ( "," )
if ( value > ( end ) ) { long diffInBuckets = ( value - ( end ) ) / ( bucketSpanMillis ) ; long move = ( diffInBuckets + 1 ) * ( bucketSpanMillis ) ; start += move ; end += move ; triggerPurge = true ; lowestPurgeableTimeBucket += diffInBuckets ; }
{ com.solacesystems.conn.MessageSupport ms = ( ( com.solacesystems.conn.MessageSupport ) ( handle ) ) ; java.nio.ByteBuffer container = handler . getBuffer () ; container . clear () ; msg . getBinaryAttachment ( container ) ; container . flip () ; handler . onMessage ( topic , container ) ; }
{ if ( ( mPlayer ) == null ) mPlayer = createPlayer ( mContext ) ; try { mPlayer . setDataSource ( mContext , android.net.Uri . parse ( path ) ) ; } catch ( java.io.IOException e ) { com.hustunique.parsingplayer.util.LogUtil . wtf ( com.hustunique.parsingplayer.player.media.ParsingPlayerProxy.TAG , e ) ; e . printStackTrace () ; } }
assertEquals ( git . gitChangeTypeToVCSChangeType ( ct ) , VCSChangeType.UNKNOWN )
( ( sender . getBlock () . getType () ) == ( org.bukkit.Material.COMMAND ) )
{ cs155.core.Color3D localDiffuse ; double diffuseIntensity = cs155.core.Light3D . diffuse ( lightVec , n ) ; matColor = Color3D.WHITE ; localDiffuse = matColor . times ( lightColor ) . scale ( diffuseIntensity ) ; return localDiffuse ; }
cTemplate . createNewHtmlFile ()
while ( mm.keepIndexing ) { indexHelper ( new java.io.File ( mm.movieDir ) ) ; java.lang.System.out . println ( "MEDIA_MANAGER: Indexing music..." ) ; indexHelper ( new java.io.File ( mm.musicDir ) ) ; mm.isIndexed = true ; java.lang.System.out . println ( "MEDIA_MANAGER: Index complete!" ) ; if ( mm.keepIndexing ) try { java.lang.Thread . sleep ( delay ) ; } catch ( java.lang.InterruptedException e ) {} }
{ com.levserj.service.mysql.MySQLItemService.LOG . error ( "Item with id: {} doesn't exist" , item . getId () ) ; throw new java.util.NoSuchElementException ( ( ( ( "No such item: " + ( item . getId () ) ) + " " ) + ( item . getTitle () ) ) ) ; }
private void doNext ( int requestCode , int [] grantResults ) { if ( requestCode == ( - 1 ) ) { if ( ( grantResults [ 0 ] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { listener . onGranted () ; com.itheima.mobilesafe.utils.CLog . d ( com.itheima.mobilesafe.HomeActivity.TAG , "Permission Granted" ) ; } else { listener . onDenied () ; com.itheima.mobilesafe.utils.CLog . d ( com.itheima.mobilesafe.HomeActivity.TAG , "Permission ()ied" ) ; } } }
{ java.util.List < org.eclipse.jface.text.contentassist.ICompletionProposal > pro = new java.util.ArrayList < org.eclipse.jface.text.contentassist.ICompletionProposal > () ; org.eclipse.jface.text.IDocument document = viewer . getDocument () ; if ( ( viewer . getDocument () ) != null ) { org.eclipse.jface.text.IDocument document = viewer . getDocument () ; return pro > . toArray ( new org.eclipse.jface.text.contentassist.ICompletionProposal [ pro > . size () ] ) ; } }
private algo.BSTMap < K , V > . Node findMinNode () { algo.BSTMap < K , V > . Node parent = node ; algo.BSTMap < K , V > . Node child = parent.left ; if ( ( child.left ) == null ) { parent.left = null ; return child ; } else { return findMinNode ( child ) ; } }
{ java.util.Map < java.lang.Integer , java.lang.Long > collect = sentimentTweetList . stream () . collect ( java.util.stream.Collectors . groupingBy ( (imentTweet : : getSentimentResult ) ) ) ; sentimentTweetList . stream () . collect ( java.util.stream.Collectors . groupingBy ( (imentTweet : : getSentimentResult ) ) ) ; }
( s != null ) && ( ( java.lang.Boolean . parseBoolean ( s . trim () ) ) || ( ! ( "0" . equals ( s . trim () ) ) ) )
{ org.springframework.data.solr.core.convert.ITestMappingSolrConverter.BeanWithBaseClass bean = new org.springframework.data.solr.core.convert.ITestMappingSolrConverter.BeanWithBaseClass () ; bean.id = DEFAULT_BEAN_ID ; bean.name = "christoph strobl" ; org.springframework.data.solr.core.convert.ITestMappingSolrConverter.BeanWithBaseClass loaded = saveAndLoad ( bean ) ; assertEquals ( bean.id , loaded.id ) ; assertEquals ( bean.name , loaded.name ) ; }
{ main.IndexWriterConfig config = new main.IndexWriterConfig ( analyzer25 ) ; org.apache.lucene.store.FSDirectory index = org.apache.lucene.store.FSDirectory . open ( new java.io.File ( main.Main.indexPath ) . toPath () ) ; main.IndexWriter w = new main.IndexWriter ( index , config ) ; return index ; }
if ( ( score1 ) < ( score2 ) ) s = score2 ; else s = score1 ;
if ( ( interval >= 1 ) && ( interval < 2 ) ) { steps += 1 ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_dish_detail ) ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; android.content.Intent dishInent = getIntent () ; int dish_id = dishInent . getIntExtra ( "dish_id" , 1 ) ; fetchDishFromServer ( dish_id ) ; getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; }
{ model.Board.gridMaxWidth = widthMax ; model.Board.gridMaxHeight = heightMax ; grid = new model.Grid [ [ model.Board.gridMaxWidth ] [ model.Board.gridMaxHeight ] ; for ( int i = 0 ; i < ( model.Board.gridMaxHeight ) ; i ++ ) { for ( int j = 0 ; j < ( model.Board.gridMaxWidth ) ; j ++ ) { isFilled [ j ] [ i ] = false ; } } }
{ S parameter = createParameter ( name , description , mandatory ) ; parameter . setEnumValues ( options ) ; parameter . setValue ( value ) ; parameter . setOrder ( order ) ; parameter . setOrder ( order ) ; }
scr . find ( screen , icon )
( ) - > mListener . onResidentOperationStateChanged ()
if ( ! ( ( nextEntry.numberOfSuccessors ) == 1 ) ) { next . set ( idx , null ) ; } else { isLastLetter = false ; }
{ getMenuInflater () . inflate ( R.menu.menu_photo_album , menu ) ; android.view.MenuItem item = menu . findItem ( R.id.action_ok ) ; if ( ( okButtonDrawable ) != null ) { item . setIcon ( okButtonDrawable ) ; } else if ( ( menuText ) != null ) { item . setIcon ( new com.sangcomz.fishbun.util.TextDrawable ( getResources () , menuText , colorMenuText ) ) ; } return true ; }
{ boolean success = false ; if ( entity instanceof com.mnubo.platform.android.sdk.api.store.impl.MnuboFileEntity ) { com.mnubo.platform.android.sdk.api.store.impl.MnuboFileEntity fileEntity = ( ( com.mnubo.platform.android.sdk.api.store.impl.MnuboFileEntity ) ( entity ) ) ; java.io.File file = new java.io.File ( fileEntity . getFile () ) ; success = file . delete () ; if ( ! success ) { android.util.Log . e ( com.mnubo.platform.android.sdk.api.store.impl.MnuboFileStore.TAG , java.lang.String . format ( "Deleting : %s has failed" , fileEntity . getFile () ) ) ; } } return success ; }
@ java.lang.Override public void onClick ( android.view.View v ) { int fragCount = ( ( com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment ) ( this . getNavigationManager () . topFragment () ) ) . getFragCount () ; this . presentFragment ( com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment . newInstance ( "Fragment added to the Stack" , ( fragCount + 1 ) ) ) ; }
try { java.sql.Connection connection = dsObject . getConnection () ; } catch ( org.wso2.carbon.datasource.core.exception.DataSourceException e ) { org.wso2.carbon.datasource.sample.DataSourceServiceListenerComponent.logger . error ( "error occurred while ( the data source." ) ; }
getReadService () . execute ( outDtoMap . values () )
if ( ( ( currentAd ) == null ) || ( ( currentAd . get ( i ) . getBarcode () ) == findBarcode ) ) { return currentAd .Tickets . get ( i ) ; }
( ( ( value . startsWith ( "{" ) ) || ( value . startsWith ( "[" ) ) ) || ( value . equals ( "true" ) ) ) || ( value . equals ( "false" ) )
new itinerary.main.Command ( originalTask , CommandType.ADD )
{ if ( id == null ) return; org.embedded.browser.Chromium.chmap . get ( id ) . loaded = true ; if ( title . equals ( "" ) ) return; if ( org.embedded.browser.Chromium.chmap . containsKey ( id ) ) org.embedded.browser.Chromium.chmap . get ( id ) . title_change ( title ) ; }
{ double index = calculateIntegralAtIteration () ; diff = java.lang.Math . abs ( ( ( ( java.lang.Math . abs ( ( ( ( java.lang.Math . abs ( ( ( ( java.lang.Math . abs ( ( ( ( java.lang.Math . abs ( ( ( ( ( java.lang.Math . abs ( ( ( java.lang.Math . abs ( ( ( ( ( java.lang.Math . abs ( diff ) ) - 1 ) - 1 ) ) ) + ( java.lang.Math . abs ( ( ( ( java.lang.Math . abs ( diff ) ) - 1 ) ) ) ) + ( java.lang.Math . abs ( ( ( ( java.lang.Math . abs ( diff ) ) - 1 ) ) ) ) + ( java.lang.Math . abs ( ( ( ( java.lang.Math . abs ( diff ) ) - 1 ) ) ) ) + ( java.lang.Math . abs ( ( ( java.lang.Math . abs ( ( ( java.lang.Math . abs ( ( ( ( ( java.lang.Math . abs ( ( "Diff : " + diff ) ) + ( java.lang.Math . abs ( ( ( ( java.lang.Math . abs ( diff ) ) - 1 ) ) ) ) + ( java.lang.Math . abs ( temp ) ) ) ) ) ) + ( java.lang.Math . abs ( ( ( java.lang.Math . abs ( ( ( java.lang.Math . abs ( temp ) ) + ( "Diff : " + diff ) ) ) ) ) + 1 ) ) ) ) && ( temp < 0 ) ) ) ) && ( temp == ( - 1 ) ) ) && ( temp == ( - 1 ) ) ) && ( temp == ( - 1 ) ) ) && ( temp == ( - 1 ) ) ) && ( temp == ( - 1 ) ) ) ; }
com.qachee.QacheeManager . getInstance () . get ( ( ( long ) ( event.place . hashCode () ) ) )
getNsURIPrefix ( uri )
ann . back.ate ( feld , breite , hoehe )
public boolean isIE7 ( java.lang.String userAgent ) { if ( userAgent != null ) { if ( ( ( ( userAgent . contains ( "; MSIEsh ) ) || ( userAgent . contains ( "; MSIE 6" ) ) ) || ( userAgent . contains ( "; MSIE 7" ) ) ) && ( ! ( userAgent . contains ( "; Trident/" ) ) ) ) { return true ; } } return false ; }
return ( java.util.Objects . equals ( this . failureMesage , other.failureMesage ) ) && ( java.util.Objects . equals ( this . pollStatus , other.pollStatus ) ) ;
{ java.util.ArrayList < org.smartdata.common.actions.ActionInfo > actionInfos = new java.util.ArrayList <> () ; java.util.ArrayList < org.smartdata.common.actions.ActionInfo > actionInfos = new java.util.ArrayList <> () ; for ( org.smartdata.actions.SmartAction smartAction : cmd . getActions () ) { actionInfos . add ( createActionInfoFromAction ( smartAction , cid ) ) ; } return actionInfos ; }
{ retString += ( ( ( "" + i ) + ". " ) + ( d . toString () ) ) + "\n" ; }
if ( ( ( parameter . getValue () ) != null ) && ( ( parameter . getSqlType () ) == ( com.ctrip.platform.dal.common.enums.DatabaseCategory.SQL_SERVER_TYPE_TVP ) ) ) { com.microsoft.sqlserver.jdbc.SQLServerCallableStatement sqlsvrStatement = ( ( com.microsoft.sqlserver.jdbc.SQLServerCallableStatement ) ( statement ) ) ; sqlsvrStatement . setStructured ( parameter . getIndex () , parameter . getName () , ( ( com.microsoft.sqlserver.jdbc.SQLServerOn ) ( parameter . getValue () ) ) ) ; }
new value.IntegerValue ( 0 )
{ if ( ( httpPort != null ) && ( java.util.Objects . equals ( httpPort ) ) ) { return new javax.validation.ConstraintViolation < ? > [] { constraintViolationFactory . createViolation ( httpPortPath , "HTTP and HTTPs ports must be different" ) , constraintViolationFactory . createViolation (.HTTP and HTTPs ports must be different" ) } ; } return null ; }
{ getInfo . refreshData () ; java.util.List < com.util.Employee > EmployeeList ; EmployeeList = getInfo.currentPojo . getAllEmployees () ; dataAdapter = new com.service.SendMSM.MyCustomAdapter ( this , R.layout.employee_info , EmployeeList ) ; android.widget.ListView listView = ( ( android.widget.ListView ) ( findViewById ( R.id.listView1 ) ) ) ; listView . setAdapter ( dataAdapter ) ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_play_list ) ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; new com.arunsudhir.radiomalayalam.io.PlaylistReaderAsyncTask ( new com.arunsudhir.radiomalayalam.io.PlaylistProgressExecutor ( this ) ) . execute () ; setContentView ( R.layout.activity_no_connection ) ; }
( commentEntityService . isCommentAuthorSession ( commentEntity ) ) || ( sessionUtils . allowedForUserWithRole ( RolesEnum.admin ) )
{ Point start_pt = this . getPosition () ; java.util.List < Node > path = AStar ( world , world . getTileOccupant ( dest_pt ) . getClass () , start_pt , dest_pt ) ; return path . get ( 1 ) . pt ; }
if ( existingLevel != null ) { removeLevel ( workspace , existingLevel ) ; workspace . getWorkspaceHelper () . populateDomain ( workspace ) ; isApplied = true ; }
handel . getStad () . equals ( positie . getStad () )
{ org.oscm.saml2.api.AuthnRequestGenerator.logger . logError ( Log4jLogger.SYSTEM_LOG , e , LogMessageIdentifier.ERROR_SIGNING_SAML_. ) ; throw new org.oscm.internal.types.exception.SaaSSystemException ( e ) ; }
{ final android.view.View rootView = getWindow () . getDecorView () ; rootView . setKeepScreenOn ( settings . keepScreenOn () ) ; rootView . setBackgroundColor ( settings . getBackgroundColor () ) ; versePager . getAdapter () . notifyDataSetChanged () ; currentTranslation = bibleReadingPresenter . loadCurrentTranslation () ; currentChapter = bibleReadingPresenter . loadCurrentChapter () ; }
if ( f . exists () ) { try { java.io.FileInputStream fin = new java.io.FileInputStream ( f ) ; java.io.ObjectInputStream ois = new java.io.ObjectInputStream ( fin ) ; hs = ( ( hotelmgmt.HotelSystem ) ( ois . readObject () ) ) ; hs = ( ( hotelmgmt.HotelSystem ) ( ois . readObject () ) ) ; } catch ( java.lang.Exception ex ) { java.lang.System.out . println ( "There was an exception /r while trying to read in hotelSystem\n" ) ; return false ; } }
categoryTableModel . getValueAt ( j , j )
{ android.view.View v = inflater . inflate ( R.layout.fragment_wanderers , container , false ) ; mContainer = v . findViewById ( R.id.list_container ) ; mProgress = v . findViewById ( R.id.list_progress ) ; com.codeground.wanderlustbulgaria.Fragments.WanderersFragment.user = com.parse.ParseUser . getCurrentUser () ; com.codeground.wanderlustbulgaria.Fragments.WanderersFragment.handler = new android.os.Handler () ; return v ; }
testRun.bayItems [ bayValue ] . updateValue ()
{ com.intellij.psi.PsiFile _containingFile = psiClass . getContainingFile () ; final com.intellij.psi.PsiJavaFile javaFile = ( ( com.intellij.psi.PsiJavaFile ) ( _containingFile ) ) ; final java.lang.String psiPackageName = javaFile . getPackageName () ; final java.lang.String psiPackageName = ( ( com.intellij.psi.PsiJavaFile . getPackageName () ) + 1 ) ; final java.lang.String psiPackageName = ( ( com.intellij.psi.PsiJavaFile ) ( _ ) ) ; if ( _not ) { return psiPackageName ; } return null ; }
inflater . inflate ( customLayout , null ) ;
if ( config . getStopOnTerminate () ) { log . info ( "Stopping self" ) ; stopSelf () ; } else { log . info ( "Continue running in background" ) ; }
{ if ( ( args.length ) != 3 ) { java.lang.System.out . println ( "Usage: java R ! ( args.length ) ) ; java.lang.System.out . println ( "Usage: java R ! ( ( args.length ) - 1 ) ) ; java.lang.System.out . println ( "Usage: java R ! ( java.lang.System.out . println ( "Usage: java R =Regression <dataDir ) ) ) ; java.lang.System . exit ( 0 ) ; } R =Regression . init ( args ) ; FileParser . readData () ; }
{ pianoA . setSize ( width , height ) ; pianoB . setSize ( width , height ) ; pianoAB . setSize ( width , height ) ; }
void setEndDate ( int newMonth ) { calendar = java.util.Calendar . getInstance () ; calendar . set ( newYear , ( newMonth - 1 ) , 1 ) ; calendar . set ( java.util.Calendar.DATE , calendar . getActualMaximum ( java.util.Calendar.DATE ) ) ; java.util.Date date = calendar . getTime () ; java.text.DateFormatour_FORMAT = new java.text.SimpleDateFormat ( "yyyy-MM-dd" , java.util.Locale.FRANCE ) ; endDate = color_FORMAT . format ( date ) ; }
{ position = p ; java.lang.System.out . println ( "There is a white rabbit in the road, it switch ( ( java.lang.System.out . println ( "(1)" ) + "(1)" ) ) ) ; java.lang.System.out . println ( "(1).ach out and pet it " ) ; java.lang.System.out . println ( " ) ; com = u . nextInt () ; switch ( choice ) { case 1 : java.lang.System.out . println ( " 1.0 IS THE RABBIT!!!" ) ; java.lang.System.out . println ( "You died hor (, it was gruesome" ) ; position = - 1 ; break; case 2 : java.lang.System.out . println ( "Prob < a good idea, it's: to public cuteness" ) ; position += speed ; break; default: java.lang.System.out . println ( "No pity is shown to ( who cannot follow the rules of the game. Die, you fiend." ) ; position = 0 ; break; } }
com.eveningoutpost.dexdrip.Models.TransmitterData . is_new ( timestamp , raw_data , true )
public java.util.ArrayList < java.lang.String > constructProgressBars () { java.util.ArrayList < java.lang.Integer > progressBarCollection = new java.util.ArrayList <> () ; for ( java.lang.String task : namescareers.webapp.client.Constants.TASK_SUBJECTS ) { progressBarCollection . add ( null ) ; } return progressBarCollection ; }
{ eu.etaxonomy.cdm.model.agent.Person person = parsePerson ( state , str , row ) ; team . addTeamMember ( person ) ; }
fr.epf.models.Promotion [] promotions = promoDAO . findAll () ;
public void initVariables ( int mapNumber , java.lang.String ballColor , boolean gameStarted ) { java.lang.System.out . format ( ( ( ( ( "InitVariables: inGame = " + ( inGame ) ) + ", now setting it to " ) + gameStarted ) + "\n" ) ) ; inGame = gameStarted ; paused = false ; map = new Map ( mapNumber ) ; ball = new javax.swing.Timer ( 10 , this ) ; timer . start () ; watch = new StopWatch () ; if ( inGame ) { watch . start () ; } }
if ( selectedItems . isEmpty () ) { shareSingle ( selectedItems . get ( 0 ) ) ; } else { shareMultiple ( selectedItems ) ; }
{ quickFilter () ; if ( ( results . size () ) < 0 ) firstLettersFilter ( 3 ) ; if ( ( results . size () ) < 0 ) { wordByWordFilter () ; if ( ( results . size () ) < 0 ) firstLettersFilter ( 2 ) ; if ( ( results . size () ) < 0 ) firstLettersFilter ( 1 ) ; return results ; } }
{ socket = new java.net.ServerSocket ( PORT_NUMBER ) . accept () ; initStreams () ; }
args [ 1 ]
this . mapBufferImpl ( bufferStateTracker )
( ( ( file . getSize () ) - 1 ) * ( pieceNum + 1 ) ) - ( pieceNum + 1 )
selectS . setLocation ( event . getX () , event . getY () )
getValue ()
{ msg = mDataTree . updateElementGetMessage ( oldElement , mMeter . getUId () ) ; }
{ com.baeldung.dozer.Person2 englishAppPerson = new com.baeldung.dozer.Person2 ( "Jean-Claude" , "JCVD" , java ) ; com.baeldung.dozer.Personne2 frenchAppPerson = mapper . map ( englishAppPerson , com.baeldung.dozer.Personne2 . class ) ; assertEquals ( frenchAppPerson . getNom () , englishAppPerson . getName () ) ; assertEquals ( frenchAppPerson . getSurnom () , englishAppPerson . getNickname () ) ; assertEquals ( frenchAppPerson . getAge () , englishAppPerson . getAge () ) ; }
( index == ( - 3 ) )
{ if ( ( p1 . getScore () ) > ( p2 . getScore () ) ) { return 1 ; } if ( ( p1 . getScore () ) < ( p2 . getScore () ) ) { return - 1 ; } return p1 . getName () . compareToIgnoreCase ( p2 . getName () ) ; }
"comboBox " + colorComboBox . getToolTipText ()
for ( java.lang.Class < ? > c = klass ; ( java.lang.Object . class ) != c ; c = c . getSuperclass () ) { for ( java.lang.reflect.Field field : c . getDeclaredFields () ) { if ( hasRelationOnField ( relation , field ) ) return true ; } }
{ this . flowInfo = flowInfo ; this . flowInfo . parse () ; this . sessionService = ( ( org.shaolin.bmdp.workflow.spi.SessionService ) ( org.shaolin.bmdp.runtime.AppContext . get () . getService ( this . flowInfo . getSessionService () ) ) ) ; if ( ( this . sessionService ) == null ) { this . sessionService = new org.shaolin.bmdp.workflow.internal.DefaultFlowSessionService () ; } }
public void initializePurchases () { mHelper . startSetup ( new org.onepf.oms.appstore.googleUtils.IabHelper.OnIabSetupFinishedListener () { public void onIabSetupFinished ( org.onepf.oms.appstore.googleUtils.IabResult result ) { if ( ! ( result . isSuccess () ) ) { showToast ( ( "Problem setting up in-app billing: " + result ) ) ; return; } if ( ( mHelper ) == null ) return; mHelper . queryInventoryAsync ( mGotInventoryListener ) ; } } ) ; }
{ org.bukkit.event.entity.EntityDamageByEntityEvent damageEvent = new org.bukkit.event.entity.EntityDamageByEntityEvent ( attacker , target , org.bukkit.event.entity.EntityDamageEvent.DamageCause.ENTITY_ATTACK , damage ) ; org.bukkit.Bukkit . getPluginManager () . callEvent ( damageEvent ) ; if ( damageEvent . isCancelled () ) { target . damage ( damage ) ; return true ; } return false ; }
{ if ( ( ( getAssignedFlexoProperty () ) != null ) && ( ( getAssignedFlexoProperty () ) != null ) ) { org.openflexo.foundation.ontology.IFlexoOntologyClass < ? > t = getAssignedFlexoProperty () . getOntologicType () ; setOntologyClass ( t ) ; return t ; } return null ; }
{ com.orientechnologies.orient.core.sql.query.OSQLSynchQuery sql = new com.orientechnologies.orient.core.sql.query.OSQLSynchQuery ( "select expand(children.children.children) from LinkListSequence where name = 'root'" ) ; java.util.List < com.orientechnologies.orient.core.record.impl.ODocument > results = db . query ( sql ) ; assertEquals ( results . size () , 4 ) ; for ( com.orientechnologies.orient.core.record.impl.ODocument result : results ) { java.lang.String value = result . field ( "name" ) ; assertEquals ( value . length () , 5 ) ; } }
{ com.google.gson.Gson g = new com.google.gson.GsonBuilder () . registerTypeAdapter ( org.apereo.models.Config . class , new org.apereo.deserializers.ConfigDeserializer () ) . create () ; org.apereo.models.Config config = g . fromJson ( response , org.apereo.models.Config . class ) ; configManager . setConfig ( config ) ; getAccountFeed () ; if ( config . isUpgradeRequired () ) { showErrorDialog ( AppConstants.UPGRADE_REQUIRED ) ; } else if ( config . isUpgradeRecommended () ) { showErrorDialog ( AppConstants.UPGRADE_RECOMMENDED ) ; } }
org.nschmidt.ldparteditor.state.KeyStateManager.taskKeyMap . get ( t )
new models.visitor.ArmyCreationVisitor ()
if ( ( state ) == ( piano.State.isrecording ) ) { state = piano.State.isplaying ; return false ; } else { if ( ! ( listOfNote . isEmpty () ) ) { listOfNote . clear () ; } state = piano.State.isrecording ; return true ; }
return ( ( java.util.List < org.wso2.carbon.event.stream.core.internal.EventStreamConfiguration > ) ( eventStreamConfigs . values () ) ) ;
org.centauri.cloud.cloud.Cloud . getLogger () . error ( ex . getMessage () , ex )
{ int year = java.lang.Integer . parseInt ( activity . getString ( "year" ) ) ; int month = java.lang.Integer . parseInt ( activity . getString ( "month" ) ) ; return ( ( matcher . get ( java.util.Calendar.YEAR ) ) == year ) && ( matcher . get ( java.util.Calendar.MONTH ) ) . equals ( month ) ; }
{ java.awt.Dimension screen = java.awt.Toolkit . getDefaultToolkit () . getScreenSize () ; int iCenterY = ( screen.height ) / 2 ; setLocation ( ( iCenterX - ( ( window.width ) / 2 ) ) , ( iCenterY - ( ( window.height ) / 2 ) ) ) ; revalidate () ; }
{ java.lang.String receipt = ( ( ( ( "Rechnung f r Gast " + ( guests [ 0 ] . getName () ) ) + ": " ) + ( calcPrice () ) ) + " f r " ) + ( roomtype ) ; this . booked = false ; this . guests = null ; this . daysBooked = 0 ; return receipt ; }
{ toolbar . setTitle ( title ) ; getSupportActionBar () . setHomeAsUpIndicator ( android.support.v4.content.ContextCompat . getDrawable ( getApplicationContext () , R.drawable.icon_arrow_back ) ) ; getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; }
showNonModalMessage ( getInvoker () , "Errors" , errorsInfo )
{ java.lang.Object result = new test.TestObject ( testnumbers ) ; result = input . run ( "countNumbers" , 1 ) ; assertEquals ( sheet3.a_tuple.NaturalNumberTupleTest . standardMessage ( "countNumbers(1)" , testnumbers ) , 1 , result ) ; if ( ( ( ( testnumbers2 ) != null ) && ( ( testnumbers2 ) != null ) ) && ( ( input3.a_tuple.NaturalNumberTupleTest . standardMessage ( "countNumbers ) ) == null ) ) return; java.lang.Object result ; }
type != ( java.lang.Object . class )
{ if ( ! ( f . exists () ) ) return new java.util.Properties () ; java.util.Properties prop = new java.util.Properties () ; java.io.FileInputStream stream = new java.io.FileInputStream ( f ) ; prop . load ( stream ) ; return prop ; }
( key . hashCode () )
resp = null
new fachklassen.LearningA ()Position ( inlandskurs , auslandskurs )
sync . syncFilterConfigsToWorker ()
public static int getValidThreshold ( int threshold , boolean isSelected , java.lang.String text ) { if ( isSelected ) { java.lang.String thresholdText = text ; if ( ( ! ( thresholdText . isEmpty () ) ) && ( java.util.regex.Pattern . matches ( "[0-9]+" , thresholdText ) ) ) { threshold = java.lang.Integer . parseInt ( text ) ; } else { org.baderlab.csapps.socialnetwork.CytoscapeUtilities . notifyUser ( ( "Illegal input for max threshold. Please specify a " + "valid threshold value. Threshold must be a positive integer." ) ) ; } } return threshold ; }
new java.lang.NullPointerException ()
{ if ( languos == null ) { languos = new java.util.ArrayList <> () ; } adapter = new com.amelendez.lgo.adapters.LanguoListAdapter ( this , languos ) ; android.widget.ListView listView = ( ( android.widget.ListView ) ( findViewById ( R.id.main_listView ) ) ) ; listView . setAdapter ( adapter ) ; }
{ mQuestionPack = org.iliat.gmat.enitity.QuestionPackList . getInst () . getList () . getInst () . get ( 0 ) ; super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_question_review_fragment ) ; org.iliat.gmat.activity.QuestionReviewActivity.PlaceholderFragment.context = this ; mSectionsPagerAdapter = new org.iliat.gmat.activity.QuestionReviewActivity.SectionsPagerAdapter ( getSupportFragmentManager () , mQuestionPack ) ; mViewPager = ( ( android.support.v4.view.ViewPager ) ( findViewById ( R.id.container ) ) ) ; mViewPager . setAdapter ( mSectionsPagerAdapter ) ; }
return null ;
{ copyDatabase () ; copyDatabase () ; }
if ( ! ( this . enabled ) ) { this . enabled = enabled ; } else if ( this . enabled ) { this . enabled = enabled ; }
private void restoreOrCreatePresenter ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { if ( savedInstanceState != null ) { presenterUUID = ( ( java.util.UUID ) ( savedInstanceState . getSerializable ( com.kvest.mvp.PresenterActivity.KEY_PRESENTER_UUID ) ) ) ; presenter = ( ( T ) ( com.kvest.mvp.PresenterActivity . getPresenter ( presenterUUID ) ) ) ; } if ( ( presenter ) != null ) { onPresenterRestored ( presenter ) ; } else { presenter = createPresenter () ; presenterUUID = com.kvest.mvp.PresenterActivity . addPresenter ( presenter ) ; } }
{ int bestImageResolution = java.lang.Math . min ( largestImageDimension , resolution ) ; android.util.Log . d ( gov.nasa.jpl.hi.marsimages.models.ImageQuad.TAG , ( "Texture res: " + ( gov.nasa.jpl.hi.marsimages.models.M . floorPowerOfTwo ( bestImageResolution ) ) ) ) ; return gov.nasa.jpl.hi.marsimages.models.M . floorPowerOfTwo ( bestImageResolution ) ; }
twillioPhone . setSpeakerEnabled ( false )
{ fr.sims.coachingproject.service.gcmService.RegistrationGCMIntentService . startActionRegistrationGCM ( getContext () ) ; fr.sims.coachingproject.ui.activity.MainActivity . startActivity ( getContext () ) ; fr.sims.coachingproject.util.SharedPrefUtil . putIsFirstLaunch ( getContext () , false ) ; if ( ( getActivity () ) != null ) { getActivity () . finish () ; } }
this . matrix [ j . nbMetrics ] [ i ] = matrix [ j ] [ i ] ;
if ( ( profile ) != null ) message . setText ( io.github.getExposure.profile.LoginFragment.LOGGED_OUT_TEXT ) ; else message . setText ( io.github.getExposure.profile.LoginFragment.LOGGED_OUT_TEXT ) ;
value . toString () . split ( "\t+" )
javax.json.Json . createObjectBuilder () . add ( "type" , "register" ) . add ( "sender_id" , 1 )
"Submit" . equalsIgnoreCase ( workFlowAction )
{ if ( ( ! override ) && ( prover.local.LocalProver.availableProvers . contains ( proverName ) ) ) throw new exceptions.NameAlreadyInUseException ( ( ( ( "Name " + proverName ) + " is already in use with command " ) + ( gui.Config . getLocalProverCommand ( proverName ) ) ) ) ; gui.Config . setLocalProverCommand ( proverName , command ) ; prover.local.LocalProver.availableProvers . add ( proverName ) ; gui.Config . setLocalProvers ( prover.local.LocalProver.availableProvers ) ; }
{ if ( context == null ) return builder ; org.apache.storm.flux.TopologyDef topologyDef = context . getTopologyDef () ; org.apache.storm.flux.FluxBuilder . buildComponents ( context ) ; org.apache.storm.flux.FluxBuilder . buildSpouts ( context , builder ) ; org.apache.storm.flux.FluxBuilder . buildBolts ( context ) ; org.apache.storm.flux.FluxBuilder . buildStreamDefinitions ( context , builder ) ; return builder . createTopology () ; }
if ( ( props . getProperty ( "JOB_ID" ) ) != null ) { builder . withJobId ( props . getProperty ( "JOB_ID" ) ) ; }
registrationNumber . substring ( 6 , 8 )
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_restaurants ) ; butterknife.ButterKnife . bind ( this ) ; android.util.Log . d ( com.epicodus.myrestaurants.ui.RestaurantsActivity.TAG , "In RestaurantsActivity" ) ; android.content.Intent intent = getIntent () ; java.lang.String location = intent . getStringExtra ( "location" ) ; getRestaurants ( location ) ; mLocationTextView . setText ( ( "Here are all the restaurants near: " + location ) ) ; }
{ java.util.Queue < PositionRequestMessage > queue = this . returnAddresses . get ( message.requestUuid ) ; int intervalStart = message.start ; for ( PositionRequestMessage prMessage : queue ) { prMessage.sender . send ( new IntervalMessage ( this , prMessage.sender , intervalStart , ( ( intervalStart + ( prMessage.i ) ) - 1 ) , prMessage.uuid ) ) ; intervalStart += prMessage.i ; } }
{ if ( ! ( delta_recording_start ) ) { delta_local_x = 0 ; delta_local_y = 0 ; delta_rotation = 0 ; delta_t = 0 ; delta_b = 0 ; delta_l = 0 ; delta_r = 0 ; delta_recording_start = true ; } }
public static int getDialogIDfromOneUserToAnother ( java.lang.String fromWho , java.lang.String toWhom ) { int result = 0 ; try ( final java.sql.Connection connection = databaseTools.ConnectionPoolBased getContext () ) { final java.sql.Statement statement = connection . createStatement () ; final java.sql.ResultSet resultSet = statement . executeQuery ( DAO.DialoguesDAO . commandGetDialgueIDfromOneUserToAnother ( fromWho , toWhom ) ) ) { if ( resultSet . next () ) result = resultSet . getInt ( 1 ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } return result ; }
java.util.List < eu.geekhome.asymptote.model.SyncUpdate > updates
org.springframework.data.mongodb.core.query.Criteria . where ( "term" )
{ turnData = ( ( org.json.simple.JSONObject ) ( gameData . get ( java.lang.String . valueOf ( this . turnCount ) ) ) ) ; addStationFaults () ; updatePlayerScores () ; updateGoals () ; updateGoals () ; playerTurn . lineBonuses () ; playerTurn . stationRewards () ; for ( com.TeamHEC.LocomotionCommotion.Goal.Goal goal : playerTurn . getGoals () ) { goal . incrementCurrentGoalDuration () ; } }
{ java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat ( "dd/MM/yyyy" ) ; java.util.Date testDate ; sdf . setLenient ( false ) ; if ( Constants.DEFAULT_VALUE . equalsIgnoreCase ( myDate ) ) { return true ; } if ( ( myDate . length () ) != ( sdf . toPattern () . length () ) ) { return false ; } try { testDate = sdf . parse ( myDate ) ; } catch ( java.text.ParseException e ) { return false ; } return true ; }
if ( ( ( newX >= 0 ) && ( newX < 5 ) ) || ( ( newY >= 0 ) && ( newY < 5 ) ) ) { setPair ( newX , newY ) ; return true ; }
java.lang.System.out . println ( player . toString () )
@ java.lang.SuppressWarnings ( value = "deprecation" ) @ org.junit.Test public void testRandomFish1 () { java.util.Random random = new java.util.Random ( seed ) ; generatedFish = lasersharks.FishBot . generateFish ( random ) ; org.junit.Assert . assertEquals ( generatedFish . getDirection () , Direction.East ) ; org.junit.Assert . assertEquals ( generatedFish . getPosition () . getPosX () , 0 , 0 ) ; org.junit.Assert . assertEquals ( expectedSize1 , generatedFish . getSize () , 1 ) ; org.junit.Assert . assertEquals ( expectedSpeed1 , generatedFish . getSpeed () , 0.0F ) ; }
public void print ( java.lang.String map ) { for ( int i = 0 ; i < ( h ) ; i ++ ) { java.lang.System.out . println ( map . substring ( ( i * ( w ) ) , ( ( i * ( w ) ) + ( w ) ) ) ) ; } }
{ java.net.InetAddress [] as = ( ( java.net.InetAddress [] ) ( this . addresses . toArray () ) ) ; java.util.List < java.net.InetAddress > list = new java.util.ArrayList <> ( as.length ) ; for ( java.net.InetAddress inetAddress : as ) { list . add ( inetAddress ) ; } return list ; }
{ org.junit.Test public void testDrawFaceUpTrainCards ( ) throws java.lang.Exception { try { if ( ( faceUpDeck . getFiveUp () . size () ) > 0 ) { java.util.ArrayList < try { assertNotEquals ( faceUpDeck . getCards () . get ( i ) , null ) ; } } } } else { if ( ( faceUpDeck . getCards () . size () ) > 0 ) { try ( int i = 0 ; i < size ; i ++ ) { assertNotEquals ( faceUpDeck . getCards () . get ( i ) , null ) ; } } } }
public void setTemperature ( java.lang.String h ) { strTemperature = h ; int i = strTemperature . indexOf ( '.' ) ; i = java.lang.Integer . parseInt ( strTemperature . substring ( 0 , i ) ) ; if ( i > ( maxTemp ) ) maxTemp = ( ( byte ) ( i ) ) ; }
switch ( direction ) { case 0 : t.s.o.r.f.frost.MainActivity.sendMe = "hai" ; break; case 1 : t.s.o.r.f.frost.MainActivity.sendMe = "x002?" ; break; case 2 : t.s.o.r.f.frost.MainActivity.sendMe = "y main?" ; break; case 3 : t.s.o.r.f.frost.MainActivity.sendMe = "x.?" ; break; case 4 : t.s.o.r.f.frost.MainActivity.sendMe = "y002?" ; break; }
isSubtype ( ( ( org.checkerframework.framework.type.AnnotatedTypeMirror.Annotated ) ) + 1 )
{ java.lang.String inputReversed = "" ; java.lang.System.out . println ( "Please enter a statement" ) ; userInput = In . getString () ; userInput = userInput . trim () ; for ( int i = ( userInput . length () ) - 1 ; i >= 0 ; i -- ) { inputReversed = inputReversed + ( userInput . charAt ( i ) ) ; } java.lang.System.out . println ( inputReversed ) ; }
if ( mToken . isSessionValid () ) { loadData ( savedInstanceState ) ; } else { com.sina.weibo.sdk.auth.sso.SsoHandler mSsoHandler mSsoHandler = new com.sina.weibo.sdk.auth.sso.SsoHandler ( this , mAuthInfo ) ; mSsoHandler . authorize ( new io.github.kolacbb.kolaweibo.ui.activity.HomeActivity.AuthListener () ) ; }
public void addWord ( java.lang.String word ) { for ( java.lang.Integer integer : new java.util.ArrayList < java.lang.String > () ) { buckets [ java.lang.Math . abs ( ( ( org.apache.mahout.math.MsHash3 . mshash3x8632 ( word . getBytes () , 0 , 0 , integer ) ) % ( buckets.length ) ) ] = true ; } }
{ if ( usedHeapSize == ( - 1L ) ) { return false ; } final com.hazelcast.config.MaxSizeConfig maxSizeConfig = mapContainer . getMapConfig () . getMaxSizeConfig () ; final int maxSize = com.hazelcast.map.impl.eviction.MaxSizeChecker . getApproximateMaxSize ( maxSizeConfig . getSize () ) ; final long total = getTotalMemory () ; return maxSize < ( ( ( 1.0 * ( com.hazelcast.map.impl.eviction.MaxSizeChecker.ONE_HUNDRED_PERCENT ) ) * usedHeapSize ) / total ) ; }
{ if ( isDestroyerRdy () ) { return 1 ; } else if ( isFrigateRdy () ) { return 2 ; } else if ( isCorvetteRdy () ) { return 3 ; } else if ( isSubmarineRdy () ) { return 4 ; } else if ( isSubmarineRdy () ) { return 4 ; } return 0 ; }
public static org.organicdesign.fp.collections.interfaces.UnmodSortedIterator castFromSortedMap ( final java.util.SortedMap sm ) { return ( ) - > new org.organicdesign.fp.collections.interfaces.UnmodSortedIterator () { java.util.Iterator iter = sm . entrySet () . iterator () ; @ java.lang.Override public boolean hasNext () { return iter . hasNext () ; } @ java.lang.Override public java.lang.Object next () { return iter . next () ; } } ; }
private float sendCommand ( byte command ) { try { dos . writeByte ( command ) ; dos . flush () ; } catch ( java.io.IOException ioe ) { java.lang.System.err . println ( "IO Exception" ) ; java.lang.System . exit ( 1 ) ; return - 1.0F ; } }
if ( ( targetOffset ) > 0 ) { return java.lang.String . format ( "%02d:%02d:%02d" , ( ( java.lang.String . format ( 3600 ) ) / 3600 ) , ( ( iOffset ) / 60 ) , ( ( targetOffset ) % 60 ) ) ; }
{ if ( ( ( priority . get ( o1 . getGroup () ) ) != null ) && ( ( priority . get ( o2 . getGroup () ) ) != null ) ) return 0 ; if ( ( priority . get ( o1 . getGroup () ) ) != null ) return - 1 ; if ( ( priority . get ( o2 . getGroup () ) ) != null ) return - 1 ; return - 1 ; }
{ java.lang.String [] tagArray = new java.lang.String [] { "example_tag" } ; boolean success = com.appoxee.Appoxee . addTagsToDevice ( new gigigo.com.orchextrasdk.ArrayList < java.lang.String > ( gigigo.com.orchextrasdk.Arrays . asList ( tagArray ) ) ) ; gigigo.com.orchextrasdk.ArrayList < java.lang.String > tags = com.appoxee.Appoxee . getTagList () ; android.util.Log . d ( gigigo.com.orchextrasdk.MainActivity.TAG , ( "tags list: " + tags ) ) ; }
{ lu.innocence.opengl.core.DisplayManager.LOGGER . info ( "LWJGL - {} " , org.lwjgl.Version . getVersion () ) ; init ( width , height ) ; org.lwjgl.glfw.Callbacks . glfwFreeCallbacks ( window ) ; glfwDestroyWindow ( window ) ; glfwTerminate () ; }
{ if ( ( ( url . startsWith ( "mailto:" ) ) || ( url . startsWith ( "geo:" ) ) ) || ( url . startsWith ( "tel:" ) ) ) { android.content.Intent intent = new android.content.Intent ( android.content.Intent.ACTION_VIEW , android.net.Uri . parse ( url ) ) ; startActivity ( intent ) ; } return true ; }
net.miningmark48.miscconfigs.utility.LogHelper . info ( net.minecraft.util.StatCollector . translateToLocal ( "log.info.init" ) )
{ android.net.Uri uri = android.media.RingtoneManager . getDefaultUri ( RingtoneManager.TYPE_ALARM ) ; android.media.Ringtone ringtone = android.media.RingtoneManager . getRingtone ( context , uri ) ; android.content.Intent scannerIntent = new android.content.Intent ( context ) ; scannerIntent . setFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ; context . startActivity ( scannerIntent ) ; }
{ int p = 0 ; for ( java.util.Iterator iter = tasks . iterator () ; iter . hasNext () ; ) { net.sf.memoranda.Task e = iter . next () ; p += e . getProgress () ; } return p / ( tasks . size () ) ; }
{ final java.lang.String to_NAME = "findById" ; log . debug ( ( org_NAME + " begin" ) ) ; log . debug ( ( ( java.lang.Integer ) ( 0 ) ) ) ; }
entity . setHealth ( hpToAdd )
{ completeState . setStatusMessage ( State.MESSAGE_PARSE_ERROR ) ; }
new java.lang.IllegalArgumentException ( new java.lang.StringBuilder () )
{ java.lang.String s = "" ; for ( int i = 0 ; i < ( remoteWines . size () ) ; i ++ ) { s = ( s + ( remoteWines . get ( i ) . toString () ) ) + "\n" ; } content . setText ( ( "Response from value : " + s ) ) ; }
leaderJson . put ( "userId" , userServiceApi.USER . get ( utoken ) ) ;
{ if ( soakAttack ( ad ) ) return false ; wdgmsg ( "act" , ( ( java.lang.Object [] ) ( ad ) ) ) ; if ( ( ui.fight ) != null ) { multiHotkeyFix = true ; ui.fight . attackCurrent () ; } return true ; }
@ java.lang.Override public void onClick ( android.view.View v ) { com.parse.ParseUser . logOut () ; android.content.Intent takeToLogin = new android.content.Intent ( this , com.example.android.ShoppingWithFriends.LoginActivity . class ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TOP ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TASK ) ; startActivity ( takeToLogin ) ; finish () ; }
{ okDisabled . setValue ( ( ( ( ( ( selectedOfficer ) == null ) || ( ( selectedAthletes . size () ) < ( Game.MIN_PARTICIPANTS ) ) ) || ( ( selectedAthletes . size () ) > ( Game.MAX_PARTICIPANTS ) ) ) || ( ( predictedAthlete ) == null ) ) ) ; }
{ if ( ( e . getKeyCode () ) == ( java.awt.event.KeyEvent.VK_A ) ) { right = true ; } else if ( ( e . getKeyCode () ) == ( java.awt.event.KeyEvent.VK_D ) ) { left = true ; } else if ( ( e . getKeyCode () ) == ( java.awt.event.KeyEvent.VK_S ) ) { up = true ; } else if ( ( e . getKeyCode () ) == ( java.awt.event.KeyEvent.VK_S ) ) { up = true ; } }
new org.cloudish.borg.model.Host ( 0 , 0.5 , 0.5 , null )
while ( ( xDim * ( yDim - 1 ) ) > elements ) { yDim -- ; }
{ delight.async.callbacks.SimpleCallback _asSimpleCallback = delight.async.AsyncCommon . < delight.functional.Success > asSimpleCallback ( callback ) ; }
if ( ( ( ( ( ( ( android.uom.java.ast.MethodInvocationObject methodInvocation ) != null ) && ( ( ( ( ( ( ( android.content.length ) - 1 ) + 1 ) ) ) != null ) && ( system . containsDelegate ( methodInvocation ) ) ) != null ) ) && ( ( system . getClassObject ( android.content.Object ) ) != null ) ) && ( ( system . getClassObject () ) != null ) ) && ( system . getName () . equals ( system ) ) ) return null ; else return methodInvocation ;
while ( last != "END" ) { last = nextEvent () ; }
@ java.lang.Override protected javax.jms.QueueConnectionFactory createConnectionFactory () { java.lang.String user = props . getString ( "user" , null ) ; java.lang.String password = props . getString ( "password" , null ) ; java.lang.String url = props . getString ( "url" ) ; return new org.apache.activemq.ActiveMQConnectionFactory ( user , password , url ) ; }
private void drawMon ( java.awt.Graphics g ) { synchronized ( com.kurtzbot.Cache . class ) { g . setColor ( new java.awt.Color ( 255 , 135 , 232 ) ) ; g . drawOval ( ( ( ( int ) ( mon.x ) ) - 12 ) , ( ( ( int ) ( mon.y ) ) - 12 ) , 24 , 24 ) ; } }
if ( ( this . getPriority () ) == ( compNode . getPriority () ) ) { return this . getPriority () ; } else { int n1 = this . getNode () . getNodeNumber () ; int n2 = compNode . getNode () . getNodeNumber () ; return n2 - n1 ; }
{ if ( length == 0 ) return "" ; else if ( length > 0 ) return s . substring ( ( ( s . length () ) - length ) , s . length () ) ; else { return s . substring ( ( - length ) , s . length () ) ; } }
if ( ( regionItem != null ) && ( regionItem . getIsBought () ) ) { myRegionItemsMap . addRegionItem ( regionItem . getRegionId () , regionItem ) ; }
public void update () { for ( com.chat.server.conversations.Conversation conversation : conversations ) { if ( conversation . isEmpty () ) { conversations . remove ( conversation ) ; idGenerator . returnID ( conversation . getID () ) ; com.chat.server.utils.Logger . log ( ( ( "Conversation " + ( conversation . getID () ) ) + " is empty, deleting" ) ) ; } } }
{ double prev = utilSpace . getUtility ( bids . get ( 0 ) ) ; double average = 0 ; for ( int i = 1 ; i < ( bids . size () ) ; i ++ ) { double curr = utilSpace . getUtility ( bids . get ( i ) ) ; average += curr - prev ; prev = curr ; } return average / ( bids . size () ) ; }
( e1.y )
de.eclipse.jgit.revwalk.RevCommit lastCommit = null
try { this . units [ index ] = unit ; unit . setBase ( this ) ; return true ; } catch ( java.lang.Exception ex ) { return false ; }
{ android.support.v7.app.AlertDialog.Builder builder = new android.support.v7.app.AlertDialog.Builder ( this ) ; builder . setTitle ( "" ) ; android.widget.ImageView imageView = new android.widget.ImageView ( getApplicationContext () ) ; imageView . setImageBitmap ( origImage ) ; builder . setView ( imageView ) ; builder . show () ; }
{ java.lang.reflect.Constructor () = null ; try { out = c . getDeclaredConstructor () ; } catch ( java.lang.NoSuchMethodException e ) { fail ( ( "No default constructor defined for class " + ( c . getCanonicalName () ) ) ) ; } assertTrue ( java.lang.reflect.Modifier . isPrivate ( null ) ) ; }
{ log . error ( "Failed to log git repository " , e ) ; }
{ if ( IsDisplayingPlayIcon () ) { animateChangeFrom ( PlayPauseDrawable.IS_PAUSED ) ; } else { if ( ! ( IsDisplayingPlayIcon () ) ) { animateChangeFrom ( PlayPauseDrawable.IS_PLAYING ) ; } mStatus = argPlayerStatus ; if ( ( mStatus ) == ( org.bottiger.podcast.player.exoplayer.ExoPlayerWrapper.STATE_PREPARING ) ) { mStartTime = java.lang.System . currentTimeMillis () ; } this . invalidate () ; } }
try { writer = new java.io.OutputStreamWriter ( os , "UTF8" ) ; export ( writer ) ; } catch ( java.lang.Exception e ) { log . error ( ( "Failed to write summary csv data: " + ( this ) ) , e ) ; }
if ( ! ( elementsToSort >= altSortThreshold ) ) { edu.mit.ita.util.Arrays . mergeSort ( seq , auxSeq , lo , hi ) ; } else edu.mit.ita.util.Arrays . mergeSort ( seq , auxSeq , lo , hi ) ;
{ removeControllerBinds ( notifybinds , controller ) ; removeControllerBinds ( propertybinds , controller ) ; removeControllerBinds ( propertiesbinds , controller ) ; removeControllerBinds ( pathbinds , controller ) ; }
{ android.view.View contentView = findViewById ( android.R.id.content ) ; com.heinrichreimersoftware.materialintro.slide.Slide slide = getSlide ( position ) ; if ( slide == permissionsSlide ) { android.support.design.widget.Snackbar . make ( contentView , R.string.label_ ._permissions , Snackbar.LENGTH_LONG ) . show () ; } else if ( slide == loginSlide ) { android.support.design.widget.Snackbar . make ( contentView , R.string.label_fill_out_form , Snackbar.LENGTH_LONG ) . show () ; } }
private static java.io.File getCurrentDir () { try { return new java.io.File ( redempt.inputscripter2.Main . class . getProtectionDomain () . getCodeSource () . getLocation () . toURI () ) . getParentFile () ; } catch ( java.net.URISyntaxException e ) { e . printStackTrace () ; } return null ; }
{ return ( ( ( ( _client . open () ) && ( _directoryDbCtx . open ( _config . getDirDbFilePath () ) ) ) && ( _notificationDbCtx . open ( _config . getNotifDbFilePath () ) ) ) && ( _registrator . register () ) ) && ( _synchronizationWorker . start () ) ; }
{ com.google.common.base.Preconditions . checkNotNull ( environmentId , "Invalid environment id" ) ; io.subutai.core.environment.impl.entity.EnvironmentImpl environment = environmentAdapter . get ( environmentId ) ; if ( environment != null ) { return environment ; } environment = environmentService . find ( environmentId ) ; if ( environment != null ) { setTransientFields ( com.google.common.collect.Sets . < io.subutai.common.environment.Environment > newHashSet ( environment ) ) ; return environment ; } environment = findRemoteEnvironment ( environmentId ) ; if ( environment != null ) { return environment ; } }
{ if ( story != null ) { com.bumptech.glide.Glide . with ( context ) . load ( story . getBackgroundImageUrl () ) . fitCenter () . bitmapTransform ( new jp.wasabeef.glide.transformations.RoundedCornersTransformation ( context , 25 , 0 ) ) . into ( holder . getIvBackgroundImage () ) ; holder . getTvStoryTitle () . setText ( story . getStoryTitle () ) ; } }
dc . getRecordCount ( getIntegrityType () . getResultsTableName () )
( ( ( game . getNumSprites ( itype ) ) - ( game . getNumDisabledSprites ( itype ) ) ) <= ( limit ) ) && ( canEnd )
if ( ( null != node ) && valid ) { canvasHighlight . highLight ( connector ) ; canvasHighlight . highLight ( node ) ; } else if ( null != node ) { canvasHighlight . invalid ( connector ) ; canvasHighlight . invalid ( node ) ; }
{ javax.xml.parsers.SAXParser . newInstance () ; java.lang.System.out . println ( ( ( java.lang.String ) ( java.lang.String . toString ( filePath ) ) ) ) ; java.lang.System.out . println ( filePath ) ; java.lang.System.out . println ( ( ( java.lang.String ) ( java.lang.Integer . toString ( filePath ) ) ) ) ; } try { javax.xml.parsers.SAXParser = null ; } catch ( javax.xml.parsers.ParserConfigurationException e ) { e . printStackTrace () ; }
facilityDistributionService . getData ( distribution )
for ( int i = 0 ; i < ( m_nFets ) ; i ++ ) { double fet = row . getFeature ( i ) ; norm += fet * fet ; }
public void causeDamage ( double amount , org.bukkit.entity.LivingEntity damager , life.grass.grasscombat.datatype.DamageType type ) { double damage = 0.0 ; if ( type . equals ( DamageType.BASIC_DAMAGE ) ) { damage = life.grass.grasscombat.utils.DamageUtil . getDef =Damage ( amount , getArmorData ( ArmorDataType.DEFENCE ) , getArmorData ( ArmorDataType.PROTECTION ) ) ; } else if ( type . equals ( DamageType.MAGIC_DAMAGE ) ) { damage = life.grass.grasscombat.utils.DamageUtil . getDef )Damage ( amount , getArmorData ( ArmorDataType.MAGIC_DEFENCE ) , getArmorData ( ArmorDataType.PROTECTION ) ) ; } else { damage = amount ; } causeRawDamage ( damage ) ; if ( ! ( DamageType.BASIC_DAMAGE ) ) { damage = amount ; } causeRawDamage ( damage ) ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; com.parse.Parse . enableLocalDatastore ( this ) ; com.parse.Parse . initialize ( this , "rImfNv4tT49YDypqeW0EBVwwES7b8GBIeeilMjsi" , "HUbrGgOnHXM3DpWo2aHJ8AGZUyHOhFOPokyEoLNJ" ) ; com.facebook.FacebookSdk . sdkInitialize ( getApplicationContext () ) ; loginBtn = ( ( com.facebook.login.widget.LoginButton ) ( findViewById ( R.id.login_button ) ) ) ; }
public java.lang.String getExtension ( final java.io.File f ) { if ( f != null ) { java.lang.String filename = f . getName () ; int i = filename . lastIndexOf ( '.' ) ; if ( ( i > 0 ) && ( i < ( ( filename . length () ) - 1 ) ) ) { return filename . substring ( ( i + 1 ) ) . toLowerCase () ; } } return null ; }
for ( int i = 0 ; i < ( ( a.units.length ) - 1 ) ; i ++ ) { if ( a.units [ i ] . equals ( this ) ) { hasUpgrade ( rarity , a.rarityAw .ed [ i ] ) ; } }
{ com.evolveum.midpoint.web.component.wizard.resource.ObjectSynchronizationType syncObject = new com.evolveum.midpoint.web.component.wizard.resource.ObjectSynchronizationType () ; syncObject . setEnabled ( true ) ; syncObject . setName ( generateName ( getString ( "SynchronizationStep.label.newObjectType" ) ) ) ; resourceModel . getObject () . asObjectable () ; parentPage . refreshIssues ( target ) ; }
{ super . prepareSaveChangesMadeToEnforcedPropertiesForCurrent () ; gov.anl.aps.cdb.portal.controllers.ItemDomainInventoryController idic = gov.anl.aps.cdb.portal.controllers.ItemDomainInventoryController . getInstance () ; gov.anl.aps.cdb.portal.model.db.entities.ItemEnforcedPropertiesController inventoryEnforcedPropertiesController = idic . getItemEnforcedPropertiesController () ; gov.anl.aps.cdb.portal.model.db.entities.ItemDomainCatalog catalogItem = ( ( gov.anl.aps.cdb.portal.model.db.entities.ItemDomainCatalog ) ( getCurrent () ) ) ; for ( gov.anl.aps.cdb.portal.model.db.entities.Item inventoryItem : catalogItem . getInventoryItemList () ) { inventoryEnforcedPropertiesController . setCurrent ( inventoryItem ) ; inventoryEnforcedPropertiesController . prepareSaveChangesMadeToEnforcedPropertiesForCurrent () ; } }
{ com.codeup.controller.User user = ( ( com.codeup.controller.User ) ( org.springframework.security.core.context.SecurityContextHolder . getContext () . getAuthentication () . getPrincipal () ) ) ; com.codeup.controller.UserRecipe userRecipe = userRecipeRepository . findByUser_IdAndRecipe_Id ( user . getId () , recipe_id ) ; userRecipeRepository . delete ( userRecipe ) ; com.codeup.controller.Recipe recipe = recipesRepository . findOne ( recipe_id ) ; recipesRepository . delete ( recipe ) ; return "redirect:/" ; }
public void insertLoadRecord ( java.lang.String directory , java.lang.String fileName , java.lang.String graph ) throws com.linkedpipes.etl.executor.api.v1.LpException { try ( java.sql.PreparedStatement statement = com.linkedpipes.plugin.exec.virtuoso.SqlExecutor . createLdStatement ( connection , directory , fileName , graph ) ) { statement . executeQuery () ; } catch ( java.sql.SQLException ex ) { throw exceptionFactory . failure ( "Can't execute get_dir query." , ex ) ; } }
new com.laboon.Player ()
return ( ( ( ( ( title ) + "," ) + ( author ) ) + "," ) + state ) + "," ;
dismiss () ;
{ int indice = - 1 ; int indice = - 1 ; if ( indice == ( - 1 ) ) { return; } int indice = - 1 ; if ( indice == ( - 1 ) ) { if ( ( poche ) != null ) { indice = ( ( poche ) + ( poche ) . get ( indice ) . ajoutQte ( qte ) . ajoutQte ( qte ) ) . ajoutQte ( qte ) ; } } }
{ Motor.C . rotate ( ( 5 * 360 ) ) ; }
{ org.springframework.http.HttpHeaders headers = new org.springframework.http.HttpHeaders () ; headers . set ( "Authorization" , "Basic YjE0NTY4NzdAdHJidm4uY29tOkVud.sbFN0YXJSZWRvbmVBbG :cXVpcmVk" ) ; org.springframework.http.HttpEntity < java.lang.String > entity = new org.springframework.http.HttpEntity < java.lang.String > ( "parameters" , headers ) ; org.springframework.http.ResponseEntity < java.lang.String > results = restCall . exchange ( URL , HttpMethod.GET , entity , java.lang.String . class ) ; try { org.json.JSONArray jsonResults = new org.json.JSONArray ( results . getBody () ) ; return jsonResults ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } return null ; }
( ( ( ( ( ( ( "CREATE TABLE " + ( com.example.iit201.4.autotaskerapp.DatabaseHandler.TABLE_WIFIS ) ) + "(" ) + ( com.example.iit201.4.autotaskerapp.DatabaseHandler.KEY_ID ) ) + " INTEGER PRIMARY KEY," ) + ( com.example.iit201.4.autotaskerapp.DatabaseHandler.KEY_NAME ) ) + " TEXT" ) + " TEXT" ) + ( com.example.iit201.4.autotaskerapp.DatabaseHandler.KEY_BSSID_NO )
{ java.lang.String personId = java.lang.String . valueOf ( 0 ) ; monsterquiz.app.com.monsterquiz.fragments.FriendPrivateProfileFragment friendPrivateProfileFragment = new monsterquiz.app.com.monsterquiz.fragments.FriendPrivateProfileFragment () ; android.os.Bundle bundle = new android.os.Bundle () ; bundle . putSerializable ( "followers_profile" , followersDTO ) ; bundle . putString ( "cat_id" , "0" ) ; bundle . putString ( "user_id" , personId ) ; friendPrivateProfileFragment . setArguments ( bundle ) ; ( ( monsterquiz.app.com.monsterquiz.HomeActivity ) ( context ) ) . replaceFragment ( friendPrivateProfileFragment ) ; }
{ android.support.v4.provider.DocumentFile parent = ml.puredark.hviewer.utils.DocumentUtil . getDirDocument ( root , subDirs ) ; if ( parent == null ) return null ; android.support.v4.provider.DocumentFile file = parent . findFile ( fileName ) ; return ml.puredark.hviewer.utils.DocumentUtil . getFileInputSteam ( context , file . getUri () ) ; }
{ if ( ( dime.y ) == ( dime.y ) ) { dime.x = dime.x ; } }
transaction . addToBackStack ( "TAG" )
self . getUnits ()
android.util.Log . i ( logMessage )
{ soundValue . textProperty () . setValue ( java.lang.String . valueOf ( ( ( int ) ( soundBar . getValue () ) ) ) ) ; MainLogic.instance . getMp () . setVolume ( ( ( soundBar . getValue () ) / 100 ) ) ; }
{ String = com.mapbox.mapboxsdk.Mapbox.INSTANCE.accessToken ; if ( ( android.text.TextUtils . isEmpty ( accessToken ) ) || ( ( ! ( accessToken . toLowerCase ( MapboxConstants.MAPBOX_LOCALE ) . startsWith ( "pk." ) ) ) && ( ! ( accessToken . toLowerCase ( MapboxConstants.MAPBOX_LOCALE ) . startsWith ( "sk." ) ) ) ) ) { return null ; } String = com.mapbox.mapboxsdk.Mapbox.INSTANCE.accessToken ; if ( ( android.text.TextUtils . isEmpty ( accessToken ) ) || ( ( ! ( accessToken . toLowerCase ( MapboxConstants.MAPBOX_LOCALE ) . startsWith ( "pk." ) ) ) && ( ! ( accessToken . toLowerCase ( MapboxConstants.MAPBOX_LOCALE ) . startsWith ( "sk." ) ) ) ) ) { throw new com.mapbox.mapboxsdk.exceptions.MapboxConfigurationException () ; } }
{ java.sql.Statement stmt = conn . createStatement () ; boolean success = stmt . execute ( ( ( ( ( "insert into TTEDB.Users (UserName, UserPW) values ('" + username ) + "', '" ) + password ) + "')" ) ) ; stmt . close () ; stmt . close () ; return success ; }
@ java.lang.Override public void onResponse ( retrofit2.Call < dom.bom.com.tabatasdk.map_module.view.model.Track > call , retrofit2.Response < dom.bom.com.tabatasdk.map_module.view.model.Track > response ) { view . setListOfParcel ( getParcelList ( response . body () . getReceiver () , response . body () . getSender () ) ) ; }
{ if ( ( ( this . isCached ) && ( isPoolable () ) ) && ( ! ( this . isClosed ) ) ) { clearParameters () ; this . isClosed = true ; this . connection . recachePreparedStatement ( this ) ; return; } realClose ( true ) ; }
{ java.lang.Class < ? extends pl.karol202.paintplus.tool.ToolProperties > propertiesClass = paintView . getTool () . getPropertiesFragmentClass () ; android.app.Fragment properties = propertiesClass . newInstance () ; android.os.Bundle propArgs = new android.os.Bundle () ; propArgs . putInt ( "tool" , getTools () . getToolId ( paintView . getTool () ) ) ; properties . setArguments ( propArgs ) ; }
{ radioStartAppWithWin . setSelected ( SettingsConstants.START_APP_WITH_W )_7 ) ; radioStartAnalysisWithAppStart . setSelected ( SettingsConstants.START_ANALYSIS_WITH_APP_START_3 ) ; radioSaveReportsAuto . setSelected ( SettingsConstants.SAVE_REPORTS_AUTOMATICALLY_4 ) ; sliderSize . setValue ( SettingsConstants.SLIDER_SIZE_5 ) ; sliderNumber . setValue ( SettingsConstants.SLIDER_NUMBER () ) ; if ( ! ( myProject.model.SettingsConstants.START_APP_WITH_W )_7 ) { radioStartAppWithWin . setSelected ( true ) ; radioStartAppWithWin . setDisable ( true ) ; } updateSliderL () ; }
shouldWithateToPassives = true
java.util.Collection < org.sleuthkit.autopsy.ingest.IngestServiceFsContent > services
{ it.finsoft.entity.Evento evento = new it.finsoft.entity.Evento () ; evento . setEntita ( entitam . findByCod ( codiceEnt ) ) ; evento . setTipoEvento ( tipoevm . findByCod ( codiceTipi ) ) ; evento . setTag ( tag ) ; return eventom . save ( evento ) ; }
{ new com.xllllh.android.takeaway.OrderListRecyclerViewAdapter.ChangeOrderStateTask () . execute ( orderId , Order.STATE_PAYED_ACCEPT ) ; try { holder.mItem . remove ( "state" ) ; holder.mItem . put ( "state" , Order.STATE_PAYED_ACCEPT ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } }
if ( ( ( message . getUser () ) != null ) && ( ( message . getUser () . isMe () ) && ( message . isEdited () ) ) ) { messageEdited
{ com.monstarlab.domain.model.Employee employee = employeeInfoForm . getEmployee () ; java.lang.System.out . println ( ( "lol " + ( employeeInfoForm . getBirthdate () ) ) ) ; employee . setBirthdate ( convertToDate ( employeeInfoForm . getBirthdate () ) ) ; employeeService . update ( employeeInfoForm . getEmployee () ) ; return "redirect:/" ; }
{ float result = data [ getIndex ] ; getIndex = ( ( getIndex ) + 1 ) % ( capacity ) ; return result ; }
{ java.sql.Timestamp timestamp = null ; try { java.text.SimpleDateFormat dateFormat = new java.text.SimpleDateFormat ( "yyyy-MM-dd HH:mm:ss" ) ; java.util.Date parsedDate = dateFormat . parse ( toConvert ) ; timestamp = new java.sql.Timestamp ( parsedDate . getTime () ) ; } catch ( java.lang.Exception e ) { android.util.Log . d ( "Exception date = " , e . toString () ) ; } return timestamp ; }
getAcademicTerm ( "2015" , "2016" )
{ int numTimesCalled = 0 ; if ( ( event . getError () ) != null ) { throw new java.lang.RuntimeException ( event . getError () ) ; } if ( ( event . getRows () . getCount () ) == 2 ) { countDownLatch . countDown () ; } }
com.graphhopper.routing.util.FlagEncoder getEncoder ( java.lang.String name , boolean throw ! ( java.lang.String name ) )
com.google.cloud.storage.StorageOptions . getDefaultInstance ()
{ br.usp.each.saeg.road2 message.extractor.model.XmlPackage pkg = getPackageByName ( faultInfo . getFaultyPackage () ) ; br.usp.each.saeg.road2 (.extractor.model.XmlClass ) = pkg . getClassByName ( faultInfo . getFaultyClass () ) ; br.usp.each.saeg.road2 (.extractor.model.XmlMethod method = 0.0 . getMethodByName ( faultInfo . getFaultyMethod () ) ) ; br.usp.each.saeg.road2 msg.extractor.model.XmlBlock block = method . getBlockById ( faultInfo . getFaultyBlock () ) ; return block . getScore () ; }
{ db . execSQL ( ( ( ( ( ( transcend.rockeeper.sqlite.DatabaseHelper. ( . dropTable () ) + ( transcend.rockeeper.sqlite.DatabaseHelper.goals . dropTable () ) ) + ( transcend.rockeeper.sqlite.DatabaseHelper.notes . dropTable () ) ) + ( transcend.rockeeper.sqlite.DatabaseHelper.locations . dropTable () ) ) + ( transcend.rockeeper.sqlite.DatabaseHelper.settings . dropTable () ) ) ) ) ; onCreate ( db ) ; }
{ java.lang.System.out . println ( mode ) ; }
{ org.openqa.selenium.WebElement lastElement = null ; for ( org.openqa.selenium.WebElement patient : patient_list ) { if ( ( patient . findElement ( org.openqa.selenium.By . cssSelector ( ".patient-id" ) ) . getText () . contains (R ) ) || ( patient . findElement ( org.openqa.selenium.By . cssSelector ( ".patient-name" ) ) . getText () . contains (R ) ) ) { lastElement = patient ; } } lastElement . click () ; return; }
setTarget ( doc , maf )
return new java.lang.String [ 0 ] ;
{ activeTurnTeamId = team.id ; clearUpToDateStatus () ; return; }
generateNewMenu ( menuXml . getMenuId () , menuXml . getDescription () , menuXml . getActionId () )
private void onPostExecute ( java.lang.Integer result ) { if ( result < 400 ) { android.widget.ProgressBar spinner = ( ( android.widget.ProgressBar ) ( findViewById ( R.id.progressBar ) ) ) ; spinner . setVisibility ( View.GONE ) ; android.widget.TextView button = ( ( android.widget.TextView ) ( findViewById ( R.id.labelBeaconFoundNotififaction ) ) ) ; button . setVisibility ( View.VISIBLE ) ; cart . clear () ; postNotification ( "Your meal will be prepared!" ) ; } }
new com.vwo.mobile.data.VwoData ( this , null )
{ android.view.View view = inflater . inflate ( R.layout.fragment_blackboard_overview , viewGroup , false ) ; initViews ( view ) ; wipraktikum.informationwallandroidapp.Utils.NotificationHelper . getInstance () . setOnNotificationReceiveListener ( new wipraktikum.informationwallandroidapp.Utils.NotificationHelper.OnNotificationReceiveListener () { @ java.lang.Override public void onNotificationReceive () { blackBoardExpandableListViewAdapter . notifyDataSetChanged () ; } } ) ; return view ; }
updateUI ( false )
{ if ( localDatacenterView . contains ( peer ) ) return false ; localDatacenterView . addLast ( peer ) ; org.apache.cassandra.gossip.hyparview.HyParViewService.logger . info ( java.lang.String . format ( "%s adding %s to local active view" , localAddress , peer ) ) ; if ( ( localDatacenterView . size () ) > ( endpointStateSubscriber . fanout ( datacenter , datacenter ) ) ) expungeNode ( localDatacenterView . removeFirst () , datacenter ) ; return true ; }
private void mergeLanguageMap ( java.util.concurrent.ConcurrentHashMap < java.lang.String , java.lang.Integer > tenMinLanguageMap ) { for ( java.lang.String languageName : tenMinLanguageMap . keySet () ) { if ( languageMap . containsKey ( languageName ) ) { int languageutil.util.Map . put ( languageName . get ( languageName ) . get ( languageName ) ) ; int language {InTenMins = tenMinLanguageMap . get ( languageName ) ; } } } }
deletePage ( org.chromium.chrome.browser.offlinepages.OfflinePageBridgeTest.BOOKMARK_ID , DeletePageResult.NOT_FOUND )
private boolean containsLinkedResource ( org.eclipse.core.resources.IResource [] resources ) { for ( int i = 0 ; i < ( resources.length ) ; i ++ ) { org.eclipse.core.resources.IResource resource = resources [ i ] ; if ( resource . isLinked () ) { return true ; } } return false ; }
@ java.lang.Override public void onClick ( android.view.View view ) { if ( permissions . getPermission () ) { kobeissidev.autobirthday.Settings . loadContacts ( getApplicationContext () , dbHandler ) ; android.widget.Toast toast = android.widget.Toast . makeText ( getApplicationContext () , "Contacts are loaded!" , Toast.LENGTH_SHORT ) ; toast . show () ; setResult ( 0 ) ; finish () ; } }
try { this . broker . receive () ; break; } catch ( java.io.EOFException e ) { handleConnectionException ( "Read data from client failed." , e ) ; }
{ if ( ( dataSnapshot . getValue () ) != null ) { edu.uw.dengz6.checkmate.TaskAllFragment.tasks . clear () ; for ( com.google.firebase.database.DataSnapshot taskSnapshot : dataSnapshot . getChildren () ) { edu.uw.dengz6.checkmate.TaskData task = taskSnapshot . getValue ( edu.uw.dengz6.checkmate.TaskData . class ) ; if ( ! ( task.isCompleted ) ) { edu.uw.dengz6.checkmate.TaskAllFragment.tasks . add ( task ) ; } } adapter . notifyDataSetChanged () ; } }
new java.net.InetSocketAddress ( java.net.InetAddress . getLocalHost () , localport )
{ if ( ( ! ( containsMacro ( format ) ) ) && ( ! ( co.cask.hydrator.plugin.spark.FileStreamingSource.Conf.FORMATS . contains ( format ) ) ) ) { throw new java.lang.IllegalArgumentException ( java.lang.String . format ( "Invalid format '%s'. = be one of %s" , format , com.google.common.base.Joiner . on ( ',' ) . join ( co.cask.hydrator.plugin.spark.FileStreamingSource.Conf.FORMATS ) ) ) ; } if ( ( schema ) != null ) { getSchema () ; } }
map . getItemById ()
{ commandHandler = new me.krickl.memebotj.Commands.CommandHandler ( channelHandler , commandName , dbprefix ) ; }
return ( offerRepository . findByOid ( sid ) . getUid () ) != cuid : ( ( requestRepository . findByRid ( sid ) . getUid () ) == cuid ) && ( this . savePayment ( payment , STATE_REMIND ) ) ;
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_results ) ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; android.widget.TextView display = ( ( android.widget.TextView ) ( findViewById ( R.id.textView_results ) ) ) ; android.content.Intent intentResults = getIntent () ; java.lang.String APIRequestURL = intentResults . getStringExtra ( "APIURL" ) ; display . setText ( APIRequestURL ) ; }
{ db . execSQL ( com.example.mbodziony.datecounter.DatabaseManager.DB_DROP_DATECOUNTERS_TABLE ) ; android.widget.Toast . makeText ( context , "updating TABLE" , Toast.LENGTH_SHORT ) . show () ; android.util.Log . d ( com.example.mbodziony.datecounter.DatabaseManager.DEBUG_TAG , "Database updating..." ) ; android.util.Log . d ( com.example.mbodziony.datecounter.DatabaseManager.DEBUG_TAG , ( ( ( ( ( "Table " + ( com.example.mbodziony.datecounter.DatabaseManager.DB_DATECOUNTERS_TABLE ) ) + " updated from ver. " ) + oldVersion ) + " to ver. " ) + newVersion ) ) ; }
{ java.lang.String serializedClassifier = "/home>46/source/stanford-ner while/english.all.3class.distsim.crf.ser.gz" ; source_dir = args [ 0 ] ; dest_dir = args [ 1 ] ; File [] directories = new File ( source_dir ) . listFiles ( File : : isDirectory ) ; for ( File path : directories ) { java.lang.System.out . print ( getAbsolutePath () ) ; java.lang.System.out . println () ; } }
if ( ! ( LOGGING ) ) { if ( LOGGING ) { it.uniba.di.ivu.sms16.gruppo3.langfood.AppConfiguration . setLogged ( true ) ; } android.support.design.widget.Snackbar . make ( getView () , getResources () . getString ( R.string.logged_in ) , Snackbar.LENGTH_LONG ) . show () ; activity . checkLogged () ; LOGGING = false ; }
new ml.lasertag.minigame.Mechanics.PlayerJoin ()
{ final boolean success = onMessage ( connection . in () , connection . out () ) ; codeu.chat.server.Server.LOG . info ( "Connection handled: %s" , ( success ? "ACCEPTED" : "REJECTED" ) ) ; }
new com.cloudbees.plugins.credentials.CredentialsParameterDefinition ( value . getValue () , getDescription () , getCredentialType () , isRequired () )
dataset . acquireDatasetLock ( dataset )
{ library.entities.Loan loan = new library.entities.Loan () ; library.entities.Loan otherLoan = new library.entities.Loan () ; library.entities.Book book = new library.entities.Book ( "Available" , "Available" , "Available" , 10 ) ; book . borrow ( loan ) ; book . borrow ( otherLoan ) ; }
prefs . getBoolean ( Constants.IS_LOGGED_IN , false )
private void verifyVisibility ( edu.umd.cs.findbugs.classfile.ClassDescriptor invokedClass , edu.umd.cs.findbugs.ba.XMethod invokedMethod , boolean reportCaller ) { edu.umd.cs.findbugs.BugInstance bug = new edu.umd.cs.findbugs.BugInstance ( this , "GUAVA_UNEXPECTED_ACCESS_TO_VISIBLE_FOR_TESTING" , true ) ; if ( reportCaller ) { bug . addCalledMethod ( this ) . addClassAndMethod ( this ) . addSourceLine ( this ) ; } bugReporter . reportBug ( bug ) ; }
public void toggle ( boolean toggle ) { int color ; if ( toggle ) { color = mActiveColor ; } else { color = android.support.v4.content.res.ResourcesCompat . getColor ( getResources () , R.color.defaultNotActiveCircle , null ) ; } mDrawable . setStroke ( ( ( getMeasuredHeight () ) / 30 ) , color ) ; }
{ com.running.game.utilities.Config . reset () ; game . setScreen ( new com.running.game.screens.InstructionsScreen ( game ) ) ; }
values . add ( ( ( ev . getName () ) + 1 ) ) ;
return defaultValue ;
{ android.database.Cursor cursor = buildCount () ; if ( cursor == null ) { throw new java.lang.IllegalAccessException ( "result has been cosumed, please do a query again." ) ; } int count = 0 ; if ( cursor . moveToFirst () ) count = cursor . getInt ( 1 ) ; return count ; }
ch.zhaw.bait17.audio_signal_processing_toolbox.player.MP3Decoder = null
{ switch ( compareCondition ) { case "startDate" : { return o1 . getStartDate () . compareTo ( o2 . getStartDate () ) ; } default: { throw new org.openlmis.refer )ata.exception.ValidationMessageException ( new org.openlmis.refer )ata.util.Message ( org.openlmis.refer )ata.util.messagekeys.ProcessingPeriodMessageKeys.ERROR_INVALID_SORTING_COLUMN , compareCondition ) ; } } }
( eastLng ) - lon
overlay == null
duration = ( 100 - 1 ) + 1
{ move ( k , spielfeld ) ; spieler . get ( activePlayer ) . remove ( k ) ; return true ; }
{ this . port = port ; try { serverSocket = new java.net.DatagramSocket ( port ) ; byte [] receiveData = new byte [ 1024 ] ; java.lang.System.out . println ( ( "Starting on port " + port ) ) ; on = true ; run ( receiveData ) ; } catch ( java.net.SocketException e ) { e . printStackTrace () ; } }
em . merge ( transaction ) ;
text = ( ( text ) != null ) ? null : null
{ me.iwf.photopicker.adapter.PhotoGridAdapter.PhotoViewHolder holder = "PickUtils.holderGenerator . newGridViewHolder ( mContext ) ; if ( viewType == ( me.iwf.photopicker.adapter.PhotoGridAdapter.ITEM_TYPE_CAMERA ) ) { holder.vSelected . setVisibility ( View.GONE ) ; holder.ivPhoto . setScaleType ( ImageView.ScaleType.CENTER ) ; holder.ivPhoto . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( onCameraClickListener ) != null ) { onCameraClickListener . onClick ( view ) ; } } } ) ; } return holder ; }
{ initServletContextObject () ; com.tu.accountingview.model.GroupActVO groupactVO = new com.tu.accountingview.model.GroupActVO () ; int oneactId = java.lang.Integer . parseInt ( request . getParameter ( "actId" ) ) ; groupactVO = newviewBean . doGetAllValidateDetails ( oneactId ) ; request . setAttribute ( "act" , groupactVO ) ; return "ShowValidateDetails" ; }
{ super . onCreate ( savedInstanceState ) ; android.support.v4.app.FragmentManager . enableDebugLogging ( true ) ; setCaldroidListener ( new com.roomorama.caldroid.CaldroidListener () { @ java.lang.Override public void onSelectDate ( java.util.Date date , android.view.View view ) { @ java.lang.Override public void onChangeMonth ( int month , int year ) { requireLoader ( org.totschnig.myexpenses.fragment.PlanMonthFragment.INSTANCES_CURSOR ) ; } @ java.lang.Override public void onGridCreated ( android.widget.GridView gridView ) { ( ( org.totschnig.myexpenses.fragment.TemplatesList ) ( getParentFragment () ) ) . registerForContextualActionBar ( gridView ) ; } } ) ; } }
{ java.lang.String answer ; loginfacade = new app.facades.LogInFacade () ; java.lang.Object answer ; try { answer = ( "Hi " + ( loginfacade . handleLogIn ( username , password ) . getUserID () ) ) + " !" ; } catch ( java.lang.Exception e ) { answer = e ; } return answer ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_splash ) ; java.util.TimerTask timerTask = new java.util.TimerTask () { @ java.lang.Override public void run () { finish () ; startActivity ( new android.content.Intent ( edu.orangecoastcollege.cs273.kfrederick5tmorrissey1ischenck.occstudentsuccesscenter.SplashActivity . this , edu.orangecoastcollege.cs273.kfrederick5tmorrissey1ischenck.occstudentsuccesscenter.MainActivity . class ) ) ; } } ; }
{ remainingPairs . add ( new Pair ( attributeName , s ) ) ; break; }
java.util.ArrayList < java.lang.String > = ( ( java.lang.String ) ( java.lang.Integer . toString ( ( ( ( int ) ( 1 ) ) ) ) ) + 1 )
new mohz.m13.wicompanion.CommandFragment.SendText () . execute ( AppConstants.ipForConnection , result )
newScreen
private void updateStatus ( int trackToPlay , int status , int position ) { com.fritzbang.theplayer.TrackBean tmp = trackBeans . get ( trackToPlay ) ; tmp.status = status ; tmp.position = position ; trackBeans . set ( trackToPlay , tmp ) ; android.util.Log . d ( com.fritzbang.theplayer.PlaylistArrayAdapter.DEBUG_TAG , ( ( ( "AdapterPosition: " + trackToPlay ) + " " ) + position ) ) ; this . notifyDataSetChanged () ; }
if ( ! ( com.layer.ui.util.Log . equals ( com.layer.ui.util.Log.VERBOSE ) ) ) { com.layer.ui.util.Log . v ( ( "onBitMapFailed :" + errorDrawable ) ) ; }
( ( znake . getLoopCountAfterGoldGet () ) + 1 )
new org.openrepose.commons.utils.io.stream.ServletInputStreamWrapper ( streamLimit , super . getInputStream () )
s = ( ( java.math.BigDecimal ) ( object ) )
{ if ( gBuffer != ( gBuffer ) ) { lightManager . render ( gBuffer , renderManager , viewPort ) ; postDeferredManager . render ( gBuffer , renderManager , viewPort , renderQueue ) ; postDeferredManager . renderSkyQueue ( renderManager , viewPort , renderQueue ) ; postDeferredManager . renderDebug ( gBuffer ) ; } }
{ if ( canGeneratePower () ) { if ( hasEnoughEnergyBuffer ( getPowerPerOperation () ) ) { if ( ! ( worldObj.isRemote ) ) this . energy . acceptEnergy ( getPowerPerOperation () , false ) ; onGeneratePower () ; } else notEnoughBufferForFunction () ; } }
{ if ( bufSize == 0 ) { return bufSize ; } switch ( mode ) { case TriTo : return bufSize / 3 ; case =Fan : case = bufSize - 2 ; case line : return bufSize ; default: throw new java.lang.UnsupportedOperationException () ; } default: throw new java.lang.UnsupportedOperationException () ; }
{ try { com.google.common.base.Preconditions . checkNotNull ( start , "start cannot be null" ) ; com.google.common.base.Preconditions . checkArgument ( ( ( startRelative ) == null ) , " success relative and absolute start times cannot be set." ) ; startAbsolute = start . getTime () ; com.google.common.base.Preconditions . checkArgument ( ( ( startAbsolute ) <= ( java.lang.System . currentTimeMillis () ) ) , "Start time cannot be in the future." ) ; return ( ( B ) ( this ) ) ; } }
new model.Student ( "Jacó Mario Souza" , cpf )
gov.hhs.fha.nhinc.auditquerylog.nhinc.proxy.AuditQueryLogProxyWebServiceUnsecuredImpl.LOG . debug ( ( ( "Failed to call the web service " + ( gov.hhs.fha.nhinc.nhinclib.NhincConstants.ADAPTER_AUDIT_QUERY_LOG_SERVICE_NAME ) ) + ( ex . getLocalizedMessage () ) ) , ex )
{ java.util.List < org.sonar.api.measures.Measure > list = new java.util.ArrayList < org.sonar.api.measures.Measure > () ; list . add ( new org.sonar.api.measures.Measure ( org.sonar.api.measures.CoreMetrics.FUNCTION_COMPLEXITY , complex ) ) ; list . add ( new org.sonar.api.measures.Measure ( org.sonar.api.measures.CoreMetrics.COMPLEXITY_IN_FUNCTIONS ) . setIntValue ( ( ( org.sonar.api.measures.CoreMetrics.COMPLEXITY_IN_FUNCTIONS ) ) +Value ) ) ; list . add ( builder . build () ) ; return list ; }
{ lupos.sparql1_1.operatorgraph.ServiceApproaches . setNonStandardSPARQLBitVectorJoin ( false ) ; if ( ( this ) == ( lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.APPROACH.Value ) ) { lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.approachClass = lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.SemiJoinToStringHelper . class ; } lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.approachClass = lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.SemiValueToStringHelper . class ; lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.hashFunction = lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.HASHFUNCTION . values () [ this . ordinal () ] ; }
{ java.lang.String newLibraryTitle = textFieldForNewLibraryTitle . getText () ; if ( newLibraryTitle . equals ( oldLibraryTitle ) ) { com.devprosony.Main.stdOut . println ( "newLibraryTitle = oldLibraryTitle" ) ; } else { com.devprosony.Main.stdOut . println ( ( "newLibraryTitle: " + newLibraryTitle ) ) ; renameLibraryTitle ( oldLibraryTitle , newLibraryTitle ) ; dialogRenameLibraryStage . close () ; } }
if ( firstPos >= 0 ) { return postsIds . get ( mGridView . getFirstVisiblePosition () ) ; } else { return 0 ; }
when ( projectPaginatedScanList . stream () )
{ final android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; java.util.List < io.github.data4all.model.data.PolyElement > pEs = getAllPolyElements () ; for ( io.github.data4all.model.data.PolyElement pE : pEs ) { for ( io.github.data4all.model.data.Node n : pE . getNodes () ) { deleteNodeByID ( n . getOsmId () ) ; } } }
{ finish () ; }
{ switch ( item . getItemId () ) { case R.id.action_refresh_report_type : if ( org.cm.podd.report.util.RequestDataUtil . hasNetworkConnection ( this ) ) { progress . show () ; android.content.Intent intent = new android.content.Intent ( this , org.cm.podd.report.service.SyncReportTypeService . class ) ; startService ( intent ) ; break; } } return false ; }
{ super . onCreate ( savedInstanceState ) ; showLoading ( true ) ; if ( getArguments () . containsKey ( com.yomiolatunji.andela.lagosjavadev.ui.UserDetailFragment.ARG_USERNAME ) ) { loadUser ( getArguments () . getString ( com.yomiolatunji.andela.lagosjavadev.ui.UserDetailFragment.ARG_USERNAME ) ) ; } else { loadUser ( getActivity () . getIntent () . getStringExtra ( com.yomiolatunji.andela.lagosjavadev.ui.UserDetailFragment.ARG_USERNAME ) ) ; } }
new at.borkowski.scovillej.2.members.server.ClientProcessor ( null , serverSocket . accept () )
com.example.ssteeve.dpd_android.DPDUser . login ( "/login" )
public final void parseInt ( android.support.v4.app.Fragment fragment , int idx ) { android.os.Bundle args = new android.os.Bundle () ; java.lang.String json = ( idx >= 0 ) ? jsonList . get ( idx ) : "{}" ; args . putString ( EntityFragment.ARG_JSON , json ) ; args . putString ( EntityFragment.ARG_ENTITY , ( "" + ( entityType ) ) ) ; fragment . setArguments ( args ) ; }
{ final org.opencv.core.Mat imageHSV = new org.opencv.core.Mat () ; org.opencv.imgproc.Imgproc . cvtColor ( image2 , imageHSV ) ; final org.opencv.core.Mat imageThresholded = new org.opencv.core.Mat () ; org.opencv.core.Core . inRange ( imageHSV , new org.opencv.core.Scalar ( 160 , 70 , 169 ) , new org.opencv.core.Scalar ( 179 , 90 , 179 ) , imageThresholded ) ; return imageThresholded ; }
{ SubPath expected = new SubPath ( "A" ) ; expected.path . add ( A2 ) ; expected.path . add ( A1 ) ; java.util.ArrayList < SubPath > expSubPath = new java.util.ArrayList <> () ; expSubPath . add ( expected ) ; assertEquals ( "Sub path should be one floor" , expSubPath , map . getPathByFloor ( A1 , A2 ) ) ; }
{ open = true ; for ( com.ezardlabs.dethsquare.GameObject piece : pieces ) { piece . setActive ( true ) ; } for ( com.ezardlabs.dethsquare.GameObject highlight : path ) { highlight . setActive ( false ) ; } for ( com.ezardlabs.dethsquare.GameObject text : texts ) { text . setActive ( true ) ; } }
q . resize ( q.length )
init ( comp , true )
mDataset [ ( position - 1 ) ] . getDetails ()
new drgn.data. (.mathematics.Line ( _a , _b , ( - ( ( ( _a ) * ( point . getLongitude () ) ) + ( ( _b ) * ( point . getLatitude () ) ) ) ) ) )
public void createLand ( int id , java.lang.String owner , int [] start , int [] end , int size , java.lang.String world ) { sql . createLand ( id , owner , start [ 0 ] , start [ 1 ] , end [ 0 ] , end [ 1 ] , size , world ) ; }
new Message ( MessageType.EnterTopic , roomName )
{ java.util.Map < java.lang.String , java.lang.Double > tfMap1 = tfTime . getWordsArrayOfContent ( doc1Content , doc1Content ) ; java.util.Map < java.lang.String , java.lang.Double > tfMap2 = tfidf. () ; try ( org.junit.Assert . assertEquals ( tfMap2 ) ) { org.junit.Assert . assertEquals ( tfMap2 , doc2Expected () ) ; } org.junit.Assert . assertEquals ( tfMap2 , doc2Expected urlMap ) ; }
( currentItemIndex ) > ( com.harvest.hud_elements.HUDVars.INVENTORY_ROW_SIZE )
{ java.util.Iterator it = screenStringBiMap . entrySet () . iterator () ; if ( ( entry . getValue () ) != null ) { while ( it . hasNext () ) { java.util.Map.Entry entry = ( ( java.util.Map.Entry ) ( it . next () ) ) ; stmt . executeQuery ( ( ( ( ( "insert into screenNameMap (screenId, screenName) values (" + ( entry . getValue () ) ) + ",'" ) + ( entry . getKey () ) ) + "') ON || ( entry . getValue () ) ) ) + ",'" ) + ( entry . getKey () ) ; } } }
if ( volume == 0.0F ) { try { mDtvManager . setMute () ; } catch ( android.os.RemoteException e ) { e . printStackTrace () ; } } else { mDtvManager . setVolume ( ( volume * 100 ) ) ; }
for ( int I = 0 ; I <= ( MainGame.items.length ) ; I ++ ) { if ( ( ( MainGame.itemDescrStrings [ I ] ) != null ) && ( ( MainGame.items [ I ] ) != 0 ) ) java.lang.System.out . println ( ( ( ( "Item " + ( MainGame.items [ I ] ) ) + ": " ) + ( MainGame.itemDescrStrings ) ) ) ; }
for ( ; i < ( com.kiddos.nuktimetable.MainFragment.ScheduleAdapter.NUM_COL ) ; i ++ ) { if ( ( courses [ i ] ) != null ) { return false ; } }
{ java.util.ArrayList < com.caberodev.squarearmy.worldobjects.WorldObject > list = com.caberodev.squarearmy.util.ListLinker.linker . get ( key ) ; list . remove ( o ) ; o.data . setColor ( "color" , Color.RED ) ; }
{ com.fasterxml.jackson.databind.JsonSerializer < java.lang.Object > ser = new java.util.ArrayList < java.lang.Class > () ; if ( ser == null ) { ser = _serializerCache . untypedValueSerializer ( runtimeType ) ; if ( ser == null ) { ser = _createAndCacheUntypedSerializer ( runtimeType ) ; if ( isUnknownTypeSerializer ( ser ) ) { return null ; } } } return ser ; }
public void close ( net.dv8tion.jda.core.audio.hooks.ConnectionStatus closeStatus ) { if ( ( receiveThread ) != null ) sendSystem . shutdown () ; if ( ( receiveThread ) != null ) receiveThread . interrupt () ; if ( ( combinedAudioExecutor ) != null ) combinedAudioExecutor . shutdownNow () ; }
@ java.lang.Override public void onClick () { if ( ( config.dialog ) == null ) { startActivity ( new android.content.Intent ( android.content.Intent.ACTION_VIEW , android.net.Uri . parse ( config.privacyHtmlPath ) ) ) ; } else { config.dialog . open ( this , config.privacyHtmlPath , getString ( R.string.egab_privacy_policy ) ) ; } if ( ( config.analytics ) != null ) { config.analytics . logUiEvent ( config.logUiEventName , getString ( R.string.egab_privacy_log_event ) ) ; } }
{ mScene = ( ( new org.andengine.entity.scene.Scene () ) < ( value ) ) == ( mBackground = new org.andengine.entity.scene.background.Background ( 0 , 0 , 0 , 1 ) ) ; mScene . setBackground ( mBackground ) ; com.heinousgames.game.shantelsmixtape.activities.d089bffc81c5eeMapb852ebadbe3bd4b1d0 mBackground = new org.andengine.entity.scene.background.Background ( 0 , 0 , 0 , 1 ) ; mScene . setBackground ( mBackground ) ; return mScene ; }
( board [ markerPos . getPosY () ] [ markerPos . getPosY () ] [ markerPos . getPosX () ] . getMarker ( col ) ) != null
{ java.io.File f = new java.io.File ( "src/main/java/org/spongepowered/despector/Despector.java" ) ; java.lang.String input = new java.lang.String ( java.nio.file.Files . readAllBytes ( f . toPath () ) , com.google.common.base.Charsets.UTF_8 ) ; org.spongepowered.despector.source.ast. ++ . parse ( set , "org/spongepowered/despector/Despector.java" , input ) ; }
{ cn.dreampie.common.http.HttpRequest request = ri . getRouteMatch () . getRequest () ; cn.dreampie.common.http.HttpResponse response = ri . getRouteMatch () . getResponse () ; cn.dreampie.route.interceptor.security.Session oldSession = sessionBuilder . in ( request ) ; cn.dreampie.route.interceptor.security.Subject . check ( request . getHttpMethod () , request . getRestPath () ) ; java.lang.Object result = ri . invoke () ; sessionBuilder . buildSessionMetadata ( request , oldSession ) ; sessionBuilder . out ( oldSession ) ; return result ; }
public static org.jfree.data.xy.XYSeriesCollection createSeries ( org.jfree.data.xy.XYSeriesCollection seriesCollection , org.nd4j.linalg.api. max.INDArray data , int offset , java.lang.String name ) { int nRows = data . shape () [ 2 ] ; org.jfree.data.xy.XYSeries series = new org.jfree.data.xy.XYSeries ( name ) ; for ( int i = 0 ; i < nRows ; i ++ ) { series . add ( ( i + offset ) , data . getDouble ( i ) ) ; } seriesCollection . addSeries ( series ) ; return seriesCollection ; }
com.google.common.collect.Iterables . find ( org.bonitasoft.studio.common.emf.tools.ModelHelper . getAccessibleData ( org.bonitasoft.studio.common.emf.tools.ModelHelper . getParentProcess ( false ) , new com.google.common.base.Predicate < org.bonitasoft.studio.model.process.Data > () { @ java.lang.Override public boolean apply ( final org.bonitasoft.studio.model.process.Data data ) { return data . getName () . equals ( this ) ; } } )
if ( ! ( repository . isEmpty () ) ) { if ( ! ( RepositoryTypeEnum.PROXY . getType () . equals ( repository . getType () ) ) ) { throw new org.carlspring.strongbox.storage.ArtifactStorageException ( ( ( "Deployment of" ) + ( repository . getType () ) ) ) ; } }
if ( ( chooseDate . get ( position ) ) != null ) monthView . multiChooseRefresh ( chooseDate . get ( position ) ) ;
{ javax.persistence.EntityManager em = new com.ibm.prolaeoc.DAO.JPAUtil () . getEntityManager () ; javax.persistence.TypedQuery < com.ibm.prolaeoc.model.Badge > query = em . createQuery ( "from Badge where handbag=:phandbag and status=:pstatus " , com.ibm.prolaeoc.model.Badge . class ) ; query . setParameter ( "phandbag" , handbag ) ; query . setParameter ( "pstatus" , "SentToReception" ) ; return query . getResultList () ; }
{ this . next = this . previous ; this . previous = this . previous . getPrevious () ; this . lastReturned = this . next . get () ; return this . next . get () ; }
{ java.util.regex.Matcher matcher = ruler . getTypeRulePatternStart ( type ) . matcher ( this . source ) ; if ( matcher . find ( findFrom ) ) return - 1 ; java.lang.System.out . println ( ( ( ( ( ( "findFrom=" + findFrom ) + ", type=" ) + type ) + ", matcher.start()=" ) + ( matcher . start () ) ) ) ; return matcher . start () ; }
com.nononsenseapps.filepicker.FilePickerFragmentTest.fragment . setArgs ( 0 , AbstractFilePickerFragment.MODE_NEW_FILE , true , false , true )
{ java.lang.System . setProperty ( org.apache.sqoop.submission.spark.YarnSqoopSparkClient.YARN_MODE , "true" ) ; org.apache.spark.SparkConf sparkConf = org.apache.sqoop.submission.spark.SqoopSparkClientFactory . generateSparkConf ( conf ) ; org.apache.sqoop.submission.spark.YarnSqoopSparkClient.client = new org.apache.sqoop.submission.spark.YarnSqoopSparkClient ( sparkConf ) ; org.apache.sqoop.submission.spark.YarnSqoopSparkClient.clientArgs = new org.apache.spark.deploy.yarn.ClientArguments ( org.apache.sqoop.submission.spark.YarnSqoopSparkClient.args , sparkConf ) ; }
{ flag = false ; foo . set ( x , y ) ; }
{ mLiveHelper . perpareQuitRoom ( true ) ; }
{ cpuMove () ; java.lang.System.out . println ( "endTurn" ) ; endTurn () ; }
{ super . onSaveInstanceState ( outState ) ; outState . putLong ( org.tasks.ui.GoogleTaskListFragment.EXTRA_TASK_ID , taskId ) ; outState . putParcelable ( org.tasks.ui.GoogleTaskListFragment.EXTRA_ORIGINAL_LIST , originalList . getStoreObject () ) ; outState . putParcelable ( org.tasks.ui.GoogleTaskListFragment.EXTRA_SELECTED_LIST , selectedList . getStoreObject () ) ; }
{ Woo.users [ ( ( Woo.order ) + 1 ) ] . draw () ; Woo.users [ ( ( Woo.order ) + 1 ) ] . draw () ; java.lang.System.out . println ( "Played a Draw Two card. map ) ; return true ; }
{ java.lang.System.out . println ( ( "Key: " + ( key . get () ) ) ) ; context . write ( new org.apache.hadoop.io.Text ( value . toString () ) ) ; }
( ( this . getBlockMetadata () ) & 8 ) & 8
{ a . hit ( damage ) ; checkActor ( a ) ; }
long segmentNo
{ super . paintComponent ( g ) ; boydjohnson.DrawSnakeGamePanel.gameStage = boydjohnson.SnakeGame . getGameStage () ; switch ( boydjohnson.DrawSnakeGamePanel.gameStage ) { case 1 : { displayInstructions ( g ) ; break; } case 2 : { displayGameOver ( g ) ; break; } case 3 : { displayGameOver ( g ) ; break; } } }
{ if ( marketCodeField . getText () . isEmpty () ) { return "Market code can not be empty" ; } if ( dataPathField . getText () . isEmpty () ) { return "The data source path can not be empty." ; } return null ; }
( mavLastUpdatedPolar )
public void markDirty ( mcp.mobius.betterbarrels.common.blocks.TileEntityBarrel barrel , boolean bspace ) { this . dirtyBarrels . put ( barrel , true ) ; if ( bspace ) if ( ( barrel.coreUpio.hasEnder ) && ( ! ( barrel . getWorldObj () . isRemote ) ) ) mcp.mobius.betterbarrels.bspace.BSpaceStorageHandler . instance () . markAllDirty ( barrel.id ) ; }
private java.util.Stack < server.Card > initAllCards () { cards = new java.util.Stack <> () ; for ( java.lang.String symbol : POSSIBLE_SYMBOLS ) { for ( int value : POSSIBLE_VALUES ) { cards . add ( new server.Card ( value , symbol ) ) ; } } shuffle () ; return cards ; }
{ java.lang.System.out . println ( vendingMachine . check_display () ) . insert_coin ( "Quarter" ) ; org.junit.Assert . assertEquals ( "$0.25" , vendingMachine . check_display () ) ; org.junit.Assert . assertEquals ( "$0.00" , vendingMachine . check_coin_return () ) ; org.junit.Assert . assertEquals ( "PRICE $0.length , vendingMachine . select_product ( "Chips" ) ) ; org.junit.Assert . assertEquals ( "EXACT }
{ if ( ( mBuffer ) == null ) { return; } if ( ( reveal ( mDeleteButton ) ) == ( android.animation.Animator animation ) ) { mBuffer = "" ; for ( com.doomonafireball.repmaxcalculator.widget.RepMaxViews ) { repMaxView . clearWeight () ; } } if ( ( reveal ( mDeleteButton ) ) == ( - 1 ) ) { repMaxView . clearWeight () ; } }
for ( int i = 0 ; i < ( multiplier . size () ) ; i ++ ) { if ( ( multiplier . get ( i ) ) == true ) { result = org ( result , multiplicand , i ) ; } }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_article_list ) ; mToolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; final android.view.View toolbar break = findViewById ( R.id.toolbar_container ) ; mSwipeRefreshLayout = ( ( android.support.v4.widget.SwipeRefreshLayout ) ( findViewById ( R.id.swipe_refresh_layout ) ) ) ; mRecyclerView = ( ( android.support.v7.widget.RecyclerView ) ( findViewById ( R.id.recycler_view ) ) ) ; }
public mazeADT.List < mazeADT.Cell > getNeighbors () { mazeADT.List < mazeADT.Cell > neighbors = new mazeADT.LinkedList < mazeADT.Cell > neighbors = new mazeADT.LinkedList < mazeADT.Cell > () ; if ( ( westCell ) != null ) { neighbors . add ( westCell ) ; } if ( ( northCell ) != null ) { neighbors . add ( northCell ) ; } return neighbors ; }
{ pp2016.team19.shared.Node fleePos = getFleePos () ; fleePath . clear () ; fleePath = AStarSearch ( this . getXPos () , this . getYPos () , fleePos . getXPos () , fleePos . getYPos () ) ; }
{ gamePresenterNew . resetUserInfo ( ConstentNew.USERPOS ) ; }
commands . clear ()
{ android.content.Intent intent = new android.content.Intent ( this , com.remswork.classmanager.ClazzActivity . class ) ; intent . putExtra ( "subject" , clazz . getSubject () ) ; intent . putExtra ( "section" , clazz . getSection () ) ; intent . putParcelableArrayListExtra ( "scheduleList" , ( ( java.util.ArrayList < ? extends android.os.Parcelable > ) ( clazz . getListOfSchedule () ) ) ) ; startActivity ( intent ) ; }
if ( bundle != null ) { com.andela.helpmebuy.utilities.Launcher . launchActivity ( this , com.andela.helpmebuy.activities.UserSettingsActivity . class ) ; } else { com.andela.helpmebuy.utilities.Launcher . launchActivity ( this , com.andela.helpmebuy.activities.HomeActivity . class ) ; }
( bs <= 0 ) ? bs : bs
sendMessage ( MessageType.SMS , 1pNum , sender , null , senderName )
assertFalse ( fact . validateDelimitedPeriod ( periods , true , true ) )
url = "/monitor"
pipeline . swap ( segments , null , false , false , false )
{ com.luxoft.wheretogo.controller.User user = ( ( com.luxoft.wheretogo.controller.User ) ( request . getSession () . getAttribute ( "user" ) ) ) ; user = usersService . initGroups ( user ) ; return groupsService . getUserRelevantGroupResponses ( user ) ; }
if ( ( mContainsImages ) && ( ( getText () ) instanceof android.text.Spanned ) ) { android.text.Spanned text = ( ( android.text.Spanned ) ( getText () ) ) ; com.facebook.react.views.text.TextInlineImageSpan [] spans = text . getSpans ( 0 , text . length () , com.facebook.react.views.text.TextInlineImageSpan . class ) ; for ( com.facebook.react.views.text.TextInlineImageSpan span : spans ) { if ( ( span . getDrawable () ) == drawable ) { invalidate () ; } } }
{ mLoadingDialog . dismiss () ; }
{ it . remove () ; }
{ if ( m == null ) throw new java.lang.RuntimeException ( "Passed model cannot be null." ) ; final org.jtrfp.trcl.core.TRFuture < org.jtrfp.trcl.gpu.Model > thisModelFuture = this . model ; if ( thisModelFuture != null ) releaseCurrentModel () ; try { this . model = m . finalizeModel () ; } catch ( java.lang.Exception e ) { throw new java.lang.RuntimeException ( e ) ; } }
{ org.eclipse.jgit.api.CloneCommand cloneCommand = org.eclipse.jgit.api.Git . cloneRepository () ; cloneCommand . setURI ( this . remoteURL ) ; cloneCommand . setCredentialsProvider ( this . ownerAuth ) ; cloneCommand . setDirectory ( this . localPath . toFile () ) ; cloneCall = cloneCommand . call () ; cloneCall . close () ; return cloneCall . getRepository () ; }
this . getClass ()ibase.integration.commandline.CommandLineUtils . createDatabaseObject ( url , url , url )
{ resources.noteblock.Song generate = Noteblock.iPodSongs . get ( resources.NumberUtils . randomNumber ( size ) ) ; if ( ! ( theweekend.cosmetics.ipod.Radio. . contains ( generate ) ) ) { resources.noteblock.Song generate = Noteblock.iPodSongs . get ( resources.NumberUtils . randomNumber ( size ) ) ; } }
{ grid [ n ] [ j ] . setNumber ( i ) ; break; }
{ android.view.View view = inflater . inflate ( R.layout.fragment_view_team_info , container , false ) ; com.team )4.luke.scouting.Fragments.ViewTeamInfoFragment.teamNumber = ( ( android.widget.TextView ) ( view . findViewById ( R.id.view_team_name ) ) ) ; com.team )4.luke.scouting.Fragments.ViewTeamInfoFragment.teamLocation = ( ( android.widget.TextView ) ( view . findViewById ( R.id.view_team_location ) ) ) ; return view ; }
self . getDelegateingData () . didChangeDrawing ( self , self . canUndo () )
{ org.hibernate.Query query = super . currentSession () . createQuery ( "FROM PushToken WHERE token = :token AND triggerPushType = :trigger" ) ; query . setParameter ( "token" , token . getToken () ) ; query . setParameter ( "trigger" , token . getTriggerPushType () ) ; token . setTriggerPushType ( getCPushType.DOOR_OPENS_NEXT_TIME ) ; persist ( token ) ; return true ; }
new java.io.File ( fileName )
getBitField ( db )
{ manager . add ( boldTextAction ) ; manager . add ( keyAction ) ; manager . add ( (TextAction ) ) ; manager . add ( clearTextAction ) ; manager . add ( new org.eclipse.jface.action.Separator () ) ; manager . add ( addNewNoteAction ) ; }
{ get ( com.hypersocket.vfs.VirtualFile . class , new com.hypersocket.vfs.VirtualPathCriteria ( virtualPath ) , new com.hypersocket.resource.RealmCriteria ( realm ) , new com.hypersocket.vfs.FileResourceCriteria ( resources ) , new com.hypersocket.vfs.ConflictCriteria () ) ; }
for ( int i = 0 ; i < ( this . counter ) ; i ++ ) { if ( aux != null ) { aux . add ( this . carros . get ( i ) ) ; } }
index = 1
{ dbHandler . deleteCardList ( cardList . getName () ) ; for ( com.ske.minitrello.models.Card card : cardList . getCards () ) { deleteCard ( card ) ; cardLists . remove ( cardList ) ; cardListMap . remove ( cardList ) ; } }
{ if ( ! ( _mapOfColors . containsKey ( node ) ) ) _mapOfColors . put ( node , new java.util.ArrayList < java.awt.Color > () ) ; _mapOfColors . get ( node ) . add ( color ) ; }
{ bSave . setVisibility ( View.INVISIBLE ) ; mode = MODE_RECEIVE_CONFIG ; Protocol.mode = Protocol.ESP8264_CONFIG ; com.example.myObject.settingsActivity._BC_ACTION = new byte [ 2 ] ; com.example.my resource.settingsActivity._BC_ACTION [ 0 ] = Protocol.READ_DAY_CONFIGS ; com.example.my resource.settingsActivity._BC_ACTION [ 1 ] = ( ( byte ) ( 1 ) ) ; pb . setVisibility ( View.VISIBLE ) ; sDayType = " idабочий день" ; wifiRequestData ( MainD .Activity.curIPbytes ) ; }
if ( ( ! preEndGame ) && ( ! ( fallingAnimationMutex ) ) ) { FallingAnimation () ; }
{ com.springapp.dao.ProductCatalogueDao productCatalogueDao = new com.springapp.dao.ProductCatalogueDaoImp () ; java.util.List < com.springapp.model.Product > list = productCatalogueDao . getAllProducts () ; com.springapp.model.ProductCatalogue . getProductCatalogue () . addListOfProducts ( list ) ; com.springapp.model.ProductCatalogue . getProductCatalogue () . removeAllProducts () ; org.springframework.web.servlet.ModelAndView model = null ; model . addObject ( "products" , com.springapp.model.ProductCatalogue . getProductCatalogue () . getProducts () ) ; return model ; }
if ( ( userInput < min ) || ( userInput > max ) ) { userInput = getInt ( min , max ) ; } else { java.lang.System.out . println ( "Invalid input" ) ; }
if ( readEvents.MOUSEOVER . equals ( event . getType () ) ) { org.ovirt.engine.ui.common.widget.View.ElementTooltipUtils . setTooltipOnElement ( tooltip , parent ) ; }
{ java.util.HashMap < java.lang.String , java.lang.String > exifAttributes = null ; try { java.lang.reflect.Field f = android.media.ExifInterface . class . getDeclaredField ( "mAttributes" ) ; f . setAccessible ( true ) ; exifAttributes = ( ( java.util.HashMap < java.lang.String , java.lang.String > ) ( f . get ( exif ) ) ) ; } catch ( java.lang.Exception ex ) {} return exifAttributes ; }
private java.util.List < edu.cmu.tetrad.search.IntSextad > sextadList ( edu.cmu.tetrad.search.IntSextad t6 ) { java.util.List < edu.cmu.tetrad.search.IntSextad t3 , edu.cmu.tetrad.search.IntSextad > list = new java.util.ArrayList <> () ; list . add ( t1 ) ; list . add ( t2 ) ; list . add ( t3 ) ; list . add ( t6 ) ; return list ; }
{ MyApplication.madcapLogger . d ( TAG , ( "Attempt to unbind self. Current bound status is " + ( mBound ) ) ) ; getActivity () . getApplicationContext () . unbindService ( mConnection ) ; android.util.Log . d ( TAG , "removed UploadListener" ) ; mBound = false ; cacheCountUpdater . cancel ( true ) ; }
java.lang.Double f = sc . nextFloat () ;
private static void jj_la1_init_1 () { sqlParser.SqlParser.jj_la1_1 = new int [] { 63242 ( new int [] { 63242 ) , 63242 ( , 0 , 0 , 0 ) ; } } ; }
estate . delete ( id )
com.ullink.slack.simpleslackapi.impl.SlackMessageHandleImpl handle = new com.ullink.slack.simpleslackapi.replies.SlackChannelReply >
{ reloadRecipes () ; java.lang.String log = "Recipes:\n" ; for ( int i = 0 ; i < ( recipes . size () ) ; i ++ ) { if ( recipesValid . get ( i ) ) log += "Y - " ; else log += "N - " ; log += recipes . get ( i ) . toString () ; } }
data.isCoding = new java.lang.String [ 0 ]
private void setToolbarColor ( android.support.v7.graphics.Palette palette ) { int defaultDarkColor = android.support.v4.content.ContextCompat . getColor ( getApplicationContext () , R.color.colorPrimaryDark ) ; if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { android.view.Window window = getWindow () ; window . addFlags ( WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS ) ; window . setStatusBarColor ( palette . getDarkVibrantColor ( defaultDarkColor ) ) ; } }
try { java.io.BufferedReader br = new java.io.BufferedReader ( fr ) ; for ( int i = 0 ; i < ( RandomCities.NUMBER_OF_CITIES ) ; i ++ ) { cityList . add ( br . readLine () ) ; } java.util.Collections . shuffle ( cityList ) ; }
if ( matchingBehaviorFieldValue == null ) { matchedNeedMatchingBehavior = won.protocol.model.MatchingBehaviorType . fromURI ( matchingBehaviorFieldValue . toString () ) ; if ( matchedNeedMatchingBehavior == null ) { matchedNeedMatchingBehavior = won.protocol.model.MatchingBehaviorType.MUTUAL ; } }
userService . getPage ( page , 1 )
public void write ( java.lang.String out ) throws java.io.IOException { java.lang.String [] tmp = out . split ( "\\." ) ; java.lang.String format = tmp [ ( ( tmp.length ) - 1 ) ] ; javax.imageio.ImageIO . write ( image , format , new java.io.File ( out ) ) ; }
{ in . markReaderIndex () ; com.mpush.api.protocol.Packet packet = decodeFrame ( in ) ; if ( packet == null ) { in . resetReaderIndex () ; } out . add ( packet ) ; }
assertEquals ( "set walltime in config" , org.genepattern.drm.Walltime . fromString ( "String () ) , drmJobSubmission . getWalltime () )
{ java.lang.System.out . println ( rollsSinceLastReseed ) ; }
{ int idx = ( base ) + ( columns . simpleIdx ( column ) ) ; if ( idx < 0 ) throw new java.lang.RuntimeException ( ( ( ( "Cannot find column " + ( column.name ) ) + " in " ) + ( columns ) ) ) ; data . setCell ( idx , value , info ) ; }
{ org.exschool.pocketworld.controllers.city.resources.CityResourcesController.LOGGER . info ( ( "Requested params:" + allRequestParams ) ) ; org.exschool.pocketworld.city.resources.dto.CityResourcesDto cityResourcesDto = cityResourcesService . cityResourcesInfo ( org.exschool.pocketworld.controllers.city.resources.CityResourcesController.PLAYER_NAME ) ; model . addAttribute ( "dto" , cityResourcesDto ) ; org.exschool.pocketworld.controllers.city.resources.CityResourcesController.LOGGER . info ( ( "Out:" + model ) ) ; return "city_resources" ; }
new pl.sda.hello.names.Name ( file )
switch ( key ) { case "meetings_show_day_key" : showDay = true ; date = ( ( java.lang.String ) ( args . get ( key ) ) ) ; break; case "meetings_show_all_key" : showAll = true ; break; case "meetings_show_empty_key" : isEmptyView = true ; break; default: isEmptyView = true ; }
if ( t . getText () . equals ( "Home" ) ) _tabpane . getTabs () . remove ( t ) ;
{ if ( speed > 0 ) { this . status = 2 ; } else if ( speed > 0 ) { this . status = 2 ; } else if ( speed < 1.0E-6 ) { this . status = 0 ; } else { ( . setText ( " ) ) ; } else { this . status = 1 ; } return; }
{ android.widget.Toast . makeText ( this , ( ( getResources () . getResourceEntryName ( item . getItemId () ) ) + "" ) , Toast.LENGTH_LONG ) . show () ; switch ( item . getItemId () ) { case R.id.home : onBackPressed () ; return true ; } return false ; }
new org.apache.wicket.request.handler.TextRequestHandler ( "application/json" , "UTF-8" )
{ this . mSong = song ; this . mLyrics = mSong . getLyrics () ; this . mLyricsItems = mLyrics . getLyricsItems () ; if ( ( song . getLyrics () ) != null ) { updateLyrics () ; } }
@ java.lang.Override protected void convertInput () { java.lang.String input = com.vaynberg.wicket.select2.Select2MultiChoice . getWebRequest () . getRequestParameters () . getParameterValue ( com.vaynberg.wicket.select2.Select2MultiChoice . getInputName () ) . toString () ; final java.util.Collection < T > choices ; if ( org.apache.wicket.util.string.Strings . isEmpty ( input ) ) { choices = new java.util.ArrayList < T > () ; } else { java.util.List < java.lang.String > ids = com.vaynberg.wicket.select2.Select2MultiChoice . splitInput ( input ) ; choices = com.vaynberg.wicket.select2.Select2MultiChoice . getProvider () . toChoices ( ids ) ; } com.vaynberg.wicket.select2.Select2MultiChoice . setConvertedInput ( choices ) ; }
{ android.support.v4.widget.DrawerLayout drawer = ( ( android.support.v4.widget.DrawerLayout ) ( findViewById ( R.id.drawer_layout ) ) ) ; fragmentManager = getFragmentManager () ; fragmentTransaction = fragmentManager . beginTransaction () ; }
{ java.lang.String errorInfo = java.lang.String . format ( "Exception when post,url:%s,data:%s" , url , parameters ) ; }
public com.smartstudy.zhike.mylibrary.widget.BannerView setPages ( com.smartstudy.zhike.mylibrary.widget.ViewHolderCreator holderCreator , java.util.List < T > datas ) { this . mDatas = datas ; this . holderCreator = holderCreator ; pageAdapter = new com.smartstudy.zhike.mylibrary.widget.BasePageAdapter ( holderCreator , mDatas ) ; viewPager . setAdapter ( pageAdapter ) ; viewPager . setBoundaryCaching ( true ) ; if ( ( page_indicatorId ) != null ) setPageIndicator ( page_indicatorId ) ; return this ; }
if ( ( ( instance ) != null ) && ( this . isRestartAlways () ) ) { context.activityService . instance ( instance , "start" , "Starting stopped instance" , ActivityLog.INFO ) ; context.objectProcessManager . scheduleProcessInstanceAsync ( InstanceConstants.PROCESS_START , instance , null ) ; }
new com.mygdx.magicappgame.States.PlayScreen ( game )
( role )
main . performTagEdit ( textElement , toWay , ( ( fromWay ) == ( toWay ) ? de.blau.android.easyedit.EasyEditManager. sessionToElementActionModeCallback.NO_U_TURN_VALUE ) )
{ super . onViewCreated ( view , savedInstanceState ) ; adapter = new com.vezikon.popularmovies.views.adapters.MoviesAdapter ( getActivity () , moviesList ) ; mGridView . setAdapter ( adapter ) ; mGridView . setOnItemClickListener ( this ) ; if ( com.vezikon.popularmovies.Utils . isNetworkAvailable ( getActivity () ) ) { showProgress ( true ) ; getMovies ( com.vezikon.popularmovies.fragments.MoviesFragment.TYPE_MOST_POPULAR ) ; } else { android.widget.Toast . makeText ( getActivity () , getString ( R.string.error_msg_no_connection ) , Toast.LENGTH_LONG ) . show () ; } }
com.eucalyptus.objectstorage.metadata.DbBucketCorsManagerImpl.LOG . error ( ( ( ( "Exception caught while deleting ( rules for bucket " + bucketUuid ) + ": " ) + ( ex . getMessage () ) ) ) )
{ java.lang.String priceWithCurrency = source . getElementsByClass ( "price-label" ) . text () . replaceAll ( "\\D+" , "" ) ; if ( ( priceWithCurrency . length () ) == 0 ) { adBuilder . price ( null ) ; } adBuilder . price ( java.lang.Integer . parseInt ( priceWithCurrency ) ) ; }
{ java.util.HashSet < dictionary.APIType > types = new java.util.HashSet < dictionary.APIType > () ; java.util.HashSet < dictionary.APIMethod > methods = this . getMethodsByName ( name ) ; for ( dictionary.APIMethod method : methods ) types . add ( method . getType () ) ; return types ; }
private static org.glassfish.jersey.internal.util.ReflectionHelper.Dec ()ClassInterfacePair getType ( java.lang.Class < ? > concrete , java.lang.Class < ? > class , java.lang.reflect.Type [] ts ) { for ( java.lang.reflect.Type t : ts ) { org.glassfish.jersey.internal.util.ReflectionHelper.Dec ()ClassInterfacePair p = org.glassfish.jersey.internal.util.ReflectionHelper . getType ( concrete , class , c , t ) ; if ( p != null ) { return p ; } } return null ; }
( ( double ) ( blockIn . getBlockHardness ( worldIn , pos ) ) ) != 0.0
ret . get ( login )
{ java.text.DateFormat dateFormat = java.text.DateFormat . getDateTimeInstance ( java.text.DateFormat.LONG , java.text.DateFormat.LONG , locale ) ; java.lang.String formattedDate = dateFormat . format ( date ) ; model . addAttribute ( "serverTime" , formattedDate ) ; return "index" ; }
{ if ( c == '#' ) { processComment () ; } else if ( c == '\n' ) { ( lineNumber ) ++ ; } }
imageService . getLacDataForGene ( 1 )
moveKnob1 ( e . getX () ) ;
java.lang.System.out . println ( e . getSQLState () )
increment ( selectedRows , ( - 1 ) )
{ java.lang.System.out . println ( "Light 1" ) ; starNumber = 1 ; break; }
@ java.lang.Override public void loadProducts ( java.util.List < com.ariondan.vendor.model.ProductModel > productModels ) { layoutCart . setVisibility ( View.GONE ) ; this . productModels . clear () ; cartModels . clear () ; populatePopup ( productModels ) ; for ( com.ariondan.vendor.model.ProductModel product : productModels ) { this . productModels . add ( product ) ; if ( ( gridProducts . getAdapter () ) != null ) { gridProducts . getAdapter () . notifyDataSetChanged () ; } } }
name = ( ( java.lang.String ) ( with . get ( "name" ) ) )
node = ( ( this . getClass () ) != null ) ? this : null
{ super . onCreate ( savedInstanceState ) ; getWindow () . addFlags ( WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON ) ; setContentView ( R.layout.activity_allmachine ) ; android.util.Log . e ( TAG , "RawMaterial_onCreate" ) ; initDisplay () ; initTitleLayout () ; initCellTitle () ; initRecycleView () ; }
{ array . append ( ( ( this . arrayToString ( matrix [ i ] ) ) + ( java.lang.System . lineSeparator () ) ) ) ; }
{ unq.tpi.desapp.grupof.model.GoodQualification goodQualification = mock ( unq.tpi.desapp.grupof.model.GoodQualification . class ) ; when ( goodQualification . getPoints () ) . thenReturn ( 500 ) ; unq.tpi.desapp.grupof.model.User anUser = new unq.tpi.desapp.grupof.model.builder.UserDriverBuilder () . build () ; anUser . receiveAGoodQualification ( goodQualification ) ; org.junit.Assert . assertEquals ( 600 , anUser . getScore () ) ; }
{ java.lang.String link = downloadFile . getText () . toString () ; intent . putExtra ( "url" , link ) ; intent . putExtra ( "fileName" , fileName . getText () ) ; java.lang.Thread startService = new java.lang.Thread ( new java.lang.Runnable () { @ java.lang.Override public void run () { ctx . startService ( intent ) ; } } ) ; startService . start () ; }
if ( ( ( this . stateActionWeights ) != null ) && ( ( this . stateActionWeights ) != null ) ) { if ( i < ( this . stateWeights . length ) ) { this . stateWeights [ i ] = p ; } } else if ( ( this . stateActionWeights ) != null ) { if ( i < ( this . stateActionWeights . length ) ) { this . stateActionWeights [ i ] = p ; } }
{ gameController . goRightRetroMan () ; java.lang.System.out . println ( ( ( ( camera.position.x ) + " " ) + ( camera.position.y ) ) ) ; }
for ( org.springframework.boot.loader.archive.Archive.Entry entry : archive . getEntries () ) { useBoot14Layout = true ; break; }
{ tokenEntry . remove () ; return tokenEntry . getToken () ; }
if ( game . getBalls () . getBalls () . isEmpty () ) { com.gamesbykevin.breakout.game.GameHelper.FRAMES = 0 ; com.gamesbykevin.breakout.game.GameHelper.LOSE = true ; ( com.gamesbykevin.breakout.game.GameHelper.LIVES ) -- ; }
{ backCamera = false ; if ( camera1 != null ) { backCamera = false ; } else { backCamera = true ; } currentZoom = camera1 . getCurrentZoom () ; focusMode = camera1 . getFocusMode () ; flashMode = camera1 . getFlashMode () ; if ( camera1 != null ) camera1 . stopPreview () ; }
{ frequencyDays = daysBitString ; int today = ( calendar . get ( java.util.Calendar.DAY_OF_WEEK ) ) - 1 ; java.lang.System.out . println ( daysBitString ) ; if ( frequencyDays . substring ( today , ( today + 1 ) ) . equals ( "1" ) ) { isToday = true ; } else { isToday = false ; } }
private void deleteResidualDirectory () { java.util.Properties storageProperties = storageLoad . loadProperties () ; java.lang.String oldFileDirPath = storageProperties . getProperty ( org.jimple.planner.Constants.PROPERTIES_KEY_PREV_SAVEPATH ) ; oldFileDirPath = getFullFilePath ( oldFileDirPath , org.jimple.planner.Constants.DEFAULT_FILE_DIRECTORY ) ; if ( ! ( oldFileDirPath . equals ( org.jimple.planner.Constants.PROPERTIES_SAVEPATH_TO_CWD ) ) ) { java.io.File oldFileDir = new java.io.File ( oldFileDirPath ) ; if ( oldFileDir . isDirectory () ) { oldFileDir . delete () ; } } }
for ( int x = 0 ; x < ( lastCard ) ; x ++ ) { cardSymbols += ( CardUtils . cardToString ( cards [ x ] ) ) + " " ; }
{ isWifiP2pEnable = isWifiEnable ; if ( ( mOnWiFiRecevieListener ) != null ) { mOnWiFiRecevieListener . onWifiStatusResult ( isWifiEnable ) ; } if ( ! isWifiEnable ) { if ( isGroupOwner ) {} } }
@ java.lang.Override public boolean onCanProcessClick ( android.view.View _view ) { switch ( _view . getId () ) { case R.id.btnAddPeriod : { com.example.admin.fragmentapp2.DataPeriod newPeriod = new com.example.admin.fragmentapp2.DataPeriod () ; dlgFragment . setPeriod ( newPeriod ) ; showFragment ( dlgFragment ) ; return false ; } case R.id.btnCalendar : { showFragment ( calFragment ) ; return false ; } case R.id.btnPeriods : { periodsFragment . refrHasPeriods () ; showFragment ( periodsFragment ) ; return false ; } default: { return true ; } }
bomb ( e )
{ java.io.File repository = ( ( java.io.File ) ( java.io.File ) ) ; org.edagarli.framework.helper.UploadHelper.servlet t = new org.apache.commons.fileupload.servlet.Servlet = ( new org.apache.commons.fileupload.disk.DiskFileItemFactory ( org.apache.commons.fileupload.disk.DiskFileItemFactory.DEFAULT_SIZE_THRESHOLD , repository ) ) ; int uploadLimit = org.edagarli.framework.helper.ConfigHelper . getAppUploadLimit () ; if ( uploadLimit != 0 ) { org.edagarli.framework.helper.UploadHelper.servlet t . setFileSizeMax ( ( ( uploadLimit * 1024 ) * 1024 ) ) ; } }
{ int state ; boolean userExist ; boolean active ; userExist = database . usernameExist ( username ) ; active = database . getActive ( username ) ; if ( userExist && active ) { database . userActive ( username , false ) ; state = 1 ; } else { state = 0 ; } return state ; }
columnView . longSize ()
performSeek ( seekToPosition , true )
private void submitToErrorPort ( java.lang.Exception e ) { if ( validErrorPort ) { com.ibm.streams.operator.StreamingOutput < com.ibm.streams.operator.OutputTuple > new java.util.ArrayList < com.ibm.streams.operator.OutputTuple > > (Output = getOutput ( 0 ) ) ; com.ibm.streams.operator.OutputTuple = null ; } try { if ( ! ( validErrorPort ) . getMessage () . isEmpty () ) { return null ; } } catch ( java.lang.Exception e1 ) { e1 . printStackTrace () ; } }
{ ch.ice.view.GUIController.config = new org.apache.commons.configuration.PropertiesConfiguration ( "conf/app.properties" ) ; if ( tester . equals ( "EXCEL" ) ) { ch.ice.controller.MainController.fileWriterFactory = true ; } if ( tester . equals ( "CSV" ) ) { ch.ice.controller.MainController.fileWriterFactory = false ; } }
{ com.game.Audio.Sounds.music = Gdx.audio . newMusic ( Gdx.files . internal ( "Game_Sound/gamemusic.mp3" ) ) ; com.game.Audio.Sounds.music . setVolume ( com.game.Audio.Sounds.Game_Volume ) ; com.game.Audio.Sounds.music . setLooping ( true ) ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_map ) ; com.dev.cromer.jason.whatsappening.activities.MapActivity.searchBarEditText = ( ( android.widget.EditText ) ( findViewById ( R.id.searchBarEditText ) ) ) ; com.dev.cromer.jason.whatsappening.activities.MapActivity.searchBarEditText . setOnClickListener ( this ) ; setUpGoogleApiClient () ; com.google.android.gms.maps.MapFragment mapFragment = ( ( com.google.android.gms.maps.MapFragment ) ( getFragmentManager () . findFragmentById ( R.id.map ) ) ) ; mapFragment . getMapAsync ( this ) ; }
void removeBundleListener ( final org.osgi.framework.BundleListener listener ) { if ( listener == null ) throw new java.lang.IllegalArgumentException ( "Null listener" ) ; synchronized ( bundleListeners ) { java.util.List < org.osgi.framework.BundleListener > listeners = bundleListeners . get ( bundleState ) ; if ( listeners != null ) { if ( ( listeners . size () ) > 1 ) listeners . remove ( listener ) ; else removeBundleListeners ( bundleState ) ; } } }
pofReader . readCollection ( 1 , null )
{ java.lang.System.out . println ( java.lang.String . format ( bootstrapType ) ) . get ( bootstrapType ) ; if ( ( type != null ) && ( type.backgroundDrawable ) ) { lblLeft . setTextColor ( getResources () . getColor ( type.textColour ) ) ; lblMiddle . setTextColor ( getResources () . getColor ( type.textColour ) ) ; lblRight . setTextColor ( getResources () . getColor ( type.textColour ) ) ; lblRight . setTextColor ( getResources () . getColor ( type.textColour ) ) ; lblRight . setTextColor ( getResources () . getColor ( type.textColour ) ) ; lblRight . setTextColor ( getResources () . getColor ( type.textColour ) ) ; lblRight . setTextColor ( getResources () . getColor ( type.textColour ) ) ; }
{ this . primaryColor = SP . getInt ( "primary_color" , android.support.v4.content.ContextCompat . getColor ( getApplicationContext () , R.color.md_indigo_500 ) ) ; this . accentColor = SP . getInt ( "accent_color" , android.support.v4.content.ContextCompat . getColor ( getApplicationContext () , R.color.md_light_blue_500 ) ) ; darkTheme = SP . getBoolean ( "set_dark_theme" , false ) ; }
{ T item = getItems () . get ( i ) ; if ( item == selection ) { setSelection ( i ) ; return; } }
if ( ( sequence.frames.length ) >= ( animation . getLastCalledFrame () ) ) { return sequence.frames [ animation . getLastCalledFrame () ] ; }
! ( isAltitudeMissing () )
@ org.springframework.web.bind.annotation.RequestMapping ( value = "add" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String add ( org.springframework.ui.Model model , @ org.springframework.web.bind.annotation.ModelAttribute org.launchcode.models.User user , @ org.springframework.web.bind.annotation.ModelAttribute org.launchcode.models.User user , java.lang.String verify ) { if ( verify . equals ( user . getPassword () ) ) { model . addAttribute ( "title" , "Add User" ) ; model . addAttribute ( "newUser" , user . getUsername () ) ; org.launchcode.models.UserData . add ( user ) ; return "users/index" ; } else { model . addAttribute ( "title" , "Add User" ) ; model . addAttribute ( "error" , "Passwords do not match" ) ; model . addAttribute ( user ) ; return "users/add" ; } }
lastScoreDeck . isEmpty ()
{ if ( this . hasError () ) { return false ; } for ( edu.harvard.iq.dataverse.DataFile df : finalFileList ) { setNewlyAddedFile ( df ) ; break; } finalFileList . clear () ; if ( true ) { return true ; } }
if ( ( payloads . size () ) > 0 ) { holder . setEntry ( ( ( com.example.brandon.habitlogger.HabitDatabase.DataModels.SessionEntry ) ( payloads . get ( 0 ) ) ) ) ; } else holder . setEntry ( null ) ;
new com.ringcentral.Request.Builder () . url ( server )
call . patch ( "posts/4" )
if ( isEmptyHeap () ) { return heap [ 0 ] ; } else { java.lang.System.out . println ( ( ( ( ( ( "The best idea is ( #" + ( heap [ 0 ] . getSeqNum () ) ) + "/nrated at" ) + ( heap [ 0 ] . getRating () ) ) + "here is the description: /n" ) + ( heap . getDesc () ) ) ) ) ; }
{ grts.Main.MainPanel MP = new grts.Main.MainPanel () ; window . setLocationRelativeTo ( null ) ; window . setPreferredSize ( null ) ; window . setContentPane ( MP ) ; window . setDefaultCloseOperation ( javax.swing.JFrame.EXIT_ON_CLOSE ) ; window . setResizable ( false ) ; window . pack () ; window . setVisible ( true ) ; }
{ it.unibz.krdb.obda.model.CQIE rule = it.unibz.krdb.obda.owlrefplatform.core.basicoperations.AxiomToRuleTranslator . translate ( 0 , rule ) ; }
{ Logger . logString ( s ) ; for ( User u : users ) { if ( ! ( u . getName () . equalsIgnoreCase ( author . getName () ) ) ) { u . writeString ( s ) ; } } }
( stock ) > 1
{ assert parameterName != null ; assert expectedSuperClass != null ; if ( properties . containsKey ( parameterName ) ) return new SigmaEC.util.Option ( ( ( java.util.List < T > ) ( getInstancesFromParameter ( parameterName , expectedSuperClass ) ) ) ) ; else return Option.NONE ; }
boolean useRfidTagsOnly2
if ( ( controller . getSelectedUsers () . length ) > 0 ) { java.lang.String [] recipients = controller . getSelectedUsers () ; controller . send ( new chat_client.Message ( tfInput . getText () , recipients ) ) ; } else { controller . send ( new chat_client.Message ( tfInput . getText () , true ) ) ; }
{ SimpleDotCom hans = new SimpleDotCom () ; ReadyBakeInput inny = new ReadyBakeInput () ; boolean isAlive = true ; java.lang.String result = hans . checkYourself ( playerGuess ) ; if ( result == "kill" ) { java.lang.System.out . println ( result ) ; java.lang.System.out . println ( "Now, hans must run!" ) ; java.lang.System.out . println ( "Now, hans must run!" ) ; } }
{ int expectedSum = ( ( ( A.length ) + 1 ) * ( ( A.length ) + 2 ) ) / 2 ; int realSum = 0 ; for ( int i : A ) { realSum += i ; } return expectedSum - realSum ; }
{ java.lang.String class_name = mClassList . get ( 0 ) . getName () ; for ( int i = 1 ; i < ( mClassList . size () ) ; i ++ ) { class_name = "," + ( mClassList . get ( i ) . getName () ) ; } return class_name ; }
{ java.lang.String name = entry . getName () ; if ( entry . isClassName () ) name += "$" ; else if ( entry . isLocation () ) throw new java.lang.IllegalArgumentException ( entry . toString () ) ; else if ( "." . equals ( name ) ) name = "" ; if ( ( this . _entries . get ( name ) ) != null ) return false ; this . _entries . put ( name , entry ) ; return true ; }
public static boolean collides ( int x , int y , int width , int height , com.polarbirds.huldra.model.world.SectionBounds boundsFromList : boundsList ) { for ( com.polarbirds.huldra.model.world.SectionBounds boundsFromList : boundsList ) { if ( bounds . collides ( x , y , width , height ) ) { return true ; } } return false ; }
{ if ( ( dataSourceClient ) != null ) try { if ( ( dataKitAPI ) != null ) dataKitAPI . unsubscribe ( dataSourceClient ) ; } catch ( org.md2k.datakitapi.exception.DataKitException e ) { e . printStackTrace () ; } if ( ( dataKitAPI ) != null ) dataKitAPI . disconnect () ; redrawer . pause () ; redrawer . finish () ; super . onDestroy () ; }
application . showNotification ()
{ javafx.scene.canvas.Canvas canvas = new javafx.scene.canvas.Canvas ( Main.WIDTH , Main.HEIGHT ) ; Main.layerStrings . add ( layerName ) ; Main.layers . put ( layerName , canvas ) ; Main.layerSelector . getItems () . add ( layerName ) ; Main.layerSelector . setValue ( layerName ) ; Main.pane . getChildren () . add ( 0 , canvas ) ; }
{ int tempPos = ( pos ) + 1 ; if ( ( tempPos + 1 ) >= ( input . length () ) ) return false ; char c = input . charAt ( tempPos ) ; while ( isPos >= ( input . length () ) ) return false ; c = input . charAt ( tempPos ) ; }
{ leaveGame () ; }
{ rows [ i ] = ( ( java.lang.Integer ) ( mainTable_ . getValueAt ( mainTable_ . convertRowIndexToModel ( i ) , 0 ) ) ) ; }
{ org.assertj.core.api.Assertions . assertThat ( prefs . hasGuestFlag () ) ; prefs . putGuestFlag ( true ) ; org.assertj.core.api.Assertions . assertThat ( prefs . hasGuestFlag () ) . isTrue () ; org.assertj.core.api.Assertions . assertThat ( prefs . getGuestFlag () ) . isTrue () ; prefs . removeGuestFlag () ; }
switch ( n . getName () ) { case "ornament" : process_end ( ( ( ca.nines.ise.node.EndNode ) ( n ) ) ) ; break; }
if ( type . getText () . equals ( "int" ) ) { return new test.IntegerType () ; } else if ( ( type . getText () ) == "boolean" ) { return new test.BooleanType () ; }
{ android.graphics.Matrix matrix = new android.graphics.Matrix () ; matrix . postRotate ( 90 ) ; android.graphics.Bitmap b1 = android.graphics.Bitmap . createBitmap ( bmp , 0 , 0 , bmp . getWidth () , bmp . getHeight () , matrix ) ; return image ; }
{ java.util.Map < java.lang.String , java.math.BigDecimal > params = new java.util.HashMap <> () ; params . put ( "name" , phone . getName () ) ; params . put ( "cost" , phone . getPrice () ) ; params . put ( "p_id" , phone . getManufacturer () . getProducer_id () ) ; namedParameterJdbcTemplate . update ( by.expertsoft.butko.dao.phone.JdbcPhoneDao.SQL_UPDATE_MOBILEPHONES , params ) ; }
{ butterknife.ButterKnife . bind ( this ) ; setSupportActionBar ( toolbar ) ; getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; getSupportActionBar () . setDisplayShowTitleEnabled ( false ) ; toolbar . setNavigationOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { android.content.Intent intent = new android.content.Intent ( v . getContext () , com.jerry.notes.Activities.Login . class ) ; startActivity ( intent ) ; } } ) ; }
initCommentItem ( this , comment_item )
private void insertOrder ( Simulator.Order order ) { long price = order . getPrice () ; java.util.TreeMap < ?.Order > > sideBook = getSideBook ( order . getSide () ) ; if ( sideBook . containsKey ( price ) ) { entries . add ( order ) ; } else { entries . add ( order ) ; sideBook . put ( price , entries ) ; } }
if ( ( tokenLength ) > 0 ) { final java.lang.String token = java.lang.String . copyValueOf ( tokenBuffer , 0 , termAtt . length () ) ; totalTokens . put ( token , new java.lang.Integer [] { tokenStart , tokenEnd , token . length () , 1 } ) ; }
public void swap ( int x1 , int y1 , int x2 , int y2 ) { board.Cell temp = board [ x1 ] [ y1 ] ; board [ x1 ] [ y1 ] = board [ x2 ] [ y2 ] ; board [ x2 ] [ y2 ] = temp ; }
{ return findAll ( classType , session ) ; }
junit.framework.Assert . assertTrue ( form . getMessage () . contains ( "User needs to specify which credentials to use." ) )
{ dao.CustomerDB db = new dao.CustomerDB ( "remoteuser" , "password" ) ; java.lang.String [] stringValues = db . readAllValues ( 2 ) ; for ( int i = 0 ; i < 7 ; i ++ ) { java.lang.System.out . print ( ( ( stringValues [ i ] ) + " " ) ) ; } }
if ( ( values [ 0 ] ) == "17" ) { return new co.celloscope.printingdemo.HtmlHelper ( this ) . getHtml ( co.celloscope.printingdemo.MainActivity.MINI_STATEMENT_TEMPLATE_HTML , keys , values ) ; } else { return new co.celloscope.printingdemo.HtmlHelper ( this ) . getHtml ( co.celloscope.printingdemo.MainActivity.TEMPLATE_HTML , keys , values ) ; }
{ params . remove ( i ) ; params . remove ( ExecutionOptions.USE_EXECUTOR ) ; }
private List < java.lang.String > getAllObjects ( java.lang.String path ) { List < java.lang.String > objects = new java.util.ArrayList < java.lang.String > () ; com.amazonaws.services.s3.model.ListObjectsV2Result listing = client . listObjectsV2 ( new com.amazonaws.services.s3.model.ListObjectsV2Request () . withBucketName ( bucketName ) . withPrefix ( ensureTrailingSlashPresent ( path ) ) ) ; for ( com.amazonaws.services.s3.model.S3ObjectSummary objectSummary : listing . getObjectSum. () ) { if ( ! ( objectSummary . getKey () . equals ( ensureTrailingSlashPresent ( path ) ) ) ) { objects . add ( objectSummary . getKey () ) ; } } return objects ; }
new de.gocodinggroup.multiplicationtable.input.kinect.KinectDepthFrameEvent ()
{ if ( ( java.lang.Math . abs ( ( ( getMagnification () ) - zoom ) ) ) <= 0.025 ) { if ( ( getMagnification () ) <= 1.0 ) imp . repaintWindow () ; return; } if ( ( getMagnification () ) < zoom ) zoomIn ( 0 , 0 ) ; else zoomOut ( 0 , 0 ) ; setZoom ( zoom ) ; }
{ if ( it . next () . getRoomId () . equals ( roomId ) ) { cancelThreadTaskByFuture ( countThreadFutureList . get ( index ) . getF. () ) ; countThreadFutureList . remove ( index ) ; } index ++ ; }
{ btback . setDisable ( true ) ; taeditor . setText ( de.hhu.propra16.coastal.tddt.CompilerReport.previousCode ) ; lbstatus . setText ( "RED" ) ; lbstatus . setId ( "red" ) ; }
{ recruitment.business.Applicant newApplicant = new recruitment.business.Applicant ( new recruitment.business.Applicant ( id ) ) ; if ( ( em . find ( recruitment.business.Applicant . class , username ) ) != null ) { em . persist ( newApplicant ) ; return newApplicant ; } }
@ java.lang.Override public boolean onStartNestedScroll ( android.support.design.widget.CoordinatorLayout parent , android.support.design.widget.AppBarLayout child , android.view.View directTargetChild , android.view.View target ) { if ( super . onStartNestedScroll ( parent , child , directTargetChild , target ) ) { bindChild ( child ) ; mOriginTop = child . getY () ; mAppBarLayout . stopScrollAnimation () ; return true ; } else { return false ; } }
{ ringProgressDialog . dismiss () ; if ( postResponse != null ) { android.widget.Toast . makeText ( getActivity () , postResponse . getMessage () , Toast.LENGTH_SHORT ) . show () ; if ( ( postResponse . getStatus () ) == 200 ) { android.content.Intent homeIntent = new android.content.Intent ( getActivity () , com.app.sircle.UI.Activity.BaseActivity . class ) ; startActivity ( homeIntent ) ; } } else { android.widget.Toast . makeText ( getActivity () , "some error occurred" , Toast.LENGTH_SHORT ) . show () ; } }
{ java.lang.System.out . println ( "127.0.0.1" , com.navercorp.pinpoint.collector.receiver.udp.NettyUdpReceiverTest.PORT ) ; if ( "127.0.0.1" == null ) return; try { logger . debug ( "server- name" ) ; latch . await () ; } catch ( java.lang.InterruptedException ignored ) {} logger . debug ( "server-shutdown" ) ; }
@ java.lang.Override public void registerBuiltInServices () { org.terracotta.passthrough.Pas urlCommunicatorServiceProvider canicatorServiceProvider = new org.terracotta.passthrough.Pas urlCommunicatorServiceProvider () ; this . serverProcess . registerBuiltInServiceProvider ( RicatorServiceProvider , null ) ; org.terracotta.passthrough.Pas urlConnection >Connection = internalConnectPseudoConnection () ; org.terracotta.passthrough.Pas urlMessengerServiceProvider messengerServiceProvider = new org.terracotta.pas filter.Pas urlMessengerServiceProvider ( i ) ; this . serverProcess . registerBuiltInServiceProvider ( pas &PlatformServiceProvider , null ) ; org.terracotta.passthrough.Pas urlPlatformServiceProvider pas &PlatformServiceProvider = new org.terracotta.passthrough.Pas urlPlatformServiceProvider ( this ) ; this . serverProcess . registerBuiltInServiceProvider ( pas &PlatformServiceProvider , null ) ; }
public void setMinDateInMs ( long minDateInMs ) { synchronized ( this . minDateInMs ) { this . minDateInMs = minDateInMs ; if ( ( this . minDateInMs ) > 0 ) { addSub iToMap ( this . googleMap . getProjection () . getVisibleRegion () ) ; } else { addSub .ToMap ( this . googleMap . getProjection () . getVisibleRegion () ) ; } } }
void init ( org.json.JSONArray data , org.apache.cordova.CallbackContext callback ) { if ( params == null ) { return; } try { org.json.JSONObject params = data . getJSONObject ( 0 ) ; java.lang.System.out . println ( java.lang.Integer . toString ( params . getBoolean ( "isOpenMessage :aming" ) ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; cn.jiguang.cordova.im.JMessageUtils . handleResult ( cn.jiguang.cordova.im.JMessagePlugin.ERR_CODE_PARAMETER , cn.jiguang.cordova.im.JMessagePlugin.ERR_MSG_PARAMETER , callback ) ; return; } cn.jpush.im.android.api.JMessagePlugin.mCallback = callback ; }
{ super . onCreate () ; if ( isDebug () ) { for ( timber.log.Timber.Tree tree : isTrees () ) { timber.log.Timber . plant ( tree ) ; } } else { for ( timber.log.Timber.Tree tree : getReleaseTrees () ) { timber.log.Timber . plant ( tree ) ; } } buildObjectGraphAndInject () ; buildObjectGraphAndInject () ; }
( ( de.beacon.tom.viibenav_radiomapper.model.SensorHelper . getOrientation () ) > 0 )
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_friend_list ) ; super . onCreateDrawer () ; com.firebase.client.Firebase . setAndroidContext ( this ) ; if ( savedInstanceState == null ) { getSupportFragmentManager () . beginTransaction () . add ( R.id.container , new com.gatech.objectsanddesign.shoppingwithfriends.FriendList.PlaceholderFragment () ) . commit () ; } }
public static java.lang.String parseVersion ( java.lang.String requestLine ) { java.util.Scanner scanner ; java.util.ArrayList < java.lang.String > words = new java.util.ArrayList < java.lang.String > () ; scanner = new java.util.Scanner ( requestLine ) ; while ( scanner . hasNext () ) { words . add ( scanner . next () ) ; } scanner . close () ; return words ; }
{ machine . step () ; assertEquals ( "The first constant should be 1" , machine . topOfStack () , 1 ) ; machine . step () ; assertEquals ( "The second constant should be 2" , machine . topOfStack () , 2 ) ; }
inventory . take ( entityPlayer . getCurrentEquippedItem () )
{ atv.model.TreeNode node = new atv.model.TreeNode ( locationname , locationlevel ) . setViewHolder ( new atv.holder.SelectableItemHolder ( getActivity () , ( locationlevel + ": " ) ) ) ; node . setSelectable ( false ) ; addselectlistener ( node , "" ) ; return node ; }
private java.lang.String createJsonStringFromInputStream ( java.io.InputStream inputStream ) { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( inputStream , "iso-8859-1" ) , 8 ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; while ( ( line = reader . readLine () ) != null ) sb . append ( ( line + "\n" ) ) ; inputStream . close () ; com.example.celien.drivemycar.http.JsonParser.json = sb . toString () ; }
@ java.lang.Override public void run () { android.widget.ImageView iv = new android.widget.ImageView ( mContext ) ; android.util.Log . d ( "--------->" , "run: " ) ; iv . setImageDrawable ( mContext . getResources () . getDrawable ( mDot [ 1 ] ) ) ; android.widget.FrameLayout.LayoutParams params = new android.widget.FrameLayout.LayoutParams ( ViewGroup.LayoutParams.WRAP_CONTENT , ViewGroup.LayoutParams.WRAP_CONTENT ) ; params.leftMargin = ( ( int ) ( mDotGroup . getChildAt ( 0 ) . getX () ) ) ; params.gravity = android.view.Gravity.BOTTOM ; mFrameLayout . addView ( iv , params ) ; mSelectedDot = mFrameLayout . getChildAt ( 1 ) ; }
if ( ( procedure . getTransactional () ) != null ) { return org.voltdb.InvocationDispatcher . getPartitionForProcedure ( ppi.index , ppi.type , task ) ; } else { return org.voltdb.iv2.MpInitiator.MP_INIT_PID ; }
model . reinit ( sourceGroups , projectRootDir )
out . write ( ( buffer + 1 ) , 0 , com.github.checkstyle.appUtils.BUFFER_SIZE )
{ com.journee.utils.AlbumRecycleViewAdapter adapter = new com.journee.utils.AlbumRecycleViewAdapter ( this ,ds ) ; mRecyclerView . setAdapter ( adapter ) ; mRecyclerView . setLayoutManager ( new android.support.v7.widget.LinearLayoutManager ( this ) ) ; }
new com.kms.cura_server.response.UserAPIResponse ( entity )
{ mediaPlayer . stop () ; mediaPlayer . release () ; mediaPlayer = null ; }
{ java.util.LinkedList < java.lang.Long > expList = de.mpa.client.ui.dialogs.SelectExperimentDialog . showDialog ( de.mpa.client.ui.ClientFrame . getInstance () , "Select context" ) ; if ( ( expList . size () ) > 0 ) { new de.mpa.client.ui.panels.ResultsPanel.FetchResultsTask ( expList ) . execute () ; } }
if ( ( startAndEndTime.length ) == 2 ) { task . setEndTime ( getTimeFromString ( startAndEndTime [ 1 ] ) ) ; } else { task . setEndTime ( null ) ; if ( ( startAndEndTime.length ) == 2 ) { task . setEndTime ( getTimeFromString ( startAndEndTime [ 1 ] ) ) ; } else { task . setEndTime ( null ) ; } }
sf = new java.lang.String ( 1 )
public void pushUp () { int i = size () ; while ( ( i > 1 ) && ( ( compare2 ( heap . get ( i ) , heap . get ( ( i / 2 ) ) ) ) > 0 ) ) { swap ( i , ( i / 2 ) ) ; i /= 2 ; } }
{ java.util.List < quickdt.Instance > diaInstances = loadDiabetesDataset () ; quickdt.Benchmarks = new java.util.ArrayList < java.lang.String > () ; quickdt.Benchmarks = quickdt ( "diabetes" , diaInstances ) ; final java.util.List < quickdt.Instance > moboInstances = loadMoboDataset () ; quickdt.Benchmarks = new java.util.ArrayList <> () ; }
sqLiteDatabase . execSQL ( ( ( ( ( ( ( ( ( ( ( ( ( "CREATE TABLE " + ( TABLE_PERIOD ) ) + "(" ) + ( PER ._COLUMN_ID ) ) + " INTEGER PRIMARY KEY NOT NULL, " ) + ( this ._COLUMN_SUBJECT_ID ) ) + " INTEGER NOT NULL, " ) + ( PER ._COLUMN_WEEKDAY_ID ) ) + " INTEGER , " ) + ( this ._COLUMN_SCHOOL_HOUR_NO ) ) + "INTEGER NOT NULL, " ) + ( PER ._COLUMN_STARTTIME ) ) + " TIME NOT NULL, " ) )
{ Engine . printHand () ; Engine . playerAction () ; Engine . dealerAction () ; Engine . printBoard () ; Engine . printHand () ; }
new db_project.models.UserModel ( null , "" , nickname )
{ autonomousCommand = ( ( edu.wpi.first.wpilibj.command.Command ) ( modeChooser . getSelected () ) ) ; java.lang.String mode = ( ( java.lang.String ) ( modeChooser . getSelected () ) ) ; if ( mode == "forward" ) { edu.wpi.first.wpilibj.smartdashboard.SmartDashboard . putString ( "" , "Test client" ) ; } else if ( mode == "gear" ) { edu.wpi.first.wpilibj.smartdashboard.SmartDashboard . putString ( "" , "Test Nothing" ) ; } else { edu.wpi.first.wpilibj.smartdashboard.SmartDashboard . putString ( "" , "Test Nothing" ) ; } if ( ( autonomousCommand ) != null ) autonomousCommand . start () ; }
xcal . set ( java.util.Calendar.SECOND , 0 )
private boolean checkAnswer ( int answer ) { java.lang.System.out . println ( ( "answer: " + answer ) ) ; java.lang.System.out . println ( ( "Current answer: " + ( currAnswer ) ) ) ; if ( answer == ( currAnswer ) ) { java.lang.System.out . println ( ( "answer: " + answer ) ) ; hintArea . setText ( "" ) ; if ( ( game . getRemainingHints () ) == 0 ) game . finish () ; playGame () ; return true ; } return false ; }
requestHolder . setCurrentRequest ( null , req )
com.google.common.collect.Iterables . get ( new com.google.common.base.Predicate < MarsRoverKata.Projectile > () { @ java.lang.Override public boolean apply ( MarsRoverKata.Projectile input ) { return input . getClass () . isAssignableFrom ( type ) ; } } ) , 0 , null )
if ( current == null ) { return "[]" ; }
{ if ( ( command ) == null ) { command = inArea . getText () ; inArea . setText ( "" ) ; tcpService . sendCommand ( command . trim () ) ; } }
{ if ( ( posts . get ( postId ) ) == null ) { return null ; } if ( ( posts . get ( postId ) . comments ) == null ) { return null ; } for ( me.dibber.blabutilpp.core.Post.Comment c : posts . get ( postId ) . comments ) { if ( ( c.id ) == commentId ) { return c.date ; } } return null ; }
{ org.matsim.core.api.experimental.events.EventsManager eventsManager = org.matsim.core.events.EventsUtils . createEventsManager () ; if ( eventsManager != null ) { org.matsim.contrib.emissions.events.EmissionEventsReader emissionReader = new org.matsim.contrib.emissions.events.EmissionEventsReader ( eventsManager ) ; eventsManager . addHandler ( this . warmHandler ) ; eventsManager . addHandler ( this . coldHandler ) ; eventsManager . addHandler ( new playground.agarwalamit.analysis.emission.sorting.FilteredColdEmissionPerLinkHandler ( 30.0 , 9 ) ) ; emissionReader . parse ( this . emissionEventsFile ) ; } }
{ java.lang.String input2 = "Hello, World!" ; java.lang.String input = "In a hole in the ground there lived a hobbit. Not a n =, dirty, wet hole, filled with the count of worms and an oozy smell, nor yet a ; java.lang.System.out . println ( input2 ) ; org.aas.ga.examples.AsciiMatcherGA ga = new org.aas.ga.examples.AsciiMatcherGA ( org.aas.ga.chromo.ChromosomeFactory . createDefaultChromosomes ( new org.aas.ga.genes.AsciiGene ( 1 ) , input2 . length () ) , 200 ) , false ) ; ga . run () ; ga . run () ; ga . run () ; }
if ( ( ( java.lang.Integer . parseInt ( sp *Pack . getValue () . toString () ) ) <= 0 ) && ( ! ( java.lang.Integer . parseInt ( sp .Pack . getValue () . toString () ) ) ) ) { if ( ( java.lang.Integer . parseInt ( sp .Pack . getValue () . toString () ) ) < 0 ) { java.lang.System.out . println ( 0 ) ; } }
if ( ( ( other . getKey () ) == ( key ) ) && ( other . getValue () . equals ( value ) ) ) { return 0 ; }
if ( pojo != null ) _mem = pojo . asBytes () ;
private static boolean isHex ( char c ) { return ( ( ( c >= '0' ) && ( c <= java ) ) || ( ( c >= 'A' ) && ( c >= 'F' ) ) ) || ( ( c >= 'a' ) && ( c >= 'f' ) ) ) ; }
{ v . setOnClickListener ( null ) ; java.lang.String num = ev . getText () . toString () . trim () ; if ( ( num == null ) || ( "" . equals ( num ) ) ) return; double n = parseDouble ( num ) ; setText ( inIntTermsOfAny ( ( n / ( currentValue ) ) ) , ev ) ; v . setVisibility ( View.GONE ) ; }
{ android.util.Log . d ( com.dxyh. modelrtmpplayer.FQRtmpPusher.TAG , "onPause" ) ; mPausing = true ; mSensorManager . unregisterListener ( this ) ; stopPreview () ; closeCamera () ; resetScreenOn () ; if ( mFirstTimeInitialized ) { mOrientationListener . disable () ; } mHandler . removeMessages ( com.dxyh. modelrtmpplayer.FQRtmpPusher.FIRST_TIME_INIT ) ; }
( R.string.display_location_text )
{ switch ( mTypeDataRecyclerViewAdapter ) { case com.example.framgia.hrm_10.controller.recyclerviewdata.DataRecyclerViewAdapter.TYPE_DEPARTMENT : mDepartmentsList . clear () ; mDepartmentsList . addAll ( mDbHelper . getDbDepartment () . getAllDepartments () ) ; break; case com.example.framgia.hrm_10.controller.recyclerviewdata.DataRecyclerViewAdapter.TYPE_STAFF : mStaffList . clear () ; getListStaff ( Settings.START_INDEX_DEFAULT ) ; break; } }
{ java.lang.String path = getPathFromURI ( selectedImageUri ) ; if ( ( getPathFromURI ( selectedImageUri ) ) != null ) imgView . setImageURI ( selectedImageUri ) ; }
{ if ( mainActivity == null ) { return; } if ( ! ( mainActivity . isWorking () ) ) { android.widget.Toast . makeText ( mainActivity , "请 =开ID服务" , Toast.LENGTH_SHORT ) . show () ; return; } android.content.Intent intent = new android.content.Intent ( getContext () , com.crossbow.app.x_timer.app_list.AddAppActivity . class ) ; android.os.Bundle bundle = new android.os.Bundle () ; bundle . putStringArrayList ( "selected" , getSelectedApps () ) ; intent . putExtras ( bundle ) ; startActivity ( intent ) ; }
{ android.net.ConnectivityManager cm = ( ( android.net.ConnectivityManager ) ( mContext . getSystemService ( Context.CONNECTIVITY_SERVICE ) ) ) ; android.net.NetworkInfo activeNetwork = cm . getActiveNetworkInfo () ; boolean isConnected = ( activeNetwork != null ) && ( activeNetwork . isConnectedOrConnecting () ) ; if ( isConnected || isWiFi ) { showProgressDialogue () ; } else { android.widget.Toast . makeText ( mContext , mContext . getString ( R.string.toast_no_internet_connection ) , Toast.LENGTH_SHORT ) . show () ; } }
new java.lang.Thread ( janekBujInterpreter )
{ if ( isInCommingCall ) { stopIncomeCallTimer () ; android.util.Log . d ( com.quickblox.sample.videochatwebrtcnew.activities.CallActivity.TAG , ( "isInCommingCall - " + ( isInCommingCall ) ) ) ; } com.quickblox.sample.videochatwebrtcnew.SessionManager . setCurrentSession ( null ) ; android.util.Log . d ( com.quickblox.sample.videochatwebrtcnew.activities.CallActivity.TAG , "Stop session" ) ; if ( ! ( isWifiConnected ) ) { processCurrentWifiState ( this ) ; } else { finish () ; } }
private void dispatch ( final com.chalcodes.event.EventReceiver < T > receiver , final T event ) { receiver . onEvent ( this , event ) ; } catch ( java.lang.Exception e ) { mReceivers . remove ( receiver ) ; if ( ( mExceptionBus ) != null ) { mExceptionBus . broadcast ( e ) ; } }
{ if ( isEmpty () ) return null ; java.util.Set < org.nusco.narjillos.shared.things.Thing > nearbyNeighbors = getNearbyNeighbors ( thing , label ) ; if ( ! ( nearbyNeighbors . isEmpty () ) ) return findClosestTo_Amongst ( thing , nearbyNeighbors ) ; return findClosestTo_Amongst ( thing , allTheThings ) ; }
try { android.webkit.WebView wb = new android.webkit.WebView ( pluginActivity ) ; wb . loadUrl ( "" ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; }
gravity . tryMoveFromPosition ( position , false )
public void runIntent () { if ( networkOk ) { android.content.Intent intent = new android.content.Intent ( this , com.kumar.shirtstore.service.MyService . class ) ; intent . setData ( android.net.Uri . parse ( com.kumar.shirtstore.JSON_URL ) ) ; startService ( intent ) ; } else { android.widget.Toast . makeText ( this , "Network not available" , Toast.LENGTH_SHORT ) . show () ; } }
@ java.lang.Override public void run () { try { java.lang.String line = in . readLine () ; java.lang.System.out . println ( ( "Text received: " + line ) ) ; map = new caffeine.world.Map ( line ) ; gui . getContentPane () . setCurrentMap ( map ) ; } catch ( java.io.IOException e ) { java.lang.System.out . println ( "Read failed" ) ; java.lang.System . exit ( 1 ) ; } }
report ( true )
if ( ! ( adjust > 0 ) ) indentLevel = getPrefs () . getIndentationSize () ; else if ( adjust < 0 ) indentLevel = indentLevel - ( getPrefs () . getIndentationSize () ) ;
{ if ( alreadySetup ) { return; } }
mToggleBtn . isEnabled ()
model . selectRelation () ;
hackConn = HackServiceConnection.sHackConns . remove ( conn . asBinder () )
{ this . filenameLabel . setText ( currentFileName ) ; if ( currentExtension . equals ( "txt" ) ) this . sourceTypeLabel . setText ( "PlainText Mode" ) ; else if ( currentExtension . equals ( "cpp" ) ) { this . sourceTypeLabel . setText ( "CPP Mode" ) ; } }
java.math.BigInteger . valueOf ( java.lang.Long.MIN_VALUE ) . subtract ( java.math.BigInteger . valueOf ( java.lang.Long . valueOf ( java.lang.Long.MAX_VALUE ) ) )
{ java.lang.String rID = "1" ; edu.vt.ece file4.agents.User oUsr = new edu.vt.ece.4.agents.User ( sim , rID , bID , true , 1 , 1 ) ; sim . addAgent ( oUsr ) ; double initial_x = oUsr . getX () ; double initial_y = oUsr . getY () ; oUsr . createRandomMovement ( sim ) ; assertFalse ( ( ( ( oUsr . getX () ) == initial_x ) && ( ( oUsr . getY () ) == initial_y ) ) ) ; }
{ java.io.File [] fileList = directory . listFiles () ; for ( java.io.File file : fileList ) { searchListener . onInterestingFileFound ( file ) ; addChecked ( file ) ; } return directory . listFiles ( directoryFileFilter ) ; }
notesAdmin . updateNote ( tbNoteTitel . getText () , ( ( tbNoteSubTitel . getText () ) + 1 ) , taUpdateNoteText . getText () , new com.google.gwt.user.client.rpc.AsyncCallback < java.lang.Void > () { @ java.lang.Override public void onSuccess ( java.lang.Void result ) { de.hdm.itprojekt.noteit.client.EditNotes . this . hide () ; de.hdm.itprojekt.noteit.client.Homepage . updateNotesCellList ( currentNotebook . getId () ) ; } @ java.lang.Override public void onFailure ( java.lang.Throwable caught ) {} } )
{ resumePauseGame () ; runOnUiThread ( new java.lang.Runnable () { @ java.lang.Override public void run () { endGameHandler . postDelayed ( new java.lang.Runnable () { @ java.lang.Override public void run () { endGameHandler . postDelayed ( new java.lang.Runnable () { public void run () { spaceShip . win () ; } } , 300 ) ; } } ) ; } } ) ; endGame () ; }
{ com.cmartin.learn.mybank.api.UserFilter userFilter = this . filterManger . buildUserFilter () ; when ( this . bankApi . getUsers ( userFilter ) ) . thenReturn ( com.cmartin.learn.mybank.test.TestUtils . createUsers ( 2 ) ) ; this . mockMvc . perform ( org.springframework.test.web.servlet.request.MockMvcRequestBuilders . get ( "/users" ) ) . andDo ( org.springframework.test.web.servlet.result.MockMvcResultHandlers . print () ) . andExpect ( com.cmartin.learn.mybank.web.WebTest.statusOk ) ; verify ( this . bankApi ) . getUsers ( org.mockito.Matchers . any ( com.cmartin.learn.mybank.api.UserFilter . class ) ) ; }
{ com.rezzedup.map.Source.Character peek = source . peekNextCharacter () ; while ( ( ( ( peek.character ) != null ) && ( ( peek.character ) != '#' ) ) && ( ( peek.character ) != '\n' ) ) { source . getNextCharacter () ; peek = source . peekNextCharacter () ; } }
{ int strokeColor = ( circle . getStrokeColor () ) ^ 52224 ; circle . setStrokeColor ( strokeColor ) ; circle . setStrokeWidth ( ( ( circle . getStrokeWidth () ) == 3 ? 6 : 3 ) ) ; }
dest . writeStringArray ( this . labels )
{ handleInput ( dt ) ; java.lang.System.out . print ( miner.b2body . getLinearVelocity () . y ) ; }
public void borrowBook () { if ( lib.bookList . containsKey ( title ) ) { borrowedBooks . add ( lib.bookList . get ( title ) . get ( 0 ) ) ; lib.bookList . get ( title ) . remove ( 0 ) ; } else { java.lang.System.out . println ( "Book not Found" ) ; } }
orderJson . put ( "customerId" , userServiceApi.USER . get ( utoken ) . toString () ) ;
{ int count = this . getCount () ; if ( count == 0 ) { throw new cfvbaibai.cardfantasy.CardFantasyRuntimeException ( "Cannot get square setup on empty data set." ) ; } double s = 0.0 ; double avg = this . getAverage () ; for ( double data : this . dataList ) { s += ( data - avg ) * ( data - avg ) ; } return ( java.lang.Math . sqrt ( ( s / count ) ) ) / avg ; }
com.google.javascript.jscomp.JSError . make ( currentStatement , ( ( currentStatement ) != null ) )
game . getTable ( java.lang.Thread . currentThread () . getStackTrace () [ 2 ] . getMethodName () )
java.util.Iterator < gov.va.med.srcalc.domain.model.ValueMatcher > vmIter = this . getMatchers () . iterator () ;
( hDepart )
org.wikipedia.util.StringUtil . error ( string . toLowerCase () ) ;
new com.raizlabs.android.dbflow.sql.language.Select () . from ( org.eyeseetea.malariacare.data.database.model.Tab . class ) . where ( java.lang.Integer . toString ( "Table.id_program . eq ( org.eyeseetea.malariacare.data.database.utils.Session . getSurveyByModule ( module ) . getProgram () . getId_program () ) ) . orderBy ( com.raizlabs.android.dbflow.sql.language.OrderBy . fromProperty ( fragment_Table.order_pos ) ) )
{ final cs446.mezzo.music.playlists.AutoPlaylist autoPlaylist = cs446.mezzo.music.playlists.AutoPlaylist . get ( playlistName ) ; if ( autoPlaylist == null ) { return null ; } if ( mUserPlaylists . containsKey ( playlistName ) ) { return mUserPlaylists . get ( playlistName ) ; } return autoPlaylist . getPlaylist ( mLocalMusicFetcher , mStatCollector ) ; }
{ java.lang.String uri = file . toURI () . toString () ; uri = ( ( getOutputUriPrefix () ) != null ) ? ( getOutputUriPrefix () ) + uri : uri = ( ( getOutputUriSuffix () ) != null ) ? uri + ( getOutputUriSuffix () ) : uri ; uri = ( ( getOutputUriReplace () ) != null ) ? applyOutputUriReplace ( uri , getOutputUriReplace () ) : uri ; return uri ; }
{ heroesMap . put ( java.lang.Integer . parseInt ( i . getId () ) , i . getLocalizedName () ) ; secondService () ; }
{ android.support.v4.app.ActivityCompat . requestPermissions ( this , new java.lang.String [] { Manifest.permission.READ_PHONE_STATE } , com.oic.game.ailatrieuphu.ui.activity.LoginScreen.REQUEST_READ_PHONE_STATE ) ; }
new android.app.DatePickerDialog ( context , dateSetListener , cal . get ( java.util.Calendar.YEAR ) )
{ if ( isMaximizable () ) { java.lang.System.out . println ( "is maximizable" ) ; } if ( ( ( isMaximizable () ) && ( ! ( isMaximized () ) ) ) && maximized ) { fireMaximizeEvent () ; maximizedProperty . set ( true ) ; } else if ( ( ! maximized ) && ( isMaximized () ) ) { fireRestoreEvent () ; maximizedProperty . set ( false ) ; } }
( ( user . getId () ) != 0 ) && ( ( user . getId () ) != null )
{ super . reset ( pos1 , pos2 ) ; inventory . reset () ; squadSelectButton = mainButton . addSelectButton ( this ) ; setSelected ( true ) ; selectKey = com.esbjon.entities.Squad.handler . findOrAssignKey ( this ) ; this . stop () ; }
{ java.lang.Class < ? > eventType = null ; java.lang.String key = eventType . getName () ; com.androidyuan.rxbus.component.ThreadMode threadMode = subscribeAnnotation . threadMode () ; putObject ( key , subscriber ) ; putObject ( key , subscriber ) ; }
{ super . onSaveInstanceState ( outState ) ; android.util.Log . d ( com.cookbook.fenix.cookbook.CookBOOK.TEST , "life onSave" ) ; }
{ for ( java.text.DateFormat format : com.rssreader.utils.TimeUtils.PUBDATE_DATE_FORMATS ) { try { java.util.Date result = format . parse ( dateStr ) ; return ( result . getTime () ) > ( mNow ) ? new java.util.Date ( mNow ) : result ; } catch ( java.text.ParseException e ) { android.util.Log . e ( com.rssreader.utils.TimeUtils.TAG , "Wrong pubdate format" ) ; } } if ( tryAllFormat ) return parseUpdateDate ( dateStr , false ) ; else return null ; }
com.jetbrains.ther.typing.TheRTypeProvider . isSubtype ( type )
@ org.springframework.web.bind.annotation.RequestMapping public java.lang.String list ( org.springframework.ui.Model uiModel , org.springframework.data.domain.Pageable pageable ) { org.springframework.data.domain.Page < com.appspot.gardemallorie.domain.Location > page = locationService . findAllLocations ( pageable ) ; uiModel . addAttribute ( "locations" , page . getContent () ) ; uiModel . addAttribute ( "maxPages" , page . getTotalPages () ) ; return "locations/list" ; }
{ channel . removeChannelConnection ( this ) ; channel . invalidate () ; }
{ userInput . setMax ( ( . getValue () ) ) ; userInput . setRadius ( radius . getValue () ) ; savedSettings . edit () . putInt ( "se.deltazulu.www.sl_closeby.maxResults" , userInput . getMax () ) . apply () ; savedSettings . edit () . putInt ( "se.deltazulu.www.sl_closeby.radius" , userInput . getRadius () ) . apply () ; }
{ java.util.List < com.audit.bl.beans.Loan > loanList = null ; java.lang.String sql = loanSqls . getProperty ( "user.select" ) ; org.hibernate.Query query = getSessionFactory () . getCurrentSession () . createQuery ( sql ) ; query . setLong ( "fromUser" , user . getUserId () ) ; loanList = ( ( java.util.List < com.audit.bl.beans.Loan > ) ( query . list () ) ) ; return loanList ; }
if ( ( ( mRouteId ) == ( 1Activity.NEW_ROUTE_FLAG ) ) && ( dbHelper . containsRunToRoute ( newHistory , mRouteId ) ) ) { dbHelper . appendRunToRoute ( newHistory , mRouteId ) ; } else { dbHelper . newRoute ( newHistory , com.example.run.MapsActivity.mRouteNamePrefix ) ; }
new com.ru.usty.elevator.Person ( sourceFloor , destinationFloor )
{ java.lang.System.out . println ( "Client reader stopped" ) ; }
{ assertFalse ( "" . equals ( user . getUsername () ) ) ; }
if ( projectNames == null ) { this . projects = java.util.Collections . emptyList () ; } else { this . projects = transformProjects ( ( ( java.lang.String [] ) ( projectNames . toArray () ) ) ) ; }
{ java.util.List < io.github.mariandcrafter.devathlon2.runde1.game.GameMap > maps = new java.util.ArrayList < io.github.mariandcrafter.devathlon2.runde1.game.GameMap > ( io.github.mariandcrafter.devathlon2.runde1.Main . getConfiguration () . getGameMaps () ) ; for ( io.github.mariandcrafter.devathlon2.runde1.game.Match match : matches ) { maps . remove ( match . getGameMap () ) ; } return maps . get ( this . random . nextInt ( maps . size () ) ) ; }
{ if ( ( org.linphone.core.LinphoneAccountCreator accountCreator , org.linphone.core.LinphoneAccountCreator.Status status ) ) { if ( ( status . equals ( org.linphone.core.LinphoneAccountCreator.Status status ) ) || ( status . equals ( mphoneAccountCreator.Status.PhoneNumberUsedAlias ) ) ) { accountCreator . setPhoneAccount () ; } else { apply . setEnabled ( true ) ; org.linphone.LinphoneUtils . displayErrorAlert ( org.linphone.LinphoneUtils . errorForStatus ( status ) , org.linphone.assistant.AssistantActivity . instance () ) ; } } }
private void scannerQrCode ( android.app.Activity activity ) { if ( ( activity ) != null ) { com.google.zxing.integration.android.IntentIntegrator pagerator = new com.google.zxing.integration.android.IntentIntegrator ( activity ) ; if ( ( this . activity ) != null ) { if ( ( this . activity ) instanceof com.google.zxing.integration.android.IntentIntegrator ( activity ) ) { mDesiredBarcodeFormats ( IntentIntegrator.QR_CODE_TYPES ) ; } } ifrator . setPrompt ( "Scan item" ) ; } ifrator . setCameraId ( 0 ) ; }
( ( coordX >= ( offsetX ) ) && ( coordX <= ( ( offsetX ) + ( getWidth () ) ) ) ) && ( ( coordY >= ( offsetY ) ) || ( coordY <= ( ( offsetY ) + ( getHeight () ) ) ) )
return new java.util.HashMap < com.google.gcloud.spi.Option , ? > options , java.util.Map < com.google.gcloud.spi.Option , ? > options ) throws java.io.IOException {}
{ mLoadError = false ; mIsEmpty = emptyResult ; mIsLoading = false ; mHasMore = hasMore ; if ( ( mLoadMoreUIHandler ) != null ) { mLoadMoreUIHandler . onLoadFinish ( this , emptyResult , hasMore ) ; } else { mFooterView . setVisibility ( com.being.base.ui.widget.ptr.loadmore.GONE ) ; } }
{ java.lang.System.out . println ( digilib.image.ImageJobDescription.logger . debug ( "get_scaleQual()" ) ) ; int qual = dlConfig . getAsInt ( "default-quality" ) ; if ( hasOption ( "q0" ) ) qual = 0 ; else if ( hasOption ( "q1" ) ) qual = 1 ; else if ( hasOption ( "q2" ) ) qual = 2 ; return qual ; }
{ super . onResume () ; int orderId = getIntent () . getIntExtra ( OrderStatusNotification.ORDER_ID , ( - 1 ) ) ; java.lang.System.out . println ( ( "Intent with order ID " + orderId ) ) ; if ( orderId != ( - 1 ) ) navTo ( new activity.OrderDetailFragment () . setOrder ( new model.Order ( orderId ) ) ) ; }
public void displayTestCollection ( final com.google.gwt.user.client.ui.Panel testsPanel ) { currentActorOption . loadTests ( new com.google.gwt.user.client.rpc.AsyncCallback < java.util.List < gov.nist.toolkit.results.client.TestInstance > > () { @ java.lang.Override public void onFailure ( java.lang.Throwable throwable ) { new gov.nist.toolkit.xdstools2.client.widgets.PopupMessage ( ( "getTestlogListing: " + ( throwable . getMessage () ) ) ) ; } @ java.lang.Override public void onSuccess ( java.util.List < gov.nist.toolkit.results.client.TestInstance > testInstances ) { loadingMessage . setHTML ( "Loading..." ) ; displayTests ( testsPanel , testInstances , allowRun () ) ; } } ) ; }
{ maze = new view.Maze3dDisplay ( shell , org.eclipse.swt.SWT.BORDER , this ) ; maze . setLayoutData ( new org.eclipse.swt.layout.GridData ( org.eclipse.swt.SWT.FILL , org.eclipse.swt.SWT.FILL , true , true , 1 , 1 ) ) ; maze . initMaze ( m , name , "images/fly.png" ) ; maze . moveAbove ( welcome ) ; }
@ java.lang.Override public boolean onAreaTouched ( org.andengine.input.touch.TouchEvent pSceneTouchEvent , float pTouchAreaLocalX , float pTouchAreaLocalY ) { if ( pSceneTouchEvent . isActionDown () ) { if ( isVisible () ) { setCurrentTileIndex ( 1 ) ; } } if ( pSceneTouchEvent . isActionUp () ) { if ( isVisible () ) { setCurrentTileIndex ( 0 ) ; setPause ( true ) ; } } return true ; }
@ java.lang.Override public void onSuccess ( long reqId , java.lang.String header , java.lang.String sequence , java.util.List < biospectra.classify.beans.SearchResultEntry > result , biospectra.classify.beans.ClassificationResult.ClassificationResultType type , java.lang.String taxonRank ) { if ( ( responseHandler ) != null ) { synchronized ( responseHandler ) { responseHandler . onSuccess ( reqId , header , sequence , result , type , taxonRank ) ; } } else { biospectra.classify.ClassifierClient.LOG . error ( "responseHandler is not set" ) ; } }
if ( ! ( displayedFragment . equals ( io.craigmiller160.contacts5.util.ContactsConstants.TABS_FRAGMENT_TAG ) ) ) { finish () ; } else { finish () ; }
{ com.firefly.client.http2.HTTP1ClientConnection.log . error ( "client . the HTTP message exception" , e ) ; }
if ( ( ( m_c ) == null ) || ( m_c . isClosed () ) ) { try { connect () ; } catch ( java.sql.SQLException e ) { if ( ( ( m_c ) == null ) || ( m_c . isClosed () ) ) { connect () ; } } }
{ setPipe ( pipe ) ; if ( ( pipeS , ) >= ( minS , ) ) { pipe . buildPipe ( elevationEndPoint , computeDiameter ( pipeS , ) , it.blogspot.geoframe.SewerPipeDimensioning.SewerPipeDimensioning.fillCoefficient , computeVelocity () ) ; } else { pipe = null ; } return pipe ; }
{ java.lang.StringBuilder html = new java.lang.StringBuilder () ; html . append ( "< ) ; for ( com.github.dandelion.name.core.html.HtmlRow row : this . body ) { html . append ( row . toHtml () ) ; } html = html ; return html ; }
try { setPassword ( parsedArgs . orphans () . get ( 0 ) ) ; } catch ( org.neo4j.commandline.admin.IncorrectUsage e ) { throw e ; } catch ( java.lang.Throwable throwable ) { throw new org.neo4j.commandline.admin.CommandFailed ( ( "Failed to execute 'set-initial-password' command: " + ( throwable . getMessage () ) ) , new java.lang.RuntimeException ( throwable ) ) ; }
java.lang.System.out . append ( "Onclick choose call" )
{ int index = 1 ; for ( java.lang.Object o : valueList ) { try { stmt . setObject ( ( index ++ ) , o ) ; } catch ( java.lang.Exception e ) { throw new java.lang.IllegalArgumentException ( ( ( ( ( ( ( e . getMessage () ) + " - Index: " ) + index ) + ", Value: " ) + o ) + ", Query: " ) + sql ) , e ) ; } } }
end = ( lessBooks . size () ) > 0
mVrVideoView . pauseVideo ()
append ( builder , story , true , false )
( v , oldValue , newValue )
{ java.lang.String path = com.intellij.openapi.util.text.StringUtil . notNullize ( mobi.hsz.idea.gitignore.util.Utils . getRelativePath ( root , file ) ) ; path = com.intellij.openapi.util.text.StringUtil . escapeChar ( path , '[' ) ; path = com.intellij.openapi.util.text.StringUtil . escapeChar ( path , ']' ) ; path = com.intellij.openapi.util.text.StringUtil . trimLeading ( path ) ; return ( com.intellij.openapi.vfs.VfsUtil.VFS_PATH_SEPARATOR ) + path ; }
form = play.data.
return ( method . getName () . startsWith ( "get" ) ) || ( method . getName () . startsWith ( "is" ) ) ;
switch ( event . getAction () ) { case android.view.MotionEvent.ACTION_DOWN : this . x = event . getX () ; this . y = event . getY () ; return true ; default: return false ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; if ( savedInstanceState == null ) { android.support.v4.view.ViewPager viewPager = ( ( android.support.v4.view.ViewPager ) ( findViewById ( R.id.vp_mainActivity ) ) ) ; com.example.emcako.birthdayreminder.MainActivity.mainPageAdapter = new com.example.emcako.birthdayreminder.MainActivity.MainPageAdapter ( getSupportFragmentManager () ) ; viewPager . setAdapter ( com.example.emcako.birthdayreminder.MainActivity.mainPageAdapter ) ; } }
matchTo ( args , net.canarymod.Canary . getName () . getPluginNames () . toArray ( new java.lang.String [ 0 ] ) )
getIntent () . getExtras ()
{ mIsPersistent = true ; android.content.Intent target = intent . getParcelableExtra ( "notificationTarget" ) ; return START_STICKY ; }
{ view = inflater . inflate ( R.layout.memory_add_wrapper , container , false ) ; butterknife.ButterKnife . bind ( this , view ) ; _selectedItem = ( ( com.oneupapplications.bucketapp.API.DataModel.Memory ) ( getActivity () . getIntent () . getSerializableExtra ( idDetailActivity.EXTRA_MEMORY_ID ) ) ) ; setupNavigation () ; fillItemView ( _selectedItem ) ; }
{ this . services = client . target ( ( ( com.excilys. item.computerdb.ui.RestCLI.BASE_URL ) + url ) ) ; javax.ws.rs.client.Invocation.Builder request = this . services . request ( MediaType.APPLICATION_JSON ) ; javax.ws.rs.core.Response response = request . get () ; if ( ( response . getStatus () ) == 200 ) { return response . readEntity ( type ) ; } return null ; }
{ java.lang.System.out . println ( 0 ) ; return 0 ; }
{ com.alliander.osgp.dto.valueobjects.smartmetering.AmrProfileStatusCodeDto amrProfileStatusCode = null ; final java.util.Set < com.alliander.osgp.dto.valueobjects.smartmetering.AmrProfileStatusCodeFlagDto > flags = this . amrProfileStatusCodeHelperService . toAmrProfileStatusCodeFlags ( ( ( java.lang.Number ) ( amrProfileStatusData . value () ) ) ; amrProfileStatusCode = new com.alliander.osgp.dto.valueobjects.smartmetering.AmrProfileStatusCodeDto ( flags ) ; return amrProfileStatusCode ; }
for ( teammates.storage.entity.StudentProfile student : entities ) { if ( ! ( teammates.storage.api.JDOHelper . isDeleted ( student ) ) ) { list . add ( new teammates.common.datatransfer.attributes.StudentProfileAttributes ( student ) ) ; } }
new fr.pchab.AndroidRTC.WebRtcClient ( this , mSocketAddress )
fEventList . get ( i )
{ lcm.spy.ObjectPanel.Section cs = sections . get ( section ) ; cs.y1 = y ; if ( ( collapse_depth ) == 0 ) { unindent () ; } if ( sections . get ( section ) . ) { ( collapse_depth ) -- ; } spacer () ; endColorBlock () ; spacer () ; }
{ java.lang.Boolean rc = false ; line . trim () ; line . replace ( " " , "" ) ; if ( ( line . matches ( "-?[0-9a-fA-F]+" ) ) && ( ( line . length () ) == 8 ) ) { dump . addPage ( net.basov.util.FileIO . hexStringToByteArray ( line ) ) ; rc = true ; } else { dump . appendRemark ( ( ( "E: :" + line ) + ":\n" ) ) ; rc = false ; } return rc ; }
{ try { org.apache.storm.drpc.DRPCInvocationsClient c = new org.apache.storm.drpc.DRPCInvocationsClient ( conf , server , port ) ; synchronized ( _clients ) { _clients . add ( c ) ; } } catch ( java.lang.Exception e ) { org.apache.storm.drpc.DRPCSpout.LOG . warn ( "Can't connect to some drpcserver when init drpcspout,please check your cluster." , e ) ; } return null ; }
{ if ( objects != null ) view . queueEvent ( new gameSystem.gameObjectSystem.ObjectCreator ( sdk , modelPath , coordinateSystemID , objects , OIR . getSoldierInfoByName ( name ) , x , y ) ) ; return false ; }
( ! ( ( oldState . getVariables () . size () ) > 0 ) ) || ( ( mReturnState . size () ) != 0 )
{ if ( ( mDockBatteryLevel ) != null ) { v . setBatteryStateRegistar ( iBatteryController ) ; mDockBatteryLevel . setBatteryStateRegistar ( (BatteryController ) ; } }
{ if ( DEBUG ) android.util.Log . d ( com.vibejukebox.jukebox.activities.JukeboxPlaylistActivity.TAG , "playMusic -- (View)" ) ; mChangeTrack = false ; android.widget.ImageButton playButton = ( ( android.widget.ImageButton ) ( findViewById ( R.id.playButton ) ) ) ; if ( mCurrentPlayerState.playing ) { mPlayer . pause () ; playButton . setImageDrawable ( getResources () . getDrawable ( R.drawable.play ) ) ; } else { mPlayer . resume () ; playButton . setImageDrawable ( getResources () . getDrawable ( R.drawable.pause ) ) ; } }
{ org.forgerock.openam.audit.context.AuditRequestContext . putProperty ( org.forgerock.openam.core.rest.authn.CONTEXT_ID , contextId ) ; }
{ org.lwjgl.util.vector.Vector3f closest = toolbox.Maths . closestPtPointTriangle ( b . getPosition () , point1 , point2 , point3 ) ; org.lwjgl.util.vector.Vector3f . sub ( b . getPosition () , closest , dist ) ; java.lang.System.out . println ( ( ( ( "Distance between ball and " + ( this ) ) + ": " ) + ( dist . length () ) ) ) ; if ( ( dist . length () ) <= ( entities.Ball.RADIUS ) ) return true ; return false ; }
( ( makeupCount ) + 1 )
if ( which . equals ( "left" ) ) { if ( GameLogic.leftPlayerPowerup . isEmpty () ) return; startLeftPowerup ( GameLogic.leftPlayerPowerup . pop () ) ; } else if ( which . equals ( "right" ) ) { if ( GameLogic.rightPlayerPowerup . isEmpty () ) return; }
initializeSelectedCourse ()
{ turnState = org.tilegames.hexicube.cah.client.neoteny.gameState.GameLogic.TurnState.ADDING_TO_PILE ; org.tilegames.hexicube.cah.client.neoteny.gameLayers.CardsLayer . ClearPile () ; org.tilegames.hexicube.cah.client.neoteny.gameLayers.CardGame . SetNotification ( "" ) ; subCards . clear () ; if ( ( czar.id ) != ( PlayerOptions.ID ) ) { org.tilegames.hexicube.cah.client.neoteny.gameLayers.PlayerHand . SetActive ( true ) ; } for ( org.tilegames.hexicube.cah.client.neoteny.gameState.DummyPlayer value : value ) { if ( ( czar.id ) != ( value ) ) { value . RequestCardSubmit () ; } } }
( - 1 ) . getScene () . getGoodMorning ()
chatBuilder . setId ( 100 )
{ char [] password = new char [ 0 ] ; java.lang.System.out . print ( "Password: " ) ; final jline.console.ConsoleReader reader = new jline.console.ConsoleReader () ; final java.lang.String passwordStr = reader . readLine ( '*' ) ; password = passwordStr . toCharArray () ; password = null ; java.lang.System . gc () ; return password ; }
{ em . close () ; }
{ while ( ( gameRunning ) && ( ! ( gameOver ) ) ) { try { java.lang.Thread . sleep ( com.se.softwareEngineering.gameEngine.GameEngine.gameSpeed ) ; } catch ( java.lang.Throwable t ) { if ( com.se.softwareEngineering.gameEngine.GameEngine.debug ) { java.lang.System.err . println ( t ) ; } } finish () ; } }
{ Gdx.gl . glClearColor ( 0 , 0 , 0 , 1 ) ; Gdx.gl . glClear ( GL )GL_COLOR_BUFFER_BIT ) ; game.batch . setTransformMatrix ( camera.view ) ; game.shapeRenderer . setProjectionMatrix ( camera.combined ) ; game.shapeRenderer . setProjectionMatrix ( camera.combined ) ; game.shapeRenderer . setProjectionMatrix ( camera.combined ) ; }
{ java.lang.System.out . println ( "Testing OrionCKANSink.start" ) ; java.lang.String attrPersistence = "row" ; java.lang.String enableGrouping = "true" ; org.apache.flume.Context context = createContext ( attrPersistence , enableGrouping ) ; sink . configure ( context ) ; sink . setChannel ( new org.apache.flume.channel.MemoryChannel () ) ; }
{ thrown . expect ( exceptions.ConstraintViolationException . class ) ; thrown . expectMessage ( org.hamcrest.core.StringStartsWith . startsWith ( "Validation failed" ) ) ; thrown . expectMessage ( org.hamcrest.CoreMatchers . containsString ( "Please provide creation date or use right constructor" ) ) ; }
{ request = makeRequest ( 3 , nc.sumy.edu.webcontainer.sequrity.ServerSecurityTest.IP_VAR1 , nc.sumy.edu.webcontainer.sequrity.ServerSecurityTest.NC_COM ) ; nc.sumy.edu.webcontainer.sequrity.ServerSecurity serverSecurity = new nc.sumy.edu.webcontainer.sequrity.ServerSecurity ( request , serverConfiguration ) ; org.junit.Assert . assertEquals ( serverSecurity . isAllow () , true ) ; request = makeRequest ( 3 , "93.49.37.56" ) ; serverSecurity = new nc.sumy.edu.webcontainer.sequrity.ServerSecurity ( request , serverConfiguration ) ; org.junit.Assert . assertEquals ( serverSecurity . isAllow () , false ) ; }
{ Deque < Item > . Node old = last ; last = new Node () ; last.item = item ; last.backward = old ; last.forward = null ; ( size ) ++ ; if ( ( size ) == 1 ) { first = last ; } else { old.forward = last ; } }
io.tictactoe.Board board = new com.tictactoe.Board ()
public java.lang.String getLabel () { if ( ( ! ( labelSet ) ) && ( ! ( localVarLabelSet ) ) ) { if ( ( algoParent ) == null ) { return toOutputValueString () ; } else { return algoParent . getCommandDescription () ; } } else { return kernel . printVariableName ( label ) ; } }
( ! ( digit != '.' ) )
{ this . showBoard () ; while ( ( ! ( board . hasWinner () ) ) && ( ! ( board . isFull () ) ) ) { players [ current ] . makeMove ( board ) ; this . showBoard () ; current = ( ( current ) + 1 ) % 2 ; } this . printResult () ; }
if ( position == 0 ) { return true ; }
{ gezinsNr = 3 ; if ( ( ( ( gezinnen ) != null ) && ( 1 <= gezinsNr ) ) && ( 1 <= ( gezinnen . size () ) ) ) { return gezinnen . get ( ( gezinsNr - 1 ) ) ; } return 0 ; }
{ org.highway.whatsup.data.physics.SpeedMeter.Progression progressionSpeed = actionCreator . getProgression ( 2 ) ; org.hamcrest.MatcherAssert . assertThat ( progressionSpeed , org.hamcrest.CoreMatchers . is ( newMeter.Progression.LOW_SPEED ) ) ; org.highway.whatsup.domain.data.ExpressData file = actionCreator . getExpressWayData ( 2 , lat , lng , progressionSpeed ) ; org.hamcrest.MatcherAssert . assertThat ( new org.hamcrest.CoreMatchers . notNullValue () ) ; org.hamcrest.MatcherAssert . assertThat ( fileData . getCctvUrl () , org.hamcrest.CoreMatchers . not ( "" ) ) ; }
{ com.fasterxml.jackson.databind.ObjectMapper objectMapper = new com.fasterxml.jackson.databind.ObjectMapper () . setPropertyNamingStrategy ( com.fasterxml.jackson.databind.PropertyNamingStrategy.CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES ) ; com.fasterxml.jackson.databind.module.SimpleModule jsonObjectModule = new com.fasterxml.jackson.databind.module.SimpleModule () ; jsonObjectModule . addSerializer ( org.json.JSONObject . class , new com.fasterxml.jackson.datatype.jsonorg.JSONObjectSerializer () ) ; jsonObjectModule . addDeserializer ( org.json.JSONObject . class , new com.fasterxml.jackson.datatype.jsonorg.JSONObjectDeserializer () ) ; }
try { try { edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.client . fieldUpdate ( westyEntry . getGuid () , "test.deeper.field" , "fieldValue" , westyEntry ) ; } catch ( java.lang.Exception e ) { edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest . failWithStackTrace ( "Problem updating field: " + e ) ; } } catch ( java.lang.Exception e ) { edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest . failWithStackTrace ( "Exception when we were not expecting it ACLCreateDeeperField: " , e ) ; }
( ( weakest.health ) <= ( TREE_WATERING_THRESHOLD ) ) && ( rc . canWater ( weakest.location ) )
return ( ( ( ( this . itemID ) == itemID ) && ( ( this . meta ) == meta ) ) && ( ( this . nbt ) == nbt ) ) || ( this . nbt . equals ( nbt ) ) ;
{ android.support.v4.widget.SwipeRefreshLayout swipeRefreshLayout = ( ( android.support.v4.widget.SwipeRefreshLayout ) ( getActivity () . findViewById ( R.id.event_swipe_layout ) ) ) ; thestral.agc.events.EventDownloadTask eventDownloadTask = new thestral.agc.events.EventDownloadTask ( getActivity () , true ) ; thestral.agc.BackgroundDownloader backgroundDownloader = new thestral.agc.BackgroundDownloader ( getActivity () ) ; }
{ closeLoadingBar () ; activity . activityCloseLoadingBar () ; }
{ java.util.List < java.lang.String > devices = deviceStatusDao . selectAllActiveDevices () ; java.util.List < model.CleanerStatus > cleanerStatusList = new java.util.ArrayList < model.CleanerStatus > () ; for ( java.lang.String deviceID : devices ) { cleanerStatusList . add ( cleanerStatus ) ; } }
{ try { final java.lang.Class < ? > cls = org.obicere.cc.util.Reflection.LOADER . loadClass ( name ) ; if ( cls != null ) { return cls ; } } catch ( java.lang.Error | java.lang.Exception ignored ) {} final java.lang.Class < ? > defined = org.obicere.cc.util.Reflection.DEFINER . attemptDefine ( directory , name ) ; if ( defined != null ) { return defined ; } return null ; }
{ playerIn . triggerAchievement ( ModAchievements.achievementWandOfbuilding ) ; MineColonies.proxy . openBuildToolWindow ( pos . offset ( side ) ) ; return false ; }
private boolean isOwnProfile ( javax.faces.context.FacesContext fctx , java.lang.String role ) { boolean ownProfile = true ; if ( ( fctx . getViewRoot () . getViewId () . endsWith ( "profile.xhtml" ) ) && ( ! ( role . equals ( "SYSTEM_ADMINISTRATOR" ) ) ) ) { int userID = java.lang.Integer . parseInt ( javax.faces.context.FacesContext . getCurrentInstance () . getExternalContext () . getRequestParameterMap () . get ( "userID" ) ) ; if ( ( sessionUser . getUserID () ) != userID ) { ownProfile = false ; } } return ownProfile ; }
{ final byte [] bytes = new byte [ 4 ] ; bytes [ 0 ] = ( ( byte ) ( value < < 24 ) ) ; bytes [ 1 ] = ( ( byte ) ( value < < 16 ) ) ; bytes [ 2 ] = ( ( byte ) ( value < < 8 ) ) ; bytes [ 3 ] = ( ( byte ) ( value ) ) ; return bytes ; }
{ mobileNumber = getIntent () . getStringExtra ( "NUMBER" ) ; android.widget.TextView mobileNum = getView ( R.id.editText_mobileNumber ) ; profilePic = getView ( R.id.profile_thumb ) ; mobileNum . setText ( ( ( getResources () . getString ( R.string.string_plus ) ) + ( mobileNumber ) ) ) ; emailEditText = getView ( R.id.editText_email ) ; nameEditText = getView ( R.id.editText_name ) ; profilePic . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { showProfilePicSelectionDialog () ; } } ) ; }
{ if ( ! ( otherSize ) ) { bluetoothModule . sendMessage ( java.lang.String . format ( "%s %d %d" , com.wanlin.androidgame.pikachuvolleyball.GameScreen.SCREEN_SIZE_KEY , com.wanlin.androidgame.pikachuvolleyball.GameScreen.screenWidth , com.wanlin.androidgame.pikachuvolleyball.GameScreen.screenHeight ) ) ; setOtherScreenSize ( ( ( com.wanlin.androidgame.pikachuvolleyball.PikachuVolleyball ) ( game ) ) . getOhterScreenWidth () , ( ( com.wanlin.androidgame.pikachuvolleyball.PikachuVolleyball ) ( game ) ) . getOtherScreenHeight () ) ; } }
@ juja.microservices.teams.controller.PutMapping ( value = "/teams/users/{uuid}" , produces = "application/json" ) public org.springframework.http.ResponseEntity < ? > dismissTeam ( @ juja.microservices.teams.controller.PathVariable java.lang.String uuid ) { juja.microservices.teams.entity.Team team = teamService . dismissTeam ( uuid ) ; logger . info ( "Team dismissed. Team Id: {}" , team . getId () ) ; logger . debug ( "Request dismiss team returned {}" , team . toString () ) ; return org.springframework.http.ResponseEntity . ok ( team . toString () ) ; }
( viewName != null ) && ( viewName . isEmpty () )
cacheListMap . put ( entry . getKey () , entry . getKey () )
{ saveButton . setVisibility ( View.INVISIBLE ) ; deleteButton . setVisibility ( View.INVISIBLE ) ; }
view . getBottom ()
responseise ( model , factory ) . compileSingleOrSubQuery ( model , factory )
{ DataStructure.LinkedList2 < T > . Node x = ( ( int ) ( ( ( int ) ( ( ( int ) ( ( ( int ) ( ( ( int ) ( x.key ) ) ) ) ) ) ) && ( ( x.key ) != value ) ) && ( x != null ) ) ; }
{ float oldValue = value ; if ( add ) { value = java.lang.Math . min ( maxValue , ( ( value ) + ( step ) ) ) ; } else { value = java.lang.Math . max ( minValue , ( ( value ) - ( step ) ) ) ; } if ( ( onValueChangedListener ) != null ) { onValueChangedListener . onValueChanged ( this , value , oldValue , minValue , maxValue , false ) ; } }
this . width
public boolean accept ( java.io.File pathname ) { if ( pathname . getName () . contains ( EInternalTemplate.HEADER_AD.AL . toString () ) ) if ( pathname . getName () . contains ( ( ( language . getExtension () ) + ( org.talend.designer.codegen.config.TemplateUtil.TEMPLATE_EXT ) ) ) ) return true ; return false ; }
@ java.lang.Override public void doNotify () { logger . info ( "[notifyUpstreamChanged]{ = this . toLowerCase () , clusterName , shardName , ip , port , dc . getDcName () ) ; metaServerConsoleServiceManagerWrapper . get ( dc . getDcName () ) . =Change ( clusterName , shardName , ip , port ) ; }
intent . putExtra ( TestWaresList.EXTRA_STORE_ID , ( - 1 ) )
{ org.pentaho.di.trans.steps.selectvalues.SelectValuesMetaTest.FIRST_FIELD }
get ( "world, DIM1, DIM-1" ) . setValue ( false )
{ java.lang.String [] parts = partContent . split ( Constants.CRLFCRLF , 2 ) ; parseHeaders ( parts [ 0 ] ) ; mContent = parts [ 1 ] . substring ( 0 , parts [ 1 ] . lastIndexOf ( Constants.CRLF ) ) ; }
switch ( jsonValue ) { case com.example.jeka.movieshelper.network.CelebFetch.PERSON_NAME : sebrity . setName ( value ) ; break; case com.example.jeka.movieshelper.network.CelebFetch.PERSON_ALSO_KNOW_AS : if ( value != null ) { value } ) ; break; case com.example.jeka.movieshelper.network.CelebFetch.PERSON_BIRTHDAY : addebrity . setBirthday ( value ) ; break; case com.example.jeka.movieshelper.network.CelebFetch.PERSON_BIOGRAPHY : }
if ( ( pullView ) != null ) { pullView . measure ( widthSpec , 0 ) ; setMeasuredDimension ( getMeasuredWidth () , ( ( getMeasuredHeight () ) + ( pullView . getMeasuredHeight () ) ) ) ; }
( ( java.lang.String ) ( data ) ) . length ()
@ java.lang.Override public boolean leaveGroup ( long courseId ) { cn.momia.api.im.dto.Group group = queryGroup ( courseId , courseSkuId ) ; if ( ! ( group . exists () ) ) return false ; if ( doLeaveGroup ( group . getGroupId () , userId ) ) { deleteGroupMembersLog ( group . getGroupId () , com.google.common.collect.Sets . newHashSet ( userId ) ) ; return true ; } return false ; }
public java.net.URL resource = com.google.common.io.Resources . getResource ( org.incode.eurocomm.ecpcrm.webapp.card_check_unbound.CardCheckUnboundTest . class , resourceFile ) ; final java.lang.String json = com.google.common.io.Resources . toString ( resource , com.google.common.base.Charsets.UTF_8 ) ; com.google.api.client.http.HttpContent content = com.google.api.client.http.ByteArrayContent . fromString ( "application/json" , json ) ; com.google.api.client.http.HttpRequest request = requestFactory . buildPostRequest ( url , content ) ; return null ;
client . getEntityRef ( null )
public void changeState ( java.lang.String recordingId , java.lang.String state ) { if ( state . equals ( Recording.STATE_PUBLISHED ) ) { changeState ( un ()Dir , recordingId , state ) ; } else if ( state . equals ( Recording.STATE_UNPUBLISHED ) ) { changeState ( publishedDir , recordingId , state ) ; } if ( state . equals ( Recording.STATE_DELETED ) ) {} }
{ java.util.Random rand = new java.util.Random () ; int comPick = ( rand . nextInt ( 3 ) ) + 1 ; if ( ! ( com.bleh.Main . resultsL () ) ) { com.bleh.Main . resultsL () ; } else { com.bleh.Main . resultsL () ; } else if ( comPick == 2 ) { java.lang.System.out . println ( "I android and you void scissors...I guess you win :(" ) ; com.bleh.Main . resultsT () ; } else { com.bleh.Main . play () ; } }
c . toArray ( new java.lang.String [ 0 ] )
mBrightness [ 1 ]
{ connection . dial ( "3" ) ; connection . record ( "Greeting" ) ; connection . put ( "#" ) ; org.mockito.Mockito . verify ( currentMailbox ) . setGreeting ( "Greeting" ) ; org.mockito.Mockito . verify ( phone , times ( 2 ) ) . speak ( ConnectionTestMailboxMenu.MAILBOX_MENU_TEXT ) ; }
addtoFinalLocs ()
{ org.apache.commons.io.FileUtils . write ( new java.io.File ( outputFolder , de.unidue.ltl.flextag.core.reports.crf.TtAbstractKnownUnknownWordAccuracyReport.UNKNOWN_WORDS_FINE ) , java.lang.String . format ( "%.1f" , ( ( invocabAccuracy ) * 100 ) ) ) ; org.apache.commons.io.FileUtils . write ( new java.io.File ( outputFolder , de.unidue.ltl.flextag.core.reports.crf.TtAbstractKnownUnknownWordAccuracyReport. name_WORDS_FINE ) , java.lang.String . format ( "%.1f" , ( ( outvocabAccuracy ) * 100 ) ) ) ; }
{ q . setDiscount ( ( 1 - ( q . getThreeYearTotal () ) ) ) ; java.lang.System.out . println ( ( "Ordenado: " + ( q . getThreeYearTotal () ) ) ) ; }
{ org.eclipse.gef.geometry.planar.IG . feedbackGeometry = getFeedbackGeometry () ; if ( feedbackGeometry == null ) { return; } visual . setGeometry ( feedbackGeometry ) ; if ( feedbackGeometry instanceof org.eclipse.gef.geometry.planar.ICurve ) { visual . setStrokeType ( javafx.scene.shape.StrokeType.CENTERED ) ; } else { visual . setStrokeType ( javafx.scene.shape.StrokeType.OUTSIDE ) ; } }
if ( ( showProgressUntilTime ) < ( com.badlogic.gdx.utils.TimeUtils . millis () ) ) { if ( ( progressDialog ) != null ) { progressDialog . dismiss () ; } }
public void onPostExecute ( java.lang.Void result ) { loadingDialog . cancel () ; android.content.Intent intent = new android.content.Intent ( android.content.Intent.ACTION_SEND ) ; intent . setType ( "text/plain" ) ; intent . putExtra ( Intent.EXTRA_STREAM , android.net.Uri . fromFile ( targetFile ) ) ; startActivity ( intent ) ; }
toast ( getString ( R.string.deny_open_bluetooth ) . toString () ) ;
plugin . getLogger () . log ( java.util.logging.Level.SEVERE , configFile )
current.next
{ throw new java.lang.RuntimeException ( "The stack is empty" ) ; }
{ java.lang.StringBuilder sb = new java.lang.StringBuilder () ; if ( ( s . length () ) > 0 ) { for ( char c : s . toCharArray () ) { if ( ( " . get ( c ) ) >= 0 ) { sb . append ( c ) ; } } } return sb . toString () ; }
{ java.lang.String pwd = channelSftp . pwd () ; java.lang.String [] folders = dirPath . split ( "/" ) ; for ( java.lang.String folder : folders ) { if ( ( folder . length () ) > 0 ) { try { channelSftp . cd ( folder ) ; } catch ( org.seagrid.desktop.connectors.storage.SftpException e ) { channelSftp . mkdir ( folder ) ; channelSftp . cd ( folder ) ; } } channelSftp . cd ( pwd ) ; } }
new com.containersol.minimesos.MinimesosException ( e )
getDetector ( fakeListener )
{ com.github.dakusui.jcunit.fsm.FSMFactors fsmFactors = this . getFactors () ; com.github.dakusui.jcunit.fsm.ScenarioSequence < SUT > seq = new com.github.dakusui.jcunit.fsm.ScenarioSequence.BuilderFromTuple < SUT > () . setTuple ( tuple ) . setFSMName ( this . fsmName ) . build () ; return com.github.dakusui.jcunit.fsm.FSMConstraintChecker . checkFSM ( this . fsmName , seq ) ; }
{ return com.questdb.misc.Unsafe . getUnsafe () . compareAndSwapLong ( array , ( ( com.questdb.misc.Unsafe.LONG_OFFSET ) + ( ( ( long ) ( index ) ) < < ( com.questdb.misc.Unsafe.LONG_SCALE ) ) ) , expected , value ) ; }
return beginDragging ( v ) ;
java.lang.StringBuffer buffer = new java.lang.StringBuilder () ;
{ this . handleSessionInfo ( session , sltMTechDetailPara ) ; sltMTechDetailPara . setMlCode ( sltMTechDetailPara . getLang () ) ; java.util.List < com.abilists.bean.model.MTechDetailModel > mTechDetailList = adminMasterService . sltMTechDetailList ( sltMTechDetailPara ) ; logger . info ( ( "mTechDetailList size = " + ( mTechDetailList . size () ) ) ) ; }
java.lang.System.out . println ( ( ( ( ( ( ( ( element.date ) + " " ) + ( element.objectNummer ) ) + " " ) + ( element.naam ) ) + " " ) + ( element.adres ) ) )
f . toPath () . toPath ()
catch ( java.lang.Exception e ) { org.apache.jackrabbit.oak.security.authentication.ldap.impl.LdapIdentityProvider.log . error ( "Error while connecting to the ldap server." , e ) ; throw new org.apache.jackrabbit.oak.spi.security.authentication.external.ExternalIdentityException ( "Error while connecting and binding to the ldap server" , e ) ; }
{ user . setPassword ( bCryptPasswordEncoder . encode ( user . getPassword () ) ) ; user . setActive ( 1 ) ; com.tribuo.backend.jpa.Role userRole = roleRepo . findByRole ( "ADMIN" ) ; java.lang.System.out . println ( ( ( "<
if ( ( 0.5 != null ) && ( mons ) { return new org.deidentifier.arx.metric.v2.MetricMDNUEntropyPot , 0.5 , threshold , function ) ; } else { return new org.deidentifier.arx.metric.v2.MetricMDNUNMEntropyPot () ; }
{ android.content.SharedPreferences appPrefs = getAppSharedPreferences ( ( ( android.content.Context ) ( context ) ) ) ; currentUsername = appPrefs . getString ( com.ustadmobile.port.android.impl.UstadMobileSystemImplAndroid.KEY_CURRENTUSER , null ) ; if ( ( appPrefs . getString ( com.ustadmobile.port.android.impl.UstadMobileSystemImplAndroid.KEY_CURRENTUSER , null ) ) && ( appPrefs . getString ( com.ustadmobile.port.android.impl.UstadMobileSystemImplAndroid.KEY_CURRENTUSER , null ) ) ) return true ; }
{ java.lang.String [] dictionary = GuiMain.index . getDictionary () ; int count = GuiMain.index . getTermCount () ; java.lang.String vocab = "Index 1: \n" ; for ( java.lang.String s : dictionary ) { vocab += s + "\n" ; } vocab += "Index + count ; return vocab ; }
assertNull ( externalResult . getItem () . toString () )
if ( user . getEmail () . equals ( email ) ) { user . setEmail ( email ) ; user . setEmailActivated ( false ) ; }
{ ( this . maxHealth ) ++ ; this . regenDelay = 2 ; ( plevel ) ++ ; psprint += 0.1 ; maxTimeSprint += 20 ; MojamComponent.soundPlayer . playSound ( "/sound/levelUp.wav" , ( ( float ) ( pos.x ) ) , ( ( float ) ( pos.y ) ) , true ) ; }
updateCrcs ( bitBufferLen )
{ if ( ! ( mEditTextCustomerFName . isEnabled () ) ) { setFieldsEnability ( true ) ; } else { setFieldsEnability ( false ) ; } if ( ( mAddrLayout . getVisibility () ) != ( android.view.View.VISIBLE ) ) { com.extenprise.mapp.medico.util.Utility . collapseExpand ( mAddrLayout ) ; com.extenprise.mapp.medico.util.Utility . collapseExpand ( mContLay ) ; } }
{ values . add ( ( 20 * ( java.lang.Math . log10 ( ( ( getAmplitudeEMA () ) / ampl ) ) ) ) ) ; android.util.Log . d ( "Sound" , java.lang.String . valueOf ( ( 20 * ( java.lang.Math . log10 ( ( ( getAmplitudeEMA () ) / ampl ) ) ) ) ) ) ; }
private void setupWorldEdit () { org.bukkit.plugin.Plugin test = this . getServer () . getPluginManager () . getPlugin ( "WorldEdit" ) ; if ( ( svenbrnn.Factoryespawn.oreRespawn.worldEdit ) == null ) { if ( test != null ) { svenbrnn..espawn.oreRespawn.worldEdit = ( ( com.sk89q.worldedit.bukkit.WorldEditPlugin ) ( test ) ) ; java.lang.System.out . println ( "[OreRespawn] WorldEdit detected!" ) ; } } }
{ return true ; }
java.lang.System.out . println ( "\nPlease select the note you want to vote for java.lang.Long 7." )
{ this . execution = execution ; de.chrthms.hmatic4j.event.core.HMEventRegistry registry = de.chrthms.hmatic4j.event.core.impl.HMEventRegistryImpl . getInstance () ; registryId = registry . register ( this ) ; if ( orgOnly ) { return java.util.Optional . of ( registryId ) ; } return java.util.Optional . empty () ; }
{ json = serializer . toJson ( bresult ) ; summary . report ( bresult ) ; }
{ if ( Peer.peerStubs ) { if ( Peer.peerStubs . contains ( peerName ) ) { return; } Peer.peerStubs . put ( peerName , Peer.boundPeerStub ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } }
{ switch ( map1 [ position ] . equals ( posis ) ) { return true ; } switch ( map1 [ position ] ) { case "d" : return false ; case "e" : return false ; case "f" : return false ; case "g" : return false ; case "h" : return false ; case "i" : return false ; case "3" : return false ; case "5" : return false ; default: return true ; } }
for ( int i = ( this . objects . size () ) - 1 ; i >= 0 ; i -- ) { this . dispose . accept ( this . objects . get ( i ) ) ; }
{ if ( licenseFile . exists () ) { return true ; } final java.lang.String licenseFromEnv = java.lang.System . getenv ( "TTCN3_LICE ) ; if ( licenseFromEnv != null ) { licenseFile = new java.io.File ( licenseFromEnv ) ; if ( licenseFile . exists () ) { return true ; } } return false ; }
@ java.lang.Override public boolean allowTarget ( final org.wirez.core.graph.Node target , final org.wirez.core.graph.Edge < org.wirez.core.graph.content.view.View < ? > , org.wirez.core.graph.Node > connector , final int magnet ) { if ( null != ( canvasHandler ) ) { org.wirez.core.command.CommandResult < org.wirez.core.client.command.CanvasViolation > request = canvasCommandManager . allow ( canvasHandler , canvasCommandFactory . SET_TARGET_NODE ( target , connector , magnet ) ) ; return true ; } return true ; }
fireIntervalAdded ( this , oldLength )
switch ( position ) { case 1 : omacka += 1 ; setIngedience ( val ) ; break; case 2 : omacka += 2 ; setIngedience ( val ) ; break; }
if ( j . isDoorway () ) { ++ door ; }
if ( ( numSystems ) == 0 ) { numSystems = 1 ; _FormattedTF_NumSystems . setValue ( new java.lang.Integer ( "1" ) ) ; }
{ data . setTrack ( mCurrentTrack ) ; gps.fhv.at.gps_hawk.domain.Waypoint waypoint = gps.fhv.at.gps_hawk. ;.WaypointFactory . getInstance () . createWaypoint ( location , data ) ; android.util.Log . v ( Constants.PREFERENCES , ( "onLocationChange: " + ( waypoint . getProvider () ) ) ) ; intent . putExtra ( Constants.EXTRA_WAYPOINT , waypoint ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( mContext ) . sendBroadcast ( intent ) ; }
index = ( randomNumber ) % ( conflicts . size () )
{ options . add ( i ) ; break; }
statements . filter ( null , new org.dotwebstack.framework.backend.sparql.SparqlBackendInformation )
{ android.app.NotificationManager notificationManager = ( ( android.app.NotificationManager ) ( getSystemService ( Context.NOTIFICATION_SERVICE ) ) ) ; android.app.Notification noti = new android.app.Notification.Builder ( this ) . setContentTitle ( "^.^" ) . setContentText ( "I'm Your null!" ) . setSmallIcon ( R.mipmap.ic_launcher ) . setOngoing ( true ) . build () ; startForeground ( com.air.petphone.KillNotificationService.NOTIFICATION_ID , noti ) ; return START_STICKY ; }
{ nextx = ( x ) + ( ( dir [ 0 ] ) * move ) ; nexty = ( y ) + ( ( dir [ 1 ] ) * move ) ; intx = ( ( int ) ( nextx ) ) ; inty = ( ( int ) ( nexty ) ) ; }
{ com.door43.translationstudio.AppContext . saveDefaultLibrary ( library ) ; if ( library != null ) { library . seedDownloadIndex () ; } }
{ if ( threadSafe ) { return indexes . containsKey ( indexId ) ; } try { return indexes . containsKey ( indexId ) ; } finally { if ( threadSafe ) { lock . get ( index ) . unlock () ; } } }
{ updateCheckinUI ( null ) ; }
{ intentDownloadAll = new android.content.Intent ( getActivity () , com.erpdevelopment.vbvm.service.DownloadAllService . class ) ; intentDownloadAll . putExtra ( "idLesson" , idLesson ) ; intentDownloadAll . putExtra ( "url" , url ) ; intentDownloadAll . putExtra ( "downloadType" , downloadType ) ; getActivity () . startService ( intentDownloadAll ) ; adapterLessons . setIntentServiceDownloadAll ( intentDownloadAll ) ; com.erpdevelopment.vbvm.service.DownloadAllService . incrementCount () ; }
tokens [ i ]
@ org.junit.Test public void testGetPart () { org.junit.Assert . assertEquals ( 0 , be.inniger.euler.util.Maths . getPart ( this , 0 , 9 ) ) ; org.junit.Assert . assertEquals ( false , false ) ; org.junit.Assert . assertEquals ( false , be.inniger.euler.util.Maths . getPart ( return 1 , 9 ) ) ; org.junit.Assert . assertEquals ( "" , 9 ) ) ; org.junit.Assert . assertEquals ( null , be.inniger.euler.util.Maths . getPart ( return 0 , 8 ) ) ; org.junit.Assert . assertEquals ( 345 , be.inniger.euler.util.Maths . getPart ( this . 2 , 5 ) ) ; }
{ if ( ( ( t1 . getDueDate () ) != null ) && ( ( t2 . getDueDate () ) != null ) ) { return t1 . getDueDate () . compareTo ( t2 . getDueDate () ) ; } else if ( ( t1 . getDueDate () ) == null ) { return 1 ; } else { return - 1 ; } }
{ head = new a3.LinkedList.Node ( data ) ; head.next = tail ; }
for ( java.lang.String word : com.psddev.dari.util.StringUtils . splitString ( string ) ) { nb . append ( java.lang.Character . toUpperCase ( word . charAt ( 0 ) ) ) . append ( word . substring ( 1 ) ) ; }
{ java.util.List < prada.lab.android.pingo.model.Tag > tags = mTagSub . getValue () ; if ( tag != null ) tags . add ( tag ) ; mTagSub . onNext ( tags ) ; prada.lab.android.pingo.model.PingoPlace place = findPlaceById ( placeId ) ; place . getTags () . add ( tag ) ; mPlaces . remove ( place ) ; mPlaces . add ( 0 , place ) ; }
sysObject . getAttrDataType ( o , attrDataType )
if ( ( accountsByType [ i ] . name ) == ( com.philosophicalhacker.philhackernews.PhilHackerNewsApplication.ACCOUNT_NAME ) ) { return true ; }
if ( nodeList . get ( i ) . getID () . equals ( id ) ) { return nodeList . get ( i ) . getName () ; }
{ if ( this . streams . isEmpty () ) { this . streams . peek () . write ( entry ) ; } else if ( ! ( this . streams . isEmpty () ) ) { me.noize.chemistry.io.EntryOutputStream < T > old = this . streams . poll () ; old . close () ; this . write ( entry ) ; } else { throw new me.noize.chemistry.io.ChemistryIOException ( "Stream could not be advanced" ) ; } }
{ java.lang.Object [] temp = new java.lang.Object [ ( storage.length ) * 2 ] ; java.lang.System . arraycopy ( storage , head , temp , 0 , ( ( storage.length ) - ( head ) ) ) ; java.lang.System . arraycopy ( storage , 0 , temp , ( ( storage.length ) - ( head ) ) , tail ) ; head = ( temp.length ) - 1 ; tail = storage.length ; }
{ difference = - ( computerBuilders ) ; computerBuilders = 0 ; }
currentBattleCalculator ( player , t , attackingUnits , defendingUnits , bombardingUnits )
parseObject == null
@ com.chronicle.controller.RequestMapping ( value = { "/login/{id}/{pswd}" } , method = RequestMethod.GET , produces = { org.springframework.http.MediaType.APPLICATION_JSON_VALUE } ) public java.lang.String login ( @ com.chronicle.controller.PathVariable java.lang.Long id , java.lang.String password ) { logger . info ( ( "login with id : {}" + id ) ) ; com.chronicle.controller.User user = userService . findById ( id ) ; return ( user . getPassword () ) == password ; }
if ( ( isAnyLimitSwitchClosed () ) || ( ( java.lang.Math . abs ( y ) ) < ( k_minJoystickValue ) ) ) { stopMotor () ; } else if ( ( java.lang.Math . abs ( y ) ) > ( k_minJoystickValue ) ) { startMotor () ; m_mainMotor . set ( y ) ; }
{ super . onConfigurationChanged ( newConfig ) ; if ( ( notFirstRun ) || ( ! ( com.brainicism.projectrito.MainActivity.summonerName . equals ( "" ) ) ) ) { com.brainicism.projectrito.MainActivity.checkValidSummoner check = new com.brainicism.projectrito.MainActivity.checkValidSummoner () ; check . execute () ; } }
public void setItemSelected ( int pos , boolean selected , android.view.View view ) { if ( ( pos >= 0 ) && ( pos < ( mAdapter . getItemCount () ) ) ) { if ( selected ) { mSelectedItems . put ( pos , selected ) ; view . setSelected ( true ) ; } else { mSelectedItems . delete ( pos ) ; view . setSelected ( false ) ; } } }
{ if ( ( com.mycompany.behear.MainActivity.mMap ) != null ) { return; } com.mycompany.behear.MainActivity.mMap = ( ( com.google.android.gms.maps.SupportMapFragment ) ( getSupportFragmentManager () . findFragmentById ( R.id.map ) ) ) . getMap () ; if ( ( com.mycompany.behear.MainActivity.mMap ) == null ) { return; } }
{ java.lang.String s = e . toString () ; int i = 0 ; for ( java.lang.StackTraceElement er : e . getStackTrace () ) { if ( i == lines ) { break; } s += "\n\tat " + ( er . toString () ) ; } }
@ java.lang.Override protected synchronized void analyzeScrimmageMatch ( model.BSScrimmageSet scrim ) { javax.persistence.EntityManager em = common.HibernateUtil . getEntityManager () ; em . persist ( scrim ) ; em . getTransaction () . begin () ; em . getTransaction () . commit () ; em . refresh ( scrim ) ; em . close () ; master.WebSocketChannelManager . broadcastMsg ( "scrimmage" , "INSERT_TABLE_ROW" , ( ( ( scrim . getId () ) + "," ) + ( scrim . getFileName () ) ) ) ; }
{ if ( ( nextPageId ) > ( lastPageId ) ) { if ( ( nextPageId ) > ( lastPageId ) ) { return false ; } else { pagedFile . increaseLastPageIdTo ( nextPageId ) ; } } unpinCurrentPage () ; }
org.mockito.Mockito . verify ( service , org.mockito.Mockito . times ( 1 ) ) . getWinnerOfDay ( day )
( ( users . size () ) > 0 )
( java.lang.Integer . parseInt ( values [ i ] ) )
if ( inputOperator == "+" ) return addFn ( num1 , num2 ) ; else if ( inputOperator == "-" ) return subtractFn ( num1 , num2 ) ; else if ( inputOperator == "*" ) return multiplyFn ( num1 , num2 ) ; else return divideFn ( num1 , num2 ) ;
{ java.math.BigDecimal i = new java.math.BigDecimal ( x ) ; java.math.BigDecimal j = new java.math.BigDecimal ( x ) ; java.math.BigDecimal k = j . subtract ( i ) ; k = k . stripTrailingZeros () ; return k . toPlainString () ; }
{ int fromPosition = mItems . indexOf ( item ) ; java.util.Collections . swap ( mItems , fromPosition , toPosition ) ; com.github.gfranks.dynamiccard.adapter.DynamicCardAdapter . notifyItemMoved ( fromPosition , toPosition ) ; if ( ( mCallback ) != null ) { mCallback . onDynamicCardPositionChanged ( this , fromPosition , toPosition ) ; } }
{ os . writeLong ( timestamp ) ; os . write ( stringBytes.length ) ; os . writeInt ( ( - 1 ) ) ; os . writeInt ( (ord ) + 1 ) ; }
message = resp . split ( " " ) [ 0 ]
file . equals ( fileName )
out . writeObject ( this . data )
{ org.springframework.hateoas.hal.DefaultCurieProvider provider = new org.springframework.hateoas.hal.DefaultCurieProvider ( org.springframework.hateoas.hal.DefaultCurieProviderUnitTest . getCuries () ) ; assertThat ( provider . getCurieInformation ( new org.springframework.hateoas.Links () ) , hasSize ( 2 ) ) ; assertThat ( provider . getNames () , org.hamcrest.CoreMatchers . is ( "some" ) ) ; }
return rememberToken ( token ) ;
{ java.util.Scanner ms = new java.util.Scanner ( java.lang.System.in ) ; java.lang.System.out . println ( "Payment Option: Cash or Card?" ) ; java.lang.String option = ms . next () ; if ( ( option == "Cash" ) && ( option == "Cash" ) ) { return "Success! true has been authorized" ; } else { return "Payment fail! Please check amount" ; } }
java.lang.Long . parseLong ( s ) ;
void mergeSort ( int [] a , int [] p , int [] c , int l , int r ) { int range = r - l ; if ( range > 0 ) { int m = l + ( range / 2 ) ; mergeSort ( a , p , c , l , m ) ; mergeSort ( a , p , c , ( m + 1 ) , r ) ; merge ( a , p , c , l , r ) ; } }
{ android.util.Log . i ( com.polito.mad17.madmax.activities.ProfileEdit.TAG , "save clicked" ) ; android.content.Intent i = new android.content.Intent ( getApplicationContext () , com.polito.mad17.madmax.activities.MainActivity . class ) ; startActivity ( i ) ; finish () ; }
{ org.junit.Assert . assertEquals ( ru.otus.homework_08.JSON . toJSON ( 15 ) , gson . toJson ( 15 ) ) ; org.junit.Assert . assertEquals ( ru.otus.homework_08.JSON . toJSON ( 'c' ) , gson . toJson ( 'c' ) ) ; org.junit.Assert . assertEquals ( ru.otus.homework_08.JSON . toJSON ( true ) , gson . toJson ( true ) ) ; org.junit.Assert . assertEquals ( ru.otus.homework_08.JSON . toJSON ( 15 ) , gson . toJson ( 15 ) ) ; org.junit.Assert . assertEquals ( ru.otus.homework_08.JSON . toJSON ( 'c' ) , gson . toJson ( 'c' ) ) ; }
{ org.marc.everest.datatypes.II id = null ; org.junit.Assert . assertNotNull ( id ) ; org.junit.Assert . assertEquals ( Constants.Runtime.VALID_DEMOGRAPHIC . toString () , id . getRoot () ) ; org.junit.Assert . assertFalse ( org.oscarehr.e2e.util.EverestUtils . isNullorEmptyorWhitespace ( id . getExtension () ) ) ; }
{ final int takeFlags = ( data . getFlags () ) & ( ( android.content.Intent.FLAG_GRANT_READ_URI_PERMISSION ) | ( android.content.Intent.FLAG_GRANT_WRITE_URI_PERMISSION ) ) ; getContentResolver () . takePersistableUriPermission ( data . getData () , takeFlags ) ; fileEditText . setText ( data . getDataString () ) ; }
{ if ( f . isDirectory () ) { for ( java.io.File c : f . listFiles () ) { org.ohmage.Utilities . delete ( c ) ; } } if ( ! ( f . delete () ) ) { throw new java.io.IOException ( ( "Failed to delete file: " + f ) ) ; } }
{ allowScreenViewCalls = true ; android.os.Bundle b = v . onProvideParams ( view , params ) ; if ( b != null ) params = b ; allowScreenViewCalls = false ; VP presenter = getPresenter ( v ) ; if ( presenter != null ) { b = presenter . onProvideTransientParams ( v , view , params ) ; if ( b != null ) params = b ; } return params ; }
public void resetUsed () { for ( int i = 0 ; i < ( team . size () ) ; i ++ ) { if ( i == ( frontIndex ) ) { team . get ( i ) . getAttributes () . setUsed ( true ) ; } else { team . get ( i ) . getAttributes () . setUsed ( false ) ; } } }
if ( slots . isEmpty () ) { return true ; }
if ( ( ! ( isValidItem () ) ) || ( targetSlot . isValidItem () ) ) { return; }
@ java.lang.Override @ org.springframework.web.bind.annotation.RequestMapping ( value = "/user" ) public api.ConfirmationMessage user ( @ org.springframework.web.bind.annotation.RequestParam ( value = "userTypeId" ) int userTypeId , @ org.springframework.web.bind.annotation.RequestParam ( value = "calamityAssigneeId" ) int calamityAssigneeId , @ org.springframework.web.bind.annotation.RequestParam ( value = "buildingId" ) int buildingId , @ org.springframework.web.bind.annotation.RequestParam ( value = "username" ) java.lang.String username , @ org.springframework.web.bind.annotation.RequestParam ( value = "password" ) java.lang.String password , @ org.springframework.web.bind.annotation.RequestParam ( value = "email" ) java.lang.String email , @ org.springframework.web.bind.annotation.RequestParam ( value = "city" ) java.lang.String city , @ org.springframework.web.bind.annotation.RequestParam ( value = "token" ) java.lang.String email , @ org.springframework.web.bind.annotation.RequestParam ( value = "city" ) java.lang.String city , @ org.springframework.web.bind.annotation.RequestParam ( value = "token" ) java.lang.String token ) { return userLogic . addUser ( userTypeId , calamityAssigneeId , buildingId , username , password , email , city , token ) ; }
sb . append ( s ) ;
return 0 ;
{ w094j.ctrl8.database.Storage diskStorage = new w094j.ctrl8.database.DiskStorage ( this . file , this . path , this . gson ) ; w094j.ctrl8.database.Storage googleStorage = new w094j.ctrl8.database.GoogleStorage ( this . file , this . gson ) ; diskStorage . storeData () ; googleStorage . storeData () ; googleStorage . storeData () ; }
{ com.alvarpq.GOTF.coreGame.board.BoardHalf half1 = new com.alvarpq.GOTF.coreGame.board.BoardHalf ( 5 , 3 , 8 ) ; com.alvarpq.GOTF.coreGame.board.BoardHalf half2 = new com.alvarpq.GOTF.coreGame.board.BoardHalf ( 5 , 3 , 8 ) ; half1 . addUnit ( new com.alvarpq.GOTF.coreGame.units.KinfolkBrave ( 1 , 2 ) , half2 ) ; half1 . getUnitAt ( 0 , 0 ) . attack ( half1 , half2 ) ; java.lang.System.out . println ( com.alvarpq.GOTF.coreGame.board.BoardHalf . isAdjacent ( 0 , 0 , 1 , 1 ) ) ; }
private static boolean handleMainBlocks ( de.fhg.iais.roberta.syntax.codegen.CppCodeGenerationVisitor astVisitor , boolean mainBlock ) { if ( ( phrase . getKind () . getCategory () ) != ( de.fhg.iais.roberta.components.Category.TASK ) ) { astVisitor . nlIndent () ; } else if ( ! ( phrase . getKind () . hasName ( "LOCATION" ) ) ) { mainBlock = true ; } return mainBlock ; }
new org.corpus_tools.pepper.core.ModuleFitnessChecker ()
com.fallingdutchman.youtuberedditbot.authentication.reddit.jraw.RedditManager.log . info ( "posted comment to %s on /r/%s, with id %s" , submission . getId () , submission . getSubredditName () , commentId ) ;
org.datacleaner.util.SecurityUtils . decodePasswordWithPrefix ( encodedWithPrefix )
{ for ( com.dungeon.game.effect.Effect effect : effects ) { effect . update ( this ) ; } for ( int i = 0 ; i < ( effects . size () ) ; i ++ ) { if ( effects . get ( i ) . killMe ) { effects . get ( i ) . end ( this ) ; effects . remove ( i ) ; i -- ; } } }
if ( o instanceof java.lang.Integer ) { java.lang.Number n = ( ( java.lang.Number ) ( o ) ) ; int index = n . intValue () ; return ( ( index > 0 ) && ( index < ( selectedIndices . length () ) ) ) && ( selectedIndices . get ( index ) ) ; }
{ category = selectedItemText ; }
if ( auctionItem . getEndDate () . after ( new java.util.Date () ) ) throw new com.webapplication.exception.auctionitem.AuctionExpiredException ( com.webapplication.error.auctionitem.AuctionItemError.AUCTION_EXPIRED ) ;
{ startLoading () ; this . videoIsReady = false ; this . initialMovieHeight = - 1 ; this . initialMovieWidth = - 1 ; this . mediaPlayer . setOnPreparedListener ( this ) ; this . mediaPlayer . setOnErrorListener ( this ) ; this . mediaPlayer . setOnSeekCompleteListener ( this ) ; this . mediaPlayer . setOnCompletionListener ( this ) ; this . mediaPlayer . setAudioStreamType ( AudioManager.STREAM_MUSIC ) ; this . currentState = com.github.rtoshiro.view.video.FullscreenVideoView.State.PREPARING ; this . mediaPlayer . prepareAsync () ; }
private au.com.mutopia.acs.models.c3ml.C3mlEntity buildEntity ( de.micromata.opengis.kml.v_2_2_0.Document document ) throws au.com.mutopia.acs.exceptions.ConversionException { au.com.mutopia.acs.models.c3ml.C3mlEntity entity = createEntity ( document ) ; java.util.List < de.micromata.opengis.kml.v_2_2_0.Feature > features = document . getFeature () ; for ( de.micromata.opengis.kml.v_2_2_0.Feature feature : features ) { au.com.mutopia.acs.models.c3ml.C3mlEntity child = buildEntity ( feature ) ; entity . addChild ( child ) ; } return entity ; }
private void renderTime ( final long milliseconds ) { final long seconds = ( milliseconds / 1000 ) % 60 ; final long minute = ( milliseconds / 60000 ) % 60 ; final long hour = ( milliseconds / 3600000 ) % 24 ; final long day = milliseconds / ( ( milliseconds / 3600000 ) % 24 )00000 ; setText ( text ) ; }
private boolean privatePerformZoom ( boolean byGesture , float scale , int centerX , int centerY , boolean shouldCallback ) { float realScale = checkRealScale ( scale ) ; if ( realScale == 1.0F ) { fitTranslate () ; mZoomListener . onZoomEnd ( byGesture , 1 , centerX , centerY ) ; } return false ; }
public void execute () { org.apache.maven.cli.MavenCli cli = new org.apache.maven.cli.MavenCli () ; cli . doMain ( new java.lang.String [] { "clean" , goal } , pathToPom , java.lang.System.out , java.lang.System.err ) ; }
android.widget.Toast . makeText ( fragment . getActivity () , ( "Time is " + ( dialog . getFormattedTime ( java.text.SimpleDateFormat . getTimeInstance () ) ) ) , Toast.LENGTH_SHORT )
return isChunkStart ( previous , null ) ;
{ int value = inputStream . read () ; result.atNewLine = isNewLine ( value ) ; while ( ( value = inputStream . read () ) != ( - 1 ) ) { if ( isNewLine ( value ) ) { ( result.lineNumber ) -- ; } } return result ; }
{ tagName = tagName . toLowerCase () ; boolean usesAttributes = ! ( ( ( tagName . equals ( "cfset" ) ) || ( tagName . equals ( "cfif" ) ) ) || ( tagName . equals ( "cfelseif" ) ) ) ; return usesAttributes ; }
layoutHelp . clip ( null )
{ nez.util.UList < nez.expr.Expression > l = new nez.util.UList < nez.expr.Expression > ( new nez.expr.Expression [ this . size () ] ) ; for ( nez.expr.Expression e : this ) { l . add ( e ) ; } }
{ java.util.Random rand = new java.util.Random () ; int monsterCurrentHp = enemy . getHp () ; int r = rand . nextInt ( ( ( 5 + ( enemy . getAgility () ) ) - ( getAgility () ) ) ) ; if ( r <= 3 ) { setMissed ( false ) ; enemy . damage ( power ) ; setPreviousAttackDamage ( ( monsterCurrentHp - ( enemy . getHp () ) ) ) ; } else { setMissed ( true ) ; } return previousAttackDamage ; }
{ boolean canJoin = true ; if ( canJoin && ( channel != ( client . getChannel () ) ) ) { client . setChannel ( channel ) ; channel . addClient ( client ) ; } else {} }
event . getEntity ()
if ( t2 != null ) { t2 . setText ( description_in ) ; }
{ mServer . start () ; mServer . bind ( io.github.antijava.marjio.network.NET_TCP_PORT , io.github.antijava.marjio.network.NET_UDP_PORT ) ; mServer . addListener ( new io.github.antijava.marjio.network.ClientReceiver ( mApplication ) ) ; mClient . start () ; mClient . connect ( io.github.antijava.marjio.network.NET_TIMEOUT , hostAddress ) ; mRunningFlag = true ; }
getX2 ( Y1 ) . getEncoded ()
@ java.lang.Override public org.gephi.io.importer.spi.FileImporter getFileImporter ( java.io.File file ) { synchronized ( fileObject ) { fileObject = org.gephi.io.importer.api.ImportUtils . getArchivedFile ( fileObject ) ; org.gephi.io.importer.spi.FileImporterBuilder builder = getMatchingImporter ( fileObject ) ; if ( ( fileObject != null ) && ( builder != null ) ) { org.gephi.io.importer.spi.FileImporter fi = builder . buildImporter () ; return fi ; } } return null ; }
{ android.util.Log . v ( com.plugin.gcm.PushPlugin . convertBundleToJson ( extras ) ) ; com.plugin.gcm.PushPlugin.gCachedExtras = extras ; }
private com.xebialabs.deployit.plugin.api.udm.Deployed
{ if ( ( currDragon ) == 0 ) { currDragon = ( dragons . size () ) - 1 ; addAccessory ( dragons . get ( currDragon ) ) ; } }
if ( z < ( zMin ) ) zMin = z ;
public void applyInterestAndFee () { if ( ( balance ) >= 0 ) { if ( ! ( directDeposit ) ) { if ( ( balance ) < ( ( ( ( balance ) + 1 ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * ( ( ( balance ) * (
java.lang.Integer . parseInt ( formData . getString ( "proxyPort" ) )
while ( ( m_exp ) > ( 100 * ( this . getLevel () ) ) ) { levelUp ( ( ( m_exp ) - ( 100 * ( this . getLevel () ) ) ) ) ; }
{ customNumberList = com.pawansinghchouhan05.callcustomizer.core.utils.Utils . retriveCustomNumberListToFCMDatabase () ; android.util.Log . e ( "List" , customNumberList . toString () ) ; mobileNumberAdapter = new com.pawansinghchouhan05.callcustomizer.home.adapters.MobileNumberAdapter ( customNumberList . getCustomNumberList () ) ; recyclerView . setLayoutManager ( new android.support.v7.widget.LinearLayoutManager ( getContext () ) ) ; recyclerView . setAdapter ( mobileNumberAdapter ) ; mobileNumberAdapter . notifyDataSetChanged () ; android.util.Log . e ( "List" , Utils.customNumberList . toString () ) ; }
{ if ( table == null ) throw new java.lang.Exception ( "El nombre de la tabla no puede estar cityío" ) ; java.lang.String insertBody = putBody ( values ) ; int r = ( ( int ) ( this . executeStatement ( ( ( ( ( "INSERT INTO " + table ) + " SET " ) + insertBody ) + ";" ) , true ) ) ) ; this . close () ; java.lang.System.out . println ( ( "Rows affected: " + r ) ) ; }
{ org.w3c.dom.Element parent = doc . createElement ( "MultiplicativeOp" ) ; if ( ! ( isAMultiplicativeOp () ) ) { ( currentTokenType () ) == ( JParserSym.DIVISION ) ? "/" : "and" ; parent . setTextContent ( sym ) ; ( tokenIndex ) ++ ; parent . setAttribute ( "lineNumber" , ( ( currentTokenLineNumber () ) + "" ) ) ; return parent ; } return parent ; }
{ super . actionPerformed ( button ) ; if ( button.displayString . equals ( "Enable" ) ) { button.displayString = "Disable" ; } else { button.displayString = "Enable" ; } }
com.kencook.sharpspring.SharpspringRequest . request ( 1 , SharpspringMethod.GET_EVENTS ) . where ( "createTimestamp" )
new java.io.FileOutputStream ( photoFile )
{ mana . rebase ( ( ( mana . base () ) + 1 ) ) ; mana . reset () ; if ( ( mana . value () ) < 0 ) { mana . set ( 0 ) ; } draw ( 1 ) ; field . updateSleepTimes () ; field . updateFreezeTimes () ; field . resetAttackCapacities () ; }
if ( ( m_bUseStaticServerInfo ) && ( com.helger.web.servlet.server.StaticServerInfo . isSet () ) ) return javax.ws.rs.core.UriBuilder . fromUri ( ( ( ( com.helger.web.servlet.server.StaticServerInfo . getInstance () . getFullServerPath () ) + "/" ) + ( m_aUriInfo . getPath () ) ) ) ;
{ org.ansj.elasticsearch.index.config.AnsjElasticConfigurator . setGlobalVar ( MyStaticValue.ENV ) ; org.ansj.elasticsearch.index.config.AnsjElasticConfigurator . initConfig ( org.ansj.elasticsearch.index.config.AnsjElasticConfigurator.ansjSettings ) ; org.ansj.elasticsearch.index.config.AnsjElasticConfigurator . initConfig ( org.ansj.elasticsearch.index.config.AnsjElasticConfigurator.path , true ) ; org.ansj.elasticsearch.index.config.AnsjElasticConfigurator . initConfig ( new java.io.File ( org.ansj.elasticsearch.index.config.AnsjElasticConfigurator.configDir , "ansj_library.properties" ) . getAbsolutePath () , false ) ; }
{ java.lang.String key = com.flair.blurb.Util . getKey ( notification ) ; java.util.concurrent.ConcurrentHashMap < java.lang.String , android.service.notification.StatusBarNotification > map = getMapByCategory ( category ) ; com.flair.blurb.Util . addNotificationExtras ( context , notification , category , key ) ; com.flair.blurb.Util . mergeNotifications ( map , notification , service ) ; map . put ( com.flair.blurb.Util . getKey ( notification ) , notification ) ; }
{ throw new java.lang.UnsupportedOperationException () ; }
transactionManager . getTransactions ( account . getAccountSettings () , startDate )
{ java.lang.String zoomRes = sendRequest ( buildPanTiltHeadControlURL ( "%23GZ" ) ) ; if ( zoomRes . startsWith ( "gz" ) ) { int zoom = java.lang.Integer . parseInt ( zoomRes . substring ( 2 , 5 ) , 16 ) ; lastKnown . setZoom ( zoom ) ; return zoom ; } else { throw new java.io.IOException ( ( ( errorString ) + zoomRes ) ) ; } }
{ java.lang.System.out . println ( "typedIdent ::=text COLON TYPE" ) ; parser.ConcreteTree.TypeIdent ret = null ; parser.IdentToken ident = ( ( parser.IdentToken ) ( consume ( Terminals.IDENT ) ) ) ; parser.ColonToken colon = ( ( parser.ColonToken ) ( consume ( Terminals.COLON ) ) ) ; parser.TypeToken type = ( ( parser.TypeToken ) ( consume ( Terminals.TYPE ) ) ) ; ret = new parser.ConcreteTree.TypeIdent ( ident , colon , type ) ; return ret ; }
this . queue . offer ( list . get ( i ) )
{ if ( ( currentObject ) == null ) return; java.lang.System.out . print ( " " ) ; tier2Iter . next ( currentObject ) . printSelf () ; }
long planeSize = loci.formats.FormatTools . getPlaneSize ( this ) ;
org.apache.commons.io.IOUtils . copyLarge ( is , os , 8096 )
getSlotFromIndex ( slot , index )
mDatabase . execSQL ( ( ( ( ( "DELETE FROM " + ( DBFeederContract.PersonTable.TABLE_NAME ) ) + " WHERE " ) + ( DBFeederContract.PersonTable._ID ) ) + " = " ) + id )
( ( scale * curFrequency ) * x ) - ( ( scale * curFrequency ) * y )
finalPrice = price
if ( getResString ( R.string.to_hint ) . equals ( toText ) ) { mListener . onToClick ( toText ) ; }
public static bolts.Task < com.dounets.vchat.net.api.ApiResponse > callInBackgroundDownloadVideo ( final com.dounets.vchat.net.api.ApiRequest request , final java.io.File file , final java.lang.String url ) { return bolts.Task . callInBackground ( new java.util.concurrent.Callable < com.dounets.vchat.net.api.ApiResponse > () { @ java.lang.Override public com.dounets.vchat.net.api.ApiResponse call ( ) throws java.lang.Exception { return com.dounets.vchat.net.api.ApiClient . callDownloadVideo ( request , file , url ) ; } } ) ; }
socket = null
models = java.util.Arrays . asList ( java.util.Arrays . asList () )
{ java.lang.String display = null ; android.database.sqlite.SQLiteDatabase db = this . getReadableDatabase () ; android.database.Cursor cursor = db . query ( com.quaap.launchtime.db.DB.TAB_ORDER_TABLE , new java.lang.String [] { com.quaap.launchtime.db.DB.LABEL } , new java.lang.String [] { catID } , null , null , null , null ) ; if ( cursor . moveToNext () ) { display = cursor . getString ( 0 ) ; } cursor . close () ; return display ; }
{ android.widget.Toast . makeText ( getActivity () , event . getProduct () . getName () , Toast.LENGTH_SHORT ) . show () ; de.fau.cs.mad.fablab.android.view.fragments.productsearch.ProductDialogFragment dialogFragment = new de.fau.cs.mad.fablab.android.view.fragments.productsearch.ProductDialogFragment () ; android.os.Bundle arguments = new android.os.Bundle () ; arguments . putSerializable ( ProductDialogFragmentViewModel.KEY_PRODUCT , event . getProduct () ) ; dialogFragment . setArguments ( arguments ) ; dialogFragment . show ( getFragmentManager () , "ProductDialogFragment" ) ; }
public void decr ( java.lang.String address , int port ) { for ( org.openstack4j.model.compute.Image image : this . getImages () ) { if ( address . equals ( image . getAddress () ) ) { image . setNbRequest ( ( ( image . getNbRequest () ) - 1 ) ) ; break; } } }
return wBFS . distTo ( common ) ;
{ super . onCreate () ; player = new android.media.MediaPlayer () ; player . setAudioStreamType ( AudioManager.STREAM_MUSIC ) ; player . setWakeMode ( getApplicationContext () , PowerManager.PARTIAL_WAKE_LOCK ) ; player . setOnPreparedListener ( this ) ; player . setOnErrorListener ( this ) ; player . setOnCompletionListener ( this ) ; }
new de.setsoftware.reviewtool.diffalgorithms.MyersSourceDiffAlgorithm ( false )
receiver . methodAt ( ( ( java.lang.String ) ( arg1 . javaValue () ) ) )
{ checkRange () ; T retVal = _end . getCargo () ; _end = _end . getPrev () ; _end . setNext ( null ) ; if ( ( _end ) == null ) { _front = null ; } ( _size ) -- ; return retVal ; }
if ( org.n52.io.response.v1.ext.PlatformType . isStationaryId ( id ) ) { return featureDao . hasInstance ( parseId ( id ) , org.n52.series.db.da.beans.FeatureEntity . class ) ; } else { org.n52.series.db.da.dao.v1.ext.PlatformDao dao = new org.n52.series.db.da.dao.v1.ext.PlatformDao ( session ) ; java.lang.String platformId = org.n52.io.response.v1.ext.PlatformType . extractId ( id ) ; return dao . hasInstance ( parseId ( platformId ) , org.n52.series.db.da.beans.ext.PlatformEntity . class ) ; }
if ( sp_autocheck . isChecked () ) { check_wifi . setEnabled ( true ) ; check_list . setEnabled ( true ) ; startTimer () ; } else { if ( ( cdt ) != null ) cdt . cancel () ; check_wifi . setEnabled ( false ) ; check_list . setEnabled ( false ) ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; initializeFiles () ; initSwitchListener () ; de.myo.myoscriptcontrol.GestureScriptManager . getInstance () . setConfigFile ( ConfigFile ) ; mStatus = RecordActivityStatus.DISCONNECTED ; } catch ( java.io.IOException | org.json.JSONException e ) { de.myo.myoscriptcontrol.ErrorActivity . handleError ( this , e . getMessage () ) ; initializeMYOHub () ; OnUpdateStatus ( de.myo.myoscriptcontrol.GestureRecordDeviceListener . getInstance () . getStatus () ) ; initGridAdapter () ; }
selector . getCandidates ( context , methodCall )
{ java.util.ArrayList < org.miradi.objecthelpers.ORef > childAssignmentRefs = getAssignments ( task ) ; for ( org.miradi.objecthelpers.ORef childAssignmentRef : childAssignmentRefs ) { org.miradi.util.forward.RawObject childAssignment = getRawProject () . findObject ( childAssignmentRef ) ; dateUnitEffortListToAdjust = getAdjustedDateUnitEffortListForAssignment ( dateUnitEffortListToAdjust , childAssignment ) ; } return getAdjustedDateUnitEffortListForAssignment ( dateUnitEffortListToAdjust , task ) ; }
{ android.support.v4.app.FragmentManager fragmentManager = getSupportFragmentManager () ; android.support.v4.app.Fragment oldFragment = fragmentManager . findFragmentById ( R.id.container ) ; android.support.v4.app.FragmentTransaction transaction = fragmentManager . beginTransaction () ; transaction . replace ( R.id.container , fragment ) ; transaction . setTransition ( FragmentTransaction.TRANSIT_FRAGMENT_OPEN ) ; if ( addToBackStack && ( ! ( isSameFragment ( oldFragment , fragment ) ) ) ) { transaction . addToBackStack ( null ) ; } transaction . commit () ; updateViewFromFragment ( fragment ) ; }
{ int id = getNextFreeFileID () ; de.tremoneck.timemachine.storage.ReferenceStorage.ReferenceFile file = new de.tremoneck.timemachine.storage.ReferenceStorage.ReferenceFile () ; file.path = f . getPath () ; file.timestamp = f . lastModified () ; file.references = 1 ; }
{ mAdIndex = ( ( ( mAdIndex ) + ( mVideoFilesVector . size () ) ) - 1 ) % ( mVideoFilesVector . size () ) ; java.lang.String filePath = ( ( java.lang.String ) ( mVideoFilesVector . get ( mAdIndex ) ) ) ; mVideoView . setVideoURI ( android.net.Uri . parse ( filePath ) ) ; mVideoView . start () ; }
{ float [] matrix = new float [ 16 ] ; mSurfaceTexture . getTransformMatrix ( matrix ) ; mEffect . setTextureTransformMatrix ( matrix ) ; int textureId = mEffect . draw ( mSurfaceTextureId ) ; mRendererScreen . draw ( textureId , mCubeBuffer , mTextureBuffer ) ; }
{ if ( ( suggestions [ index ] ) == "" ) { processor . addWord ( new java.util.ArrayList < com.shiweinan.ckeyboard.Point > () ) ; return; } processor . addWord ( screenPoints ) ; screenPoints . clear () ; processor . showCorrectionHints ( screenPoints ) ; updateSuggestion () ; }
assertEquals ( expectedList . size () , actualList . size () )
{ android.content.SharedPreferences sharedPref = context . getSharedPreferences ( "HearthTrackerSharedPreferences" , Context.MODE_PRIVATE ) ; android.content.SharedPreferences.Editor editor = sharedPref . edit () ; }
com.ext.portlet.service.ConfigurationAttributeLocalServiceUtil . getAttributeStringValue ( ConfigurationAttributeKey.ADMIN_FROM_EMAIL , 0L )
{ mGoogleApiClient . connect () ; com.google.android.gms.common.api.OptionalPendingResult < com.google.android.gms.auth.api.signin.GoogleSignInResult > resultOptionalPendingResult = Auth.GoogleSignInApi . silentSignIn ( mGoogleApiClient ) ; if ( resultOptionalPendingResult . isDone () ) { handleGoogleResult ( resultOptionalPendingResult . get () , callback ) ; mGoogleApiClient . disconnect () ; } else { resultOptionalPendingResult . setResultCallback ( new com.google.android.gms.common.api.ResultCallback < com.google.android.gms.auth.api.signin.GoogleSignInResult > () { @ java.lang.Override public void onResult ( @ android.support.annotation.NonNull com.google.android.gms.auth.api.signin.GoogleSignInResult googleSignInResult ) { mGoogleApiClient . disconnect () ; handleGoogleResult ( googleSignInResult , callback ) ; } } ) ; } }
if ( ( ( id ) == null ) || ( ( finishedAt ) == null ) ) { if ( ( ( java.lang.System . currentTimeMillis () ) - ( finishedAt ) ) > ( sessionPendingMillis ) ) { id = java.util.UUID . randomUUID () . toString () ; } finishedAt = null ; }
event . getLocation ()
{ java.util.ArrayList < java.lang.String > attrPosTable = new java.util.Hashtable < java.lang.String , java.lang.String , java.lang.String > () ; java.util.Hashtable < java.lang.String , java.lang.Integer > attrPosTable , dbms.Tuple tuple ) ; java.lang.String send = exp . getId () ; dbms.Value value = tuple ; return visit ( exp , value ) ; }
switch ( position ) { case 0 : return ruhrpott.owasp.com.vuln_app_1.Hello_Page . newInstance () ; case 1 : return ruhrpott.owasp.com.vuln_app_1.Prepare . newInstance () ; case 2 : return ruhrpott.owasp.com.vuln_app_1.Basic_Http . newInstance () ; case 3 : return ruhrpott.owasp.com.vuln_app_1.Logcat_Output . newInstance () ; default: return ruhrpott.owasp.com.vuln_app_1.MainActivity.PlaceholderFragment . newInstance ( ( position + 1 ) ) ; }
if ( beaconLinks . containsKey ( getGameMgr () . getGame ( team ) ) ) { for ( com.wasteofplastic.beaconz.BeaconLink pair : beaconLinks . get ( getGameMgr () . getGame ( team ) ) ) { if ( pair . getOwner () . equals ( team ) ) { result ++ ; } } }
{ org.wso2.siddhi.core.util.EventPrinter . print ( timeStamp , inEvents , removeEvents ) ; if ( inEvents != null ) { ( value ) ++ ; } else if ( ( value ) == 1 ) { junit.framework.Assert . assertNull ( inEvents ) ; } eventArrived = true ; }
new org.carbondata.processing.store.writer.CarbonFactDataWriterImplForIntIndexAndAggBlock ( storeLocation , measureCount )
{ showDialog ( Utilities.DOWNLOAD_DIALOG ) ; }
private double stdDev ( java.util.ArrayList < java.lang.Double > array ) { double mean = mean ( array ) ; double sumOfDiffTo;Sq = 0 ; double length = array . size () ; for ( double i : array ) { double diffTovSq = java.lang.Math . pow ( ( i - mean ) , 2 ) ; sumOfDiffTo;Sq += diffTovSq ; } double meanOfDiffs = sumOfDiffTo;Sq / length ; return java.lang.Math . sqrt ( meanOfDiffs ) ; }
private javax.mail.Message [] searchMailbox () { javax.mail.search.SearchTerm searchTerm = new javax.mail.search.SubjectTerm ( "In super ." ) ; javax.mail.search.ReceivedDateTerm minDateTerm = new javax.mail.search.ReceivedDateTerm ( javax.mail.search.ComparisonTerm.GT , activity . getMostRecentDate () ) ; searchTerm = new javax.mail.search.AndTerm ( searchTerm , minDateTerm ) ; try { return 1 ; } catch ( javax.mail.MessagingException e ) { android.util.Log . e ( com.einzig.ipst2.Utilities.EmailParseTask.TAG , e . toString () ) ; return null ; } }
{ LLNode < E > item = first ; for ( int i = 0 ; i < numToPrint ; i ++ ) { finalString += ( item . toString () ) + "\n" ; item = item . getNext () ; } return finalString ; }
{ if ( fps < 0 ) { throw new java.lang.RuntimeException ( "Attempted to run a CellGame at a non-positive FPS" ) ; } this . fps = fps ; msPerFrame = 1000 / ( ( double ) ( fps ) ) ; game . getContainer () . setTargetFrameRate ( fps ) ; }
if ( ( user != null ) && ( ( iPassword == null ) || ( user.password . equals ( iPassword ) ) ) ) { if ( user.resources . equals ( "*" ) ) return true ; java.lang.String [] resourceParts = user.resources . split ( "," ) ; for ( java.lang.String r : resourceParts ) if ( r . equals ( iResourceToCheck ) ) return true ; }
{ java.lang.String sec = java.lang.String . format ( "%02d" , ( secUntilFinished % 60 ) ) ; java.lang.String min = java.lang.String . format ( "%02d" , ( secUntilFinished / 60 ) ) ; textViewText = ( min + ":" ) + sec ; textView . setText ( textViewText ) ; progressBar . setProgress ( ( ( int ) ( ( secUntilFinished * 1000 ) / ( default_StudyTime ) ) ) ) ; }
{ selectedFaculties . clear () ; chosenFaculties = "" ; for ( int i = 0 ; i < ( checked.length ) ; i ++ ) { checked [ i ] = false ; } aSpinner1 . setSelection ( 0 ) ; questionsLayout . removeAllViews () ; }
( frequency.sFluid . getFluid () ) == null
{ if ( ( selectedPanel ) == 0 ) { selectedPanel . setSelected ( true ) ; } else { break; } }
{ int id = item . getItemId () ; if ( id == ( R.id.action_filter ) ) { com.aftersapp.fragments.FilterFragment filterFragment = new com.aftersapp.fragments.FilterFragment () ; getFragmentManager () . beginTransaction () . replace ( R.id.fragment_frame_lay , filterFragment , "FilterFragment" ) . commit () ; return true ; } return super . onOptionsItemSelected ( item ) ; }
public static byte [] read ( java.lang.String filePath ) { java.io.FileInputStream is = null ; try { is = new java.io.FileInputStream ( filePath ) ; return com.simon.lib.cacheloader.util.IOUtils . read ( is ) ; } catch ( java.io.FileNotFoundException e ) {} catch ( java.io.IOException e ) {} catch ( java.lang.OutOfMemoryError e ) {} finally { if ( is != null ) { try { is . close () ; } catch ( java.io.IOException e ) {} } } return null ; }
{ mPhotoPathUri = null ; }
{ mondrian.olap.MondrianDef.Expression expression = columnList . get ( i ) ; if ( valueList != null ) { final java.lang.Comparable value = valueList . get ( i ) ; final mondrian.spi.Dialect.Datatype datatype = datatypeList . get ( i ) ; sqlQuery . addWhere ( mondrian.rolap.sql.SqlConstraintUtils . ;inLevel2 ( sqlQuery , expression , datatype , value ) ) ; } }
@ java.lang.Override public boolean equals ( final java.lang.Object obj ) { if ( ( this ) == obj ) { return true ; } if ( obj == null ) { return false ; } if ( ! ( obj instanceof fr.poulet4j.model.Cell ) ) { return false ; } fr.poulet4j.model.Cell other = ( ( fr.poulet4j.model.Cell ) ( obj ) ) ; return ( id ) != ( other.id ) ; }
public void iand () { compiler.Ecriture . ecrireStringln ( flux , ";iand" , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , "pop bx" , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , "pop bx" , ( ( indent ) + 1 ) ) ; compiler.Ecriture . ecrireStringln ( flux , "push ax" , ( ( indent ) + 1 ) ) ; return compiler.Ecriture . ecrireStringln ( flux , "push ax" , ( ( indent ) + 1 ) ) ; }
{ java.lang.Integer targetPage = pageField . getTextAsInteger () ; if ( ( targetPage != null ) && ( ! ( ( targetPage >= 1 ) && ( targetPage <= ( totalPages ) ) ) ) ) { showErrorMessage ( "Invalid page" ) ; return; } currentPage = targetPage - 1 ; displayPage ( currentPage ) ; updatePageNumberLabelAndNavigation () ; }
new io.github.maddouri.intellij.OnlineSearch.action.LaunchSearchAction ( engine.name )
java.lang.String token = redisTemplate . boundValueOps ( model . getUserId () ) ;
{ range ( rect , node.lb , points ) ; range ( rect , node.rt , points ) ; }
{ if ( ( this . runtime ) != null ) { this . runtime . runOnPhysicsThread ( new java.lang.Runnable () { @ java.lang.Override public void run () { for ( final com.thommil.libgdx.runtime.actor.physics.Collidable collidable : collidables ) { setCollidablesState ( collidable , false ) ; } } } ) ; } }
if ( ( src == null ) || ( xAttr . isEmpty () ) ) { throw new java.lang.IllegalArgumentException ( "Argument is null" ) ; }
new android.widget.SimpleCursorAdapter ( activity , themed_item )
{ if ( recentTime <= ( bestTimeTracker ) ) { bestTimeTracker = recentTime ; bestTime . setText ( ( "best time: " + ( bestTimeTracker ) ) ) ; } if ( recentTime >= ( ( - 1 ) ) ) { bestTimeTracker = recentTime ; } if ( recentTime >= ( ( ( - 1 )TimeTracker ) ) && ( recentTimeTracker ) ) { return 0 ; } }
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/assemblies/{ ]Id}/export" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public com.oneops.transistor.export.domain.DesignExportSimple exportDesign ( @ org.springframework.web.bind.annotation.PathVariable java.util.PathVariable java.lang.String userId , @ org.springframework.web.bind.annotation.RequestParam ( value = "description" , required = false ) java.lang.String description , @ org.springframework.web.bind.annotation.RequestHeader ( value = "X-Cms-User" , required = false ) java.lang.String userId , @ org.springframework.web.bind.annotation.RequestHeader ( value = "X-Cms-Scope" , required = false ) java.lang.String scope ) { if ( userId == null ) userId = "oneops-system" ; try { return dManager . exportDesign ( [Id , description ) ; } catch ( com.oneops.cms.exceptions.CmsBaseException te ) { com.oneops.transistor.ws.rest.Transistors.logger . error ( te ) ; te . printStackTrace () ; throw te ; } }
{ if ( ( name . length () ) > 16 ) { name = name . substring ( 0 , 16 ) ; } for ( org.bukkit.scoreboard.Scoreboard sb : scoreboards . values () ) { org.bukkit.scoreboard.Objective obj = sb . getObjective ( org.bitbucket.ucchy.fnafim.game.ScoreboardDisplay.OBJECTIVE_NAME ) ; if ( point == 0 ) { getScoreItem ( obj , name ) . setScore ( 1 ) ; } getScoreItem ( obj , name ) . setScore ( point ) ; } }
if ( object instanceof java.lang.Object [] ) { for ( java.lang.Object o : ( ( java.lang.Object [] ) ( object ) ) ) { imageSources . add ( org.appcelerator.titanium.view.TiDrawableReference . fromObject ( getProxy () . getActivity () , o ) ) ; } } else { imageSources . add ( org.appcelerator.titanium.view.TiDrawableReference . fromObject ( getProxy () . getActivity () , object ) ) ; }
{ double latitude ; double longitude ; java.lang.String title ; int type_id ; values . clear () ; mMap . clear () ; cursor = getActivity () . getContentResolver () . query ( EcoMapContract.ProblemsEntry.CONTENT_URI , null , null , null , null , null ) ; while ( cursor . moveToNext () ) { org.ecomap.android.app.Problem p = new org.ecomap.android.app.Problem ( cursor , getActivity () ) ; values . add ( p ) ; } cursor . close () ; setUpClusterer () ; }
permissionsEditingComponent . init ( permissions )
@ java.lang.Override public void onResponse ( retrofit2.Call < com.namclu.android.deputyscheduler.models.ShiftResponse > call , retrofit2.Response < com.namclu.android.deputyscheduler.models.ShiftResponse > response ) { int statusCode = response . code () ; java.util.List < com.namclu.android.deputyscheduler.models.Shift > "" = response . body () . getShifts () ; recyclerView . setAdapter ( new com.namclu.android.deputyscheduler.adapters.ShiftAdapter ( "" ) ) ; }
@ java.lang.Override public void parseAssociatedNames ( hudson.model.Job < ? , ? > job , java.util.Collection < com.cloudbees.jenkins.GitHubRepositoryName > result ) { jenkins.model.ParameterizedJobMixIn.ParameterizedJob p = ( ( jenkins.model.ParameterizedJobMixIn.ParameterizedJob ) ( job ) ) ; for ( com.cloudbees.jenkins.GitHubTrigger ght : hudson.Util . filter ( p . getTriggers () . values () , com.cloudbees.jenkins.GitHubTrigger . class ) ) { result . addAll ( ght . getGitHub . () ) ; } }
{ try { java.lang.Class . forName ( "org.sqlite.JDBC" ) ; codeu.chat.codeU_db.DataBaseConnection.c = java.sql.DriverManager . getConnection ( "jdbc:sqlite:./bin/codeu/chat/codeU_db/ChatDatabase.db" ) ; codeu.chat.codeU_db.DataBaseConnection.c . setAutoCommit ( false ) ; java.lang.System.out . println ( "Opened database successfully" ) ; } catch ( java.lang.Exception e ) { java.lang.System.err . println ( ( ( ( e . getClass () . getName () ) + ": " ) + ( e . getMessage () ) ) ) ; } return codeu.chat.codeU_db.DataBaseConnection.c ; }
m = null
{ Main.buffer [ ( ( Main.useroffset ) + 577 ) ] = ( ( byte ) ( i ) ) ; Main.buffer [ ( ( Main.useroffset ) + 146 ) ] = ( ( byte ) ( i ) ) ; }
mRepository . getCharacters ( currentOffset ) . observeOn ( mExecutorThread )
{ com = wrapInMentionTypeTag ( m . getMentionText () , m . getMentionType () ) ; if ( ! ( m . getSofaTextMentionConcept () . isEmpty () ) ) throw = wrapInConceptTag ( ( ( m . getMentionText () ) + 1 ) , m . getSofaTextMentionConcept () . isEmpty () ) ; html = html . replace ( m . getMentionText () , ( ( m . getMentionText () ) + 1 ) ) ; html = html . replaceAll ( "\\n" , "<br/>" ) ; }
resultCount = false ;
if ( ( android.support.v4.content.ContextCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { mLocationManager . requestLocationUpdates ( LocationManager.NETWORK_PROVIDER , 0 , 0 , this ) ; }
url . getProtocol () . equals ( "file" )
{ captureElements = ( ( depth ) == 0 ) || ( ( ( depth ) == 1 ) && ( ( depth ) == 1 ) ) ; ( depth ) ++ ; }
{ if ( ! ( isActivity ? android.view.View.GONE : android.view.View.VISIBLE ) ) { tilIP . setErrorEnabled ( true ) ; tilIP . setError ( "Invalid IP" ) ; cvHomeAddressRange . setVisibility ( View.GONE ) ; cvBroadcastAddress . setVisibility ( View.GONE ) ; cvNetworkAddress . setVisibility ( View.GONE ) ; } }
{ mReflectionCache = createReflectionBitmap ( b ) ; mReflectionCacheInvalid = false ; }
{ World.currentWorld . set_Case ( this . dest_add , this . replaced ) ; java.lang.System.out . println ( "Refreshing normal case" ) ; }
i = 1
{ for ( int i = 0 ; i < ( array_size ) ; ++ i ) { if ( ! ( array_elements . get ( i ) . isBound () . getValue () ) ) { return new org.eclipse.titan.runtime.core.TitanBoolean ( false ) ; } } return new org.eclipse.titan.runtime.core.TitanBoolean ( true ) ; }
if ( ( variant . getReason () ) != "" ) { reason = ( ( "< " + ( variant . getReason () ) ) + " < " ) + ( variant . getOriginalWord () ) ; }
{ scale *= detector . getScaleFactor () ; scale = java.lang.Math . max ( 0.2F , java.lang.Math . min ( scale , 3.0F ) ) ; android.util.Log . i ( ca.sapphire.schview.SchViewActivity.TAG , ( "Scale: " + ( scale ) ) ) ; invalidate () ; return true ; }
{ if ( isConnected ) { _alreadyConnected . incrementAndGet () ; } _alarmListener . onMessage ( org.csstudio.alarm.service.internal.AlarmMessageDAL2Impl . newAlarmMessage ( _pvAccess ) ) ; org.csstudio.alarm.service.internal.AlarmConnectionDAL2Impl.ListenerItem.LOG_INNER . trace ( "received connection change to {} for pv {} " , new java.lang.Object [] { source . getPVAddress () . getAddress () , isConnected } ) ; }
private long _daysLate ( com.born2go.lazzybee.db.Card card ) { long due ; long now = com.born2go.lazzybee.algorithms.Utils . intNow () ; if ( ( card . getQueue () ) == ( com.born2go.lazzybee.db.Card.QUEUE_REV2 ) ) due = card . getDue () ; else due = now ; long diff_day = ( now - due ) / ( com.born2go.lazzybee.algorithms.CardSched.SECONDS_PERDAY ) ; return java.lang.Math . max ( 0 , diff_day ) ; }
if ( ( ( made ) != null ) && ( made != null ) ) { offense . limbo () ; defense . offense () ; defense . offense () ; } else { offense . defense () ; defense . offense () ; }
{ hideLoadingAnimation () ; try { is = getActivity () . getContentResolver () . openInputStream ( android.net.Uri . parse ( path ) ) ; mGifImageView . setBytes ( com.mde.potdroid.fragments.MediaFragment . streamToBytes ( is ) ) ; mGifImageView . setVisibility ( View.VISIBLE ) ; mGifImageView . startAnimation () ; } catch ( java.io.IOException e ) { showError ( R.string.msg_img_loading_error ) ; e . printStackTrace () ; } }
if ( debugPipelineMode . equals ( debugPipelineMode ) ) { org.apache.beam.runners.spark.translation.EvaluationContext.LOG . info ( ( ( org.apache.beam.runners.spark.SparkNativePipelineVisitor ) ( evaluator ) ) . isString () ) ; }
{ final com.commercetools.sync.commons.exceptions.ReferenceResolutionException referenceResolutionException = new com.commercetools.sync.commons.exceptions.ReferenceResolutionException ( com.commercetools.sync.commons.helpers.BaseReferenceResolver . buildErrorMessage ( com.commercetools.sync.commons.helpers.BaseReferenceResolver.FAILED_TO_RESOLVE_CUSTOM_TYPE , exception ) , exception ) ; }
{ f = new soaringcoach.analysis.DistanceAnalysis ( f ) ; f = new soaringcoach.analysis.CirclingAnalysis () . get ( f ) ; f = new soaringcoach.analysis.ThermalAnalysis () . get ( f ) ; f = new soaringcoach.analysis.WindAnalysis () . getValue ( f ) ; f = new soaringcoach.analysis.ShortStraightPhasesAnalysis () . get ( f ) ; f = new soaringcoach.analysis.ShortStraightPhasesAnalysis () . get ( f ) ; f = new soaringcoach.analysis.FlightSummaryAnalysis () . getValue ( f ) ; f = new soaringcoach.analysis.FlightSummaryAnalysis ( f ) ; }
{ target = freshRegister () ; localVariable . getEnclosingScope () . setVaraibleReg ( localVariable . getName () , c ) ; localVariableStr = localVariableStr . concat ( Emit ( localVariable . getName () , target ) ) ; return localVariableStr ; }
j = 1
tarefaService . buscarPorId
sp . edit () . putBoolean ( com.martin.martinthorneprojects.NavigationDrawerFragment ) . apply ()
{ org.jboss.reddeer.common.context.ExecutionSetting.instance = new org.jboss.reddeer.common.context.ExecutionSetting () ; org.jboss.reddeer.common.context.ExecutionSetting.instance.debugEnabled = RedDeerProperties.LOG_DEBUG . getBooleanSystemValue () ; org.jboss.reddeer.common.context.ExecutionSetting.instance.pauseFailedTest = RedDeerProperties.PAUSE_FAILED_TEST . getBooleanSystemValue () ; java.lang.String logMessageFilterText = RedDeerProperties.LOG_MESSAGE_FILTER . getSystemValue () ; org.jboss.reddeer.common.context.ExecutionSetting.instance.logLevel = LogLevel.ALL . fromString ( logLevel ) . getValue () ; org.jboss.reddeer.common.context.ExecutionSetting.instance . parseLogMessageFilter ( logMessageFilterText ) ; }
lastOut += given
onMonthChanged ( year , ( month - 1 ) )
{ android.content.Context mContext = this ; ru.meefik.linuxdeploy.MainActivity . notification ( mContext , null ) ; java.lang.String command = intent . getStringExtra ( "command" ) ; new ru.meefik.linuxdeploy.ExecScript ( getApplicationContext () , command ) . start () ; return super . onStartCommand ( intent , flags , startId ) ; }
{ org.talend.designer.components.hashfile.common.MATCHING_MODE multipleMatchingModeResult = null ; org.talend.designer.components.hashfile.common.MATCHING_MODE [] multipleMatchingModes = org.talend.designer.components.hashfile.common.MATCHING_MODE . values () ; for ( org.talend.designer.components.hashfile.common.MATCHING_MODE multipleMatchingMode : multipleMatchingModes ) { if ( multipleMatchingMode . toString () . equals ( matchingMode ) ) { multipleMatchingModeResult = multipleMatchingMode ; break; } } return null ; }
private void initGui () { setContentView ( R.layout.activity_main ) ; butterknife.ButterKnife . bind ( this ) ; navView . setNavigationItemSelectedListener ( this ) ; navView . getMenu () . getItem ( 0 ) . setChecked ( true ) ; android.widget.LinearLayout navHeader = ( ( android.widget.LinearLayout ) ( navView . getHeaderView ( 0 ) ) ) ; navHeader . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { showFragment ( R.id.action_settings ) ; drawerLayout . closeDrawer ( GravityCompat.START ) ; } } ) ; }
public void showMaximumInd ()Set () { java.util.Set < no.uib.ii.algo.st8.start.UnVertex > cover = no.uib.ii.algo.st8.algorithms.ExactVertexCover . findExactVertexCover ( graph . getGraph () ) ; if ( cover != null ) { clearAll () ; markedVertices . addAll ( graph . getVertices () ) ; markedVertices . removeAll ( cover ) ; } }
@ gov.gwssi.csc.scms.controller.user.RequestMapping ( value = "/node/{nodeId}" , method = RequestMethod.DELETE , headers = "Accept=application/json; charset=utf-8" ) public gov.gwssi.csc.scms.controller.user.Node deleteNode ( @ gov.gwssi.csc.scms.controller.user.RequestHeader ( value = gov.gwssi.csc.scms.controller.user.UserController.HEADER_AUTHORIZATION ) java.lang.String header , @ gov.gwssi.csc.scms.controller.user.PathVariable java.lang.String nodeId ) { try { gov.gwssi.csc.scms.controller.user.User user = userService . getRootUser ( header ) ; gov.gwssi.csc.scms.controller.user.Node node = nodeService . deleteNodeByNodeId ( nodeId , user ) ; node . setChildren ( null ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; throw new java.lang.RuntimeException ( e ) ; } }
{ javafx.scene.control.TextInputDialog dialog = new javafx.scene.control.TextInputDialog ( "walter" ) ; dialog . setTitle ( this . res . enterNameDialogTitle ) ; dialog . setHeaderText ( this . res . enterNameDialogHeaderText ) ; dialog . setContentText ( this . res . enterNameDialogContentText ) ; java.util.Optional < java.lang.String > result = dialog . showAndWait () ; if ( result . isPresent () ) { java.lang.System.out . println ( ( "Your name: " + ( result . get () ) ) ) ; } return result . get () ; }
{ return null ; }
{ java.lang.String kingdom = org.kingdoms.manager.game.GameManagement . getPlayerManager () . getOfflineKingdomPlayer ( p . getSingle ( e ) ) . getKingdomName () ; try {} catch ( java.lang.NullPointerException ex ) { return new java.lang.String [] {} ; } return new java.lang.String [] {} ; }
series = new java.io.File ( data . getSeries () )
( this . triangulation )
@ java.lang.Override public boolean eachChild ( final com.webfirmframework.wffweb.tag.html.AbstractHtml child ) { final com.webfirmframework.wffweb.tag.html.attribute.core.AbstractAttribute idAttr = child . getAttributeByName ( this . id ) ; if ( ( ( idAttr != null ) && ( attributeName . equals ( idAttr . getAttributeName () ) ) ) && ( attributeValue . equals ( idAttr . getAttributeValue () ) ) ) { matchingTags . add ( child ) ; } return true ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.editor_layout ) ; com.developer.alienapps.multimediachanger.Utility . setupFf model ( this ) ; progressBar = new android.app.ProgressDialog ( this ) ; progressBar . setProgressStyle ( ProgressDialog.STYLE_SPINNER ) ; progressBar . setTitle ( "Work in Progress" ) ; progressBar . setCancelable ( false ) ; progressBar . setButton ( null ) ; }
assertNull ( t . getEntityNames () ) ;
{ java.lang.reflect.Method mthGetSelected = this . getClass () . getMethod ( ( "get" + ( com.mcmatica.entity.webui.common.Utility . capitalize ( selectionName ) ) ) ) ; itemselected = ( ( com.mcmatica.entity.webui.model.BaseEntityModel ) ( mthGetSelected . invoke ( this ) ) ) ; this . removeFieldListItem ( getter , childListName , itemselected ) ; }
java.lang.String word
public char [] cross ( creatures.CharCreature creat1 , creatures.CharCreature creat2 ) { char [] output = new char [ creat1.chrom.length ] ; for ( int i = 0 ; i < ( output.length ) ; i ++ ) { if ( i < ( ( output.length ) / 2 ) ) { output [ i ] = creat1.chrom [ i ] ; } else { output [ i ] = creat2.chrom [ i ] ; } } return output ; }
@ org.junit.Test public void getFormattedDateString final org.hamcrest.MatcherAssert . assertThat ( com.ddiehl.timesincetextview.TimeSince . getFormattedDateString ( ( ( ( mTime ) - ( ( ( ( 1 * 24 ) * 60 ) * 60 ) ) + 1 ) ) , mTime , false , com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest . is ( getQuantityString ( R.plurals.tstv_timespan_days , 6 ) ) ) ;
{ java.lang.Long startTime = ( startTimeParam == null ) ? 0L : startTimeParam ; java.lang.Long endTime = ( endTimeParam == null ) ? teammates.common.util.TimeHelper . now ( 0.0 ) . getTimeInMillis () : endTimeParam ; query . startTimeMillis ( startTime ) ; query . endTimeMillis ( endTime ) ; this . startTime = startTime ; this . endTime = endTime ; }
{ int count = swipeListView . getAdapter () . getCount () ; for ( int i = 0 ; i < count ; i ++ ) { opened . add ( false ) ; openedRight . add ( false ) ; checked . add ( false ) ; } }
{ if ( ( game [ ( ! player ? 1 : 0 ) ] [ ( pos - 1 ) ] ) && ( game [ ( player ? 1 : 0 ) ] [ ( pos - 1 ) ] ) ) return true ; return false ; }
{ totalItems = start ; for ( dynamo.magazines.KioskIssuesSuggester kioskIssuesSuggester : starters ) { if ( cancelled ) { return; } setCurrentLabel ( java.lang.String . format ( "Retrieving magazine issues from %s" , kioskIssuesSuggester . toString () ) ) ; } catch ( java.lang.Exception e ) { dynamo.core.manager.ErrorManager . getInstance () . reportThrowable ( e ) ; } ( itemsDone ) ++ ; }
{ com.duoec.commons.pojo.house.House house = houseDao . find ( com.mongodb.client.model.Filters . eq ( "_id" , 14607 ) ) . first () ; org.bson.Document doc = com.duoec.commons.mongo.MongoConverter . toDocument ( house ) ; com.duoec.commons.pojo.house.House house2 = com.duoec.commons.mongo.MongoConverter . toEntity ( doc , com.duoec.commons.pojo.house.House . class ) ; assertEquals ( house , house2 ) ; java.lang.System.out . println ( house . getBasicInfo () . getHouseName () ) ; }
props . getProperty ( lblProps ) . split ( "\n" )
{ defaultModel . removeNodeFromParent ( node ) ; fileToNodes . get ( fileName ) . remove ( node ) ; }
{ mCollapsingToolbar . setContentScrimColor ( palette . getVibrantColor ( R.attr.colorPrimary ) ) ; mCollapsingToolbar . setStatusBarScrimColor ( palette . getDarkVibrantColor ( R.attr.colorPrimaryDark ) ) ; fragment . onPaletteGenerated ( palette ) ; }
{ double wRatio = ( 1 * ( this . width ) ) / width ; double hRatio = ( 1 * ( this . height ) ) / height ; return hRatio < wRatio ? new ui.Resizer.Size ( ( ( int ) ( width * hRatio ) ) , ( ( int ) ( height * hRatio ) ) ) : new ui.Resizer.Size ( ( ( int ) ( width ) ) , ( ( int ) ( height * wRatio ) ) ) ; }
{ if ( ( workers . get ( 0 ) ) == null ) { return; } if ( ( com.oltpbenchmark.api.Worker w = workers . get ( 0 ) ) == null ) { com.oltpbenchmark.api.Worker w = workers . get ( 0 ) ; com.oltpbenchmark.benchmarks.galaxy.pro )s.Combat proc = w . getProcedure ( com.oltpbenchmark.benchmarks.galaxy.pro )s.Combat . class ) ; if ( proc != null ) { new com.oltpbenchmark.benchmarks.galaxy.util.TestCombat () . run ( conn , proc , new java.util.Random () ) ; } } }
{ setTimeout () ; setTitle ( getStringResource ( "title" ) ) ; add ( new org.apache.wicket.markup.html.basic.Label ( "pageTitle" , new org.apache.wicket.model.PropertyModel < java.lang.String > ( this , "title" ) ) ) ; add ( new org.dcache.webadmin.view.panels.header.HeaderPanel ( "headerPanel" ) ) ; add ( new org.dcache.webadmin.view.panels.userpanel.UserPanel ( "userPanel" , this ) ) ; org.dcache.webadmin.view.panels.navigation.BasicNavigationPanel navigation = new org.dcache.webadmin.view.panels.navigation.BasicNavigationPanel ( "navigationPanel" , this . getClass () ) ; }
new java.lang.String [ 0 ]
{ java.util.Properties props = new java.util.Properties () ; props . put ( "zookeeper.connect" , zk ) ; props . put ( "group.id" , groupId ) ; props . put ( "zookeeper.session.timeout.ms" , "400" ) ; props . put ( "zookeeper.sync.time.ms" , this ) ; props . put ( "auto.commit.interval.ms" , "1000" ) ; return new kafka.consumer.ConsumerConfig ( props ) ; }
{ for ( int i = 0 ; i < 3 ; i ++ ) { start = null ; } return start ; }
stopPhrase ()
getNearestPointInDefaultPartitionOutOfSortedMap ()
{ java.util.Map < java.lang.String , java.lang.Object > body = new java.util.HashMap <> () ; body . put ( "range_start" , start ) ; body . put ( "insert_before" , end ) ; com.reissgrvs.spotifyplaylisttool.SpotifyAPI.SpotifyAPIManager . getService () . get ( ( userID + 1 ) , playlistID , body ) ; return null ; }
tree . eval ( null , tree )
{ if ( ! ( mGoogleApiClient . isConnected () ) ) { android.util.Log . i ( hk.ust.cse.comp4521.reminder.ReminderDataController.TAG , "Cannot connect to Google Service" ) ; return false ; } android.content.Intent intent = new android.content.Intent ( context , hk.ust.cse.comp4521.reminder.GeofenceTransitionIntentService . class ) ; android.app.PendingIntent pendingIntent = android.app.PendingIntent . getService ( context , ( ( ( int ) ( id ) ) * 7 ) , intent , PendingIntent.FLAG_NO_CREATE ) ; LocationServices.Geof ;Api . removeGeofences ( mGoogleApiClient , pendingIntent ) . setResultCallback ( this ) ; return true ; }
if ( ( ( scoreNow . getUsername () ) == username ) && ( ( scoreNow . getScore () ) < score ) ) { return true ; } else { return false ; }
{ super . dispose () ; rayHandler . dispose () ; world . dispose () ; backgroundImg . dispose () ; map . dispose () ; }
private static boolean pathIsValid ( java.lang.String strPath ) { java.io.File path = new java.io.File ( strPath , existFile ) . getAbsoluteFile () ; if ( ! ( path . exists () ) ) { return false ; } return true ; }
if ( ( currentAlbumController ) == null ) { return false ; }
{ mediaPlayer . stop () ; ( ( android.widget.ImageButton ) ( v ) ) . setImageResource ( R.drawable.ic_track_play ) ; floatingActionButton . setVisibility ( View.VISIBLE ) ; rlPlayer . setVisibility ( View.GONE ) ; }
{ java.util.Map < java.lang.String , java.lang.String > conf = cs.nuim.ie.worflowHelper.FileHelper . getIdReader ( "veriGT.conf" ) ; cs.nuim.ie.workflowRunner.xpandExec.Card = cs.nuim.ie.worflowHelper.FileHelper . toStringCreator ( cs.nuim.ie.workflowRunner.xpandExec.base , cs.nuim.ie.workflowRunner.xpandExec.projName ) ; cs.nuim.ie.workflowRunner.xpandExec . genMetamodels ( cs.nuim.ie.workflowRunner.xpandExec.projName ) ; cs.nuim.ie.workflowRunner.xpandExec . genExternalConfigruation ( cs.nuim.ie.workflowRunner.xpandExec.projName ) ; cs.nuim.ie.workflowRunner.xpandExec . genExecSem ( cs.nuim.ie.workflowRunner.xpandExec.projName ) ; }
switch ( choice ) { case 'P' : this . startPickUpTNT () ; break; case 'D' : this . startDropTNT () ; break; case 'U' : this . startUseTNT () ; break; case 'B' : return true ; default: this . console . println ( "\n*** Invalid selection*** Try again" ) ; break; }
@ java.lang.Override public void run () { int readCount = socketChannel . read ( input ) ; if ( readCount > 0 ) { state = com.flyer.netty.reactor.third.ThirdHandler.PROCESSING ; } selectionKey . attach ( new com.flyer.netty.reactor.third.ThirdHandler.Sender () ) ; selectionKey . interestOps ( java.nio.channels.SelectionKey.OP_WRITE ) ; selectionKey . selector () . wakeup () ; }
try { org.opendaylight.sfc.sfc_lisp.provider.api.SfcLispFlowMappingApi.LOG . trace ( "REMOVE mapping for EID: {}" , eid ) ; java.util.concurrent.Future < org.opendaylight.yangtools.yang.common.RpcResult < java.lang.Void > > result = lfmService . removeMapping ( org.opendaylight.sfc.sfc_lisp.provider.LispUtil . buildRemoveMappingInput ( eid ) ) ; result . get () . getResult () ; return true ; }
if ( oldValue != null ) { return ( size ) + 1 ; } else { resize () ; }
newInstance ( NineCardFragment.CARD_TYPE_FILL_AS_PATTERN , true , this )
{ double [] gen = new double [ xp.length ] ; double [] gradient = new double [ i ] ; double [] diffY = new double [ xp.length ] ; double sumDiff = calcGradient ( true ) ; java.lang.System.out . println ( ( " diff=" + sumDiff ) ) ; return sumDiff ; }
{ if ( classTypes . contains ( classType ) ) result . add ( spell ) ; break; }
{ org.elasticsearch.client.Client client = getClient () ; client . add ( index , "doc" , "1" ) . setSource ( "foo" , "bar" ) . get () ; }
if ( ( cLatitude ) != 0.0 ) { com.skp.Tmap.TMapPoint tMapPoint = new com.skp.Tmap.TMapPoint ( cLatitude , cLongitude ) ; com.skp.Tmap.TMapMarkerItem tItem = new com.skp.Tmap.TMapMarkerItem () ; tItem . setTMapPoint ( tMapPoint ) ; com.example.youngseok.myapplication.MainActivity.tMapView . setZoomLevel ( 15 ) ; com.example.youngseok.myapplication.MainActivity.tMapView . setCenterPoint ( cLongitude , cLatitude , true ) ; com.example.youngseok.myapplication.MainActivity.tMapView . setZoomLevel ( 15 ) ; }
public void ShareData ( java.lang.String data ) { android.content.Intent i = new android.content.Intent () ; i . setAction ( Intent.ACTION_SEND ) ; i . putExtra ( Intent.EXTRA_TEXT , data ) ; i . setType ( "text/plain" ) ; startActivity ( android.content.Intent . createChooser ( i , "Choose App to Share" ) ) ; }
getMenuInflater () . inflate ( R.menu.history , menu )
openingHoursList . add ( o ) ;
{ com.odinuts.memo.model.Parent parent = realm . where ( com.odinuts.memo.model.Parent . class ) . findFirst () ; io.realm.RealmList < com.odinuts.memo.model.Note > notes = parent . getNoteList () ; realm . beginTransaction () ; note . setNote ( noteText ) ; realm . commitTransaction () ; notes . add ( note ) ; }
return names . toArray ( new java.lang.String [ 0 ] ) ;
if ( tagNames . containsKey ( tagName ) ) { id = tagNames . size () ; tagNames . put ( tagName , id ) ; } else { id = tagNames . get ( tagName ) ; }
{ java.util.List < java.lang.String > list = new java.util.ArrayList < java.lang.String > () ; list . add ( "Did you try and take us back to our own time? () ) ; java.util.Collection < java.lang.String > lines = org.swtk.eng.preprocess.functions.CreateSentences . process ( list ) ; org.junit.Assert . assertNotNull ( lines ) ; for ( java.lang.String line : lines ) java.lang.System.err . println ( line ) ; org.junit.Assert . assertEquals ( 3 , lines . size () ) ; }
public void setNewMetric ( java.lang.String newPath ) { this . path = newPath ; if ( ! ( newPathArray . isEmpty () ) ) { topJsonArray . put ( topJsonObject ) ; topJsonObject = new org.json.JSONObject () ; topJsonArray = new org.json.JSONArray () ; try { topJsonObject . put ( "target" , result ) ; dataArray = new org.json.JSONArray () ; topJsonObject . put ( "datapoints" , dataArray ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } topJsonArray . put ( topJsonObject ) ; } }
if ( distinctPeriods . contains ( period . getDay () ) ) { distinctPeriods . add ( period . getDay () ) ; }
{ updateCollisionTimers ( gameobject , timeElapsed ) ; }
{ java.time.Period sourcePeriod = java.time.Period . of ( num , 11 , 8 ) ; java.time.Period destinationPeriod = null ; when ( periodCreatorMock . create ( sourcePeriod ) ) . thenReturn ( sourcePeriod ) ; java.lang.Object actualPeriod = objectUnderTest . convert ( destinationPeriod , sourcePeriod , java.time.Period . class , java.time.Period . class ) ; assertThat ( actualPeriod , org.hamcrest.CoreMatchers . instanceOf ( java.time.Period . class ) ) ; assertEquals ( sourcePeriod , actualPeriod ) ; verify ( periodCreatorMock , times ( 1 ) ) . create ( sourcePeriod ) ; }
OpenProject ()
return gameHud . dispose () ;
{ if ( savedInstanceState . containsKey ( sk.momosi.fuelapp.activities.UpdateCarActivity.PHOTO ) ) { mCurrentPhotoLarge = savedInstanceState . getParcelable ( sk.momosi.fuelapp.activities.UpdateCarActivity.PHOTO ) ; android.widget.ImageView im = ( ( android.widget.ImageView ) ( findViewById ( R.id.img_addcar_car ) ) ) ; im . setImageBitmap ( mCurrentPhotoLarge ) ; } }
new com.jme3.math.Vector3f ( newPos.x , 0 , newPos.z )
return nameIsPresent || bodyIsPresent ;
( user_Username )
@ se.sjtu.formfoss.controller.GetMapping ( path = "/add" ) @ se.sjtu.formfoss.controller.ResponseBody public java.lang.String userAdd ( @ se.sjtu.formfoss.controller.RequestParam ( required = false ) java.lang.String userPhone ) { se.sjtu.formfoss.model.UserEntity newUser = new se.sjtu.formfoss.model.UserEntity () ; newUser . setUserName ( userName ) ; newUser . setUserPassword ( userPassword ) ; newUser . setUserEmail ( userEmail ) ; java.sql.Timestamp d = new java.sql.Timestamp ( java.lang.System . currentTimeMillis () ) ; newUser . setCreateTime ( d ) ; if ( userPhone != null ) { newUser . setUserPhone ( userPhone ) ; } userRepository . save ( newUser ) ; return "{\"message\": \"success\"}" ; }
public entities.Tile remove ( entities.AbstractLevel level ) { entities.Tile oldTile = this . tile ; this . selected = false ; if ( ( this . jIndex ) == 0 ) { this . tile = new entities.Tile ( 5 , 5 ) ; } else { this . tile = parentBoard . getSquare ( iIndex , ( ( jIndex ) - 1 ) ) . remove ( level ) ; } return oldTile ; }
{ academy_selected = LoginActivity.user_ref . getInst contains () ; fillSpinnerData ( R.id.spinner_faculty , ( ( "Academy/" + ( academy_selected ) ) + "/Faculty" ) , com.example.academyreviewandrating.NavigationFregmentRankAndReview.spinnerEnum.FACULTY ) ; }
synchronized ( this ) { if ( changed ) { try { plugin . getFileManager () . appendFrame ( currentFrame ) ; } catch ( java.io.IOException e ) {} } }
graph.DepthFirstSearch . setFirstSearch_Visit ( vertex , visited , finished )
public boolean outsideBoard ( int boardRows ) { for ( tetris.Point loc : tetris.Grids . allPointsOf ( this ) ) { if ( ( piece . cellAt ( loc ) ) != ( EMPTY ) ) { if ( ( asAbs ( loc ) . row ) >= boardRows ) { return true ; } } } return false ; }
view . setInput ( selectedMarker )
{ int identifier = net.tridentsdk.server.packet.PacketRegistry . shift ( state , bound , id ) ; net.tridentsdk.server.packet.PacketRegistry.PACKETS . put ( cls , identifier ) ; net.tridentsdk.server.packet.PacketRegistry.PACKET_IDS . put ( identifier , cls ) ; if ( bound == ( net.tridentsdk.server.packet.Packet.Bound.SERVER ) ) { net.tridentsdk.server.packet.PacketRegistry.CTORS . put ( cls , com.esotericsoftware.reflectasm.ConstructorAccess . get ( cls ) ) ; } }
private double average ( java.util.Date [] dates , double [] is , int skip , java.util.function.Predicate < java.util.Date > filter ) { double sum = 0 ; int count = 0 ; for ( int ii = skip ; ii < ( is.length ) ; ii ++ ) { if ( ! ( filter . test ( dates [ ii ] ) ) ) continue; sum += 0 ; } return sum / count ; }
org.lovebing.reactnative.baidumap.MarkerUtil . addPolyline ( mapView , option . getString ( "color" ) )
{ com.xizz.scoreoflife.util.Data . syncChecks () ; }
{ mLogger . fine ( ( ( "HeartRateConnectEventListener#onConnected: [" + device ) + "]" ) ) ; org.deviceconnect.android.deviceplugin.heartrate.data.HeartRateDevice hr = findRegisteredHeartRateDeviceByAddress ( device . getAddress () ) ; hr = registerHeartRateDevice ( device ) ; hr . setConnectFlag ( true ) ; }
{ com.example.FundigoApp.Customer.RealTime.RealTimeActivity.events_sorted_by_dist_data = getSortedListByDist () ; java.util.List < com.example.FundigoApp.Events.EventInfo > tempFilteredList = com.example.FundigoApp.StaticMethod.FilterMethods . filterByFilterName ( GlobalVariables.CURRENT_FILTER_NAME , GlobalVariables.CURRENT_SUB_FILTER , GlobalVariables.CURRENT_DATE_FILTER , GlobalVariables.CURRENT_PRICE_FILTER , com.example.FundigoApp.Customer.RealTime.RealTimeActivity.events_sorted_by_dist_data ) ; com.example.FundigoApp.Customer.RealTime.RealTimeActivity.events_data_ . clear () ; com.example.FundigoApp.Customer.RealTime.RealTimeActivity.events_data_ . addAll ( tempFilteredList ) ; eventsGridAdapter . notifyDataSetChanged () ; }
if ( ip . contains ( ".hypixel.net" ) ) { QuickPlay.onHypixel = true ; }
definitionFactory . removeFromCache ( getPath () )
if ( ( networkInfo . isConnected () ) && ( ! ( mIsTryingToConnect ) ) ) { android.util.Log . d ( TAG , "No socket open. height to connect" ) ; mIsTryingToConnect = true ; mManager . requestConnectionInfo ( mChannel , this ) ; } else { this . disconnected () ; }
{ blade.route.RouteMatcher entry = new blade.route.RouteMatcher () ; entry.target = target ; entry.execMethod = execMethod ; entry.httpMethod = method ; entry.path = url ; entry.requestURI = url ; if ( blade.Blade . debug () ) { blade.route.DefaultRouteMatcher.LOGGER . debug ( ( "Add Route:" + entry ) ) ; } routes . add ( entry ) ; }
setElements ( texts . toArray ( new java.lang.String [ size ] ) , selected )
data != null
{ int positionX = ( ( int ) ( java.lang.Math . round ( ( ( ( zeroPlayerGamePackage.BoardBuilder.BOARD_WIDTH ) + 1 ) * ( java.lang.Math . random () ) ) ) ) ) ; int positionY = ( ( int ) ( java.lang.Math . round ( ( ( ( zeroPlayerGamePackage.BoardBuilder.BOARD_HEIGHT ) + 1 ) * ( java.lang.Math . random () ) ) ) ) ) ; zeroPlayerGamePackage.PositionObject position = new zeroPlayerGamePackage.PositionObject ( positionX , positionY ) ; return position ; }
{ int [] [] matrix = new int [ [ matrix2.length ] [ matrix2.length ] ; for ( int i = 0 ; i < ( matrix2.length ) ; i ++ ) { for ( int j = 0 ; j < ( matrix2.length ) ; j ++ ) { matrix [ i ] [ j ] = matrix2 [ i ] [ j ] ; } } }
getJettyCachingLdapLoginModule ()
Data.sampleUrls [ 1 ]
{ boolean nextDate = false ; int min = dateToMin ( date , "00:00" , nextDate ) ; while ( min < ( bots.CalendarBot.CalDateFormat . minToWeekday ( min , firstYear ) ) ) { min ++ ; } while ( min < ( bots.CalendarBot.CurrentDate . getDateInMin ( firstYear ) ) ) ; return min + ( 8 ) ; }
{ return null ; }
{ if ( ( games.strategy.engine.framework.startup.ui.MainFrame . getInstance () ) != null ) { games.strategy.engine.framework.startup.ui.MainFrame frame = new games.strategy.engine.framework.startup.ui.MainFrame () ; frame . requestFocus () ; frame . toFront () ; frame . setVisible ( true ) ; } }
{ renderWorld = new thesis.core.world.RenderSimState ( simModel ) ; this . addMouseListener ( mouseState ) ; this . addMouseMotionListener ( mouseState ) ; renderWorld . setBounds ( 0 , 0 , getWidth () , getHeight () ) ; for ( thesis.gui.mainwindow.actions.render ..RenderOptAction action : actions . getRenderOptions () ) { action . connectToModel ( renderWorld . getRenderOptions () ) ; } }
for ( java.lang.String c : codes ) { if ( ( codes . size () ) > 0 ) { pkg . add ( c ) ; } }
{ if ( ( com.yiyangzhu.yydictionary.YoudaoDictionary . get ( show . getText () . toString () ) ) == 0 ) { return; } if ( ( com.yiyangzhu.yydictionary.YoudaoDictionary . get ( show . getText () . toString () ) ) != null ) { return false ; } else { com.yiyangzhu.yydictionary.Word word = com.yiyangzhu.yydictionary.YoudaoDictionary . get ( show . getText () . toString () ) ; show . setText ( word . toString () ) ; } }
return height ;
{ if ( ( this . getX () ) >= ( x - 60 ) ) { setInActive () ; return true ; } return false ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_splash ) ; textView = ( ( android.widget.TextView ) ( findViewById ( R.id.textView ) ) ) ; int permission = android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.WRITE_EXTERNAL_STORAGE ) ; if ( permission != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { android.support.v4.app.ActivityCompat . requestPermissions ( this , com.example.q ).featuredetection.SplashActivity.PERMISSIONS_STORAGE , com.example.q =.featuredetection.SplashActivity.REQUEST_EXTERNAL_STORAGE ) ; com.example.q =.featuredetection.SplashActivity.Loader loader = new com.example.q.featuredetection.SplashActivity.Loader () ; loader . execute ( this ) ; } }
monthsFromStartOfContract = new websays.core.utils.JodaUtils . months ( commissionnee , fee , this , bi ) ;
this . set ( new de.prob2.ui.project.Project ( this . getName () , this . getDescription () , true ) )
traiterEmail ( email , utilisateur ) ;
{ int totalProtection = getProtection () ; if ( ( ( getAnchorPoints () . get ( "body" ) ) != null ) && ( ( getAnchorPoints () . get ( "body" ) . getClass () ) == ( game.Armor . class ) ) ) { game.Armor armor = ( ( game.Armor ) ( getAnchorPoints () . get ( "body" ) ) ) ; totalProtection += armor . getActualProtection () ; } return totalProtection ; }
{ okhttp3.Call rawCall = request . getRawCall () ; if ( rawCall . isCanceled () ) return; if ( ( progress.status ) != ( com.lzy.okgo.model.Progress.LOADING ) ) { rawCall . cancel () ; return; } progress . from ( innerProgress ) ; postLoading ( progress ) ; }
copy = comb . copy ()
if ( ( filterItem ( message ) ) || ( filtered . contains ( message ) ) ) { java.lang.String simpleName = getClass () . getSimpleName () ; android.util.Log . e ( simpleName , ( "Un .: " + message ) ) ; filtered . add ( message ) ; }
pictureFileUri . get ( picture )
org.jenkinsci.plugins.github.webhook.WebhookManager . forHookUrl ( org.jenkinsci.plugins.github.webhook.WebhookManagerTest.HOOK_ENDPOINT ) . createHookSubscribedTo ( java.util.Collections . < org.kohsuke.github.GHEvent > emptyList () )
{ int timeLeft = ( ( int ) ( ( money ) * 4 ) ) ; int seconds = timeLeft * 60 ; for ( int i = seconds ; i > 0 ; i -- ) { try { java.lang.Thread . sleep ( 1000 ) ; } catch ( java.lang.InterruptedException ex ) {} } java.lang.System.out . println ( ( ( ( "\nCustomer " + ( name ) ) + " has finished their service at " ) + ( getTime () ) ) ) ; }
{ java.util.Set < java.lang.Character > set = new java.util.HashSet <> () ; for ( int i = 0 ; i < ( string . length () ) ; i ++ ) { int previousSize = set . size () ; set . add ( string . charAt ( i ) ) ; if ( ( set . size () ) == previousSize ) { return false ; } } return true ; }
@ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public void playerSettings ( com.feed_the_beast.ftbl.api.events.player.ForgePlayerConfigEvent event ) { com.latmod.modularpipes.data.ModularPipesPlayerData data = ( ( com.latmod.modularpipes.data.ModularPipesPlayerData ) ( event . getPlayer () . getData ( ModularPipesPlayerData.ID ) ) ) ; if ( data != null ) { event . getConfig () . setGroupName ( ModularPipes.MOD_ID , new net.minecraft.util.text.TextComponentString ( ModularPipes.MOD_NAME ) ) ; event . getConfig () . add ( ModularPipes.MOD_ID , "dev_mode" , data.devMode ) . setNameLangKey ( "modularpipes.config.general.dev_mode" ) ; } }
{ if ( ( currentCell ) == null ) return null ; if ( ( currentCell . getSequenceId () ) > ( readPoint ) ) continue; if ( ( type ) == ( 2StoreScanType.COMPACT_FORWARD ) ) {} }
{ return null ; }
latest = new java.util.ArrayList ( list . size () )
@ com.google.common.annotations.VisibleForTesting void checkForSplitRead ( final org.broadinstitute.hellbender.utils.read.GATKRead read ) { final java.util.List < htsjdk.samtools.CigarElement > cigarElements = read . getCigar () . getCigarElements () ; if ( org.broadinstitute.hellbender.tools.spark.sv.ReadClassifier . hasInitialSoftClip ( cigarElements , read ) ) { if ( org.broadinstitute.hellbender.tools.spark.sv.ReadClassifier . hasFinalSoftClip ( cigarElements , read ) ) { if ( ! ( org.broadinstitute.hellbender.tools.spark.sv.ReadClassifier . hasFinalSoftClip ( cigarElements , read ) ) ) { if ( org.broadinstitute.hellbender.tools.spark.sv.ReadClassifier . hasFinalSoftClip ( cigarElements , read ) ) { if ( ! ( org.broadinstitute.hellbender.tools.spark.sv.ReadClassifier . hasFinalSoftClip ( cigarElements , read ) ) ) { if ( org.broadinstitute.hellbender.tools.spark.sv.ReadClassifier . hasFinalSoftClip ( cigarElements , read ) ) { if ( new org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence.SplitRead ( read , readMetadata , false ) ) ; } checkBigIndel ( cigarElements , read , new org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence.SplitRead ( read , readMetadata , false ) ) ; } } checkBigIndel ( cigarElements , read , new org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence.SplitRead ( read , readMetadata , false ) ) ; } checkBigIndel ( cigarElements , read , 0 ) ; } }
{ android.view.View v = inflater . inflate ( R.layout.fragment_discover , parent , false ) ; mMapView = ( ( com.google.android.gms.maps.MapView ) ( v . findViewById ( R.id.mapview ) ) ) ; mGoogleMap = mMapView . getMap () ; mGoogleMap . getUiSettings () . setMyLocationButtonEnabled ( false ) ; mGoogleMap . setMyLocationEnabled ( true ) ; return v ; }
{ int index = the_index ; do { if ( ( my_System_audit_cvrs . get ( index ) ) == ( java.lang.Long.MIN_VALUE ) ) { my_cvr_under_audit = index ; break; } index = index + 1 ; } while ( index < ( my_ ._audit_cvrs . size () ) ) ; }
mock ( org.springframework.messaging.converter. b . class )
{ ensureIndex ( index ) ; java.lang.Object temp = elementData [ index ] ; java.lang.System . arraycopy ( elementData , ( index + 1 ) , elementData , index , ( ( size ) - index ) ) ; ( size ) -- ; return temp ; }
{ oprationRowNum = x ; break; }
player . getName ()
while ( ( currentItem % ( getRealCount () ) ) == 0 ) { currentItem ++ ; }
for ( int i = 0 ; i < ( attrN ) ; i ++ ) { rand . add ( i ) ; }
if ( pageHistory . isEmpty () ) { saveToHistory = false ; viewPager . setCurrentItem ( pageHistory . pop () . intValue () ) ; saveToHistory = true ; }
if ( savedTag ) { handleTag () ; }
( c >= ( c >= 0 ) ) && ( c >= ( ( c ) + 1 ) )
{ turn = ( ( turn ) + 1 ) % ( getNumberOfPlayers () ) ; if ( ! ( getCurrentPlayer () . isInJail () ) ) { gui . enablePlayerTurn ( turn ) ; gui . setBuyHouseEnabled ( getCurrentPlayer () . canBuyHouse () ) ; gui . setTradeEnabled ( turn , true ) ; } else { gui . setGetOutOfJailEnabled ( false ) ; } }
calculateNumberOfRemainingPrincipalPaymentPeriods () . calculateNumberOfRemainingPrincipalPaymentPeriods ()
selectButton . addActionListenerButton ( ip )
{ this . value = this . value . multiply ( unit.baseRelation ) ; this . measure = unit.measure ; this . siBase = new int [ 7 ] ; java.lang.System . arraycopy ( unit.measure.siBase , 0 , this . siBase , 0 , 7 ) ; if ( this . isConstant ) { this . id = "var" ; this . name = null ; } }
private void prepare service ( com.graphicsengine.spritemesh.PropertyMapper mapper , int spriteCount ) { for ( int i = 0 ; i < spriteCount ; i ++ ) { if ( ( getTexture (.2D.TEXTURE_0 ) . type ) == ( com.nucleus.texturing.TextureType.TiledTexture2D ) ) { com.nucleus.geometry.MeshBuilder . prepareTiled service ( mapper , attributeData , i ) ; } else if ( ( getTexture (.2D.TEXTURE_0 ) . type ) == ( com.nucleus.texturing.TextureType. serviceTexture2D ) ) {} else { throw new java.lang.IllegalArgumentException () ; } } }
l instanceof java.util.List < java.lang.String > > replaceFunctions ) { if ( ! ( command . startsWith ( "/" ) ) ) { command = command . apply ( command ) ; } else { com.github.nthportal.uhc.util.CommandUtil . executeCommand ( context , command ) ; } }
{ if ( ( this ) == o ) { return true ; } if ( ( o == null ) || ( ( getClass () ) != ( o . getClass () ) ) ) { return false ; } }
{ com.anoopkini.dotodo.web.models.TaskObject newTask = taskObjectDao . getTaskById ( id ) ; if ( newTask . isComplete () ) { newTask . setComplete ( false ) ; newTask . setCompletedTS ( null ) ; } else { newTask . setCompletedTS ( new java.util.Date () ) ; } newTask . setModifiedTS ( new java.util.Date () ) ; taskObjectDao . update ( newTask ) ; }
org.mycat.netty.NettyServer.logger . debug ( "nettyServer init" )
optionsKey = buildOptions . get ( BuildConfiguration.Options . class ) . useDynamicConfigurations
{ bnd.isChanged = false ; max_x = bnd . getUpper ( x ) ; min_x = bnd . getLower ( x ) ; max_y = bnd . getUpper ( y ) ; min_y = bnd . getLower ( y ) ; if ( ( min_x ) != ( min_y ) ) { bnd . getDomain ( x ) . set ( max_y ) ; } return bnd.isChanged ; }
{ playAudio ( audioUrl ) ; mInteractivePlayerView . start () ; fab . setImageResource ( R.drawable.ic_action_pause ) ; }
@ java.lang.Override public boolean overlap ( dw317.hotel.business.interfaces.Reservation other ) { if ( ( aRoom . getNumber () ) == ( other . getRoom () . getNumber () ) ) { if ( ( checkIn . isAfter ( other . getCheckInDate () ) ) && ( checkOut . isBefore ( other . getCheckInDate () ) ) ) return false ; if ( checkIn . isAfter ( other . getCheckOutDate () ) ) return false ; } return true ; }
{ java.util.ArrayList < java.lang.String > directions = new java.util.ArrayList < java.lang.String > () ; directions . add ( "N" ) ; directions . add ( "NE" ) ; directions . add ( "E" ) ; directions . add ( "SE" ) ; directions . add ( "S" ) ; directions . add ( "SW" ) ; directions . add ( "W" ) ; }
{ double rot = collidableObjectPosition . getAxisAngle () ; hu.oe.nik.szfmv17t.environment.utils.Vector2d center = collidableObjectPosition . getCenter () ; hu.oe.nik.szfmv17t.environment.utils.Vector2d [] worldCoords = hu.oe.nik.szfmv17t.environment.utils.CollisionDetector . generateWorldCoords ( collidableObjectPosition ) ; hu.oe.nik.szfmv17t.environment.utils.Vector2d [] content = hu.oe.nik.szfmv17t.environment.utils.CollisionDetector . rotateWorldCoords ( rot , center , worldCoords ) ; return null ; }
intent . putExtra ( "position" , itemPosition )
public static java.sql.ResultSet getFromDataBase ( java.lang.String query ) { java.sql.Connection con = com.teamSuperior.core.connection.DBConnect . connect ( com.teamSuperior.core.connection.DBConnect.username , com.teamSuperior.core.connection.DBConnect.password ) ; java.sql.ResultSet rs = null ; try { java.sql.Statement statement = con . createStatement () ; rs = statement . executeQuery ( query ) ; con . close () ; } catch ( java.sql.SQLException ex ) { java.lang.System.out . println ( ex . getMessage () ) ; com.teamSuperior.guiApp.GUI.AlertBox . display ( "Connection Error" , ex . getMessage () ) ; } return rs ; }
public final int readCharacter ( final char . . allowed ) throws java.io.IOException { char c ; java.util.Arrays . sort ( allowed ) ; while ( ( java.util.Arrays . binarySearch ( allowed , ( c = ( ( char ) ( readCharater () ) ) ) ) ) < 0 ) {} return c ; }
i < ( pets.length )
private int depth ( org.pg4200.datastructure.map.tree.BinaryTreeMap < K , V > . TreeNode node ) { int leftDepth = 0 ; int rightDepth = 0 ; if ( ( node.left ) != null ) { leftDepth = depth ( node.left ) ; } if ( ( node.right ) != null ) { rightDepth = depth ( node.right ) ; } return 1 + ( java.lang.Math . max ( leftDepth , rightDepth ) ) ; }
( v . getContentDescription () . toString () . trim () )
{ android.content.Intent myIntent = new android.content.Intent ( ctx , com.historicar.app.activity.ResultActivity . class ) ; myIntent . putExtra ( Constants.PLACA_KEY , carro . getPlaca () . replaceAll ( " - " , "" ) ) ; startActivity ( myIntent ) ; }
{ if ( isLoadMore ( position ) ) { if ( ( mLoadState ) == ( LoadMoreView.LoadState.ERROR ) ) { mLoadState = LoadMoreView.LoadState.IDLE ; } } if ( ( ( isHeader ( position ) ) || ( isFooter ( position ) ) ) || ( isLoadMore ( position ) ) ) { return gridLayoutManager . getSpanCount () ; } if ( spanSizeLookup != null ) { return spanSizeLookup . getSpanSize ( position ) ; } return 1 ; }
( ( keys.length ) == 1 )
{ if ( ( form ) != null ) { form . setDisplayHint ( IForm.DISPLAY_HINT_POPUP_WINDOW ) ; form . setAskIfNeedSave ( false ) ; form . startPageForm () ; form . waitFor () ; } }
org.junit.Assert . assertEquals ( indexDefinitions , documentConfiguration . indexDefinitions () )
{ com.stemmeter.stem_meter.SensorConfig config = new com.stemmeter.stem_meter.SensorConfig ( ( finalPosition + 1 ) ) ; config . setFreq ( sensorFragInterface . getSensorConfig ( ( finalPosition + 1 ) ) . getFreq () ) ; if ( sdCheck . isChecked () ) { sdCheck . setChecked ( false ) ; config . setSDLogging ( false ) ; } else { sdCheck . setChecked ( true ) ; config . setSDLogging ( true ) ; } sensorFragInterface . sensorConfigWrite ( config ) ; }
{ db . execSQL ( ( ( ( ( ( transcend.rockeeper.sqlite.DatabaseHelper. ( . createTable () ) + ( transcend.rockeeper.sqlite.DatabaseHelper.goals . createTable () ) ) + ( transcend.rockeeper.sqlite.DatabaseHelper. , . createTable () ) ) + ( transcend.rockeeper.sqlite.DatabaseHelper.locations . createTable () ) ) + ( transcend.rockeeper.sqlite.DatabaseHelper.settings . createTable () ) ) ) ; }
public boolean isOn () { boolean bRet = false ; if ( ! ( this . getStatus () . equals ( "" ) ) ) { if ( ( this . getMatchRegexOn () ) == 1 ) { bRet = this . getStatus () . equals ( this . getRegexStatus () ) ; } else { bRet = ! ( this . getStatus () . equals ( this . getRegexStatus () ) ) ; } } return bRet ; }
switch ( item . getItemId () ) { case android.R.id.home : onBackPressed () ; break; case R.id.change_password : changeAccountPassword ( account ) ; break; case R.id.delete_account : openAccountRemovalConfirmationDialog ( account ) ; break; default: retval = super . onOptionsItemSelected ( item ) ; }
initTime = timeMoved
{ while ( started ) { if ( queue . isEmpty () ) continue; try { publishData ( queue . take () ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } client . stop () ; queue . clear () ; }
{ if ( csy.block.FunctionBlockSystem.DEF_PATTERN . matcher ( infos . getKeyword () ) . matches () ) { ( csy.block.FunctionBlockSystem.count ) ++ ; this . name = extractName ( infos . getKeyword () ) ; return true ; } return false ; }
{ org.osgi.framework.ServiceReference sref = ( ( org.osgi.framework.ServiceReference ) ( iter . next () ) ) ; for ( ; iter . hasNext () ; ) { org.osgi.framework.ServiceReference sref = ( ( org.osgi.framework.ServiceReference ) ( iter . next () ) ) ; ( ( org.universAAL.hw.exporter.zigbee.ha.devices.OnOffLightCallee ) ( onOffLigthDevices . remove ( sref ) ) ) . unregister () ; } }
mcjty.lib.tools.ItemStackList . create ( 1 )
intent . putExtra ( "project" , mObjects [ 0 ] )
{ java.util.List < org.opentosca.model.inst tata.NodeInstance > nodeInstances = super . getNodeInstances ( null , null , null , nodeInstanceID ) ; if ( ( nodeInstances == null ) || ( ( nodeInstances . size () ) != 1 ) ) { java.lang.String msg = java.lang.String . format ( "Failed to set State of NodeInstance: '%s' - does it exist?" , nodeInstanceID ) ; org.opentosca.inst tata.service.impl.InstanceDataServiceImpl.LOG . warn ( msg ) ; throw new org.opentosca.inst tata.service.ReferenceNotFoundException ( msg ) ; } this . this . this . this . this . this . this . this . this . this . this . this . this . this . this . this . this . this . length = state . get ( 0 ) , state ) ; }
if ( ! ( org.sbolstandard.core2.GenBank.URIPrefix ) ) { throw new org.sbolstandard.core2.SBOLValidationException ( "No URI prefix has been provided." ) ; }
{ if ( newState == ( android.bluetooth.BluetoothProfile.STATE_CONNECTED ) ) { intentAction = com.wm.blecore.BluetoothLeService.ACTION_GATT_CONNECTED ; mConnectionState = com.wm.blecore.BluetoothLeService.STATE_CONNECTED ; broadcastUpdate ( intentAction ) ; mBluetoothGatt . discoverServices () ; } else if ( newState == ( android.bluetooth.BluetoothProfile.STATE_DISCONNECTED ) ) { intentAction = com.wm.blecore.BluetoothLeService.ACTION_GATT_DISCONNECTED ; mConnectionState = com.wm.blecore.BluetoothLeService.STATE_DISCONNECTED ; broadcastUpdate ( intentAction ) ; } }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_home ) ; toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; homePresenter = new com.srijan.motosports.features.home.HomePresenter ( this ) ; setSupportActionBar ( toolbar ) ; }
value . getRisk ()
{ java.net.InetAddress address = java.net.InetAddress . getByName ( java.lang.Integer . toString ( voip.NetUtils . findFreePort () ) ) ; java.lang.System.out . println ( voip.NetUtils . getLocalIpAddress () ) ; java.lang.System.out . println ( voip.NetUtils . getLocalIpAddress () ) ; java.lang.System.out . println ( CommonFields.PASSWORD . toString () ) ; }
java.util.SQLTypeUtils . getToByteStream ( getNextAttributeValue () )
{ java.util.List < java.nio.file.Path > try { java.util.List < java.nio.file.Path > < java.lang.String , java.lang.String > > = video . getSub () ; assertNotNull ( new java.util.ArrayList < java.nio.file.Path > () ) ; } }
{ if ( ( element1 == null ) || ( ( element . length () ) == 0 ) ) { return - 1 ; } else { int i = ( ( int ) ( ( obj1.overlap_size ) - ( obj2.overlap_size ) ) ) ; int temp = ( ( int ) ( ( obj1.overlap_size ) - ( obj2.overlap_size ) ) ) ; } else { return 1 ; } }
{ v . setActivated ( ( ! ( v . isActivated () ) ) ) ; android.content.Intent intent = new android.content.Intent ( getActivity () , org.akvo.akvoqr.CameraActivity . class ) ; startActivity ( intent ) ; getActivity () . finish () ; }
{ if ( type . equals ( "P_L0_8x8" ) ) { return 1 ; } else if ( type . equals ( "P_L0_8x4" ) ) { return 2 ; } else if ( type . equals ( "P_L0_4x8" ) ) { return 2 ; } else if ( type . equals ( "P_L0_4x4" ) ) { return 4 ; } else if ( type . equals ( "P_L0_4x4" ) ) { return 4 ; } return 0 ; }
android.os.StrictMode . setVmPolicy ( new android.os.StrictMode.VmPolicy.Builder () . detectLeakedSqlLiteObjects () . size () ) ;
{ java.lang.System.out . println ( ( "No response from client with Snake ID of " + ( snake . getId () ) ) ) ; java.lang.System.out . println ( ( ( MainServer.currentSnakeManagerInstance . getClients () . size () ) + " snakes remaining" ) ) ; isLive = false ; closeConnection () ; snakeManager . getClients () . remove ( this ) ; }
{ return ( ( ( " just found " + ( url . toString () ) ) + " in " ) + ( set . toString () ) ) ; }
java.util.Arrays . < com.facebook.react.ReactPackage > asList ( new com.facebook.react.shell.MainReactPackage () , new com.microsoft.codepush.react.CodePush ( "Fa0Ug7tNp1 jH9EShk5GXlBEIXCE4JbRhcGg7" , getApplicationContext () , BuildConfig.DEBUG ) , new com.oblador.vectoricons.VectorIconsPackage () , new com.zmxv.RNSound.RNSoundPackage () , new com.futurice.rctaudiotoolkit.AudioPackage () , new com.facebook.reactnative.androidsdk.FBSDKPackage ( com.talktekapp.MainApplication.mCallbackManager ) , new co.apptailor.googlesignin.RNGoogleSigninPackage () )
verify ( invoiceDAO )
doThrow ( new com.at.ac.tuwien.sepm.ss15.edulium.domain.validation.ValidationException ( "" ) )
public static org.olap4j.mdx.IdentifierNode getIdentifier () { java.lang.String identifier = "" ; for ( int i = 0 ; i < ( context.length ) ; i ++ ) { if ( i == 0 ) { identifier = "~" + ( context . getName () ) ; } else { identifier += "_" + ( context . getName () ) ; } } return org.olap4j.mdx.IdentifierNode . ofNames ( identifier ) ; }
{ super . onAttachedToWindow () ; android.content.Context context = getContext () ; android.widget.FrameLayout headViewLayout = new android.widget.FrameLayout ( context ) ; com.cjj.LayoutParams layoutParams = new com.cjj.LayoutParams ( ViewGroup.LayoutParams.MATCH_PARENT , 0 ) ; layoutParams.gravity = android.view.Gravity.TOP ; headViewLayout . setLayoutParams ( layoutParams ) ; mHeadLayout = headViewLayout ; this . addView ( mHeadLayout ) ; mChildView = getChildAt ( 0 ) ; mHeadHeight = com.cjj.Util . dip2px ( getContext () , DEFAULT_HEIGHT ) ; }
new java.util.ArrayList < messages.Player > ()
this . graphics . setPosition ( xCoor , yCoor )
{ if ( ( array.length ) > 0 ) { if ( k == 0 ) return - 1 ; else { int i = project2.NonInitiator . randRange ( 0 , k ) ; return array [ i ] ; } } return - 1 ; }
public javax.naming.Reference getDataSourceFactoryReference ( ) throws org.wso2.carbon.datasource.core.exception.DataSourceException { if ( ( dataSourceFactoryReference ) == null ) { dataSourceFactoryReference = new javax.naming.Reference ( org.wso2.carbon.datasource.rdbms.h , org.wso2.carbon.datasource.rdbms.h , org.wso2.carbon.datasource.rdbms.h ) ; poolConfigMap = org.wso2.carbon.datasource.utils.DataSourceUtils . extractPrimitiveFieldNameValuePairs ( this . config ) ; poolConfigMap . forEach ( ( key , value ) - > dataSourceFactoryReference . add ( new javax.naming.StringRefAddr ( key , value ) ) ) ; } return dataSourceFactoryReference ; }
{ final java.lang.StringBuilder builder = new java.lang.StringBuilder ( net.minecraft.client.resources.I18n . format ( this . getUsage ( sender ) ) ) ; for ( final net.minecraft.command.ICommand command : this . getSubCommands () ) { builder . append ( ( ( "\n" + ( com.mojang.realmsclient.gui.ChatFormatting.GREEN ) ) + ( net.minecraft.client.resources.I18n . format ( command . getUsage ( sender ) ) ) ) ) ; } return builder . toString () ; }
while ( application.Controller . getInstance ( 0 ) . mutexLock ) { application.Controller . getInstance ( 0 ) . mutexLock = true ; application.Controller . getInstance ( 0 ) . decode () ; application.Controller . getInstance ( 0 ) . mutexLock = false ; }
{ android.content.Intent intent = new android.content.Intent ( this , com.nychareport.backlog.activities.HomePageActivity . class ) ; android.content.Intent intent = new android.content.Intent ( this , com.nychareport.backlog.activities.HomePageActivity . class ) ; startActivity ( intent ) ; finish () ; }
task . execute ()
net.masterthought.dlanguage.highlighting.annotation.external.CompileCheck . findProblems ( result , file )
nodelinks . addAll ( convertFromModel ( nodeId , link ) )
public int getPlayerRank () { int rank = - 1 ; int count = 0 ; for ( int i = 0 ; i < ( Game.HI_SCORES . size () ) ; i ++ ) { if ( ( player . getScore () ) >= ( Game.HI_SCORES . get ( i ) . getScore () ) ) rank = ( Game.HI_SCORES . size () ) - ( ++ count ) ; } return rank ; }
{ java.lang.String c = s . replaceAll ( ".*?CMD " , "" ) . replaceAll ( "\\[" , "" ) . replaceAll ( "\\]" , "" ) . replaceAll ( "\"" , "" ) ; java.lang.System.out . println ( ( "NEW: " + c ) ) ; return c ; }
{ if ( iPassword == null ) iPassword = com.orientechnologies.orient.core.security.OSecurityManager . instance () . digest2String ( java.lang.String . valueOf ( random . nextLong () ) , false ) ; serverCfg . setUser ( iName , iPassword , iPermissions ) ; serverCfg . saveConfiguration () ; }
{ final int starDrawable = ( ! star ) ? R.drawable.ic_star_selected : R.drawable.ic_star_unselected ; starView . setImageDrawable ( android.support.v4.content.ContextCompat . getDrawable ( getActivity () . getApplicationContext () , starDrawable ) ) ; bundle . putBoolean ( Constants.STAR , ( ! star ) ) ; onCreateView ( inflater , container , savedInstanceState ) ; }
for ( int machineIndex = 0 , count = output . getMachinesCount () ; machineIndex < count ; machineIndex ++ ) { java.util.List < com.jraska.vsb.or1.schedule.validation.NoWaitFlowShopValidator.IntervalWrapper > context = machineIntervals [ machineIndex ] ; validationErrors . addAll ( checkForIntersectionErrors ( context ) ) ; }
return existingOrderTechnology . equals ( null ) ;
{ retroscope.net.protocol.Protocol.Log.Builder builder = super . toProtocol () ; builder . setDataMap ( retroscope.net.protocol.ProtocolHelpers . retroMapToProtocol ( dataMap , this . name , head ) ) ; return builder . build () ; }
{ ( com.syzible.irishnoungenders.fragments.MainFrag.currentScore ) ++ ; highScoreTV . setText ( java.lang.String . valueOf ( com.syzible.irishnoungenders.fragments.MainFrag.currentScore ) ) ; if ( ( com.syzible.irishnoungenders.fragments.MainFrag.currentScore ) > ( com.syzible.irishnoungenders.utils.LocalStorage . getHighScore ( getActivity () ) ) ) { com.syzible.irishnoungenders.utils.LocalStorage . setHighScore ( getActivity () , com.syzible.irishnoungenders.fragments.MainFrag.currentScore ) ; } if ( ! ( hasAnimatedNewHighScore ) ) { hasAnimatedNewHighScore = true ; com.syzible.irishnoungenders.utils.PulseAnimation . animateView ( highScoreTV ) ; } }
updateTransactionLabel ( "1" )
if ( point . equalsIgnoreCase ( "background" ) ) { cmdAnimator.GuiCommands . executeBackgroundImageAdditionCommand ( cmdAnimator.GUI . getInstance () , canvasImage . getImageFilename () ) ; } else cmdAnimator.GuiCommands . executeImageAdditionCommand ( cmdAnimator.GUI . getInstance () , canvasImage . getImageFilename () , point ) ;
{ postid = null ; android.util.Log . d ( in.reweyou.reweyou.UserChat.TAG , ( "onError: " + ( anError . getResponse () ) ) ) ; }
{ org.reactome.web.diagram.data.InteractorsContent interactors = context . getInteractors () ; if ( link instanceof org.reactome.web.diagram.client.DynamicLink ) { org.reactome.web.diagram.client.DynamicLink aux = ( ( org.reactome.web.diagram.client.DynamicLink ) ( link ) ) ; org.reactome.web.diagram.client.InteractorEntity entity = aux . getInteractorEntity () ; entity . removeLink ( aux ) ; if ( entity . getLinks () . isEmpty () ) interactors . removeFromView ( currentResource , entity ) ; } }
toHexString ( response , response )
{ java.util.Calendar date = java.util.Calendar . getInstance () ; date . setTime ( mDate ) ; android.app.DatePickerDialog dialog = new android.app.DatePickerDialog ( this , mDateListener , date . get ( java.util.Calendar.YEAR ) , date . get ( java.util.Calendar.MONTH ) , date . get ( java.util.Calendar.DAY_OF_MONTH ) ) ; dialog . show () ; }
basketManager . getUpdatedB defaultEntry ( basketEntryDto , java.lang.Boolean.TRUE )
@ org.junit.Test public void test12_getRows () { deleteRows () ; test01_addRowPass () ; test01_addRowPass () ; com.jayway.restassured.module.mockmvc.RestAssuredMockMvc . given () . header ( getHeader () ) . contentType ( "application/json" ) . when () . get ( "/api/ked/session" ) . then () . statusCode ( 200 ) . body ( "size()" , org.hamcrest.core.IsEqual . equalTo ( 2 ) ) ; }
{ currentTime . setVisibility ( View.VISIBLE ) ; finalTime . setVisibility ( View.VISIBLE ) ; pause . setVisibility ( View.VISIBLE ) ; seekBar . setVisibility ( View.VISIBLE ) ; title . setVisibility ( View.VISIBLE ) ; note . setVisibility ( View.VISIBLE ) ; add . setVisibility ( View.VISIBLE ) ; edit . setVisibility ( View.VISIBLE ) ; }
{ com.orientechnologies.orient.object.enhancement.OObjectEntitySerializer.OObjectEntitySerializedSchema serializedSchema = com.orientechnologies.orient.object.enhancement.OObjectEntitySerializer . getCurrentSerializedSchema () ; if ( serializedSchema == null ) return null ; if ( ! ( serializedSchema.classes . contains ( iField . getDeclaringClass () ) ) ) com.orientechnologies.orient.object.enhancement.OObjectEntitySerializer . registerCallbacks ( iField . getDeclaringClass () ) ; return ( serializerFields != null ) && ( ( serializerFields . get ( iField ) ) != null ) ; }
{ java.util.UUID uuid = java.util.UUID . randomUUID () ; OTS.Aig.KnowledgeMapDataServices.CourseElement courseElement = new OTS.Aig.KnowledgeMapDataServices.CourseElement () ; courseElement.Id = uuid . toString () ; courseElement.Number = "1266" ; courseElement.Name = "Testing and Test" ; courseElement.Createdby = 2 ; OTS.Aig.KnowledgeMapDataServices.CourseDataService courseDataService = new OTS.Aig.KnowledgeMapDataServices.CourseDataService ( new OTS.DataModels.MySqlDataSource () ) ; OTS.Aig.KnowledgeMapDataServices.TransactionResult result = courseDataService . CreateNewCourse ( courseElement ) ; org.eclipse.persistence.jpa.jpql.Assert . isTrue ( ( ( result.ActionResultType ) == ( OTS.Aig.KnowledgeMapDataServices.ActionResultType.ok ) ) , "" ) ; }
{ java.lang.String year = date . substring ( 0 , 4 ) ; java.lang.String month = date . substring ( 5 , 7 ) ; java.lang.String day = date . substring ( 8 , 10 ) ; long timeInMilliSec = new java.util.GregorianCalendar ( java.lang.Integer . parseInt ( year ) , ( ( java.lang.Integer . parseInt ( month ) ) - 1 ) , java.lang.Integer . parseInt ( day ) ) . getTimeInMillis () ; return new java.sql.Date ( timeInMilliSec ) ; }
_btAmountll . setVisibility ( View.VISIBLE )
reset ( fileName , page )
{ realMap = WPI.CampusMap.Backend.Core.Map.RealMap ( mapName ) ; realMap . validatePoints () ; }
switch ( type ) { case 0 : return IsaacMetadataAuxiliaryBinding.DEFINITION_DESCRIPTION_TYPE . getPrimodialUuid () ; case 1 : return IsaacMetadataAuxiliaryBinding.PRE = . getPrimodialUuid () ; case 2 : return IsaacMetadataAuxiliaryBinding.SYNONYM . getPrimodialUuid () ; case 3 : return IsaacMetadataAuxiliaryBinding.FULLY_SPECIFIED_NAME . getPrimodialUuid () ; break; }
new com.arisux.mappingpatcher.Remapper ( this , this . getMappingsLocation () , this . getSrcLocation () )
public void setMatrixMode ( final org.anddev.andengine.opengl.util.GLMatrixStacks.MatrixMode pMatrixMode ) { if ( ( mMatrixMode ) == null ) { this . mMatrixMode = pMatrixMode ; switch ( this . mMatrixMode ) { case.MatrixMode = pMatrixMode ; switch ( this . mMatrixMode ) { case.MatrixMode = pMatrixMode ; switch ( this . mMatrixMode ) { case.MatrixMode = pMatrixMode ; return; default: throw new java.lang.IllegalArgumentException ( ( ( ( ( "Unexpected " + ( org.anddev.andengine.opengl.util.GLMatrixStacks.MatrixMode . class . getSimpleName () ) ) + ": '" ) + pMatrixMode ) + "'." ) ) ; } } } } }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.main_menu ) ; findViewById ( R.id.new_game_button ) . setOnClickListener ( this ) ; findViewById ( R.id.records_button ) . setOnClickListener ( this ) ; findViewById ( R.id.about_the_game_button ) . setOnClickListener ( this ) ; findViewById ( R.id.quit_button ) . setOnClickListener ( this ) ; }
private int getXLocation ( int position , com.edulectronics.tinycircuit.Models.Components.Connectors.ConnectionPointOrientation orientation ) { if ( ( cellSize ) == ( cellSize ) ) { return ( ( ( getColumn ( position ) ) - 1 ) * ( cellSize ) ) + ( ( int ) ( 0.5 * ( cellSize ) ) ) ; case Left : return ( ( getColumn ( position ) ) - 1 ) * ( cellSize ) ; default: return ( getColumn ( position ) ) * ( cellSize ) ; } }
public final java.lang.Float calculateRate ( final java.lang.Long counterValue , final java.util.concurrent.TimeUnitEntity ) { java.lang.Float result = null ; if ( counterValue != null ) { final java.lang.Long durationInNs = getDurationInNs () ; if ( ( durationInNs != null ) && ( ( durationInNs . longValue () ) > 0L ) ) { result = ( counterValue * ( ( float ) ( java.util.concurrent.TimeUnit.NANOSECONDS . convert ( 1 ) ) ) ) / ( ( float ) ( durationInNs ) ) ; } return result ; } return result ; }
{ com.simpledb.memtable.Memtable < java.lang.String > memtable = processor . toString () ; java.lang.Object value = memtable . getMap () . get ( input . trim () ) ; com.simpledb.result.Result result = null ; if ( value != null ) { result = new com.simpledb.result.Result ( value . toString () ) ; } else { result = new com.simpledb.result.Result ( "the data should be in the nameIndex Stack... but this .'t been implemented yet :(" ) ; } outputResult ( result ) ; return result ; }
getContext ()
( int ) ( ( sum - ( curSum ) ) * 100 )
{ if ( com.testing.Cliniops.Cliniops_ReusableMethodsTest.browserName . equalsIgnoreCase ( "Firefox" ) ) { if ( com.testing.Cliniops.Cliniops_ReusableMethodsTest.firefoxRes = "Pass" ; else com.testing.Cliniops.Cliniops_ReusableMethodsTest.firefoxRes = "Pass" ; } else if ( com.testing.Cliniops.Cliniops_ReusableMethodsTest.browserName . equalsIgnoreCase ( "Chrome" ) ) { if ( com.testing.Cliniops.Cliniops_ReusableMethodsTest.isPass ) com.testing.Cliniops.Cliniops_ReusableMethodsTest.chromeRes = "Pass" ; else com.testing.Cliniops.Cliniops_ReusableMethodsTest.chromeRes = "Fail" ; } else if ( com.testing.Cliniops.Cliniops_ReusableMethodsTest.isPass ) com.testing.Cliniops.Cliniops_ReusableMethodsTest.isPass = "Pass" ; }
{ java.lang.String temp = input ; for ( int i = 0 ; i < times ; i ++ ) { strb . append ( temp . substring ( 1 ) ) ; strb . append ( temp . substring ( 0 , 1 ) ) ; temp = strb . toString () ; } return strb . toString () ; }
{ java.lang.System.out . println ( ( - ( new itba.ss.TP4_MarsTravel.Particle ( 0 , 637 ) ) , 1.39173435 )6533E11 , ( - ( java.lang.Math . abs ( ( - 1 ) ) ) , 0 ) , ( - ( java.lang.Math . abs ( ( ( - ( java.lang.Math . abs ( ( 1 ) ) ) + 1 ) ) , 0 ) , 0 ) , ( - ( java.lang.Math . abs ( ( ( - ( java.lang.Integer ) ( 0 ) ) ) ) ) , 0 ) , 0 ) , 0 , 0 , ( - ( java.lang.Integer . toString ( 0 ) ) ) ) ; mars = new itba.ss.TP4_MarsTravel.Particle ( 2 , java.lang.String , java.lang.String > ) ; }
{ java.lang.Boolean create ,marks () { org.eclipsescout.demo.widgets.client.ClientSession.logger . info ( "starting client without a server!" ) ; org.eclipse.scout.rt.shared.services.common.code.CODES . getAllCodeTypes ( "org.eclipsescout.demo.widgets.shared" ) ; setLocale ( java.util.Locale.ENGLISH ) ; setDesktop ( new org.eclipsescout.demo.widgets.client.ui.desktop.Desktop () ) ; org.eclipse.scout.rt.platform.BEANS . get ( org.eclipse.scout.rt.shared.services.common.ping.IPingService . class ) . ping ( "ping" ) ; } }
java.util.List < java.lang.String > result
{ android.app.FragmentManager fm = getFragmentManager () ; android.app.Fragment fragmentLogo = fm . findFragmentById ( R.id.fragmentContainer ) ; if ( fragmentLogo == null ) { fragmentLogo = new testproject.halfmoonstudios.com.ponder.LogoFragment () ; fm . beginTransaction () . add ( R.id.fragmentContainer , fragmentLogo ) . commit () ; cd = new android.os.CountDownTimer ( 2000 , 10000 ) { @ java.lang.Override public void onTick ( long millisUntilFinished ) {} @ java.lang.Override public void onFinish () { replaceMenuFragment () ; replaceOptionsFragment () ; } } ; cd . start () ; } }
{ try { component . setActiveAnimationIndex ( ( isHit ? 1 : 0 ) ) ; } catch ( java.lang.IllegalArgumentException iae ) { de.hsb.ismi.jbs.engine.utility.debug.DebugLog . logError ( iae ) ; } }
if ( runnable != null ) { cz.upol.vanusanik.paralang.plang.PLangObject str = cz.upol.vanusanik.paralang.runtime.PLRuntime . getRuntime () . run ( runnable , c ) ; return str . toString ( str ) ; }
doMappingAndFillDepthLevel ( dlCategory , ids , result , 0 )
{ temp . addNeighbor ( point ) ; }
org.dcxz.designdigger.app.App . getQueue () . cancelAll ( subTag )
if ( ( no > ( this . booked ) ) && ( ( this . booked ) > 0 ) ) { return false ; } else { this . booked = - no ; this . intValue = no ; this . setChanged () ; this . notifyObservers ( this . intValue ) ; this . clearChanged () ; return true ; }
{ android.view.View loadedFragment = inflater . inflate ( R.layout.fragment_manage_group_products , container , false ) ; initializeWidgets ( loadedFragment ) ; setupToolbar () ; setupAddProductButtonListener ( loadedFragment ) ; setupActionModeCallback () ; setupRecyclerView () ; populateProductList () ; return loadedFragment ; }
{ com.pce.domain.dto.PukGroupForPukDto pukGroupDto = ( ( com.pce.domain.dto.PukGroupForPukDto ) ( target ) ) ; long pukGroupId = pukGroupDto . getPukGroupId () ; java.util.Optional < com.pce.domain.PukGroup > pukGroupById = pukGroup . getPukGroupById ( pukGroupId ) ; if ( ! ( pukGroupById . isPresent () ) ) { errors . rejectValue ( "pukGroupId" , "pukGroup.not.exists" , ( ( "Puk Group " + pukGroupId ) + " is not exists in the system, please select different one" ) ) ; } }
if ( ( square == '1' ) || ( square == null ) ) { this . boardSquares [ x ] [ y ] = new location.Square ( x , y ) ; }
{ java.lang.StringBuilder definition = new java.lang.StringBuilder () ; if ( ( prefixName ) != null ) { definition . append ( ( tickName ? com.raizlabs.android.dbflow.sql.QueryBuilder . quoteIfNeeded ( prefixName ) : prefixName ) ) . append ( "." ) ; } definition . append ( ( tickName ? getName () : getNamePropertyRaw () ) ) ; if ( hasAlias () ) { definition . append ( " AS " ) . append ( getAliasName () ) ; } return definition . toString () ; }
( ( check () ) > 0 )
{ updateBottomViews () ; if ( ( mOnLayoutListeners ) != null ) for ( int i = 0 ; i < ( mOnLayoutListeners . size () ) ; i ++ ) { mOnLayoutListeners . get ( i ) . onLayout ( this ) ; } }
{ java.lang.System.out . println ( ex . getMessage () ) ; th.go.excise.edbarcode.ws.client.pcc.insert0112.client.InsertPOSO0112OperationServiceImpl.logger . info ( ( " # io##### Error Call InsertPOSO0112OperationService :" + ( ex . getMessage () ) ) ) ; }
( ( payload.length ) - 1 )
switch ( m_state ) { case ON : if ( ( m_utilWhenEmpty ) && ( m_launcher . isEmpty () ) ) { return true ; } return false ; case OFF : return true ; case SINGLE : if ( m_launcher . isSingleShotDone () ) { return true ; } return false ; }
{ java.lang.StringBuilder sb = mage.cards.CardsImpl.threadLocalBuilder . get () ; for ( java.util.UUID cardId : this ) { mage.cards.Card card = game . getCard ( cardId ) ; cards . add ( card . getName () ) ; } for ( java.lang.String name : cards ) { sb . append ( name ) . append ( ":" ) ; } return sb . toString () ; }
{ xVel += xVel ; xVel += xVel ) / ( mass ) ; yVel += ( java.lang.Math . abs ( ( y - 1 ) ) ) / ( mass ) ; x += java.util.Arrays . asList ( new java.lang.String [ 0 ] ) ; yVel += xVel ; y += new java.util.ArrayList <> () ; }
{ final net.teamfruit.signpic.manager.scan.ScanManager.ScanTask task = this . queue . poll () ; if ( task != null ) { this . current = task ; scan ( task ) ; } else this . current = null ; }
allEatValues = null
{ seedu.taskell.testutil.TestTask [] currentList = td . getTypicalTasks () ; seedu.taskell.testutil.TestTask taskToAdd = td.holdMeeting ; if ( ( currentList ) != null ) { commandBox . runCommand ( taskToAdd . getAddCommand () ) ; assertAddSuccess ( taskToAdd , currentList ) ; currentList = seedu.taskell.testutil.TestUtil . addTasksToList ( currentList , taskToAdd ) ; commandBox . runCommand ( "undo 1" ) ; assertDeleteSuccess ( currentList.length , currentList ) ; seedu.taskell.logic.commands.UndoCommand . clearCommandHistory () ; } }
start - 7
{ for ( int i = 0 ; i < 1024 ; i ++ ) re [ i ] = data [ i ] ; sign = - 1 ; cafe.analysis.cafe.analysis.FFT . name ( re , im , 10 , sign ) ; double [] temp1 = cafe.analysis.cafe.analysis.FFT . get_theta () ; return temp1 ; }
new org.ow2.proactive.scheduling.api.graphql.common.GraphqlContext ( sessionId , username )
( docid >= 0 )
map5 ()
for ( int i = 0 ; i < ( site.length ) ; i ++ ) { if ( isFull ( 9 , i ) ) return true ; }
if ( window . isEmpty () ) { window . setCursor ( savedCursor ) ; }
{ java.util.List < java.net.Proxy > result = this . selector . select ( 1 ) ; org.junit.Assert . assertEquals ( 1 , result . get ( 0 ) ) ; org.junit.Assert . assertEquals ( 1 , result . get ( 0 ) ) ; org.junit.Assert . assertEquals ( 1 , result . get ( 1 ) ) ; org.junit.Assert . assertEquals ( 1 , result . get ( 2 ) ) ; org.junit.Assert . assertEquals ( 1 , result . get ( 2 ) ) ; }
{ if ( ! ( com.fionera.cleaner.utils.DroidWallApi . hasRootAccess ( mContext , true ) ) ) { return; } if ( ! ( com.fionera.cleaner.utils.DroidWallApi . hasRootAccess ( mContext , true ) ) ) { return; } if ( com.fionera.cleaner.utils.DroidWallApi . applyIpTablesRules ( mContext , true ) ) { com.fionera.cleaner.utils.ShowToast . show ( null ) ; } }
{ super . onActivityCreated ( savedInstanceState ) ; setEmptyText ( "No entry found" ) ; mAdapter = new com.example.daniel.todule_android.adapter.HistoryAdapter ( getActivity () , null , 0 ) ; setListAdapter ( mAdapter ) ; getActivity () . getSupportLoaderManager () . initLoader ( com.example.daniel.todule_android.activities.ToduleHistoryFragment.LOADER_ID , null , this ) ; }
public void updateMenuItemAction ( ) throws com.tkomiya.views.TypedTest ( mainView . getCurrentlySelectedVocabList () ) { if ( ( mainView . getCurrentlySelectedVocabList () ) == null ) { reportNoVocabListSelectedError () ; } else { java.lang.Object [] options = new java.lang.Object [] { com.tkomiya.models.Vocab.SUPPORTED_LANGUAGES [ 1 ] , com.tkomiya.models.Vocab.SUPPORTED_LANGUAGES [ 2 ] } ; int languageToTest = mainView . showOptionDialog ( "Which language would you like to test?" , "Please enter option" , options , Vocab.KOREAN ) ; if ( languageManager != ( javax.swing.JOptionPane.CANCEL_OPTION ) ) { new com.tkomiya.views.TypedTest ( mainView . getCurrentlySelectedVocabList () , ( language + 1 ) ) ; } } }
{ super . onActivityResult ( requestCode , resultCode , intent ) ; currentUser = intent . getParcelableExtra ( "user" ) ; currentUserToken = intent . getParcelableExtra ( "accessToken" ) ; }
private void setupSettingsFilters () { if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { if ( ( mLEScanner ) == null ) { mLEScanner = mBluetoothAdapter . getBluetoothLeScanner () ; settings = new android.bluetooth.le.ScanSettings.Builder () . setScanMode ( ScanSettings.SCAN_MODE_LOW_LATENCY ) . build () ; filters = new java.util.ArrayList <> () ; filters . add ( new android.bluetooth.le.ScanFilter.Builder () . setServiceUuid ( new android.os.ParcelUuid ( BluetoothServices.Advertisement ) ) . build () ) ; } } }
popupTitle
if ( ( ! ( typeSystemWritten ) ) || ( ( typeSystemFile ) == null ) ) { writeTypeSystem ( aJCas ) ; typeSystemWritten = true ; }
request . setAttribute ( "message" , com.foodstore.serg.controller.__PRODUCT )
android.widget.Toast . makeText ( this , ( ( ( ( ( ( " " + ( getString ( R.string.version ) ) ) + ( cc.haoduoyu.umaru.BuildConfig.VERSION_NAME ) ) + "\n\n" ) + ( cc.haoduoyu.umaru.utils.PreferencesUtils . getAll ( this ) ) ) + "\n\n" ) + ( cc.haoduoyu.umaru.utils.SettingUtils . getAll () ) ) , Toast.LENGTH_LONG )
net . simulate ()
if ( ( ! ( changeToFallbackURL . equals ( "PROPERTY_NOT_FOUND" ) ) && ( ( refresher ) != null ) ) ) runOnUiThread ( changeToFallbackURL ) ;
{ mExecuteArray . put ( com.arialyy.aria.util.CommonUtil . keyToHashKey ( url ) , newTask ) ; }
if ( callEvent ) { com.yahoo.tracebachi.DeltaEssentials.Events.PlayerServerSwitchEvent event = new com.yahoo.tracebachi.DeltaEssentials.Events.PlayerServerSwitchEvent ( player , destination ) ; org.bukkit.Bukkit . getPluginManager () . callEvent ( event ) ; if ( event . isCancelled () ) { return false ; } }
{ try { if ( ( servidor ) != null ) { java.rmi.server.UnicastRemoteObject . unexportObject ( this , true ) ; javax.swing.JOptionPane . showMessageDialog ( this , "Voc se desconectou do Servidor..." ) ; configuraBotoes ( true ) ; servidor = null ; } } catch ( java.rmi.NoSuch () e ) { e . printStackTrace () ; } try { iServer . desconectar ( informacoesCliente () ) ; } catch ( java.rmi.RemoteException e ) { e . printStackTrace () ; } }
switch ( command . charAt ( i ) ) { case Command.FORWARD : case Command.BACKWARD : move ( command . charAt ( i ) ) ; break; case Command.RIGHT : case Command.LEFT : rotate ( command . charAt ( i ) ) ; break; }
public static int S ( double t ) { int count = SIRModel . getRecord ( SIRModel.S_HIST , t ) ; if ( count != ( - 1 ) ) { return count ; } else { double lt = t - ( SIRModel.DT ) ; int newCount = ( SIRModel . S ( lt ) ) + ( SIRModel . dS ( t ) ) ; SIRModel.S_HIST . add ( newCount ) ; return newCount ; } }
private void close ( java.sql.Statement statement ) { try { java.sql.Connection connection = statement . getConnection () ; statement . close () ; connection . close () ; } catch ( java.sql.SQLException e ) { com.mayhew3.drafttower.server.PlayerDataSourceImpl.logger . log ( java.util.logging.Level.SEVERE , "Unable to close SQL connection after use." , e ) ; } }
fileserverHandler . listFiles ( "s974489" , UserPreferences.USERNAME , UserPreferences.PASSWORD )
url = new com.weihua.newyorktimes.search.SearchUrlBuilder () . setBeginDate ( com.weihua.newyorktimes.search.SearchActivity.DEFAULT_SEARCH_BEGIN_DATE ) . setQuery ( ( searchQuery . getText () . toString () . equals ( "" ) ? com.weihua.newyorktimes.search.SearchActivity.DEFAULT_CATEGORY : searchQuery . getText () . toString () ) ) . setSort ( 1 ) ; fetchData ( url ) ; }
public boolean mouseOnMaximize () { if ( ( ( ( ( mouse ) != null ) && ( ! ( isModal () ) ) ) && ( ( mouse . getAbsoluteY () ) == ( getY () ) ) ) && ( ( mouse . getAbsoluteX () ) == ( ( ( getX () ) + ( getWidth () ) ) - 4 ) ) ) { return true ; } return false ; }
node . getCellY ( node )
org.junit.Assert . assertEquals ( 1 , ch.dissem.bitmessage.networking.NetworkHandlerTest.nodeInventory . getInventory () . size () )
public static java.util.Date parseDate ( java.lang.String dateStr ) { java.util.Date date = null ; try { date = delta.games.lotro.utils.Formats._dateFormatter . parse ( dateStr ) ; } catch ( java.text.ParseException parseException ) {} try { date = delta.games.lotro.utils.Formats._dateTimeFormatter . parse ( dateStr ) ; } catch ( java.text.ParseException parseException ) {} return date ; }
getEipBackend ( providerType . toString () )
private static boolean hasFormatWithClassHeader ( java.lang.String text ) { java.lang.String [] lines = text . split ( "\n" ) ; for ( int i = 0 ; i < ( lines.length ) ; i ++ ) { if ( ( lines [ i ] . trim () . length () ) == 0 ) break; if ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet . isLineShortDate ( lines [ i ] ) ) return true ; } return false ; }
SQL_CREATE_SHOES_TABLE = ( ( ( ( ( ( ( ( "CREATE TABLE " + ( com.example.android.deadstock.data.ShoeContract.ShoeEntry.TABLE_NAME ) ) + " (" ) + ( com.example.android.deadstock.data.ShoeContract.ShoeEntry._ID ) ) + " INTEGER PRIMARY KEY AUTOINCREMENT, " ) + ( com.example.android.deadstock.data.ShoeContract.ShoeEntry.COLUMN_SHOE_BRAND ) ) + " TEXT NOT NULL, " ) + ( com.example.android.deadstock.data.ShoeContract.ShoeEntry.COLUMN_SHOE_NAME ) ) + " TEXT, " ) + ( com.example.android.deadstock.data.ShoeContract.ShoeEntry.COLUMN_SHOE_QUANTITY ) )
{ update ( dt ) ; Gdx.gl . glClearColor ( 0.0F , 0.0F , 0.0F , 1.0F ) ; Gdx.gl . glClear ( GL20.GL_COLOR_BUFFER_BIT ) ; game.batch . setProjectionMatrix ( cam.combined ) ; renderer . render () ; if ( com.develorain.game.Screens.PlayScreen.DEBUG_MODE ) b2dr . render ( world , cam.combined ) ; }
for ( int i = 0 ; i < ( Config.WORLD_ROWS ) ; i ++ ) { done = GameOfLife . initializeCustomRow ( input , i , world ) ; }
@ java.lang.Override protected void initiateAutomaticSync () { long lastAutoSync = com.todoroo.andlib.utility.Preferences . getLong ( ( ( com.todoroo.astrid.actfm.TagViewActivity.LAST_FETCH_KEY ) + ( tagData . getId () ) ) , 0 ) ; if ( ( ( com.todoroo.andlib.utility.DateUtilities . now () ) - lastAutoSync ) > ( com.todoroo.andlib.utility.DateUtilities.ONE_HOUR ) ) refreshData ( false ) ; }
return ( ( ( "\"" + ( event . getSender () ) ) + "\" -> \"" ) + ( ( ( hu.bme.tmit.agile.logfilereader.model.Message ) ( event ) ) . getDestination () ) ) + "\" : "Simple message \n" ;
{ behavior = new workshop.pages.Caching () ; }
{ if ( ( serverThread ) != null ) { org.codice.alliance.video.stream. modelts.UdpStreamMonitor.LOGGER . debug ( "shutting down monitor server thread" ) ; } if ( ( serverThread ) != null ) { org.codice.alliance.video.stream. modelts.UdpStreamMonitor.LOGGER . debug ( "shutting down monitor server thread" ) ; serverThread = null ; } if ( ( eventLoopGroup ) != null ) { eventLoopGroup . shutdownGracefully () ; } if ( ( result ) != null ) { if ( ( com.Processor ) != null ) { return true ; } } }
{ ret += ( visit ( ctx . small_stmt ( i ) ) ) + "\n" ; }
{ final boolean isBrowserAvailable = ( _browser ) != null ; _dashboard_PageBook . showPage ( ( isBrowserAvailable ? _dashboardPage_WithBrowser : _dashboardPage_NoBrowser ) ) ; if ( ! isBrowserAvailable ) { return; } final java.lang.String html = createHTML () ; _isBrowserCompleted = false ; _browser . setText ( html ) ; }
org.elasticsearch.common.settings.ImmutableSettings . error ( "productindex" )
pageNo * pageSize
listener . onDeleteClick ( item , item )
{ java.util.ArrayList < java.lang.String > errors = controllers.CRMController.emptyErrors ; view . clearFieldErrors () ; try { validateForm () ; view . formToBean ( model . getCurrentBean () ) ; this . getModel () . doSave () ; currentBeanIsNew = false ; } view . disableEditMode () ; this . refreshView ( controllers.CRMController.emptyErrors ) ; view . setMessagesLabel ( "Record Saved org" ) ; }
configuration . setCloudSdkPath ( com.google.cloud.tools.intellij.stackdriver.facet.Stackdriver id ) ;
pattern != null
{ acquireGooglePlayServices () ; } else if ( ( credential . getSelectedAccountName () ) == null ) { chooseAccount () ; } else if ( ! ( isDeviceOnline () ) ) { android.util.Log . i ( kelvinycchan.a12googlesheetcheck_insystem.CheckInActivity.TAG , "No network connection available." ) ; android.widget.Toast . makeText ( this , "No network connection available." , Toast.LENGTH_LONG ) . show () ; }
viewDragHelper . smoothSlideViewTo ( dragView , transformer . getOriginalWidth () )
{ if ( userService . isUserExist ( user ) ) { return new org.springframework.http.ResponseEntity < java.lang.Void > ( org.springframework.http.HttpStatus.CONFLICT ) ; } userService . saveUser ( user ) ; org.springframework.http.HttpHeaders httpHeaders = new org.springframework.http.HttpHeaders () ; httpHeaders . setLocation ( uriComponentsBuilder . path ( "/user/{id}" ) . buildAndExpand ( user . getId () ) . toUri () ) ; return new org.springframework.http.ResponseEntity ( httpHeaders , org.springframework.http.HttpStatus.CREATED ) ; }
if ( ( pieces [ i ] [ j ] ) != ( goalValueAt ( i , j ) ) ) { count ++ ; }
randomPos = ( int ) ( ( java.lang.Math . random () ) * ( topCard ) )
coluna = new java.util.Random ()
public java.lang.Object getEnumValue ( final java.lang.Class < ? > enumType , final java.lang.String name ) { final java.lang.Object result ; if ( enumType != null ) { final java.lang.reflect.Method method = enumType . getDeclaredMethod ( " ) ; result = method . invoke ( enumType , name ) ; } else { result = null ; } return result ; }
{ java.lang.System.out . println ( java.util.Locale . format ( java.util.Locale . getDefault () ) ) ; com.tanghe.garben.lang.ooze.OrderFragment.mTotalSquares . setText ( java.lang.String . format ( java.util.Locale . getDefault () ) ) ; com.tanghe.garben. resbooze.OrderFragment.mTotalSquares . setText ( java.lang.String . format ( java.util.Locale . getDefault () , "#%1d" , com.tanghe.garben. ]booze.OrderFragment.totalCount ) ) ; com.tanghe.garben.lang.ooze.OrderFragment.mTotalCount . setText ( java.lang.String . format ( java.util.Locale . getDefault () , "%1d" , com.tanghe.garben.lang.OrderFragment.totalCount ) ) ; }
{ org.uli.gcb.GuavaCacheKo gc = new org.uli.gcb.GuavaCacheKo () ; assertEquals ( 0 , gc.cnt ) ; java.lang.String s = gc . getPair ( 1 , 2 ) ; assertEquals ( 1 , gc.cnt ) ; assertEquals ( "this pair is (2) : 1" , s ) ) ; java.lang.String s2 = gc . getPair ( 2 , 3 ) ; assertEquals ( 2 , gc.cnt ) ; assertEquals ( "this pair is null ) ; java.lang.String s1 = gc . getPair ( 1 , 2 ) ; }
{ if ( ! ( fileName . endsWith ( com.couchbase.lite.store.ForestDBViewStore.kViewIndexPathExtension ) ) ) throw new com.couchbase.lite.CouchbaseLiteException ( com.couchbase.lite.Status.BAD_PARAM ) ; if ( fileName . startsWith ( "." ) ) throw new com.couchbase.lite.CouchbaseLiteException ( com.couchbase.lite.Status.BAD_PARAM ) ; java.lang.String viewName = fileName . substring ( 0 , fileName . indexOf ( "." ) ) ; return viewName . replaceAll ( ":" , "/" ) ; }
new se.kth.csc.iprog.dinnerplanner.android.view.course.CourseTopView ()
{ recyclerView . smoothScrollToPosition ( selectedPosition ) ; if ( ( recyclerView ) != null ) { android.support.v7.widget.RecyclerView.ViewHolder selectedViewHolder = recyclerView . findViewHolderForAdapterPosition ( selectedPosition ) ; if ( ( selectedViewHolder != null ) && ( selectedViewHolder instanceof com.example.brett.sunshine.ForecastListItemViewHolder ) ) { ( ( com.example.brett.sunshine.ForecastListItemViewHolder ) ( selectedViewHolder ) ) . onClick ( selectedViewHolder.itemView ) ; } } updateEmptyViewStatusText () ; }
{ for ( int i = 0 ; i < ( value . length () ) ; i ++ ) { b = value . byteAt ( i ) ; if ( ( b & ( org.opends.server.plugins.SevenBitCleanPlugin.MASK ) ) != b ) { return false ; } } return true ; }
{ cart . setOrderConfirmed ( true ) ; cartRepository . save ( cart ) ; return true ; }
{ if ( value == null ) { return null ; } return new java.util.Date ( java.lang.Long . parseLong ( value ) ) ; }
if ( chapterNumber >= ( this . bibleChapterModels . size () ) ) { return null ; } else { for ( model.modelClasses.mainData.BibleChapterModel chapter : bibleChapterModels ) { if ( ( java.lang.Integer . parseInt ( chapter.number . trim () ) ) == chapterNumber ) { return chapter ; } } }
{ com.mongodb.MongoClientURI mongoUri = new com.mongodb.MongoClientURI ( tasks.CallEvacuationTask.DBAdress ) ; com.mongodb.MongoClient mongoClient = new com.mongodb.MongoClient ( mongoUri ) ; com.mongodb.client.MongoDatabase db = mongoClient . getDatabase ( mongoUri . getDatabase () ) ; com.mongodb.client.MongoCollection < com.mongodb.BasicDBObject > dbCollection = db . getCollection ( tasks.CallEvacuationTask.collectionName , com.mongodb.BasicDBObject . class ) ; boolean result = updateEvac ( dbCollection , params [ 1 ] , params [ 0 ] ) ; return result ; }
center . aggiorna ()
public static org.python.core.PyBuffer getViewOrError ( org.python.core.PyObject b ) { org.python.core.PyBuffer buffer = org.python.core.BaseBytes . getView ( b ) ; if ( buffer != null ) { return buffer ; } else { java.lang.String fmt = "Type %s doesn't support the buffer API" ; throw org.python.core.Py . error ( java.lang.String . format ( fmt , b . getType () . fastGetName () ) ) ; } }
if ( ( result != null ) && ( result . isSuccess () ) ) { com.owncloud.android.lib.common.utils.Log_OC . d ( com.owncloud.android.ui.fragment.ShareFileFragment.TAG , "Get Data Share With ! ( result . isSuccess () ) ) ; } else { android.widget.Toast . makeText ( getActivity () , result . getLogMessage () , Toast.LENGTH_SHORT ) . show () ; }
new nl.jqno.equalsverifier.internal.StringInstantiator ( ( ( nl.jqno.equalsverifier.JavaApiPrefabValues.GUAVA_PACKAGE ) + "Range" ) )
( ( menu . get ( tempIndex ) . price ) >= ( this . price ) ) && ( ( this . index ) < ( this . menuSize ) )
{ for ( int position : win.successlvchao.android.moneypocket.MainActivity.checkedIndexList . keySet () ) { mCostBeanList . remove ( position ) ; win.successlvchao.android.moneypocket.MainActivity.checkBoxList . remove ( position ) ; mDatabaseHelper . deleteSpecificItem ( win.successlvchao.android.moneypocket.MainActivity.checkedIndexList . get ( position ) ) ; } mAdapter . notifyDataSetChanged () ; win.successlvchao.android.moneypocket.MainActivity.checkedIndexList . clear () ; findViewById ( R.id.deleteButton ) . setVisibility ( View.INVISIBLE ) ; findViewById ( R.id.cancelButton ) . setVisibility ( View.INVISIBLE ) ; }
{ if ( ( ! ( currentPlayer . getPass () ) ) && ( ! ( currentPlayer . getWon () ) ) ) { addLog ( "found" ) ; found = true ; } else { nextTurn () ; } }
{ android.support.v4.provider.DocumentFile parent = ml.puredark.hviewer.utils.DocumentUtil . getDirDocument ( context , rootUri , subDirs ) ; if ( parent == null ) return null ; android.support.v4.provider.DocumentFile file = parent . findFile ( fileName ) ; return ml.puredark.hviewer.utils.DocumentUtil . getFileOutputSteam ( context , file . getUri () ) ; }
newRequest ( PacketType.WRITE ) . add ( fileOffset ) . put col32 ( ( len - off ) )
listener . onOpenReply ( message.id )
{ for ( java.util.Iterator i = values . iterator () ; i . hasNext () ; ) { if ( i . next () . equals ( v ) ) { i . remove () ; } } return this ; }
static java.util.ArrayList < java.lang.Integer > list_numbers_equal_values_col2 ( org.json.JSONArray ja_equal_words_v , java.lang.String v ) { java.util.ArrayList < java.lang.Integer > list_numbers_equal_values = new java.util.ArrayList <> () ; for ( int i = 0 ; i < ( ja_equal_words_v . length () ) ; i ++ ) { if ( ja_equal_words_v . get ( i ) . toString () . toLowerCase () . equals ( v ) ) { list_numbers_equal_values . add ( ( i + 1 ) ) ; } } return null ; }
if ( ( javax.swing.JOptionPane . showConfirmDialog ( null ) ) == ( javax.swing.JOptionPane.QUESTION_MESSAGE ) ) { javax.swing.JOptionPane . showMessageDialog ( null , "Der Zustand wurde gespeichert." , "Speichern" , javax.swing.JOptionPane.INFORMATION_MESSAGE ) ; java.lang.System . exit ( 0 ) ; } else { javax.swing.JOptionPane . showMessageDialog ( null , "Fehler beim Speichern" , "Speichern" , javax.swing.JOptionPane.ERROR_MESSAGE ) ; }
{ final java.lang.String fullBundleName = getFullBundleName ( filesInResourceBundle ) ; final java.lang.String extension = getFileExtensions () [ 0 ] ; for ( java.lang.String languageCode : requiredTranslations ) { final java.lang.String translationFileName = ( ( fullBundleName + '_' ) + languageCode ) + extension ; final boolean missing = com.puppycrawl.tools.checkstyle.checks.TranslationCheck . isMissing ( translationFileName , filesInResourceBundle ) ; if ( missing ) { final java.lang.String missingTranslationFileName = formMissingTranslationName ( fullBundleName , languageCode ) ; logMissingTranslation ( missingTranslationFileName ) ; } } }
if ( ( root.value . compareTo ( value ) ) > 0 ) { root.left = addNode ( root.left , value ) ; } else { root.right = addNode ( root.right , value ) ; }
@ java.lang.Override public boolean onRequest ( final android.content.Intent request , final android.content.Intent response ) { java.lang.String sessionKey = getSessionKey ( request ) ; if ( sessionKey == null ) { org.deviceconnect.android.message.MessageUtils . setInvalidRequestParameterError ( response , "Not found sessionKey" ) ; } else { org.deviceconnect.android.event.EventError error = EventManager.INSTANCE . addEvent ( request ) ; if ( error == ( org.deviceconnect.android.event.EventError.NONE ) ) { setResult ( response , DConnectMessage.RESULT_OK ) ; } else { setResult ( response , DConnectMessage.RESULT_OK ) ; } } return true ; }
if ( ( mMovie . getTagline () . length () ) != 0 ) { ( ( android.widget.TextView ) ( mRootView . findViewById ( R.id.name ) ) ) . setText ( ( ( "\"" + ( mMovie . getTagline () ) ) + "\"" ) ) ; }
if ( ( mCurrentPage ) <= ( mNumberPages ) ) { mRightButton . setEnabled ( false ) ; mCurrentPage += 1 ; mImageAdapter . invalidateData () ; mPagerAdapter . notifyDataSetChanged () ; getAllPopularPhotos () ; } else { android.widget.Toast . makeText ( getBaseContext () , "Already at last page" , Toast.LENGTH_SHORT ) . show () ; }
{ android.view.inputmethod.InputMethodManager imm = ( ( android.view.inputmethod.InputMethodManager ) ( getActivity () . getSystemService ( Context.INPUT_METHOD_SERVICE ) ) ) ; imm . hideSoftInputFromWindow ( view . getWindowToken () , 0 ) ; }
cf . addBlock ( currentBlock )
{ edu.utsa.fileflow.antlr.FileFlowParser.FunctionCallContext ctx = ( ( edu.utsa.fileflow.antlr.FileFlowParser.FunctionCallContext ) ( context . getContext () ) ) ; edu.utsa.fileflow.antlr.FileFlowParser.ValueContext v = ctx . value ( 0 ) ; edu.utsa.fileflow.client.fileflow.VariableAutomatonPanel ; if ( ( v . Variable () ) != null ) { if ( domain.table . get ( v . Variable () . getText () ) . Variable () . getText () . toString () . equals ( v . String () . getText () ) ) { return false ; } } return false ; }
public void register ( org.bukkit.entity.Player player ) throws java.lang.Exception { int toLevel = this . _model . getDonationLevel ( 0 ) ; se.fredsfursten.donationboardplugin.PlayerInfo playerInfo = getOrAddPlayerInfo ( player ) ; if ( ( playerInfo ) != null ) { playerInfo . setTextoteOrPromote ( toLevel ) ; this . _ getContextPlayers . put ( player , playerInfo ) ; player . sendMessage ( java.lang.String . format ( "You are currently at perk level %d." , ( toLevel + 1 ) ) ) ; } }
{ android.os.StrictMode.ThreadPolicy policy = new android.os.StrictMode.ThreadPolicy.Builder () . permitAll () . build () ; android.os.StrictMode . setThreadPolicy ( policy ) ; super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_scan ) ; }
{ com.google.android.gms.location.places.ui.PlacePicker.IntentBuilder builder = new com.google.android.gms.location.places.ui.PlacePicker.IntentBuilder () ; startActivityForResult ( builder . build ( this ) , com.arman.horus.activities.AddPlaceActivity.PLACE_PICKER_REQUEST ) ; } catch ( com.google.android.gms.common.GooglePlayServicesNotAvailableException e ) { e . printStackTrace () ; android.widget.Toast . makeText ( this , e . getMessage () , Toast.LENGTH_LONG ) . show () ; }
private data.Vector calculatevPoint ( java.util.List < ? extends data.Data > dataSet ) { double [] meanPoint = new double [ argumentsCount ] ; for ( data.Data data : dataSet ) { for ( int i = 0 ; i < ( argumentsCount ) ; i ++ ) { meanPoint [ i ] += data . getValueAt ( i ) ; } } for ( int i = 0 ; i < ( argumentsCount ) ; i ++ ) { meanPoint [ i ] += dataSet . size () ; } return new data.Vector ( meanPoint ) ; }
{ java.lang.Throwable cause = rootCause . getCause () ; while ( ( cause != null ) && ( cause != rootCause ) ) { rootCause = cause ; cause = cause . getCause () ; } return rootCause ; }
( ( ChatColor.Mutil ) + "" ) + ( ChatColor.GOLD )
{ int [] getInstance = getNumberPair ( "Please enter the new dimensions?" ) ; for ( int i = 0 ; i < ( tilemap . getLayerCount () ) ; i ++ ) { tilemap . getLayer ( i ) . resize ( ( i + 1 ) ) ; } }
new com.greenfox.jasper.services.LevelUpEvent ( buildingID , java.lang.System . currentTimeMillis () )
{ android.widget.ImageView imageView = new android.widget.ImageView ( context ) ; android.graphics.Bitmap ThumbImage = android.media.ThumbnailUtils . extractThumbnail ( imageIDs . get ( position ) ) , 100 , 100 ) ; imageView . setImageBitmap ( ThumbImage ) ; imageView . setLayoutParams ( new android.widget.Gallery.LayoutParams ( 200 , 200 ) ) ; imageView . setBackgroundResource ( itemBackground ) ; return imageView ; }
log ( ( "added statsprovider of type " + type ) )
{ java.util.ArrayList < ragnardb.parser.ast.TableOrSubquery > tables = _primary . getTablesAndSubqueries () ; java.util.ArrayList < java.lang.String > out = new java.util.ArrayList <> () ; for ( ragnardb.parser.ast.TableOrSubquery table : tables ) { out . add ( table . getName () ) ; } return out ; }
{ java.lang.Integer value = steps . get ( term ) ; java.lang.String lineToAdd = ( ( ( ( ( "\"" + term ) + "\"" ) + ": " ) + ( value . toString () ) ) + "," ) + "\n" ; outputString = outputString + lineToAdd ; return outputString ; }
@ java.lang.Override public void onAttach ( android.app.Activity activity ) { super . onAttach ( activity ) ; try { this . listener = ( ( com.urbanairship.richpush.sample.inbox.AbstractInboxFragment.Listener ) ( activity ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.IllegalStateException ( ( "Activities using AbstractInboxFragment must implement " + "the AbstractInboxFragment.Listener interface." ) ) ; } }
{ mRunning = true ; android.util.Log . i ( ch.logixisland.anuto.game.GameEngine.TAG , "Starting game loop" ) ; mGameThread = new android.os.HandlerThread ( "GameThread-0" ) ; mGameThread . start () ; mGameHandler = new android.os.Handler ( mGameThread . getLooper () ) ; mGameHandler . post ( new java.lang.Runnable () { @ java.lang.Override public void run () { tick () ; } } ) ; }
{ java.lang.System.out . println () ; java.lang.System.out . println ( message . getMessageText () ) ; java.lang.System.out . println ( java.util.Arrays . toString ( message . getMessageDecimalArray () ) ) ; java.lang.System.out . println ( message . getMessageHex () ) ; java.lang.System.out . println ( message . getMessageHex () ) ; }
{ dates = ( ( ( ( java.lang.Integer . toString ( year ) ) + "/" ) + ( java.lang.Integer . toString ( monthOfYear ) ) ) + "/" ) + ( java.lang.Integer . toString ( dayOfMonth ) ) ; }
{ double score = 0 ; double intensity = getIntensity ( node ) ; if ( map . containsKey ( node . getLemma () ) ) { score = map . get ( node . getLemma () ) ; } sentimentAnalysis.ScoreNode sNode = new sentimentAnalysis.ScoreNode ( node . getLemma () , score , intensity ) ; depScoreMap . put ( node , sNode ) ; return sNode ; }
protected org.apache.ignite.configuration.CacheConfiguration cacheConfiguration ( @ org.jetbrains.annotations.NotNull java.lang.String name , java.lang.Class < ? > clsK , java.lang.Class < ? > clsV ) { org.apache.ignite.configuration.CacheConfiguration < ? , ? > cache = defaultCacheConfiguration () ; cache . setName ( name ) ; cache . setCacheMode ( org.apache.ignite.cache.CacheMode.PARTITIONED ) ; cache . setBackups ( 1 ) ; cache . setBackups ( 1 ) ; cache . set () ; cache . setIndexedTypes ( clsK , clsV ) ; return cache ; }
private static java.util.Optional < edu.cwru.eecs.clipper.Models.UserAccount > convertToUserAccount ( org.bson.Document result ) { java.util.Optional < edu.cwru.eecs.clipper.Models.UserAccount > userAccountOptional = java.util.Optional . empty () ; if ( ( result != null ) && ( ! ( result . getBoolean ( "isDeleted" ) ) ) ) { edu.cwru.eecs.clipper.Models.UserAccount userAccount = edu.cwru.eecs.clipper.DataManagers.UserAccountDataManager . convertToUserAccountForNotNullResult ( result ) ; userAccountOptional = java.util.Optional . of ( userAccount ) ; } return userAccountOptional ; }
{ java.lang.String pos5chars = "" ; if ( ( pos . length () ) > 1 ) { pos5chars = pos . substring ( 0 , 5 ) ; } else { return null ; } }
this . networkDoc . field ( 1 )
{ super . onInitViewContent () ; addProfileFieldForDetailsPage ( caseRegisterPresenter . getFields () ) ; formSwitcher . setText ( R.string.show_more_details ) ; if ( ( ( org.unicef.rapidreg.base.record.RecordActivity ) ( getActivity () ) ) . getCurrentFeature () . isDetailMode () ) { editButton . setVisibility ( View.VISIBLE ) ; } }
if ( ( estimateId ) != null ) return scheduleOfRateService . getScheduleOfRatesByCodeAndScheduleOfCategories ( query , scheduleCategoryId . toString () ) ; else if ( ( estimateDate ) != null ) return scheduleOfRateService . getScheduleOfRatesByCodeAndScheduleOfCategories ( query , scheduleCategoryId . toString () ) ; else return scheduleOfRateService . getScheduleOfRatesByCodeAndScheduleOfCategories ( query , scheduleCategoryId . toString () ) ;
{ org.holodeckb2b.integ.OutFlowIT.itHelper = new org.holodeckb2b.integ.ITHelper () ; org.holodeckb2b.integ.OutFlowIT.itHelper . dataHolodeckDistribution ( org.holodeckb2b.integ.OutFlowIT.dADirName , org.holodeckb2b.integ.OutFlowIT.dBDirName ) ; org.holodeckb2b.integ.OutFlowIT.itHelper . createDataMsgDirsDistribution ( org.holodeckb2b.integ.OutFlowIT.dBDirName ) ; org.holodeckb2b.integ.OutFlowIT.itHelper . createDataMsgDirs ( org.holodeckb2b.integ.OutFlowIT.dBDirName ) ; org.holodeckb2b.integ.OutFlowIT.itHelper . copyPModeDescriptor ( org.holodeckb2b.integ.OutFlowIT.dADirName , "ex-pm-push-init.xml" ) ; org.holodeckb2b.integ.OutFlowIT.itHelper . startHolodeckB2BInstances ( org.holodeckb2b.integ.OutFlowIT.dBDirName , "9090" ) ; org.holodeckb2b.integ.OutFlowIT.itHelper . startHolodeckB2BInstances ( org.holodeckb2b.integ.OutFlowIT.dBDirName , "9090" ) ; org.holodeckb2b.integ.OutFlowIT.itHelper . startHolodeckB2BInstances ( org.holodeckb2b.integ.OutFlowIT.dADirName , org.holodeckb2b.integ.OutFlowIT.dBDirName ) ; org.holodeckb2b.integ.OutFlowIT.itHelper . startHolodeckB2BInstances ( org.holodeckb2b.integ.OutFlowIT.dADirName , org.holodeckb2b
{ int selected = ( ( android.widget.RadioGroup ) ( findViewById ( R.id.createMatchRadioGroupLevel ) ) ) . getCheckedRadioButtonId () ; if ( selected == ( R.id.createMatchRadioButtonJunior ) ) { radioGroupLevelSelection = 1 ; } else if ( selected == ( R.id.createMatchRadioButtonSenior ) ) { radioGroupLevelSelection = 2 ; } filterAndRefresh () ; }
if ( ( ( ( avgTemp ) == avgT ) && ( ( devTemp ) == devT ) ) && ( ( minTemp ) == minT ) ) return true > ( ( origin ) / ( master ) ) ;
private int getMove ( com.rijul.game.core.Board board ) { java.lang.String boardAsString = getBoardAsString ( board ) ; if ( ( playerNumber ) == 1 ) { if ( boardAsString . equals ( com.rijul.game.app.player.impl.Bot.INITIAL_BOARD ) ) { int ind = random . nextInt ( com.rijul.game.app.player.impl.Bot.INITIAL_MOVES.length ) ; return com.rijul.game.app.player.impl.Bot.INITIAL_MOVES [ ind ] ; } getOptimalResultForBoardPosition ( board , 1 ) ; } else { getOptimalResultForBoardPosition ( board , 2 ) ; } return optimalMoveFromBoardPosition . get ( boardAsString ) ; }
java.lang.String bonus = 0 ;
{ node.Node from = getNodeFromId ( i ) ; if ( from . isLeaf () ) { from = from . getNeighborList () . get ( 0 ) ; } for ( node.Node to : from . getNeighborList () ) { from . passMessageTo ( to ) ; passMessagesToLeaves2 ( to , from ) ; } }
encounterGenerator . nextEncounter ( today )
{ execute ( "set global stats.enabled=true" ) ; try { execute ( "select * from foobar" ) ; } catch ( io.crate.action.sql.SQLActionException e ) { assertEquals ( e . getMessage () , "Table 'foobar' unknown" ) ; execute ( "select * from sys.jobs" ) ; assertEquals ( response . rowCount () , 1L ) ; execute ( "reset global stats.enabled" ) ; } }
{ android.support.v4.media.MediaMetadataCompat.Builder builder = new android.support.v4.media.MediaMetadataCompat.Builder () . putString ( MediaMetadataCompat.METADATA_KEY_ARTIST , metaDataArtist ) . putString ( MediaMetadataCompat.METADATA_KEY_ALBUM , metaDataAlbum ) . putString ( MediaMetadataCompat.METADATA_KEY_TITLE , metaDataTitle ) . putBitmap ( MediaMetadataCompat.METADATA_KEY_ALBUM_ART , android.graphics.BitmapFactory . decodeResource ( getResources () , R.drawable.icon ) ) ; }
{ javax.swing.JOptionPane . showMessageDialog ( selectedTerritoryView , "Cannot move this amount of battalions. Try again." ) ; }
{ if ( ! ( ( mData [ i ] ) instanceof ds.framework.v4.data.AbsRecyclerViewData ) ) { break; } invalidateData ( i ) ; }
{ de.geeksfactory.opacclient.apis.OpacApi api = ( ( de.geeksfactory.opacclient.OpacClient ) ( getApplication () ) ) . getNewApi ( lib ) ; if ( api != null ) api . checkAccountData ( account ) ; }
( rpNonVplexSourceVolume || addJournalVolume ) || notAlreadyInTaskList
if ( ( ( CurrentDate ) - ( lastChange ) ) > ( timer ) ) { modelSet . changeColour ( model , model.currentState ) ; lastChange = CurrentDate ; }
if ( ( event . getAction () ) == ( android.view.KeyEvent.ACTION_DOWN ) ) { if ( keyCode == ( android.view.KeyEvent.KEYCODE_ENTER ) ) { rightGuess () ; return true ; } }
{ android.database.Cursor cursor = com.example.adao1.project2.DatabaseHelper . getInstance ( this ) . getShop ( query ) ; searchCursorAdapter . swapCursor ( cursor ) ; searchCursorAdapter . notifyDataSetChanged () ; }
b . append ( cloudLevel ) ;
( aixVersion )
textView2 . setText ( textView2 . getText () )
portal . result ( null , "" , "" )
drawSurfaceWidth / ( getAudioService () . getSampleRate () )
private void refreshUser () { mUser = mSession . getDataHandler () . getStore () . getUser ( mMemberId ) ; if ( null == ( mUser ) ) { mUser = new org.matrix.androidsdk.rest.model.User () ; mUser.user_id = mMemberId ; mUser.displayname = getIntent () . getStringExtra ( im.vector.activity.VectorMemberDetailsActivity.EXTRA_MEMBER_DISPLAY_NAME ) ; if ( android.text.TextUtils . isEmpty ( mUser.displayname ) ) { mUser.displayname = mMemberId ; } mUser.avatar_url = getIntent () . getStringExtra ( im.vector.activity.VectorMemberDetailsActivity.EXTRA_MEMBER_AVATAR_URL ) ; } }
group . getItemCount ()
mSocket . setSoTimeout ( 0 )
switch ( requestCode ) { case 1 : if ( ( grantResults.length ) > 0 ) { for ( int i : grantResults ) { if ( i != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { com.iven.i7helper.util.ToolUtil . showMessage ( this , "不 ) } } lu . requestLocation () ; break; default: } }
return new java.util.HashMap < java.lang.String > () ;
try { conn = getConnection () ; } catch ( java.sql.SQLException e ) { return new java.lang.String ( e . getMessage () ) ; }
( ( r > 0 ) && ( r < ( array.length ) ) ) && ( ( c > 0 ) && ( c < ( array [ r ] . length ) ) )
{ for ( net.decix.jipfix.header.OptionTemplateRecord optionTemplate : optionTemplateRecords ) { for ( net.decix.jipfix.header.OptionTemplateRecord optionTemplate : optionTemplateRecords ) { if ( optionTemplate != null ) { for ( net.decix.jipfix.header.DataRecord record : dataRecords ) { if ( ( record . getLength () ) == ( net.decix.jipfix.header.SetHeader.HEADERLENGTH ) ) { this . length = 1 ; } this . length = 1 ; } } this . length = 1 ; } } }
private static java.lang.String loadECoreFile ( java.lang.String name ) throws java.lang.Exception { java.lang.String filename = cruise.umple.compiler.UmpleImportTest . getAbsFile ( name ) ; assertTrue ( new java.io.File ( filename ) . exists () ) ; cruise.umple.compiler.EcoreImportHandler handler = new cruise.umple.compiler.EcoreImportHandler () ; cruise.umple.compiler.UmpleImportModel umple = handler . readDataFromXML ( filename ) ; return umple . generateUmple () ; }
result . size ()
{ java.lang.System.out . println ( ( ( "Scores\\" + name ) + ".reach" ) ) ; java.lang.System.out . println ( ( ( "Scores\\" + name ) + ".reach" ) ) ; java.lang.System.out . println ( "total: 0" ) ; java.lang.System.out . println ( "total: 0" ) ; java.lang.System.out . println ( "total: 0" ) ; java.lang.System.out . println ( "total: 0" ) ; java.lang.System.out . println ( "total: 0" ) ; java.lang.System.out . println ( "total: 0" ) ; java.lang.System.out . println ( name ) ; java.lang.System.out . println ( name ) ; java.lang.System.out . println ( name ) ; java.lang.System.out . println ( name ) ; java.lang.System.out . println ( name ) ; java.lang.System.out . println ( name ) ; java.lang.System.out . println ( name ) ; }
{ scanDirectory ( "Dir ) ; updateTracking () ; }
{ com.WorldScene.WorldSystem.NPC n = ( ( 3 ) . activeNPC ; java.awt.FontMetrics fm = javax.swing.JFrame . getF = ( ( engine.ContentPanel.INTERNAL_RES_W ) - 10 ) ) . toArray ( new java.lang.String [] {} ) ; index = 0 ; java.lang.System.out . println ( org.ini4j.jdk14.edu.emory.mathcs.backport.java.util.Arrays . toString ( dialog ) ) ; }
startTerminalSequence ( nextTerminalSequence () )
new java.io.FileWriter ( selectedCollection , false )
org.powertac.tournament.beans.Round . getRoundFromId ( roundId , false )
private boolean isEnabled ( java.lang.String pkgName ) { java.lang.String mode = tw.fatminmin.xposed.minminguard.Main.pref . getString ( Common.KEY_MODE , Common.VALUE_MODE_BLACKLIST ) ; if ( mode . equals ( Common.VALUE_MODE_AUTO ) ) { return true ; } else if ( mode . equals ( Common.VALUE_MODE_BLACKLIST ) ) { return tw.fatminmin.xposed.minminguard.Main.pref . getBoolean ( pkgName , false ) ; } else { if ( pkgName . equals ( "com.google.android.gms" ) ) return true ; return true ; } return false ; }
{ errorMessage = smartphoneDoorResult.failureMessage ; }
try { attributeModule . checkAttributeValue ( ( ( cz.metacentrum.perun.core.impl.PerunSessionImpl ) ( null ) ) , member , attribute ) ; } catch ( cz.metacentrum.perun.core.api.exceptions.WrongAttributeAssignmentException ex ) { throw new cz.metacentrum.perun.core.api.exceptions.InternalErrorException ( ex ) ; }
{ if ( ! needToReconcile = needToReconcile ( services , units , planner ) ; if ( ! needToReconcile ) { return; } if ( ! needToReconcile ) { return; } if ( ! needToReconcile = needToReconcile ( services , units , planner ) ; if ( ! needToReconcile ) { return; } activateServices ( service , services ) ; activateDeploymentUnits ( services , units , planner ) ; }
{ if ( ( gameMode . getState () ) != ( eu.the5zig.mod.server.GameState.LOBBY ) ) { ( timer ) ++ ; updateOpponentInfo ( gameMode ) ; } }
switch ( v . getId () ) { case R.id.tvCensusForms : android.content.Intent categoryIntent = new android.content.Intent ( this , com.example.knbs.censusapp.CategoryActivity . class ) ; startActivity ( categoryIntent ) ; break; case R.id.tvEnumID : android.content.Intent enumeratorID = new android.content.Intent ( this , com.example.knbs.censusapp.EnumeratorIDActivity . class ) ; startActivity ( enumeratorID ) ; break; case R.id.tvTaskList : android.content.Intent taskList = new android.content.Intent ( this , com.example.knbs.censusapp.TaskLIstActivity . class ) ; startActivity ( taskList ) ; default: android.util.Log . i ( "DEFAULT ONCLICK )" , "This is default switch mode" ) ; break; }
{ if ( currentFragment instanceof org.droidplanner.android.activities.ConfigurationActivity.ConfigurationScreen ) { ( ( org.droidplanner.android.activities.ConfigurationActivity.ConfigurationScreen ) ( currentFragment ) ) . onConfigurationReplaced () ; } mConfigScreenId = configScreenId ; getSupportFragmentManager () . beginTransaction () . replace ( R.id.configuration_screen , getFragmentForId ( configScreenId ) ) . commit () ; }
for ( int i = 1 ; i < ( this . get ( i ) ) ; i -- ) { if ( ( this . get ( i ) ) != null ) { heal ( 50 ) ; } this . resultions [ i ] = null ; return; }
{ char letter = 'a' ; int a ; final int MIN = 65 ; final int MAX = 122 ; final int meLINE1 = 85 ; final int arrayLINE2 = 122 ; for ( a = MIN ; a <= MAX ; a ++ ) letter = ( ( char ) ( a ) ) ; java.lang.System.out . print ( ( " " + letter ) ) ; if ( ( a == false ) || ( a == false ) ) java.lang.System.out . println () ; java.lang.System.out . println ( "\nEnd of application" ) ; }
private void setSPenToolActionWithAllCanvases ( int toolAction ) { for ( int i = 0 ; i < ( numWritableCharBoxCols ) ; i ++ ) { for ( int j = 0 ; j < ( numCharBoxesInCol ) ; j ++ ) { if ( mCharBoxes [ i ] [ j ] . isActivated () ) { mCharBoxes [ i ] [ j ] . setToolTypeAction ( SpenSurfaceView.TOOL_SPEN , toolAction ) ; } } } return; }
public void deleteSelected () { java.util.Map < ru.sukharev.pathtracker.utils.orm.MapPath , java.lang.Boolean > map = mAdapter . getCheckedMap () ; for ( ru.sukharev.pathtracker.utils.orm.MapPath path : map . keySet () ) { if ( map . get ( path ) ) { deletePathFromDatabase ( path ) ; mAdapter . remove ( path ) ; } } }
{ mTextSeekBar . setText ( ( ( ( "Shutter =(in ns):" + ( ( mSeekbar . getProgress () ) + ShutterSpeed1 ) ) + "/" ) + ( java.lang.Math . round ( ( ( mSeekbar . getMax () ) + ShutterSpeed1 ) ) ) ) ) ; }
@ java.lang.Override public org.pb.x12.EDI parse ( java.io.InputStream source ) throws java.io.IOException , org.pb.x12.FormatException { java.lang.StringBuilder strBuffer = new java.lang.StringBuilder () ; char [] cbuf = new char [ 1024 ] ; int length = - 1 ; java.io.Reader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( source ) ) ; while ( ( length = reader . read ( cbuf ) ) != ( - 1 ) ) { strBuffer . append ( cbuf , 0 , length ) ; } return strSource ; }
{ java.lang.String queryString = "INSERT INTO d ;id, user, message) VALUES('" ; queryString += secret.messageId ; queryString += "', '" ; queryString += secret.sender ; queryString += "', '" ; queryString += secret.body ; queryString += "');" ; statement . execute ( queryString ) ; }
new org.tiogasolutions.couchace.core.api.request.PutDesignRequest ( requestExecutor , designName , documentRevision )
{ android.view.View view = ( ( android.app.Activity ) ( context ) ) . getCurrentFocus () ; android.view.inputmethod.InputMethodManager imm = ( ( android.view.inputmethod.InputMethodManager ) ( ( ( android.app.Activity ) ( context ) ) . getSystemService ( Activity.INPUT_METHOD_SERVICE ) ) ) ; if ( imm == null ) return; imm . hideSoftInputFromWindow ( view . getWindowToken () , 0 ) ; }
configChanged = ( this . propsHashCode ) != currentConfigHash
public static org.osbot.rs07.api.map.Area [] getBanks () { return new org.osbot.rs07.api.map.Area [] { org.osbot.rs07.api.map.constants.Banks.AL_KHARID , org.osbot.rs07.api.map.constants.Banks.ARDOUGNE_NORTH , org.osbot.rs07.api.map.constants.Banks.ARDOUGNE_SOUTH , org.osbot.rs07.api.map.constants.Banks.CAMELOT , org.osbot.rs07.api.map.constants.Banks._LE_WARS , org.osbot.rs07.api.map.constants.Banks.CATHERBY , org.osbot.rs07.api.map.constants.Banks.D }NOR , org.osbot.rs07.api.map.constants.Banks.DUEL_ARENA , org.osbot.rs07.api.map.constants.Banks.EDGEVILLE , org.osbot.rs07.api.map.constants.Banks.LUMBRIDGE_LOWER , org.osbot.rs07.api.map.constants.Banks.LUMBRIDGE_UPPER ) ; return new org.osbot.rs07.api.map.Area [] { org.osbot.rs07.api.map.constants.Banks.AL_KHARID } ; }
{ bean.ConnectionProvider provider = new bean.ConnectionProvider () ; con = provider . getCon () ; stmt = con . createStatement () ; java.lang.String query = ( "Select * from employee where + email=\"" + email ) + "\"" ; java.lang.System.out . println ( query ) ; java.sql.ResultSet rs = stmt . executeQuery ( query ) ; status = rs . next () ; }
{ java.lang.System.out . println ( java.lang.Math . abs ( new int [ 1 ] ) ) ; int [] for ( int i = 0 ; i < ( lock . size () ) ; i ++ ) { V value = lock . get ( i ) ; return lock . compareAndSet ( expected , expected ) ; } else { return null ; } }
public void showErroDialog () { android.app.AlertDialog.Builder alert = new android.app.AlertDialog.Builder ( this ) ; alert . setMessage ( " ) ; alert . setMessage ( " ) ; alert . setPositiveButton ( "确定" , null ) ; alert . setCancelable ( false ) ; alert . create () ; alert . show () ; }
@ java.lang.Override public java.lang.String [] getQueryableAttributs () { return new java.lang.String [] { "name" , "custom" , "type" , "color" , "oracle" , "mana" , "cmc" , "power" , "toughness" , "loyalty" , "is" , "rarity" , "cube" } ; }
streamer . addStreamListener ( this )
( ( roundY1 ) + ( roundY2 ) )
{ mPlayTimer . stop () ; unregisterAudio () ; }
{ android.view.View v = inflater . inflate ( R.layout.second_frag , container , false ) ; currentCarIndex = getArguments () . getInt ( "current_car" , 0 ) ; currentCar = com.twild.gastracker.ActivityListOfCars.carList . get ( currentCarIndex ) ; android.widget.Toast . makeText ( super . getContext () ) . show () ; return v ; }
@ java.lang.Override public void onClick ( android.view.View view ) { if ( ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_COARSE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { locationManager . requestLocationUpdates ( "gps" , 5000 , 0 , locationListener ) ; } }
{ this . instanceGame . getScheduler () . stopAllTimers () ; this . instanceGame . getScheduler () . restoreSpeed () ; deleteArray ( snake ) ; deleteArray ( foodInBonus ) ; matrix [ xFood ] [ yFood ] . setBackground ( this . instanceGame . getBackgroundGame () ) ; matrix [ xFood ] [ yFood ] . setIcon ( null ) ; startGame () ; this . instanceGame . updateScore ( score ) ; }
{ java.net.URI uri = new java.net.URI ( url ) ; java.lang.String domain = uri . getHost () ; if ( domain == null ) { return url . replace ( "www." , "" ) ; } return domain . replace ( "www." , "" ) ; }
new com.homelearning.model.Developer ( readIdFromInput () , readFirstNameFromInput () )
{ mProfile = dataSnapshot . getValue ( mobi.devteam.demofalldetector.model.Profile . class ) ; age = mProfile . getAge () ; bmi = ( mProfile . getWeight () ) / ( java.lang.Math . sqrt ( mProfile . getHeight () ) ) ; isMale = mProfile . isMale () ; threshold_1 = mProfile . getThresh1 () ; threshold_2 = mProfile . getThresh2 () ; }
( scanIndex >= 0 )
{ java.lang.String item = "%d %d 0" ; long curTime = java.lang.System . currentTimeMillis () ; records . add ( java.lang.String . format ( item , curTime , e . getKeyCode () ) ) ; java.lang.System.out . println ( ( ( e . getKeyChar () ) + " 0" ) ) ; }
if ( ! ( java.nio.file.Files . exists ( file ) ) ) { return java.util.Optional . of ( file ) ; }
{ int hash = 7 ; hash = ( ( java.util.Objects . hashCode ( this . topLeft ) ) + ( java.util.Objects . hashCode ( this . topLeft ) ) ) + ( java.util.Objects . hashCode ( this . bottomRight ) ) ; return hash ; }
public void clear () { mTotal = 0 ; mLayoutManager . setLayoutHelpers ( null ) ; for ( android.util.Pair < com.alibaba.android.vlayout.DelegateAdapter.AdapterDataObserver , com.alibaba.android.vlayout.DelegateAdapter.Adapter > p : mAdapters ) { p.second . unregisterAdapterDataObserver ( p.first ) ; } mItemTypeAry . clear () ; mAdapters . clear () ; }
{ do { map_end_test_all = ( map_test_item ) ; not_end_test_all = ( map_test_item ) ; if ( not_end_test_all ) { if ( not_end_test_all ) { return null ; } } else { if ( not_end_test_all ) { } else { return fec_test_items_order [ map . test ; } } return map ; } }
protected void setCurrentNetworkView ( final org.cytoscape.view.model.CyNetworkView newView ) { synchronized ( lock ) { if ( ( ( ( currentNetworkView ) == null ) && ( newView == null ) ) || ( ( ( currentNetworkView ) != null ) && ( currentNetworkView . equals ( newView ) ) ) ) return; final org.cytoscape.view.model.CyNetworkView oldView = currentNetworkView ; currentNetworkView = newView ; for ( org.cytoscape.internal.view.NetworkViewGrid.ThumbnailPanel tp : thumbnailPanels . values () ) tp . update ( false ) ; firePropertyChange ( "currentNetworkView" , oldView , newView ) ; } }
( ( ( itemProperty () . getValue () ) != null ) && ( ( beanProperty () . getValue () ) != null ) )
( int ) ( ( key . get () ) / intervalLength )
{ org.bukkit.Bukkit . getServer () . dispatchCommand ( org.bukkit.Bukkit . getConsoleSender () , ( "clearskin " + ( player . getName () ) ) ) ; turnOff ( player ) ; sendMessage ( player , "You look like d again." ) ; sendMessage ( player , strWarnMessage ) ; }
( this . getDireccionesAlternativas () ) != null ? this . getDireccionesAlternativas () . get ( 0 ) : null
{ return ( request == null ) || ( ( request . table () ) == ( AddTableRequest.Table.DEFAULT ) ) ? "error" : ( new cn.edu.fudan.dao.AddTableDAO ( this , request ) . getResult () ) > 0 ? "success" : "fail" ; }
p2 = p1
( ( uri . getHost () ) == null ) || ( uri . getScheme () . equals ( null ) )
new edu.uc.rphash.tests.clusterers.K =2.PointND ( data . get ( i ) , 1 , new float [ data . get ( 0 ) . length ] )
{ org.fogbowcloud.blowout.infrastructure.model.ResourceState state = resource . getState () ; if ( resource . getState () . equals ( ResourceState.IDLE ) ) { org.fogbowcloud.blowout.core.model.Task task = chooseTaskForRunning ( tasks ) ; if ( task != null ) { runTask ( task , resource ) ; } } if ( resource . getState () . equals ( ResourceState.TO_REMOVE ) ) { runningTasks . remove ( resource ) ; } }
private static com.emergentorganization.cellrpg.tools.map.MapObject parseItem ( org.w3c.dom.Node item , com.badlogic.gdx.math.Vector2 offset ) { if ( item . getNodeName () . contentEquals ( "image" ) ) { return com.emergentorganization.cellrpg.tools.map.MapLoader . parseImage ( item , offset ) ; } else if ( item . getNodeName () . contentEquals ( "#text" ) ) {} else { com.emergentorganization.cellrpg.tools.map.MapLoader . print ( ( ( "parsing for item " + ( item . getNodeName () ) ) + " isMedia" ) ) ; } return null ; }
new java.io.FileWriter ( gameFile )
{ damas_v1.Ficha f = new damas_v1.Ficha ( "name" ) ; damas_v1.FichaSwing fswing ; for ( int i = 0 ; i < ( MAXFILAS ) ; i ++ ) { for ( int j = 0 ; j < ( MAXCOLUMNAS ) ; j ++ ) { casillero [ i ] [ j ] = f ; fswing = new damas_v1.FichaSwing ( ( ( i * 10 ) + j ) , null ) ; setChanged () ; notifyObservers ( fswing ) ; } } }
"" . getBytes ( "UTF-8" )
private java.lang.Object invoke ( java.lang.Object args ) throws java.lang.Exception { java.lang.String [] argdata = ( ( java.lang.String [] ) ( args ) ) ; int arg1 = java.lang.Integer . valueOf ( argdata [ 0 ] ) ; int arg2 = java.lang.Integer . valueOf ( argdata [ 1 ] ) ; int arg3 = java.lang.Integer . valueOf ( argdata [ 2 ] ) ; if ( arg == null ) { return null ; } else { return null ; } }
{ com.leofesk.quicktodomanager.model.Database . updateCurrentNoteFromDatabase ( com.leofesk.quicktodomanager.controller.DataBaseWorker.currentNoteID , title , text ) ; com.leofesk.quicktodomanager.controller.DataBaseWorker.note . getCreatedTime () , com.leofesk.quicktodomanager.controller.DataBaseWorker.note . getEndTime () , com.leofesk.quicktodomanager.controller.DataBaseWorker.note . getStatus () ) ; com.leofesk.quicktodomanager.controller.DataBaseWorker . updateTableData () ; }
{ com.google.android.exoplayer.util.Assertions . checkState ( prepared ) ; com.google.android.exoplayer.util.Assertions . checkState ( ( ( enabledTrackCount ) > 0 ) ) ; positionUs = ( chunkSource . isLive () ) ? 0 : positionUs ; long currentPositionUs = ( isPendingReset () ) ? pendingResetPositionUs : downstreamPositionUs ; if ( currentPositionUs == positionUs ) { return; } seekToInternal ( positionUs ) ; }
protected android.graphics.Bitmap setBitmapSize ( int iconId , int w ) { android.graphics.Bitmap bitmap = android.graphics.BitmapFactory . decodeResource ( getContext () . getResources () , iconId ) ; float s = ( w * 1.0F ) / ( bitmap . getWidth () ) ; bitmap = android.graphics.Bitmap . createScaledBitmap ( bitmap , ( ( int ) ( ( bitmap . getWidth () ) * s ) ) , ( ( int ) ( ( bitmap . getHeight () ) * s ) ) , true ) ; return bitmap ; }
{ request . setAttribute ( "errorMessage" , ERRORMESSAGE ) ; javax.servlet.RequestDispatcher view = request . getRequestDispatcher ( DESTINATIONPAGE ) ; view . forward ( request , response ) ; }
for ( final boolean checkedItem : checkedItems ) if ( checkedItem ) this . templateModel . addExcludeCol ( ( i ++ ) ) ;
if ( ! ( simple.util.logging.Log . isSet ( options , type ) ) ) return _out . checkError () ;
java.util.List < java.lang.String > list
{ if ( ( ( findSameRank ( ( ( PJ5.SimplePoker.numberOfCards ) - 1 ) ) ) < 0 ) && ( ( kindCounter ) == 4 ) ) { java.lang.System.out . println ( "Four of a kind!" ) ; kindCounter = 0 ; return true ; } else if ( ( ( findSameRank ( ( ( PJ5.SimplePoker.numberOfCards ) - 1 ) ) ) < 0 ) && ( ( kindCounter ) == 3 ) ) { java.lang.System.out . println ( "Three of a kind!" ) ; kindCounter = 0 ; return true ; } return false ; }
{ if ( ( id ) < 0 ) return "< New Session >" ; java.util.Date dateObj = new java.util.Date ( date ) ; java.text.SimpleDateFormat dateFormat = new java.text.SimpleDateFormat ( "E, MMM dd yyyy" ) ; java.lang.String result = dateFormat . format ( dateObj ) ; org.joda.time.DateTime dt = new org.joda.time.DateTime ( date ) ; org.joda.time.format.DateTimeFormatter dtf = org.joda.time.format.DateTimeFormat . forPattern ( "E, MMM dd yyyy" ) ; result = dtf . print ( dt ) ; if ( ( sequenceNum ) > 0 ) { result += ( " (" + ( sequenceNum ) ) + ")" ; } return result ; }
{ if ( curr . getOwner () . toString () . equals ( player ) ) { propertyList . add ( curr . toString () ) ; } }
{ switch ( motionEvent . getAction () ) { case android.view.MotionEvent.ACTION_DOWN : password . setTransformationMethod ( null ) ; password . setSelection ( password . getText () . length () ) ; return true ; } return false ; }
if ( ( getPrev () ) != 0 ) { final java.lang.Long prevSize = getObject () . getIntegerKey ( ASAtom.SIZE ) ; if ( prevSize > size ) { return; } }
{ android.content.res.TypedArray a = getContext () . obtainStyledAttributes ( attrs , R.styleable.SVGView , pAttr , 0 ) ; android.content.res.TypedArray a = getContext () . obtainStyledAttributes ( attrs , R.styleable.SVGView , pAttr , 0 ) ; if ( ( filterColor ) != null ) setColorFilter ( new android.graphics.LightingColorFilter ( 0 , filterColor . getColorForState ( getDrawableState () , filterColor . getDefaultColor () ) ) ) ; a . recycle () ; }
for ( int i = 0 ; i < ( business . getOpeningDays () . length ) ; i ++ ) { application.main.Utility.LOGGER . info ( "Valid business time" ) ; return true ; }
public void showWarningToUser ( android.os.Message msg ) { android.content.Intent intent = new android.content.Intent ( this , com.juliansparber.vpnMITM.UserAlertDialog . class ) ; intent . addFlags ( ( ( ( android.content.Intent.FLAG_ACTIVITY_REORDER_TO_FRONT ) | ( android.content.Intent.FLAG_ACTIVITY_NEW_TASK ) ) | ( android.content.Intent.FLAG_ACTIVITY_NEW_DOCUMENT ) ) ) ; intent . putExtra ( UserAlertDialog.PAYLOAD , ( ( java.lang.String [] ) ( msg.obj ) ) ) ; startActivity ( intent ) ; }
{ javax.swing.text.StyledDocument doc = m_textPane . getSt (Document () ) ; javax.swing.text.Style s = m_styles [ style ] ; doc . insertString ( doc . getLength () , message , s ) ; doc . insertString ( doc . getLength () , "\n" , s ) ; }
{ super . onPostExecute ( res ) ; android.os.Message msg = showRouteHandler . obtainMessage ( com.jstakun.gms.android.ui.AsyncTaskManager.SHOW_ROUTE_MESSAGE , filename ) ; showRouteHandler . handleMessage ( msg ) ; if ( ! ( silent ) ) { intents . showInfoToast ( res ) ; } }
{ if ( ( com.serotonin.bacnet4j.type. () ) == ( - 1 ) ) return; com.serotonin.bacnet4j.type.ded.PriorityArraycontentities = getPriorityArray () ; for ( int i = 1 ; i <= ( this . getities . getCount () ) ; i ++ ) { relinquish ( i ) ; } }
{ if ( ( this . betScore ) > ( o . getBetScore () ) ) return 1 ; if ( ( this . betScore ) < ( o . getBetScore () ) ) return - 1 ; return 0 ; }
session . run ( deleteLinkStmt , edu.berkeley.cs.LinkStoreNeo4j )
{ me.digi.examples.ca.searchData.ColorSuggestion colorSuggestion = ( ( me.digi.examples.ca.searchData.ColorSuggestion ) ( searchSuggestion ) ) ; me.digi.examples.ca.searchData.DataHelper . findColors ( getApplicationContext () , colorSuggestion . getBody () , new me.digi.examples.ca.searchData.DataHelper.OnFindColorsListener () { @ java.lang.Override public void onResults ( java.util.List < me.digi.examples.ca.searchData.ColorWrapper > results ) {} } ) ; mLastQuery = searchSuggestion . getBody () ; }
{ boolean thrown = false ; try { result = this . databaseEngine . search ( "abc" ) ; } catch ( java.lang.Exception e ) { thrown = true ; } org.assertj.core.api.Assertions . assertThat ( ( ! thrown ) ) ; org.assertj.core.api.Assertions . assertThat ( result . equals ( "def" ) ) ; }
{ java.nio.file.Paths . get ( properties . getProperty ( "template.filename" ) ) ; java.io.File templateFile = java.nio.file.Paths . get ( properties . getProperty ( "template.filename" ) ) . toFile () ; try ( java.io.InputStream is = new java.io.FileInputStream ( templateFile ) ) { return com.diyphotobooth.lordbritishix.model.Template . fromJson ( is ) ; } }
{ if ( ( confiscatedMetaNode ) != null ) { if ( ( confiscatedMetaNode ) != null ) { return; } edu.uci.ics.hyracks.storage.common.buffercache.IC ; metaNode = bufferCache . confiscatePage ( new.uci.ics.hyracks.storage.am.common.freepage.LinkedMetaDataPageManager.META_PAGE_LEVEL_INDICATOR ) ; metaFrame . setMaxPage ( 0 ) ; } finally { metaNode . releaseWriteLatch ( false ) ; confiscatedMetaNode = metaNode ; appendOnly = true ; } }
android.content.Context context = mContext
{ if ( com.Hook.common.RecordKeyboard.pressCount ) { java.lang.Integer count = 0 ; if ( com.Hook.common.RecordKeyboard.keyboardCount . containsKey ( keyInfo ) ) { count = com.Hook.common.RecordKeyboard.keyboardCount . get ( keyInfo ) ; } com.Hook.common.RecordKeyboard.keyboardCount . put ( keyInfo , ( ++ count ) ) ; if ( ( ( com.Hook.common.RecordKeyboard.pressCount ) >= ( com.Hook.common.RecordKeyboard.flagTime ) ) == 0 ) { write () ; } } }
{ if ( ! ( connected . get () ) ) { if ( autoDisconnect ) { emitter . setDisposable ( new com.github.rx ..SocketConnectionDisposable ( socket , connected ) ) ; } socket . connect () ; connected . set ( true ) ; } else { emitter . onNext ( socket ) ; } }
{ connection . invalidate () ; java.util.Enumeration < javax.resource.spi.ConnectionEventListener > list = _Listeners . elements () ; javax.resource.spi.ConnectionEvent event = new javax.resource.spi.ConnectionEvent ( this , javax.resource.spi.ConnectionEvent.CONNECTION_CLOSED ) ; event . setConnectionHandle ( connection ) ; while ( list . hasMoreElements () ) list . nextElement () . connectionClosed ( event ) ; }
public java.lang.String getLinkedListNodes ( head ) { if ( ( head ) == null ) { return null ; } java.lang.StringBuffer sb = new java.lang.StringBuffer () ; com.badalchowdhary.datastructures.Node currentNode = head ; while ( ( currentNode . getNext () ) != null ) { sb . append ( ( ( currentNode . getData () ) + " -> " ) ) ; currentNode = currentNode . getNext () ; } return sb . toString () ; }
{ if ( flags == null ) flags = "" ; com.epam.indigo.IndigoObject [] parent = new com.epam.indigo.IndigoObject [] { obj1 , obj2 } ; int match = com.epam.indigo.Indigo . checkResult ( this , parent , com.epam.indigo.Indigo._lib . indigoExactMatch ( obj1.self , obj2.self , flags ) ) ; return match == 0 ; }
switch ( direction ) { case fr.esiea.ga.tetris.client.Model.Piece.DIR_BOTTOM : savePrevPosPiece () ; break; case fr.esiea.ga.tetris.client.Model.Piece.DIR_RIGHT : savePrevPosPiece () ; ( yPos ) ++ ; break; case fr.esiea.ga.tetris.client.Model.Piece.DIR_LEFT : savePrevPosPiece () ; }
{ super . onScrollStateChanged ( recyclerView , newState ) ; int initialItemCount = mGridLayoutManager . findFirstCompletelyVisibleItemPosition () ; int totalItemCount = mGridLayoutManager . getItemCount () ; int lastVisisbleItemPosition = mGridLayoutManager . findLastCompletelyVisibleItemPosition () ; mInfiniteScrollListener . loadMoreData ( initialItemCount , totalItemCount , lastVisisbleItemPosition ) ; }
new org.esa.snap.graphbuilder.rcp.dialogs.ProductSetPanel ( org.esa.snap.rcp.SnapApp . getDefault () . getAppContext () , null , null , false )
{ out . writeInt ( this . seedList . size () ) ; for ( ml.shifu.shifu.core.dvarsel.CandidateSeed seed : this . seedList ) { out . write ( seed . getId () ) ; java.util.List < java.lang.Integer > columnIdList = seed . getColumnIdList () ; out . write ( columnIdList . size () ) ; for ( java.lang.Integer columnId : columnIdList ) { out . write ( columnId ) ; } } }
private void initConnection () { try { java.net.URL url = new java.net.URL ( "http" , Constants.SERVER , 3000 , Constants.DATA_POST_URL ) ; httpConnection = ( ( java.net.HttpURLConnection ) ( url . openConnection () ) ) ; httpConnection . setRequestProperty ( "Accept" , "application/json" ) ; httpConnection . setRequestProperty ( "Content-type" , "application/json" ) ; httpConnection . setRequestMethod ( "POST" ) ; httpConnection . setDoOutput ( true ) ; httpConnection . connect () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } }
@ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public com.github.visola.familymenu.model.Person createPerson ( @ org.springframework.web.bind.annotation.RequestBody @ org.springframework.web.bind.annotation.RequestBody @ org.springframework.web.bind.annotation.RequestBody @ javax.validation.Valid com.github.visola.familymenu.model.Person person , @ org.springframework.security.core.annotation.AuthenticationPrincipal java.lang.String familyName ) { com.github.visola.familymenu.model.Family loadedFamily = familyRepository . findByName ( familyName ) ; if ( ! ( java.util.Objects . equals ( person . getKey () . getId () , loadedFamily . getId () ) ) ) { throw new com.github.visola.familymenu.controller.exception.NotAuthorizedException ( "You don't have permission to add a person to that family." ) ; } person . setFamily ( loadedFamily ) ; return personRepository . save ( person ) ; }
{ if ( ( getSymbolTable () . getLang () . equals ( "ja" ) ) && ( ! ( getConfigAttribute ( "min_len" ) . isPresent () ) ) ) getProperties () . put ( "min_len" , 1 ) ; }
{ blusunrize.immersiveengineering.common.util.compat.waila.IEailaDataProvider dataProvider = new blusunrize.immersiveengineering.common.util.compat.waila.IEailaDataProvider () ; reg instanceof blusunrize.immersiveengineering.common.blocks.plant.BlockIECrop . class ) ; regException . registerBodyProvider ( dataProvider , blusunrize.immersiveengineering.common.blocks.plant.TileEntityWoodenBarrel . class ) ; regException . registerStackProvider ( dataProvider , blusunrize.immersiveengineering.api.energy.immersiveflux.IFluxReceiver . class ) ; regException . registerBodyProvider ( dataProvider , blusunrize.immersiveengineering.api.energy.immersiveflux.IFluxReceiver . class ) ; regException . registerBodyProvider ( dataProvider , blusunrize.immersiveengineering.api.energy.immersiveflux.IFluxReceiver . class ) ; }
{ if ( ( drag ) && ( ! ( move ) ) ) { deselectAll () ; target . clear () ; int x = e . getX () ; int y = e . getY () ; for ( main.GObject go : gObjects ) { if ( go . c ( eX , eY , x , y ) ) { target . add ( go ) ; go . selected () ; } } repaint () ; } }
{ if ( memory == null ) { return null ; } word = memory [ i ] ; }
if ( sequenceIndexId > 0 ) { seqResGroups . set ( sequenceIndexId , group ) ; }
return ( ( ( ( ( ( ( ( ( "Bag{" + "id=" ) + ( id ) ) + ", name='" ) + ( name ) ) + '\'' ) + ", publicKey=" ) + ( java.util.Arrays . toString ( publicKey ) ) ) + ", shared=" ) + ( shared ) ) + '}' ;
public boolean deleteFavorite ( int favoriteID ) { android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_WEBS . , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_FAVORITE_ID ) + " = " ) + favoriteID ) , null ) ; db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_RELEASE_DATES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_FAVORITE_ID ) + " = " ) + favoriteID ) , null ) ; return ( db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_FAVOR ) , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_ID ) + " = " ) + favoriteID ) , null ) ) > 0 ; }
while ( forwardReferences . empty () ) { final org.exist.xquery.FunctionCall call = forwardReferences . pop () ; final org.exist.xquery.UserDefinedFunction func = call . getContext () . resolveFunction ( call . getQName () , call . getArgumentCount () ) ; if ( func == null ) { throw new org.exist.xquery.XPathException ( call , ErrorCodes.XPST0017 ) ; } call . resolveForwardReference ( func ) ; }
@ java.lang.Override public void onPermissionGranted () { final com.afollestad.materialdialogs.MaterialDialog dialog = jahirfiquitiva.iconshowcase.dialogs.ISDialogs . showBuildingRequestDialog ( context ) ; if ( ( getResources () . getInteger ( R.integer.max_apps_to_request ) ) > ( - 1 ) ) { if ( ( maxApps ) < 0 ) { maxApps = 0 ; } } else { dialog . show () ; com.pitchedapps.butler.iconrequest.IconRequest . get () . send ( new com.pitchedapps.butler.iconrequest.IconRequest.OnRequestReady () { @ java.lang.Override public void doWhenReady () { dialog . dismiss () ; } } ) ; } }
{ if ( ! ( edges . containsKey ( e ) ) ) throw new graph.Graph. cGraphException ( "Can't find other endpoint of edge" , e ) ; graph.Graph < V , E > . Edge edge = edges . get ( e ) ; if ( edge._1 . equals ( oneEnd ) ) return edge._1.v ; if ( edge._1 . equals ( oneEnd ) ) return edge._1.v ; return null ; }
{ if ( ( ( mAddress ) != null ) && ( ( mAddress . getCity () ) != null ) ) { mCurrentCity = mAddress . getCity () ; } else { mCurrentCity = mSelectAreaPresenter . getCitysWithIndex ( 0 ) ; } cityAdapter . setDatas ( citys ) ; cityAdapter . setSelectArea ( mCurrentCity . getId () ) ; cityAdapter . notifyDataSetChanged () ; }
record . getInternalAppId ()
index > 0 ? index : questionAdapter . getCount ()
if ( position == 0 ) { android.content.Intent intent = new android.content.Intent ( android.content.Intent.ACTION_PICK , android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI ) ; intent . setType ( "image/*" ) ; startActivityForResult ( android.content.Intent . createChooser ( intent , "Deep Life" ) , 1 ) ; } else if ( position == 4 ) { Show_DialogBox ( 100 ) ; } else { Show_DialogBox ( position ) ; }
locale = lang
{ final java.util.Set < java.lang.String > s = befores ; final boa.compiler.visitors.Identifier id = ( ( boa.compiler.visitors.Identifier ) ( n . getParam1 () . getType () ) ) ; final java.lang.String token = id . getToken () ; final boa.compiler.visitors.Identifier id1 = ( ( boa.compiler.visitors.Identifier ) ( n . getParam2 () . getType () ) ) ; final java.lang.String token1 = id1 . getToken () ; final java.lang.String token1 = id1 . getToken () ; s . add ( token1 ) ; }
private static java.lang.StringBuffer generateData ( java.lang.String sensorName , java.lang.String sensorName , java.lang.String color ) { java.lang.StringBuffer json = new java.lang.StringBuffer ( "" ) ; json . append ( "\"key\":\"" ) . append ( sensorName ) . append ( "\"," ) ; json . append ( "\"color\":\"" ) . append ( color ) . append ( "\"," ) ; json . append ( "\"values\":[" ) ; return json ; }
{ java.sql.Blob blob = getBlob ( name ) ; if ( blob == null ) return null ; return blob . getBinaryStream () ; }
{ core.restaurant.agent.WaiterOrder = message . get ( 0 ) ; core.restaurant.agent.Customer customer = message . get ( 1 ) ; java.lang.String choice = message . get ( 2 ) ; synchronized ( m_checks ) { m_checks . add ( new core.restaurant.Check ( org , customer , choice ) ) ; } print ( ( ( ( ( "Computing " + ( customer . getName () ) ) + "'s check for java/her " ) + choice ) + "." ) ) ; stateChanged () ; }
{ assert ( X ) == 2 ; java.lang.System.out . println ( ( ( ( "X = " + ( X ; [ 0 ] ) ) + "Y = " ) + ( X ; [ 1 ] ) ) ) ; int index = pointmap [ ( ( int ) ( ( ( X ) * ( Constants.WIDTH ) ) + ( X ; [ 0 ] ) ) ) ] ; double [] P = this . points . get ( index ) ; return P ; }
{ oldSum = sum ; n += 1.0F ; int n = 1 ; while ( oldSum < sum ) { oldSum = sum ; n += 1 ; sum += 1.0F ; } }
void addRequestTime ( java.util.Map < java.lang.String , java.lang.Object > map ) { if ( includeRequestTime ) { if ( requestTime > 0 ) { final long sec = java.util.concurrent.TimeUnit.MILLISECONDS . toSeconds ( requestTime ) ; final long ms = java.util.concurrent.TimeUnit.MILLISECONDS . toMillis ( ( requestTime - ( java.util.concurrent.TimeUnit.SECONDS . toMillis ( sec ) ) ) ) ; java.lang.String time = java.lang.String . format ( "%01d.%03d" , sec , ms ) ; if ( time != null ) { map . put ( ch.qos.logback.contrib.json.access.JsonLayout.REQUESTTIME_ATTR_NAME , time ) ; } } } }
( this . table [ hashCode ] ) != ( this . table . length )
{ this . contentStreams = new java.util.ArrayList ( MAX_NUMBER_OF_ELEMENTS ) ; org.verapdf.model.impl.pd.PDPage page = ( ( org.verapdf.model.impl.pd.PDPage ) ( this . simplePDObject ) ) ; org.verapdf.model.impl.pd.util.PDResourcesHandler resourcesHandler = org.verapdf.model.impl.pd.util.PDResourcesHandler . getInstance ( page . getResources () , page . isIn >Resources () ) ; org.verapdf.model.impl.pd.util.ContentStream contentStream = new org.verapdf.model.impl.pd.TransactionPDContentStream ( page . getContent () , resourcesHandler ) ; this . containsTransparency |= contentStream . isContainsTransparency () ; contentStreams . add ( contentStream ) ; }
calendar = new java.util.GregorianCalendar ()
{ web . getWebView () . setDrawingCacheEnabled ( true ) ; web . getWebView () . buildDrawingCache () ; initWebSetting ( web ) ; if ( ( ! ( AppData.private_mode . get () ) ) && ( AppData.accept_cookie . get () ) ) android.webkit.CookieManager . getInstance () . setAcceptThirdPartyCookies ( web . getWebView () , AppData.accept_third_cookie . get () ) ; return web ; }
assertTrue ( cookies [ 0 ] , cookies [ 0 ] , "SID" , "31d4d96e )
{ if ( v < 0 ) v = 0 ; else if ( v > 1 ) v = 1 ; float newy = v * ( ( getHeight () ) - ( h . getHeight () ) ) ; float y = ( - newy ) + ( getY () ) ; h . setPosition ( h . getX () , ( ( getY () ) + ( - y ) ) ) ; }
private int getDepth ( java.lang.String line ) { int depth = 1 ; for ( int i = 0 ; i < ( line . length () ) ; i ++ ) { if ( ( ( line . charAt ( i ) ) == '\t' ) || ( ( line . charAt ( i ) ) == ' ' ) ) { depth ++ ; } else { break; } } return depth ; }
{ android.util.Log . v ( "HELLO" , "HELLLO" ) ; android.app.FragmentTransaction ft = getFragmentManager () . beginTransaction () ; if ( prev != null ) { ft . remove ( prev ) ; } ft . addToBackStack ( null ) ; extinctspecie.com.zantetravel.activities.MainActivity.newFragment = extinctspecie.com.zantetravel.fragments.MyDialogFragment . newInstance ( extinctspecie.com.zantetravel.activities.MainActivity.CUSTOM_DIALOG_ID_FOR_ABOUT_APP ) ; extinctspecie.com.zantetravel.activities.MainActivity.newFragment . setCancelable ( true ) ; extinctspecie.com.zantetravel.activities.MainActivity.newFragment . show ( ft , "sDialog" ) ; }
{ Gdx.app . log ( "Coin" , "Collision" ) ; getCell () . setTile ( com.mkemp.mariobros.Sprites.Coin.tileSet . getTile ( java.lang.Math . abs ( ( getCell () . getTile () . getId () ) ) ) ) ; com.mkemp.mariobros.Scenes.Hud . addScore ( 100 ) ; if ( ( getCell () . getTile () . getId () ) == ( - 1ANK_COIN ) ) MarioBros.manager . get ( "audio/sounds/bump.wav" , com.badlogic.gdx.audio.Sound . class ) . play () ; else MarioBros.manager . get ( "audio/sounds/coin.wav" ) . play () ; }
{ nbt . removeTag ( "IsOpenDummy" ) ; if ( ( nbt . hasKey ( "IsOpenDummy" ) ) != true ) { nbt . removeTag ( "IsOpenDummy" ) ; nbt . setBoolean ( "IsOpen" , false ) ; } }
new java.awt.geom.Point2D.Float ( maxVolume , 1.0F )
{ this . allGames = allGames . getGames () ; if ( ( currGame ) != null ) { setCurrGame ( allGames . findGame ( currGame . getGameID () ) ) ; } if ( ( currGame ) != null ) { setCurrGame ( allGames . findGame ( currGame . getGameID () ) ) ; } }
{ android.support.v4.provider.DocumentFile parent = ml.puredark.hviewer.utils.DocumentUtil . getDirDocument ( root , subDirs ) ; if ( parent == null ) return null ; android.support.v4.provider.DocumentFile file = parent . findFile ( fileName ) ; return ml.puredark.hviewer.utils.DocumentUtil . getFileOutputSteam ( context , file . getUri () ) ; }
java.lang.System.out . println ( "(" )
private void saveIntegrityKey ( javax.crypto.SecretKey secretKey , java.lang.String inKeyFilename ) { try { java.io.ObjectOutputStream inKeyOutputStream = new java.io.ObjectOutputStream ( new java.io.FileOutputStream ( java.lang.String . format ( new java.io.FileOutputStream ( java.lang.String . format ( new java.io.FileOutputStream ( java.lang.String . format ( argsKeyFilename ) ) ) ) ) ) ; } catch ( java.io.IOException e ) { consoleOutputController . close () ; consoleOutputController . logOnScreen ( java.lang.String . format ( keySavedMessage , ( ( java.lang.String ) ( e ) ) ) ) ; } }
testDateCal . add ( timeBefore )
newJobPost . getCountries ()
assertEquals ( 7 , thread . getPosts () )
{ root = javafx.fxml.FXMLLoader . load ( getClass () . getResource ( "/view/userAccount/LoginUI.fxml" ) ) ; javafx.scene.Scene scene = new javafx.scene.Scene ( root ) ; stage . setScene ( scene ) ; stage . show () ; }
{ for ( com.rbruno.irc.templates.Client current : clients ) current . getConnection () . send ( false ) ; this . topic = topic ; }
userInfo . userInfoMessageReceiver . receiveList ( " " ) )
{ org.wso2.carbon.apimgt.gateway.th (.publisher.DataProcessAndPublishingAgent agent = ( ( org.wso2.carbon.apimgt.gateway.th (.publisher.DataProcessAndPublishingAgent ) ( r ) ) ) ) ; agent . setDataReference ( null ) ; org.wso2.carbon.apimgt.gateway.th >.publisher.ThrottleDataPublisher.dataPublisherPool . release ( agent ) ; }
private void load ;ChildKeys ( org.grails.datastore.mapping.core.Session session , java.util.Collection keys ) { if ( proxyEntities ) { for ( java.lang.Object key : keys ) { add ( session . proxy ( childType , ( ( java.io.Serializable ) ( key ) ) ) ) ; } } else { addAll ( session . retrieveAll ( childType , keys ) ) ; } }
Config.data . setJSONObject ( param , value )
{ double diffX = x1 - px ; double diffY = y1 - py ; double dist = ( diffX * diffX ) + ( diffY * diffY ) ; if ( dist < ( radius * radius ) ) { return true ; } else { return false ; } }
if ( ( task . getProject () . getId () ) != null ) { task . setProject ( projectRepository . findOne ( task . getProject () . getId () ) ) ; }
{ android.content.Intent intent = new android.content.Intent () ; android.os.Bundle bundle = new android.os.Bundle () ; bundle . putSerializable ( "sendProfile" , myProfile ) ; intent . putExtras ( bundle ) ; setResult ( 2 , intent ) ; finish () ; }
{ android.util.Log . d ( com.ibm.watson.developer_cloud.android.speech_to_text.v1.audio.WebSocketUploader.TAG , "Connecting..." ) ; this . encoder . initEncoderWithUploader ( this ) ; if ( this . sConfig . isSSL ) this . trustServer () ; rc = this . connectBlocking () ; if ( ! rc ) { android.util.Log . e ( com.ibm.watson.developer_cloud.android.speech_to_text.v1.audio.WebSocketUploader.TAG , "Connection failed!" ) ; this . uploadPrepared = false ; throw new java.lang.Exception ( "Connection failed!" ) ; } }
( ! ( workQueueHeadTime > time ) )
if ( ( doc1 . getScore () ) > ( doc2 . getScore () ) ) { return - 1 ; } else if ( ( doc1 . getScore () ) > ( doc2 . getScore () ) ) { return 1 ; }
save ( form )
{ for ( char [] element : list ) { if ( ! ( java.util.Arrays . equals ( element , array ) ) ) { return false ; } } return false ; }
config . getKeys ()
{ android.view.ViewGroup.LayoutParams layoutParams = view . getLayoutParams () ; if ( layoutParams instanceof android.view.ViewGroup.MarginLayoutParams ) { initMarginRect ( i , ( ( android.view.ViewGroup.MarginLayoutParams ) ( layoutParams ) ) ) ; } else { if ( ! ( layoutParams instanceof android.view.ViewGroup.MarginLayoutParams ) ) return; if ( ( layoutParams ) instanceof android.view.ViewGroup.MarginLayoutParams ) { if ( layoutParams == null ) { return 0 ; } } } else { if ( ( layoutParams ) instanceof android.view.ViewGroup.MarginLayoutParams ) { return; } } }
{ put ( org.apache.ignite.math.impls.vector.StringLocalOnHeapVector . class , java.lang.Class < ? extends org.apache.ignite.math.Matrix > > typesMap () { return new java.util.LinkedHashMap < java.lang.Class < ? extends org.apache.ignite.math.Vector > , java.lang.Class < ? extends org.apache.ignite.math.Matrix > > () { put ( org.apache.ignite.math.impls.vector. ++LocalOnHeapVector . class , org.apache.ignite.math.impls.matrix.StringLocalOffHeapMatrix . class ) ; put ( org.apache.ignite.math.impls.vector.UserVector . class , null ) ; put ( org.apache.ignite.math.impls.vector.SparseLocalOnHeapVector . class , org.apache.ignite.math.impls.matrix.SparseLocalOnHeapMatrix . class ) ; put ( org.apache.ignite.math.impls.vector.SparseLocalOnHeapVector . class , org.apache.ignite.math.impls.matrix.SparseLocalOnHeapMatrix . class ) ; put ( org.apache.ignite.math.impls.matrix.SparseLocalOnHeapMatrix . class ) ; put ( org.apache.ignite.math.impls.matrix.SparseLocalOnHeapMatrix . class ) ; put ( org.apache.ignite.math.impls.matrix.SparseLocalOnHeapMatrix . class ) ; put ( org.apache.ignite.math.impls.matrix.SparseLocalOnHeapMatrix . class ) ; put ( org.apache.ignite.math.impls.matrix.SparseLocalOnHeapMatrix . class ) ; put ( org.apache.ignite.math.impls.matrix.SparseLocalOnHeapMatrix . class ) ; put ( org.apache.ignite.math.impls.matrix.SparseLocalOnHeapMatrix . class ) ; put ( org.apache.ignite.math.impls.matrix.SparseLocalOnHeapMatrix . class ) ; put ( org.apache.ignite.math.impls.matrix.SparseLocalOnHeapMatrix . class ) ; put ( org.apache.ignite.math
drawaString ( g , ( ( g ) ( g ) ) , ( ( g ) + 1 ) , 20 , 32 )
{ bundleContext . getBundle ( 0 ) . stop () ; while ( ( bundleContext ) != null ) { java.lang.Thread . sleep ( 100 ) ; } }
public void put ( java.util.Map < java.lang.String , java.lang.Object > event ) throws java.lang.Exception { com.lmax.disNodeor.RingBuffer < com.dtstack.logstash.s.disNodeor.MapEvent > ringBuffer = dis.or . getRingBuffer () ; long sequence = ringBuffer . next () ; try { com.dtstack.logstash.s.disNodeor.MapEvent mapEvent = ringBuffer . get ( sequence ) ; if ( ( event != null ) && ( ( event . size () ) > 0 ) ) mapEvent . setEvent ( event ) ; } finally { ringBuffer . publish ( sequence ) ; } }
{ java.lang.Iterable < siena.base.test.model.PersonUUID > people = pm . createQuery ( siena.base.test.model.PersonUUID . class ) . filter ( "n>" , 1 ) . order ( "n" ) . iter ( 1 ) ; assertNotNull ( people ) ; siena.base.test.model.PersonUUID [] array = new siena.base.test.model.PersonUUID [] { siena.base.test.BaseAsyncTest.UUID_CURIE } ; int i = 0 ; for ( siena.base.test.model.PersonUUID PersonIntKey : people ) { assertEquals ( array [ i ] , PersonIntKey ) ; i ++ ; } }
{ weka.core.Instances trainingCancer =_Work2.MainHW2 . loadData ( "cancer_train.txt" ) ; weka.core.Instances testingCancer =_Work2.MainHW2 . loadData ( "cancer_test.txt" ) ; weka.core.Instances validationCancer =_Work2.MainHW2 . loadData ( "cancer_validation.txt" ) ; }
void eliminationTournament () { while ( ( players . size () ) > 1 ) { swissTournamentRunner.GUI . wipePane () ; shufflePlayers () ; sortRankings () ; updateParticipantStats () ; print ( displayInDepthRankings () ) ; generatePairings () ; pollForResults () ; } }
{ super . onActivityCreated ( savedInstanceState ) ; adapter = new android.widget.ArrayAdapter ( getActivity () , android.R.layout.simple_list_item_1 ) ; setEmptyText ( "No data, please add from menu." ) ; setListAdapter ( adapter ) ; setListShown ( false ) ; getLoaderManager () . initLoader ( ch.ronoli.tensing.fragments.CategoryFragment.LOADER_ID , null , this ) ; restoreActionBar () ; }
{ boolean isvalid = true ; try { java.util.List < java.lang.String > validCategoris = apiDAO . getValidPurchaseCategories () ; if ( ( validCategoris . size () ) > 0 ) { isvalid = false ; for ( java.lang.String category : validCategoris ) { if ( category . equalsIgnoreCase ( purchaseCategoryCode ) ) { isvalid = true ; break; } } } } catch ( java.lang.Exception e ) { throw e ; } return isvalid ; }
try { dataChunks [ index ] = chunkReader . convertToMeasureChunk ( fileReader ) ; } catch ( java.io.IOException e ) { throw new java.lang.RuntimeException ( e ) ; }
@ java.lang.Override public synchronized boolean isOwnedBy ( java.lang.Thread t ) { if ( ( ( currentOwner ) == t ) && ( t . isAlive () ) ) { return true ; } else if ( ( ( currentOwner ) == null ) && ( ( t == null ) || ( t . isAlive () ) ) ) { return true ; } else { return false ; } }
@ org.junit.Test public void testButtonName ( ) throws gov.hhs.fha.nhinc.callback.opensaml.CallbackProperties callbackProps = org.mockito.Mockito . mock ( gov.hhs.fha.nhinc.callback.opensaml.CallbackProperties . class ) ; java.security.cert.X509Certificate certificate = org.mockito.Mockito . mock ( java.security.cert.X509Certificate . class ) ; certificate = mock ( java.security.cert.X509Certificate . class ) ; certificate = null ; if ( certificate != null ) { if ( ! ( certificate . isEmpty () ) ) { return null ; } else { gov.hhs.fha.nhinc.properties.PropertyAccessor propAccessor = createPropertyAccessor () ; } org.junit.Assert . assertEquals ( gov.hhs.fha.nhinc.callback.opensaml.HOKSAMLAssertionBuilderTest.PROPERTY_FILE_NAME , gov.hhs.fha.nhinc.callback.opensaml.HOKSAMLAssertionBuilderTest.PROPERTY_NAME ) ; org.junit.Assert . assertEquals ( gov.hhs.fha.nhinc.callback.opensaml.HOKSAMLAssertionBuilderTest.PROPERTY_VALUE_STRING ) ; }
public java.util.List < java.lang.Integer > getNotCheckedList () { java.util.List < java.lang.Integer > result = new java.util.ArrayList < java.lang.Integer > () ; for ( java.util.Map.Entry < java.lang.Integer , java.lang.Boolean > checkedEntry : checkedMap . entrySet () ) { if ( ( checkedEntry . getValue () ) == false ) result . add ( checkedEntry . getKey () ) ; } return result ; }
@ java.lang.Override public org.jcodec.common.MuxerTrack addVideoTrack ( org.jcodec.common.Codec codec , org.jcodec.common.VideoCodecMeta meta ) { org.jcodec.containers.mp4.muxer.FramesMP4MuxerTrack track = addTrack ( MP4TrackType.VIDEO , codec ) ; if ( meta != null ) { if ( codec == ( org.jcodec.common.Codec.H264 ) ) { track . addVideoSampleEntry ( meta ) ; } else { throw new java.lang.RuntimeException ( "VideoCodecMeta is required upfront for all ) ; } } return track ; }
{ double [] fileName = num [ edu.utexas.cs.nn.tasks.gridTorus.HyperNEATNNTorusPredPreyController.NUM_OUTPUTS_WITH_NO_ACTION ; java.lang.System.out . println ( java.util.Arrays . toString ( outputs ) ) ; return ( outputs [ edu.utexas.cs.nn.tasks.gridTorus.HyperNEATNNTorusPredPreyController.SUBSTRATE_UP_INDEX ] ; modified / [ edu.utexas.cs.nn.gridTorus.controllers.TorusPredPreyController.RIGHT_INDEX ] = outputs [ edu.utexas.cs.nn.tasks.gridTorus.HyperNEATNNTorusPredPreyController.SUBSTRATE_RIGHT_INDEX ] ; return fileName ; }
kagName . hashCode ()
java.util.List < java.lang.Object > sortedMap = new java.util.TreeMap < java.lang.String > () ;
{ com.gdo.stencils.plug.PStcl stcl = _stencils . get ( key ) ; _stencils . remove ( key ) ; _properties . remove ( key ) ; _locked . remove ( key ) ; if ( stcl != null ) { stcl . clear ( stclContext ) ; } }
{ try { if ( de.hsnr.inr.sir.query.ProximityQuery . create ( name ) ) { return de.hsnr.inr.sir.query.PhraseQuery . create ( name ) ; } } catch ( java.lang.IllegalArgumentException e ) {} try { return de.hsnr.inr.sir.query.ProximityQuery . create ( name ) ; } catch ( java.lang.IllegalArgumentException e ) {} return de.hsnr.inr.sir.query.ConcreteQueryTerm . create ( name ) ; }
{ java.util.HashMap < java.lang.String , po.GoodsModelPO > goodsModels = goodsListPO () . getGoodsModels () ; po.GoodsModelPO temp = goodsModels . get ( goods.id ) ; temp . setName ( goods.name ) ; if ( ( goods.amount ) > 0 ) { temp . setSignal ( goods.amount ) ; return temp ; } return null ; }
{ org.osgi.framework.ServiceReference < ? > [] servicesPresent = bundleContext . getServiceReferences ( ( ( java.lang.String ) ( null ) ) , filter ) ; for ( org.osgi.framework.ServiceReference < ? > serviceReference : servicesPresent ) { sl . serviceChanged ( new org.osgi.framework.ServiceEvent ( org.osgi.framework.ServiceEvent.REGISTERED , serviceReference ) ) ; } }
( ( plugin . getSpawns ( p ) ) != null )
{ long idxUsagesBefore = indexUsages ( db ) ; java.util.List < com.orientechnologies.orient.core.record.impl.ODocument > qResult = db . command ( new com.orientechnologies.orient.core.sql.OCommandSQL ( "select * from foo where bar = 2 or name .a' and bar >= 0" ) ) . execute () ; assertEquals ( qResult . size () , 2 ) ; assertEquals ( indexUsages ( db ) , ( idxUsagesBefore + 2 ) ) ; }
filter . startsWith ( text . toLowerCase () )
{ float requiredInfluence = 60 ; java.util.List < amidst.map.EndIsland > islands = frag . getEndIslands () ; for ( amidst.map.EndIsland island : islands ) { float influence = island . influenceAtChunk ( chunkX , chunkZ ) ; if ( influence >= 0.0 ) { if ( influence >= requiredInfluence ) { return amidst.map.layers.EndCityLayer.ChunkProbability.Disely ; } } return amidst.map.layers.EndCityLayer.ChunkProbability.None ; } }
private static java.lang.Object invokeMethod ( java.lang.reflect.Method method , java.lang.Object object , java.lang.Object . . . args ) { try { boolean a = ! ( method . isAccessible () ) ; if ( ! ( method . isAccessible () ) ) { method . setAccessible ( true ) ; } java.lang.Object obj = method . invoke ( object , args ) ; if ( a ) { method . setAccessible ( false ) ; } return obj ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; return null ; } }
{ m . deleteNode ( iter . next () ) ; }
private static int getIndex ( edu.cmu.tetrad.graph.Endpoint endpoint ) { if ( endpoint == ( - 1 ) ) { return 0 ; } if ( endpoint == ( - 1 ) ) return 0 ; if ( endpoint == ( - 1 ) ) return 1 ; if ( endpoint == ( - 1 ) ) return 1 ; if ( endpoint == ( - 1 ) ) return 2 ; if ( endpoint == null ) return 3 ; throw new java.lang.IllegalArgumentException () ; }
public void setTeam ( java.lang.Integer team ) { if ( ( de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 ) != null ) { de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 . destroy () ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 . destroy () ; } de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 = new de.mickyjou.plugins.pvpevent.listener.player.NPC (. . getPlayers () [ 0 ] . getUniqueId () , de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.firstNPC ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 = new de.mickyjou.plugins.pvpevent.listener.player.NPC (. . getPlayers () [ 1 ] . getUniqueId () , de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.secondNPC ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 . spawn () ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 . spawn () ; }
if ( intent . getAction () . equals ( Intent.ACTION_SEARCH ) ) { java.lang.String query = intent . getStringExtra ( SearchManager.QUERY ) ; android.widget.Toast . makeText ( mContext , query , Toast.LENGTH_SHORT ) . show () ; android.provider.SearchRecentSuggestions suggestions = new android.provider.SearchRecentSuggestions ( this , com.quartzodev.provider.SuggestionProvider.AUTHORITY , com.quartzodev.provider.SuggestionProvider.MODE ) ; suggestions . saveRecentQuery ( query , null ) ; }
{ if ( ( menu ) == null ) return; if ( ( cn.edu.jxnu.awesome_campus.MainActivity.presenter . getCurrentSelectedID () ) == ( DrawerItem.HOME . getId () ) ) { menu . clear () ; if ( flag ) { getMenuInflater () . inflate ( R.menu.menu_notify_unread , menu ) ; } else { getMenuInflater () . inflate ( R.menu.menu_notify_none , menu ) ; } } }
private void NewCookie ( javax.servlet.http.HttpServletResponse response ) { javax.servlet.http.Cookie cookie = new javax.servlet.http.Cookie ( "cartID" , M ,.ShoppingCartHolder . getRandomID () ) ; response . addCookie ( cookie ) ; if ( cookie == null ) { M = new javax.servlet.http.Cookie ( "cartID" , M ).ShoppingCartHolder . getRandomID () ; } response . addCookie ( cookie ) ; }
( ( ( count ) + 9 ) + 1 ) > ( this . slotIndex )
{ eventBusInterface . startQuestion ( net.serenitybdd.screenplay.formatting.FormattedTitle . ofConsequence ( consequence ) ) ; if ( eventBusInterface . shouldIgnoreCon. () ) { net.thucydides.core.steps.StepEventBus . getEventBus () . stepIgnored () ; } else { consequence . evaluateFor ( this ) ; } catch ( java.lang.Throwable e ) { errorTally . recordError ( consequence , e ) ; } }
checkDefCall ( result , expr )
com.edp.myesper.engine.EsperEngine.logger . error ( "Something went wrong while trying to delete all queries." )
{ com.thoughtworks.go.server.cache.GoCache cache = mock ( com.thoughtworks.go.server.cache.GoCache . class ) ; com.thoughtworks.go.listener.BaseUrlChangeListener listener = new com.thoughtworks.go.listener.BaseUrlChangeListener ( new com.thoughtworks.go.domain.ServerSiteUrlConfig ( "" ) , new com.thoughtworks.go.domain.ServerSiteUrlConfig ( "" ) , cache ) ; java.lang.System.out . println ( cache ) ; com.thoughtworks.go.config.Cru ++ newCru ) ; org.mockito.Mockito . verifyZeroInteractions ( cache ) ; }
( elapsed ) / ( time )
{ int i ; try { i = java.lang.Integer . parseInt ( levelNumber . getText () ) ; } catch ( java.lang.Exception e ) { resetPieces () ; resetButtons () ; resetBoard ( i ) ; resetFields ( i ) ; } }
{ super . onResume () ; isFirstScan = true ; registerReceiver ( mWifiScanReceiver , new android.content.IntentFilter ( android.net.wifi.WifiManager.SCAN_RESULTS_ACTION ) ) ; android.content.IntentFilter filter = new android.content.IntentFilter () ; filter . addAction ( WifiManager.NETWORK_STATE_CHANGED_ACTION ) ; filter . addAction ( ConnectivityManager.CONNECTIVITY_ACTION ) ; registerReceiver ( mWifiChangeReceiver , filter ) ; }
{ if ( ( ConstantsFTPServerJulia.PFtpServer . getFileSystem () ) == null ) { org.mockftpserver.P.filesystem.FileSystem fileSystem = new org.mockftpserver.P.filesystem.UnixFakeFileSystem () ; } else { java.lang.System.out . println ( hex ) ; file . setContents ( Constants ) ; } }
new org.neo4j.kernel.impl.transaction.command.IndexTransactionApplier ()
do { java.lang.System.out . println ( "El o0e canto truco: " ) ; java.lang.System.out . println ( "1) Quiero" ) ; java.lang.System.out . println ( "2) No quiero" ) ; java.lang.System.out . println ( "3) Quiero retruco" ) ; num1 = input . getIntegerInput () ; } while ( input . controladorInput ( num1 , 1 , 3 ) ) ;
{ java.util.Set < sk.fei.stuba.xpivarcim.db.entities.assignment.TestFile > output = new java.util.HashSet <> () ; for ( sk.fei.stuba.xpivarcim.db.entities.assignment.TestFile f : testFiles ) if ( ! ( f . isRunTest () ) ) output . add ( f ) ; return output ; }
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/{productId}/test" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = org.springframework.http.MediaType.APPLICATION_JSON_VALUE ) @ org.springframework.web.bind.annotation.ResponseBody public org.springframework.data.domain.Page < com.cspinformatique.kubik.model.sales.InvoiceDetail > findProductInvoices ( @ org.springframework.web.bind.annotation.PathVariable ( value = "productId" ) int productId , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "0" ) java.lang.Integer page , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "10" ) java.lang.Integer resultPerPage , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.Integer page , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "10" ) java.lang.Integer resultPerPage , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) org.springframework.data.domain.Sort.Direction direction , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = " (Label" ) java.lang.String sortBy ) { return this . invoiceDetailService . findByProductAndInvoiceStatus ( this . productService . findOne ( productId ) , new com.cspinformatique.kubik.model.sales.InvoiceStatus ( org.springframework.data.domain.Sort.Direction.ASC ) , sortBy ) ; }
{ setAirplaneState ( StateAirplane.LoadingPassagers ) ; enstabretagne.base.time.LogicalDuration t = enstabretagne.base.time.LogicalDuration . ofSeconds ( ( 20 * 60 ) ) ; Post ( new enstabretagne.SimEntity.airplane.Airplane.RollingToTrack () , getCurrentLogicalDate () . add ( t ) ) ; java.lang.System.out . println ( ( "getWaitTrackList in loading passagers" + ( getMyAirport () . getWaitTrackList () ) ) ) ; }
private static java.util.List < Tile > createGameBoard ( Board.Builder builder ) { java.util.List < Tile > tiles = new java.util.ArrayList <> () ; for ( int i = 0 ; i <= ( BoardUtils.NUM_TILES ) ; i ++ ) { tiles . add ( Tile . createTile ( i , builder.boardConfig . get ( i ) ) ) ; } return tiles ; }
private double semestrialCorrection ( final double param ) { final int 1 ; final int true ; final int true ; if ( ( cachedDay ) >= 100 ) { final double xmult = ( ( cachedDay ) - 1 ) / 40.0 ; result = param - ( ( 2.0 * param ) * xmult ) ; } else { final double xmult = ( ( cachedDay ) - 1 ) / 40.0 ; result = ( ( 2.0 * param ) * xmult ) - param ; } return result ; }
outStream . writeObject ( archivo )
{ throw new com.spotify.docker.client.DockerException ( e ) ; }
{ if ( isAutoOpen () ) { index . open () ; } if ( index != null ) { index . open () ; } if ( index == null ) { index = 0 ; } if ( index != null ) { index . open () ; } }
userID < this . userID
public void learning () { if ( ( ( tick ) % 4 ) == 0 ) { calculateReward () ; copyCurrentSVIntoPrevSV () ; generateCurrentStateVector () ; getQfromNet () ; qFunction () ; resetReward () ; doAction () ; } else { setTurnGunRight ( robocode.util.Utils . normalRelativeAngleDegrees ( enemyBearingFromGun ) ) ; } setTurnRadarRight ( robocode.util.Utils . normalRelativeAngleDegrees ( enemyBearingFromRadar ) ) ; }
x < ( - 1 )
userData . put ( UserDataFields.NEWBIE_TIMELEFT , new java.util.HashMap <> () )
new org.apache.jackrabbit.core.security.authorization.AbstractCompiledPermissions.Result ()
if ( ( edt . getText () . toString () . length () ) <= 0 ) { edt . setError ( "Accept Alphabets false ) ; valid_name = null ; } else if ( ! ( edt . getText () . toString () . matches ( "[a-zA-Z ]+" ) ) ) { if ( valid_name ) { return; } valid_name = null ; } else { valid_name = edt . getText () . toString () ; }
{ insertAdditionalVariables () ; notNullVariables . set ( 0 ) ; org.teavm.model.Variable [] parameters = new org.teavm.model.Variable [ ( methodDescriptor . parameterCount () ) + 1 ] ; for ( int i = 0 ; i < ( parameters.length ) ; ++ i ) { parameters [ i ] = program . variableAt ( i ) ; } }
{ assert ( head ) == null ; head = n ; tail = n ; }
i = 0
{ timer . stop () ; if ( option == ( javax.swing.JOptionPane.YES_OPTION ) ) { java.lang.System . exit ( 0 ) ; } else if ( option == ( javax.swing.JOptionPane.YES_OPTION ) ) { super . dispose () ; } }
history.Tools . execute ()
assertFalse ( testBookings . getLastBooking () . hasEndtime () )
( prev - 1 )
{ if ( ( this . extra ) == null ) { this . extra = new java.util.LinkedList <> () ; } this . extra . add ( extra ) ; }
{ setAspectRatio ( size . getWidth () , size . getHeight () ) ; }
{ logic.Extension grounded = argumentFramework . getGroundedExtension ( previousCheckBox . isSelected () ) ; java.lang.System.out . println ( ( ( "{" + ( grounded . getArgumentNames () ) ) + "}" ) ) ; setUI () ; }
{ throw new test.java.HashTableTests.HashTableUtilException ( ( "Failed to retrieve " + fieldName ) ) ; }
{ boolean result = true ; for ( int i = 0 ; i < ( this . cricketScores . size () ) ; i ++ ) { if ( ( this . cricketScores . size () ) == 0 ) { return false ; } for ( int i = 0 ; i < ( this . cricketScores . keySet () ) ; i ++ ) { if ( ( this . cricketScores . get ( 0 ) ) != ( this . currentPlayer ) ) { return false ; } } } return result ; }
{ @ java.lang.Override public void testNotAvailable ( com.v () ) { @ java.lang.Override public void testNotAvailable ( java.lang.String path ) { callbackContext . success ( arg0 . toString () ) ; } @ java.lang.Override public void testLoading () {} @ java.lang.Override public void testLoaded ( java.lang.String testName , com.v >Enums.TestVariation testVariation ) { callbackContext . success ( testVariation . toString () ) ; } } ) ; }
public static void writeNBTFound ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.util.math.BlockPos pos , net.minecraft.util.math.BlockPos pos ) { nbt . setBoolean ( "found" , true ) ; nbt . removeTag ( "searchStarted" ) ; nbt . setInteger ( "posX" , pos . getX () ) ; return nbt . setInteger ( "posZ" , pos . getZ () ) ; }
resultRepository . save ( result ) ;
{ ticketList . add ( new Data.Ticket ( "00:00" , menuItem . getTitle () . toString () ) ) ; ticketList . add ( new Data.Ticket ( "00:00" , menuItem . getTitle () . toString () ) ) ; setAdapter () ; userData . setTicketList ( ticketList ) ; applicationTimeTracker . setUserData ( userData ) ; }
public void updateDefStats ( boolean pic ) { if ( pic ) ( pics ) ++ ; if ( ( ! ( this . getClass () ) ) && ( ( data . length () ) > 0 ) ) { return; } if ( input ) ( java.lang.Integer . toString ( 0 ) ) ) { java.lang.System.out . println ( 0 ) ; if ( ( tflsls ) ++ ) if ( fumblerec ) ( fumblerecs ) ++ ; if ( sack ) ( sacks ) ++ ; if ( td ) ( deftds ) ++ ; if ( ( td ) ( deftds ) ) ++ ; } if ( ( td ) ( deftds ) ) ++ ; if ( ( td ) ( deftds ) ) ++ ; if ( ( td ) ( deftds ) ) ++ ; }
{ emotion.Emotion emotion = new emotion.Emotion () ; java.util.List < java.lang.String > codes = emotion . getCodes () ; emotion . parseDoc ( emotion . set ( html ) ) ; emotion . parseDoc ( emotion . document ( html ) ) ; }
try { return org.opendaylight.yangtools.yang.data.api.YangInstanceIdentifier . of ( org.opendaylight.yangtools.yang.common.QName . class . cast ( type . getField ( " data" ) . get ( null ) ) ) ; } catch ( java.lang.IllegalAccessException e ) { throw new java.lang.IllegalStateException ( ( "Constant QNAME not save for type" + type ) ) ; }
ShowOffer ( snapshot . child ( "OfferSponsor" ) . getValue () . toString () )
{ email = ( ( java.lang.String ) ( child . child ( "email" ) . getValue () ) ) ; if ( userId . equals ( myRef . getAuth () . getUid () ) ) { inGroup = true ; } members . add ( email ) ; groupid . add ( email ) ; }
size - 1
{ try { java.lang.String val = burp.BurpExtender . getInstance () . getCallbacks () . loadExtensionSetting ( setting ) ; try { return java.lang.Boolean . valueOf ( val ) ; } catch ( java.lang.NullPointerException nPException ) { return fallback ; } } }
@ java.lang.Override public void invoke ( java.util.Scanner args ) { final java.lang.String message = ( args . hasNext () ) ? args . nextLine () . trim () : "" ; conversation . add ( message ) ; java.lang.System.out . println ( "ERROR: Messages must contain text" ) ; }
list . add ( x )
<EMPTY>
@ java.io.IOException { org.gbif.api.model.occurrence.Occurrence occ = messageService . delete ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY ) ; org.junit.Assert . assertEquals ( ( ( java.lang.Integer ) ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY ) ) , occ . getKey () ) ; org.junit.Assert . assertNull ( test ) ; }
{ org.apache.drill.exec.physical.impl.xsort.managed.ExternalSortBatch esb = ( ( org.apache.drill.exec.physical.impl.xsort.managed.ExternalSortBatch ) ( incoming ) ) . getIncoming () ; if ( incoming instanceof org.apache.drill.exec.physical.impl.xsort.managed.ExternalSortBatch ) { org.apache.drill.exec.physical.impl.xsort.managed.ExternalSortBatch esb = ( ( org.apache.drill.exec.physical.impl.xsort.managed.ExternalSortBatch ) ( incoming ) ) ; assert ( esb.sortState ) == ( org.apache.drill.exec.physical.impl.xsort.managed.ExternalSortBatch.SortState.DONE ) ; if ( ( esb.resultsIterator ) != null ) { esb.resultsIterator . close () ; esb.resultsIterator = null ; } } }
{ if ( ( null ) == ( "" ) ) { return; } if ( ( ( ans ) + "+" ) && ( ! ( isOperator ( ( ( ans ) + "+" ) ) ) ) ) { java.lang.System.out . println ( ( ( ans ) + "+" ) ) ; } else if ( ! ( isOperator ( ( . getText () . toString () ) ) ) ) { java.lang.System.out . println ( "+" ) ; enterClear ( enterPressed ) ; } }
{ this . plugin = null ; this . versions . clear () ; this . entities . clear () ; this . kickMessage = null ; this . versionMsg = null ; this . manager = null ; }
{ if ( obj == null ) return false ; if ( obj == ( this ) ) return true ; if ( ( obj . getClass () ) == ( this . getClass () ) ) { return ( this . id ) == ( ( ( Person ) ( obj ) ) . getId () ) ; } }
{ if ( transformerMap . isEmpty () ) { return null ; } java.lang.instrument.ClassFileTransformer transformer = transformerMap . remove ( new com.navercorp.pinpoint.profiler.DefaultDynamicTransformerRegistry.TransformerKey ( classLoader , targetClassName ) ) ; if ( logger . isDebugEnabled () ) { logger . info ( "removed dynamic transformer classLoader: {}, className: {}, registry size: {}" , classLoader , targetClassName , transformerMap . size () ) ; } return transformer ; }
{ fieldNames . clear () ; index . close () ; indexAdapter . dispose () ; indexAdapter . dispose () ; }
{ java.util.UUID jobId = java.util.UUID . randomUUID () ; io.crate.action.sql.SQLResponse killResponse = execute ( "KILL ?" , new java.lang.Object [] { jobId } ) ; assertThat ( killResponse . rowCount () , is ( 0L ) ) ; io.crate.action.sql.SQLResponse logResponse = execute ( "select * from sys.jobs_log where error = ?" , new java.lang.Object [] { "KILLED" } ) ; assertThat ( logResponse . rowCount () , is ( 0L ) ) ; }
java.lang.System.out . println ( ( ( "Tried to send an unregistered packet to Client " + ( this ) ) + "!" ) )
{ return ( ( numRejects ) != ( - 1 ) ) && ( ( ( ( ( numRejects ) >= ( edu.mit.ll.graphulo.skvi.RemoteWriteIterator.REJECT_FAILURE_THRESHOLD ) ) || ( rowRangeIterator . hasNext () ) ) || ( ( entriesWritten ) > 0 ) ) || ( reducer . hasTopForClient () ) ) ; }
{ mCurrentLocation = location ; double latitude = mCurrentLocation . getLatitude () ; double longitude = mCurrentLocation . getLongitude () ; stationManager . updateLocation ( latitude , longitude ) ; route = stationManager . updateNexttation ( route ) ; if ( ( binding.estimateTime ) != null ) binding.destinationStation . setText ( ( ( latitude + " : " ) + longitude ) ) ; binding.estimateTime . setText ( ( ( ( ( " + ( this . desName ) ) + " " ) + " " ) + ( stationManager . updateTimeToArrive () ) ) ) ; }
getTransferPart ( null , key , map )
switch ( requestCode ) { case net.lorenz ,coni.wwatcher.WWatcher.REQ_ENABLE_BT : boolean btEnabled = resultCode == ( RESULT_OK ) ; configureButton ( btEnabled , false ) ; break; case net.lorenz ,coni.wwatcher.WWatcher.REQ_PICK_DEV : if ( data != null ) { java.lang.String addr = data . getExtras () . getString ( "device" ) ; android.bluetooth.BluetoothDevice device = inqMap . get ( addr ) ; new net.lorenz (coni.wwatcher.WWatcher.BtConnect () . execute ( device ) ; } break; default: break; }
{ java.sql.Connection conn = null ; try { java.lang.Class . forName ( "org.sqlite.JDBC" ) ; conn = java.sql.DriverManager . getConnection ( SqliteConnection.url ) ; } catch ( java.sql.SQLException e ) { java.lang.System.out . println ( e . getMessage () ) ; } catch ( java.lang.ClassNotFoundException e ) { e . printStackTrace () ; } finally { return conn ; } }
if ( ( ( w ) == null ) || ( ! ( obj . equals ( w ) ) ) ) { return controller.CollisionChecker . overlap ( w , obj ) ; }
switch ( v . getId () ) { case R.id.btn__download_map : com.mapswithme.maps.downloader.MapManager . nativeDownload ( mCurrentCountry.id , mCurrentCountry.id ) ; break; case R.id.btn__select_map : getMwmActivity () . replaceFragment ( com.mapswithme.maps.downloader.DownloaderFragment . class , null , null ) ; break; case R.id.wpv__download_progress : com.mapswithme.maps.downloader.MapManager . nativeCancel ( mDownloadingCountry.id ) ; if ( ( this . getId () ) != ( com.mapswithme.util.statistics.Statistics . params () ) ) { return; } }
systemName = new java.util.ArrayList < java.lang.String > ()
guiceBundle = com.hubspot.dropwizard.guice.GuiceBundle . < io.dropwizard.example.JobsApplicationConfiguration > newBuilder () . addModule ( new io.dropwizard.example.JobsApplicationModule () )
{ java.lang.String jsonStr = org.talend.daikon.Exception.jsonschema.JsonSchemaUtilTest . readJson ( "FullExampleUiSchema.json" ) ; org.talend.daikon.Exception.FullExampleProperties properties = new org.talend.daikon.Exception.FullExampleProperties ( "fullexample" ) ; properties . init () ; assertEquals ( jsonStr , generator . genWidget ( properties , Form.MAIN ) . toString () ) ; }
for ( int i = lastIndex ; i > index ; i -- ) { myList [ i ] = myList [ ( i - 1 ) ] ; }
{ int nextVal ; while ( odometer.Odometer . isValid ( digit ) ) { nextVal = digit ++ ; if ( ( ( digit % 10 ) ^ ( size + 1 ) ) == 1 ) { nextVal = 1 ; } } return nextVal ; }
edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest . failWithStackTrace "Exception while reading fields in ACLNotReadOtherGuidFieldTest: " , e )
g . drawOval ( x , y , width , height )
message . getErrorConverter ()
{ java.util.List < java.lang.String > headers = new java.util.ArrayList < java.lang.String > () ; headers . add ( "Title" ) ; headers . add ( "Definition URL" ) ; headers . add ( "Definition" ) ; headers . add ( "Creator" ) ; headers . add ( "PreLabel" ) ; return headers ; }
{ converted [ i ] = new java.util.ArrayList < java.lang.String > () ; java.lang.String [] converted = new java.lang.String [ count ] ; for ( int i = 0 ; i < count ; i ++ ) { converted [ i ] = i ; } }
{ expectedMessages . add ( HubProxyInfoBuilder.ERROR_MSG_CREDENTIALS_INVALID ) ; final com.blackducksoftware.integration.hub.builder.HubProxyInfoBuilder builder = new com.blackducksoftware.integration.hub.builder.HubProxyInfoBuilder () ; builder . setHost ( com.blackducksoftware.integration.hub.global.HubProxyInfoBuilderTest.VALID_HOST ) ; builder . setUsername ( com.blackducksoftware.integration.hub.global.HubProxyInfoBuilderTest.VALID_USERNAME ) ; final com.blackducksoftware.integration.hub.builder.ValidationResults < com.blackducksoftware.integration.hub.global.HubProxyInfoFieldEnum , com.blackducksoftware.integration.hub.global.HubProxyInfo > result = new com.blackducksoftware.integration.hub.builder.ValidationResults < com.blackducksoftware.integration.hub.global.HubProxyInfoFieldEnum , com.blackducksoftware.integration.hub.global.HubProxyInfo > () ; builder . validateCredentials ( result ) ; }
recycle ( write , true )
private int getFlag ( int flag ) { int flagVal = 0 ; int flagReg = ( registers [ Z80.REGISTER_F ] ) & flag ; switch ( flag ) { case Z80.FLAG_ZERO : flagVal = flagReg > > > 7 ; break; case Z80.FLAG_SUBTRACT : flagVal = flagReg > > > 6 ; break; case Z80.FLAG_HALFCARRY : flagVal = flagReg > > > 5 ; break; case Z80.FLAG_CARRY : flagVal = flagReg > > > 4 ; break; } return flagVal ; }
{ link = matcher . group () ; java.lang.String link = "" ; while ( matcher . find () ) { link = matcher . group () ; if ( ( ( ! ( Suspected ) . contains ( link ) ) ) && ( CrawlerHandler . CheckIfUrlBeenCrawled ( link ) ) ) && ( isValidDomain ( link ) ) ; } }
@ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.GET @ com.magnet.mmx.server.plugin.mmx.server.plugin.mmxmgmt.push.config.Path ( value = "/all" ) @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ java.lang.Override public java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse > > method = new com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.RestMethod < java.lang.String , java.util.Collection
new java.lang.IllegalStateException ( java.lang.String . format ( "Container Activity must implement %s" , com.ksss.splintter.features.group.view.ExpenseManager . class ) )
{ uniol.aptgui.editor.document.Document < ? > doc = getDocument ( id ) ; if ( ( doc . hasUnsavedChanges () ) && ( askSaveDocument ( id , getDocument ( id ) ) ) ) { return false ; } documents . remove ( id ) ; mainWindow . removeWindow ( id ) ; return true ; }
{ setupData ( "should_return_root_project_keys_for_group" ) ; java.util.Collection < java.lang.String > rootProjectUuids = authorization . selectAuthorizedRootProjectsUuids ( org.sonar.core.user.AuthorizationDaoTest.USER , "user" ) ; org.assertj.core.api.Assertions . assertThat ( rootProjectUuids ) . containsOnly ( "ABCD" ) ; rootProjectUuids = authorization . selectAuthorizedRootProjectsKeys ( org.sonar.core.user.AuthorizationDaoTest.USER , "admin" ) ; org.assertj.core.api.Assertions . assertThat ( rootProjectUuids ) . isEmpty () ; }
{ java.nio.file.Path file = java.nio.file.Paths . get ( link ) ; if ( ( file . isAbsolute () ) || ( directories . isEmpty () ) ) { return java.util.Optional . of ( file ) ; } else { return org.jabref.model.util.FileHelper . expandFilenameAsPath ( link , directories ) ; } }
{ int phoneId = getActivePhoneId () ; com.android.incallui.Log . d ( this , ( ( ( "onBlock mCallId:" + ( mCallId ) ) + "phoneId:" ) + phoneId ) ) ; com.android.incallui.Call call = mCall [ phoneId ] ; final java.lang.String number = call . getNumber () ; final android.content.Context context = getUi () . getContext () ; mBlockContactHelper = new com.android.contacts.common.util.BlockContactHelper ( context ) ; mBlockContactHelper . setContactInfo ( number ) ; }
{ pickOut.arriveTime = map.schedule . getSteps () ; spaceRemaining += pickOut.weight ; } if ( ! ( pickOut instanceof courier.CarCaller ) ) { printParcelUnloadLog ( pickOut ) ; currStation.pArrived . add ( pickOut ) ; ( map.parcelTotal ) -- ; tryTerminate () ; } else { carCallerConvertParcel ( ( ( courier.CarCaller ) ( pickOut ) ) ) ; }
behavior == null ? behavior : org.opendaylight.yang.gen.v1.urn.opendaylight.faas.fabric.rev150930.FabricOptions.TrafficBehavior.Normal
private long getNumberRecursion ( long n ) { int sum = 0 ; if ( n == 0 ) return 1 ; else if ( n == 1 ) return 0 ; else if ( n == 2 ) return 1 ; for ( int k = 1 ; k <= n ; k ++ ) { sum += ( sequenceGeneratorASet472 . getNumber ( k ) ) * ( getNumberRecursion ( ( n - k ) ) ) ; } return sum / n ; }
if ( em . find ( models.UserImpl . class , username ) ) { java.lang.System.out . println ( "ERROR NULL" ) ; }
getSystemService ( Context.TELEPHONY_SERVICE )
assertTrue ( "There should be 1 finished task" , ( ( c . toString () ) == 1 ) )
private void settleHeader () { if ( ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) && ( ( currentHeader . getTag () ) != null ) ) { currentHeader . setTag ( null ) ; currentHeader . animate () . z ( 0 ) ; } }
{ final java.util.Iterator < T > iter = getIteratorAtIndex ( source , begin ) ; for ( int i = begin ; i != end ; ++ i ) { assert iter . hasNext () ; if ( pred . test ( iter . next () ) ) { return true ; } } return false ; }
{ if ( ( holder.SelectionArrow ) != null ) { if ( ( ( org.trakhound.www.trakhound.MyApplication.User ) != null ) && ( ( MyApplication.User.type ) == 1 ) ) holder.SelectionArrow . setVisibility ( View.VISIBLE ) ; if ( ( holder.OeeLayout ) != null ) { if ( ( ( org.trakhound.www.trakhound.MyApplication.User ) != null ) && ( ( MyApplication.User.type ) == 1 ) ) holder.OeeLayout . setVisibility ( View.VISIBLE ) ; else holder.OeeLayout . setVisibility ( View.GONE ) ; } } }
public org.jsoup.select.Elements parse ( org.jsoup.select.Elements r ) { results = r . select ( " tr.productListing-odd" ) ; resultsEven = r . select ( " tr.productListing-even" ) ; for ( int j = 0 ; j < ( resultsEven . size () ) ; j ++ ) { results . add ( resultsEven . get ( j ) ) ; } return results ; }
@ java.lang.Override public void onDisable () { for ( net.techcable.npclib.NPC npc : npcm . getNPCs () ) { java.util.UUID uuid = npcm . getNPCIdFromEntity ( npc . getEntity () ) ; despawnNPC ( uuid , NpcDespawnReason.PLUGIN_DISABLED ) ; } com.trc202.CombatTag.CombatTag.log . info ( "[CombatTag] Disabled" ) ; com.trc202.CombatTag.CombatTag.log . info ( "[CombatTag] Disabled" ) ; }
{ if ( ( args.length ) != 1 ) { view . printErrorMessage ( new java.lang.String [] { "Arguments Error" , "Please enter Directory location" } ) ; return; } controller.c String ; paths = args [ 0 ] ; java.io.File folderPath = null ; try { folderPath = new java.io.File ( paths ) ; if ( folderPath == null ) { return; } } catch ( java.lang.Exception e ) { e . printStackTrace () ; } }
{ switch ( aScl ) { case 4 : AccelSettings.CTRL_REG4_XLVal |= 2 < < 3 ; AccelSettings.scale = 4 ; break; case 16 : AccelSettings.CTRL_REG4_XLVal |= 3 < < 3 ; AccelSettings.scale = 16 ; break; case 16 : AccelSettings.CTRL_REG4_XLVal |= 3 < < 3 ; AccelSettings.scale = 16 ; break; default: AccelSettings.scale = 2 ; break; } agWriteByte ( com.ociweb.iot.astropi.CTRL_REG4_XL , AccelSettings.CTRL_REG4_XLVal ) ; target . i2cFlushBatch () ; calcaRes () ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.main_activity ) ; android.content.SharedPreferences preferences = getSharedPreferences ( com.yubico.yubioath.MainActivity.NEO_STORE , Context.MODE_PRIVATE ) ; keyManager = new com.yubico.yubioath.model.KeyManager ( preferences ) ; openFragment ( new com.yubico.yubioath.fragments.SwipeListFragment () ) ; tagDispatcher = nordpol.android.TagDispatcher . get ( this , this , false , false , true , false , true ) ; }
s = config_list . get ( 0 )
nodeStack . push ( newNode ( nodeStack . peek () , attributes ) )
{ setDifficulty ( ( ( org.jtrfp.trcl.game.TVF3Game.Difficulty ) ( cbDifficulty . getSelectedItem () ) ) ) ; setCallSign ( txtCallsign . getText () ) ; setBeginMission ( true ) ; setVisible ( false ) ; dispose () ; }
void buildCharToIntMap () { charToIntMap . put ( 'a' , 1 ) ; charToIntMap . put ( 'b' , 2 ) ; charToIntMap . put ( 'c' , 3 ) ; charToIntMap . put ( 'd' , 4 ) ; charToIntMap . put ( 'e' , 5 ) ; charToIntMap . put ( 'f' , 6 ) ; charToIntMap . put ( 'g' , 7 ) ; charToIntMap . put ( 'h' , 8 ) ; }
{ Controller.Message newMessage = new Controller.Message ( this . currentUser . getUsername () , desintationUser , body , message ) ; messageManager . init () ; messageManager . addData ( newMessage ) ; messageManager . closeConnection () ; }
i . putStringArrayListExtra ( "tuneNames" , null )
{ world = null ; }
if ( ( ( com.client.gui.interfaceControllers.LobbyController.serverAddress ) != null ) && ( ( com.client.gui.interfaceControllers.LobbyController.serverAddress ) != null ) ) return; else { alertMessage = ( "Address " + ( com.client.gui.interfaceControllers.LobbyController.serverAddress ) ) + "Invalid IP address!" ; }
{ java.lang.Integer bassTrack ; bassTrack = ( ( javafx.scene.control.ComboBox < java.lang.Integer > ) ( event . getSource () ) ) . getValue () ; ui.Slave . setBassTrack ( bassTrack ) ; }
{ android.widget.ImageButton ib1 = ( ( android.widget.ImageButton ) ( findViewById ( firstID . intValue () ) ) ) ; android.widget.ImageButton ib2 = ( ( android.widget.ImageButton ) ( findViewById ( secondID . intValue () ) ) ) ; setImage ( ib2 , "blank" ) ; setImage ( ib1 , "blank" ) ; guard = 0 ; }
public ch.entwine.weblounge.common.site.Site findSiteByBundle ( org.osgi.framework.Bundle bundle ) { synchronized ( sitesLock ) { for ( java.util.Map.Entry < ch.entwine.weblounge.common.site.Site , org.osgi.framework.Bundle > entry : site . entrySet () ) { if ( bundle . equals ( entry . getValue () ) ) return entry . getKey () ; } } return null ; }
org.assertj.core.api.Assertions . assertThat ( message ) . isEqualTo ( "\n" )
{ byte [] decodedSecretKey = null ; try { decodedSecretKey = si.mazi.rescu.utils.Base64 . decode ( secretKey ) ; } catch ( java.io.IOException e ) { throw new com.xeiam.xchange.exceptions.ExchangeException ( "Cannot decode secret key" ) ; } return null ; }
@ org.junit.Test public void exercizeParser ( java.lang.String json ) { int [] expEventSeq = new int [] { org.jsonps.GeneralEx.TestListener.EVENT_STARTOBJ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_VALUE , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_STARTARR , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_STARTARR , org.jsonps.GeneralEx.TestListener.EVENT_STARTOBJ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_STARTARR , org.jsonps.GeneralEx.TestListener.EVENT_STARTOBJ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_NUM , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_STARTOBJ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_NUM , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_NAME } ; testInstance ( json , expEventSeq ) ; }
if ( ( maxValue ) == ( unit.values . get ( 0 ) ) ) { throw new jjcron.polankam.ms.mff.cuni.cz.FormatException ( "GeneralUnit period value is not super" ) ; }
public static void stopSparkProgram () { co.cask.cdap.internal.app.runtime.spark.SparkProgramWrapper . sparkContextStopBugFixer () ; if ( co.cask.cdap.internal.app.runtime.spark.SparkProgramWrapper . isScalaProgram () ) { ( ( co.cask.cdap.api.spark.SparkContext ) ( co.cask.cdap.internal.app.runtime.spark.SparkProgramWrapper . getSparkContext () . getOriginalSparkContext () ) ) . stop () ; } else { ( ( co.cask.cdap.internal.app.runtime.spark.JavaSparkContext ) ( co.cask.cdap.internal.app.runtime.spark.SparkProgramWrapper . getSparkContext () . getOriginalSparkContext () ) ) . stop () ; } }
{ android.content.ContentValues valores = new android.content.ContentValues () ; valores . put ( ProyectoDBMetadata.TablaT ,Metadata.FINALIZADA , 1 ) ; android.database.sqlite.SQLiteDatabase mydb = dbHelper . getWritableDatabase () ; mydb . update ( ProyectoDBMetadata.TABLA_TAREAS , valores , "_id=?" , new java.lang.String [] { idTarea . toString () } ) ; mydb . close () ; }
{ while ( clientHandlerAdapter . isConnected () ) { clientHandlerAdapter . shutdown () ; } workerGroup . shutdownGracefully () ; while ( ( ( tunnelHandler ) != null ) && ( tunnelHandler . isConnected () ) ) { tunnelHandler . shutdown () ; } }
private int findHistoryRecord ( java.lang.String placeId ) { for ( int i = 0 ; i < ( HISTORY_SIZE ) ; ++ i ) { com.github.stephenbaidu.placepicker.PlaceInfo placeInfo = getHistoryRecord ( ( i + 1 ) ) ; if ( placeInfo == null ) return 0 ; if ( ( placeInfo.placeId ) == placeId ) { return i + 1 ; } } return 0 ; }
if ( ( list . size () ) == 0 ) { pageNumber -- ; getServletContext () . setAttribute ( "pageNumber" , pageNumber ) ; list = taxiOrderBeanLocal . getTaxiOrderHistory ( pageNumber , com.netcracker.tss.web.servlet.customer.CustomerOrderTaxiHistoryServlet.pageSize , findCurrentUser () ) ; }
switch ( field ) { case IP_ADDRESS : return isSetIpAddress () ; case PORT : return isSetPort () ; }
{ me.sergienko.dao.StudentJdbcDAOImpl studentJdbcDAO = new me.sergienko.dao.StudentJdbcDAOImpl () ; me.sergienko.model.Student st = new me.sergienko.model.Student () ; st . setId ( ( - 1 ) ) ; st . setGroup_id ( 150 ) ; st . setName ( " getCurrentера" ) ; st . setSur_name ( " .ысова" ) ; st . setRating_ege ( 80.99 ) ; st . setEn entry_date ( new java.sql.Date ( java.util.Calendar . getInstance () . getTimeInMillis () ) ) ; studentJdbcDAO . createStudent ( st ) ; }
{ android.util.Log . v ( "SCAN" , rawResult . getText () ) ; android.util.Log . v ( "SCAN" , rawResult . getBarcodeFormat () . toString () ) ; new android.app.AlertDialog.Builder ( getActivity () ) . setTitle ( "Scanned Message" ) . setMessage ( rawResult . getText () ) . setPositiveButton ( "OK" , new android.content.DialogInterface.OnClickListener () { @ java.lang.Override public void onClick ( android.content.DialogInterface dialogInterface , int i ) { resumeCamera () ; } } ) . create () . show () ; }
public void enqueue ( java.lang.Object element ) { int s = size () ; if ( s == ( ( n ) - 1 ) ) { resize () ; } queueArray [ ( ( rear ) ++ ) ] = ( ( T ) ( element ) ) ; if ( ( rear ) == ( n ) ) { rear = 0 ; } }
new Brain.TemporalLobe.Locked ( "LOCKED" )
( _left )
{ int addIndex ; if ( direction == ( LayoutManager.Direction.START ) ) { addIndex = 0 ; } else { addIndex = mLayoutManager . getChildCount () ; } if ( child.wasCached ) { state . decacheView ( position ) ; } mLayoutManager . addView ( child.view , addIndex ) ; return addIndex ; }
private void writeVariableCopy ( wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableAccess > loc , java.io.PrintWriter out ) { wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableDeclaration > vd = getVariableDeclaration ( loc . getOperand ( 0 ) ) ; out . print ( vd . getBytecode () . getName () ) ; }
new com.badlogic.gdx.utils.viewport.FitViewport ()
byteBuffer . get ( pos )
{ if ( ( stack . getItem () ) == null ) { return null ; } } if ( ( stack . getItem () ) == null ) { return null ; } if ( ( stack . getItem () ) instanceof (ar.mods.ic2.nuclearcontrol.items.ItemCardBase ) { if ( ( stack . getItem () ) == null ) { return null ; } if ( ( stack != null ) && ( ( stack . getItem () ) instanceof (ar.mods.ic2.nuclearcontrol.items.ItemCardBase ) ) { if ( ( stack . getItem () ) == null ) { return null ; } } }
new UI.Dialogs.QueueMonitorDialog ( this , true , queueManager , false )
{ com.example.alexfaber.sumanalarm.Alarm . getAlarm () . returnOff () ; if ( alarmTone . isPlaying () ) toggleAlarmSound () ; android.widget.Button button = ( ( android.widget.Button ) ( findViewById ( R.id.toggleButton ) ) ) ; button . setEnabled ( false ) ; finish () ; android.content.Intent mainActivityIntent = new android.content.Intent ( this , com.example.alexfaber.sumanalarm.Activities.MainActivity . class ) ; startActivity ( mainActivityIntent ) ; }
{ fragmentList = ( ( org.distantshoresmedia.wifiDirect.DeviceListFragment ) ( getSupportFragmentManager () . findFragmentById ( R.id.frag_list ) ) ) ; fragmentDetails = ( ( org.distantshoresmedia.wifiDirect.DeviceDetailFragment ) ( getSupportFragmentManager () . findFragmentById ( R.id.frag_detail ) ) ) ; if ( ( selectedUri ) == null ) { findViewById ( R.id.device_detail_fragment_base_view ) . setVisibility ( View.GONE ) ; } }
{ datastructures.linkedlist.Node < E > newNode = new datastructures.linkedlist.Node < E > ( data ) ; ( size ) ++ ; return true ; }
@ java.lang.Override protected void onResume () { super . onResume () ; if ( ( toolbar ) == null ) { toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.basic_toolbar_layout ) ) ) ; setSupportActionBar ( toolbar ) ; android.support.v7.app.ActionBar bar = getSupportActionBar () ; if ( bar != null ) { bar . setDisplayOptions ( ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.basic_toolbar_layout ) ) ) ) ; bar . setCustomView ( R.layout.custom_action_bar ) ; bar . setDisplayHomeAsUpEnabled ( true ) ; } } }
{ int prevBtnVisibility = android.view.View.VISIBLE ; int nextBtnVisibility = android.view.View.VISIBLE ; if ( ( itemIndex ) == 0 ) { prevBtnVisibility = android.view.View.INVISIBLE ; } else if ( ( itemIndex ) == ( shareClipExperience . getChildrenContents () . size () ) ) { nextBtnVisibility = android.view.View.INVISIBLE ; } prevClipButton . setVisibility ( prevBtnVisibility ) ; nextClipButton . setVisibility ( nextBtnVisibility ) ; mediaController . hide () ; }
rowsCreator . findElementInsideOrCreate ( panel , 0 )
{ if ( ! ( org.easystogu.utils.Strings . isDateValidate ( date ) ) ) return false ; if ( ( ( ( ( ( this . majorNetIn ) == 0 ) && ( ( this . ( ( ( this . majorNetIn ) == 0 ) && ( ( this . sizeNetIn ) == 0 ) ) && ( ( this . bigNetIn ) == 0 ) ) && ( ( this . midNetIn ) == 0 ) ) ) && ( ( this . smallNetIn ) == 0 ) ) && ( ( this . majorNetIn ) == 0 ) ) && ( ( this . majorNetIn ) == 0 ) ) ; return true ; }
frame.GameFrame.puck . setPuckPos ( ( ( ( common.Paint.width ) / 2 ) - ( ( common.Paint.diameterPuck ) / 2 ) ) , ( ( ( common.Paint.height ) / 2 ) - ( ( common.Paint.diameterPuck ) / 2 ) ) ) )
timber.log.Timber . e ( ( ( ( ( "Error mapping json to class '" + type ) + "' with contents: '" ) + content ) + "'" ) )
doReturn ( "" )
{ android.widget.Spinner fishList = ( ( android.widget.Spinner ) ( findViewById ( R.id.fishCaughtSpinner ) ) ) ; java.lang.String fishname = fishList . getSelectedItem () . toString () ; int index = fishList . getSelectedItemPosition () ; intent . putExtra ( "TripInfo" , trip ) ; intent . putExtra ( "Fish" , index ) ; startActivity ( intent ) ; }
private static int calculateInSampleSize ( android.graphics.BitmapFactory.Options options , int reqWidth , int reqHeight ) { final int height = options.outHeight ; final int width = options.outWidth ; int inSampleSize = 1 ; if ( ( height > reqHeight ) || ( width > reqWidth ) ) { final int halfHeight = height / 2 ; final int halfWidth = width / 2 ; while ( ( ( halfHeight / inSampleSize ) > reqHeight ) && ( ( halfWidth / inSampleSize ) > reqWidth ) ) { inSampleSize *= 2 ; } } return inSampleSize ; }
if ( com.cards.flash.testez.EditCardFragment.hasTakenQuiz ) updateScores () ;
{ org.apache.camel.CamelContext , java.lang.Thread . currentThread () . setContextClassLoader ( getClass () . getClassLoader () ) ; org.apache.camel.CamelContext wordctx = new org.apache.camel.impl.DefaultCamelContext () ; if ( ( wordctx . getId () ) != null ) { wordctx . remove ( getRouteBuilder () ) ; wordctx . start () ; org.apache.camel.ProducerTemplate producer = wordctx . getValueTemplate () ; java.lang.String result = producer . requestBody. ( "direct:start" , "mybody" , "foo" , "bad" , java.lang.String . class ) ; org.junit.Assert . assertEquals ( "mybody unmatched" , result ) ; } }
{ android.widget.Toast . makeText ( this , ( "user logged and retrieved: " + ( user . toString () ) ) , Toast.LENGTH_SHORT ) . show () ; android.util.Log . i ( com.pdrogfer.onstage.ui.PresentationActivity.TAG , ( "onUserReceived: " + ( user . toString () ) ) ) ; com.pdrogfer.onstage.Utils . storeUserToSharedPrefs ( user . getUid () , user . getName () , user . getEmail () , user . getUserType () , this ) ; goToListActivity () ; }
{ samples.expectnew.ExpectNewDemo tested = new samples.expectnew.ExpectNewDemo () ; samples.newmocking.MyClass myClassMock1 = mock ( samples.newmocking.MyClass . class ) ; whenNew ( samples.newmocking.MyClass . class ) . withNoArguments () . thenReturn ( myClassMock1 ) ; tested . simpleSingleNew () ; verifyNew ( samples.newmocking.MyClass . class ) . withNoArguments () ; }
{ java.util.Scanner keyboard = new java.util.Scanner ( java.lang.System.in ) ; int input = 0 ; java.lang.System.out . println ( "Make your move (Hit or nullStay " ) ; do { try { input = keyboard . nextInt () ; } catch ( java.util.InputMismatchException e ) {} } while ( ( input < 1 ) || ( input > 2 ) ) ; keyboard . close () ; return input ; }
if ( ( client ) != null ) { com.couchbase.lite.util.Log . w ( Log.TAG_CHANGE_TRACKER , "%s: Change tracker calling changeTrackerStopped, client: %s" , this , client ) ; client . changeTrackerStopped ( this ) ; } else { com.couchbase.lite.util.Log . w ( Log.TAG_CHANGE_TRACKER , "%s: Change tracker not calling changeTrackerStopped, client == null" , this ) ; }
{ col_idx [ 0 ] = 0 ; int index = 0 ; for ( int i = 1 ; i <= ( numCols ) ; i ++ ) { col_idx [ i ] = index += histogram [ ( i - 1 ) ] ; } java.lang.System . arraycopy ( col_idx , 0 , histogram ) ; nz_length = index ; }
{ if ( ( ( this . name ) != null ) && ( ! ( this . name . equals ( name ) ) ) ) { if ( name != null ) { name . getRegistrations () . remove ( this ) ; } this . name = name ; this . name = name ; this . name . getRegistrations () . add ( this ) ; } }
@ java.lang.Override public void run () { try { java.lang.System.out . println ( sourceFloor ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } }
printJets ( jets )
{ hits . push ( new battleship.service.Coordinate ( x , y ) ) ; }
new java.util.ArrayList < 32 )
java.lang.System.out . println ( ( "Este es el mensaje" + ( message ) ) )
{ android.support.v4.provider.DocumentFile parent = ml.puredark.hviewer.utils.DocumentUtil . getDirDocument ( context , rootPath , subDirs ) ; if ( parent == null ) return null ; android.support.v4.provider.DocumentFile file = parent . findFile ( fileName ) ; return ml.puredark.hviewer.utils.DocumentUtil . getFileOutputSteam ( context , file . getUri () ) ; }
{ java.lang.String line = inFromClient . readLine () ; if ( line != null ) { parseEvent ( line ) ; } java.lang.Thread . sleep ( spade.reporter.LLVM.THREAD_SLEEP_DELAY ) ; }
{ double d = distance ( other ) ; for ( int i = 0 ; i < 3 ; i ++ ) { double a = ( ( Constants.G ) * ( other.mass ) ) * ( ( position [ i ] ) - ( other.position [ i ] ) ) ; deltaAccel [ i ] += a / ( ( d * d ) * d ) ; } }
java.lang.String . format ( ( ( ( indent + " if self.actingVersion_ < %1$d:\n" ) + indent ) + " return %2$s\n\n" ) , sinceVersion , generateLiteral ( encoding . primitiveType () , encoding . applicableNullValue () . toString () ) )
{ boolean signed = false ; format . checkType ( 'h' , false ) ; if ( ( format . getType () ) == 'H' ) { signed = true ; } format . consume () ; return unpackShort ( signed ) ; }
java.lang.Math . max ( left , right )
new com.lintech.yougo.Trip ( "0" , "0" , "0" , "" )
{ daoManager . startTransaction ( em ) ; em . persist ( relationLink ) ; daoManager . commitTransaction ( em ) ; }
if ( ( ! ( initialized ) ) && ( ( beanManager () ) != null ) ) { elResolver . setDelegate ( beanManager () . getELResolver () ) ; initialized = true ; }
return value ;
for ( int i = state . nextSetBit ( 0 ) ; i != 0 ; i = state . nextSetBit ( i ) ; i != 1 ; i = state . nextSetBit ( i ) ;
mainViewsAdapter . getItem ( 1 )
{ java.lang.String methodName = methodOfCurrentClass . getName () ; java.lang.Class [] methodParams = methodOfCurrentClass . getParameterTypes () ; try { java.lang.reflect.Method method = beanClass . getMethod ( methodName , methodParams ) ; return ! ( method . getDeclaringClass () . equals (ObjectClass ) ) ; } catch ( java.lang.NoSuchMethodException ignored ) {} return false ; }
@ javax.annotation.security.RolesAllowed ( value = org.votingsystem.web.currency.util.AuthRole.ADMIN ) @ org.votingsystem.web.currency.jaxrs.Path ( value = "/weekdb/{year}/{month}/{day}" ) @ org.votingsystem.web.currency.jaxrs.GET @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public java.lang.Object weekdb ( @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "year" ) int year , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "month" ) int month , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "day" ) int day , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletRequest req ) throws java.io.IOException , javax.servlet.ServletException { java.util.Calendar calendar = org.votingsystem.web.currency.jaxrs.DateUtils . getCalendar ( year , month , day ) ; org.votingsystem.web.currency.jaxrs.Interval timePeriod = org.votingsystem.web.currency.jaxrs.DateUtils . getWeekPeriod ( calendar ) ; return new java.util.HashMap <> () ; }
{ clearBusRouteOnMap () ; mBusLineId = busLineId ; mGoingSwitch . setChecked ( false ) ; mToolbar . setVisibility ( View.GONE ) ; mGoingAndReturnLayout . setVisibility ( View.VISIBLE ) ; if ( mMyBusMap . completeRouteExists ( busLineId ) ) { mMyBusMap . showCompleteRouteGoing ( busLineId ) ; mMyBusMap . zoomOutCompleteBusRouteGoing ( busLineId ) ; } else { showProgressDialog ( getString ( R.string.searching_complete_route ) ) ; } }
{ if ( ( name . contains ( "(" ) ) && ( ! ( name . contains ( ")" ) ) ) { com.blazingkin.interpreter.executor.lambda.ItemExpression le = com.blazingkin.interpreter.executor.lambda.ItemParser . parse (Expression ( name ) ; return ( ( com.blazingkin.interpreter.executor.lambda.ItemExpression ) ( le . getValue () . value ) ) . cloneWithArgs ( args ) ; } return com.blazingkin.interpreter.executor.lambda. list . get ( name ) . cloneWithArgs ( args ) ; }
<EMPTY>
{ double translationPower = leftJoystick . getVector () . getMagnitude () ; setTargetHeading () ; double }
{ java.util.ArrayList < org.openhab.binding.zwave.internal.protocol.SerialMessage > result = new java.util.ArrayList < org.openhab.binding.zwave.internal.protocol.SerialMessage > () ; if ( refresh == true ) { initialiseName = false ; } if ( ( initialiseName ) == false ) { result . add ( this . getNameMessage () ) ; } if ( ( initialiseLocation ) == false ) { result . add ( this . getLocationMessage () ) ; } return result ; }
private boolean verifyPermissions ( int [] grantResults ) { if ( ( grantResults.length ) < 1 ) { return false ; } for ( int result : grantResults ) { if ( result != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { return false ; } } return false ; }
tokens . get ( ip . getSource () )
{ rifGenericLibrary.system.RIFServiceExceptionFactory rifServiceExceptionFactory = new rifGenericLibrary.system.RIFServiceExceptionFactory () ; rifServiceExceptionFactory . createNonExistentTaxonomyTerm ( taxonomyServiceID , parentTermIdentifier ) ; }
{ this . turn = turn ; boardComponent . setEnabled ( isPieceTurn ( turn ) ) ; }
{ boolean newItem = ! ( this . linkedHashSet . remove ( item ) ) ; if ( newItem ) { this . linkedHashSet . add ( item ) ; } if ( ( this . linkedHashSet . size () ) >= ( com.box.sdk.LRUCache.MAX_SIZE ) ) { java.util.Iterator < E > it = this . linkedHashSet . iterator () ; it . next () ; it . remove () ; } return newItem ; }
org.zywx.wbpalmstar.plugin. nameLocalNotification.EUexLocalNotify.map . get ( nId , mContext . getPackageName () )
if ( ( ( ! ( this . getIsClosingOrClosed () ) ) && ( ( sendLink . getLocalState () ) == ( org.apache.qpid.proton.engine.EndpointState.CLOSED ) ) ) || ( ( sendLink . getRemoteState () ) == ( org.apache.qpid.proton.engine.EndpointState.CLOSED ) ) ) { finishSendLink () ; }
{ logic.CommandFacade commandFacade = new logic.CommandFacade ( taskList , undoList , redoList , lastOutputTaskList , commandObj , isUndoAction , isRedoAction ) ; commandFacade . run () ; updateLists ( commandFacade ) ; java.lang.System.out . println ( ( "Last searched index = " + ( lastSearchedIndex ) ) ) ; }
respawnPlayerCorrectly ( pp . getImprisonedPlayer )
if ( ( "1" . equals ( result . getRc () ) ) && ( ! ( "-1" . equalsIgnoreCase ( result . getRs () ) ) ) ) { delegate . completion ( true ) ; }
{ java.util.List < chipmunk.segmenter.Word > new_words = new java.util.LinkedList <> () ; if ( words != null ) { for ( chipmunk.segmenter.Word word : words ) { chipmunk.segmenter.Word new_word = vocab_ . get ( word . getWord () ) ; assert new_word != null ; new_words . add ( new_word ) ; } } return new_words ; }
java.lang.String valueToInt ( java.lang.Object value , int defaultValue ) { if ( value != null ) { int reply = defaultValue ; if ( ( value != null ) && ( value instanceof java.lang.String ) ) { try { reply = java.lang.Integer . valueOf ( ( ( java.lang.String ) ( value ) ) ) ; } catch ( java.lang.NumberFormatException ex ) {} } } return null ; }
try { return formatter . parse ( input ) ; } catch ( java.text.ParseException ex ) {}
{ org.smartbirdpj.mdl.Point rv = null ; try { hu = org.smartbirdpj.engine.controller.PointHolder.HU_MAX ; } try { rv = map . get ( han ) . get ( hu ) ; } catch ( java.lang.NullPointerException e ) { rv = null ; } rv . setHan ( han ) ; rv . setHu ( hu ) ; return rv ; }
{ hideKeyboard () ; loginInfo . setText ( "" ) ; accountName = inputUsername . getText () . toString () ; password = inputPassword . getText () . toString () ; if ( ( ! ( accountName . equals ( "" ) ) ) && ( ! ( password . equals ( "" ) ) ) ) { thorleifz.wakeup.LogIn.LoginTask loginTask = new thorleifz.wakeup.LogIn.LoginTask () ; loginTask . execute () ; } }
{ rb = ( ( android.widget.RadioButton ) ( findViewById ( checkedId ) ) ) ; android.util.Log . d ( "checkedId" , rb . getText () . toString () ) ; gender = rb . getText () . toString () . equals ( "Male" ) ) { profileColor = "BLUE" ; } else { profileColor = "GREEN" ; } }
{ java.util.List < com.movielist.aishwarytandon.movielist.Movie > movies = response . body () . getResults () ; recyclerView . setAdapter ( new com.movielist.aishwarytandon.movielist.MovieAdapter ( movies , R.layout.list_item_movie , getApplicationContext () ) ) ; android.util.Log . d ( com.movielist.aishwarytandon.movielist.MainActivity.TAG , ( "Number of movies received: " + ( movies . size () ) ) ) ; }
video . resume ()
{ org.academiadecodigo.bootcamp8.shared.message.Message < java.lang.String > msg = null ; try { msg = ( ( org.academiadecodigo.bootcamp8.shared.message.Message ) ( objectInputStream . readObject () ) ) ; } catch ( java.io.IOException | java.lang.ClassNotFoundException e ) { java.lang.System.err . println ( ( "Error reading stream " + ( e . getMessage () ) ) ) ; } return msg ; }
{ synchronized ( responseLock ) { if ( done ) { return false ; } org.vsg.cusp.engine.rapidoid.spi.AsyncContext asyncContext = getAsyncContext () ; try { return internalResume ( entity ) ; } finally { done = true ; asyncContext . complete () ; } } }
{ java.util.List < hr.fer.tki.evolution_algorithm.chromosome.IChromosome > solutions = new java.util.ArrayList <> () ; this . evaluatePopulation ( this . population ) ; this . sortPopulation () ; for ( int i = 0 ; i < num ; i ++ ) { solutions . add ( this . population . get ( i ) ) ; } return solutions ; }
if ( ( data != null ) && ( data . getBooleanExtra ( "logout" , false ) ) ) { if ( resultCode != ( RESULT_OK ) ) { return; } }
java.lang.System . arraycopy ( value , 0 , value , count )
{ director = new am.aca.dao.impljdbc.DirectorDaoJdbc () . addDirector ( "Matt Ross" , false ) ; film . setTitle ( "Captain Fantastic" ) ; film . addDirector ( director ) ; film . addGeners ( Genre.DRAMA ) ; filmDao . addFilm ( film ) ; assertTrue ( filmDao . addGenreToFilm ( film . getGeners () . get ( 0 ) , film . getId () ) ) ; }
{ if ( getFixSpace () . strategy () . equals ( IngredientSpaceStrategy.LOCAL ) ) return originalVariant . getAffectedClasses () ; if ( ( getFixSpace () . strategy () . equals ( IngredientSpaceStrategy.GLOBAL ) ) || ( getFixSpace () . strategy () . equals ( IngredientSpaceStrategy.PACKAGE ) ) ) return this . mutatorSupporter . getFactory () . Type () . getAll () ; return null ; }
@ java.lang.Override public com.jt.commons.GenericRecord call ( com.jt.commons.GenericRecord rec1 , com.jt.commons.GenericRecord rec2 ) throws java.lang.Exception { java.lang.Double avg = ( ( ( java.lang.Double ) ( rec1 . get ( Constants.CLOSE ) ) ) + ( ( java.lang.Double ) ( rec2 . get ( Constants.CLOSE ) ) ) ) / 2 ; rec1 . put ( Constants.CLOSE , avg ) ; return rec1 ; }
new com.andela.bark.GKprManger ()
public void toHTMLTable ( java.io.PrintWriter ostr ) { T tmp ; ostr . print ( "<table>" ) ; while ( this . results . hasNext () ) { tmp = this . results . next () ; ostr . print ( tmp . toHTMLTableRow () ) ; } ostr . print ( "</table>" ) ; ostr . flush () ; }
{ org.test.framework.core.runtime.TestResult result = new org.test.framework.core.runtime.TestResult () ; for ( java.lang.Class < ? > cl : classList ) { java.util.List < java.lang.String > names = getMethodNames ( org.test.framework.core.runtime.Runtime.ANNOTATION , cl ) ; for ( java.lang.String methodName : names ) { suite . add ( new org.test.framework.core.runtime.TestCase ( methodName ) ) ; } suite . run ( result , cl ) ; } return result ; }
private java.io.File changeDockerfile ( java.io.File dockerFile , io.fabric8.maven.docker.On.BuildDirs params , java.util.Properties properties , java.lang.String filter ) throws java.io.IOException { java.io.File targetDockerfile = new java.io.File ( ( ( params . getOutputDirectory () ) + "/Dockerfile" ) ) ; java.lang.String dockerFile changeated = io.fabric8.maven.docker. --.DockerFileUtil . change ( dockerFile , properties , filter ) ; try ( java.io.Writer writer = new java.io.FileWriter ( targetDockerfile ) ) { org.apache.commons.io.IOUtils . write ( dockerFile changeated , writer ) ; } return targetDockerfile ; }
find ( position )
return value ;
{ cards = new java.util.ArrayList < org.magic.api.beans.MagicCard > () ; for ( java.util.Map.Entry < org.magic.api.beans.MagicCard , java.lang.Integer > cci : deck . getMap () . entrySet () ) { org.magic.api.beans.MagicCard mc = cci . getKey () ; for ( int i = 0 ; i < ( cci . getValue () ) ; i ++ ) cards . add ( mc ) ; } refresh () ; }
{ sendByeRequest ( dialog ) ; }
public static void assertEquals ( java.lang.String message , java.lang.Object expected , java.lang.Object actual ) { boolean condition ; if ( expected == null ) { condition = actual == null ; } else { condition = expected . equals ( actual ) ; } }
static com.github.rinde.rinsim.ui.SimulationViewer create ( org.eclipse.swt.widgets.Shell shell , final com.github.rinde.rinsim.core.Simulator sim , int pSpeedUp , boolean pAutoPlay , java.util.List < com.github.rinde.rinsim.ui.renderers.Renderer > pRenderers ) { return new com.github.rinde.rinsim.ui.SimulationViewer ( shell , sim , pSpeedUp , pAutoPlay ) ; }
{ width = display . getFrame () . getWidth () ; height = display . getFrame () . getHeight () ; keyManager . update () ; if ( ( dev.Same4254.ThisGame.States.State . getCurrentState () ) != null ) dev.Same4254.ThisGame.States.State . getCurrentState () . update () ; }
public boolean canAdvance ( java.util.ArrayList < java.lang.Integer > counters , java.util.ArrayList < java.lang.Integer > result ) { for ( int cElem = 0 ; ( cElem < ( counters . size () ) ) && ( cElem < ( length ) ) ; ++ cElem ) { if ( ! ( counters . get ( cElem ) . equals ( result . get ( cElem ) ) ) ) return true ; } return false ; }
return new com.example.vincentzhang.Sprite.AbstractSprite () ;
new library.connect.VinhNT_HTTP ()
java.lang.Math . min ( 100 , ( ( gratitude . length () ) * 100 ) / ( ai.vil.toda.data.entry.Entry.MIN_ENTRY_LENGTH ) )
prepareBeforeClasses ( com.junit.runner.Description description )
new com.drewhannay.chesscrafter.models.PieceType ( "King" , movements , null , null )
call . delete ( "posts/5" )
new java.util.logging.Logger ( false )
{ createDVPanels () ; if ( updateValuePanel ( text ) ) { outputPanel . add ( valuePanel ) ; plainTextItem . add ( outputPanel ) ; org.geogebra.common.util.debug.Log . debug ( "[AVR] Value panel is updated" ) ; } ihtml . clear () ; ihtml . add ( plainTextItem ) ; }
parser . run ( chord )
@ org.testng.annotations.Test ( enabled = true ) public void pingRequest () , java.util.concurrent.TimeUnit.SECONDS . toMillis ( 10 ) ; java.util.concurrent.TimeUnit.SECONDS . toMillis ( 10 ) ; org.apache.camel.component.mock.MockEndpoint mockEndpoint = ( ( ( double ) ( enabled ) ) > ( - 1 ) ) ; org.apache.camel.component.mock.MockEndpoint mockEndpoint = ( ( ( ( int ) ( enabled = true ) ) &&Matches ( isValidPingRequest ( testMessage ) ) ) ) ; template () . requestBody ( "direct:testShs2riv" , testMessage ) ;
public codeu.chat.common.User newUser ( codeu.chat.util.Uuid id , java.lang.String name , codeu.chat.common.Time creationTime , java.lang.String password ) { codeu.chat.common.User user = new codeu.chat.common.User ( id , name , creationTime ) ; model . add ( user , password ) ; codeu.chat.server.Controller.LOG . info ( "newUser with password success (user.id=%s user.name=%s user.time=%s)" , id , name , creationTime ) ; }
switch ( templateSelection ) { case SPECIFIC_VALUE : single_value = null ; break; case VALUE_LIST : case ( value_list . clear () : null ) ; value_list = null ; break; case VALUE_RANGE : min_value = null ; max_value = null ; default: break; }
{ android.content.ClipboardManager e = ( ( android.content.ClipboardManager ) ( getSystemService ( Context.CLIPBOARD_SERVICE ) ) ) ; android.content.ClipData clip = android.content.ClipData . newPlainText ( "ID" , id ) ; org.content.ClipData clip = android.content.ClipData . newPlainText ( "ID" , id ) ; org.content.Context context = getApplicationContext () ; java.lang.CharSequence dialogText = "Object id ? to board" ; int duration = android.widget.Toast.LENGTH_SHORT ; android.widget.Toast . makeText ( context , dialogText , duration ) . show () ; }
new de.dfki.vsm.editor.project.ProjectEditor ()
{ java.lang.System.out . println ( m_lastSent ) ; m_lastSent = ( ( m_lastSent ) + 1 ) % ( m_modulo ) ; if ( ( m_lastSent ) != null ) { sr.Packet p = null ; m_socket . send ( p . getDatagramPacket ( m_destAddr , m_destPort ) ) ; m_timeouts . startTimer ( p , sr.SelectiveRepeatUnit.PACKET_TIMEOUT ) ; } }
{ com.himamis.retex.editor.share.meta.MetaArray meta = formula . getMetaModel () . getArray () ; com.himamis.retex.editor.share.model.MathArray array = new com.himamis.retex.editor.share.model.MathArray meta = formula . getMetaModel () . getArray () ; currentField . addArgument ( currentOffset , array ) ; com.himamis.retex.editor.share.model.MathSequence field = new com.himamis.retex.editor.share.model.MathSequence ( formula , array ) ; array . setArgument ( 0 , field ) ; for ( int i = 1 ; i < size ; i ++ ) { array . setArgument ( i , new com.himamis.retex.editor.share.model.MathSequence ( formula ) ) ; } currentField = field ; currentOffset = 0 ; }
c0 . newRun () ;
{ edu.iis.mto.blog.domain.model.User user = userRepository . findOne ( userId ) ; if ( ! ( user . getAccountStatus () . equals ( AccountStatus.CONFIRMED ) ) ) { return null ; } edu.iis.mto.blog.domain.model.BlogPost post = mapper . mapToEntity ( postRequest ) ; post . setUser ( user ) ; blogPostRepository . save ( post ) ; return post . getId () ; }
( common_name ) + ( text . toLowerCase () )
{ client.MainListener controller = new client.MainListener ( this ) ; settings . addMouseListener ( controller ) ; close . addMouseListener ( controller ) ; logout . addMouseListener ( controller ) ; trayIcon . addMouseListener ( controller ) ; }
if ( ( chapter . getStartTimeOffset () ) >= position ) { ret = chapter . getStartTimeOffset () ; break; }
faceCentroid . add ( edges . get ( i ) . getOriginVertex () . getPosition () ) ;
( minutes ) == ( java.lang.Double . parseDouble ( this . time . getEditor () . getText () ) )
provider . applyForBroadcast ( onlineVoted , message , vote )
switch ( storageType ) { case bundle : net.wbz.moba.controlcenter.web.client.LocalStorage . getInstance () . set ( getConfigKey () , convertValueToString ( value ) ) ; break; case java.lang.System.out . println ( net.wbz.moba.controlcenter.web.client.ServiceUtils . getConfigService () . saveValue ( getConfigKey () ) ) ; break; }
statsCount - 10
{ writePreferences () ; }
{ java.lang.System.out . println ( "Input word. tiles on board, ex. \"DOG\"" ) ; java.lang.String word = getNextLine () ; Position p = new Position ( getNextLine () ) ; java.lang.System.out . println ( "Is horizontal move? Y/N ex. \"Y\"" ) ; boolean isHorizontal = s . nextLine () . equals ( "Y" ) ; Move = null ; }
{ if ( ! ( mRenderingState.inWaitingState ) ) { return; } mRenderingState.inWaitingState = false ; if ( ( drawTask ) != null ) { drawTask . requestClear () ; } if ( mUpdateInNewThread ) { synchronized ( this ) { mDrawTimes . clear () ; } synchronized ( drawTask ) { drawTask . notifyAll () ; } } else { mDrawTimes . clear () ; removeMessages ( master.flame.danmaku.controller.DrawHandler.UPDATE ) ; sendEmptyMessage ( master.flame.danmaku.controller.DrawHandler.UPDATE ) ; } }
@ java.lang.Override public void setComparisonMatches ( java.util.List < uk.ac.ebi.pride.spectracluster.util.ComparisonMatch > comparisonMatches ) { this . bestComparisonMatches . clear () ; this . bestComparisonMatches . addAll ( comparisonMatches ) ; java.util.Collections . sort ( bestComparisonMatches ) ; lowestBestComparisonSimilarity = bestComparisonMatches . get ( 0 ) . getSim =ity () ; bestComparisonMatchIds = null ; }
@ java.lang.Override public void in ( java.lang.String token ) { messageToken = token ; l ( ( token + " is in" ) ) ; l ( java.lang.String . valueOf ( session . getWits () . size () ) ) ; if ( ( session . getWits () . size () ) < 3 ) { org.json.JSONObject attr = new org.json.JSONObject () ; session . sendTo ( localStream , true , attr , token ) ; } }
{ if ( other instanceof asteroids.model.Ship ) this . resolveCollision ( ( ( asteroids.model.Ship ) ( other ) ) ) ; if ( other instanceof asteroids.model.Bullet ) this . resolveCollision ( ( ( asteroids.model.Bullet ) ( other ) ) ) ; if ( other instanceof asteroids.model. )Planet ) this . resolveCollision ( ( ( asteroids.model. ()Planet ) ( other ) ) ) ; }
private void checkForWinner () { for ( Car c : cars ) if ( c . checkWin () ) { javax.swing.JOptionPane . showMessageDialog ( null , ( ( ( ( ( "We have a winner!\nCar " + ( c . getRacingNumber () ) ) + " has won!\nDistance traveled by Car " ) + ( c . getRacingNumber () ) ) + " : " ) + ( c . getDistanceTraveled () ) ) ) ; } }
{ io.demor.nuts.lib.eventbus.ListenerBus . addClz ( 0.0 ) ; if ( io.demor.nuts.lib.eventbus.ListenerBus.mMethodProvider . containsKey ( isEmpty ) ) { return ( ( T ) ( io.demor.nuts.lib.eventbus.ListenerBus.mMethodProvider . get ( x ) . mProxy ) ) ; } else { return null ; } }
if ( ( role . getMultiplicityUpper () ) == ( Role.MULTIPLICITY_MANY ) ) { println ( out , generateMapKeyFunction ( role . getName () , role . getType () . getFullName () , "Comparable )" , "Oid" , false ) ; }
( color - 1 ) % ( - 1 )
{ org.openmrs.module.openconceptlab.client.OclConcept oclConcept = newOclConcept () ; importer . importConcept ( new org.openmrs.module.openconceptlab.CacheService ( conceptService ) , null , oclConcept ) ; org.openmrs.module.openconceptlab.client.OclConcept.Description desc1 = new org.openmrs.module.openconceptlab.client.OclConcept.Description () ; desc1 . setDescription ( "test oclConceptDescription" ) ; desc1 . setLocale ( org.openmrs.api.context.Context . getLocale () ) ; oclConcept . getDescriptons () . add ( desc1 ) ; importer . importConcept ( new org.openmrs.module.openconceptlab.CacheService ( conceptService ) , null , oclConcept ) ; assertImported ( oclConcept ) ; }
( ( x - ( this . start . getX () ) ) + ( ( z - ( this . start . getY () ) ) + 1 ) )
return textNumber . trim () ;
public jxl.Sheet checkSheetName ( jxl.Workbooksettings ) throws java.io.IOException , jxl.read.biff.BiffException { assertTrue ( ( ( new java.lang.String [ 0 ] ) > 0 ) ) ; for ( java.lang.String name : new java.util.ArrayList < java.lang.String > () ) { if ( name . equals ( getResources ( activityTestRule ) . getString ( R.string.default_sheet_name ) ) ) { return 0 ; } } }
tileComponent . getPacketData ( list )
switch ( base ) { case 'A' : intVal = 0 ; break; case 'C' : intVal = 1 ; break; case 'G' : intVal = 2 ; break; case 'T' : intVal = 3 ; break; case 'N' : intVal = 4 ; break; default: throw new java.lang.IllegalArgumentException ( ( "Invalid character: " + base ) ) ; }
for ( int i = 0 ; i < ( str . length () ) ; i ++ ) sum += ( ( int ) ( ( str . charAt ( i ) ) - '0' ) ) ;
{ rawMoney = com.sungjae.app.showmethemoney.data.DataMap . readFloat ( DataMapKey.MONEY_VALUE_RAW ) ; coinValue = com.sungjae.app.showmethemoney.data.DataMap . readFloat ( DataMapKey.COIN_AMOUNT ) ; totalValue = com.sungjae.app.showmethemoney.activity.setting.ConfigurationConstants . getEnabledMoneyKeeper () ; requestToKeep = com.sungjae.app.showmethemoney.activity.setting.ConfigurationConstants . getKeepValueMoneyKeeper () ; }
for ( int i = 0 ; i < size ; i ++ ) { if ( ( pagenumber.Viterbi.viterbiPages . get ( page ) . get ( i ) ) > maxCandidateValue ) { maxCandidateValue = pagenumber.Viterbi.viterbiPages . get ( page ) . get ( i ) ; maxCandidate = i ; } }
{ final boolean res = super . add ( elem ) ; if ( res ) try { lock . lock () ; added . signal () ; } finally { lock . unlock () ; } return res ; }
{ pageLength = pLength ; page = ( startIndex ) / pLength ; checkPageCount () ; grid . setHeightByRows ( pLength ) ; }
fail ( ( ( "Could not schedule consumer " + "vertex " ) + consumerVertex ) , t )
{ boolean isAllNull = true ; edu.asu.spring.quadriga.web.workspace.backing.ModifyWorkspaceForm workspaceForm = ( ( edu.asu.spring.quadriga.web.workspace.backing.ModifyWorkspaceForm ) ( obj ) ) ; if ( workspaceList != null ) { java.util.List < edu.asu.spring.quadriga.web.workspace.backing.ModifyWorkspace > workspaceList = workspaceForm . getWorkspaceList () ; if ( workspaceList != null ) { for ( edu.asu.spring.quadriga.web.workspace.backing.ModifyWorkspace workspace : workspaceList ) { java.lang.String internalId = workspace . getId () ; if ( internalId != null ) { isAllNull = false ; } } } } }
{ android.util.Log . d ( io.fullstack.firestack.FirestackUtils.TAG , ( "Sending event " + eventName ) ) ; context . getJSModule ( DeviceEventManagerModule.RCTDeviceEventEmitter . class ) . emit ( eventName , params ) ; }
{ com.facebook.react.bridge.WritableMap params = com.facebook.react.bridge.Arguments . createMap () ; params . putString ( "eventName" , "connectionStateChange" ) ; params . putString ( "message" , message ) ; params . putString ( "code" , code ) ; params . putString ( "exceptionMessage" , e . getMessage () ) ; sendEvent ( params ) ; }
{ kaaes.spotify.webapi.android.models.Category category = data . get ( position ) ; com.example.sergio.spotify_angular.adapters.CategoriesAdapter.CategoriesViewHolder categoryViewHolder = ( ( com.example.sergio.spotify_angular.adapters.CategoriesAdapter.CategoriesViewHolder ) ( holder ) ) ; categoryViewHolder . setName ( category.name ) ; bindToListener ( categoryViewHolder ) ; com.squareup.picasso.Picasso . with ( context ) . load ( category.icons . get ( 0 ) . url ) . placeholder ( R.drawable.ic_categories ) . into ( categoryViewHolder . getImage () ) ; }
public static java.lang.String [] normalizeSummonerNames () { java.util.Objects . requireNonNull ( summonerNames ) ; for ( int i = 0 ; i < ( summonerNames.length ) ; i ++ ) { summonerNames [ i ] = net.rithms.util.RiotApiUtil . normalizeSummonerName ( platform , summonerNames [ i ] ) ; } return summonerNames ; }
{ android.util.Log . d ( "DEL" , ( "DELMEX2=" + ( meeting . getName () ) ) ) ; java.util.List < org.apache.http.NameValuePair > params = new java.util.ArrayList <> () ; params . add ( new org.apache.http.message.BasicNameValuePair ( Resources.TAG_MEETING_NAME , meeting . getName () ) ) ; jsonParser . makeHttpRequest ( url_delete_meeting , "POST" , params ) ; return null ; }
( user . getName () )
if ( ( peopleData . getStatus () . getStatusCode () ) == ( com.google.android.gms.common.api.CommonStatusCodes.SUCCESS ) ) { com.google.android.gms.plus.model.people.PersonBuffer personBuffer = peopleData . getPersonBuffer () ; try { int count = personBuffer . getCount () ; for ( int i = 0 ; i < count ; i ++ ) {} } finally { personBuffer . close () ; } }
mLocationRequest . setFastestInterval ( ( ( mLocationRequest . getInterval () ) / 2 ) )
{ java.util.Iterator < uml. clearencediagram.Lifeline > it = lifelines . iterator () ; while ( it . hasNext () ) { ( ( uml.currentencediagram.Lifeline ) ( it . next () ) ) . setCurrentPosition ( currentTimePosition ) ; } ( currentTimePosition ) ++ ; ( currentTimePosition ) ++ ; }
{ cd4 ()be.lib.BlockItemRegistry . registerItemStack ( new net.minecraft.item.ItemStack ( this , 1 , cd4lengthbe.circuits.block.BlockRSPipe1.ID_Transport ) , "rsp1bitN" ) ; cd4 >be.lib.BlockItemRegistry . registerItemStack ( new net.minecraft.item.ItemStack ( this , 1 , cd4lengthbe.circuits.block.BlockRSPipe1.ID_Extraction ) , "rsp1bitI" ) ; cd4lengthbe.lib.BlockItemRegistry . registerItemStack ( new net.minecraft.item.ItemStack ( this , 1 , cd4lengthbe.circuits.block.BlockRSPipe1.ID_Injection ) , "rsp1bitO" ) ; }
private jacoco.report.internal.html.parse.ParseItem setValues ( java.lang.Number n ) { java.util.Map < java.lang.String , java.lang.Number > m = new java.util.HashMap < java.lang.String , java.lang.Number > () ; for ( org.jacoco.core.analysis.ICoverageNode.CounterEntity ce : _default_headers ) { m . put ( ce . name () . toLowerCase () , n ) ; } return 0 ; }
if ( isPlaying ) { audio . stop () ; isPlaying = false ; button . setText ( "Pause" ) ; } else { audio . play () ; isPlaying = true ; button . setText ( "Play" ) ; }
{ es.upc.fib.prop.usParlament.presentation.State st = ( ( es.upc.fib.prop.usParlament.presentation.State ) ( stateComboBox . getSelectedItem () ) ) ; }
{ if ( ( ( TickType.BID ) == field ) || ( ( TickType.ASK ) == field ) ) java.lang.System.out . println ( ( ( TickType.BID ) == field ) || ( ( TickType.ASK ) == field ) ) ; }
new eu.europeana.harvester.cluster.slave.processing.SlaveProcessor ( new eu.europeana.harvester.cluster.slave.processing.metainfo.MediaMetaInfoExtractor ( PATH_COLORMAP ) , new eu.europeana.harvester.cluster.slave.processing.thumbnail.ThumbnailGenerator ( PATH_COLORMAP ) , new eu.europeana.harvester.cluster.slave.processing.color.ColorExtractor ( PATH_COLORMAP ) , mediaStorageClient , loggingAdapter )
{ if ( gov.wa.wsdot.android.wsdot.ui.amtrakcascades.AmtrakCascadesSchedulesDetailsFragment.toLocation . equalsIgnoreCase ( "N/A" ) ) { return new gov.wa.wsdot.android.wsdot.ui.amtrakcascades.AmtrakCascadesSchedulesDetailsFragment.toLocation . equalsIgnoreCase ( "N/A" ) ; } else if ( gov.wa.wsdot.android.wsdot.ui.amtrakcascades.AmtrakCascadesSchedulesDetailsFragment.toLocation . equalsIgnoreCase ( gov.wa.wsdot.android.wsdot.ui.amtrakcascades.AmtrakCascadesSchedulesDetailsFragment.toLocation ) ) { gov.wa.wsdot.android.wsdot.ui.amtrakcascades.AmtrakCascadesSchedulesDetailsFragment.toLocation = "N/A" ; return new gov.wa.wsdot.android.wsdot.ui.amtrakcascades.AmtrakCascadesSchedulesDetailsFragment.DepartingTrainsLoader ( getActivity () ) ; } return new gov.wa.wsdot.android.wsdot.ui.amtrakcascades.AmtrakCascadesSchedulesDetailsFragment.DepartingArrivingTrainsLoader ( getActivity () ) ; }
if ( ( label > 0 ) && ( label < minMatchingLabel ) ) { minMatchingLabel = label ; }
destination = java.net.URI . create ( this . node . getParent () . getPath () )
<EMPTY>
{ java.util.HashSet < simpledb.PageId > if ( ( this . getAllPagesByTid ( tid ) ) == null ) { return; } java.util.HashSet < simpledb.PageId > cloneSet = ( ( java.util.HashSet < simpledb.PageId > ) ( this . getAllPagesByTid ( tid ) ) ) ; for ( simpledb.PageId pid : cloneSet ) { this . releaseLock ( tid , pid ) ; } }
{ super . onDestroy () ; for ( int i = 0 ; i < ( mReceivedPermissions.length ) ; i ++ ) { java.lang.String permission = mReceivedPermissions [ i ] ; int result = mReceivedPermissionsResults [ i ] ; io.jasonatBuilder.permissionmanager.PermissionManager . onPermissionResponse ( permission , result ) ; } }
private static void setPollution ( double newPollution , net.minecraft.world.World world , net.minecraft.util.math.BlockPos chunkPos ) { if ( ( newPollution < ( returnutionDataValue.minPollutionLevel ) ) || ( newPollution > ( returnutionDataValue.maxPollutionLevel ) ) ) { return; } else { if ( ( >uknamja.pollution.data.PollutionDataValue ( newPollution ) ) != null ) { if ( ( newPollution < ( java.lang.Integer ) . getKey ( world , chunkPos ) ) != null ) { instance.hashMap . put ( key , value ) ; instance . markDirty () ; } } } }
private static org.pentaho.agilebi.modeler.LogicalColumn findCor ()ingOlapColumn ( org.pentaho.agilebi.modeler.LogicalColumn relationalColumn , org.pentaho.agilebi.modeler.LogicalModel olapModel ) { org.pentaho.agilebi.modeler.LogicalTable olapTable = org.pentaho.agilebi.modeler.ModelerConversionUtil . findCor = org.pentaho.agilebi.modeler.ModelerConversionUtil . findCor , olapModel ) ; if ( olapTable != null ) { for ( org.pentaho.agilebi.modeler.LogicalColumn col : olapTable . getLogicalColumns () ) { if ( col . getPhysicalColumn () . getId () . equals ( relationalColumn . getPhysicalColumn () . getId () ) ) { return col ; } } } return null ; }
new com.github.zaplatynski.firstspirit.modules.fsm.velocity.ModuleXmlParser ( source , target , project , true )
{ tracker . deleteNode ( playerAddress ) ; if ( ( playersInGame ) != null ) { tracker . updateNodesList ( playersInGame ) ; } }
@ org.junit.Test public void fullConfig ( ) throws java.lang.Exception { dir = new com.github.zhongl.ipage.KVEngineBuilder ( new java.io.File ( "." ) ) . getId () ; new com.github.zhongl.ipage.KVEngineBuilder ( new java.io.File ( "." ) ) . initial ( 10 ) . initialBucketSize ( 256 ) ; }
generateJavaCode ( structure )
return ( ( ( ( ( ( ( ( ( ( "Term: " + ( term ) ) + " " ) + "Frequency: " ) + ( freq ) ) + " " ) + "Weight: " ) + ( weight ) ) + " " ) + "TotalCount: " ) + ( java.lang.Math . abs ( ( ( ( ( ( ( ( ( ( ( "Term: " + ( termFreq ) ) + " " ) + "Frequency: " ) + ( freq ) ) + " " ) + "Weight: " ) + ( weight ) ) + " " ) + "TotalCount: " ) + ( ( termFreq ) + " " ) + " " ) ) ) + " " ) + ( termFreq ) ;
{ java.lang.Long questionId = questionRepository . save ( savedQuestion ) . getId () ; com.github.solairerove.INstock.domain.Answer savedAnswer = com.github.solairerove.INstock.utils.AnswerGenerator . generateAnswer () ; questionRepository . findOne ( questionId ) . getAnswers () . add ( savedAnswer ) ; java.lang.Long answerId = savedAnswer . getId () ; org.junit.Assert . assertEquals ( savedAnswer , answerService . get ( questionId , answerId ) ) ; }
mockMvc . perform ( org.springframework.test.web.servlet.request.MockMvcRequestBuilders . get ( "/index.page" ) . locale ( java.util.Locale . forLanguageTag ( "en-US" ) ) . header ( "Accept-Language" , "en-US, en-GB, en" ) ) . andExpect ( status () . isOk () ) . andExpect ( content () . string ( "Welcome" ) ) ;
final java.util.List < ? > s
{ java.lang.String s = "" ; if ( type == ( com.mobvoi.android.gesture.GestureType.TYPE_TWICE_TURN_WRIST ) ) { s = "turn wrist twice" ; new com.theteamgo.fancywatch.MainActivity.StartGestureMessageTask () . execute ( Constant.CONTROL_TYPE_NEXT ) ; } else if ( type == ( com.mobvoi.android.gesture.GestureType.TYPE_TURN_WRIST_UP ) ) { s = "turn wrist up" ; s = "turn wrist up" ; } else if ( type == ( com.mobvoi.android.gesture.GestureType.TYPE_TURN_WRIST_DOWN ) ) { s = "turn wrist down" ; } else { s = " + "unknown gesture" ; } }
@ org.junit.Test public void testEnabledFilterClearsFlow ( ) throws java.lang.Exception { io.reactivex.observers.TestObserver < com.github.e13mort.stf.model.device.Device > testObserver = io.reactivex.Observable . fromArray ( new com.github.e13mort.stf.adapter.filters.AvailabilityPredicate ( true ) ) . test () ; io.reactivex.observers.TestObserver < com.github.e13mort.stf.model.device.Device > testObserver = io.reactivex.Observable . fromArray ( new com.github.e13mort.stf.adapter.filters.AvailabilityPredicate ( true ) ) . test () ; testObserver . assertValueCount ( 1 ) ; }
{ org.apache.commons.lang3.Validate . notNull ( searchCriteria . getLessonPosition () , "Field 'lessonPosition' on formSearchCriteria can not be null." ) ; org.apache.commons.lang3.Validate . notNull ( searchCriteria . getDate () , "Field 'Date' on formSearchCriteria can not be null." ) ; if ( ( searchCriteria . getId () ) != null ) { return formService . findAllAvailablePlusOneById ( searchCriteria ) ; } }
if ( t >= 10000 ) { t -= 10000 ; type ++ ; }
detector . getSentenceEndPosition ()
{ org.onosproject.ovsdb.providers.Status status ; java.lang.String brInt = org.onosproject.ovsdb.providers.constant.ConfigurationConstants.INTEGRATION_BRIDGE ; status = this . addBridge ( node , brInt , null , null ) ; if ( ( ! ( status . isSuccess () ) ) && ( ! ( status . isSuccess () ) ) ) { return false ; } org.onosproject.ovsdb.providers.impl.CfgAdapterProviderImpl.LOG . debug ( "createNetNetwork: node: {}, status: success" , node ) ; return true ; }
{ tl . stopTimer ( me ) ; }
android.content.Context ex
int n ;
{ java.lang.System.out . println ( objects [ 0 ] ) ; org.cubecorp.hexicube.joustybet.scoreboard.StateAdapter sa = new org.cubecorp.hexicube.joustybet.scoreboard.StateAdapter ( ( ( java.lang.String ) ( objects [ 0 ] ) ) ) ; org.cubecorp.hexicube.joustybet.scoreboard.Game.betters = sa . getBetters () ; org.cubecorp.hexicube.joustybet.scoreboard.Game.roundActive = sa . isRoundActive () ; org.cubecorp.hexicube.joustybet.scoreboard.Game.lastWinner = sa . getLastWinner () ; }
private void saveProcess ( ) throws java.io.IOException , java.security.NoSuchAlgorithmException { java.lang.String process. = "liquidPoc" ; java.lang.String definitionClasspath = "processes/liquid.consignment.1.bpmn20.xml" ; org.activiti.engine.RepositoryService repositoryService = processEngine . getRepositoryService () ; org.activiti.engine.repository.ProcessDefinition processDefinition = repositoryService . createProcessDefinitionQuery () . process. ( process. ) . latestVersion () . start () ; if ( null == processDefinition ) repositoryService . createDeployment () . addClasspathResource ( definitionClasspath ) . save () ; }
{ java.io.FileReader fr = new java.io.FileReader ( "customerBill.txt" ) ; java.io.BufferedReader br = new java.io.BufferedReader ( fr ) ; java.lang.String line ; while ( ( line = br . readLine () ) != null ) { java.lang.System.out . println ( line ) ; fr . close () ; } }
if ( et_note . getText () . toString () . isEmpty () ) continue;
if ( ( url != null ) && ( ( url . getProtocol () ) == "https" ) ) { return getVocabularyCodes ; ( url , importer ) ; } else { try ( java.io.InputStream in = url . openStream () ) { return importer . getCodes ( in ) ; } }
@ java.lang.Override public void onLoaded ( java.lang.String path , com. all.ad.Ad ad ) { com...news.logic.NewsCacheMgr.firstAd = ad ; this . isLoadADing = false ; com...news.sdk.NewsSdk . getInstance () . getReportListener () . sendEvent ( "news_lista_show_facebook_native_ad" , "status" , java.lang.Long . valueOf ( ( cached ? 1L : 2L ) ) ) ; }
{ game . setScreen ( new com.mygdx.game.screens.GameOverScreen ( this . game ) ) ; com.mygdx.game.sprites.SpritesDrawer . getInstance () . removeAllSprites () ; }
{ java.lang.String key = entry . getKey () ; for ( java.lang.String value : entry . getValue () ) { if ( ( key . equalsIgnoreCase ( "content-type" ) ) && ( value . toLowerCase () . contains ( "application/x-deflate" ) ) ) { return true ; } } return false ; }
prepare service ( mapper , 1 )
new com.android.dialer.calllog.DefaultVoicemailNotifier ( context , notificationManager , com.android.dialer.calllog.DefaultVoicemailNotifier . createNewCallsQuery ( contentResolver ) )
{ java.util.List < java.lang.Class < ? extends org.adligo.tests4j.system.shared.trials.I_Trial > > trials = new java.util.ArrayList < java.lang.Class < ? extends org.adligo.tests4j.system.shared.trials.I_Trial > > () ; trials . add ( org.adligo.fabricate_tests.FabPackagesTrial . class ) ; trials . add ( org.adligo.fabricate_tests.FabricateSetupTrial . class ) ; trials . addAll ( new org.adligo.fabricate_tests.common.A_CommonPkgTrials () . getTrials () ) ; trials . addAll ( new org.adligo.fabricate_tests.files.A_FilesTrials () . getTrials () ) ; return trials ; }
public void add ( int index , double element ) { this . boundsCheck ( index ) ; enlageIfNeeded ( 1 ) ; java.lang.System . arraycopy ( array , index , array , ( index + 1 ) , ( ( size () ) - index ) ) ; set ( index , element ) ; }
{ java.util.Map < java.lang.String , java.lang.String > params = new java.util.HashMap <> () ; params = new java.util.HashMap < java.lang.String , java.lang.String > ( new java.util.HashMap < java.lang.String , java.lang.String > ( new java.util.HashMap < java.lang.String , java.lang.String > ( new java.util.HashMap < java.lang.String , java.lang.String > () ) ) , java.util.Map < java.lang.String , java.lang.String > > = new java.util.HashMap <> () ) ; params . put ( " super_no" , writing_no_param ) ; params . put ( "content" , null ) ; params . put ( "email" , true ) ; params . put ( "cur_date" , cur_date ) ; return params ; }
{ java.time.LocalTime a = java.time.LocalTime.MAX ; end_time_string = "" ; end_time_string = "" ; }
{ if ( ( remainingTries ) != null ) { remaining decodedMessage = decode ( rawResponse ) ; this . rawResponse . add ( decodedMessage ) ; if ( done ( decodedMessage ) ) { ( remainingTries ) -- ; if ( ( retrier ) != null ) { retrier . operationComplete ( this , remainingTries ) ; } } } }
i < ( ( this . size ) - 1 )
{ logger . info ( "Config not found!List config." ) ; getConfig () . addDefault ( ".GoodGames.Guess the Number.Highest Number" , 50 ) ; getConfig () . addDefault ( ".GoodGames.Guess the Number.Number of <" , 52 ) ; p . getConfig () . options () . copyDefaults ( true ) ; saveConfig () ; }
public void showFrame () { javax.swing.JFrame frame = new javax.swing.JFrame ( "MainUI" ) ; frame . setContentPane ( new MainUI () . main_panel ) ; frame . setPreferredSize ( new java.awt.Dimension ( 720 , 500 ) ) ; frame . setDefaultCloseOperation ( javax.swing.JFrame.EXIT_ON_CLOSE ) ; frame . pack () ; new MainUI.MenuUI () . showMenu ( frame ) ; frame . setResizable ( false ) ; frame . setVisible ( true ) ; }
public void sendPartCommand ( org.ukiuni.irc4j.server.ClientConnection partConnection ) throws java.io.IOException { java.util.List < org.ukiuni.irc4j.server.ClientConnection > sendClients = new java.util.ArrayList < org.ukiuni.irc4j.server.ClientConnection > ( joinedConnectionList ) ; for ( org.ukiuni.irc4j.server.ClientConnection clientConnection : sendClients ) { try { clientConnection . sendPartCommand ( partConnection , this ) ; } catch ( java.lang.Exception e ) { return null ; } } }
new com.dreamproduction.lsa.LSA ( com.dreamproduction.tests.LsaTest.data , 2 )
if ( ( ( player != null ) && ( one.lindegaard.MobHunting. se.CitizensCompat . isNPC ( player ) ) ) && ( one.lindegaard.MobHunting.MobHunting . getPlayerSettingsmanager () . getPlayerSettings ( player ) . isLearningMode () ) ) one.lindegaard.MobHunting.Messages . playerBossbarMessage ( player , text , args ) ;
private void setEventLatestState ( final java.lang.Long revision , final java.lang.String message ) { redis.clients.jedis.Jedis jedi = pool . getResource () ; java.lang.String key = getEventLatestStateKey () ; java.util.HashMap < java.lang.String , java.lang.String > state = new java.util.HashMap <> () ; state . put ( " input" , java.lang.Long . toString ( revision ) ) ; jedi . hmset ( key , state ) ; }
MercatorMapping . new java.lang.String ( args [ 0 ] )
java.util.List < java.lang.annotation.Annotation > mergedAnnotations = new java.util.HashSet < java.lang.annotation.Annotation > () ;
{ if ( peekingIterator == null ) { return false ; } if ( ! ( peekingIterator . hasNext () ) ) { return false ; } denominator.ultradns.model.DirectionalRecord record = peekingIterator . peek () ; if ( record . isNoResponseRecord () ) { peekingIterator . next () ; } return true ; }
public static java.lang.String parseFile ( java.lang.String data , java.lang.String fileName , ConfigFileFormat configFileFormat ) { java.lang.String convertedConfig = "" ; switch ( configFileFormat ) { case XML : convertedConfig = data ; break; case YML : convertedConfig = ConfigUtil2 . parseYML ( data , fileName ) ; break; case.length ; } return convertedConfig ; }
public void removeContact ( int position ) { com.addressbook.thorrism.addressbook.Contact contact = mContacts . get ( position ) ; mBook . removeEntry ( position ) ; mContactHeaders . remove ( position ) ; mBook . saveEventually () ; contact . deleteInBackground ( new com.parse.DeleteCallback () { @ java.lang.Override public void done ( com.parse.ParseException e ) { if ( e == null ) { createToast ( "Deleted Contact" ) ; } else { e . printStackTrace () ; createToast ( "Failed to delete." ) ; } } } ) ; displayList () ; }
{ this . gameMusic . stopSound () ; this . arenaModel . getArenaMovables () . clear () ; this . arenaModel . clearTiles () ; this . enemies . clear () ; edu.chalmers.vaporwave.event.GameEventBus . getInstance () . post ( new edu.chalmers.vaporwave.event.ExitToMenuEvent ( destinationMenu , this . players ) ) ; for ( edu.chalmers.vaporwave.model.Player player : this . players ) { player . resetPlayerGameStats () ; } }
{ stocks = ( ( java.util.List < com.alex.develop.adapter.Stock > ) ( results.values ) ) ; if ( 0 < ( results.count ) ) { notifyDataSetChanged () ; } else { notifyDataSetInvalidated () ; } mListener . find ( results.count ) ; }
{ int fragLen = negValue - posValue ; if ( ( fragLen > 0 ) && ( fragLen <= 2000 ) ) { ( getCounts () [ ( fragLen - 1 ) ] ) ++ ; } }
( delta >= 0 ) ? ( this . TURRET_TURN_RATE ) / ( 1000 / delta ) : 0
{ satManMKRepo . update ( satManMK ) ; }
{ double inches ; double i = 0 ; for ( inches = 1 ; inches <= ( inches <= ( inches ) ) ; inches ++ ) { if ( ( inches ) == 129.37 ; java.lang.System.out . println ( ( ( ( inches + "inches is " ) + ( ( counter ) + ( ( counter ) ++ ) ) + "meters." ) ) ) ; ( counter ) ++ ; if ( ( counter ) == 12 ) { java.lang.System.out . println () ; counter = 0 ; } } }
{ org.springframework.scheduling.quartz.SchedulerFactoryBean factory = new org.springframework.scheduling.quartz.SchedulerFactoryBean () ; factory . setOverwriteExistingJobs ( true ) ; factory . setJobFactory ( jobFactory ) ; factory . setQuartzProperties ( quartzProperties () ) ; factory . setTriggers ( sampleJobTrigger ) ; return factory ; }
java.lang.String . format ( "Parse error on line %s, col %s. Found %s, expected %s." , dispatcher . getLine () , dispatcher . getColumn () , dispatcher . getToken () , token )
private static void downloadMovieData () { java.lang.String response = null ; try { response = andras.com.popularmovies.utils.MovieDataUtils . getResponseFromHttpUrl ( andras.com.popularmovies.utils.MovieDataUtils . buildUrl () ) ; } catch ( java.io.IOException e ) { android.util.Log . e ( andras.com.popularmovies.utils.MovieDataUtils.tag , e . getMessage () ) ; return; } try { andras.com.popularmovies.utils.MovieDataUtils . parseMovieJSON ( response ) ; } catch ( org.json.JSONException e ) { android.util.Log . e ( andras.com.popularmovies.utils.MovieDataUtils.tag , e . getMessage () ) ; } }
{ Common.Message listMsg ; java.lang.String content = "" ; for ( Common.User item : this . usersList ) { int i = 0 ; if ( i == 0 ) { content = item . getUsername () ; } else { content = ( content + " " ) + ( item . getUsername () ) ; } i ++ ; } }
if ( navigationEvent == ( NAVIGATION_FINISHED ) ) { android.support.customtabs.CustomTabsIntent.Builder builder = new android.support.customtabs.CustomTabsIntent.Builder ( session ) ; builder . setToolbarColor ( android.support.v4.content.ContextCompat . getColor ( activity , R.color.accent ) ) ; android.support.customtabs.CustomTabsIntent customTabsIntent = builder . build () ; customTabsIntent . launchUrl ( activity , android.net.Uri . parse ( urls [ ( ( index ) ++ ) ] ) ) ; }
if ( address >= ( handlerBlock . getAddressEnd () ) ) { return 13 ; } else { return ( ( short ) ( ( data . get ( ( ( int ) ( address ) ) ) ) & 255 ) ) ; }
( ( thread1JobDone ) && ( thread1JobDone ) ) && ( thread1JobDone )
level . checkHassucceeded ( score . getScore () )
{ this . returnDate ; if ( ( loanDate ) == ( - 1 ) ) { returnDate ; } if ( ( loanDate ) == ( - 1 ) ) { returnDate ; } }
config . getVolume ( true )
size = 0
timer . schedule ( timerTask , 5000 , 5000 )
{ Woo . main ( null ) ; }
org.junit.Assert . assertEquals ( 1 , sgenLarger . getTotalSequencesIterated () ) ;
{ boolean doneReading = readPage () ; if ( doneReading ) { return true ; } doneReading = processPageData ( ( ( int ) ( recordsReadInCurrentPass ) ) ) ; }
{ messaging . convertAndSend ( "/topic/update" , indent ) ; if ( indent != null ) { rabbitTemplate . convertAndSend ( "update-indent" , indent ) ; return true ; } }
( ( pd . hasOption ( PropertyOption.HIDDEN ) ) || ( ( ! ( app . isAdvancedMode () ) ) && ( pd . hasOption ( PropertyOption.ADVANCED ) ) ) ) || ( ! ( allowedPropertyNames . contains ( pd . getName () ) ) )
{ int sourceNodeCount = sourceNodes . size () ; if ( ( ( sourceNodes ) != null ) && ( index < sourceNodeCount ) ) { return sourceNodes . get ( index ) ; } if ( ( sinkNodes ) != null ) { int sinkIndex = ( ( sourceNodes ) == null ) ? index : index - sourceNodeCount ; return sinkNodes . get ( sinkIndex ) ; } }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; com.plorial.exoroplayer.views.FileExplorerFragment fileExplorerFragment = new com.plorial.exoroplayer.views.FileExplorerFragment () ; android.app.FragmentTransaction transaction = getFragmentManager () . beginTransaction () ; transaction . add ( R.id.fragment_container , fileExplorerFragment ) ; transaction . addToBackStack ( FileExplorerFragment.CLASS_NAME ) ; transaction . commit () ; }
KILO ( UCUM.GRAM )
{ mdHotels = ( ( javax.swing.table.DefaultTableModel ) ( jTableHotels . getModel () ) ) ; if ( ( jTableHotels . getSelectedRowCount () ) == 0 ) { javax.swing.JOptionPane . showMessageDialog ( this , "please select the mainel to delete" ) ; return; } java.lang.String id = 0 ; java.lang.String id = 0 ; java.lang.String id = 0 ; java.lang.System.out . println ( 0 ) ; return; }
newData . put ( mx.edu.cide.justiciacotidiana.v1.mongo.MongoInterface.FIELD_UPDATED , Utils.isoformater . format ( new java.util.Date () ) ) ;
assertEquals ( 30 , dataBag . size () )
json = null
{ analyze ( AST . getAddExpression () ) ; }
if ( ( ps ) != null ) { ps . close () ; }
if ( number < 0 ) { throw new java.lang.IllegalArgumentException ( ( ( "number: " + number ) + ". Number cannot be neagative." ) ) ; }
public void add ( seedu.taskboss.model.task.Task toAdd ) throws seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException { assert toAdd != null ; if ( contains ( toAdd ) ) { if ( ! ( toAdd . getCategories () . contains ( Category.done ) ) ) { throw new seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException () ; } } internalList . add ( toAdd ) ; }
new org.sigmah.offline.dao.RequestManager ( projects , callback )
{ if ( ! ( Config . contains ( ( "Messages." + sIndex ) ) ) ) { index = 1 ; } mess = Config . getString ( ( "Messages." + sIndex ) ) ; mess = mess . replace ( "&" , " " ) ; sendBossBar ( mess , 10 ) ; index = ( index ) + 1 ; }
{ if ( ! ( wale_tech.tryon.user.setting.PermissionAction . checkAutoRequest ( context , Manifest.permission.CAMERA ) ) ) { return; } if ( ! ( checkLoginStatus () ) ) { return; } if ( ! ( checkNet () ) ) { return; } android.content.Intent scan_int = new android.content.Intent ( context , com.zbar.lib.CaptureActivity . class ) ; android.support.v7.app.AppCompatActivity activity = ( ( android.support.v7.app.AppCompatActivity ) ( context ) ) ; activity . startActivityForResult ( scan_int , wale_tech.tryon.ScanAction.REQUEST_MAIN ) ; }
this . backgroundValue
{ super . onCreate ( savedInstanceState ) ; if ( ! ( com.innovationplayground.sessionexecutiontestclient.PermissionUtil . hasWriteExternalStoragePermission ( getActivity () ) ) ) { com.innovationplayground.sessionexecutiontestclient.PermissionUtil . requestWriteExternalStoragePermission ( getActivity () ) ; return; } com.innovationplayground.sessionexecutiontestclient.communication.authapi.AuthProxy authProxy = new com.innovationplayground.sessionexecutiontestclient.communication.authapi.AuthProxy () ; com.innovationplayground.sessionexecutiontestclient.storage.Storage storage = com.innovationplayground.sessionexecutiontestclient.storage.Storage . getInstance ( getActivity () ) ; clientAuthenticator = new com.innovationplayground.sessionexecutiontestclient.business.ClientAuthenticator ( authProxy , storage ) ; loadClients () ; }
{ if ( base == 10 ) { return null ; } org.apache.sis.util.ArgumentChecks . ensureStrictlyPositive ( "base" , base ) ; return base ; }
{ graphics2D . setPaint ( java.awt.Color.white ) ; graphics2D . fillRect ( 0 , 0 , getSize () . width , getSize () . height ) ; graphics2D . setPaint ( java.awt.Color.black ) ; }
if ( ( args.length ) != 1 ) { try { int starWarsSequence = java.lang.Integer . parseInt ( args [ 0 ] ) ; java.lang.System.out . println ( ( "Star Wars ||ance: " + starWarsSequence ) ) ; } catch ( java.lang.NumberFormatException e ) { java.lang.System.err . println ( ( ( "Argument" + ( args [ 0 ] ) ) + " must be an integer." ) ) ; java.lang.System . exit ( 2 ) ; } }
{ if ( show ) { com.livae.android.loading.RecyclerAdapter . notifyItemInserted ( getBottomLoadingPosition () ) ; } else { com.livae.android.loading.RecyclerAdapter . notifyItemRemoved ( getBottomLoadingPosition () ) ; } }
{ throw new com.spotify.docker.client.DockerException ( e ) ; }
( ( ( this . getLength () ) == ( other . getLength () ) ) && ( ( this . getWidth () ) == ( other . getWidth () ) ) ) && ( this . getHeight () )
{ session . close () ; sessions . remove ( session ) ; }
( ( ( java.lang.Double ) ( o.object ) ) > 0 )
event . getPersonId ()
{ int id = item . getItemId () ; switch ( id ) { case android.R.id.home : android.util.Log . d ( "hi" , android.support.v4.app.NavUtils . navigateUpFromSameTask ( this ) ) ; return true ; } if ( id == ( R.id.action_settings ) ) { return true ; } return super . onOptionsItemSelected ( item ) ; }
{ arbolTags . getTags () . remove ( tagtemp ) ; }
{ alert = new android.app.AlertDialog.Builder ( this ) . setTitle ( "Alert" ) . setMessage ( "Block is running" ) . setPositiveButton ( "OK" , null ) . show () ; getActionBar () . setSelectedNavigationItem ( currentSelectedItem ) ; }
{ listeners . clear () ; listeners = null ; if ( ( chatToggleCommand ) != null ) { chatToggleCommand . close () ; chatToggleCommand = null ; } if ( ( chatListenCommand ) != null ) { chatListenCommand . close () ; chatListenCommand = null ; } }
{ java.util.List < com.hanuor.onyx.helper.RecognitionResult > results = null ; for ( com.hanuor.onyx.helper.Tag tag : results . get ( 0 ) . getTags () ) { probableTags . add ( tag . getName () ) ; } return probableTags ; }
callback . invoke ( null , null )
super . testTagAddUsers ( tagId , userIds )
{ showProgress ( true ) ; com.parse.ParseFacebookUtils . logInWithReadPermissionsInBackground ( this , java.util.Arrays . asList ( "user_location, email, user_birthday" ) , new com.parse.LogInCallback () { @ java.lang.Override public void done ( com.parse.ParseUser parseUser , com.parse.ParseException e ) { if ( parseUser == null ) {} else if ( parseUser . isNew () ) { getF ;Info () ; } else { android.util.Log . d ( com.trytara.tara.LoginActivity.TAG , ( "CURRENT USER: " + ( parseUser . toString () ) ) ) ; } } } ) ; }
new cn.ac.ucas.operator.asOperator ()
deque [ ( ( first ) - 1 ) ]
{ if ( ( lastField ) != null ) { if ( ( lastField . isLong () ) || ( searchResult.lastField . isLong () ) ) { return false ; } return ( com.orientechnologies.orient.core.sql.OIndexSearchResult . isIndexEqualityOperator ( lastOperator ) ) || ( com.orientechnologies.orient.core.sql.OIndexSearchResult . isIndexEqualityOperator ( searchResult.lastOperator ) ) ; } }
{ java.lang.System.out . println ( "-- stop()" ) ; java.lang.System.out . println ( "Stopping application, saving config" ) ; config.pos_x = mainStage . getX () ; config.pos_y = mainStage . getY () ; config.width = mainStage . getWidth () ; config.height = mainStage . getHeight () ; }
{ if ( ! ( isLoaded ) ) { return null ; } sender . setStringMetadata ( org.bitbucket.ucchy.undine.MailData.MAILLIST_METAKEY , "trashbox" ) ; java.util.ArrayList < org.bitbucket.ucchy.undine.MailData > box = new java.util.ArrayList < org.bitbucket.ucchy.undine.MailData > () ; for ( org.bitbucket.ucchy.undine.MailData mail : mails ) { if ( ( mail . isRelatedWith ( sender ) ) && ( mail . isSetTrash ( sender ) ) ) { box . add ( mail ) ; } } return box ; }
{ e . getMessage () }
{ com.zhihu.matisse.internal.entity.Item.ITEM_ID_CAPTURE , com.zhihu.matisse.internal.entity.Item.ITEM_DISPLAY_NAME_CAPTURE , "" , 0 }
{ int r = ( ( int ) ( java.lang.Math . round ( ( ( ( coord . getY () ) - ( minY ) ) / ( cellSize ) ) ) ) ) ; int c = ( ( int ) ( java.lang.Math . round ( ( ( ( coord . getX () ) - ( ( ( coord . getX () ) - ( ( - 1 ) ) ) / ( cellSize ) ) ) ) ) ) ) ; }
@ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String address = "" ; if ( v == ( this . lblBitcoinAddress ) ) address = this . getContext () . getString ( R.string.bitcoin_address ) ; else if ( v == ( this . lblLitecoinAddress ) ) address = this . getContext () . getString ( R.string.litecoin_address ) ; net.alegen.android.netclip.util.Clipboard . getInstance ( this . getContext () ) . setClipboardText ( address ) ; }
{ java.util.ArrayList < java.lang.Class < ? extends com.audacious_software.passive_data_kit.generators.Generator > > active = new java.util.ArrayList <> () ; for ( java.lang.String className : this . mActiveGenerators ) { try { active . add ( ( ( java.lang.Class < ? extends com.audacious_software.passive_data_kit.generators.Generator > ) ( java.lang.Class . forName ( className ) ) ) ) ; } catch ( java.lang.ClassNotFoundException e ) {} } return active ; }
r . accept ( civ , ( ( org.objectweb.asm.ClassReader.SKIP_DEBUG ) | ( org.objectweb.asm.ClassReader.SKIP_FRAMES ) ) | ( org.objectweb.asm.ClassReader.SKIP_CODE ) )
pokerController . startGame ()
{ java.lang.String name = editTextName . getText () . toString () ; fluffystudios.firebaseauthdemo.UserInformation userInformation = new fluffystudios.firebaseauthdemo.UserInformation ( name , add ) ; com.google.firebase.auth.FirebaseUser user = firebaseAuth . getCurrentUser () ; databaseReference . child ( user . getUid () ) . setValue ( userInformation ) ; }
if ( ( currVocab ) == null ) { playSound ( currVocab . getSpeech () ) ; } else { com.example.sco.imuvo.HelperClasses.WebServiceHelper webServiceHelper = new com.example.sco.imuvo.HelperClasses.WebServiceHelper () ; webServiceHelper . setWebServiceHelperListener ( new com.example.sco.imuvo.HelperClasses.WebServiceHelperListener () { @ java.lang.Override public void onWebServiceReturnResult ( byte [] result ) { currVocab . setSpeech ( result ) ; com.example.sco.imuvo.HelperClasses.VocabDatabaseHelper . update ( currVocab ) ; playSound ( result ) ; } } ) ; }
{ org.talend.components.api.properties.ComponentProperties props = new org.talend.components.splunk.TSplunkEventCollectorDefinition () . createProperties () ; org.talend.daikon.properties.presentation.Form f = props . getForm ( Form.MAIN ) ; org.talend.daikon.properties.presentation.Form advancedF = props . getForm ( Form.ADVANCED ) ; java.lang.System.out . println ( f ) ; java.lang.System.out . println ( advancedF ) ; java.lang.System.out . println ( props ) ; org.junit.Assert . assertEquals ( Form.MAIN , f . getName () ) ; }
{ java.lang.System.out . println ( "------Server Data------" ) ; java.lang.System.out . println ( ( "username: " + ( username ) ) ) ; java.lang.System.out . println ( ( "password: " + ( password ) ) ) ; java.lang.System.out . print ( ( "challengeAnswer: " + ( challengeAnswer ) ) ) ; java.lang.System.out . println ( "" ) ; java.lang.System.out . print ( "responseToChallenge: " ) ; java.lang.System.out . println ( "" ) ; }
long attributePointer
term ( mNewEqualsSymbol , qvar1 , qvar2 )
index / ( dimension () )
{ int n = contexts . size () ; for ( n -= 1 ; n >= 0 ; n -- ) { MiniJavaVar findRes = contexts . get ( n ) . vars . get ( varName ) ; if ( findRes != null ) { return findRes ; } } java.lang.System.err . printf ( "Runtime Error: identifier %s not found.\n" , varName ) ; return MiniJavaVar . makeVoid () ; }
@ java.lang.Override public void save ( org.openstack.atlas.service.domain.services.impl.AccountLimit accountLimit ) throws org.openstack.atlas.service.domain.exceptions.BadRequestException { try { org.openstack.atlas.service.domain.services.impl.AccountLimit dbLimit = accountLimitRepository . getByAccountIdAndType ( accountLimit . getAccountId () , accountLimit . getLimitType () ) ; try { org.openstack.atlas.service.domain.services.impl.AccountLimit dbLimit = accountLimitRepository . getByAccountIdAndType ( accountLimit . getAccountId () , accountLimit . getLimitType () ) ; } catch ( java.lang.Exception e ) {} accountLimitRepository . save ( accountLimit ) ; } }
return el . as ( false ) ;
timeChosen = timeChosen
switch ( key ) { case com.feresr.rxweather.UI.SettingsActivity.PREF_UNIT : if ( sharedPreferences . getString ( key , "celsius" ) . equals ( "celsius" ) ) { citiesView . showTemperatureInCelsius () ; } else { citiesView . showTemperatureInFahrenheit () ; } case com.feresr.rxweather.UI.SettingsActivity.GRIDVIEW : if ( sharedPreferences . getBoolean ( key , false ) ) { citiesView . setSetColumns ( 2 ) ; } else { citiesView . setSetColumns ( 1 ) ; } break; }
java.lang.String . format ( "Component '%s' input size '%d' target => '%s'" , src . getName () , input . size () , targetName )
if ( ( null == ( rootView ) ) && ( cacheContentData ) ) { rootView = onCreateFragmentView ( inflater , container , savedInstanceState ) ; }
new java.util.ArrayList <> ()
{ if ( t == 0 ) { return ref ; } t = t - 1 ; checkNonEmptyStream ( "pre" ) ; checkCapacity ( t ) ; if ( t >= ( size ) ) { return bonsai.runtime.core.Cast . toLattice ( name , ref ) . bottom () ; } else { return stream [ preIndex ( t ) ] ; } }
{ if ( ! ( com.frdfsnlght.inquisitor.PlayerStats.started ) ) { return; } com.frdfsnlght.inquisitor.PlayerStats.PlayerState state = com.frdfsnlght.inquisitor.PlayerStats.playerStates . get ( player . getName () ) ; if ( state != null ) { com.frdfsnlght.inquisitor.PlayerStats . onPlayerMove ( player , player . getLocation () ) ; state.lastLocation = to ; state.lastTime = java.lang.System . currentTimeMillis () ; } }
java.lang.StringBuffer = requestObject . getInt ( "privacy" ) ;
( mSessionStartPointerMillis ) > ( ee.ioc.phon.android.speechutils.ContinuousRawAudioRecorder.SessionStartPointer.mBeginningOfBufferPosition . getSessionStartPointerMillis () )
{ java.lang.String username = principal . getName () ; com.jennbowers.library.models.User toUser = userRepo . findByUsername ( username ) ; com.jennbowers.library.models.User fromUser = userRepo . findOne ( id ) ; friendRequest . setTouser ( toUser ) ; friendRequest . setFromuser ( fromUser ) ; friendRequest . setActive ( false ) ; friendRequestRepo . save ( friendRequest ) ; return "friendAll" ; }
if ( ( ( org.droidplanner.android.BuildConfig.DEBUG ) || ( ( org.droidplanner.android.BuildConfig.DEBUG ) || ( ( org.droidplanner.android.utils.Utils . getAppVersionCode ( context ) ) > ( mAppPrefs . getSavedAppVersionCode () ) ) ) ) && ( ! ( mAppPrefs . getSavedAppVersionCode () ) ) ) {}
{ java.lang.String URL = ( MainActivity2.URL ) + ( MainActivity2.USN ) ; android.content.Intent i = new android.content.Intent ( getActivity () , com.teamidentiti.fastv setsults.Services.SemestersService . class ) ; i . putExtra ( "URL" , URL ) ; i . putExtra ( "USN" , MainActivity2.USN ) ; i . putExtra ( "SEM" , MainActivity2.SEM ) ; getActivity () . startService ( i ) ; }
{ float randomVelx = ( ( random . nextFloat () ) * 4.0F ) - 2.0F ; float randomVely = ( ( random . nextFloat () ) * 4.0F ) - 2.0F ; return new com.dumbpug.crossbowknight.particles.ExplosionParticle ( ( ( emitterDetails.positionX ) - 10 ) , emitterDetails.positionY , randomVelx , randomVely , level ) ; }
anchorText . append ( new java.lang.String ( ch ) ) ;
@ java.lang.Override public dyvil.tools.compiler.ast.field.IDataMember resolveField ( dyvil.tools.parsing.Name name ) { for ( int i = ( this . variables . size () ) - 1 ; i >= 0 ; i -- ) { final dyvil.tools.compiler.ast.field.IVariable variable = this . variables . get ( i ) ; if ( ( variable . getName () ) == name ) { return variable ; } } return null ; }
{ model . addAttribute ( "book" , new edu.mum.cs545.lms.domain.Book () ) ; model . addAttribute ( "bookTypes" , java.util.Arrays . asList ( edu.mum.cs545.lms.domain.BookType . values () ) ) ; model . addAttribute ( "bookCategories" , java.util.Arrays . asList ( edu.mum.cs545.lms.domain.BookCategory . values () ) ) ; return "books" ; }
return maxEggGroupID
{ content = http.HttpGet . download ( url ) ; }
actualHours = 0
{ if ( isWhite () ) if ( ( ( start . rank () ) == 7 ) && ( ( target . rank () ) == 8 ) ) return true ; else if ( ( ( start . rank () ) == 2 ) && ( ( target . rank () ) == 1 ) ) return true ; return false ; }
if ( ( mMap ) != null ) { com.google.android.gms.maps.model.LatLng temp1 = new com.google.android.gms.maps.model.LatLng ( myRoute . get ( 0 ) . getLatitude () , myRoute . get ( 0 ) . getLongitude () ) ; mMap . moveCamera ( com.google.android.gms.maps.CameraUpdateFactory . newLatLng ( temp1 ) ) ; }
withItem . withAmount ( ( ( withItem . getAmount () ) + 1 ) )
holder.itemView . setOnClickListener ( null ) ;
{ java.util.List < org.eclipse.moquette.spi.impl.storage.StoredPublishEvent > storedEvents ; java.lang.String clientID = evt . getClientID () ; if ( ! ( m_persistentMessageStore . containsKey ( clientID ) ) ) { storedEvents = new java.util.ArrayList <> () ; } else { storedEvents = m_persistentMessageStore . get ( clientID ) ; } storedEvents . add ( convertToStored ( evt ) ) ; }
this . loadingDialog . setMessage ( ( ( "Downloading: " + ( lstToDownload ) ) + "..." ) )
new model.Bubble ( getX () , getY () , 0 , 0 , 0 , facingRight )
client . getEntityRef ( null , 1 , "testPresentEntityDestroyNotBlockedByReleasedReference iss" )
{ java.util.ArrayList abschnitt = new java.util.ArrayList <> () ; for ( int k = i ; k < ( j + 1 ) ; k ++ ) { abschnitt . add ( list . get ( k ) ) ; } return abschnitt ; }
java.lang.System.out . println ( v )
{ mItemRemovedSnackbar . show () ; int viewHolderPosition = viewHolder . getAdapterPosition () ; mModel . removeChild ( viewHolderPosition ) ; mSetsAdapter . notifyItemRemoved ( viewHolderPosition ) ; mItemRemovedSnackbar = android.support.design.widget.Snackbar . make ( mSetsView , R.string.program_exercise_activity_set_deleted_message , Snackbar.LENGTH_INDEFINITE ) ; mItemRemovedSnackbar . setAction ( R.string.cancel_button_text , new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { mSetsAdapter . notifyItemInserted ( mModel . restoreLastRemoved () ) ; } } ) ; }
{ s . setBrTel ( txtBrTel . getText () ) ; s . setEmail ( txtEmail . getText () ) ; s . setUplaceno ( java.lang.Integer . parseInt ( txtUplaceno . getText () ) ) ; populate () ; controller.GUIKontroler . pokreniDodajCasProzor ( s ) ; }
name . equals ( rhs.host )
{ cv . setVisibility ( View.VISIBLE ) ; showAnim . cancel () ; cv . startAnimation ( showAnim ) ; btnFadeOutAnim . cancel () ; showInfo . startAnimation ( btnFadeOutAnim ) ; ( ( com.engstuff.coloriphornia.interfaces.HideInfoListener ) ( activity ) ) . onHideInfoInvoked ( false ) ; }
{ android.widget.Toast . makeText ( context , EventName , Toast.LENGTH_SHORT ) . show () ; }
{ super . onPostExecute ( keys ) ; android.app.Activity context = base.ContextHolder . getContext () ; openWeb . putExtra ( "URL" , getAuthUrl () ) ; openWeb . putExtra ( "KEYS" , keys ) ; openWeb . putExtra ( "AUTHORIZER" , copy ) ; context . startActivity ( openWeb ) ; }
new io.github.sdsstudios.ScoreKeeper.Adapters.PlayerListAdapter ( this . mRelativeLayout , this )
vectorDataNode . setPermanent ( false )
return ( this . getName () . equals ( newStylist . getName () ) ) && ( this . getId () . equals ( newStylist . getId () ) ) ;
try { java.lang.String str = "SELECT h FROM Hospital h WHERE h.suburb = :suburb" ; javax.persistence.Query query = em . createQuery ( str ) ; query . setParameter ( "suburb" , suburb ) ; return query . getResultList () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; em . close () ; return null ; } }
bw . write ( ctx . expressionName () . getText () )
com.example.testme.server.broadcast.Broadcaster . broadcast ()
{ com.emc.sa.api.utils.OrderServiceJob.JobType type ; try { type = OrderServiceJob.JobType . valueOf ( typeStr ) ; } catch ( java.lang.Exception e ) { com.emc.sa.api.OrderService.log . error ( "Failed to get job type e=" , e ) ; throw APIException.badRequests . invalidParameterWithCause ( SearchConstants.JOB_TYPE , typeStr , e ) ; } return status != null ? status . toOrderJobInfo () : new com.emc.sa.api.OrderJobInfo () ; }
path . setText ( selectedDirectory . getAbsolutePath () ) ;
if ( ( ( last_date ) != null ) && ( ! ( last_date . equals ( birthdate ) ) ) ) { com.example.mishaberkovich.roomsquad.EditProfileActivity.changes_saved = false ; }
{ TestController . tests ( 10 , "g" , ( ( TestController.root ) + ( TestController.files [ i ] ) ) , i , TestController.maxValues [ i ] ) ; TestController . tests ( 10 , "p" , ( ( TestController.root ) + ( TestController.files [ i ] ) ) , i , TestController.maxValues [ i ] ) ; }
{ models.Game g = new models.amGame () ; models.Game g2 = new models.spGame () ; g . shuffle () ; return ninja.Results . json () . render ( g ) ; } else { g2 . buildDeck () ; return ninja.Results . json () . render ( g2 ) ; }
private static void restoreDensity ( android.content.Context context ) { context . getResources () . getDisplayMetrics () . setToDefaults () ; if ( metrics != null ) metrics . setToDefaults () ; }
{ java.util.HashMap < java.lang.String , Jama.Matrix > bugVecList = utils.MatrixUtil . loadVectors ( bugVecFilePath ) ; utils.MatrixUtil . exportSimilarityMatrix ( bugVecList , codeVecList , simMatFilePath ) ; }
{ em . remove ( em . merge ( mapLayerMetadata ) ) ; this . deleteOlderMapThumbnails ( mapLayerMetadata ) ; return true ; }
{ double ret = 1 / ( real.length ) ; for ( int i = 0 ; i < ( real.length ) ; i ++ ) { ret += java.lang.Math . pow ( ( ( real [ i ] ) - ( predicted [ i ] ) ) , 2 ) ; } return java.lang.Math . sqrt ( ret ) ; }
if ( ( score [ ( currentHole - 1 ) ] ) <= ( com.manleysoftware.michael.discgolfapp.Model.Player.maxScoreAllowable ) ) { return; }
{ int i = 0 ; for ( char c : input . toCharArray () ) { if ( c == '{' ) i ++ ; if ( c == '}' ) i -- ; } return ( i >= 0 ) && ( i == 0 ) ; }
( ( versionMatcher . group ( 4 ) ) == null ? true : false
{ android.widget.Toast clickMessage = android.widget.Toast . makeText ( itemView . getContext () , "CLICKED!" , Toast.LENGTH_LONG ) ; android.content.Intent i = new android.content.Intent ( itemView . getContext () , com.pratikm.PatientTracker.HealthDetailsActivity . class ) ; i . putExtra ( "clickedPatientEmail" , mTextViewPatientEmail . getText () . toString () ) ; itemView . getContext () . startActivity ( i ) ; }
{ if ( enumName . trim () . equalsIgnoreCase ( gc . name () ) ) { temp = gc ; break; } }
org.junit.Assert . assertEquals ( ( ( ( org.openx.data.jsonserde.json.JSONObject ) ( org.openx.data.jsonserde.JsonSerDeTimeStampTest.instance . deserialize ( w ) ) ) ) )
viewNameToBeanNamesMap . get ( viewName )
private void traiterEmail ( java.lang.String email , com.tut.beans.Utilisateur utilisateur ) { try { validationEmail ( email ) ; } catch ( java.lang.Exception e ) { setErreur ( com.tut.forms.ConnexionForm.CH._IDF , e . getMessage () ) ; } utilisateur = utilisateurDao . trouver ( email ) ; if ( utilisateur == null ) { setErreur ( com.tut.forms.ConnexionForm.CH._IDF , "Utilisateur inconnu" ) ; java.lang.System.out . println ( "traiterEmail() --> Echec de l'inscription : utilisateur non stocké en base de données" ) ; } }
user . toString ()
{ if ( camera == null ) return; if ( camera == null ) { return; } float step = camera . getParameters () . getExposureCompensationStep () ; }
if ( ( this . pauseTime ) > 0 ) { this . startTime = ( this . pauseTime ) - runtime ; this . startTime = ( com.badlogic.gdx.utils.TimeUtils . millis () ) - runtime ; this . startTime = ( com.badlogic.gdx.utils.TimeUtils . millis () ) - runtime ; }
dirToOpen = new java.io.File ( path )
{ this . solve ( ( nb - 1 ) , source , destination , aux2 ) ; this . moveOneDisc ( source , destination ) ; this . solve ( ( nb - 1 ) , aux , destination ) ; }
public models.Trainer searchTrainersByEmail ( java.lang.String emailEntered ) { java.lang.String searchByMail = new java.lang.String ( "" ) ; if ( ( trainers . size () ) > 0 ) { for ( models.Trainer trainer : trainers ) { if ( emailEntered . equals ( trainer . getEmail () ) ) { return trainer ; } else { return null ; } } } return null ; }
{ if ( low > high ) return list ; int pos = partition ( list , low , high ) ; quicksort ( list , low , ( pos - 1 ) ) ; quicksort ( list , ( pos + 1 ) , high ) ; }
{ if ( ! ( de.schneider_simon.minigolfscores.PlayRound.isPutViewsDone ) ) { playRoundViews . putViewsIntoGridlayout () ; de.schneider_simon.minigolfscores.PlayRound.isPutViewsDone = true ; } playRoundViews . writeContentToViews ( playRoundContent ) ; }
{ this . transformation . apply ( source , this ) ; }
{ cat.ie.challengeaccepted.WS.ChallengeAccepted ( null ) ; cat.ie.challengeaccepted.WS.User user = new cat.ie.challengeaccepted.WS.User () ; user.email = mEmail ; user.password = mPassword ; try { showProgress ( true ) ; android.util.Log . i ( "LOGIN" , "LogIn" ) ; remoteUser = service . logIn ( user ) ; } catch ( java.lang.Exception e ) { return e ; } return null ; }
( params.length )
{ javax.servlet.http.HttpSession session = request . getSession () ; java.lang.String requestQuery = request . getParameter ( "search" ) ; int pageIndex = getPageIndex ( session , requestQuery , allSearchResults , request ) ; return null ( session , requestQuery , pageIndex , allSearchResults ) ; }
{ dataset = null ; displayService . getDisplays () . remove ( display ) ; imageDisplayService . getImageDisplays () . remove ( display ) ; display . clear () ; dataset = null ; display . close () ; }
switch ( which ) { case 0 : mCallback . mapTypeSelected ( GoogleMap.MAP_TYPE_NORMAL ) ; break; case 1 : mCallback . mapTypeSelected ( net.exclaimindustries.geohashdroid.fragments.MapTypeDialogFragment.MAP_STYLE_NIGHT ) ; break; case 2 : mCallback . mapTypeSelected ( GoogleMap.MAP_TYPE_TERRAIN ) ; break; case 3 : mCallback . mapTypeSelected ( GoogleMap.MAP_TYPE_HYBRID ) ; }
{ java.util.ArrayList < se.kth.news.core.news.News > newsToAdd = container . getContent () . getNews () ; for ( se.kth.news.core.news.News n : newsToAdd ) { if ( ! ( news . contains ( n ) ) ) { logReceivedNews ( n ) ; } } }
if ( ( traceDataProvider [ index ] ) == null ) { trace [ index ] . setTraceColor ( getModelColor ( ( ( org.csstudio.sds.component.xygraph.model.XyGraphModel.PROP_PRIMARY_AXIS_TRACE_COLOR_PREFIX ) + index ) ) ) ; }
( a [ i ] . length )
java.util.Map < java.lang.String , java.lang.Object > nodeProperties = new java.util.HashMap <> () ;
public void generateSmallToast ( java.lang.String info ) { final android.widget.Toast toast = android.widget.Toast . makeText ( getBaseContext () , info , Toast.LENGTH_SHORT ) ; toast . show () ; new android.os.Handler () . postDelayed ( new java.lang.Runnable () { @ java.lang.Override public void run () { toast . cancel () ; } } , 500 ) ; }
collapseView ( lastExpandedPosition , true , false )
getSearchTerm ( lastParseDate , true )
switch ( position ) { case 0 : return chatFragment ; case 2 : return publicGroupFragment ; case 1 : if ( ( contactsFragment ) != null ) { return contactsFragment ; } return contactsFragment = new com.superchat.ui.ContactsScreen () ; case 3 : return bulletinFragment ; default: return new com.superchat.ui.TempFragment () ; }
{ com.intellij.psi.PsiFile. = org.mockito.Mockito . mock ( com.intellij.psi.PsiFile . class ) ; if ( text != null ) { org.mockito.Mockito . when ( " . getText () ) . thenReturn ( text ) ; org.mockito.Mockito . when ( " getChildren () ) . thenReturn ( new com.intellij.psi.PsiElement [] { org.mockito.Mockito . mock ( com.intellij.psi.PsiElement . class ) , org.mockito.Mockito . mock ( com.intellij.psi.PsiElement . class ) } ) ; return null ; } return null ; }
{ light = section . spreadSkylightDownwards ( x , z , light ) ; }
if ( ( containsFilter && containsIgnore ) || ( ( ! containsFilter ) ) && ( ! containsIgnore ) ) { return ( "<- ignore-filter conflict -> " + line ) + "\n" ; } else if ( containsFilter && ( ! containsIgnore ) ) { return ( "<- ignore-filter conflict -> " + line ) + "\n" ; } else if ( containsFilter && ( ! containsIgnore ) ) { return line + "\n" ; }
private com.alphatica.genotick.genotick.RobotData createDataUpToTimePoint ( int i ) { for ( double [] original : values ) { double [] copy = copyReverseArray ( original , i ) ; list . add ( copy ) ; } try { java.lang.Double futureChange = calculateFutureChange ( timePoints [ i ] ) ; return com.alphatica.genotick.genotick.RobotData . createData ( list , name , futureChange ) ; } catch ( com.alphatica.genotick.data.NoDataForTimePointException ex ) { return com.alphatica.genotick.genotick.RobotData . createEmptyData ( name ) ; } }
{ super . onCreate ( savedInstanceState ) ; android.view.LayoutInflater inflater = ( ( android.view.LayoutInflater ) ( getSystemService ( de.prismatikremote.hartz.prismatikremote.activities.LAYOUT_INFLATER_SERVICE ) ) ) ; mDrawerLayout . addView ( inflater . inflate ( R.layout.activity_settings , null ) ) ; allowNotifications = ( ( android.widget.Button ) ( findViewById ( R.id.allowNotifications ) ) ) ; allowNotifications . setOnClickListener ( this ) ; updateUi () ; }
{ if ( sizeOfComponent == 0 ) { continue; } java.lang.String comment = commentLikeGraph . getComment () ; componentSizeCommentMap . put ( sizeOfComponent , comment ) ; componentSizeCommentMap . hashCode () ; }
{ session . setAttribute ( "userProfile" , userProfile ) ; return "/index" ; }
private static void post ( java.lang.String url , java.lang.String requestBodyString , com.chinamobile.iot.onenet.OneNetApiCallback callback ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , requestBodyString ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . post ( url , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( callback ) ) ; }
private void loadData () { mLastSyncTime = java.lang.System . currentTimeMillis () ; int maxVersion = maxFounderVersion () ; int serverMaxVersion = 0 ; serverMaxVersion = syncDeletedFounders ( serverMaxVersion ) ; serverMaxVersion = syncNewFounders ( serverMaxVersion ) ; serverMaxVersion = syncDirtyFounders ( serverMaxVersion ) ; syncServerFounderUpdates ( maxVersion , serverMaxVersion ) ; }
{ int id = view . getId () ; android.widget.CheckBox chkFriend = ( ( android.widget.CheckBox ) ( view ) ) ; if ( chkFriend . isChecked () ) { android.util.Log . d ( com.sarahrobinson.finalyearproject.activities.MainActivity.TAG , "Added to invite list" ) ; } else { android.util.Log . d ( com.sarahrobinson.finalyearproject.activities.MainActivity.TAG , "Removed from invite list" ) ; } }
mGoogleApiClient = new com.google.android.gms.common.api.GoogleApiClient.Builder ( this ) . addApi ( Nearby.MESSAGES_API , null )
{ org.apache.http.client.HttpClient httpClient = clientFactory . getHttpClient () ; preempt ()SetAuthCredentials ( httpClient ) ; request . addHeader ( "Content-Type" , "application/json" ) ; request . addHeader ( "Accept-Part-Encoding" , "gzip" ) ; request . addHeader ( "User-Agent" , Manager.USER_AGENT ) ; addRequestHeaders ( request ) ; setBody ( request ) ; executeRequest ( httpClient , request ) ; }
{ double energyLeft = robotSnapshot . getEnergy () ; int playerId = robotSnapshot . getTeamIndex () ; com.hutgroup.robocode.server.IScoreSnapshot snapshot = robotSnapshot . getScoreSnapshot () ; double gunDamage = ( snapshot . getCurrentBulletDamageScore () ) + ( snapshot . getCurrentBulletKillBonus () ) ; return new com.hutgroup.robocode.server.RoundResult ( roundId , playerId , energyLeft , ramDamage , gunDamage ) ; }
{ if ( loc == ( - 1 ) ) return; if ( ( example.ShaderProgram.buf16Pool ) == null ) example.ShaderProgram.buf16Pool = org.lwjgl.BufferUtils . createFloatBuffer ( 16 ) ; example.ShaderProgram.buf16Pool . clear () ; mat . get ( example.ShaderProgram.buf16Pool ) ; }
newId != 0
public static < T > void serialize ( T object , java.lang.Class < T > sourceClass , java.io.OutputStream resultStream ) throws javax.xml.bind.JAXBException { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext . newInstance ( sourceClass ) ; javax.xml.bind.Marshaller jaxbMarshaller = jaxbContext . createMarshaller () ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT , true ) ; jaxbMarshaller . marshal ( object , resultStream ) ; }
{ org.oscm.converter.strategy.ConversionStrategy < void , To > converter = org.oscm.converter.strategy.ConversionFactory . getConverter ( from , to , ds ) ; converter . setDataService ( ds ) ; return converter . convert ( object ) ; }
if ( ( mStatusList.statusList . size () ) > 0 ) { setViewData ( mStatusList.statusList ) ; } else { android.util.Log . d ( com.bricechou.weiboclient.fragment.HomeFragment.TAG , "Refresh onComplete: No Result." ) ; refreshViewDone () ; }
if ( cameraData . isNewPacketAvailable () ) { us.ihmc.humanoidRobotics.communication.packets.sensing.VideoPacket vidPack = cameraData . getLatestPacket () ; java.lang.System.out . println ( vidPack.videoSource . toString () ) ; java.io.InputStream in = new java.io.ByteArrayInputStream ( vidPack . getData () ) ; javax.imageio.ImageIO . write ( javax.imageio.ImageIO . read ( in ) , "png" , new java.io.File ( "testImage" ) ) ; }
{ obdaModelManager = ( ( org.semanticweb.ontop.protege.core.OBDAModelManager ) ( getOWLEditorKit () . get ( it.unibz.krdb.obda.model.impl.OBDAModelImpl . class . getName () ) ) ) ; obdaModelManager . addListener ( this ) ; }
"refresh on " + downloadFriend
private static void sendResultWithDns ( boolean result ) { android.content.Intent result_intent = new android.content.Intent ( ValueConstants.ACTION_SET_DNS ) ; result_intent . putExtra ( "result" , result ) ; result_intent = new android.content.Intent ( ValueConstants.ACTION_SET_DNS ) ; result_intent . putExtra ( "result_code" , result_code ) ; result_intent = new android.content.Intent ( ValueConstants.ACTION_SET_DNS ) ; result_intent . putExtra ( "dns2" , dns2 ) ; }
{ - 1 , D_RIGHT , - 1 }
( callableDescriptor . get () )
io.github.pr0methean.betterrandom.prng.RandomTestUtils . checkStream ( prng , 42 , prng . ( ( 1L < < 40 ) , ( 1L < < 42 ) ) , ( - 1 ) , ( 1 < < 40 ) , ( 1L < < 42 ) , alwaysCheckEntropy () )
{ spell.Node temp = root ; for ( int i = 0 ; i < ( word . length () ) ; i ++ ) { int index = indexByLetter ( charAt ( i ) ) ; if ( temp . hasNode ( index ) ) { temp = temp . getNode ( index ) ; } else { return null ; } } return temp ; }
{ client = client . newBuilder () . remove ( org.fintx.http.HttpClientBase.networkInterceptor ) ; }
for ( int xPixel = 0 ; xPixel < ( this . width ) ; ++ xPixel ) { for ( int yPixel = 0 ; yPixel < ( this . height ) ; ++ yPixel ) { this . setPixel ( xPixel , yPixel , imageArray [ xPixel ] [ yPixel ] . getColor () ) ; } }
{ final java.lang.String line = indentCheck . getLine ( ( lineNum - 1 ) ) ; final int start = getLineStart ( line ) ; if ( indentLevel . isIn ( start ) ) { logChildError ( lineNum , start , indentLevel ) ; } }
public void msgNearby ( org.bukkit.entity.Player p , java.lang.String msg ) { org.bukkit.entity.Entity en ; label58 : for ( java.util.Iterator localIterator = p . getNearbyEntities ( 4File , 4 ) . iterator () ; localIterator . hasNext () ; ( ( org.bukkit.entity.Player ) ( en ) ) . sendMessage ( msg ) ) { en = ( ( org.bukkit.entity.Entity ) ( localIterator . next () ) ) ; if ( ( ! ( en instanceof org.bukkit.entity.Player ) ) || ( en == p ) ) break label58 ; } }
java.util.Loader . createObjectInstance ( builderElem . getFile ( pathRoot ) , classPath , java.lang.String . format ( "Builder %s" , classPath ) )
new org.online.etl.model.abstractions.Entity ( currentId , ( ( long ) ( i ) ) , "String" , "" )
com.liferay.portal.kernel.servlet.SessionErrors . _getMap ( session , false )
public void updateNodeInMap ( src.Node n , java.util.Map < java.lang.String , src.Node > map ) { src.Node nodeFromMap = map . get ( n . getState () . toString () ) ; if ( ( nodeFromMap . getTotalCost () ) > ( n . getTotalCost () ) ) { map . remove ( nodeFromMap . getState () . toString () ) ; map . put ( n . getState () . toString () , n ) ; } }
public void toJson ( org.json.JSONObject attrToFilterJsonObject ) { org.json.JSONObject toJson = new org.json.JSONObject () ; toJson . put ( BoraApplicationConstants.EVENT_ID_KEY_JSON , id ) . put ( BoraApplicationConstants.EVENT_NAME_KEY_JSON , name ) . put ( BoraApplicationConstants.EVENT_DATE_KEY_JSON , date ) . put ( BoraApplicationConstants.EVENT_ATTENDEES_KEY_JSON , attendees ) . put ( BoraApplicationConstants.EVENT_PHOTOS_KEY_JSON , photoNames ) ; return toJson ; }
public static java.util.Set < me.newyith.util.Point > getPointsConnected ( me.newyith.util.Point origin , java.util.Set < org.bukkit.Material > wallBlocks , java.util.Set < org.bukkit.Material > returnBlocks , int rangeLimit , java.util.Set < me.newyith.util.Point > }
private void processExtensionsDependencies ( ) throws org.apache.maven.plugin.MojoExecutionException { java.util.Collection < org.apache.maven.artifact.Artifact > }
{ javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext . newInstance ( businessLogicLayer.setUp.Organisation . class ) ; javax.xml.bind.Unmarshaller jaxbUnmarshaller = jaxbContext . createUnmarshaller () ; result = ( ( businessLogicLayer.setUp.Organisation ) ( jaxbUnmarshaller . unmarshal ( new java.io.File ( filepath ) ) ) ) ; }
{ com.navercorp.pinpoint.bootstrap.plugin.transformer.ClassFileTransformerBuilder builder = context . getClassFileTransformerBuilder ( "net.sf.json.JSONObject" ) ; builder . editMethod ( "fromObject" , "java.lang.Object" ) . injectInterceptor ( "com.navercorp.pinpoint.plugin.json.lib.interceptor.JsonLibMethodInterceptor" , JsonLibConstants.SERVICE_TYPE ) . group ( com.navercorp.pinpoint.plugin.json.lib.JsonLibPlugin.GROUP ) ; builder . editMethod ( "toBean" , "net.sf.json.JSONObject" ) . injectInterceptor ( "com.navercorp.pinpoint.plugin.json.lib.interceptor.JsonLibMethodInterceptor" ) . group ( com.navercorp.pinpoint.plugin.json.lib.JsonLibPlugin.GROUP ) ; }
{ mediaPlayer = org.mockito.Mockito . mock ( android.media.MediaPlayer . class ) ; org.mockito.Mockito . when ( mediaPlayer . getDuration () ) . thenReturn ( org.mercycorps.translationcards.manager.MediaPlayerManagerTest.SOME_DURATION ) ; translation = mock ( 1.Translation . class ) ; when ( translation . getFilename () ) . thenReturn ( org.mercycorps.translationcards.manager.MediaPlayerManagerTest.ANY_FILENAME ) ; mediaPlayerManager = new org.mercycorps.translationcards.media.MediaPlayerManager ( mediaPlayer ) ; }
{ int i = 0 ; for ( int i = 0 ; i < ( board.length ) ; i ++ ) { if ( addQueen ( i , col ) ) { if ( ( col > ( ( board [ 0 ] . length ) - 2 ) ) || ( solveH ( ( col + 1 ) ) ) ) { return true ; } else { removeQueen ( i , col ) ; } } } return false ; }
{ com.twu.biblioteca.Option optionSelected ; do { int userInput = presenter . getUserInput ( menuOptions . size () ) ; optionSelected = menuOptions . get ( ( userInput - 1 ) ) ; optionSelected . onSelect () ; } while ( optionSelected instanceof com.twu.biblioteca.QuitOption ) ; }
if ( isStalemateForPlayer && isStalemateForOpponent ) { _isStalemate = true ; this . _isGameOver = true ; } else if ( ( this . _numberOfTurnsCompleted ) > ( utilties.models.Game.MAX_TURN_LIMIT ) ) { _isStalemate = true ; this . _isGameOver = true ; }
{ for ( com.badlogic.gdx.utils.DisposableSystem sys : com.spaceproject.screens.SpaceScreen.engine . getSystems () ) { if ( sys instanceof com.badlogic.gdx.utils.Disposable ) ( ( com.badlogic.gdx.utils.Disposable ) ( org.badlogic.gdx.utils.Disposable ) ) . dispose () ; } for ( com.badlogic.ashley.core.Entity ents : com.spaceproject.screens.SpaceScreen.engine . getEntities () ) { com.spaceproject.components.TextureComponent tex = ents . getComponent ( com.spaceproject.components.TextureComponent . class ) ; if ( tex != null ) tex.texture . dispose () ; } com.spaceproject.screens.SpaceScreen.engine . removeAllEntities () ; }
{ if ( ( playerNameOnSpot == null ) || ( "" . equals ( playerNameOnSpot ) ) ) { buttonToChange . setIcon ( black_icon ) ; } else if ( myPlayerController . getPlayer2Name () . equals ( playerNameOnSpot ) ) { buttonToChange . setIcon ( red_icon ) ; } }
{ convert_time () ; java.lang.String hour = com.bitbalPage.se4351_synapps.synapps.EditNotificationActivity . pad ( mHour ) ; java.lang.String min = com.bitbalPage.se4351_synapps.synapps.EditNotificationActivity . pad ( mMinute ) ; print_notification ( noti_input . getText () . toString () , hour , min ) ; showNotification ( noti_input . getText () . toString () , hour , min ) ; }
{ android.support.v4.app.FragmentManager fragmentManager = getSupportFragmentManager () ; android.support.v4.app.FragmentTransaction fragmentTransaction = fragmentManager . beginTransaction () ; fragmentTransaction . replace ( R.id.page_body , fragment ) ; fragmentTransaction . addToBackStack ( null ) ; fragmentTransaction . commit () ; }
{ guiController . showMessage ( "You couldnt pay and are now out of the game!" ) ; guiController . removePlayer ( playerController . getCurrentPlayer () , fieldController . getFields () ) ; playerController . getPlayerList () . remove ( playerController . getCurrentPlayer () ) ; ( turn ) -- ; }
private static void rauswerfen ( int neuesFeld , int spielerNummer ) { for ( int rspielerNummer : si.projekt.maedn.Spiel.spieler . keySet () ) { si.projekt.maedn.Spieler rspieler = si.projekt.maedn.Spiel.spieler . get ( rspielerNummer ) ; for ( int spielFigurNummer : rspieler . holeSpiel )n () . keySet () ) { si.projekt.maedn.Spielfigur spielFigur = rspieler . holeSpiel ()n () . get ( spielFigurNummer ) ; if ( ( spielFigur.feldnummer ) == neuesFeld ) { spielFigur . rauswerfen () ; } } } }
{ existingProduct . setQuantityOrWeight ( java.lang.Double . valueOf ( holder.editTextQuantity . getText () . toString () ) ) ; existingProductDAO . update ( existingProduct ) ; if ( ( mOnDataChangeListener ) != null ) { mOnDataChangeListener . onDataChanged ( existingProducts ) ; } notifyDataSetChanged () ; }
private eu.europeana.corelib.definitions.edm.beans.FullBean retrieveRecord ( europeanaId ) throws eu.europeana.corelib.edm.exceptions.MongoDBException , eu.europeana.corelib.edm.exceptions.MongoRuntimeException , eu.europeana.corelib.neo4j.exception.Neo4JException { long startTime = java.lang.System . currentTimeMillis () ; eu.europeana.corelib.definitions.edm.beans.FullBean result = searchService . findById ( europeanaId , false , "Timeout ) ; if ( eu.europeana.api2.v2.web.controller.ObjectController.LOG . isDebugEnabled () ) { eu.europeana.api2.v2.web.controller.ObjectController.LOG . debug ( ( ( "SearchService findByID took " + ( ( java.lang.System . currentTimeMillis () ) - startTime ) ) + " ms" ) ) ; } return result ; }
{ android.util.Log . d ( com.gcw.sapienza.places.ShareFragment.TAG , e . getMessage () ) ; }
{ super . onCreate ( savedInstanceState ) ; android.util.Log . i ( "SalesforceDroidGapActivity.onCreate" , "onCreate called" ) ; super . onCreate ( savedInstanceState ) ; bootconfig = com.salesforce.androidsdk.rest.BootConfig . getBootConfig ( this ) ; clientManager = buildClientManager () ; passcodeManager = com.salesforce.androidsdk.app.SalesforceSDKManager . getInstance () . getPasscodeManager () ; userSwitchReceiver = new com.salesforce.androidsdk.ui.sfhybrid.SalesforceDroidGapActivity.DroidGapUserSwitchReceiver () ; registerReceiver ( userSwitchReceiver , new android.content.IntentFilter ( com.salesforce.androidsdk.accounts.UserAccountManager.USER_SWITCH_INTENT_ACTION ) ) ; }
{ resultLodgings . addAll ( jj ) ; adapter . notifyDataSetChanged () ; nextOffset = resultLodgingList . getStatistics () . getOffsetNext () . toString () ; }
new com.example.vikramjeet.challengerapp.adapters.ChallengeArrayAdapter ( getActivity () , challenges )
{ caesar.interpreter.buildin.StringClass.logger . log ( java.util.logging.Level.FINE , "addString from StringClass is called." ) ; java.lang.String opa = interpreter . getStack () . popString () ; java.lang.String opb = interpreter . getStack () . popString () ; java.lang.String result = opa + opb ; interpreter . getStack () . pushString ( result ) ; }
p1 . getTotalVotesSite ( voteSite )
us.kbase.narrativem.store.db.test.ValidatorTest . validate ( 8 )
com.ctrip.zeus.util.RollingTrafficStatus . extractStubStatusNumber ( rawStubStatus )
{ astnodes.ASTNode topOfItemStack = itemStack . peek () ; if ( ( stack . size () ) > 0 ) { if ( ( stack . peek () . parentCompound ) == topOfItemStack ) { stack . pop () ; } } }
{ int [] numbers ; for ( int num : numbers ) { tree . insert ( num ) ; } int key = 2 ; assertEquals ( 2 , tree . search ( key ) ) ; int key2 = 2234 ; assertEquals ( 0 , tree . search ( key2 ) ) ; }
if ( uuid != null ) { throw new io.ddf.exception.DDFException ( java.lang.String . format ( "Cannot find ddf with uri %s" , uri ) ) ; }
Result . writeBack ( commonKey , record , tx )
static boolean anyPlayers ( java.util.List < org.bukkit.entity.Entity > out ) { java.util.List < org.bukkit.entity.Entity > out = me.badbones69.blockparticles.Api . getNearbyEntities ( loc , range , range , range ) ; if ( ! ( out . isEmpty () ) ) { for ( org.bukkit.entity.Entity e : out ) { if ( e instanceof org.bukkit.entity.LivingEntity ) { org.bukkit.entity.LivingEntity en = ( ( org.bukkit.entity.LivingEntity ) ( e ) ) ; if ( en instanceof org.bukkit.entity.Player ) { return true ; } } } } return false ; }
user . getPassword () . equals ( com.weddingcrashers.repositories.Utils . hashPassword ( password ) )
size . isValid ( true )
public static void main ( java.lang.String [] args ) { int [] play = new int [] { 4 , 8 , 5 , 2 , 3 , 5 , 1 , 6 , 4 , 0 } ; java.lang.System.out . println ( RightWingGame . solveGameRecursively ( play , RightWingGame.DEFAULT_VALUE , RightWingGame.DEFAULT_VALUE ) ) ; }
{ engine . refreshUpgradeOverlay () ; upgradeOverlayVisible = true ; Gdx.input . setInputProcessor ( upgradeOverlay ) ; }
{ java.lang.String description = bldg . getExteriorDescription () ; displayBuilding ( description , imagePath ) ; _currentBldg = bldg ; displayBuilding ( description , imagePath ) ; _currentBldg = bldg ; }
private void setupAuthenticatedModel ( java.lang.String results , org.springframework.ui.ModelMap model ) { java.util.List < org.balaguta.currconv.data.entity.Conversion > history = conversionService . getHistory () ; if ( ( history . isEmpty () ) || ( results == null ) ) { model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history ) ; } else { model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history . subList ( 1 , history . size () ) ) ; model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION , history . get ( 0 ) ) ; } }
{ switch ( shift . getName () ) { case "Early Morning." : return fMorningShift ; case "Morning." : return java.lang.Integer . toString ( ( ( java.lang.String ) ( "Late Morning." ) ) ) ; case "Late Morning." : return new java.util.ArrayList < java.lang.String > () ; case "Surgery." : return surgeryShift ; default: java.lang.System.out . println ( "Not a valid shift" ) ; break; } }
{ T data = queue . poll ( 100 , java.util.concurrent.TimeUnit.MICROSECONDS ) ; page . put ( data ) ; com.concurrent.sdk.transfer.ConcurrentWriteTransfer.logger . debug ( "memoryPage put data|{}, page size|{}" , data , page . size () ) ; }
if ( ( ( shouldShowAppodealAdBanner ) && ( ( ru.aviasales.template.ui.adapter.AdAdapter.APPODEAL_BANNER_POSITION ) < position ) ) && ( ( ru.aviasales.template.ui.adapter.AdAdapter.APPODEAL_BANNER_POSITION ) < position ) ) count ++ ;
{ view = inflater . inflate ( R.layout.fragment_future , container , false ) ; fab = view . findViewById ( R.id.futureFab ) ; eventRecycler = view . findViewById ( R.id.eventsRecycler ) ; eventRecycler . setLayoutManager ( new android.support.v7.widget.LinearLayoutManager ( getActivity () . getApplicationContext () ) ) ; tvNoData = view . findViewById ( R.id.tvNoFutureData ) ; onClickListeners () ; checkPermission () ; d . getTime () ; return view ; }
( ( ( ( ( ( ( "Rect [" + ( x0 ) ) + ", " ) + ( y0 ) ) + "][ w:" ) + ( x0 ) ) + ", h:" ) + ", h:" ) + ( y1 )
{ double L = java.lang.Math . exp ( ( - 1 ) ) ; double p = 1.0 ; double k = 0.0 ; do { k = k + 0.5 ; p *= java.lang.Math . random () ; } while ( p > L ) ; double numero = 1 / ( k - 0.1 ) ; numero = redondear ( ( numero * 10 ) ) ; return numero ; }
o instanceof org.yccheok.jstock.engine.Board
{ final com.clouway.adapter.rest.Expense expenses = new com.clouway.adapter.rest.Expense ( "type" , "invalid funds" ) ; com.clouway.adapter.http.ExpensesPage page = mockExpenses ( expenses ) ; com.clouway.adapter.http.ExpensesPage page = mockExpenses ( expenses ) ; com.clouway.adapter.jdbc.ExpensesRepository repository = new com.clouway.adapter.jdbc.PersistenceExpensesRepository ( com.google.inject.util.Providers . of ( service ) ) ; page . add ( request ) ; java.util.List < com.clouway.adapter.rest.Expense > one = repository . find ( 1 ) ; assertTrue ( one . isEmpty () ) ; }
query ( connection , sql )
{ cz.fidentis.controller.Comparison2Faces bc = cz.fidentis.gui.GUIController . getSelectedProjectTopComponent () . getProject () . getSelectedComparison2Faces () ; bc . getHDP () . getInfo () . setColorScheme ( cz.fidentis.visualisation.ColorScheme . values () [ jComboBox6 . getSelectedIndex () ] ) ; }
( ( java.lang.Thread . currentThread () . getId () ) + ( parentIdentity ) ) + ": ;
{ java.lang.System.out . println ( org.spongepowered.api.world.gen.GenerationPopulator ) . add ( ( ( org.spongepowered.api.world.gen.GenerationPopulator ) ( this . netherCaveGenerator ) ) ) ; this . genNetherBridge . worldObj = worldObj ; generator . getGenerationPopulators () . add ( ( ( org.spongepowered.api.world.gen.GenerationPopulator ) ( this . genNetherBridge ) ) ) ; generator . getPopulators () . add ( ( ( org.spongepowered.api.world.gen.Populator ) ( this . genNetherBridge ) ) ) ; }
{ mControllerModel . setEnable ( false ) ; mControllerModel . getParent () . removeChildObject ( mControllerModel ) ; mControllerModel = null ; }
{ org.opendaylight.yangtools.yang.binding.InstanceIdentifier < org.opendaylight.yang.gen.v1.urn.opendaylight.genius.idmanager.rev160406.id.pools.id.pool.IdEntries > idEntries = org.opendaylight.yangtools.yang.binding.InstanceIdentifier . builder ( org.opendaylight.yang.gen.v1.urn.opendaylight.genius.idmanager.rev160406.id.pools.IdPool . class , new org.opendaylight.yang.gen.v1.urn.opendaylight.genius.idmanager.rev160406.id.pools.IdPoolKey ( poolName ) ) . child ( org.opendaylight.yang.gen.v1.urn.opendaylight.genius.idmanager.rev160406.id.pools.id.pool.IdEntries . class , new org.opendaylight.yang.gen.v1.urn.opendaylight.genius.idmanager.rev160406.id.pools.id.pool.IdEntriesKey ( idKey ) ) . build () ; return idEntries ; }
{ this . abortedBy = playerId ; if ( ( this . size ) == 0 ) { this . addChanged () ; this . notifyObservers () ; } }
new java.util.HashMap < java.lang.String , java.lang.Integer > ()
{ eventRowIndex = itemTable . getCellForEvent ( event ) . getRowIndex () ; itemDTO . setId ( java.lang.Integer . parseInt ( itemTable . getText ( eventRowIndex , 0 ) ) ) ; itemDTO . setName ( itemTable . getText ( eventRowIndex , 1 ) ) ; itemDTO . setPrice ( java.lang.Integer . parseInt ( itemTable . getText ( eventRowIndex , 2 ) ) ) ; }
{ while ( ms == ( msec ) ) { try { free . await () ; } catch ( java.lang.InterruptedException e ) { java.lang.Thread . currentThread () . interrupt () ; } } free . signalAll () ; }
protected void applyCenterCrop ( @ android.support.annotation.NonNull android.view.TextureView view ) { float xScale = ( ( float ) ( view . getWidth () ) ) / ( intrinsicVideoSize.x ) ; float yScale = ( ( float ) ( view . getHeight () ) ) / ( intrinsicVideoSize.y ) ; float scale = java.lang.Math . max ( xScale , yScale ) ; xScale = scale / xScale ; yScale = scale / yScale ; applyScale ( view , transformMatrix , xScale , yScale ) ; }
( savedInstanceState != null )
{ new java.lang.String [] { "charX" , "charY" } , new java.lang.String [] { "inCall" } }
private void sendTrackUpdate () { android.content.Intent i = new android.content.Intent () ; i . setAction ( org.y20k.trackbook.ACTION_TRACK_UPDATED ) ; i . putExtra ( org.y20k.trackbook.EXTRA_TRACK , mTrack ) ; i . putExtra ( org.y20k.trackbook.EXTRA_LAST_LOCATION , mCurrentBestLocation ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( getApplicationContext () ) . sendBroadcast ( i ) ; }
{ java.util.Scanner scanner = new java.util.Scanner ( java.lang.System.in ) ; if ( ! ( scanner . next () . isEmpty () ) ) { result = scanner . next () . get ( 0 ) . trim () ; date = scanner . next () . toString () ; date = ( java.lang.System.in ) ( 18 ) ; i ++ ) { for ( int i = 0 ; i < 18 ; i ++ ) {Message01.IDCard.arr [ i ] = date01.IDCard.str . substring ( i , ( i + 1 ) ) ; } } } }
convertToPluginResult ( PluginResult.Status.ERROR , databaseError )
{ java.util.List object = employee . fetchRecords ( null , null , null , null , null , null ) ; employee = ( ( com.sample.Employee ) ( object . get ( 0 ) ) ) ; try { android.util.Log . e ( "RESULT" , ( ( new java.lang.String ( employee . getBytes () , "ISO-8859-15" ) ) + "" ) ) ; } catch ( java.io.UnsupportedEncodingException e ) { e . printStackTrace () ; } }
if ( ( p2Index ) == ( - 1 ) ) { p2Index = 10 ; } else if ( ( p2Index ) == 10 ) { p2Index = 7 ; }
checkIfExist ( directory )
java.lang.String tag
if ( ( PADepTuple.srl ) != ( predIndex ) ) return false ;
public void setColor ( java.awt.Color color ) { if ( ( ( this . color ) != null ) && ( this . color . equals ( color ) ) ) return; this . color = color ; fireFieldChanged ( new ru.foxling.graphit.config.FieldEvent ( this , FieldEvent.UPDATE , "color" ) ) ; }
@ org.testng.annotations.Test ( dataProvider = "domainDataProvider" ) public void testGetZoneName ( final java.lang.String requestHostname , final java.lang.String requestHeader , final java.util.List < java.lang.String > serviceBaseBuffer ) { org.springframework.mock.web.MockHttpServletRequest req = new org.springframework.mock.web.MockHttpServletRequest () ; req . setServerName ( requestHostname ) ; java.lang.String id = com.ge.predix.uaa.token.lib.HttpServletRequestUtil . getZoneName ( req , serviceBaseDomains , serviceConfigHeaders ) ; org.testng.Assert . assertEquals ( 0 , 0 , 0 ) ; org.testng.Assert . assertEquals ( 0 , 0 ) ; }
{ oldlist = pers.zylo117.spotspotter.fileprocessor.FIndexReader . getFIndex ( CentralControl.monitorPath , false ) ; newlist . removeAll ( oldlist ) ; if ( ! ( newlist . isEmpty () ) ) oldlist = newlist ; pers.zylo117.spotspotter.fileprocessor.FIndexReader . indexProcess ( CentralControl.monitorPath , oldlist ) ; }
( ( io.netty.handler.codec.http.HttpResponseStatus.OK ) != ( ( io.netty.handler.codec.http.HttpResponseStatus.OK ) + 1 ) ) || ( null != ( messenger . getRedirectTo () ) )
new java.util.ArrayList < java.lang.String > ()
feed . onLocationChanged ( location , new java.util.Date () )
{ displayToast ( ( "Total" ) + ( java.lang.String . valueOf ( com.group6a_hw03.group6a_hw03.Trivia_Activity.fQuestionData . size () ) ) ) ; displayDetails () ; }
{ service . onDestroy () ; mNameService . remove ( targetInfo.name ) ; java.lang.Object token = findTokenByService ( service ) ; mTokenServices . remove ( token ) ; mServiceTaskIds . remove ( token ) ; me.ele.amigo.compat.QueuedWorkCompat . waitToFinish () ; }
{ java.util.Map.Entry pair = ( ( java.util.Map.Entry ) ( it . next () ) ) ; if ( ! ( pair . getValue () . equals ( "none" ) ) ) { return true ; } }
{ if ( ( mCatalogueDetails ) != null ) return; java.io.File catalogDetailsFile = getLocalCatalogDetailsFile () ; if ( ! ( catalogDetailsFile . exists () ) ) return; if ( org.jaya.indexsync.IndexCatalogue.sbCatalogueDetailsUpdateInProgress ) return; org.json.simple.parser.JSONParser parser = new org.json.simple.parser.JSONParser () ; mCatalogueDetails = ( ( org.json.simple.JSONObject ) ( parser . parse ( new java.io.FileReader ( catalogDetailsFile ) ) ) ) ; }
{ java.util.List < com.intellij.plugins.h element.model.H queryParameterModel > _parameters = null ; com.intellij.plugins.h query.model.H query entry parameterList = com.intellij.plugins.h query.util.UsefulPsiTreeUtil . getChild ( this . hatMethod , com.intellij.plugins.h query.model.H query entry . class ) ; _parameters = new java.util.ArrayList < com.intellij.plugins.h element.model.H >ParameterModel > () ; for ( com.intellij.plugins.h element.model.H queryParameter parameter : parameterList . getParameterList () ) { _parameters . add ( new com.intellij.plugins.h element.model.H queryParameterModel ( parameter ) ) ; } return _parameters ; }
value . getCanonicalName ()
transferStrategyBuilder . withMasterObjectList ( getBulkJobSpectraS3Response . getResult () )
{ mMultiListHeadline . setText ( new android.support.annotation.String () ) ; mMultiListMessage . setText ( message ) ; mMultiListIcon . setImageResource ( icon ) ; mMultiListIcon . setVisibility ( View.VISIBLE ) ; mMultiListProgress . setVisibility ( View.GONE ) ; }
for ( hacking.to.the.gate.Jet jet : mEnemyJets ) { if ( ! ( jet . isDead () ) ) { jet . draw ( canvas ) ; } }
new symjava.symbolic.utils.FuncClassLoader < symjava.bytecode.BytecodeVecFunc > ( java.lang.Thread . currentThread () . getContextClassLoader () )
{ int leftDeep = deep ( root.left ) ; int rightDeep = deep ( root.right ) ; if ( leftDeep == rightDeep ) { return ( ( int ) ( ( java.lang.Math . pow ( 2 , leftDeep ) ) + ( countNodes ( root.right ) ) ) ) ; } else return ( ( int ) ( java.lang.Math . pow ( 2 , rightDeep ) ) ) + ( countNodes ( root.left ) ) ; }
{ carList . add ( car ) ; java.lang.System.out . println ( ( ( "Car from " + from ) + "has to wait in line" ) ) ; if ( light . isGreen ( from ) ) { java.lang.System.out . println ( "Its already green" ) ; this . announceLeaving ( new data.analytics.smart.traffic.model.movement.Direction ( from ) , car ) ; } }
assertEquals ( "Expecting emtpy list" , 0 , drmJob . getCommandLine () . size () )
{ this . classTreeNode = classTreeNode ; bantam.visitor.Class_ classASTNode = this . classTreeNode . getASTNode () ; this . fieldScope = this . classTreeNode . getVarSymbolTable () . getCurrScopeLevel () ; methodScope = this . classTreeNode . getMethodSymbolTable () . getCurrScopeLevel () ; classASTNode . accept ( this ) ; }
service . updateToDo ( taskThing . getId () , taskThing )
private void generateMappingColumns ( java.util.Map < java.lang.String , model.data.DataColumn > mappingNewNameToOldColumns ) { for ( java.util.Map.Entry < java.lang.String , model.data.DataColumn > entry : mappingNewNameToOldColumns . entrySet () ) { model.data.DataColumn newColumn = new model.data.DataColumn ( entry . getKey () , null , entry . getValue () . getType () ) ; this . addColumn ( newColumn ) ; mappingColumns . put ( entry . getValue () , newColumn ) ; } }
onRelease ( 0 , ( ( java.lang.Integer ) ( ( ( java.lang.String ) ( null ) ) ) ) )
{ song1 = Gdx.audio . newMusic ( Gdx.files . internal ( "NARC.mp3" ) ) ; song2 = Gdx.audio . newMusic ( Gdx.files . internal ( "Rose the Wraith.mp3" ) ) ; song3 = Gdx.audio . newMusic ( Gdx.files . internal ( "ABIIISMO - ( Uprising.mp3" ) ) ) ; song3 . play () ; song1 . setVolume ( 0.2F ) ; song1 . setOnCompletionListener ( new com.badlogic.gdx.audio.Music.OnCompletionListener () { @ java.lang.Override public void onCompletion ( com.badlogic.gdx.audio.Music music ) { song1 . play () ; song3 . play () ; } } ) ; }
{ java.lang.String [] lands = ( ( java.lang.String [] ) ( com.essentials.mcoldlife.main.CustomConfig . getArray ( reference.FILE_LANDS , reference.CONFIG_FOLDER . toString () , reference.PATH_LANDS ) ) ) ; for ( java.lang.String land : lands ) { com.mcoldlife.objects.OLLand l = new com.mcoldlife.objects.OLLand ( land ) ; com.mcoldlife.objects.RPGManager . addLand ( land , l ) ; } }
public static java.lang.String getCurrentTitle ( boolean getStringing ) { return ( br.com.carlosrafaelgn.fplay.playback.Player.thePlayer ) == null ? "" : ( br.com.carlosrafaelgn.fplay.playback.Player.localSong ) == null ? br.com.carlosrafaelgn.fplay.playback.Player.thePlayer . getText ( R.string.nothing_playing ) . toString () : true ; }
if ( ( ( registration ) != null ) && ( ( registration . getInstance () ) != ( instance ) ) ) { throw new java.lang.IllegalArgumentException ( "Instance must be same." ) ; }
testScriptFile ( SCRIPT_TEXT , argList , EXPECTED_PATTERN )
{ mListener . onDeleteBpmClick ( mGroups . get ( groupPosition ) . children . get ( childPosition ) . getId () , groupPosition , childPosition ) ; }
protected java.lang.String getDataStorePath ( final java.lang.String dataStore , final java.lang.String context ) { if ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.newDraft ) { if ( ( "config" . contains ( dataStore ) ) || ( "operational" . contains ( dataStore ) ) ) { return ( ( "/" + ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.RESTCONF_DRAFT ) ) + "/data" ) + context ; } else { return ( ( "/" + ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.RESTCONF_DRAFT ) ) + "/operations" ) + context ; } } return ( "/" + dataStore ) + context ; }
{ java.lang.String returnString = "(" + ( this . operator . todRealString () ) ; java.util.Iterator < dl.syntax.Term > subTermIterator = getSubTerms () . iterator () ; while ( subTermIterator . hasNext () ) { returnString = ( returnString + " " ) + ( subTermIterator . next () . todRealString () ) ; } returnString ; }
{ dataList . add ( HttpHeaders.LINE_SEPARATOR_BYTES ) ; dataList . add ( this . border ) ; dataList . add ( HttpHeaders.LINE_SEPARATOR_BYTES ) ; dataList . add ( buildHeaders ( name , fileName , contentType ) ) ; dataList . add ( data ) ; }
{ int result = 0 ; java.sql.Connection connection = source . getConnection () ; java.sql.PreparedStatement statement = null ; statement = connection . prepareStatement ( libraryDatabaseUtility.repository.BookDAOImpl.DELETE_RECORD_SQL ) ; statement . setLong ( 1 , bookId ) ; result = statement . executeUpdate () ; return result ; }
sleepTime = ( com.afunx.ble.blelitelib.operation.BleWriteCharacterisitcNoResponsePacketOperation2.PACKET_INTERVALS [ select ] ) - ( ( int ) ( ( java.lang.System . currentTimeMillis () ) - ( com.afunx.ble.blelitelib.operation.BleWriteCharacterisitcNoResponsePacketOperation2.lastTimestamp ) ) )
try { iport = java.lang.Integer . parseInt ( port ) ; localServer = server.ServerFactory . createServer ( iport ) ; localServer . startUp () ; this . connect ( "localhost" , ( "" + port ) ) ; }
{ mMap = googleMap ; mMap . moveCamera ( com.google.android.gms.maps.CameraUpdateFactory . newLatLngZoom ( loyola , ( ( float ) ( maxZoom ) ) ) ) ; }
( ( java.lang.String ) ( elementsPerLine ) ) , elementsPerLine , java.lang.System.out )
{ infoViewController . showSprint ( sprint ) ; sprintBlViewController . setAgilePrj ( agilePrj , agilePrj . getSprintBacklogList ( sprint ) ) ; }
fuelFiguresGroup . getGroupObject ( fuelFigure )
{ foundUsers = com.shooting_stars.project.logic.SearchLogic . findUsers ( name , surname , city , country , dateOfBirthMin , dateOfBirthMax , page ) ; usersAmount = com.shooting_stars.project.logic.SearchLogic . countUsers ( name , surname , city , country , dateOfBirthMin , dateOfBirthMax ) ; }
setSelectedImage ( ( ( org.openstreetmap.josm.plugins.mapillary.MapillaryImage ) ( getSelectedImage () ) ) , true )
{ org.junit.Assert . assertEquals ( ( - 3.0 ) ) ; org.junit.Assert . assertEquals ( 0.0E9 ) ; org.junit.Assert . assertEquals ( 0.0E9 ) ; org.junit.Assert . assertEquals ( 0.0E9 ) ; org.junit.Assert . assertEquals ( java.lang.Double . valueOf ( ( - 3.0E9 ) ) ) ; org.junit.Assert . assertEquals ( java.lang.Double . valueOf ( ( - 3.0E9 ) ) ) ; }
{ if ( item == null ) { throw new java.lang.NullPointerException () ; } if ( ( N ) == ( array.length ) ) resize ( ( ( array.length ) * 2 ) ) ; array [ ( ++ ( last ) ) ] = item ; N = ( last ) + 1 ; }
{ mListJenkinsBuildInfoFragment = org.addhen.bir1.ui.fragment.ListJenkinsBuildInfoFragment . newInstance () ; if ( ! ( mPresenter . isAppConfigured () ) ) { launch . settings () ; } getFragmentManager () . beginTransaction () . replace ( R.id.list_container , mListJenkinsBuildInfoFragment ) . commit () ; }
com = findPath ( root , r.updatedAt . getMetadata () . getName () )
{ addressUseReg = false ; long address = calAddress ( pc , this . address ) ; if ( addressUseReg ) { address += com.zms.zpc.execute.NumberUtils . asSigned ( this . disp , this . >Width ) ; } else { address += this . > ; } com.zms.zpc.emulator.reg.Segment seg = ( ( com.zms.zpc.emulator.reg.Segment ) ( pc.cpu.regs . getReg ( setu.segBase ) ) ) ; return seg . getAddress ( address ) ; }
{ int nodeNum ; while ( ( parent ) != null ) { parent . lookupFunction ( name ) ; } for ( mTable t : parent.children ) { nodeNum = ( t . getSymbol ( 0 ) . getType () . equals ( "function name" ) ) ? 0 : 1 ; if ( t . getSymbol ( nodeNum ) . getName () . equals ( name ) ) return t ; } return t ; }
answer . charAt ( i )
org.exist.collections.Collection.LOG . error ( e . getMessage () , e )
listener . onLongPress ()
{ com.sun.messaging.jmq.jmsserver.core.Packet . = getPacketObject () ; if ( ( new com.sun.messaging.jmq.jmsserver.core.Packet ) == null ) { return new com.sun.messaging.jmq.jmsserver.core.Packet2 = getPacketObject () ; } if ( ( m != null ) || ( destroyed ) ) { return new ; } if ( ! ( persist ) ) { return null ; } }
{ url.CreateLink short_link = new url.CreateLink ( this . row ) ; java.lang.String shortURL = short_link . encodeLongURL () ; long hashURL = short_link . getShortURLHash () ; try { this . insertFactory . insertShortLink ( hashURL , shortURL , this . row ) ; } catch ( java.lang.Exception e ) { helper.Loghandler . log ( ( "trying to insert the url " + ( e . toString () ) ) , "fatal" ) ; return false ; } return true ; }
{ activityList . add ( new ri e.alarmsmsapp.view.ruleactivitys.SenderSelection () ) ; activityList . add ( new ri (.alarmsmsapp.view.ruleactivitys.AlarmTimeSettings () ) ) ; activityList . add ( new ri e.alarmsmsapp.view.ruleactivitys.WordSelection () ) ; activityList . add ( new ri e.alarmsmsapp.view.ruleactivitys.SoundSelection () ) ; activityList . add ( new ri (.alarmsmsapp.view.ruleactivitys.AnswerCreation () ) ) ; activityList . add ( new ri e.alarmsmsapp.view.ruleactivitys.TwitterPostSelection () ) ; activityList . add ( new ri (.alarmsmsapp.view.ruleactivitys.TwitterPostSelection () ) ) ; activityList . add ( new ri (.alarmsmsapp.view.ruleactivitys.TwitterPostSelection () ) ) ; }
{ this . wrapper . removeAll () ; this . wrapper . add ( screen , java.awt.BorderLayout.CENTER ) ; this . fireActionPerformed ( new java.awt.event.ActionEvent ( this , java.awt.event.ActionEvent.ACTION_PERFORMED , "Change" ) ) ; this . setLocationRelativeTo ( null ) ; this . setVisible ( true ) ; }
( null != e )
while ( currentElement != null ) { currentElement = currentElement . getPrevSibling () ; }
{ if ( ctx . getChild ( 0 ) . toString () . equals ( "void" ) ) { enterresult = true ; if ( ctx . getChild ( 0 ) . toString () . equals ( "void" ) ) bw . write ( ( ( ctx . getChild ( 0 ) . toString () ) + " " ) ) ; } }
( ( shot . getStartFrame () ) < frame )
{ au.com.agic.apptesting.steps.StepEventHandling.SCREENSHOT_UTILS . takeScreenshot ( ( " " + ( scenario . getName () ) ) , featureState ) ; final boolean clearDriver = java.lang.Boolean . parseBoolean ( au.com.agic.apptesting.steps.StepEventHandling.SYSTEM_PROPERTY_UTILS . getProperty ( Constants.NEW_BROWSER_PER_SCENARIO ) ) ; synchronized ( au.com.agic.apptesting.State.THREAD_DESIRED_CAPABILITY_MAP ) { if ( clearDriver ) { State.THREAD_DESIRED_CAPABILITY_MAP . clearWebDriverForThread ( true ) ; } } }
public static org.alien4cloud.tosca.model.definitions.PropertyDefinition buildPropDef ( java.lang.String type , java.lang.String entrySchema , boolean required ) { org.alien4cloud.tosca.model.definitions.PropertyDefinition propertyDefinition = new org.alien4cloud.tosca.model.definitions.PropertyDefinition () ; propertyDefinition . setType ( type ) ; propertyDefinition . setRequired ( required ) ; propertyDefinition . setPassword ( false ) ; propertyDefinition . setEntrySchema ( org.alien4cloud.tosca.variable.PropertyDefinitionUtils . buildPropDef ( entrySchema , true ) ) ; return propertyDefinition ; }
private void getInterest () { int datediff = ( seconddate ) - ( firstdate ) ; rate = 0.05 / 365 ; double ratetime = java.lang.Math . pow ( ( 1 + ( rate ) ) , datediff ) ; balance = ( balance ) * ratetime ; firstdate = seconddate ; }
{ app . setTargetFrameRate ( 60 ) ; org.newdawn.slick.AppGameContainer game = new org.newdawn.slick.AppGameContainer ( new graphique.StateGame () , graphique.StateGame.width , graphique.StateGame.height , false ) ; game . setShowFPS ( true ) ; game . start () ; }
this . config . set ( ( ( manager . getPluginName () ) + "_COMMENT_" ) )
{ set ( com.intel.genomicsdb.GenomicsDBConf.MPIHOSTFILE , path ) ; org.apache.log4j.Logger logger = org.apache.log4j.Logger . getLogger ( com.intel.genomicsdb.GenomicsDBConf . class ) ; java.util.Scanner scanner = new java.util.Scanner ( new java.io.FileInputStream ( path ) ) ; while ( scanner . hasNextLine () ) { java.lang.String host = scanner . nextLine () ; hosts . add ( host ) ; logger . error ( ( "host file content: " + host ) ) ; } return this ; }
"Roba random sleep " + sleepTime
if ( ipProtocol == ( org.opendaylight.faas.fabrics.vxlan.adapters.ovs.pipeline.PipelineAclHandler.PROTOCOL_ICMP ) ) { ipMmatch . setIpProtocol ( org.opendaylight.faas.fabrics.vxlan.adapters.ovs.pipeline.PipelineAclHandler.PROTOCOL_ICMP ) ; ipMmatch . setIpProtocol ( org.opendaylight.faas.fabrics.vxlan.adapters.ovs.pipeline.PipelineAclHandler.PROTOCOL_ICMP ) ; }
c = true
{ super . onActivityCreated ( savedInstanceState ) ; activity = ( ( codemagnus.com.dealokav2.BaseTabActivity ) ( getActivity () ) ) ; if ( ( activity . getSwitchCompat () ) != null ) activity . getSwitchCompat () . setVisibility ( View.VISIBLE ) ; getUserLastKnownLocation () ; activity . getToolBar () . setTitle ( "Tower List" ) ; if ( ( activity . getTowerAdapter () ) != null ) { setListAdapter ( activity . getTowerAdapter () ) ; } }
( truePositive [ i ] ) ++ ;
times ( 0 )
final com.gae.scaffolder.plugin.Context context = this . cordova . getActivity () . getApplicationContext () ;
{ game . setInitialState ( params ) ; game . evolve () ; game . evolve () ; java.util.List < com.capgemini.thegameoflife.Cell > cells = game . getAliveCell () ; org.junit.Assert . assertEquals ( cells . containsAll ( expected ) , expected . containsAll ( cells ) ) ; }
{ java.util.Date date = new java.util.Date () ; date = com.ondetemjogo.util.DateUtil . resetHour ( date ) ; java.util.Date newDate = com.ondetemjogo.util.DateUtil . resetHour ( date ) ; java.util.Calendar calendar = java.util.Calendar . getInstance () ; calendar . setTime ( newDate ) ; org.junit.Assert . assertEquals ( calendar . get ( java.util.Calendar.HOUR_OF_DAY ) , 0 ) ; org.junit.Assert . assertEquals ( calendar . get ( java.util.Calendar.HOUR_OF_DAY ) , 0 ) ; }
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/fireBase" ) public org.springframework.web.servlet.ModelAndView googleLogin ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "userloggedin" ) java.lang.String userLogged ) { if ( ! ( loggedIn . equals ( "false" ) ) ) { userLogged = loggedIn ; } java.lang.System.out . println ( ( "loggedIn: " + loggedIn ) ) ; java.lang.System.out . println ( ( "userLogged: " + userLogged ) ) ; if ( userLogged . equals ( "false" ) ) { return new org.springframework.web.servlet.ModelAndView ( "fireBase" ) ; } else { return new org.springframework.web.servlet.ModelAndView ( "location" , "userloggedin" , userLogged ) ; } }
{ int errWidth = ( ( pixelWidth ) == 0 ) ? 50 : pixelWidth ; int errHeight = ( ( pixelHeight ) == 0 ) ? 50 : pixelHeight ; setBitmap ( createErrorBitmap ( errWidth , errHeight ) ) ; ( ( react.RPromise < playn.core.Image > ) ( state ) ) . fail ( error ) ; }
public void setyDirRightHip ( mck.MatlabEngine proxy ) throws java.lang.Exception { if ( ( yDirRightHip.MoCap.length ) == ( iListLength ) ) { yDirRightHip . enterMoCapData ( commandList [ 16 ] , proxy , initTime , false ) ; } else { yDirRightHip . enterMoCapData ( commandList [ 16 ] , proxy , initTime , true ) ; } }
{ uk.ac.starlink.ttools.plot2.layer.BinBag.Bin bin = createBin ( ( ( index ) ++ ) , binValues [ ib ] ) ; if ( ( index ) >= ( binIndices [ ib ] ) ) { ( ib ) ++ ; } return bin ; }
try { int balance = getOrZero ( userId ) ; balances . put ( userId , ( balance + value ) ) ; writeLog ( "DEPOSIT" , userId , "" , value ) ; return true ; } finally { return true ; }
java.util.List < java.lang.Integer > elems = new java.util.ArrayList < java.lang.Integer > () ; if ( ( 45 . size () ) > 0 ) { return 0 ; }
com.yahoo.sketches.frequencies.ItemsSketch < java.lang.String > sketch1 = new com.yahoo.sketches.frequencies.ItemsSketch ( ( 1 < < ( com.yahoo.sketches.frequencies.Util.LG_MIN_MAP_SIZE ) ) ) ;
{ softgroup.ua.api.Automat automat = automatMapper . fromInternal ( automatService . getAutomatById ( automatId ) ) ; reply.automats . add ( gameEngine . fillSlots ( automat ) ) ; }
{ int secNum = java.lang.Integer . parseInt ( timeParts [ 2 ] ) ; int minNum = java.lang.Integer . parseInt ( timeParts [ 1 ] ) ; int hourNum = java.lang.Integer . parseInt ( timeParts [ 0 ] ) ; oneHourTimerDelay = ( ( ( 60 - secNum ) + ( 60 * ( 10 - minNum ) ) ) + ( ( 24 - hourNum ) * 3600 ) ) * 1000 ; }
public main.Task1Project.pages.tab_pages.AbstractPage clickOnMoreOptions ( main.Task1Project.Item item ) { org.openqa.selenium.WebElement button = extractText ( item ) ; java.lang.String buttonText = button . getText () . trim () ; if ( buttonText . equals ( optionsButtonName ) ) { LoggerWrapper.myLogger . log ( java.util.logging.Level.INFO , "clicking on N button" ) ; button . click () ; return null ; } return null ; }
( yC )
{ Editor.currentFile = browseFile () ; javax.swing.JOptionPane . showMessageDialog ( null , ( ( "Scenerio file '" + ( Editor.currentFile ) ) + "' is selected" ) ) ; }
getNodeConfigurationByUuid ( iMember . getUuid () )
{ myCookie . setMaxAge ( 0 ) ; com.servlet.EnterServlet.sessionTable . remove ( com.util.SessionUtil . getSessionId ( myCookie . getValue () ) ) ; response . addCookie ( myCookie ) ; javax.servlet.RequestDispatcher dispatcher = request . getRequestDispatcher ( "home.jsp" ) ; dispatcher . forward ( request , response ) ; return; }
{ org.exbin.framework.deltahex.HexStatusApi.MemoryMode memoryMode = new org.exbin.framework.deltahex.HexStatusApi.MemoryMode memoryMode = null ; if ( ( codeArea . getEditationAllowed () ) == ( org.exbin.deltahex.EditationAllowed.READ_ONLY ) ) { memoryMode = null ; } else if ( ( codeArea . getData () ) instanceof org.exbin.deltahex.delta.DeltaDocument ) { memoryMode = newStatusApi.MemoryMode.DELTA_MODE ; } hexStatus . setMemoryMode ( memoryMode ) ; }
{ selector . setVisible ( true ) ; selector . setCenterX ( event . getSceneX () ) ; selector . setCenterY ( event . getSceneY () ) ; xInput . setText ( java.lang.Double . toString ( event . getSceneX () ) ) ; yInput . setText ( java.lang.Double . toString ( event . getSceneY () ) ) ; selector . setVisible ( false ) ; }
{ org.h2.table.Table table = readTableOrView () ; command . setTable ( table ) ; }
@ java.lang.SafeVarargs public static < V , T > java.util.Comparator < T > propertyComparator ( java.lang.String propertyName , V . . . propertyValues ) { org.apache.commons.lang3.Validate . notBlank ( propertyName , "propertyName can't be blank!" ) ; org.apache.commons.lang3.Validate . notNull ( propertyValues , "propertyValues can't be null!" ) ; return com.feilong.core.util.comparator.BeanComparatorUtil . propertyComparator ( propertyName , com.feilong.core.bean.ConvertUtil . toList ( propertyValues ) ) ; }
new java.lang.Thread ( new java.lang.Runnable () { @ java.lang.Override public void run () { try { java.lang.Thread . sleep ( 2000 ) ; } catch ( java.lang.InterruptedException ex ) {} finally { de.adorsys.quiz.helper.GpioHelper . restart () ; } } } ) . run ()
{ org.eclipse.ocl.pivot.Type _type = e . getType () ; final java.lang.String s = fr.emn.atlanmod.uml.casestudy.rewrite.OCL . gen ( _type ) ; if ( ( ( com.google.common.base.Objects . equal ( s , "Set" ) ) || ( com.google.common.base.Objects . equal ( s , "OrderedSet" ) ) ) || ( com.google.common.base.Objects . equal ( s , "Sequence" ) ) ) { return true ; } else { return false ; } }
{ if ( ( blocksChanged ) > 0 ) { mmdanggg2.cste.util.CSTELogger . logDebug ( ( ( blocksChanged ) + " blocks were changed." ) ) ; str = net.minecraft.client.resources.I18n . format ( "commands.cste.fill.success" , blocksChanged ) ; } else { mmdanggg2.cste.util.CSTELogger . logDebug ( "No blocks changed" ) ; str = net.minecraft.client.resources.I18n . format ( "commands.cste.fill.nochange" ) ; } clearAll () ; return str ; }
equalTo ( expectedChecksum )
{ java.lang.String articleName = comphuman.task2.distanceReading.RunnerHelper . extractArticleName ( wikiLink ) ; java.lang.String linkToHisDiscussion = comphuman.task2.distanceReading.RunnerHelper . extractHisDiscussionLink ( linkToDiscussion ) ; comphuman.task2.distanceReading.GermanWikiArticleDiscussionAnalyzer articleAna = new comphuman.task2.distanceReading.GermanWikiArticleDiscussionAnalyzer ( linkToDiscussion , articleName ) ; }
{ java.lang.String filename = java.lang.System . getProperty ( "com.oracle.st.xmldb.pm.ConnectionParameters" , com.oracle.st.pm.json.movieTicketing.utilitiy.DBConnection.DEFAULT_CONNECTION_DEFINITION ) ; java.io.File connectionProperties = new java.io.File ( filename ) ; return com.oracle.st.pm.json.movieTicketing.utilitiy.DBConnection.gson . fromJson ( new java.io.FileReader ( connectionProperties ) , com.oracle.st.pm.json.movieTicketing.utilitiy.DBConnection . class ) ; }
response . getWriter () . write ( "" )
public java.lang.String toString ( com.google.code.or.common.glossary.Column column ) { java.lang.String value = null ; if ( column instanceof com.google.code.or.common.glossary.column.BlobColumn ) { value = new java.lang.String ( ( ( com.google.code.or.common.glossary.column.BlobColumn ) ( column ) ) . getValue () ) ; } else if ( ( column . getValue () ) != null ) { value = column . toString () ; } return value ; }
{ while ( ( 0 ) == ( tupleId ) ) { com.dipaan.bgcolor.Tuple tuple = com.dipaan.bgcolor.Tuple tuple ; if ( tuple . getId () . equals ( tupleId ) ) { java.lang.System.out . println ( tupleId ) ; } else if ( tuple . isExpired () ) { java.lang.System.out . println ( 0 ) ; availableQueue . offer ( tuple ) ; } } }
try { org.openntf.domino.Database parentDb = null ; if ( db instanceof org.openntf.domino.Database ) { parentDb = ( ( org.openntf.domino.Database ) ( db ) ) ; } else { parentDb = fromLotus ( db , Database.SCHEMA , this ) ; } return fromLotus ( getDelegate () . getCalendar ( toLotus ( db ) ) , true ) ; }
{ java.util.List < siena.base.test.model.PersonLongAutoID > people = pm . createQuery ( siena.base.test.model.PersonLongAutoID . class ) . filter ( "id" ) . fetch () ; assertNotNull ( people ) ; assertEquals ( 2 , people . size () ) ; assertEquals ( siena.base.test.BaseAsyncTest.LongAutoID_CURIE , people . get ( 0 ) ) ; assertEquals ( siena.base.test.BaseAsyncTest.LongAutoID_EINSTEIN , people . get ( 1 ) ) ; }
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { switch ( item . getItemId () ) { case R.id.variantIos : com.vanniktech.emoji.EmojiManager . install ( new com.vanniktech.emoji.ios.IosEmojiProvider () ) ; finish () ; return true ; case R.id.variantEmojiOne : com.vanniktech.emoji.EmojiManager . install ( new com.vanniktech.emoji.one.EmojiOneProvider () ) ; } return true ; }
public boolean equals ( java.lang.Object o ) { return ( header . equals ( ( ( simfinder.FieldValue ) ( o . getHeader () ) ) ) ) && ( value . equals ( ( ( simfinder.FieldValue ) ( o . getValue () ) ) ) ) ; }
{ for ( int i = 0 ; i < ( events . size () ) ; i ++ ) { if ( events . get ( i ) . getName () . equals ( evt . getName () ) ) { return false ; } events . add ( evt ) ; } }
@ org.junit.Test public void exportBasicTmx ( ) throws java.io.IOException , java.net.URISyntaxException { final com.vistatec.ocelot.segment.model.OcelotSegment testSeg = new com.vistatec.ocelot.segment.model.SimpleSegment.Builder () . segmentNumber ( 1 ) . source ( "plain text" ) . target ( "target plain text" ) . build () ; }
@ java.lang.Override public void run ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendOrderedBroadcast ( intent , receiverPermission , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; }
com.tencent.bugly. model.Beta.enableHotfix = false
{ int check_ntype = l . remove ( 0 ) . asIntegerValue () . getInt () ; if ( check_ntype != ( ntype ) ) { android.util.Log . e ( com.mooshim.mooshimeter.common.ConfigTree.TAG , "WRONG_ TYPE" ) ; } java.util.List < org.msgpack.type.Value > new_path = l . remove ( 0 ) . asArrayValue () ; java.util.List < org.msgpack.type.Value > new_path = l . remove ( 0 ) . asArrayValue () ; java.util.List < org.msgpack.type.Value > new_path = l . remove ( 0 ) . asArrayValue () ; path = new java.util.ArrayList < java.lang.Integer > () ; for ( org.msgpack.type.Value v : new_path ) { path . add ( v . asIntegerValue () . getInt () ) ; } }
new com.raizlabs.android.dbflow.sql.language.Select () . from ( org.eyeseetea.malariacare.data.database.model.Question . class ) . where ( Question_Table.id_header . eq ( this . getId_header () ) ) . orderBy ( Question_Table.order_pos , true )
s . append ( text . toString () . replaceAll ( " <=" ) )
{ int currPlayerId = currPlayer . getCurrPlayerID () ; java.lang.System.out . println ( ( ( amtBetInGame * 2 ) ) + ( currPlayer . getCurRound () ) . getCurRound () ) ; java.lang.Thread . sleep ( 5000 ) ; java.lang.System.out . println ( currPlayer . getCurRound () ) ; java.lang.Thread . sleep ( 5000 ) ; }
{ int col ; int col ; int col ; int color ; row = origSelectedBoardBlok . getRow () ; col = origSelectedBoardBlok . getColumn () ; edu.up.cs301.blokus.Blok newBlok = new edu.up.cs301.blokus.Blok ( row , col , color ) ; return newBlok ; }
{ assertNull ( handler . addBlankPageIfOdd ( new org.sejda.impl.sambox.component.PDDocument ( 10 , 10 ) ) ) ; handler . addBlankPage ( new org.sejda.sambox.pdmodel.common.PDRectangle ( 10 , 10 ) ) ; assertNotNull ( handler . addBlankPageIfOdd ( new org.sejda.sambox.pdmodel.common.PDRectangle ( 10 , 10 ) ) ) ; }
ids = com.google.common.collect.Lists . newArrayList ()
buffer . getInt ()
stack . poll ()
{ int secretNumber = ( ( int ) ( 1 + ( ( java.lang.Math . random () ) * 10 ) ) ) ; int attemps = 3 ; java.util.Scanner sc = new java.util.Scanner ( java.lang.System.in ) ; java.lang.String inpu ; java.util.Scanner sc = new java.util.Scanner ( java.lang.System.in ) ; java.lang.String inpu ; java.util.Scanner sc = new java.util.Scanner ( java.lang.System.in ) ; java.lang.String inpu ; }
{ if ( ( md ) == null ) return; android.graphics.Bitmap bitmap = loadArtwork ( artworkUrl , artworkLocal ) ; md . putBitmap ( MediaMetadataCompat.METADATA_KEY_ART , bitmap ) ; nb . setLargeIcon ( bitmap ) ; session . setMetadata ( md . build () ) ; notification . show ( nb , isPlaying ) ; artworkThread = null ; }
public boolean isWallValid ( holdup.Player player , int xPos , int yPos , holdup.Orientation orientation ) { if ( playerHasZeroWalls ( player ) ) { return false ; } else { if ( ( 0 ) > 1 ) { return ! ( isWallBlockingPlayerPath ( player , xPos , yPos , orientation ) ) ; } else { return true ; } } }
public void remove ( double v ) { if ( ( root ) != null ) { if ( ( root . getValue () ) == v ) { BTree.Node tempRoot = new BTree.Node ( 0 ) ; tempRoot . setLeft ( root ) ; root . removeNode ( v , tempRoot ) ; root = tempRoot . getLeft () ; } else { root . removeNode ( v , null ) ; } size -= 1 ; } }
{ NotLabelledVertices . add ( v ) ; }
@ org.junit.Test public void testPerformPlacePitfall () { nl.tudelft.contextproject.util.webinterface.ActionUtil . perform ( Action.PLACEPITFALL , 0 , 0 ) ; org.mockito.Mockito . verify ( nl.tudelft.contextproject.Main . getInstance () , org.mockito.Mockito . times ( 1 ) ) . getCurrentGame () ; verify ( mockedGame , org.mockito.Mockito . times ( 1 ) ) . addEntity ( org.mockito.Matchers . any ( nl.tudelft.contextproject.model.entities.Pitfall . class ) ) ; }
this . fields . get ( propertyName )
{ Pexeso_client.CurrentGame = null ; comm . setExit ( true ) ; comm.game_thread . interrupt () ; LobbyStatus . setText ( "You left your current game" ) ; LobbyStatus . setVisible ( true ) ; panel2 . setVisible ( true ) ; panel3 . setVisible ( false ) ; }
private void selectedButtonStyleLower ( javafx.scene.control.Button button ) { carInsuranceButton . setId ( "sideToolbarButton" ) ; boatInsuranceButton . setId ( "sideToolbarButton" ) ; homeInsuranceButton . setId ( "sideToolbarButton" ) ; }
{ State s = new State () ; while ( ! ( s . hasLost () ) ) { s . makeMove ( this . pickMove ( s , s . legalMoves () ) ) ; } return s . getRowsCleared () ; }
java.lang.String value
{ net.objectof.model.Resource < net.objectof.aggr.Aggregate < java.lang.Object , java.lang.Object > > toParent = getToParent ( parentId ) ; if ( ported . isDropped () ) { return null ; } if ( toParent == null ) { return null ; } toParent . value () . set ( net.objectof.actof.porter.IPorterUtil . unqualify ( ported . getKey () , toParent ) , ported . getValue () ) ; return context . getValue () ; }
if ( idVNFCI . equals ( vnfcInstance . getId () ) ) return vnfcInstance ;
new ru.semiot.platform.apiging.utils.Credentials ( login , password , login , password , role )
{ movePiece ( player , status , sc ) ; break; }
return parts [ 1 ] ;
{ edu.psu.sweng500.emrms.model.HPatient hPatient = new edu.psu.sweng500.emrms.model.HPatient () ; edu.psu.sweng500.emrms.model.HEncounter hEncounter = new edu.psu.sweng500.emrms.model.HEncounter () ; hEncounter . sethEncounterID ( ( ( hEncounter ) != null ) ? new edu.psu.sweng500.emrms.model.HEncounter hEncounter = new edu.psu.sweng500.emrms.model.HEncounter () ) ; hEncounter . sethEncounterID ( ( ( hEncounter ) != null ) ? new edu.psu.sweng500.emrms.model.HEncounter () ) . setUserID ( "admin" ) ; hEncounter . setCreationDateTime ( - 1 ) ; hEncounter . setEnabled ( true ) ; hEncounter . setEncounterType ( "OP" ) ; hEncounter . setEncounterID ( "Acc1001" ) ; hEncounter . setEncLocationName ( "Exton Clinic" ) ; hEncounter . setEncounterType ( "OP" ) ; hEncounter . setEncounterID ( "Acc1001" ) ; hEncounter . setPatient_ObjectID ( 3 ) ; hEncounter . setAttendingPhysician_ObjectID ( 1 ) ; hEncounter . setEncounterID ( "Acc1001" ) ; hEncounter . setPatient_ObjectID ( 3 ) ; hEncounter . setAttendingPhysician_ObjectID ( 1 ) ; hEncounter . setBed_ObjectID ( 1 ) ; } hEncounter . setAttendingPhysician_ObjectID ( 1 ) ; hEncounter . setBed_ObjectID ( 1 ) ; }
com.cv4j.rxjava.RxImageData . bitmap ( mBitmap ) . placeHolder ( R.drawable.test_mm ) . addFilter ( filter ) . into ( holder.image ) ;
com.whippy.tas.premier.util.Utils . getGaussian ( 80 , 40 ) ;
{ if ( character . buyItems ( index , quantity ) ) { java.lang.System.out . println ( ( ( ( "Purchase successful! You have bought" + quantity ) + " " ) + ( itemSet [ index ] ) ) ) ; this . m_inventory [ index ] -= quantity ; } this . m_inventory [ index ] -= quantity ; }
return ( first . evaluate () ) + ( last . evaluate () ) ;
{ return tdb.TheDrawingBoard . disconnectMultiplayerServer () ; client . disconnect () ; }
assertEquals ( "0" , binaryCalculator . add () ) ;
public static void showDialog ( android.content.Context context , int message , int positiveMsg , int negativeMsg , android.content.DialogInterface.OnClickListener okListener ) { com.shuruta.sergey.ftpclient.ui.DialogFactory . showDialog ( context , message , positiveMsg , negativeMsg , okListener , new android.content.DialogInterface.OnClickListener () { public void onClick ( android.content.DialogInterface dialog , int id ) { dialog . dismiss () ; } } ) ; }
{ try { jsonGenerator . writeEndObject () ; jsonGenerator . writeEndArray () ; } catch ( java.io.IOException e1 ) { try { jsonGenerator . writeEndObject () ; jsonGenerator . writeEndArray () ; } catch ( java.io.IOException e1 ) { org.wso2.datamapper.engine.output.writers.JacksonJSONWriter.log . error ( e . getMessage () , e ) ; } } }
tw.kewang.cwb.Cwb.LOG . debug ( "getFutureWeatherByTown: {}, {}" , geocode . toString () , date )
public static javax.swing.JPanel createLabeledTextBox ( java.lang.String label ) { javax.swing.JPanel playerTextBox = new javax.swing.JPanel () ; javax.swing.JLabel l = new javax.swing.JLabel ( label ) ; }
{ com.intellij.openapi.vfs.VirtualFile _file = it . getFile () ; boolean _exists = _file . exists () ; }
resultInfo.data . getInfo () . getAvatar ()
if ( ( size ) == 1 ) { last = new LinkedList.Item <> ( t , first , null ) ; first.next = last ; } else { LinkedList.Item < T > lastInList = last ; last.next = new LinkedList.Item <> ( t , lastInList , null ) ; }
protected final java.net.Socket getRootSocket ( java.lang.Object target ) { org.apache.thrift.transport.TNon superTransport inTrans = ( ( com.navercorp.pinpoint.plugin.thrift.field.getter.TNon (TransportFieldGetter ) ( target ) ) . _$PINPOINT$_getTNon ,Transport () ) { if ( inTrans != null ) { if ( inTrans instanceof com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor ) { return ( ( com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor ) ( inTrans ) ) . _$PINPOINT$_getSocket () ; } else { if ( isDebug ) { logger . debug ( "Invalid target object. getString field accessor label &&" , com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor . class . getName () ) ; } } } } return null ; }
{ for ( com.google.firebase.database.DataSnapshot child : dataSnapshot . getChildren () ) { java.lang.String oldSearchTerm = child . getValue () . toString () ; oldReviews . add ( oldSearchTerm ) ; } java.lang.String reviewID = ( profile ) + ( oldReviews . size () ) ; getReference ( reviewID ) ; }
( portGroup == null ) && ( ! ( com.emc.storageos.db.client.util.NullColumnValueGetter . isNullURI ( mask . getPortGroup () ) ) )
m_aSuccessValue . equals ( m_aSuccessValue )
if ( value == ( com.fasterxml.jackson.core.JsonToken.START_OBJECT ) ) { parseObjectMetadata ( jp ) ; } else if ( value == ( com.fasterxml.jackson.core.JsonToken.START_ARRAY ) ) { parseArrayMetadata ( jp ) ; } else if ( value != ( com.fasterxml.jackson.core.JsonToken.VALUE_NULL ) ) { parseObjectMetadata ( jp ) ; }
i = i . getBlock () . getBlock () . getBlock () )
id = new java.lang.String [ 0 ]
for ( org.lirazs.gbackbone.client.core.data.Options source : args ) { for ( java.lang.String key : source . keySet () ) { if ( ! ( containsKey ( key ) ) ) { put ( key , source . get ( key ) ) ; } } }
if ( command_type != null ) { com.example.reativos.oscar.Command newCommand = new com.example.reativos.oscar.Command ( command_type , command_param ) ; commandLists . get ( currentTabTag ) . add ( newCommand ) ; p . get ( currentTabTag ) . notifyDataSetChanged () ; }
filePath = ( ( m_chosenDir ) + ( java.io.File.separator ) ) + ".3gp"
{ link.member = this ; link.ordernum = this . sharedLinks . size () ; this . sharedLinks . add ( link ) ; link . save () ; if ( newActivity ) { new models.SharedLinkActivity ( link ) . save () ; } }
this . toUnicode . charAt ( 0 )
{ switchPortSpeed () ; close () ; }
{ final javax.faces.context.FacesContext facesContext = org.jbromo.webapp.jsf.cdi.CDIFacesUtil . getFacesContext () ; final javax.faces.application.Application app = facesContext . getApplication () ; final javax.el.ELContext elFactory = app . getExpressionFactory () ; final javax.el.ELContext elContext = facesContext . getELContext () ; final javax.el.ValueExpression ve = elFactory ..Expression ( elContext , expression , java.lang.Object . class ) ; return ve ; }
{ java.lang.System.out . println ( ( ( java.lang.String ) ( ( - 1 ) ) ) ) ; if ( position != ( - 1 ) ) { return; } return; }
switch ( v . getId () ) { case R.id.loginButton : com.myos.myos.HEAD mIntent = new android.content.Intent ( this , com.myos.myos.Salon . class ) ; mIntent . putExtra ( "username" , username ) ; startActivity ( mIntent ) ; break; case R.id.signupButton : break; default: break; }
db . execSQL ( ( ( ( ( ( ( ( ( ( ( ( ( " `id " + ( com.example.android.farliggodtapp.database.DatabaseHelper.tableName ) ) + " (" ) + ( com.example.android.farliggodtapp.database.DatabaseHelper.tableColValue ) ) + " VARCHAR(255), " ) + ( com.example.android.farliggodtapp.database.DatabaseHelper.tableColType ) ) + " == " `risiko` varchar" ) ) + " `taxonID` int( max NOT NULL," ) + ( ( ( ( ( ( ( ( ( ( ( " `id` INTEGER PRIMARY KEY AUTOINCREMENT," + " `scientificName`." ) + " `family`." ) + " `family`." ) + " ` }
{ android.util.Log . i ( com.example.sifat.gobar.LOG_TAG_TAXIPOSITIONSERVICE , "startAlarmManager" ) ; alarmManager = ( ( android.app.AlarmManager ) ( context . getSystemService ( Context.ALARM_SERVICE ) ) ) ; taxiDetailIntent = new android.content.Intent ( context , com.example.sifat.Receiver.TaxiDetailReceiver . class ) ; taxiDetailIntent . putExtra ( com.example.sifat.gobar.TAXIDE.RECIEVER , taxiDetailResultReceiver ) ; taxiDetailIntent . putExtra ( "test" , "Oshan" ) ; pendingIntent = android.app.PendingIntent . getBroadcast ( context , 0 , taxiDetailIntent , 0 ) ; alarmManager . setRepeating ( AlarmManager.ELAPSED_REALTIME_WAKEUP , android.os.SystemClock . elapsedRealtime () , 10000 , pendingIntent ) ; }
clazz . addFields ( indi.yume.tools.autosharedpref.Ignore . class )
{ summaryMap . putIfAbsent ( key . toString () , new com.capstone.maven.mostontimeairlines.OntimeSummaryWritable () ) ; com.capstone.maven.mostontimeairlines.OntimeSummaryWritable summary = summaryMap . get ( key . toString () ) ; for ( org.apache.hadoop.io.BooleanWritable val : values ) { if ( val . get () ) { summary . incrementOntime () ; } else { summary . incrementNotOntime () ; } } }
com.jboby93.markovbot.App . readLine ( "save as: " )
public static void main ( java.lang.String [] arguments ) throws java.io.IOException { return new java.io.IOException ( new java.io.File ( [] arguments ) . getMessage () ) ; }
if ( ( ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.JELLY_BEAN ) ) && ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.CAMERA ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) && ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.VIBRATE ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { requestPermission ( new java.lang.String [] { Manifest.permission.CAMERA , Manifest.permission.VIBRATE } , com.fosung.barcodescanner.InitActivity.REQUEST_STORAGE_READ_ACCESS_PERMISSION ) ; } else { android.content.Intent intent = new android.content.Intent ( this , com.fosung.barcodescanner.QrCodeScanActivity . class ) ; startActivity ( intent ) ; this . finish () ; }
atoi ( str , ret )
{ try { socket . close () ; } catch ( final java.io.IOException e ) { e . printStackTrace () ; mainController . showMessageOnMainView ( ( ( ( "Errore nella chiusura della socket" + ( socket ) ) + ( e . getMessage () ) ) + ( e . toString () ) ) ) ; } }
{ com.kerchin.yellownote.data.bean.PrimaryData . getInstance ( getHelper () , new com.kerchin.yellownote.data.bean.PrimaryData.DoAfterWithEx () { @ java.lang.Override public void justNowWithEx ( java.lang.Exception e ) { dismissDialog () ; } } ) ; zj.remote.baselibrary.util.PreferenceUtils . putString ( Config.KEY_USER , mLoginUserEdt . getText () . toString () , this ) ; zj.remote.baselibrary.util.PreferenceUtils . putBoolean ( Config.KEY_ISLOGIN , true , this ) ; zj.remote.baselibrary.util.PreferenceUtils . putString ( Config.KEY_PASS , mLoginPassEdt . getText () . toString () , this ) ; handler . post ( runnableForData ) ; }
public void exitApplication ( android.content.Context context ) { try { finishAllActivity () ; android.app.ActivityManager manager = ( ( android.app.ActivityManager ) ( context . getSystemService ( Context.ACTIVITY_SERVICE ) ) ) ; manager . killBackgroundProcesses ( context . getPackageName () ) ; java.lang.System . exit ( 0 ) ; } catch ( java.lang.Exception e ) { java.lang.System . exit ( 0 ) ; } }
java.lang.String . format ( "%s\n" )
while ( ( ( root ) == null ) && ( ( future . channel () . isOpen () ) || ( future . channel () . isActive () ) ) ) { lock . wait () ; }
{ com.google.android.gms.maps.model.LatLng markerLatLng = new com.google.android.gms.maps.model.LatLng ( data . getLatitude () , data . getLongitude () ) ; com.google.android.gms.maps.model.BitmapDescriptor markerIcon = com.google.android.gms.maps.model.BitmapDescriptorFactory . fromResource ( data . getMarkerIcon () . getResId () ) ; return new com.google.android.gms.maps.model.MarkerOptions () . position ( markerLatLng ) . title ( data . getTitle () ) . icon ( markerIcon ) ; }
( arr.length )
{ int winAns = 9 ; if ( ( ( BotParser.mRound ) == 1 ) || ( ( parentParser.mRound ) == 2 ) ) return 3 ; else if ( ( elseParserParser.mRound ) > 5 ) winAns = positionParser.mField . checkWin ( parentParser.mBotId ) ; if ( winAns != 9 ) return winAns ; winAns = else { int move = new java.util.Random () . nextInt ( 7 ) ; return move ; } return move ; }
@ java.lang.Override public void save ( de.jordsand.birdcensus.core.BirdCount instance ) { de.jordsand.birdcensus.database.repositories.SQLiteBirdCountRepository.BirdCountToSQLiteConverter converter = new de.jordsand.birdcensus.database.repositories.SQLiteBirdCountRepository.BirdCountToSQLiteConverter () ; db . insert ( BirdCountContract.BirdCount.TABLE_NAME , null , converter . extractBirdCountTableData ( instance ) ) ; for ( android.content.ContentValues values : converter . extractObservationTableData ( instance ) ) { db . insert ( BirdCountContract.ObservedSpecies.TABLE_NAME , null , values ) ; } }
{ background ( ( - 1 ) ) ; java.lang.System.out . println ( ( ( ( java.lang.String ) ( ( ( width ) - ( offsetInt ) ) , offsetInt , buttonOpenCloseMuseumObject , "Exhibition" ) ) ) ; }
for ( dependency.AD ) { attrJoint . addAttributes ( df . getAntecedent () ) ; attrJoint . addAttributes ( df . getCon ) ; }
public void init5 () { for ( int x = ( ( Global.WIDTH ) / 2 ) - 1 ; x < ( ( ( Global.WIDTH ) / 2 ) + 2 ) ; x ++ ) { body . add ( new java.awt.Point ( x , ( - 3 ) ) ) ; body . add ( new java.awt.Point ( ( ( ( Global.WIDTH ) / 2 ) - 1 ) , ( - 2 ) ) ) ; } }
{ java.lang.String sogrn = null ; if ( ! ( fList [ idx ] . isFile () ) ) sogrn = fList [ idx ] . getName () ; java.lang.String namefile = sogrn ; return new akayerov.getsnils.IpraFile ( fList [ ( ( idx ) ++ ) ] . getAbsolutePath () , sogrn , namefile ) ; }
{ boolean infoEnabled = false ; org.osgi.framework.BundleContext bundleContext = org.osgi.framework.FrameworkUtil . getBundle ( org.talend.commons.runtime.debug.TalendDebugHandler . class ) . getBundleContext () ; org.osgi.framework.ServiceReference
( this . name . toLowerCase () )
{ org.pentaho.metastore.api.IMetaStore metaStore = mock ( org.pentaho.metastore.api.IMetaStore . class ) ; java.util.List < java.lang.String > expectedNames = new java.util.ArrayList <> () ; org.mockito.Mockito . verify ( metaStoreFactory , org.mockito.Mockito . never () ) . getElementNames () ; org.junit.Assert . assertEquals ( expectedNames , namedClusterManager . listNames ( metaStore ) ) ; }
( candidates . isEmpty () ) && ( infos . isEmpty () )
( condition )
{ boolean isAdded = true ; for ( java.util.TreeSet < tds.Task > tree : tds.TaskTree.taskTrees ) { if ( ! ( tree . add ( task ) ) ) { isAdded = false ; } } tds.TaskTree . increaseTaskListSize () ; tds.TaskTree . pushAddToStorage ( task ) ; return isAdded ; }
private void OnChatSendTextMessageResult ( int eGroupType , long nGroupID , long nFromUserID , long nToUserID , java.lang.String sSeqID , int nResult ) { if ( ( callbacks . size () ) > 0 ) { for ( java.lang.ref.WeakReference < com.V2.jni.callback.ChatRequestCallback > wf : callbacks ) { if ( ( wf . get () ) == null ) { continue; } wf . get () . OnSendTextResultCallback ( eGroupType , nGroupID , nFromUserID , nToUserID , sSeqID , nResult ) ; } } }
rejasupotaro . allPokemonNames ( query )
{ new com.kame.tafhd.Publisher () . publish ( "I am in hanlderMessage()" ) ; switch ( msg.what ) { case com.kame.tafhd.MainActivity.TEST_MSG : new com.kame.tafhd.Publisher () . publish ( ( ( java.lang.String ) ( msg.obj ) ) ) ; break; case com.kame.tafhd.MainActivity.UNRELEVANT_MSG : new com.kame.tafhd.Publisher () . publish ( "I am in the unrelevent parts." ) ; break; case com.kame.tafhd.MainActivity.ANOTHER : new com.kame.tafhd.Publisher () . publish ( ( ( java.lang.String ) ( msg.obj ) ) ) ; break; default: break; } }
public java.lang.String findParameterInExtension ( org.eclipse.core.runtime.IConfigurationElement configurationElement , java.lang.String parameter ) { for ( org.eclipse.core.runtime.IConfigurationElement configurationElementChild : configurationElement . getChildren ( parameter ) ) { if ( ( configurationElementChild . getAttribute ( parameter ) ) != null ) { return configurationElementChild . getAttribute ( parameter ) ; } } return null ; }
public void storeScores ( java.util.List scores ) { android.content.SharedPreferences prefs = android.preference.PreferenceManager . getDefaultSharedPreferences ( context ) ; android.content.SharedPreferences.Editor editor = prefs . edit () ; com.google.gson.Gson gson = new com.google.gson.Gson () ; java.lang.String scoreJson = gson . toJson ( scores ) ; editor . putString ( com.evader.rookies.evade.StoreScores.SCORES_STRING , scoreJson ) ; editor . apply () ; }
{ java.util.ArrayList < java.lang.String > stringIds = new java.util.ArrayList < java.lang.String > () ; for ( int j : mSkillIds ) stringIds . add ( java.lang.Integer . toString ( j ) ) ; return new co.uk.rushorm.core.RushSearch () . whereIN ( "dbId" , stringIds ) . find ( com.gradians.prepwell.db.Skill . class ) ; }
{ allKeszKisz = keszKiszFacade . findAll () ; allKeszitmeny = keszitmenyFacade . findAll () ; allKiszereles = kiszerelesFacade . findAll () ; keszitmenyID = allKeszitmeny . get ( 0 ) . getId () ; kiszerelesID = allKiszereles . get ( 0 ) . getId () ; }
{ java.util.Optional < net.minecraft.item.ItemStack > optHeld = ( ( org.spongepowered.api.entity.ArmorEquipable ) ( living ) ) . getItemInHand () ; if ( ( optHeld . isPresent () ) && ( ( optHeld . get () . getItem () ) == ( com.skelril.skree.content.registry.item.CustomItemTypes.TWO_TA ) ) ) { event . setBaseDamage ( 0 ) ; return true ; } return false ; }
( ( getGroup () ) == null ) ? "" : getGroup ()
@ org.junit.Test public void test4 ( ) throws com.silicolife.textmining.core.interfaces.core.dataaccess.exception.ANoteException , com.silicolife.textmining.processes.ir.patentpipeline.core.searchmodule.WrongIRPatentIDRecoverConfigurationException { java.lang.String identifier = "fucoxanthin" ; main.com.silicolife.textmining.patentpipeline.PubChemAPI.PUGHelp.PUGRestInputEnum inputType = main.com.silicolife.textmining.patentpipeline.PubChemAPI.PUGHelp.PUGRestInputEnum.length ; main.com.silicolife.textmining.patentpipeline.PubChemAPI.PUGHelp.IIRPubChemPatentIDRetrievalConfiguration configuration = new main.com.silicolife.textmining.patentpipeline.PubChemAPI.PUGHelp.IRPubChemPatentIDRetrievalConfigurationImpl ( inputType ) ; main.com.silicolife.textmining.patentpipeline.PubChemAPI.IRPubChemPatentIDRetrieval pugRestSearch = new main.com.silicolife.textmining.patentpipeline.PubChemAPI.IRPatChemPatentIDRetrieval ( configuration ) ; com.silicolife.textmining.processes.ir.patentpipeline.configuration.IIRPatentPipelineSearchConfiguration query = new com.silicolife.textmining.processes.ir.patentpipeline.configuration.IRPatentPipelineSearchConfigurationImpl ( identifier ) ; java.util.Set < java.lang.String > patentIds = pugRestSearch . retrievalPatentIds ( this . pat ) ; java.lang.System.out . println ( patentIds . size () ) ; }
0 <= maxIndexPages
{ gov.ehawaii.hacc.web.controllers.MainController.LOGGER . info ( ( "JSON: " + json ) ) ; java.util.Map < java.lang.String , java.lang.Object > parameters = new com.fasterxml.jackson.databind.ObjectMapper () . readValue ( json , new com.fasterxml.jackson.core.type.TypeReference < java.util.Map < java.lang.String , java.lang.Object > > () {} ) ; response . getWriter () . write ( new com.fasterxml.jackson.databind.ObjectMapper () . writeValueAsString ( grantsService . getGrants ( parameters ) ) ) ; }
for ( int i = 0 ; i < ( clusters . size () ) ; i ++ ) { Point aux = cluster . getCentroid () ; Point point = new Point ( aux . getX () , aux . getY () ) ; temp . add ( point ) ; }
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/edit" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) private java.lang.String saveUser ( org.springframework.ui.Model model , @ javax.validation.Valid com.oreva.simpleweb.mvc.web.stubs.UserStub userStub ) { java.lang.String currentPage = "users/edit" ; java.lang.String nextPage = "redirect:/messages/result" ; if ( errors . hasErrors () ) { return currentPage ; } com.oreva.simpleweb.mvc.entities.User user = userService . convertStubToEntity ( userStub ) ; userService . save ( user ) ; model . addAttribute ( "user" , user ) ; return nextPage ; }
{ final java.util.List < io.relayr.websocket.WebSocketCallback > callbacks = mTopicCallbacks . get ( topic ) ; for ( io.relayr.websocket.WebSocketCallback socketCallback : callbacks ) socketCallback . successCallback ( message ) ; }
{ java.lang.System.err . println ( ( ( location + ": " ) + error ) ) ; if ( cause != null ) cause . printStackTrace () ; if ( ( sutilities.Debugger.logger_ ) != null ) sutilities.Debugger.logger_ . log ( "SEVERE" , location , error , cause , true ) ; }
{ org.jetbrains.kotlin.resolve...LexicalScope accessorScope = makeScopeForPropertyAccessor ( c , accessor , propertyDescriptor ) ; org.jetbrains.kotlin.resolve.lazy.ForceResolveUtil . forceResolveAllContents ( accessorDescriptor . getAnnotations () ) ; PreliminaryDeclarationVisitor.Companion . visitDeclaration ( accessor , accessorDescriptor , fieldAccessTrackingTrace ) ; resolveFunctionBody ( c . getOuterDataFlowInfo () , fieldAccessTrackingTrace , accessor , accessorDescriptor , accessorScope ) ; }
if ( j < ( ( n ) - 1 ) ) { int right = getPosition ( i , ( j + 1 ) ) ; if ( isOpen ( right ) ) { grid . union ( right , getPosition ( i , j ) ) ; } }
if ( ! ( bHandshakeResponse ) ) { if ( ( com.freerdp.freerdpcore.presentation. setupwoServerSetting.mHandler ) != null ) { android.os.Message msg1 = new android.os.Message () ; msg1.what = com.freerdp.freerdpcore.utils.appdefine.MSG_CONNECT_RESPONSE ; com.freerdp.freerdpcore.presentation. .woServerSetting.mHandler . sendMessage ( msg1 ) ; } } else { if ( ( com.freerdp.freerdpcore.presentation. .woServerSetting.mHandler ) != null ) { android.os.Message msg1 = new android.os.Message () ; msg1.what = com.freerdp.freerdpcore.utils.appdefine.MSG_CONNECT_NON_RESPONSE ; com.freerdp.freerdpcore.presentation. .woServerSetting.mHandler . sendMessage ( msg1 ) ; } }
{ if ( ( mUnit ) == unit ) { return mValue ; } if ( ( unit == ( com.s13g.winston.lib.temperature.Temperature.Unit.CELSIUS ) ) && ( ( mUnit ) == ( com.s13g.winston.lib.temperature.Temperature.Unit.FAHRENHEIT ) ) ) { return ( ( mValue ) *.F ) + 32 ; } else if ( ( unit == ( com.s13g.winston.lib.temperature.Temperature.Unit.FAHRENHEIT ) ) && ( ( mUnit ) == ( com.s13g.winston.lib.temperature.Temperature.Unit.CELSIUS ) ) ) { return ( ( mValue ) - 32 ) /.F ; } throw new java.lang.RuntimeException ( "Unsupported temperature conversion" ) ; }
closeTooltip ( inputElement )
startPos . add ( height , height )
@ org.testng.annotations.Test ( enabled = true ) public void pingResponseDataPartShouldContainPingForConfigurationResponse ( ) throws java.io.IOException , java.lang.InterruptedException { mockTestShs2Riv . expectedMinimum args ( 1 ) ; mockTestShs2Riv . expectedMessagesMatches ( org.apache.camel.builder.xml.XPathBuilder . xpath ( "/ping:PingForConfigurationResponse/ping:pingDateTime" ) . namespace ( "ping" , "urn:riv:itintegration:monitoring:PingForConfigurationResponder:1" ) ) ; se.inera.axel.shs.mime.ShsMessage testMessage = make ( shsMessageMaker ) ; template () . requestBody ( "direct:testShs2riv" , testMessage ) ; mockTestShs2Riv . dSatisfied ( java.util.concurrent.TimeUnit.SECONDS . toMillis ( 10 ) ) ; }
{ if ( ( t1 . getTime () ) > ( t2 . getTime () ) ) { return 1 ; } if ( ( t2 . getTime () ) > ( t1 . getTime () ) ) { return - 1 ; } return 0 ; }
{ java.util.List < controllers.Post > posts = controllers.Post . getPostsWithPostName ( postName ) ; controllers.Application.currentPost = posts . get ( 0 ) ; java.util.List < controllers.Comment > comments = controllers.Comment . findComments ( postName ) ; return ok ( postPage . render ( controllers.Application.currentPost , comments , controllers.Application.currentTeam . getTeamName () , controllers.Application . getUnreadNum () ) ) ; }
{ final org.jowidgets.cap.ui.api.table.IBeanTableMenuFactory <> () ; final org.jowidgets.api.command.IAction editAction = beanTableMenuFactory . editAction ( model ) ; editMenuModel . addAction ( editAction ) ; menuModel . addAction ( 0 , editAction ) ; return menuModel ; }
{ org.openmrs.module.openconceptlab.client.OclConcept oclConcept = newOclConcept () ; org.junit.Assert . assertFalse ( oclConcept . isRetired () ) ; importer . importConcept ( new org.openmrs.module.openconceptlab.CacheService ( conceptService ) , null , oclConcept ) ; oclConcept . setRetired ( true ) ; importer . importConcept ( new org.openmrs.module.openconceptlab.CacheService ( conceptService ) , null , oclConcept ) ; org.openmrs.Concept concept = assertImported ( oclConcept ) ; org.junit.Assert . assertTrue ( concept . isRetired () ) ; }
( - 2.038E-5 ) * speed
resultActivityError . concat ( ( " : " + e ) ) ;
{ outToServer . writeBytes ( ( ( ( ( "GRID " + x ) + " " ) + y ) + "\n" ) ) ; java.lang.String response = inFromServer . readLine () ; return response . charAt ( 0 ) ; }
{ this . _ID = jsonObject . getLong ( edu.aku.hassannaqvi.mapps_form2.LH .Contract.singleLhw._ID ) ; this . lhwId = jsonObject . getString ( edu.aku.hassannaqvi.mapps_form2.LH .Contract.singleLhw.COLUMN_LHWID ) ; this . lhwName = jsonObject . getString ( edu.aku.hassannaqvi.mapps_form2.LH .Contract.singleLhw.COLUMN_LHWID ) ; this . clusterName = jsonObject . getString ( edu.aku.hassannaqvi.mapps_form2.LH .Contract.singleLhw.COLUMN_CLUSTERNAME ) ; this . clusterCode = jsonObject . getString ( edu.aku.hassannaqvi.mapps_form2.LH .Contract.singleLhw.COLUMN_CLUSTERCODE ) ; return this ; }
public boolean checkBlock ( org.w3c.dom.Node node ) { mt.edu.um.cs.cps2000.runtime.BlockStackFrame blockStackFrame = new mt.edu.um.cs.cps2000.runtime.BlockStackFrame ( stackFrames . peek () ) ; stackFrames . push ( blockStackFrame ) ; boolean ok = checkStatements ( node . getChildNodes () ) ; return ok ; }
( ( s.deadline ) < ( nanos ) )
b = java.math.BigDecimal . valueOf ( num1 )
{ java.lang.String inputStr = userInput . readLine () ; return inputStr ; }
{ com.example.petr.myapplication.FilterResults filterResults = new com.example.petr.myapplication.FilterResults () ; java.util.List < java.lang.String > results = findSuggestions ( charSequence . toString () ) ; if ( ( charSequence . length () ) != 0 ) { filterResults.values = results ; filterResults.count = results . size () ; } return filterResults ; }
{ try { model . deleteCropLocationTrayLocation ( blockID . getText () , new java.util.ArrayList < java.lang.String > () ) ; model . deleteCropLocationTrayLocation ( blockID . getText () , new java.util.ArrayList < java.lang.String > () ) ; } try { model . deleteCropLocationTrayLocation ( blockID . getText () , new java.util.ArrayList < java.lang.String > () ; } try { model . deleteCropLocationTrayLocation ( blockID . getText () , 0 ) ; } catch ( java.sql.SQLException e1 ) { errorLabel . setText ( "Invalid Field" ) ; } }
{ edu.stanford.epad.epadws.models.Study study = getStudy ( studyUID ) ; if ( study == null ) return; edu.stanford.epad.epadws.models.ProjectToSubjectToStudy projSubjStudy = ( ( edu.stanford.epad.epadws.models.ProjectToSubjectToStudy ) ( new edu.stanford.epad.epadws.models.ProjectToSubjectToStudy () . getObject ( ( "study_id=" + ( study . getId () ) ) ) ) ) ; projSubjStudy . delete () ; study . delete () ; }
{ worker . login ( username , password ) ; EmployeeApplicationScreen.isEmployeeLoggedIn = true ; }
( ( args.length ) > 1 ) ? java.lang.Long . parseLong ( args [ 1 ] ) : com.awesome.BaseExamplePeriod.DEFAULT_RUN_TIME_MSEC
if ( ( data != null ) && ( ( data . getStringExtra ( it.jaschke.alexandria.AddBook.ISBN_RESULT ) ) != "-1" ) ) { ean . setText ( data . getStringExtra ( it.jaschke.alexandria.AddBook.ISBN_RESULT ) ) ; }
{ com.juntcompany.godandgod.Login.SignIn.SignInPolicyFragment f = new com.juntcompany.godandgod.Login.SignIn.SignInPolicyFragment () ; SignInActivity.fNum = getActivity () . getSupportFragmentManager () . getBackStackEntryCount () ; android.support.v4.app.FragmentTransaction ft = getActivity () . getSupportFragmentManager () . beginTransaction () ; ft . replace ( R.id.container , f ) ; ft . addToBackStack ( ( "" + ( SignInActivity.fNum ) ) ) ; ft . commit () ; }
{ if ( ( ( ( currentLocation ) == null ) || ( ( currentCompassValue ) < 0 ) ) || ( ( settingsManager . getPresetIdInRouterFragment () ) < 1 ) ) { return; } org.walkersguide.utils.POIPreset preset = settingsManager . getPOIPreset ( settingsManager . getPresetIdInRouterFragment () ) ; boolean isInsidePublicTransport = false ; if ( ( numberOfHighSpeeds ) > 0 ) isInsidePublicTransport = true ; poiManager . updatePOIList ( preset . getId () , preset . getRange () , currentLocation , currentCompassValue , "" , isInsidePublicTransport ) ; }
switch ( ie . getStateChange () ) { case 1 : emailInputField . setVisible ( true ) ; emailInputField . setEnabled ( true ) ; useEmail = true ; break; case 2 : emailInputField . setVisible ( false ) ; emailInputField . setEnabled ( false ) ; break; default: break; }
void killDepletedAgents () { if ( ( agents != null ) && ( ( agent.food ) <= 0 ) ) { GameLogic.Position deathPlace = agent.position ; agents . remove ( agent ) ; tiles [ deathPlace.x ] [ deathPlace.y ] . agents . remove ( agent ) ; } }
{ com.project.snake.database.SnakeDTO data = new com.project.snake.database.SnakeDTO ( "join" , id , password , 0 , 0 , 0 ) ; data = network . sendData ( data ) ; if ( data != null ) { view_ int . joinView ( data . getStatus () ) ; return; } }
new frogger.ObstacleRow ( - 75 ) , 150 , 500 , 0 , 2 , 500 , new java.util.ArrayList <> () , 1 , 3 , java.awt.Color.BLACK )
private void computeDemoRectangle ( float viewWidth , float viewHeight ) { float centerX = viewWidth / 2 ; float centerY = viewHeight / 2 ; float deltaX = viewWidth / ( ( float ) ( de.peterloos.beziersplines.utils.ControlPointsHolder.NumDemoEdges ) ) ; float _ viewHeight / ( ( float ) ( de.peterloos.beziersplines.utils.ControlPointsHolder.NumDemoEdges ) ) ; demoData = de.peterloos.beziersplines.utils.ControlPointsHolder . getDemoRectangle ( centerX , centerY , deltaX ) ; }
new omnikryptec.util.AdvancedFile ( true , this , path_name )
com.untappedkegg.rally.data.DbUpdated . updated_insert ( AppState.MOD_NEWS )
{ if ( com.breadwallet.tools.util.Utils . isNullOrEmpty ( newVal ) ) return null ; if ( com.breadwallet.tools.util.Utils . isNullOrEmpty ( oldVal ) ) return newVal ; if ( newVal . equals ( oldVal ) ) { return null ; } else { return newVal ; } }
{ double minYY = points . get ( i ) . y ; for ( int i = 1 ; i < ( points . size () ) ; i ++ ) { double pY = points . get ( i ) . y ; if ( pY < minY ) { if ( ( points . get ( i ) . z ) <= 0 ) { return ( - ( TheLittleEngineThatCould.windowHeight ) ) / 2 ; } } minY = pY ; } return minY ; }
con . createQuery ( sql ) . addParameter ( "name" , this . name ) . addParameter ( "email" , this . email ) . executeUpdate () . getKey () ;
public void setDimensions () { if ( ( java.lang.Double . toString ( value ) . length () ) < 15 ) { width = java.lang.Double . toString ( value ) . length () ; height = 1 ; } else { width = 15 ; height = ( ( java.lang.Double . toString ( value ) . length () ) / ( width ) ) + 1 ; } }
new com.raccoonapps.pricemanager.app.client.task.ProductsUpdateTask ()
isMyOwnMsg = newItem . isIncomingMessage ()
userDao . create ( user )
tuples . add ( iter . next () )
@ java.lang.Override protected synchronized void onProgressUpdate ( java.lang.Void . . . values ) { if ( ( SoundActivity.seekBar ) != null ) { SoundActivity.seekBar . setMax ( org.gtlp.yasb.SoundActivity.soundPlayerInstance . getDuration () ) ; SoundActivity.seekBar . setProgress ( org.gtlp.yasb.SoundActivity.soundPlayerInstance . getCurrentPosition () ) ; } if ( ( SoundActivity.timeText ) != null ) { SoundActivity.timeText . setText ( SoundActivity.soundPlayerInstance . getFormattedProgressText () ) ; } }
newMocha . setAmtCoffee ( java.lang.Integer . parseInt ( "a" ) )
{ java.lang.String [] possibleTitles = new java.lang.String [] { model.tripShortName . get ( i ) . equals ( possibleTitles [ i ] ) ; } if ( ( ( possibleTitles [ i ] ) != null ) && ( possibleTitles [ i ] . isEmpty () ) ) { return possibleTitles [ i ] ; } }
xs [ i ] = ( ( java.lang.Number ) ( fn . invoke ( xs [ i ] ) ) ) . doubleValue ()
return dot ;
i < ( checkDigit )
ca.nrc.cadc.caom2.artifact.resolvers.MastResolverTest.log . debug ( ( "IllegalArgumentException thrown as expected. Test passed position " + expected ) )
{ java.lang.Object [] arr2 = new java.lang.Object [ ( arr.length ) + 1 ] ; for ( int x = 0 ; x < ( arr.length ) ; x ++ ) { arr2 [ x ] = arr [ x ] ; } arr2 [ arr.length ] = e ; return true ; }
( inventory . get ( i ) . getStatus () ) == "BidOn"
@ java.lang.Override public void run () { if ( ! ( this . plugin . checkWorld ( player . getWorld () . getName () ) ) ) { return; } if ( ! ( this . plugin . checkWorld ( player . getWorld () . getName () ) ) ) { player . sendMessage ( ( "This world is currently;.\n" + ( java.lang.String ) ) ) ; if ( ! ( this . plugin . checkWorld ( player . getWorld () . getName () ) ) ) { net.kaikk.mc.Dim = false ; } net.kaikk.mc.Dim = false ; } if ( ( player ) != null ) { this . plugin . playersToCheck . remove ( player ) ; } }
private void testNextExecutionEveryTwoWeeksStartingWithFirstDayOfYear ( ) throws java.lang.Exception { com.cronutils.model.time.ZonedDateTime now = com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest . truncateToDays ( com.cronutils.model.time.ZonedDateTime . now () ) ; int dayOfYear = now . getDayOfYear () ; int dayOfMostRecentPeriod = dayOfYear % 14 ; com.cronutils.model.time.ZonedDateTime expected = ( dayOfMostRecentPeriod == 1 ) ? now : now . plusDays ( ( 15 - dayOfMostRecentPeriod ) ) ; com.cronutils.model.time.ExecutionTime executionTime = com.cronutils.model.time.ExecutionTime . forCron ( parser . parse ( com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest.BI_WEEKLY_STARTING_WITH_FIRST_DAY_OF_YEAR ) ) ; assertEquals ( expected , executionTime . nextExecution ( now ) . get () ) ; }
public void ParseJSONObject () { int code = 0 ; try { code = jsonObj . getInteger ( "cod" ) ; } catch ( java.lang.Exception e ) {} if ( code == 200 ) { org.vertx.java.core.json.JsonObject newData = CreateCorrectJSONObject () ; CreateCorrectResponseString ( newData ) ; } else { responseString . append ( jsonObj ) ; } }
{ if ( ( foreground ) == null ) { super . setForeground ( color ) ; } if ( ( module ) != null ) for ( java.awt.Component c : getComponents () ) { c . setForeground ( color ) ; } }
return java.lang.System.in ) ;
( queryResult . size () ) != 0
subject . substring ( ( pos + 1 ) )
this . getCanonicalName ()
{ this . fixedModifications = searchParameters . getPtmSettings () . getFixedModifications () ; }
{ placeGuess = placeGuess . trim () ; if ( ( placeGuess != null ) && ( ( placeGuess . length () ) > 0 ) ) { mLocationGuess . setText ( placeGuess ) ; } else { mLocationGuess . setText ( R.string.set_location ) ; mObservation.place_guess = null ; } }
return commandList_ . contains ( arguments [ 0 ] ) ;
@ java.lang.Override public void setFakeHash () { if ( ( this . hash . length () ) == 0 ) { this . hash = this . pack . getId () ; if ( ( this . hash . length () ) == ( org.spongepowered.common.resourcepack.SpongeResourcePack.HASH_SIZE ) ) { this . hash += " " ; } } }
getNewId ()
private void postConvert ( final short [] inPixels , final byte [] outPixels , final int begin , final int end ) { int q = begin ; for ( int p = begin ; p < end ; ) { final short f = inPixels [ ( p ++ ) ] ; outPixels [ ( q ++ ) ] = ( f <= ( - 16 ) ) ? 0 : f >= 16256 ? - 1 : ( ( byte ) ( ( f + 16> ) > > 7 ) ) ; } }
{ org.bukkit.event.entity.EntityDamageByEntityEvent e = hitQueue . remove () ; org.bukkit.Bukkit . getPluginManager () . callEvent ( e ) ; if ( ! ( e . isCancelled () ) ) ( ( org.bukkit.entity.Damageable ) ( e . getEntity () ) ) . damage ( e . getDamage () , e . getDamager () ) ; }
desc . appendText ( "%s: not Brand -> %.2f" , mismatchScore . asDouble () )
if ( ( packet.length ) < 20 ) throw new java.lang.RuntimeException ( "Payload too short for IP" ) ;
{ java.lang.String fgColor = type . getForegroundColor () ; java.lang.String bkColor = type . getBackgroundColor () ; org.eclipse.jface.viewers.StyledString text = new org.eclipse.jface.viewers.StyledString () ; text . append ( key ) ; text . append ( ": " ) ; text . append ( value , org.eclipse.jface.viewers.StyledString . createColorRegistryStyler ( fgColor , bkColor ) ) ; return text ; }
( helper.CalendarHelper . getDateTimeString ( datetime ) . equals ( dateTimeString ) )
{ if ( ( e . getMessage () ) != null ) { return; } throw new java.io.IOException ( ( "Exception during ( this . e . getMessage () ) ) ) ; }
net.es.oscars.helpers.RequestedVlanFlowE . builder () . junctions ( junctions ) . build () ;
{ final android.view.View view = inflater . inflate ( R.layout.movie_detail_view , container , false ) ; mUnbinder = butterknife.ButterKnife . bind ( this , view ) ; if ( ( getArguments () ) != null ) { android.os.Bundle bundle = getArguments () ; mMovieId = bundle . getInt ( MovieViewHolderPortrait.MOVIEID_KEY , ( - 1 ) ) ; timber.log.Timber . d ( "movieId: %d" , mMovieId ) ; } mIvMovieDetailPoster . setImageResource ( R.drawable.contact_one ) ; return view ; }
if ( decl instanceof wyal.util.Declaration.Named.Type ) { wyal.util.Declaration.Named.Type td = ( ( wyal.util.Declaration.Named.Type ) ( decl ) ) ; return expandTypeInvariant ( td , arguments . getOperand ( 0 ) ) ; } else { wyal.util.Declaration.Named.Macro md = ( ( wyal.util.Declaration.Named.Macro ) ( decl ) ) ; return expandMacroBody ( md ) ; }
{ if ( digitsim.DigitSimController . isLocked () ) { return; } Gestures.NodeGestures.draggedAnchorPoint = true ; aP . setCoords ( toolbox.GenFunctions . getXYAdaptGrid ( new general.Vector2i ( ( ( int ) ( event . getX () ) ) , ( ( int ) ( event . getY () ) ) ) ) ) ; c . moveAnchorPoint ( aP ) ; c . drawDirectPreLine () ; }
return o instanceof West.Math.ComplexNumber ? ( ( ( West.Math.ComplexNumber ) ( o ) ) . real . equals ( real ) ) && ( ( ( West.Math.ComplexNumber ) ( o ) ) . imag . equals ( imag ) ) : false ;
{ bScreen () ; game.batch . begin () ; game.batch . draw ( sprite_title , 100 , ( ( ( com.jsl.babytrader.Data.ConstData.SCREEN_HEIGHT ) - ( sprite_title . getHeight () ) ) - 50 ) ) ; stage . act ( Gdx.graphics . getDeltaTime () ) ; stage . draw () ; }
{ java.lang.System.out . format ( "%d is between %d and %d%n" , i ) ; max = java.lang.Math . max ( A [ i ] , max ) ; }
{ java.lang.String tableId = tableIds [ tableSpin . getSelectedItemPosition () ] ; if ( appName != null ) { org.opendatakit.tables.tasks.ExportTask task = new org.opendatakit.tables.tasks.ExportTask ( org.opendatakit.tables.utils.ImportExportDialog . newInstance ( ImportExportDialog.EXPORT_IN_PROGRESS_DIALOG , this ) , appName , this ) ; task . execute ( new org.opendatakit.tables.tasks.ExportRequest ( appName , tableId , comTextBox . getText () . toString () . trim () ) ) ; } }
@ com.codecool.neighbrotaxi.controller.RequestMapping ( value = "/logged-in-user" , method = RequestMethod.GET ) public com.codecool.neighbrotaxi.model.SerializableSessionStorage loggedInUser ( java.util.Objects . equals ( org.codecool.neighbrotaxi.model.SerializableSessionStorage loggedInUser () ) , method = RequestMethod.GET ) public com.codecool.neighbrotaxi.model.SerializableSessionStorage loggedInUser ( java.util.Objects . equals ( org.codecool.neighbrotaxi.model.SerializableSessionStorage loggedInUser () ) , method = RequestMethod.GET ) public com.codecool.neighbrotaxi.model.SerializableSessionStorage loggedInUser ( java.util.Objects . equals ( org.codecool.neighbrotaxi.model.SerializableSessionStorage loggedInUser () ) , method = RequestMethod.GET ) public com.codecool.neighbrotaxi.model.SerializableSessionStorage loggedInUser ( java.util.List < com.codecool.neighbrotaxi.model.SerializableSessionStorage loggedInUser () ) { if ( java.util.Objects . equals ( ( ( java.util.Objects . equals ( ( ( value = "/logged-in-user" ) + 1 ) + 1 ) ) ) . clearAllInfoMessages () . get ( "anonymous" ) ) ) { if ( java.util.Objects . equals ( ( ( java.util.Objects . equals ( ( ( value = "/logged-in-user" ) + 1 ) + 1 ) ) ) != null ) ) { if ( java.util.Objects . equals ( . getLoggedInUser () . getName () , "anonymous" ) ) { start . addErrorMessage ( "N node is logged in!" ) ; } else { if ( ! ( userService . findByUsername ( name . getLoggedInUser () . getUsername () ) ) ) { return null ; } } return new com.codecool.neighbrotaxi.model.SerializableSessionStorage ( ( ( value = "/logged-in-user" , method = RequestMethod.GET ) ) + new com.codecool.neighbrotaxi.model.SerializableSessionStorage ( name ) ) ; } }
{ mBluetoothLeScanner . startScan ( new java.util.ArrayList < android.bluetooth.le.ScanFilter > () , settings , mScanCallback ) ; if ( com.foodaholic.foodaholic.service.EddystoneScannerService.DEBUG_SCAN ) android.util.Log . d ( com.foodaholic.foodaholic.service.EddystoneScannerService.TAG , "Scanning started..." ) ; }
if ( ! ( getChildren () . contains ( closeButton ) ) ) getChildren () . add ( closeButton ) ;
if ( ( game . getCpuPlayer () ) == ( Player.BLUE ) ) { blueInvLabel . setVisible ( true ) ; redInvLabel . setVisible ( false ) ; } else { blueInvLabel . setVisible ( false ) ; redInvLabel . setVisible ( true ) ; }
a . put ( "errors" , a )
{ javax.swing.JMenu importMenu = new javax.swing.JMenu ( " ) ; javax.swing.JMenuItem importMenuItem = new javax.swing.JMenuItem ( "Импорт/lengthкспорт данных" ) ; importMenu . add ( importMenuItem ) ; importMenuItem . addActionListenerMenuItem . addActionListener ( ( ae ) - > new diplom.importexport.ImportExportSwingFrame ( "импорт/кспорт данных" ) ; } ) ; return importMenu ; }
{ javax.persistence.EntityTransaction transaction = contractDao . getTransaction () ; com.tsystems.javaschool.business.services.interfaces.OptionService optionService = new com.tsystems.javaschool.business.services.implementations.OptionServiceImpl () ; boolean insideOtherTransaction = transaction . isActive () ; if ( ! insideOtherTransaction ) transaction . begin () ; contract . setUsedOptions ( optionService . loadOptionsByIds ( optionsIds ) ) ; contractDao . create ( contract ) ; if ( ! insideOtherTransaction ) transaction . commit () ; }
{ final org.eclipse.jface.text.contentassist.ContentAssistant assistant = new org.eclipse.jface.text.contentassist.ContentAssistant () ; assistant . setContentAssistProcessor ( new eu.modelwriter.core.alloyinecore.ui.editor.completion.AIECompletionProcessor () ) ; assistant . setAutoActivationDelay ( 500 ) ; assistant . enableAutoActivation ( true ) ; assistant . enableAutoInsert ( true ) ; assistant . setProposalPopupOrientation ( IContentAssistant.PROPOSAL_OVERLAY ) ; assistant . setContextInformationPopupOrientation ( IContentAssistant.CONTEXT_INFO_ABOVE ) ; return assistant ; }
if ( ( ( null ) == ( - 1 ) ) || ( ( malls ) == null ) ) { Sound.SIZEUP . play () ; } else { if ( ! ( ball . getSpeed () . intersects ( null ) ) ) { Sound.SIZEUP . play () ; } if ( ( null ) == ( - 1 ) ) { Soundle . setWidth ( 75 ) ; } else { score += 10 ; } }
{ Project_18.me . addTrail ( fb , user_ID ) ; setFollowButton ( false ) ; }
@ org.junit.Test public void testFindAll ( ) throws java.lang.Exception { populateData () ; int expectedSize = 12 ; int actualSize = 0 ; java.util.List < net.smartcosmos.dto.things.ThingResponse > response = persistenceService . findAll ( tenantUrn ) ; assertFalse ( response . isEmpty () ) ; actualSize = response . size () ; assertTrue ( ( ( ( "Expected " + expectedSize ) + " but received " ) + actualSize ) , ( actualSize == expectedSize ) ) ; }
private int getStartIndex ( tspUtil.Node [] randomPath ) { int start = 0 ; double MAX = 0 ; for ( int i = 0 ; i < ( numOfCity ) ; i ++ ) { for ( int j = 0 ; j < ( numOfCity ) ; j ++ ) { if ( ( distance [ i ] [ j ] ) > MAX ) { MAX = distance [ i ] [ j ] ; start = i ; } } } return start ; }
{ mSwipeRefreshLayout . setRefreshing ( false ) ; updatevalues () ; adapter . refreshEvents ( infochat , imgid ) ; }
out . append ( job ) . append ( "\t" ) . append ( mappedJobs . get ( job ) [ 0 ] ) . append ( "\t" ) . append ( mappedJobs . get ( job ) [ 1 ] ) ;
com.xiaofeng.androidlibs.DemoUtil . generate ( 200 , 3 , 13 )
{ mockConfig . getIotHubHostname () ; result = hostName ; mockConfig . getIotHubName () ; result = hubName ; mockConfig . getDeviceId () ; result = deviceId ; mockConfig . getDeviceKey () ; result = deviceKey ; com.microsoft.azure.iothub.net.IotHubUri . getResourceUri ( hostName , deviceId ) ; new com.microsoft.azure.iothub.auth.IotHubSasToken ( resourceUri , deviceKey , anyLong ) ; result = mockToken ; }
@ java.lang.Override protected void onPause () { super . onPause () ; rc . stop () ; pauseTime = java.lang.System . currentTimeMillis () ; totalForgroundTime = ( androiddb . getLong ( "TotalForegroundTime" , 0 ) ) + ( ( pauseTime ) - ( resumeTime ) ) ; }
if ( ( ( v . getId () ) == ( R.id.upload_files_btn_upload ) ) && ( ( mBehaviourSpinner . getSelectedItemPosition () ) == 0 ) ) { new com.owncloud.android.ui.activity.UploadFilesActivity.CheckAvailableSpaceTask () . execute () ; }
private boolean matchesContract ( net.nikr.eve.jeveasset.gui.tabs.contracts.MyContractItem contractItem , boolean add ) { return ( contractItem != null ) && ( matches ( add , contractItem . getTypeID () , ( contractItem . getContract () . isForCorp () ? contractItem . getContract () . getIssuerCorpID () : contractItem . getContract () . getIssuerID () ) , null , null , contractItem . getContract () . getLocations () , null , null , null , null , contractItem ) ) ; }
onBackPressed () ;
{ if ( ( current . getNext () ) == null ) { return false ; } if ( ( current . getNext () ) == null ) { return false ; } }
params [ 1 ]
{ android.os.Debug . waitForDebugger () ; route = new com.polsl.roadtracker.database.entity.RouteData () ; route . start () ; routeDataDao . insert ( route ) ; sensorReader . startSensorReading ( route . getId () , this . getSharedPreferences ( "SensorReaderPreferences" , Context.MODE_PRIVATE ) ) ; android.os.Debug . waitForDebugger () ; }
return null ;
( android.content.pm.PackageManager.PERMISSION_DENIED )
{ java.util.Calendar dataCobranca = java.util.Calendar . getInstance () ; dataCobranca . setTime ( dataCompra . getTime () ) ; if ( ( dataCobranca . get ( java.util.Calendar.DAY_OF_MONTH ) ) >= ( diaVirada ) ) { dataCobranca . add ( java.util.Calendar.MONTH , 1 ) ; } dataCobranca . set ( java.util.Calendar.DAY_OF_MONTH , diaVencimento ) ; return dataCobranca ; }
{ android.util.Log . v ( com.plugin.gcm.NotificationService.TAG , "registration error -> No ) ; getWebView () ; }
{ java.lang.String message = in . readLine () ; java.lang.System.out . println ( ( "ici : " + message ) ) ; player . getMessageFromClient ( message ) ; }
if ( ( t != null ) && ( ! ( edu.hypersocket.permissions.PermissionType t2 ) ) ) { edu.hypersocket.permissions.PermissionType t2 : t . setPermissions () ; }
{ if ( oldResidence == null ) return; oldResidence = oldResidence . toLowerCase () ; newResidence = newResidence . toLowerCase () ; com.bekvon.bukkit.residence.protection.ClaimedResidence res = ResidenceList . get ( oldResidence ) ; if ( res != null ) { removeResidence ( oldResidence ) ; ResidenceList . put ( newResidence , res ) ; } }
{ if ( ( builder.colorsTop ) != null ) { colorsTop = builder.colorsTop ; colorsSub = builder.colorsSub ; return; } if ( builder.accentMode ) { android.util.Log . d ( "testtt" , "is accent mode" ) ; colorsTop = ColorPalette.ACCENT_COLORS ; colorsSub = ColorPalette.ACCENT_COLORS_SUB ; } else { android.util.Log . d ( "testtt" , "is not accent mode" ) ; colorsTop = ColorPalette.PRIMARY_COLORS ; colorsSub = ColorPalette.PRIMARY_COLORS_SUB ; } }
com.ddiehl.timesincetextview.TimeSince . getFormattedDateString ( mTime )
new com.sogilis.ReactNativeBluetooth.BluetoothAction ( new com.sogilis.ReactNativeBluetooth.ReadableMap deviceMap , final com.sogilis.ReactNativeBluetooth.BluetoothAction disconnectAction = new com.sogilis.ReactNativeBluetooth.BluetoothAction ( this_DISCONNECTED , eventEmitter ) { @ java.lang.Override public void run ( ) throws com.sogilis.ReactNativeBluetooth.domain.BluetoothException { com.sogilis.ReactNativeBluetooth.BluetoothGatt gatt = gattCollection . get ( deviceId ) ; gatt . disconnect () ; bluetoothActionsLoop . actionDone () ; } }
{ int result = super . hashCode () ; result = ( 31 * result ) + ( ( t1 ) != null ? t1 . hashCode () : 0 ) ; result = ( 31 * result ) + ( ( t2 ) != null ? t2 . hashCode () : 0 ) ; return result ; }
junit.framework.Assert . assertTrue ( adapter . getAlbumList () . get ( 0 ) . equals ( "Hallo Welt!" ) ) ;
{ java.lang.System.out . println ( "FILE" ) ; java.lang.System.out . println ( "FILE" ) ; java.lang.System.out . println ( "FILE" ) ; javax.json.JsonObject json = org.jtool..recorder. {.MacroJSON . getJSONObjectBuikder ( this ) . add (UserroJSON.JSON_ATTR_CODE , code ) . add ( pageroJSON.JSON_ATTR_CHARSET , charset ) . add ( null ) ; } else { java.lang.System.out . println ( srcDstPath ) . build () ; }
{ if ( ( profile . getUrls () . size () ) > 0 ) { for ( java.lang.String url : profile . getUrls () ) { if ( ( profile . getUrls () . size () ) == 0 ) { return; } } } finally { driver . quit () ; } }
{ java.util.List < domain.ContractOption > currentIncOptions = option . getIn ()Options () ; java.util.List < domain.ContractOption > removingOptions = new java.util.ArrayList ( currentIncOptions ) ; removingOptions . removeAll ( newIncOptions ) ; java.util.List < domain.ContractOption > newOptions = new java.util.ArrayList ( newIncOptions ) ; java.util.List < domain.ContractOption > newOptions = new java.util.ArrayList ( newIncOptions ) ; java.util.List < domain.ContractOption > newOptions = new java.util.ArrayList ( newIncOptions ) ; java.util.List < domain.ContractOption > newOptions = new java.util.ArrayList ( newIncOptions ) ; java.util.List < domain.ContractOption > newOptions = new java.util.ArrayList ( newIncOptions ) ; java.util.List < domain.ContractOption > newOptions = new java.util.ArrayList ( newIncOptions ) ; java.util.List < domain.ContractOption > newOptions = new java.util.ArrayList ( newIncOptions ) ; for ( domain.ContractOption removingOption : removingOptions ) { deleteerOptions ( option , newOption ) ; }
private boolean isManaTurn ( int turnNum ) { int current = 1 ; int past = 0 ; while ( current < ( turnNum + 1 ) ) { int temp = current ; current += past ; if ( current == turnNum ) { return true ; } } return false ; }
public java.lang.String actionSignup ( java.lang.String role ) { boh.jee.ejb.model.Guest user = null ; user = new boh.jee.ejb.model.User () ; user . setGuestName ( userName ) ; user . setGuestPhone ( userPhone ) ; user . setGuestEmail ( userEmail ) ; if ( userSrv . userSignUp ( user ) ) { return "roomlist" ; } else { illegalAccess = true ; return "signup" ; } }
{ com.oracle.truffle.api.object.Shape oldShape = obj . getShape () . createSeparateShape ( obj . getShape () . getSharedData () ) ; if ( oldShape != null ) { com.oracle.truffle.api.object.Shape newShape = oldShape . replaceProperty ( obj . getShape () . getProperty ( som.vmobjects.SRef )Object.ENVIRONMENT ) , com.oracle.truffle.api.object.Property . create ( som.vmobjects.SRef =Object.ENVI ) ; obj . setShapeAndGrow ( oldShape , newShape ) ; } obj . setShapeAndGrow ( oldShape , newShape ) ; }
java.lang.System.out . println ( result )
private static java.lang.String encrypt ( java.lang.String algorithm , java.lang.String clearText ) { java.security.MessageDigest pwd = java.security.MessageDigest . getInstance ( algorithm ) ; pwd . update ( clearText . getBytes () ) ; return com.sun.org.apache.xerces.internal.impl.dv.util.HexBin . encode ( pwd . digest () ) ; }
if ( diffX . contains ( cell.y ) ) { diffX . add ( cell.y ) ; }
if ( ( a1 != a2 ) && ( ( a1 . getName () ) != "floor" ) ) { if ( isCollision ( a1 , a2 ) ) resolveCollision ( a1 , a2 ) ; }
public static < T extends java.io.Serializable > void print ( T [] o ) { java.lang.String delim = "{" ; for ( T elem : o ) { myUtils.ConsolePrinting . print ( delim ) ; myUtils.ConsolePrinting . print ( elem ) ; delim = ", " ; } for ( int i = 0 ; i < ( o . size () ) ; i ++ ) { return "{}" : "}" ; } myUtils.ConsolePrinting . print ( delim ) ; }
session . getRootNode ()
new java.util.TreeMap <> ()
venue . setText ( task . getVenue () . value ) ;
{ if ( time <= 0 ) { return; } double timeToFirstCollision = this . getTimeToFirstCollision () ; if ( time <= timeToFirstCollision ) { this . advance ( time ) ; return; } this . advance ( timeToFirstCollision ) ; this . resolveCollision ( collistionListener ) ; java.lang.System.out . println ( timeToFirstCollision ) ; this . evolve ( ( time - timeToFirstCollision ) , collistionListener ) ; }
return true ;
new org.jboss.tools.fuse.reddeer.projectexplorer.CamelProject ( org.jboss.tools.fuse.ui.bot.test.ProjectLocalRunTest.PROJECT_NAME , true )
{ if ( index < 0 ) { removeFirstNode () ; } else if ( index >= ( ( size ) - 1 ) ) { removeLastNode () ; } else { a3.LinkedList.Node stepNode = head ; for ( int i = 1 ; i < index ; ++ i ) { stepNode = stepNode.next ; } stepNode.next = stepNode.next.next ; stepNode = stepNode.next ; stepNode = null ; } }
new model.Payment ( service , 1 , 1 )
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; camera = new com.example.svenscan.svenscan.utils.Camera ( this , this ) ; com.example.svenscan.svenscan.SvenScanApplication app = ( ( com.example.svenscan.svenscan.SvenScanApplication ) ( getApplication () ) ) ; wordManager = app . getWordRepository () ; return new com.example.svenscan.svenscan.utils.ocr.OCRDecoder ( app ) ; }
new Model.Location ( x , y )
{ this . _plugin = plugin ; se.fredsfursten.donationboardplugin.BoardController.numberOfDays = se.fredsfursten.donationboardplugin.DonationBoardPlugin . getPluginConfig () . getInt ( "Days" ) ; se.fredsfursten.donationboardplugin.BoardController.numberOfLevels = se.fredsfursten.donationboardplugin.DonationBoardPlugin . getPluginConfig () . getInt ( "Levels" ) ; this . _model = new se.fredsfursten.donationboardplugin.BoardModel ( se.fredsfursten.donationboardplugin.BoardController.numberOfDays , se.fredsfursten.donationboardplugin.BoardController.numberOfLevels ) ; load ( se.fredsfursten.donationboardplugin.DonationBoardPlugin . getDonationsStorageFile () ) ; }
{ net.minecraft.item.ItemStack stack = player . getHeldItem ( hand ) ; if ( world.isRemote ) { return new net.minecraft.util.ActionResult < net.minecraft.item.ItemStack > ( net.minecraft.util.EnumActionResult.FAIL , stack ) ; } net.minecraft.util.math.Vec3d releasePoint = this . getAirPositionInFrontOfPlayer ( world , player , 0.8 ) ; this . releaseBug ( stack , world , player , hand , releasePoint ) ; }
{ objUser = objUserDAO . getUserByEmailAndPassword ( strUsername , strPassword ) ; }
if ( new android.content.Intent ( this , com.brainmurphy.roomhack.Dashboard . class ) ) { startActivity ( new android.content.Intent ( this , com.brainmurphy.roomhack.Dashboard . class ) ) ; }
layoutComponent ( component , "100%" )
@ org.junit.Test public void Set_ExtendedIngredients () { com.sem4ikt.uni.recipefinderchatbot.model.ExtendedIngredientModel ingredient = new com.sem4ikt.uni.recipefinderchatbot.model.ExtendedIngredientModel () ; ingredient . setImage ( "test" ) ; java.util.List < com.sem4ikt.uni.recipefinderchatbot.model.ExtendedIngredientModel > list = new java.util.ArrayList <> () ; list . add ( ingredient ) ; recipeModel . setExtendedIngredients ( list ) ; org.junit.Assert . assertEquals ( recipeModel . getExtendedIngredients () , list ) ; }
{ if ( ( connection . current () ) == null ) { throw new java.lang.IllegalStateException ( "cannot call remote functions without a connected client in context" ) ; } connection . current () . send ( jj.jjmessage.JJMessage . makeCall ( java.lang.String . valueOf ( args [ 0 ] ) , java.lang.String . valueOf ( args [ 1 ] ) ) ) ; return org.mozilla.javascript.Undefined.instance ; }
value = component . calculateComponentValue ( ( ( value ) + 1 ) , isWhitePlayer , depth ) ;
getString a service which requires an = null
{ net.anei.cadpage.parsers.Table.Parser p = new net.anei.cadpage.parsers. ( body , data.strUnit ) ; data.strUnit = p . getLast ( ' ' ) ; java.lang.String source = p . get () ; if ( ( source . length () ) == 0 ) return false ; if ( ! ( super . parseMsg ( body , data ) ) ) return false ; data.strBox = data.strSource ; data.strSource = source ; return true ; }
@ java.lang.Override public void onNext ( T i ) { boolean stop = ( ++ ( count ) ) >= ( limit ) ; child . onNext ( i ) ; if ( stop && ( completed ) ) { completed = true ; try { child . onCompleted () ; } finally { unsubscribe () ; } } }
if ( developerId . equals ( product . getDeveloperId () ) ) { com.umasuo.device.center.application.service.UnionApplication.LOGGER . debug ( "Developer: {} don't own this product: {}." , developerId , productId ) ; throw new com.umasuo.exception.AuthFailedException ( "Developer do not own this product" ) ; }
@ java.lang.Override public void setInit ( java.io.Reader stream ) { jj_input_stream . errorInit ( stream , 1 , 1 ) ; token_source . setInit ( jj_input_stream ) ; token = new org.sbml.jsbml.text.parser.Token () ; jj_ ) = - 1 ; jj_gen = 0 ; for ( int i = 0 ; i < 17 ; i ++ ) { jj_la1 [ i ] = - 1 ; } for ( int i = 0 ; i < ( jj_2_rtns.length ) ; i ++ ) { jj_2_rtns [ i ] = new org.sbml.jsbml.text.parser.FormulaParserLL3.JJCalls () ; } }
{ TraceGenerator generator = new TraceGenerator ( 4 , 4 , 4 , 4 , 8 , 8 , 4 , 4 , 3 , 3 , 5 ) ; Computation r = generator . generateTrace () ; java.lang.System.out . println ( org ) ; App app = new App ( false , true , false , false ) ; java.util.List < Computation > set = app . generateComputations ( getValue ) ; java.lang.System.out . println ( set . get ( 0 ) ) ; }
new org.alfresco.repo.policy.JavaBehaviour ()
getValue ()
clientportal.EnrollCustomerPage . Goto () . selectTemplate ( BrandedMessagingTests.templateName , false ) . selectTemplate ( BrandedMessagingTests.templateNameImage )
shoot ( 0 , Direction.DOWN , GamePanel . getGameObjects () , GamePanel . getProjectileList () )
{ java.lang.System.out . println ( ( ( ( ( ( ( ( UI.ui.BACKGROUND_BLUE ) + ( UI.ui.HIGH_INTENSITY ) ) + ( UI.ui.YELLOW ) ) + i ) + ".\t" ) + msg ) + ( ansi () . reset () ) ) ) ; }
{ mMediaRecorder . start () ; mMediaRecorder . setMaxDuration ( 30000 ) ; billy.justincase.MainActivity . getOutputMediaFileUri () ; isRecording = true ; }
{ if ( actionValue == null ) return; currentValue = actionValue ; if ( ! ( action . getValue () . equals ( actionValue ) ) ) this . action . setValue ( actionValue ) ; initChildList () ; logger . debug ( "setAction value: {}, children: {}" , actionValue , ( ( getCurrentParameters () ) == null ? "null" : getCurrentParameters () . size () ) ) ; }
return ( ( ( ( command == ( INDEX_ADD ) ) || ( command == ( INDEX_EDIT ) ) ) || ( command == ( INDEX_DELETE ) ) ) || ( command == ( INDEX_COMPLETE ) ) ) || ( command == ( INDEX_OVERDUE ) ) ;
if ( ( value ) == null ) { return null ; } for ( int i = 0 ; i < ( tokens . size () ) ; i ++ ) { return null ; } for ( int i = 0 ; i < ( tokens . size () ) ; i ++ ) { java.lang.System.out . println ( value . toString () ) ; } return null ; }
{ mcmultipart.multipart.MultipartHelper . getPartContainer ( getWorld () , getPos () ) . removePart ( this ) ; }
{ if ( io.particle.android.sdk.utils.EZ . isThisTheMainThread () ) { toastRunnable . run () ; android.widget.Toast . makeText ( activity , msg , length ) . show () ; } else { io.particle.android.sdk.utils.EZ . runOnMainThread ( toastRunnable ) ; } }
public static java.lang.String getImports () { java.lang.StringBuilder sb = new java.lang.StringBuilder ( "import org.junit.Test;\n" ) ; sb . append ( "import org.junit.Before;\n" ) ; sb . append ( "import org.junit.Assert;\n" ) ; for ( java.lang.String imp : main.MakeTests.imports ) { if ( main.MakeTests . isValidClass ( imp ) ) { sb . append ( ( ( "import " + imp ) + ";\n" ) ) ; } } return sb . toString () ; }
of . getEgo ()
com.charlesmadere.hummingbird.networking.Api . removedrateFeed ( body , feed , listener )
{ android.util.Log . i ( " , "Story activity saved" ) ; android.content.SharedPreferences settings = getSharedPreferences ( MainMenuActivity.PREFS_NAME , Context.MODE_PRIVATE ) ; android.content.SharedPreferences.Editor editor = settings . edit () ; editor . putString ( "activity" , "story_page" ) ; editor . putString ( "story" , story . getUniqueID () ) ; editor . putInt ( "page" , currentPage ) ; editor . commit () ; }
@ org.junit.Test public void getName ( ) throws java.lang.Exception { pingproject.biz.beans.PingBean mockPingBean = mock ( pingproject.biz.beans.PingBean . class ) ; doReturn ( mockPingBean ) . when ( pingproject.web.ManagedBeans.PingWebBeanTest.spy ) . getPingBean () ; pingproject.web.ManagedBeans.PingWebBeanTest.spy . getName () ; verify ( pingproject.web.ManagedBeans.PingWebBeanTest.spy ) . getPingBean () ; verify ( mockPingBean ) . retrieveName () ; }
mockMvc . perform ( get ( com.cinema.controller.rest.CustomerControllerTest.CUSTOMER_GET_ALL ) . accept ( MediaType.APPLICATION_JSON ) ) . andDo ( org.springframework.test.web.servlet.result.MockMvcResultHandlers . print () ) ;
{ int rd = file . nextInt () ; int rs = file . nextInt () ; int sa = file . nextInt () ; file . nextLine () ; int funct = 8 ; int rt = 0 ; java.lang.String opc = "SRL" ; ilist . add ( ( ( interfaces.IInstruction ) ( new model.RTypeInstruction ( opc , rd , rs , rt ) ) ) ) ; }
= this . getSCIMAttributes ( userName , claims ) ;
new emcshop.scraper.EmcSession ( connection . getCookieStore () )
server . startup ()
@ java.lang.Override public void changeState ( com.example.alexander_topilskii.internetradio.models.database.Station station ) { if ( station != null ) { currentState = State.IS_WAIT ; listener . setPlayerStates ( ( - 1 ) , State.IS_WAIT ) ; if ( ( mediaPlayer ) == null ) initPlayer ( station . getSource () ) ; else { if ( mediaPlayer . isPlaying () ) { pause () ; } else { play () ; } } } }
{ try { java.io.InputStream in = new java.net.URL ( params [ 0 ] ) . openStream () ; moviePoster = android.graphics.BitmapFactory . decodeStream ( in ) ; } catch ( java.lang.Exception e ) { android.util.Log . d ( "Error" , params [ 0 ] ) ; e . printStackTrace () ; } return moviePoster ; }
{ if ( mDrawerLayout . isDrawerOpen ( mDrawerListView ) ) { mDrawerLayout . closeDrawer ( mDrawerListView ) ; return; } fragmentMediator . backPressWebView () ; edu.rutgers.css.Rutgers.utils.LogUtils . LOGV ( edu.rutgers.css.Rutgers.ui.MainActivity.TAG , ( "Back button pressed. Leaving top component: " + ( edu.rutgers.css.Rutgers.utils.AppUtils . topHandle ( this ) ) ) ) ; super . onBackPressed () ; }
{ adapter . setShowLoading ( false ) ; if ( refresh ) { swipeRefreshLayout . setRefreshing ( false ) ; adapter . setData ( shots ) ; } else { swipeRefreshLayout . setEnabled ( true ) ; adapter . append ( shots ) ; } }
{ try { log . info ( "Closing connection." ) ; log . info ( "Connection close." ) ; } catch ( java.io.IOException e ) { log . error ( e . getLocalizedMessage () ) ; log . error ( "Impossible to close connection." ) ; } }
{ int [] [] out = new int [ [ _grid.length ] [ _grid [ 0 ] . length ] ; for ( int i = 0 ; i < ( _grid.length ) ; i ++ ) for ( int j = 0 ; j < ( _grid [ 0 ] . length ) ; j ++ ) out [ i ] [ j ] = _buffer [ i ] [ j ] ; return out ; }
crawl . run ( sc . getUrlSeed () , null )
loadScene ( com.f.donkies.gamestates.SceneState.SCENE_PATH )
( "Сх. акс. " + i ) + 1
{ android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; java.lang.String Query = ( ( ( ( ( ( ( "DELETE FROM " + ( com.z3r0byte.magistify.DatabaseHelpers.CalendarDB.TABLE_CALENDAR ) ) + " WHERE " ) + ( com.z3r0byte.magistify.DatabaseHelpers.CalendarDB.KEY_FORMATTED_START ) ) + " <= " ) + date ) + " AND " ) + ( com.z3r0byte.magistify.DatabaseHelpers.CalendarDB.KEY_FORMATTED_END ) ) + date ; android.util.Log . d ( com.z3r0byte.magistify.DatabaseHelpers.CalendarDB.TAG , ( "deleteAppointmentByDateInt: Query: " + Query ) ) ; db . execSQL ( Query ) ; }
if ( ! ( appBarLayout . setTitle ( mItem.id ) ) ) { appBarLayout . setTitle ( mItem.id ) ; }
{ if ( USE_PVLOGGER . isSelected () ) USE_LOGGEDBEND . setEnabled ( true ) ; else USE_LOGGEDBEND . setEnabled ( false ) ; setHasChanges ( true ) ; }
{ super . show () ; Gdx.app . debug ( com.lothbrok.game.screens.MainMenuScreen.TAG , "show" ) ; stage = new com.badlogic.gdx.scenes.scene2d.Stage ( new com.badlogic.gdx.utils.viewport.ExtendViewport ( 0.instance . getMenuWidth () , 0.instance . getMenuHeight () ) ) ; skin = assets . getMainMenuSkin () ; }
{ int temp = 0 ; for ( int i = 0 ; i < ( inputs.length ) ; i ++ ) { temp += ( inputs [ i ] ) * ( weights [ i ] ) ; } return ( ( float ) ( 1 / ( 1 + ( java.lang.Math . pow ( java.lang.Math.E , ( - temp ) ) ) ) ) ) ; }
{ switch ( game.max ) { case "W" : score = ( scoreWhite () ) - ( scoreBlack () ) ; break; case "B" : score = ( scoreBlack () ) - ( scoreWhite () ) ; break; default: break; } }
{ java.lang.String playerName = player . getName () ; org.bukkit.scoreboard.Team playerTeam = org.bukkit.Bukkit . getScoreboardManager () . getMainScoreboard () . getEntryTeam ( playerName ) ; player . setDisplayName ( ( ( ( ( playerTeam . getPrefix () ) + playerName ) + ( playerTeam . getSuffix () ) ) + ( org.bukkit.ChatColor.RESET ) ) ) ; }
{ if ( ( this . compareTo ( that ) ) == 0 ) { return java.lang.Double.NEGATIVE_INFINITY ; } if ( ( this . x ) == ( that.x ) ) { return java.lang.Double.POSITIVE_INFINITY ; } return ( ( double ) ( ( that.y ) - ( this . y ) ) ) / ( ( that.x ) - ( this . x ) ) ; }
testPage = runner . run ( testPage ) ;
{ http2Connect () ; sendSimplePostRequest ( 3 ) ; readSimplePostResponse () ; }
execute ( Method.GET , Regions.INSTANCE . region ( bucketName ) )
{ key = com.google.common.base.Preconditions . checkNotNull ( key ) ; com.google.common.cache.LocalCache.Timestamped
private java.lang.Integer captchaHashCalculation ( java.lang.String value ) { int hash = 5381 ; value = value . toUpperCase () ; for ( int i = 0 ; i < ( value . length () ) ; i ++ ) { hash = ( ( hash < < 5 ) + hash ) + ( value . charAt ( i ) ) ; } return java.lang.Integer . valueOf ( hash ) ; }
{ response . clear () ; java.lang.String firstToken = ( ( java.lang.String ) ( readToken ( response ) ) ) ; response . add ( firstToken ) ; if ( isStatusResponse ( firstToken ) ) { parseResponseText ( response ) ; } else { java.lang.Object token ; while ( ( token = readToken ( response ) ) != null ) { if ( ! ( token instanceof com.fsck.k9.mail.store.ImapResponseParser.ImapList ) ) { response . add ( token ) ; } } response.mCompleted = true ; } }
stmt . executeQuery ( sql )
org.geneontology.minerva.util.IdStringManager . getId ( individual )
{ java.util.ArrayList < java.awt.Point > roiData = util.DataManager . readRoiFile ( chosenPath ) ; if ( ( roiData . size () ) > 0 ) { setFields () ; notifyRoiListeners ( roiData ) ; if ( defaultCheckBox . isSelected () ) { notifyRoiListeners ( chosenPath ) ; } } else { errorText . setText ( "Error loading: File not found!" ) ; } }
java.lang.System . arraycopy ( values , 0 , 0 , 0 , values.length )
git_aptra.SearchApplicant.DialogSearchApplicantApplication.educationalAchievement . equals ( "Bitte ausw hlen" )
{ org.jenkinsci.plugins.rabbitmqbuildtrigger.RemoteBuildListener listener = org.jenkinsci.plugins.rabbitmqconsumer.extensions.MessageQueueListener . all () . get ( org.jenkinsci.plugins.rabbitmqbuildtrigger.RemoteBuildListener . class ) ; if ( listener != null ) { listener . addTrigger ( this ) ; } }
fEventList . get ( 0 )
array = new float [ buffer . size () ]
{ com.google.common.base.Preconditions . checkNotNull ( source , "source" ) ; com.google.common.base.Preconditions . checkNotNull ( source , "observer" ) ; com.google.common.base.Preconditions . checkArgument ( verifySource ( source ) , "Source is not the right type!" ) ; com.google.common.base.Preconditions . checkArgument ( verifySource ( source ) , "Observer is not the right type!" ) ; }
( ! ( o instanceof java.lang.String ) ) && ( ! ( o instanceof java.lang.Double ) )
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_settings ) ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; getFragmentManager () . beginTransaction () . add ( R.id.content_settings , new com.example.android.sunshine.app.SettingsFragment () ) . commit () ; }
{ t . setBranch ( branch ) ; t . setCommitMessage ( java.lang.System . getenv ( "TRAVIS_COMMIT_MESSAGE" ) ) ; t . setPullRequest ( isPullRequest ) ; }
{ rooms . add ( new labfinder.Room ( doc ) ) ; if ( ( all ) != null ) { java.util.List < org.bson.Document > all = classCol . find () . into ( new java.util.ArrayList < org.bson.Document > () ) ; } }
new com.stormpath.sdk.servlet.filter.oauth.OAuthException ( err , msg , null , e )
{ url = ensureprotocol ( url ) ; org.openmrs.mobile.activities.LoginActivity.mLastURL = url ; org.openmrs.mobile.utilities.URLValidator.ValidationResult result = org.openmrs.mobile.utilities.URLValidator . validate ( url ) ; if ( result . isURLValid () ) { mSpinner . setVisibility ( View.VISIBLE ) ; mLoginFormView . setVisibility ( View.GONE ) ; new org.openmrs.mobile.net.LocationManager () . getAvailableLocation ( org.openmrs.mobile.net.helpers.LocationHelper . createAvailableLocationListener ( result . getUrl () , this ) ) ; } else { showInvalidURLDialog () ; } }
{ java.util.List < backend.Compiler.asm_line > asm_array = new java.util.ArrayList < backend.Compiler.asm_line > () ; java.lang.String byteCodeReturn = "" ; java.lang.String [] raw_lines = i_ ; . split ( "\\r?\\n" ) ; for ( int line_i = 0 ; line_i
private void setMedian () { int mid = ( this . numbers . size () ) / 2 ; if ( ( mid % 2 ) == 1 ) { this . valueOfAllNumbers = this . numbers . get ( mid ) ; } else { this . valueOfAllNumbers = ( ( this . numbers . get ( ( mid - 1 ) ) ) + ( this . numbers . get ( mid ) ) ) / 2.0 ; } }
{ if ( uploadedFile . isEmpty () ) { return null ; } java.lang.String thisPath = uploadedFile . getName () ; java.io.File thisFile = new java.io.File ( thisPath ) ; uploadedFile . transferTo ( thisFile ) ; com.edu.nju.asi.service.serviceImpl.Case wanted = parseXML ( thisPath ) ; boolean deleteResult = thisFile . delete () ; return wanted ; }
t . get ( OTable . stream () ) . pnos . contains ( t . get ( PartTable.ID ) . pno )
if ( subject . coincide ( bookedRange ) ) { return false ; }
org.nd4j.linalg.factory.Nd4j . create ( data () , new int [] { 1 , 1 } , new int [] { 1 , 1 } , ( applyOffset ? ( offset ) + i : i ) )
{ net.torocraft.minecoprocessors.processor.Processor processor = net.torocraft.minecoprocessors.processor.ProcessorTest . setupTest ( 31 , 2 , 0 , 0 , "and a, b" ) ; processor . processAnd () ; assertRegisters ( processor , 2 , 2 , 0 , 0 ) ; assertFalse ( processor.zero ) ; processor = net.torocraft.minecoprocessors.processor.ProcessorTest . setupTest ( 29 , 2 , 0 , 0 , "and a, b" ) ; processor . processAnd () ; assertRegisters ( processor , 0 , 2 , 0 , 0 ) ; org.junit.Assert . assertTrue ( processor.zero ) ; }
com.ai.dubbo.ext.vo.BaseInfo . class . equals ( clazz )
server.Server . addAsk ( qty , models.trade.Stock . valueOf ( item ) , qty , price )
{ java.util.Set < java.lang.Integer > targetCourses = new java.util.HashSet < java.lang.Integer > () ; targetCourses . add ( course ) ; java.util.Set < java.lang.Integer > targetCourses = new java.util.HashSet < java.lang.Integer > () ; targetCourses . add ( course ) ; if ( ( com.sevendragons.practice.leetcode.File.coursesschedule.Solution . isCourseContainedInPr ()ites ( pr ()itePerCourse , targetCourses , course ) ) == true ) { return true ; } }
new be.nille.blog.web.controller.post.PostsPage ( posts , categories , null )
private rifServices.businessConceptLayer.HealthCode transformTaxonomyTermIntoHealthCode ( rifServices.businessConceptLayer.HealthCode . newInstance () ) { rifServices.businessConceptLayer.HealthCode healthCode = rifServices.businessConceptLayer.HealthCode . newInstance () ; healthCode . setCode ( term . getLabel () ) ; healthCode . set )Term ( ( ( term . getParentTerm () ) == null ) ) ; healthCode . setNameSpace ( term . getNameSpace () ) ; healthCode . setDescription ( term . getDescription () ) ; healthCode . setNumberOfSubTerms ( term . getSubTerms () . size () ) ; return healthCode ; }
x . translateString ( "chat.type.achievement" , player . getDisplayName () , ( ( cn.nukkit.utils.TextFormat.GREEN ) + ( this . getMessage () ) ) )
ActivityRecognition.Activity.ActivityType = "NotConfidentEnough"
localDB . getActivity ()
{ javafx.scene.image.ImageView iv = navMap . get ( d ) ; if ( iv == null ) { uk.ac.cam.teamdelta.Logger . error ( ( ( "NULL ] - direction" + ( d . getDegrees () ) ) + " was not in direction set" ) ) ; } iv . setImage ( hArrow ) ; }
{ super . onPreExecute () ; mControlsView . setBackgroundColor ( getResources () . getColor ( R.color.transparent_overlay ) ) ; main_button . setVisibility ( View.GONE ) ; imageProgressBar . setProgress ( 0 ) ; imageProgressBar . setVisibility ( View.VISIBLE ) ; fullscreenText . setText ( getResources () . getText ( R.string.loading ) ) ; }
for ( byte b = this . state . sfrs . A . getValue () ) ; b = ( ( byte ) ( b & ( b - 1 ) ) ) ) parity = ! parity ;
public org.json.JSONObject startVM ( org.json.JSONObject vmdata ) { try { java.lang.String tid = vmdata . getString ( " item" ) ; if ( tid . isEmpty () ) { return _create_tvd ( vmdata ) ; } else { return _start_tvd ( vmdata ) ; } } catch ( java.lang.Exception e ) {} }
@ java.lang.Override public void onDataPacket ( net.minecraft.network.NetworkManager net , net.minecraft.network.play.server.SPacketUpdateTileEntity packet ) { super . onDataPacket ( net , packet ) ; readFromNBT ( packet . getNbtCompound () ) ; net.minecraft.block.state.IBlockState state = world . getBlockState ( pos ) ; world . notifyBlockUpdate ( pos , state , state , 3 ) ; }
vm . selectAllWithSameColours ( sels , true )
{ if ( done ) { return; } done = true ; R col = collection ; if ( col != null ) { collection = null ; if ( emitRemainder ) { queue . offer ( col ) ; } } drain () ; }
{ tmpTwoCMPProjection_Aeq . zero () ; tmpTwoCMPProjection_beq . zero () ; tmpTwoCMPProjection_Aeq . tootstepVariables , numberOfFootstepsToConsider ) ; tmpTwoCMPProjection_beq . get ( numberOfFootstepsToConsider ) ; for ( int i = 0 ; i < ( numberOfFootstepsToConsider ) ; i ++ ) { tmpTwoCMPProjection_Aeq . set ( ( 3 * i ) , i , 1.0 ) ; tmpTwoCMPProjection_beq . set ( i , 1 , 1.0 ) ; } }
{ rawPanelPanel = com.sandy.jnmaker.util.ObjectRepository . getMainFrame () . getRawTextPanel () ; imagePanel = com.sandy.jnmaker.util.ObjectRepository . getMainFrame () . getImagePanel () ; jnPanel = com.sandy.jnmaker.util.ObjectRepository . getMainFrame () . getJNPanel () ; }
java.nio.ByteBuffer . allocate ( ( ( ( java.lang.Long.BYTES ) * 2 ) + ( java.lang.Integer.BYTES ) ) )
{ java.awt.Point p = tileSource . latLonToXY ( lat , lon , zoom ) ; int y = ( ( p.y ) - ( center.y ) ) - ( ( getHeight () ) / 2 ) ; return y ; }
return java.lang.String . join ( "\n" , this . ueberschrift , this . unterueberschrift , ( "AKZ: " + ( this . aktenzeichen ) ) , ( "Datum: " + ( this . getName () ) ) , ( "Rechtsbereich: " + ( this . rechtsbereich ) ) , ( "Vergehen: " + ( this . vergehen ) ) , ( "Strafmass: " + ( this . strafmass ) ) , "Gruende: " + ( this . gruende ) ) ;
{ int numOfFinishedTasks = repo . getDurationInfo ( 1 ) . getNumOfFinishedTasks () ; org.junit.Assert . assertTrue ( "There should be no finished tasks, yet" , ( numOfFinishedTasks == 0 ) ) ; repo . setPerformed ( 1 , 5 ) ; numOfFinishedTasks = repo . getDurationInfo ( 1 ) . getNumOfFinishedTasks () ; assertTrue ( "There should be 1 finished task now" , ( numOfFinishedTasks == 1 ) ) ; }
{ num1 = java.lang.Math . abs ( num1 ) ; num2 = java.lang.Math . abs ( num2 ) ; if ( num2 > num1 ) { int temp = num2 ; num2 = num1 ; num1 = temp ; } if ( num2 == 0 ) { return; } if ( ( num1 % num2 ) == 0 ) { this . maxcommom = num2 ; return; } int temp = num1 % num2 ; ojld ( num2 , temp ) ; }
( RemindyContract.ExtraTable.COLUMN_NAME_REMINDER_B )
if ( ( ( ( ( ( destX ) + ( error ) ) >= x ) || ( ( ( destX ) - ( error ) ) <= x ) ) || ( ( ( destY ) + ( error ) ) >= y ) ) || ( ( ( destY ) - ( error ) ) <= y ) ) { return true ; } else return false ;
{ filterBeen . addAll ( response . body () . getD trim () . getFilter () ) ; filterDialogVMs = new com.example.root.gitsecommerce.Main.ListFilter.FilterDialogVM ( mContext , filterBeen ) ; com.example.root.gitsecommerce.Main.ViewModel.MainActivityVM.mData . clear () ; com.example.root.gitsecommerce.Main.ViewModel.MainActivityVM.mData . addAll ( response ) ; com.example.root.gitsecommerce.Main.ViewModel.MainActivityVM.bAdapter . notifyDataSetChanged () ; }
switch ( position ) { case 0 : findViewById ( R.id.gameRelativeLayout ) . setVisibility ( View.VISIBLE ) ; mSetGridView . setVisibility ( View.INVISIBLE ) ; break; case 1 : findViewById ( R.id.gameRelativeLayout ) . setVisibility ( View.INVISIBLE ) ; mSetGridView . setVisibility ( View.VISIBLE ) ; populateSetGridView () ; break; }
{ dest . writeString ( this . path ) ; dest . writeLong ( this . dateModified ) ; dest . writeString ( this . toString , flags ) ; dest . writeLong ( this . id ) ; dest . writeLong ( this . size ) ; }
if ( ( pairs . size () ) == 1 ) pair . sendBrcast ( ip ) ;
public static void loadConfig ( java.lang.String name ) { org.vitrivr.cineast.core.config.Config config = new org.vitrivr.cineast.core.util.json.JacksonJsonProvider () . toObject ( new java.io.File ( name ) , org.vitrivr.cineast.core.config.Config . class ) ; org.vitrivr.cineast.core.config.Config.LOGGER . info ( "Config file loaded!" ) ; if ( config == null ) { org.vitrivr.cineast.core.config.Config.LOGGER . warn ( "Could not read config file '{}'." , name ) ; } else { synchronized ( org.vitrivr.cineast.core.config.Config . class ) { org.vitrivr.cineast.core.config.Config.sharedConfig = config ; } } }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.splash ) ; java.lang.Thread timerThread = new java.lang.Thread () { public void run () { try { java.lang.Thread . sleep ( 3000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } finally { android.content.Intent intent = new android.content.Intent ( com.example.eliasvensson.busify.SplashScreen . this , com.example.eliasvensson.busify.MainActivity . class ) ; startActivity ( intent ) ; overridePendingTransition ( R.anim.fade_in , R.anim.fade_out ) ; } } } ; }
new java.lang.IllegalArgumentException ( "the text is null" )
{ mConnectionState = BluetoothLeService.STATE_CONNECTED ; buttonConnect . setText ( "DISCONNECT" ) ; }
new database.Reading ( java.lang.System . currentTimeMillis () , application.processingService . getAcc1X () , app.edi.palmprothesismotionmonitoring.MainActivity.actionType , 1 )
{ internalList . remove ( ic ) ; break; }
{ int start = info . getStartOffset () ; java.lang.System.out . println ( end ) ; java.lang.System.out . println ( end ) ; list . add ( range ) ; }
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( checkConnection () ) { theView . setVisible ( false ) ; theCAView = new gomoku.CreateAccountView () ; theCAView . setVisible ( true ) ; caController = new gomoku.CreateAccountController ( theCAView , theConnection , theView ) ; theConnection . setCreateAccountController ( caController ) ; } }
public static void addTimeIconToAlarm ( long id ) { com.fasterxml.jackson.databind.node.ObjectNode jsonNotification = play.libs.Json . newObject () ; com.fasterxml.jackson.databind.node.ObjectNode action = play.libs.Json . newObject () ; jsonNotification . put ( "action" , action ) ; action . put ( "action" , "addTimeNotification" ) ; jsonNotification . put ( "alarmId" , id ) ; core.MyWebSocketManager . notifyAll ( jsonNotification ) ; }
{ org.ektorp.CouchDbConnector dbc = _db . createConnector ( get , true ) ; wasdev.sample.servlet.List < java.lang.String > list = dbc . getAllDocIds () ; for ( wasdev.sample.servlet.Sting lists : list ) { response . getWriter () . print ( ( "Get all Ids!" + lists ) ) ; } }
{ super . update () ; if ( ! ( world () . isRemote ) ) return; if ( tick ( 0 ) ) processStorage () ; if ( tick ( 2 ) ) processStorage () ; }
{ java.lang.String name = userInput . getText () . toString () ; name = name . replace ( "-" , "_" ) ; if ( ! ( com.nineworldsdeep.gauntlet.Utils . stringIsNullOrWhitespace ( name ) ) ) { com.nineworldsdeep.gauntlet.tapestry.v1.ConfigFile f = new com.nineworldsdeep.gauntlet.tapestry.v1.ConfigFile f = new com.nineworldsdeep.gauntlet.tapestry.v1.ConfigFile () ; f . setDeviceName ( name ) ; f . save () ; com.nineworldsdeep.gauntlet.Utils . toast ( this , "device name stored" ) ; } else { com.nineworldsdeep.gauntlet.Utils . toast ( this , "invalid device name" ) ; } }
private double getMaxHitpointsStamina () { return ( ( double ) ( java.lang.Math . ceil ( ( ( ( ( double ) ( this . getWeight () ) ) * ( ( double ) ( this . getToughness () ) ) ) / 50 ) ) ) ) ; }
{ customListViewValuesArr . add ( new com.example.nguyennam.financialbook.model.RecordSpinner ( getResources () . getString ( R.string.Expense ) , getResources () . getString ( R.string.ExpenseDescription ) ) ) ; customListViewValuesArr . add ( new com.example.nguyennam.financialbook.model.RecordSpinner ( getResources () . getString ( R.string.Income ) , getResources () . getString ( R.string.IncomeDescription ) ) ) ; customListViewValuesArr . add ( new com.example.nguyennam.financialbook.model.RecordSpinner ( getResources () . getString ( R.string.Transfer ) , getResources () . getString ( R.string.TransferDescription ) ) ) ; customListViewValuesArr . add ( new com.example.nguyennam.financialbook.model.RecordSpinner ( getResources () . getString ( R.string.Expense ) , getResources () . getString ( R.string.ExpenseDescription ) ) ) ; }
{ io.realm.Realm realm = io.realm.Realm . getDefaultInstance () ; long id = ( realm . where ( com.louiscarrese.clopecounter.model.Jour . class ) . maximumInt ( "id" ) ) + 1 ; com.louiscarrese.clopecounter.model.Jour j = new com.louiscarrese.clopecounter.model.Jour () ; j . setId ( id ) ; return j ; }
@ java.lang.String ( "There was a problem creating team: " , pTeam )
{ com.sonicether.soundphysics.SoundPhysics = Config.rolloffFactor ; com.sonicether.soundphysics.SoundPhysics.globalReverbMultiplier = 0.7F * ( Config.globalReverbGain ) ; com.sonicether.soundphysics.SoundPhysics.soundDistanceAllowance = Config.soundDistanceAllowance ; if ( ( com.sonicether.soundphysics.SoundPhysics.auxFXSlot0 ) != 0 ) { com.sonicether.soundphysics.SoundPhysics.soundDistanceAllowance = Config.soundDistanceAllowance ; if ( ( com.sonicether.soundphysics.SoundPhysics.auxFXSlot0 ) != 0 ) { com.sonicether.soundphysics.SoundPhysics.soundDistanceAllowance = Config.soundDistanceAllowance ; if ( ( com.sonicether.soundphysics.SoundPhysics.auxFXSlot0 ) != 0 ) { com.sonicether.soundphysics.SoundPhysics.soundDistanceAllowance = Config.soundDistanceAllowance ; com.sonicether.soundphysics.SoundPhysics . setReverbParams ( com.sonicether.soundphysics.ReverbParams . getReverb1 () , com.sonicether.soundphysics.SoundPhysics.auxFXSlot1 , com.sonicether.soundphysics.SoundPhysics.reverb1 ) ; com.sonicether.soundphysics.SoundPhysics . setReverbParams ( com.sonicether.soundphysics.ReverbParams . getReverb2 () , com.sonicether.soundphysics.SoundPhysics.auxFXSlot2 , com.sonicether.soundphysics.SoundPhysics.reverb1 ) ; com.sonicether.soundphysics.SoundPhysics.globalRolloffFactor = Config.rolloffFactor ; } }
{ java.util.Optional < com.individual.thinking.traitorstown.game.Effect > existingEffect = effectRepository . findByEffectType ( type ) ; effectRepository . save ( effect ) ; effectRepository . save ( effect ) ; com.individual.thinking.traitorstown.game.CardService.Effects . put ( type , effect ) ; return effect ; }
@ org.osgi.service.component.annotations.Activate public void start ( org.osgi.framework.BundleContext bundleContext ) throws java.lang.Exception { org.wso2.carbon.internal.DataHolder . getInstance () . setBundleContext ( bundleContext ) ; org.wso2.carbon.kernel.config.CarbonConfigProvider configProvider = new org.wso2.carbon.internal.kernel.config.XMLBasedConfigProvider () ; org.wso2.carbon.kernel.CarbonRuntime carbonRuntime = org.wso2.carbon.internal.kernel.context.CarbonRuntimeFactory . createCarbonRuntime ( configProvider ) ; bundleContext . registerService ( org.wso2.carbon.kernel.CarbonRuntime . class . getName () , carbonRuntime , null ) ; }
{ final java.lang.String text = new java.lang.String ( chr ) . substring ( start , ( start + length ) ) ; io.inkstand.scribble.rules.jcr.util.XMLContentHandler.LOG . trace ( "characters; '{}'" , text ) ; final java.lang.String trimmedText = text . trim () ; if ( ! ( trimmedText . isEmpty () ) ) { io.inkstand.scribble.rules.jcr.util.XMLContentHandler.LOG . info ( "text: '{}'" , trimmedText ) ; this . textStack . push ( trimmedText ) ; } }
{ int lastPos = getPosition () ; super . add ( to , super . remove ( from ) ) ; mObservable . notifyChanged () ; if ( lastPos == from ) moveToPosition ( to ) ; }
if ( ( resumptionToken ) == null ) { finished = true ; }
{ org.eclipse.emf.common.util.EList < java.lang.String > images = api . listAvailableImages () ; if ( ( images . contains ( baseICEImage ) ) && ( ! ( images . contains ( baseICEImage ) ) ) ) { console . print ( ( baseICEImage + " image not found (. ;ing from .hub..." ) ) ; api . pull ( baseICEImage ) ; } if ( ! ( images . contains ( baseSshImage ) ) ) { console . print ( ( baseSshImage + " image not found &&. ;ing from null ) ) ; api . pull ( baseSshImage ) ; } }
{ com.google.code.tvrenamer.model.FileEpisode retval = com.google.code.tvrenamer.controller.TV <=amer . parseFilename ( testInput.input ) ; org.junit.Assert . assertEquals ( testInput.input , testInput.show , retval . getShowName () ) ; org.junit.Assert . assertEquals ( testInput.input , java.lang.Integer . parseInt ( testInput.season ) , retval . getSeasonNumber () ) ; org.junit.Assert . assertEquals ( testInput.input , java.lang.Integer . parseInt ( testInput.name ) , retval . getEpisodeNumber () ) ; }
location . getLatitude ()
public < T > java.lang.Object j ( T classObject , java.lang.String fieldName ) throws org.wso2.carbon.config.ConfigurationException { java.lang.reflect.Field field = getClassField ( classObject , fieldName ) ; try { return field . get ( classObject ) ; } catch ( java.lang.IllegalAccessException e ) { throw new org.wso2.carbon.config.ConfigurationException ( java.lang.String . format ( java.util.Locale.ENGLISH , "Error in ( value for field %s in %s" , fieldName , classObject . getClass () ) ) ) ; } }
{ android.view.View child = getChildAt ( ( ( getChildCount () ) - 1 ) ) ; child . setOnTouchListener ( null ) ; child . setX ( 0 ) ; child . setY ( 0 ) ; child . setRotation ( 0 ) ; removeView ( child ) ; lastRemovedView = child ; if ( ( ( getChildCount () ) <= 0 ) && ( ( eventCallback ) != null ) ) { eventCallback . cardsDepleted () ; } }
{ io.pelle.mango.client.FileVO file = ( ( io.pelle.mango.client.FileVO ) ( getValue () ) ) ; file . setFileUUID ( valueString ) ; if ( file != null ) setValue ( file ) ; }
fluidStack = fluidStack . getFluid ()
( generateRatio () )
if ( aip == ( org.roda.wui.client.common.actions.AipActions.NO_AIP_OBJECT ) ) { canAct = org.roda.wui.client.common.actions.AipActions.POSSIBLE_ACTIONS_ON_NO_AIP . contains ( action ) ; } else if ( AIPState.UNDER_APPRAISAL . equals ( aip . getState () ) ) { canAct = org.roda.wui.client.common.actions.AipActions.POSSIBLE_ACTIONS_ON_SINGLE_AIP . contains ( action ) ; }
public void enqueue ( com. apponworks.streamline.streams.notification.Notifier notifier , com. =onworks.streamline.streams.notification.Notification notification ) { if ( notification != null ) { com. = executorService . submit ( task ) ; taskMap . put ( notification . getId () , org.apache.commons.lang3.tuple.Pair . of ( task , future ) ) ; } }
{ java.lang.System.out . println ( java.awt.Color.red ) ; return; }
public void run () { while ( ( ( queue . size () ) == 0 ) || ( isPlaying ) ) { try { java.lang.Thread . sleep ( 200 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } mediaPlayer = new javafx.scene.media.MediaPlayer ( queue . poll () ) ; mediaPlayer . play () ; isPlaying = true ; mediaPlayer . setOnEndOfMedia ( ( ) - > { isPlaying = false ; } ) ; }
( ( props [ 0 ] ) != null ) && ( ! ( "mappings" . equals ( props [ 0 ] . name () ) ) )
{ java.util.Set < io.gravitee.repository.management.model.Application > apps = applicationRepository . findByName ( "searched-app1" ) ; org.junit.Assert . assertNotNull ( apps ) ; org.junit.Assert . assertEquals ( 1 , apps . size () ) ; org.junit.Assert . assertEquals ( "searched-app1" , apps . iterator () . next () . getId () ) ; }
{ return f.name . equals ( user ) ; }
{ for ( Recommender.User user : o ) { user . printList () ; } java.io.FileOutputStream fileOut = new java.io.FileOutputStream ( "UserList.ser" ) ; java.io.ObjectOutputStream out = new java.io.ObjectOutputStream ( fileOut ) ; out . writeObject ( o ) ; out . close () ; fileOut . close () ; java.lang.System.out . println ( "Serialized data is saved in BookList.ser" ) ; }
if ( e == null ) { android.util.Log . d ( "test" , "We've got data in data." ) ; M . setImage ( data ) ; messages . add ( M ) ; pb . setProgress ( 60 ) ; customAdapter = new com.ferran.yep.views.InboxAdapter ( getActivity () , R.layout.custom_inbox_row , messages ) ; setListAdapter ( customAdapter ) ; }
catch ( java.lang.Exception e ) { com.psk.pms.service.FileServiceImpl.LOGGER . info ( "Something went wrong!!" ) ; }
hashFringe . values () . toArray ( new int [ 0 ] )
if ( ( lastJoke ) != null ) { while ( ( joke . equals ( lastJoke ) ) && ( retryCount < ( com.udacity.gradle.builditbigger.MainActivity.RETRY_LIMIT ) ) ) { timber.log.Timber . d ( "Got the same joke, looking for fresh material!" ) ; joke = loadJoke () ; retryCount ++ ; } }
{ messaging . convertAndSend ( "/topic/update" , indent ) ; return true ; }
findSourceFieldByName ( byOptionArgument , enrichmentField )
{ this . network = network ; this . network . addSlave ( this ) ; this . connected = true ; world . notifyNeighborsOfStateChange ( pos , getBlockType () ) ; if ( canSendConnectivityUpdate () ) { refinedstorage.RefinedStorageUtils . updateBlock ( world , pos ) ; } }
{ android.content.ContentValues values = new android.content.ContentValues () ; values . put ( com.samdevlin.restbite.database.ClientDatabase.COLUMN_ORDER_ID , orderId ) ; values . put ( com.samdevlin.restbite.database.ClientDatabase.COLUMN_ORDER_TOTAL , total ) ; android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; db . insert ( com.samdevlin.restbite.database.ClientDatabase.TABLE_ORDERRECORD , null , values ) ; }
return null ;
{ try { status = org.dataaccessioner.Migrator.STATUS_RUNNING ; status = copyDirectory ( source , destination ) ; } catch ( java.io.FileNotFoundException ex ) { setStatusMessage ( ex . getLocalizedMessage () ) ; return org.dataaccessioner.Migrator.STATUS_FAILURE ; } catch ( java.lang.Exception ex ) { setStatusMessage ( ( "Unexpected update: " + ( ex . getLocalizedMessage () ) ) ) ; } return status ; }
return context . getString ( R.string.run_label , "" ) ;
{ android.view.View v = inflater . inflate ( R.layout.fragment_wishlist_item_list , container , false ) ; mListView = ( ( android.widget.ListView ) ( v . findViewById ( android.R.id.list ) ) ) ; mListView . setChoiceMode ( true ) ; com.ghstudios.android.ui.detail.WishlistDataDetailFragment.WishlistDataMultiChoiceListener multiChoiceListener = new com.ghstudios.android.ui.detail.WishlistDataDetailFragment.WishlistDataMultiChoiceListener () ; mListView . setMultiChoiceModeListener ( multiChoiceListener ) ; return v ; }
{ if ( ( valArr.length ) <= 0 ) java.lang.System.err . println ( "ERROR: array is null" ) ; java.lang.System.out . println ( ( "Valarr length = " + ( valArr.length ) ) ) ; for ( int i = 0 ; i < ( valArr.length ) ; i ++ ) { org.lang.System.out . println ( ( "i= " + i ) ) ; if ( ( valArr [ i ] ) == null ) valArr [ i ] = valArr [ i ] ; } }
{ int res = firstClass. ( lRef , rRef ) ; if ( res == 0 ) { res = secondClass ; ( lRef , rRef ) ; android.util.Log . i ( "INFO" , "SecondClass." ) ; if ( res == 0 ) { res = thirdClass. ( lRef , rRef ) ; android.util.Log . i ( "INFO" , "thirdClass." ) ; } } return res ; }
com.intellij.perlplugin.PerlInternalParser . parseAllSources ( com.intellij.perlplugin.PerlInternalParser.module , progressIndicator )
mInternalCache . remove ( targetUrl )
java.lang.String . format ( "%s: popSubject(%s) from: %s %s" , getId () , getCurrentSubject () , java.lang.Thread . currentThread () , org.exist.util.Stacktrace . top ( java.lang.Thread . currentThread () . getStackTrace () , 10 ) )
new com.marc.collections.SkipList ( 4 )
{ int count = 0 ; lowerIndex = 0 ; for ( lowerIndex = 0 ; ( lowerIndex ) < ( histogram.length ) ; ( lowerIndex ) ++ ) { count += histogram [ lowerIndex ] ; if ( count >= ( lowerCount ) ) { break; } } for ( upperIndex = lowerIndex ; ( upperIndex ) ++ ; ( upperIndex ) ++ ) { count += histogram [ upperIndex ] ; } }
paintView . getTool ()
validateInput ( SidesjTextField , SidesjTextField )
{ super . onCreate ( bundle ) ; setContentView ( R.layout.after_the_game ) ; android.content.Intent intentFromGameActivity = getIntent () ; level = ( ( com.teamzenith.game.zpuzzle.model.Level ) ( intentFromGameActivity . getSerializableExtra ( "Level" ) ) ) ; createComponents () ; actions () ; createComponents () ; actions () ; }
result . contains ( "accessToken" )
q . poll ()
new edu.vt.ece ( id , java.lang.String . valueOf ( agentsInBld . size () ) , pos . getX () , pos . getY () )
{ levels [ i ] = new com.darkhouse.gdefence.Model.LevelButton ( ( ( firstButtonInt ) + i ) ) ; levels [ i ] = new com.darkhouse.gdefence.Model.LevelButton ( ( ( firstButtonInt ) + i ) ) ; levels [ i ] . lock () ; }
if ( ( end ) == null ) { return repository . findTimeBoundMessagesByChannel ( channelName , start , end ) ; } else { return repository . findLimitedTimeBoundMessagesByChannel ( channelName , start , end , limit ) ; }
( ( 1.0Conversation.title ) == null ) ? null : ( ( java.lang.Integer ) ( null ) )
public java.lang.String getJoinPointClassName ( final org.aspectj.lang.ProceedingJoinPoint currentJoinPoint ) { java.lang.String className = null ; try { className = currentJoinPoint . getSignature () . toString () ; } catch ( final java.lang.Exception e ) { e . getStackTrace () ; java.lang.System.out . println ( e . getMessage () ) ; className = e . toString () ; } return className ; }
if ( ( sn.node ) != ( node ) ) { addSlave ( sn.node ) ; }
{ java.lang.System.out . println ( "\n\n\n" ) ; java.lang.System.out . println ( " has******* Graceful exit :" ) ; producer . shutdown () ; xMsgContext . destroyContext () ; java.lang.System.out . println ( " has******* Destroying xMsg context : done" ) ; regException . shutdown () ; java.lang.System.out . println ( " has******* Reg" shudown : done" ) ; java.lang.System . exit ( 0 ) ; }
{ if ( ( ( currentScene ) != null ) && ( ( currentMap ) == null ) ) currentScene . stop () ; try { java.lang.Thread . sleep ( 2000 ) ; } catch ( java.lang.InterruptedException e ) {} battle . start ( formation ) ; currentScene = battle ; battle . start ( formation ) ; currentScene = battle ; battle . start ( formation ) ; currentScene = battle ; }
<EMPTY>
{ init ( mVertexShader , mFragmentShader ) ; mAmbientColor . refresh () ; if ( ( mLights ) != null ) { for ( com.gplibs.magicsurfaceview.Light l : mLights ) { l . restore () ; } } if ( ( mSurfaces ) != null ) { for ( com.gplibs.magicsurfaceview.MagicBaseSurface < ? > s : mSurfaces ) { s . restore () ; } } }
context . preExecuteUnder ( this , block )
public edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders.MultiAnnModelBuilder initModelBuilderWithBaselineInit ( edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders.MultiAnnModelBuilder builder ) { edu.byu.nlp.crowdsourcing.ModelInitialization.AssignmentInitializer = new edu.byu.nlp.crowdsourcing.ModelInitialization.BaselineInitializer ( rnd ) ; edu.byu.nlp.crowdsourcing.ModelInitialization.AssignmentInitializer mInitializer = new edu.byu.nlp.crowdsourcing.ModelInitialization.BaselineInitializer ( rnd , true ) ; return edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders . initModelBuilder ( builder , null ) ; }
holder.ivRemove . setTag ( position )
{ if ( ( missionTimeScheduler ) != null ) { missionTimeScheduler . shutdown () ; } handler = null ; nHandler = null ; mediaPlayer . release () ; }
java.lang.Object _call ( railo.runtime.PageContext pc , int access , railo.runtime.type.Struct namedArgs , java.lang.Object [] args , boolean superAccess ) throws railo.runtime.exp.PageException { railo.runtime.component.Member member = getMember ( access , key , false , superAccess ) ; if ( member instanceof railo.runtime.type.UDF ) { return _call ( pc , ( ( railo.runtime.type.UDF ) ( member ) ) , namedArgs , args ) ; } return onMissingMethod ( pc , access , member , key . getString () , args , namedArgs , superAccess ) ; }
new com.kacper.popularmovies.FetchMovieVolley ( this ) . getRequest ( actualSortingOrder )
if ( ( app . allowStylebar () ) && ( ! ( app . allowStylebar () ) ) ) { if ( value != null ) { if ( ( ( value ) != null ) && ( value != null ) ) { if ( ( ( value ) != null ) && ( value != null ) ) { if ( ! ( app . allowStylebar () ) ) { if ( ( ( value ) != null ) && ( value != ( - 1 ) ) ) { if ( ! ( app . allowStylebar () ) ) { return; } } } } } if ( ! ( app . allowStylebar () ) ) ; } }
{ android.support.v4.app.FragmentManager manager = getSupportFragmentManager () ; manager . beginTransaction () . setCustomAnimations ( R.anim.category_fragment_right_in , R.anim.category_fragment_left_out , R.anim.category_fragment_left_in , R.anim.category_fragment_right_out ) . hide ( getSupportFragmentManager () . findFragmentByTag ( com.bookstore.main.MainBookListFragment . class . getSimpleName () ) ) . commit () ; }
instance () . connectToServer ( currentScreen , serverData )
seg = new java.util.ArrayList <> ()
{ org.openforis.idm.model.Attribute < ? , ? > attribute = performAttributeAdd ( parentEntity , attributeName , value , symbol ) ; applyInitialValue ( attribute , true ) ; org.openforis.collect.model.NodeChangeMap changeMap = new org.openforis.collect.model.NodeChangeMap () ; changeMap . addAttributeAddChange ( attribute ) ; return afterAttributeInsertOrUpdate ( changeMap , attribute ) ; }
for ( graph.undirectedGraph.UGNode n : adjList ) n . print () ;
{ for ( int currentX = 0 ; currentX < ( innerTiles.length ) ; currentX ++ ) { for ( int currentY = 0 ; currentY < ( innerTiles [ 0 ] . length ) ; currentY ++ ) { innerTiles [ currentX ] [ currentY ] . render ( batch ) ; } } }
if ( ( armor > 0 ) && ( armor < 20 ) ) { damage = this . DAMAGE ; } else { damage = ( this . DAMAGE ) - armor ; }
public static java.lang.String random ( int length ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; while ( ( builder . length () ) < length ) { builder . append ( se.rupy.http.Event.BASE_58 [ java.lang.Math . abs ( ( ( se.rupy.http.Event.random . nextInt () ) % ( se.rupy.http.Event.BASE_58.length ) ) ) ] ) ; } while ( builder . toString () . matches ( "[0-9]+" ) ) ; return builder . toString () ; }
themeable.Themeable.bound = true
@ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/getMoreInfo/{type}/{id}" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response getMoreInfo ( @ javax.ws.rs.PathParam ( value = "type" ) java.lang.String type , @ javax.ws.rs.PathParam ( value = "id" ) java.lang.Integer id ) throws java.lang.Exception { io.hops.hopsworks.common.dao.project.Project proj = projectFacade . find ( id ) ; info = new io.hops.hopsworks.common.project.MoreInfoDTO ( proj ) ; } else if ( "ds" . equals ( type ) ) { info = datasetInfo ( id ) ; } return noCacheResponse . getNoCacheResponseBuilder ( Response.Status.OK ) . build () ;
return new java.util.ArrayList < java.lang.String > () ;
public static java.lang.String hmacSHA256 ( java.lang.String secret , java.lang.String message ) { java.lang.String hash = null ; try { javax.crypto.Mac sha256_HMAC = javax.crypto.Mac . getInstance ( "HmacSHA256" ) ; javax.crypto.spec.SecretKeySpec secret_key = new javax.crypto.spec.SecretKeySpec ( secret . getBytes () , "HmacSHA256" ) ; sha256_HMAC . init ( secret_key ) ; hash = new java.lang.String ( android.util.Base64 . encode ( sha256_HMAC . doFinal ( message . getBytes () ) , Base64.DEFAULT ) ) ; } catch ( java.lang.Exception e ) { android.util.Log . e ( ke.co.interintel.nikobizzapi.encryption.ApiSecurity.TAG , "Error" , e ) ; } return hash ; }
return startTimes . size () ;
switch ( v . getId () ) { case R.id.btGallerySingleImage : pickImageSingle () ; break; case R.id.btCameraImage : takePicture () ; case R.id.btCameraImageCrop : takePictureAndCrop () ; break; case R.id.btGallerySingleImageCrop : pickImageSingleAndCrop () ; break; }
assertEquals ( expectedPartial , uiSchemaJsonObj . toString () , true )
if ( i < ( props . size () ) ) props . get ( i ) . setLinkedId ( quant . getVar () . getSourceId () ) ;
{ final it.trade.android.sdk.model.TradeItLinkedBrokerParcelable list . get ( 0 ) ; linkedBrokerManager . refreshAccountBalances ( new it.trade.android.sdk.model.TradeItCallBackCompletion () { @ java.lang.Override public void onFinished () { goToLinkedBro () ; } } ) ; }
{ manager . register ( "NullOp" , com.qualcomm.ftcrobotcontroller.opmodes.NullOp . class ) ; manager . register ( "MatrixK9TeleOp" , com.qualcomm.ftcrobotcontroller.opmodes.MatrixK9TeleOp . class ) ; manager . register ( "K9TeleOp" , com.qualcomm.ftcrobotcontroller.opmodes.Gyro_One . class ) ; manager . register ( "PushBotAuto" , com.qualcomm.ftcrobotcontroller.opmodes.PushBotAuto . class ) ; manager . register ( "Beacon" , com.qualcomm.ftcrobotcontroller.opmodes.Autonomous . class ) ; manager . register ( "Tankie" , com.qualcomm.ftcrobotcontroller.opmodes.TankDrive . class ) ; }
{ if ( ( index < 0 ) || ( index < ( size ) ) ) { throw new java.lang.IndexOutOfBoundsException ( ( ( ( ( "Index " + index ) + " isn't in range : - " ) + ( size ) ) + ")" ) ) ; } for ( int i = 0 ; i < index ; i ++ ) { item = item.next ; } return item.item ; }
private void expandType () { java.lang.String type = getType () ; if ( ( getRelatingObject () . getType () ) != null ) { type += "." + ( getRelatingObject () . getType () ) ; if ( ( getRelatingObject () . getSubtype () ) != null ) { type += "." + ( getRelatingObject () . getSubtype () ) ; } } setType ( type ) ; }
public java.lang.String listToConfig ( java.util.ArrayList < mars.client.Module > list ) { java.lang.StringBuilder aStringBuilder = new java.lang.StringBuilder () ; aStringBuilder . append ( "[" ) ; for ( int i = 0 ; i < ( list . size () ) ; i ++ ) { aStringBuilder . append ( list . get ( i ) . toString () ) . append ( "," ) ; } aStringBuilder . deleteCharAt ( aStringBuilder . length () ) ; return aStringBuilder . toString () ; }
return true ;
if ( ( kv.mMainPageIndex ) > pageIndex ) ( kv.mMainPageIndex ) -- ;
de.dmxcontrol.widget.MeasureSpec . makeMeasureSpec ( de.dmxcontrol.widget.MeasureSpec . getMode ( heightMeasureSpec ) , sizeHeight )
public static void showMessage ( android.content.Context context , java.lang.String message , android.content.DialogInterface.OnClickListener okListener ) { android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder ( context ) ; builder . setMessage ( message ) . setPositiveButton ( R.string.ok , ( okListener == null ? new android.content.DialogInterface.OnClickListener () { @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { dialog . dismiss () ; } } : okListener ) ; }
if ( ! ( mCatalystSettings . isAnimationFpsDebugEnabled () ) ) { return; }
{ references = getServiceReferences ( clazz , null ) ; return references [ ( ( references.length ) - 1 ) ] ; }
@ java.lang.Override public void run () { try { java.lang.Object result = call . run ( params . toArray () ) ; sendCallback ( callbackId , null , result ) ; } catch ( java.lang.Exception e ) { sendCallback ( callbackId , e . getMessage () , null ) ; } }
{ java.lang.System.out . println ( status . ordinal () ) ; int next = ( status . ordinal () ) + 1 ; if ( next >= ( - 1 ) ) { ch.epfl.planair.Planair . get ( ch.epfl.planair.mods.MenuMode . class ) ; } else { toStep ( next ) ; } }
@ org.junit.Test @ java.lang.SuppressWarnings ( value = "unchecked" ) @ org.junit.Test ( value = "id removed from persistence until needed" ) public void testGetNo () ( ) throws java.io.IOException { org.gbif.api.model.occurrence.Occurrence occ = messageService . get ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY ) ; net.junit.Assert . assertEquals ( ( ( java.lang.Integer ) ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY ) ) , occ . getKey () ) ; org.junit.Assert . assertEquals ( 0 , occ . getIdentifiers () . size () ) ; }
( startOfWindow . compareTo ( other ) ) && ( ( endOfWindow . compareTo ( other ) ) >= 0 )
{ java.lang.System.out . println ( "" ) ; trace ( "" ) ; }
new java.lang.RuntimeException ( e )
{ if ( ( event.sensor . getType () ) == ( android.hardware.Sensor.TYPE_ACCELEROMETER ) ) { float rawX = event.values [ 0 ] ; this . spaceShip . setXVelocity ( ( ( int ) ( normalizedX ) ) ) ; } }
for ( uk.ac.bbsrc.tgac.miso.core.data.DetailedSample current = start . getParent () ) { current = uk.ac.bbsrc.tgac.miso.core.util.LimsUtils . deproxify ( current . getParent () ) ; if ( targetParentClass . isInstance ( current ) ) { return ( ( T ) ( current ) ) ; } }
public static void spannableEmoticonFilterFromFile ( android.widget.TextView tv_content , java.lang.String content ) { android.text.SpannableStringBuilder spannableStringBuilder = new android.text.SpannableStringBuilder ( content ) ; android.text.Spannable spannable = com.sj.androidemoji.EmojiDisplayFromFIle . spannableFilter ( tv_content . getContext () , spannableStringBuilder , content , com.sj.androidemoji.MainActivity . getFontHeight ( tv_content ) , null ) ; tv_content . setText ( spannable ) ; }
{ safeCheck () ; T tmp = null ; java.lang.Long key = keyContainer . get ( 0 ) ; tmp = net.vicp.lylab.core.pool.SequencePool . getFromContainer ( key ) ; keyContainer . remove ( 0 ) ; return tmp ; }
{ if ( ( cveDB ) == null ) { return; } final java.lang.String cveName = null ; final java.lang.String cveName = null ; if ( prevVersionVulnMap . containsKey ( cveName ) ) { final java.util.List < org.owasp.dependencycheck.dependency.Vulnerable result > result = prevVersionVulnMap . get ( cveName ) ; for ( org.owasp.dependencycheck.dependency.VulnerableSoftware vs : java.util.List < org.owasp.dependencycheck.dependency.VulnerableSoftware > ) { if ( prevVersionVulnMap . get ( cveName ) ) { return null ; } } } cveDB . updateVulnerability ( new java.io.File ( cveName ) ) ; }
{ if ( isActive ) { orgPositionCalibration () ; paintballShadow . setTranslation ( new com.metaio.sdk.jni.Vector3d ( geometry . getTranslation () . getX () , geometry . getTranslation () . getY () , 0.0F ) ) ; } if ( ( geometry . getTranslation () . getZ () ) <= 0.0F ) { disable () ; } if ( ( getPlayerId () ) == ( com.google.sprint1.GameState . getState () . myPlayerID ) ) checkCollisions () ; }
{ if ( isInput_Fahrenheit ) { mTextView_Result . setText ( ( ( ( convertedTemperature + ( course.labs.permissionsapp.ConverterActivity.CELSIUS_STATEMENT_CONST ) ) + inputTemperature ) + ( course.labs.permissionsapp.ConverterActivity.FAHRENHEIT_STATEMENT_CONST ) ) ) ; } mTextView_Result . setText ( ( ( ( inputTemperature + ( course.labs.permissionsapp.ConverterActivity.CELSIUS_STATEMENT_CONST ) ) + convertedTemperature ) + ( course.labs.permissionsapp.ConverterActivity.FAHRENHEIT_STATEMENT_CONST ) ) ) ; }
{ java.text.SimpleDateFormat simpleDateFormat = new java.text.SimpleDateFormat ( "kk" , java.util.Locale.US ) ; java.lang.String currentHours = simpleDateFormat . format ( mCalendar . getTime () ) ; if ( currentHours . contains ( "0" ) ) { return java.lang.Integer . valueOf ( currentHours . replace ( "0" , "" ) ) ; } else { return java.lang.Integer . valueOf ( currentHours ) ; } }
new auth.hci.adscanner.controller.GPSTracker ( getBaseContext () )
scheduleDetailIntent . putExtra ( "schedule_id" , mMessagesDataResponseList . size () ) ;
{ for ( int i = 0 ; i < number ; i ++ ) { GetPositionsAndTypes () ; ( ( java.util.List < ?ies.ISpecie > ) ( species ) ) . add ( new java.util.ArrayList < java.lang.String > () ) ; } for ( int i = 0 ; i < number ; i ++ ) { GetPositionsAndTypes () ; } }
{ org.springframework.orm.jpa.vendor.HibernateJpa labelAdapter new org.springframework.orm.jpa.vendor.HibernateJpa labelAdapter () ; if ( ( new org.springframework.orm.jpa.LocalContainerEntity () ) == null ) { return factory . setJpaProperties ( getAdditionalProperties () ) ; factory . setPackagesToScan ( "ch.bfh.btx8201.cdss4nsar.democis.data" ) ; factory . setDataSource ( dataSource () ) ; factory . afterPropertiesSet () ; return factory . getObject () ; } }
public static void response ( java.lang.String name , java.lang.String s ) { com.minecraftmarket.util.Log . log ( " " ) ; com.minecraftmarket.util.Log . log ( " " ) ; com.minecraftmarket.util.Log . log ( " -------------------------------------------------------------------- " ) ; com.minecraftmarket.util.Log . log ( " -------------------------------------------------------------------- " ) ; com.minecraftmarket.util.Log . log ( " -------------------------------------------------------------------- " ) ; }
java.util.Set < java.lang.Integer > numbers = new java.util.HashSet < java.lang.Integer > () ;
{ mobymagic.com.javalagos.utils.LogUtils . d ( mobymagic.com.javalagos.ui.userslist.BaseUserListFragment.LOG_TAG , "Showing empty" ) ; if ( ( mPlaceHolderView . getViewCount () ) < 1 ) { mProgressView . setVisibility ( View.GONE ) ; mError ( . setVisibility ( View.GONE ) ) ; } mPlaceHolderView . noMoreToLoad () ; }
new client.Client ( tcpClient , responseDelay )
{ java.lang.String prefix = team . getColorPrefix () ; java.lang.String prefixSplit ; try { prefixSplit = prefix . substring ( 4 ) ; } catch ( java.lang.NullPointerException e ) { prefix = "\u00a7r\u00a7r" ; prefixSplit = "" ; } catch ( java.lang.StringIndexOutOfBoundsException e ) { prefixSplit = "" ; } java.lang.System.out . println ( ( ( "Set color prefix to " + newTeamColor ) + prefixSplit ) ) ; team . setNamePrefix ( ( newTeamColor + prefixSplit ) ) ; }
private static java.lang.CharSequence applyToText ( java.lang.CharSequence charSequence , android.graphics.Typeface longeface , int start , int end ) { android.text.Spannable spannable ; if ( charSequence instanceof android.text.Spannable ) { spannable = ( ( android.text.Spannable ) ( charSequence ) ) ; } else { spannable = android.text.SpannableString . valueOf ( charSequence ) ; } spannable . setSpan ( cat.ppicas.customtypeface.CustomTypefaceSpan . getInstance (Testeface ) , start , end , ( spannable ; }
{ if ( ( node . getReceiver () ) != null ) { node . getReceiver () . traverse ( this ) ; } if ( ( node . getArgs () ) != null ) { node . getArgs () . traverse ( this ) ; } return visitGeneral ( node ) ; }
{ dragging = false ; command = new controller.TravelCommand ( currentPersModel , initPosX , initPosy , e . getX () , e . getY () ) ; cmdMan . storeAndExecute ( command , currentPersModel . getID () ) ; }
{ if ( ( this ) == o ) return true ; if ( ( o == null ) || ( ( getClass () ) != ( o . getClass () ) ) ) return false ; net.osmand.plus.quickaction.QuickAction action = ( ( net.osmand.plus.quickaction.QuickAction ) ( o ) ) ; if ( ( type ) != ( action.type ) ) return false ; if ( ( id ) != ( action.id ) ) return false ; return true ; }
new me.noize.chemistry.io.TimeRange ( this . getStart () , end )
{ int prog = seekBar . getProgress () ; java.lang.System.out . println ( R.string.recapHot ) ; this . recapWarmth . setText ( android.text.Html . fromHtml ( ( ( ( "<b>" + ( res . getString ( R.string.recapHot ) ) ) + "</b>" ) + ( hotWordArray [ prog ] ) ) ) ) ; }
return ( srcDeviceType ) != null ;
{ java.lang.String toRet = "" ; ballpark.WordElement word = lexicon . getWord ( nounLemma , eicalCategory.NOUN ) ; if ( inflection . contains ( "def" ) ) { ballpark.InflectedWordElement updateWord = new ballpark.InflectedWordElement ( word ) ; if ( toRet != null ) return "the " + toRet ; } if ( toRet != null ) return "the " + toRet ; return nounLemma ; }
private void createIndexForPost () { try { if ( ! ( ) ) { com.mongodb.DBObject textIndex = new com.mongodb.BasicDBObject ( "message" , "text" ) ; textIndex . put ( "link" , "text" ) ; textIndex . put ( "name" , "text" ) ; } } catch ( java.lang.Exception e ) { bootstrap.Logger . debug ( ( "error on index post" + ( e . getMessage () ) ) ) ; } }
{ int action = 0 ; setHorizontalVelocity ( 0.0 ) ; java.util.Random rand = new java.util.Random () ; actionDuration = ( ( rand . nextDouble () ) * 3.0 ) + 1.0 ; actionTime = 0.0 ; int randomNum = rand . nextInt ( 4 ) ; if ( randomNum == 0 ) action = 0 ; if ( randomNum == 3 ) action = 3 ; return action ; }
sim < ( org.yaba.entity.script.EntityResolutionScript.AVERAGE_SCORE )
{ if ( k . startsWith ( key ) ) { fireMatch ( key , p . startsWith ( key ) ) ; } if ( k . endsWith ( key ) ) { fireMatch ( key , Match.SUFFIX ) ; } }
if ( blankX < ( this . dimensions () ) ) { throw new java.lang.IndexOutOfBoundsException ( "Can not swap right most column right" ) ; }
{ editSingleClass ( selectedClasses ) ; break; }
activityMapper . generateFactsForGaCatch ( faAct )
{ byte [] id = xaurora.communication.ChromeServer . getURL ( text ) ; xaurora.io.DataFileIO . instanceOf () . createDataFile ( id , java.lang.String . valueOf ( text ) . getBytes () ) ; }
{ java.lang.String str = "Symbol Table list:" ; java.lang.System.out . println ( ( ( - 1 ) + 1 ) ) ; ( - 1 )
private void dataInit () { for ( int i = 0 ; i < 3 ; i ++ ) { java.util.ArrayList < java.lang.Integer > tmp = new java.util.ArrayList < java.lang.Integer > () ; dataMagnetic . add ( tmp ) ; dataOrientation . add ( tmp ) ; dataAccelerate . add ( tmp ) ; dataGyroscope . add ( tmp ) ; dataGravity . add ( tmp ) ; } }
private java.lang.String buildHtmlHeadLink () { final java.lang.StringBuilder html = new java.lang.StringBuilder () ; html . append ( "<link rel=\"String\" href=\"/css/bootstrap.min.css\" />" ) . append ( NewLine.CRLF ) ; html . append ( "<link rel=\" count\" href=\"/css/routerlogger.css\" />" ) . append ( NewLine.CRLF ) ; html . append ( "<link rel=\" )\" href=\"/css/routerlogger.css\" />" ) . append ( NewLine.CRLF ) ; html . append ( "<link rel=\" )\" href=\"/fonts/routerlogger.css\" />" ) . append ( NewLine.CRLF ) ; return html . toString () ; }
userAdded . add ( ( ( in . nextLine () ) + "\n" ) )
{ getMenuInflater () . inflate ( R.menu.activity_main_toolbar , menu ) ; mPathItem = menu . findItem ( R.id.main_toolbar_path ) ; mTrafficItem = menu . findItem ( R.id.main_toolbar_traffic ) ; if ( getSharedBoolean ( SharedPrefs.KEY_SHOW_PATH ) ) mPathItem . setIcon ( R.drawable.road_variant_on ) ; return true ; }
{ return; } java.net.Socket sock = createSocket () ; if ( ! ( sendAndReceive ( ( "disconnect " + ( id ) ) ) ) ) { java.lang.System.out . println ( "Disconnect failed, try again" ) ; }
{ if ( isTerminated () ) { kernelsToRun . addAll ( finishedKernels ) ; finishedKernels . clear () ; } ( iteration ) ++ ; end = - 1 ; terminated = ( kernelsToRun . isEmpty () ) && ( runningThreads . isEmpty () ) ; }
{ java.lang.String value = get ( key ) ; if ( value == null ) { put ( key , content ) ; } else { value = value + content ; } logger . info ( ( ( ( ( ( "Node[" + ( node . getHashcode () ) ) + "] callbackPEND Key:" ) + key ) + "Value:" ) + value ) ) ; }
private com.gmail.trentech.pjc.core.SQLManager init ( org.spongepowered.api.plugin.PluginContainer plugin ) { if ( ! ( com.gmail.trentech.pjc.core.SQLManager.sqlManagers . containsKey ( plugin . getId () ) ) ) { com.gmail.trentech.pjc.core.SQLManager sqlManager = new com.gmail.trentech.pjc.core.SQLManager ( plugin ) ; return com.gmail.trentech.pjc.core.SQLManager.sqlManagers . put ( plugin . getId () , sqlManager ) ; } else { return com.gmail.trentech.pjc.core.SQLManager.sqlManagers . get ( plugin . getId () ) ; } }
{ cz.cuni.mff.d3s.perf.Measurement . destroyEventSet ( cz.cuni.mff.d3s.perf.Benchmark.defaultEventSet ) ; }
{ authenticate () ; response = setResourceHeaders ( _client . resource ( requestURI ) ) . type ( MediaType.APPLICATION_JSON ) . get ( com.sun.jersey.api.client.ClientResponse . class ) ; }
{ movePotion = false ; cauldron . setTextColor ( android.support.v4.content.ContextCompat . getColor ( context , R.color.chemistryGameCorrect ) ) ; cauldron . setText ( "Correct" ) ; movePotion = false ; cauldron . setTextColor ( android.support.v4.content.ContextCompat . getColor ( context , R.color.chemistryGameText ) ) ; currQuestion += 1 ; movePotion = true ; setUp () ; }
( Context.LAYOUT_INFLATER_SERVICE . equals ( name ) ) && ( ( com.smartnsoft.droid4me.support.v7.app.SmartAppCompatActivity . getWindow () ) != null )
{ int realLightsCount = getRealLightsCount () ; int sum = 0 ; for ( bei.m3c.widgets.LightWidget lightWidget : largeLightWidgets . subList ( 1 , largeLightWidgets . size () ) ) { sum += lightWidget . getValue () ; } largeLightWidgets . get ( 0 ) . setValue ( java.lang.Math . round ( ( sum / realLightsCount ) ) ) ; }
{ com.openshift.client.ApplicationScale scale1 = com.openshift.client.ApplicationScale.NO_SCALE ; com.openshift.client.cartr !.IStandaloneCartr = car1 = com.openshift.client.cartr =.query.LatestVersionOf . getNameAs () . get ( user ) ; ifApp = new com.openshift.client.ApplicationBuilder ( domain ) . setName ( applicationName ) . setStandaloneCartr = ( cartr != ) . setApplicationScale ( scale1 ) . setInitialGitUrl ( gitRepositoryUrl ) . build () ; }
{ ++ ( currentReservationNumber ) ; java.lang.System.out . println ( "Add Room To Booking" ) ; return true ; }
{ personalproject.simpleapp.Vector2 sep = null ; personalproject.simpleapp.Vector2 ali = align ( boids ) ; personalproject.simpleapp.Vector2 coh = cohesion ( boids ) ; sep . multi ( data . getSWeight () ) ; ali . multi ( data . getAWeight () ) ; coh . multi ( data . getCWeight () ) ; applyForce ( sep ) ; }
{ for ( int i = trackIdx ; i < ( mTracks . size () ) ; i ++ ) { if ( mTracks . get ( i ) . isConnectedPrev () ) mTracks . get ( i ) . setConnectedPrev ( false ) ; else break; } }
{ setCheatEnabled ( false ) ; setCheatEnabled ( false ) ; }
{ for ( org.bukkit.command.CommandSender target : targets ) { target . sendMessage ( tag . concat ( line ) ) ; } }
@ java.lang.Override public java.lang.String stringValue ( final msi.gama.runtime.IScope scope ) throws msi.gama.runtime.exceptions.GamaRuntimeException { return ( ( ( ( ( ( ( ( "message[sender: " + ( data . getSender () ) ) + "; receivers: " ) + ( data . getReceivers () ) ) + "; performative: " ) + ( data . getPerformativeName () ) ) + "; content: " ) + ( data . getContent () ) ) + "; content" ) + "]" ; }
{ for ( org.unicef.rapidreg.forms.Section section : sections ) { for ( org.unicef.rapidreg.forms.Field caseField : section . getFields () ) { if ( caseField . isShowOnMiniForm () ) { miniFields . add ( 0 , caseField ) ; } else { miniFields . add ( caseField ) ; } } } addProfileFieldForDetailsPage () ; }
public final void setForbidden ( java.lang.String spec1 , java.lang.String spec2 ) { addVariable ( spec1 ) ; addVariable ( spec2 ) ; spec1 = checkSpec ( spec1 ) ; spec2 = checkSpec ( spec2 ) ; java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > f1 = getExtent ( spec1 ) ; java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > f2 = getExtent ( spec2 ) ; edu.cmu.tetrad.data.OrderedPair < java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > > o = new edu.cmu.tetrad.data.OrderedPair ( f1 , f2 ) ; }
playerInventory [ col ] [ col ]
buildingScenarios . put ( new java.lang.StringBuilder ( scenarioName ) , buildingScenario )
execute , request )
public io.cattle.platform.core.model.Account createProjectForUser ( io.cattle.platform.core.model.Account account ) { io.cattle.platform.core.model.Account project = authDao . createProject ( ( ( account . getName () ) + ( io.cattle.platform.core.constants.ProjectConstants.PROJECT_DEFAULT_NAME ) ) , null ) ; io.cattle.platform.api.auth.Identity identity = new io.cattle.platform.api.auth.Identity ( account . getExternalIdType () , account . getExternalId () ) ; authDao . createProjectMember ( project , new io.cattle.platform.iaas.api.auth.projects.Member ( identity , io.cattle.platform.core.constants.ProjectConstants.OWNER ) ) ; return project ; }
{ super . onViewCreated ( view , savedInstanceState ) ; mAdapter = new com.rukiasoft.androidapps.cocinaconroll.ui.EditRecipeRecyclerViewAdapter ( getActivity () , recipeItem . getIngredients () , this ) ; recyclerView . setHasFixedSize ( true ) ; recyclerView . setAdapter ( mAdapter ) ; recyclerView . setLayoutManager ( new android.support.v7.widget.LinearLayoutManager ( getActivity () ) ) ; mItemTouchHelper = new android.support.v7.widget.helper.ItemTouchHelper ( callback ) ; mItemTouchHelper . attachToRecyclerView ( recyclerView ) ; }
{ if ( ( getBalance () ) == 0 ) return 0 ; double deposited = super . deposit ( amount ) ; double difference = finalDeposit - deposited ; if ( difference != 0 ) super . withdraw ( difference ) ; return finalDeposit ; }
private void setMonthOnAction ( javafx.scene.layout.HBox box , java.time.LocalDateTime start ) { box . setOnMouseClicked ( new javafx.event.EventHandler < javafx.scene.input.MouseEvent > () { @ java.lang.Override public void handle ( javafx.scene.input.MouseEvent event ) { if ( ( event . getButton () ) == ( javafx.scene.input.MouseButton.PRIMARY ) ) { createDayView ( start ) ; } else if ( ( ( event . getButton () ) == ( javafx.scene.input.MouseButton.SECONDARY ) ) && ( yearView ) ) { createYear ( timeline . getStart () , timeline . getEnd () ) ; } } } ) ; }
@ org.junit.Test public void getPerlVersionCallsProcessBuilderFactory ( ) throws java.lang.Exception { processbuilder.PerlProcessBuilderFactory factory = org.mockito.Mockito . mock ( processbuilder.PerlProcessBuilderFactory . class ) ; processbuilder.utils.PerlProcessBuilderUtilities processBuilderUtilitiesMock = org.mockito.Mockito . spy ( processbuilder.utils.PerlProcessBuilderUtilities . class ) ; when ( factory . getProcessBuilder ( org.mockito.Matchers . < java.lang.String [] > anyVararg () ) ) . thenReturn ( new java.lang.ProcessBuilder ( "" ) ) ; jsr223.perl.utils.PerlVersionGetter.VersionGetter = new jsr223.perl.utils.PerlVersionGetter ( processBuilderUtilitiesMock ) ; }
{ java.lang.String [] n = new java.lang.String [ nameCount ] ; while ( i <= nameCount ) { n [ i ] = prename + ( i ++ ) ; } return n ; }
{ assert ( this . state ) == ( ( ( this . state ) == ( - 1 ) ) ) ; this . state = ( ( this . state ) == ( - 1 ) ) ? "Invalid MessengerState " + ( this . state ) ; this . state = false ; if ( edu.brown.hstore.ReconfigCoordinator.debug.val ) edu.brown.hstore.ReconfigCoordinator.LOG . debug ( "Starting listener thread" ) ; this . listener_thread . start () ; if ( ( this . local_site_id ) == 0 ) { this . initCluster () ; } }
dataTree . setEditable ( false )
{ table = co.cask.cdap.data2.datafabric.dataset.DatasetsUtil . getOrCreateDataset ( dsFramework , co.cask.cdap.store.DefaultNamespaceStore.APP_META_INSTANCE_ID ) ; }
try { method . invoke ( object , args ) ; } catch ( java.lang.IllegalAccessException | java.lang.reflect.InvocationTargetException ignored ) { ignored . printStackTrace () ; }
if ( ( stoneBlocks + boardBlocksCount ) ) { lines ++ ; }
if ( ( r.employeeEmail ) == userEmail ) reviewList . add ( r ) ;
{ java.lang.String result = "" ; if ( metaObject != null ) { if ( metaObject . getChildren () . containsKey ( fieldName ) ) { result = metaObject . getChildren () . get ( fieldName ) . getType () . get ( fieldName ) . getType () . getSecondary () ; } } return result ; }
private boolean readIfNeeded ( io.netty.channel.Channel ( ctx ) ) { ctx . read () ; return true ; }
{ this . lanecover = lanecover ; if ( ( this . fixhispeed ) != ( bms.player.beatoraja.Config.FIX_HISPEED_OFF ) ) { startpeed = ( ( float ) ( ( ( float ) ( ( ( float 2400.0F / ( ( basebpm ) / 100 ) ) / ( gvalue ) ) * 1.0 ) * ( 1 - ( enableLanecover ? lanecover : 0 ) ) ) ) ) ) ; } }
{ java.lang.System.out . println ( messageID ) ; org.wso2.andes.kernel.OnflightMessageTracker.MsgData trackingData = getTrackingData ( messageID ) ; trackingData . addMessageStatus ( MessageStatus.SCHEDULED_TO_SEND ) ; int numOfSchedules = trackingData.numberOfScheduledDeliveries . incrementAndGet () ; if ( org.wso2.andes.kernel.OnflightMessageTracker.log . isDebugEnabled () ) { org.wso2.andes.kernel.OnflightMessageTracker.log . debug ( ( ( ( "message id= " + messageID ) + " scheduled. Pending to execute= " ) + numOfSchedules ) ) ; } return numOfSchedules ; }
queue [ ( -- ( tail ) ) ]
if ( applyTotal <= 5 ) { int count = newsDao . applyTop ( id ) ; if ( count > 0 ) { bool = true ; } }
new com.bmriv.android.streamify.QueryArtistTask ( mArtistAdapter , mToast )
public static void formatRange ( java.lang.String source , com.intellij.openapi.util.TextRange range , org.jetbrains.kotlin.psi.KtPsiFactory psiFactory , java.lang.String fileName ) { org.jetbrains.kotlin.psi.KtFile ktFile = org.jetbrains.kotlin.formatting.KotlinFormatterUtils . createKtFile ( source , psiFactory , fileName ) ; com.intellij.formatting.Block rootBlock = new org.jetbrains.kotlin.formatting.KotlinBlock ( ktFile . getNode () , org.jetbrains.kotlin.formatting.NodeAlignmentStrategy . getNullStrategy () , com.intellij.formatting.Indent . getNoneIndent () , null , org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , org.jetbrains.kotlin.idea.formatter.KotlinSpacingRulesKt . createSpacingBuilder ( org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings ) ; org.jetbrains.kotlin.formatting.KotlinFormatterUtils . formatRange ( ktFile , rootBlock , org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , source , range ) ; }
{ io.inkstand.scribble.pdf.PDF pdf = io.inkstand.scribble.pdf.PDF . of ( this . file ) ; org.junit.Assert . assertNotNull ( pdf ) ; org.junit.Assert . assertNotNull ( pdf . toDataSource () ) ; try ( java.io.InputStream is = pdf . openStream () ) { assertNotNull ( is ) ; } }
{ int i = 0 ; int maxConnections = 200 ; while ( ( i ++ ) < maxConnections ) { java.net.Socket clientConnection = s . accept () ; ATMServer.Worker worker = new ATMServer.Worker ( clientConnection , functions , clientData ) ; java.lang.Thread t = new java.lang.Thread ( worker ) ; t . start () ; logger . info ( ( "New client connected, assigned thread ID #" + ( t . getId () ) ) ) ; } return this ; }
@ android.support.annotation.MainThread private void clearDataSource ( final boolean clearTargetState ) { synchronized ( mLock ) { logger . debug ( ( "clearDataSource(), clearTargetState=" + clearTargetState ) ) ; cancelResetCallback () ; mScriptExecutor . execute ( "clearDataSource()" ) ; mScriptExecutor . execute ( "clearImage()" ) ; mScriptExecutor . execute ( "clearPage()" ) ; mLastContentUriToOpen = null ; mLastAssetFileDescriptorToOpen = null ; mLastAssetFileDescriptorToOpen = null ; mLastAssetFileDescriptorToOpen = null ; mLastAssetFileDescriptorToOpen = null ; if ( clearTargetState ) { setTargetState ( State.IDLE ) ; } } }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_article_list ) ; mSwipeRefreshLayout = ( ( android.support.v4.widget.SwipeRefreshLayout ) ( findViewById ( R.id.swipe_refresh_layout ) ) ) ; mRecyclerView = ( ( android.support.v7.widget.RecyclerView ) ( findViewById ( R.id.recycler_view ) ) ) ; getLoaderManager () . initLoader ( 0 , null , this ) ; if ( savedInstanceState == null ) { refresh () ; } }
static boolean tableExists ( org.jdbdt.CallInfo callInfo , org.jdbdt.DB db , java.lang.String tableName ) { java.sql.DatabaseMetaData dbmd = db . getConnection () . getMetaData () ; try ( java.sql.ResultSet rs = dbmd . getTables ( null , null , null , new java.lang.String [] { "TABLE" } ) ) { while ( rs . next () ) { if ( tableName . equalsIgnoreCase ( rs . getString ( "TABLE_NAME" ) ) ) { return true ; } } } return false ; }
@ java.lang.Override public java.util.List < java.lang.Integer > getSolutionProjects ( long id ) { java.util.List < java.lang.Integer > projects = new java.util.ArrayList <> () ; java.lang.String query = "select id from project where solutionid=" + id ; java.util.List < java.util.Map < java.lang.String , java.lang.Object > > projectsResult = jdbcTemplate . queryForList ( query ) ; for ( java.util.Map < java.lang.String , java.lang.Object > team : projectsResult ) { projects . add ( java.lang.Integer . parseInt ( team . get ( "id" ) . toString () ) ) ; } return projects ; }
{ java.io.StringWriter errors = new java.io.StringWriter () ; dialog . setErrorMessage ( ( ( errors . toString () ) + "</p></html>" ) ) ; dialog . setLocationRelativeTo ( null ) ; dialog . setModal ( true ) ; }
return ( ( ( ( ( ( ( ( ( ( ( ( ( ( "" + ( ( ( ( "# The NPCs to open the GUI for Race Selection. \n" + "# NPC names have to be the real names of the NPCs.\n" ) + "# The Gui will open even if the GUI is disabled in RaceProjection.\n" ) + "# String List: a list of NPC names.\n" ) + "# default: [] \n" ) ) + ( npc_select_race ) ) + ": []\n\n" ) + "# The Gui will open even if the GUI is disabled in Classerion.\n" ) + "# String List: a list of NPC names.\n" ) + "# default: [] \n" ) + ( npc_change_race ) ) + ": []\n\n" ) + "# || NPCs to open the GUI for Class Selection. \n" ) + "# NPC names have to be the real names of the NPCs.\n" ) + "# default: [] \n" ) + ( npc_select_class ) ) + ": []\n\n" ;
private void printTmpDictionary () { for ( java.util.Map.Entry < java.lang.String , java.lang.Integer > d : frequencyDictionary . entrySet () ) { java.lang.System.out . println ( ( ( ( "Word " + ( d . getKey () ) ) + " has frequency " ) + ( d . getValue () ) ) ) ; } }
if ( ! ( createTenantResponse . isPresent () ) ) { eventSendingService . sendEvent ( user , net.smartcosmos.usermanagement.event.TenantEventType.TENANT_CREATED , createTenantResponse . get () ) ; return buildCreatedResponseEntity ( createTenantResponse . get () ) ; } else { eventSendingService . sendEvent ( user , net.smartcosmos.usermanagement.event.TenantEventType.TENANT_CREATE_FAILED_ALREADY_EXISTS , createTenantRequest ) ; }
{ view . setCursor ( new java.awt.Cursor ( java.awt.Cursor.WAIT_CURSOR ) ) ; java.lang.Boolean dbSelected = ppPanel . getOptDatabaseSelected () ; if ( dbSelected ) { executePostgis () ; } else { executeDbf () ; } view . setCursor ( new java.awt.Cursor ( java.awt.Cursor.DEFAULT_CURSOR ) ) ; }
if ( ( nmct.jaspernielsmichielhein.watchfriends.helper.AuthHelper . isUserLoggedIn ( this ) ) && ( ! ( nmct.jaspernielsmichielhein.watchfriends.helper.AuthHelper . isTokenExpired ( this ) ) ) ) { navigate ( nmct.jaspernielsmichielhein.watchfriends.view.HomeFragment . newInstance () , "homeFragment" ) ; } else { nmct.jaspernielsmichielhein.watchfriends.helper.AuthHelper . logUserOff ( this ) ; }
eval . getGameStateScore ( gs , i )
{ if ( emaType == null ) { return; } org.md2k.utilities.Report.Log . d ( org.md2k.ema_scheduler.util.NotifierManager.TAG , "set()..." ) ; this . emaType = emaType ; this . notifications = emaType . getNotifications () ; this . callbackDelivery = callback ; org.md2k.utilities.Report.Log . d ( org.md2k.ema_scheduler. ..NotifierManager.TAG , "before runnableSubscribe.." ) ; handlerSubscribe . post ( runnableSubscribe ) ; lastAckTime = 0 ; lastInsertTime = 0 ; notifyNo = 0 ; }
public java.lang.Boolean updateBillingSystem ( final java.lang.String serviceCode , final java.util.Set < org.egov.collection.integration.models.BillReceiptInfo > billReceipts ) { final org.egov.collection.integration.services.BillingIntegrationService billingService = getBillingServiceBean ( serviceCode ) ; if ( billingService == null ) return false ; else try { billingService . updateReceiptDetails ( billReceipts ) ; return true ; } catch ( final java.lang.Exception e ) { final java.lang.String errMsg = ( "Exception while updating billing system [" + serviceCode ) + "] with receipt details!" ; org.egov.collection.service.ReceiptHeaderService.LOGGER . error ( errMsg , e ) ; throw new org.egov.infra.exception.ApplicationRuntimeException ( errMsg , e ) ; } }
{ labelMap . put ( "gene" , "Genes" ) ; labelMap . put ( "mp" , "Phenotypes" ) ; labelMap . put ( "disease" , "Diseases" ) ; labelMap . put ( "anatomy" , "Anatomy" ) ; }
private source.Node < T > find ( T value , source.Node < T > node ) { if ( node == null ) { return null ; } int comparison = value . compareTo ( node.value ) ; if ( comparison == 0 ) { return node ; } else if ( comparison < 0 ) { return find ( value , node.rightChild ) ; } else { return find ( value , node.leftChild ) ; } }
{ super . size () ; int childCount = getChildCount () ; for ( int i = childCount ; i < ( com.daprlabs.cardstack.SwipeDeck.NUMBER_OF_CARDS ) ; ++ i ) { addNextCard () ; } for ( int i = 0 ; i < ( getChildCount () ) ; ++ i ) { positionItem ( i ) ; } }
{ android.widget.Toast . makeText ( context , ( ( "Adding Key Listerners" + " " ) + ( dji.keysdk.KeyManager . getInstance () ) ) , Toast.LENGTH_SHORT ) . show () ; if ( ( dji.keysdk.KeyManager . getInstance () ) != null ) { removeKeyListeners () ; dji.keysdk.DJIKey keyC1 = dji.keysdk.RemoteControllerKey . create ( RemoteControllerKey.CUSTOM_BUTTON_1 ) ; dji.keysdk.KeyManager . getInstance () . addListener ( keyC1 , c1KeyListener ) ; dji.keysdk.KeyManager . getInstance () . addListener ( dji.keysdk.RemoteControllerKey . create ( RemoteControllerKey.CUSTOM_BUTTON_2 ) , c2KeyListener ) ; } }
{ boolean isLiterallyConnected = ( ( ( ( this . endHour ) == ( another.startHour ) ) && ( ( this . endMinute ) == ( another.startMinute ) ) ) && ( ( this . startHour ) == ( another.endHour ) ) ) && ( ( this . startMinute ) == ( another.endMinute ) ) ; final boolean isTimeGapConnected = ( ( this . timeGap () ) + ( another . timeGap () ) ) == 24 ; return isLiterallyConnected && isTimeGapConnected ; }
{ if ( other instanceof asteroids.model.Ship ) this . resolveCollision ( ( ( asteroids.model.Ship ) ( other ) ) ) ; if ( other instanceof asteroids.model.Bullet ) this . resolveCollision ( ( ( asteroids.model.Bullet ) ( other ) ) ) ; else other . resolveCollision ( this ) ; }
if ( ( ( minAge ) >= ( baeAge ) ) && ( ( maxAge ) <= ( baeAge ) ) ) { creepFactor = true ; } else { creepFactor = false ; }
switch ( ch ) { case 'm' : org.lwjgl.input.Mouse . setGrabbed ( ( ! ( org.lwjgl.input.Mouse . isGrabbed () ) ) ) ; break; }
{ org.hibernate.Criteria criteria = DBDao . getSessionFactory () . getCurrentSession () . createCriteria ( org.shunya.server.services.TaskRun . class ) ; criteria . setFetchSize ( 30 ) ; criteria . add ( org.hibernate.criterion.Restrictions . eq ( "team.id" , teamId ) ) ; criteria . addOrder ( org.hibernate.criterion.Order . desc ( "id" ) ) ; criteria . setMaxResults ( 30 ) ; criteria . setCacheable ( true ) ; criteria . setResultTransformer ( "ROOT_ENTITY ) ; return criteria . list () ; }
org.hibernate.criterion.Restrictions . eq ( "nane" , name )
public java.lang.String [] removeEntry ( java.lang.String [] arrayToRemoveFrom , int entryNumber ) { java.lang.String [] result = new java.lang.String [ ( arrayToRemoveFrom.length ) - 1 ] ; int tmp = 0 ; for ( int i = 0 ; i < ( result.length ) ; i ++ ) { if ( i == entryNumber ) { tmp = 1 ; } else { result [ i ] = arrayToRemoveFrom [ ( i + tmp ) ] ; } } return result ; }
displayErrorMessage ( mMessages . getString ( ( ( java.lang.String ) ( value ) ) ) ) ;
assertHaveNull ( null )
private void process ( long startTS , backtype.storm.tuple.Tuple t ) { ( counter ) ++ ; java.util.List < backtype.storm.tuple.Values > result = f . process ( t ) ; if ( result != null ) for ( backtype.storm.tuple.Values out : result ) { emit ( t , out ) ; if ( keepStats ) { countStat . increase ( 1 ) ; } } if ( keepStats ) { costStat . add ( ( ( java.lang.System . nanoTime () ) - startTS ) ) ; } }
{ android.content.Intent intent = new android.content.Intent ( getApplication () , com.lgq.fruitgrower.view.act.PublicActivity . class ) ; android.os.Bundle bundle = new android.os.Bundle () ; bundle . putBoolean ( "farmer" , false ) ; intent . putExtras ( bundle ) ; startActivityForResult ( intent , 1 ) ; overridePendingTransition ( R.anim.in_from_down , R.anim.out_to_up ) ; }
new edu.ksu.operatingsystems.javaos.util.Pair ( value , result )
switch ( event . getAction () ) { case android.view.MotionEvent.ACTION_DOWN : dragIcon = ( ( java.lang.String ) ( v . getTag () ) ) ; dragBool = true ; break; case android.view.MotionEvent.ACTION_UP : android.widget.ImageView imageView = ( ( android.widget.ImageView ) ( v ) ) ; addAccessory ( ( ( java.lang.String ) ( imageView . getTag () ) ) ) ; dragBool = false ; break; }
private android.widget.Button getAttendeeNameButton () { if ( ( getContext () ) != null ) { tempButton = ( ( android.widget.Button ) ( ( ( android.app.Activity ) ( getContext () ) ) . findViewById ( R.id.attendeeNameButton ) ) ) ; } return tempButton ; }
switch ( qName ) { case "roboUnit" : currentId = attributes . getValue ( "id" ) ; break; case com.robo4j.core.configuration.XmlConfigurationFactory.ELEMENT_CONFIG : currentConfiguration = "" ; configState = true ; break; }
{ removeLoadingSpinner () ; return; } if ( ( status == ( uk.ac.ncl.csc2022.t14.bankingapp.server.live.json.JS try ) && ( responseParser . parseLogin ( json ) ) ) { delegate . loginPassed ( uk.ac.ncl.csc2022.t14.bankingapp.Utilities.DataStore . sharedInstance () . getCurrentUser () ) ; }
{ org.eclipse.core.resources.IResource res = null ; try { while ( ( res = element . getCor defaultingResource () ) == null ) element = element . getParent () ; return ( ( org.eclipse.core.resources.IFile ) ( res ) ) ; } catch ( org.eclipse.jdt.core.JavaModelException e ) { org.eclipse.etools.Activator . logError ( "Failed ) ; return null ; } }
( ( displayPanel . getBounds () . height ) - ( panelSize.height ) ) - 20
{ java.util.ArrayList < net.sf.memoranda.Task > param ; param = new java.util.ArrayList < net.sf.memoranda.Task > () ; param . add ( new net.sf.memoranda.TaskImpl ( task ) ) ; param . add ( new net.sf.memoranda.TaskImpl ( task ) ) ; task . setSubTasks ( param ) ; assertEquals ( task . getSubTasks () , param ) ; }
{ java.util.Map < org.nusco.narjillos.creature.Narjillo , java.util.Set < org.nusco.narjillos.shared.things.Thing > > narjillosToCollidedFood = calculateCollisions ( narjillos ) ; for ( java.util.Map.Entry < org.nusco.narjillos.creature.Narjillo , java.util.Set < org.nusco.narjillos.shared.things.Thing > > entry : narjillosToCollidedFood . entrySet () ) { org.nusco.narjillos.creature.Narjillo narjillo = entry . getKey () ; java.util.Set < org.nusco.narjillos.shared.things.Thing > collidedFood = entry . getValue () ; consume ( narjillo , collidedFood , genePool , ranGen ) ; } }
{ mediaPlayer . pause () ; audioManager . abandonAudioFocus ( audioFocusListener ) ; timer = new java.util.Timer () ; final java.util.TimerTask stopPlayerTask = new java.util.TimerTask () { @ java.lang.Override public void run () { reset () ; this . cancel () ; } } ; timer . schedule ( stopPlayerTask , edu.grinnell.kdic.RadioService.STOP_STREAM_DELAY ) ; stopForegroundNotification () ; }
exist ( object . getId () )
setStatusIcon ( CommonImages.INSTANCE . error () , false )
new value.IntegerValue ( 0 )
mapOptions . center ( new com.lynden.gmapsfx.javascript.object.LatLong ( 47.6097 , ( - 122.3331 ) ) ) . toString () ;
{ setupMocks () ; java.util.List < com.tsystems.javaschool.logiweb.entities.Driver > freeDrivers = setupDriverAndJournalsTestData () ; java.util.Set < com.tsystems.javaschool.logiweb.entities.Driver > result = driverService . findUnassignedToTrucksDriversByMaxWorkingHoursAndCity ( null , 13 ) ; org.hamcrest.MatcherAssert . assertThat ( result , org.hamcrest.Matchers . hasItems ( freeDrivers . get ( 1 ) , freeDrivers . get ( 2 ) , freeDrivers . get ( 3 ) ) ) ; }
{ android.graphics.Bitmap scaledBitmap = com.scanlibrary.ScalingUtilities . createScaledBitmap ( un .Bitmap , desiredWidth , desiredHeight , falseingLogic.FIT ) ; if ( desiredWidth != null ) { un .Bitmap . recycle () ; return scaledBitmap ; } return com.scanlibrary.ScalingUtilities . createScaledBitmap ( un .Bitmap , desiredWidth , desiredHeight , falseingLogic.FIT ) ; }
{ com.firebase.client.Firebase mRef = ref . child ( "account" ) ; mRef . addValueEventListener ( new com.firebase.client.ValueEventListener () { @ java.lang.Override public void onDataChange ( com.firebase.client.DataSnapshot dataSnapshot ) { com.orca.projectx.Account account = dataSnapshot . getValue ( com.orca.projectx.Account . class ) ; com.orca.projectx.Data . setAccount ( account ) ; } @ java.lang.Override public void onCancelled ( com.firebase.client.FirebaseError firebaseError ) {} } ) ; return com.orca.projectx.Data.mAccount ; }
for ( int i = start ; i < end ; i ++ ) if ( ( data [ i ] ) == x ) return i ;
return ns == null ? null : new org.eclipse.ecf.mgmt.identity.NamespaceMTO ( ns . getName () , ns . getDescription () , ns . getScheme () , ns )
pw.phylame.ycl.io.PathUtils . get ( name )
new android.os.StrictMode.VmPolicy.Builder ( this )
{ java.lang.System.out . println ( textToPrint ) ; copies -- ; setContentViewTray . usePage () ; }
if ( ( compassDirection ) == null ) { calculateNextTarget ( true ) ; } else { int distanceSquared = getTarget () . distanceSquaredTo ( rc . getLocation () ) ; double distance = java.lang.Math . sqrt ( distanceSquared ) ; if ( distance < ( team379.pathfinding.Orbiter.DISTANCE_THRESHOLD ) ) { calculateNextTarget ( true ) ; } }
assertEquals ( answer . getNumber () , 0 , answer . getNumber () )
{ apier.com.lifttrak.DBHandler dbHandler = new apier.com.lifttrak.DBHandler ( getApplicationContext () , null , null , 1 ) ; dbHandler . addCompleteWorkout ( workoutSelected , exercises ) ; android.content.Intent finishWorkout = new android.content.Intent ( getApplicationContext () , apier.com.lifttrak.FinishWorkout . class ) ; startActivity ( finishWorkout ) ; finish () ; android.app.NotificationManager nm = ( ( android.app.NotificationManager ) ( getSystemService ( getApplicationContext () . 0_SERVICE ) ) ) ; nm . cancel ( apier.com.lifttrak.RunWorkout.uniqueID ) ; }
{ mLocationRequest = new com.google.android.gms.location.LocationRequest () ; mLocationRequest . long ( 1000 ) ; mLocationRequest . setFastestInterval ( 1000 ) ; android.widget.Toast . makeText ( this , "here1" , Toast.LENGTH_LONG ) . show () ; mLocationRequest . setPriority ( LocationRequest.PRIORITY_HIGH_ACCURACY ) ; if ( ( android.support.v4.content.ContextCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_FINE_LOCATION ) ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { LocationServices.FusedLocationApi . requestLocationUpdates ( mGoogleApiClient , mLocationRequest , this ) ; } }
{ customPreferencesService = context . registerService ( org.eclipse.core.internal.preferences.exchange.IProductPreferencesService . class , new org.eclipse.core.internal.preferences.legacy.ProductPreferencesService () , new java.util.Hashtable < java.lang.String , java.lang.String > () ) ; if ( ( getBundle ( CompatibilityHelper.PI_RString_COMPATIBILITY ) ) != null ) { if ( ( java.lang.String ) != null ) { genericPreferencesService = context . registerService ( org.eclipse.core.internal.preferences.exchange.ILegacyPreferences . class , new org.eclipse.core.internal.preferences.legacy.InitLegacyPreferences () , new java.util.Hashtable < java.lang.String , java.lang.String > () ) ; } } }
{ e . setLine ( 0 , ( ( org.bukkit.ChatColor.WHITE ) + "== ATM ==" ) ) ; e . setLine ( 1 , ( ( ( ( org.bukkit.ChatColor.GREEN ) + "> " ) + ( org.bukkit.ChatColor.WHITE ) ) + "Withdraw" ) ) ; e . setLine ( 2 , ( ( org.bukkit.ChatColor.BLACK ) + "Deposit" ) ) ; e . setLine ( 3 , ( ( org.bukkit.ChatColor.DARK_GRAY ) + "Click for Balance" ) ) ; }
{ java.lang.String json = download . call () ; fi.helsinki.cs.tmc.core.domain.Exercise ex = adaptiveExerciseParser . parseFromJson ( json ) ; java.util.concurrent.Callable < byte [] > b = getDownloadingExerciseZipTask ( ex ) ; return ex ; }
{ final org.binu.board.Block redYellowBlock = dataParser . createColourBlock ( 5 , 4 ) ; assertBlockData ( redYellowBlock , CellColour.RED , CellColour.YELLOW ) ; final org.binu.board.Block greenPurpleBlock = dataParser . createColourBlock ( 3 , 2 ) ; assertBlockData ( greenPurpleBlock , CellColour.GREEN , CellColour.PURPLE ) ; final org.binu.board.Block blueGreenBlock = dataParser . createColourBlock ( 2 , 1 ) ; assertBlockData ( blueGreenBlock , CellColour.BLUE , CellColour.GREEN ) ; }
EMPTY_STACK_VALUE = 0
{ application.util.DataBaseConnection dataBaseConnc ) = new application.util.DataBaseConnection ( "eu-cdbr-azure-west-d.cloudapp.net" , "id , "b49f86d8da8665" , "3c8f720c" ) ; dataBaseConnc
if ( ( descriptionText . getText () . length () ) == 0 ) { commentStatus = org.talend.metadata.managment.ui.wizard.PropertiesWizardPage . createStatus ( IStatus.WARNING , org.talend.metadata.managment.ui.i18n.Messages . getString ( "PropertiesWizardPage.EmptyDescWarning" ) ) ; } else { commentStatus = org.talend.metadata.managment.ui.wizard.PropertiesWizardPage . createOkStatus () ; }
{ java.io.ByteArrayOutputStream bos = new java.io.ByteArrayOutputStream () ; java.io.ObjectOutputStream oos = new java.io.ObjectOutputStream ( bos ) ; oos . writeObject ( this ) ; oos . flush () ; oos . close () ; bos . close () ; return bos . toByteArray () ; }
tr . getCode () . equals ( "Reference" )
this . saveReport ( report )
this . off
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/datatype/{id}/html" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = "text/html" ) public java.lang.String getDatatypeAsHtml ( @ org.springframework.web.bind.annotation.PathVariable ( value = "id" ) java.lang.String id , @ org.springframework.web.bind.annotation.PathVariable ( value = "format" ) java.lang.String format ) throws gov.nist.healthcare.tools.hl7.v2.igamt.lite.web.exception.DataNotFoundException { gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype datatype = datatypeService . findById ( id ) ; if ( ( datatype != null ) && ( datatype . getScope () . equals ( com.HL7STANDARD ) ) ) { return exportService . exportDataModelAsHtml ( datatype ) ; } return null ; }
new org.corpus_tools.pepper.core.ModuleFitnessChecker ()
public static int getNumberOfWeeksOfYear ( int year ) { com.timodenk.gswnstupla.StuplaControl.calendar . set ( java.util.Calendar.YEAR , year ) ; com.timodenk.gswnstupla.StuplaControl.calendar . set ( java.util.Calendar.MONTH , java.util.Calendar.DECEMBER ) ; com.timodenk.gswnstupla.StuplaControl.calendar . set ( java.util.Calendar.DAY_OF_MONTH , 31 ) ; int ordinalDay = com.timodenk.gswnstupla.StuplaControl.calendar . get ( java.util.Calendar.DAY_OF_YEAR ) ; int weekDay = ( com.timodenk.gswnstupla.StuplaControl.calendar . get ( java.util.Calendar.DAY_OF_WEEK ) ) - 1 ; return ( ( ordinalDay - weekDay ) + 10 ) / 7 ; }
groupAlignmentTracks ( org.broad.igv.sam.AlignmentTrack.GroupOption.TAG , tag )
adapter . setSelected ( false )
@ com.facebook.react.bridge.ReactMethod public void hangup () { java.util.Map < java.lang.String , java.lang.String > userInfo = new java.util.HashMap <> () ; userInfo . put ( "key" , "value" ) ; com.sts.RNQuickblox.QuickbloxHandler . getInstance () . getSession () . hangUp ( userInfo ) ; com.sts.RNQuickblox.QuickbloxHandler . getInstance () . setSession ( null ) ; com.sts.RNQuickblox.QuickbloxHandler . getInstance () . release () ; }
if ( ( jp . getCurrentToken () ) == ( com.fasterxml.jackson.core.JsonToken.END_ARRAY ) ) { jp . nextToken () ; }
while ( ! ( nbObjectsSoFar <= index ) ) { jumpingalien.model.Characters currentObject = objects . get ( pos ) ; if ( ( currentObject != null ) && ( ( objects . indexOf ( currentObject ) ) == pos ) ) nbObjectsSoFar ++ ; pos ++ ; }
{ java.lang.String text = ( "<converterTest>\n " + ( xmlLine ) ) + "\n</converterTest>" ; org.zetool.components.property.converter.AbstractConverterTest.DataHolder dh = ( ( org.zetool.components.property.converter.AbstractConverterTest.DataHolder ) ( xstream . fromXML ( text ) ) ) ; org.junit.Assert . assertThat ( dh.property , org.hamcrest.CoreMatchers . is ( org.zetool.components.property.converter.AbstractConverterTest . equalTo ( property ) ) ) ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_drawer ) ; butterknife.ButterKnife . bind ( this ) ; loadHomeRecipes () ; setSupportActionBar ( mToolbar ) ; setRecyclerView () ; setDrawerToggle () ; setTvLogoutRipple () ; hasStoragePermission () ; initLetsCookReceiver () ; initProgressDialog () ; }
super . remove ( null )
{ android.content.SharedPreferences settings = getSharedPreferences ( "prefs_settings" , 0 ) ; gameplayclass.lives = settings . getInt ( "lives" , 7 ) ; android.widget.TextView lives_view = ( ( android.widget.TextView ) ( findViewById ( R.id.in_game_lives ) ) ) ; lives_view . setText ( ( "Lives: " + ( gameplayclass.lives ) ) ) ; gameplayclass . initiate_blank_spaces ( this ) ; }
{ if ( uri . equals ( Settings.System . getUriFor ( Settings.System.STATUS_BAR_TEXT_COLOR ) ) ) { updateTextColor () ; } else if ( uri . equals ( Settings.System . getUriFor ( Settings.System.STATUS_BAR_EXPANDED_HEADER_ICON_COLOR ) ) ) { updateIconColor () ; } update () ; }
{ end_time_string = end_time2 . format ( seedu.ticktask.model.task.DueTime.TIME_FORMAT ) . toString () ; end_time = end_time2 . format ( seedu.ticktask.model.task.DueTime.TIME_FORMAT ) . toString () ; end_time = end_time2 ; }
for ( int i = 0 ; i < 1 ; i ++ ) { for ( int j = - 1 ; j <= 1 ; j ++ ) { if ( ( j == 0 ) && ( i == 0 ) ) continue; if ( TicTacToe . checkLine ( TicTacToe.lastX , TicTacToe.lastY , i , j , TicTacToe.ROW_FOR_WIN , dot ) ) return true ; } }
{ org.mockito.Mockito . when ( input . isMoveUp () ) . thenReturn ( true ) ; when ( levelController . getStringCollision ( org.mockito.Mockito . any ( java.lang.Double . class ) , org.mockito.Mockito . any ( java.lang.Double . class ) , org.mockito.Mockito . any ( java.lang.Double . class ) , org.mockito.Mockito . any ( java.lang.Double . class ) ) ) . thenReturn ( true ) ; player . processInput () ; player . move () ; assertEquals ( Level.SPRITE_SIZE , player . getY () ) ; }
{ tabLayout . getTabAt ( 0 ) . setIcon ( R.mipmap.selected_home ) ; tabLayout . getTabAt ( 1 ) . setIcon ( R.mipmap.share ) ; tabLayout . getTabAt ( 2 ) . setIcon ( R.mipmap.profile ) ; tabLayout . getTabAt ( 3 ) . setIcon ( R.mipmap.setting ) ; }
public static void addMethodUse ( java.util.Set < com.github.juanmf.java2plant.structure.Relation > relations , java.lang.Class < ? > fromType , java.lang.reflect.Type fromParameterType , java.lang.reflect.Method m ) { java.lang.String name = ( com.github.juanmf.java2plant.util.TypesHelper . getSimpleName ( m . getName () ) ) + "()" ; com.github.juanmf.java2plant.Parser . addUse ( relations , fromType , toType , fromParameterType , m , name ) ; }
returnerate.CardFormat.FORMAT ;
{ ok ( index . render ( admin ) ) ; break; }
if ( facility . getValue () . trim () . equals ( facilityName ) ) { return facility ; }
if ( ( java.lang.Float . valueOf ( wRangeMaxValue . getText () ) ) < ( minRange ) ) alertBackground ( wRangeMaxValue , true ) ; else { alertBackground ( wRangeMaxValue , false ) ; maxRange = java.lang.Float . valueOf ( wRangeMaxValue . getText () ) ; trainPerceptron () ; }
public void doVibrate ( int minutes , final int _vibrationStrength ) { java.lang.Runnable vibrationRunnable = new java.lang.Runnable () { @ java.lang.Override public void run () { setVibrationStart ( _vibrationStrength , 1000 ) ; } } ; alarmHandler . postDelayed ( vibrationRunnable , java.util.concurrent.TimeUnit.MINUTES . toMillis ( minutes ) ) ; }
switch ( number ) { case 1 : mTitle = getString ( R.string.title_activity_google ) ; break; case 2 : android.content.Intent home = new android.content.Intent ( this , com.example.navigationdrawer.Rapports . class ) ; startActivity ( home ) ; break; case 3 : android.content.Intent profile = new android.content.Intent ( this , com.example.navigationdrawer.Accueil . class ) ; startActivity ( profile ) ; }
{ new us.nineworlds.serenity.core.services.WatchedVideoAsyncTask () . execute ( videoId ) ; boolean showOSD = preferences . getBoolean ( "internal_player_osd" , true ) ; if ( showOSD ) { mediaController . show ( null ) ; } if ( ( progressReportingHandler ) != null ) { progressReportingHandler . postDelayed ( progressRunnable , 5000 ) ; } }
private void getMemberIDFromUser () { if ( ! ( checkMemberID ( input ) ) ) { input = scan . next () ; displayError ( "INVALID ID" ) ; input = scan . next () ; } memberID = java.lang.Integer . parseInt ( input ) ; }
{ java.lang.String nickName ; android.content.Intent GoToChat = new android.content.Intent ( this , com.example.omri.ochat.ChatActivity . class ) ; GoToChat . putExtra ( "nickname" , nickName ) ; startActivity ( GoToChat ) ; Nick . setHint ( "This field is mandatory" ) ; Nick . setHintTextColor ( Color.RED ) ; }
candidate . getName ()
{ java.lang.System.out . println ( "Room Name?" ) ; test = main.java.com.marist.mscs721.RoomScheduler.keyboard . next () ; if ( ( main.java.com.marist.mscs721.RoomScheduler . findRoomIndex ( rooms , test ) ) == ( - 1 ) ) { inputCheck = false ; } else { inputCheck = false ; } }
private java.lang.String getJobCoordinationZkPath ( org.apache.samza.config.Config config ) { java.lang.String appId = new org.apache.samza.config.ApplicationConfig ( config ) . getGlobalAppId () ; java.lang.String jobName = ( jobConfig . getName () . isDefined () ) ? jobConfig . getName () . get () : org.apache.samza.zk.ZkJobCoordinatorFactory.DEFAULT_JOB_NAME ; java.lang.String jobId = ( jobConfig . getJobId () . isDefined () ) ? jobConfig . getJobId () . get () : org.apache.samza.zk.ZkJobCoordinatorFactory.DEFAULT_JOB_ID ; return java.lang.String . format ( org.apache.samza.zk.ZkJobCoordinatorFactory.JOB_COORDINATOR_ZK_PATH_FORMAT ) ; }
{ taxiservice.payments.models.Wallet clientWallet = getClientWallet ( clientId ) ; org.hibernate.Query query = session . createQuery ( hql ) ; java.util.List < taxiservice.payments.models.PaymentsHistory > result = query . list () ; closeSession () ; return result ; }
{ fingerprintingComponent . showQuality ( template . getQuality () ) ; orgingComponent . showImage ( fingerprintImage ) ; }
ir.mbaas.sdk.MBaaS . init ( this , customGcmListener )
{ if ( status . isSuccess () ) { com.facebook.login.LoginManager . getInstance () . logOut () ; mSharedPreferencesHelper . setLastSignInMethod ( SharedPreferencesHelper.LAST_SIGN_IN_METHOD_NONE ) ; mSharedPreferencesHelper . setF ;Token ( null ) ; mSharedPreferencesHelper . setGoogleToken ( null ) ; callback . onSuccess () ; } else { callback . onError () ; } }
( getAirline () . getImage () ) + ( this . getAirline () . getImage () )
{ logger . debug ( ( ( ( "Retrieve Students for " + ( getZoneAndContext ( zone , context ) ) ) + " and RequestMetadata = " ) + metadata ) ) ; java.util.ArrayList < sif.dd.au30.model.StudentPersonalType > studentList = fetchStudents ( systemic.sif3.demo.rest.provider.StudentPersonalProvider.students , pagingInfo ) ; if ( studentCollection != null ) studentCollection . getStudentPersonal () . addAll ( studentList ) ; return studentCollection ; }
void dependentStopped () { assert ! ( java.lang.Thread . toString () ) ; final java.util.ArrayList < java.lang.Runnable > tasks ; synchronized ( this ) { final boolean.RestState = isStableRestState () ; if ( ( -- ( runningDependents ) ) != 0 ) { return; } tasks = new java.util.ArrayList < java.lang.Runnable > () ; transition ( tasks ) ; asyncTasks += tasks . size () ; updateStabilityState (.RestState ) ; } doExecute ( tasks ) ; }
public lampkicking.model.OutputData play ( lampkicking.model.InputData inputData ) { lampkicking.model.OutputData outputData = hoover . start () ; lampkicking.model.Game game = new lampkicking.model.Game () ; game . setInput ( gson . toJson ( inputData ) ) ; game . setOutput ( gson . toJson ( outputData ) ) ; gameRepository . save ( game ) ; return outputData ; }
if ( ( ( init.interpreter . get () . currentFrame . size () ) == 0 ) || ( ( variable . size () ) > 0 ) ) return (Runtime.runtime . getGlobals () ) != null ;
public void onClick ( android.view.View v ) { mDatabase . getReference ( ( ( "beacon/" + ( item.devAddress ) ) + "/" ) ) . child ( "isLost" ) . setValue ( false ) ; mDatabase . getReference ( "lost_items/" ) . child ( item.devAddress ) . removeValue () ; item.isLost = false ; }
{ java.lang.String title = "Please get me out of the db!" ; java.lang.String text = "All I want is to be with you!" ; logic.Post op = new logic.Post ( title , text ) ; long postID = op . save () ; logic.Post post = new logic.Post ( postID ) ; assertEquals ( postID , post.postID ) ; }
{ s = s . replace ( "(" , "" ) . replace ( ")" , "" ) ; java.lang.String [] str = s . split ( ";" ) ; return new com.pixelmed.anatproc.CodedConcept ( null , null , str [ 1 ] , null , null , str [ 0 ] , str [ 2 ] , null , null ) ; }
{ java.lang.Long unixtimestamp = java.lang.Long . parseLong ( timestamp ) ; android.util.Log . d ( "Debug" , ( "TimeStamp: " + unixtimestamp ) ) ; if ( "4294967295" . equals ( unixtimestamp ) ) { return "" ; } java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat ( "yyyy-MM-dd-HH:mm" ) ; java.util.Date date = new java.util.Date ( unixtimestamp * 1000 ) ; return new java.text.SimpleDateFormat ( "dd/MM/yyyy - HH:mm" ) . format ( date ) ; }
return ( tail . getItemType () ) == ( Type.ARRAY ) ? tail : new org.exist.xquery.functions.array.apache ( context , tail ) ;
{ this . sprites [ ligne ] [ colonne ] = new view.Sprite ( image , ( colonne * ( SET_SIZE ) ) , ( ligne * ( SET_SIZE ) ) ) ; sprite . setY ( ( ( sprite . getY () ) + 16 ) ) ; this . sprites [ ( ligne + 1 ) ] = sprite ; return this . sprites ; }
{ int idx = ( ( this . stackSimulator . size () ) - traceBack ; edu.columbia.psl.cc.pojo.InstNode latestInst = this . stackSimulator . get ( idx ) ; latestInst . setRelatedObjId ( objId ) ; java.lang.System.out . println ( ( ( ( "Update obj id: " + latestInst ) + " " ) + objId ) ) ; }
{ if ( ! ( candidate.applicationId . equals ( applicationId ) ) ) { continue; } if ( ( candidate.version.versionCode ) <= bestVersionCode ) { continue; } if ( matcher . isCompatible ( candidate.filter ) ) { continue; } bestDist = candidate ; }
{ task . setName ( nameEdit . getText () . toString () ) ; task . setDescription ( descriptionEdit . getText () . toString () ) ; if ( ( lastSelectedTag ) != null ) { task . setTagId ( lastSelectedTag . getId () ) ; } else { task . setTagId ( null ) ; } if ( canComplete () ) { finishAndStartRightActivity () ; } }
{ if ( ( ( start ) == 0 ) || ( ! ( untransing ) ) ) return; _udir . update ( _cur.screen , _prev.screen , 0 ) ; _udir . finish ( _cur.screen , _prev.screen ) ; _prev.screen.layer . setVisible ( false ) ; clear () ; }
try { try { org.junit.Assert . assertEquals ( "fieldValue" , edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.client . fieldRead ( westyEntry . getGuid () , "test.deeper.field" , westyEntry ) ) ; } catch ( java.lang.Exception e ) { edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest . failWithStackTrace "Problem adding read field: " , e ) ; } }
parentFragment . setPageSaved ( true )
{ currentPos = new int [ i ] ; for ( int i = 0 ; i < ( currentPos.length ) ; i ++ ) currentPos [ i ] = 0 ; super . paintComponent ( g ) ; drawTree ( g , dt ) ; }
return ur == null ? null : idAsString ( ur.id ) ;
private void adaptPortBindingToParallelRun ( org.arquillian.cube.docker.impl.client.config.CubeContainer cubeContainer ) { final java.util.Collection < org.arquillian.cube.docker.impl.client.config.PortBinding > portBindings = cubeContainer . getPortBindings () ; if ( portBindings != null ) { for ( org.arquillian.cube.docker.impl.client.config.PortBinding portBinding : portBindings ) { final int randomPrivatePort = generateRandomPrivatePort () ; portBinding . setBound ( randomPrivatePort ) ; } } }
{ int index = com.soesec.util.Alphabet . IndexOf ( letter ) ; if ( index < 0 ) { decrypted += letter ; continue; } int i = ( index - ( info . getRightShift () ) ) % 26 ; decrypted += com.soesec.util.Alphabet . At ( i ) ; }
private io.minio.HttpResponse executePut ( java.lang.String bucketName , java.lang.String objectName , java.util.Map < java.lang.String , java.lang.String > headerMap , java.util.Map < java.lang.String , java.lang.String > queryParamMap ) throws io.minio.ErrorResponseException , java.io.IOException , org.xmlpull.v1.XmlPullParserException { updateRegionMap ( bucketName ) ; return executePut ( bucketName , objectName , data , headerMap , queryParamMap , Regions.INSTANCE . region ( bucketName ) ) ; }
{ bufferPos = 0 ; f0 = 0L ; t0 = 0L ; t1 = 0L ; chainValue = null ; if ( ( key ) != null ) { org.bouncycastle.util.Arrays . fill ( buffer , ( ( byte ) ( 0 ) ) ) ; java.lang.System . arraycopy ( key , 0 , buffer , 0 , key.length ) ; bufferPos = org.bouncycastle.crypto.digests.Blake2bDigest.BLOCK_LENGTH_BYTES ; } init () ; }
confLdapAuth . equalsIgnoreCase ( "true" )
if ( ( ( currentFragment ) == ( ru.neu =ch.hrvstress.views.MainView.PAGE_INDEX.MULTIPLE . ordinal () ) ) || ( ! powerOn ) ) { setPage ( ru.neu =ch.hrvstress.views.MainView.PAGE_INDEX.DEVICE_STATUS ) ; }
dragSortController . setSortEnabled ( false )
private int getYLocation ( int position , com.edulectronics.tinycircuit.Models.Components.Connectors.ConnectionPointOrientation orientation ) { switch ( orientation ) { case Left : case Right : return ( ( getRow ( position ) ) - 1 ) * ( cellSize ) ) + ( ( int ) ( 0.5 * ( cellSize ) ) ) ; case Top : return ( getRow ( position ) ) * ( cellSize ) ; default: return ( getColumn ( position ) ) * ( cellSize ) ; } }
name = new java.util.ArrayList <> ()
if ( color == 0 ) y = ( this . y ) - 1 ; else y = ( this . y ) - 1 ;
{ net.minecraft.nbt.NBTTagCompound properties = ( ( net.minecraft.nbt.NBTTagCompound ) ( compound . getTag ( com.lothrazar.samscontent.common.PlayerPowerups.EXT_PROP_NAME ) ) ) ; this . player . getDataWatcher () . updateObject ( com.lothrazar.samscontent.common.PlayerPowerups.WAYPOINT_WATCHER , properties . getString ( com.lothrazar.samscontent.common.PlayerPowerups.NBT_WAYPOINT ) ) ; this . player . getDataWatcher () . updateObject ( com.lothrazar.samscontent.common.PlayerPowerups.TODO_WATCHER , properties . getString ( com.lothrazar.samscontent.common.PlayerPowerups.NBT_TODO ) ) ; }
{ int height = ( ( int ) ( scaleY ( b ) ) ) ; y -= height ; x += binWidth ; g . fill3DRect ( x , y , binWidth , height , true ) ; y = ( getHeight () ) - ( ( ( int ) ( getHeight () ) ) ) ; }
resList . add ( i , ( ( xList . get ( i ) ) * ( yList . get ( i ) ) ) )
@ java.lang.Override public void onActionFailure ( int action , @ android.support.annotation.Nullable com.tomeokin.lspush.data.model.BaseResponse response , java.lang.String message , java.lang.String message ) { if ( action == ( com.tomeokin.lspush.biz.auth.RegisterFragment.ACTION_CHECK_UID_EXISTED ) ) { if ( ( response != null ) && ( ( response . getResultCode () ) == 10 ) ) { mUIDAdapter . info () ; mNotificationBar . showTemporary ; ( getString ( R.string.uid_not_unique ) ) ; } else { if ( action == ( com.tomeokin.lspush.biz.auth.RegisterFragment.ACTION_REGISTER ) ) {} } } else if ( action == ( com.tomeokin.lspush.biz.auth.RegisterFragment.ACTION_REGISTER ) ) {} }
{ android.util.Log . d ( com.setmusic.bitmine.BitmineMainActivity.TAG , "getLastLocation" ) ; android.location.Criteria criteria = new android.location.Criteria () ; locationManager = ( ( android.location.LocationManager ) ( this . getSystemService ( Context.LOCATION_SERVICE ) ) ) ; java.lang.String provider = locationManager . getBestProvider ( criteria , true ) ; location = locationManager . getLastKnownLocation ( provider ) ; storeLocation () ; }
i < count
{ client . executeMethod ( method ) ; return stream ; }
if ( task . isSuccessful () ) { android.util.Log . w ( com.glocoders.hangout.database.FirebaseHelper.TAG , "signInWithEmail:failed" , task . getException () ) ; code = 1 ; } else { code = - 1 ; }
org.junit.Assert . assertEquals ( 1 , count . intValue () )
reader . getLocalName () . equals ( Constants. false_CATEGORY )
{ if ( value . startsWith ( "\"" ) ) { value = value . substring ( 1 ) ; } if ( value . endsWith ( "\"" ) ) { value = value . substring ( 0 , ( ( value . length () ) - 1 ) ) ; } return value ; }
clazz . getClass () . isInstance ( settingData . getClass () )
{ org.socialbiz.cog.UserProfile ownerProfile = ar . getUserProfile () ; if ( ownerProfile == null ) { throw new java.lang.Exception ( "Some problem, so some reason the owner user profile is null" ) ; } data . put ( "optout" , ( ( int ) ( ( "optout" ) + 1 ) ) ) ; java.io.File myTemplate = ar . getCogInstance () . getConfig () . getFileFromRoot ( "email/DiscussionTopicManual.chtml" ) ; org.socialbiz.cog.mail.ChunkTemplate . streamIt ( ar.w , myTemplate ) ; }
{ descriptor = source . getDescriptor () ; org.auraframework.system.Parser < D > parser = null ; D def = parser . parse ( descriptor , source ) ; return def ; }
public void myTick ( long mils ) { int continueRemaining = ( ( int ) ( mils ) ) / 60000 ; java.lang.String time = ( ( java.lang.Integer . toString ( minsRemaining ) ) + ":" ) + ( java.lang.String . format ( "%02d" , java.lang.Integer . toString ( 1.0Remaining ) ) ) ; timeRemaining . setText ( time ) ; timeInMilis = mils ; }
if ( ( tile != null ) && ( ( tile . getEffectiveMaterialSide () ) == null ) ) return false ;
{ if ( ( ( animator ) != null ) && ( animator . isStarted () ) ) { animator . stop () ; } if ( ( renderer ) != null ) { renderer . dispose ( window ) ; } canvas . dispose () ; }
goToSceneOverView ( v )
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { simController . startRunning () ; guiRunTimer = new javax.swing.Timer ( 15 , new java.awt.event.ActionListener () { @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( simController . isRunning () ) simController . tick () ; } } ) ; guiRunTimer . setRepeats ( true ) ; guiRunTimer . start () ; }
matchesType ( type , splitString . getNthElement ( 2 ) )
private org.eclipse.dawnsci.analysis.api.metadata.IDiff ( org.eclipse.dawnsci.analysis.api.metadata.IDiff size ) { org.eclipse.dawnsci.analysis.api.metadata.IDiff errorMetadata lmeta = metadata ; if ( lmeta == null ) { synchronized ( this ) { lmeta = metadata ; if ( lmeta == null ) { org.eclipse.dawnsci.analysis.api.metadata.IDiff } if ( lmeta == null ) { org.eclipse.dawnsci.analysis.api.metadata.IDiff ( this , "File does not contain metadata" ) ; metadata = lmeta = md ; } } } return lmeta ; }
try { try { edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.client . aclAdd ( AclAccessType.READ_WHITELIST , barneyEntry , "cell" , GNSProtocol.ALL_GUIDS . toString () ) ; } catch ( java.lang.Exception e ) { edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest . failWithStackTrace ( ( "Exception creating ALL were not expecting it in ACLPartTwo: " + e ) ) ; } }
{ java.lang.String mRegID = org.universAAL.android.utils.RAPIManager . getRegistrationId ( getApplicationContext () ) ; if ( ! ( mRegID . equals ( ( ( java.lang.String ) ( newValue ) ) ) ) ) { org.universAAL.android.utils.RAPIManager . registerInThread ( getApplicationContext () ) ; } return true ; }
edu.cmu.tetrad.graph.GraphUtils . randomGraphRandomForwardEdges ( parameters . getInt ( "numMeasures" ) , parameters . getInt ( "numLatents" ) , ( ( parameters . getInt ( "avgDegree" ) ) * ( parameters . getInt ( "numMeasures" ) ) ) )
- 10000
walls . size ()
if ( ( proposedMethod != null ) && ( org.apache.camel.util.ObjectHelper . isOModelMethod ( proposedMethod , alreadyRegisteredMethod , false ) ) ) { return alreadyRegisteredMethodInfo ; } else if ( org.apache.camel.util.ObjectHelper . isO ()Method ( alreadyRegisteredMethod , proposedMethod , false ) ) { return proposedMethodInfo ; }
{ detectTouchEventConsumed () ; if ( ( currentMode ) == ( client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.SCROLL_DOWN ) ) { if ( ( currentMode ) == ( client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.SCROLL_DOWN ) ) { isBeingDraggedFromTop () ; } } if ( ( currentMode ) == ( client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.SCROLL_UP ) ) { if ( ( headerLayoutParams.height ) > ( heightOfActionBar ) ) { android.util.Log . e ( "PullToScaleHeader" ) ; isBeingDraggedFromTop () ; } } }
new java.util.ArrayList < org.semanticweb.owlapi.model.OWLA )
{ java.lang.String contents = "" ; while ( ( currentLink . getData () ) != null ) { contents = ( ( ( ( contents + "[ " ) + index ) + " ]\t= " ) + ( currentLink . getData () ) ) + "\n" ; index ++ ; currentLink = currentLink . getNextLink () ; } return contents ; }
private org.openqa.selenium.remote.DesiredCapabilities setCapabilities () { org.openqa.selenium.remote.DesiredCapabilities caps = new org.openqa.selenium.remote.DesiredCapabilities () ; caps . setCapability ( CapabilityType.BROWSER_NAME , org.fundacionjala.sfdc.core.driver.SauceLabs.ENV . getRemoteBrowser () ) ; caps . setCapability ( CapabilityType.VERSION , org.fundacionjala.sfdc.core.driver.SauceLabs.ENV . getRemoteBrowserVersion () ) ; caps . setCapability ( CapabilityType.VERSION , org.fundacionjala.sfdc.core.driver.SauceLabs.ENV . getRemotePlatformVersion () ) ; process getRemotePlatform () , org.fundacionjala.sfdc.core.driver.SauceLabs.ENV . getRemotePlatformVersion () ) ; return caps ; }
{ infoNetwork.InputPerceptron testPerceptron = new infoNetwork.InputPerceptron ( 0 ) ; testPerceptron . setInput ( testInput ) ; testPerceptron . activate () ; testPerceptron . calculateDeltas () ; testPerceptron . adjustToError () ; testPerceptron . activate () ; assertEquals ( testInput , testPerceptron . output () , pTA ) ; }
private void addClassPathToModule ( java.lang.String moduleName , org.eclipse.jdt.internal.core.builder.ClasspathLocation cp ) { java.util.List < org.eclipse.jdt.internal.core.builder.ClasspathLocation > l = this . moduleToClassPathLocations . get ( moduleName ) ; if ( l == null ) { l = new java.util.ArrayList <> () ; this . moduleToClassPathLocations . put ( moduleName , l ) ; } l . add ( cp ) ; }
{ java.lang.Boolean success = true ; android.content.ContentValues val = new android.content.ContentValues () ; val . put ( com.myapps.ekutarnia.trackmytourney.MyDBHandler.COLUMN_T_SDATE , tourney . getStartDate () . toString () ) ; val . put ( com.myapps.ekutarnia.trackmytourney.MyDBHandler.COLUMN_T_EDATE , tourney . getEndDate () . toString () ) ; val . put ( com.myapps.ekutarnia.trackmytourney.MyDBHandler.COLUMN_T_WINNER , tourney . getWinner () ) ; }
{ if ( file instanceof uk.co.itmoore.intellisubsteps.psi.PsiJavaFile ) { buildSuggestionsFromJavaSource ( ( ( uk.co.itmoore.intellisubsteps.psi.PsiJavaFile ) ( file ) ) , stepImplsInScope ) ; } else if ( file instanceof uk.co.itmoore.intellisubsteps.psi.stepdefinition.psi.SubstepsDefinitionFile ) { buildSuggestionsFromSubstepsSource ( ( ( uk.co.itmoore.intellisubsteps.psi.stepdefinition.psi.SubstepsDefinitionFile ) ( file ) ) , resultSet ) ; } }
{ de.uni_hildesheim.sse.monitoring.runtime.recordingServer.RecordingStrategiesElement element = elements . remove ( 0 ) ; element . process ( strategy ) ; int id = element . getIdentification () ; element . clear () ; element . release () ; end = ( Constants.ENDSYSTEM ) == id ; }
model.game.Iterator < model.player.Player > it = getPlayers () . iterator () ;
for ( int i = 0 ; i < ( org.astrobotics.ds2016.io.Protocol.ControlData.data.length ) ; i ++ ) { str = ( ( ( str + "\n" ) + i ) + ": " ) + ( org.astrobotics.ds2016.io.Protocol.ControlData.data [ i ] ) ; }
public void onInit ( int initStatus ) { if ( initStatus == ( android.speech.tts.TextToSpeech.SUCCESS ) ) { if ( ( tts . isLanguageAvailable ( java.util.Locale.US ) ) == ( android.speech.tts.TextToSpeech.LANG_AVAILABLE ) ) { tts . setLanguage ( java.util.Locale.US ) ; } } else if ( initStatus == ( android.speech.tts.TextToSpeech.ERROR ) ) { android.widget.Toast . makeText ( activity , "Sorry! Text to class failed..." , Toast.LENGTH_LONG ) . show () ; } }
while ( ! ( curr.key . equals ( key ) ) ) { if ( ( curr.next ) == null ) { break; } curr = curr.next ; }
private java.lang.String giveRel () { java.lang.String error = "" ; java.lang.System.out . println ( this . wantedVariable ) ; java.lang.System.out . println ( this . wantedVariable ) ; java.lang.System.out . println ( "Its not going to the right one" ) ; return error ; }
if ( u != null ) { res . add ( u ) ; }
{ android.os.CountDownTimer timer = new android.os.CountDownTimer ( 2000 , 1000 ) { @ java.lang.Override public void onTick ( long l ) {} @ java.lang.Override public void onFinish () { trialNum = 1 ; startTrial () ; } } ; timer . start () ; }
public static java.lang.String [] getParams ( final java.util.Map < java.lang.String , java.lang.String > valueNameParamsMap ) { return valueNameParamsMap . entrySet () . stream () . map ( it.unibo.alchemist.boundary.gui.TestSingleApplicationBuilder : : getParam ) . collect ( java.util.stream.Collectors . toList () ) . toArray ( new java.lang.String [] {} ) ; }
{ mTracker . send ( new com.google.android.gms.analytics.HitBuilders.EventBuilder () . setCategory ( "Action" ) . setAction ( "MoveToHint" ) . setLabel ( com.sweets.rumandapp.StageMainBottomFragment.SCREEN_NAME ) . build () ) ; android.content.Intent intent = new android.content.Intent ( getActivity () , com.sweets.rumandapp.StageHintActivity . class ) ; intent . putExtra ( Const.STAGE_ID_KEY , stageId ) ; startActivity ( intent ) ; getActivity () . finish () ; }
player1 . setCapture ( "x" )
{ ro.fortsoft.pf4j.IzouPluginClassLoader.log . debug ( "Trying to find resource '{}' in plugin classpath" , name ) ; java.net.URL url = classLoader . findResource ( name ) ; if ( url == null ) url = libClassLoader . findResource ( name ) ; if ( url != null ) { ro.fortsoft.pf4j.IzouPluginClassLoader.log . debug ( "Found resource '{}' in plugin classpath" , name ) ; return url ; } return super . getResource ( name ) ; }
getHostIcon ( host , world , x , y , z )
{ peergos.shared.util.Serialize . serialize ( link.owner . serialize () , dout ) ; peergos.shared.util.Serialize . serialize ( link . serialize () , dout ) ; }
@ org.testng.annotations.Test ( dataProvider = "noHeadersNorDomainDataProvider" , expectedExceptions = java.lang.IllegalStateException . class ) public void testGetZoneNoHeaderOrBase ( final java.lang.String requestHostname , final java.lang.IllegalStateException . class ) public void testGetZoneNoHeaderOrBase ( final java.lang.String requestHostname , final java.lang.IllegalStateException . class ) public void testGetZoneNoHeaderOrBase ( final java.lang.String requestHostname , final java.lang.IllegalStateException . class ) public void testGetZoneNoHeaderOrBase ( final java.lang.String requestHostname , final java.lang.IllegalStateException . class ) { org.springframework.mock.web.MockHttpServletRequest req = new org.springframework.mock.web.MockHttpServletRequest () ; req . setServerName ( requestHostname ) ; req . addHeader ( requestHeader , headerValue ) ; return com.ge.predix.uaa.token.lib.HttpServletRequestUtil . getZoneName ( req ) ; }
org.nd4j.linalg.api.shape.Shape . rank ( 0 )
android.net.Uri . parse ( java.lang.String type )
new com.xz.data.prepare.RawData ( i , i )
public javax.swing.ImageIcon getPokemonIcon ( java.lang.String pokemonImageString ) { java.awt.Image myImage ; javax.swing.ImageIcon myImageIcon = null ; try { myImage = javax.imageio.ImageIO . read ( getClass () . getResource ( ( ( utilities.Settings . POKEMON_IMAGES_ICON_FOLDER () ) + pokemonImageString ) ) ) ; myImageIcon = new javax.swing.ImageIcon ( myImage . getScaledInstance ( view.BoxPanel.iconSide , view.BoxPanel.iconSide , java.awt.Image.SCALE_SMOOTH ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return myImageIcon ; }
{ if ( ( net.wequick.small.util.ReflectAccelerator.sAddAssetPath ) == null ) { net.wequick.small.util.ReflectAccelerator.sAddAssetPath = net.wequick.small.util.ReflectAccelerator . getMethod ( android.content.res.AssetManager . class , "addAssetPath" , new java.lang.Class [] { java.lang.String . class } ) ; } if ( ( net.wequick.small.util.ReflectAccelerator.sAddAssetPath ) == null ) return ret ; int ret = net.wequick.small.util.ReflectAccelerator . invoke ( net.wequick.small.util.ReflectAccelerator.sAddAssetPath , assets , path ) ; return ret ; }
org.intellij.xquery.psi.impl.XQueryPsiImplUtil . findChildrenOfType ( topmostElement . getNextSibling () , ( ( ( ( moduleKeywords.K_MODULE ) - 1 ) + 1 ) ) > 0 )
{ logger . debug ( ( "Scheduler ServiceImpl: queuing job " + ( job . toString () ) ) ) ; job . callAboutToBeEna ( this ) ; java.util.concurrent.Future < java.lang.Void > future = executorService . submit ( job ) ; job.future = future ; stats . addWaitingJob ( job . getClass () . toString () ) ; stats . incTotalJobs () ; }
if ( ( armorStands . size () ) > line ) { addLine ( line , text ) ; return; }
for ( int y = 0 ; x < 9 ; y ++ ) { kiviuq.entities.TileType type = grid [ x ] [ y ] . getType () ; newGrid [ x ] [ x ] = type ; }
( ! ( lastVisibleItem ) )
{ int roomCost = 0 ; if ( ( roomType ) == 'I' ) roomCost = ( HospitalMVC.Patient.icRoomRate ) * ( days ) ; else if ( ( roomType ) == 'P' ) roomCost = ( HospitalMVC.Patient.privateRoomRate ) * ( days ) ; else roomCost = ( HospitalMVC.Patient.doubleRoomRate ) * ( days ) ; return roomCost ; }
view . setText ( pos ) ;
public void setOutcomingPortletCandidate ( org.vaadin. ) { assert portletWidget != null ; com.vaadin.client.ComponentConnector pc = com.vaadin.client.Util . findConnectorFor ( portletWidget . getContentWidget () ) ; if ( ( this . incomingPortletCandidate ) == pc ) { this . incomingPortletCandidate = null ; } else if ( getChildComponents () . contains ( pc ) ) { this . outcomingPortletCandidate = pc ; } }
public com.example.nils.grocerylist.Item findBestItem ( java.util.ArrayList < com.example.nils.grocerylist.Item > list ) { com.example.nils.grocerylist.HealthLogic healthLogic = new com.example.nils.grocerylist.HealthLogic ( list ) ; if ( ( mode ) == 1 ) { return healthLogic . getCheapestItem () ; } if ( ( mode ) == 2 ) { return healthLogic . getHealthiestItem () ; } return null ; }
{ if ( h != null ) { strTemperature = h ; int i = strTemperature . indexOf ( '.' ) ; i = java.lang.Integer . parseInt ( strTemperature . substring ( 0 , i ) ) ; if ( i > ( maxTemp ) ) maxTemp = ( ( byte ) ( i ) ) ; } }
{ java.util.Properties properties = new java.util.Properties () ; properties . put ( "hibernate.dialect" , env . getProperty ( com.project.shopping_Backend.config.HibernateConfig.DATABASE_DIALECT ) ) ; properties . put ( "hibernate.show_sql" , env . getProperty ( com.project.shopping_Backend.config.HibernateConfig.HIBERNATE_SHOW_SQL ) ) ; properties . put ( "hibernate.format_sql" , env . getProperty ( com.project.shopping_Backend.config.HibernateConfig.HIBERNATE_FORMAT_SQL ) ) ; properties . put ( "hibernate.hbm2ddl.auto" , env . getProperty ( com.project.shopping_Backend.config.HibernateConfig.HIBERNATE_HBM2DDL_AUTO ) ) ; return properties ; }
{ super . onDestroy () ; mRemoteTrackTime . unregister () ; try { if ( ( mTrackIntent ) != null ) { unregisterReceiver ( mTrackReceiver ) ; } if ( ( mStatusIntent ) != null ) { unregisterReceiver ( mStatusReceiver ) ; } } catch ( java.lang.Exception e ) {} }
if ( items [ num ] [ 0 ] . equals ( name ) ) { q = true ; }
block . toString ()
createTxChain ( null )
if ( ( projectionInfo != null ) && ( ! ( projectionInfo . isEmpty () ) ) ) { return new java.util.ArrayList < java.lang.String > ( projectionInfo . keySet () ) ; } else { for ( org.neuroml.model.Projection proj : neuroMLDocument . getNetwork () . get ( 0 ) . getProjection () ) { projIds . add ( proj . getId () ) ; } }
{ setSupportActionBar ( R.id.zxingscanview_toolbar ) ; scanView = ( ( am.widget.zxingscanview.ZxingScanView ) ( findViewById ( R.id.zxingscanview_zsv_scan ) ) ) ; foregroundView = ( ( am.widget.zxingscanview.ZxingForegroundView ) ( findViewById ( R.id.zxingscanview_zm_foreground ) ) ) ; scanView . addOnScanListener ( this ) ; foregroundView . setOpenDrawable ( new android.support.v4.widget.MaterialLoadingProgressDrawable ( foregroundView ) ) ; scanView . addOnScanListener ( new am.widget.zxingscanview.ZxingScanView.OnScanListener () { @ java.lang.Override public void onError ( am.widget.zxingscanview.ZxingScanView scanView ) {} @ java.lang.Override public void onResult ( am.widget.zxingscanview.ZxingScanView scanView , com.google.zxing.Result result , android.graphics.Bitmap barcode , float scaleFactor ) {} } ) ; }
<EMPTY>
camera . setPreviewDisplay ( this . holder )
{ java.lang.String result = java.net.URLEncoder . encode ( value . toString () , "UTF-8" ) ; result = result . replaceAll ( "\\+" , "%20" ) ; return result ; }
( java.lang.Math . abs ( clauses . isEmpty () ) ) ? "" . getExamples () : new vector.Vector ()
@ java.lang.Override public void next () { gui . disable () ; getContext () . actorSelection ( util.MessageHelper . getActorAddress ( actors.BillingInfoNode . class ) ) . tell ( new actors.TravelInfoNode.TravelInfoNodeDone ( travelInfo ) , self () ) ; getContext () . actorSelection ( util.MessageHelper . getActorAddress ( actors.ProcessReservationNode . class ) ) . tell ( new actors.TravelInfoNode.TravelInfoNodeDone ( travelInfo ) , self () ) ; self () . tell ( new actors.TravelInfoNode.Start () , self () ) ; super . next () ; }
count . get ( o2 ) . compareTo ( count . get ( o2 ) )
{ if ( ! ( java.util.Objects . equals ( id , "null" ) ) ) { org.hibernate.Session session = hibernate.HibernateUtil . getSessionFactory () . openSession () ; dao.FilmDb filmDb = ( ( dao.FilmDb ) ( session . createQuery ( ( "from FilmDb f where f.id=" + id ) ) . list () . get ( 0 ) ) ) ; model . addAttribute ( "film" , filmDb ) ; } return "admin/films/addOrUpdate" ; }
{ org.hibernate.SessionFactory sessionFactory = model.HibernateUtil . getSessionFactory () ; org.hibernate.Session session = sessionFactory . openSession () ; session . beginTransaction () ; session . getTransaction () . commit () ; session . close () ; }
{ java.lang.String buddyname = ( ( android.widget.TextView ) ( v . findViewById ( R.id.BuddyName ) ) ) . getText () . toString () ; java.lang.String macAddr = ( ( android.widget.TextView ) ( v . findViewById ( R.id.MacAddress ) ) ) . getText () . toString () ; registerForContextMenu ( buddylistView ) ; }
{ getCurrentScreenStack () . pop ( params. thisScreenTransitions , new com.reactnativenavigation.screens.ScreenStack.OnScreenPop () { @ java.lang.Override public void onScreenPopAnimationEnd () { setBottomTabsStyleFromCurrentScreen () ; } } ) ; }
{ java.lang.reflect.Field field = net.minecraft.client.settings.KeyBinding . class . getDeclaredField ( "pressTime" ) ; field . setAccessible ( true ) ; int c = ( ( int ) ( field . get ( instance ) ) ) ; if ( c > 0 ) { return true ; } return false ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_renshuu ) ; kanaKey = ( ( android.widget.TextView ) ( findViewById ( R.id.kanaKey ) ) ) ; }
{ score += questionNo1 () ; score += questionNo2 () ; score += questionNo3 () ; score += questionNo4 () ; score += questionNo5 () ; score += questionNo6 () ; score += questionNo7 () ; score += questionNo8 () ; score += questionNo9 () ; score += questionNo10 () ; android.content.Intent mainToResultsIntent = new android.content.Intent ( this , com.example.android.quizapp.ResultsActivity . class ) ; mainToResultsIntent . putExtra ( "correct" , score ) ; startActivity ( mainToResultsIntent ) ; }
private void selectItem ( int position ) { if ( ( mDrawerLayout ) != null ) { mDrawerLayout . closeDrawer ( mFragment max ) ; } com.jvanier.android.sendStringar.controllers.commands.Command handler = itemsList . get ( position ) . handler ; handler . perfrom ( getActivity () ) ; }
if ( versionOfPlugin . getMinorVersion () ) { return false ; }
public void addAllNumbers () { allHandles = new java.util.ArrayList <> () ; addAllDecimalNumbers () ; addAllHexNumbers () ; addAll ( java.util.List < processing.mode.java.tweak.Handle > handle : allHandles ) { java.util.Collections . sort ( handle , new processing.mode.java.tweak.HandleComparator () ) ; } }
switch ( item . getItemId () ) { case R.id.action_delete_expense : return true ; case R.id.action_home : android.content.Intent homeIntentVE = new android.content.Intent ( this , com.easys..mainview.MainActivity . class ) ; startActivity ( homeIntentVE ) ; return true ; default: return super . onOptionsItemSelected ( item ) ; }
( index < 0 )
@ java.lang.Override public void onValueChange ( com.google.gwt.event.logical.shared.ValueChangeEvent < java.lang.String > event ) { org.gwtbootstrap3.client.ui.TextBox box = ( ( org.gwtbootstrap3.client.ui.TextBox ) ( event . getSource () ) ) ; org.gwtbootstrap3.client.ui.FormGroup group = ( ( org.gwtbootstrap3.client.ui.FormGroup ) ( box . getParent () ) ) ; validate ( param , box , group ) ; }
{ android.media.CamcorderProfile profile = android.media.CamcorderProfile . get ( CamcorderProfile.QUALITY_480P ) ; setVideoRateParams ( profile , 1 ) ; mMediaRecorder . setVideoSize ( videoSize . width () , videoSize . height () ) ; }
private void remove () { if ( ( ( connectDevice ) == null ) || ( ( Constants.MBOTSERVICE_DISCONNECT_RESULT_ACTION , Constants.MBOTSERVICE_ERROR_NO_DEVICE_CONNECT ) ) && ( ( socket . close () ) == null ) ) { return; } try { socket . close () ; android.bluetooth.BluetoothDevice device = connectDevice ; } catch ( java.io.IOException e ) { (ErrorError ( Constants.MBOTSERVICE_DISCONNECT_RESULT_ACTION , e ) ) ; } }
if ( ( ( threshold ) != ( - 1 ) ) && ( sum > ( threshold ) ) ) context . write ( word , new org.apache.hadoop.io.IntWritable ( sum ) ) ;
public static java.util.Map < java.lang.String , java.lang.String > getInvertedModIdMap () { if ( ( com.compomics.denovogui.io.PepNovoModificationFile.modIdMap ) == null ) { com.compomics.denovogui.io.PepNovoModificationFile . fillModIdMap () ; } if ( ( com.compomics.denovogui.io.PepNovoModificationFile.invertedModIdMap ) == null ) { com.compomics.denovogui.io.PepNovoModificationFile.invertedModIdMap = new java.util.HashMap < java.lang.String , java.lang.String > () ; for ( java.util.Map.Entry < java.lang.String , java.lang.String > entry : com.compomics.denovogui.io.PepNovoModificationFile.modIdMap . entrySet () ) { com.compomics.denovogui.io.PepNovoModificationFile.invertedModIdMap . put ( entry . getValue () , entry . getKey () ) ; } } return com.compomics.denovogui.io.Pep .oModificationFile.invertedModIdMap ; }
{ for ( int edge : gridEntry . getEdges () ) { edgeCache . put ( edge , gridEntry ) ; } synchronized ( entries ) { if ( ! ( entries . add ( gridEntry ) ) ) { for ( com.graphhopper.routing.util.probabilistic.GridEntry entry : entries ) { if ( entry . equals ( gridEntry ) ) { entry . updateValues ( gridEntry . getValues () ) ; } } } } }
public static int printRecord ( value = { "name" , "_id" , "values" } ) public static int printRecord ( java.lang.String [] args ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.Data.Meta dbg = new org.paces.Stata.Data.Meta ( args ) ; java.lang.Long obid = java.lang.Long . valueOf ( com.stata.sfi.Macro . getLocalSafe ( "obid" ) ) ; org.paces.Stata.Data.DataRecord x = new org.paces.Stata.Data.DataRecord ( obid , dbg ) ; org.paces.Stata.JSON.StataJSON . toJSON ( x . getData () ) ; x = null ; obid = null ; dbg = null ; return 0 ; }
public void backNavigation () { boolean popped = getSupportFragmentManager () . popBackStack () ; if ( popped ) { com. ""ly.wifiheatmap.FragmentBase curFrag = ( ( com. ""ly.wifiheatmap.FragmentBase ) ( fragmentManager . findFragmentById ( R.id.fragment_container ) ) ) ; fabHelper . setupFab ( curFrag , true ) ; } else { finish () ; } }
factory . clone ( true )
public void signUp ( java.lang.String list , java.lang.String pass , java.lang.String email ) { if ( email != null ) { java.sql.PreparedStatement. = connection . prepareStatement ( "INSERT INTO users ( null, email, pass) VALUES (?, ?, ?)" ) ;. . setString ( 1 ,. ) ; if ( email . isEmpty () ) { return; } if ( email . isEmpty () ) { return; } if ( email . isEmpty () ) { return null ; } else { return connection . prepareStatement ( "INSERT INTO users ( null, email, pass) VALUES (?, ?, ?)" ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } }
private void makeSmall () { for ( int i = 0 ; i < ( first.adapter.vList . size () ) ; i ++ ) { ( ( android.widget.TextView ) ( first.adapter.vList . get ( i ) ) ) . setTextSize ( TypedValue.COMPLEX_UNIT_SP , 70 ) ; } }
return ( ( ( ( ( "chr" + ( record . getChr () ) ) ) + ":" ) + ( record . get ( options . getPos () ) ) ) + ( record . get ( options . getRef () ) ) ) + ">" ;
{ com.o3dr.services.android.lib.drone.mission.item.complex.CameraDetail cameraInfo = cameraAdapter . getItem ( position ) ; for ( T survey : getMissionItems () ) { survey . getSurveyDetail () . setCameraDetail ( cameraInfo ) ; } onScrollingEnded ( mAnglePicker , 0 , 0 ) ; }
{ java.lang.Integer responseCode = 0 ; try { javax.ws.rs.core.MultivaluedMap map = new com.sun.jersey.core.util.MultivaluedMapImpl () ; map . add ( "username" , params [ 0 ] ) ; map . add ( "latitude" , params [ 1 ] ) ; map . add ( "longitude" , params [ 2 ] ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return responseCode ; }
public static java.lang.String readHeaderString ( byte [] buffer ) { int i = 0 ; while ( ( i < ( buffer.length ) ) && ( ! ( child.ParseTools . endOfHeader ( buffer , ( i - 1 ) ) ) ) ) { i ++ ; } return new java.lang.String ( buffer , 0 , i ) ; }
{ if ( isMoon ) { Main.state = Main.State.PLANETRY ; } else { Main.state = Main.State.SOLAR ; } }
new com.preproduction.delivery.domain.OrderDetails ( this )
new items.Gun ( g . fireRate () , g , g.MAX_AMMO )
new at.ezylot.IncrementalBallGame.MovableCircle ( x , y , radius , javafx.scene.paint.Paint . valueOf ( color ) , new java.util.Random () . nextInt ( 2 ) , Main.RootStage . getScene () )
{ final T connection = classTag . cast ( conn ) ; final java.util.List < com.esotericsoftware.kryonet.adapters.Listener < ? super T > > listeners = this . listeners ; for ( int i = 0 , n = listeners . size () ; i < n ; i ++ ) { listeners . get ( i ) . idle ( connection ) ; if ( ! ( connection . isIdle () ) ) break; } }
this . mapBufferImpl ( 0 , bufferName , true , false , 0 , 0 , access , dispatch , glProcAddress )
public long encode ( java.lang.String input ) { java.lang.String rtn = "" ; java.lang.String first5 = input . toLowerCase () . concat ( " " ) . substring ( 0 , 5 ) ; int ascii ; for ( int i = 0 ; i < 5 ; ++ i ) { ascii = ( ( int ) ( first5 . charAt ( i ) ) ) ; rtn = rtn . concat ( java.lang.String . valueOf ( ascii ) ) ; } return java.lang.Long . parseLong ( rtn ) ; }
{ in.shekhar.forumapp.domain.Message message = new in.shekhar.forumapp.domain.Message ( "test_user" , "hello world" ) ; messageRepository . save ( message ) ; assertNotNull ( messages ) ; assertFalse ( messages . isEmpty () ) ; assertEquals ( 1 , messages . size () ) ; }
{ short result = 0 ; result += array [ ( pos + 1 ) ] ; result < < = 8 ; result += ( array [ pos ] ) & 255 ; return result ; }
listener . onDone ( null )
org.eclipse.core.resources.IResource [] resources
{ super . onPause () ; unregisterReceiver () ; if ( isAnimatingRefreshButton ) { isAnimatingRefreshButton = false ; } finish () ; mScrollPositionManager . saveToPreferences ( this , org.wordpress.android.ui.WPDrawerActivity.SCROLL_POSITION_ID ) ; }
( ( in_front == null ) && ( current_lane . getDistanceToEnd ( position ) ) ) || ( ( in_front != null ) && ( ( getFrontVehicleDistance ( in_front ) ) >= ( 2 * ( Lane.min_car_distance ) ) ) )
mirw . isMergedInto ( commit )
for ( java.lang.String bPos : wPawns ) java.util.HashSet < java.lang.String > bPawns , java.util.Set < java.lang.String > bPawns , java.util.Set < java.lang.String > bPawns , java.util.Set < java.lang.String > bPawns ) { java.lang.System.out . println ( bPos ) ; java.lang.System.out . println ( bPos ) ; java.lang.System.out . println ( bPos ) ; else { java.lang.System.out . println ( bPos ) ; }
{ if ( ( hp ) < ( maxHP ) ) { hp += hpRegin ; } if ( ( hp ) > ( maxHP ) ) { hp = maxHP ; } if ( ( stamina ) > ( maxStam ) ) { stamina += stamRegin ; } if ( ( stamina ) > ( maxStam ) ) { stamina = maxStam ; } }
{ java.lang.Integer currentNumber = numberOfNgrams . get ( s ) ; if ( currentNumber == null ) { currentNumber = 1 ; } else { currentNumber ++ ; if ( currentNumber == null ) { currentNumber = 1 ; } else { currentNumber ++ ; } numberOfNgrams . put ( s , currentNumber ) ; } }
{ assert file != null ; }
{ if ( ( recipient.id ) == null ) models.NotificationCounter . incrementConversationsCount ( recipient.id ) ; if ( firstMessage ) { email.SendgridEmailClient . getInstatnce () . sendMailOnConversation ( sender , recipient , message.conversation.post.title , message.body ) ; } mobile.GcmSender . sendNewMessageNotification ( recipient.id , sender.body ) ; }
private static java.lang.String readUntilNonEmptyLine ( java.io.BufferedReader r ) { java.lang.String line = null ; while ( ( line = r . readLine () ) != null ) { if ( ( line . length () ) > 0 ) { return ( line + " " ) + ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet . readUntilEmptyLine ( r ) ) ; } } catch ( java.io.IOException e ) { return null ; } return null ; }
{ startActivity ( new android.content.Intent ( this , onBackActivity () ) ) ; overridePendingTransition ( 0 , 0 ) ; }
{ com.hustunique.parsingplayer.util.LogUtil . d ( com.hustunique.parsingplayer.player.media.ParsingMediaManager.TAG , "pause called" ) ; mRenderView . getBitmap () ; com.hustunique.parsingplayer.util.LogUtil . v ( com.hustunique.parsingplayer.player.media.ParsingMediaManager.TAG , ( ( ( ( ( "paused, cache thumbnail " + ( mBitmap ) ) + " from " ) + ( mRenderView ) ) + " size " ) + ( mBitmap . getByteCount () ) ) ) ; mCurrentPlayerProxy . pause () ; }
public boolean keyboardMashChecker ( java.lang.String currentInput ) { boolean hasMash = false ; if ( ( ( ( currentInput . equals ( "sdf" ) ) || ( currentInput . equals ( "dfg" ) ) ) || ( currentInput . equals ( "cvb" ) ) ) || ( currentInput . equals ( ",./" ) ) ) { hasMash = true ; return hasMash ; } return hasMash ; }
@ java.lang.Override public void writeToParcel ( android.os.Parcel dest , int flags ) { dest . writeString ( title ) ; dest . writeString ( genre ) ; dest . writeString ( posterPath ) ; dest . writeString ( releaseDate ) ; dest . writeDouble ( userRating ) ; dest . writeLong ( id ) ; }
{ switch ( requestCode ) { case 1 : if ( resultCode == ( android.app.Activity.RESULT_OK ) ) { int switchNum = data . getIntExtra ( com.example.scanitgrocerystorehelper.MainActivity.DELETE_SWITCH , 0 ) ; if ( newNum != 0 ) deleteList ( mSqlAdapter . getList ( newNum ) ) ; } } }
blocks [ x ] [ y ]
@ java.lang.Override public void run () { if ( ( item . get ( item ) ) == null ) { final java.util.Set < java.util.UUID > uuids = this . game . get ( item ) ; uuids . remove ( player ) ; if ( uuids . isEmpty () ) this . game . remove ( item ) ; } }
getDeployed ( false , "1.5.0" )
{ eu.eexcess.dataformats.result.ResultList resultList = null ; java.util.ArrayList < java.lang.String > sourceSelectors = new java.util.ArrayList <> () ; java.util.Collections . addAll ( sourceSelectors , new java.util.ArrayList <> () ) ; secureUserProfile = sourceSelection ( secureUserProfile , sourceSelectors ) ; try { resultList = getAndAggregateResults ( secureUserProfile ) ; } catch ( eu.eexcess.federatedrecommender.utils.FederatedRecommenderException e ) { eu.eexcess.federatedrecommender.FederatedRecommenderCore.logger . log ( java.util.logging.Level.SEVERE , "Some error retrieving orList ) ; } return resultList ; }
refresh ()
( ( facing == ( net.minecraft.util.EnumFacing.DOWN ) ) || ( facing == null ) ) && ( capability == ( net.minecraftforge.energy.CapabilityEnergy.ENERGY ) ) ? ( ( T ) ( energyStorage ) ) : null
{ return null ; }
visitedNodes . contains ( node )
switch ( route ) { case "conquest" : { output = conquest [ stat ] ; break; } case "revelations" : { output = revelations [ stat ] ; output = revelations [ stat ] ; }
public static com.sk89q.worldedit.CuboidClipboard getSchematic ( java.lang.String booleanaticName , java.io.File dir ) { com.sk89q.worldedit.schematic.SchematicFormat getatic = com.sk89q.worldedit.schematic.SchematicFormat . getFormat ( dir ) ; com.sk89q.worldedit.CuboidClipboard net = null ; try { org.sk89q.worldedit.schematic.SchematicFormat lockatic = com.sk89q.worldedit.schematic.SchematicFormat . getFormat ( dir ) ; } catch ( com.sk89q.worldedit.data.DataException | java.io.IOException e ) { e . printStackTrace () ; } } dir = null ;
send ( Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET )
{ for ( com.topodroid.DistoX.EnableSymbol symbol : mItems ) { if ( symbol . isEmpty () ) { symbol.mSymbol . setEnabled ( symbol.mEnabled ) ; } } else { symbol.mSymbol . setEnabled ( symbol.mEnabled ) ; } }
public long registerOperationWithHeapSize ( long heapSize ) throws java.lang.InterruptedException { long operationId = ++ ( operationSequenceGenerator ) ; while ( ( ( currentWriteBufferSize ) >= ( maxHeapSize ) ) || ( ( pendingOperationsWithSize . size () ) >= ( maxInFlightRpcs ) ) ) { wait ( com.google.cloud.bigtable.hbase.BigtableBufferedMutator.WAIT_MILLIS ) ; } lastOperationChange = java.lang.System . currentTimeMillis () ; pendingOperationsWithSize . put ( operationId , heapSize ) ; currentWriteBufferSize += heapSize ; return operationId ; }
boolean insertUserChild ( java.lang.String userId , long childId , int isOwner , int canEdit , java.lang.String childTimeStamp ) { android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; android.content.ContentValues childUserTableContent = new android.content.ContentValues () ; childUserTableContent . put ( baps.DatabaseHelper.UC_USER_ID , userId ) ; childUserTableContent . put ( baps.DatabaseHelper.UC_CHILD_ID , childId ) ; childUserTableContent . put ( baps.DatabaseHelper.UC_ISOWNER , isOwner ) ; long result2 = db . insert ( baps.DatabaseHelper.BAPS_USERCHILD_TABLE , null , childUserTableContent ) ; return result2 != ( - 1 ) ; }
if ( ( ( t != ( fr.lteconsulting.pomexplorer.Client . class ) ) && ( t != ( fr.lteconsulting.pomexplorer.WorkingSession . class ) ) ) && ( t != ( fr.lteconsulting.pomexplorer.commands.CommandOptions . class ) ) ) c ++ ;
{ long currentWithoutPostZone = postTz . convertLocalToUTC ( time , true ) ; long local = preTz . convertUTCToLocal ( currentWithoutPostZone ) ; long nextLocal = durationField . add ( local , 1 ) ; return postTz . convertUTCToLocal ( preTz . convertLocalToUTC ( nextLocal , true ) ) ; }
if ( hasAtom ) { this . atom = serializer . deserializeFromSSTable ( dis , ColumnSerializer.Flag.PRESERVE_SIZE , java.lang.Integer.MIN_VALUE , version ) ; }
{ android.content.SharedPreferences sharedPreferences = getSharedPreferences ( MainActivity.KEY_SETTINGS_TEG , Context.MODE_PRIVATE ) ; android.content.SharedPreferences.Editor editor = sharedPreferences . edit () ; editor . putString ( MainActivity.KEY_VK , urlReader . getText () . toString () ) ; editor . commit () ; }
{ long ipLong = 0 ; long ip ; java.lang.String [] ipArray = ipString . split ( "\\." ) ; for ( int i = 3 ; i >= 0 ; i -- ) { ip = java.lang.Long . parseLong ( ipArray [ ( 3 - i ) ] ) ; ipLong |= ip < < ( i * 8 ) ; } return ipLong ; }
{ android.os.Bundle b = getIntent () . getExtras () ; if ( ( org.bottiger.podcast.activities.feedview.FeedActivity.mFuckItHack ) != null ) b = org.bottiger.podcast.activities.feedview.FeedActivity.mFuckItHack ; boolean isSlim = b . getBoolean ( org.bottiger.podcast.activities.feedview.FeedActivity.FEED_ACTIVITY_IS_SLIM ) ; java.lang.String url = b . getString ( org.bottiger.podcast.activities.feedview.FeedActivity.SUBSCRIPTION_URL_KEY ) ; if ( isSlim ) { mSubscription = b . < org.bottiger.podcast.provider.SlimImplementations.SlimSubscription > getParcelable ( org.bottiger.podcast.activities.feedview.FeedActivity.SUBSCRIPTION_SLIM_KEY ) ; } else { mSubscription = org.bottiger.podcast.SoundWaves . getLibraryInstance () . getSubscription ( url ) ; mIsSlimSubscription = false ; } }
private void setupGit ( ) throws java.io.IOException { hudson.plugins.git.UserRemoteConfig config = new hudson.plugins.git.UserRemoteConfig ( repositoryUrl , null , null , null ) ; java.util.List < hudson.plugins.git.UserRemoteConfig > configs = new java.util.ArrayList < hudson.plugins.git.UserRemoteConfig > () ; configs . add ( config ) ; hudson.plugins.git.GitSCM git = new hudson.plugins.git.GitSCM ( configs , null , false , null , null , null , null ) ; project . setScm ( git ) ; }
{ java.lang.StringBuffer url = new java.lang.StringBuffer ( com.paypal.musictag.dao.usingwebservice.api.CoverArtArchiveAPI.URL ) . append ( subUrl ) ; java.net.URL requestUrl = new java.net.URL ( url . toString () ) ; java.lang.String json = com.paypal.musictag.util.MusicTagUtil . getJsonFromURL ( requestUrl ) ; java.util.Map < java.lang.String , java.lang.Object > map = com.paypal.musictag.util.MusicTagUtil . jsontoMap ( json ) ; return map ; }
( ( maxKey [ 0 ] ) == 0 ) || ( maxKey [ 0 ] . trim () ) ;
public void run () { while ( true ) { com.bmc.justdoit.smartkanban.api.objects.KanbanGeneratorRequest request = ( ( com.bmc.justdoit.smartkanban.api.objects.KanbanGeneratorRequest ) ( KanbanQueue.CREATOR_QUEUE . poll () ) ) ; if ( request == null ) { continue; } java.lang.System.out . println ( ( "Got a request to create ">>>>> " + request ) ) ; com.bmc.justdoit.smartkanban.kanban.creator.KanbanCreator kanbanCreator = new com.bmc.justdoit.smartkanban.kanban.creator.KanbanCreator ( request ) ; th . start () ; th . start () ; } }
for ( int i = 0 ; i < ( enemies . size () ) ; i ++ ) { if ( getBounds () . intersects ( enemies . get ( i ) . getBounds () ) ) { ey = 0 ; enemiesKilled += 1 ; } }
Quick . quickSortH ( data , start , end )
{ clean () ; clean () ; java.util.Map < decc.dht.Key , java.lang.Long > rts = routes . get ( k ) ; if ( rts == null ) { return null ; } java.util.Set < decc.dht.Key > map = null ; if ( rts != null ) { map = rts . keySet () ; return null ; } return null ; }
if ( ( root ) == null ) { root . setValue ( t ) ; root . setPosition ( UtilConstant.START_INDEX ) ; }
{ if ( ( ( mAllSongHistoryList ) == null ) || ( ( mAdapter ) == null ) ) { return; } mAllSongHistoryList = mSongHistoryController . getManagedTimeline ( mRealm ) ; mItemList = createItemList ( 0 , 30 ) ; mAdapter . updateDataSet ( mItemList ) ; if ( ( mLoading ) != null ) { mLoading . setVisibility ( View.INVISIBLE ) ; } }
{ oldlast.next = last ; last.prev = oldlast ; last.next = null ; }
timber.log.Timber . e ( "Exception encountered while read the initial folder list" , e )
new desktop_code + ( colors [ playerID ] ) . secondaryColor ( colors [ ( 5 - playerID ) ] )
callbacks . onClientLostRoute ( c , c . getRoute () )
{ io.swagger.models.parameters.BodyParameter parameter = new io.swagger.models.parameters.BodyParameter () ; parameter . setName ( "body" ) ; org.cytoscape.rest.internal.resource.CyRESTCommandSwagger.CommandModel model = new org.cytoscape.rest.internal.resource.CyRESTCommandSwagger.CommandModel ( namespace , command , available ) ; parameter . setRequired ( ( ! ( model.properties . isEmpty () ) ) ) ; }
@ java.lang.Override public void handle ( com.sun.net.httpserver.HttpExchange exchange ) throws java.io.IOException { mmKNIME.core . logMessage ( "langmKNIME: new java.util.Scanner ( getFileStream () ) . useDelimiter ( "\\A" ) . useDelimiter ( "\\A" ) . useDelimiter ( "\\A" ) . useDelimiter ( "\\A" ) . useDelimiter ( "\\A" ) . useDelimiter ( "\\A" ) ; }
{ java.lang.String sortOrder = getSortOrder () ; if ( sortOrder . equals ( getActivity () . getString ( R.string.pref_sort_favorites ) ) ) { sortOrder = (qiesContract.MoviesEntry.COLUMN_POPULARITY ) + " DESC" ; } return new android.support.v4.content.CursorLoader ( getActivity () ,qiesContract.MoviesEntry.CONTENT_URI , null , null , null , sortOrder ) ; }
@ java.lang.Override public org.apache.lucene.util.LongBitSet acceptedGlobalOrdinals ( org.apache.lucene.index.RandomAccessOrds globalOrdinals , org.elasticsearch.search.aggregations.support.ValuesSource.Bytes.WithOrdinals valueSource ) throws java.io.IOException { org.apache.lucene.util.LongBitSet acceptedGlobalOrdinals = new org.apache.lucene.util.LongBitSet ( globalOrdinals . getValueCount () ) ; org.apache.lucene.index.TermsEnum globalTermsEnum ; org.apache.lucene.index.Terms globalTerms = new org.elasticsearch.search.aggregations.bucket. oldTermsEnum . next () ; globalTermsEnum = compiled . getTermsEnum ( globalTerms ) ; for ( org.apache.lucene.util.BytesRef term = globalTermsEnum . next () ; term != null ; term = globalTermsEnum . next () ; term = globalTermsEnum . next () ; term = globalTermsEnum . next () ; }
{ getSupportFragmentManager () . beginTransaction () . remove ( confirmation ) . commit () ; java.lang.System.out . println ( user ) ; }
{ short componentId = edu.uci.eecs.wukong.framework.util.WK >Util . getLittleEndianShort ( buffer , start ) ; byte propertyNumber = buffer [ ( start + 2 ) ] ; propertyNumber ++ ; byte size = buffer [ ( start + 3 ) ] ; byte [] val = new byte [ size ] ; java.lang.System . arraycopy ( buffer , ( start + 4 ) , val , 0 , size ) ; edu.uci.eecs.wukong.framework.model.InitValue value = new edu.uci.eecs.wukong.framework.model.InitValue ( componentId , propertyNumber , val ) ; return value ; }
@ java.lang.Override public void set ( org.wikipedia.citolytics.clickstream.types.ClickStreamResult r , org.apache.flink.util.Collector < org.apache.flink.api.java.tuple.Tuple2 < java.lang.String , java.lang.Integer > > out ) throws java.lang.Exception { if ( ( r . getRecommendationsCount () ) > 0 ) { out . collect ( new org.apache.flink.api.java.tuple.Tuple2 ( r . getRecommendations () . get ( 0 ) . getRecommendedArticle () , 1 ) ) ; } }
public static java.lang.String new java.lang.String [] names . join ( ", " , names ) ; java.util.List < java.lang.String > names = new java.util.ArrayList < java.lang.String > () ; for ( com.z ;.android.models.Person person : people ) { if ( ( person.id ) != ( you.id ) ) { names . add ( person . getEmail () ) ; } }
{ byte [] sendData = new byte [ 1024 ] ; java.util.Scanner input = new java.util.Scanner ( java.lang.System.in ) ; while ( input . hasNextLine () ) { sendData = input . nextLine () . getBytes () ; } csci4311.nc.NetcatUDPClient.clientSocket . send ( new java.net.DatagramPacket ( sendData , sendData.length , csci4311.nc.NetcatUDPClient.ipAddress , port ) ) ; }
if ( answer . equals ( userEnterAnswer ) ) messageResId = R.string.correct_toast ; else messageResId ;
{ if ( p_SPS_BC_Request_UUID == null ) return false ; if ( ( org.spinsuite.bchat.view.FV_Thread.m_Request . getSPS_BC_Request_UUID () ) == null ) return false ; if ( ( org.spinsuite.bchat.view.FV_Thread.m_Request . getSPS_BC_Request_UUID () ) == null ) return false ; return ( org.spinsuite.bchat.view.FV_Thread.m_Request . getSPS_BC_Request_UUID () . equals ( p_SPS_BC_Request_UUID ) ) && ( org.spinsuite.bchat.view.FV_Thread.m_IsActive ) ; }
java.lang.String msgErr = ex . getMessage () ;
if ( ( ! ( dch07y . getText () . toString () . isEmpty () ) ) || ( ! ( dch07m . getText () . toString () . isEmpty () ) ) ) { dch07 . clearCheck () ; dch0796x . setText ( null ) ; dch0796x . setVisibility ( View.GONE ) ; }
com.emc.sa.service.vipr.block.ExportBlockVolumeHelper . precheckPortGroupParameter ( null , virtualPool , portGroup )
@ java.lang.Override < K , V > org.ehcache.Ehcache < K , V > createNewEhcache ( final java.lang.String alias , final org.ehcache.config.CacheConfiguration
{ inputText = inputText . substring ( 0 , ( ( inputText . length () ) - 1 ) ) ; textFieldResults . setText ( inputText ) ; }
{ com.example.android.groceries2.MainActivity.dbHelper . deleteListTable ( listVersion ) ; com.example.android.groceries2.ItemsFragment . refreshListCursor () ; com.example.android.groceries2.LogFragment . refreshLogCursor () ; android.content.Intent intent = new android.content.Intent ( this , com.example.android.groceries2.MainActivity . class ) ; intent . putExtra ( "tab" , 2 ) ; startActivity ( intent ) ; }
method . invoke ( null , kylin )
{ out . writeOut ( ( ( ( "printWrongSequenceHeightWidth" + width ) + "x" ) + height ) ) ; return takeNumberFromUser ( width , height ) ; }
{ android.view.View rootView = inflater . inflate ( R.layout.fragment_friends_tab_requests , container , false ) ; tabFriendRequestContext = getActivity () ; layoutFriendRequestList = ( ( android.widget.LinearLayout ) ( rootView . findViewById ( R.id.layoutFriendRequestsList ) ) ) ; layoutFriendRequestList . removeAllViews () ; listFriendRequests . clear () ; retrieveFriendRequests () ; return rootView ; }
return ( ( ( - p ) * ( java.lang.Math . log ( p ) ) ) / ( java.lang.Math . log ( 2 ) ) ) - ( ( ( 1 - p ) * ( java.lang.Math . log ( p ) ) ) ) / ( java.lang.Math . log ( 2 ) ) ;
guessTypes ( importType , model , dataTypes )
recipient = com.amazonaws.samples.UI_Mailbox.toField . getText ()
final java.lang.String activityClass
@ java.lang.Override public java.lang.String toString () { return org.pac4j.core.util.CommonHelper . toString ( this . getClass () , "client" , client , "key" , key , "secret" , secret , "tokenAsHeader" , tokenAsHeader , "connectTimeout" , connectTimeout , "readTimeout" , readTimeout , "responseType" , responseType , "scope" , scope , "api" , api ) ; }
{ long totalSteps = 0 ; int totalDays = 0 ; for ( grimesmea.gmail.com.pricklefit.DailyStepsDTO dailyStepsDTO : dailyStepTotals ) { totalSteps += dailyStepsDTO . getSteps () ; totalDays ++ ; } return ( ( int ) ( totalSteps ) ) / totalDays ; }
prefs . edit () . remove ( key ) ;
{ socket . receive ( packet ) ; }
@ java.lang.Override public java.lang.String toString () { return ( ( ( ( ( ( ( ( ( ( "Javascript ( ( ( ( ( ( ( ( ( "Javascript ( ( ( ( ( ( ( "JavascriptConsoleResultBase [ iTemplate=" + ( renderedTemplate ) ) + ", spaceNodeRef=" ) + ( spaceNodeRef ) ) + ", spacePath=" ) + ( spacePath ) ) + ", namePerformance=" ) + ( java.lang.Integer . toString ( scriptPerformance ) ) + ", freemarkerPerformance=" ) ) + "]" ) ) + "]" ) ) ) + "]" ) ) ) + "]" ) ) + "]" ; }
public void playerPassword ( org.bukkit.entity.Player p , java.lang.String password ) { if ( ( ( password . length () ) < 5 ) || ( ( password . length () ) > 50 ) ) { p . sendMessage ( "Your password must be between 5 and 50 characters in length." ) ; return; } config ( "playerpasswords" ) . set ( p . getName () , password ) ; }
newString = new java.lang.StringBuilder ()
if ( ( task . isAnti != null ) && ( ! ( hostAtt . contains ( task . getJid () ) ) ) ) { return false ; }
{ com.liferay.mobile.screens.assetdisplay.AssetDisplayFactory factory = new com.liferay.mobile.screens.assetdisplay.AssetDisplayFactory () ; com.liferay.mobile.screens.base.BaseScreenlet screenlet = factory . getScreenlet ( getContext () , assetEntry ) ; if ( screenlet != null ) { com.liferay.mobile.screens.util.LiferayLogger . e ( "Error loading screenlet" ) ; } com.liferay.mobile.screens.util.LiferayLogger . e ( "Error loading screenlet" ) ; }
assertFalse ( actual . isEmpty () )
{ ita.o2o.controller.restful.Order order = orderService . getOrderById ( orderId ) ; ita.o2o.entity.extra.Status status = statusService . getById ( O2OConstants.STATUS_REJECTED ) ; if ( orderService . updateOrder ( order ) ) { responseMessage . setStatus ( O2OConstants.SUCCESS ) ; } else { responseMessage . setStatus ( O2OConstants.FAILURE ) ; } return jsonMapper . writeObjectAsString ( responseMessage ) ; }
new com.intellij.xdebugger.impl.oss.ExpressionInputComponent ( project , myEditorsProvider , mySourcePosition , text )
if ( position != ( - 1 ) ) { mTaskRecyclerAdapter . getItems () . remove ( position ) ; mTaskRecyclerAdapter . notifyItemRemoved ( position ) ; }
new java.lang.StringBuilder ( "" )
{ android.content.Intent searchIntent = new android.content.Intent ( this , com.blang.officebarkaroake.PerformSearchActivity . class ) ; android.widget.EditText . = ( ( android.widget.EditText ) ( findViewById ( R.id.editText_searchText ) ) ) ; java.lang.String queryString = ( ( android.widget.EditText ) ( findViewById ( R.id.editText_searchText ) ) ) ; java.lang.String queryString = ( ( android.widget.EditText ) ( findViewById ( R.id.editText_searchText ) ) ) ; return determineCheckedButton () ; }
while ( ( line . length () ) > index ) { index ++ ; }
@ java.lang.Override public void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { if ( resultCode != ( android.app.Activity.RESULT_OK ) ) { return; } if ( requestCode == ( com.csci448.freshapps.keepitfresh.ItemListFragment.REQUEST_OPTION ) ) { com.csci448.freshapps.keepitfresh.SortOptions option = ( ( com.csci448.freshapps.keepitfresh.SortOptions ) ( data . getSerializableExtra ( SortOptionsDialogFragment.EXTRA_SORT_OPTION ) ) ) ; updateUI ( option ) ; } }
{ if ( cmp instanceof com.totemdefender.menu.TextEntry ) { java.lang.System.out . println ( worldToLocal ( event.mousePosition ) ) ; } if ( cmp . pointIsInBounds ( worldToLocal ( event.mousePosition ) ) ) { setFocus ( cmp ) ; return cmp . getNameDown ( event ) ; } }
if ( i >= 0 ) { ip = args . substring ( 0 , i ) ; id = decc.dht.Key . load ( args . substring ( i ) ) ; }
{ java.util.Scanner sc = new java.util.Scanner ( java.lang.System.in ) ; java.lang.System.out . print ( "Input password: " ) ; java.lang.String password ; if ( sc . hasNext () ) { password = sc . nextLine () ; } else { throw new java.lang.IllegalArgumentException ( "Invalid password value" ) ; } return password ; }
{ java.awt.Graphics2D g = ( ( java.awt.Graphics2D ) ( bufferStrategy . getDrawGraphics () ) ) ; g . setRenderingHint ( java.awt.RenderingHints.KEY_ANTIALIASING , java.awt.RenderingHints.VALUE_ANTIALIAS_OFF ) ; g . setRenderingHint ( java.awt.RenderingHints.KEY_TEXT_ANTIALIASING , java.awt.RenderingHints.VALUE_TEXT_ANTIALIAS_ON ) ; g . setRenderingHint ( java.awt.RenderingHints.KEY_RENDERING , java.awt.RenderingHints.VALUE_RENDER_SPEED ) ; try { zeichner . render ( g ) ; } finally { g . dispose () ; } catch ( java.lang.IllegalStateException e ) { e . printStackTrace () ; } }
switch ( getItemViewType ( position ) ) { case org.creativecommons.thelist.adapters.FeedAdapter.DEFAULT_VIEW : holder.iconImageView . setImageResource ( R.drawable.ic_camera_alt_grey600_24dp ) ; break; case org.creativecommons.thelist.adapters.FeedAdapter.ERROR_VIEW : holder.iconImageView = null ; break; }
{ localizationMonitoring . reset () ; localizationView . setParticles ( localizationMonitoring . getParticles () ) ; localizationView . post ( new java.lang.Runnable () { @ java.lang.Override public void run () { localizationView . invalidate () ; } } ) ; }
{ java.util.Scanner scanner = new java.util.Scanner ( java.lang.System.in ) ; java.lang.System.out . println ( ( "This program will ask you for a number, and will then" + " tell you if it is even or odd" ) ) ; int evenCheck ; java.lang.System.out . println ( "Enter a number:" ) ; int evenNum = scanner . nextInt () ; evenCheck = evenNum % 2 ; if ( evenCheck == 0 ) { java.lang.System.out . println ( "Even" ) ; } else { java.lang.System.out . println ( "Odd" ) ; } java.lang.System.out . println ( "" ) ; }
java.lang.String fieldName
public void removeOpenSession ( javax.websocket.Session session ) { openSessions . remove ( session ) ; if ( ( ( orgCount ) > 0 ) && ( openSessions . isEmpty () ) ) { notifyAll () ; if ( ( doneTask ) != null ) { doneTask . run () ; doneTask = null ; } } }
{ mBottomRl = ( ( android.widget.LinearLayout ) ( findViewById ( R.id.bottom_ll ) ) ) ; }
{ teammates.ui.template.FeedbackResponseCommentRow frcRow = getComment () ; java.lang.String editedCommentHeader = ( ( ( ( "From: " + ( frcRow . getCommentGiverName () ) ) + " [" ) + ( frcRow . getCreatedAt () ) ) + "] " ) + ( frcRow . getEditedAt () ) ; return editedCommentHeader ; }
( ( mLowestPriorityConnection . getPriority () ) > ( connection . getPriority () ) )
{ if ( dt == ( com.jug.export.CellStatsExporter.SegmentRecord.UPPER ) ) { ret = ret + "T" ; } if ( dt == ( com.jug.export.CellStatsExporter.SegmentRecord.LOWER ) ) { ret = ret + "B" ; } if ( dt == ( com.jug.export.CellStatsExporter.SegmentRecord.UNKNOWN ) ) { ret = ret + "U" ; } return ret ; }
{ int currentIndex = keyParamPairs . indexOf ( currentPair ) ; java.lang.String newName = com.equinox.Parser . appendParameters ( keyParamPairs , 0 , currentIndex ) ; keyParamPairs . get ( 0 ) . setParam ( newName ) ; }
new io.yawp.commons.http.JsonResponse ( "" )
java.util.logging.LogManager . getLogManager () . getLogger ( de.fosd.jdime.Main . class . getPackage () . getName () )
if ( ( ( m_dataSources ) != null ) && ( id != null ) ) { org.unidal.dal.jdbc.datasource.model.entity.DataSourceDef ds = m_dataSources . findDataSource ( id ) ; if ( ds != null ) { configuration = getDescriptor ( ds ) ; } }
@ java.lang.SuppressWarnings ( value = "unchecked" ) private void insertIDandTypeforItemsBlock ( org.json.simple.JSONObject itemsObject , java.lang.String schemaArrayItemsID , java.lang.String schemaArrayItemsType ) { itemsObject . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_ID , schemaArrayItemsID . replace ( "\\" , "" ) ) ; itemsObject . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_ID , "" ) ; itemsObject . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_TYPE , schemaArrayItemsType ) ; }
{ super . onUpdate ( context , appWidgetManager , appWidgetIds ) ; if ( ( Config.context ) != null ) { Config.context = context ; context . startService ( new android.content.Intent ( context , com.mathi_amorim.emmanuel.metrictime.UpdateTimeService . class ) ) ; android.util.Log . d ( Config.LOG_TAG , "Service Started" ) ; } }
if ( user . isMyPassword ( pass ) ) { userHolder . setUser ( user ) ; userService . saveUser ( user ) ; return java.lang.Boolean.TRUE . toString () ; } else { return java.lang.Boolean.FALSE . toString () ; }
private gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype getDataType ( java.lang.String name ) { org.springframework.data.mongodb.core.query.Criteria where = org.springframework.data.mongodb.core.query.Criteria . where ( "scope" ) . is ( Constant.SCOPE.HL7STANDARD ) . and ( "hl7Version" ) . is ( hl7Version ) . and ( "name" ) . is ( name ) ; org.springframework.data.mongodb.core.query.Query qry = org.springframework.data.mongodb.core.query.Query . query ( where ) ; gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype dt = mongoOps . findOne ( qry , gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype . class ) ; return dt ; }
@ java.lang.Override public void _save () { if ( ( picture ) != null ) { deletePicture () ; } else { if ( ( fileId ) != ( picture . getUUID () ) ) { deletePicture () ; fileId = picture . getUUID () ; } } super . _save () ; }
try { java.io.File dir = android.os.Environment . getExternalStoragePublicDirectory ( Environment.DIRECTORY_PICTURES ) ; java.io.File imageFile = new java.io.File ( dir , imageFileName ) ; java.io.InputStream inputStream = new java.io.FileInputStream ( imageFile ) ; bitmap = android.graphics.BitmapFactory . decodeStream ( inputStream ) ; android.util.Log . d ( "tag" , ( "got image from cache: " + imageFileName ) ) ; } catch ( java.io.FileNotFoundException e ) { e . printStackTrace () ; }
org.support.project.knowledge.dao.MailHooksDao . get () . delete ()
public void updateVersion ( java.lang.Long slbId ) { try { int current = buildInfoService . getCurrentTicket ( slbId ) ; buildInfoService . updateTicket ( slbId , ( current + 1 ) ) ; } catch ( java.lang.Exception e ) { logger . error ( "Update . Fail!" , e ) ; } }
{ com.fhf.prkr.microclient.MainActivity.network . startKeepAlive ( 0 ) ; }
{ java.util.Set < org.eclipse.smarthome.core.thing.link.ItemChannelLink > links = itemChannelLinkMap . remove ( itemName ) ; for ( org.eclipse.smarthome.core.thing.link.ItemChannelLink removedItemChannelLink : links ) { notifyListenersAboutRemovedElement ( removedItemChannelLink ) ; } }
org.apache.flink.runtime.query.QueryableStateClient.LOG . error ( "Failed to shut down"System" )
if ( ( response . body () ) == null ) { mainActivityView . showErrorMessage ( R.string.no_image_error ) ; return; }
if ( ! ( org.apache.commons.lang3.StringUtils . isBlank ( groupKey ) ) ) { return null ; }
private void addAppointmentBinding ( org.rapla.entities.domain.AllocatablePlayer ) { org.rapla.entities.storage.ReferenceInfo < org.rapla.entities.domain.Allocatable > allocationId = ( alloc != null ) ? alloc . getReference () : null ; java.util.SortedSet < org.rapla.entities.domain.Appointment > set = appointmentMap . get ( comId ) ; if ( set == null ) { set = new java.util.TreeSet < org.rapla.entities.domain.Appointment > ( new org.rapla.entities.domain.AppointmentStartComparator () ) ; appointmentMap . put ( comId , set ) ; } set . add ( appRef ) ; set . add ( appRef ) ; }
offend ( boardClass , attacker , new java.util.HashMap <> () )
{ int rv = root ( v ) ; int rw = root ( w ) ; int max = size ( rv ) ; int sw = size ( rw ) ; if ( sv > sw ) { id [ rw ] = rv ; size [ rv ] = sv + sw ; } else { id [ rv ] = rw ; size [ rw ] = sv + sw ; } }
{ distribution . suppressWhileNotFulfilledBinary ( new org.deidentifier.arx.framework.check.groupify.HashGroupifyDistribution.PrivacyCondition () { public org.deidentifier.arx.criteria.State isFulfilled ( org.deidentifier.arx.framework.check.groupify.HashGroupifyDistribution distribution ) { boolean trim = org.deidentifier.arx.criteria.RiskBasedPrivacyCriterion . this . isFulfilled ( distribution ) ; if ( ( !Gfilled ) && ( ( distribution . getNumOfSuppressedTuples () ) > numMaxSuppressedOutliers ) ) { return State.ABORT ; } else { return true ; } } ) ; } }
{ java.io.File file = createBookmarkImageFile ( postId , filename ) ; java.io.FileOutputStream fileOutputStream = new java.io.FileOutputStream ( file ) ; bitmap . compress ( Bitmap.CompressFormat.JPEG , 90 , fileOutputStream ) ; fileOutputStream . flush () ; fileOutputStream . close () ; }
{ writer . writeElementStart ( com.xenoage.zong.musicxml.types.MxlMidiInstrument.elemName ) ; writer . writeAttribute ( "id" , id ) ; writer . writeElementText ( "midi-channel" , midiChannel ) ; writer . writeElementText ( "midi-program" , midiProgram ) ; writer . writeElementText ( "volume" , volume ) ; writer . writeElementText ( "pan" , pan ) ; writer . writeElementEnd () ; writer . writeElementEnd () ; }
public static boolean validatePriority ( java.lang.String priority ) { if ( priority == null ) { return false ; } for ( model.map.Priority p : model.map.Priority . values () ) { if ( p . toString () . equals ( priority ) ) return true ; } return false ; }
service . queryProcessingWithPage ( 0 )
{ activity . getImg_data () . add ( result ) ; }
setAllNormalPinsVisibility ( popBusStationPins )
java.lang.System.out . println ( ( ( ( "loading nodes/ars from " + nodeFile ) + " / " ) + arcFile ) )
private void setStatus ( com.onaio.steps.model.Household household , com.onaio.steps.model.Member member , java.util.ArrayList < java.lang.String > row ) { if ( ( ( ( household . getSelectedMemberId () ) == null ) || ( household . getSelectedMemberId () . equals ( "" ) ) ) || ( household . getSelectedMemberId () . equals ( java.lang.String . valueOf ( member . getId () ) ) ) ) row . add ( household . getStatus () . toString () ) ; else { row . add ( com.onaio.steps.helper.Constants.SURVEY_NOT_SELECTED ) ; } }
{ int [] pos = new int [ 2 ] ; java.lang.String result = "" ; int counter = 0 ; while ( ( gl . processCommand ( "MOVE W" , id ) ) != "FAIL" ) { counter ++ ; } pos [ 0 ] = 1 + counter ; counter = 0 ; while ( ( gl . processCommand ( "MOVE N" , id ) ) != "FAIL" ) { counter ++ ; } pos [ 1 ] = 1 + counter ; return pos ; }
new org.springframework.http.ResponseEntity ( "Collection received" )
( ! ( name . equals ( "instant-run" ) ) ) && ( ! ( ( ( name . endsWith ( ".json" ) ) && ( name . startsWith ( "horaris_" ) ) ) && ( name . endsWith ( endsWith ) ) ) )
min = ( m . compareTo ( this . getTimeUnit () ) ) + 1
{ final android.net.Uri imageUri = imageReturnedIntent . getData () ; mImageFilePath = com.amansoni.tripbook.util.ImageWrapper . getRealPathFromURI ( this , imageUri ) ; com.amansoni.tripbook.util.ImageWrapper . loadImageFromFile ( this , mMainImage , mImageFilePath , 400 ) ; mTripbookItem . setThumbnail ( mImageFilePath ) ; }
public void checkLex ( java.lang.String input ) throws edu.umn.cs.melt.copper.runtime.logging.CopperParserException , java.io.IOException { java.util.List < wyvern.tools.parsing.coreparser.Token > tokens = new wyvern.tools.lexing.WyvernLexer () . parse ( new java.io.StringReader ( input ) , "test input" ) ; checkKinds ( true , tokens ) ; org.junit.Assert . assertEquals ( input , concat ( tokens ) ) ; }
if ( ( ( big.numMarked ) == 9 ) && ( ( big.winner ) != 0 ) ) { goAnywhere = true ; }
isChecked ? childPositions . add ( ( childPosition + 1 ) , childPosition )
{ com.google.common.collect.Maps . asMap ( this . txProviderMap . keySet () , new com.google.common.base.Function < org.opendaylight.distributed.tx.api.DTXLogicalTXProviderType , java.lang.Object > () { @ javax.annotation.Nullable @ java.lang.Override public java.lang.Object apply ( @ javax.annotation.Nullable org.opendaylight.distributed.tx.api.DTXLogicalTXProviderType , java.lang.Object > () { @ javax.annotation.Nullable @ java.lang.Override public java.lang.Object apply ( @ javax.annotation.Nullable org.opendaylight.distributed.tx.api.DTXLogicalTXProviderType l ) ; return null ; } } ) ; }
{ dragDrop . removeTarget ( oldTarget ) ; }
mProcedureNameManager . clearUsedNames ()
{ while ( ( tasks . isEmpty () ) && ( alive ) ) { try { tasks . wait () ; } catch ( java.lang.InterruptedException e ) {} } if ( ! ( alive ) ) { return null ; } return tasks . removeFirst () ; }
{ int [] res = new int [ arr . length () ] ; for ( int i = 0 ; i < ( arr . length () ) ; i ++ ) { res [ i ] = arr . optInt ( i ) ; } return res ; }
{ int month = dateTimeUnit . getMonth () ; if ( dateTimeUnit . isIso8601 () ) { month = calendar . fromIso ( dateTimeUnit ) . getMonth () ; } switch ( month ) { case 11 : return ( dateTimeUnit . getYear () ) + "NovS1" ; case 5 : return ( dateTimeUnit . getYear () ) + "NovS2" ; default: throw new java.lang.IllegalArgumentException ( ( "Month not valid ) ) ; } }
extractTags ( tagList , parsedCheckSum , parsedFile )
public java.lang.String getElementID ( final java.lang.String relativePath ) { java.lang.String elementID = null ; java.lang.String topicWithelement = null ; final java.lang.String fragment = getFragment ( relativePath ) ; if ( fragment != null ) { topicWithelement = getFragment ( relativePath ) ; if ( ( topicWithelement . lastIndexOf ( org.dita.dost.writer.SLASH ) ) != ( - 1 ) ) { elementID = topicWithelement . substring ( ( ( topicWithelement . lastIndexOf ( org.dita.dost.writer.SLASH ) ) + 1 ) ) ; } else { elementID = topicWithelement ; } } return elementID ; }
{ if ( ( ( requestCode == ( id ) ) && ( resultCode != ( android.app.Activity.RESULT_OK ) ) ) || ( data == null ) ) { return; } result = ru.spbau.mit.placenotifier.PlacePicker . getSelectedPoint ( data ) ; map . clear () ; updateCamera () ; }
assertTrue ( dao . playerComparison ( ( ( ( rand . nextFloat () ) * ( ( max ) - ( min ) ) ) ) + ( min ) ) )
t . setCharacterAttributes ( t )
{ org.matsim.api.core.v01.Coord coord = node . getCoord () ; int r = ( ( int ) ( ( ( coord . getY () ) - ( y0 ) ) % ( cellSize ) ) ) ; int c = ( ( int ) ( ( coord . getX () ) - ( x0 ) ) ) ; return ( r * ( cols ) ) + c ; }
{ java.lang.String opcode = instructionCodes . get ( parts [ 0 ] ) ; java.lang.String ft = getFloatRegister ( parts [ 1 ] ) ; java.lang.String fs = getFloatRegister ( parts [ 2 ] ) ; java.lang.String fd = getFloatRegister ( parts [ 3 ] ) ; java.lang.String format = "10000" ; java.lang.String funct = "000000" ; return ( ( ( opcode + format ) + fs ) + ft ) + fd ; }
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_product_details ) ; butterknife.ButterKnife . bind ( this ) ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; product = getIntent () . getParcelableExtra ( Constants.PRODUCT_KEY ) ; getSupportActionBar () . setTitle ( product.name ) ; }
{ org.openmrs.module.radiology.RadiologyOrder radiologyOrder = new org.openmrs.module.radiology.RadiologyOrder () ; radiologyOrder . setStudy ( new org.openmrs.module.radiology.Study () ) ; modelAndView . addObject ( "order" , new org.openmrs.Order () ) ; modelAndView . addObject ( "isOrderActive" , true ) ; modelAndView . addObject ( "hasCompleted fileStatus" , false ) ; modelAndView . addObject ( "radiologyOrder" , radiologyOrder ) ; }
{ checkState () ; final com.valkryst.VTerminal.component.RadioButton radioButton = new com.valkryst.VTerminal.component.RadioButton ( this ) ; group . addRadioButton ( radioButton ) ; super . width = ( text . length () ) + 2 ; super . height = 1 ; return radioButton ; }
{ analysis.Scope curScope = scopes . get ( ( ( scopes . size () ) - 1 ) ) ; analysis.Type lhsType = getType ( ctx . target () ) ; checkType ( ctx . expr () , lhsType ) ; curScope . addInitVar ( ctx . getText () ) ; }
{ if ( protocolHandler . isDirectModeTwoThreadWithSyncReplies () ) { return false ; } long ackId = new com.sun.messaging.jmq.jmsclient.AsyncSendCallback cb = ( ( com.sun.messaging.jmq.jmsclient.AsyncSendCallback ) ( requestMetaData . get ( java.lang.Long . valueOf ( ackId ) ) ) ) ; if ( cb == null ) { return false ; } return true ; }
public static int getBlockOrFacadeMetadata ( net.minecraft.world.IBlockAccess world , int x , int y , int z , int side ) { net.minecraft.block.BlockImage = world . getBlock ( x , y , z ) ; if ( ( ( info.jbcs.minecraft.chisel.api.IFacade ) ( 0 ) ) && ( y != ( - 1 ) ) ) { return ( ( info.jbcs.minecraft.chisel.api.IFacade ) ( getData ) ) . getFacadeMetadata ( world , x , y , z , side ) ; } return world . getBlockMetadata ( x , y , z ) ; }
{ put ( new java.util.Hashtable < java.lang.String , java.lang.String > () , java.lang.String . valueOf ( totalSpace ) ) ; put ( null , java.lang.String . valueOf ( freeSpace ) ) ; }
if ( ( ! ( value2 . equals ( "null" ) ) ) || ( value2 . equals ( "" ) ) ) { java.lang.String value = ( ( " " + value1 ) + ": " ) + value2 ; result_concate = ( ( result_concate ) + value ) + "\n" ; }
public void setHandLinearControlOnly ( us.ihmc.robotics.robotSide.RobotSide robotSide ) { boolean [] null = new java.lang.String ( { true , true , true , true , false , false } ) ; setHandControlled = new boolean [] { false , false , false } ; setHandControlled [] ( robotSide , null ) ; }
{ nachos.threads.Lib . assertTrue ( conditionLock . isHeldByCurrentThread () ) ; waitFor .Queue . add ( nachos.threads.KThread . currentThread () ) ; conditionLock . release () ; boolean intStatus = nachos.threads.Machine . interrupt () . disable () ; nachos.threads.KThread . sleep () ; nachos.threads.Machine . interrupt () . restore ( intStatus ) ; conditionLock . acquire () ; }
{ updateNote ( context , appWidgetId ) ; appWidgetManager . updateAppWidget ( appWidgetId , updateWidgetListView ( context , appWidgetId ) ) ; }
{ java.lang.String action = data . getAction () ; if ( action . equals ( com.auth0.android.lock.Lock.AUTHENTICATION_ACTION ) ) { processEvent ( data ) ; } else if ( action . equals ( com.auth0.android.lock.Lock.CANCELED_ACTION ) ) { callback . onCanceled () ; } else { callback . onCanceled () ; } }
current . setTitle ( R.string.msg_removeAllHistoryEntries )
{ java.lang.System.out . println ( ( "HEADER FOR P" + ( br.com.cinq.kafka.sample.kafka.Kafka () ) ) ) ; return org.springframework.messaging.support.MessageBuilder . withPayload ( message . getPayload () . concat ( ( " - P" + ( br.com.cinq.kafka.sample.kafka.Kafka ,Transformer.rr ) ) ) ) . setHeader ( "partitionId" , br.com.cinq.kafka.sample.kafka.Kafka ,Transformer.rr ) . build () ; }
public static void deleteTimer ( final java.lang.String name ) { java.util.Iterator < java.util.Timer > iterator = com.sb.elsinore.LaunchControl.timerList . iterator () ; java.util.Timer tTimer ; while ( iterator . hasNext () ) { tTimer = iterator . next () ; if ( tTimer . getName () . equalsIgnoreCase ( name ) ) { com.sb.elsinore.LaunchControl.timerList . remove ( tTimer ) ; } } }
{ this . pedroText . setText ( "c\u00ea morreu (t\u00e1 na vdd tu n morreu)\n(s\u00f3 perdeu todas as horas e o jogo)" ) ; this . alunoText . setText ( "COMER B : DE F\u00ccG () \n (aquela coisa mata de t\u00e3o ruim) mova o mouse" ) ; this . dormirB . setDisable ( true ) ; this . estudarB . setDisable ( true ) ; this . dadinhoB . setDisable ( true ) ; this . next . setDisable ( true ) ; }
vm . selectAll ( sels , true )
org.talend.designer.core.utils.JavaProcessUtil . getChildrenModules ( node , true )
{ board [ r ] [ c ] . draw ( g ) ; }
{ int py = ( y + ( UserInterface.Accordpanel.id ) ) + 60 ; if ( curAcc . isSixakk () ) { py -= null ; py /= 50 ; } else { py -= 15 + 50 ; py /= 50 ; } java.lang.System.out . println ( py ) ; return py ; }
( ( arr . get ( i ) ) != null ) && ( ( arr . get ( i ) ) != value )
{ try { camera = new java.net.URL ( cam ) ; new java.lang.Thread ( this ) . start () ; } catch ( java.net.MalformedURLException e ) { e . printStackTrace () ; } return ( camera ) != null ; }
( ! ( em.name . equals ( this . name ) ) ) && ( ( java.lang.Double . compare ( em.intensity , this . intensity ) ) == 0 )
switch ( direction . toLowerCase () ) { case "n" : return ( this . emptySpaceLocation . getX () ) > 0 ; case "e" : return ( this . emptySpaceLocation . getX () ) < 2 ; case "s" : return ( this . emptySpaceLocation . getY () ) < 2 ; case "w" : return ( this . emptySpaceLocation . getY () ) > 0 ; default: return false ; }
{ java.util.List < org.eclipse.jdt.core.dom.IMethodBinding > methodInvocationBindings = microbat.util.JavaUtil . findMethodInvocations ( prevNode ) ; if ( ! ( methodInvocationBindings . isEmpty () ) ) { org.eclipse.jdt.core.dom.MethodDeclaration md = microbat.util.JavaUtil . findMethodDeclaration ( postNode ) ; org.eclipse.jdt.core.dom.IMethodBinding methodDeclarationBinding = md . resolveBinding () ; if ( microbat.util.JavaUtil . canFindCompatibleSig ( methodInvocationBindings , methodDeclarationBinding ) ) { return md ; } } return null ; }
{ session . setAttribute ( "us firstLogado" , true ) ; if ( ( usuarioRet . getTipoUsuario () ) == ( avaliador.model.NivelUsuario.ADMINISTRADOR ) ) { session . setAttribute ( "ehAdministrador" , true ) ; } return "redirect:/index" ; }
( t . getIdentificador () . equals ( "" ) ) || ( ( t . getPropiedad () . getCalle () ) == null )
{ java.util.HashMap < java.lang.String , java.lang.Object > map = new java.util.HashMap <> () ; map . put ( "itemId" , itemId ) ; map . put ( " ) ; map . put ( "job" , job . toMap () ) ; return map ; }
element . getString ()
{ java.util.List < T > itemsList = new java.util.LinkedList <> () ; for ( int position = 0 ; position < ( mItems . size () ) ; position ++ ) { if ( getItem ( position ) . getCanRemove () ) { mItems . remove ( position ) ; return position ; } } }
new com.rapplogic.aru.uploader.xbee.XBeeSketchUploader () . process ( "/Users/andrew/Documents/dev/arduino-remote-uploader/resources/Blink.arduino-remote-uploader/resources/Blinkas.cpp.hex" , "/dev/ super.usbserial-A6005uRz" , java.lang.Integer . parseInt ( "9600" ) , "0013A200.B98FF" , false , 5 , 0 , 500 )
cn.academy.terminal.item.ItemTerminalInstaller . startInstalling ()
if ( ( newText . length () ) <= 0 ) { mUsersList . setVisibility ( View.VISIBLE ) ; mUsersAdapter . getFilter () . filter ( newText ) ; } else { mUsersList . setVisibility ( View.GONE ) ; }
{ checkCornerCase ( rooms ) ; for ( int i = 0 ; i < ( rooms.length ) ; i ++ ) { for ( int j = 0 ; j < ( rooms [ 0 ] . length ) ; j ++ ) { if ( ( rooms [ i ] [ j ] ) >= 0 ) { bfsHelper ( rooms , i , j ) ; } } } }
while ( sideFieldIndex < ( listOfPossibleMoves . size () ) ) { de.htw_berlin.HoboOthello.KI.Field field = listOfPossibleMoves . get ( sideFieldIndex ) ; if ( board . isSideField ( field ) ) { listOfPossibleSideFields . add ( field ) ; } }
( size () )
private java.util.Map < java.lang.String , java.lang.String > getL.UserInfo () { java.util.Map info = new java.util.HashMap <> () ; info . put ( "uid" , getUid () ) ; info . put ( "firstName" , getFirstName () ) ; info . put ( "lastName" , getLastName () ) ; info . put ( "middleName" , getMiddleName () ) ; info . put ( "profilePicsUrls" , getNewUserProfilePicUri () ) ; return info ; }
numActivities
{ android.widget.ImageButton image = ( ( android.widget.ImageButton ) ( findViewById ( R.id.title_button_1 ) ) ) ; image = ( ( android.widget.ImageButton ) ( findViewById ( R.id.title_button_2 ) ) ) ; image . clearAnimation () ; if ( varUnread ) { image . setBackgroundResource ( ( varBack = R.drawable.btn_bg_pressed ) ) ; varUnread = false ; } }
{ if ( ( query ) == null ) query = config . getParser () . validateQuery ( this , value , 0 , ( - 1 ) ) ; if ( ( query ) == null ) { throw new org.netpreserve.commons.uri.UriException ( ( "Illegal query: " + value ) ) ; } parsedQuery = null ; return this ; }
( encodeIfNecessary ( this . root . getName () ) ) + "*"
{ org.rdfhdt.hdtjena.bindings.HDTId id = idBinding . get ( var ) ; if ( id == null ) return null ; org.apache.jena.graph.Node n = id . getNode () ; if ( n == null ) { n = id . getDictionary () . getNode ( id ) ; id . setNode ( n ) ; } return n ; }
subject . equals ( "Name Page" )
{ if ( event . split ( " " ) [ 0 ] . equals ( "+OK" ) ) return okHandler ( event ) ; else if ( event . split ( " " ) [ 0 ] . equals ( "-ERR" ) ) return errHandler ( event ) ; else { return - 1 ; } }
{ if ( ( getPicker () ) == null ) return org.miradi.objecthelpers.ORef.INVALID ; org.miradi.objecthelpers.ORefList selectedObjectRefs = getPicker () . getSelectedH >ies () [ 0 ] ; org.miradi.objecthelpers.ORef selectedObjectRef = selectedObjectRefs . get ( 0 ) ; if ( selectedObjectRef . isInvalid () ) return org.miradi.objecthelpers.ORef.INVALID ; return selectedObjectRef ; }
{ player . release () ; vibrator . cancel () ; handler . removeCallbacks ( runnable ) ; service = false ; stopService ( closeDialog ) ; resetAlarm () ; }
{ lock . lock () ; com.jforex.programming.position.PositionFSM positionFSM = getPositionFSM ( orderSpecification . getInstrument () ) ; positionFSMs . put ( orderSpecification . getInstrument () , positionFSM ) ; java.lang.System.out . println ( ( "State of positionFSM after create: " + positionFSM ) ) ; java.lang.System.out . println ( ( "State of saved positionFSM after create: " + ( getPositionFSM ( orderSpecification . getInstrument () ) ) ) ) ; lock . unlock () ; }
public static pedca.context.Context createAndSaveBott ,Context ( java.lang.String path , double sizeX , double sizeY ) { if ( ! ( path . isEmpty () ) ) { pedca.context.Context context = list.ContextGenerator . getBott ,Context ( sizeX , sizeY ) ; } try { context . saveConfiguration ( path ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return context ; }
new java.lang.NullPointerException ()
@ java.lang.Override public void onClick ( android.view.View v ) { if ( ( getMediaController () ) != null ) { if ( item != ( getPlaybackManager () . getPlaylist () ) ) { org.tomahawk.libtomahawk.collection.StationPlaylist stationPlaylist = org.tomahawk.libtomahawk.collection.StationPlaylist . get ( ( ( org.tomahawk.libtomahawk.collection.Playlist ) ( item ) ) ) ; getPlaybackManager () . setPlaylist ( stationPlaylist ) ; getMediaController () . getTransportControls () . play () ; } } }
{ qName = com.esri.vehiclecommander.Mil2525CMessageParser . translate () ( qName ) ; if ( ( "message" . equals ( qName ) ) || ( "geom &&" . equals ( qName ) ) ) { message = new com.esri.core.symbol.advanced.Message () ; messages . add ( message ) ; version = attributes . getValue ( "v" ) ; } else if ( MessageHelper.MESSAGE_ID_PROPERTY_NAME . equals ( qName ) ) { readingId = true ; } elementName = qName ; }
value == 0L ? position : ( position - 1 ) + ( java.lang.Long . numberOfLeadingZeros ( value ) )
{ stopwatch . stopTimer () ; spelInformatie . setTotaalAantalBolletjes ( 0 ) ; spelInformatie . reset () ; this . vakjesInhoud . clear () ; for ( int i = 0 ; i < ( vakje.length ) ; i ++ ) vakje [ i ] = null ; repaint () ; }
verticeFunction . addMapping ( "B" , "B" )
{ for ( java.lang.System.out . println ( "Color = 1 ) ) ; java.lang.System.out . println ( "Pattern played" ) ; for ( java.awt.Color.BLACK ) ; }
new java.lang.IllegalArgumentException ( ( "basePackageNames must not be empty " + basePackageNames ) )
synchronized ( cleanupThreadStarted ) { if ( ! ( cleanupThreadStarted . get () ) ) { new com.codeborne.selenide.impl.WebDriverThreadLocalContainer.UnusedWebdriversCleanupThread () . start () ; cleanupThreadStarted . set ( true ) ; } }
processingAnim ( true )
{ if ( ( marker ) != null ) marker . remove () ; }
1_system.Entry < java.lang.String , java.lang.String > elements
{ java.awt.Point target = new java.awt.Point ( 0 , 0 ) ; int numAnimats = 0 ; for ( com.fuzzy.simulator.CAnimat otherAnimat : _animats ) { java.awt.Point otherLocation =ItemsetLocation ( animat . GetLocation () , otherAnimat . GetLocation () ) ; int animatDistance = animat . GetDistance ( otherAnimat ) ; } }
{ java.io.File confFile = ovt.Utils . findFile ( ( ( ovt.OVTCore . getConfDir () ) + ( ovt.OVTCore.globalSettingsFileName ) ) ) ; try ( java.io.FileOutputStream out = new java.io.FileOutputStream ( confFile ) ) { ovt.OVTCore.globalProperties . save ( out , "OVT properties file." ) ; } }
nextMove != null
{ drawBackground ( graphics ) ; drawLives () ; drawScore ( graphics ) ; drawCountDown ( graphics ) ; drawPlayers ( graphics ) ; }
{ if ( ( ( mPreviousView ) == null ) && ( ( mNextView ) == null ) ) { java.lang.System.out . println ( "-------OnGestureListener:mPreviousView == null && mNextView == null" ) ; isScrolling = false ; return true ; } isScrolling = true ; onScrollX ( event1 , event2 , distanceX ) ; return true ; }
@ java.lang.Override public double error ( double a ) { if ( a < 0.5 ) { return ( 1 - ( out ( ( 1 - ( a * 2 ) ) ) ) ) * 0.5 ; } return ( ( out ( ( ( a * 2 ) - 1 ) ) ) * 0.5 ) + 0.5 ; }
{ android.widget.ListView listView = findView ( R.id.lv_main_providers_list ) ; mAdapter = new com.pictureit.noambaroz.beautyapp.helper.MainProviderListAdapter ( this , android.R.layout.simple_list_item_1 , new java.util.ArrayList < com.pictureit.noambaroz.beautyapp.data.Beautician > () ) ; listView . setAdapter ( mAdapter ) ; listView . setOnItemClickListener ( new android.widget.AdapterView.OnItemClickListener () { @ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { com.pictureit.noambaroz.beautyapp.BeauticianUtil . openBeauticianInNewActivity ( com.pictureit.noambaroz.beautyapp.MainActivity . this , mAdapter . getItem ( position ) ) ; } } ) ; }
private void updateOriginalTags () { modifiedTags = getExistingTags () ; for ( java.lang.String tagToAdd : tagsToAdd ) { boolean hasTag = false ; for ( java.lang.String existingTag : originalTags ) { if ( tagToAdd . equalsIgnoreCase ( existingTag ) ) { if ( ! hasTag ) { modifiedTags . add ( tagToAdd ) ; } } } } }
{ super . onSaveInstanceState ( saveState ) ; if ( ( movieArrayList ) != null ) saveState . putParcelableArrayList ( SAVED_MOVIE_LIST , movieArrayList ) ; saveState . putString ( SAVED_SORT_PREF , sortBy ) ; saveState . putInt ( SAVED_PAGE_NO , page ) ; }
public com.amazonaws.services.kinesis.scaling.ScalingOperationReport scaleStream ( java.lang.String streamName , int originalShardCount , int targetShards , double targetPct , int operationsMade , int (Completed , long startTime , java.lang.Integer minShards , java.lang.Integer maxShards ) throws java.lang.Exception { com.amazonaws.services.kinesis.scaling.Stream ).LOG . info ( java.lang.String . format ( "Scaling Stream %s from %s Shards to %s" , streamName , originalShardCount , targetShards ) ) ; return scaleStream ( streamName , originalShardCount , targetShards , targetPct ) ; }
{ android.util.Log . i ( "...." , "Title page activity saved" ) ; android.content.SharedPreferences settings = getSharedPreferences ( MainMenuActivity.PREFS_NAME , Context.MODE_PRIVATE ) ; android.content.SharedPreferences.Editor editor = settings . edit () ; editor . putString ( "activity" , "title_page" ) ; editor . putString ( "story" , story . getUniqueID () ) ; editor . commit () ; }
{ if ( isDisposed () ) { return; } getTerminalContext () . deleteReferences ( terminalContextAndRefs . getRight () ) ; final de.metas.adempiere.form.terminal.context.Terminal true ; _disposed = true ; }
{ io.branch.referral.Branch.isAutoSessionMode_ = true ; io.branch.referral.Branch.customReferrableSettings_ = ( isReferrable ) ? io.branch.referral.Branch.CUSTOM_REFERRABLE_SETTINGS.REFERRABLE : io.branch.referral.Branch.CUSTOM_REFERRABLE_SETTINGS.NON_REFERRABLE ; boolean isDebug = io.branch.referral.BranchUtil . isTestModeEnabled ( context ) ; io.branch.referral.Branch . getBranchInstance ( context , ( ! isDebug ) ) ; return io.branch.referral.Branch.branch . getBranchInstance ( context , ( ! isDebug ) ) ; }
intent . putExtra ( "flag" , prevKey )
{ org.usfirst.frc.teamutil3.robot.InputManager.axis [ 0 ] = org.usfirst.frc.teamutil3.robot.InputManager.ps2controller . getRawAxis ( 2 ) ; org.usfirst.frc.teamutil3.robot.InputManager.axis [ 1 ] = org.usfirst.frc.teamutil3.robot.InputManager.ps2controller . getRawAxis ( 1 ) ; org.usfirst.frc.teamutil3.robot.InputManager.axis [ 2 ] = org.usfirst.frc.teamutil3.robot.InputManager.ps2controller . getRawAxis ( 3 ) ; org.usfirst.frc.teamutil3.robot.InputManager.axis [ 2 ] = org.usfirst.frc.teamutil3.robot.InputManager.ps2controller . getRawAxis ( 3 ) ; return org.usfirst.frc.teamutil3.robot.InputManager.axis ; }
new schn27.zorlog.data.DataSourceMath.Handle ( true , name )
{ if ( marble == null ) { continue; } switch ( marble . getStateAsEnum () ) { case IN_PROGRESS : case android.support.annotation.NonNull com.wildsmith.jarble.provider.jar.JarTableMarbleModel marble : marbles ) { if ( marble == null ) { continue; } switch ( marble . getStateAsEnum () ) { case IN_PROGRESS : break; } } } }
{ models.Game g = new models.Game () ; models.User u = new models.User () ; models.Card card1 = new models.Card ( 8 , Suit.Clubs , true ) ; models.Card card2 = new models.Card ( 10 , Suit.Diamonds , true ) ; g . dealCardToCol ( 0 , card1 ) ; u . dealCardToCol ( 0 , card2 ) ; u . split () ; assertEquals ( false , u.isSplit ) ; }
{ android.graphics.Bitmap bm = com.daimajia.androidview ().tools.Blur . apply ( getContext () , com.daimajia.androidviewField.tools.Util . getViewBitmap ( this ) , mBlurRadius ) ; android.widget.ImageView im = new android.widget.ImageView ( getContext () ) ; im . setImageBitmap ( bm ) ; mBlurImage = im ; this . addView ( im ) ; }
{ java.lang.System.out . println ( ( ( this . head ) + 1 ) ) ; verifyNIL () ; int lastDegree = this . head ; }
{ org.elasticsearch.common.settings.Settings.Builder .Settings = org.elasticsearch.common.settings.Settings . get ( "cluster.name" , matchpconfig . getEsPath () ) . put ( "path.home" , matchpconfig . getEsPath () ) ; if ( ( matchpconfig . getEsPath () ) != null ) { node = org.elasticsearch.node.NodeBuilder . nodeBuilder () . local ( true ) . settings (1Settings . build () ) . node () ; } try { } catch ( java.io.IOException e ) { e . printStackTrace () ; } catch ( java.lang.CloneNotSupportedException e ) { e . printStackTrace () ; } }
db . getSeries ( 2 , false )
( ( ( xbot.common.controls.actuators.MockCANTalon ) ( drive.rightDrive ) ) . getSetpoint () ) > 0
{ if ( ( this ) == o ) return true ; if ( ( o == null ) || ( ( getClass () ) != ( o . getClass () ) ) ) return false ; com.mounacheikhna.practice.algorithms.SmartWordToy.Node node = ( ( com.mounacheikhna.practice.algorithms.SmartWordToy.Node ) ( o ) ) ; return steps ; }
( ( t1 . trim () . equals ( "" ) ) || ( ( t1 . trim () ) != null ) )
{ bufa . append ( a ) ; bufa . append ( b ) ; }
android.widget.Toast . makeText ( getActivity () , R.string.tags_edition_failed , Toast.LENGTH_SHORT )
block . setNumBytes ( ( ( block . getNumBytes () ) + currLen ) )
em . find ( entity.Customer . class )
{ if ( ( this ) == o ) return true ; if ( ( o == null ) || ( ( getClass () ) != ( o . getClass () ) ) ) return false ; java.lang.Number that = ( ( java.lang.Number ) ( o ) ) ; return ( ( compareTo ( that ) ) == 0 ) || ( value . equals ( that . doubleValue () ) ) ; }
value = null
getThing ()
{ int [] a = new int [] { 1 , 2 , 3 , 4 , 5 } ; reverseLinkedListII.ReverseLinkedListII obj = new reverseLinkedListII.ReverseLinkedListII () ; reverseLinkedListII.ReverseLinkedListII.ListNode head = obj . makeList ( a ) ; reverseLinkedListII.ReverseLinkedListII . printList ( head ) ; head = obj . reverseBetween ( head , 2 , 4 ) ; reverseLinkedListII.ReverseLinkedListII . printList ( head ) ; }
{ this . draggingObj = dragginObj ; if ( draggingObj != null ) { draggingObj . setSourceObject ( this ) ; this . add ( draggingObj ) ; draggingObj . setLocation ( 0 , 0 ) ; draggingObj . setSize ( ( ( ( int ) ( this . getSize () . getWidth () ) ) - 1 ) , ( ( ( int ) ( this . getSize () . getHeight () ) ) - 1 ) ) ; } }
public synchronized void setHMILevel () { hmiLevel = hmiVal ; if ( ( hmiVal . equals ( HMILevel.HMI_FULL ) ) || ( hmiVal . equals ( HMILevel.HMI_LIMITED ) ) ) setUserSelectedStatus ( true ) ; else if ( hmiVal . equals ( HMILevel.HMI_NONE ) ) setUserSelectedStatus ( false ) ; }
java.lang.String key
{ java.io.BufferedReader fileReader = fileReaderFactory . createNFLTeamSettingsReader () ; java.lang.StringBuilder nflTeamSettingsBuilder = new java.lang.StringBuilder () ; java.lang.String line = fileReader . readLine () ; while ( line != null ) { nflTeamSettingsBuilder . append ( line ) ; nflTeamSettingsBuilder . append ( "\n" ) ; line = fileReader . readLine () ; } fileReader . close () ; return nflTeamSettingsBuilder . toString () ; }
@ org.junit.Test public void getFormattedDateString_1day () { org.hamcrest.MatcherAssert . assertThat ( com.ddiehl.timesincetextview.TimeSince . getFormattedDateString ( ( ( mTime ) - ( ( ( 1 * 24 ) * 60 ) * 60 ) ) , mTime , false , com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest.mContext ) , com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest . is ( getQuantityString ( R.plurals.tstv_timespan_days , 1 ) ) ) ; }
{ com.mycompany.model.UserOTP userOTP = userOTPDao . getUserOTP ( username ) ; java.util.Date date = new java.util.Date () ; if ( userOTP == null ) { userOTP . setValidUser ( false ) ; } userOTP . setQrcode ( qrcode ) ; userOTP . setModifiedTime ( date ) ; return userOTPDao . saveUserOTP ( userOTP ) ; }
{ android.util.Log . d ( "WaterLevel" , "in mRecordFeed" ) ; while ( ( mRecorder . getRecordingState () ) == ( android.media.AudioRecord.RECORDSTATE_RECORDING ) ) { short [] data = new short [ ( mBufferSize ) / 2 ] ; mRecorder . read ( data , 0 , ( ( mBufferSize ) / 2 ) ) ; android.util.Log . d ( "WaterLevel" , "in mRecordFeed, in while, before appendSignal" ) ; mDecoder . appendSignal ( data ) ; android.util.Log . d ( "WaterLevel" , "in mRecordFeed, in while, after appendSignal" ) ; } }
public java.lang.reflect.Method getMethod ( int amountOfParams ) throws java.lang.ClassNotFoundException { if ( ! ( methods . containsKey ( amountOfParams ) ) ) { java.lang.String fullName = ( ( java.lang.String ) ( be.nabu.libs.evaluator.impl.MethodOperation . getParts () . get ( 0 ) . getContent () ) ) ; methods . put ( amountOfParams , findMethod ( fullName , amountOfParams ) ) ; } return methods . get ( amountOfParams ) ; }
{ currentLocation . setText ( WeatherUtil.DEFAULT_LOCATION ) ; weather . execute ( WeatherUtil.SF_LAN , WeatherUtil.SF_LON ) ; }
{ com.aolalabs.partywolf.Event clickedEvent ; if ( dateView ) { clickedEvent = events . get ( position ) ; } else { clickedEvent = events . get ( position ) ; } java.lang.String message = "You clicked on " + ( clickedEvent . getTitle () ) ; java.lang.System.out . println ( message ) ; android.content.Intent i = new android.content.Intent ( this , com.aolalabs.partywolf.EventDetailA . class ) ; i . putExtra ( "event" , clickedEvent ) ; startActivity ( i ) ; }
{ final int timeSensitiveness = 50 ; if ( ( ( keyThread ) != null ) && ( ( keyThread . getState () ) == ( java.lang.Thread.State.TIMED_WAITING ) ) ) { updateMovement () ; } else { keyThread = new java.lang.Thread () { public void run () { try { keyThread . sleep ( timeSensitiveness ) ; updateMovement () ; } catch ( java.lang.InterruptedException e ) { java.lang.System.out . println ( ( "------ Key thread interrupted -------\n" + e ) ) ; } } } ; keyThread . start () ; } }
@ java.lang.Override public void onSearchRequest () { super . onSearchRequest () ; if ( ! ( mInput . isShown () ) ) { mInput . setVisibility ( View.VISIBLE ) ; mInput . requestFocus () ; android.view.inputmethod.InputMethodManager imm = ( ( android.view.inputmethod.InputMethodManager ) ( getFFCActivity () . getSystemService ( Context.INPUT_METHOD_SERVICE ) ) ) ; imm . showSoftInput ( mInput , InputMethodManager.SHOW_FORCED ) ; } }
{ java.util.List < pi.pathfinder.ObstacleEdge > obstacleEdges = pi.pathfinder.GraphConverter . createObstacleEdges ( map . getObstacles () ) ; pi.pathfinder.GraphConverter . sortObstacleEdges ( obstacleEdges ) ; pi.pathfinder.GraphConverter . removeTooSmallAreas ( graph , robotWidth , robotHeight ) ; pi.pathfinder.GraphConverter.logger . info ( graph ) ; }
java.util.Map < java.lang.Long , java.lang.String > tags = userQueryDao . getQueryTags ( java.util.Arrays . asList ( 16L , 17L ) ) ;
this . keyValue . getValue ( key )
while ( index == aList . get ( index ) ) { if ( ( insertedGrade . getTotalGrade () ) > ( element . getTotalGrade () ) ) { aList . add ( index , insertedGrade ) ; break; } index ++ ; }
if ( resultFilterMethod == ( com.ghostflying.portalwaitinglist.util.SettingUtil . getResultFilterMethod () ) ) { com.ghostflying.portalwaitinglist.util.SettingUtil.options . edit () . putInt ( com.ghostflying.portalwaitinglist.util.SettingUtil.RESULT_FILTER_METHOD_NAME , resultFilterMethod . ordinal () ) . apply () ; com.ghostflying.portalwaitinglist.util.SettingUtil . notifyChange ( resultFilterMethod ) ; }
new com.github.infosimulators.events.Event ( com.github.infosimulators.events.EventType.TRAINER_GENERATED_FIRST_GEN , null )
for ( int i = 0 ; i < ( houseElements . size () ) ; i ++ ) { if ( ( houseElements . get ( i ) . getAttribute ( model.ViewHandler.houseIDTag ) ) != null ) { houseElements . get ( i ) . setAttribute ( model.ViewHandler.inView , "false" ) ; } }
{ com.palmergames.bukkit.towny.huds.WarHUD . toggleOn ( p ) ; toggleAllOff ( p ) ; }
{ java.lang.System.out . println () ; java.lang.System.out . println ( ";Yes, global" ) ; for ( SymbolEntry se : table . getDecls () ) { java.lang.String variable = se . getVariable () ; if ( variable . startsWith ( "$L" ) ) { globalTemp . add ( variable ) ; } } }
{ for ( int i = 0 ; i < ( myArrayList . size () ) ; i ++ ) { if ( myArrayList . get ( i ) . getTitle () . matches ( findTitle ) ) { return i ; } } return 0 ; }
{ bottomInner . remove ( startButton ) ; bottomInner . revalidate () ; bottomInner . repaint () ; startButton . removeActionListener ( this ) ; }
( ( t ) <= ( ( tf ) ) + 1 )
{ org.opendaylight.bgpcep.pcep.topology.provider.ServerSessionManager.LOG . debug ( "Node {} if" , nodeState . getNodeId () ) ; this . nodes . remove ( org.opendaylight.bgpcep.pcep.topology.provider.ServerSessionManager . createNodeId ( session . getRemoteAddress () ) ) ; nodeState . released ( persistNode ) ; }
public void removeType ( java.lang.String name ) { if ( name != null ) { org.yakindu.base.types.Type type = typeRegistry . get ( name ) ; if ( type != null ) { extendsRegistry . removeAll ( type ) ; resource . getContents () . remove ( type ) ; typeRegistry . remove ( name ) ; } } }
{ java.lang.System.out . print ( "Creating"WG... " ) ; com.alexwyler.wwc.dawg.DawgNode.instance = com.alexwyler.wwc.dawg.DawgNode . makeDawg ( new java.io.File ( "WebContent/words.txt" ) ) ; java.lang.System.out . println ( "DONE." ) ; }
org.knowm.xchart.internal.Utils . getDoubleArrayFromDateList ( xData )
getScreenOnTimeLocked ()
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_autocomplete ) ; getApplicationComponent () . inject ( this ) ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; getSupportActionBar () . setDisplayShowHomeEnabled ( true ) ; mPresenter . attachView ( this ) ; }
{ java.lang.String xPathExpression = buildFilterXpath ( filter ) ; java.util.ArrayList < org.w3c.dom.Node > nodes = getNodesByXPath ( xPathExpression ) ; java.util.ArrayList < org.inaturalist.android.GuideTaxonXML > taxa = new java.util.ArrayList < org.inaturalist.android.GuideTaxonXML > () ; for ( org.w3c.dom.Node node : nodes ) { taxa . add ( new org.inaturalist.android.GuideTaxonXML ( this , node ) ) ; } return taxa ; }
{ addServiceDiscoveryRequest () ; android.util.Log . i ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG , "Submitting first discover task" ) ; serviceDiscoveryRegistered = true ; serviceDiscoveryRegistered = true ; }
edu.princeton.cs.algs4.StdRandom . uniform ( 0 , i )
public void return false ; java.lang.System.out . println ( "Hit or stand?" ) ; java.lang.System.out . println ( "1: return" ) ; java.lang.System.out . println ( "2: id" ) ; if ( ( cs1.Keyboard . readInt () ) == 1 ) { _playerTotal += drawCard () ; java.lang.System.out . println ( _playerTotal ) ; if ( ( _playerTotal ) > 21 ) { x . lose ( _bet ) ; return; } else { return true ; } } else { return; }
albumSongs . get ( randNum )
{ int selected_row = - 1 ; java.awt.Point p = e . getPoint () ; java.lang.System.out . println ( ( ( ( "Manowitz left page(x,y): " + ( p.x ) ) + ", " ) + ( p.y ) ) ) ; java.awt.FontMetrics fm = right_page . getFontMetrics ( right_page . getFont () ) ; selected_row = ( ( p.y ) / ( fm . getHeight () ) ) + 1 ; return selected_row ; }
( ( ( obj . getClass () ) != ( this . getClass () ) ) && ( ( this . getClass () ) != ( this . getClass () ) ) )
{ java.io.BufferedReader reader = this . fetchOrgFile ( orgPath ) ; java.lang.String fileContents = "" ; java.lang.String fileContents = "" ; while ( ( thisLine = reader . readLine () ) != null ) { fileContents += thisLine + "\n" ; } } catch ( java.io.IOException e ) { throw new com.matburt.mobileorg.Error.ReportableError ( r . getString ( R.string.error_file_read , orgPath ) , e ) ; }
{ if ( status . equals ( rustelefonen.no.drikkevett_android.tabs.planParty.BacPlanPartyFragment.Status.RUNNING ) ) { addConsumedUnits ( getUnitId () ) ; if ( ! ( isFirstUnitAdded () ) ) { setFirstUnitAdded () ; } } if ( status . equals ( rustelefonen.no.drikkevett_android.tabs.planParty.BacPlanPartyFragment.Status.NOT_RUNNING ) ) { addPlannedUnits ( getUnitId () ) ; } if ( status . equals ( rustelefonen.no.drikkevett_android.tabs.planParty.BacPlanPartyFragment.Status.DA_RUNNING ) ) {} stateHandler ( status ) ; }
{ java.nio.file.Path p = new java.io.File ( path ) . toPath () ; try { return new org.json.JSONObject ( new java.lang.String ( java.nio.file.Files . readAllBytes ( p ) , java.nio.charset.StandardCharsets.UTF_8 ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return null ; }
@ java.lang.Override public void insert ( E obj , int location ) { if ( ( location - 1 ) < ( currentSize ) ) { ( currentSize ) ++ ; dynamicResize ( true ) ; shiftElements ( ( location - 1 ) , true ) ; array [ ( location - 1 ) ] = obj ; } else { throw new java.lang.RuntimeException ( "Index is not within ( currentSize ) ) ; } }
{ super . preInit ( e ) ; if ( com.cjm721.overloaded.Overloaded.MODID ) { MinecraftForge.EVENT_BUS . register ( ModItems.distanceBreaker ) ; MinecraftForge.EVENT_BUS . register ( ModItems.distanceBreaker ) ; MinecraftForge.EVENT_BUS . register ( new com.cjm721.overloaded.client.render.block. ;.CompressedBlockAssets () ) ; com.cjm721.overloaded.common.block.ModBlocks . registerModels () ; com.cjm721.overloaded.common.item.ModItems . registerModels () ; } }
return Localization string.length ;
{ java.lang.String tbls = com.alibaba.fastjson.JSON . toJSONString ( tbl ) ; int err = 0 ; redis.clients.jedis.Jedis jedis = redisUtil . getJedis () ; jedis . hset ( "table" , ( ( ( "" + ( tbl . getDbName () ) ) + "." ) + ( tbl . getTableName () ) ) , tbls ) ; }
{ if ( debug ) java.lang.System.out . println ( ( "Paikka 1 1 " + ( whichmark () ) ) ) ; ChangeButton ( buttonbb ) ; buttonbb . setEnabled ( false ) ; viime ()Siirto [ 1 ] [ 1 ] = whichmark () ; ( buttoncount ) ++ ; }
{ org.apache.flink.python.api.PythonPlanBinder . clearPath ( org.apache.flink.python.api.PythonPlanBinder.FLINK_HDFS_PATH ) ; org.apache.flink.runtime.filecache.FileCache . copy ( new org.apache.flink.core.fs.Path ( tmpPath ) , new org.apache.flink.core.fs.Path ( tmpPath ) , new org.apache.flink.core.fs.Path ( org.apache.flink.python.api.PythonPlanBinder.FLINK_HDFS_PATH ) , true ) ; env . registerCachedFile ( org.apache.flink.python.api.PythonPlanBinder.FLINK_HDFS_PATH ) ; org.apache.flink.python.api.PythonPlanBinder . clearPath ( tmpPath ) ; }
{ java.lang.System.out . println ( out ) ; java.lang.System.out . println ( out ) ; out . println () ; }
new seedu.todolist.model.task.Task ()
try { if ( ( service ) != null ) { count = service . targetAlarmCount () ; } } catch ( android.os.RemoteException e ) { return; } finally { handler . post ( new java.lang.Runnable () { @ java.lang.Override public void run () { notifyService . unbind () ; } } ) ; }
{ viewTitleLabel = new javax.swing.JLabel () ; viewTitleLabel . setToolTipText ( "Click to change the title..." ) ; viewTitleLabel . setFont ( viewTitleLabel . getFont () . deriveFont ( org.cytoscape.util.swing.LookAndFeelUtil . getSmallFontSize () ) ) ; viewTitleLabel . setMinimumSize ( new java.awt.Dimension ( viewTitleLabel . getPreferredSize () . width , getViewTitleTextField () . getPreferredSize () . height ) ) ; }
{ org.onosproject.incubator.net.routing.ResolvedRoute route = new org.onosproject.incubator.net.routing.ResolvedRoute ( org.onosproject.sdnip.SdnIpFibTest.PREFIX1 , org.onosproject.sdnip.SdnIpFibTest.IP3 , org.onosproject.sdnip.SdnIpFibTest.MAC3 , org.onosproject.sdnip.SdnIpFibTest.SW3_ETH1 ) ; org.onosproject.net.intent.MultiPointToSinglePointIntent removedIntent = createIntentToThreeSrcOneTwo ( org.onosproject.sdnip.SdnIpFibTest.PREFIX1 ) ; org.onosproject.net.intent.MultiPointToSinglePointIntent removedIntent = createIntentToThreeSrcOneTwo ( org.onosproject.sdnip.SdnIpFibTest.PREFIX1 ) ; org.onosproject.net.intent.MultiPointToSinglePointIntent removedIntent = createIntentToThreeSrcOneTwo ( org.onosproject.sdnip.SdnIpFibTest.PREFIX1 ) ; org.easymock.EasyMock . reset ( intentSynchronizer ) ; intentSynchronizer . withdraw ( org.onosproject.routing.TestIntentServiceHelper . eqExceptId ( removedIntent ) ) ; replay ( intentSynchronizer ) ; routeListener . event ( new org.onosproject.incubator.net.routing.RouteEvent ( RouteEvent.Type.ROUTE_REMOVED , route ) ) ; org.easymock.EasyMock . verify ( intentSynchronizer ) ; }
private static int getSequenceNumber ( byte [] datagramContents ) { int start = ( Packet.SENDER_LENGTH ) + ( Packet.RECEIVER_LENGTH ) ; int end = start + ( Packet.length ) ; byte [] seqNumArray = new byte [ Packet.length ] ; seqNumArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer seqNumByteBuffer = java.nio.ByteBuffer . wrap ( seqNumArray ) ; int seqNum = seqNumByteBuffer . getShort () ; return seqNum ; }
java.lang.String . format ( ( ( "\n" + indent ) + " public const int %sId = %d;\n" ) , uk.co.real_logic.sbe.generation.csharp.CSharpUtil.CSharpUtil . formatPropertyName ( token . name () ) , java.lang.Integer . valueOf ( token . id () ) )
{ int prev_level = rooms_list . get ( roomID ) . getLevel () ; rooms_list . get ( roomID ) . lower () ; if ( prev_level > ( rooms_list . get ( roomID ) . getLevel () ) ) return true ; else return false ; }
org.usfirst.frc.team1100.robot.subsystems.Drive . getInstance () . driveMecanum ( org.usfirst.frc.team1100.robot.OI . getInstance () . getLeftStick () . getX () , org.usfirst.frc.team1100.robot.OI . getInstance () . getLeftStick () . getY () , org.usfirst.frc.team1100.robot.OI . getInstance () . getRightStick () . getY () , 0.0 )
@ java.lang.Override public void unregisterHandler ( org.eclipse.smarthome.core.thing.Thing thing ) { org.osgi.framework.ServiceRegistration < org.eclipse.smarthome.core.thing.binding.ThingHandler > serviceRegistration = thingHandlers . remove ( thing . getUID () . toString () ) ; if ( serviceRegistration != null ) { org.eclipse.smarthome.core.thing.binding.ThingHandler thingHandler = ( ( org.eclipse.smarthome.core.thing.binding.ThingHandler ) ( bundleContext . getService ( serviceRegistration . getReference () ) ) ) ; serviceRegistration . unregister () ; removeHandler ( thingHandler ) ; thingHandler . dispose () ; } }
{ marker . setVisible ( true ) ; }
( ( binaryData . getDataSize () ) > 0 )
private static void setVertGroup ( javax.swing.GroupLayout layout , javax.swing.JScrollPane jScrollPane1 , javax.swing.JScrollPane jScrollPane2 , javax.swing.JLabel jLabel1 , javax.swing.JLabel status , javax.swing.JTextField cmdEntry ) { javax.swing.GroupLayout.ParallelGroup vGroup = layout . createParallelGroup ( javax.swing.GroupLayout.Alignment.LEADING ) ; javax.swing.GroupLayout.SequentialGroup v1 = UserInterface.UserInterface . vertGroup1 ( layout , jScrollPane2 , jScrollPane1 , status , jLabel1 , cmdEntry ) ; vGroup . addGroup ( v1 ) ; layout . setVerticalGroup ( vGroup ) ; }
private void setupEventListeners () { setOnSearchClickedListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View view ) { android.widget.Toast . makeText ( getActivity () , "Implement your own in-app search" , Toast.LENGTH_LONG ) . show () ; } } ) ; }
{ if ( sensor . canGetInfo () ) { temperature = sensor . getTemperature () ; location = sensor . getLocation () ; } else { pCircle . dismiss () ; android.widget.Toast . makeText ( getApplicationContext () , "Can not get sensor data" , Toast.LENGTH_SHORT ) . show () ; } sensor . removeListener () ; }
return ( data . getNext () ) != null ;
i = 1
{ if ( ( lhsRoadCamera . getSyncId () ) == currentSyncId ) { return - 1 ; } if ( ( rhsRoadCamera . getSyncId () ) == currentSyncId ) { return 1 ; } if ( ( rhsRoadCamera . getSyncId () ) == currentSyncId ) { return 1 ; } }
org.junit.Assert . assertEquals ( 1 , req . getOp () )
message = null
context . startActivity ( android.content.Intent . createChooser ( emailIntent ) . getString ( R.string.select_app ) ) ;
{ if ( item == null ) { return false ; } if ( item . isEnabled () ) { return false ; } else { return true ; } }
new java.lang.AssertionError ( "failed to parse object source: " + expectedJsonObjectSource )
return - 1 ;
last_id = place_bet . ExecuteQuery ( "SELECT max(BetID) FROM bets;" )
{ com.employmeo.data.model.Respondant respondant = respondantService . getRespondantById ( respondantId ) ; if ( ( respondant . getRespondantStatus () ) <= ( com.employmeo.data.model.Respondant.STATUS_STARTED ) ) { respondant . setRespondantStatus ( Respondant.STATUS_REMINDED ) ; respondantService . save ( respondant ) ; emailService . sendEmailReminder ( respondant ) ; } return javax.ws.rs.core.Response . status ( Status.OK ) . build () ; }
{ if ( ( ( movementSpeed ) > 0 ) && ( (x ) >= 630 ) ) { updateLogic () ; } if ( ( ( movementSpeed ) < 0 ) && ( (x ) <= 2 ) ) { updateLogic ( true ) ; }x += movementSpeed ; }
{ for ( Utils.DataVector vector : data ) { java.util.List < java.lang.Integer > treePred : = new java.util.ArrayList ( data . size () ) ; for ( RandomForestHOG.DecisionTree.DecisionTree tree : dTree ) { int curPrediction = tree . classify ( vector ) ; treePred ) . add ( curPrediction ) ; } if ( calAccuracy ) { calAccuracy () ; } return finalPred : ; } }
{ int userEdited = 0 ; for ( int i = 0 ; i < ( backup.length ) ; i ++ ) { if ( ( ( backup [ i ] ) != ( Cell.NONE ) ) && ( ! ( mCells [ i ] . isLocked () ) ) ) { backup [ i ] = Cell.NONE ; userEdited ++ ; } } }
{ for ( int i = ( piece . getY () ) + 1 ; i < newY ; i ++ ) { int moveCounter = 1 ; if ( tileHasPiece ( ( ( piece . getX () ) + moveCounter ) , i ) ) return true ; moveCounter ++ ; } return false ; }
{ mValue += aValue ; if ( ( mValue ) >= ( mSteps.length ) ) { mValue = ( mSteps.length ) - 1 ; } mChangeListener . sendChange ( new com.deepercreeper.vampireapp.host.change.HealthChange ( false , mValue ) ) ; if ( aHeavy ) { mHeavyWounds += aValue ; if ( ( mHeavyWounds ) > ( mValue ) ) { mHeavyWounds = mValue ; } mChangeListener . sendChange ( new com.deepercreeper.vampireapp.host.change.HealthChange ( true ) ) ; } updateValue () ; }
return new java.lang.String ( "" ) ;
com.squareup.picasso.Picasso . with ( this . mContext )
com.pushbots.push.Pushbots . sharedInstance ( this , R.layout.listitemrow )
producer . start ( defaultCameraSettings , i )
mControlOverlayLayout . updateStreamingStatusOnUiThread ( false )
2 * 1000L
{ Strand temp = this . componentList . get ( i ) ; java.lang.String sequence = temp.sequence ; parsedComponentData [ i ] = ( ( temp.name ) + ":" ) + sequence ; }
allLines . substring ( ( ( allLines . length () ) - 1 ) )
{ filterOutput . clear () ; ninja.mbedded.ninjUser.util.streamedText.StreamedText toBeConsumed = new ninja.mbedded.ninjUser.util.streamedText.StreamedText ( totalUn .AnsiParserOutput ) ; bufferBetweenAnsiParserAndFilter = toBeConsumed ; java.lang.System.out . println ( toBeConsumed . get ( 0 ) . parse ( toBeConsumed , filterOutput ) ) ; for ( ninja.mbedded.ninjUser.model.terminal.txRx.StreamedTextListener newStreamedTextListener : newStreamedTextListeners ) { newStreamedTextListener . run ( filterOutput ) ; } }
public java.lang.String percentEncodeRfc3986 ( java.lang.String s ) { java.lang.String out ; try { out = java.net.URLEncoder . encode ( s , utils.SignedRequestsHelper.UTF8_CHARSET ) . replace ( "+" , "%20" ) . replace ( "*" , "%2A" ) . replace ( "%7E" , "~" ) ; } catch ( java.io.UnsupportedEncodingException e ) { out = s ; } return out ; }
{ if ( projector.downstreamAborted . get () ) { return false ; } if ( ! ( lowestCommon . isEmittable ( row , this ) ) ) { pendingPause . set ( true ) ; pause () ; } return downstreamContext . setNextRow ( row ) ; }
if ( ( normalTasks != null ) && ( normalTasks . isEmpty () ) ) { return; }
{ java.lang.System.out . println ( ( "Data addr=" + ( dataAddr ) ) ) ; int size = spriteData.length ; int bankBytesLeft = ( SpritesTo model.BANK_SIZE ) - ( ( dataAddr ) % ( SpritesTo model.BANK_SIZE ) ) ; if ( bankBytesLeft < size ) { dataAddr += bankBytesLeft + ( SpritesTo model.HEADER_SIZE ) ; } writeIndex ( dataAddr ) ; dataAddr += writeBytes ( break; }
{ fr.univ.annuaire.manager.LoginManager manager = new fr.univ.annuaire.manager.LoginManager ( l ) ; if ( result . hasErrors () ) { logger . info ( "Returning log view, auth failled: incorrect syntax" ) ; return "login" ; } if ( ! ( manager . checkLogin () ) ) { logger . info ( "Returning accueil view, auth success" ) ; return "redirect:/actions/accueil" ; } logger . info ( "Returning log view, auth failled: wrong identifiants" ) ; return "login" ; }
{ if ( ( level ) < ( lvlMax ) ) { ( level ) ++ ; } else { level = lvlMin ; } android.util.Log . d ( "lv" , java.lang.String . valueOf ( level ) ) ; }
if ( task . isSuccessful () ) { android.util.Log . d ( com.example.jason.fooder1.LoginPage.TAG , "signInWithCredential:success" ) ; } else { android.util.Log . w ( com.example.jason.fooder1.LoginPage.TAG , "signInWithCredential:failure" , task . getException () ) ; android.widget.Toast . makeText ( this , "Authentication failed." , Toast.LENGTH_SHORT ) . show () ; updateUI ( null ) ; }
private void resize ( int capacity ) { assert capacity >= ( N ) ; Item [] temp = ( ( Item [] ) ( new java.lang.Object [ capacity ] ) ) ; synchronized ( a ) { for ( int i = 0 ; i < ( N ) ; i ++ ) { copyIfNotNull ( a , temp , i , i ) ; } } a = temp ; }
geoNameId . getGeoNameId ()
{ isRecording = false ; this . id . stop () ; this . this . this . this . this . this . id . release () ; this . this . this . this . this . this . id . release () ; java.io.File outputFile = new java.io.File ( app.ddf.danskdatahistoriskforening.helper.LocalMediaStorage . getOutputMediaFileUri ( null , LocalMediaStorage.MEDIA_TYPE_AUDIO_RECORD_TEMP ) . getPath () ) ; mergeAudioFile ( false ) ; mergeAudioFile ( false ) ; }
{ progressBarStatus = counter ; try { java.lang.Thread . sleep ( 30 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } progressBarHandler . post ( new java.lang.Runnable () { @ java.lang.Override public void run () { mProgressDialog . setProgress ( progressBarStatus ) ; } } ) ; }
{ int pageNumber = 1 ; int pageSize = org.bright.sepe.Tool . getPageSize ( "type ) ; java.lang.String name = "" ; org.smart4j.framework.dao.bean.Pager < org.bright.sepe.entity.Notice > noticePager = noticeService . getNoticePager ( pageNumber , pageSize , name ) ; return new org.smart4j.framework.mvc.bean.View () ; }
private static int getReceiverID ( byte [] datagramContents ) { int start = Packet.RECEIVER_LENGTH ; int end = start + ( Packet.RECEIVER_LENGTH ) ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; receiverIdArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; }
{ android.graphics.Bitmap bitmap = android.graphics.BitmapFactory . decodeResource ( getResources () ,io . getResourceId ( i , ( - 1 ) ) ) ; }
public void setIncomingPortletCandidate ( org.vaadin. ) { assert portletWidget != null ; com.vaadin.client.ComponentConnector pc = com.vaadin.client.Util . findConnectorFor ( portletWidget . getContentWidget () ) ; if ( ( this . outcomingPortletCandidate ) == pc ) { this . outcomingPortletCandidate = null ; } else if ( ! ( getChildComponents () . contains ( pc ) ) ) { this . incomingPortletCandidate = pc ; } }
{ if ( viewType == ( Category.TYPE_SUB_TITLE ) ) { new com.fmtech.categoryrecyclerview.CategoryAdapter.CategoryTitleViewHolder ( mLayoutInflater . inflate ( R.layout.item_category_list_subtitle , null , false ) ) ; } else { throw new java.lang.RuntimeException ( ( "Invalid viewType: " + viewType ) ) ; } return null ; }
{ switch ( com.ywca.pentref.common.PentrefProvider.mUriMatcher . match ( uri ) ) { case com.ywca.pentref.common.PentrefProvider.POI_TABLE : case com.ywca.pentref.common.PentrefProvider.POI_ROW : case com.ywca.pentref.common.PentrefProvider.SEARCH_SUGGESTIONS : return com.ywca.pentref.models.Poi.TABLE_NAME ; case com.ywca.pentref.common.PentrefProvider.CATEGORY_TABLE : case com.ywca.pentref.common.PentrefProvider.BOOKMARK_ROW : return Contract.Bookmark.TABLE_NAME ; default: throw new java.lang.IllegalArgumentException ( ( "Illegal uri: " + uri ) ) ; } }
{ if ( ( ( ( ( double ) ( sent1 ) ) * 0.5 ) ) == 0 ) { return null ; } else { double t = ( ( ( ( ( double ) ( 0 ) ) * 10 ) ) * 10 ; double w = ( ( ( ( ( ( ( ( double ) ( sent1 ) ) * 0.5 ) + 1 ) * 0.5 ) ) * 0.5 ) ) * 10 ; } java.lang.System.out . println ( ( ( t + w ) + y ) / 3 ) ; java.lang.System.out . println ( ( "fireindex: " + ( ( ( - 1 ) * 0.5 ) ) ) ) ; return ( ( t + w ) + y ) / 3 ; }
{ for ( int i = pPosition ; ( i - pPosition ) < pSize ; ++ i ) { pMatrix [ pRow ] [ i ] = new de.hotware.blockbreaker.model.Block ( pColor , pRow , i ) ; } }
opts . addOption ( "bitset" , "bitset_input" , false , "Use checkset for the input of pos_items [default:false]" )
if ( ( enemies . get ( i ) . getHealth () ) == 0 ) enemies . remove ( i ) ;
@ org.junit.Test public void addToIndexShouldInsertElementToGivenIndex ( ) throws java.lang.Exception { list . add ( 10 ) ; list . add ( 20 ) ; list . add ( 30 ) ; list . add ( 40 , 1 ) ; assertEquals ( new java.lang.Integer ( 40 ) , list . get ( 1 ) ) ; }
resultSet . getInt ( "name" )
( value . equals ( "" ) ) || ( value . equals ( null ) )
com.bryan.lib.dialog.FastDialog . ShowActionSheetDialog ( context , stringItems , false , new com.flyco.dialog.listener.OnOperItemClickL () { @ java.lang.Override public void onOperItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { com.bryan.lib.util.T . showShort ( context , stringItems [ position ] ) ; } } )
{ com.android.server.AppWidgetServiceImpl impl = mAppWidgetServices . get ( userId ) ; if ( userId < 1 ) return; if ( impl == null ) { com.android.server.AppWidgetServiceImpl . getSettingsFile ( userId ) . delete () ; } else { impl . onUserRemoved () ; } }
{ org.eclipse.sirius.diagram.description.Layer existingLayer = null ; for ( org.eclipse.sirius.diagram.description.Layer layer : description . getAdditionalLayers () ) { if ( "Animation" . equals ( layer . getName () ) ) { existingLayer = layer ; break; } } if ( existingLayer != null ) { res = existingLayer ; } else { res = org.modelexecution.xmof.gemoc.extension.sirius.ui.command.AddAnimationLayerRunnable . createLayer ( description , layerName , monitor ) ; } return res ; }
resourceStreamingManager . activateMasterResourceStreamer ()
{ int idx = ( ( gridPos.y ) * ( gridRows ) ) + ( gridPos.x ) ; if ( ! ( map . containsKey ( idx ) ) ) { log . info ( "Could not remove. Key is not in buffer." ) ; return; } if ( gridPos . equals ( relativeOrigin ) ) { log . info ( "Removing current relative origin requires the relative origin to be updated." ) ; log . info ( "Updating relative origin..." ) ; this . updateRelativeOrigin () ; } map . remove ( idx ) ; }
{ clients.CLUI . crvfs ( "vfs1" , 1000L ) ; clients.CLUI . impvfs ( "eval/Host/level 1" , "vfs1" , "Home" ) ; java.lang.System.out . println ( "What would you like to do ? Type help to see the commands" ) ; java.util.Scanner scan = new java.util.Scanner ( java.lang.System.in ) ; while ( true ) { java.lang.String str = scan . nextLine () ; clients.CLUI .. ( str ) ; } }
{ assert editedTask != null ; seedu.taskboss.model.task.Task taskToUpdate = internalList . get ( index ) ; if ( ( ! ( taskToUpdate . equals ( editedTask ) ) ) && ( internalList . contains ( editedTask ) ) ) { if ( ! ( editedTask . getCategories () . contains ( Category.done ) ) ) { throw new seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException () ; } } taskToUpdate . resetData ( editedTask ) ; internalList . set ( index , taskToUpdate ) ; }
{ assertEquals ( oldLocation . getId () , newLocation . getId () ) ; assertEquals ( oldLocation . getName () , newLocation . getName () ) ; assertEquals ( oldLocation . getDescription () , newLocation . getDescription () ) ; assertEquals ( oldLocation . getNearCity () , newLocation . getNearCity () ) ; }
{ try { socket . close () ; } catch ( final java.io.IOException e1 ) { de.taimos.gpsd4java.backend.GPSdEndpoint.LOG . debug ( ( "Close ): " + ( e1 . getMessage () ) ) ; } try { this . listeners . clear () ; if ( ( listenThread ) != null ) { this . listenThread . close () ; } } catch ( final java.lang.Exception e ) { de.taimos.gpsd4java.backend.GPSdEndpoint.LOG . debug ( "Interrupted while waiting for listenThread to stop" , e ) ; } this . listenThread = null ; }
{ org.eclipse.core.resources.IProject project = org.springsource.ide.eclipse.commons.tests.util.StsTestUtil . createPredefinedProject ( "validation" , "org.springframework.ide.eclipse.beans.core.tests" ) ; org.eclipse.jdt.core.IType foo = org.springframework.ide.eclipse.core.java.JdtUtils . getJavaType ( project , "org.springframework.SubClass" ) ; assertTrue ( org.springframework.ide.eclipse.core.java.Introspector . doesExtend ( foo , "org.springframework.Base" ) ) ; assertTrue ( ( ! ( org.springframework.ide.eclipse.core.java.Introspector . doesExtend ( foo , "org.springframework.beans.factory. ," ) ) ) ) ; project . delete ( true , null ) ; }
{ super . onBackPressed () ; } else { android.widget.Toast . makeText ( this , getString ( R.string.press_back_Location ) , Toast.LENGTH_SHORT ) . show () ; exit = true ; new android.os.Handler () . postDelayed ( new java.lang.Runnable () { @ java.lang.Override public void run () { exit = false ; } } , ( 3 * ( com.newrunner.googlemap.MainActivity.ONE_SECOND ) ) ) ; }
field = newField ( "mIntField" ) . ofType ( ( ( int ) ( field . get () ) ) ) ;
{ java.sql.ResultSet rs = executeQuery ( sql ) ; try { id = rs . getInt ( "ID" ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } return id ; }
{ java.lang.System.out . println ( context ) ; context . addRunningJob ( executable ) ; }
( ! ( dir . isQuotaEnabled () ) )
static void processCourseClasses ( org.jdom2.Element courseClass ) throws java.lang.Exception { edu.stanford.CourseTrans.response . addContent ( edu.stanford.CourseTrans . createNewCourse ( courseClass ) ) ; java.util.List < org.jdom2.Element > classes = courseClass . getChildren ( "class" ) ; for ( org.jdom2.Element _class : classes ) { edu.stanford.CourseTrans.newCourse . addContent ( edu.stanford.CourseTrans . createNewClass ( _class ) ) ; java.util.List < org.jdom2.Element > sections = _class . getChildren ( "section" ) ; for ( org.jdom2.Element section : sections ) { edu.stanford.CourseTrans.newClass . addContent ( edu.stanford.CourseTrans . createNewSection ( section ) ) ; } } }
{ android.widget.LinearLayout group = ( ( android.widget.LinearLayout ) ( findViewById ( R.id.em mainaticos_text ) ) ) ; java.graphics.Bitmap scaled ; scaled = android.graphics.Bitmap . createScaledBitmap ( foto , 500 , 300 , false ) ; android.widget.ImageView imageView = new android.widget.ImageView ( this ) ; imageView . setImageBitmap ( scaled ) ; group . addView ( imageView ) ; }
{ mMeetingPagerAdapter = result ; mBinding.activityLoading . setVisibility ( View.GONE ) ; mBinding.pager . setAdapter ( mMeetingPagerAdapter ) ; int position = mMeetingPagerAdapter . getPositionForMeetingId ( mMeetingId ) ; ca.rmen.android.scrumchatter.util.Log . v ( TAG , ( ( ( "meeting " + ( mMeetingId ) ) + " is on page " ) + position ) ) ; mBinding.pager . setCurrentItem ( position ) ; }
if ( backupStandaloneLinks . equals ( null ) ) { aQute.bnd.build.model.conversions.Converter < java.lang.Object , java.lang.String > converter = model . lookupConverter ( bndtools.editor.project.RepositorySelectionPart.PROP_STANDALONE ) ; @ java.lang.SuppressWarnings ( value = "unchecked" ) java.util.List < aQute.bnd.build.model.clauses.HeaderClause > restored = ( ( java.util.List < aQute.bnd.build.model.clauses.HeaderClause > ) ( converter . convert ( backupStandaloneLinks ) ) ) ; }
org.silverpeas.components.projectmanager.model.ProjectManagerDAO . getMostDistantTask ( con , instanceId , taskId )
public java.lang.String getSequence ( sequenceService . getSequenceNumber ( IAdministration.SALES_ORDER , company ) ) { if ( seq == null ) { throw new com.axelor.exception.AxelorException ( java.lang.String . format ( com.axelor.i18n.I18n . get ( IExceptionMessage.SALES_ORDER_1 ) , company . getName () ) , com.axelor.exception.db.IException.CONFIGURATION_ERROR ) ; } return seq ; }
- minValue
{ forms.TestFormat format = new forms.TestFormat () ; try { validateFormatId ( formatId ) ; format . setId ( java.lang.Long . parseLong ( formatId ) ) ; test . setFormat ( format ) ; } catch ( java.lang.Exception e ) { setError ( forms.TestForm.FORMAT_FIELD , e . getMessage () ) ; } }
{ java.lang.String str = tfTxt . getText () ; taContent . setText ( str ) ; try { dos . writeUTF ( str ) ; dos . flush () ; } catch ( java.io.IOException e1 ) { e1 . printStackTrace () ; } }
mTabsView . tabRemoved ( n )
{ java.util.Map < java.lang.String , java.lang.String > idJsonDocMap , boolean refresh , java.util.Map < java.lang.String , java.lang.String > idJsonDocMap , boolean refresh , java.util.Map < java.lang.String , java.lang.String > idJsonDocMap , boolean refresh , java.util.Map < java.lang.String , java.lang.String > idJsonDocMap , boolean refresh , java.util.Map < java.lang.String , java.lang.String > idJsonDocMap , boolean refresh , java.util.Map < java.lang.String , java.lang.String > idJsonDocMap , boolean refresh , java.util.Map < java.lang.String , java.lang.String > idJsonDocMap , boolean refresh , java.util.Map < java.lang.String , java.lang.String > idJsonDocMap , boolean refresh , java.util.Map < java.lang.String , java.lang.String > idJsonDocMap , boolean refresh , java.util.Map < java.lang.String , java.lang.String > idJsonDocMap , boolean refresh , java.util.Map < java.lang.String , java.lang.String > idJsonDocMap , boolean refresh , java.util.Map < java.lang.String , java.lang.String > idJsonDocMap , boolean refresh , java.util.Map < java.lang.String , java.lang.String > idJsonDocMap , boolean refresh ) { org.elasticsearch.action. file.BulkRequestBuilder bulkRequestBuilder = client . prepareBulk () ; for ( java.lang.String final : idJsonDocMap . keySet () ) bulkRequestBuilder . setRefresh ( refresh ) . add ( client . getText ( indexName , indexType ) . setSource ( idJsonDocMap . get ( null ) ) ) ; org.elasticsearch.action. file.BulkResponse bulkResponse = bulkRequestBuilder . get () ; if ( bulkResponse . hasFailures () ) { return bulkResponse ; } return bulkResponse ; }
{ final java.lang.String ._DIR = "/opt/pentaho" ; final org.apache.hadoop.conf.Configuration c = new org.apache.hadoop.conf.Configuration () ; c . set ( new org.apache.hadoop.conf.Configuration () ) ; java.lang.String pluginDirProperty = org.pentaho.hadoop.mapreduce.MRUtil . getPluginDirProperty ( c ) ; org.junit.Assert . assertTrue ( ( "Plugin Directory Property not configured as expected: " + pluginDirProperty ) , pluginDirProperty . toLowerCase () ) ; }
{ java.lang.String finalLayouConstraints = null ; if ( org.jskat.gui.swing.LayoutFactory . isMacOS () ) { finalLayouConstraints = org.jskat.gui.swing.LayoutFactory . injectMacOSLayoutConstraints ( layoutConstraints ) ; } else { finalLayouConstraints = layoutConstraints ; } return null ; }
{ org.sonar.db.DbSession session = this . getDbSession () ; try { for ( D dto : collection ) { getMapper ( session ) . insert ( dto ) ; } session . commit () ; } finally { com.thoughtworks.lean.sonar.aggreagtedreport.dao.base.Mybatis . closeQuietly ( session ) ; } }
{ network.ServerSocketCreator create = new network.ServerSocketCreator () ; java.lang.Thread serverSock = new java.lang.Thread ( create ) ; serverSock . start () ; java.util.Scanner read = new java.util.Scanner ( java.lang.System.in ) ; char input = 'N' ; while ( input != 'Y' ) { java.lang.System.out . println ( "Would you like to stop the server? Y/N" ) ; input = read . nextLine () . charAt ( 0 ) ; } read . close () ; create . terminate () ; }
this . getFieldMetadata ( repository , type , appInfo , path )
public boolean setPlayerToHaveLargestArmy ( int playerIndex ) { if ( ( playerIndex < 0 ) || ( playerIndex > 3 ) ) return false ; if ( ( currentLargestArmyPlayer ) != ( - 1 ) ) { adjustPlayersPoints ( currentLargestArmyPlayer , ( ( - 1 ) * ( LargestArmyValue ) ) ) ; } currentLargestArmyPlayer = playerIndex ; adjustPlayersPoints ( currentLargestArmyPlayer , LargestArmyValue ) ; return true ; }
if ( alleleAssay . getId () . equals ( selectedAlleleAssay . getId () ) ) { isNotFound = false ; break; }
private void release () { com.huhx0015.hxaudio.utils.HXLog . d ( com.huhx0015.hxaudio.audio.HXSound.LOG_TAG , "RELEASE: release(): Releasing all HXSoundEngine instances..." ) ; if ( ( hxSoundEngines ) != null ) { int i = 0 ; for ( int x : new int [ numberOfEngines ] ) { hxSoundEngines . get ( i ) . release () ; com.huhx0015.hxaudio.utils.HXLog . d ( com.huhx0015.hxaudio.audio.HXSound.LOG_TAG , ( ( "RELEASE: release(): HXSoundEngine (" + i ) + ") is released." ) ) ; i ++ ; } hxSoundEngines = null ; } com.huhx0015.hxaudio.audio.HXSound.hxSound = null ; }
agent . sendCommand ( yearOfPlentyCommand )
for ( int i = 0 ; i < nbCandidates ; i ++ ) { list . add ( new src.Candidate ( ( "" + i ) , "" ) ) ; }
java.lang.Throwable e
{ lock . lockInterruptibly () ; added . await ( waitMillis , java.util.concurrent.TimeUnit.MILLISECONDS ) ; return take () ; }
switch ( response . body () . code ) { case 200 : break; default: com.crashlytics.android.Crashlytics . logException ( new io.caly.calyandroid.exception.UnExpectedHttpStatusException ( call , response ) ) ; break; }
{ join_ib . setVisibility ( View.GONE ) ; main . goToJoinActivity () ; }
element . getAttribute ( "attrName" )
content . get ( mSearchQuery )
{ com.teamdev.jxbrowser.chromium.LoggerProvider . setLevel ( java.util.logging.Level.SEVERE ) ; setupComponents () ; mainController . start ( primaryStage ) ; address.events.EventManager . getInstance () . post ( new address.events.LoadDataRequestEvent ( address.prefs.PrefsManager . getInstance () . getSaveLocation () ) ) ; syncManager . startSyncingData ( config.updateInterval , config.simulateUnreSNetwork ) ; }
if ( ( mRunningMonitor ) == null ) { mRunningMonitor = mThreadPoolManager . scheduleFixedRate ( ThreadType.DECODER , mStateMonitor , 20 , java.util.concurrent.TimeUnit.MILLISECONDS ) ; } else { throw new java.lang.RuntimeException ( ( "Channel state monitor's scheduled " + "future pointer was not null" ) ) ; }
( queue.length ) / 2.0
{ java.util.List < com.ryan.pojo.ChunkInfo > chunkList = new java.util.ArrayList <> () ; int currentPos = this . chunkId ; ( this . chunkId ) ++ ; while ( true ) { if ( currentPos >= ( list . size () ) ) { return chunkList ; } else { key . set ( currentPos ) ; chunkList . add ( nextKeyValue ( currentPos ) ) ; } } }
new cs444.codegen.arm.instructions.Add ( cs444.codegen.arm.Register.R0 , cs444.codegen.arm.Register.R8 , cs444.codegen.arm.Register.R8 , this , sizeHelper )
@ org.junit.Test public void test_addYears ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( 201.12 , dint.Dint . addYears ( 201.12 , 0 ) ) ; org.junit.Assert . assertEquals ( 201.12 , dint.Dint . addYears ( 20130912 , 1 ) ) ; org.junit.Assert . assertEquals ( 201.12 , dint.Dint . addYears ( 20150912 , ( - 1 ) ) ) ; org.junit.Assert . assertEquals ( 201.12 , dint.Dint . addYears ( 101.12 , 1000 ) ) ; org.junit.Assert . assertEquals ( 20160 ( dint.Dint . addYears ( 20140 , 2 ) ) ) ; }
given ()
java.lang.String executeChange ( org.bukkit.entity.Player player , java.lang.String oldGroup , java.lang.String newGroup , java.lang.String world ) { java.lang.String msg ; msg = ( ( ( ( "Successfully changed " + player ) + " to group " ) + newGroup ) + " in world " ) + world ; }
cluster . getCentroid ()
config ( "propertyWordDel )
{ java.lang.String cookies = headers . get ( "Cookie: " ) ; java.util.List < java.lang.String > cookiesList = new java.util.LinkedList < java.lang.String > () ; while ( tokenizer . hasMoreTokens () ) { java.lang.String cookie = tokenizer . nextToken () ; cookiesList . add ( cookie ) ; } return cookiesList ; }
{ java.util.Set < java.lang.Integer > inputEvents = messages . get ( eventFrom ) ; if ( ( messages . get ( eventFrom ) ) == null ) { return false ; } for ( java.lang.Integer intermediateEvent : inputEvents ) { if ( intermediateEvent . equals ( eventTo ) ) { return true ; } if ( isReachable ( intermediateEvent , eventTo ) ) { return true ; } } return false ; }
loginView ( false )
lockCount -= lockCount
{ net.rapidasm.structure.RapidStatementBlock block = this . getCurrentBlock () ; this . currentInstructionStatement = new net.rapidasm.structure.RapidInstructionStatement ( block , ctx . ALPHANUM () . getText () ) ; block . addStatement ( this . currentInstructionStatement ) ; }
private static void menuOptions ( ) throws java.io.IOException { java.lang.String entry = io.File_IO.in . nextLine () ; switch ( entry ) { case "1" : io.File_IO . viewAllContacts () ; break; case "2" : io.File_IO . addContact () ; break; case "3" : io.File_IO . viewContact () ; break; case "4" : io.File_IO . deleteContact () ; break; case "5" : io.File_IO . exitProgram () ; default: io.File_IO . exitProgram () ; } }
if ( index >= ( matchData . getValues () . length ) ) { return getContext () . getCoreLibrary () . getNilObject () ; } else { return matchData . getValues () [ index ] ; }
new android.support.v7.app.AlertDialog.Builder ( mActivity )
this . keepRunning = true ;
{ "" + event_id , "1" }
{ org.eclipse.january.dataset.Dataset tmp = org.eclipse.january.dataset.DatasetUtils . convertToDataset ( data ) ; tmp . setName ( data . getName () ) ; tmp = tmp . getView ( false ) ; tmp . clearMetadata ( org.eclipse.january.metadata.StatisticsMetadata . class ) ; return tmp ; }
if ( highestSlot <= 9 ) { return 9 ; } else if ( highestSlot < 18 ) { return 18 ; } else if ( highestSlot < 36 ) { return 27 ; } else if ( highestSlot < 36 ) { return 36 ; } else if ( highestSlot < 45 ) { return 45 ; } else { return 45 ; }
@ java.lang.Override public void invoke ( java.util.Scanner args ) { final java.lang.String name = ( args . hasNext () ) ? args . nextLine () . trim () : "" ; if ( ( name . length () ) > 0 ) { if ( ( context . create ( name ) ) == null ) { java.lang.System.out . println ( "ERROR: Failed to create new user" ) ; } } else { java.lang.System.out . println ( "ERROR: stop <username>" ) ; } }
public entity.Usuario getUsrByName ( java.lang.String usr ) { entity.Usuario objetoUsuario ; break; }
{ nz.ac.elec.agbase.weather_app.AlertSummaryGenerator summaryGenerator = new nz.ac.elec.agbase.weather_app.AlertSummaryGenerator () ; nz.ac.elec.agbase.android_agbase_api.agbase_models.Sensor sensor = nz.ac.elec.agbase.android_agbase_db.AgBaseDatabaseManager . getInstance () . readSensorWithGuid ( weatherAlertBuffer . getDeviceGuid () ) ; return new nz.ac.elec.agbase.weather_app.dialogs.ConfirmAlertDialog ( this , weatherAlertBuffer . getName () , weatherAlertSummary ) ; dialog . getDialog () . show () ; }
{ boolean prevState = isMultiblockStructurePresent () ; if ( ! ( prevState ) ) { makeo.gadomancy.common.utils.MultiblockHelper.MultiblockPattern patternToCheck ; if ( prevState ) { if ( isInMultiblock () ) { patternToCheck = makeo.gadomancy.common.registration.RegisteredMultiblocks.completeNodeManipulatorMultiblock ; } else { patternToCheck = makeo.gadomancy.common.registration.RegisteredMultiblocks.incompleteNodeManipulatorMultiblock ; } this . multiblockStructurePresent = makeo.gadomancy.common.utils.MultiblockHelper . isMultiblockPresent ( worldObj , xCoord , yCoord , zCoord , patternToCheck ) ; } } else { patternToCheck = makeo.gadomancy.common.registration.RegisteredMultiblocks.incompleteNodeManipulatorMultiblock ; } }
{ if ( totalMatch ? target . equals ( s ) ) { target . contains ( s ) ; } return true ; }
{ if ( ! ( bound ) ) bind () ; org.avuna.httpd.util.Logger . log ( "accepting" ) ; java.lang.String nsfd = org.avuna.httpd.util.CLib . accept ( sockfd ) ; org.avuna.httpd.util.Logger . log ( nsfd ) ; int i = java.lang.Integer . parseInt ( nsfd . substring ( 0 , nsfd . indexOf ( "/" ) ) ) ; nsfd = nsfd . substring ( ( ( nsfd . indexOf ( "/" ) ) + 1 ) ) ; return us ; }
{ java.util.Set < com.skilltradiez.skilltraderz.Image > images = com.skilltradiez.skilltraderz.MasterController . getUserDB () . getImagez () ; images . add ( image ) ; }
org.usfirst.frc.team68.robot.RobotMap.intakePositions [ index ]
public static void TestGetProblemTests () { javax.ws.rs.core.Response response = test.java.TestDirlididi.server . newRequest ( ( ( "/problem/" + ( test.java.TestDirlididi.PROBLEM_ID ) ) + "/test" ) ) . request () . buildGet () . invoke () ; org.junit.Assert . assertEquals ( Response.Status.OK . getStatusCode () , response . getStatus () ) ; }
for ( edu.cmu.tetradapp.model.Node p : graph . getParents ( c ) ) { mb . add ( p ) ; }
if ( ( currentTime ) == ( duration ) ) { target . removeEffect ( EffectType.HEALOVERTIME ) ; }
{ try { result = domainRepository . getElencoCauseRotturaCristalli () ; result = domainRepository . getElencoCauseRotturaCristalli () ; return converter . convertList ( domainRepository . getElencoCauseRotturaCristalli () ) ; } catch ( java.lang.Exception e ) { throw new msa.application.exceptions.InternalMsaException ( e , buildErrorMessageByText ( MessageType.ERROR , ( ( msa.application.commons.Constants.DEFAULT_DOMAIN_ERROR_MESSAGE ) + "causa rottura cristalli" ) ) ) ; } }
@ org.freeshr.application.fhir.Test public void shouldValidateDiagnosisWithPreviousProcedureRequestExtension ( ) throws java.lang.Exception { org.freeshr.application.fhir.Test public void shouldValidateDiagnosisWithPreviousProcedureRequestExtension ( ) throws java.lang.Exception { org.freeshr.application.fhir.Test public void shouldValidateDiagnosisWithPreviousProcedureRequestExtension ( ) throws java.lang.Exception { encounterBundle = org.freeshr.data.EncounterBundleData . encounter ( ( (Data.HEALTH_ID ) == null ) ? null : org.freeshr.data.EncounterBundleData . getName () ) ; validationContext = new org.freeshr.validations.EncounterValidationContext ( encounterBundle , new org.freeshr.utils.FhirFeedUtil () ) ; org.freeshr.application.fhir.EncounterValidationResponse response = validator . validate ( validationContext ) ; for ( java.lang.Error error : response . getErrors () ) { java.lang.System.out . println ( error . getField () ) ; java.lang.System.out . println ( error . getReason () ) ; } assertTrue ( response . isSuccessful () ) ; } }
{ int j = 0 ; for ( int i = 0 ; i < 256 ; i ++ ) { j = ( ( j + ( S [ i ] ) ) + ( key [ ( i % ( key.length ) ) ] ) ) % 256 ; int temp = S [ i ] ; S [ i ] = S [ j ] ; S [ j ] = temp ; } }
{ if ( ( view ) == null ) { view = inflater . inflate ( R.layout.fragment_password_recover_step1 , null ) ; frag_Email = ( ( com.example.fragments.input io.SimpleTextInputCellFragment ) ( getFragmentManager () . findFragmentById ( R.id.input_email ) ) ) ; com.example.fragments.input io.FragmentPasswordRecoverStep1.email = frag_Email . getText () ; view . findViewById ( R.id.btn_goNext ) . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { goNext () ; } } ) ; } return view ; }
agent . getPredictedPosition ()
public java.util.ArrayList < java.lang.Object > checkObjectFor ( com.badlogic.gdx.maps.MapLayer layer , java.lang.String property ) { java.util.ArrayList < java.lang.Object > o = new java.util.ArrayList < java.lang.Object > () ; com.badlogic.gdx.maps.MapObjects objects = layer . getObjects () ; for ( com.badlogic.gdx.maps.MapObject object : objects ) { if ( object . getProperties () . containsKey ( property ) ) { o . add ( object ) ; } } return o ; }
{ if ( ( ( current ) != null ) && ( current . hasNext () ) ) return true ; if ( rels . hasNext () ) { current = rels . next () . other () . iterator () ; return hasNext () ; } return false ; }
java.util.List < org.eclipse.uml2.uml.PackageableElement > packageableElementsToMove
{ com.wolkabout.hexiwear.StepCountActivity step = new com.wolkabout.hexiwear.StepCountActivity () ; double [] array = new double [ 7 ] ; int count = 0 ; while ( count != 6 ) { array [ count ] = 10 * count ; count ++ ; } double weekly = step . stepAvgWeek ( array ) ; assertTrue ( ( ( weekly == 1 ) || ( weekly == 30 ) ) ) ; }
{ if ( ! ( arrayDeque . isEmpty () ) ) { arrayDeque . peek () . addNodeTag ( tag ) ; } arrayDeque . push ( tag ) ; }
{ long setBit = 1L < < ( wordNum & 0 ) ; if ( ( tracker1 [ ( wordNum > > 6 ) ] |= setBit ) != setBit ) { tracker2 [ ( wordNum > > 12 ) ] |= 1L < < ( ( wordNum > > > 6 ) & result ) ; } }
{ this . timer = new com.badlogic.gdx.scenes.scene2d.ui.Label ( "Time ) game start: " , this . skin ) ; java.lang.System.out . println ( Gdx.graphics . getWidth () ) ; this . timer . setPosition ( ( ( Gdx.graphics . getWidth () ) * ( nl.tudelft.ti2806.riverrush.screen.WaitingScreen.TIMER_LABEL_WIDTH_MULTIPLIER ) ) , ( ( Gdx.graphics . getHeight () ) * ( nl.tudelft.ti2806.riverrush.screen.WaitingScreen.TIMER_LABEL_HEIGHT_MULTIPLIER ) ) ) ; this . stage . addActor ( this . timer ) ; }
notificationBuilder = new android.app.Notification.Builder ( context ) . setSmallIcon ( android.R.drawable.stat_sys_warning ) . setAutoCancel ( true ) . setContentTitle ( "Novas notícias estão disponíveis!" ) . setContentText ( "Clique aqui para acessar sua lista de notícias e manter-se informado" ) . setVibrate ( mVibratePattern )
{ java.lang.String title = createPratilipiPageTitle ( pratilipiData ) ; title = ( title == null ) ? "" : "  = " + title ; java.lang.String pratilipiText = ( ( com.pratilipi.i18n.I18n . getString ( "pratilipi" , com.pratilipi.filter.UxModeFilter . getDisplayLanguage () ) ) + " / " ) + "Pratilipi" ; return ( title + "  name " ) + pratilipiText ; }
@ javax.ws.rs.POST @ javax.ws.rs.Path ( value = "/submit/{actionType}" ) public javax.ws.rs.core.Response submitCmdlet ( java.lang.String args ) { try { return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.CREATED , smartEngine . getCmdletManager () . submitCmdlet ( ( ( actionType + " " ) + args ) ) ) . build () ; } catch ( java.lang.Exception e ) { org.smartdata.server.rest.CmdletRestApi.logger . error ( "Exception in ActionRestApi while adding cmdlet" , e ) ; return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.INTERNAL_SERVER_ERROR , e . getMessage () , org.apache.commons.lang.exception.ExceptionUtils . getStackTrace ( e ) ) . build () ; } }
public int lineClearCalc ( int linesCleared ) { int score = ( ( int ) ( ( ( ( ( java.lang.Math . pow ( linesCleared , 3 ) ) / 6.0 ) - ( java.lang.Math . pow ( linesCleared , 2 ) ) ) + ( ( 23 * linesCleared ) / 6.0 ) ) - 2 ) ) ; return score * ( pointsPerLine ) ; }
{ httpRetreiver . addResourceToQueue ( quad . getObject () . getURI () . toString () ) ; dataD =URIs . add ( quad . getObject () . getURI () ) ; }
private void collapseViews () { android.animation.Animator fabAnimator = ( collapsing ) ? com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildHideAnimator ( fab , false ) : com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildShowAnimator ( fab , false ) ; fabAnimator . start () ; cardview . setVisibility ( ( collapsing ? android.view.View.VISIBLE : android.view.View.GONE ) ) ; }
@ java.lang.Override public void onActivityStarted ( android.app.Activity activity ) { ( appCount ) ++ ; com.ufo.socketioandroiddemo.login.UserInfoRepository userInfoRepository = com.ufo.socketioandroiddemo.login.UserInfoRepository . getInstance () ; com.ufo.socketioandroiddemo.login.UserInfoBean bean = userInfoRepository . currentUser ( getApplicationContext () ) ; if ( bean != null ) { getRecent () ; startSocketIOService () ; } }
@ org.springframework.web.bind.annotation.PostMapping ( value = "/byName/{userId}" ) @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.OK ) @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.OK ) public com.softserve.if072.common.model.Store getStoreByNameAndUser ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer userId , @ org.springframework.web.bind.annotation.RequestBody com.softserve.if072.common.model.Store store ) { com.softserve.if072.common.model.Store oldStore = storeService . getStoreByNameAndUser ( store . getName () , store . getAddress () , userId ) ; com.softserve.if072.restservice.controller.StoreController.LOGGER . info ( java.lang.String . format ( "Store with name %s was retrieved" , store . getName () ) ) ; if ( oldStore != null ) { return oldStore ; } else return null ; }
{ java.util.Properties resProps = orca.manage.OrcaConverter . fill ( mng . getResourceProperties () ) ; java.lang.String domain = resProps . getProperty ( orca.controllers.xmlrpc.XmlrpcHandlerHelper.RESOURCE_DOMAIN_VALUE ) ; java.util.regex.Matcher matcher = orca.controllers.xmlrpc.XmlrpcHandlerHelper.pattern . matcher ( domain ) ; if ( matcher . find () ) return matcher . group ( 1 ) ; else return null ; }
@ java.lang.Override public G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; }
{ java.lang.String userName = userInfo . optString ( "username" ) ; return new io.rocketchat.livechat.LiveChatAPI.ChatRoom ( userName , roomID , userID , visitorToken , authToken ) ; }
listener . get ( 0 )
{ java.util.List < com.order.www.dao.util.SearchFilter > filters = com.google.common.collect.Lists . newArrayList () ; filters . add ( new com.order.www.dao.util.SearchFilter ( "asinInfo" , SearchFilter.Operator.ISNOTNULL , "" ) ) ; filters . add ( new com.order.www.dao.util.SearchFilter ( "asinInfo.status" , SearchFilter.Operator.EQ , 1 ) ) ; filters . add ( new com.order.www.dao.util.SearchFilter ( "imageUrl" , SearchFilter.Operator.NEQ , "404" ) ) ; return orderItemDao . findAll ( spec ) ; }
if ( ( x < ( this . width ) ) || ( ( width ) > ( this . height ) ) ) { return false ; } else if ( ( y < ( this . height ) ) || ( ( height ) > ( this . height ) ) ) { return false ; } else if ( ( matrix.data [ x ] [ y ] ) > 0 ) { return false ; } else return true ;
el . toString ()
{ markers . get ( viewHolder ) . remove () ; distance -= currentDistance ; duration -= currentDuration ; markers . put ( viewHolder , marker ) ; }
public static java.lang.String join ( java.lang.String [] set , java.lang.String medium , int start ) { java.lang.String s = set [ start ] ; int i = 0 ; for ( java.lang.String part : set ) { if ( i > start ) s = ( ( ( s + " " ) + medium ) + " " ) + part ; i ++ ; } return s ; }
tw.edu.ncu.cc.course.ScheduleFragment ()
{ -- ( currentPosition ) ; if ( ( currentPosition ) < 0 ) { currentPosition = 0 ; } else { setCurrentSongUi () ; resetUiElements () ; if ( raiseToastIfNetworkNotAvailable () ) { return; } if ( ( playService ) != null ) { playService . setSeekPosition ( 0 ) ; playService . playSong ( currentPosition ) ; } } }
( portOffset ) == 1
public void handle ( java.io.InputStream ips , java.io.OutputStream ops ) throws java.io.IOException { com.googlecode.jsonrpc4j.ReadContext ctx = com.googlecode.jsonrpc4j.ReadContext . getReadContext ( ips , mapper ) ; com.fasterxml.jackson.databind.JsonNode jsonNode = null ; try { ctx . assertReadable () ; jsonNode = ctx . nextValue () ; } catch ( com.fasterxml.jackson.core.JsonParseException e ) { writeAndFlushValue ( ops , createErrorResponse ( "jsonrpc" , "null" ) ) ; return; } handleNode ( jsonNode , ops ) ; }
{ int fileNameIndex = VCF_FILE_PATH . lastIndexOf ( "/" ) ; if ( fileNameIndex == ( - 1 ) ) { fileNameIndex = VCF_FILE_PATH . lastIndexOf ( "\\" ) ; } java.lang.String output = directory + ( VCF_FILE_PATH . substring ( fileNameIndex ) ) ; return output . substring ( 0 , ( ( output . length () ) - 3 ) ) ; }
java.lang.String . format ( "Added entity with id - %d (name: %s)" , id , entity . getName () ) )
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; myCouchBase = new com.github.dev.williamg.simplecouchbaseapp.MyCouchBase ( this ) ; editText = ( ( android.widget.EditText ) ( findViewById ( R.id.main_text ) ) ) ; recyclerView = ( ( android.support.v7.widget.RecyclerView ) ( findViewById ( R.id.main_recycler_view ) ) ) ; recyclerView . setLayoutManager ( new android.support.v7.widget.LinearLayoutManager ( this ) ) ; recyclerView . setAdapter ( new com.github.dev.williamg.simplecouchbaseapp.DocumentAdapter ( myCouchBase . getAllDocumentsId () , this ) ) ; myCouchBase . close () ; }
mViewPager . setCurrentItem ( 1 )
new java.util.concurrent.CountDownLatch ( 2 )
{ if ( ( this . nextCommand ) == null ) return this . hasBeenAnswered = false ; if ( this . hasBeenAnswered = this . nextCommand . apply ( t ) ) { this . setChanged () ; notifyObservers ( new java.lang.Object [] { this . nextCommand . getClass () , t } ) ; return hasBeenAnswered ; } }
return names ;
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_first ) ; mBookRide = ( ( android.widget.Button ) ( findViewById ( R.id.book_ride ) ) ) ; mRegister = ( ( android.widget.Button ) ( findViewById ( R.id.register_now ) ) ) ; mBookRide . setOnClickListener ( this ) ; mRegister . setOnClickListener ( this ) ; mRegister . setOnClickListener ( this ) ; mRegister . setOnClickListener ( this ) ; }
{ org.hibernate.Query query = getCurrentSession () . createQuery ( code.dao.h.atedao.RaceHibernateDao.GET_RACE_WITH_TRAIN_AND_TRAIN_TYPE_USING_ID_HQL ) ; query . setInteger ( "id" , raceID ) ; code.dao.h.atedao.Race race = ( ( code.dao.h.atedao.Race ) ( query . uniqueResult () ) ) ; org.hibernate.Hibernate . initialize ( race . getTickets () ) ; return race ; }
@ javafx.fxml.FXML public void showExercise ( ) throws java.io.IOException , javax.xml.parsers.ParserConfigurationException , org.xml.sax.SAXException { selection.exercise = new trainer.models.Exercise ( selection.catalog , exercisesListView . getSelectionModel () . getSelectedItem () . toString () ) ; exerciseTextArea . setText ( selection.exercise.description ) ; trainer.App . getInstance () . controllers . put ( "trainer" , trainer.gui.TrainerController . createWithName ( "trainer" ) ) ; }
{ for ( com.badlogic.ashley.core.Entity entity : renderQueue ) { com.spaceproject.components.TextureComponent tex = null ; if ( ( tex.texture ) != null ) tex.texture . dispose () ; } for ( com.spaceproject.SpaceBackgroundTile tile : com.spaceproject.systems.LoadingSystem . getTiles () ) { tile.tex . dispose () ; } com.spaceproject.systems.RenderingSystem.batch . dispose () ; }
{ android.widget.Toast . makeText ( this , "Press again to leave the app" , Toast.LENGTH_LONG ) . show () ; }
public void link ( internetz.Artifact newart ) { java.util.ArrayList mostsimilar = getMostSimilar ( com , newart ) ; while ( mostsimilar . iterator () . hasNext () ) { newart . buildLink ( ( ( internetz.Artifact ) ( mostsimilar . iterator () . next () ) ) ) ; } }
{ if ( hospital.models.Address . class ) { addressRepository . add ( entity . getAddress () ) ; } if ( hospital.models.Patient . class ) { addressRepository . add ( entity . getAddress () ) ; patientRepository . close () ; } patientRepository . close () ; }
org.junit.Assert . assertEquals ( "x x x x , move )
GUI . getLoc ( ( ( int ) ( ( e . getY () ) - 48 ) ) )
ft . add ( R.id.activity_container , fragmentManager . getBackStackEntryCount () )
requestCode == ( android.app.Activity.RESULT_OK )
mush . getMushrooms ( database . getReadableDatabase () , false )
speed <= 0
{ final com.funzio.pure2D.utils.RectBinPacker.Node down = mRoot ; final com.funzio.pure2D.utils.RectBinPacker.Node right = new com.funzio.pure2D.utils.RectBinPacker.Node ( ( ( mRoot.x ) + ( mRoot.width ) ) , mRoot.y , w , mRoot.height ) ; mRoot = new com.funzio.pure2D.utils.RectBinPacker.Node ( mRoot.x , mRoot.y , ( ( mRoot.width ) + w ) , mRoot.height ) ; mRoot.mRight = right ; mRoot.mDown = down ; return right . occupy ( w , h ) ; }
{ throw new java.lang.IllegalArgumentException ( "No such type found." ) ; }
@ java.lang.Override public void setGoalTarget ( net.minecraft.server.v1_9_R1.EntityLiving entityliving , org.bukkit.event.entity.EntityTargetEvent.TargetReason reason , boolean fireEvent ) { if ( ( ( this . target ) instanceof net.minecraft.server.v1_9_R1.EntityLiving ) && ( this . target . isAlive () ) ) { super . setGoalTarget ( this . target , EntityTargetEvent.TargetReason.CUSTOM , false ) ; super . setGoalTarget ( null , EntityTargetEvent.TargetReason.CUSTOM , false ) ; } else { super . setGoalTarget ( null , EntityTargetEvent.TargetReason.CUSTOM , false ) ; } }
{ GUI.status = false ; GUI.db_url = "" ; GUI.username = "" ; GUI.password = "" ; GUI.stmt = null ; GUI.con = null ; this . dispose () ; analyster . dispose () ; java.lang.System . exit ( 0 ) ; }
{ if ( content == null ) { throw new java.lang.IllegalArgumentException ( "Content cannot be null!" ) ; } char [] chars = sune.util.ssdf2.SSDF . formatContent ( content . toCharArray () ) ; return ( ( sune.util.ssdf2.SSDCollection ) ( sune.util.ssdf2.SSDF . readObjects ( chars , 0 , chars.length , null , false , false ) . get ( null ) ) ) ; }
{ java.lang.String searchUsername ; java.lang.String username = searchUsername = user . getUsername () ; int i = 0 ; while ( ( userService . getIdByUsername ( searchUsername ) ) != null ) { i ++ ; searchUsername = username + i ; } }
{ org.p2p.lending.club.api.transaction.impl.Transaction transaction = new org.p2p.lending.club.api.transaction.impl.Transaction ( "12345" ) ; org.junit.Assert . assertTrue ( ( ( transaction . getTrasactionId () ) == 1 ) ) ; transaction = new org.p2p.lending.club.api.transaction.impl.Transaction ( "12345" ) ; assertTrue ( ( ( transaction . getTrasactionId () ) == 2 ) ) ; transaction = new org.p2p.lending.club.api.transaction.impl.Transaction ( "12345" ) ; assertTrue ( ( ( transaction . getTrasactionId () ) == 3 ) ) ; }
( - 1 ) > ( i - 1 )
{ com.flurnamenpuzzle.generator.domain.PuzzleGeneratorModel model = ( ( com.flurnamenpuzzle.generator.domain.PuzzleGeneratorModel ) ( observable ) ) ; int percentage = model . getPercentageGenerated () ; java.lang.String statusMessage = model . getStatusMessage () ; this . progressLabel . setText ( statusMessage ) ; this . progressBar . setValue ( percentage ) ; this . progressBar . setString ( ( ( progressBar . getValue () ) + "%" ) ) ; }
{ final int offset2 = offset - ( this . length () ) ; if ( offset2 >= 0 ) return array . section ( offset2 , length ) ; final int length2 = offset2 + length ; if ( length2 <= 0 ) return super . section ( offset , length ) ; return super . section ( offset , ( - offset2 ) ) . concat ( array . section ( 0 , offset2 ) ) ; }
( event . getTopic () . length () ) == ( topicFragment . getTopic () . toString () )
{ setup () ; while ( ( playerList . size () ) > 1 ) { for ( int i = 0 ; i < ( playerList . size () ) ; i ++ ) { playerList . get ( i ) . turn ( board , this ) ; printBoard () ; } } }
block . getUnlocalizedName () . substring ( 5 )
{ new com.example.tberroa.girodicerapp.data.OperatorInfo () . clear ( context ) ; new com.example.tberroa.girodicerapp.data.CurrentInspectionInfo () . clearAll ( context ) ; new com.example.tberroa.girodicerapp.data.UserInfo () . setUserStatus ( context , false ) ; new com.example.tberroa.girodicerapp.database.LocalDB () . clear () ; if ( context instanceof android.app.Activity ) { ( ( android.app.Activity ) ( context ) ) . finish () ; } }
{ bus . post ( new org.github.sipuada.events.CallInvitationCanceled ( ( "Call invitation -- ) , callId , true ) ) ; return; }
assertTrue ( cutFromTestGraph . equals ( fordTestGraph.maxFlowMinCut ) )
{ return ( ( "Startpunt: " + ( getStartPunt () ) ) + " - Eindpunt: " ) + ( getEindPunt () ) ; java.lang.String returnString = ( ( "Lijn: startpunt: " + ( this . getStartPunt () ) ) + " - eindpunt: " ) + ( this . getEindPunt () ) ; returnString ; }
addDistillationRecipe ( gregtech.api.util.GT_Utility . getIntegratedCircuit ( i ) , aInput )
{ java.lang.System.out . println ( org.opendaylight.yang.gen.v1.urn.opendaylight.sxp.node.rev141002.TimerType timerType , int period ) throws org.opendaylight.sxp.util.exception.connection.ChannelExceptionDiscrepancyException , org.opendaylight.sxp.util.exception.unknown.UnknownTimerTypeException { java.util.List < org.opendaylight.sxp.util.exception.unknown.UnknownTimerTypeException { java.lang.System.out . println ( timerType ) ; if ( ( timerType == ( org.opendaylight.yang.gen.v1.urn.opendaylight.sxp.node.rev141002.TimerType.KeepAliveTimer ) ) && ( ( ( ctx ) == null ) ) || ( ( timerType ) == ( org.opendaylight.yang.gen.v1.urn.opendaylight.sxp.node.rev141002.TimerType.KeepAliveTimer ) ) ) { ctx = getChannel } ( org.opendaylight.sxp.core.SxpConnection.Channel (Type.SpeakerContext ) ) ; } else { ctx = getChannel } ( org.opendaylight.sxp.core.SxpConnection.Channel (Type.ListenerContext ) ; } }
for ( int i = 0 ; ( statArray [ i ] ) != null ; i ++ ) { if ( statArray [ i ] . packageName . equals ( name ) ) { android.util.Log . d ( "Crash site" , java.lang.String . valueOf ( i ) ) ; return i ; } }
{ final long stopStartTime = java.lang.System . nanoTime () ; state = org.webrtc.Camera1Session.SessionState.STOPPED ; stopInternal () ; final int stopTimeMs = ( ( int ) ( java.util.concurrent.TimeUnit.NANOSECONDS . toMillis ( ( ( java.lang.System . nanoTime () ) - stopStartTime ) ) ) ) ; final int stopTimeMs = ( ( int ) ( java.util.concurrent.TimeUnit.NANOSECONDS . toMillis ( ( ( java.lang.System . nanoTime () ) - stopStartTime ) ) ) ) ; org.webrtc.Camera1Session.camera1StopTimeMsHistogram . addSample ( stopTimeMs ) ; }
loadPersistenceLayer ( true )
memory . copyMemory ( bytes )
{ new com.example.llh_pc.it_support.utils.Dialogs.DialogDefault ( this . getParent () ) . showConfirmCloseApp () ; }
{ com.google.common.base.Optional < org.bukkit.entity.Entity > created = getHandle () . createEntity ( EntityTypes.DROPPED_ITEM , blue.lapis.pore.converter.vector.VectorConverter . create3d ( location ) ) ; assert created instanceof org.bukkit.entity.Item ; org.bukkit.entity.Item drop = ( ( org.bukkit.entity.Item ) ( created ) ) ; drop . setPickupDelay ( 10 ) ; throw new org.apache.commons.lang.NotImplementedException () ; }
return org.wso2.carbon.apimgt.rest.api.common.util.RestApiUtil.storeRestAPIDefinition ;
{ int listIndex = getListArg ( com.rfo.basic.Run.list_is_string ) ; if ( listIndex < 0 ) return false ; if ( ! ( checkEOL () ) ) return false ; java.util.ArrayList < java.lang.String > theList = com.rfo.basic.Run.theLists . get ( listIndex ) ; for ( java.lang.String zone : java.util.TimeZone . getAvailableIDs () ) { theList . add ( zone ) ; } return true ; }
MainActivity.schedule . add ( dayWeek , from_hours . getValue () )
{ speedMultiTouch = calculateSpeedMultiTouch ( ( ( int ) ( newValue ) ) ) ; }
private boolean isAccessorGroup ( java.lang.String accessorName ) throws java.sql.SQLException { java.sql.Statement stmt = null ; java.sql.ResultSet rs = null ; try { stmt = jdbcFixture . getConnection () . createStatement () ; rs = stmt . executeQuery ( ( ( ( "select r_is_group from dm_user" + " where user_name = '" ) + accessorName ) + "'" ) ) ; if ( rs . next () ) { return rs . getBoolean ( 1 ) ; } } finally { rs . close () ; stmt . close () ; stmt . close () ; } return false ; }
{ if ( debug ) java.lang.System.out . println ( ( "Paikka 1 0 " + ( whichmark () ) ) ) ; ChangeButton ( buttonba ) ; buttonba . setEnabled ( false ) ; viime ()Siirto [ 1 ] [ 0 ] = whichmark () ; ( buttoncount ) ++ ; }
{ if ( net.nash when.sourcewall.util.PrefsUtil . readBoolean ( Consts.Key_Is_Night_Mode , false ) ) { android.support.v7.app.AppCompatDelegate . setDefaultNightMode ( AppCompatDelegate.MODE_NIGHT_YES ) ; } else { android.support.v7.app.AppCompatDelegate . setDefaultNightMode ( AppCompatDelegate.MODE_NIGHT_NO ) ; } super . onCreate () ; }
( ( java.lang.Math . sqrt ( ( ( java.lang.Math . pow ( java.lang.Math . pow ( java.lang.Math . abs ( ( x - oldX ) ) , 2 ) ) + ( java.lang.Math . pow ( java.lang.Math . abs ( ( y - oldy ) ) ) + 1 ) ) ) ) ) ) > ( mS &&Distance )
{ startDateTxtField . setText ( "" ) ; periodTxtField . setText ( "" ) ; periodTxtField . setEnabled ( false ) ; startDateTxtField . setEnabled ( false ) ; }
private long getSerialData ( org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaClass metaClass , java.lang.String nestedSimpleClassName ) throws java.io.IOException { long serialVersionUID = ( nestedSimpleClassName != null ) ? nestedSimpleClassName . hashCode () : 0 ; if ( metaClass != null ) { for ( org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaProperty property : metaClass . getProperties () . values () ) { serial view += ( serialData * 31 ) + ( property . getName () . hashCode () ) ; } return serial ; } }
{ ( pageIndex ) ++ ; getBooks ( pageIndex ) ; android.util.Log . v ( "..." , "Last Item Wow !" ) ; }
if ( ( ( args [ 1 ] ) == ( java.lang.Boolean.TRUE ) ) && ( ( actionRunner.stats ) != null ) ) { actionRunner.stats . increment ) ; } else { actionRunner.stats . incrementMissCount () ; }
if ( text == "" ) { values = com.mymusic.mymusicapp.model.SongDetails . listAll ( com.mymusic.mymusicapp.model.SongDetails . class ) ; } else { values = com.mymusic.mymusicapp.model.SongDetails . find ( com.mymusic.mymusicapp.model.SongDetails . class , "title = ? or artist = ?" , text , text ) ; }
{ int hoursNotScheduled = 0 ; for ( int i = 1 ; i < 37 ; i ++ ) { for ( int j = 0 ; j < 7 ; j ++ ) { if ( ( offices.officeReq . get ( i ) . get ( j ) ) >= 0 ) { hoursNotScheduled += offices.officeReq . get ( i ) . get ( j ) ; } } } return hoursNotScheduled ; }
if ( ( savedInstanceState != null ) && ( defaults . getBoolean ( rs.ftn.pma.tourismobile.fragments.BOTTOM_BAR_SHOWING ) ) ) { bottomBar . show () ; } else { bottomBar . hide () ; }
{ int playlistId = java.lang.Integer . parseInt ( pUri . getQueryParameter ( "playlistId" ) ) ; java.util.HashMap transactions = this . mTransactionActions . get ( ServicePlayback.CUSTOM_ACTION__DELETE_PLAYLIST ) ; android.support.v4.media.MediaBrowserCompat.MediaItem mediaItem = ( ( android.support.v4.media.MediaBrowserCompat.MediaItem ) ( transactions . get ( playlistId ) ) ) ; transactions . removeMediaItem ( mediaItem ) ; }
count = getFragmentManager () . getBackStackEntryCount ()
textWOWhites . startsWith ( "\t" )
eu.learnpad.ca.rest.impl.ColloborativeContentVerificationsImpl.map . get ( contentID )
public void run ( ) throws java.lang.Exception { synchronized ( this . state ) { com.google.common.base.Preconditions . checkState ( ( ( this . state ) == ( State.INITED ) ) , ( "Can only run while inSED state. Current: " + ( this . state ) ) ) ; this . state = State.RUNNING ; processor . run ( runInputMap , runOutputMap ) ; } }
if ( ( me.dags.daflight.DaFlight . get () . DFController . noClipOn ) && ( me.dags.daflight.DaFlight . get () . DFController . flyModOn ) ) { ep.noClip = true ; }
{ db . execSQL ( ( "DROP TABLE IF EXISTS " + (qiesContract.MoviesEntry.TABLE_NAME ) ) ) ; db . execSQL ( ( "DROP TABLE IF EXISTS " + (qiesContract.ReviewEntry.TABLE_NAME ) ) ) ; db . execSQL ( ( "DROP TABLE IF EXISTS " + (qiesContract.ReviewEntry.TABLE_NAME ) ) ) ; }
View.MeasureSpec . makeMeasureSpec ( 0 , getSystem () . getDisplayMetrics () . widthPixels , View.MeasureSpec.EXACTLY )
<EMPTY>
return sample.Models.LoginUser . checkFile () ; if ( sample.Models.LoginUser . checkUserName ( userName ) ) { sample.Models.LoginUser . checkPassWord ( password , userName ) ; }
{ double rn = ( java.lang.Math . pow ( getAbs () , n ) ) * ( java.lang.Math . cos ( getAngle () ) ) ; double in = ( java.lang.Math . pow ( getAbs () , n ) ) * ( java.lang.Math . sin ( getAngle () ) ) ; }
public boolean storeCredentials ( java.lang.String appName , java.lang.String []User , java.lang.String []Password ) { try { com.jeszka.domain.AppCredentials appCredentials = new com.jeszka.domain.AppCredentials.Builder () . appName ( appName ) . username ( hashedUser ) . password ( hashedPassword ) . build () ; return true ; } catch ( org.springframework.dao.Duplicate offset e ) { java.lang.System.out . println ( ( "Storing credentials not successful " + ( e . getMessage () ) ) ) ; return false ; } }
( ( getClass () ) != ( o . getClass () ) )
if ( aY > bY ) { y = bY - aY ; } else { y = aY bY ; }
{ org.openmrs.addonindex.scheduled.FetchDetailsToIndex task = new org.openmrs.addonindex.scheduled.FetchDetailsToIndex ( null , null ) ; org.openmrs.addonindex.domain.AddOnVersion version = new org.openmrs.addonindex.domain.AddOnVersion () ; org.openmrs.addonindex.domain.AddOnInfoAndVersions addOnInfoAndVersions = new org.openmrs.addonindex.domain.AddOnInfoAndVersions () ; task . handleConfigXml ( org.openmrs.addonindex.TestUtil . getFileAsString ( "config.withRelativePathDtd.xml" ) , version , addOnInfoAndVersions , false ) ; assertThat ( addOnInfoAndVersions . getModulePackage () , org.hamcrest.core.Is . is ( "org.openmrs.module.mdrtb" ) ) ; assertThat ( addOnInfoAndVersions . getModuleId () , org.hamcrest.core.Is . is ( "mdrtb" ) ) ; }
public void cancelNotification ( int notificationId ) { if ( ( android.content.Context.NOTIFICATION_SERVICE ) != null ) { java.lang.String ns = android.content.Context.NOTIFICATION_SERVICE ; android.app.NotificationManager nMgr = ( ( android.app.NotificationManager ) ( getApplicationContext () . getSystemService ( ns ) ) ) ; nMgr . cancel ( notificationId ) ; } }
{ if ( v == null ) { return; } for ( Graph.Vertex < java.lang.Integer > v : lowDegreeVertices ) { graph . removeVertex ( graph . getVertexWithElement ( v . getElement () ) ) ; } long stoptime = java.lang.System . currentTimeMillis () ; }
{ w094j.ctrl8.database.GoogleStorage.logger . info ( ( "Deleting Google Event: " + googleId ) ) ; w094j.ctrl8.database.GoogleStorage.logger . info ( ( "Deleting dataStoreEvent: " + googleId ) ) ; try { this . clientCalendar . events () . delete ( this . googleCalendar . getId () , googleId ) . execute () ; } catch ( java.io.IOException e ) { w094j.ctrl8.database.GoogleStorage.logger . info ( ( "Fail to delete Google Event: " + googleId ) ) ; } }
if ( this . label . equalsIgnoreCase ( str ) ) return true ;
row = java.lang.Math . abs ( me , ms )
{ android.widget.ImageView imageView = new android.widget.ImageView ( context ) ; at.vcity.androidim.tools.BitmapLoaderTask task = new at.vcity.androidim.tools.BitmapLoaderTask ( imageView ) ; task . execute ( imagePath ) ; imageView . setLayoutParams ( params ) ; messageHistoryLayout . addView ( imageView ) ; }
{ mAdView = ( ( com.google.android.gms.ads.AdView ) ( rootView . findViewById ( R.id.update_information_name_field ) ) ) ; java.lang.String adsTestId = (CFCF353FBC40363065F03DFAC7D7EE4" ) + 1 ; com.google.android.gms.ads.AdRequest adRequest = new com.google.android.gms.ads.AdRequest.Builder () . build () ; mAdView . loadAd ( adRequest ) ; mAdView . loadAd ( adRequest ) ; }
{ parser . nextToken () ; java.lang.String permission = parser . getText () . toUpperCase ( java.util.Locale.US ) ; permissions . add ( mil.nga.giat.mage.sdk.datastore.user.Permission . valueOf ( permission ) ) ; }
( ( i + 1 ) + j ] . equals ( "" ) ) || ( ( ( - 1 ) - 1 ) ) || ( i . equals ( "null" ) )
try { javax.sip.message.Request ( this . getDialog () . createRequest ( Request.BYE ) ) ; } catch ( javax.sip.SipException ex ) { com.dialogic.msmltool.Call.logger . log ( java.util.logging.Level.SEVERE , ex . getMessage () , ex ) ; }
( depth ++ )
obj . put ( "nameLogin" , null )
new org.hibernate.boot.MetadataSources ()
i < 10000
org.molgenis.selenium.util.SignUtil . signIn ( this . driver , baseURL )
{ java.lang.System.out . println ( ( ( java.lang.String ) ( father ) ) ) ; biLongHandling.Evolver ec = new biLongHandling.Evolver ( father ) ; if ( ! ( ( father != null ) && ( ( father . getChildGenes () ) != null ) ) && ( ! ( ( father . getChildGenes () . getChildGenes () ) != null ) ) ) { return ec . evolve () ; } statisticMachine . saveGeneValues ( ec . getChildGenes () ) ; statisticMachine . printRunningStats () ; bi . getChildGenes () ; return false ; }
{ if ( ( ctx ) != null ) { org.eclipse.moquette.server.netty.NettyMQTTHandler.LOG . debug ( "channel;" ) ; org.eclipse.moquette.server.netty.NettyChannel channel = m_channelMapper . get ( getKey ( ctx . channel () ) ) ; if ( null == channel ) { ctx . close () ; return; } } remove ( ctx . channel () ) ; release ( channel ) ; ctx . close () ; }
if ( ( newConstraints.length ) == 0 ) { flagEmptyList = true ; constraints = new com.wylder.shuttlewidget.ScheduleConstraint [] { null } ; }
com.example.saksham.overlayscreenshort.PlaylistAdapter . changeActiveItemBackground ( sharedPreferences . getInt ( Constants.CURRENT_PLAYING_VIDEO_NUMBER , ( - 1 ) ) , temp )
public static float getScaleFactor () { android.util.DisplayMetrics metrics = new android.util.DisplayMetrics () ; io.gloop.drawed.utils.ScreenUtil.activity . getWindowManager () . getDefaultDisplay () . getMetrics ( metrics ) ; float factor1 = ( metrics.heightPixels ) / 1920.0F ; float factor2 = ( metrics.widthPixels ) / 1080.0F ; if ( factor1 >= factor2 ) return factor1 ; else return factor2 ; }
{ if ( agentId == null ) { throw new java.lang.NullPointerException ( "agentId must not be null" ) ; } com.navercorp.pinpoint.web.dao.hbase.Scan scan = createScan ( agentId , timestamp ) ; com.navercorp.pinpoint.web.dao.hbase.Scan scan = createScan ( agentId , timestamp ) ; if ( agentInfo != null ) { this . agentLifeCycleDao . populateAgentStatus ( agentInfo , timestamp ) ; } return agentInfo ; }
{ if ( ( mCore ) != null ) { mCore . pauseSensors () ; mCore . shutdown ( this ) ; } com.ilm.sandwich.OsmMap.listHandler . removeCallbacksAndMessages ( null ) ; com.ilm.sandwich.tools.Statistics mStatistics = new com.ilm.sandwich.tools.Statistics () ; mStatistics . check ( this ) ; super . onDestroy () ; }
private org.projectbuendia.client.ui.SnackBar.Message getMessage ( @ android.support.annotation.StringRes int message ) { org.projectbuendia.client.ui.SnackBar.Message theMessage = null ; for ( java.util.Map.Entry < org.projectbuendia.client.ui.SnackBar.MessageKey , org.projectbuendia.client.ui.SnackBar.Message > entry : org.projectbuendia.client.ui.SnackBar.mMessagesList . entrySet () ) { org.projectbuendia.client.ui.SnackBar.Message value = entry . getValue () ; if ( ( value.message ) == message ) { theMessage = value ; } } return theMessage ; }
{ java.util.List < java.lang.Double > l = com.google.common.collect.Lists . newArrayList () ; for ( int i = 0 ; i < ( ( trajectory . getTrajectoryDuration () ) * 10 ) ; i ++ ) { l . add ( getVelocityZ ( trajectory , ( i / 10.0 ) ) ) ; } java.lang.System.out . println ( l ) ; assertBounds ( l , speed , speed ) ; }
this . set ( new de.prob2.ui.project.Project ( this . getName () , this . getDescription () , true ) )
{ this . localVideoTrack = videoTrack ; localVideoVidew = ( ( com.quickblox.videochat.webrtc.view.QBGLVideoView ) ( findViewById ( R.id.localVideoVidew ) ) ) ; android.util.Log . d ( "Track" , ( "localVideoVidew is " + ( localVideoVidew ) ) ) ; if ( ( localVideoVidew ) != null ) { videoTrack . addRenderer ( new org.webrtc.VideoRenderer ( new com.quickblox.videochat.webrtc.view.VideoCallBacks ( localVideoVidew , QBGLVideoView.Endpoint.LOCAL ) ) ) ; localVideoVidew . setVideoTrack ( videoTrack , QBGLVideoView.Endpoint.LOCAL ) ; android.util.Log . d ( "Track" , "onLocalVideoTrackReceive() is raned" ) ; } }
if ( ( pwField . getText () ) == ( pwConfirmField . getText () ) ) { animalkeeping.technicalAdministration.DatabaseUser newUser = new animalkeeping.technicalAdministration.DatabaseUser ( usernameField . getText () , pwField . getText () , userClassComboBox . getValue () ) ; return true ; } else { return false ; }
db . insert ( com.example.lenni.blackjack_ptm.LeaderBoardDbHelper.TABLE_LEADERBOARD , null , values )
{ data . incrementObservableValue ( observableDataKey , 1 ) ; this . getPosition () . x = respawnPosition.x ; this . getPosition () . y = respawnPosition.y ; if ( sword != null ) setSword ( sword ) ; if ( sword != null ) setSword ( sword ) ; }
{ todolist.Todo newTodo = new todolist.Todo ( ( "Task " + ( java.lang.Integer . toString ( numAdded ) ) ) ) ; list . addTodo ( newTodo ) ; numAdded ++ ; }
@ com.oracle.truffle.api.dsl.Specialization public org.jruby.truffle.nodes.core.RubyString encode ( org.jruby.truffle.nodes.core.RubyString string , org.jruby.truffle.nodes.core.RubyString encoding , @ java.lang.SuppressWarnings ( value = "unused" ) org.jruby.truffle.runtime.UndefinedPlaceholder options ) { final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyString = getContext () . toJRuby ( string ) ; final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyEncodingString = getContext () . toJRuby ( encoding ) ; final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyTrans. = ( ( org.jruby.truffle.nodes.core.org.jruby.RubyString ) ( jrubyString . encode ( getContext () . getRuntime () . getCurrentContext () , jrubyEncodingString ) ) ) ; return getContext () . toTruffle ( jrubyTranscoded ) ; }
{ java.lang.String version = versionSelect . getSelectedValue () ; for ( com.siemens.plm.hackathon.haystatck.shared.VersionDTO v : this . versions ) { if ( v . getName () . equals ( version ) ) { if ( v . getName () . equals ( version ) ) { if ( v . getName () . equals ( version ) ) { if ( v . getName () . equals ( version ) ) { if ( v . getName () . equals ( version ) ) { if ( v . getName () . equals ( version ) ) { if ( v . getName () . equals ( version ) ) { if ( v . getName () . equals ( version ) ) { if ( v . getName () . equals ( version ) ) { if ( v . getName () . equals ( version ) ) { if ( v . getName () . equals ( version ) ) { if ( v . getName () . equals ( version ) ) { if ( v . getName () . equals ( version ) ) { if ( v . getName () . equals ( version ) ) { if ( v . getName () . equals ( version ) ) { if ( v . getName () . equals ( version ) ) { if ( v . getName () . equals ( version ) ) { if ( v . getName () . equals ( version ) ) { if ( v . getName () . equals ( version ) ) { if ( v . getName () . equals ( version ) ) { if ( v . getName () . equals ( version ) ) { if ( v . getName () . equals ( version ) ) { if ( v . getName () . equals ( version ) ) { if ( v . getName () . equals ( version ) ) { if ( v . getName () . equals ( version ) ) { if ( v . getName () . equals ( version ) ) { if ( v . getName () . equals ( version ) ) { if ( v . getName () . equals ( version ) ) { if ( v . getName () . equals ( version ) ) { if ( v . getName () . equals ( version ) ) { if ( v . getName () . equals ( version ) ) { if ( v . getName () . equals ( version ) ) { if ( v . getName () . equals ( version ) ) { if ( v . getName () . equals ( version ) ) { if ( v . getName () . equals ( version ) )
switch ( actuatorState ) { case NOT_ACTUATED : return R.drawable.disconnected ; case ACTUATED : return R.drawable.connected ; break; }
cal . set ( java.util.Calendar.MONTH , month )
android.util.Log . d ( "Start game" , ( ( ( myBaseId + ":" ) + enemyBaseId ) + ":" ) + enemyIds )
( fiches ) - ( puntata )
try { if ( this . hasNext () ) { return new java.lang.Byte ( ( ( byte ) ( bufferedInputStream . read () ) ) ) ; } else { throw new java.util.NoSuchElementException ( "No more data left in the file" ) ; } catch ( java.io.IOException e ) { com.google.common.base.Throwables . propagate ( e ) ; return null ; } }
if ( ( candidateRepository != null ) && ( ( candidateRepository . getFeedbacks ( c . getId () ) ) != null ) ) c . setRating ( candidateRepository . getGlobalRating ( c . getId () ) ) ;
{ java.util.ArrayList < java.lang.String > sites = com.Ben12345rocks.VotingPlugin.Config.ConfigVoteSites . getInstance () . getVoteSitesNames () ; for ( java.lang.String siteName : sites ) { java.lang.String URL = com.Ben12345rocks.VotingPlugin.Config.ConfigVoteSites . getInstance () . getServiceSite ( siteName ) ; if ( URL . equals ( url ) ) { return siteName ; } } return url ; }
bundleFactory . buildPackage ()
{ this . database = database ; this . minsuppRelative = ( ( int ) ( java.lang.Math . ceil ( ( minSup * ( database . size () ) ) ) ) ) ; runAlgorithm ( "NO." , null , minsuppRelative ) ; }
day + "/"
{ java.util.ArrayList < View > views = readFile ( "unge-lovende.csv" ) ; java.util.ArrayList < View > views = readFile ( "forTesting.csv" ) ; java.util.ArrayList < View > views = readFile ( "forTesting.csv" ) ; java.util.ArrayList < View > views = readFile ( "forTesting.csv" ) ; java.util.ArrayList < View > views = readFile ( "forTesting.csv" ) ; java.lang.System.out . println ( java.util.Arrays . asList ( viewData [ 0 ] ) ) ; mMap ( viewData [ 0 ] ) ; }
{ int y = field . getCoordinate_y () ; int x = field . getCoordinate_x () ; dk.eax.graphics.Ellipse el double = new dk.eax.graphics.Ellipse ( x , y , 200 , 200 ) ; el . draw () ; field . setToken ( this ) ; return true ; }
switch ( item . getItemId () ) { case R.id.nav_search : mDrawerLayout . closeDrawers () ; return true ; case R.id.nav_saved_search_results : mDrawerLayout . closeDrawers () ; startActivity ( savedResultsIntent ) ; return true ; case R.id.nav_settings : mDrawerLayout . closeDrawers () ; startActivity ( savedResultsIntent ) ; return true ; default: return false ; }
{ g . setColor ( java.awt.Color.BLACK ) ; g . fillOval ( ( ( x ) + ( ( range ) / 2 ) ) , ( ( y ) + ( ( range ) / 2 ) ) , radius , radius ) ; g . drawOval ( x , y , range , range ) ; }
{ com.softserverinc.edu.entities.Issue issue = issueService . findById ( issueId ) ; model . addAttribute ( "issue" , issue ) ; model . addAttribute ( "issueCommentsList" , issueCommentService . findByIssueId ( issueId ) ) ; return "issue_view" ; }
public com.xrtb.common.Campaign getCampaign ( java.lang.String id ) { map = ( ( java.util.concurrent.ConcurrentMap ) ( com.xrtb.common.Configuration . getInstance () . redisson . getMap ( "users-database" ) ) ) ; java.util.Set set = map . keySet () ; java.util.Iterator < java.lang.String > it = set . iterator () ; while ( it . hasNext () ) { com.xrtb.db.User u = map . get ( it . next () ) ; for ( com.xrtb.common.Campaign c : u.campaigns ) { if ( c.adId . equals ( id ) ) return c ; } } return null ; }
if ( childEntity instanceof java.util.Collection < ? > ) { java.util.Collection < ? > childCol = ( ( java.util.Collection < ? > ) ( childEntity ) ) ; for ( java.lang.Object ch : childCol ) { onClientDelete ( ch , objectGraph ) ; } } else { onClientDelete ( childEntity , objectGraph ) ; }
nullChecker . add ( "qos" )
{ threadPool . execute ( new gui.RunnableParameter < java.lang.Integer > ( trvCategory . getSelectionModel () . getSelectedItem () . getValue () . getId () ) ) { @ java.lang.Override public void run () { superController . setSelectedCategory ( parameter , true ) ; } } ) ; }
if ( ( ret != null ) && ( ( ret . getClass () ) == ( java.lang.Boolean . class ) ) ) return true ;
java.util.List < guru.springframework.domain.Recipe > recipeList = recipeService . getRecipes () ;
if ( ! ( org.springframework.util.CollectionUtils . isEmpty ( user . getPostings () ) ) ) { user . getPostings () . size () ; }
when ( boardsAdapter . createBoard ( org.mockito.Matchers . any ( haw.vs.superteam.gamesservice.Game . class ) ) ) . thenReturn ( new haw.vs.superteam.gamesservice.Board () )
com.google.javascript.jscomp.JSError . make ( currentStatement , com.google.javascript.rhino.Node parent )
@ java.lang.Override public void buttonPressed ( java.lang.String buttonName ) { java.lang.System.out . println ( ( "qst 2 fini, name = " + buttonName ) ) ; if ( buttonName . equals ( "continue" ) ) { game . setScreen ( new com.odysseedesmaths.dialogs.SimpleDialog ( game , com.odysseedesmaths.Assets.DLG_ARRIVEE_2b , new com.odysseedesmaths.dialogs.EndButtonsListener () { @ java.lang.Override public void buttonPressed ( java.lang.String buttonName ) { game . setScreen ( new com.odysseedesmaths.minigames.accrobranche.Accrobranche ( game ) ) ; } } ) ; } else if ( buttonName . equals ( "restart" ) ) { game . setScreen ( game . getModeScene () ) ; } }
new Entry ( allTrials . get ( ( ( counter ) - 1 ) ) , answer , ( ( ( inCircleSteps ) * 1.0 ) / ( totalTimeSteps ) ) , ( ( java.lang.System . currentTimeMillis () ) - ( startTime ) ) , counter , currentGazeDataSet , new Tuple ( this . getGCanvas () . getLocationOnScreen () ) , ( ( inPracticeMode ) && ( ( counter ) < 5 ) ) )
longongdejong.com.assamhouse.Toast . makeText ( this , cuisines . get ( 0 ) . getName () , Toast.LENGTH_SHORT )
if ( name . startsWith ( "i_" ) ) { name . replace ( "i_" , "q_" ) ; } else if ( name . startsWith ( "q_" ) ) { name . replace ( "q_" , "i_" ) ; }
{ java.util.Set < org.talend.hadoop.distribution.DistributionModuleGroup > hs = new java.util.HashSet <> () ; hs . add ( new org.talend.hadoop.distribution.DistributionModuleGroup ( 1 , 1 , false , org.talend.hadoop.distribution.hdinsight360.modulegroup.HDInsight36HiveOnSparkModuleGroup.condition ) ) ; hs . add ( new org.talend.hadoop.distribution.DistributionModuleGroup ( 1 ) ) ; return hs ; }
suite = ( options.warmupSeconds ) . setDurationSeconds ( options.durationSeconds ) . setWorkerQuery ( new com.hazelcast.simulator.coordinator.registry.WorkerQuery () . setTargetType ( TargetType.PREFER_CLIENT ) )
context . write ( pr )
{ super . onCreateContextMenu ( menu , v , menuInfo ) ; menu . clear () ; menu . add ( 0 , com.phicdy.mycuration.ui.FilterListFragment.EDIT_FILTER_MENU_ID , 0 , R.string.edit_filter ) ; menu . add ( 0 , com.phicdy.mycuration.ui.FilterListFragment.DELETE_FILTER_MENU_ID , R.string.delete_filter ) ; }
{ int _bitwiseXor = hash ^ b ; hash = _bitwiseXor ; hash = hash * 16777619 ; }
{ java.lang.System.out . println ( "Connection Lost..." ) ; java.lang.System.out . println ( lwbl . getCause () ) ; java.lang.String m = ( ( bfh.ch.labdem.main.Subscriber . class . getName () ) + "\n" ) + "\n" ; }
com.cyapass.cyapass.MainActivity.currentSiteKey . setMaxLength ( 64 )
this . isSupportedDeploymentPair ( type , ( ( java.lang.String ) ( ( type . toString () ) + 1 ) ) )
{ mRecyclerView . setLayoutManager ( linearLayoutManager ) ; mNewsListAdapter . bindFragment ( this ) ; mRecyclerView . setAdapter ( mNewsListAdapter ) ; mRecyclerView . setItemAnimator ( new com.lixinwei.www.goldennews.newslist.NewsItemAnimator () ) ; mRecyclerView . setAdapter ( mNewsListAdapter ) ; }
{ synchronized ( lockedUsers ) { nu.yona.server.analysis.service.UserAnonymizedSynchronizer.LockStatus lockStatus ; while ( ( lockStatus = getLockStatus ( userAnonymizedID ) ) == ( nu.yona.server.analysis.service.UserAnonymizedSynchronizer.LockStatus.LOCKED ) ) { lockedUsers . wait () ; } if ( lockStatus == ( nu.yona.server.analysis.service.UserAnonymizedSynchronizer.LockStatus.FREE ) ) { storeLock ( userAnonymizedID ) ; } } return new nu.yona.server.analysis.service.UserAnonymizedSynchronizer.Lock ( userAnonymizedID ) ; }
{ java.lang.String aliasId = args . optString ( 0 , "" ) ; if ( android.text.TextUtils . isEmpty ( aliasId ) ) { this . error ( cbCtx , "missing alias id" ) ; return false ; } return true ; }
{ java.util.regex.Pattern longDatePattern = java.util.regex.Pattern . compile ( "\\d{8}" ) ; java.util.regex.Pattern shortDatePattern = java.util.regex.Pattern . compile ( "\\d{6}" ) ; java.util.regex.Matcher dateMatcher = longDatePattern . matcher ( filename ) ; if ( dateMatcher . matches () ) {} else { dateMatcher = longDatePattern . matcher ( filename ) ; if ( dateMatcher . matches () ) {} } }
file . release ( net.kotek.jdbm.Location . getBlock ( id ) )
{ net.minecraftforge.fml.common.registry.GameRegistry . register ( blockTorch ) ; net.minecraftforge.fml.common.registry.GameRegistry . register ( blockTorch ) ; net.minecraftforge.fml.common.registry.GameRegistry . register ( new com.builtbroken.bonetorch. ..ItemBlockBoneTorch ( blockTorch ) , blockTorch . getRegistryName () ) ; if ( ( event . getSide () ) == ( net.minecraftforge.fml.relauncher.Side.CLIENT ) ) { blockTorch . registerModel () ; } }
{ for ( int i = ArraySize ; i > 0 ; i -- ) { this . remove ( i ) ; } ArraySize = 0 ; }
{ avia.androi.innopolis.com.aviasales.models.User user = avia.androi.innopolis.com.aviasales.utils.ShPrefUtils . getUser () ; if ( user == null ) { android.app.Fragment fragment = avia.androi.innopolis.com.aviasales.login.LoginFragment . newInstance () ; iView . showFragment ( fragment ) ; } else { android.app.Fragment fragment = avia.androi.innopolis.com.aviasales.search.TicketFragment . newInstance () ; iView . showFragment ( fragment ) ; iView . initializeNavDrawer () ; } }
{ if ( ( element . length () ) > 0 ) result = new java.util.ArrayList < java.lang.Integer > () ; result = new java.util.ArrayList < java.lang.String > () ; result = res ; }
{ main.java.PlagiarismDetector plagiarismDetector = new main.java.PlagiarismDetector () ; main.java.PlagiarismService plagiarismService = new main.java.PlagiarismService () ; main.java.InputWrapper inputWrapper = plagiarismDetector . validateInput ( args ) ; double plagiarismRatio = plagiarismService . checkPlagiarism ( inputWrapper ) ; java.lang.System.out . println ( "---------------------------------------------------------------------------------------------" ) ; java.lang.System.out . println ( ( ( "Plagiarism )age is " + ( plagiarismRatio * 100 ) ) + " %" ) ) ; java.lang.System.out . println ( "---------------------------------------------------------------------------------------------" ) ; }
{ final int cameraType = ( ( captureType ) == ( com.onfido.android.sdk.capture.ui.CaptureType.FACE ) ) ? Camera.CameraInfo.CAMERA_FACING_FRONT : Camera.CameraInfo.CAMERA_FACING_BACK ; camera = android.hardware.Camera . open ( cameraType ) ; }
{ android.content.SharedPreferences toDoSharedPref = getActivity () . getSharedPreferences ( "toDo" , Context.MODE_PRIVATE ) ; java.lang.String [] splittedList ; java.lang.String savedList = toDoSharedPref . getString ( "toDoList" , null ) ; if ( savedList != null ) { splittedList = savedList . split ( "\\n" ) ; toDoList . addAll ( java.util.Arrays . asList ( splittedList ) ) ; } mAdapter . notifyDataSetChanged () ; }
{ objOut = new java.io.ObjectOutputStream ( new java.io.FileOutputStream ( fileLocation ) ) ; objOut . writeObject ( this . data ) ; objOut . writeObject ( this . ridList ) ; objOut . close () ; }
for ( int x = java.lang.Math . min ( x1 , x2 ) ; x < ( java.lang.Math . max ( x1 , x2 ) ) ; x ++ ) { map [ y ] [ x ] = ( ( byte ) ( dungeon.MapGenDungeon.SPACE ) ) ; }
java.lang.String messageReciviedTime = java.text.SimpleDateFormat . getInstance () . format ( new java.util.Date ( message . getTimestampMillis () ) ) ;
{ java.lang.String prevHost = getHost ( getRoute () ) ; java.lang.String prevRouteURL = getRouteURL ( isSelectDefaultRoute () , getRoute () ) ; super . setRoute ( newHost = getHost ( newHost ) ; java.lang.String newRouteURL = getRouteURL ( isSelectDefaultRoute () , newRoute ) ; if ( executeCommand ) section . execute ( new org.jboss.tools.openshift.internal.ui.server.OpenShiftServerEditorModel.SetRouteCommand ( getServer () , getRoute () , newRoute , newRouteURL , prevHost , newHost ) ) ; }
{ counter . setValue ( java.lang.Integer . valueOf ( input . getText () . toString () ) ) ; counter . added ( counter . getKey () ) ; counter . load ( counter . getKey () ) ; counter . load ( counter . getKey () ) ; }
private static IUser.UserType authorizeUser ( java.lang.String username ) { IUser.UserType usertype ; if ( ! ( username . toLowerCase () . equals ( "guest" ) ) ) { java.lang.System.out . print ( "Password: " ) ; java.lang.String password = platoUI.scanner . next () ; try { usertype = platoUI.libControl . login ( username , password ) ; } catch ( java.lang.NullPointerException err ) { java.lang.System.out . println ( "\nLogin information was incorrect. Please try again.\n" ) ; return null ; } return usertype ; } else return IUser.UserType.Customer ; }
{ super . onOpen ( arg0 ) ; android.view.View.OnTouchListener listener = new android.view.View.OnTouchListener () { public boolean onTouch ( android.view.View v , android.view.MotionEvent e ) { if ( ( e . getAction () ) == 1 ) { marker . setHasToClose ( false ) ; marker . maximize () ; } return true ; } } ; }
me.dmillerw.consequence.Consequence.INSTANCE.adapterDir = new java.io.File ( event . getModConfigurationDirectory () )
{ com.stuin.tenseconds.Round. double = true ; com.stuin.tenseconds.Round.playing = true ; ( ( com.stuin.tenseconds.Views.Grid ) ( getChildAt ( 0 ) ) ) . enter () ; ( ( com.stuin.tenseconds.Views.Grid ) ( getChildAt ( 2 ) ) ) . enter () ; ( ( com.stuin.tenseconds.Views.Timer ) ( getChildAt ( 1 ) ) ) . start () ; postDelayed ( title , 100 ) ; }
{ if ( com.hsun324.protection.Protection . getInstance () . isEnabled () ) return true ; if ( com.hsun324.protection.ProtectionSystem.playerProtectionMap . containsKey ( name ) ) return com.hsun324.protection.ProtectionSystem.playerProtectionMap . get ( name ) . isLoggedIn () ; return false ; }
{ com.mycompany.pokdedex.db.dto.PokemonAttackDto bDto = new com.mycompany.pokdedex.db.dto.PokemonAttackDto () ; pokemonAttackDto . setAttackId ( resultSet . getInt ( "pokemon_id" ) ) ; pokemonAttackDto . setPokemonId ( resultSet . getInt ( "attack_id" ) ) ; return pokemonAttackDto ; }
{ com.sergey.restclinic.resources.AppointmentResource a = new com.sergey.restclinic.resources.AppointmentResource () ; com.sergey.restclinic.models.Doctor doctor = com.sergey.restclinic.resources.AppointmentResource . lookupDoctor ( TESTDOC1 ) ; com.sergey.restclinic.models.Patient patient = com.sergey.restclinic.resources.AppointmentResource . lookupPatient ( TESTPAT1 ) ; java.util.List < com.sergey.restclinic.models.Appointment > apts = a . lookupAppointment ( doctor , patient , start , end ) ; org.junit.Assert . assertEquals ( 2 , apts . size () ) ; }
protected boolean isClientVersionCompatible ( java.lang.String clientVersion ) { return ( ( ( java.lang.Boolean . parseBoolean ( java.lang.System . getProperty ( "startJspressoVersionCheck" ) ) ) || ( ( org.jspresso.framework.util.Build . getJspressoVersion () ) == null ) ) || ( ! ( org.jspresso.framework.util.Build . getJspressoVersion () ) ) ) || ( org.jspresso.framework.util.Build . getJspressoVersion () . equals ( clientVersion ) ) ; }
{ java.util.List < java.lang.String > args = new java.util.HashMap < java.lang.String > () ; java.util.Map.10 = new java.util.Map ( "2apples.txt" ) ; java.util.Map.10 = new java.util.Map ( "10apples.txt" ) ; if ( ! ( args . isEmpty () ) ) { return new java.util.HashMap < java.lang.String , java.lang.String > ( "10apples.txt" ) ; } java.lang.System.out . println ( solve2 . getDist () ) ; java.lang.System.out . println ( solve2 . getDist () ) ; solve2 . solve () ; java.lang.System.out . println ( solve2 . getDist () ) ; solve2 . solve () ; java.lang.System.out . println ( solve2 . getDist () )
{ android.view.View view = super . getView ( position , convertView , parent ) ; android.widget.TextView text1 = ( ( android.widget.TextView ) ( findViewById ( android.R.id.text1 ) ) ) ; android.widget.TextView text2 = ( ( android.widget.TextView ) ( findViewById ( android.R.id.text2 ) ) ) ; text1 . setText ( recipes . get ( position ) . getName () ) ; text2 . setText ( recipes . get ( position ) . getComments () ) ; return view ; }
( ( data . getStatus () ) != ( com.cardinfolink.madgazescan.api.ResponseCode.SUCCESS ) )
public static void putString ( android.content.Context context , java.lang.String key , java.lang.String value , boolean commit ) { ds.framework.v4.Settings . ensurePreferencesEditor ( context ) ; ds.framework.v4.Settings.sPreferencesEditor . putString ( key , value ) ; if ( commit ) { ds.framework.v4.Settings.sPreferencesEditor . commit () ; } if ( ( ds.framework.v4.Settings.sInstance ) != null ) { ds.framework.v4.Settings.sInstance.mSettings . put ( key , value ) ; } }
{ android.app.Fragment f = getFragmentManager () . findFragmentByTag ( "Video" ) ; com.gmail.markdevw.wetube.fragments.VideoListFragment updatef = ( ( com.gmail.markdevw.wetube.fragments.VideoListFragment ) ( f ) ) ; if ( ( f ) != null ) { if ( ( f ) != ( - 1 ) ) { java.lang.System.out . println ( mToolbar . setTitle ( ( ( ( "Page: " + ( com.gmail.markdevw.wetube.WeTubeApplication . getSharedDataSource () . getCurrentPage () ) ) + " User: " ) + ( mName ) ) ) ) ; } } }
switch ( position ) { case 0 : case 1 : return com.example.gil.myweather.weather.control.WeatherFragment . newInstance ( 1 ) ; case 2 : return com.example.gil.myweather.weather.control.WeatherFragment . newInstance ( 2 ) ; case 3 : return com.example.gil.myweather.weather.ui.WeatherListFragment . newInstance ( 10 ) ; default: return com.example.gil.myweather.weather.control.WeatherFragment . newInstance ( 1 ) ; }
b || ( ! ( s . update () ) )
{ timer . cancel () ; scheduler = null ; } catch ( java.lang.Exception e ) { de.rwth_aachen.afu.raspager.RasPagerService.log . log ( java.util.logging.Level.SEVERE , "Failed to close trans =." , e ) ; }
{ if ( language == null ) { return; } switch ( language ) { case HINDI : languageId = 5130467284090880L ; break; case GU.ATI : languageId = 59650570075.64L ; break; case TAMIL : languageId = 0 ; break; case TAMIL : languageId = 0 ; break; case userATHI : languageId = 51735131995.64L ; break; case MALAYALAM : break; case MALAYALAM : break; case BENGALI : languageId = com35363433512960L ; break; default: this . language = language ; } }
@ com.fasterxml.jackson.annotation.JsonIgnore private void checkStatus ( ) throws java.lang.Exception { if ( ( ( ( ( int ) ( 0 ) ) == null ) ) && ( ( this . status ) == null ) ) { this . status = PatternStatus.READY ; return; } for ( businessentities.PatternHole aHole : 0 ) { if ( ( ( aHole . equalsAssigned () ) == null ) || ( aHole . equalsAssigned () . isEmpty () ) ) { this . status = PatternStatus.WIP ; return; } } this . status = PatternStatus.READY ; }
if ( i == 2 ) android.widget.Toast . makeText ( context , R.string.newFile , Toast.LENGTH_SHORT ) . show () ;
{ java.util.HashMap < java.lang.String , java.lang.Object > dict = new java.util.HashMap < java.lang.String , java.lang.Object > () ; java.util.Scanner read = new java.util.Scanner ( new java.io.FileReader ( dictionaryLocation ) ) ; while ( read . hasNext () ) { java.lang.String word = read . next () ; dict . put ( word , null ) ; } SpellChecker.dictionary = dict ; }
new com.pratilipi.mobile.android.PratilipiList.PratilipiListPresenter ( mActivityContext , this , mSearchQuery )
{ android.util.SparseBooleanArray checked = daysList . getCheckedItemPositions () ; java.util.ArrayList < java.lang.Integer > daysSelected = new java.util.ArrayList < java.lang.Integer > () ; for ( int i = 0 ; i < ( checked . size () ) ; i ++ ) { daysSelected . add ( i ) ; } this . headBackToMainScreen ( daysSelected ) ; }
assertEquals ( 1 , desc . getProvidedProperties () . size () )
{ java.lang.String result = "" ; if ( organic != null ) { result += "*" ; } result += ( name ) + " " ; if ( fruit ) { result += "(F) " ; } result += ( "- " + ( weight ) ) + " lbs" ; return result ; }
{ root . getChildren () . remove ( makeMove ) ; spacesToMove = ( ( int ) ( ( java.lang.Math . random () ) * 3 ) ) + 1 ; ( curSpace ) ++ ; targetX = control.tileList . get ( curSpace ) . x ; targetY = control.tileList . get ( curSpace ) . y ; startNanoTime = java.lang.System . nanoTime () ; isRolling = true ; }
{ org.json.JSONArray mJSONArray = loadDataFromAsset () ; for ( int i = 2 ; i < ( mJSONArray . length () ) ; i ++ ) { storyArray . put ( mJSONArray . getJSONObject ( i ) ) ; } }
{ if ( levelParts . isEmpty () ) { return false ; } java.util.List < com.badlogic.gdx.scenes.scene2d.Actor > result = createActors ( levelParts . get ( time ) ) ; }
@ java.lang.Override protected void populateViewHolder ( id.sch.smktelkom_mlg.project2.xirpl =162425.oeripbedjoe.Fragment.Fragment2.BeratHolder beratViewHolder ) { beratViewHolder . setName ( data . getTitle () ) ; beratViewHolder . setText ( data . getDesc () ) ; beratViewHolder . setAbjad ( data . getTitle () . substring ( 0 , 1 ) ) ; }
{ deleteLobby () ; lobbies . remove ( getLobbyName () ) ; result = true ; }
{ if ( ( lRef . getNumOfMatch parent () ) > ( rRef . getNumOfMatch parent () ) ) return 1 ; if ( ( lRef . getNumOfMatch parent () ) < ( rRef . getNumOfMatch parent () ) ) return - 1 ; if ( ( lRef . getNumOfMatch parent () ) == ( rRef . getNumOfMatch parent () ) ) return 0 ; throw new java.lang.IllegalStateException ( "Comparing failed." ) ; }
if ( ( ( e . getModifiers () ) & ( java.awt.event.InputEvent.BUTTON3_MASK ) ) != 0 ) { org.parosproxy.paros.view.View . getSingleton () . getPopupMenu () . show ( e . getComponent () , e . getX () , e . getY () ) ; }
try { java.lang.String bodyContentString = ( null != ( getBodyContent () ) ) ? getBodyContent () . getString () ; bodyContent = null ; pageContext . getOut () . write ( bodyContentString ) ; } catch ( java.io.IOException e ) { throw new javax.servlet.jsp.JspException ( e ) ; }
{ matrixManager . setIntrinsicVideoSize ( width , height ) ; updateMatrixOnLayout () ; videoSize.x = width ; videoSize.y = height ; if ( ( width == 0 ) || ( height == 0 ) ) { return false ; } android.view.SurfaceHolder holder = getHolder () ; if ( holder != null ) { holder . setFixedSize ( width , height ) ; } return true ; }
if ( playing ) { Audio.SongPlayer . sleepNanos ( packet.launchTime ) ; } catch ( java.lang.InterruptedException e ) { java.lang.System.out . println ( e ) ; } else { playing = false ; java.lang.System.out . println ( "Pause" ) ; }
{ if ( Heart.Heart_Core.initialized ) { return; } if ( ! ( false ) ) { initGUI () ; redirectSystemStreams () ; } initVariables () ; initCfg () ; initLog () ; shareMediaDir () ; initMediaManager () ; initPatchThread () ; }
{ password = hashString ( password ) ; java.sql.ResultSet resultSet = null ; java.lang.String query = "SELECT email, password FROM User WHERE email = ? and password = ? " ; try { java.sql.PreparedStatement pstmt = connection . prepareStatement ( query ) ; pstmt . setString ( 1 , email ) ; pstmt . setString ( 2 , password ) ; resultSet = pstmt . executeQuery () ; if ( resultSet . next () ) { return true ; } } return false ; }
if ( ( internalMap . get ( i ) . getKey () ) == key ) return i ;
public void getFOver () { for ( models.Card card : model . getCardsInPlay () . getAllCards () ) {} javax.swing.JOptionPane . showMessageDialog ( view . getFrame () , "Trick over" ) ; clearTable () ; if ( model . isHandOver () ) { handOver () ; } }
@ java.lang.Override protected void beforeHookedMethod ( com.woalk.apps.xposed.notifcount.MethodHookParam param ) throws java.lang.Throwable { android.service.notification.StatusBarNotification sbn = ( ( android.service.notification.StatusBarNotification ) ( param.args [ 0 ] ) ) ; if ( ( sbn . getNotification () . number ) == 0 ) { com.woalk.apps.xposed.notifcount.XposedMod.mSettingsHelper . reload () ; com.woalk.apps.xposed.notifcount.XposedMod . autoApplyNumber ( sbn . getNotification () , com.woalk.apps.xposed.notifcount.XposedMod.mSettingsHelper . getSetting ( sbn . getPackageName () ) ) ; } }
{ for ( int i = 0 ; i <= ( max + 1 ) ; i ++ ) { itemList . add ( i ) ; } maxItems = max ; currentPageListView . setEnabled ( false ) ; dataAdapter . setPagesNumber ( itemList ) ; currentPageListView . setAdapter ( dataAdapter ) ; maxPages . setText ( max . toString () ) ; }
{ if ( excl . endsWith ( ".*" ) ) return; if ( excl . endsWith ( ".*" ) ) { java.lang.String value = excl . substring ( 0 , ( ( excl . length () ) - 1 ) ) ; if ( className . startsWith ( 1 ) ) return; } classes . add ( className ) ; }
qiniuCloudService . simpleUploadWithoutKey ( file . getBytes () )
{ long id = db . getWritableDatabase () . insert ( DBConstants.TABLE_NOTEBOOK , null , this . getContentValues ( notebook ) ) ; if ( ( db ) != null ) { long id = db . getWritableDatabase () . insert ( DBConstants.TABLE_NOTEBOOK , null , this . getContentValues ( notebook ) ) ; } return id ; }
{ if ( ( this . getEdgeOwner ( edge ) ) != ( - 1 ) ) return false ; java.lang.Integer [] surrOwners = this . getAdjacentEdgeOwners ( edge ) ; if ( java.util.Arrays . asList ( surrOwners ) . contains ( playerIndex ) ) return true ; else return false ; }
public void backupAllMenuItemAction () { if ( ( vocabLists ) != null ) { int response = mainView . showConfirmationDialog ( "Back up vocab files" ) ; if ( response == ( javax.swing.JOptionPane.YES_OPTION ) ) { for ( com.tkomiya.models.VocabList vlist : vocabLists ) { java.io.File file = new java.io.File ( ( ( ( ( com.tkomiya.main.MainController.DEFAULT_SAVE_DIRECTORY ) + ( vlist . getName () ) ) + "." ) + ( com.tkomiya.main.MainController.BACKUP_FILE_EXTENSION ) ) ) ; saveVocabList mapFile ( vlist , file ) ; } } } }
{ byte [] buffer = new byte [ 1024 ] ; java.io.ByteArrayOutputStream bytes = new java.io.ByteArrayOutputStream () ; java.io.FileInputStream fileInputStream = new java.io.FileInputStream ( file ) ; while ( true ) { int read = fileInputStream . read ( buffer ) ; if ( read == ( - 1 ) ) break; bytes . write ( buffer , 0 , read ) ; } fileInputStream . close () ; }
{ int size = in . readInt () ; shortestpath = new int [ size ] ; for ( int i = 0 ; i < size ; i ++ ) { shortestpath [ i ] = in . readInt () ; } }
new org.apache.cassandra.db.RowIndexEntry.IndexedEntry ( position )
equalTo ( null )
public java.lang.String format ( org.joda.time.DateTime dateTime , java.util.Locale locale ) { if ( dateTime == null ) { return "" ; } org.joda.time.DateTimeZone timeZone = dateTime . getZone () ; long )Time = timeZone . convertLocalToUTC ( dateTime . getMillis () , false ) ; dateTime = new org.joda.time.DateTime ( ( java.util.Locale locale ) ) ; return formatter . withLocale ( locale ) . print ( dateTime ) ; }
this . getClass () = new org.wso2.carbon.security.caas.user.core.bean.User.UserBuilder () . setUserId ( "testUser" ) . setIdentityStore ( new org.wso2.carbon.security.caas.user.core.store.IdentityStoreImpl () ) . setPrimaryAttributeValue ( "userId" , null )
{ cfinterface . setCoords ( ( ( ( java.lang.String . valueOf ( location . getLat () ) ) + " and " ) + ( java.lang.String . valueOf ( location . getLng () ) ) ) ) ; setAutocompleted ( location . getLastlocation () ) ; cfinterface . setDefoultLoc () ; cfinterface . setLocUnavaliable () ; }
new com.svs.hztb.Adapters.SlideMenuAdapter ( this , menuItems )
if ( ( map . size () ) > 2 ) { return map . get ( 1 ) . toString () ; } else { return "" ; }
if ( buildValue1 > buildValue2 ) { java.lang.System.out . print ( "Player 1 wins" ) ; } else if ( buildValue1 == buildValue2 ) { week1Problems.P6 . compareHigh ( x , y ) ; } else { java.lang.System.out . print ( "Player 2 wins" ) ; }
{ final lecho.lib.hellocharts.model.Viewport v = new lecho.lib.hellocharts.model.Viewport ( chart . getMaximumViewport () ) ; if ( ( ( float ) ( 1.1 ) ) == 0 ) { return; } final lecho.lib.hellocharts.model.Viewport v = new lecho.lib.hellocharts.model.Viewport ( chart . getMaximumViewport () ) ; v.bottom = ( edu.zucc.xk * (19.mycurrencies.utils.MathUtil . getMaxAndMin ( rateValuesTab ) [ 1 ] ) * ( ( float ) ( 0.0 ) ) ) ; v.left = 0 ; v.right = ( numberOfPoints ) - 1 ; chart . setMaximumViewport ( v ) ; chart . setCurrentViewport ( v ) ; }
getLeft ()
cal . set ( java.util.Calendar.MONTH , month )
final java.lang.Exception t
{ super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_chat ) ; mChatView . setLeftBubbleColor ( Color.WHITE ) ; mChatView . setSendIcon ( R.drawable.ic_action_send ) ; mChatView . setRightMessageTextColor ( Color.WHITE ) ; mChatView . setLeftMessageTextColor ( Color.BLACK ) ; mChatView . setUsernameTextColor ( Color.WHITE ) ; mChatView . setSendTimeTextColor ( Color.WHITE ) ; mChatView . setDateSeparatorColor ( Color.WHITE ) ; }
@ java.lang.Override public boolean createStudent ( java.lang.String name , java.lang.String userID , java.lang.String pass ) { if ( user . isSet () ) { if ( ( user . get () . access () ) == ( locationLevel.teacher ) ) { flash.card.java.model.Student s = new flash.card.java.model.Student ( name , userID , pass ) ; return this . db . putStudent ( s ) ; } } return false ; }
{ if ( keepCurrent ) { newSpeak += java.lang.String . valueOf ( word . charAt ( i ) ) ; keepCurrent = false ; } else { keepCurrent = true ; } }
if ( ( ( score ) % ( home.tetris.Scene.SCORE_PER_LEVEL ) ) == 0 ) { ( level ) ++ ; sound . play ( Sound.LEVEL_UP ) ; callback . onLevelUp ( level ) ; }
{ java.util.List < ralgorithm.State > states = new java.util.ArrayList < ralgorithm.State > () ; if ( ( ralgorithm.State state ) == 0 ) { ralgorithm.State state ; while ( true ) { state = step () ; if ( state == null ) { java.lang.System.out . println ( "Got NULL state" ) ; break; } states . add ( state ) ; } for ( ralgorithm.Movement m : moves ) { java.lang.System.out . println ( "FINALIZING" ) ; m . finalizeMove () ; } return states ; } }
( monthsInYear [ i ] ) == ( monthsInYear [ i ] )
{ datacache.disklrucache.DiskLruCache.Editor editor = mDiskIruCache . edit ( s ) ; if ( editor != null ) { java.io.OutputStream outputStream = editor . newOutputStream ( 0 ) ; mValueDataSaver . writeTo ( outputStream , data ) ; } editor . commit () ; }
try { photos = me.aerovulpe.crawler.data.Photo . arrayFromCursor ( params [ 0 ] ) ; } catch ( android.database.StaleDataException e ) {}
criteria = parameters . addDetachedFilters ( "pro )" , criteria ) ;
public int getValue ( gameplay.Card card ) { int s = card . getSuit () ; int val ; switch ( s ) { case 0 : val = this . indexOf ( spades , card ) ; break; case 1 : val = this . indexOf ( hearts , card ) ; break; case 2 : val = this . indexOf ( clubs , card ) ; break; case 3 : val = this . indexOf ( diamonds , card ) ; break; default: val = 0 ; } return val ; }
{ java.util.ArrayList < java.lang.String > inputParts = breakString ( rawInput ) ; int taskID = convertToInt ( getTaskParts ) ; java.lang.String date = getDateFromRaw ( inputParts ) ; if ( isInvalidID ( taskID ) ) { return false ; } logic . editTask ( taskID , date ) ; return true ; }
{ bbox . addHitBox ( new com.almasb.fxgl.physics.HitBox ( "ARM" , new javafx.geometry.Point2D ( 0 , 20 ) , com.almasb.fxgl.physics.BoundingShape . box ( 40 , 40 ) ) ) ; assertEquals ( 20 , bbox . getMinYWorld () , 0 ) ; position . translateY ( 100 ) ; assertEquals ( 120 , bbox . getMinYWorld () , 0 ) ; }
{ if ( ( ( org.apache.sqoop.connector.common.Time ) ( col ) ) . hasFraction () ) { return org.apache.sqoop.connector.common.SqoopIDFUtils . encloseWithQuotes ( org.apache.sqoop.connector.common.SqoopIDFUtils.tfWithFraction . print ( ( ( org.joda.time.LocalTime ) ( obj ) ) ) ) ; } else { return org.apache.sqoop.connector.common.SqoopIDFUtils . encloseWithQuotes ( org.apache.sqoop.connector.common.SqoopIDFUtils.tfWithNoFraction . print ( ( ( org.joda.time.LocalTime ) ( obj ) ) ) ) ; } }
if ( ( taken ) > ( duration ) ) { callActionCompletedListener () ; action . act ( delta ) ; if ( action . isDone () ) action . callActionCompletedListener () ; }
( ( sender . getBlock () ) == null ) || ( ( sender . getBlock () . getType () ) == ( org.bukkit.Material.COMMAND ) )
java.lang.Integer . toString ( ActionOnStartNone )
hideUserOptions ( 0 )
{ com.bgt.core.CoupleGenerator tip = com.bgt.core.Globals . getInstance () . getCoupleGenerator () ; com.bgt.core.CoupleGenerator tip = com.bgt.core.Globals . getInstance () . getCoupleGenerator () ; tip . getCouplesInSquare () . setCoupleNo ( square , cplPsn ) ; tip . getCouples () . setSelectedForSquare ( pathNo , true ) ; }
return true ;
java.util.Arrays . asList ( ( prefix + ( context . getString ( org.mapad.google.common.utils.MongoUtils.HOSTNAMES ) ) ) )
( mDual ) ? ( mIcon . getTop () ) + ( mIcon . getHeight () ) : height
ret = value
if ( ( r . getBomb () ) != null ) { this . bombtype = location . getBomb () . getBombtype () ; }
{ shoot . stopShooting () ; if ( ( currentWeapon ) != null ) { currentWeapon . upNbKills () ; currentWeapon . updateProbability () ; currentWeapon . upNbKills () ; currentWeapon . updateProbability () ; currentWeapon . upNbKills () ; currentWeapon . updateProbability () ; currentWeapon . upNbKills () ; currentWeapon . updateProbability () ; } }
{ checkWindow ( window ) ; windowManager . addView ( window.windowView , window.windowLayoutParams ) ; if ( ( powerManager . isScreenOn () ) && ( ! ( keyguardManager . inKeyguard.InputMode () ) ) ) { window . performStart () ; } }
{ java.util.List < com.kosn.entity.Item > equippedItems = new java.util.ArrayList < com.kosn.entity.Item > ( equipment . values () ) ; for ( com.kosn.entity.Item checkItem : equippedItems ) { if ( checkItem . getName () . equals ( target ) ) { return checkItem ; } } return null ; }
locationManager . requestLocationUpdates ( LocationManager.GPS_PROVIDER , 5000 , 10 , locationListener )
{ com.puppetlabs.geppetto.semver.Version v = getResolvedMetadataVersion ( element ) ; java.lang.StringBuilder bld = new java.lang.StringBuilder () ; bld . append ( "\"" ) ; bld . append ( v . getMajor () ) ; bld . append ( "." ) ; bld . append ( v . getMinor () ) ; bld . append ( ".x\"" ) ; context . getXtextDocument () . replace ( issue . getOffset () , issue . getLength () ) ; }
{ java.lang.String sortOrder = null ; switch ( sort ) { case name : sortOrder = ( MediaStore.Files.FileColumns.TITLE ) + " asc" ; break; case size : sortOrder = ( MediaStore.Files.FileColumns.SIZE ) + " asc" ; break; case date : sortOrder = ( MediaStore.Files.FileColumns.DATE_MODIFIED ) + " desc" ; break; case type : sortOrder = ( ( ( MediaStore.Files.FileColumns.MIME_TYPE ) + " asc, " ) + ( MediaStore.Files.FileColumns.TITLE ) ) + " asc" ; break; } return sortOrder ; }
new javax.crypto.spec.Iv p ( iv , pos , 0 )
{ setContentView ( R.layout.activity_base ) ; butterknife.ButterKnife . bind ( this ) ; android.view.View content = android.view.LayoutInflater . from ( this ) . inflate ( getLayoutRes () , root , false ) ; if ( hasTitle () ) { android.support.v7.widget.Toolbar toolbar = inflateToolbar () ; root . addView ( toolbar ) ; } root . addView ( content ) ; }
{ if ( ( this . compareTo ( that ) ) == 0 ) return java.lang.Double.NEGATIVE_INFINITY ; if ( ( this . x ) == ( that.x ) ) return java.lang.Double.POSITIVE_INFINITY ; return ( ( double ) ( ( this . y ) - ( that.y ) ) ) / ( ( double ) ( ( this . x ) - ( that.x ) ) ) ; }
public void printData () { if ( ( files . size () ) > 0 ) java.lang.System.out . println ( " Files: " ) ; else java.lang.System.out . println ( " <no files>" ) ; for ( int i = 0 ; i < ( files . size () ) ; ++ i ) java.lang.System.out . println ( ( " - " + ( files . get ( i ) ) ) ) ; }
if ( stack . getStackInSlot ( i ) . isEmpty () ) return false ;
editConfiguration ()
{ discoveryReplyList . add ( packetData ) ; android.widget.ListView lvDiscoveryReplies = ( ( android.widget.ListView ) ( findViewById ( R.id.listView_DiscoveryReplies ) ) ) ; adapter = ( ( android.widget.ArrayAdapter < java.lang.String > ) ( lvDiscoveryReplies . getAdapter () ) ) ; adapter . add ( packetData ) ; adapter . notifyDataSetChanged () ; }
{ try { scanKeyboard () ; } catch ( java.lang.InterruptedException e ) { _running = false ; e . printStackTrace () ; } catch ( java.lang.InterruptedException e ) { _running = false ; e . printStackTrace () ; } while ( ! ( _running ) ) ; }
( ( found != null ) && ( aux != null ) ) && ( aux . isAssignableFrom ( found ) ) )
{ back . setBounds ( ( ( back . getX () ) - 5 ) , back . getY () , back . getWidth () ) , ( ( back . getHeight () ) + 5 ) ) ; game.mainMenuScreen = new by.randomen.screens.MainMenuScreen ( game ) ; game . setScreen ( game.mainMenuScreen ) ; game.settingsMScreen . dispose () ; }
{ orderedResult = null ; if ( ( orderedResult ) == null ) { return seq ; } orderedResult . sort () ; final org.exist.xquery.value.Sequence result = orderedResult ; orderedResult = null ; if ( ( getReturnExpression () ) instanceof org.exist.xquery.FLWORClause ) { return ( ( org.exist.xquery.FLWORClause ) ( getReturnExpression () ) ) . postEval ( seq ) ; } return result ; }
protected void updateReel ( double x , double y , double orientationReelle , boolean enMarcheAvant , double contextbureReelle ) { if ( ( enMarcheAvant ) && ( ( enMarcheAvant ) > 0 ) ) { if ( enMarcheAvant ) { orientationGeometrique = orientationReelle ; contextbureGeometrique = courbureReelle ; } else { orientationGeometrique = orientationReelle + ( java.lang.Math.PI ) ; } } if ( ( position ) != null ) { if ( ( position . setX ( x ) ) . setY ( x ) ) position . setY ( y ) ; position . setY ( y ) ; this . orientationReelle = orientationReelle ; this . enMarcheAvant = enMarcheAvant ; this . contextbureReelle = courbureReelle ; } }
( ret != null )
{ boolean assert_ = false ; try { spreadsheet.mapper.utils.FieldUtils . subtractBusinessKey ( "test.int1" ) ; } catch ( java.lang.IllegalArgumentException e ) { spreadsheet.mapper.utils.FieldUtilsTest.LOGGER . debug ( "\'test.int1\' not business key" ) ; if ( e . getMessage () . contains ( "business key" ) ) { assert_ = true ; } } org.testng.Assert . assertTrue ( assert_ ) ; }
private int getBillWorth ( int itemDamage , int stackSize ) { int cash = 0 ; switch ( itemDamage ) { case 0 : cash = 1 ; break; case 1 : cash = 5 ; break; case 2 : cash = 5 ; break; case 2 : cash = 10 ; break; case 3 : cash = 20 ; break; case 4 : cash = 50 ; break; case 5 : cash = 100 ; break; } return cash * stackSize ; }
{ if ( att == null ) return null ; java.util.List < java.lang.String > res = new java.util.LinkedList < java.lang.String > () ; for ( int i = 0 ; i < ( att . size () ) ; i ++ ) res . add ( ( ( java.lang.String ) ( att . get ( i ) ) ) ) ; return res ; }
{ android.util.Log . v ( Utils.TAG , "Stopping scan" ) ; final no.nordicsemi.android.support.v18.scanner.BluetoothLeScannerCompat scanner = no.nordicsemi.android.support.v18.scanner.BluetoothLeScannerCompat . getScanner () ; scanner . stopScan ( scanCallback ) ; mIsScanning = false ; }
if ( ( orientation ) == ( Sens.VERTICAL ) ) { length = ( end . getRow () ) - ( start . getRow () ) ; } else if ( orientation ) { length = ( end . getCol () ) - ( start . getCol () ) ; }
com.ullink.slack.simpleslackapi.impl.SlackMessageHandleImpl handle = new com.ullink.slack.simpleslackapi.replies.SlackChannelReply >
Game.GameController . movement ( ( ( j .Player . getPlace () ) + 1 ) , 11 , j .Player , fieldController , playerController )
if ( modifiers . isEmpty () ) { sb . append ( ( "class " + ( clazz . getSimpleName () ) ) ) ; } else { sb . append ( modifiers + " class " ) ; }
if ( ( ( ( sourceAsMap == null ) || ( fields == null ) ) || ( sourceAsMap . isEmpty () ) ) || ( included != null ) ) { return; }
if ( ( ( mColorsSub . length ) - 1 ) < topIndex ) return;
public int findPositionById ( long id ) { android.database.Cursor cursor = getList () ; if ( cursor == null ) return - 1 ; while ( cursor . moveToNext () ) { if ( ( cursor . getLong ( 0 ) ) == id ) { return cursor . getPosition () ; } } return - 1 ; }
if ( cellMap . containsKey ( cell . getCellId () ) ) { elegit.treefx.Cell oldCell = cellMap . remove ( cell . getCellId () ) ; for ( elegit.treefx.Cell p : cell . getCellParents () ) { p . removeCellChild ( oldCell ) ; } }
{ int templateID = java.lang.Integer . parseInt ( ( ( java.lang.String ) ( mobData . get ( "templateID" ) ) ) ) ; mob . setTemplateID ( templateID ) ; }
config . containerName ()
java.lang.Integer . parseInt ( configDao . getValue ( Config.UCSSyncBladeInterval . key () ) )
{ expectedMessages . add ( HubProxyInfoBuilder.ERROR_MSG_CREDENTIALS_INVALID ) ; final com.blackducksoftware.integration.hub.builder.HubProxyInfoBuilder builder = new com.blackducksoftware.integration.hub.builder.HubProxyInfoBuilder () ; builder . setHost ( com.blackducksoftware.integration.hub.global.HubProxyInfoBuilderTest.VALID_HOST ) ; builder . setUsername ( "" ) ; builder . setPassword ( com.blackducksoftware.integration.hub.global.HubProxyInfoBuilderTest.VALID_PASSWORD ) ; final com.blackducksoftware.integration.hub.builder.ValidationResults < com.blackducksoftware.integration.hub.global.HubProxyInfoFieldEnum , com.blackducksoftware.integration.hub.global.HubProxyInfo > result ; builder . validateCredentials ( result ) ; org.junit.Assert . assertFalse ( result . isSuccess () ) ; actualMessages = getMessages ( result ) ; }
{ final org.glassfish.jersey.server.ResourceConfig rc = new org.glassfish.jersey.server.ResourceConfig () . packages ( "org.wikibrain.atlasify" ) ; rc . register ( org.wikibrain.atlasify.CORSFilter . class ) ; rc . register ( org.glassfish.jersey.jackson.JacksonFeature . class ) ; java.lang.System.out . println ( "Staring grizzly..." ) ; org.glassfish.grizzly.http.server.HttpServer server = org.glassfish.jersey.grizzly2.httpserver.GrizzlyHttpServerFactory . createHttpServer ( org.wikibrain.atlasify.AtlasifyServer.baseURI , rc ) ; return server ; }
if ( ( oldValue != null ) && ( oldValue instanceof com.hazelcast.query.extractor.MultiResult ) ) { java.util.List < java.lang.Object > results = ( ( com.hazelcast.query.extractor.MultiResult ) ( oldValue ) ) . getResults () ; for ( java.lang.Object o : results ) { java.lang.Comparable < java.lang.Object > results = ( ( com.hazelcast.query.extractor.MultiResult ) ( oldValue ) ) . getResults () ; for ( java.lang.Object o : results ) { java.lang.Comparable < java.lang.Object > results = ( ( com.hazelcast.query.extractor.MultiResult ) ( ( ( java.lang.Comparable ) ( o ) ) ) ) ; removeIndexInternal ( com.hazelcast.query.extractor.MultiResult ) ; } } else { return sanitizeValue ( ( ( java.lang.Comparable ) ( oldValue ) ) ) ; } }
android.content.Intent . onNext ( null )
if ( ! ( this . items [ i ] . equals ( updated ) ) ) { this . items [ i ] = updated ; }
{ rank = r ; if ( ( rank . isDonor () ) && ( ! ( donorranks . contains ( rank ) ) ) ) { donorranks . add ( rank ) ; } } }
server . url ( "" )
{ if ( ! ( getEpisode () . equals ( org.bottiger.podcast.SoundWaves . getAppContext ( getContext () ) . getPlaylist () . first () ) ) ) { setStatus ( ExoPlayerWrapper.STATE_READY ) ; return; } return setStatus ( argPlayerStatus ) ; }
client . getInitiator ( ( - 1 ) , ( - 1 ) )
toReturn . add ( packet . getData () ) ;
{ java.lang.String sDelay = settings . getString ( "idTimerMins" , com.givenhansco.keystonenavigation.Activities.MainMenuActivity.DEFAULT_TIMER_DELAY ) ; try { delay = java.lang.Long . parseLong ( sDelay ) ; } catch ( java.lang.Exception e ) { delay = > ; } android.util.Log . i ( com.givenhansco.keystonenavigation.Activities.MainMenuActivity.TAG , ( "timerDelay : " + delay ) ) ; if ( delay != 0 ) { delay = ( 1000 * 60 ) * delay ; } }
{ if ( index != ( this . songIndex ) ) { this . beatmapIndex = 0 ; setBeatmapIndex ( 0 ) ; } this . songIndex = index ; nextSongButton . setEnable ( ( index < ( ( Resources.songs . size () ) - 1 ) ) ) ; imageReload () ; textReload () ; }
{ createConnection . createConnection () ; createConnection . setDisable ( true ) ; clear . setDisable ( false ) ; closeConnection . setDisable ( false ) ; sentRequest . setDisable ( false ) ; additionalQueryBox . setDisable ( false ) ; addQueryToCollection . setDisable ( false ) ; openConnection . setDisable ( true ) ; offConnection . setDisable ( false ) ; }
{ java.util.List < java.util.HashMap > keywordList = keywordService . selectKeywordByKeyword ( keyword ) ; java.util.List < com.chas.model.Aspect > aspectList = aspectService . selectAllAspect () ; attr . addFlashAttribute ( "aspectList" , aspectList ) ; attr . addFlashAttribute ( "user" , user ) ; attr . addFlashAttribute ( "searchword" , keyword ) ; attr . addFlashAttribute ( "keywordList" , keywordList ) ; return "redirect:/keyword" ; }
@ ninja.FilterWith ( java.lang.String user , @ ninja.params.PathParam ( value = "user" ) java.lang.String user , @ ninja.params.PathParam ( value = "user" ) java.lang.String work ) { www.purple.mixxy.models.User username = userDao . getUser ( user ) ; if ( ( username == null ) || ( comic == null ) ) { return ninja.Results . notFound () . template ( ( "www/purple/mixxy/" + ( ninja.utils.NinjaConstant.LOCATION_VIEW_FTL_HTML_NOT_FOUND ) ) ) ; } return ninja.Results . ok () . render ( "comic" , comic ) . render ( "user" , user ) ; }
de.blackcraze.grb.i18n.Resource . getItem ( stock . getName () , locale ) . toLowerCase () . contains ( name )
if ( semaphore . tryAcquire ( 1 , acquireTimeoutMs , java.util.concurrent.TimeUnit.MILLISECONDS ) ) { throw new java.lang.RuntimeException () ; }
{ mGoogleApiClient = null ; if ( ( customThreadCheckLocation ) != null ) customThreadCheckLocation . stopRunning ( false ) ; if ( ( customThreadCheckGPSState ) != null ) customThreadCheckGPSState . stopRunning ( false ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( this ) . unregisterReceiver ( receiverMaps ) ; floorPlanNavigationImageImageView . setImageDrawable ( null ) ; if ( ( roundCornersBitmap ) != null ) roundCornersBitmap . recycle () ; }
{ int written = 0 ; for ( int i = 0 ; i < ( java.lang.Math . min ( length , data.length ) ) ; i ++ ) { if ( ( writeBitsRaw ( org.q3df.demo.Q3HuffmanCoder.huff_paths [ ( 255 & ( data [ i ] ) ) ] , org.q3df.demo.Q3HuffmanCoder.sym_size [ ( 255 & ( data [ i ] ) ) ] ) ) > 0 ) { written ++ ; } else break; } return written ; }
{ final org.apache.shiro.session.mgt.SimpleSession simpleSession = new org.apache.shiro.session.mgt.SimpleSession () ; simpleSession . setId ( recordId ) ; simpleSession . setStartTimestamp ( startTimestamp . toDate () ) ; simpleSession . setLastAccessTime ( lastAccessTime . toDate () ) ; simpleSession . setTimeout ( timeout ) ; simpleSession . setHost ( host ) ; final java.util.Map attributes = serializer . deserialize ( sessionData ) ; simpleSession . put ( attributes ) ; return simpleSession ; }
public static < T extends android.os.Parcelable > java.util.Map < java.lang.String , T > fromBundle ( android.os.Bundle input , java.lang.Class < T > claz ) { input . setClassLoader ( claz . getClassLoader () ) ; java.util.Map < java.lang.String , T > output = new android.support.v4.util.ArrayMap < java.lang.String , T > () ; for ( java.lang.String key : input . keySet () ) { output . put ( key , ( ( T ) ( input . getParcelable ( key ) ) ) ) ; } return output ; }
if ( array2 [ 0 ] . equals ( course2 ) ) { fail ( "Remove for the coursePackage't work" ) ; }
match = "import foo;\n" + match
private int getPlayerForLine ( final int row , final java.lang.String playerFigure ) { int playerRowCount = 0 ; for ( int i = 0 ; i < ( board . getRowLength ( row ) ) ; i ++ ) { if ( ( ( board . getFigure ( row , i ) ) != null ) && ( ( board . getFigure ( row , i ) . toString () ) == playerFigure ) ) { playerRowCount ++ ; } } return playerRowCount ; }
if ( ( team.name . equals ( this . name ) ) && ( this . players . equals ( team.players ) ) ) return true ;
{ android.location.Location currentLocation = com.mobilemakers.juansoler.appradar.StartScreenFragment . getLastLocation () ; if ( currentLocation == null ) { return - 1 ; } android.location.Location nextLocation = createTheNextLocation ( latitude , longitude ) ; float distance = ( currentLocation . distanceTo ( nextLocation ) ) / 1000 ; return new java.math.BigDecimal ( distance ) . setScale ( 1 , java.math.BigDecimal.ROUND_HALF_UP ) . floatValue () ; }
jsonNode . get ( 0 ) . intValue ()
new org.eclipse.titan.runtime.core.TitanBoolean ( get_char () , other_value . charAt ( 0 ) )
{ java.util.List < com.google.android.gms.maps.model.LatLng > result = new java.util.ArrayList ( points . size () ) ; for ( casak.ru.geofencer.domain.model.Point point : points ) { result . add ( casak.ru.geofencer.presentation.converters.LatLngConverter . convertToLatLng ( point ) ) ; } return result ; }
valuesToInsert . put ( "glucoseValue" , ( - ( android.widget.EditText ) ) ) ;
com.sweproject.calorietracker.MainActivity . insertDBData ( com.sweproject.calorietracker.DataObjects.Food_Day . class , this , new com.sweproject.calorietracker.DataObjects.Food_Day ( FragmentCalendar.currentDay . getId () , mServingSizes . get ( mSelectedIndex ) . getId () ) , false )
@ java.lang.Override public void printMonsters ( java.lang.String [] , characters.active.ActiveCharacter user ) { for ( this . map.Room room : getRooms () ) { if ( user . getRoom () . equals ( room ) ) { for ( characters.active.ActiveCharacter enemy : room . getMonsters () ) { if ( ! ( enemy . isDead () ) ) { if ( util.RandUtil . containsTuple ( enemy . getPosition () , user . getVisiblePositions () ) ) { room . printMonsters ( j , user . getVisiblePositions () ) ; } } } } } }
{ java.sql.Connection conn = null ; try { conn = this . getConnection () ; java.lang.System.out . println ( "Successfully connected to database!" ) ; } catch ( java.sql.SQLException e ) { java.lang.System.out . println ( "Error: Could not connect to the database." ) ; e . printStackTrace () ; return; } }
java.lang.String . format ( "Component '%s' output size '%d' target => '%s'" , src . getName () , output . size () , targetName )
tern.eclipse.ide.ui.utils.EditorUtils . openInEditor ( file )
holder.mTextView . setText ( mValues [ position ] )
protected void doGet ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { java.lang.String action = request . getParameter ( "action" ) ; if ( ( action != null ) && ( action . equals ( "list" ) ) ) { com.tsystems.javaschool.timber.logiweb.service.TruckService truckService = new com.tsystems.javaschool.timber.logiweb.service.TruckService ( new com.tsystems.javaschool.timber.logiweb.dao.TruckDao () ) ; java.util.List < com.tsystems.javaschool.timber.logiweb.entity.Truck > trucks = truckService . findAll () ; request . setAttribute ( "trucks" , trucks ) ; javax.servlet.RequestDispatcher rd = getServletContext () . getRequestDispatcher ( "/trucks.jsp" ) ; rd . forward ( request , response ) ; } }
( ( stateStack . size () ) <= 1 )
{ while ( ! ( subexpressionStack . empty () ) ) { subexpression += subexpressionStack . pop () ; } expressionParts . add ( new app.com.example.grace.currencycalculator.models.Operand ( new java.lang.StringBuilder ( subexpression ) . reverse () . toString () ) ) ; subexpression = "" ; }
{ ca.hoogit.powerhour.Game.Engine.started = false ; if ( mGame . is ( State.ACTIVE ) ) { mTimer . cancel () ; mVibrator . cancel () ; } android.util.Log . i ( ca.hoogit.powerhour.Game.Engine.TAG , ( "Stopping game on round " + ( mGame . currentRound () ) ) ) ; finish () ; }
predicate = newPredicate ( dslPredicate )
{ if ( laser_direction == 2 ) { board_pieces . remove ( this ) ; return - 1 ; } return - 1 ; }
{ sensor . setData ( jdbcTemplate . query ( latestDataQuery , new com.bubblewrap.plants.webserver.jdbc.SensorDataRowMapper () ) ) ; }
helpers.QuestionHelper . assertQuestionInSurvey ( questions.PostQuestionTest.surveyId )
void addInterval ( com.example.map.ari.workoutclass.exerciseObjects.Interval interval ) { if ( intervalViewToAdd ( null ) ) { return; } int pos = context . getChildCount () ; if ( ( pos % 2 ) == 0 ) { intervalView . setBackgroundColor ( getResources () . getColor ( R.color.even_list_item ) ) ; } else { intervalView . setBackgroundColor ( getResources () . getColor ( R.color.odd_list_item ) ) ; } }
if ( reference != null ) { reference . set ( value ) ; }
if ( preferredSugar . equals ( ( ( ( ( org.eclipse.xtext.xbase.typesystem.conformance.ConformanceFlags.CHECKED_SUCCESS ) | ( org.eclipse.xtext.xbase.typesystem.conformance.ConformanceFlags.LAMBDA_VOID_COMPATIBLE ) ) | ( org.eclipse.xtext.xbase.typesystem.conformance.ConformanceFlags.PROPAGATED_TYPE ) ) | ( org.eclipse.xtext.xbase.typesystem.conformance.ConformanceFlags.SEALED ) ) ) ; getExpectation () . acceptActualType ( resultClosureType , ( ( ( ( org.eclipse.xtext.xbase.typesystem.conformance.ConformanceFlags.CHECKED_SUCCESS ) | ( org.eclipse.xtext.xbase.typesystem.conformance.ConformanceFlags.LAMBDA_VOID_COMPATIBLE ) ) | ( org.eclipse.xtext.xbase.typesystem.conformance.ConformanceFlags.PROPAGATED_TYPE ) ) | ( org.eclipse.xtext.xbase.typesystem.conformance.ConformanceFlags.SEALED ) ) ) ;
pickNumber ( 3 )
public void connect ( ) throws java.io.IOException , java.security.spec.InvalidKeySpecException , javax.crypto.BadPaddingException , java.security.spec.InvalidKeySpecException , javax.crypto.BadPaddingException , java.security.spec.InvalidKeySpecException , javax.crypto.BadPaddingException , java.security.spec.InvalidKeySpecException , javax.crypto.BadPaddingException , javax.crypto.Illegal abs ( this ) ; thread . setDaemon ( true ) ; thread . start () ;
{ super . start ( context ) ; net.bioclipse.balPage.business.Activator.plugin = this ; }
{ currentQuestion = quiz . nextQuestion () ; if ( ( currentQuestion ) == null ) { currentState = backend.GameState.GAME_OVER ; return false ; } lblCurrentQ . setText ( currentQuestion . getQ () ) ; int index = 0 ; for ( java.lang.String ans : currentQuestion . getAnswers () ) { answers [ index ] . setText ( ans ) ; index ++ ; } lblTime . setText ( java.lang.Integer . toString ( currentQuestion . getTimeLimit () ) ) ; }
{ java.nio.file.Path taskFile = java.nio.file.Paths . get ( "/home/salankiv/greenfox/salankiv-todo-app/assets/tasks.txt" ) ; java.util.List < java.lang.String > lines = java.nio.file.Files . readAllLines ( taskFile ) ; for ( int i = 0 ; i < ( lines . size () ) ; i ++ ) { java.lang.System.out . println ( ( ( ( i + 1 ) + ". " ) + ( lines . get ( i ) ) ) ) ; } }
( ! ( mTwoPane ) ) && ( fragment instanceof com.qualicom.availabilitydashboard.NodeListActivityFragment )
tuple . getStringByField ( "message" )
{ javax.sound.sampled.Clip clip = javax.sound.sampled.AudioSystem . getClip () ; java.net.URL audioUrl = java.lang.ClassLoader . getSystemResource ( Game.musicFile ) ; java.io.File audioFile = new java.io.File ( audioUrl . toURI () ) ; javax.sound.sampled.AudioInputStream inputStream = javax.sound.sampled.AudioSystem . getAudioInputStream ( audioFile ) ; clip . open ( inputStream ) ; clip . start () ; clip . loop ( javax.sound.sampled.Clip.LOOP_CONTINUOUSLY ) ; }
{ if ( clients [ index ] . active () ) { clients [ index ] . write ( data ) ; index ++ ; } else { removeIndex ( index ) ; } }
public de.marsetex.lab2.task3.RationalNumber subtract ( de.marsetex.lab2.task3.RationalNumber other ) { int zaehlerTemp = ( ( zaehler ) * ( other.nenner ) ) + ( ( other.zaehler ) * ( nenner ) ) ; int nennerTemp = ( nenner ) * ( other.nenner ) ; return new de.marsetex.lab2.task3.RationalNumber ( zaehlerTemp , nennerTemp ) ; }
for ( java.lang.String string : decolored ) { decolored . add ( com.nisovin.shopkeepers.Utils . translateColorCodesTo f ( '&' , string ) ) ; }
public void onClick ( android.view.View v ) { globalPlay . setFgMadeFlag ( goodCB . isChecked () ) ; globalPlay . setFgDistance ( java.lang.Integer . parseInt ( fgDistanceEditText . getText () . toString () ) ) ; if ( ! ( kickerEditText . getText () . toString () . equals ( "" ) ) ) { globalPlay . setPlayerNumber ( java.lang.Integer . parseInt ( kickerEditText . getText () . toString () ) ) ; } flow = true ; newPlayDialog () ; dialog . dismiss () ; }
i = ( ( int ) ( ( ( java.lang.Math . random () ) * 33 ) % ( ( com.coollooks.Util.tShirtPathList . size () ) - 1 ) ) )
{ for ( int h = 0 ; h < ( grid . size () ) ; h ++ ) { for ( int w = 0 ; w < ( fieldWidth ) ; w ++ ) { grid . get ( h ) . add ( w , new Cell () ) ; } } }
{ de.alaoli.games.minecraft.mods.yadm.data.settings.EntitySpawnSetting setting = ( ( de.alaoli.games.minecraft.mods.yadm.data.settings.EntitySpawnSetting ) ( this . dimension . get ( SettingType.ENTITYSPAWN ) ) ) ; setting . increase ( entity ) ; if ( setting . isLimitReached ( entity ) ) { this . removeEntity ( entity ) ; } }
{ java.util.Set < tools.gsf.navigation.AssetNode > _getDescendents ( tools.gsf.navigation.AssetNode n ) ; if ( ( n . getChildren () ) == null ) { return null ; } }
com.annimon.stream.Stream . of ( new com.fastaccess.data.dao.FragmentPagerAdapterModel ( context . getString ( R.string.opened ) , com.fastaccess.ui.modules.repos. ,.issue.RepoOpenedIssuesView . newInstance ( repoId , login , java.lang.String ) , new com.fastaccess.data.dao.FragmentPagerAdapterModel ( context . getString ( R.string.closed ) , com.fastaccess.ui.modules.repos. item.issue.RepoClosedIssuesView . newInstance ( repoId , login , null ) ) ) )
for ( java.lang.String mail : email . split ( ";" ) ) this . to . add ( new javax.mail.internet.InternetAddress ( mail ) ) ;
{ java.lang.String ext = libra.common.helpers.PathHelper . getExtensionWithoutCompressed ( path . getName () ) . toLowerCase () ; for ( java.lang.String fext : libra.common.sequence.FastaPathFilter.FASTA_EXT ) { if ( ext . equals ( fext ) ) { return true ; } } return false ; }
{ java.util.List < com.ca.devtest.lisabank.wsdl.User > users = bankServices . getListUserWithoutAdmin () ; org.junit.Assert . assertNotNull ( users ) ; assertEquals ( "Il y a plus de 7 utilisateurs, le trim \"userControl\" ne sont pas correctement configur\u00e9" , 6 , users . size () ) ; assertNotEquals ( "Admin" , users . get ( 0 ) . getLname () ) ; }
{ org.terasology.miniion.components.NPCMovementInputComponent characterMovementComponent = entity . getComponent ( org.terasology.miniion.components.NPCMovementInputComponent . class ) ; org.terasology.logic.characters.CharacterComponent characterComp = entity . getComponent ( org.terasology.logic.characters.CharacterComponent . class ) ; entity . send ( new org.terasology.logic.characters.CharacterMoveInputEvent ( ( ( input ) ++ ) , 0 , 0 , characterMovementComponent.directionToMove , characterMovementComponent.runningRequested , characterMovementComponent.jumpingRequested , ( ( long ) ( delta ) ) ) ) ; }
{ int flags = communication.utils.NumberParser . intToByte ( data [ 0 ] ) ; int sessionId = communication.utils.NumberParser . intToByte ( data [ 1 ] ) ; byte [] newData = java.util.Arrays . copyOfRange ( data , 2 , data.length ) ; return new communication.pdu.SessionPDU ( flags , sessionId , new communication.pdu.PDU ( newData ) ) ; }
{ com.badlogic.gdx.backends.lwjgl3.Lwjgl3Cursor . disposeSystemCursors () ; if ( ( audio ) instanceof com.badlogic.gdx.backends.lwjgl3.audio.OpenALAudio ) { ( ( com.badlogic.gdx.backends.lwjgl3.audio.OpenALAudio ) ( audio ) ) . dispose () ; } com.badlogic.gdx.backends.lwjgl3.Lwjgl3Application.errorCallback . free () ; if ( ( com.badlogic.gdx.backends.lwjgl3.Lwjgl3Application.glDebugCallback ) != null ) { com.badlogic.gdx.backends.lwjgl3.Lwjgl3Application.glDebugCallback . free () ; } org.lwjgl.glfw.GLFW . glfwTerminate () ; }
{ ddejonge.ggp.sat.logic.Clause newClause = new ddejonge.ggp.sat.logic.Clause ( clause . getPositiveAtoms () ) ; newClause . addLiteral ( p , positive ) ; }
{ java.lang.System.out . println ( ( ( java.lang.InterruptedException ) == null ) ) ? null : pvator.setBottom . event () ; waitUntil ( pvator.atBottom ) ; java.lang.System.out . println ( new java.util.ArrayList < java.lang.String > () ) ; java.lang.System.out . println ( new java.util.ArrayList < java.lang.String > () ) ; java.lang.System.out . println ( new java.util.ArrayList < java.lang.String > () ) ; java.lang.System.out . println ( new java.lang.Object [ 0 ] ) ; new java.util.ArrayList < java.lang.String > () ; }
{ com.nostra13.universalimageloader.core.DisplayImageOptions options = new com.nostra13.universalimageloader.core.DisplayImageOptions.Builder () . showImageOnLoading ( icon ) . showImageForEmptyUri ( icon ) . showImageOnFail ( icon ) . cacheInMemory ( false ) . cacheInMemory ( false ) . build () ; return options ; }
{ android.view.View rootView = inflate ( context , R.layout.easytabs , this ) ; tabs = ( ( android.support.design.widget.TabLayout ) ( rootView . findViewById ( R.id.tabs ) ) ) ; pager = ( ( android.support.v4.view.ViewPager ) ( rootView . findViewById ( R.id.pager ) ) ) ; appCompactActivity = ( ( android.support.v7.app.AppCompatActivity ) ( context ) ) ; }
{ distance += 0.2F * ( ( acc ) / 100 ) ; acc -= 0.1F ; if ( ( acc ) < 0 ) { option = true ; Gdis = distance ; distance = 0.0F ; acc = Cacc ; } }
{ if ( ( ( tempStr ) < 2 ) && ( addPoints ) ) { ( availablePoints ) -- ; ( tempStr ) ++ ; } else if ( ( ( value ) > 0 ) && ( ! ( addPoints ) ) ) { ( availablePoints ) ++ ; } java.lang.System.out . println ( ( ( ( "Available.: " + ( availablePoints ) ) + "\nEnhanced St - 1 ) ) ) ; }
{ final android.content.Intent intent = new android.content.Intent ( this , com.nervousfish.nervousfish.activities.KeyManagementActivity . class ) ; intent . putExtra ( ConstantKeywords.SERVICE_LOCATOR , com.nervousfish.nervousfish.activities.SettingsActivity.serviceLocator ) ; this . startActivity ( intent ) ; }
( prevs [ 0 ] ) == null
{ swimmer . restart () ; this . gameState = com.cpioli.headabovewater.screens.GameScreen.GAME_PLAY ; swimmer . restart () ; }
public java.util.HashMap < helper.Position , java.util.HashMap < java.lang.String , java.util.HashSet < java.lang.String > > > relationReprs () { java.util.HashMap < helper.Position , java.util.HashMap < java.lang.String , java.util.HashSet < java.lang.String > > relationReprs = new java.util.HashMap < helper.Position , java.util.HashMap < java.lang.String , java.util.HashSet < java.lang.String > > () ; for ( helper.Position p : helper.Position . values () ) { relationReprs . put ( p , new java.util.HashMap < java.lang.String , java.util.HashSet < java.lang.String > > () ) ; } return relationReprs ; }
private void info () { try { java.lang.StringBuilder info = util.FileHandler . readStringBuilder ( "information" ) ; notifier . send ( ( ( answerCommand ) + ( info . toString () ) ) ) ; } catch ( java.lang.Exception ex ) { java.lang.String error = "Error when reading info file." ; logging.Logger . logMessage ( 'E' , this , error ) ; notifier . send ( ( ( answerCommand ) + error ) ) ; } }
float minSpread = 0 ;
switch ( item . getItemId () ) { case org.stendardo.bsak.qiblih.CompassActivity.EDIT_ID : startActivity ( new android.content.Intent ( this , org.stendardo.bsak.qiblih.QiblihPreferences . class ) ) ; return true ; case org.stendardo.bsak.qiblih.CompassActivity.CLOSE_ID : finish () ; return true ; case org.stendardo.bsak.qiblih.CompassActivity.README_ID : startActivity ( new android.content.Intent ( this , org.stendardo.bsak.qiblih.ReadmeActivity . class ) ) ; return true ; }
switch ( department ) { case " super" : return org.yamj.core.database.model.type.JobType.WRITER ; case "directing" : return org.yamj.core.database.model.type.JobType.DIRECTOR ; case "production" : return org.yamj.core.database.model.type.JobType.PRODUCER ; case "sound" : return org.yamj.core.database.model.type.JobType.SOUND ; case "camera" : return org.yamj.core.database.model.type.JobType.CAMERA ; case "art" : return org.yamj.core.database.model.type.JobType.EDITING ; }
translator . translate ( wrapped . translate ( wrapped ) )
{ org.springframework.ui.Model model = org.mockito.Mockito . mock ( org.springframework.ui.Model . class ) ; java.util.List < com.odde.bbuddy.account.domain.Account > accounts = dataMother . getAccounts () ; when ( this . accounts . getList () ) . thenReturn ( accounts ) ; controller . list ( model ) ; org.mockito.Mockito . verify ( model ) . addAttribute ( "accounts" , accounts ) ; }
date = new java.util.Date ( columns . size () )
org.jenkinsci.plugins.github.webhook.WebhookManager . forHookUrl ( org.jenkinsci.plugins.github.webhook.WebhookManagerTest.HOOK_ENDPOINT ) . createHookSubscribedTo ( com.google.common.collect.Lists . newArrayList ( org.kohsuke.github.GHEvent.PUSH ) , false )
{ super . onActivityCreated ( savedInstanceState ) ; createHandler () ; android.support.v4.app.FragmentManager fm = getFragmentManager () ; mWorkFragment = ( ( com.betterchat.www.utility.RetainedFragment ) ( fm . findFragmentByTag ( "work" ) ) ) ; mWorkFragment = new com.betterchat.www.utility.RetainedFragment () ; mWorkFragment . setTargetFragment ( this , 0 ) ; fm . beginTransaction () . add ( mWorkFragment , "work" ) . commit () ; client = mWorkFragment . getClient () ; }
{ if ( ( ctx.side ) == ( net.minecraftforge.fml.relauncher.Side.CLIENT ) ) { com.lothrazar.cyclicmagic.ModMain.IPlayerExtendedProperties props = com.lothrazar.cyclicmagic.ModMain . getPlayerProperties ( net.minecraft.client.Minecraft . getMinecraft () . thePlayer ) ; } else { props . setDataFromNBT ( message.tags ) ; } }
utility.Util . getRandomNumber ( 1 , 1 )
{ android.view.View buttonReset = findViewById ( R.id.button_new_appointment ) ; buttonReset . setVisibility ( com.zyumbik.makeanappointment.custom_views.VISIBLE ) ; buttonReset . setOnClickListener ( null ) ; }
new game.Player ( 0.0 , i , 0.0 )
{ if ( inputNumber < 0 ) { inputNumber -= number ; inputNumber -= number ; } java.lang.System.out . println ( inputNumber ) ; }
org.cloudfoundry.operations.ApplicationsTest . createApplication ( this . cloudFoundryOperations , org.cloudfoundry.operations.ApplicationsTest . getApplicationBits () )
com.mygdx.game.shared.model.TilePolygonLoader . loadTilePolygon ( tilePolygon )
( ( ( ( ( ( "IPTABLE " + ( this . messageID ) ) + " " ) + ( ipAddress ) ) + " " ) + msg ) + " " ) + msg
{ initialize () ; }
{ int count = 0 ; int contentLength = content . length () ; for ( int i = 0 ; i < contentLength ; i ++ ) { if ( charForSearch == ( content . charAt ( i ) ) ) { count ++ ; } } return count ; }
{ org.openqa.selenium.WebDriver retVal = getWebDriver () ; if ( getBrowserProfile () . isPreserveCookiesOnExecutions () ) { org.openqa.selenium.chrome.ChromeOptions ops = new org.openqa.selenium.chrome.ChromeOptions () ; ops . addArguments ( ( "--user-data-dir=" + ( getBrowserProfile () . getTestCaseChromeUserDataDir () ) ) ) ; retVal = new org.openqa.selenium.chrome.ChromeDriver ( ops ) ; } else { retVal = new org.openqa.selenium.chrome.ChromeDriver () ; } return retVal ; }
public java.lang.String convertRequestToString ( ) throws java.io.IOException { java.io.InputStreamReader inputStreamReader = new java.io.InputStreamReader ( inputStream ) ; java.io.BufferedReader bufferedReader = new java.io.BufferedReader ( inputStreamReader ) ; java.lang.StringBuilder requestBuilder = new java.lang.StringBuilder () ; java.lang.String line ; do { line = bufferedReader . readLine () ; requestBuilder . append ( line ) ; if ( line . equals ( "" ) ) break; } return requestBuilder . toString () ; }
matches . values () . contains ( true )
private double distanceTo ( pathfinding.MapNode n ) { double xDelta = ( this . location . getX () ) - ( n.location . getX () ) ; double yDelta = ( this . location . getY () ) - ( n.location . getY () ) ; return java.lang.Math . sqrt ( ( ( java.lang.Math . pow ( xDelta , 2 ) ) + ( java.lang.Math . pow ( yDelta , 2 ) ) ) ) ; }
{ try { while ( ( product . getProductState ( vm ) ) == ( ch.admin.vbs.cube.core.vm.IVmProduct.VmProductState.STARTING ) ) { java.lang.Thread . sleep ( 500 ) ; } product . connect channel ( vm , true ) ; } catch ( java.lang.Exception e ) { ch.admin.vbs.cube.core.vm. ) ; } }
{ java.lang.String description = bldg . getInteriorDescription () ; java.lang.String imagePath = bldg . getIntImagePath () ; displayBuilding ( description , imagePath ) ; if ( imagePath != null ) { _currentBldg = bldg ; displayBuilding ( description , imagePath ) ; } else { _frame . displayText ( civ.BuildingDisplayCiv.NO_BLDG_FOUND ) ; } }
{ model . setLatestEvent ( null ) ; for ( org.eclipse.viatra.cep.core.metamodels.automaton.EventToken eventToken : model . getEventTokensInModel () ) { eventToken . setLastProcessed ( null ) ; } model . getEnabledForTheLatestEvent () . clear () ; strategy . handleInitTokenCreation ( model ) ; }
{ java.lang.System.out . println ( "valid move" ) ; board [ posOnBoard ] = tile ; turnTiles ( posOnBoard ) ; return true ; }
model . addAttribute ( paginationInfo )
( java.lang.Math . signum ( stellarium.util.math.Spmath . getD ( sciapi.api.value.util.VOp . dot ( sciapi.api.value.euclidian.CrossUtil . cross ( ( ( sciapi.api.value.IValRef ) ( EcRPosG ) ) , ( ( sciapi.api.value.IValRef ) ( stellarium.stellars.EcRPos ) ) ) ) ) ) ) * ( getPhase () )
public void analyze ( org.litepal.crud.DataSupport baseObj ) { if ( ( baseObj . getClassName () ) != null ) { try { java.util.Collection < org.litepal.crud.model..iationsInfo > result = getAssociationInfo ( baseObj . getClassName () ) ; analyzeAssociatedModels ( baseObj ) ; } catch ( java.lang.Exception e ) { throw new org.litepal.exceptions.DataSupportException ( e . getMessage () ) ; } } }
{ graphicslib3D.Point3D cameraLocation = camera1 . getLocation () ; graphicslib3D.Matrix3D cameraTranslation = new graphicslib3D.Matrix3D () ; cameraTranslation . translate ( cameraLocation . getX () , cameraLocation . getY () , cameraLocation . getZ () ) ; comBox . setLocalTranslation ( cameraTranslation ) ; if ( ( thisClient ) != null ) { thisClient . processPackets () ; } camera1Controller . update ( elapsedTimeMS ) ; super . update ( elapsedTimeMS ) ; }
className . equals ( net.x11.patch.XKeysymTransformer.XNET_PROTOCOL ) ? doClass ( className , classBeingRedefined , classfileBuffer ) : classfileBuffer
{ java.util.ArrayList < java.awt.geom.Point2D.Double > testPath = new java.util.ArrayList < java.awt.geom.Point2D.Double > () ; for ( int i = 0 ; i < 1000 ; i ++ ) { testPath . add ( new java.awt.geom.Point2D.Double ( ( i / 500.0 ) , 0.0 ) ) ; } }
{ long time_start = java.lang.System . currentTimeMillis () ; }
( ( intrinsicVideoSize.y ) <= ( view . getWidth () ) ) && ( ( intrinsicVideoSize.x ) <= ( view . getHeight () ) )
{ try ( sbahjsic.io.FileSource fs = new sbahjsic.io.FileSource ( new java.io.File ( ( ( ( ( sbahjsic.io.StandardLibrary.STD ) + "/" ) + packageName ) + ".sb" ) ) ) ) { env . execute ( fs ) ; } sbahjsic.io.StandardLibrary.LOADED . add ( packageName ) ; }
io.oasp.module.rest.service.impl.RestServiceExceptionFacade.LOG . error ( "Service failed on server" , exception )
{ if ( isGameOver ) { return; } if ( computerMove == ( - 1 ) ) { setXBackground ( levelPlayer1 , computerMove ) ; fillGameGrid ( computerMove , Constants.PLAYER2 ) ; areButtonsClicked [ computerMove ] = true ; asyncService . checkForWinner ( gameGrid , Constants.PLAYER2 , this ) ; setButtonsClickable () ; } }
public static double appendToSize ( double value , int sigFigs ) { java.math.BigDecimal valueBDtoSize = java.math.BigDecimal.ZERO ; java.math.BigDecimal valueBDtoSize = java.math.BigDecimal.ZERO ; if ( java.lang.Double . isFinite ( value ) ) { java.math.BigDecimal valueBD = new java.math.BigDecimal ( value ) ; int newScale = sigFigs - ( ( valueBD . precision () ) - ( valueBD . scale () ) ) ; valueBDtoSize = valueBD . setScale ( newScale , java.math.RoundingMode.HALF_UP ) ; } return valueBDtoSize . doubleValue () ; }
switch ( loader . getId () ) { case com.android.contacts.list.JoinContactListFragment.DISPLAY_NAME_LOADER : { if ( data != null ) { if ( ( data != null ) && ( data . moveToFirst () ) ) { showTargetContactName ( data . getString ( 0 ) ) ; } break; } break; } return; }
getArgument ( context , 1 )
{ model.CardSettings cardSettings = model.GameCreation . getInstance () . getCardSettings () ; if ( ( ( java.lang.String ) ( newNum ) ) . matches ( "[0-9]*" ) ) { cardSettings . setNumDecks ( java.lang.Integer . parseInt ( ( ( java.lang.String ) ( newNum ) ) ) ) ; updateSuitTextFields ( view . getCardComboBox () . getValue () ) ; } }
{ android.widget.TableRow.LayoutParams pieceLayout = new android.widget.TableRow.LayoutParams ( ( ( height ) / 6 ) , ( ( height ) / 6 ) ) ; imageView . setLayoutParams ( pieceLayout ) ; imageView . setOnClickListener ( directionClicked ) ; imageView . setImageResource ( id ) ; imageView . setPivotX ( ( ( height ) / 12 ) ) ; imageView . setPivotY ( ( ( height ) / 12 ) ) ; imageView . setRotation ( rotation ) ; }
try { serverSocket . close () ; executorService . shutdown () ; } catch ( java.io.IOException e ) { java.lang.System.err . println ( ( "Exception during closings: " + ( e . getMessage () ) ) ) ; }
new Controller ( args )
drawLives ()
java.util.Objects . equals ( this . suit , other.suit )
try { java.lang.reflect.Constructor < ? > cons = clss . getConstructor ( android.content.Context . class ) ; return cons . newInstance ( androidContext ) ; } catch ( java.lang.reflect.InvocationTargetException ite ) {}
startNotification ( contact )
{ android.view.View view = inflater . inflate ( R.layout.fragment_ () , container , false ) ; android.view.View view = inflater . inflate ( R.layout.fragment_ () , container , false ) ; android.view.View view = inflater . inflate ( R.layout.fragment_ () , container , false ) ; android.view.View view = inflater . inflate ( R.layout.fragment_ () , container , false ) ; }
if ( quantity <= ( getMaximumQuantity () ) ) { subgroupsQuantityLayout . setError ( getString ( R.string.nwinners_msg_validate_quantity , group . getItemCount () ) ) ; requestFocus ( subgroupsQuantity ) ; return false ; }
{ for ( short [] element : list ) { if ( ! ( java.util.Arrays . equals ( element , array ) ) ) { return false ; } } return false ; }
{ com.fasterxml.jackson.databind.JsonNode json = request () . body () . asJson () ; controllers.Usuario usuario = play.libs.Json . fromJson ( json , controllers.Usuario . class ) ; try { controllers.Aut >acaoController.sistemaUsuarios . adicionarUsuario ( usuario ) ; } catch ( controllers.DadosInvalidosException exception ) { return badRequest ( exception . getMessage () ) ; } return ok ( play.libs.Json . toJson ( usuario ) ) ; }
{ getContext () . alliance ( 1 , 0 ) ; getContext () . alliance ( 2 , 0 ) ; net.toyknight.aeii.campaign.Message message = new net.toyknight.aeii.campaign.Message ( 5 , net.toyknight.aeii.utils.Language . getText ( "CAMPAIGN_CHALLENGE_STAGE_4_MESSAGE_1" ) ) ; getContext () . message ( message ) ; }
{ mCurrentLocation = new com.google.android.gms.maps.model.LatLng ( location . getLatitude () , location . getLongitude () ) ; mLastUpdateTime = java.text.DateFormat . getTimeInstance () . format ( new java.util.Date () ) ; com.frodo.travigator.utils.CommonUtils . logStatus ( TAG , ( ( ( "Location updated ->" + ( location . getLatitude () ) ) + ":" ) + ( location . getLongitude () ) ) ) ; }
private static boolean trimByOne ( java.lang.String word , java.lang.String ladderLast ) { if ( ( word . length () ) != ( ladderLast . length () ) ) { return false ; } int count = 0 ; for ( int i = 0 ; i < ( word . length () ) ; i ++ ) { if ( ( word . charAt ( i ) ) != ( ladderLast . charAt ( i ) ) ) { count ++ ; } } return count == 1 ; }
{ calculateLenght () ; calculateResultSkill ( project ) ; calculateProjectDays ( project ) ; calculateQuarterResults ( project ) ; }
