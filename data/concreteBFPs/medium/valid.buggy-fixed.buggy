private void success ( io.netty.channel.Channel channel ) { org.mycat.netty.mysql.MySQLHandshakeHandler.logger . debug ( "success info return form MySQLHandshakeHandler" ) ; io.netty.buffer.ByteBuf out = channel . alloc () . buffer () ; org.mycat.netty.mysql.OK ok = new org.mycat.netty.mysql.OK () ; ok.sequenceId = 2 ; ok . setStatusFlag ( Flags.SERVER_STATUS_AUTOCOMMIT ) ; out . writeBytes ( ok . toPacket () ) ; channel . writeAndFlush ( out ) ; } 
@ org.junit.Test public void checkRulesTest1 () { Board board = new Board ( 9 ) ; board . loadFromFile ( "board9x9_1.dat" ) ; Playout pl = new Playout () ; org.junit.Assert . assertFalse ( "checkRulesTest1 failed" , ( ( pl . checkRules ( new Point ( 5 , 2 ) , Board.FRIENDLY , board ) ) == true ) ) ; } 
public void send ( java.lang.String title , java.lang.String msg ) { logger . info ( ( "sending callback msg:" + title ) ) ; try { org.apache.http.client.fluent.Request . Post ( callbackUrl ) . bodyForm ( org.apache.http.client.fluent.Form . form () . add ( "msg" , msg ) . build () , Consts.UTF_8 ) . execute () ; } catch ( java.io.IOException e ) { logger . error ( "Send callback msg failed" , e ) ; } } 
public void startLaunch ( net.minecraft.entity.player.EntityPlayer player ) { if ( ( ( ( ( ( ! ( launching ) ) && ( ( getControlPanel () ) != null ) ) && ( ( getSupportFrame () ) != null ) ) && ( ( missile ) != null ) ) && ( canExtractEnergy ( energyCost ) ) ) && ( isPathClear () ) ) { launching = true ; } else if ( worldObj.isRemote ) printErrorMessage ( player ) ; } 
public java.sql.Connection connect () { try { if ( connection . isValid ( 7 ) ) { return connection ; } else { connection = java.sql.DriverManager . getConnection ( getUrl () , _username , _password ) ; return connection ; } } catch ( java.sql.SQLException e ) { e . printStackTrace () ; return null ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/admin/DeleteBrand" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String deleteBrand ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response , @ org.springframework.web.bind.annotation.ModelAttribute com.auto.time.Model.Brand brand ) { javax.servlet.http.HttpSession session = request . getSession () ; long brandId = java.lang.Long . valueOf ( ( ( java.lang.Long ) ( session . getAttribute ( "brand_id" ) ) ) ) ; brand . setId ( brandId ) ; brandDao . deleteBrand ( brand ) ; try { response . sendRedirect ( "/Pages/Brands.jsp" ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return "Pages/Brands.jsp" ; } 
public synchronized void put ( float x , int targetProcessor , int channel ) { while ( available ) { try { wait () ; } catch ( java.lang.InterruptedException e ) {} } data = x ; available = true ; this . channel = channel ; this . targetProcessor = targetProcessor ; notifyAll () ; } 
private void setController () { controller = new com.chopin.MusicController ( this ) ; controller . setMediaPlayer ( this ) ; controller . setAnchorView ( findViewById ( R.id.song_list ) ) ; controller . setEnabled ( true ) ; controller . setPrevNextListeners ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { playNext () ; } } , new android.view.View.OnClickListener () { public void onClick ( android.view.View v ) { playPrev () ; } } ) ; } 
public void update ( double dt , boolean isRewind ) { if ( ( ( playerInput ) != null ) && ( ! isRewind ) ) { playerInput . updatePlayer ( this , dt ) ; sendInputsToServer () ; } updateMovement ( dt , isRewind ) ; checkCollisions ( dt ) ; updateJumping ( dt ) ; updateFalling ( dt ) ; if ( ! isRewind ) { updateWalkAnimation ( dt ) ; sendUpdateFromServerToClients () ; updateFlameThrower ( dt ) ; updateWeapon ( dt ) ; } } 
private void handleConnectRequest ( com.assistant.connection.ConnectionManager.ConnectRequest request ) { com.assistant.utils.Log . d ( com.assistant.connection.ConnectionManager.TAG , ( "handleConnectRequest, request:" + request ) ) ; if ( mStopped ) { com.assistant.utils.Log . d ( com.assistant.connection.ConnectionManager.TAG , "handleConnectRequest, mStopped is true" ) ; removeConnectRequest ( request.connId ) ; notifyConnectionCreationResult ( null , request.listener , true , Connection.CONNECTION_REASON_CODE_CONNECT_REQUEST_CANCELED ) ; return; } connectToInternal ( request.ipAddress , request.port , request.listener , request ) ; } 
public static javafx.scene.control.Tooltip createTooltip ( java.lang.String text , boolean wrap , double maxWidth , double maxHeight ) { javafx.scene.control.Tooltip tip = new javafx.scene.control.Tooltip ( text ) ; tip . setWrapText ( true ) ; tip . setMaxWidth ( maxWidth ) ; tip . setMaxHeight ( maxHeight ) ; return tip ; } 
protected void publishResults ( java.lang.CharSequence charSequence , thestral.agc.news.FilterResults filterResults ) { java.util.List < thestral.agc.news.NewsModel > results = ( ( java.util.List < thestral.agc.news.NewsModel > ) ( filterResults.values ) ) ; if ( ( filterResults.count ) > 0 ) { this . filteredList . clear () ; this . filteredList . addAll ( results ) ; this . listAdapter . notifyDataSetChanged () ; } else { this . listAdapter . notifyDataSetInvalidated () ; } } 
public void setField ( java.lang.String field , java.lang.String value ) throws java.io.IOException { if ( ( value . contains ( "\n" ) ) || ( value . contains ( "\r" ) ) ) { throw new java.io.IOException ( "Field value contains new lines" ) ; } fields . put ( field , value ) ; } 
@ java.lang.Override protected org.eclipse.swt.widgets.Control createDialogArea ( final org.eclipse.swt.widgets.Composite parent ) { final org.eclipse.swt.widgets.Composite container = ( ( org.eclipse.swt.widgets.Composite ) ( super . createDialogArea ( parent ) ) ) ; final org.eclipse.swt.browser.Browser browser = new org.eclipse.swt.browser.Browser ( container , ( ( org.eclipse.swt.SWT.BORDER ) | ( org.eclipse.swt.SWT.MOZILLA ) ) ) ; browser . setLayoutData ( new org.eclipse.swt.layout.GridData ( org.eclipse.swt.layout.GridData.FILL_BOTH ) ) ; browser . addLocationListener ( this ) ; browser . setUrl ( source ) ; return container ; } 
public static < T > java.lang.String toImportHeaderValues ( java.util.Collection < ? extends java.util.Collection < ? > > headerValues ) { java.io.StringWriter writer = new java.io.StringWriter () ; for ( java.util.Collection < ? > array : headerValues ) { com.arangodb.entity.EntityFactory.gson . toJson ( array , writer ) ; writer . write ( '\n' ) ; } writer . flush () ; return writer . toString () ; } 
@ java.lang.Override public int compareTo ( @ android.support.annotation.NonNull com.alibaba.weex.plugin.gcanvas.bubble.BubblePosition o ) { int rowDiff = ( row ) - ( o.row ) ; int columnDiff = ( column ) - ( o.column ) ; if ( rowDiff > 0 ) { return 1 ; } else if ( rowDiff < 0 ) { return - 1 ; } else { if ( columnDiff > 0 ) { return 1 ; } else if ( columnDiff < 0 ) { return - 1 ; } else { return 0 ; } } } 
public static void registerLister ( final android.app.Activity activity , com.zhanshow.mylibrary.network.NetworkStateReceiver.NetworkStateReceiverListener listener ) { com.zhanshow.mylibrary.network.LibraryConfig . getInstance () . initApplication ( activity ) ; com.zhanshow.mylibrary.network.NetWorkUtils.mNetworkStateReceiver = new com.zhanshow.mylibrary.network.NetworkStateReceiver () ; com.zhanshow.mylibrary.network.NetWorkUtils.mNetworkStateReceiver . addListener ( listener ) ; android.content.IntentFilter intentFilter = new android.content.IntentFilter () ; intentFilter . addAction ( ConnectivityManager.CONNECTIVITY_ACTION ) ; intentFilter . addAction ( NetworkStateReceiver.CONNECTIVITY_ACTION_LOLLIPOP ) ; activity . registerReceiver ( com.zhanshow.mylibrary.network.NetWorkUtils.mNetworkStateReceiver , intentFilter ) ; } 
@ java.lang.Override protected void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_fragment_container ) ; doExtra () ; android.support.v4.app.FragmentManager fm = getSupportFragmentManager () ; android.support.v4.app.Fragment fragment = fm . findFragmentById ( R.id.container_fragment_activity ) ; if ( fragment == null ) { fragment = createFragment () ; } fm . beginTransaction () . add ( R.id.container_fragment_activity , fragment ) . commit () ; } 
private boolean [] getHorLine ( int sx , int sy , int length , boolean [] [] openings ) { boolean [] booleans = new boolean [ length ] ; for ( int x = sx ; x < ( booleans.length ) ; x ++ ) { booleans [ 0 ] = openings [ x ] [ sy ] ; } return booleans ; } 
public com.google.cloud.genomics.dataflow.readers.bam.BAMShard finalize ( htsjdk.samtools.BAMFileIndexImpl index , int lastLocus ) { if ( lastLocus >= 0 ) { contig = new com.google.cloud.genomics.utils.Contig ( contig.referenceName , contig.start , lastLocus ) ; } this . chunks = index . getChunksOverlapping ( contig.referenceName , ( ( int ) ( contig.start ) ) , ( ( int ) ( contig.end ) ) ) ; updateSpan () ; return this ; } 
@ java.lang.Override public void evaluateIndividual ( ec.EvolutionState state , ec.Individual ind , int subpop ) { try { java.lang.Thread . sleep ( 100 ) ; } catch ( java.lang.InterruptedException e ) {} synchronized ( toBeEvaluatedIndividuals ) { toBeEvaluatedIndividuals . addLast ( new ec.steadystate.QueueIndividual ( ind , subpop ) ) ; toBeEvaluatedIndividuals . notify () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( ( ! ( activities . isEmpty () ) ) && ( activities . peek () . isFinished () ) ) { startStopButton . setText ( "Stop" ) ; activities . push ( new me.jbakita.pebbledatalogging.MainActivity.MotionActivity ( java.lang.System . currentTimeMillis () ) ) ; } else { startStopButton . setText ( "Start" ) ; activities . peek () . endTime = java.lang.System . currentTimeMillis () ; getMotionActivity ( activities . peek () ) ; } } 
public static void initializeGame () { java.lang.System.out . println ( "Setting up players..." ) ; Engine . initializePlayers () ; java.lang.System.out . println ( "Setting up initial bets..." ) ; Engine . initializeBets () ; java.lang.System.out . println ( "Setting up deck..." ) ; Engine . initializeDeck () ; java.lang.System.out . println ( "Shuffling cards..." ) ; Engine . shuffle () ; java.lang.System.out . println ( "Dealing hands..." ) ; Engine . deal () ; java.lang.System.out . println ( "" ) ; return; } 
private void attackClose ( gladiator.Enemy en , gladiator.Gladiator target ) { if ( ( ( java.lang.Math . abs ( ( ( en . getX () ) - ( target . getX () ) ) ) ) < 10 ) && ( ( java.lang.Math . abs ( ( ( en . getY () ) - ( target . getY () ) ) ) ) < 10 ) ) attack ( target , 1 ) ; } 
@ java.lang.Override public com.builtbroken.mc.core.network.packet.PacketTile getGUIPacket () { return new com.builtbroken.mc.core.network.packet.PacketTile ( this , 4 , this . getEnergyStored ( ForgeDirection.UNKNOWN ) , this . getTarget () . xi () , this . getTarget () . yi () , this . getTarget () . zi () , ( ( ( laucherBase ) != null ) && ( ( laucherBase . getStackInSlot ( 0 ) ) != null ) ) ) ; } 
private void signOutFromGplus () { if ( mGoogleApiClient . isConnected () ) { if ( ( com.parse.ParseUser . getCurrentUser () ) != null ) { com.parse.ParseUser . logOut () ; } Plus.AccountApi . clearDefaultAccount ( mGoogleApiClient ) ; mGoogleApiClient . disconnect () ; mGoogleApiClient . connect () ; updateUI ( false ) ; } } 
@ java.lang.Override public com.datavenia.pathfinderpanacea.fragments.DashboardFragment.DragDropWidgetAdapter.ViewHolder onCreateViewHolder ( android.view.ViewGroup parent , int viewType ) { android.view.View view = null ; android.util.Log . d ( "Dashboard" , ( "oncreateViewHolder: " + viewType ) ) ; for ( com.datavenia.pathfinderpanacea.widgets.DashboardWidget widget : mItemList ) { if ( ( widget . getViewId () ) == viewType ) { view = widget . getView () ; break; } } return new com.datavenia.pathfinderpanacea.fragments.DashboardFragment.DragDropWidgetAdapter.ViewHolder ( view ) ; } 
public static void initializeLog ( java.lang.String aLogPath ) { try { java.io.File logFile = new java.io.File ( aLogPath ) ; if ( ! ( logFile . exists () ) ) { logFile . createNewFile () ; autoweka.ConfigurationCollection empty = new autoweka.ConfigurationCollection () ; empty . toXML ( aLogPath ) ; java.lang.System.out . println ( ( "HUE " + aLogPath ) ) ; } java.lang.System.out . println ( ( "HUE HUE" + aLogPath ) ) ; } catch ( java.lang.Exception e ) { java.lang.System.out . println ( "ConfigurationCollection: Couldn't make log file out of xml path!" ) ; } } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { switch ( item . getItemId () ) { case R.id.refresh_menu : android.util.Log . d ( "Refresh" , "..." ) ; getMainFragment () . load () ; break; case R.id.settings_menu : startActivity ( new android.content.Intent ( this , com.grp8.weatherapp.Activities.SettingsActivity . class ) ) ; break; case R.id.action_search : break; case R.id.logout_menu : break; default: break; } return true ; } 
public void onClick ( android.content.DialogInterface dialog , int whichButton ) { isStartedExerise = false ; TextViewStage . setText ( R.string.coolingDown ) ; resetChronometer () ; myChronometer . setOnChronometerTickListener ( new my.com.taruc.fitnesscompanion.VirtualRacer.VirtualRacerMainActivity.TickListener ( 0 , 5 ) ) ; startTimer () ; ViewStart . setText ( R.string.end ) ; total_dis = 0 ; addVRRecord () ; } 
private void finish () { com.squareup.okhttp.internal.Util . closeQuietly ( downloadInput ) ; com.squareup.okhttp.internal.Util . closeQuietly ( downloadOutput ) ; if ( ( call ) != null ) { call . cancel () ; } if ( ( body ) != null ) { com.squareup.okhttp.internal.Util . closeQuietly ( body ) ; } } 
public static java.util.ArrayList < java.lang.String > getMostFiveItem ( java.util.Map < java.lang.String , java.lang.Integer > map ) { int i = 0 ; java.util.ArrayList < java.lang.String > list = new java.util.ArrayList < java.lang.String > () ; for ( java.lang.String s : map . keySet () ) { if ( i < 5 ) { list . add ( s ) ; i ++ ; } else { break; } } return list ; } 
@ java.lang.Override public void run () { int delay = java.util.concurrent.ThreadLocalRandom . current () . nextInt ( 10 , ( 40 + 1 ) ) ; org.myrobotlab.service.InMoovEyelids.blinkEyesTimer . schedule ( new org.myrobotlab.service.InMoovEyelids.blinkEyesTimertask () , ( delay * 1000 ) ) ; org.myrobotlab.service.InMoovEyelids . blink () ; if ( ( java.util.concurrent.ThreadLocalRandom . current () . nextInt ( 0 , ( 1 + 1 ) ) ) == 1 ) { sleep ( java.util.concurrent.ThreadLocalRandom . current () . nextInt ( 1000 , ( 2000 + 1 ) ) ) ; org.myrobotlab.service.InMoovEyelids . blink () ; } } 
private boolean isKingInSet ( Game.Desk d , Game.Colour col , java.util.HashSet < Game.Position > set ) { for ( Game.Position pos : set ) { if ( ( d . getCell ( pos ) . getFigure () ) instanceof Game.Figure.King ) return true ; } return false ; } 
private void addComponent ( ComponentManager cm , java.util.List < ComponentManager > list , java.awt.ComponentOrientation orientation ) { ComponentManager clone = create ( cm . getWallet () . clone () , cm.button . getBackground () , cm . getBounds () , orientation ) ; list . add ( clone ) ; clearBuffer () ; render () ; } 
public org.apache.ignite.internal.processors.odbc.jdbc.JdbcQueryExecuteResult queryExecute ( java.lang.String cache , int fetchSize , int maxRows , java.lang.String sql , java.util.List < java.lang.Object > args ) throws java.io.IOException , org.apache.ignite.IgniteCheckedException { org.apache.ignite.internal.processors.odbc.jdbc.JdbcUtils . setReadSqlObject ( true ) ; return sendRequest ( new org.apache.ignite.internal.processors.odbc.jdbc.JdbcQueryExecuteRequest ( cache , fetchSize , maxRows , sql , ( args == null ? null : args . toArray ( new java.lang.Object [ args . size () ] ) ) ) , org.apache.ignite.internal.jdbc.thin.JdbcThinTcpIo.QUERY_EXEC_MSG_INIT_CAP ) ; } 
public void playPrev () { if ( shuffle ) { int newSong = songPosn ; while ( newSong == ( songPosn ) ) { newSong = rand . nextInt ( songs . size () ) ; } songPosn = newSong ; } else { ( songPosn ) -- ; if ( ( songPosn ) == 0 ) { songPosn = ( songs . size () ) - 1 ; } } playSong () ; } 
public boolean canLoadNext () { if ( isLoading ) return false ; else if ( ( getNextDataURL ( pageData ) ) != null ) { if ( ( pageData.curruntPage ) == 1 ) return true ; else if ( getPagingSupport () ) { if ( ( pageData.curruntPage ) == ( pageData.totalPage ) ) return false ; else if ( isAllPageLoaded ) return false ; else return true ; } return true ; } else return false ; } 
public void deleteEvent ( s3.thisisbetter.model.Event e , java.lang.String eventID ) { boolean haveResponded = e . getInvitedHaveResponded () . get ( s3.thisisbetter.model.DB . getMyUID () ) ; if ( haveResponded ) { ( numRespondedTo ) -- ; } else { ( numAwaitingResponse ) -- ; } this . remove ( e ) ; eventIDToObject . remove ( eventID ) ; } 
public static java.lang.String stripPath ( final int p , final java.lang.String s ) { if ( p <= 0 ) { return s ; } int x = 0 ; for ( int i = 0 ; i < p ; i ++ ) { x = s . indexOf ( '/' , x ) ; if ( x < 0 ) { return s ; } } return s . substring ( ( x + 1 ) ) ; } 
public void saveLastStart ( java.lang.String story , java.lang.String des , java.lang.String creator , java.lang.String [] order ) { myHelper = new com.projectxi.berlemstudio.contentmanagement.DbHelper ( this ) ; com.projectxi.berlemstudio.contentmanagement.convertArrays convertor = new com.projectxi.berlemstudio.contentmanagement.convertArrays () ; java.lang.String convert = convertor . convertArrayToString ( order ) ; android.util.Log . d ( "save" , order [ 0 ] ) ; myHelper . insertStory ( "การเล่นครั้งล่าสุด" , "เนื้อหาที่ใช้เขาดูครั้งล่าสุด" , "Patawat" , convert ) ; android.util.Log . d ( "saveStory" , "saveLastStart: " ) ; } 
private org.eclipse.swt.widgets.Control createLowerPart ( org.eclipse.swt.widgets.Composite parent ) { org.eclipse.swt.widgets.Composite frame = new org.eclipse.swt.widgets.Composite ( parent , org.eclipse.swt.SWT.NONE ) ; frame . setLayout ( com.eclipsesource.example.ece2011.ui.admin.AdminUI . createGridLayout () ) ; org.eclipse.swt.widgets.Label headerLabel = new org.eclipse.swt.widgets.Label ( frame , org.eclipse.swt.SWT.NONE ) ; headerLabel . setText ( "Available UI Contributions" ) ; headerLabel . setData ( WidgetUtil.CUSTOM_VARIANT , "header" ) ; contributionsTree = createTree ( frame , SWT.BORDER ) ; contributionsTree . setLayoutData ( new org.eclipse.swt.layout.GridData ( org.eclipse.swt.SWT.FILL , org.eclipse.swt.SWT.TOP , true , false ) ) ; return frame ; } 
public java.rmi.registry.Registry startRMIserver () { java.rmi.registry.Registry registry = null ; try { java.lang.System.out . println ( "RMI server started" ) ; java.lang.System . setProperty ( "java.rmi.server.useLocalHostname" , inIP ) ; java.lang.System . setProperty ( "java.rmi.server.logCalls" , "true" ) ; java.lang.System . getProperties () . put ( "java.rmi.server.hostname" , exIP ) ; registry = java.rmi.registry.LocateRegistry . createRegistry ( 1099 ) ; java.lang.System.out . println ( "java RMI registry created." ) ; } catch ( java.rmi.RemoteException e ) { java.lang.System.out . println ( "java RMI registry already exists." ) ; java.lang.System.out . println ( "Or the RMI server is already running" ) ; } return registry ; } 
public void mousePressed ( java.awt.event.MouseEvent e ) { if ( ( e . getButton () ) == ( java.awt.event.MouseEvent.BUTTON3 ) ) { popup . show ( table , e . getX () , e . getY () ) ; int row = table . rowAtPoint ( e . getPoint () ) ; removeItem . setText ( ( "Mark person unavailable for " + ( utilities.Utilities . getDisplayDate ( calendar ) ) ) ) ; table . getSelectionModel () . setSelectionInterval ( row , row ) ; } } 
public int getStatus ( net.sf.memoranda.date.CalendarDate date ) { if ( frozen ) { return Task.FROZEN ; } if ( ( progress ) == 100 ) { return Task.COMPLETED ; } if ( date . inPeriod ( startDate , endDate ) ) { if ( date . equals ( endDate ) ) return Task.DEADLINE ; else return Task.ACTIVE ; } else if ( date . before ( startDate ) ) { return Task.SCHEDULED ; } if ( startDate . after ( endDate ) ) { return Task.ACTIVE ; } return Task.FAILED ; } 
@ java.lang.Override public void onDueDateSelected ( java.util.Date date , long time ) { super . onDueDateSelected ( date , time ) ; mReminderTextView . setEnabled ( true ) ; if ( ( mReminderTime ) != ( - 1 ) ) { java.util.Date reminder = getReminderDate ( mReminderTime ) ; java.text.SimpleDateFormat format = new java.text.SimpleDateFormat ( "LLL, EEE dd  HH:mm" ) ; mReminderTextView . setText ( format . format ( reminder ) ) ; } } 
private boolean containsFieldWithShortName ( java.lang.String shortName ) { for ( org.jetbrains.java.decompiler.struct.StructField f : fields ) { if ( shortName . equals ( f . getName () ) ) { return true ; } } if ( ( superClass ) != null ) { org.jetbrains.java.decompiler.main.ClassesProcessor classesProcessor = org.jetbrains.java.decompiler.main.DecompilerContext . getClassProcessor () ; org.jetbrains.java.decompiler.main.ClassesProcessor.ClassNode classNode = classesProcessor . getMapRootClasses () . get ( superClass . getString () ) ; if ( classNode != null ) return classNode.classStruct . containsFieldWithShortName ( shortName ) ; } return false ; } 
@ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > arg0 , android.view.View arg1 , int arg2 , long arg3 ) { int position = ( ( int ) ( arg3 ) ) ; int end = ( commonListAdpt . getCount () ) - 1 ; if ( position == ( end - 1 ) ) {} if ( position == end ) { doLogout () ; } } 
private TwoThreeFourTree.TreeNode < K , V > findLeftMostNodeForRemoveOperation ( TwoThreeFourTree.TreeNode < K , V > node ) throws java.lang.Exception { if ( ( node.items . size () ) == 1 ) { node = FixOneKeyNode ( node ) ; } TwoThreeFourTree.TreeNode < K , V > leftNode = node . getLeftChildNodeForItem ( 0 ) ; if ( leftNode != null ) { return findLeftMostNodeForRemoveOperation ( leftNode ) ; } else { return node ; } } 
@ java.lang.Override net.benmann.evald.Node collapse () { a = a . collapse () ; b = b . collapse () ; if ( ( ! ( a.isConstant ) ) && ( ! ( b.isConstant ) ) ) return this ; if ( ( a.isConstant ) && ( b.isConstant ) ) return new net.benmann.evald.Constant ( get () ) ; if ( ( a.isConstant ) && ( ( a . get () ) == 0 ) ) return new net.benmann.evald.Constant ( 0.0 ) ; return this ; } 
@ com.sb.elsinore.annotations.UrlEndpoint ( url = "/shutdownSystem" , help = "Shutdown Elsinore or turn off the system" , parameters = { @ com.sb.elsinore.annotations.Parameter ( name = "turnoff" , value = "true: turn off the entire system, false: shutdown Elsinore only" ) } ) public com.sb.elsinore.NanoHTTPD.Response shutdownSystem () { try { com.sb.elsinore.LaunchControl . saveEverything () ; boolean shutdownEverything = java.lang.Boolean . parseBoolean ( parameters . get ( "turnoff" ) ) ; if ( shutdownEverything ) { java.lang.Runtime runtime = java.lang.Runtime . getRuntime () ; java.lang.Process proc = runtime . exec ( "shutdown -h now" ) ; } java.lang.System . exit ( 0 ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; BrewServer.LOG . warning ( ( "Failed to shutdown. " + ( e . getMessage () ) ) ) ; } return new com.sb.elsinore.NanoHTTPD.Response ( "Shutdown called" ) ; } 
public static void main ( java.lang.String [] args ) { roguelike_game.Game game = new roguelike_game.Game () ; game . setSize ( 1117 , 620 ) ; game . setDefaultCloseOperation ( javax.swing.JFrame.EXIT_ON_CLOSE ) ; game . setLocationRelativeTo ( null ) ; game . setTitle ( game.version ) ; game . setVisible ( true ) ; game . start () ; game.running = true ; } 
@ org.junit.Test public void testProcessNot ( ) throws net.torocraft.minecoprocessors.util.ParseException { net.torocraft.minecoprocessors.processor.Processor processor = net.torocraft.minecoprocessors.processor.ProcessorTest . setupTest ( 0 , 0 , 10 , 0 , "not c" ) ; processor . processNot () ; assertRegisters ( processor , 0 , 0 , 245 , 0 ) ; org.junit.Assert . assertFalse ( processor.zero ) ; processor = net.torocraft.minecoprocessors.processor.ProcessorTest . setupTest ( 0 , 0 , 255 , 0 , "not c" ) ; processor . processNot () ; assertRegisters ( processor , 0 , 0 , 0 , 0 ) ; assert processor.zero ; } 
private void trackAndFirePulse ( it.near.sdk.geopolis.Node node , it.near.sdk.geopolis.trackings.Events.GeoEvent event ) { if ( ( node != null ) && ( ( node.identifier ) != null ) ) { try { geopolisTrackingsManager . trackEvent ( node.identifier , event ) ; } catch ( org.json.JSONException e ) {} firePulse ( event , node.tags , node.identifier ) ; } } 
private void AccettaListener () { if ( ( Box . getSelectedItem () ) != null ) { javax.swing.JButton AccettaButton = view . getAccettaButton () ; AccettaButton . addActionListener ( new java.awt.event.ActionListener () { @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { AccettaArchivistaAction () ; } } ) ; } } 
@ org.junit.BeforeClass public static void buildUp () { MeetingShould.contacts . add ( new ContactImpl ( 1 , "Sam" , "Not nice" ) ) ; MeetingShould.contacts . add ( new ContactImpl ( 2 , "Jenna" ) ) ; MeetingShould.contacts . add ( new ContactImpl ( 3 , "Arthur" ) ) ; MeetingShould.contacts . add ( new ContactImpl ( 4 , "Annie" , "Oranges" ) ) ; } 
public void setValue ( java.util.ArrayList < MailSystemUtilities.Email > newMailList ) { mailList = newMailList ; table = new java.lang.Object [ [] mailList . size () ] [ ] ; for ( int i = 0 ; i < ( mailList . size () ) ; i ++ ) { table [ i ] = mailList . get ( i ) . toObjectArray () ; } setChanged () ; notifyObservers ( mailList ) ; } 
@ java.lang.Override public void update ( java.lang.String query ) { java.sql.PreparedStatement ps ; try { ps = getConnection () . prepareStatement ( query ) ; ps . executeUpdate () ; } catch ( java.sql.SQLException ex ) { com.github.acquized.retile.ProjectRetile . getInstance () . getLog () . error ( "Could not execute SQL update!" ) ; com.github.acquized.retile.ProjectRetile . getInstance () . getLog () . debug ( ( ( ( ex . getClass () . getName () ) + ": " ) + ( ex . getMessage () ) ) , ex ) ; } } 
@ org.junit.Test public void testReopenDB () { com.couchbase.lite.Document doc = createDocument ( "doc1" ) ; doc . set ( "string" , "str" ) ; save ( doc ) ; reopenDB () ; doc = db . getDocument ( "doc1" ) ; org.junit.Assert . assertEquals ( "str" , doc . getString ( "string" ) ) ; java.util.Map < java.lang.String , java.lang.Object > expected = new java.util.TreeMap <> () ; expected . put ( "string" , "str" ) ; org.junit.Assert . assertEquals ( expected , doc . toMap () ) ; } 
public project.backend.MarsConfiguration genMinimumConfig ( project.backend.ModuleSet modset , int numConf ) { project.backend.MarsConfiguration config = new project.backend.MarsConfiguration ( modset ) ; boolean tits = false ; tits = inVoid ( config ) ; if ( numConf == 1 ) { makeMin1 ( config ) ; } else { makeMin2 ( config ) ; } if ( inVoid ( config ) ) { moveVoid ( config ) ; } tits = inVoid ( config ) ; return config ; } 
@ org.junit.Test public void testCreate () { com.graphhopper.search.NameIndex index = new com.graphhopper.search.NameIndex ( new com.graphhopper.storage.RAMDirectory () ) . create ( 1000 ) ; java.lang.String str1 = "nice" ; int pointer1 = index . put ( str1 ) ; java.lang.String str2 = "nice work äöß" ; int pointer2 = index . put ( str2 ) ; assertEquals ( str2 , index . get ( pointer2 ) ) ; assertEquals ( str1 , index . get ( pointer1 ) ) ; index . close () ; } 
@ java.lang.Override public void onSurfaceTextureAvailable ( android.graphics.SurfaceTexture surfaceTexture , int width , int height ) { android.util.Log . e ( "OnVideo" , "Surface Available" ) ; if ( ( mState ) != ( com.dd.crop.TextureVideoView.State.END ) ) { android.view.Surface surface = new android.view.Surface ( surfaceTexture ) ; mMediaPlayer . setSurface ( surface ) ; mIsViewAvailable = true ; updateTextureViewSize () ; if ( ( ( ( mIsDataSourceSet ) && ( mIsPlayCalled ) ) && ( mIsVideoPrepared ) ) && ( ! ( mPreventPlayback ) ) ) { com.dd.crop.TextureVideoView . log ( "View is available and play() was called." ) ; play () ; } } } 
@ java.lang.Override public void insertString ( final int offs , final java.lang.String str , final javax.swing.text.AttributeSet a ) throws javax.swing.text.BadLocationException { changed |= ! ( programmatic ) ; lastCaret = textPane . getCaretPosition () ; synchronized ( this ) { super . insertString ( offs , str , a ) ; color ( offs , str . length () ) ; if ( ( reader ) != null ) reader . update ( offs , str . length () ) ; } } 
@ java.lang.Override public int getSupportedOperations () { int operation = ( ( ( ( SUPPORT_DELETE ) | ( SUPPORT_PLAY ) ) | ( SUPPORT_INFO ) ) | ( SUPPORT_TRIM ) ) | ( SUPPORT_MUTE ) ; if ( android.drm.DrmHelper . isDrmFile ( getFilePath () ) ) { operation |= SUPPORT_DRM_INFO ; if ( android.drm.DrmHelper . isShareableDrmFile ( getFilePath () ) ) { operation |= SUPPORT_SHARE ; } } return operation ; } 
public void setSlsRange ( java.lang.String val ) throws java.lang.Exception { if ( val . equals ( SlsRangeType.All . toString () ) ) { this . slsRange = org.mobicents.protocols.ss7.tcap.SlsRangeType.All ; } else if ( val . equals ( SlsRangeType.Odd . toString () ) ) { this . slsRange = org.mobicents.protocols.ss7.tcap.SlsRangeType.Odd ; } else if ( val . equals ( SlsRangeType.Even . toString () ) ) { this . slsRange = org.mobicents.protocols.ss7.tcap.SlsRangeType.Even ; } else { throw new java.lang.Exception ( "SlsRange value is invalid" ) ; } this . store () ; } 
static com.android.internal.telephony.Phone getPhone ( int phoneId ) { android.util.Log . d ( com.android.phone.PhoneGlobals.LOG_TAG , ( "getPhone phoneId:" + phoneId ) ) ; if ( ( phoneId >= 0 ) && ( phoneId < ( android.telephony.TelephonyManager . getDefault () . getPhoneCount () ) ) ) { return com.android.phone.PhoneGlobals . getInstance () . mPhones [ phoneId ] ; } else { return com.android.phone.PhoneGlobals . getPhone () ; } } 
private void toggleHollowShape ( net.minecraft.entity.player.EntityPlayer player , net.minecraft.item.ItemStack stack , net.minecraft.item.Item item ) { boolean isWire = ( ( com.phylogeny.extrabitmanipulation.item.ItemSculptingTool ) ( item ) ) . removeBits () ; boolean isHollowShape = ! ( com.phylogeny.extrabitmanipulation.helper.SculptSettingsHelper . isHollowShape ( player , stack . getTagCompound () , isWire ) ) ; com.phylogeny.extrabitmanipulation.helper.SculptSettingsHelper . setHollowShape ( player , stack , isHollowShape , isWire ) ; if ( ( isWire ? com.phylogeny.extrabitmanipulation.reference.Configs.sculptHollowShapeWire : com.phylogeny.extrabitmanipulation.reference.Configs.sculptHollowShapeSpade ) . shouldDisplayInChat () ) { printChatMessageWithDeletion ( com.phylogeny.extrabitmanipulation.helper.SculptSettingsHelper . getHollowShapeText ( isHollowShape ) ) ; } } 
private void moveThumb ( com.edmodo.rangebar.Thumb thumb , float x ) { if ( ( x < ( mBar . getLeftX () ) ) || ( x > ( mBar . getRightX () ) ) ) {} else { thumb . setX ( x ) ; invalidate () ; } } 
@ com.CardiacArray.rest.POST @ com.CardiacArray.rest.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public boolean createUser ( com.CardiacArray.data.User user ) { com.CardiacArray.data.User checkUser = getUserByEmail ( user . getEmail () ) ; if ( ( ( checkUser . getFirstName () ) == null ) && ( ( checkUser . getLastName () ) == null ) ) { userDb . createUser ( user ) ; return true ; } else throw new com.CardiacArray.rest.BadRequestException () ; } 
@ javafx.fxml.FXML private void onDragged ( javafx.scene.input.MouseEvent e ) { data.Point pos = transformCoordinate ( e . getX () , e . getY () ) ; if ( ! ( pos . equals ( prevPos ) ) ) strategy . onDragged ( pos ) ; prevPos = pos ; } 
public static void resetInstance () { model.GameCreation.instance.gameEvents . clear () ; model.GameCreation.instance.gameActions . clear () ; model.GameCreation.instance.players . clear () ; model.GameCreation.instance.cardSettings . reset () ; model.GameCreation.instance.gameSettings . reset () ; model.GameCreation.instance.rectangleBlueprints . clear () ; model.GameCreation.instance.tableGrid = new model.TableGrid () ; } 
private double [] [] extractFeatures ( java.util.ArrayList < Data.Species > dataset ) { double [] [] features = new double [ [] dataset . size () ] [ ] ; int counter = 0 ; int len = dataset . get ( 0 ) . getFeatureValues () . length ; java.util.Iterator < Data.Species > i = dataset . iterator () ; while ( i . hasNext () ) { features [ counter ] = i . next () . getFeatureValues () ; counter ++ ; } return features ; } 
@ java.lang.Override public boolean createSecondaryKey ( com.sleepycat.db.SecondaryDatabase db , com.sleepycat.db.DatabaseEntry dbKey , com.sleepycat.db.DatabaseEntry dbData , com.sleepycat.db.DatabaseEntry dbResult ) throws com.sleepycat.db.DatabaseException { java.lang.String key = getString ( dbKey ) ; java.lang.String secondaryKey = key . substring ( 0 , 2 ) ; dbResult . setData ( secondaryKey . getBytes () ) ; dbResult . setSize ( secondaryKey . length () ) ; return true ; } 
public static org.sbml.jsbml.ext.layout.Point createCenterPoint ( org.sbml.jsbml.ext.layout.Point point1 , org.sbml.jsbml.ext.layout.Point point2 ) { return new org.sbml.jsbml.ext.layout.Point ( ( ( ( point1 . getX () ) + ( point2 . getX () ) ) / 2 ) , ( ( ( point1 . getY () ) + ( point2 . getY () ) ) / 2 ) ) ; } 
@ java.lang.Override public boolean setViewValue ( android.view.View view , android.database.Cursor cursor , int columnIndex ) { if ( ( view . getId () ) == ( R.id.image_doodle_thumbnail ) ) { com.squareup.picasso.Picasso . with ( getActivity () ) . load ( ( "http:" + ( cursor . getString ( cursor . getColumnIndex ( DoodleColumns.URL ) ) ) ) ) . into ( ( ( android.widget.ImageView ) ( view ) ) ) ; } return false ; } 
private void getWifiInfo () { wifiDataReceived = false ; android_network.hetnet.network.NetworkListFetcher.wifiManager = ( ( android.net.wifi.WifiManager ) ( getSystemService ( Context.WIFI_SERVICE ) ) ) ; android_network.hetnet.network.NetworkListFetcher.startT = java.lang.System . currentTimeMillis () ; registerReceiver ( wifiReceiver , new android.content.IntentFilter ( android.net.wifi.WifiManager.SCAN_RESULTS_AVAILABLE_ACTION ) ) ; android_network.hetnet.network.NetworkListFetcher.wifiManager . startScan () ; try { unregisterReceiver ( wifiReceiver ) ; } catch ( java.lang.IllegalArgumentException e ) { android.util.Log . e ( LOG_TAG , "Error unregistering receiver in getWifiInfo" ) ; } } 
private int getClosingBracketStartOffset ( int startOffset , boolean isCDATA ) { int counter = startOffset + 1 ; while ( startOffset < ( content . length () ) ) { if ( ( ( content . charAt ( counter ) ) == '>' ) && ( bracketsBefore ( isCDATA , counter ) ) ) { return counter ; } counter ++ ; } throw new java.lang.IllegalStateException ( "No \">\" found." ) ; } 
@ java.lang.Override public boolean touchDown ( int screenX , int screenY , int pointer , int button ) { boolean result = super . touchDown ( screenX , screenY , pointer , button ) ; if ( ( gridHitbox . isGridShow () ) && ( gridHitbox . isInsideHitbox ( touched.x , touched.y ) ) ) { gridHitbox . showTileWhereClicked ( screenX , screenY ) ; } return result ; } 
public static boolean isPrime ( long n ) { if ( ( n % 2 ) == 0 ) return false ; for ( int i = 3 ; ( i * i ) < n ; i += 2 ) { if ( ( n % 1 ) == 0 ) return false ; } return true ; } 
public java.lang.String getDefaultChallengeName () { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat ( "MMM dd, yyyy" , java.util.Locale . getDefault () ) ; java.util.Date date = dariogonzalez.fitplaygames.utils.Utils . getUTCdatetimeAsDate () ; java.lang.String dateStr = sdf . format ( date ) ; java.lang.String challengeName = dariogonzalez.fitplaygames.classes.ChallengeTypeConstants . getChallengeName ( challengeType ) ; return ( challengeName + " " ) + dateStr ; } 
@ com.alpha.web.RequestMapping ( value = "/{productId}" , method = RequestMethod.PUT ) public org.springframework.http.ResponseEntity < ? > changeProduct ( @ com.alpha.web.PathVariable java.lang.Long productId , @ com.alpha.web.RequestParam java.lang.Long count , @ com.alpha.web.RequestParam java.lang.Long price ) { com.alpha.bean.Product product = productRepository . findOne ( productId ) ; if ( product != null ) { if ( count != null ) product . setCount ( count ) ; if ( price != null ) product . setPrice ( price ) ; return new org.springframework.http.ResponseEntity < java.lang.Object > ( productRepository . save ( product ) , org.springframework.http.HttpStatus.OK ) ; } else { return new org.springframework.http.ResponseEntity ( null , org.springframework.http.HttpStatus.NOT_FOUND ) ; } } 
public static void onClickClearButton () { if ( ( group13.ecobuddy2.UserNavigation.stopMarkers ) == null ) { group13.ecobuddy2.UserNavigation . makeALongToast ( "Cleaning up..." ) ; return; } if ( ( group13.ecobuddy2.UserNavigation.mDestination ) == null ) { group13.ecobuddy2.UserNavigation . makeALongToast ( "Cleaning up..." ) ; return; } GMap.mMap . clear () ; new group13.ecobuddy2.GMap.DrawMultiRouteTask () . execute ( group13.ecobuddy2.UserNavigation.mMultiDirections ) ; new group13.ecobuddy2.GMap.DrawStopMarkers () . execute ( group13.ecobuddy2.UserNavigation.stopMarkers ) ; group13.ecobuddy2.UserNavigation . makeALongToast ( "Cleaning up..." ) ; } 
public pacman.game.Constants.MOVE hillClimber ( pacman.game.Game game , long timeDue ) { double currentEval = java.lang.Double.NEGATIVE_INFINITY ; for ( pacman.game.Constants.MOVE eachMove : game . getPossibleMoves ( game . getPacmanCurrentNodeIndex () ) ) { pacman.game.Game newState = game . copy () ; newState . advanceGame ( eachMove , new pacman.controllers.examples.StarterGhosts () . getMove () ) ; if ( ( eval ( newState ) ) > currentEval ) { myMove = eachMove ; currentEval = eval2 ( newState ) ; } } return myMove ; } 
public com.jenshen.awesomeanimation.AwesomeAnimation.Builder setX ( @ com.jenshen.awesomeanimation.AwesomeAnimation.CoordinationMode java.lang.String mode , float . . . x ) { if ( mode . equals ( com.jenshen.awesomeanimation.AwesomeAnimation.CoordinationMode.COORDINATES ) ) { objectAnimations . add ( new com.jenshen.awesomeanimation.AwesomeAnimation.AnimationParams.Builder ( android.view.View.X , x ) . build () ) ; } else if ( mode . equals ( com.jenshen.awesomeanimation.AwesomeAnimation.CoordinationMode.TRANSITION ) ) { addTranslation ( x , view . getTranslationX () ) ; objectAnimations . add ( new com.jenshen.awesomeanimation.AwesomeAnimation.AnimationParams.Builder ( android.view.View.TRANSLATION_X , x ) . build () ) ; } else { throw new java.lang.RuntimeException ( "Can't support this mode" ) ; } return this ; } 
public java.util.List < java.lang.Integer > getIndexes () { java.util.List < java.lang.Integer > indexes = new java.util.ArrayList <> () ; for ( int i = 0 ; i < ( filter . length () ) ; ) { int index = filter . nextSetBit ( i ) ; indexes . add ( index ) ; i = index + 1 ; } return indexes ; } 
public void updateList ( java.util.ArrayList < com.eventhorizonsentertainment.simpleto_do.model.ListItem > list ) { android.database.sqlite.SQLiteDatabase database = open () ; for ( com.eventhorizonsentertainment.simpleto_do.model.ListItem item : list ) { android.content.ContentValues values = new android.content.ContentValues () ; values . put ( SQLiteHelper.COLUMN_ITEM_NAME , item . getItemName () ) ; database . update ( SQLiteHelper.LIST_TABLE , values , null , null ) ; } close ( database ) ; } 
public void disconnect () { if ( ( startShape ) != null ) { this . startShape . disconnectWire ( this ) ; ( ( edu.byu.ece.rapidSmith.device.vsrt.gui.QTreeElement ) ( this . startParent . parent () ) ) . markPinAsUnconnected ( startParent ) ; startShape . update () ; } if ( ( endShape ) != null ) { this . endShape . disconnectWire ( this ) ; ( ( edu.byu.ece.rapidSmith.device.vsrt.gui.QTreeElement ) ( this . endParent . parent () ) ) . markPinAsUnconnected ( endParent ) ; endShape . update () ; } } 
@ java.lang.Override public void writeToParcel ( android.os.Parcel dest , int flags ) { dest . writeInt ( id ) ; dest . writeString ( originalTitle ) ; dest . writeString ( imageUrl ) ; dest . writeString ( backdropUrl ) ; dest . writeString ( overview ) ; dest . writeDouble ( userRating ) ; dest . writeString ( releaseDate ) ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { toggleFlash ( mFlashOn ) ; mFlashOn = ! ( mFlashOn ) ; mBrightness = getWindow () . getAttributes () . screenBrightness ; if ( ( mBrightness ) < 0 ) { try { mBrightness = Settings.System . getInt ( getContentResolver () , Settings.System.SCREEN_BRIGHTNESS ) ; } catch ( android.provider.Settings e ) { e . printStackTrace () ; } } makeToast ( ( "Current Brightness: " + ( mBrightness ) ) ) ; } 
@ java.lang.Override public void onAutoFocus ( boolean success , android.hardware.Camera camera ) { camera . takePicture ( new android.hardware.Camera.ShutterCallback () { @ java.lang.Override public void onShutter () {} } , null , new android.hardware.Camera.PictureCallback () { @ java.lang.Override public void onPictureTaken ( byte [] data , android.hardware.Camera camera ) { saveScaledPhoto ( data ) ; } } ) ; } 
@ org.junit.Test ( expected = org.bonitasoft.engine.exception.UpdateException . class ) public void resume_should_throw_UpdateException_when_resuming_tenant_service_with_lifecycle_fail ( ) throws java.lang.Exception { org.bonitasoft.engine.service.TaskResult < java.lang.Void > taskResult = new org.bonitasoft.engine.service.TaskResult < java.lang.Void > ( new org.bonitasoft.engine.work.SWorkException ( "plop" ) ) ; org.mockito.Mockito . doReturn ( java.util.Collections . singletonMap ( "workService" , taskResult ) ) . when ( broadcastService ) . execute ( org.mockito.Matchers . any ( org.bonitasoft.engine.api.impl.transaction.SetServiceState . class ) , org.mockito.Matchers . eq ( tenantId ) ) ; tenantManagementAPI . resume () ; } 
@ java.lang.Override public void onResponse ( retrofit2.Call < com.mcodefactory.popularmovies.api_result_models.MovieResult > call , retrofit2.Response < com.mcodefactory.popularmovies.api_result_models.MovieResult > response ) { java.util.List < com.mcodefactory.popularmovies.data.Movie > moviesPerPage = response . body () . getResults () ; parseAndAddToCollection ( moviesPerPage ) ; android.util.Log . d ( com.mcodefactory.popularmovies.MainActivity.TAG , ( "Number of movies received: " + ( movies . size () ) ) ) ; if ( ( movies . size () ) > previousMovieCount ) { showMovieDataView () ; mAdapter . setData ( movies ) ; } } 
public void Propagate () { double z = 0 ; for ( com.thunkar.grrow.model.brain.Connection c : this . Connections ) { z += ( c . getInput () . getValue () ) * ( c . getWeight () ) ; } this . value = 1 / ( 1 + ( ( float ) ( java.lang.Math . pow ( ( ( float ) ( java.lang.Math.E ) ) , ( - z ) ) ) ) ) ; } 
public com.alphatica.genotick.timepoint.TimePoint getNextTimePint ( com.alphatica.genotick.timepoint.TimePoint now ) { int index = java.util.Collections . binarySearch ( timePoints , now ) ; if ( ( index < 0 ) || ( index > ( ( timePoints . size () ) - 2 ) ) ) { return null ; } else { return timePoints . get ( ( index + 1 ) ) ; } } 
public long getLastPageNumber ( long pageLimit ) { long numberOfPages = ( this . totalItems ) / ( com.devoo.kim.api.naver.NaverCafeAPI.pageSize ) ; numberOfPages = ( ( ( this . totalItems ) % ( com.devoo.kim.api.naver.NaverCafeAPI.pageSize ) ) > 0 ) ? ++ numberOfPages : numberOfPages ; if ( numberOfPages < pageLimit ) { return numberOfPages ; } return pageLimit ; } 
@ java.lang.Override public boolean isAuthorized ( java.lang.String userId , org.kuali.kra.irb.auth.ProtocolTask task ) { return ( ( task . getProtocol () . isNew () ) || ( ! ( canExecuteAction ( task . getProtocol () , ProtocolActionType.GRANT_EXEMPTION ) ) ) ) && ( hasPermission ( userId , task . getProtocol () , PermissionConstants.MAINTAIN_PROTOCOL_SUBMISSIONS ) ) ; } 
@ java.lang.Override public void onNeighborBlockChange ( net.minecraft.world.World worldIn , net.minecraft.util.BlockPos pos , net.minecraft.block.state.IBlockState state , net.minecraft.block.Block neighborBlock ) { for ( net.minecraft.util.BlockPos target : targets ) { if ( target != null ) { net.minecraft.block.state.IBlockState targetState = worldObj . getBlockState ( target ) ; targetState . getBlock () . onNeighborBlockChange ( worldObj , target , targetState , neighborBlock ) ; worldObj . notifyNeighborsOfStateChange ( target , targetState . getBlock () ) ; } } } 
public void clearFields ( ca.nasol.lab2_calculator.View v ) { etLoanAmount . setText ( "" ) ; etTermOfLoan . setText ( "" ) ; etInterestRate . setText ( "" ) ; tvMonthlyPay . setText ( "" ) ; tvTotalPay . setText ( "" ) ; tvTotalInterest . setText ( "" ) ; } 
@ java.lang.Override public void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { super . onActivityResult ( requestCode , resultCode , data ) ; if ( requestCode == ( com.superpak.sammengistu.stuckapp.StuckConstants.RC_SIGN_IN ) ) { com.google.android.gms.auth.api.signin.GoogleSignInResult result = Auth.GoogleSignInApi . getSignInResultFromIntent ( data ) ; if ( result . isSuccess () ) { com.google.android.gms.auth.api.signin.GoogleSignInAccount account = result . getSignInAccount () ; mEncodedEmail = com.superpak.sammengistu.stuckapp.activities.StuckSignUpActivity . encodeEmail ( account . getEmail () ) ; } else { android.widget.Toast . makeText ( this , R.string.google_signin_failed , Toast.LENGTH_LONG ) . show () ; } } } 
@ java.lang.Override protected void onSizeChanged ( int w , int h , int oldw , int oldh ) { super . onSizeChanged ( w , h , oldw , oldh ) ; mWidth = w ; mHeight = h ; mMaxCircleRadius = 0.45F * ( mHeight ) ; mMinCircleRadius = 0.15F * ( mHeight ) ; resetPoint () ; } 
public void logoutUser () { editor . clear () ; editor . commit () ; android.content.Intent in = new android.content.Intent ( mContext , dev.jinkim.snappollandroid.ui.activity.LoginActivity . class ) ; in . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TASK ) ; in . setFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ; mContext . startActivity ( in ) ; } 
@ java.lang.Override public void onAnimationEnd ( com.nineoldandroids.animation.Animator animation ) { if ( isOpened () ) { viewActivity . setTouchDisable ( true ) ; viewActivity . setOnClickListener ( viewActivityOnClickListener ) ; } else { viewActivity . setTouchDisable ( false ) ; viewActivity . setOnClickListener ( null ) ; hideScrollViewMenu ( scrollViewLeftMenu ) ; hideScrollViewMenu ( scrollViewRightMenu ) ; if ( ( menuListener ) != null ) menuListener . closeMenu () ; } } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int item ) { boolean result = com.igniva.indiecore.utils.Utility . checkPermission ( this ) ; if ( items [ item ] . equals ( "Take Photo" ) ) { userChoosenTask = "Take Photo" ; if ( result ) cameraIntent () ; } else if ( items [ item ] . equals ( "Choose from Library" ) ) { userChoosenTask = "Choose from Library" ; if ( result ) galleryIntent () ; } else if ( items [ item ] . equals ( "Cancel" ) ) { dialog . dismiss () ; } } 
@ org.testng.annotations.Test ( expectedExceptions = java.lang.IllegalArgumentException . class ) public void testGetIndexesOfRelevantAllelesWithNoALT () { final java.util.List < org.broadinstitute.sting.utils.variant.Allele > alleles1 = new java.util.ArrayList <> ( 1 ) ; alleles1 . add ( org.broadinstitute.sting.utils.variant.Allele . create ( "A" , true ) ) ; final java.util.List < org.broadinstitute.sting.utils.variant.Allele > alleles2 = new java.util.ArrayList <> ( 1 ) ; alleles2 . add ( org.broadinstitute.sting.utils.variant.Allele . create ( "A" , true ) ) ; org.broadinstitute.sting.utils.variant.GATKVariantContextUtils . getIndexesOfRelevantAlleles ( alleles1 , alleles2 ) ; org.testng.Assert . fail ( "We should have thrown an exception because the <ALT> allele was not present" ) ; } 
@ java.lang.Override public boolean activate ( net.minecraft.entity.player.EntityPlayer player , net.minecraft.util.MovingObjectPosition hit , net.minecraft.item.ItemStack item ) { uk.co.qmunity.lib.raytrace.QMovingObjectPosition mop = rayTrace ( uk.co.qmunity.lib.raytrace.RayTracer . instance () . getStartVector ( player ) , uk.co.qmunity.lib.raytrace.RayTracer . instance () . getEndVector ( player ) ) ; if ( mop != null ) if ( ( mop . getPart () ) instanceof uk.co.qmunity.lib.part.IPartInteractable ) return ( ( uk.co.qmunity.lib.part.IPartInteractable ) ( mop . getPart () ) ) . onActivated ( player , mop , item ) ; return false ; } 
boolean onActivityDestroyed ( int userId , android.os.IBinder token ) { synchronized ( mHistory ) { optimizeTasksLocked () ; com.lody.virtual.server.am.ActivityRecord r = findActivityByToken ( userId , token ) ; if ( r != null ) { synchronized ( r.task.activities ) { r.task.activities . remove ( r ) ; if ( r.task.activities . isEmpty () ) { mHistory . remove ( r.task.taskId ) ; return true ; } } } return false ; } } 
@ org.junit.Test public void should_find_all_mock_definitions_registered_in_class () { final com.pchudzik.springmock.infrastructure.definition.registry.DoubleRegistry registry = com.pchudzik.springmock.infrastructure.definition.registry.DoubleRegistryTestParser . parseClass ( com.pchudzik.springmock.infrastructure.definition.registry.DoubleRegistryParserTest.MultipleAutowiredMocks . class ) ; org.junit.Assert . assertEquals ( registry . getMocks () . size () , 2 ) ; org.junit.Assert . assertThat ( registry . getMocks () , org.hamcrest.Matchers . containsInAnyOrder ( org.hamcrest.Matchers . allOf ( doubleWithName ( com.pchudzik.springmock.infrastructure.definition.registry.DoubleRegistryParserTest.ANY_SERVICE1_NAME ) , doubleForClass ( com.pchudzik.springmock.infrastructure.definition.registry.DoubleRegistryParserTest.AnyService1 . class ) ) , org.hamcrest.Matchers . allOf ( doubleWithName ( com.pchudzik.springmock.infrastructure.definition.registry.DoubleRegistryParserTest.ANY_SERVICE2_NAME ) , doubleForClass ( com.pchudzik.springmock.infrastructure.definition.registry.DoubleRegistryParserTest.AnyService2 . class ) ) ) ) ; } 
public boolean delete ( com.mozzandroidutils.sqlite.Model t ) { if ( ( ( t . hasSetId () ) && ( mTableExist ) ) && ( ! ( mReadOnly ) ) ) { java.lang.String deleteSQL = ( ( ( ( "DELETE FROM table " + ( mTableName ) ) + " WHERE " ) + ( com.mozzandroidutils.sqlite.Eloquent.ID_COLUMN ) ) + " = " ) + ( t.id ) ; debug ( deleteSQL ) ; synchronized ( mDatabase ) { mDatabase . execSQL ( deleteSQL ) ; } return true ; } return false ; } 
@ java.lang.Override public ayalma.ir.NavigationView.ViewHolder onCreateViewHolder ( android.view.ViewGroup parent , int viewType ) { android.view.LayoutInflater inflater = android.view.LayoutInflater . from ( parent . getContext () ) ; if ( viewType == ( HolderType.Header . getValue () ) ) { return new ayalma.ir.NavigationView.NavigationView.headerHolder ( headerView ) ; } else { android.view.View view = inflater . inflate ( R.layout.navigation_row_rtl , parent , false ) ; return new ayalma.ir.NavigationView.NavigationView.ItemHolder ( view ) ; } } 
public java.util.Map < java.lang.String , java.lang.String > getLinks () { java.util.LinkedHashMap < java.lang.String , java.lang.String > map = new java.util.LinkedHashMap < java.lang.String , java.lang.String > () ; map . put ( "/module/cohort/cohortDashboard.form" , "Cohort Dashboard" ) ; map . put ( "/module/cohort/patientSearch.form" , "Cohort Patient Search" ) ; map . put ( "/module/cohort/cohortSearch.form" , "Cohort Search" ) ; map . put ( "/module/cohort/manageCohorts.form" , "Manage Cohorts and Metadata" ) ; return map ; } 
public void setResult ( boolean status , java.lang.String nameOfTest , java.lang.Long duration ) throws java.io.IOException , java.net.MalformedURLException { java.lang.String result = ( ( nameOfTest + "[" ) + ( status ? "PASS" : "FAIL" ) ) + "]" ; if ( duration != null ) { insynctive.utils.TestResults . addResult ( ( ( ( result + " (Duration: " ) + ( duration / 1000000 ) ) + " ms)" ) ) ; } else { insynctive.utils.TestResults . addResult ( result ) ; } if ( status == false ) { generalStatus = status ; } tags . add ( result ) ; } 
public void testsUnsupportedTagsToJson () { try { compile ( "{{#toJson}}{{foo}}{{bar}}{{/toJson}}" ) ; fail ( "Expected MustacheException" ) ; } catch ( com.github.mustachejava.MustacheException e ) { assertThat ( e . getMessage () , org.hamcrest.Matchers . containsString ( "Mustache function [toJson] must contain one and only one identifier" ) ) ; } try { compile ( "{{#toJson}}{{/toJson}}" ) ; fail ( "Expected MustacheException" ) ; } catch ( com.github.mustachejava.MustacheException e ) { assertThat ( e . getMessage () , org.hamcrest.Matchers . containsString ( "Mustache function [toJson] must contain one and only one identifier" ) ) ; } } 
public void addPublication ( java.lang.String country , java.lang.String publication ) { if ( ( issues . get ( country ) ) == null ) this . addCountry ( country ) ; issues . get ( country ) . put ( publication , new java.util.ArrayList < net.ducksmanager.whattheduck.Issue > () ) ; } 
public static byte [] serialize_compressed ( java.lang.Object o ) throws java.io.IOException { com.esotericsoftware.kryo.Kryo k = org.corfudb.client.view.Serializer.kryos . get () ; try ( java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream () ) { try ( java.util.zip.DeflaterOutputStream dos = new java.util.zip.DeflaterOutputStream ( baos ) ) { try ( com.esotericsoftware.kryo.io.UnsafeOutput output = new com.esotericsoftware.kryo.io.UnsafeOutput ( dos , 16384 ) ) { k . writeClassAndObject ( output , o ) ; output . flush () ; dos . flush () ; dos . finish () ; return baos . toByteArray () ; } } } } 
private int weight () { if ( ( mWeightEditText . getText () . toString () . length () ) > 0 ) { return java.lang.Integer . parseInt ( mWeightEditText . getText () . toString () . trim () ) ; } return - 1 ; } 
public void editLine ( java.lang.String macro , int line , java.lang.String edit ) { java.util.List < java.lang.String > lines = get ( macro ) ; line = java.lang.Math . min ( line , lines . size () ) ; if ( edit . isEmpty () ) { if ( line < ( lines . size () ) ) { get ( macro ) . remove ( line ) ; } } else { get ( macro ) . set ( line , edit ) ; } } 
@ com.common.test.Test public void testTicker () { com.week2.solution.ticker.Company adidas = new com.week2.solution.ticker.Company ( "Adidas" , 301 ) ; com.week2.solution.ticker.Company fake = new com.week2.solution.ticker.Company () ; com.week2.solution.ticker.Company google = new com.week2.solution.ticker.Company ( "Google" ) ; com.week2.solution.ticker.Company unknown = new com.week2.solution.ticker.Company ( 501.2 ) ; adidas . changeStockPrice ( 401.5 ) ; fake . changeStockPrice ( 2 ) ; google . changeStockPrice ( 687 ) ; unknown . changeStockPrice ( 1 ) ; adidas . changeStockPrice ( ( - 24 ) ) ; } 
@ java.lang.Override public void call ( final java.lang.Integer pin ) { progressDialog . dismiss () ; if ( pin > 0 ) { cgeo.geocaching.ui.dialog.Dialogs . message ( activity , R.string.init_sendToCgeo , activity . getString ( R.string.init_sendToCgeo_register_ok ) . replace ( "####" , java.lang.String . valueOf ( pin ) ) ) ; } else { cgeo.geocaching.ui.dialog.Dialogs . message ( activity , R.string.init_sendToCgeo , R.string.init_sendToCgeo_register_fail ) ; } } 
@ java.lang.Override public void run () { com.yahoo.squidb.test.TestModel model = new com.yahoo.squidb.test.TestModel () ; java.util.Map < java.lang.String , java.util.Map < java.lang.String , java.util.List < java.lang.Integer > > > crazyMap = mockComplicatedMap () ; model . setComplicatedMap ( crazyMap ) ; database . persist ( model ) ; model = database . fetch ( com.yahoo.squidb.test.TestModel . class , model . getRowId () , TestModel.PROPERTIES ) ; java.util.Map < java.lang.String , java.util.Map < java.lang.String , java.util.List < java.lang.Integer > > > readMap = model . getComplicatedMap () ; assertEquals ( crazyMap , readMap ) ; } 
@ java.lang.Override public void onCheckedChanged ( android.widget.RadioGroup group , int checkedId ) { confirm . setEnabled ( true ) ; android.widget.RadioButton radioButton = ( ( android.widget.RadioButton ) ( group . findViewById ( checkedId ) ) ) ; givenAnswer [ 0 ] = java.lang.String . valueOf ( radioButton . getText () ) ; } 
public void setVideoStartAt ( int startAt ) { videoStartAt = startAt ; if ( ( mMediaPlayer ) == null ) { return; } if ( ( ( mMediaPlayer . getDuration () ) * 1000 ) < ( videoStartAt ) ) { mMediaPlayer . seekTo ( videoStartAt ) ; } } 
public static java.io.Serializable readObj ( java.lang.String name ) { java.lang.Object obj = zilla.libcore.file.PersistenceManager.cache . get ( name ) . get () ; if ( obj == null ) { obj = zilla.libcore.file.FileHelper . readObj ( ( ( ( FileHelper.PATH_FILES ) + name ) + ".obj" ) ) ; if ( obj == null ) { return null ; } } return ( ( java.io.Serializable ) ( obj ) ) ; } 
public void initIMA ( java.lang.String adTagURL , android.app.Activity activity ) { ( ( android.view.View ) ( player ) ) . setVisibility ( View.INVISIBLE ) ; isIMAActive = true ; if ( ( player ) != null ) { player . setShouldCancelPlay ( true ) ; } this . adTagURL = adTagURL ; mActivity = new java.lang.ref.WeakReference ( activity ) ; if ( isPlayerCanPlay ) { addAdPlayer () ; } } 
@ java.lang.Override public boolean evaluateImpl ( org.alfresco.service.cmr.repository.NodeRef nodeRef ) { if ( ( nodeService . hasAspect ( nodeRef , org.alfresco.module.org_alfresco_module_rm.capability.declarative.condition.ASPECT_GHOSTED ) ) && ( dispositionService . isDisposableItemCutoff ( nodeRef ) ) ) return true ; return ( ! ( dispositionService . isDisposableItemCutoff ( nodeRef ) ) ) || ( recordFolderService . isRecordFolderClosed ( nodeRef ) ) ; } 
public static int getAngle ( de.pvr.fish.simulation.model.Position source , de.pvr.fish.simulation.model.Position target ) { double angle2 = java.lang.Math . atan2 ( ( ( target . getCoordinateY () ) - ( source . getCoordinateY () ) ) , ( ( target . getCoordinateX () ) - ( source . getCoordinateY () ) ) ) ; int angle = ( ( int ) ( java.lang.Math . toDegrees ( angle2 ) ) ) ; angle = ( angle + 180 ) % 360 ; return angle ; } 
public TreeNode findCA3 ( TreeNode root , TreeNode a , TreeNode b ) { if ( ( ! ( findCommonAncestor . cover ( root , a ) ) ) || ( ! ( findCommonAncestor . cover ( root , b ) ) ) ) { return null ; } return ancesterHelper ( root , a , b ) ; } 
private void waitForClear () { synchronized ( this ) { ( waiting ) ++ ; if ( ( waiting ) == 1 ) notifyAll () ; while ( ! ( proceed ) ) { try { wait () ; } catch ( java.lang.InterruptedException e ) {} } } } 
private static java.lang.Integer getIntegerFromJson ( com.google.gson.JsonObject jsonObj , java.lang.String propertyName ) { java.lang.Integer result = null ; if ( ! ( jsonObj . get ( propertyName ) . isJsonNull () ) ) { result = jsonObj . get ( propertyName ) . getAsInt () ; } return result ; } 
@ java.lang.Override public void postBenchmark ( nl.tudelft.graphalytics.domain.Benchmark benchmark , nl.tudelft.graphalytics.domain.BenchmarkResult benchmarkResult ) { nl.tudelft.graphalytics.granula.GranulaPlugin.LOG . debug ( "Start postBenchmark in Granula" ) ; if ( nl.tudelft.graphalytics.granula.GranulaPlugin.enabled ) { if ( nl.tudelft.graphalytics.granula.GranulaPlugin.platformLogEnabled ) { platform . postBenchmark ( benchmark , getLogDirectory ( benchmark ) ) ; } if ( nl.tudelft.graphalytics.granula.GranulaPlugin.archivingEnabled ) { try { createArchive ( benchmarkResult ) ; platform . enrichMetrics ( benchmarkResult , getArchiveDirectory ( benchmark ) ) ; } catch ( java.lang.Exception ex ) { nl.tudelft.graphalytics.granula.GranulaPlugin.LOG . error ( "Failed to generate Granula archives for the benchmark results:" , ex ) ; } } } } 
private org.apache.hadoop.hbase.regionserver.InternalScanner createScanner ( org.apache.hadoop.hbase.regionserver.Store store ) throws java.io.IOException { org.apache.hadoop.hbase.regionserver.InternalScanner internalScanner = null ; org.apache.hadoop.hbase.client.Scan scan = new org.apache.hadoop.hbase.client.Scan () ; scan . setMaxVersions () ; internalScanner = new org.apache.hadoop.hbase.regionserver.StoreScanner ( store , store . getScanInfo () , scan , java.util.Collections . singletonList ( scanner ) , ScanType.COMPACT_RETAIN_DELETES , smallestReadPoint , org.apache.hadoop.hbase.HConstants.OLDEST_TIMESTAMP ) ; return internalScanner ; } 
public long getDaysAgo () { final int millisecondsInDay = ( ( 1000 * 60 ) * 60 ) * 24 ; long createDay = ( activity . getCreateDate () ) / millisecondsInDay ; long daysNow = ( new java.util.Date () . getTime () ) / millisecondsInDay ; return daysNow - createDay ; } 
public void setAdapter ( android.widget.BaseAdapter adapter ) { if ( adapter == null ) { throw new java.lang.NullPointerException ( "Adapter may not be null" ) ; } if ( ( ( this . adapter ) != null ) && ( ( this . dataSetObserver ) != null ) ) { adapter . unregisterDataSetObserver ( dataSetObserver ) ; } this . adapter = adapter ; this . dataSetObserver = new com.orhanobut.simplelistview.SimpleListView.AdapterDataSetObserver () ; this . adapter . registerDataSetObserver ( dataSetObserver ) ; resetList () ; refreshList () ; } 
@ chan.annotation.Public public chan.http.HttpResponse read ( ) throws chan.http.HttpException { chan.http.HttpHolder holder = execute () ; try { if ( ( mRequestMethod ) == ( chan.http.HttpRequest.REQUEST_METHOD_HEAD ) ) return null ; return holder . read () ; } catch ( chan.http.HttpException e ) { mHolder . disconnect () ; throw e ; } } 
@ org.junit.Test public void testImportVote () { org.mockito.Mockito . when ( voteMap . put ( moe.cdn.cweb.security.CwebImportServiceImplTest.CONTENT_HASH , moe.cdn.cweb.TorrentTrustProtos.SignedVote . newBuilder () . setSignature ( moe.cdn.cweb.security.CwebImportServiceImplTest.VOTE_1_SIGNATURE ) . setVote ( moe.cdn.cweb.security.CwebImportServiceImplTest.VOTE_1 ) . build () ) ) . thenReturn ( com.google.common.util.concurrent.Futures . immediateFuture ( true ) ) ; org.junit.Assert . assertTrue ( cwebImportServiceImpl . importVote ( moe.cdn.cweb.security.CwebImportServiceImplTest.VOTE_1 ) ) ; } 
public boolean equals ( java.lang.Object o ) { return ( ( o instanceof com.tr.rp.ast.statements.While2 ) && ( ( ( com.tr.rp.ast.statements.While ) ( o ) ) . whileCondition . equals ( whileCondition ) ) ) && ( ( ( com.tr.rp.ast.statements.While ) ( o ) ) . body . equals ( body ) ) ; } 
@ java.lang.Override protected void onPause () { android.util.Log . d ( com.quickblox.q_municate.ui.mediacall.CallActivity.CALL_INTEGRATION , ( "Pause call activity " + ( this ) ) ) ; super . onPause () ; if ( ( getLocalVideoView () ) != null ) { getLocalVideoView () . onPause () ; } if ( ( getLocalVideoView () ) != null ) { getRemoteVideoView () . onPause () ; } } 
public static void main ( java.lang.String [] arg ) { java.lang.System.out . println ( ( "Connecting to zookeeper: " + "ktask-nod1:2181,ktask-nod2:2181,ktask-nod3:2181,ktask-nod4:2181" ) ) ; final kafka.utils.ZkUtils zkUtils = org.cripac.isee.vpe.util.kafka.KafkaHelper . createZKUtils ( "ktask-nod1:2181,ktask-nod2:2181,ktask-nod3:2181,ktask-nod4:2181" , 30000 , 300000 ) ; org.cripac.isee.vpe.util.kafka.KafkaHelper . createTopicIfNotExists ( zkUtils , "topicForURLTest" , 10 , 2 ) ; java.lang.System.out . println ( "Topics checked!" ) ; } 
private int FindMaxContour ( java.util.ArrayList < org.opencv.core.MatOfPoint > contours ) { int idx_max_contour = - 1 ; double size_max_contour = 0.0 ; for ( int i = 0 ; i < ( contours . size () ) ; i ++ ) { if ( ( contours . get ( i ) . size () . area () ) > size_max_contour ) { size_max_contour = contours . get ( i ) . size () . area () ; idx_max_contour = i ; } } return idx_max_contour ; } 
@ java.lang.Override public boolean canTakeStack ( net.minecraft.entity.player.EntityPlayer playerIn ) { net.minecraftforge.items.IItemHandler handler = getItemHandler () ; return handler instanceof tamaized.tammodized.common.tileentity.TamTileEntityInventory.ItemStackFilterHandler ? ! ( ( ( tamaized.tammodized.common.tileentity.TamTileEntityInventory.ItemStackFilterHandler ) ( handler ) ) . extractBypass ( i , 1 , true ) . isEmpty () ) : ! ( handler . extractItem ( i , 1 , true ) . isEmpty () ) ; } 
private void applySpecialEvents () { if ( specialEvents . isEmpty () ) return; for ( java.util.Iterator < starvationevasion.sim.events.AbstractEvent > iterator = specialEvents . iterator () ; iterator . hasNext () ; ) { starvationevasion.sim.events.AbstractEvent event = iterator . next () ; event . applyEffects () ; if ( ( event . getDuration () ) < 1 ) { specialEvents . remove ( event ) ; } } } 
@ java.lang.Override public boolean shouldOverrideUrlLoading ( android.webkit.WebView view , java.lang.String url ) { if ( ( ( url . contains ( "oob" ) ) || ( url . contains ( "404" ) ) ) || ( url . contains ( "ood" ) ) ) { showCorrectAlertWithUrl ( url ) ; mAddressBar . setText ( url . substring ( url . indexOf ( ":" ) ) ) ; } else { mAddressBar . setText ( url ) ; } return super . shouldOverrideUrlLoading ( view , url ) ; } 
@ java.lang.Override public void onAttach ( android.content.Context context ) { super . onAttach ( context ) ; try { if ( context instanceof android.app.Activity ) mCallback = ( ( be.pzbethanienhuis.kadans.settings.SettingsFragment.SettingsListListener ) ( context ) ) ; else android.util.Log . e ( be.pzbethanienhuis.kadans.settings.SettingsFragment.LOG_TAG , "onAttach, context != Activity" ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.ClassCastException ( ( ( context . toString () ) + " must implement SettingsListListener" ) ) ; } } 
public void checkState () { if ( measurementStarted ) if ( onMeasurementRSSIsFilled () ) { calculateMedian () ; android.util.Log . d ( de.beacon.tom.viibenav_radiomapper.model.OnyxBeacon.TAG , ( ( ( de.beacon.tom.viibenav_radiomapper.model.Util . intListToString ( measurementRSSIs ) ) + " " ) + ( macAddress ) ) ) ; android.util.Log . d ( de.beacon.tom.viibenav_radiomapper.model.OnyxBeacon.TAG , ( ( ( "Calculated Median is: " + ( medianRSSI ) ) + " | mac: " ) + ( macAddress ) ) ) ; measurementDone = true ; } android.util.Log . d ( de.beacon.tom.viibenav_radiomapper.model.OnyxBeacon.TAG , ( "check STATE: " + ( measurementStarted ) ) ) ; } 
@ java.lang.Override public void insert ( @ com.sun.istack.internal.NotNull T toInsert ) { if ( isEmpty () ) { firstNode = new lists.linkedlist.ListNode < T > ( toInsert ) ; } else { lists.linkedlist.ListNode < T > current = firstNode ; while ( ( current . getNext () ) != null ) current = firstNode . getNext () ; current . setNext ( new lists.linkedlist.ListNode < T > ( toInsert ) ) ; } ( _size ) ++ ; } 
public static void setProtocolsAndCiphers ( javax.net.ssl.SSLServerSocket socket ) { java.lang.String [] p = net.i2p.util.I2PSSLSocketFactory . selectProtocols ( socket . getEnabledProtocols () , socket . getSupportedProtocols () ) ; for ( int i = 0 ; i < ( p.length ) ; i ++ ) { if ( p . equals ( "SSLv3" ) ) return; } socket . setEnabledProtocols ( p ) ; socket . setEnabledCipherSuites ( net.i2p.util.I2PSSLSocketFactory . selectCipherSuites ( socket . getEnabledCipherSuites () , socket . getSupportedCipherSuites () ) ) ; } 
@ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { edit . setText ( searchList . get ( position ) . split ( " / " ) [ 0 ] ) ; edit . setTag ( searchList . get ( position ) . split ( " / " ) [ 1 ] ) ; closeSearchResult () ; } 
public void setButtonState ( android.widget.Button button , boolean selected ) { if ( button == null ) { return; } button . setSelected ( selected ) ; if ( selected ) { button . setBackgroundResource ( R.drawable.button_pressed ) ; button . setTextAppearance ( this . context , R.style.WhiteBoldText ) ; } else { button . setBackgroundResource ( R.drawable.button_not_pressed ) ; button . setTextAppearance ( this . context , R.style.PrimaryNormalText ) ; } } 
public boolean handle ( final org.bedework.eventreg.requests.EventregRequest request ) throws java.lang.Throwable { try { openDb () ; if ( request instanceof org.bedework.eventreg.requests.EventChangeRequest ) { return handleChange ( ( ( org.bedework.eventreg.requests.EventChangeRequest ) ( request ) ) ) ; } if ( request instanceof org.bedework.eventreg.requests.RegistrationAction ) { return handleNewReg ( ( ( org.bedework.eventreg.requests.RegistrationAction ) ( request ) ) ) ; } request . discard () ; return false ; } finally { closeDb () ; } } 
private void visitDelete ( org.eclipse.rdf4j.model.Resource delete ) throws org.eclipse.rdf4j.RDF4JException { org.eclipse.rdf4j.common.iteration.Iteration < ? extends org.eclipse.rdf4j.model.Resource , org.eclipse.rdf4j.query.QueryEvaluationException > groupIter = org.eclipse.rdf4j.query.algebra.evaluation.util.TripleSources . listResources ( delete , store ) ; while ( groupIter . hasNext () ) { org.eclipse.rdf4j.model.Resource r = groupIter . next () ; org.eclipse.rdf4j.model.Value type = org.eclipse.rdf4j.query.algebra.evaluation.util.TripleSources . singleValue ( r , RDF.TYPE , store ) ; visitPattern ( r , ( type != null ? java.util.Collections . singleton ( ( ( org.eclipse.rdf4j.model.IRI ) ( type ) ) ) : java.util.Collections . < org.eclipse.rdf4j.model.IRI > emptySet () ) ) ; } } 
@ android.annotation.TargetApi ( value = Build.VERSION_CODES.JELLY_BEAN_MR2 ) @ java.lang.Override public void stopLeScan () { if ( isBluetoothLowEnergySupported () ) { try { bluetoothAdapter . stopLeScan ( crashCallBackWrapper ) ; } catch ( java.lang.NullPointerException sentBySysteminternally ) { Logger.log . logError ( "System bug throwing a NullPointerException internally." , sentBySysteminternally ) ; } finally { leScanRunning = false ; crashCallBackWrapper . setCallback ( null ) ; } } } 
@ java.lang.Override public int getItemViewType ( int position ) { if ( ( com.xdandroid.simplerecyclerview.SingleViewTypeAdapter . getItemSpanSizeForGrid ( ( - 1 ) , ( - 1 ) , ( - 1 ) ) ) == ( - 1 ) ) { mDisableLoadMore = true ; return 0 ; } return position == ( list . size () ) ? 65535 : 0 ; } 
public void count ( int x ) { for ( int i = 1 ; i < x ; i ++ ) { if ( ( i % 2 ) == 1 ) { java.lang.System.out . println ( ( i + "..." ) ) ; } } java.lang.System.out . println ( ( x + "!" ) ) ; } 
@ java.lang.Override public void onNext ( final org.apache.reef.io.network.Message < java.lang.String > message ) { java.util.Iterator < java.lang.String > iter = message . getData () . iterator () ; while ( ! ( iter . hasNext () ) ) { java.lang.System.out . println ( ( "Message: " + ( iter . next () ) ) ) ; } } 
@ org.springframework.web.bind.annotation.ResponseBody @ org.springframework.web.bind.annotation.RequestMapping ( value = "/code" ) public com.finance.controller.KaptchaController.CaptchaResopnse getKaptchaImageCode () { com.finance.controller.KaptchaController.CaptchaResopnse captchaResopnse = new com.finance.controller.KaptchaController.CaptchaResopnse () ; java.lang.String code = java.util.UUID . randomUUID () . toString () . replace ( "-" , "" ) ; org.springframework.web.context.request.ServletRequestAttributes attr = ( ( org.springframework.web.context.request.ServletRequestAttributes ) ( org.springframework.web.context.request.RequestContextHolder . currentRequestAttributes () ) ) ; javax.servlet.http.HttpSession session = attr . getRequest () . getSession () ; session . setAttribute ( code , code ) ; captchaResopnse . setCode ( code ) ; return captchaResopnse ; } 
private void generateTraps ( int limit ) { int amountOfButtons = limit ; int trapNumber = at.conradi.helloworld.MainActivity . newRandomNumberBetween ( amountOfButtons ) ; java.lang.String logMessage = getResources () . getString ( R.string.log_trap_id ) ; int amountOfTraps = 3 ; for ( int i = 0 ; i < amountOfTraps ; i ++ ) { while ( traps . contains ( trapNumber ) ) { trapNumber = at.conradi.helloworld.MainActivity . newRandomNumberBetween ( amountOfButtons ) ; } android.util.Log . i ( logMessage , java.lang.Integer . toString ( trapNumber ) ) ; traps . add ( trapNumber ) ; } } 
private main.logic.Location findLocation ( java.lang.String locationName ) { for ( main.logic.Location l : locations ) { if ( l . getName () . equalsIgnoreCase ( locationName ) ) { return l ; } } main.logic.Location loc = new main.logic.Location ( locationName ) ; loc . attachMonitor ( this ) ; return loc ; } 
private java.lang.StringBuilder handleDayChange ( java.lang.String newDateString , java.lang.StringBuilder sb ) { if ( ! ( this . getLastExtractionDate () . equals ( newDateString ) ) ) { sb . append ( "\n" ) ; sb . append ( "\n" ) ; sb . append ( "*** " ) ; sb . append ( java.util.Calendar . getInstance () . getDisplayName ( java.util.Calendar.DAY_OF_WEEK , java.util.Calendar.LONG , java.util.Locale.ENGLISH ) ) ; sb . append ( " (" ) ; sb . append ( newDateString ) ; sb . append ( ") ***" ) ; sb . append ( "\n" ) ; } return sb ; } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { switch ( item . getItemId () ) { case R.id.action_settings : return true ; case R.id.action_about : startActivity ( new android.content.Intent ( this , com.project.furnishyourhome.AboutActivity . class ) ) ; return true ; case R.id.action_search : onSearchRequested () ; } if ( leftDrawerListener . onOptionsItemSelected ( item ) ) { return true ; } return super . onOptionsItemSelected ( item ) ; } 
public jacJarSoft.noteArkiv.model.User logon ( jacJarSoft.noteArkiv.model.User logonInfo ) { jacJarSoft.noteArkiv.model.User user = getEntityManager () . find ( jacJarSoft.noteArkiv.model.User . class , logonInfo . getNo () ) ; if ( ! ( user . getPassword () . equals ( logonInfo . getPassword () ) ) ) return null ; return user ; } 
public void checkKeys () { if ( de.ImOlli.managers.KeyCheckManager . keysCheck ( java.awt.event.KeyEvent.VK_W ) ) { moveDir = javafx.geometry.Side.TOP ; } else if ( de.ImOlli.managers.KeyCheckManager . keysCheck ( java.awt.event.KeyEvent.VK_S ) ) { moveDir = javafx.geometry.Side.BOTTOM ; } else if ( de.ImOlli.managers.KeyCheckManager . keysCheck ( java.awt.event.KeyEvent.VK_A ) ) { moveDir = javafx.geometry.Side.LEFT ; } else if ( de.ImOlli.managers.KeyCheckManager . keysCheck ( java.awt.event.KeyEvent.VK_D ) ) { moveDir = javafx.geometry.Side.RIGHT ; } else { return; } } 
@ java.lang.Override protected void applyNodeBorderWidth ( org.cytoscape.view.vizmap.VisualStyle visualStyle ) { super . applyNodeBorderWidth ( visualStyle ) ; org.cytoscape.view.vizmap.mappings.DiscreteMapping borderWidthDiscreteMapping = ( ( org.cytoscape.view.vizmap.mappings.DiscreteMapping ) ( this . discreteMappingFactoryServiceRef . createVisualMappingFunction ( NodeAttribute.Department . toString () , java.lang.String . class , BasicVisualLexicon.NODE_BORDER_WIDTH ) ) ) ; borderWidthDiscreteMapping . putMapValue ( this . socialNetwork . getAttrMap () . get ( NodeAttribute.Department . toString () ) , 10.0 ) ; } 
private java.util.List < org.rapla.facade.Conflict > getConflictsToDeleteFromCache ( org.rapla.storage.UpdateResult result ) { java.util.Set < org.rapla.entities.Entity > removed = result . getRemoved () ; java.util.List < org.rapla.facade.Conflict > conflicts = new java.util.ArrayList < org.rapla.facade.Conflict > () ; for ( org.rapla.entities.Entity entity : removed ) { if ( entity instanceof org.rapla.facade.Conflict ) { if ( cache . getConflictIds () . contains ( entity . getId () ) ) { conflicts . add ( ( ( org.rapla.facade.Conflict ) ( entity ) ) ) ; } } } return conflicts ; } 
public static void checkTrophies ( com.tann.hexcity.savaData.Trophy.AchievementType action , int arg ) { java.lang.System.out . println ( ( ( ( "checking " + action ) + " " ) + arg ) ) ; for ( com.tann.hexcity.savaData.Trophy t : com.tann.hexcity.savaData.Trophy.achievementsList ) { if ( ( ( t.requiredType ) != null ) && ( ( t.requiredType ) != ( com.tann.hexcity.screens.gameScreen.GameScreen . get () . gameType ) ) ) continue; if ( ( t.type ) != action ) continue; if ( arg >= ( t.target ) ) t . complete () ; } } 
@ java.lang.Override public void cleanup () { if ( ( moviePlayerPeer ) != 0 ) { pause () ; if ( ! ( isVideo ) ) { com.codename1.impl.ios.IOSImplementation.nativeInstance . cleanupAudio ( moviePlayerPeer ) ; } removeMediaCallback ( onCompletionCallbackId ) ; com.codename1.impl.ios.IOSImplementation.nativeInstance . releasePeer ( moviePlayerPeer ) ; moviePlayerPeer = 0 ; } } 
public static void main ( java.lang.String [] args ) throws java.lang.Exception { payne.framework.pigeon.server.InvocationContext context = new payne.framework.pigeon.server.bio.BlockingInvocationContext () ; context . bind ( 9090 ) ; context . setBeanConfigurationPaths ( new java.lang.String [] { "pigeon.properties" , "pigeon-encryption.properties" } ) ; context . register ( new payne.framework.pigeon.sample.validation.ValidatedAPIImpl () ) ; context . register ( new payne.framework.pigeon.generation.objc.ObjectiveCGeneratorService ( false ) ) ; context . startup () ; } 
public void clearTinyMce () { questionNameTextArea = new org.ednovo.gooru.client.ui.TinyMCE ( 500 ) ; explainationTextArea = new org.ednovo.gooru.client.ui.TinyMCE () ; questionNameTextAreaContainer . clear () ; explainationTextAreaContainer . clear () ; questionNameTextArea . setCharacterLimit ( 500 ) ; questionNameTextArea . getElement () . setId ( "tinyMCEQuestionNameTextArea" ) ; questionNameTextArea . getElement () . setAttribute ( "maxlength" , "500" ) ; questionNameTextArea.markAsBlankPanel . setVisible ( false ) ; questionNameTextAreaContainer . add ( questionNameTextArea ) ; explainationTextAreaContainer . add ( explainationTextArea ) ; } 
public model.MathElement turnColorBackTo ( java.awt.Color color ) { if ( ( mLastMathElementModified ) != null ) { if ( ( mLastMathElementModified . getColor () ) != color ) { mLastMathElementModified . setColor ( color ) ; mRedFlag = false ; return mLastMathElementModified ; } } return null ; } 
@ java.lang.Override public void onAnimationUpdate ( final android.animation.ValueAnimator animator ) { if ( isVertical () ) { getLayoutParams () . height = ( ( int ) ( animator . getAnimatedValue () ) ) ; } else { getLayoutParams () . width = ( ( int ) ( animator . getAnimatedValue () ) ) ; } requestLayout () ; } 
private void getConnection () { try { java.lang.Class . forName ( dar.localDB.LocalWraper.DB_DRIVER ) ; con = java.sql.DriverManager . getConnection ( dar.localDB.LocalWraper.DB_CONN_STRING , dar.localDB.LocalWraper.DB_LOGIN , dar.localDB.LocalWraper.DB_PASS ) ; java.lang.System.out . println ( "connected" ) ; } catch ( java.sql.SQLException ex ) { if ( ( ex . getErrorCode () ) == 90020 ) { javax.swing.JOptionPane . showMessageDialog ( null , "Application is already in use!\nPlease restart application and try it again." , "Already in use" , javax.swing.JOptionPane.ERROR_MESSAGE ) ; } else { ex . printStackTrace () ; } } catch ( java.lang.ClassNotFoundException ex ) { ex . printStackTrace () ; } } 
private org.joda.money.Money parseMoney ( de.oette.swiftparser.SwiftMt940Parser.MoneyContext moneyContext ) { org.joda.money.CurrencyUnit currencyUnit = null ; if ( ( swiftMt4TransactionCollection . getCurrency () ) != null ) { currencyUnit = org.joda.money.CurrencyUnit . of ( swiftMt4TransactionCollection . getCurrency () ) ; } java.math.BigDecimal amount = moneyMajorToBigDecimal ( moneyContext . moneyMajor () ) . add ( moneyMinorToBigDecimal ( moneyContext . moneyMinor () ) ) ; return org.joda.money.Money . of ( currencyUnit , amount ) ; } 
private static javax.jcr.Item getSubitem ( javax.jcr.Node node , java.lang.String relPath ) throws javax.jcr.RepositoryException { if ( node . hasNode ( relPath ) ) { return node . getNode ( relPath ) ; } else if ( node . hasProperty ( relPath ) ) { return node . getProperty ( relPath ) ; } else { return null ; } } 
public java.util.List < fi.helsinki.cs.mobiilitiedekerho.backend.models.Like > describeAnswerLikes ( java.lang.String answerId ) { java.lang.String sql = "SELECT * FROM slaikka " + "WHERE answer_id = :aid" ; try ( fi.helsinki.cs.mobiilitiedekerho.backend.services.Connection con = sql2o . open () ) { java.util.List < fi.helsinki.cs.mobiilitiedekerho.backend.models.Like > likes = con . createQuery ( sql ) . addParameter ( "aid" , java.lang.Integer . parseInt ( answerId ) ) . executeAndFetch ( fi.helsinki.cs.mobiilitiedekerho.backend.models.Like . class ) ; return likes ; } } 
@ java.lang.Override public void connectionStopped ( py4j.Py4JServerConnection arg0 ) { synchronized ( getLock () ) { if ( ( this . connection ) == null ) logError ( "connectionStopped error: this.connection already null" ) ; else if ( ( this . connection ) != arg0 ) logError ( ( ( ( "connectionStopped error: this.connection=" + ( this . connection ) ) + " not equal to arg0=" ) + arg0 ) ) ; else { this . connection = null ; hardClose () ; } } } 
public static void createCompositeFile ( javax.swing.JFrame parent , java.io.File [] inputFileArray , java.io.File outputFile , java.lang.Integer startYear , java.lang.Integer endYear , org.fhaes.enums.FireFilterType filter , java.lang.Double fireFilterValue , java.lang.Integer minNumberSamples ) { new org.fhaes.tools.FHOperations ( parent , inputFileArray , outputFile , startYear , endYear , fireFilterValue , filter , false , true , false , minNumberSamples , null ) ; } 
public static far.math.vec.Vec3f normalize ( far.math.vec.Vec3f vec ) { float temp ; temp = ( ( java.lang.Math . abs ( vec.x ) ) + ( java.lang.Math . abs ( vec.y ) ) ) + ( java.lang.Math . abs ( vec.z ) ) ; vec = far.math.vec.Vec3f . div ( vec , temp ) ; return vec ; } 
@ java.lang.Override public java.util.concurrent.ScheduledFuture < ? > schedule ( final java.lang.Runnable command , final long delay , final java.util.concurrent.TimeUnit unit ) { checkUIState () ; final com.ponysdk.core.concurrent.UIScheduledThreadPoolExecutor.UIRunnable runnable = new com.ponysdk.core.concurrent.UIScheduledThreadPoolExecutor.UIRunnable ( command ) ; final java.util.concurrent.ScheduledFuture < ? > future = executor . schedule ( runnable , delay , unit ) ; runnable . setFuture ( future ) ; registerTask ( runnable ) ; return future ; } 
private java.lang.String getInteractionReffromNode ( org.w3c.dom.Node node ) { org.w3c.dom.Node subnode = node . getFirstChild () ; do { if ( subnode . getNodeName () . equals ( "InteractionRef" ) ) { return subnode . getAttributes () . getNamedItem ( "xlink:href" ) . getNodeValue () ; } subnode = subnode . getNextSibling () ; } while ( ( subnode . getNextSibling () ) != null ) ; return null ; } 
@ javax.ws.rs.Path ( value = "expensecategory/" ) @ javax.ws.rs.PUT @ javax.ws.rs.Consumes ( value = { javax.ws.rs.core.MediaType.APPLICATION_JSON , javax.ws.rs.core.MediaType.APPLICATION_XML } ) @ javax.ws.rs.Produces ( value = { javax.ws.rs.core.MediaType.APPLICATION_JSON , javax.ws.rs.core.MediaType.APPLICATION_XML } ) public com.slabs.expense.tracker.webservice.response.Response updateExpenseCategory ( java.util.List < com.slabs.expense.tracker.common.db.entity.ExpenseCategory > records ) throws com.slabs.expense.tracker.core.exception.ExpenseTrackerException { try { com.slabs.expense.tracker.core.services.ExpenseCategoryService service = com.slabs.expense.tracker.core.ServiceFactory . getInstance () . getService ( Services.EXPENSE_CATEGORY_SERVICE , com.slabs.expense.tracker.core.services.ExpenseCategoryService . class ) ; return com.slabs.expense.tracker.core.ResponseGenerator . getSucessResponse ( service . update ( records ) , Operation.UPDATE ) ; } catch ( java.lang.Exception e ) { com.slabs.expense.tracker.core.web.services.ExpenseWebService.L . error ( "Exception occurred, {}" , e ) ; throw new com.slabs.expense.tracker.core.exception.ExpenseTrackerException ( e , com.slabs.expense.tracker.core.ResponseStatus.SERVER_ERROR ) ; } } 
private void setFechaPorCalendario ( java.util.Calendar calendario ) { int d = calendario . get ( java.util.Calendar.DAY_OF_MONTH ) ; int m = calendario . get ( java.util.Calendar.MONTH ) ; int y = calendario . get ( java.util.Calendar.YEAR ) ; Model.Fecha newFecha = new Model.Fecha ( d , m , y ) ; setFf ( newFecha ) ; } 
private java.util.List < com.bitdubai.fermat_api.layer.osa_android.database_system.DatabaseTableRecord > getRecordsByFilterNegotiationTable ( com.bitdubai.fermat_api.layer.osa_android.database_system.DatabaseTableFilter . . . filters ) throws com.bitdubai.fermat_api.layer.osa_android.database_system.exceptions.CantLoadTableToMemoryException { com.bitdubai.fermat_api.layer.osa_android.database_system.DatabaseTable table = getNegotiationTable () ; for ( com.bitdubai.fermat_api.layer.osa_android.database_system.DatabaseTableFilter filter : filters ) { table . addStringFilter ( filter . getColumn () , filter . getValue () , DatabaseFilterType.EQUAL ) ; } table . addFilterOrder ( AssetSellerDatabaseConstants.ASSET_SELLER_NEGOTIATION_TIMESTAMP_COLUMN_NAME , DatabaseFilterOrder.ASCENDING ) ; table . loadToMemory () ; return table . getRecords () ; } 
public boolean more_rbsp_data () { if ( ( pointer ) == ( ( ( bytestream.length ) - 1 ) * 8 ) ) { return false ; } else if ( ( pointer ) >= ( trailingBitOffSet ) ) { return false ; } else { return true ; } } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { int id = item . getItemId () ; if ( id == ( R.id.action_settings ) ) { return true ; } if ( id == ( R.id.action_about ) ) { return true ; } if ( id == ( R.id.action_logout ) ) { onl.deepspace.wgs.Helper . setEmail ( this , "" ) ; onl.deepspace.wgs.Helper . setPw ( this , "" ) ; android.content.Intent intent = new android.content.Intent ( this , onl.deepspace.wgs.LoginActivity . class ) ; startActivity ( intent ) ; } return super . onOptionsItemSelected ( item ) ; } 
public static void registerMCBindings () { com.google.common.collect.ImmutableBiMap.Builder < net.minecraft.client.settings.KeyBinding , moze_intel.projecte.utils.PEKeybind > builder = com.google.common.collect.ImmutableBiMap . builder () ; for ( moze_intel.projecte.utils.PEKeybind k : moze_intel.projecte.utils.PEKeybind . values () ) { net.minecraft.client.settings.KeyBinding mcK = new net.minecraft.client.settings.KeyBinding ( net.minecraft.util.StatCollector . translateToLocal ( k.keyName ) , k.defaultKeyCode , moze_intel.projecte.PECore.MODID ) ; builder . put ( mcK , k ) ; cpw.mods.fml.client.registry.ClientRegistry . registerKeyBinding ( mcK ) ; } moze_intel.projecte.utils.ClientKeyHelper.mcToPe = builder . build () ; moze_intel.projecte.utils.ClientKeyHelper.peToMc = moze_intel.projecte.utils.ClientKeyHelper.mcToPe . inverse () ; } 
@ java.lang.Override public void mapBtoA ( de.egore911.hexanalyzer.ui.dto.Binary b , de.egore911.hexanalyzer.persistence.model.BinaryEntity a , ma.glasnost.orika.MappingContext context ) { if ( org.apache.commons.collections4.CollectionUtils . isNotEmpty ( b . getGroupIds () ) ) { a . setGroups ( new de.egore911.hexanalyzer.persistence.dao.GroupDao () . findByIds ( b . getGroupIds () ) ) ; } a . setData ( ( ( b . getData () ) != null ? b . getData () . replaceAll ( "[^0-9a-fA-F]+" , "" ) : null ) ) ; } 
private boolean isAccessGrantedToBeanName ( java.lang.String beanName ) { final com.vaadin.ui.UI currentUI = com.vaadin.ui.UI . getCurrent () ; final java.util.Map < java.lang.String , com.vaadin.spring.access.ViewAccessControl > accessDelegates = applicationContext . getBeansOfType ( com.vaadin.spring.access.ViewAccessControl . class ) ; for ( com.vaadin.spring.access.ViewAccessControl accessDelegate : accessDelegates . values () ) { if ( ! ( accessDelegate . isAccessGranted ( currentUI , beanName ) ) ) { com.vaadin.spring.navigator.SpringViewProvider.LOGGER . debug ( "Access delegate [{}] denied access to view with bean name [{}]" , accessDelegate , beanName ) ; return false ; } } return true ; } 
private void updateUI () { com.example.illum.criminalintent.CrimeLab crimeLab = com.example.illum.criminalintent.CrimeLab . get ( getActivity () ) ; java.util.List < com.example.illum.criminalintent.Crime > crimes = crimeLab . getCrimes () ; if ( ( mAdapter ) == null ) { mAdapter = new com.example.illum.criminalintent.CrimeListFragment.CrimeAdapter ( crimes ) ; mCrimeRecyclerView . setAdapter ( mAdapter ) ; } else { mAdapter . notifyItemChanged ( com.example.illum.criminalintent.CrimeFragment . getLastModifiedCrimePosition () ) ; } } 
public java.util.List < com.liveramp.cascading_ext.flow_step_strategy.FlowStepStrategyFactory < org.apache.hadoop.mapred.JobConf > > getDefaultFlowStepStrategies () { java.util.List < com.liveramp.cascading_ext.flow_step_strategy.FlowStepStrategyFactory < org.apache.hadoop.mapred.JobConf > > defaultStrategies = com.google.common.collect.Lists . newArrayList () ; defaultStrategies . add ( new com.liveramp.cascading_ext.flow_step_strategy.SimpleFlowStepStrategyFactory ( com.liveramp.cascading_ext.flow_step_strategy.RenameJobStrategy . class ) ) ; defaultStrategies . add ( new com.liveramp.cascading_ext.flow_step_strategy.SimpleFlowStepStrategyFactory ( com.liveramp.cascading_ext.bloom.BloomAssemblyStrategy . class ) ) ; return defaultFlowStepStrategies ; } 
@ java.lang.Override public void addItem ( int index , com.wegas.mcq.persistence.ChoiceDescriptor item ) { this . getItems () . add ( index , item ) ; item . setQuestion ( this ) ; if ( ( this . getGameModel () ) != null ) { this . getGameModel () . addToVariableDescriptors ( item ) ; } } 
public java.util.ArrayList < models.Fichier > getFichiers () { java.util.ArrayList < models.Fichier > fichiers = new java.util.ArrayList <> () ; for ( java.lang.String s : fichiers_id . keySet () ) { fichiers . add ( utils.MongoAccess . request ( "fichier" , new org.bson.types.ObjectId ( fichiers_id . get ( s ) ) ) . as ( models.Fichier . class ) . next () ) ; } return fichiers ; } 
@ java.lang.Override public void run () { try { java.lang.Boolean trackingEnabled = com.growthbeat.utils.DeviceUtils . getTrackingEnabled () . get () ; if ( trackingEnabled != null ) setTag ( Tag.TagType.custom , "TrackingEnabled" , java.lang.String . valueOf ( trackingEnabled ) ) ; } catch ( java.lang.Exception e ) { logger . warning ( ( "Failed to get trackingEnabled: " + ( e . getMessage () ) ) ) ; } } 
protected void onPostExecute ( java.lang.Boolean result ) { if ( ! ( is_setup ) ) { android.widget.TextView head = ( ( android.widget.TextView ) ( findViewById ( R.id.question_setting_header ) ) ) ; head . setText ( ( ( ( head . getText () ) + ": " ) + ( curSetting ) ) ) ; } } 
public android.net.Uri onResult ( android.app.Activity activity , int requestCode , android.content.Intent data ) { switch ( requestCode ) { case com.smartdraw.jason.images.CameraAndGallery.CAMERA_REQUEST_CODE : android.media.MediaScannerConnection . scanFile ( activity . getBaseContext () , imageString , null , null ) ; startCrop ( activity , imageUri ) ; break; case com.smartdraw.jason.images.CameraAndGallery.GALLERY_REQUEST_CODE : return data . getData () ; case com.smartdraw.jason.images.CameraAndGallery.PHOTO_CROP_REQUEST_CODE : android.media.MediaScannerConnection . scanFile ( activity . getBaseContext () , imageString , null , null ) ; return imageCropUri ; default: break; } return null ; } 
@ java.lang.Override public void initAndValidate ( ) throws java.lang.Exception { tree = ( ( beast.evolution.tree.Tree ) ( treeInput . get () ) ) ; data = ( ( snap.Data ) ( dataInput . get () ) ) ; patternLogLikelihoods = new double [ data . getPatternCount () ] ; coalescenceRate = coalescenceRateInput . get () ; nPoints = 50 ; int nNodes = tree . getNodeCount () ; partialIntegral = new double [ [ nPoints ] [ nNodes ] ; hasDirt = beast.evolution.tree.Tree.IS_FILTHY ; } 
public void generateGenomes () { genomes = new java.util.HashMap < java.lang.String , genome.Genome > () ; for ( genome.Strand strand : strandNodes . values () ) { for ( java.lang.String genomeID : strand . getGenomes () ) { if ( ! ( genomes . containsKey ( genomeID ) ) ) { genome.Genome genome = new genome.Genome ( genomeID ) ; genome = new genome.Genome ( genomeID ) ; genomes . put ( genomeID , genome ) ; } else { genomes . get ( genomeID ) . addStrand ( strand ) ; } } } } 
public void setStatus ( managerScore.controller.ManagerScore managerScore , java.lang.String input ) { if ( ( Status.wait_input . equals ( managerScore . getCurrentStatus () ) ) && ( input . trim () . matches ( "[123]" ) ) ) { if ( "1" . equals ( input ) ) { managerScore . setCurrentStatus ( Status.wait_add_student_info ) ; } else if ( "2" . equals ( input ) ) { managerScore . setCurrentStatus ( Status.wait_get_student_score_report ) ; } else if ( "3" . equals ( input ) ) { managerScore . setCurrentStatus ( Status.exit ) ; } } } 
public void snoozeAlarm ( int snoozeDuration ) { alarmMgr = ( ( android.app.AlarmManager ) ( mContext . getSystemService ( Activity.ALARM_SERVICE ) ) ) ; android.content.Intent intent = new android.content.Intent ( mContext , com.moupress.app.alarm.AlarmReceiver . class ) ; android.os.Bundle bundle = new android.os.Bundle () ; bundle . putInt ( com.moupress.app.alarm.AlarmManagerMgr.AlarmNumber , Const.SNOOZE_ALARM ) ; intent . putExtras ( bundle ) ; android.app.PendingIntent pi = android.app.PendingIntent . getBroadcast ( mContext , Const.SNOOZE_ALARM , intent , PendingIntent.FLAG_UPDATE_CURRENT ) ; alarmMgr . set ( AlarmManager.RTC_WAKEUP , ( ( java.lang.System . currentTimeMillis () ) + snoozeDuration ) , pi ) ; } 
public java.math.BigDecimal getContractBudgetDetailPrice ( com.ersoft.web.domain.business.budget.contract.ContractBudgetDetail detail , java.lang.String category , java.lang.String id ) { java.math.BigDecimal price = java.math.BigDecimal.ZERO ; java.util.List < com.ersoft.web.domain.business.cost.batch.sec.ActualCostBatchSec > costs = findActiveAll ( com.ersoft.web.service.business.ActualCostBatchSecPredicates . contractBudgetDetailAndItemCategoryPredicate ( detail , category , id ) , new org.springframework.data.domain.Sort ( org.springframework.data.domain.Sort.Direction.ASC , "operateDate" ) ) ; for ( com.ersoft.web.domain.business.cost.batch.sec.ActualCostBatchSec actualCostBatch : costs ) { if ( ( actualCostBatch . getTotalPrice () ) != null ) price = price . add ( getDetailPrice ( detail , price , actualCostBatch ) ) ; } return price ; } 
public void setCategoryClickable ( boolean clickable ) { android.app.FragmentManager fm = getFragmentManager () ; testproject.halfmoonstudios.com.ponder.FragmentActionBar actionFragment = ( ( testproject.halfmoonstudios.com.ponder.FragmentActionBar ) ( fm . findFragmentById ( R.id.optionsContainer ) ) ) ; if ( actionFragment != null ) { android.util.Log . v ( "HERE" , ( clickable + "" ) ) ; actionFragment . setCategoryClickable ( clickable ) ; } } 
@ org.junit.Test public void createWebDriverWithSelenideProxyServer () { com.codeborne.selenide.Configuration.fileDownload = com.codeborne.selenide.Configuration.FileDownloadMode.PROXY ; container . createDriver () ; org.mockito.ArgumentCaptor < org.openqa.selenium.Proxy > captor = org.mockito.ArgumentCaptor . forClass ( org.openqa.selenium.Proxy . class ) ; org.mockito.Mockito . verify ( container.factory ) . createWebDriver ( captor . capture () ) ; org.junit.Assert . assertThat ( captor . getValue () . getHttpProxy () , org.hamcrest.Matchers . is ( org.hamcrest.Matchers . notNullValue () ) ) ; org.junit.Assert . assertThat ( captor . getValue () . getSslProxy () , org.hamcrest.Matchers . is ( org.hamcrest.Matchers . notNullValue () ) ) ; } 
protected java.lang.String readTextFromExternalStorage ( java.lang.String fileName ) throws java.io.FileNotFoundException , java.io.IOException { java.lang.String readString = "" ; if ( isExternalStorageReadable () ) { if ( ( externalStorageDirectory ) == null ) { externalStorageDirectory = new java.io.File ( android.os.Environment . getExternalStorageDirectory () , this . getPackageName () ) ; } readString = readFromFile ( new java.io.File ( ( ( ( externalStorageDirectory . getAbsolutePath () ) + "/" ) + fileName ) ) ) ; } return readString ; } 
private void expire ( org.opentripplanner.routing.alertpatch.AlertPatch alertPatch ) { org.onebusaway.gtfs.model.AgencyAndId stop = alertPatch . getStop () ; if ( stop != null ) { patchesByStop . remove ( stop , alertPatch ) ; } java.util.List < org.onebusaway.gtfs.model.AgencyAndId > routes = alertPatch . getRoute () ; for ( org.onebusaway.gtfs.model.AgencyAndId route : routes ) { patchesByRoute . remove ( route , alertPatch ) ; } alertPatch . remove ( graph ) ; } 
public void removeEntities ( com.badlogic.gdx.utils.IntArray entities ) { checkModification () ; int [] items = entities.items ; for ( int i = 0 , n = items.length ; i < n ; i ++ ) content.entities . clear ( items [ i ] ) ; for ( com.github.antag99.retinazer.EntitySetListener listener : content.listeners ) { listener . removed ( entities ) ; } } 
private void appendNode ( java.lang.String title , boolean move ) { GraphicNode new_entry = new GraphicNode ( title , 80 , 100 ) ; new_entry . addParent ( nodes . get ( cursor ) ) ; selectedNode () . addChild ( new_entry ) ; new_entry . setAutoPosition ( 20 ) ; nodes . add ( new_entry ) ; if ( move ) { moveCameraSmooth ( new_entry ) ; cursor = nodes . indexOf ( new_entry ) ; } } 
public static model.InventoryItem updateInventoryItem ( java.lang.String [] stringArray , model.InventoryItem updateItem ) { updateItem . setErrorCount ( 0 ) ; updateItem . setPartId ( java.lang.Integer . parseInt ( stringArray [ 1 ] ) ) ; updateItem . setQuantity ( stringArray [ 2 ] ) ; updateItem . setLocation ( stringArray [ 3 ] ) ; updateItem = model.InventoryItemDB . updateInventoryItem ( updateItem ) ; if ( ( updateItem . getErrorCount () ) == 0 ) controller.MainController.inventoryLocationFrame . refresh () ; return updateItem ; } 
@ test.utils.Test public void validateDestinationID () { int idLegal = 400 ; int idZero = 0 ; int idNegative = - 3 ; assertTrue ( ( "ID out of range: " + idLegal ) , main.utils.DataFormatValidator . validateDestinationID ( idLegal ) ) ; assertFalse ( ( "ID out of range: " + idZero ) , main.utils.DataFormatValidator . validateDestinationID ( idZero ) ) ; assertFalse ( ( "ID out of range: " + idNegative ) , main.utils.DataFormatValidator . validateDestinationID ( idNegative ) ) ; } 
protected static void addCascadeDeleteField ( java.lang.Class < ? > currentClass , final java.lang.String fieldName ) { com.orientechnologies.orient.object.enhancement.OObjectEntitySerializer.OObjectEntitySerializedSchema serializedSchema = com.orientechnologies.orient.object.enhancement.OObjectEntitySerializer . getCurrentSerializedSchema () ; java.util.List < java.lang.String > classCascadeDeleteFields = serializedSchema.cascadeDeleteFields . get ( currentClass ) ; if ( classCascadeDeleteFields == null ) classCascadeDeleteFields = new java.util.ArrayList < java.lang.String > () ; classCascadeDeleteFields . add ( fieldName ) ; serializedSchema.cascadeDeleteFields . put ( currentClass , classCascadeDeleteFields ) ; } 
@ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/billingRegion" ) @ javax.ws.rs.Produces ( value = "application/json" ) public org.oscarehr.ws.rest.to.GenericRESTResponse billingRegion () { boolean billRegionSet = true ; java.lang.String billRegion = oscarProperties . getProperty ( "billregion" , "" ) . trim () . toUpperCase () ; if ( billRegion == null ) { billRegionSet = false ; } return new org.oscarehr.ws.rest.to.GenericRESTResponse ( billRegionSet , billRegion ) ; } 
@ java.lang.Override public boolean contains ( java.lang.Object s ) { java.util.Iterator < T > itr = this . iterator () ; if ( s == null ) { while ( itr . hasNext () ) { if ( ( itr . next () ) == null ) { return true ; } } } else { while ( itr . hasNext () ) { if ( ( ( java.lang.String ) ( s ) ) . equalsIgnoreCase ( itr . next () ) ) { return true ; } } } return false ; } 
public void robotInit () { driveConsole = new org.usfirst.frc.team5985.robot.DriveConsole () ; driveTrain = new org.usfirst.frc.team5985.subsystems.DriveTrain ( driveConsole . getJoystick () ) ; shooter = new org.usfirst.frc.team5985.subsystems.Shooter ( driveConsole . getJoystick () ) ; climber = new org.usfirst.frc.team5985.subsystems.Climber ( driveConsole . getXbox () ) ; auto = new org.usfirst.frc.team5985.routines.Auto ( org.usfirst.frc.team5985.routines.Auto.autoPositions.DEFAULT ) ; } 
@ java.lang.Override public void tileDownloaded ( net.osmand.data.MapTileDownloader.DownloadRequest request ) { if ( ( ( request != null ) && ( ! ( request.error ) ) ) && ( ( request.fileToSave ) != null ) ) { net.osmand.plus.ResourceManager mgr = getMyApplication () . getResourceManager () ; mgr . tileDownloaded ( request ) ; } mapView . tileDownloaded ( request ) ; } 
private void reloadKeyboards () { mKeyboardSwitcher . setLanguageSwitcher ( mLanguageSwitcher ) ; if ( ( ( mKeyboardSwitcher . getInputView () ) != null ) && ( ( mKeyboardSwitcher . getKeyboardMode () ) != ( KeyboardSwitcher.MODE_NONE ) ) ) { mKeyboardSwitcher . setVoiceMode ( ( ( mEnableVoice ) && ( mEnableVoiceButton ) ) , mVoiceOnPrimary ) ; } updateKeyboardOptions () ; mKeyboardSwitcher . makeKeyboards ( true ) ; } 
public int pickItem ( org.dungeon.game.IssuedCommand issuedCommand ) { if ( canSee () ) { org.dungeon.items.Item selectedItem = selectLocationItem ( issuedCommand ) ; if ( selectedItem != null ) { if ( getInventory () . isFull () ) { org.dungeon.io.IO . writeString ( Constants.INVENTORY_FULL ) ; } else { getInventory () . addItem ( selectedItem ) ; getLocation () . removeItem ( selectedItem ) ; } } } else { org.dungeon.io.IO . writeString ( "It is too dark for you too see anything." ) ; } return org.dungeon.creatures.Hero.SECONDS_TO_PICK_UP_AN_ITEM ; } 
@ java.lang.Override public javax.ws.rs.core.Response toResponse ( entity.exceptions.CompanyNotFoundException e ) { entity.exceptions.ErrorMessage err = new entity.exceptions.ErrorMessage ( e , 404 , false ) ; err . setDescription ( "Company was not found!" ) ; return javax.ws.rs.core.Response . status ( 404 ) . entity ( entity.exceptions.CompanyNotFoundExceptionMapper.gson . toJson ( err ) ) . type ( MediaType.APPLICATION_JSON ) . build () ; } 
private void runNextBatch ( org.apache.pivot.util.concurrent.Task arg0 ) { if ( ( ( batEngine ) != null ) && ( batEngine . hasNext () ) ) { org.agmip.ui.quadui.QuadCmdLine.LOG . info ( ( ( "=== Batch " + ( batEngine . getNextGroupId () ) ) + " finished ===" ) ) ; startTranslation () ; } else if ( arg0 != null ) { arg0 . abort () ; } } 
private void skipMultiLineComment () { while ( ( ! ( ( ( input . charAt ( pos ) ) == '*' ) && ( ( input . charAt ( ( ( pos ) + 1 ) ) ) == '/' ) ) ) && ( ( pos ) < ( input . length () ) ) ) { ( pos ) ++ ; } pos += 2 ; } 
public void visit ( com.google.devtools.build.lib.syntax.ConditionalExpression node ) { visit ( node . getThenCase () ) ; visit ( node . getCondition () ) ; if ( ( node . getElseCase () ) != null ) { visit ( node . getElseCase () ) ; } } 
@ java.lang.Override public void onAdLoaded () { android.util.Log . w ( "AdMob" , "BannerAdLoaded" ) ; if ( ( executor . shouldAutoShow () ) && ( ! ( executor.bannerVisible ) ) ) { executor . showAd ( true , null ) ; } executor . fireAdEvent ( "admob.banner.events.LOAD" , data ) ; executor . fireAdEvent ( "onReceiveAd" ) ; } 
@ javax.ws.rs.POST @ javax.ws.rs.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response createBook ( java.lang.String json ) { try { final edu.hm.weidacher.softarch.shareit.data.model.Book book = getGson () . fromJson ( json , edu.hm.weidacher.softarch.shareit.data.model.Book . class ) ; java.util.UUID id = bookDao . store ( book ) ; return buildCreatedResponse ( book . getIsbn () ) ; } catch ( edu.hm.weidacher.softarch.shareit.exceptions.PersistenceException e ) { return error ( e ) ; } catch ( com.google.gson.JsonSyntaxException e ) { return error ( "Bad book model given" , Response.Status.BAD_REQUEST ) ; } } 
@ java.lang.Override public void run () { int visibility = android.view.View.INVISIBLE ; int x = 0 ; if ( ( ( showDeleteButtonPosition ) != ( - 1 ) ) && ( ( showDeleteButtonPosition ) == position ) ) { visibility = android.view.View.VISIBLE ; x = - ( holder . deleteButton () . getMeasuredWidth () ) ; } holder . deleteButton () . setVisibility ( visibility ) ; holder.itemView . setX ( x ) ; } 
public static boolean invert ( org.ejml.ops.CDenseMatrix64F A ) { org.ejml.alg.dense.decompose.lu.LUDecompositionAlt_CD64 alg = new org.ejml.alg.dense.decompose.lu.LUDecompositionAlt_CD64 () ; org.ejml.alg.dense.linsol.lu.LinearSolverLu_CD64 solver = new org.ejml.alg.dense.linsol.lu.LinearSolverLu_CD64 ( alg ) ; if ( solver . setA ( A ) ) { solver . invert ( A ) ; } else { return false ; } return false ; } 
public static void updateExpense ( ca.ualberta.cs.team1travelexpenseapp.Expense expense , ca.ualberta.cs.team1travelexpenseapp.Expense newExpense ) { java.util.ArrayList < ca.ualberta.cs.team1travelexpenseapp.Expense > expenseArray = ca.ualberta.cs.team1travelexpenseapp.ExpenseListController . getCurrentExpenseList () . getExpenses () ; expenseArray . set ( expenseArray . indexOf ( expense ) , newExpense ) ; ca.ualberta.cs.team1travelexpenseapp.ExpenseListController.currentExpenseList . setExpenseList ( expenseArray ) ; ca.ualberta.cs.team1travelexpenseapp.ExpenseListController . setCurrentExpense ( newExpense ) ; } 
public java.util.List < by.dzmitry.model.entities.Word > getUnstudiedWordsForUser ( java.lang.String login , int size ) { java.util.Map < java.lang.String , java.lang.Object > params = new java.util.HashMap <> () ; params . put ( "user" , login ) ; params . put ( "studied" , false ) ; return truncate ( wordsRepository . read ( params ) , 0 , size ) ; } 
@ java.lang.Override public void run () { this . checkState () ; org.osgp.adapter.protocol.dlms.application.threads.RecoverKeyProcess.LOGGER . info ( "Attempting key recovery for device {}" , this . deviceIdentification ) ; try { this . initDevice () ; } catch ( final java.lang.Exception e ) { final java.lang.String errorMessage = java.lang.String . format ( "Unexpected exception: {}" , e ) ; org.osgp.adapter.protocol.dlms.application.threads.RecoverKeyProcess.LOGGER . error ( errorMessage ) ; } if ( ! ( this . device . hasNewSecurityKey () ) ) { return; } if ( this . canConnect () ) { this . promoteInvalidKey () ; } } 
public void testAskForReview () { com.gdf.managedBean.ListTendererBeanTest.driver . get ( com.gdf.managedBean.ListTendererBeanTest.baseUrl ) ; org.openqa.selenium.WebElement askButton = com.gdf.managedBean.ListTendererBeanTest.driver . findElement ( askReviewBtnXpathExp ) ; org.openqa.selenium.WebElement sendButton = com.gdf.managedBean.ListTendererBeanTest.driver . findElement ( sendReviewBtnXpathExp ) ; askButton . click () ; sendButton . click () ; org.openqa.selenium.WebElement growlTitle = com.gdf.managedBean.ListTendererBeanTest.driver . findElement ( org.openqa.selenium.By . className ( "ui-growl-title" ) ) ; org.junit.Assert . assertEquals ( growlTitle . getText () , "Demande d'avis envoyée !" ) ; } 
@ java.lang.Override public void onRefresh () { android.content.Context context = this ; if ( isConnected ( context , android.preference.PreferenceManager . getDefaultSharedPreferences ( context ) ) ) { refreshContent () ; } else { android.widget.Toast toast = android.widget.Toast . makeText ( context , "No internet connection" , Toast.LENGTH_SHORT ) ; toast . show () ; refreshRecyclerView ( mRecyclerView , mSwipeRefreshLayout , context ) ; mSwipeRefreshLayout . setRefreshing ( false ) ; } } 
public static Vector3D getForce ( Particle3D p1 , Particle3D p2 , Vector3D f ) { double m1 = p1 . getMass () ; double m2 = p2 . getMass () ; double grav = 1 ; Vector3D r = Particle3D . particleSeparation ( p1 , p2 ) ; f . copy ( r . mult ( ( ( ( ( - grav ) * m1 ) * m2 ) / ( ( r . magSq () ) * ( r . mag () ) ) ) ) ) ; return f ; } 
public static void initmuseum3 () { com.reply.pedo.Holder.ParamHolder.direction3 = new java.util.ArrayList < java.lang.Integer > () ; com.reply.pedo.Holder.ParamHolder.steps3 = new java.util.ArrayList < java.lang.Integer > () ; com.reply.pedo.Holder.ParamHolder.direction3 . add ( 10 ) ; com.reply.pedo.Holder.ParamHolder.steps3 . add ( 3 ) ; com.reply.pedo.Holder.ParamHolder.direction3 . add ( 30 ) ; com.reply.pedo.Holder.ParamHolder.steps3 . add ( 4 ) ; com.reply.pedo.Holder.ParamHolder.direction3 . add ( 40 ) ; com.reply.pedo.Holder.ParamHolder.steps3 . add ( 2 ) ; com.reply.pedo.Holder.ParamHolder.direction3 . add ( 10 ) ; com.reply.pedo.Holder.ParamHolder.steps3 . add ( 10 ) ; } 
@ java.lang.Override @ org.springframework.web.bind.annotation.RequestMapping ( path = "Queries/PersonalInformation" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public infoeval.main.mysql.TableEntry getPersonal_Information ( java.lang.String name ) throws java.lang.Exception { infoeval.main.services.InfoevalServiceImp.logger . log ( java.util.logging.Level.INFO , ( ( "Get personal information was called.\n Parameters:" + "Name:" ) + name ) ) ; name = name . trim () . replaceAll ( " " , "_" ) ; return new infoeval.main.mysql.SqlRunner () . getPersonalInfo ( name ) ; } 
public void getCurrentContours () { org.usfirst.frc4579.Robot2017.subsystems.Mat still = new org.usfirst.frc4579.Robot2017.subsystems.Mat () ; java.util.ArrayList < org.usfirst.frc4579.Robot2017.subsystems.MatOfPoint > countourList = new java.util.ArrayList <> () ; cvSink . grabFrame ( still ) ; contourList = myGripPipeline . filterContoursOutput () ; org.opencv.imgproc.Imgproc . drawContours ( still , contourList , 1 , new org.usfirst.frc4579.Robot2017.subsystems.Scalar ( 0 , 0 , 0 ) ) ; } 
private static int [] getStartingDate ( java.util.Calendar realStart , boolean method ) { java.util.Calendar d = realStart ; int yyyy = d . get ( java.util.Calendar.YEAR ) ; int mm = d . get ( java.util.Calendar.MONTH ) ; int dd = java.lang.Math . min ( 30 , d . get ( java.util.Calendar.DAY_OF_MONTH ) ) ; if ( ( method == false ) && ( org.apache.poi.ss.formula.functions.Days360 . isLastDayOfMonth ( d ) ) ) dd = 30 ; return new int [] { yyyy , mm , dd } ; } 
private boolean isAnnotationFinished () { de.tudarmstadt.ukp.clarin.webanno.api.annotation.model.AnnotatorState state = getModelObject () ; if ( state . getMode () . equals ( Mode.CURATION ) ) { return state . getDocument () . getState () . equals ( SourceDocumentState.CURATION_FINISHED ) ; } else { return repository . getAnnotationDocument ( state . getDocument () , state . getUser () ) . getState () . equals ( AnnotationDocumentState.FINISHED ) ; } } 
@ java.lang.Override public java.util.prefs.Preferences userRoot () { if ( ( userRoot ) == null ) { java.lang.String path = java.lang.System . getProperty ( com.tmarsteel.xmlprefs.XMLFilePreferencesFactory.USERROOT_FILE_PROPERTY , null ) ; if ( path == null ) { if ( ( java.io.File.separatorChar ) == '\\' ) { path = ( java.lang.System . getenv ( "APPDATA" ) ) + "/Java/prefs.xml" ; } else { path = ( java.lang.System . getProperty ( "user.home" ) ) + "/.java/prefs.xml" ; } } systemRoot = getFilePreferences ( path ) ; } return systemRoot ; } 
public static org.obeonetwork.m2doc.util.PictureType toType ( org.eclipse.emf.common.util.URI pictureURI ) { org.obeonetwork.m2doc.util.PictureType res = null ; if ( ( pictureURI . fileExtension () ) != null ) { java.lang.String extension = pictureURI . fileExtension () ; try { res = org.obeonetwork.m2doc.util.PictureType . valueOf ( extension . toUpperCase () ) ; } catch ( java.lang.IllegalArgumentException ignored ) {} } return res != null ? res : org.obeonetwork.m2doc.util.PictureType.JPG ; } 
@ java.lang.Override public void onAttach ( android.content.Context context ) { super . onAttach ( context ) ; if ( context instanceof com.crabfibber.fragments.RushPlaceHolderFragment.OnFragmentInteractionListener ) { mListener = ( ( com.crabfibber.fragments.RushPlaceHolderFragment.OnFragmentInteractionListener ) ( context ) ) ; } else { throw new java.lang.RuntimeException ( ( ( context . toString () ) + " must implement OnFragmentInteractionListener" ) ) ; } sensorManager = ( ( android.hardware.SensorManager ) ( getActivity () . getSystemService ( Context.SENSOR_SERVICE ) ) ) ; mAccelorometer = sensorManager . getDefaultSensor ( Sensor.TYPE_ACCELEROMETER ) ; buffer = new java.lang.StringBuffer () ; } 
@ java.lang.Override public void onDismiss ( android.content.DialogInterface dialog ) { super . onDismiss ( dialog ) ; android.view.View view = ( ( android.app.Activity ) ( getContext () ) ) . getCurrentFocus () ; if ( view != null ) { android.view.inputmethod.InputMethodManager imm = ( ( android.view.inputmethod.InputMethodManager ) ( getContext () . getSystemService ( Context.INPUT_METHOD_SERVICE ) ) ) ; imm . hideSoftInputFromWindow ( view . getWindowToken () , InputMethodManager.HIDE_NOT_ALWAYS ) ; } } 
public boolean addItem ( com.lukasz.SearchedItem item ) { boolean result = searchedItems . add ( item ) ; java.util.ListIterator < java.lang.String > i = item . getTags () . listIterator () ; while ( i . hasNext () ) { com.lukasz.TagMap . getTagMap () . put ( i . next () . toUpperCase () , item ) ; } java.lang.System.out . println ( com.lukasz.TagMap . getTagMap () ) ; return result ; } 
public static void main ( java.lang.String [] args ) { java.util.Set < java.lang.Integer > c = new java.util.ArrayList < java.lang.Integer > () ; for ( int i = 0 ; i < 10 ; i ++ ) c . add ( i ) ; for ( java.lang.Integer i : c ) java.lang.System.out . print ( ( i + ", " ) ) ; } 
@ java.lang.Override public void onItemSelected ( android.net.Uri contentUri ) { if ( mTwoPane ) { android.os.Bundle args = new android.os.Bundle () ; args . putParcelable ( DetailFragment.DETAIL_URI , contentUri ) ; com.example.android.sunshine2.DetailFragment fragment = new com.example.android.sunshine2.DetailFragment () ; fragment . setArguments ( args ) ; getSupportFragmentManager () . beginTransaction () . replace ( R.id.weather_detail_container , fragment , com.example.android.sunshine2.MainActivity.DETAILFRAGMENT_TAG ) ; } else { android.content.Intent intent = new android.content.Intent ( this , com.example.android.sunshine2.DetailActivity . class ) . setData ( contentUri ) ; startActivity ( intent ) ; } } 
public static com.stratio.crossdata.common.logicalplan.Filter createFilter ( java.lang.String catalogName , java.lang.String tableName , java.lang.String columnName , com.stratio.crossdata.common.statements.structures.Operator operator , java.lang.Double data , boolean indexed ) { com.stratio.crossdata.common.statements.structures.ColumnSelector leftSelector = new com.stratio.crossdata.common.statements.structures.ColumnSelector ( new com.stratio.crossdata.common.data.ColumnName ( catalogName , tableName , columnName ) ) ; com.stratio.crossdata.common.statements.structures.FloatingPointSelector rightSelector = new com.stratio.crossdata.common.statements.structures.FloatingPointSelector ( data ) ; com.stratio.crossdata.common.statements.structures.Relation relation = new com.stratio.crossdata.common.statements.structures.Relation ( leftSelector , operator , rightSelector ) ; com.stratio.crossdata.common.logicalplan.Filter filter = new com.stratio.crossdata.common.logicalplan.Filter ( com.stratio.connector.deep.LogicalWorkflowBuilder . retrieveFilterOperation ( operator , indexed ) , relation ) ; return filter ; } 
protected void parseFilter ( com.ubikz.scraper.core.app.dal.filter.AbstractDalFilter filter , com.ubikz.scraper.core.provider.db.qb.AbstractQuery select ) { com.ubikz.scraper.core.app.dal.filter.FeedTypeDalFilter feedTypeDalFilter = ( ( com.ubikz.scraper.core.app.dal.filter.FeedTypeDalFilter ) ( filter ) ) ; super . parseFilter ( feedTypeDalFilter , select ) ; if ( ( feedTypeDalFilter . getIdList () ) != null ) { select . where ( "id" , "in" , feedTypeDalFilter . getIdList () ) ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = { "/CreditView" } ) public java.lang.String home ( @ org.springframework.web.bind.annotation.RequestParam ( value = "data" ) java.lang.String data , org.springframework.ui.ModelMap modelMap , java.util.Locale loc ) { log . info ( "Home Page!!" ) ; if ( ! ( handleRequestData ( data , modelMap ) ) ) { addErrorMessage ( modelMap , "error_general_error_message" , null ) ; return PAGE_ERROR ; } else { return ( "redirect:/index?lang=" + ( this . language ) ) + "&redirect=1" ; } } 
public void testGradientDescentIris ( ) throws java.io.IOException { java.lang.System.out . println ( "Iris dataset" ) ; krzych.CsvData data = krzych.CsvData . readFile ( "src/test/resources/iris.csv" ) ; data . shuffle () ; data . printX () ; krzych.GradientDescent gd = new krzych.GradientDescent () ; krzych.Model model = gd . solve ( data , 0.1 , 1.0E-4 ) ; java.lang.Double errorCS = gd . validateControlSet ( model ) ; java.lang.Double errorTS = gd . validateTrainigSet ( model ) ; java.lang.System.out . println ( ( "Error CS = " + errorCS ) ) ; java.lang.System.out . println ( ( "Error TS = " + errorTS ) ) ; } 
public static void writeDOMXML ( org.jdom2.Document document , java.io.FileWriter w ) throws java.io.IOException { org.jdom2.output.XMLOutputter o = new org.jdom2.output.XMLOutputter () ; org.jdom2.output.Format format = org.jdom2.output.Format . getPrettyFormat () ; format . setEncoding ( "UTF-8" ) ; format . setIndent ( "\t" ) ; o . setFormat ( format ) ; o . output ( document , w ) ; } 
@ org.junit.Before public void setup () { android.app.Application app = org.robolectric.RuntimeEnvironment.application ; com.epfl.dedis.cisc.AutomationTest.sucConnection = app . getResources () . getString ( R.string.suc_connection ) ; com.epfl.dedis.cisc.AutomationTest.errNotFound = app . getResources () . getString ( R.string.err_not_found ) ; gson = new com.google.gson.GsonBuilder () . serializeNulls () . setPrettyPrinting () . create () ; } 
private static org.jfaster.mango.transaction.Transaction newTransaction ( javax.sql.DataSource dataSource , org.jfaster.mango.transaction.TransactionIsolationLevel level ) { if ( dataSource == null ) { new java.lang.IllegalArgumentException ( "DataSource can't be null" ) ; } if ( level == null ) { new java.lang.IllegalArgumentException ( "TransactionIsolationLevel can't be null" ) ; } org.jfaster.mango.transaction.ConnectionHolder connHolder = org.jfaster.mango.transaction.TransactionSynchronizationManager . getConnectionHolder ( dataSource ) ; return connHolder != null ? org.jfaster.mango.transaction.TransactionFactory . usingExistingTransaction ( dataSource ) : org.jfaster.mango.transaction.TransactionFactory . createNewTransaction ( dataSource , level ) ; } 
public double calcDispersione ( int t ) { return ( ( ( ( ( this . coefficiente ) * ( this . deltaT ) ) * ( this . superficie ) ) * t ) / ( this . spessore ) ) - ( ( ( ( ( this . coeffInfissi ) * ( this . deltaT ) ) * ( this . superficieInfissi ) ) * t ) / ( this . spessoreInfissi ) ) ; } 
public static java.util.Collection < java.lang.Long > getOrderIds ( java.util.Map < java.lang.Long , java.util.List < org.apache.ignite.internal.processors.cache.CacheEntryImpl < java.lang.Long , org.apache.ignite.tests.pojos.ProductOrder > > > orders ) { java.util.List < java.lang.Long > ids = new java.util.LinkedList <> () ; for ( java.lang.Long key : orders . keySet () ) { for ( org.apache.ignite.internal.processors.cache.CacheEntryImpl < java.lang.Long , org.apache.ignite.tests.pojos.ProductOrder > entry : orders . get ( key ) ) ids . add ( entry . getKey () ) ; } return ids ; } 
private boolean shouldSkipPermissionControl ( javax.servlet.http.HttpServletRequest request ) { return ( ( "GET" . equals ( request . getMethod () ) ) && ( ! ( "true" . equals ( java.lang.System . getenv ( "enable.permission.control" ) ) ) ) ) || ( request . getPathInfo () . contains ( "User/v1/login" ) ) ; } 
public java.util.List < Message > readJSON ( java.lang.String file ) throws java.io.IOException { java.util.List < Message > messages = new java.util.ArrayList < Message > () ; com.google.gson.Gson gson = new com.google.gson.Gson () ; java.io.BufferedReader br = new java.io.BufferedReader ( new java.io.FileReader ( "input.json" ) ) ; messages = gson . fromJson ( br , new com.google.gson.reflect.TypeToken < java.util.List < Message > > () {} . getType () ) ; br . close () ; return messages ; } 
public boolean isFull ( int row , int col ) { if ( validSite ( row , col ) ) { throw new java.lang.IndexOutOfBoundsException () ; } return ( this . isOpen ( row , col ) ) && ( this . openPathToTop ( row , col ) ) ; } 
@ fi.muikku.security.Permit ( value = ForumResourcePermissionCollection.FORUM_CREATEENVIRONMENTFORUM ) public fi.muikku.plugins.forum.model.EnvironmentForumArea createEnvironmentForumArea ( java.lang.String name , java.lang.Long groupId ) { fi.muikku.model.users.UserEntity owner = sessionController . getLoggedUserEntity () ; fi.muikku.model.security.ResourceRights rights = resourceRightsController . create () ; fi.muikku.plugins.forum.model.ForumAreaGroup group = findForumAreaGroup ( groupId ) ; return environmentForumAreaDAO . create ( name , group , false , owner , rights ) ; } 
@ java.lang.Override public void onLocationChanged ( android.location.Location location ) { m_CurrentLocation = location ; m_CurrentLatLng = new com.google.android.gms.maps.model.LatLng ( m_CurrentLocation . getLatitude () , m_CurrentLocation . getLongitude () ) ; m_LastUpdateTime = java.text.DateFormat . getTimeInstance () . format ( new java.util.Date () ) ; if ( ! ( m_CameraCentered ) ) { m_Maps . centerCamera ( m_CurrentLatLng ) ; m_CameraCentered = true ; } } 
private static int initIntValue ( java.util.Properties properties , java.lang.String property , int defaultValue ) { if ( ( properties == null ) || ( ( properties . get ( property ) ) == null ) ) { return defaultValue ; } java.lang.String value = properties . getProperty ( property ) ; try { return java.lang.Integer . valueOf ( value ) ; } catch ( java.lang.NumberFormatException e ) { throw BootstrapLogger.LOG . invalidThreadPoolSize ( value ) ; } } 
public boolean turnMenu () { showMessage ( "What would you like to do?" ) ; java.lang.String [] options = new java.lang.String [] { "Look" , "Move" , "Shoot" , "Game Options" } ; int choice = displayMenu ( options ) ; switch ( choice ) { case 0 : askLook () ; return false ; case 1 : askMove () ; return true ; case 2 : askShoot () ; return false ; case 3 : openOptions () ; return false ; } return false ; } 
private void saveTestRunState () { testRun.currentBay = testRun.currentStepUnitsTested ; testRunSavedState = gson . toJson ( testRun ) ; if ( ( testRun.currentStepUnitsTested ) < ( testRun.numberOfActiveBays ) ) { if ( ( testRun.currentTestStep ) != 5 ) { timerHandler . post ( timerRunnable ) ; } else { timerHandler . removeCallbacks ( timerRunnable ) ; } } else timerHandler . removeCallbacks ( timerRunnable ) ; editor . putBoolean ( MainActivity.TAG_RESUME_AVAILABLE , true ) ; editor . putString ( com.scentair.scentwave.TestRunActivity.TAG_SAVED_TEST_RUN , testRunSavedState ) ; editor . commit () ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( SessionsViewActivity.act . getDeleteMode () ) { SessionsViewActivity.act . insertToBeRemoved ( getAdapterPosition () ) ; SessionsViewActivity.act . setUndoButton ( true ) ; } else { android.content.Intent intent = new android.content.Intent ( com.inyourface.singbetter.RecordedSessions.SessionsViewActivity.act , com.inyourface.singbetter.RecordedSessions.ItemView.ItemActivity . class ) ; int pos = getAdapterPosition () ; intent . putExtra ( "clickPosition" , pos ) ; SessionsViewActivity.act . startActivity ( intent ) ; } } 
@ java.lang.Override public void cleanup () { propertiesFile . delete () ; if ( ( listenerComms ) != null ) { listenerComms . close () ; listenerComms = null ; } prepared = false ; aQute.launcher.plugin.ProjectLauncherImpl.logger . debug ( "Deleted {}" , propertiesFile . getAbsolutePath () ) ; } 
public static eu.davidea.examples.models.SimpleItem newSimpleItem ( int i , boolean withHeader ) { eu.davidea.examples.models.SimpleItem item ; if ( withHeader ) { eu.davidea.examples.models.HeaderItem header = eu.davidea.examples.flexibleadapter.DatabaseService . newHeader ( i ) ; header . setSubtitle ( ( "Attached to Simple Item " + i ) ) ; item = new eu.davidea.examples.models.SimpleItem ( ( "I" + i ) , header ) ; } else { item = new eu.davidea.examples.models.SimpleItem ( ( "I" + i ) ) ; } item . setTitle ( ( "Simple Item " + i ) ) ; item . setSubtitle ( ( "Subtitle " + i ) ) ; return item ; } 
public void init () { if ( Shard.Shard_Core.initialized ) { return; } if ( ! ( headless ) ) { initGUI () ; redirectSystemStreams () ; } java.lang.System.out . println ( ( "VERSION: " + ( Shard.Shard_Core.SHARD_VERSION ) ) ) ; initVariables () ; initLog () ; java.lang.System.out . println ( ( ( "###############" + ( Shard.Shard_Core.systemName ) ) + "###############" ) ) ; initCfg () ; for ( int i = 0 ; i < 100 ; i ++ ) { java.lang.System.out . println ( ( "asdflk;jasdf;lkjqwopeiur " + i ) ) ; } } 
private net.minecraft.item.ItemStack transformBottle ( net.minecraft.item.ItemStack input , net.minecraft.entity.player.EntityPlayer player , net.minecraft.item.ItemStack stack ) { ( input.stackSize ) -- ; player . addStat ( net.minecraft.stats.StatList . getObjectUseStats ( input . getItem () ) ) ; if ( ( input.stackSize ) <= 0 ) { return stack ; } else { if ( ! ( player.inventory . addItemStackToInventory ( stack ) ) ) { player . dropItem ( stack , false ) ; } return input ; } } 
@ java.lang.Override public void execute () { double errorInDegrees = drive.imu . getYaw () . difference ( targetHeading ) ; double normalizedError = errorInDegrees / 180 ; double rotationalPower = headingDrivePid . calculate ( 0 , normalizedError ) ; rotationalPower *= - 1 ; drive . tankDrivePowerMode ( rotationalPower , ( - rotationalPower ) ) ; } 
private void initMainWindow () { javafx.fxml.FXMLLoader loader = new javafx.fxml.FXMLLoader () ; loader . setLocation ( gui.Main . class . getResource ( "MainWindow.fxml" ) ) ; try { mainWindow = ( ( javafx.scene.layout.BorderPane ) ( loader . load () ) ) ; javafx.scene.Scene scene = new javafx.scene.Scene ( mainWindow ) ; stage . setScene ( scene ) ; stage . setResizable ( false ) ; stage . show () ; } catch ( java.io.IOException exc ) {} } 
@ java.lang.Override public void mousePressed ( java.awt.event.MouseEvent e ) { int productRow = productTable . getSelectedRow () ; int productCol = productTable . getSelectedColumn () ; product . add ( ( ( java.lang.String ) ( tempObj ) ) ) ; java.lang.String tempSupplier = ( ( java.lang.String ) ( suppliers . getSelectedItem () ) ) ; java.lang.String tempQuant = ( ( java.lang.String ) ( quant . getSelectedItem () ) ) ; } 
public static void getBrowserInfo ( org.openqa.selenium.WebDriver instance , java.lang.String description ) { if ( ( core.Platform . getBrowser ( instance ) ) != null ) { java.lang.String browserInfo = ( ( ( ( core.Platform . getBrowserName ( instance ) ) + " " ) + ( core.Platform . getBrowserVersion ( instance ) ) ) + " (" ) + ( core.Platform . getOS () ) ; java.lang.System.out . println ( ( ( ( description + ":\t" ) + ( browserInfo . replace ( "  " , " " ) ) ) + ")" ) ) ; } } 
@ java.lang.Override public int countOption ( int tag ) { rate = 1 ; if ( ( ( links ) != null ) && ( tagFix [ tag ] ) ) { for ( int j = 0 ; j < ( links.size ) ; j ++ ) { rate *= links . get ( j ) . countOption ( tag ) ; } } return rate ; } 
@ java.lang.Override public boolean addEdge ( Graph.Edge e ) { Graph.Vertex source = e . getSource () ; Graph.Vertex dest = e . getDestination () ; if ( ! ( adjList . containsKey ( source ) ) ) adjList . put ( source , new java.util.ArrayList < Graph.Edge > () ) ; adjList . get ( source ) . add ( e ) ; return true ; } 
@ java.lang.Override public void run () { do { network.packet.Packet packet = null ; if ( ( sInput ) != null ) try { packet = getPacket () ; } catch ( java.io.IOException e ) { break; } if ( packet == null ) continue; if ( ( adapter ) != null ) adapter . parsePacket ( NetworkTypes.CLIENT , packet ) ; } while ( true ) ; java.lang.System.err . println ( "client receiver closing connection to server" ) ; } 
public static asu.reach.DialogBuilder newInstance ( java.lang.String title , asu.reach.Safe a ) { asu.reach.DialogBuilder frag = new asu.reach.DialogBuilder () ; android.os.Bundle args = new android.os.Bundle () ; args . putString ( "title" , title ) ; frag . setArguments ( args ) ; asu.reach.DialogBuilder.safeActivity = a ; asu.reach.DialogBuilder.sticActivity = null ; asu.reach.DialogBuilder.whActivity = null ; asu.reach.DialogBuilder.landingActivity = null ; asu.reach.DialogBuilder.stopActivity = null ; asu.reach.DialogBuilder.ddActivity = null ; return frag ; } 
@ java.lang.Override public void handle ( javafx.event.ActionEvent event ) { java.lang.String eingabe = consoleField . getText () ; aufgabenblatt4.Punkt punkt ; try { punkt = new aufgabenblatt4.Punkt ( polySkript . getX ( eingabe ) , polySkript . getY ( eingabe ) ) ; aufgabenblatt4.Polygon aktuellesPolygon = model . getAktuellesPolygon () ; if ( aktuellesPolygon != null ) { aktuellesPolygon . punktHinzufuegen ( punkt ) ; } } catch ( java.lang.Exception e ) { e . printStackTrace () ; } consoleField . clear () ; } 
public void testInitialPeriodValue0 () { edu.westga.ryanfleminginvestmentcalculator.MainActivity activity = getActivity () ; android.widget.EditText periodTextView = ( ( android.widget.EditText ) ( activity . findViewById ( R.id.editTextPeriod ) ) ) ; java.lang.String period = periodTextView . getText () . toString () ; assertEquals ( period , "0" ) ; } 
public void receiveData ( byte [] data ) { if ( ( ( mouseActive ) == 1 ) && ( propEnableMouse ) ) { if ( ( propAbsolutePosition ) == true ) { mouseXPos = eu.asterics.component.actuator.mouse.ConversionUtils . doubleFromBytes ( data ) ; } else { mouseXPos += eu.asterics.component.actuator.mouse.ConversionUtils . doubleFromBytes ( data ) ; } if ( ( mouseXPos ) != ( mouseLastXPos ) ) updateMousePosition () ; } } 
public < T > me.mneri.eloop.Emitter once ( final java.lang.String event , final me.mneri.eloop.Callback < T > callback ) { if ( ! ( isEventLoopThread () ) ) throw new me.mneri.eloop.NotOnEventLoopThreadException ( "once(String, Callback)" ) ; return on ( event , new me.mneri.eloop.Callback < T > () { @ java.lang.Override public void run ( T data ) { runCallback ( callback , event , data ) ; off ( event , this ) ; } } ) ; } 
public int getMemberId () { new org.openqa.selenium.support.ui.WebDriverWait ( driver , 30 ) . until ( org.openqa.selenium.support.ui.ExpectedConditions . visibilityOfElementLocated ( org.openqa.selenium.By . cssSelector ( "em[class='emblue']" ) ) ) ; java.lang.String id = driver . findElement ( org.openqa.selenium.By . cssSelector ( "em[class='emblue']" ) ) . getText () ; int memberId = java.lang.Integer . parseInt ( id ) ; java.lang.System.out . println ( memberId ) ; return memberId ; } 
@ java.lang.Override protected void configure ( org.springframework.security.config.annotation.web.builders.HttpSecurity http ) throws java.lang.Exception { http . authorizeRequests () . antMatchers ( "/register" ) . permitAll () . antMatchers ( "/resources/**" ) . permitAll () . anyRequest () . authenticated () . and () . formLogin () . loginPage ( "/" ) . permitAll () . and () . logout () . permitAll () . and () . exceptionHandling () . accessDeniedPage ( "/" ) . and () . csrf () . disable () ; } 
@ javax.ws.rs.DELETE @ javax.ws.rs.Path ( value = "/desasociarUsuarioACaso" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.TEXT_HTML ) public java.lang.String desasociarUsuarioACaso ( @ javax.ws.rs.QueryParam ( value = "usrKey" ) java.lang.String usuarioActual , @ javax.ws.rs.QueryParam ( value = "usuario" ) java.lang.String usuario , @ javax.ws.rs.QueryParam ( value = "iUE" ) java.lang.String iUE ) { try { logica.ControladoraCaso . desasociarUsuarioACaso ( usuarioActual , usuario , iUE ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; return e . getMessage () ; } return "completado" ; } 
private boolean updateDistrCodeListWithNewCode ( md.mgmt.dao.entity.DirMdIndex parentDir , java.lang.String parentPath , long newCode ) { java.lang.String key = "" ; if ( parentPath . equals ( "/" ) ) { key = md.mgmt.utils.MdUtils . genMdIndexKey ( "-1" , "/" ) ; } else { key = getParentDirKey ( parentPath ) ; } java.util.List < java.lang.Long > distrCodeList = parentDir . getDistrCodeList () ; distrCodeList . add ( newCode ) ; parentDir . setDistrCodeList ( distrCodeList ) ; createRdbDao . removeFileMdIndex ( key ) ; return createRdbDao . putNewDirIndex ( key , parentDir ) ; } 
public java.io.File openFile ( java.awt.Component father ) { javax.swing.JFileChooser chooser = new javax.swing.JFileChooser () ; if ( ( br.edu.ifsp.util.Config . getInstance () ) != null ) { chooser . setCurrentDirectory ( new java.io.File ( br.edu.ifsp.util.Config . getInstance () . getDirectory () ) ) ; } if ( ( chooser . showSaveDialog ( father ) ) == ( javax.swing.JFileChooser.APPROVE_OPTION ) ) { return chooser . getSelectedFile () ; } return null ; } 
@ org.junit.Test public void testCountNumbersWithUniqueDigitsConstantTime () { com.javapractice.leetcode.CountNumbersWithUniqueDigits test = new com.javapractice.leetcode.CountNumbersWithUniqueDigits () ; org.junit.Assert . assertArrayEquals ( test . countNumbersWithUniqueDigitsConstantTime ( 0 ) , 1 ) ; org.junit.Assert . assertArrayEquals ( test . countNumbersWithUniqueDigitsConstantTime ( 2 ) , 91 ) ; org.junit.Assert . assertArrayEquals ( test . countNumbersWithUniqueDigitsConstantTime ( 12 ) , 8877691 ) ; } 
private void onClickStandard () { android.content.Intent callIntent = sinolight.cn.qgapp.views.activity.DBResourceActivity . getCallIntent ( sinolight.cn.qgapp.App . getContext () ) ; callIntent . putExtra ( AppContants.DataBase.KEY_TYPE , AppContants.DataBase.Type.DB_STANDARD ) ; callIntent . putExtra ( AppContants.DataBase.KEY_RES_TYPE , AppContants.DataBase.Res.RES_STANDARD ) ; callIntent . setFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ; sinolight.cn.qgapp.App . getContext () . startActivity ( callIntent ) ; } 
protected void prepareToReceiveEvents ( org.sensorhub.api.data.IStreamingDataInterface output ) { output . registerListener ( this ) ; java.lang.String outputName = output . getName () ; org.vast.swe.ScalarIndexer timeStampIndexer = timeStampIndexers . get ( outputName ) ; if ( timeStampIndexer == null ) { timeStampIndexer = org.vast.swe.SWEHelper . getTimeStampIndexer ( output . getRecordDescription () ) ; timeStampIndexers . put ( outputName , timeStampIndexer ) ; } } 
@ java.lang.Override public void onBottom () { com.github.jdsjlzx.view.LoadingFooter.State state = com.github.jdsjlzx.util.RecyclerViewStateUtils . getFooterViewState ( mRecyclerView ) ; com.lzx.demo.util.TLog . error ( ( "onBottom " + state ) ) ; if ( state == ( LoadingFooter.State.Loading ) ) { android.util.Log . d ( com.lzx.demo.ui.EndlessLinearLayoutActivity.TAG , "the state is Loading, just wait.." ) ; return; } if ( ( com.lzx.demo.ui.EndlessLinearLayoutActivity.mCurrentCounter ) < ( com.lzx.demo.ui.EndlessLinearLayoutActivity.TOTAL_COUNTER ) ) { com.github.jdsjlzx.util.RecyclerViewStateUtils . setFooterViewState ( this , mRecyclerView , com.lzx.demo.ui.EndlessLinearLayoutActivity.REQUEST_COUNT , LoadingFooter.State.Loading , null ) ; requestData () ; } else { com.github.jdsjlzx.util.RecyclerViewStateUtils . setFooterViewState ( this , mRecyclerView , com.lzx.demo.ui.EndlessLinearLayoutActivity.REQUEST_COUNT , LoadingFooter.State.TheEnd , null ) ; } } 
public void transportDataReceived ( okio.Buffer frame , boolean endOfStream ) { synchronized ( lock ) { long length = frame . size () ; window -= length ; if ( ( window ) < 0 ) { frameWriter . rstStream ( id () , ErrorCode.FLOW_CONTROL_ERROR ) ; io.grpc.Status status = Status.INTERNAL . withDescription ( "Received data size exceeded our receiving window size" ) ; if ( transport . finishStream ( id () , status ) ) { transport . stopIfNecessary () ; } return; } super . transportDataReceived ( new io.grpc.transport.okhttp.OkHttpReadableBuffer ( frame ) , endOfStream ) ; } } 
public int score () { java.util.ArrayList < java.lang.Integer > scores = possibleScores () ; int maxUnder = java.lang.Integer.MIN_VALUE ; int minOver = java.lang.Integer.MAX_VALUE ; for ( int score : scores ) { if ( ( score > 21 ) && ( score < minOver ) ) { minOver = score ; } else if ( ( score < 21 ) && ( score > maxUnder ) ) { maxUnder = score ; } } return maxUnder == ( java.lang.Integer.MIN_VALUE ) ? minOver : maxUnder ; } 
public java.lang.String [] [] getEmployeeBookingAvailability ( java.lang.String employeeId , java.util.Date date ) { model.timetable.Timetable shiftsTimetable = utilities . getShift ( employeeId ) ; model.period.Booking [] bookings = utilities . getBookingsAfter ( date ) ; if ( ( bookings != null ) && ( ( bookings.length ) > 0 ) ) for ( model.period.Booking b : bookings ) shiftsTimetable . removePeriod ( b ) ; if ( shiftsTimetable != null ) return shiftsTimetable . toStringArray () ; return null ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { switch ( v . getId () ) { case R.id.importBackup : loadFileList ( null ) ; onCreateDialog ( acr.browser.lightning.BookmarkActivity.DIALOG_LOAD_FILE ) ; break; case R.id.importFromBrowser : mBookmarkManager . importBookmarksFromBrowser () ; break; case R.id.exportBackup : mBookmarkManager . exportBookmarks () ; break; } } 
@ java.lang.Override public void showMoreContent ( java.lang.String date , com.codeest.geeknews.model.bean.DailyBeforeListBean info ) { if ( swipeRefresh . isRefreshing () ) { swipeRefresh . setRefreshing ( false ) ; } else { viewLoading . stop () ; } mPresenter . stopInterval () ; mList = info . getStories () ; currentDate = java.lang.String . valueOf ( ( ( java.lang.Integer . valueOf ( info . getDate () ) ) + 1 ) ) ; viewLoading . stop () ; mAdapter . addDailyBeforeDate ( info ) ; } 
@ java.lang.Override public void onStatusChanged ( java.lang.String provider , int status , android.os.Bundle extras ) { if ( status == ( android.location.LocationProvider.AVAILABLE ) ) { activity . setGPSStatus ( "Connected" ) ; } else if ( status == ( android.location.LocationProvider.OUT_OF_SERVICE ) ) { activity . setGPSStatus ( "No Connection" ) ; } else if ( status == ( android.location.LocationProvider.TEMPORARILY_UNAVAILABLE ) ) { activity . setGPSStatus ( "No Connection" ) ; } } 
private void setUpPoints ( java.awt.Graphics2D g2d ) { xPoints [ 0 ] = horizontal ; yPoints [ 0 ] = vertical ; xPoints [ 1 ] = ( horizontal ) + 20 ; yPoints [ 1 ] = vertical ; xPoints [ 2 ] = ( horizontal ) + 10 ; yPoints [ 2 ] = ( vertical ) + 20 ; } 
int animationStringToInt ( java.lang.String animation ) { switch ( animation ) { case "No animation" : return org.myrobotlab.service.NeoPixel.NEOPIXEL_ANIMATION_NO_ANIMATION ; case "Stop" : return org.myrobotlab.service.NeoPixel.NEOPIXEL_ANIMATION_STOP ; case "Color Wipe" : return org.myrobotlab.service.NeoPixel.NEOPIXEL_ANIMATION_COLOR_WIPE ; case "Larson Scanner" : return org.myrobotlab.service.NeoPixel.NEOPIXEL_ANIMATION_LARSON_SCANNER ; case "Theater Chase" : return org.myrobotlab.service.NeoPixel.NEOPIXEL_ANIMATION_THEATER_CHASE ; case "Theater Chase Rainbow" : return org.myrobotlab.service.NeoPixel.NEOPIXEL_ANIMATION_THEATER_CHASE_RAINBOW ; case "Rainbow" : return org.myrobotlab.service.NeoPixel.NEOPIXEL_ANIMATION_RAINBOW ; case "Rainbow Cycle" : return org.myrobotlab.service.NeoPixel.NEOPIXEL_ANIMATION_RAINBOW_CYCLE ; case "Flash Random" : return org.myrobotlab.service.NeoPixel.NEOPIXEL_ANIMATION_FLASH_RANDOM ; case "Ironman" : return org.myrobotlab.service.NeoPixel.NEOPIXEL_ANIMATION_IRONMAN ; default: org.myrobotlab.service.NeoPixel.log . error ( "Unknow Animation type {}" , animation ) ; return org.myrobotlab.service.NeoPixel.NEOPIXEL_ANIMATION_STOP ; } } 
public void nextTutorial ( final android.view.View btn ) { final java.lang.String [] tutorialMessages = getResources () . getStringArray ( R.array.tutorialMessages ) ; if ( ( currentTutorialIndex ) == ( ( tutorialMessages.length ) - 1 ) ) { finishTutorial () ; } else { tutorialText . setText ( tutorialMessages [ ( ( currentTutorialIndex ) ++ ) ] ) ; if ( ( currentTutorialIndex ) == ( ( tutorialMessages.length ) - 1 ) ) { nextButton . setText ( getText ( R.string.finish ) ) ; } } } 
private byte [] parseSave ( com.woernerj.dragonsdogma.bo.DDSaveHeader header , java.io.InputStream saveStream ) { byte [] compressedData = new byte [ header . getCompressedSize () ] ; java.lang.Integer length = ( header . getCompressedSize () ) - ( com.woernerj.dragonsdogma.bo.DDSaveHeader.HEADER_BYTES ) ; java.lang.Integer readBytes = - 1 ; try { readBytes = saveStream . read ( compressedData , 0 , length ) ; } catch ( java.io.IOException e ) { return null ; } if ( readBytes < 0 ) return null ; return com.woernerj.dragonsdogma.util.CompressionUtils . decompress ( compressedData ) ; } 
public void handle ( javafx.event.ActionEvent ae ) { primaryStage . close () ; javafx.stage.Stage stage = new javafx.stage.Stage () ; gui.MainWindow mw = new gui.MainWindow () ; mw . setTestAndApp ( schooltest , app ) ; mw . start ( stage ) ; mw . showQuestionType () ; mw . countdown () ; app . getCh () . send ( "starttest" , schooltest . getId () ) ; app . dropClient () ; app . setTestStarted ( true ) ; } 
@ org.junit.Test public void test13_getRowsOtherAccount () { try { deleteRows () ; test01_addRowPass () ; test01_addRowPass () ; com.jayway.restassured.module.mockmvc.RestAssuredMockMvc . given () . header ( getHeaderOtherAccount () ) . contentType ( "application/json" ) . when () . get ( "/api/restricted/session" ) . then () . statusCode ( 200 ) . body ( "size()" , org.hamcrest.core.IsEqual . equalTo ( 0 ) ) ; } catch ( com.google.gdata.util.ServiceException | com.google.appengine.api.datastore.EntityNotFoundException | java.io.IOException e ) { e . printStackTrace () ; } } 
private long generateSnapshotId () { if ( ( "SNAPSHOT" . equals ( type . toString () ) ) == false ) { return - 1 ; } if ( com.google.common.base.Strings . isNullOrEmpty ( this . snapshotId ) ) { return java.lang.System . currentTimeMillis () ; } else { return java.lang.Integer . parseInt ( this . snapshotId ) ; } } 
public static java.util.List < com.salesforce.dva.argus.ws.dto.AlertDto > transformToDtoNoContent ( java.util.List < com.salesforce.dva.argus.entity.Alert > alerts ) { if ( ( alertss ) == null ) { throw new javax.ws.rs.WebApplicationException ( "Null entity object cannot be converted to Dto object." , javax.ws.rs.core.Response.Status.INTERNAL_SERVER_ERROR ) ; } java.util.List < com.salesforce.dva.argus.ws.dto.AlertDto > result = new java.util.ArrayList < com.salesforce.dva.argus.ws.dto.AlertDto > () ; for ( com.salesforce.dva.argus.entity.Alert alert : alerts ) { result . add ( com.salesforce.dva.argus.ws.dto.AlertDto . transformToDtoNoContent ( alert ) ) ; } return result ; } 
private java.lang.String getJNIFunctionName () { org.iguanatool.testobject.JavaWrapper javaWrapper = new org.iguanatool.testobject.JavaWrapper ( caseStudy , testObjectName ) ; java.lang.String packageName = javaWrapper . getTestObjectsPackageName () . replace ( "." , "_" ) ; java.lang.String safeClassName = testObjectName . replace ( "_" , "_1" ) ; return ( ( ( "Java_" + packageName ) + "_" ) + safeClassName ) + "_call" ; } 
@ java.lang.Override public cc.creativecomputing.io.data.CCDataObject dataObject () { if ( ( _myPreset ) != null ) { cc.creativecomputing.io.data.CCDataObject myResult = new cc.creativecomputing.io.data.CCDataObject () ; myResult . put ( "preset" , _myPreset ) ; return myResult ; } cc.creativecomputing.io.data.CCDataObject myData = new cc.creativecomputing.io.data.CCDataObject () ; for ( java.lang.String myKey : _myChildHandles . keySet () ) { cc.creativecomputing.control.handles.CCPropertyHandle myHandle = _myChildHandles . get ( myKey ) ; myData . put ( myHandle . memberName () , myHandle . data () ) ; } return myData ; } 
@ java.lang.Override protected org.jboss.shrinkwrap.api.Archive < ? > buildArchive () { org.jboss.shrinkwrap.api.spec.JavaArchive archive = org.jboss.shrinkwrap.api.ShrinkWrap . create ( org.jboss.shrinkwrap.api.spec.JavaArchive . class , "arquillian-junit.jar" ) . addPackages ( true , "junit" , "org.junit" , "org.hamcrest" , org.jboss.arquillian.junit.Arquillian . class . getPackage () . getName () ) . addAsServiceProvider ( org.jboss.arquillian.container.test.spi.TestRunner . class , org.jboss.arquillian.junit.container.JUnitTestRunner . class ) ; return archive ; } 
public void dealFour () { for ( i = 0 ; ( i ) < 4 ; ( i ) ++ ) { int temp = deck . size () ; temp = temp - 1 ; models.Card temp_card = deck . get ( temp ) ; addCardToCol ( i , temp_card ) ; deck . remove ( temp ) ; } } 
private boolean isJsonBoolean ( java.lang.String jsonString ) { try { org.json.JSONObject jsonObject = new org.json.JSONObject () ; if ( jsonString . equals ( java.lang.Boolean.TRUE . toString () ) ) { jsonObject . put ( com.coveros.coverosmobileapp.oauth.RestRequest.ORIGINAL_RESPONSE_TAG , true ) ; } if ( jsonString . equals ( java.lang.Boolean.FALSE . toString () ) ) { jsonObject . put ( com.coveros.coverosmobileapp.oauth.RestRequest.ORIGINAL_RESPONSE_TAG , false ) ; } return true ; } catch ( org.json.JSONException je ) { android.util.Log . e ( "CoverosMobileApp" , "isJsonBoolean is false" , je ) ; return false ; } } 
private java.lang.String buildSongIdFromGenreSelect ( java.lang.String target , java.lang.String genreSelect ) { final java.lang.String query = ( ( ( ( ( ( ( ( "SELECT " + target ) + " FROM " ) + ( MediaLibrary.VIEW_SONGS_ALBUMS_ARTISTS ) ) + " WHERE " ) + ( MediaLibrary.SongColumns._ID ) ) + " IN (" ) + genreSelect ) + ") GROUP BY " ) + target ; return query ; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) @ java.lang.Override public java.util.List < com.health.entity.GP > findBySuburb ( java.lang.String suburb ) { try { java.lang.String str = "SELECT g FROM GP g WHERE g.suburb = ?1" ; javax.persistence.Query query = em . createQuery ( str ) ; query . setParameter ( 1 , suburb ) ; return query . getResultList () ; } catch ( java.lang.Exception e ) { em . close () ; e . printStackTrace () ; return null ; } } 
public com.kodilla.good.patterns.challenges.challenge2.orders.ProductOrderDto process ( com.kodilla.good.patterns.challenges.challenge2.orders.ProductOrderRequest orderRequest ) { boolean isOrdered = productOrderService . orderProduct ( orderRequest ) ; if ( isOrdered ) { informationService . inform ( orderRequest . getUser () ) ; productOrderRepository . createOrder ( orderRequest , java.time.LocalDate . now () ) ; return new com.kodilla.good.patterns.challenges.challenge2.orders.ProductOrderDto ( orderRequest . getUser () , orderRequest . getProduct () , true ) ; } else { return new com.kodilla.good.patterns.challenges.challenge2.orders.ProductOrderDto ( orderRequest . getUser () , orderRequest . getProduct () , true ) ; } } 
@ java.lang.Override public void loadResults ( java.util.ArrayList < com.christian.wallapopsuperhero.data.Comic > results , int totalItems ) { currentTask = null ; comics . addAll ( results ) ; this . totalItems = totalItems ; if ( results == null ) { view . loadErrorView () ; } else { view . loadComics ( results ) ; } } 
public void popTransition ( byte type ) { cubicmadness.gamestates.GameState prev = states . peek () ; states . pop () ; cubicmadness.gamestates.GameState next = states . peek () ; states . push ( new cubicmadness.gamestates.TransitionState ( gp , prev , next , type ) ) ; } 
@ java.lang.Override public void onItemSelected ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { android.util.Log . e ( "SA" , streamSA [ position ] ) ; if ( streamSA [ position ] . isEmpty () ) semesterS . setEnabled ( false ) ; else semesterS . setEnabled ( true ) ; stream = streamSA [ position ] ; setSemester () ; } 
private static java.lang.String getLanguageDisplayName ( java.lang.String isoCode ) { android.content.Context context = org.mercycorps.translationcards.MainApplication . getContextFromMainApp () ; switch ( isoCode ) { case "ar" : return context . getString ( R.string.name_ar ) ; case "en" : return context . getString ( R.string.name_en ) ; case "fa" : return context . getString ( R.string.name_fa ) ; case "ps" : return context . getString ( R.string.name_ps ) ; default: return isoCode ; } } 
private void selectNewButtonActionPerformed ( java.awt.event.ActionEvent evt ) { javax.swing.JFileChooser fileChooser = new javax.swing.JFileChooser () ; fileChooser . setMultiSelectionEnabled ( false ) ; switch ( fileChooser . showOpenDialog ( this ) ) { case javax.swing.JFileChooser.APPROVE_OPTION : java.io.File file = fileChooser . getSelectedFile () ; newDirDisplay . setText ( file . getPath () ) ; newFileDirectory = file . getParent () ; newFileName = file . getName () ; } } 
public static int intMenu ( java.lang.String [] args ) { if ( ( args.length ) <= 2 ) { java.lang.System.out . println ( "Error: title with no options!" ) ; return - 1 ; } int [] choices = new int [ ( args.length ) - 1 ] ; for ( int i = 1 ; i < ( args.length ) ; i ++ ) { choices [ i ] = i + 1 ; } return Util . intMenu ( args , choices ) ; } 
@ java.lang.Override public void open ( org.apache.flink.configuration.Configuration parameters ) throws java.lang.Exception { super . open ( parameters ) ; if ( ( pool ) == null ) { org.apache.flink.contrib.streaming.MultiThreadedFlatMapFunction.LOG . debug ( "Initializing thread pool with {} threads" , poolSize ) ; collector = null ; freeThread = poolSize ; udfIdCnt = 0 ; restoring = false ; idsInFlight = new java.util.HashMap <> ( poolSize ) ; pool = java.util.concurrent.Executors . newFixedThreadPool ( poolSize ) ; poolWatcher = new java.util.concurrent.ExecutorCompletionService <> ( pool ) ; } } 
public static double [] getLocationAlert ( com.familyparking.app.service.LocationService locationService , android.content.Context context ) { double [] position ; position = com.familyparking.app.utility.Tools . getLocationGPS ( locationService , context ) ; if ( position == null ) { position = com.familyparking.app.utility.Tools . getLocationNetwork ( locationService , context ) ; if ( position == null ) { com.familyparking.app.utility.Tools . showSettingsAlert ( context ) ; } } return position ; } 
public static < T extends org.roda.core.data.v2.index.IsIndexed > void delete ( org.roda.core.data.v2.user.RodaUser user , java.lang.Class < T > classToReturn , org.roda.core.data.v2.index.SelectedItems < T > ids ) throws org.roda.core.data.exceptions.AuthorizationDeniedException , org.roda.core.data.exceptions.GenericException , org.roda.core.data.exceptions.NotFoundException , org.roda.core.data.exceptions.RequestNotValidException { org.roda.wui.common.ControllerAssistant controllerAssistant = new org.roda.wui.common.ControllerAssistant () {} ; controllerAssistant . checkRoles ( user ) ; org.roda.wui.api.controllers.BrowserHelper . delete ( user , classToReturn , ids ) ; controllerAssistant . registerAction ( user , LOG_ENTRY_STATE.SUCCESS , "class" , classToReturn . getSimpleName () ) ; } 
@ org.junit.Test public void itShouldRegisterStandardMBeans ( ) throws java.lang.Exception { final io.datakernel.jmx.StandardMBeansRegistrationTest.ServiceStub service = new io.datakernel.jmx.StandardMBeansRegistrationTest.ServiceStub () ; context . checking ( new org.jmock.Expectations () { { oneOf ( mBeanServer ) . registerMBean ( with ( any ( java.lang.Object . class ) ) , with ( io.datakernel.jmx.helper.CustomMatchers . objectname ( ( ( domain ) + ":type=ServiceStub" ) ) ) ) ; } } ) ; com.google.inject.Key < ? > key_1 = com.google.inject.Key . get ( io.datakernel.jmx.StandardMBeansRegistrationTest.ServiceStub . class ) ; jmxRegistry . registerSingleton ( key_1 , service ) ; } 
private java.lang.String closeAlertAndGetItsText () { try { com.lazerycode.selenium.tests.Alert alert = driver . switchTo () . alert () ; java.lang.String alertText = alert . getText () ; if ( acceptNextAlert ) { alert . accept () ; } else { alert . dismiss () ; } return alertText ; } finally { acceptNextAlert = true ; } } 
@ java.lang.Override public net.minecraft.util.AxisAlignedBB getCollisionBox ( net.minecraft.entity.Entity entity ) { if ( ignoreEntity . contains ( entity ) ) return null ; if ( ( ( ! ( entity instanceof net.minecraft.entity.item.EntityItem ) ) && ( entity != ( this . riddenByEntity ) ) ) && ( ( this . protectionTime ) <= 0 ) ) { if ( entity instanceof defense.common.entity.EntityMissile ) { ( ( defense.common.entity.EntityMissile ) ( entity ) ) . setNormalExplode () ; } this . setExplode () ; } return null ; } 
public poker.Pot getSidePot ( int amount , players.Player player ) { members . add ( player ) ; poker.Pot sidePot = new poker.Pot ( ( ( bet ) - amount ) ) ; this . bet = amount ; for ( players.Player member : members ) { sidePot . addMember ( member ) ; } return sidePot ; } 
public static java.lang.Boolean setAPIkey ( java.lang.String key ) { java.lang.System . setProperty ( "WORDNIK_API_KEY" , key ) ; net.jeremybrooks.knicker.dto.TokenStatus status ; try { status = net.jeremybrooks.knicker.AccountApi . apiTokenStatus () ; if ( status . isValid () ) { java.lang.System.out . println ( "API key is valid." ) ; return true ; } else { java.lang.System.out . println ( "API key is invalid!" ) ; java.lang.System . exit ( 1 ) ; return false ; } } catch ( net.jeremybrooks.knicker.KnickerException e ) { java.lang.System.out . println ( "Set your API key!" ) ; e . printStackTrace () ; java.lang.System.out . println ( "Set your API key!" ) ; return false ; } } 
public void ensureCapacity ( int capacity ) { if ( capacity <= ( elements.length ) ) return; java.lang.Object [] newElements = new java.lang.Object [ 2 * capacity ] ; for ( int i = 0 ; i < ( size ) ; i ++ ) { newElements [ i ] = elements [ ( ( ( head ) + i ) % ( elements.length ) ) ] ; } head = 0 ; tail = size ; elements = newElements ; } 
@ org.junit.Test public void compareTest () { final java.util.Comparator < java.net.SocketAddress > socketAddressComparator = limit . socketAddressComparator () ; org.junit.Assert . assertEquals ( expected , socketAddressComparator . compare ( compareFirst , compareSecond ) ) ; org.junit.Assert . assertEquals ( ( - ( expected ) ) , socketAddressComparator . compare ( compareSecond , compareFirst ) ) ; } 
@ java.lang.Override protected java.lang.String predicateToString () { final java.lang.StringBuilder sb = new java.lang.StringBuilder ( "{pattern=[" ) . append ( pattern . pattern () ) ; sb . append ( "],ignoreCase=[" ) . append ( ignoreCase ) ; sb . append ( "],fullMatch=[" ) . append ( fullMatch ) . append ( "]}" ) ; return sb . toString () ; } 
@ java.lang.Override public void onCharacteristicRead ( android.bluetooth.BluetoothGatt gatt , android.bluetooth.BluetoothGattCharacteristic characteristic , int status ) { if ( status == ( android.bluetooth.BluetoothGatt.GATT_SUCCESS ) ) { java.lang.System.out . println ( ( "onCharacteristicRead  " + ( characteristic . getUuid () . toString () ) ) ) ; broadcastUpdate ( tw.edu.ntust.jojllman.wearableapplication.BLE.BluetoothLeService.ACTION_DATA_AVAILABLE , characteristic ) ; } } 
@ java.lang.Override public void onMessage ( java.util.Map < java.lang.String , java.lang.String > data ) { if ( ( entries . size () ) >= lines ) { connector . getEbus () . removeAll () ; result . setResult ( entries ) ; } if ( data . get ( MessageEvent.SENDER ) . equals ( user ) ) { entries . add ( data . get ( MessageEvent.MESSAGE ) ) ; } } 
@ java.lang.Override public void onMessageReceived ( com.google.firebase.messaging.RemoteMessage remoteMessage ) { java.lang.String projectID = java.lang.String . valueOf ( remoteMessage . getData () . get ( "project_id" ) ) ; sendNotification ( remoteMessage . getNotification () . getTitle () , remoteMessage . getNotification () . getBody () , projectID ) ; } 
private void zoomLevelChanged () { double zoom = this . getZoomLevel () ; java.lang.String floatFormat = ( zoom < 10 ) ? java.lang.String . format ( "%.2f" , zoom ) : java.lang.String . format ( "%.1f" , zoom ) ; zoomLabel . setText ( ( floatFormat + "x" ) ) ; if ( ( helixImgGen ) != null ) { helixImgGen . setZoomLevel ( this . getZoomLevel () ) ; this . updateImage () ; } } 
public project.CodeExchangeRequest findByTitle ( java.lang.String title ) { project.CodeExchangeRequest tempSubmission = null ; for ( int i = 0 ; i < ( requests . size () ) ; i ++ ) { if ( requests . get ( i ) . getTitle () . equals ( title ) ) { tempSubmission = requests . get ( i ) ; return tempSubmission ; } } if ( tempSubmission == null ) { java.lang.System.out . println ( "Submission doesn't exist!" ) ; } return tempSubmission ; } 
public static void main ( java.lang.String [] args ) throws java.io.FileNotFoundException , java.io.IOException { view.CourierSystem s = new view.CourierSystem () ; final javax.swing.JFrame window = new javax.swing.JFrame () ; window . setContentPane ( new view.LogInScreen ( window ) ) ; window . setIconImage ( java.awt.Toolkit . getDefaultToolkit () . getImage ( view.Application . class . getResource ( "/view/courier logo.png" ) ) ) ; window . setTitle ( "ACME Delivery Management System" ) ; window . setDefaultCloseOperation ( javax.swing.JFrame.EXIT_ON_CLOSE ) ; window . setVisible ( true ) ; } 
public void setFile ( java.lang.String file ) { try { audio . open ( file ) ; } catch ( javax.sound.sampled.UnsupportedAudioFileException | java.io.IOException | javax.sound.sampled.LineUnavailableException ex ) { javax.swing.JOptionPane . showMessageDialog ( ( ( javax.swing.JFrame ) ( null ) ) , ( "\u062d\u062f\u062b \u0627\u0644\u062e\u0637\u0623 \u0627\u0644\u062a\u0627\u0644\u064a : \n" + ( ex . getLocalizedMessage () ) ) , "خطأ" , javax.swing.JOptionPane.ERROR_MESSAGE ) ; } } 
public void initialiseXspContext ( final java.lang.Boolean includeScopes ) { if ( ! includeScopes ) { setRequestScope ( com.ibm.xsp.extlib.util.ExtLibUtil . getRequestScope () ) ; setViewScope ( com.ibm.xsp.extlib.util.ExtLibUtil . getViewScope () ) ; setSessionScope ( com.ibm.xsp.extlib.util.ExtLibUtil . getSessionScope () ) ; setApplicationScope ( com.ibm.xsp.extlib.util.ExtLibUtil . getApplicationScope () ) ; } setFacesContext ( javax.faces.context.FacesContext . getCurrentInstance () ) ; setXspContext ( com.ibm.xsp.extlib.util.ExtLibUtil . getXspContext () ) ; } 
@ java.lang.Override public void onSuccess ( com.google.firebase.storage.UploadTask.TaskSnapshot taskSnapshot ) { android.net.Uri downloadUrl = taskSnapshot . getDownloadUrl () ; updateImageInDatabase ( downloadUrl . toString () ) ; com.bumptech.glide.Glide . with ( getApplicationContext () ) . load ( data ) . bitmapTransform ( new com.example.mjokic.quizapp.utils.GlideCircleTransformation ( this ) ) . diskCacheStrategy ( DiskCacheStrategy.ALL ) . into ( ( ( android.widget.ImageView ) ( findViewById ( R.id.navDrawerAvatar ) ) ) ) ; progressDialog . hide () ; } 
@ java.lang.Override public void run () { com.thefunteam.android.model.Model model = com.thefunteam.android.model.Atom . getInstance () . getModel () ; if ( ( model . getCurrentGame () ) == null ) { currentGameActivity . finish () ; } else if ( model . getCurrentGame () . isStarted () ) { currentGameActivity . presentGame () ; } currentGameActivity . update ( model ) ; if ( ( model . getErrorMessage () ) != null ) { currentGameActivity . showError ( model . getErrorMessage () ) ; } } 
@ java.lang.Override public void onContainerClosed ( net.minecraft.entity.player.EntityPlayer playerIn ) { super . onContainerClosed ( playerIn ) ; if ( ( playerIn.capabilities.isCreativeMode ) == false ) for ( int i = 0 ; i < ( ( craftSize ) * ( craftSize ) ) ; ++ i ) { net.minecraft.item.ItemStack itemstack = this . craftMatrix . getStackInSlotOnClosing ( i ) ; if ( itemstack != null ) { playerIn . dropPlayerItemWithRandomChoice ( itemstack , false ) ; } } this . craftResult . setInventorySlotContents ( 0 , ( ( net.minecraft.item.ItemStack ) ( null ) ) ) ; } 
private boolean canMoveOrCapture ( int x , int y , boolean result , checkers61b.Piece piece , int side ) { int direction = getDirection ( side ) ; if ( ( ( piece == null ) && ( ( java.lang.Math . abs ( ( x - ( selectedPieceX ) ) ) ) == 1 ) ) && ( ( y - ( selectedPieceY ) ) == 1 ) ) { result = true ; } result = canCapture ( x , y , result , piece , side ) ; return result ; } 
public static java.lang.String formatDateString ( java.lang.String dateString ) { java.text.SimpleDateFormat formattedDate = new java.text.SimpleDateFormat ( "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'" , java.util.Locale.US ) ; formattedDate . setTimeZone ( java.util.TimeZone . getTimeZone ( "UTC" ) ) ; java.util.Date inputDate = null ; try { inputDate = formattedDate . parse ( dateString ) ; } catch ( java.text.ParseException error ) { inputDate = java.util.Calendar . getInstance () . getTime () ; } java.text.SimpleDateFormat outputFormat = new java.text.SimpleDateFormat ( "MM/dd/yyyy" , java.util.Locale.US ) ; outputFormat . setTimeZone ( java.util.TimeZone . getTimeZone ( "UTC" ) ) ; return outputFormat . format ( inputDate ) ; } 
@ org.junit.Test public void testNotFoundException ( ) throws java.lang.Exception { java.lang.String tableId = "456" ; java.lang.String resetToken = "reset-token" ; org.sagebionetworks.repo.model.table.TableStatus status = new org.sagebionetworks.repo.model.table.TableStatus () ; status . setResetToken ( resetToken ) ; org.mockito.Mockito . when ( mockTableManagerSupport . startTableProcessing ( tableId ) ) . thenThrow ( new org.sagebionetworks.repo.web.NotFoundException ( "This table does not exist" ) ) ; two . setObjectType ( ObjectType.TABLE ) ; two . setChangeType ( ChangeType.UPDATE ) ; two . setObjectEtag ( resetToken ) ; worker . run ( mockProgressCallback , two ) ; org.mockito.Mockito . verifyZeroInteractions ( mockTableIndexManager ) ; } 
private java.lang.String executeCommand ( client.ChatserverCommand c ) { try { channel . write ( c ) ; model.responses.ServerResponse response = smr . waitForServerResponse () ; return response . getMessage () ; } catch ( client.ChannelException e ) { return "Network error: " + ( e . getMessage () ) ; } catch ( java.lang.InterruptedException e ) { return "No response was sent for that command" ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return null ; } 
@ java.lang.Override public void onCharacteristicRead ( android.bluetooth.BluetoothGattCharacteristic characteristic , int status ) { if ( status != ( android.bluetooth.BluetoothGatt.GATT_FAILURE ) ) { mError = new com.jameslandrum.bluetoothsmart.actions.ReadCharacteristic.CharacteristicReadError () ; } else { for ( com.jameslandrum.bluetoothsmart.actions.ReadCharacteristic.OnReadCharacteristic r : mListeners ) { r . onCharacteristicRead ( mCharacteristic ) ; } } synchronized ( mHolder ) { mHolder . notify () ; } } 
private int getCustomerID ( java.util.Scanner console ) { boolean run = true ; int num = - 1 ; while ( run ) { hotelmgmt.UserView . speak ( "Enter the Customer ID Number" ) ; if ( console . hasNextInt () ) { num = console . nextInt () ; console . nextLine () ; if ( num > 0 ) run = false ; else hotelmgmt.UserView . speak ( "Value must be positive." ) ; } else { hotelmgmt.UserView . speak ( "Please enter an integer value" ) ; console . nextLine () ; } } return num ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { expandBeanList . get ( groupPosition ) . getChild () . remove ( childPosition ) ; if ( ( expandBeanList . get ( groupPosition ) . getChild () . size () ) <= 0 ) { expandBeanList . remove ( groupPosition ) ; expandBeanList . get ( groupPosition ) . getGroup () . setGroupIsEdit ( false ) ; } adapterCallback . callBack ( false , expandBeanList ) ; notifyDataSetChanged () ; } 
@ java.lang.Override public boolean onQueryTextSubmit ( java.lang.String s ) { android.view.inputmethod.InputMethodManager inputManager = ( ( android.view.inputmethod.InputMethodManager ) ( getSystemService ( Context.INPUT_METHOD_SERVICE ) ) ) ; inputManager . hideSoftInputFromWindow ( getCurrentFocus () . getWindowToken () , InputMethodManager.HIDE_NOT_ALWAYS ) ; searchString = "&q=" + s ; mImagesUrls . clear () ; if ( onImageSearch ( 0 ) ) adapter . notifyDataSetChanged () ; return true ; } 
@ java.lang.Override public void sendMessage ( com.st.nicobot.internal.bot.SlackChannel channel , com.st.nicobot.internal.bot.SlackUser origin , java.lang.String message ) { java.lang.Boolean devMode = props . getBoolean ( NicobotProperty.BOT_DEV_MODE ) ; if ( ( ! devMode ) || ( channel . getId () . equals ( devChan . getId () ) ) ) { session . sendMessage ( channel , formatMessage ( message , origin , channel ) , null , null , null ) ; } } 
protected static final < E extends org.sugarj.cleardep.PersistableEntity > E readFromMemoryCache ( java.lang.Class < E > clazz , org.sugarj.common.path.Path p ) { java.lang.ref.SoftReference < ? extends org.sugarj.cleardep.PersistableEntity > ref ; synchronized ( org.sugarj.cleardep.PersistableEntity . class ) { ref = org.sugarj.cleardep.PersistableEntity.inMemory . get ( p ) ; } if ( ref == null ) return null ; org.sugarj.cleardep.PersistableEntity e = ref . get () ; if ( ( e != null ) && ( clazz . isInstance ( e ) ) ) return clazz . cast ( e ) ; return null ; } 
boolean isBuilding ( int tile ) { java.lang.System.out . println ( ( "FOUND " + tile ) ) ; if ( ( tile > 64 ) && ( tile < 208 ) ) { java.lang.System.out . println ( "1" ) ; return true ; } if ( ( tile > 223 ) && ( tile < 828 ) ) { java.lang.System.out . println ( "2" ) ; return true ; } if ( ( tile > 831 ) && ( tile < 948 ) ) { java.lang.System.out . println ( "3" ) ; return true ; } return false ; } 
private void resetDocument () { if ( ! ( this . sentBeginWikiSpace ) ) { this . currentSpaceReference = null ; this . currentLegacySpace = null ; } this . currentDocumentReference = null ; this . currentLegacyDocument = null ; this . currentDocumentLocale = null ; this . currentDocumentRevision = null ; this . currentDocumentParameters = new org.xwiki.filter.FilterEventParameters () ; this . currentDocumentLocaleParameters = new org.xwiki.filter.FilterEventParameters () ; this . currentDocumentRevisionParameters = new org.xwiki.filter.FilterEventParameters () ; this . sentBeginWikiDocument = false ; this . sentBeginWikiDocumentLocale = false ; this . sentBeginWikiDocumentRevision = false ; } 
public java.util.List < java.lang.Integer > getTargetWords () { java.util.List < java.lang.Integer > res = new java.util.ArrayList < java.lang.Integer > () ; for ( int targetElement : target ) { if ( targetElement > 0 ) { res . add ( targetElement ) ; } } return res ; } 
protected void doGet ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { java.util.List < po.MerchantProfile > mp = md . loadAllMerchantProfile ( 0 ) ; request . setAttribute ( "merchant" , mp ) ; request . getRequestDispatcher ( "viewMerchant.jsp" ) . forward ( request , response ) ; } 
public void sendMessage ( java.lang.String text , com.therods.YetAnotherToDoList.model.User user ) throws com.therods.YetAnotherToDoList.server.JMSException { session = connection . createSession ( false , Session.AUTO_ACKNOWLEDGE ) ; topic = session . createTopic ( java.lang.String . valueOf ( user . getId () ) ) ; messageProducer = session . createProducer ( topic ) ; messageProducer . send ( topic , session . createTextMessage ( text ) ) ; session . close () ; } 
public double slopeTo ( Point that ) { if ( ( ( x ) == ( that.x ) ) && ( ( y ) == ( that.y ) ) ) return java.lang.Double.NEGATIVE_INFINITY ; if ( ( x ) == ( that.x ) ) return java.lang.Double.POSITIVE_INFINITY ; return ( ( that.y ) - ( y ) ) / ( ( that.x ) - ( x ) ) ; } 
private void thinkSpinUp () { ( diallingTimeout ) -- ; if ( ( diallingTimeout ) <= 0 ) { ( diallingProgress ) ++ ; diallingSymbol = dest.address . getAddress () [ diallingProgress ] ; if ( ( diallingProgress ) >= ( dest.address . getAddress () . length ) ) { thinkPerformConnection () ; } else { diallingTimeout += 40 ; sendUpdates () ; thinkFindTile () ; } } } 
private void testLocation ( ) throws testingPlayer.GameActionException { boolean isSuitable = false ; int suitableLocation = 0 ; for ( int i = 0 ; i < ( NUM_CELL_TREES ) ; i ++ ) { if ( rc . canPlantTree ( new testingPlayer.Direction ( ( i * ( ANGLE_OFFSET ) ) ) ) ) { suitableLocation ++ ; } } if ( suitableLocation == ( NUM_CELL_TREES ) ) { isLocationFound = true ; buildCell () ; } } 
@ java.lang.Override public java.awt.image.BufferedImage getImage ( int count ) { if ( up ) { if ( ( count >= 0 ) && ( count < 5 ) ) return bsprite [ 0 ] ; else return bsprite [ 1 ] ; } else { if ( ( count >= 0 ) && ( count < 5 ) ) return fsprite [ 0 ] ; else return fsprite [ 1 ] ; } } 
private void updateHeader ( int headerPosition , boolean updateHeaderContent ) { if ( ( mHeaderPosition ) != headerPosition ) { mHeaderPosition = headerPosition ; android.support.v7.widget.RecyclerView.ViewHolder holder = getHeaderViewHolder ( headerPosition ) ; if ( ( mStickyHeaderViewHolder ) != holder ) { if ( eu.davidea.flexibleadapter.FlexibleAdapter.DEBUG ) android.util.Log . v ( eu.davidea.flexibleadapter.helpers.StickyHeaderHelper.TAG , ( "swapHeader newPosition=" + headerPosition ) ) ; swapHeader ( holder ) ; } } else if ( updateHeaderContent && ( ( mStickyHeaderViewHolder ) != null ) ) { mAdapter . onBindViewHolder ( mStickyHeaderViewHolder , mHeaderPosition ) ; ensureHeaderParent () ; } translateHeader () ; } 
public static java.lang.String getMethodName () { return ( ( ( ( java.lang.Thread . currentThread () . getStackTrace () [ 3 ] . getFileName () ) + " " ) + ( java.lang.Thread . currentThread () . getStackTrace () [ 3 ] . getMethodName () ) ) + " at " ) + ( java.lang.Thread . currentThread () . getStackTrace () [ 3 ] . getLineNumber () ) ; } 
private com.march.piceditor.sticker.handler.StickerBaseTouchHandler getTouchHandler ( int touchType ) { com.march.piceditor.sticker.handler.StickerBaseTouchHandler handler = mTouchHandlerMap . get ( touchType ) ; if ( handler == null ) { switch ( touchType ) { case com.march.piceditor.sticker.handler.StickerBaseTouchHandler.MOVE : handler = new com.march.piceditor.sticker.handler.impl.MoveHandler () ; break; case com.march.piceditor.sticker.handler.StickerBaseTouchHandler.BOTTOM_RIGHT_CORNER : handler = new com.march.piceditor.sticker.handler.impl.BottomRightCornerHandler () ; break; case com.march.piceditor.sticker.handler.StickerBaseTouchHandler.TWO_FINGER : handler = new com.march.piceditor.sticker.handler.impl.TwoFingersHandler () ; break; } } return handler ; } 
@ org.springframework.web.bind.annotation.GetMapping ( value = "/login" ) public java.lang.String login ( @ org.springframework.web.bind.annotation.RequestParam java.util.Map < java.lang.String , java.lang.String > requestParams ) { java.lang.String username = requestParams . get ( "user" ) ; java.lang.String password = requestParams . get ( "password" ) ; if ( ( ( ( username != null ) && ( password != null ) ) && ( username . equals ( "potatis" ) ) ) && ( password . equals ( "kakor" ) ) ) PortCDMRequest = $missing$ ; req = new softproject.services.PortCDMRequest () ; req . subscribe () ; return "index" ; return "login" ; } 
public processing.core.PVector coerceVectorToAxis ( processing.core.PVector vect ) { processing.core.PVector a = vect . normalize () ; do { a.x = ( ( a.x ) < 0.5F ) ? 0.0F : 1.0F ; a.y = ( ( a.y ) < 0.5F ) ? 0.0F : 1.0F ; a.z = ( ( a.z ) < 0.5F ) ? 0.0F : 1.0F ; } while ( ! ( vectorsEqual ( a , a . normalize () ) ) ) ; return a ; } 
public void run () { if ( ( ( main.Rules.TIMER ) % 20 ) == 0 ) { if ( ( hitBottom () ) || ( hitBlock () ) ) { current = colorizer . spawnBlock () ; } else { current = colorizer . drop ( current , 1 ) ; } } ( main.Rules.TIMER ) ++ ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { java.lang.System.out . println ( "Clicked" ) ; android.os.Bundle btype = new android.os.Bundle () ; btype . putBoolean ( "type" , user ) ; btype . putInt ( "residenceId" , residences . get ( position ) . getId () ) ; util.Utils . goToActivity ( context , gr.uoa.di.airbnbproject.ResidenceActivity . class , btype ) ; } 
public void onClickEqual ( android.view.View v ) { if ( ( display ) == "" ) return; if ( ! ( getResult () ) ) return; screen . setText ( ( ( ( display ) + "\n" ) + ( java.lang.String . valueOf ( result ) ) ) ) ; } 
public static void ensureCapacity ( ArrayQueueADT arrayQueueADT , int capacity ) { if ( capacity <= ( arrayQueueADT.elements.length ) ) return; java.lang.Object [] newElements = new java.lang.Object [ 2 * capacity ] ; for ( int i = 0 ; i < ( arrayQueueADT.size ) ; i ++ ) { newElements [ i ] = arrayQueueADT.elements [ ( ( ( arrayQueueADT.head ) + i ) % ( arrayQueueADT.elements.length ) ) ] ; } arrayQueueADT.head = 0 ; arrayQueueADT.tail = arrayQueueADT.size ; arrayQueueADT.elements = newElements ; } 
@ java.lang.Override public void onLeftClick ( double x , double y ) { clickedPoint = new irmb.flowsim.model.Point ( x , y ) ; irmb.flowsim.view.graphics.PaintableShape paintableShape = getPaintableShapeAt ( x , y ) ; if ( paintableShape != null ) moveShapeCommand = new irmb.flowsim.presentation.command.MoveShapeCommand ( paintableShape . getShape () ) ; } 
@ org.junit.Test public void test () { CS3213.RequireWords requireWords = new CS3213.RequireWords () ; java.lang.String [] lines = new java.lang.String [] { "test a line" , "a simple line" , "this is test" , "easy task" } ; for ( java.lang.String str : lines ) { requireWords . addWordToList ( str ) ; } java.lang.String [] test = new java.lang.String [] { "this" } ; java.util.ArrayList < java.lang.String > output = requireWords . CheckRequireWords ( test ) ; assertEquals ( 1 , requireWords . getSize () ) ; } 
private void fillDeck () { int typeSelection = 0 ; int suitSelection = 0 ; for ( int i = 0 ; i < 52 ; i ++ ) { if ( ( i % 13 ) == 0 ) { typeSelection = 0 ; suitSelection ++ ; } cards . add ( new com.trimteam.blackjack.Card ( Card.CardSuit . values () [ suitSelection ] , Card.CardType . values () [ typeSelection ] ) ) ; typeSelection ++ ; } } 
public boolean onCommand ( org.bukkit.command.CommandSender sender , org.bukkit.command.Command cmd , java.lang.String label , java.lang.String [] args ) { if ( cmd . getName () . equalsIgnoreCase ( "minerhelmets" ) ) { sender . sendMessage ( ( ( org.bukkit.ChatColor.GOLD ) + "Miner Helmets" ) ) ; sender . sendMessage ( ( ( org.bukkit.ChatColor.GOLD ) + "Plugin Made by bennyman123abc" ) ) ; sender . sendMessage ( ( ( org.bukkit.ChatColor.GREEN ) + "Version: 1.1" ) ) ; } return false ; } 
public void testEditModeReplace () { enterEditModeWithOneMarkedSymbol () ; solo . clickOnButton ( org.catrobat.musicdroid.pocketmusic.uitest.instrument.piano.PianoActivityUiTest.PIANO_BUTTON_TEXT ) ; assertEquals ( 1 , pianoActivity . getSymbolContainer () . size () ) ; assertFalse ( pianoActivity . getSymbolContainer () . get ( 0 ) . isMarked () ) ; } 
private void nextBatter () { if ( ( game.teamAtBat ) == 0 ) { game.vLineupBatter += 1 ; if ( ( game.vLineupBatter ) > 8 ) { game.vLineupBatter = 0 ; } game.vBatter = vTeam.roster . get ( game.vLineupBatter ) ; } else { game.hLineupBatter += 1 ; if ( ( game.hLineupBatter ) > 8 ) { game.hLineupBatter = 0 ; } game.hBatter = hTeam.roster . get ( game.hLineupBatter ) ; } } 
@ java.lang.Override public void onPickupFromSlot ( net.minecraft.entity.player.EntityPlayer player , net.minecraft.item.ItemStack stack ) { net.minecraftforge.fml.common.FMLCommonHandler . instance () . firePlayerCraftingEvent ( player , stack , grid . getMatrix () ) ; onCrafting ( stack ) ; if ( ! ( player.worldObj.isRemote ) ) { grid . onCrafted () ; container . sendCraftingSlots () ; } } 
private < T extends java.lang.Comparable < T > > void checkSorted ( T [] array ) { for ( int i = 1 ; i < ( array.length ) ; i ++ ) { org.junit.Assert . assertTrue ( ( ( array [ ( i - 1 ) ] . compareTo ( array [ i ] ) ) <= 0 ) ) ; } } 
private int openInputStream () { try { java.io.InputStream tmpIn = socket . getInputStream () ; inputStream = tmpIn ; return com.weisser.bluetoothtester.BluetoothThread.SUCCESS ; } catch ( java.io.IOException e ) { android.util.Log . e ( com.weisser.bluetoothtester.BluetoothThread.LOGTAG , ( "IOException socket.getInputStream() " + ( getThreadId () ) ) , e ) ; return com.weisser.bluetoothtester.BluetoothThread.ERR_SOCKET_INPUT_STREAM ; } } 
public java.util.TreeMap < java.lang.Integer , java.util.TreeMap < java.lang.String , java.lang.Integer > > retrieveOverallCoordData () { java.util.TreeMap < java.lang.Integer , java.util.TreeMap < java.lang.String , java.lang.Integer > > overall = new java.util.TreeMap <> () ; overall . putAll ( coordinateDao . findOverallDataCollected ( "oldprocessedcoord" ) ) ; overall . putAll ( coordinateDepDao . findOverallDataCollected ( coordViewTable ) ) ; return overall ; } 
public void update ( java.util.Observable subject , java.lang.Object info ) { if ( info != null ) { coinmachine.CoinMachine coinMachine = ( ( coinmachine.CoinMachine ) ( subject ) ) ; if ( ( coinMachine . getCount () ) == ( coinMachine . getCapacity () ) ) { messageLabel . setText ( "This machine is full" ) ; messageLabel . setForeground ( java.awt.Color.RED ) ; } int numCoins = coinMachine . getCount () ; coinsNumTextField . setText ( java.lang.String . valueOf ( numCoins ) ) ; } } 
private void updatePrefViewportHeight () { double lineHeight = fontMetrics . get () . getLineHeight () ; int rowCount = getSkinnable () . getPrefRowCount () ; javafx.geometry.Insets contentPadding = contentView . getInsets () ; scrollPane . setPrefViewportHeight ( ( ( ( rowCount * lineHeight ) + ( contentPadding . getTop () ) ) + ( contentPadding . getBottom () ) ) ) ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this , edu.augustana.csc490.mapgame.StreetMode_Multiplayer . class ) ; intent . putExtra ( "actualPosition" , actualPosition ) ; if ( ( playerNum ) == 0 ) { intent . putExtra ( "scorePlayer0" , scorePlayer0 ) ; } else if ( ( playerNum ) == 1 ) { intent . putExtra ( "scorePlayer1" , scorePlayer1 ) ; } intent . putExtra ( "round" , round ) ; intent . putExtra ( "playerNum" , playerNum ) ; startActivity ( intent ) ; } 
public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { android.content.Intent myIntent = new android.content.Intent ( getApplicationContext () , com.attender.Event_Page_Activity . class ) ; int eventNum = position ; myIntent . putExtra ( "CurrentEvent" , events . get ( eventNum ) ) ; startActivity ( myIntent ) ; } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent ae ) { if ( boa.gui.GUI.logger . isDebugEnabled () ) boa.gui.GUI.logger . debug ( "opening input image for structure: {} of idx: {}" , ae . getActionCommand () , getStructureIdx ( ae . getActionCommand () , openRaw ) ) ; boa.gui.imageInteraction.ImageObjectInterface i = boa.gui.imageInteraction.ImageWindowManagerFactory . getImageManager () . getImageObjectInterface ( data , data . getStructureIdx () ) ; boa.gui.imageInteraction.ImageWindowManagerFactory . getImageManager () . addImage ( i . generateRawImage ( getStructureIdx ( ae . getActionCommand () , openRaw ) ) , i , true ) ; } 
public static void main ( java.lang.String [] args ) { com.prabhash.java.interview.ch2.LinkedListImpl ll = new com.prabhash.java.interview.ch2.LinkedListImpl () ; ll . generateLinkedList () ; com.prabhash.java.interview.ch2.LinkedListImpl.Node head = ll . getHead () ; ll . prettyPrintLinkedList ( head ) ; int data = com.prabhash.java.interview.ch2.FindNthToLastNode . findKthToLast ( head , 2 ) ; java.lang.System.out . println ( ( "\n\nKth element from last: " + data ) ) ; } 
@ java.lang.Override public void bindView ( android.view.View convertView , android.content.Context context , android.database.Cursor cursor ) { android.widget.ImageView view = ( ( android.widget.ImageView ) ( convertView . findViewById ( R.id.list_item_poster_image ) ) ) ; com.squareup.picasso.Picasso . with ( context ) . load ( getURL ( cursor ) ) . fit () . centerCrop () . into ( view ) ; } 
public void addSystem ( ch.riverworld.collector.DatabaseOperations dop , java.lang.String system ) { android.database.sqlite.SQLiteDatabase db = dop . getWritableDatabase () ; android.content.ContentValues values = new android.content.ContentValues () ; values . put ( DatabaseInfo.SYSTEMS_SYSTEM_COL , system ) ; if ( debugMode ) { db . insert ( DatabaseInfo.SYSTEMS_TABLE , null , values ) ; android.util.Log . d ( "DATABASE" , "Table systems --> added one line." ) ; } } 
public static org.jfree.chart.ChartPanel createBarChart ( java.lang.String title , java.lang.String x , java.lang.String y , org.jfree.data.category.DefaultCategoryDataset data ) { org.jfree.chart.JFreeChart barChart = org.jfree.chart.ChartFactory . createBarChart ( title , x , y , data , PlotOrientation.VERTICAL , true , true , false ) ; org.jfree.chart.ChartPanel chartPanel = new org.jfree.chart.ChartPanel ( barChart ) ; return chartPanel ; } 
@ java.lang.Override public void onFocusChange ( android.view.View v , boolean hasFocus ) { if ( ! hasFocus ) { if ( ( mCardNumber . length () ) > 12 ) { cardNumber . setText ( checkCardNumberFormat ( addSpaceToCardNumber ( mCardNumber ) ) ) ; if ( ( mType ) == ( com.vinaygaba.creditcardview.CardType.AUTO ) ) { type . setBackgroundResource ( getLogo ( mType ) ) ; } } } } 
public void showArticle ( int index ) { initArticleView () ; com.thecoffeedrinker.theforcereader.NewsReaderContext context = com.thecoffeedrinker.theforcereader.NewsReaderContext . getInstance ( getActivity () ) ; java.util.List < com.thecoffeedrinker.theforcereader.newsmanager.FeedNews > newsList = context . getNewsRetrieved () ; com.thecoffeedrinker.theforcereader.newsmanager.FeedNews newsToShow = newsList . get ( index ) ; if ( Parser.Util . isNetworkAvailable ( getActivity () ) ) { com.thecoffeedrinker.theforcereader.ArticleFragment.ArticleLoader HTMLloaderTask = new com.thecoffeedrinker.theforcereader.ArticleFragment.ArticleLoader () ; HTMLloaderTask . execute ( newsToShow ) ; } } 
private void hideKeyboard () { android.view.inputmethod.InputMethodManager inputManager = ( ( android.view.inputmethod.InputMethodManager ) ( getContext () . getSystemService ( Context.INPUT_METHOD_SERVICE ) ) ) ; android.view.View v = ( ( android.app.Activity ) ( getContext () ) ) . getCurrentFocus () ; if ( v == null ) return; inputManager . hideSoftInputFromWindow ( v . getWindowToken () , 0 ) ; } 
public void nextPlayerTurn () { if ( ( this . currentPlayer . getPlayerNumber () ) < ( this . numPlayers ) ) { for ( parts.Player p : allPlayers ) { if ( ( p . getPlayerNumber () ) == ( ( this . currentPlayer . getPlayerNumber () ) + 1 ) ) { currentPlayer = p ; break; } } } else { currentPlayer = allPlayers . get ( 0 ) ; } } 
private static com.limpoxe.fairy.core.PluginAppTrace.Result beforeReceiver ( android.os.Message msg ) { if ( com.limpoxe.fairy.util.ProcessUtil . isPluginProcess () ) { java.lang.Class clazz = com.limpoxe.fairy.core.PluginIntentResolver . resolveReceiverForClassLoader ( msg.obj ) ; if ( clazz != null ) { com.limpoxe.fairy.core.PluginInjector . hackHostClassLoaderIfNeeded () ; android.content.Context baseContext = com.limpoxe.fairy.core.PluginLoader . getApplication () . getBaseContext () ; android.content.Context newBase = com.limpoxe.fairy.core.PluginLoader . getDefaultPluginContext ( clazz ) ; com.limpoxe.fairy.core.PluginInjector . replaceReceiverContext ( baseContext , newBase ) ; com.limpoxe.fairy.core.PluginAppTrace.Result result = new com.limpoxe.fairy.core.PluginAppTrace.Result () ; result.baseContext = baseContext ; return result ; } else {} } return null ; } 
@ org.junit.Test public void testDecideByFileNameAndModuleMatchingModuleNull () { final com.puppycrawl.tools.checkstyle.api.LocalizedMessage message = new com.puppycrawl.tools.checkstyle.api.LocalizedMessage ( 10 , 10 , "" , "" , null , "MyModule" , getClass () , null ) ; final com.puppycrawl.tools.checkstyle.api.AuditEvent ev = new com.puppycrawl.tools.checkstyle.api.AuditEvent ( this , "ATest.java" , message ) ; filter . setModuleId ( null ) ; org.junit.Assert . assertFalse ( filter . accept ( ev ) ) ; } 
com.badlogic.ashley.core.Component removeInternal ( java.lang.Class < ? extends com.badlogic.ashley.core.Component > componentClass ) { com.badlogic.ashley.core.ComponentType componentType = com.badlogic.ashley.core.ComponentType . getFor ( componentClass ) ; int componentTypeIndex = componentType . getIndex () ; com.badlogic.ashley.core.Component removeComponent = components . get ( componentTypeIndex ) ; if ( removeComponent != null ) { components . set ( componentTypeIndex , null ) ; componentsArray . removeValue ( removeComponent , true ) ; componentBits . clear ( componentTypeIndex ) ; componentRemoved . dispatch ( this ) ; } return removeComponent ; } 
@ java.lang.Override public boolean onCommand ( org.bukkit.command.CommandSender sender , org.bukkit.command.Command cmd , java.lang.String label , java.lang.String [] args ) { if ( sender instanceof org.bukkit.command.ConsoleCommandSender ) plugin . getLogger () . info ( "Command has to be excecuted by player" ) ; org.bukkit.entity.Player p = ( ( org.bukkit.entity.Player ) ( sender ) ) ; if ( label . equalsIgnoreCase ( "money" ) ) p . sendMessage ( ( ( ( ( com.essentials.mcoldlife.main.Reference.CHAT_PREFIX ) + "�aDu hast �6" ) + ( com.mcoldlife.rpg.Money . getMoney ( p ) ) ) + " Gold." ) ) ; return false ; } 
@ java.lang.Override protected void onResume () { com.michaelchen.chairtalk.MainActivity.currActivity = this ; super . onResume () ; android.content.Intent i = getIntent () ; if ( ( i != null ) && ( i . getBooleanExtra ( com.michaelchen.chairtalk.MainActivity.SKIP_BL , false ) ) ) {} else if ( ( ( bluetoothManager ) == null ) || ( ! ( bluetoothManager . isConnected () ) ) ) { initBle () ; return; } rescheduleBLTimer ( 0 ) ; } 
private void formatCSV ( java.lang.String fileName , java.lang.String outFileName ) { try { java.lang.String cmd = ( ( "python geocoder.py " + fileName ) + " " ) + ( ourFileName ) ; java.lang.Process p = java.lang.Runtime . getRuntime () . exec ( cmd ) ; java.io.BufferedReader in = new java.io.BufferedReader ( new java.io.InputStreamReader ( p . getInputStream () ) ) ; } catch ( java.io.IOException e ) { java.lang.System.out . println ( "Failed to read file." ) ; } } 
private static void checkIfExtensionIsEnabled ( java.lang.String extensionName ) { org.apache.falcon.extensions.jdbc.ExtensionMetaStore metaStore = org.apache.falcon.extensions.store.ExtensionStore . getMetaStore () ; if ( metaStore . getDetail ( extensionName ) . getStatus () . equals ( ExtensionStatus.ENABLED . toString () ) ) { throw org.apache.falcon.FalconWebException . newAPIException ( ( ( "Extension: " + extensionName ) + " is in disabled state." ) , Response.Status.INTERNAL_SERVER_ERROR ) ; } } 
public void teleopPeriodic () { boxAlign . startDash () ; jagSlave . startTeleop () ; edu.wpi.first.wpilibj.smartdashboard.SmartDashboard . putBoolean ( "Right trigger" , jagSlave . joyButton7 () ) ; edu.wpi.first.wpilibj.smartdashboard.SmartDashboard . putBoolean ( "Left trigger" , jagSlave . joyButton8 () ) ; if ( ( jagSlave . joyButton7 () ) == true ) { lifter . telopMoveUp () ; } if ( ( jagSlave . joyButton8 () ) == true ) { lifter . telopMoveDown () ; } else { lifter . stop () ; } } 
protected void onBootstrap ( org.springframework.context.ApplicationEvent applicationEvent ) { org.alfresco.repo.security.authentication.AuthenticationUtil . setAdminUserAsFullyAuthenticatedUser () ; try { java.util.List < org.alfresco.service.cmr.site.SiteInfo > siteInfos = siteService . findSites ( "" , 0 ) ; for ( org.alfresco.service.cmr.site.SiteInfo s : siteInfos ) propertyValuesBean . loadPropertyValues ( s . getShortName () ) ; } catch ( org.json.JSONException | org.alfresco.service.cmr.model.FileNotFoundException | java.io.IOException e ) { e . printStackTrace () ; } this . createDeclarations () ; } 
private void handleComposedMember ( org.eclipse.emf.ecore.resource.Resource resource , org.eclipse.emf.ecore.EObject from , org.eclipse.xtext.util.IAcceptor < org.apache.commons.lang3.tuple.ImmutablePair < org.eclipse.emf.ecore.EObject , org.eclipse.emf.ecore.EObject > > acceptor , org.eclipse.n4js.ts.types.TMember to ) { if ( to . isComposed () ) { for ( org.eclipse.n4js.ts.types.TMember constituentMember : to . getConstituentMembers () ) { org.eclipse.n4js.n4JS.N4MemberDeclaration fromMemberDecl = ( ( org.eclipse.n4js.n4JS.N4MemberDeclaration ) ( constituentMember . getAstElement () ) ) ; handleIdentifiableElement ( resource , fromMemberDecl , acceptor , constituentMember ) ; } } else { handleIdentifiableElement ( resource , from , acceptor , to ) ; } } 
@ java.lang.Override public org.ietr.dftools.algorithm.model.sdf.SDFEdge addEdge ( org.ietr.dftools.algorithm.model.sdf.SDFAbstractVertex source , org.ietr.dftools.algorithm.model.sdf.SDFAbstractVertex target ) { org.ietr.dftools.algorithm.model.sdf.SDFEdge newEdge = super . addEdge ( source , target ) ; if ( ( source instanceof org.ietr.dftools.algorithm.model.sdf.esdf.SDFForkVertex ) || ( source instanceof org.ietr.dftools.algorithm.model.sdf.esdf.SDFBroadcastVertex ) ) { source . connectionAdded ( newEdge ) ; } if ( ( target instanceof org.ietr.dftools.algorithm.model.sdf.esdf.SDFJoinVertex ) || ( target instanceof org.ietr.dftools.algorithm.model.sdf.esdf.SDFRoundBufferVertex ) ) { target . connectionAdded ( newEdge ) ; } return newEdge ; } 
public void refreshMap () { if ( pD . isShowing () ) { pD . dismiss () ; } new uwp.cs.edu.parkingtracker.mapping.MapTransform.MapTask () . execute () ; android.util.Log . d ( "MAP" , "REFRESH" ) ; if ( isParked () ) { mMap . addMarker ( new com.google.android.gms.maps.model.MarkerOptions () . title ( "Parking Spot" ) . position ( parkingSpot ) . icon ( com.google.android.gms.maps.model.BitmapDescriptorFactory . fromResource ( R.drawable.parking ) ) ) ; } } 
public itinerary.main.State addTask ( itinerary.main.Command command ) { listTask . add ( ( ( command . getTask () . getLineNumber () ) - 1 ) , command . getTask () ) ; updateLineNum () ; itinerary.main.JsonIOHandler . writeJSONList ( currFile , listTask ) ; return new itinerary.main.State ( command , new itinerary.main.Command ( command . getTask () , CommandType.DELETE ) , getAllTasks () , true ) ; } 
public void paint ( java.awt.Graphics g ) { java.awt.Color c = java.awt.Color.MAGENTA ; for ( estimatingpi.EstimatingPi.Point pt : pts ) { if ( pt.inside ) { c = java.awt.Color.BLUE ; } g . setColor ( c ) ; int x = ( ( int ) ( java.lang.Math . round ( pt.xp ) ) ) + 360 ; int y = ( ( int ) ( java.lang.Math . round ( pt.yp ) ) ) + 360 ; g . drawOval ( x , y , 1 , 1 ) ; } paint ( g ) ; } 
@ java.lang.Override public void onActivityCreated ( android.os.Bundle savedInstanceState ) { super . onActivityCreated ( savedInstanceState ) ; me.dacol.marco.mancala.logging.Logger . v ( me.dacol.marco.mancala.gameUI.board.BoardFragment.LOG_TAG , "activityCreated" ) ; mGame . getTurnContext () . addObserver ( this ) ; me.dacol.marco.mancala.statisticsLib.StatisticsHelper statisticsHelper = me.dacol.marco.mancala.statisticsLib.StatisticsHelper . getInstance ( getActivity () ) ; mGame . getTurnContext () . addObserver ( statisticsHelper ) ; mGame . start ( savedInstanceState ) ; } 
public void moveDownPackageableElements ( org.eclipse.uml2.uml.PackageableElement packageableElement , java.util.List < org.eclipse.uml2.uml.PackageableElement > packageableElementsToMove ) { final org.obeonetwork.dsl.uml2.design.internal.services.MoveDownElementSwitch moveDownElementSwitch = new org.obeonetwork.dsl.uml2.design.internal.services.MoveDownElementSwitch () ; final java.util.List < org.eclipse.uml2.uml.PackageableElement > packageableElementsInRightOrder = retrieveTheRightOrderForPackageableElement ( packageableElementsToMove ) ; final java.lang.Object [] elementsArray = packageableElementsInRightOrder . toArray () ; for ( int i = ( elementsArray.length ) - 1 ; i >= 0 ; i -- ) { if ( ( elementsArray [ i ] ) instanceof org.eclipse.uml2.uml.Element ) { moveDownElementSwitch . moveDownElement ( ( ( org.eclipse.uml2.uml.Element ) ( elementsArray [ i ] ) ) ) ; } } } 
void update ( final int flags , final org.cyanogenmod.platform.internal.display.LiveDisplayService.State state ) { mState = state ; if ( ( flags & ( org.cyanogenmod.platform.internal.display.LiveDisplayService.DISPLAY_CHANGED ) ) != 0 ) { onScreenStateChanged () ; } if ( ( ( flags & ( org.cyanogenmod.platform.internal.display.LiveDisplayService.TWILIGHT_CHANGED ) ) != 0 ) && ( ( mState.mTwilight ) != null ) ) { onTwilightUpdated () ; } if ( ( flags & ( org.cyanogenmod.platform.internal.display.LiveDisplayService.MODE_CHANGED ) ) != 0 ) { onUpdate () ; } if ( ( flags & ( org.cyanogenmod.platform.internal.display.LiveDisplayService.ALL_CHANGED ) ) != 0 ) { onSettingsChanged ( null ) ; } } 
private java.util.Set < computergraphics.datastructures.halfedge.HalfEdgeTriangle > getFacetsAroundVertex ( computergraphics.datastructures.halfedge.HalfEdgeVertex vertex ) { java.util.Set < computergraphics.datastructures.halfedge.HalfEdgeTriangle > neighbours = new java.util.HashSet <> () ; computergraphics.datastructures.halfedge.HalfEdge itr = vertex . getHalfEdge () ; computergraphics.datastructures.halfedge.HalfEdge start = itr ; do { java.lang.System.out . println ( ( ( ( "n: " + neighbours ) + ", itr: " ) + itr ) ) ; neighbours . add ( itr . getFacet () ) ; itr = itr . getNext () . getOpposite () ; } while ( ! ( itr . equals ( start ) ) ) ; return neighbours ; } 
@ org.springframework.context.annotation.Bean public org.springframework.cache.CacheManager cacheManager () { org.springframework.cache.support.SimpleCacheManager simpleCacheManager = new org.springframework.cache.support.SimpleCacheManager () ; org.springframework.cache.guava.GuavaCache referenceDataCache = new org.springframework.cache.guava.GuavaCache ( lv.tsi.calendar.config.CacheConfiguration.REFERENCE_DATA_CACHE , com.google.common.cache.CacheBuilder . newBuilder () . maximumSize ( 45 ) . expireAfterWrite ( 24 , java.util.concurrent.TimeUnit.HOURS ) . build () ) ; org.springframework.cache.guava.GuavaCache eventsCache = new org.springframework.cache.guava.GuavaCache ( lv.tsi.calendar.config.CacheConfiguration.EVENTS_CACHE , com.google.common.cache.CacheBuilder . newBuilder () . maximumSize ( 663 ) . expireAfterAccess ( 24 , java.util.concurrent.TimeUnit.HOURS ) . build () ) ; simpleCacheManager . setCaches ( java.util.Arrays . asList ( referenceDataCache , eventsCache ) ) ; return simpleCacheManager ; } 
@ cli.Command @ java.lang.Override public java.lang.String nameservers ( ) throws java.io.IOException { java.lang.String result = "" ; java.util.List < java.lang.String > subHosts = remoteNamserverCallback . getSubHosts () ; java.util.Collections . sort ( subHosts ) ; for ( java.lang.String subHost : subHosts ) { int index = ( subHost . indexOf ( subHost ) ) + 1 ; result += ( ( index + ". " ) + subHost ) + "\n" ; } return result ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/doc/vej" ) public org.springframework.web.servlet.ModelAndView veje () { java.util.Map < java.lang.String , java.lang.Object > model = new java.util.HashMap < java.lang.String , java.lang.Object > () ; dk.magenta.databroker.dawa.model.vejstykker.VejstykkeEntity vejstykkeEntity = null ; try { vejstykkeEntity = this . dawaModel . getVejstykke ( 101 , 7064 , true ) ; } catch ( java.lang.Exception e ) {} model . put ( "uuid" , ( vejstykkeEntity != null ? vejstykkeEntity . getUuid () : "e9032c69-98bf-4e18-bc94-1a5e5f8901e4" ) ) ; model . put ( "nav" , "vej" ) ; return new org.springframework.web.servlet.ModelAndView ( "doc/vej" , model ) ; } 
@ java.lang.Override public boolean onItemLongClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { bulkMode = ! ( bulkMode ) ; if ( bulkMode ) { lv . setChoiceMode ( AbsListView.CHOICE_MODE_MULTIPLE ) ; lv . setItemChecked ( position , true ) ; selectedNum = 1 ; } else disableBulkMode () ; mListener . onFragmentInteraction ( 1 ) ; return true ; } 
private void getSymbolListFromSharedPreference () { java.lang.String jsonScore = sharedPreference . getSymbolList () ; java.lang.reflect.Type type = new com.google.gson.reflect.TypeToken < java.util.List < com.example.ivanradosavljevic.stockquotes.domain.Symbol > > () {} . getType () ; symbolList = gson . fromJson ( jsonScore , type ) ; myAdapter = new com.example.ivanradosavljevic.stockquotes.logic.MyAdapter ( symbolList , getApplicationContext () ) ; lv . setAdapter ( myAdapter ) ; } 
public void testMultiplyExactLongs () { for ( long a : com.google.gwt.emultest.java.lang.MathTest.ALL_LONG_CANDIDATES ) { for ( long b : com.google.gwt.emultest.java.lang.MathTest.ALL_LONG_CANDIDATES ) { java.math.BigInteger expectedResult = java.math.BigInteger . valueOf ( a ) . multiply ( java.math.BigInteger . valueOf ( b ) ) ; boolean expectedSuccess = com.google.gwt.emultest.java.lang.MathTest . fitsInLong ( expectedResult ) ; try { assertEquals ( ( a * b ) , java.lang.Math . multiplyExact ( a , b ) ) ; assertTrue ( expectedSuccess ) ; } catch ( java.lang.ArithmeticException e ) { assertFalse ( expectedSuccess ) ; } } } } 
private void refreshLocationAndWeather () { if ( ( _adapter ) != null ) { _adapter . clear () ; _adapter . notifyDataSetChanged () ; } _currentLocation = getGoogleLocation () ; android.util.Log . d ( com.beccap.weathervane.WeatherListFragment.TAG , ( "currentLocation: " + ( _currentLocation . toString () ) ) ) ; if ( ( _currentLocation ) != null ) { android.util.Log . d ( com.beccap.weathervane.WeatherListFragment.TAG , "loading weather" ) ; new com.beccap.weathervane.model.WeatherLoader ( this ) . startLoading ( _currentLocation , 10 ) ; } } 
@ org.junit.Test public void findById_TodoEntryNotFound_ShouldThrowException () { when ( repositoryMock . findById ( ru.doccloud.docs.service.RepositoryDocsCrudServiceTest.ID ) ) . thenThrow ( new ru.doccloud.common.exception.DocumentNotFoundException ( "" , found ) ) ; com.googlecode.catchexception.CatchException . catchException ( service ) . findById ( ru.doccloud.docs.service.RepositoryDocsCrudServiceTest.ID ) ; verify ( repositoryMock , times ( 1 ) ) . findById ( ru.doccloud.docs.service.RepositoryDocsCrudServiceTest.ID ) ; verifyNoMoreInteractions ( repositoryMock ) ; } 
@ java.lang.Override public void onBindViewHolder ( movies.popular.jd.com.udacitypopularmovies.MovieCursorRecyclerAdapter.MovieItemViewHolder holder , int position ) { if ( ! ( mDataValid ) ) throw new java.lang.IllegalStateException ( "Cannot bind invalid data to view " ) ; if ( ! ( mCursor . moveToPosition ( position ) ) ) { throw new java.lang.IllegalStateException ( ( "Could not move cursor to the specifed position: " + position ) ) ; } onBindViewHolder ( holder , mCursor ) ; } 
public void captureImage () { android.widget.Toast . makeText ( this , "And this is where the picture would be captured, If I could" , Toast.LENGTH_SHORT ) . show () ; int checkPermission = android.support.v4.content.ContextCompat . checkSelfPermission ( this , Manifest.permission.WRITE_EXTERNAL_STORAGE ) ; if ( checkPermission == ( android.content.pm.PackageManager.PERMISSION_DENIED ) ) { if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.M ) ) { requestPermissions ( new java.lang.String [] { Manifest.permission.WRITE_EXTERNAL_STORAGE } , shuvalov.nikita.mirrormirror.MainActivity.STORAGE_PERMISSION_REQUEST ) ; } } else { mCameraSource . takePicture ( this , this ) ; } } 
@ org.junit.Test public void testCase6 ( ) throws java.io.IOException , org.isaacphysics.labs.graph.checker.CheckerException , org.json.simple.parser.ParseException { java.lang.String trustedJSONString = org.isaacphysics.labs.graph.checker.WholeFileReader . readFile ( "/Users/YUAN/Documents/workspace/isaac-graph-checker/src/main/json/trusted6.json" ) ; java.lang.String untrustedJSONString = org.isaacphysics.labs.graph.checker.WholeFileReader . readFile ( "/Users/YUAN/Documents/workspace/isaac-graph-checker/src/main/json/untrusted6.json" ) ; fail ( "expected CheckerExcepiton: Invalid JSON format" ) ; thrown . expect ( org.isaacphysics.labs.graph.checker.CheckerException . class ) ; thrown . expectMessage ( "Invalid JSON: incorrect format" ) ; java.lang.String resultJSONString = org.isaacphysics.labs.graph.checker.Checker . test ( trustedJSONString , untrustedJSONString ) ; } 
@ java.lang.Override protected void onResume () { super . onResume () ; this . realm = io.realm.Realm . getDefaultInstance () ; java.util.List < com.chtv.korsoapp.Models.PlayerResult > results = realm . where ( com.chtv.korsoapp.Models.Scoreboard . class ) . equalTo ( "scoreboardId" , scoreBoardId ) . findFirst () . getPlayerResults () ; com.chtv.korsoapp.adapters.PlayerResultListAdapter adapter = new com.chtv.korsoapp.adapters.PlayerResultListAdapter ( results ) ; scores . setAdapter ( adapter ) ; sessionName . setText ( realm . where ( com.chtv.korsoapp.Models.ContestSession . class ) . equalTo ( "contestSessionId" , sessionId ) . findFirst () . getName () ) ; } 
private void updateSummaries () { int yellowValue = java.lang.Integer . valueOf ( yellowAlert . getText () ) ; yellowAlert . setSummary ( context . getResources () . getQuantityString ( R.plurals.plural_day , yellowValue , yellowValue ) ) ; int redValue = java.lang.Integer . valueOf ( redAlert . getText () ) ; redAlert . setSummary ( context . getResources () . getQuantityString ( R.plurals.plural_day , redValue , redValue ) ) ; } 
public void addItemToServer ( java.util.Map < java.lang.String , ? > product ) { if ( product != null ) { java.lang.String id = ( ( java.lang.String ) ( product . get ( "productId" ) ) ) ; mref . child ( id ) . setValue ( product ) ; mref . updateChildren ( ( ( java.util.Map < java.lang.String , java.lang.Object > ) ( product ) ) ) ; } } 
@ java.lang.Override public java.net.URL getIconUrl () { final java.lang.String iconLocation = "/images/blue-document-insert.png" ; try { return getClass () . getResource ( iconLocation ) . toURI () . toURL () ; } catch ( final java.net.URISyntaxException exception ) { org.kordakus.sheppard.rule.SheppardInsertRuleFactoryImpl.LOGGER . warn ( "Unable to create URL to icon for insert rule factory's icon at '{}': {}" , iconLocation , exception . getMessage () ) ; throw new org.kordakus.sheppard.api.SheppardRuntimeException ( exception ) ; } catch ( final java.net.MalformedURLException exception ) { org.kordakus.sheppard.rule.SheppardInsertRuleFactoryImpl.LOGGER . warn ( "Unable to create URL to icon for insert rule factory's icon at '{}': {}" , iconLocation , exception . getMessage () ) ; throw new org.kordakus.sheppard.api.SheppardRuntimeException ( exception ) ; } } 
public boolean isDateInRange ( java.util.Date d ) { return ( ( ( startDate . before ( d ) ) & ( endDate . after ( d ) ) ) | ( startDate . equals ( d ) ) ) | ( endDate . equals ( d ) ) ; } 
private echoquery.sql.joins.InferredContext inferPrefixes ( java.lang.String aggregation , java.util.List < java.lang.String > comparisons , java.lang.String table , java.lang.String destinationTable ) { java.util.List < java.lang.String > comparisonPrefixes = inferPrefixesForList ( comparisons , table , destinationTable ) ; java.lang.String aggregationPrefix = inferPrefixForSingle ( aggregation , table , destinationTable ) ; return new echoquery.sql.joins.InferredContext ( aggregationPrefix , comparisonPrefixes ) ; } 
public static com.badlogic.gdx.graphics.g2d.BitmapFont getFont ( int size ) { if ( ( ( ( utilities.FontManager.generator ) == null ) || ( ( utilities.FontManager.param ) == null ) ) || ( ( utilities.FontManager.fonts ) == null ) ) return null ; if ( ( utilities.FontManager.fonts . get ( size ) ) == null ) { utilities.FontManager.fonts . put ( size , new com.badlogic.gdx.graphics.g2d.BitmapFont () ) ; utilities.FontManager.param.size = size ; utilities.FontManager.fonts . put ( size , utilities.FontManager.generator . generateFont ( utilities.FontManager.param ) ) ; } return utilities.FontManager.fonts . get ( size ) ; } 
@ org.junit.Test public void testGetPerson () { java.lang.System.out . println ( "getPerson" ) ; entity.Person expResult = new entity.Person ( "Dan" , "Mark" ) ; java.lang.System.out . println ( "person oprettet" ) ; expResult . setId ( 10L ) ; java.lang.System.out . println ( "sat id til 10l" ) ; java.lang.Long personNumber = expResult . getId () ; entity.Person result = ( ( entity.Person ) ( fp . getPersonById ( personNumber ) ) ) ; java.lang.System.out . println ( ( "info på id" + result ) ) ; assertNotSame ( expResult , result ) ; } 
public static short readSignedShort ( byte [] bytes , int offset ) { int ch1 = bytes [ offset ] ; int ch2 = bytes [ ( offset + 1 ) ] ; if ( ch1 < 0 ) ch1 += 256 ; if ( ch2 < 0 ) ch1 += 256 ; return ( ( short ) ( ( ch1 < < 8 ) + ( ch2 < < 0 ) ) ) ; } 
@ java.lang.Override public < T extends org.sjr.babel.entity.AbstractEntity > java.lang.Long count ( java.lang.Class < T > clazz , java.lang.String hql , java.util.Map < java.lang.String , java.lang.Object > args ) { javax.persistence.TypedQuery < java.lang.Long > query = em . createQuery ( hql , java.lang.Long . class ) . setFirstResult ( 0 ) . setMaxResults ( 1 ) ; args . forEach ( query : : setParameter ) ; return query . getSingleResult () ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( ( ! ( isReading ) ) && ( isPaused ) ) { if ( ( savedPosition ) > 0 ) { savedPosition -= 1 ; textView . setText ( words [ savedPosition ] ) ; progress . setText ( ( ( ( ( ( ( savedPosition ) + " of " ) + ( words.length ) ) + ": " ) + ( calculateProgress ( savedPosition , words.length ) ) ) + "%" ) ) ; } } } 
private static int recursiveCutRod ( int [] a , int len ) { if ( len == 0 ) { return 0 ; } else { int max = - 1 ; for ( int i = 0 ; i < len ; i ++ ) { max = java.lang.Math . max ( max , ( ( prac2.Tasks . recursiveCutRod ( a , ( ( len - i ) - 1 ) ) ) + ( a [ i ] ) ) ) ; } return max ; } } 
public int write ( int size , java.lang.String data ) throws files.invalid_operation { if ( rwx . equals ( mode.read_only ) ) throw new files.files.invalid_operation () ; if ( rwx . equals ( mode.write_append ) ) { ws . append ( data ) ; } else if ( rwx . equals ( mode.write_trunc ) ) { ws . write ( data ) ; } sw . write ( content ) ; sw . write ( data , offset , size ) ; content = sw . toString () ; return size ; } 
@ java.lang.Override public void render ( float delta ) { update ( delta ) ; Gdx.gl . glClear ( GL20.GL_COLOR_BUFFER_BIT ) ; game.batch . setProjectionMatrix ( camera.combined ) ; game.batch . begin () ; background . render ( game.batch ) ; manager . render ( game.batch ) ; game.batch . end () ; if ( ( canDispose ) || ( manager . canDispose () ) ) dispose () ; } 
@ java.lang.Override public java.util.Map < java.lang.String , java.lang.Object > generateCredentialsInfo ( java.lang.String serviceInstanceId ) { return new java.util.HashMap < java.lang.String , java.lang.Object > () { { put ( "uri" , clusterConfig . getYarnRMUrl () ) ; put ( "host" , clusterConfig . getYarnRMHost () ) ; put ( "port" , clusterConfig . getYarnRMPort () ) ; put ( OCDPConstants.MAPREDUCE_RESOURCE_TYPE , serviceInstanceId ) ; } } ; } 
@ java.lang.Override public void onCreate () { setTheme ( com.marverenic.music.utils.Themes . getTheme ( this ) ) ; super . onCreate () ; if ( BuildConfig.DEBUG ) { com.squareup.picasso.Picasso . setSingletonInstance ( new com.squareup.picasso.Picasso.Builder ( this ) . indicatorsEnabled ( true ) . build () ) ; } else { defaultHandler = java.lang.Thread . getDefaultUncaughtExceptionHandler () ; java.lang.Thread . setDefaultUncaughtExceptionHandler ( this ) ; io.fabric.sdk.android.Fabric . with ( this , new com.crashlytics.android.Crashlytics () ) ; } com.marverenic.music.PlayerController . startService ( getApplicationContext () ) ; } 
public final T parse ( org.codehaus.jparsec.Token [] tokens ) { org.codehaus.jparsec.ParserState state = new org.codehaus.jparsec.ParserState ( null , null , tokens , 0 , null , 0 , tokens , new org.codehaus.jparsec.parameters.Parameters () ) ; if ( ! ( apply ( state ) ) ) { throw new org.codehaus.jparsec.error.ParserException ( state . renderError () , new org.codehaus.jparsec.error.Location ( 1 , 1 ) ) ; } return getReturn ( state ) ; } 
@ org.junit.Test public void testAppend () { dk.kontentsu.model.Term test = term1 . append ( "test2" ) ; assertEquals ( term2 . getFullPath () , test . getFullPath () ) ; assertEquals ( term3 . getFullPath () , term1 . append ( "test2/test3" ) . getFullPath () ) ; dk.kontentsu.model.Term testTerm = new dk.kontentsu.model.Term ( "test2" ) . append ( new dk.kontentsu.model.Term ( "TEST3" ) ) ; term1 . append ( testTerm . getParent () ) ; assertEquals ( term3 . getFullPath () , testTerm . getFullPath () ) ; } 
protected void finalize ( ) throws java.io.IOException { read . close () ; configFile . delete () ; configFile . createNewFile () ; java.io.Writer fw = new java.io.FileWriter ( configFile ) ; fw . write ( ( ( ( ( lastFile ) + "\n" ) + ( defaultTheme ) ) + "\n" ) ) ; fw . close () ; } 
public static org.geotools.styling.Style showDialog ( org.eclipse.swt.widgets.Shell parent , org.geotools.map.Layer layer ) throws java.io.IOException { if ( ! ( org.geotools.swt.utils.Utils . isGridLayer ( layer ) ) ) { org.geotools.data.simple.SimpleFeatureSource featureSource = ( ( org.geotools.data.simple.SimpleFeatureSource ) ( layer . getFeatureSource () ) ) ; org.geotools.styling.Style style = layer . getStyle () ; org.geotools.swt.styling.SimpleStyleConfigurator . showDialog ( parent , featureSource , style ) ; } return null ; } 
private void shift ( boolean vert , boolean down ) { if ( vert ) { if ( down ) { ys -= SHIFT ; } else ys += SHIFT ; } else { if ( down ) { xs -= SHIFT ; } else xs += SHIFT ; } } 
public void goBack () { if ( ( indexAcum ) > 20 ) { if ( ( ( indexAcum ) % 20 ) != 0 ) indexAcum -= ( ( indexAcum ) % 20 ) + 20 ; else indexAcum -= 40 ; fillPnlGrid () ; } else new castboard.view.FailureNotificationPopUp ( masterFrame ) . display ( "Ha llegado al principio del catálogo" ) ; } 
public com.codequest.utils.User insertUser ( com.codequest.utils.User queryValues ) { android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; android.content.ContentValues values = new android.content.ContentValues () ; values . put ( "login" , android.database.DatabaseUtils . sqlEscapeString ( queryValues.login ) ) ; values . put ( "password" , android.database.DatabaseUtils . sqlEscapeString ( queryValues.password ) ) ; queryValues.userId = db . insert ( "userdata" , null , values ) ; db . close () ; return queryValues ; } 
@ java.lang.Override public void visitInnerClassType ( final java.lang.String name ) { if ( ( state ) != ( org.objectweb.asm.util.CheckSignatureAdapter.CLASS_TYPE ) ) { throw new java.lang.IllegalStateException () ; } org.objectweb.asm.util.CheckMethodAdapter . checkIdentifier ( name , "inner class name" ) ; if ( ( sv ) != null ) { sv . visitInnerClassType ( name ) ; } } 
private java.util.List < com.jetbrains.jetpad.vclang.term.Concrete.Argument > visitLamTeles ( java.util.List < com.jetbrains.jetpad.vclang.parser.TeleContext > tele ) { java.util.List < com.jetbrains.jetpad.vclang.term.Concrete.Argument > arguments = new java.util.ArrayList <> () ; for ( com.jetbrains.jetpad.vclang.parser.TeleContext arg : tele ) { java.util.List < com.jetbrains.jetpad.vclang.term.Concrete.Argument > arguments1 = visitLamTele ( arg ) ; if ( arguments1 == null ) return null ; arguments . addAll ( arguments1 ) ; } return arguments ; } 
public void markAsFinished ( int level , int chapter ) { if ( ( level == ( getCurrentLevel ( chapter ) ) ) && ( level <= ( sokobug.screens.ChooseLevelScreen.NUMBER_OF_LEVELS ) ) ) { levelsStatus [ ( chapter - 1 ) ] [ level ] = sokobug.domain.PlayerProgress.LevelType.OPENED_LEVEL . ordinal () ; } else { levelsStatus [ ( chapter - 1 ) ] [ ( level - 1 ) ] = sokobug.domain.PlayerProgress.LevelType.OPENED_LEVEL . ordinal () ; } } 
public static java.util.List < java.lang.String > getTitlesFromCategory ( org.bukkit.configuration.ConfigurationSection config , java.lang.String category ) { java.util.List < java.lang.String > titles = new java.util.ArrayList <> () ; for ( java.lang.String title : config . getKeys ( false ) ) { if ( config . getString ( ( title + ( me.semakon.Utils.CAT ) ) ) . equalsIgnoreCase ( category ) ) config . getString ( ( title + ( me.semakon.Utils.NAME ) ) ) ; } return titles ; } 
@ java.lang.Override public boolean onItemLongClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { if ( position == ( MyData.allMyAccounts . size () ) ) { android.widget.Toast . makeText ( getActivity () , "This item cannot be deleted or edited" , Toast.LENGTH_LONG ) . show () ; return true ; } MyData.selectAccountIndex = position ; MyData.selectedAccount = MyData.allMyAccounts . get ( position ) ; startActivity ( new android.content.Intent ( getActivity () , com.example.lj.paymentmanagement.EditOrDeleteAccountActivity . class ) ) ; return true ; } 
@ java.lang.Override public void exitMatchMaking ( com.pasapalabra.game.service.auth.Token session , java.lang.String type ) throws java.rmi.RemoteException { if ( com.pasapalabra.game.service.auth.SessionManager . isValidSession ( session ) ) { if ( com.pasapalabra.game.service.PasapalabraService.waitingClients . containsKey ( session . getToken () ) ) { com.pasapalabra.game.service.PasapalabraService.waitingClients . get ( type ) . remove ( session . getToken () ) ; com.pasapalabra.game.service.PasapalabraService.currentClients . remove ( session . getToken () ) ; com.pasapalabra.game.service.PasapalabraService.currentResult . remove ( session . getToken () ) ; com.pasapalabra.game.service.PasapalabraService.currentQuestions . remove ( session . getToken () ) ; } } } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( ! ( mFileManager . searchFile ( attachment . getFilename () ) ) ) { mFileManager . downloadFile ( attachment . getFilename () , attachment . getFileurl () , "" , crux.bphc.cms.fragments.ForumFragment.FOLDER_NAME ) ; } else { mFileManager . openFile ( attachment . getFilename () , crux.bphc.cms.fragments.ForumFragment.FOLDER_NAME ) ; } } 
@ java.lang.Override public void run () { no.hist.aitel.team12.app.Email . sendEmail ( ( ( ( ( ( ( ( ( ( ( "Dear " + ( firstName . getText () ) ) + " " ) + ( lastName . getText () ) ) + ",\nYou have been created as a Centre Manager for " ) + ( centreName . getText () ) ) + ".\nYour username is: " ) + ( username . getText () ) ) + "\nYour password is: " ) + password ) + "\n\nPlease change your password at your earliest oppurtunity.\n Regards, System Administrator for the SSS system,\nTeam12" ) , new no.hist.aitel.team12.app.EmailAddress ( email . getText () ) ) ; } 
public static boolean isFavourite ( java.lang.String userId , java.lang.String resourceId , java.lang.String resourceType ) { boolean found = false ; org.jongo.MongoCollection favourites = controllers.MongoDBController . getCollection ( CollectionNames.favourites ) ; models.Favourite fav = favourites . findOne ( "{userId:#, resourceId:#, resourceType:#}" , userId , resourceId , resourceType ) . as ( models.Favourite . class ) ; if ( fav != null ) { if ( ! ( fav.isActive ) ) { found = true ; } } return found ; } 
boolean stopNetworkLogging () { android.util.Log . d ( com.android.server.devicepolicy.NetworkLogger.TAG , "Stopping network logging" ) ; mIsLoggingEnabled = false ; try { if ( ! ( checkIpConnectivityMetricsService () ) ) { android.util.Slog . wtf ( com.android.server.devicepolicy.NetworkLogger.TAG , "Failed to unregister callback with IIpConnectivityMetrics." ) ; return true ; } return mIpConnectivityMetrics . unregisterNetdEventCallback () ; } catch ( android.os.RemoteException re ) { android.util.Slog . wtf ( com.android.server.devicepolicy.NetworkLogger.TAG , "Failed to make remote calls to unregister the callback" , re ) ; } finally { mHandlerThread . quitSafely () ; return true ; } } 
@ java.lang.Override public void onGlobalLayout () { android.graphics.Rect rect = new android.graphics.Rect () ; mRootView . getWindowVisibleDisplayFrame ( rect ) ; int screenHeight = mRootView . getRootView () . getHeight () ; int heightDiff = screenHeight - ( rect.bottom ) ; if ( heightDiff > ( screenHeight / 3 ) ) { roy.myclear.utils.L . e ( "keyboard opened" ) ; mIsKeyboardShow = true ; } else { roy.myclear.utils.L . e ( "keyboard closed" ) ; mIsKeyboardShow = false ; } } 
@ java.lang.Override public void add ( java.lang.String name ) { int idToSet = ( java.lang.Math . max ( eventList . lastKey () , taskList . lastKey () ) ) + 1 ; lifetracker.calendar.CalendarEntryImpl ft = new lifetracker.calendar.CalendarEntryImpl ( name , null , null , idToSet ) ; taskList . put ( idToSet , ft ) ; } 
@ java.lang.Override public void addActionListener ( org.g6.laas.core.rule.action.RuleAction action , org.g6.laas.core.rule.action.ActionCondition condition ) { java.util.List < org.g6.laas.core.rule.action.RuleAction > actionList = actions . get ( condition ) ; if ( actionList == null ) { actionList = new java.util.ArrayList <> () ; } actionList . add ( action ) ; actions . put ( condition , actionList ) ; } 
private int finMidIndex ( java.lang.String literal ) { int startOffset = ( prefix . length () ) + 1 ; int endOffset = ( ( literal . length () ) - ( suffix . length () ) ) - 1 ; int midIndex = literal . substring ( startOffset , endOffset ) . indexOf ( mid ) ; if ( midIndex >= 0 ) { return midIndex + startOffset ; } return - 1 ; } 
@ java.lang.Override public void handleRequest ( java.net.InetAddress address , request.Message acknowleged ) { dht_node.DistributedHashTable dht = dht_node.DistributedHashTable . getIntance () ; dht . setMySelf ( this . you ) ; dht . setLeft ( this . left ) ; dht . setRight ( this . right ) ; request.CommunicationHandler . sendMessage ( new request.ACK ( getRequestID () ) , address ) ; dht . checkNeighbor () ; } 
public boolean isChildOf ( build.games.wraithaven.gui.MenuComponentHeirarchy parent , build.games.wraithaven.gui.MenuComponentHeirarchy child ) { if ( parent == child ) { return true ; } for ( build.games.wraithaven.gui.MenuComponentHeirarchy c : parent . getChildren () ) { if ( isChildOf ( c , child ) ) { return true ; } } return false ; } 
public static org.gbif.utils.file.tabular.TabularDataFileReader < java.util.List < java.lang.String > > newTabularFileReader ( java.io.InputStream in , char quoteChar , char delimiterChar , java.lang.String endOfLineSymbols , java.nio.charset.Charset charset , boolean headerLine ) { com.google.common.base.Preconditions . checkNotNull ( in , "An InputStream must be provided" ) ; com.google.common.base.Preconditions . checkNotNull ( charset , "A Charset must be provided" ) ; return new org.gbif.utils.file.tabular.SuperCsvFileReader ( in , quoteChar , delimiterChar , endOfLineSymbols , charset , true ) ; } 
@ org.junit.Test @ org.springframework.security.test.context.support.WithMockUser public void shouldFollow ( ) throws java.lang.Exception { com.sysc4806.User u2 = new com.sysc4806.User () ; userRepository . save ( u2 ) ; com.sysc4806.User user = com.sysc4806.AuthenticationController . CurrentUser () ; this . mockMvc . perform ( org.springframework.test.web.servlet.request.MockMvcRequestBuilders . get ( ( "/user/follow?id=" + ( u2 . getId () ) ) ) ) . andExpect ( org.springframework.test.web.servlet.result.MockMvcResultMatchers . status () . isOk () ) ; user = userRepository . findOne ( user . getId () ) ; assert user . isFollowing ( u2 ) ; } 
@ cpw.mods.fml.relauncher.SideOnly ( value = cpw.mods.fml.relauncher.Side.CLIENT ) public void updateProgressBar ( int index , int value ) { switch ( index ) { case 0 : this . termoFluidFurnace . smeltingTicks = value ; break; case 1 : this . termoFluidFurnace . totalSmeltingTicks = value ; break; case 2 : this . termoFluidFurnace . wasteFluidAmount = value ; break; case 3 : this . termoFluidFurnace . internalTemp = value ; break; } } 
public void maximizeLayout () { if ( maximizableProperty . get () ) { if ( floatingProperty . get () ) { stageFloatable . setMaximized ( true ) ; } else { station . maximize ( this ) ; } maximizingProperty . set ( true ) ; } } 
@ java.lang.Override public void dragInteractor ( org.reactome.web.diagram.data.interactors.model.InteractorEntity interactor , org.reactome.web.diagram.data.layout.Coordinate delta ) { delta = delta . divide ( context . getDiagramStatus () . getFactor () ) ; interactor . drag ( delta . getX () , delta . getY () ) ; uk.ac.ebi.pwp.structures.quadtree.client.Box visibleArea = context . getVisibleModelArea ( viewportWidth , viewportHeight ) ; drawInteractors ( visibleArea ) ; interactorsManager . updateInteractor ( interactor ) ; } 
protected void checkInputValidity ( java.lang.String input ) throws tools.obfuscation.keyobfuscator.exception.InvalidInputException { if ( input . isEmpty () ) throw new tools.obfuscation.keyobfuscator.exception.InvalidInputException ( "Empty" ) ; if ( ( input . length () ) != ( length ) ) throw new tools.obfuscation.keyobfuscator.exception.InvalidInputException ( "BadLength" ) ; if ( regex . matcher ( input ) . matches () ) throw new tools.obfuscation.keyobfuscator.exception.InvalidInputException ( "BadFormat" ) ; } 
@ android.support.annotation.Nullable @ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { android.view.View view = inflater . inflate ( R.layout.tv_show_search_fragment , container , false ) ; rv = ( ( android.support.v7.widget.RecyclerView ) ( view . findViewById ( R.id.searched_tv_series_list ) ) ) ; rv . setLayoutManager ( new android.support.v7.widget.LinearLayoutManager ( rv . getContext () ) ) ; a501.itis.kpfu.ru.themoviedbapplication.adapter.SearchedTvShowListAdapter adapter = new a501.itis.kpfu.ru.themoviedbapplication.adapter.SearchedTvShowListAdapter ( getActivity () , list ) ; rv . setAdapter ( adapter ) ; return view ; } 
@ org.jetbrains.annotations.NotNull public boolean isPlayerOpped ( @ org.jetbrains.annotations.NotNull final net.minecraft.command.ICommandSender sender , final java.lang.String cmdName ) { if ( sender instanceof net.minecraft.entity.player.EntityPlayer ) { return net.minecraftforge.fml.common.FMLCommonHandler . instance () . getMinecraftServerInstance () . getPlayerList () . canSendCommands ( ( ( net.minecraft.entity.player.EntityPlayer ) ( sender ) ) . getGameProfile () ) ; } return true ; } 
public void add ( T item ) { for ( int i = 0 ; i < ( _data . size () ) ; i ++ ) { if ( ( ( ( java.lang.Comparable ) ( _data . get ( i ) ) ) . compareTo ( ( ( java.lang.Comparable ) ( item ) ) ) ) >= 0 ) { _data . add ( i , item ) ; return; } } _data . add ( _data . size () , item ) ; } 
protected void close () { try { output . close () ; input . close () ; socket . close () ; run = false ; } catch ( java.io.IOException ioe ) { org.pmw.tinylog.Logger . error ( "There was a issue trying to close the socket or I/O streams: {}" , ioe ) ; } org.pmw.tinylog.Logger . info ( "{} sucessfully disconnected from the server" , username ) ; } 
public static com.github.yoojia.inputs.Schema RangeValue ( final int min , final int max ) { return com.github.yoojia.inputs.ValueSchema . ABTest ( new com.github.yoojia.inputs.RangeValueBridge ( max , max ) ) . msg ( ( ( ( ( "输入数值大小必须在[" + min ) + "," ) + max ) + "]之间" ) ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/emp/myview/searchBaseDescription/searchBaseItems.do" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.util.List < com.psk.pms.model.DescItemDetail.ItemDetail > searchBaseItem ( @ org.springframework.web.bind.annotation.RequestParam ( value = "itemName" ) java.lang.String itemName , @ org.springframework.web.bind.annotation.RequestParam ( value = "itemType" ) java.lang.String itemType , @ org.springframework.web.bind.annotation.RequestParam ( value = "descType" ) java.lang.String descType ) { com.psk.pms.controller.SearchController.LOGGER . info ( "method = getDescItem()" ) ; java.util.Map < java.lang.String , java.lang.Object > request = new java.util.Hashtable < java.lang.String , java.lang.Object > () ; request . put ( "itemName" , itemName . toUpperCase () ) ; request . put ( "itemType" , itemType . toUpperCase () ) ; request . put ( "descType" , itemType . toLowerCase () ) ; java.util.List < com.psk.pms.model.DescItemDetail.ItemDetail > itemsDetail = itemService . getBaseItemNames ( request , itemType ) ; return itemsDetail ; } 
private java.lang.String generateResultingJsonString ( char wrappingQuote , java.util.Map < java.lang.String , java.lang.Object > jsonMap ) { net.minidev.json.JSONObject jsonObject = new net.minidev.json.JSONObject ( jsonMap ) ; java.lang.String newJson = jsonObject . toJSONString ( JSONStyle.LT_COMPRESS ) ; if ( ( newJson . charAt ( 1 ) ) != wrappingQuote ) { return replaceUnescapedOccurrencesOfCharacterInText ( newJson , newJson . charAt ( 1 ) , wrappingQuote ) ; } return newJson ; } 
private void inviteMember ( java.lang.String member ) { if ( dataProvider . checkProjectMember ( loadProjectName , member , loadAccount ) ) { dataProvider . addProjectMember ( new com.comet_000.myapplication.TableProjectMember ( loadProjectName , loadAccount , member , "Waiting" ) ) ; java.lang.String message = mailManager . makeInvitation ( loadProjectName , loadProjectDes , loadAccount ) ; com.comet_000.myapplication.MailSender myMailSender = new com.comet_000.myapplication.MailSender ( member , "P2P invitation" , message , loadAccount , loadPassword , this ) ; myMailSender . send () ; } else { toastMaker . makeToast ( "This user has already been invited to project!" ) ; } } 
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { if ( ( this ) == obj ) { return true ; } if ( obj == null ) { return false ; } if ( ! ( obj instanceof adventofcode.SantaDeliveries.Coord ) ) { return false ; } adventofcode.SantaDeliveries.Coord other = ( ( adventofcode.SantaDeliveries.Coord ) ( obj ) ) ; if ( ( x ) != ( other.x ) ) { return false ; } if ( ( y ) != ( other.y ) ) { return false ; } return true ; } 
protected void useAbility ( hackbotcore.Unit target ) { assert ( selected ) != null ; assert ( selectedAbility ) != null ; if ( selected . useAbility ( selectedAbility , target ) ) { java.lang.System.out . println ( "test" ) ; for ( hackbotcore.Unit u : units ) { if ( ( u.sectors . size () ) == 0 ) { units . remove ( u ) ; } } } } 
public org.team2168.utils.BNO055.SystemStatus getSystemStatus ( ) throws java.lang.InterruptedException { org.team2168.utils.BNO055.SystemStatus status = new org.team2168.utils.BNO055.SystemStatus () ; write8 ( org.team2168.utils.BNO055.reg_t.BNO055_PAGE_ID_ADDR , ( ( byte ) ( 0 ) ) ) ; status.system_status = read8 ( org.team2168.utils.BNO055.reg_t.BNO055_SYS_STAT_ADDR ) ; status.self_test_result = read8 ( org.team2168.utils.BNO055.reg_t.BNO055_SELFTEST_RESULT_ADDR ) ; status.system_error = read8 ( org.team2168.utils.BNO055.reg_t.BNO055_SYS_ERR_ADDR ) ; java.lang.Thread . sleep ( 200 ) ; return status ; } 
public static x10.xrx.FinishState activityCreationBookkeeping () { x10.xrx.Activity activity = x10.xrx.Runtime . activity () ; x10.xrx.FinishState fs = activity . finishState () ; fs . notifyRemoteContinuationCreated () ; fs . notifySubActivitySpawn ( x10.xrx.Runtime . home () ) ; fs . notifyActivityCreation$O ( x10.xrx.Runtime . home () , null ) ; return fs ; } 
private void fetchViews () { searchView = ( ( android.widget.SearchView ) ( findViewById ( R.id.searchview_id ) ) ) ; recyclerView = ( ( android.support.v7.widget.RecyclerView ) ( findViewById ( R.id.search_result_listview ) ) ) ; if ( ( recyclerView ) == null ) { android.util.Log . e ( xodebox.food.ui.view.SearchResultView.TAG , "fetchViews: Cannot find recycler view." ) ; } } 
public void removeSongFromAllPlaylists ( BE.Music selectedSong ) { for ( BE.Playlist playlist : playlists ) { for ( BE.Music m : playlist . getMusiclist () ) { if ( m . getTitle () . equals ( selectedSong . getTitle () ) ) { playlist . removeMusic ( m ) ; GUI.Model.PlaylistModel.instance . updatePlaylistView ( playlist . getMusiclist () ) ; } } } } 
public void detailSelection ( javax.swing.JTable table , int row ) { if ( row < 0 ) { javax.swing.JOptionPane . showMessageDialog ( com.yaz.vip.util.AppUtil . getInstance () . getMainScreenHandle () , "No Item Found" , "Search Result" , javax.swing.JOptionPane.INFORMATION_MESSAGE ) ; } else { java.lang.System.out . println ( ( "BrowseVolunteer,detailSelection,getValueAt: " + ( table . getValueAt ( row , 0 ) ) ) ) ; com.yaz.vip.util.AppUtil . getInstance () . getCenterPanel () . setVoluntersPanel ( 0 , table . getValueAt ( row , 0 ) . toString () ) ; } } 
@ java.lang.Override protected java.lang.Void doInBackground ( java.lang.Void . . . params ) { int progress = 0 ; for ( com.filemanager.files.FileHolder fh : mFileHolders ) { if ( mCancel ) { break; } recursiveDelete ( fh . getFile () ) ; try { dialog . setProgress ( progress ) ; } catch ( java.lang.Exception e ) {} progress ++ ; } return null ; } 
public void merge ( com.jflop.server.runtime.data.processed.MethodFlowStatistics stat ) { this . throughputPerSec += stat.throughputPerSec ; this . minTime = java.lang.Math . min ( this . minTime , stat.minTime ) ; this . maxTime = java.lang.Math . max ( this . maxTime , stat.maxTime ) ; this . averageTime = ( ( this . averageTime ) + ( stat.averageTime ) ) / 2 ; } 
@ java.lang.Override public float getScaleFactor ( int sourceWidth , int sourceHeight , int requestedWidth , int requestedHeight ) { int minIntegerFactor = java.lang.Math . min ( ( sourceHeight / requestedHeight ) , ( sourceWidth / requestedWidth ) ) ; return minIntegerFactor == 0 ? 1 : java.lang.Integer . highestOneBit ( minIntegerFactor ) ; } 
public void fillUserPanel ( Model.User [] user_list ) { UsersPanel . removeAll () ; for ( Model.User u : user_list ) { GUI.UserView uv = new GUI.UserView () ; uv . setUser ( u ) ; } UsersPanel . repaint () ; UsersPanel . revalidate () ; } 
public void onTrafficRedirect ( java.lang.String traffic , boolean on ) { switch ( traffic ) { case "HTTP" : mRouteMan . redirectHTTP ( on , mRootMan ) ; break; case "HTTPS" : mRouteMan . redirectHTTPS ( on , mRootMan ) ; break; case "DNS" : mRouteMan . redirectDNS ( on , mRootMan ) ; } } 
@ org.junit.Test public void tasks_sonarrunner_depens_on_results_in_item_setup_of_task_sonarrunner_depends_on ( ) throws java.lang.Exception { java.lang.String text = "tasks.sonarrunner.dependson check" ; java.io.InputStream is = new java.io.ByteArrayInputStream ( text . getBytes () ) ; de.jcup.egradle.core.model.groovyantlr.GradleModelBuilder b = new de.jcup.egradle.core.model.groovyantlr.GradleModelBuilder ( is ) ; de.jcup.egradle.core.model.Model model = b . build ( null ) ; de.jcup.egradle.core.model.Item [] items = model . getRoot () . getChildren () ; assertEquals ( 1 , items.length ) ; de.jcup.egradle.core.model.Item taskSetupItem = items [ 0 ] ; assertEquals ( ItemType.TASKS , taskSetupItem . getItemType () ) ; assertEquals ( "tasks.sonarrunner.dependson" , taskSetupItem . getName () ) ; } 
public int getPlayerForColumn ( final int column , final java.lang.String playerFigure ) { int playerColumnCount = 0 ; for ( int i = 0 ; i < ( board . getFiguresArray () . length ) ; i ++ ) { if ( ( ( board . getFigure ( i , column ) ) != null ) && ( ( board . getFigure ( i , column ) . toString () ) == playerFigure ) ) { playerColumnCount ++ ; } } return playerColumnCount ; } 
private boolean isUsersEmpty ( java.lang.String login ) throws by.tr.library.dao.exception.DAOException { boolean result = false ; try ( java.sql.Connection connection = by.tr.library.pool.ConnectionPool . getInstance () . getConnection () ; java.sql.Statement statement = connection . createStatement () ) { java.sql.ResultSet set = statement . executeQuery ( by.tr.library.dao.impl.SQLCommonDao.SELECT_USERS ) ; if ( set . next () ) { result = true ; } } catch ( java.sql.SQLException e ) { throw new by.tr.library.dao.exception.DAOException ( "Select users dao exception" , e ) ; } return result ; } 
@ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public static void registerBlocks ( net.minecraftforge.event.RegistryEvent.Register < net.minecraft.block.Block > event ) { BaseMetals.logger . fatal ( "BLOCK REGISTER!" ) ; for ( com.mcmoddev.lib.material.MMDMaterial mat : com.mcmoddev.lib.init.Materials . getMaterialsByMod ( BaseMetals.MODID ) ) { for ( net.minecraft.block.Block block : mat . getBlocks () ) { if ( block . getRegistryName () . getResourceDomain () . equals ( BaseMetals.MODID ) ) { event . getRegistry () . register ( block ) ; } } } if ( ( com.mcmoddev.basemetals.init.Blocks.humanDetector ) != null ) { event . getRegistry () . register ( com.mcmoddev.basemetals.init.Blocks.humanDetector ) ; } } 
@ java.lang.Override public void setEditedObject ( org.openflexo.antar.binding.AbstractBinding object ) { setEditedObject ( object , true ) ; if ( object != null ) { if ( ( object . getBindingDefinition () ) != null ) { setBindingDefinition ( object . getBindingDefinition () ) ; } if ( ( object . getOwner () ) != null ) { setBindable ( object . getOwner () ) ; } } else { setBindingDefinition ( null ) ; setBindable ( null ) ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/mainpage" ) public org.springframework.web.servlet.ModelAndView mainpage ( javax.servlet.http.HttpSession session ) { org.springframework.web.servlet.ModelAndView mav = new org.springframework.web.servlet.ModelAndView () ; java.lang.String sid = ( ( java.lang.String ) ( session . getAttribute ( "sid" ) ) ) ; entity.Student_info studentinfo = studao . getStudentinfoBysid ( sid ) ; session . setAttribute ( "sname" , studentinfo . getSname () ) ; mav . setViewName ( "mainpage" ) ; mav . addObject ( "student" , studentinfo ) ; return mav ; } 
public static void handle ( final java.lang.String info , final java.lang.Exception e , java.lang.Class < ? > derivedClass , java.lang.Class < ? > baseClass , java.lang.Class < ? > subClass ) { ExceptionHandler . handle ( info , e , true , derivedClass , baseClass , subClass ) ; } 
public void keyReleased ( java.awt.event.KeyEvent e ) { if ( ( e . getKeyCode () ) == ( java.awt.event.KeyEvent.VK_A ) ) { right = false ; } else if ( ( e . getKeyCode () ) == ( java.awt.event.KeyEvent.VK_D ) ) { left = false ; } if ( ( e . getKeyCode () ) == ( java.awt.event.KeyEvent.VK_W ) ) { down = false ; } else if ( ( e . getKeyCode () ) == ( java.awt.event.KeyEvent.VK_S ) ) { up = false ; } } 
@ java.lang.Override public void adjustPBest () { java.lang.System.out . println ( "________________________ s" ) ; java.lang.System.out . println ( "Adjusting using sample: " ) ; pBest_sample . print () ; print () ; for ( int i = 0 ; i < ( probs.length ) ; i ++ ) { double k = pBest_sample . getTable () . get ( probs [ i ] . getNode () ) ; probs [ i ] . bias ( k , epsilon ) ; } print () ; java.lang.System.out . println ( "________________________ f" ) ; } 
public void testConnectSocket () { try { @ lombok.Cleanup javax.net.ssl.SSLSocket socket = factory . createSocket ( null ) ; factory . connectSocket ( 1000 , socket , new org.apache.http.HttpHost ( sampleTlsEndpoint . getHostName () ) , sampleTlsEndpoint , null , null ) ; } catch ( java.io.IOException e ) { android.util.Log . e ( at.bitfire.davdroid.webdav.TlsSniSocketFactoryTest.TAG , "I/O exception" , e ) ; fail () ; } } 
@ org.junit.Test public void deleteByIdAndTenantIdAndType ( ) throws java.lang.Exception { java.util.List < net.smartcosmos.dao.things.domain.ThingEntity > deleteList = repository . deleteByIdAndTenantIdAndTypeIgnoreCase ( id , tenantId , type ) ; org.junit.Assert . assertFalse ( deleteList . isEmpty () ) ; org.junit.Assert . assertEquals ( 1 , deleteList . size () ) ; org.junit.Assert . assertEquals ( id , deleteList . get ( 0 ) . getId () ) ; } 
@ java.lang.Override public void onBindViewHolder ( com.brunocascio.expensis.ExpenseAdapter.ExpenseViewHolder viewHolder , int i ) { com.brunocascio.expensis.Expense e = data . get ( i ) ; viewHolder.description . setText ( e . getDescription () ) ; viewHolder.amount . setText ( ( ( "$" + ( e . getAmount () ) ) + "" ) ) ; viewHolder.date . setText ( e . getFullDateWithOutYear () ) ; setAnimation ( viewHolder.container ) ; } 
public gov.nasa.worldwind.geom.Vec4 transformModelToBoxCenter ( gov.nasa.worldwind.geom.Vec4 modelPoint ) { gov.nasa.worldwind.geom.Vec4 [] unitAxes = new gov.nasa.worldwind.geom.Vec4 [] { ru , su , tu } ; gov.nasa.worldwind.geom.Vec4 origin = this . getCenter () ; gov.nasa.worldwind.geom.Matrix transformMatrix = gov.nasa.worldwind.geom.Matrix . fromLocalOrientation ( origin , unitAxes ) . getInverse () ; return modelPoint . transformBy4 ( transformMatrix ) ; } 
public java.lang.String displayAddForm ( java.security.Principal principal , org.springframework.ui.ModelMap model , org.springframework.web.servlet.mvc.support.RedirectAttributes requestAttributes ) { if ( principal != null ) { java.lang.String userName = principal . getName () ; if ( userName != null ) { model . addAttribute ( tran.example.service.AddPostControllerService.LOGGED_IN_NAME_KEY , userName ) ; return tran.example.service.AddPostControllerService.ADD_POST_PAGE ; } else { requestAttributes . addAttribute ( tran.example.service.AddPostControllerService.MESSAGE_KEY , tran.example.service.AddPostControllerService.NOT_LOGGED_IN_ERROR_MESSAGE ) ; return tran.example.service.AddPostControllerService.SIGNIN_PAGE ; } } else { requestAttributes . addAttribute ( tran.example.service.AddPostControllerService.MESSAGE_KEY , tran.example.service.AddPostControllerService.NOT_LOGGED_IN_ERROR_MESSAGE ) ; return tran.example.service.AddPostControllerService.SIGNIN_PAGE ; } } 
@ org.junit.Test public void testOneCommandInMultiLines ( ) throws java.lang.Throwable { final java.lang.String SCRIPT_TEXT = "drop table if exists multiCmdTbl;create table \nmultiCmdTbl " + "(key int);show tables; --one command in multiple lines" ; final java.lang.String EXPECTED_PATTERN = " multicmdtbl " ; java.util.List < java.lang.String > argList = getBaseArgs ( org.apache.hive.beeline.TestBeeLineWithArgs.miniHS2 . getBaseJdbcURL () ) ; testScriptFile ( SCRIPT_TEXT , EXPECTED_PATTERN , true , argList ) ; final java.lang.String SCRIPT_TEXT_DROP = "drop table\nmultiCmdTbl;show tables;" ; testScriptFile ( SCRIPT_TEXT_DROP , EXPECTED_PATTERN , false , argList ) ; } 
public void setCell ( int x , int y , java.lang.String cellName ) { if ( ( ( ( x < 0 ) || ( y < 0 ) ) || ( x >= ( nbHCells ) ) ) || ( y >= ( nbVCells ) ) ) return; map . get ( y ) . get ( x ) . setKey ( cellsTypes . get ( cellName ) ) ; } 
public void nextSong () { if ( isEmpty () ) { return; } ( selectedTrack ) ++ ; if ( ( selectedTrack ) >= 12 ) { selectedTrack = 0 ; } while ( ( contents . get ( selectedTrack ) . isEmpty () ) || ( ( contents . get ( selectedTrack ) ) == null ) ) { ( selectedTrack ) ++ ; if ( ( selectedTrack ) >= 11 ) { selectedTrack = 0 ; } } } 
public void resizeComponents () { java.awt.Component temp ; for ( int i = 0 ; i < ( content . getComponentCount () ) ; i ++ ) { if ( ( temp = content . getComponent ( i ) ) . isValid () ) { if ( rcs [ i ] . responsive ) resizeComponent ( i , temp ) ; else resizeFixedComponent ( i , temp ) ; } } } 
public java.lang.String addToClasspathImpl ( java.util.Collection < java.lang.String > classpaths , java.util.Collection < java.lang.String > paths ) { java.util.List < java.lang.String > allPaths = new java.util.ArrayList <> () ; if ( classpaths != null ) { allPaths . addAll ( classpaths ) ; } if ( paths != null ) { allpaths . addAll ( classpaths ) ; } return org.apache.commons.lang.StringUtils . join ( allPaths , org.apache.storm.utils.Utils.CLASS_PATH_SEPARATOR ) ; } 
@ java.lang.Override protected void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { switch ( requestCode ) { case Constant.RESULT_INPUT_FILE : { try { audioURL = new java.io.File ( data . getData () . getPath () ) . toURI () . toURL () ; } catch ( java.net.MalformedURLException e ) { e . printStackTrace () ; audioURL = null ; android.util.Log . d ( "InputFileError" , "Malformed URL Input file" ) ; isFileChosen = true ; } break; } } super . onActivityResult ( requestCode , resultCode , data ) ; } 
@ java.lang.Override public void init ( android.os.Bundle savedInstanceState ) { addSlide ( com.culture.coffee.coffee_culture.SampleSlide . newInstance ( R.layout.first_fragment ) ) ; addSlide ( com.culture.coffee.coffee_culture.SampleSlide . newInstance ( R.layout.second_fragment ) ) ; addSlide ( com.culture.coffee.coffee_culture.SampleSlide . newInstance ( R.layout.third_fragment ) ) ; addSlide ( com.culture.coffee.coffee_culture.SampleSlide . newInstance ( R.layout.fourth_fragment ) ) ; setBarColor ( android.graphics.Color . parseColor ( "#0D0A05" ) ) ; setSeparatorColor ( android.graphics.Color . parseColor ( "#BF944A" ) ) ; showSkipButton ( true ) ; setProgressButtonEnabled ( true ) ; setVibrate ( true ) ; setVibrateIntensity ( 30 ) ; } 
public void update ( float deltaTime ) { com.badlogic.gdx.ai.GdxAI . getTimepiece () . update ( deltaTime ) ; com.badlogic.gdx.ai.msg.MessageManager . getInstance () . update () ; dynamicsWorld . stepSimulation ( deltaTime , 10 , ( 1.0F / 240.0F ) ) ; for ( com.mygdx.game.GameObject object : objectsById . values () ) { object . update ( deltaTime ) ; } } 
@ org.junit.Test public void test_noArgs_defaultCredentialsFile () { java.io.File file = com.here.account.oauth2.tutorial.GetHereClientCredentialsAccessTokenTutorial . getDefaultCredentialsFile () ; java.lang.String [] args = new java.lang.String [] {} ; com.here.account.oauth2.tutorial.GetHereClientCredentialsAccessTokenTutorial tutorial = com.here.account.oauth2.tutorial.GetHereClientCredentialsAccessTokenTutorialTest . mockTutorial ( args ) ; if ( null == file ) { com.here.account.oauth2.tutorial.GetHereClientCredentialsAccessTokenTutorialTest . setTestCreds ( tutorial , com.here.account.oauth2.tutorial.Helper . getSystemCredentials () ) ; } tutorial . getToken () ; } 
public synchronized void setEpisodeId ( long argId ) { this . mEpisodeId = argId ; org.bottiger.podcast.listeners.PaletteObservable . registerListener ( this ) ; if ( ( getEpisode () . offset ) > 0 ) { setProgressMs ( getEpisode () . offset ) ; invalidate () ; } } 
@ java.lang.Override protected void onPostExecute ( java.lang.Void aVoid ) { super . onPostExecute ( aVoid ) ; com.orhanobut.logger.Logger . d ( ( ( stringWallet ) + "" ) ) ; if ( ( stringWallet ) == null ) { callback . onTaskexecuted ( "" , "Could not get wallet" ) ; } else if ( ! ( android.text.TextUtils . isEmpty ( stringWallet . optString ( "error" ) ) ) ) { callback . onTaskexecuted ( "" , stringWallet . toString () ) ; } else { callback . onTaskexecuted ( stringWallet . toString () , "" ) ; } } 
private FileWriter fileforFace ( int i ) { if ( i == 0 ) { return front ; } if ( i == 1 ) { return right ; } if ( i == 2 ) { return left ; } if ( i == 3 ) { return down ; } if ( i == 4 ) { return top ; } if ( i == 5 ) { return back ; } } 
private java.util.List < java.util.Map < java.lang.String , java.lang.Object > > getStandards ( java.lang.Integer codeId , java.lang.String rootNodeId ) { java.util.List < java.util.Map < java.lang.String , java.lang.Object > > codes = this . getSubdomainRepository () . getStandards ( codeId , rootNodeId ) ; for ( java.util.Map < java.lang.String , java.lang.Object > code : codes ) { code . put ( org.ednovo.gooru.domain.service.subdomain.NODE , this . getSubdomainRepository () . getStandards ( ( ( java.lang.Number ) ( code . get ( org.ednovo.gooru.domain.service.subdomain.CODE_ID ) ) ) . intValue () , rootNodeId ) ) ; } return codes ; } 
public static java.util.List < main.pi.pathfinder.Area > createGraphFromMap ( main.pi.controller.Map map , int robotWidth , int robotHeight ) { java.util.List < main.pi.pathfinder.ObstacleEdge > obstacleEdges = main.pi.pathfinder.GraphConverter . createObstacleEdges ( map . getObstacles () ) ; main.pi.pathfinder.GraphConverter . sortObstacleEdges ( obstacleEdges ) ; java.util.List < main.pi.pathfinder.Area > graph = main.pi.pathfinder.GraphConverter . createGraphFromObstacleEdges ( map , obstacleEdges ) ; main.pi.pathfinder.GraphConverter . removeTooSmallAreas ( graph , robotWidth , robotHeight ) ; return graph ; } 
public void printPossibleSchedules () { for ( model.Schedule schedule : possibleSchedules ) { for ( model.ClassSchedule classSchedule : schedule.classSchedules ) java.lang.System.out . println ( ( ( schedule + ": " ) + ( classSchedule.teacher.name ) ) ) ; java.lang.System.out . println ( schedule ) ; java.lang.System.out . println ( "------------------------------------------------------------" ) ; } } 
public static boolean authenticate_user ( java.lang.String user , java.lang.String password ) { java.lang.String Authenticated = "Authenticated" ; java.lang.String result = frame.AuthorizationPanel.cl . authenticate ( user , password ) ; if ( result . equals ( Authenticated ) ) { return true ; } else { javax.swing.JOptionPane . showMessageDialog ( null , result , "Update" , javax.swing.JOptionPane.WARNING_MESSAGE ) ; return false ; } } 
@ java.lang.Override public ch.ethz.idsc.tensor.Scalar costIncrement ( ch.ethz.idsc.owly.math.state.StateTime from , java.util.List < ch.ethz.idsc.owly.math.state.StateTime > trajectory , ch.ethz.idsc.owly.math.flow.Flow flow ) { ch.ethz.idsc.tensor.Scalar sum = ch.ethz.idsc.tensor.RealScalar . of ( 0 ) ; for ( int i = 0 ; i < ( flow . getU () . length () ) ; i ++ ) { sum = sum . add ( Norm._2 . of ( flow . getU () ) . add ( ch.ethz.idsc.tensor.RealScalar . of ( 0.1 ) ) ) ; } return sum . multiply ( ch.ethz.idsc.owly.math.state.Trajectories . timeIncrement ( from , trajectory ) ) ; } 
public static java.lang.String getHalIDFromHalDocID ( java.lang.String halDocID ) { int ind = halDocID . indexOf ( "v" ) ; java.lang.String halID = "" ; if ( ind > ( - 1 ) ) { halID = halDocID . substring ( 0 , ind ) ; } return halID ; } 
public static void loadDrawables ( java.lang.Class < ? > clz ) { final java.lang.reflect.Field [] fields = clz . getDeclaredFields () ; for ( java.lang.reflect.Field field : fields ) { final int drawableId ; try { drawableId = field . getInt ( clz ) ; imageList . put ( drawableId , android.graphics.BitmapFactory . decodeResource ( context . getResources () , drawableId ) ) ; } catch ( java.lang.Exception e ) { continue; } } } 
@ java.lang.Override public void run () { try { textarea . removeAllLineHighlights () ; sketch . prepare () ; sketch . build ( verbose , saveHex ) ; statusNotice ( processing.app.I18n . tr ( "Done compiling." ) ) ; } catch ( processing.app.helpers.PreferencesMapException e ) { statusError ( processing.app.I18n . format ( processing.app.I18n . tr ( "Error while compiling: missing '{0}' configuration parameter" ) , e . getMessage () ) ) ; } catch ( java.lang.Exception e ) { status . unprogress () ; statusError ( e ) ; } status . unprogress () ; toolbar . deactivateRun () ; } 
public void mousePressed ( java.awt.event.MouseEvent me ) { int x = me . getX () ; int y = me . getY () ; if ( ( originPoint ) == null ) { originPoint = new java.awt.Point ( x , y ) ; } else { java.awt.Point destination = new java.awt.Point ( x , y ) ; Model.ColoredLine2D line = new Model.ColoredLine2D ( originPoint , destination ) ; originPoint = destination ; lines . add ( line ) ; repaint () ; } } 
@ java.lang.Override public void analyse () { super . analyse () ; if ( ( expr ) != null ) { ( ( ashc.grammar.Node ) ( expr ) ) . analyse () ; if ( ! ( ( ( ashc.grammar.Node ) ( expr ) ) . errored ) ) { final ashc.semantics.Semantics.TypeI type = ashc.grammar.Semantics . filterNullType ( expr . getExprType () ) ; var = new ashc.semantics.Member.Variable ( id , type ) ; ashc.grammar.Semantics . addVar ( var ) ; analyseProperty ( type ) ; } } } 
public void update ( float delta ) { player . update () ; com.badlogic.gdx.math.Vector2 pos = player . getBody () . getPosition () ; camera.position.x = ( pos.x ) * ( MainClass.PIXELSINMETER ) ; camera . update () ; world . step ( delta , 10 , 10 ) ; } 
@ java.lang.Override public void playnext ( boolean torf ) { int position = getnextPos ( torf ) ; if ( ( position >= 0 ) && ( position < ( playList . size () ) ) ) { playingIndex = position ; CurrentSong = playList . get ( playingIndex ) ; fastplay () ; } else { isPlaying = false ; paused = true ; updateService ( com.rks.musicx.misc.utils.Constants.PLAYSTATE_CHANGED ) ; } } 
public boolean renameFileOrDir ( java.lang.String currentfolder , java.lang.String oldname , java.lang.String newname ) throws java.io.IOException , java.net.SocketException { boolean renamed = false ; try { if ( ! ( client . isConnected () ) ) login () ; renamed = client . rename ( ( ( currentfolder + "/" ) + oldname ) , ( ( currentfolder + "/" ) + newname ) ) ; } catch ( java.io.IOException e ) { login () ; renameFileOrDir ( currentfolder , oldname , newname ) ; } return renamed ; } 
@ org.junit.Test public void testPopTopCard () { models.Hand handTest = new models.Hand () ; models.Card cardTest = new models.Card ( 2 , 'd' , false ) ; handTest . pushNewCard ( 1 , cardTest ) ; handTest . popTopCard ( 1 ) ; org.junit.Assert . assertEquals ( handTest . getTopCardValue ( 1 ) , 0 ) ; } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { ru.dubki.logger.Logger . log ( this ) ; android.view.View rootView = inflater . inflate ( R.layout.race_tabs , container , false ) ; mSectionsPagerAdapter = new org.vimteam.marshalone.activity.MarksTabFragment.SectionsPagerAdapter ( getFragmentManager () ) ; mViewPager = ( ( android.support.v4.view.ViewPager ) ( rootView . findViewById ( R.id.container ) ) ) ; mViewPager . setAdapter ( mSectionsPagerAdapter ) ; if ( getArguments () . getBoolean ( org.vimteam.marshalone.activity.MarksTabFragment.WIDESCREEN ) ) mViewPager . setCurrentItem ( 0 ) ; else mViewPager . setCurrentItem ( 1 ) ; return rootView ; } 
@ java.lang.Override protected void init () { androidlab.edu.cn.nucyixue.ui.teachPack.live.TeachLiveFragment mLive = androidlab.edu.cn.nucyixue.ui.teachPack.live.TeachLiveFragment.INSTANCE ; androidlab.edu.cn.nucyixue.ui.teachPack.map.TeachMapFragment mNear = androidlab.edu.cn.nucyixue.ui.teachPack.map.TeachMapFragment.INSTANCE ; androidlab.edu.cn.nucyixue.ui.teachPack.source.TeachSourceFragment mSource = androidlab.edu.cn.nucyixue.ui.teachPack.source.TeachSourceFragment . getInstance () ; mFragmentList . add ( mLive ) ; mFragmentList . add ( mSource ) ; mFragmentList . add ( mNear ) ; androidlab.edu.cn.nucyixue.ui.teachPack.TeachFragment.TeachFragmentPagerAdapter mTeachFragmentPagerAdapter = new androidlab.edu.cn.nucyixue.ui.teachPack.TeachFragment.TeachFragmentPagerAdapter ( getChildFragmentManager () , mString , mFragmentList ) ; mTeachMainViewpager . setAdapter ( mTeachFragmentPagerAdapter ) ; mTeachMainTablayout . setupWithViewPager ( mTeachMainViewpager ) ; } 
public static void wtf ( java.lang.String tag , java.lang.Throwable exception , boolean checkLoggable ) { if ( ( com.vwo.mobile.utils.VWOLog.LEVEL ) <= ( com.vwo.mobile.utils.VWOLog.SEVERE ) ) { if ( checkLoggable ) { if ( android.util.Log . isLoggable ( tag , Log.ERROR ) ) { io.sentry.Sentry . capture ( exception ) ; android.util.Log . wtf ( tag , exception ) ; } } else { io.sentry.Sentry . capture ( exception ) ; android.util.Log . wtf ( tag , exception ) ; } } } 
private int handleCompetitionChildGroup ( java.lang.String [] lines , int beginIndex , swim.data.swim.CCompetitionDataObject dataObject ) throws swim.exceptions.ParseException { swim.data.swim.CCompetitionChildRun childRun = new swim.data.swim.CCompetitionChildRun () ; for ( int j = beginIndex + 1 ; j < ( lines.length ) ; j ++ ) { if ( lines [ j ] . contains ( "}" ) ) { dataObject . getStructure () . addChildRun ( childRun ) ; return j + 1 ; } else littleParser . handle ( childRun , lines [ j ] ) ; } throw new swim.exceptions.ParseException ( "Missing closing brackets." ) ; } 
public static java.lang.String execute ( java.util.List < com.jantuomi.tunkki.core.parser.ast.ASTNode > sequence ) throws com.jantuomi.tunkki.exception.TunkkiError { java.lang.String output = "" ; com.jantuomi.tunkki.core.parser.datatype.Datatype data ; for ( com.jantuomi.tunkki.core.parser.ast.ASTNode node : sequence ) { try { data = node . evaluate () ; } catch ( java.lang.NullPointerException ex ) { throw new com.jantuomi.tunkki.exception.TunkkiError ( TunkkiError.ExceptionType.GeneralError , ( - 1 ) , "Malformed input." ) ; } if ( data != null ) { output = data . toString () ; } else { break; } } return output ; } 
private java.util.Set < java.lang.String > getUnion ( java.util.Set < java.lang.String > s1 , java.util.Set < java.lang.String > s2 ) { java.util.Set < java.lang.String > toReturn = new java.util.HashSet < java.lang.String > () ; toReturn . addAll ( s1 ) ; toReturn . addAll ( s2 ) ; return toReturn ; } 
public int yToPixel ( double y , mesquite.lib.MesquiteChart chart ) { tempNum . setValue ( y ) ; int fieldHeight = chart . getFieldHeight () ; int margin = chart . getMargin () ; return ( ( fieldHeight - margin ) - ( tempNum . setWithinBounds ( minY , maxY , ( fieldHeight - ( 2 * margin ) ) ) ) ) - ( chart . getYPixelBase () ) ; } 
public static void initFeatures () { if ( ( ( net.minecraftforge.fml.common.FMLCommonHandler . instance () . getSidedDelegate () ) != null ) && ( net.minecraftforge.fml.common.FMLCommonHandler . instance () . getSide () . isClient () ) ) org.epoxide.surge.client.ProxyClient . registerClient () ; org.epoxide.surge.features.FeatureManager . registerFeature ( new org.epoxide.surge.features.loadtime.FeatureLoadTimes () , "Load Time Analysis" , "Records the load time of all mods being loaded." ) ; org.epoxide.surge.features.FeatureManager . registerFeature ( new org.epoxide.surge.features.pigsleep.FeaturePigmanSleep () , "Pigman Sleep" , "Allow the player to sleep while pigman are around, unless angered" ) ; org.epoxide.surge.features.FeatureManager . registerFeature ( new org.epoxide.surge.features.bedbug.FeatureBedBug () , "Bed Bug" , "Fixes being stuck in the bed when the packet gets lost" ) ; } 
public static void updateGalleryInfo ( android.content.Context context , android.net.Uri uri ) { android.content.ContentValues values = new android.content.ContentValues () ; java.io.File file = com.isseiaoki.simplecropview.util.Utils . getFileFromUri ( context , uri ) ; if ( file . exists () ) { values . put ( MediaStore.Images.Media.SIZE , file . length () ) ; } android.content.ContentResolver resolver = context . getContentResolver () ; resolver . update ( uri , values , null , null ) ; } 
public static java.util.Date getEndOfMonth ( java.util.Date d , int monthAdjustment ) { java.util.Calendar c = java.util.Calendar . getInstance () ; c . setTime ( org.openmrs.module.reporting.common.DateUtil . getEndOfDay ( d ) ) ; c . set ( java.util.Calendar.DATE , c . getActualMaximum ( java.util.Calendar.DATE ) ) ; c . add ( java.util.Calendar.MONTH , monthAdjustment ) ; return c . getTime () ; } 
protected java.lang.String getSelectedXmlString ( java.lang.String categoryName ) throws java.lang.Exception { java.lang.String xmlString = null ; com.wwidesigner.gui.StudyModel.Category category = getCategory ( categoryName ) ; com.jidesoft.app.framework.file.FileDataModel model = ( ( com.jidesoft.app.framework.file.FileDataModel ) ( category . getSelectedSubValue () ) ) ; if ( ( model != null ) && ( ( model . getApplication () ) != null ) ) { model . getApplication () . getDataView ( model ) . updateModel ( model ) ; xmlString = ( ( java.lang.String ) ( model . getData () ) ) ; } return xmlString ; } 
private void restorePosition () { mPosition = android.preference.PreferenceManager . getDefaultSharedPreferences ( getApplicationContext () ) . getInt ( Constant.PRE_POSITION_VIDEO , 0 ) ; mMediaPlayer . start () ; mMediaPlayer . reset () ; disPlayVideo ( mVideoUrl ) ; mMediaPlayer . setOnCompletionListener ( new android.media.MediaPlayer.OnCompletionListener () { @ java.lang.Override public void onCompletion ( android.media.MediaPlayer mp ) { mMediaPlayer . seekTo ( mPosition ) ; } } ) ; } 
private void addPairedDevice () { if ( ( btAdapter ) == null ) return; java.util.Set < android.bluetooth.BluetoothDevice > pairedDevices = btAdapter . getBondedDevices () ; if ( ( pairedDevices . size () ) > 0 ) { for ( android.bluetooth.BluetoothDevice device : pairedDevices ) { java.lang.String str = ( ( device . getName () ) + "|" ) + ( device . getAddress () ) ; lstDevices . add ( str ) ; adtDevices . notifyDataSetChanged () ; } } } 
private static java.lang.String randomStr ( int len ) { java.lang.StringBuffer sb = new java.lang.StringBuffer () ; java.util.Random random = new java.util.Random () ; for ( int i = 0 ; i < len ; i ++ ) { sb . append ( com.commons.image.ImageCaptcha.CHAR . charAt ( random . nextInt ( com.commons.image.ImageCaptcha.CHAR . length () ) ) ) ; } return sb . toString () ; } 
public static void main ( java.lang.String [] args ) { com.thoughtworks.china.mobile.varval.ValVar valVar = new com.thoughtworks.china.mobile.varval.ValVar () ; valVar.phase = "4th" ; valVar.topics = "\u300a\u4e09\u751f\u4e09\u4e16iOS\u5e03\u5c40\u300b\n" + ( "\u300a\u79fb\u52a8\u6d4b\u8bd5\u7684Mock\u5b9e\u8df5\u300b\n" + "《Getting Start with Kotlin on Android》" ) ; java.lang.System.out . println ( ( ( ( "Welcome to " + ( com.thoughtworks.china.mobile.varval.ValVar.mobileOpenDay ) ) + " " ) + ( valVar.phase ) ) ) ; java.lang.System.out . println ( java.lang.String . format ( "Welcome to %s %s" , com.thoughtworks.china.mobile.varval.ValVar.mobileOpenDay , valVar.phase ) ) ; java.lang.System.out . println ( valVar.topics ) ; } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { int id = item . getItemId () ; if ( id == ( R.id.action_settings ) ) { android.content.Intent intent = new android.content.Intent ( this , com.example.android.sunshine.app.SettingsActivity . class ) ; startActivity ( intent ) ; return true ; } else if ( id == ( R.id.action_map ) ) { showMap () ; return true ; } return super . onOptionsItemSelected ( item ) ; } 
private void saveConfiguration () { try { java.lang.String tmpDir = java.lang.System . getProperty ( "java.io.tmpdir" ) ; if ( tmpDir != null ) { java.io.File configFile = new java.io.File ( tmpDir , stanford.karel.KarelProgram.CONFIG_FILE_NAME ) ; java.util.Properties props = new java.util.Properties () ; props . put ( "mskarel" , java.lang.String . valueOf ( msKarelItem . isSelected () ) ) ; java.io.FileOutputStream out = new java.io.FileOutputStream ( configFile ) ; props . store ( out , "Karel configuration file" ) ; out . close () ; } } catch ( java.lang.Exception ex ) {} } 
@ java.lang.Override public parser.ReturnStatement parseReturnStatement ( ) throws parser.ParseException { match ( Token.TokenType.RETURN_TOKEN ) ; parser.Expression expr = null ; scanner.Token.TokenType currentToken = scanner . viewNextToken () . getType () ; if ( ( ( currentToken == ( Token.TokenType.OPENPAREN_TOKEN ) ) || ( currentToken == ( Token.TokenType.NUM_TOKEN ) ) ) || ( currentToken == ( Token.TokenType.ID_TOKEN ) ) ) { expr = parseExpression () ; } match ( Token.TokenType.SEMICOLON_TOKEN ) ; return new parser.ReturnStatement ( expr ) ; } 
public void setResult ( final org.deidentifier.arx.ARXResult result ) { this . result = result ; if ( ( result != null ) && ( ( result . getGlobalOptimum () ) != null ) ) { optimalNodeAsString = java.util.Arrays . toString ( result . getGlobalOptimum () . getTransformation () ) ; } setModified () ; } 
@ java.lang.Override public boolean handleChange ( java.lang.Object oldValue , java.lang.Object newValue , org.eclipse.draw2d.IFigure refreshableFigure ) { if ( ( traceDataProvider [ index ] ) == null ) { traceDataProvider [ index ] . setCurrentXDataArray ( ( ( double [] ) ( newValue ) ) ) ; xTraceDataSize [ index ] = ( ( double [] ) ( newValue ) ) . length ; } return true ; } 
@ org.junit.Test public void should_remove_target_word () { com.buzzit.buzzit.data.models.Word targetWord = new com.buzzit.buzzit.data.models.Word () ; targetWord . setId ( "fooid" ) ; targetWord . setTextEng ( "it's amazing" ) ; targetWord . setTextSpa ( "issa amassing" ) ; java.util.List < com.buzzit.buzzit.data.models.Word > words = new java.util.ArrayList <> () ; words . add ( targetWord ) ; org.mockito.Mockito . when ( populateWordsStorageUseCase . populate () ) . thenReturn ( rx.Observable . just ( words ) ) ; presenter . onCreate () ; org.mockito.Mockito . verify ( removeWordUseCase ) . remove ( targetWord ) ; } 
@ java.lang.Override protected java.util.List < com.dotmarketing.beans.Permission > getInheritablePermissions ( com.dotmarketing.business.Permissionable permissionable , boolean bitPermissions ) throws com.dotmarketing.exception.DotDataException { java.util.List < com.dotmarketing.beans.Permission > bitPermissionsList = permissionCache . getPermissionsFromCache ( permissionable . getPermissionId () ) ; if ( ( bitPermissionsList == null ) || ( ( bitPermissionsList . size () ) == 0 ) ) { bitPermissionsList = loadPermissions ( permissionable ) ; } if ( ! bitPermissions ) return convertToNonBitPermissions ( filterOnlyInheritablePermissions ( bitPermissionsList , permissionable . getPermissionId () ) ) ; else return filterOnlyInheritablePermissions ( bitPermissionsList , permissionable . getPermissionId () ) ; } 
private int getParkingPercent ( com.kingwaytek.tygo.model.items.ItemsParkingLot parkingLotItem ) { if ( ! ( com.kingwaytek.tygo.utility.Utility . isNumeric ( parkingLotItem.SURPLUS_SPACE ) ) ) return com.kingwaytek.tygo.ui.fragment.parking.UiParkingLotMapFragment.PARKING_UNKNOWN_INFO ; double surplus = java.lang.Double . parseDouble ( parkingLotItem.SURPLUS_SPACE ) ; double total = ( ( double ) ( parkingLotItem.TOTAL_SPACE ) ) ; return ( ( int ) ( ( 1 - ( surplus / total ) ) * 100 ) ) ; } 
@ org.junit.Test public void shouldRecognizeFord ( ) throws java.io.IOException { java.awt.image.BufferedImage image = extracted ( "/ford.png" ) ; double [] input = com.gmail.wysocki.maciej.NeuralNetworkTest.converter . convertToNormalized ( image ) ; com.gmail.wysocki.maciej.Answer answer = com.gmail.wysocki.maciej.NeuralNetworkTest.ai . recognizeCarLogo ( input ) ; org.junit.Assert . assertArrayEquals ( new double [] { 0 , 1 , 0 } , answer . getData () , com.gmail.wysocki.maciej.NeuralNetworkTest.MAX_ERROR ) ; } 
public static < E > int blockingDrain ( java.util.concurrent.BlockingQueue < E > queue , java.util.Collection < ? super E > buffer ) { com.google.common.base.Preconditions . checkNotNull ( buffer ) ; int added = queue . drainTo ( buffer ) ; try { if ( added == 0 ) { buffer . add ( queue . take () ) ; added += queue . drainTo ( buffer ) ; ++ added ; } } catch ( java.lang.InterruptedException e ) { throw com.google.common.base.Throwables . propagate ( e ) ; } return added ; } 
@ java.lang.Override public void setPetDisplayName ( java.lang.String name ) { if ( name == null ) return; for ( final java.lang.String blackName : com.github.shynixn.petblocks.bukkit.logic.business.configuration.ConfigPet . getInstance () . getPetNameBlackList () ) { if ( name . toUpperCase () . contains ( blackName . toUpperCase () ) ) { throw new java.lang.RuntimeException ( "Name is not valid!" ) ; } } this . petDisplayName = org.bukkit.ChatColor . translateAlternateColorCodes ( '&' , name ) ; } 
public java.util.List < edu.harvard.lib.librarycloud.collections.dao.UserCollection > getUserCollectionsForUser ( edu.harvard.lib.librarycloud.collections.dao.User u ) { java.lang.String query = "select uc from UserCollection uc WHERE uc.user.id = :userId" ; java.util.List < edu.harvard.lib.librarycloud.collections.dao.UserCollection > result = em . createQuery ( query , edu.harvard.lib.librarycloud.collections.dao.UserCollection . class ) . setParameter ( "userId" , u . getId () ) . getResultList () ; return result ; } 
private void initializeVideoSync ( int requestCode , int deleteCode ) { android.content.Intent intent = new android.content.Intent ( mContext , templar.atakr.sync.VideoSyncIntentService . class ) ; intent . putExtra ( VideoSyncIntentService.INTENT_REQUEST , requestCode ) ; intent . putExtra ( VideoSyncIntentService.INTENT_TITLE , "" ) ; intent . putExtra ( VideoSyncIntentService.INTENT_DELETE , deleteCode ) ; mContext . startService ( intent ) ; } 
private java.util.Iterator < ? > parseResponse ( java.util.Map < java.lang.String , java.lang.Object > responseOutput ) { try { fillResponseOutput ( keysToObjectList , responseOutput , reader ) ; @ java.lang.SuppressWarnings ( value = { "unchecked" , "rawtypes" } ) com.quantium.mobile.framework.JsonToObjectIterator iter = new com.quantium.mobile.framework.JsonToObjectIterator ( reader , prototype ) ; return iter ; } catch ( org.json.JSONException e ) { com.quantium.mobile.framework.logging.LogPadrao . e ( e ) ; throw new java.lang.RuntimeException ( e ) ; } } 
private java.util.ArrayList < java.lang.String > setArraysWithEmptyStringElementsToNull ( java.util.ArrayList < java.lang.String > list ) { if ( list != null ) { for ( java.lang.String element : list ) { java.lang.String whiteSpaceStripped = element . replaceAll ( "\\s+" , "" ) ; if ( ( element . equals ( whiteSpaceStripped ) ) && ( ( element . length () ) > 0 ) ) { return list ; } } return null ; } return null ; } 
@ java.lang.Override public boolean onQueryTextSubmit ( java.lang.String query ) { onQueryTextChange ( query ) ; com.crashlytics.android.answers.Answers . getInstance () . logSearch ( new com.crashlytics.android.answers.SearchEvent () . putQuery ( query ) . putCustomAttribute ( "Activity" , "DiningHallActivity" ) ) ; android.view.View view = getCurrentFocus () ; if ( view != null ) { android.view.inputmethod.InputMethodManager imm = ( ( android.view.inputmethod.InputMethodManager ) ( getSystemService ( Context.INPUT_METHOD_SERVICE ) ) ) ; imm . hideSoftInputFromWindow ( view . getWindowToken () , 0 ) ; } return true ; } 
private void printAttributes ( javax.servlet.http.HttpServletRequest request ) { java.lang.System.out . println ( ( "udi: " + ( request . getAttribute ( "uid" ) . toString () ) ) ) ; final java.util.Enumeration < java.lang.String > attributeNames = request . getAttributeNames () ; while ( attributeNames . hasMoreElements () ) { final java.lang.String name = attributeNames . nextElement () ; java.lang.System.out . println ( ( ( name + ": " ) + ( request . getAttribute ( name ) . toString () ) ) ) ; } } 
private void sendQueue () { ch.dissem.bitmessage.networking.Connection.LOG . debug ( ( ( ( "Sending " + ( sendingQueue . size () ) ) + " messages to node " ) + ( node ) ) ) ; for ( ch.dissem.bitmessage.networking.MessagePayload msg = sendingQueue . poll () ; msg != null ; msg = sendingQueue . poll () ) { send ( msg ) ; } } 
public boolean isContained ( datastructures.AttributeJoint attrJoint ) { if ( ( attrJoint . getAttributeJoint () ) == null ) return false ; for ( datastructures.Attribute attr : attrJoint . getAttributeJoint () ) if ( attr . equals ( this ) ) return true ; return false ; } 
@ java.lang.Override public java.lang.String toString () { java.lang.StringBuilder sb = new java.lang.StringBuilder () ; sb . append ( language ) ; if ( ( country ) != null ) { sb . append ( "-" ) . append ( country ) ; } if ( ( variant ) != null ) { sb . append ( "-" ) . append ( variant ) ; } return sb . toString () ; } 
@ java.lang.Override public int compare ( java.util.Map < java.lang.String , java.lang.Object > o1 , java.util.Map < java.lang.String , java.lang.Object > o2 ) { java.lang.Long s1 = ( ( java.lang.Long ) ( o1 . get ( "score" ) ) ) ; java.lang.Long s2 = ( ( java.lang.Long ) ( o2 . get ( "score" ) ) ) ; return ( ( int ) ( s1 - s2 ) ) ; } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { btnShare . setVisible ( false ) ; btnInfo . setVisible ( false ) ; java.lang.System.out . println ( ownedCarList . getSelectedValue () . getLicensePlate () ) ; java.lang.String pos = ownedCarList . getSelectedValue () . getPosition () ; ownedCarList . setEnabled ( false ) ; gui.BrowserMap b = new gui.BrowserMap () ; b . HTML ( pos ) ; } 
private java.io.File createImageFile ( ) throws java.io.IOException { java.io.File storageDir = getExternalFilesDir ( Environment.DIRECTORY_PICTURES ) ; java.io.File image = new java.io.File ( storageDir , co.share.share.ItemCreateActivity.UPLOAD_FILE_NAME ) ; if ( image . exists () ) { image . delete () ; } image . createNewFile () ; mCurrentImagePath = "file:" + ( image . getAbsolutePath () ) ; return image ; } 
private org.neo4j.ogm.metadata.info.ClassInfo _classInfo ( java.lang.String name , java.lang.String nodeEntityAnnotation , java.lang.String annotationPropertyName ) { java.util.List < org.neo4j.ogm.metadata.info.ClassInfo > labelledClasses = domainInfo . getClassInfosWithAnnotation ( nodeEntityAnnotation ) ; if ( labelledClasses != null ) { for ( org.neo4j.ogm.metadata.info.ClassInfo labelledClass : labelledClasses ) { org.neo4j.ogm.metadata.info.AnnotationInfo annotationInfo = labelledClass . annotationsInfo () . get ( nodeEntityAnnotation ) ; java.lang.String value = annotationInfo . get ( annotationPropertyName , labelledClass . name () ) ; if ( value . equals ( name ) ) { return labelledClass ; } } } return null ; } 
void basicAttack () { skill = 0 ; comboing = true ; targetX = ( ( int ) ( ( rand . nextDouble () ) * ( Gdx.graphics . getWidth () ) ) ) ; targetY = ( ( int ) ( ( rand . nextDouble () ) * ( Gdx.graphics . getHeight () ) ) ) ; comboId = 0 ; tapTotal = 10 ; tapsLeft = tapTotal ; allowedTime = 5000 ; startTime = com.badlogic.gdx.utils.TimeUtils . millis () ; return; } 
@ java.lang.Override protected void configure () { bind ( ratpack.zipkin.ServerTracingHandler . class ) . to ( ratpack.zipkin.internal.DefaultServerTracingHandler . class ) ; com.google.inject.Provider < ratpack.zipkin.ServerTracingHandler > serverTracingHandlerProvider = getProvider ( ratpack.zipkin.ServerTracingHandler . class ) ; bind ( ratpack.http.client.HttpClient . class ) . annotatedWith ( ratpack.zipkin.Zipkin . class ) . to ( ratpack.zipkin.internal.ZipkinHttpClientImpl . class ) ; com.google.inject.multibindings.Multibinder . newSetBinder ( binder () , ratpack.handling.HandlerDecorator . class ) . addBinding () . toProvider ( ( ) - > ratpack.handling.HandlerDecorator . prepend ( serverTracingHandlerProvider . get () ) ) ; } 
@ java.lang.Override public void writeToParcel ( android.os.Parcel dest , int flags ) { dest . writeInt ( getStepId () ) ; dest . writeString ( getStepShortDescription () ) ; dest . writeString ( getStepDescription () ) ; dest . writeString ( getStepVideoURL () ) ; dest . writeString ( getStepThumbnailURL () ) ; } 
@ org.junit.Test public void test_findComponents_TruncatesComponentDescriptions_WhenComponentDescriptionsAreTooLong ( ) throws java.lang.Exception { java.io.File sourcePath = new java.io.File ( "structurizr-core/test/unit" ) ; com.structurizr.componentfinder.ComponentFinder componentFinder = new com.structurizr.componentfinder.ComponentFinder ( webApplication , "com.structurizr.componentfinder" , new com.structurizr.componentfinder.JavadocComponentFinderStrategy ( sourcePath . getCanonicalPath () , 32 ) ) ; componentFinder . findComponents () ; org.junit.Assert . assertEquals ( "A component that does something." , componentA . getDescription () ) ; org.junit.Assert . assertEquals ( "A component that does somethi..." , componentB . getDescription () ) ; org.junit.Assert . assertEquals ( "A component that does somethi..." , componentC . getDescription () ) ; } 
public static void move ( com.pansmileSoftware.pixelPuzzle.model.Square square , com.pansmileSoftware.pixelPuzzle.model.Square emptySquare ) { if ( emptySquare . isEmpty () ) { int numberOfEmpty = emptySquare . getCurrentNumber () ; if ( square . canBeMoved ( numberOfEmpty , square.sideSize ) ) { int squareNumber = square . getCurrentNumber () ; square . moveToNumber ( numberOfEmpty , square.sideSize , 1 ) ; emptySquare . moveToNumber ( squareNumber , square.sideSize , 1 ) ; } } } 
public void hideUserOptions ( int round ) { android.widget.Button raiseButton = ( ( android.widget.Button ) ( findViewById ( R.id.raise ) ) ) ; android.widget.Button foldButton = ( ( android.widget.Button ) ( findViewById ( R.id.fold ) ) ) ; android.widget.Button checkButton = ( ( android.widget.Button ) ( findViewById ( R.id.check ) ) ) ; android.widget.Button callButton = ( ( android.widget.Button ) ( findViewById ( R.id.call ) ) ) ; raiseButton . setVisibility ( View.INVISIBLE ) ; foldButton . setVisibility ( View.INVISIBLE ) ; checkButton . setVisibility ( View.INVISIBLE ) ; callButton . setVisibility ( View.INVISIBLE ) ; } 
@ java.lang.Override public java.lang.Class < ? > getColumnClass ( int columnIndex ) { switch ( columnIndex ) { case tolteco.sigma.model.tables.UsuarioTable.USER_ID : return java.lang.Integer . class ; case tolteco.sigma.model.tables.UsuarioTable.USER_NAME : return java.lang.String . class ; case tolteco.sigma.model.tables.UsuarioTable.ACCESS_LEVEL : return tolteco.sigma.model.entidades.Access . class ; case tolteco.sigma.model.tables.UsuarioTable.PASS : return char [] . class ; default: throw new java.lang.IndexOutOfBoundsException ( ( ( ( ( "Exceeded Max Column Count: " + columnIndex ) + " out of " ) + ( tolteco.sigma.model.tables.UsuarioTable.COLUMN_COUNT ) ) + "." ) ) ; } } 
public void run () { ball . setSpeed ( new ro.licj.magnus.util.Vector ( 3.0 , 10.0 ) ) ; trajectory . add ( new ro.licj.magnus.util.Point ( ball . getPosition () . x , ball . getPosition () . y ) ) ; try { renderer . init ( ball , trajectory ) ; loop () ; } catch ( java.lang.Exception ex ) { java.lang.System.out . println ( ( "An error has occured: " + ( ex . toString () ) ) ) ; ex . printStackTrace () ; } finally { renderer . terminate () ; } } 
org.opendaylight.yangtools.yang.data.api.schema.LeafSetNode < ? > getClusterList ( final org.opendaylight.yangtools.yang.data.api.schema.ContainerNode attributes ) { final com.google.common.base.Optional < org.opendaylight.yangtools.yang.data.api.schema.NormalizedNode < ? , ? > > maybeClusterList = org.opendaylight.yangtools.yang.data.api.schema.NormalizedNodes . findNode ( attributes , clusterListPath ) ; if ( maybeClusterList . isPresent () ) { final org.opendaylight.yangtools.yang.data.api.schema.NormalizedNode < ? , ? > clusterList = maybeClusterList . get () ; if ( clusterList instanceof org.opendaylight.yangtools.yang.data.api.schema.LeafSetNode ) { return ( ( org.opendaylight.yangtools.yang.data.api.schema.LeafSetNode < ? > ) ( clusterList ) ) ; } org.opendaylight.protocol.bgp.rib.impl.AttributeOperations.LOG . warn ( "Unexpected CLUSTER_LIST node {}, ignoring it" , clusterList ) ; } return null ; } 
@ java.lang.Override public org.ow2.authzforce.core.pdp.api.value.Bag < AV > evaluate ( org.ow2.authzforce.core.pdp.api.EvaluationContext context ) throws org.ow2.authzforce.core.pdp.api.IndeterminateEvaluationException { if ( context == null ) { throw missingAttributeBecauseNullContextException ; } final org.ow2.authzforce.core.pdp.api.value.Bag < AV > bag = attrProvider . get ( attrGUID , attributeType , context ) ; if ( bag == null ) { throw this . missingAttributeForUnknownReasonException ; } if ( ( mustBePresent ) && ( bag . isEmpty () ) ) { throw new org.ow2.authzforce.core.pdp.api.IndeterminateEvaluationException ( org.ow2.authzforce.core.pdp.api.StatusHelper.STATUS_MISSING_ATTRIBUTE , missingAttributeMessage , bag . getReasonWhyEmpty () ) ; } return bag ; } 
@ java.lang.Override public void assertPostCreateDomainPermissions ( com.acciente.oacc.Resource accessorResource , com.acciente.oacc.DomainPermission domainPermission , com.acciente.oacc.DomainPermission . . . domainPermissions ) { if ( ! ( hasPostCreateDomainPermissions ( accessorResource , domainPermission , domainPermissions ) ) ) { throw new com.acciente.oacc.NotAuthorizedException ( accessorResource , ( ( "receive " + ( java.util.Arrays . asList ( domainPermissions ) ) ) + " permission(s) after creating a domain" ) ) ; } } 
public static java.lang.String getPathOfJAR ( java.lang.Object any ) { java.lang.String jarPath = any . getClass () . getProtectionDomain () . getCodeSource () . getLocation () . getPath () ; return jarPath . substring ( 0 , ( ( jarPath . lastIndexOf ( '/' ) ) + 1 ) ) ; } 
public static boolean isImage ( java.lang.String extension ) { if ( ( extension == null ) || ( extension . equals ( "" ) ) ) return true ; extension = extension . toLowerCase () ; switch ( extension ) { case "jpg" : case "jpeg" : case "png" : case "gif" : case "bmp" : return true ; default: return false ; } } 
public boolean isLocked ( com.google.devtools.build.lib.syntax.Mutability.Freezable object ) { if ( ! ( object . mutability () . equals ( this ) ) ) { throw new java.lang.AssertionError ( "trying to check the lock of an object from a different context" ) ; } if ( ! ( isMutable ) ) { return false ; } java.lang.Integer hash = java.lang.System . identityHashCode ( object ) ; return lockedItems . containsKey ( hash ) ; } 
public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.roomlist_activity ) ; extras = getIntent () . getExtras () ; makeList () ; final android.app.Activity fA = this ; recyclerView = ( ( android.support.v7.widget.RecyclerView ) ( findViewById ( R.id.recyclerview_rooms ) ) ) ; rvLayoutManager = new android.support.v7.widget.LinearLayoutManager ( fA ) ; recyclerView . setLayoutManager ( rvLayoutManager ) ; rvadapter = new com.example.jendrik.moerder.GUI.Host.AdapterClasses.RoomAdapterClass () ; recyclerView . setAdapter ( rvadapter ) ; recyclerView . setDescendantFocusability ( ViewGroup.FOCUS_BLOCK_DESCENDANTS ) ; } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { switch ( item . getItemId () ) { case R.id.action_refresh : if ( ( swipeRefreshLayout ) != null ) { swipeRefreshLayout . setRefreshing ( true ) ; new android.os.Handler () . postDelayed ( new java.lang.Runnable () { @ java.lang.Override public void run () { onRefresh () ; } } , 500 ) ; return true ; } default: return super . onOptionsItemSelected ( item ) ; } } 
@ java.lang.Override public io.fabric8.kubernetes.api.model.KubernetesList create ( io.fabric8.kubernetes.api.model.KubernetesList . . . items ) { java.util.List < io.fabric8.kubernetes.api.model.HasMetadata > createdItems = new java.util.ArrayList <> () ; for ( io.fabric8.kubernetes.api.model.KubernetesList i : items ) { for ( io.fabric8.kubernetes.api.model.HasMetadata r : i . getItems () ) { io.fabric8.kubernetes.api.model.HasMetadata created = create ( r ) ; createdItems . add ( created ) ; } } io.fabric8.kubernetes.api.model.KubernetesList createdList = new io.fabric8.kubernetes.api.model.KubernetesList () ; createdList . setItems ( createdItems ) ; return createdList ; } 
@ java.lang.Override public boolean before ( com.blade.mvc.hook.Signature signature ) { com.blade.mvc.http.Response response = signature . getResponse () ; com.blade.mvc.http.Request request = signature . request () ; ning.zhou.bean.login.User user = request . session () . attribute ( ning.zhou.controller.BaseController.USER ) ; if ( ( ning.zhou.common.hooks.NeedLoginWebHook.needLoginPath . contains ( request . uri () ) ) && ( null == user ) ) { response . redirect ( "/" ) ; return false ; } return true ; } 
@ java.lang.Override protected void onPostExecute ( java.lang.Boolean isSomeOneJoined ) { super . onPostExecute ( isSomeOneJoined ) ; if ( isSomeOneJoined ) { android.widget.Toast . makeText ( this , "The others has joined" , Toast.LENGTH_LONG ) ; } else { android.widget.Toast . makeText ( this , "No one has joined" , Toast.LENGTH_LONG ) ; buttonDisconnect . performClick () ; } } 
public void addEvent ( android.view.View view ) { if ( organizer ) { android.content.Intent addEvent = new android.content.Intent ( this , com.sourcey.eventure.Events.EventActivity . class ) ; android.os.Bundle extra = new android.os.Bundle () ; extra . putBoolean ( "organizer" , organizer ) ; addEvent . putExtras ( extra ) ; startActivity ( addEvent ) ; } else { android.widget.Toast . makeText ( getApplicationContext () , "You aren't an organizer!" , Toast.LENGTH_LONG ) . show () ; } } 
@ java.lang.Override public void addChild ( @ org.eclipse.jdt.annotation.NonNull java.lang.String field , @ org.eclipse.jdt.annotation.NonNull com.steelypip.powerups.minxmlstar.MinXMLStar value ) throws java.lang.UnsupportedOperationException { if ( ( this . links ) == null ) { this . links = new java.util.TreeMap <> () ; } java.util.ArrayList < com.steelypip.powerups.minxmlstar . @ org.eclipse.jdt.annotation.NonNull FlexiMinXMLStar > flinks = this . links . get ( field ) ; if ( flinks == null ) { flinks = new java.util.ArrayList <> () ; } @ org.eclipse.jdt.annotation.NonNull final com.steelypip.powerups.minxmlstar.FlexiMinXMLStar fv = toFlexiMinXMLStar ( value ) ; flinks . add ( fv ) ; } 
public void updateValues ( final com.monits.agilefant.model.Story task ) { this . name = task . getName () ; this . rank = task . getRank () ; this . backlog = task . getBacklog () ; this . iteration = task . getIteration () ; this . tasks = task . getTasks () ; this . metrics = task . getMetrics () ; this . state = task . getState () ; this . responsibles = task . getResponsibles () ; setChanged () ; notifyObservers () ; } 
public java.lang.String getSessionKey () { java.lang.System.out . println ( "Getting session key!" ) ; if ( ( ( this . seqNum ) < 0 ) && ( ( this . seqMax ) == ( - 1 ) ) ) return null ; if ( ( keyExpired () ) || ( ( this . seqNum ) < 0 ) ) { currKey = getNextKey () ; } ( this . usesLeft ) -- ; com.bccs.bsecure.SecurityContact.database . setContactUsesLeft ( this . getId () , this . usesLeft ) ; return getKey () ; } 
private void updateSchemaForwarding ( org.motechproject.commcare.config.Config config , java.util.List < java.lang.String > endpoints ) { if ( ( config . isForwardSchema () ) && ( ! ( endpoints . contains ( org.motechproject.commcare.service.impl.CommcareConfigServiceImpl.FORWARD_SCHEMA_TYPE ) ) ) ) { forward ( config , org.motechproject.commcare.service.impl.CommcareConfigServiceImpl.FORWARD_SCHEMA_TYPE , getSchemaChangeUrl ( config . getName () ) ) ; } else if ( ( ! ( config . isForwardSchema () ) ) && ( endpoints . contains ( org.motechproject.commcare.service.impl.CommcareConfigServiceImpl.FORWARD_SCHEMA_TYPE ) ) ) { config . setForwardSchema ( true ) ; } } 
public void flyPassenger ( int departureTime ) throws asgn2Passengers.PassengerException { if ( ( ( ( ( this . isNew () ) || ( this . isQueued () ) ) || ( this . isRefused () ) ) || ( this . isFlown () ) ) || ( departureTime <= 0 ) ) { throw new asgn2Passengers.PassengerException ( "Cannot fly passenger." ) ; } this . confirmed = false ; this . flown = true ; this . departureTime = departureTime ; } 
public void remove ( Node node ) { if ( ( node == ( tail ) ) && ( node == ( head ) ) ) { head = null ; tail = null ; } else if ( node == ( tail ) ) { tail = tail.prev ; tail.next = null ; } else if ( node == ( head ) ) { head = head.next ; head.prev = null ; } else { node.next.prev = node.prev ; node.prev.next = node.next ; } node.next = null ; node.prev = null ; } 
public void initialize ( java.net.URL location , java.util.ResourceBundle resources ) { java.lang.System.out . println ( "init itemView" ) ; shoppingItems = main.iMat . getShoppingCart () . getItems () ; main.iMat . getShoppingCart () . addShoppingCartListener ( this ) ; int i = 14 ; while ( ( -- i ) > 1 ) { shoppingItems . add ( new se.chalmers.ait.dat215.project.ShoppingItem ( main.iMat . getProduct ( i ) , 0 ) ) ; } fillCenterPane ( shoppingItems ) ; main.iMat . getShoppingCart () . getTotal () ; } 
@ org.junit.Test public void testGetErrorMessage_customErrorsShownIfPresent () { when ( settings . getString ( "errorMessage.COMMIT_REGEX" ) ) . thenReturn ( "more info" ) ; java.util.List < com.isroot.stash.plugin.errors.YaccError > errors = new java.util.ArrayList <> () ; errors . add ( new com.isroot.stash.plugin.errors.YaccError ( YaccError.Type.COMMIT_REGEX , "commit error" ) ) ; java.lang.String message = yaccErrorBuilder . getErrorMessage ( errors ) ; org.assertj.core.api.Assertions . assertThat ( message ) . isEqualTo ( ( ( ( ( ( ( com.isroot.stash.plugin.errors.YaccErrorBuilder.ERROR_BEARS ) + "\n\n" ) + "commit error\n" ) + "\n" ) + "    more info\n" ) + "\n" ) ) ; } 
public boolean setRedUpgrade () { if ( ( redBalls ) < 5 ) { return false ; } redBalls = ( redBalls ) - 5 ; if ( ( red ) == null ) { red = new uk.org.ulcompsoc.ld32.components.Upgrade ( uk.org.ulcompsoc.ld32.components.Upgrade.UpgradeType.BALL_NUMBER_PLUS_1 ) ; return true ; } switch ( red . getUpgradeType () ) { case BALL_NUMBER_PLUS_1 : { red = new uk.org.ulcompsoc.ld32.components.Upgrade ( uk.org.ulcompsoc.ld32.components.Upgrade.UpgradeType.BALL_NUMBER_PLUS_2 ) ; break; } default: return false ; } } 
void savePosition () { java.util.Properties properties = board . getProperties () ; properties . setProperty ( "codeWindowPosX" , ( "" + ( getBounds () . x ) ) ) ; properties . setProperty ( "codeWindowPosY" , ( "" + ( getBounds () . y ) ) ) ; properties . setProperty ( "codeWindowWidth" , ( "" + ( getBounds () . width ) ) ) ; properties . setProperty ( "codeWindowHeight" , ( "" + ( getBounds () . height ) ) ) ; board . saveProperties () ; } 
@ org.junit.Test public void testMethod_equals () { final com.civilizer.domain.FileEntity f0 = new com.civilizer.domain.FileEntity ( "/whatever.txt" ) ; final com.civilizer.domain.FileEntity f1 = new com.civilizer.domain.FileEntity ( "/whatever.txt" ) ; final com.civilizer.domain.FileEntity f2 = new com.civilizer.domain.FileEntity ( "/another.txt" ) ; assertEquals ( true , f0 . equals ( f1 ) ) ; assertEquals ( false , f2 . equals ( f1 ) ) ; } 
@ java.lang.SuppressWarnings ( value = "deprecation" ) private void swapCursor () { android.database.Cursor cursor = this . sqlHelper . getCursor () ; int count = cursor . getCount () ; this . adapter . setSelection ( new boolean [ count ] ) ; this . stopManagingCursor ( this . adapter . getCursor () ) ; this . startManagingCursor ( cursor ) ; this . adapter . changeCursor ( cursor ) ; } 
public void registerNewPIMInstanceModel ( eu.h2020.symbiote.core.model.Platform pimInstanceModel ) { eu.h2020.symbiote.ontology.SemanticManager.log . info ( ( "Registering new PIM instance " + ( pimInstanceModel . toString () ) ) ) ; eu.h2020.symbiote.ontology.List < java.lang.String > pimLabels = pimInstanceModel . getLabels () ; if ( pimLabels != null ) { eu.h2020.symbiote.ontology.SemanticManager.log . info ( ( ( "[NYI] Model for platform " + pimLabels ) + " will be implemented in R3" ) ) ; } else { eu.h2020.symbiote.ontology.SemanticManager.log . error ( "Could not find platform's label" ) ; } } 
public void setFromIssue ( com.tpb.projects.data.models.Issue issue ) { requiresLoadingFromIssue = false ; note = ( ( issue . getTitle () ) + "\n" ) + ( ( ( issue . getBody () ) != null ) && ( ! ( issue . getBody () . isEmpty () ) ) ? '\n' + ( issue . getBody () ) : "" ) ; this . issue = issue ; } 
private void findErrorCausingWords ( java.util.List < com.joestelmach.natty.DateGroup > groups ) { for ( com.joestelmach.natty.DateGroup group : groups ) { if ( hasErrorCausingWord ( group ) ) { isIncorrectlyParsingWords = true ; incorrectlyParsedWord = getIncorrectlyParsedWord ( group ) ; main.java.DateParser.logger . log ( java.util.logging.Level.INFO , "Offending word: {0}" , incorrectlyParsedWord ) ; break; } } } 
private static void setupGivenFileForStorage ( java.lang.String filePath ) { if ( ! ( seedu.addressbook.AddressBook . isValidFilePath ( filePath ) ) ) { seedu.addressbook.AddressBook . showToUser ( java.lang.String . format ( seedu.addressbook.AddressBook.MESSAGE_INVALID_FILE , filePath ) ) ; seedu.addressbook.AddressBook . exitProgram () ; } seedu.addressbook.AddressBook.storageFilePath = filePath ; seedu.addressbook.AddressBook . createFileIfMissing ( filePath , seedu.addressbook.AddressBook.DEFAULT_FAVLIST_FILEPATH ) ; } 
@ java.lang.Override protected void getServices ( java.util.List < ? super com.google.common.util.concurrent.Service > services ) { services . add ( injector . getInstance ( org.apache.twill.zookeeper.ZKClientService . class ) ) ; services . add ( injector . getInstance ( org.apache.twill.kafka.client.KafkaClientService . class ) ) ; services . add ( injector . getInstance ( org.apache.twill.kafka.client.BrokerService . class ) ) ; services . add ( injector . getInstance ( co.cask.cdap.api.metrics.MetricsCollectionService . class ) ) ; services . add ( injector . getInstance ( co.cask.cdap.logging.framework.distributed.DistributedLogFramework . class ) ) ; services . add ( injector . getInstance ( co.cask.cdap.logging.service.LogSaverStatusService . class ) ) ; } 
public int doBrokerHistory2 ( final java.lang.String Asset , final double tStart , final double tEnd , final int nTickMinutes , final int nTicks , final double [] tickParams ) { com.jforex.dzjforex.ZorroBridge.logger . info ( "doBrokerHistory2 called" ) ; return historyHandler . brokerHistory2 ( Asset , tStart , tEnd , nTickMinutes , nTicks , tickParams ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { int val = mPreferences . getSaveStoredByKey ( SJLPreferences.KEY_ORDER_TYPE ) ; java.lang.String title = getString ( R.string.title_booking_options ) ; if ( val == ( rsantillanc.sanjoylao.util.SJLPreferences.INT_DEFAULT_VALUE ) ) rsantillanc.sanjoylao.custom.dialog.SJLAlertDialog . showTypeBookAlert ( ctx , title ) ; else { android.content.Intent popup = new android.content.Intent ( getApplicationContext () , rsantillanc.sanjoylao.view.popup.DetailsOptionsPopup . class ) ; startActivity ( popup ) ; android.widget.Toast . makeText ( ctx , "¡Agregado!" , Toast.LENGTH_LONG ) . show () ; } } 
private void updateQuestionIndex ( int value ) { if ( ( currentIndex ) == 0 ) { currentIndex = ( questionList.length ) - 1 ; } else { currentIndex = ( ( currentIndex ) + value ) % ( questionList.length ) ; } isCheater = false ; setQuestionText () ; } 
@ java.lang.Override public void onResponse ( retrofit2.Call < java.util.List < com.example.nejcvesel.pazikjehodis.retrofitAPI.Models.Location > > call , retrofit2.Response < java.util.List < com.example.nejcvesel.pazikjehodis.retrofitAPI.Models.Location > > response ) { java.util.List < com.example.nejcvesel.pazikjehodis.retrofitAPI.Models.Location > locations = response . body () ; for ( com.example.nejcvesel.pazikjehodis.retrofitAPI.Models.Location loc : locations ) { myLocationAdapter . addData ( loc ) ; } myLocationAdapter . getFilter () . filter ( "" ) ; progressDialog . dismiss () ; } 
@ java.lang.Override public java.lang.String getPropertyValue () { java.lang.String result = null ; net.pms.configuration.ConfigurationReader configurationReader = net.pms.logging.DebugLogPropertyDefiner.configuration . getConfigurationReader () ; boolean saveLogOverride = configurationReader . getLogOverrides () ; configurationReader . setLogOverrides ( false ) ; switch ( key ) { case "debugLogPath" : result = getDebugLogPath () ; case "rootLevel" : result = getRootLevel () ; } configurationReader . setLogOverrides ( saveLogOverride ) ; return result ; } 
@ org.junit.Test public void test ( ) throws java.lang.Exception { final org.apache.kylin.metadata.realization.RealizationRegistry registry = org.apache.kylin.metadata.realization.RealizationRegistry . getInstance ( org.apache.kylin.common.KylinConfig . getInstanceFromEnv () ) ; final java.util.Set < org.apache.kylin.metadata.realization.RealizationType > realizationTypes = registry . getRealizationTypes () ; org.junit.Assert . assertEquals ( org.apache.kylin.metadata.realization.RealizationType . values () . length , realizationTypes . size () ) ; for ( org.apache.kylin.metadata.realization.RealizationType type : org.apache.kylin.metadata.realization.RealizationType . values () ) { org.junit.Assert . assertTrue ( realizationTypes . contains ( type ) ) ; } } 
private static hsyndicate.fs.SyndicateFileSystem createHSyndicateFS ( org.apache.hadoop.conf.Configuration conf , java.lang.String address ) throws java.io.IOException { hsyndicate.fs.SyndicateFSConfiguration sconf = hsyndicate.hadoop.utils.HSyndicateConfigUtils . createSyndicateConf ( conf , address ) ; try { return hsyndicate.fs.SyndicateFileSystemFactory . getInstance ( sconf ) ; } catch ( java.lang.InstantiationException ex ) { throw new java.io.IOException ( ex . getCause () ) ; } } 
@ java.lang.Override public void sendTo ( org.bukkit.command.CommandSender [] targets ) { java.lang.String tag = tags . getTag ( false , false ) ; for ( java.lang.String line : message ) { java.lang.String messageLine = tag . concat ( line ) ; for ( org.bukkit.command.CommandSender target : targets ) { target . sendMessage ( line ) ; } } } 
private java.util.List < org.eclipse.jgit.revwalk.RevCommit > getCommitsFromBranch ( final org.eclipse.jgit.api.Git origin , java.lang.String branch ) throws org.eclipse.jgit.api.errors.GitAPIException , org.eclipse.jgit.errors.IncorrectObjectTypeException , org.eclipse.jgit.errors.MissingObjectException { java.util.List < org.eclipse.jgit.revwalk.RevCommit > commits = new java.util.ArrayList <> () ; final org.eclipse.jgit.lib.ObjectId id = org.uberfire.java.nio.fs.jgit.util.JGitUtil . resolveObjectId ( origin , branch ) ; for ( org.eclipse.jgit.revwalk.RevCommit commit : origin . log () . add ( id ) . call () ) { commits . add ( commit ) ; } return commits ; } 
@ com.oracle.truffle.api.dsl.Specialization @ com.oracle.truffle.api.CompilerDirectives.TruffleBoundary protected java.lang.Object grepl ( com.oracle.truffle.r.runtime.data.model.RAbstractStringVector patternArgVec , com.oracle.truffle.r.runtime.data.model.RAbstractStringVector vector , byte ignoreCaseLogical , byte valueLogical , byte perlLogical , byte fixedLogical , byte useBytes , byte invertLogical ) { return doGrep ( patternArgVec , vector , ignoreCaseLogical , valueLogical , perlLogical , fixedLogical , useBytes , invertLogical , true ) ; } 
public void update () { if ( ( isMovingRight () ) || ( isMovingLeft () ) ) { centerX += speedX ; } if ( isJumped () ) { centerY += speedY ; speedY += 4 ; } if ( ( centerY ) >= ( jumpStartY ) ) { jumped = false ; speedY = 0 ; } } 
@ java.lang.Override public void createPartControl ( org.eclipse.swt.widgets.Composite parent ) { m_parentComposite = parent ; addResizeListener ( parent ) ; if ( ( getWatchResultDirectory () ) != null ) { updateResultThread () ; } org.eclipse.jface.layout.GridLayoutFactory . fillDefaults () . applyTo ( m_parentComposite ) ; configureToolBar () ; createProgressCountPanel ( m_parentComposite ) ; m_tabFolder = createTestRunTabs ( m_parentComposite ) ; org.testng.eclipse.TestNGPlugin . getDefault () . getPreferenceStore () . addPropertyChangeListener ( this ) ; if ( ( m_stateMemento ) != null ) { restoreLayoutState ( m_stateMemento ) ; } m_stateMemento = null ; } 
private boolean includeDocument ( int doc ) { for ( int i = 0 ; i < ( fieldVals.length ) ; ++ i ) { final org.elasticsearch.index.fielddata.NumericDoubleValues doubleValues = values [ i ] ; final double value = doubleValues . get ( doc ) ; if ( value == ( java.lang.Double.NEGATIVE_INFINITY ) ) { return false ; } fieldVals [ i ] = value ; } return true ; } 
public boolean [] getAllowedMoves ( int iSrc ) { boolean [] bReturn ; bReturn = new boolean [ _board.length ] ; for ( int i = 0 ; i < ( _board.length ) ; i ++ ) { int iCount = i - iSrc ; if ( ( movePiece ( iSrc , iCount , true ) ) == ( com.MagikSquirrel.backgammon.gameBoard.MoveMsg.VALID_TEST ) ) { bReturn [ i ] = true ; } else { bReturn [ i ] = false ; } } return bReturn ; } 
@ java.lang.Override public void partOpened ( org.eclipse.ui.IWorkbenchPartReference partRef ) { if ( ( partRef . getId () . equals ( xstampp.stpapriv.ui.relation.UnsafeUnsecureEditor.ID ) ) && ( ( org.eclipse.ui.PlatformUI . getWorkbench () . getActiveWorkbenchWindow () . getActivePage () . findView ( PrivacyRelationsView.ID ) ) == null ) ) { org.eclipse.ui.IWorkbenchPage page = org.eclipse.ui.PlatformUI . getWorkbench () . getActiveWorkbenchWindow () . getActivePage () ; try { part = page . showView ( PrivacyRelationsView.ID ) ; } catch ( org.eclipse.ui.PartInitException e ) { e . printStackTrace () ; } } } 
public void mainLoop ( ) throws java.io.IOException , java.lang.InterruptedException { if ( componentManager . executeTests () ) { startService ( new ru.linachan.yggdrasil.YggdrasilAgentServer () ) ; while ( runningYggdrasil ) { java.lang.Thread . sleep ( 1000 ) ; } logInfo ( "Yggdrasil main loop finished. Waiting another services to finish..." ) ; serviceRunner . shutdown () ; componentManager . shutdown () ; } else { shutdownYggdrasil () ; } logInfo ( "Yggdrasil is down..." ) ; } 
private void showcaseImage () { showcaseViewBuilder . hide () ; showcaseViewBuilder . setTargetView ( imageView ) . setBackgroundOverlayColor ( - 296923827 ) . setRingColor ( - 863072626 ) . setRingWidth ( 15 ) . setMarkerDrawable ( getResources () . getDrawable ( android.R.drawable.arrow_down_float ) , Gravity.BOTTOM ) . setDrawableLeftMargin ( 16 ) . addCustomView ( R.layout.image_description_view , Gravity.BOTTOM ) . setHideOnTouchOutside ( true ) . setCustomViewMargin ( 30 ) ; showcaseViewBuilder . show () ; } 
public java.util.ArrayList < AGHF.Unit > unitsToAdvance ( boolean left ) { java.util.ArrayList < AGHF.Unit > retArr = new java.util.ArrayList < AGHF.Unit > () ; if ( left && ( ! ( leftUnits . isEmpty () ) ) ) { retArr = uta ( leftUnits , rightUnits . isEmpty () ) ; } else if ( ( ! left ) && ( leftUnits . isEmpty () ) ) { retArr = uta ( rightUnits , ( ! ( leftUnits . isEmpty () ) ) ) ; } return retArr ; } 
@ java.lang.Override public void Init ( ) throws java.io.IOException , java.net.URISyntaxException , javax.xml.parsers.ParserConfigurationException , org.xml.sax.SAXException { super . Init () ; if ( ! ( location . endsWith ( ".xml" ) ) ) { location += ( ! ( location . endsWith ( "/" ) ) ) ? "/" : "" ; location += "sitemap.xml" ; } locationUrl_ = new java.net.URI ( location ) ; init_urls ( locationUrl_ ) ; init_bugify () ; } 
@ java.lang.Override public void onActivityCreated ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onActivityCreated ( savedInstanceState ) ; getActivity () . supportPostponeEnterTransition () ; com.dailynews.dailynews.sync.DailyNewsSyncAdapter . syncImmediately ( getActivity () , com.dailynews.dailynews.sync.DailyNewsSyncAdapter . syncBundle ( new java.lang.String [] { mTopic } ) ) ; getActivity () . getSupportLoaderManager () . initLoader ( mPosition , null , this ) ; } 
@ org.junit.Test public void testMessageExceptionWithoutSolutions () { java.lang.String actual = org.symphonyoss.integration.exception.ExceptionMessageFormatter . format ( org.symphonyoss.integration.exception.ExceptionMessageFormatterTest.COMPONENT_NAME , org.symphonyoss.integration.exception.ExceptionMessageFormatterTest.STR_MESSAGE ) ; org.apache.commons.lang3.text.StrBuilder expected = new org.apache.commons.lang3.text.StrBuilder ( org.symphonyoss.integration.exception.ExceptionMessageFormatterTest.BREAK_LINE ) . append ( org.symphonyoss.integration.exception.ExceptionMessageFormatterTest.COMPONENT ) . appendln ( org.symphonyoss.integration.exception.ExceptionMessageFormatterTest.COMPONENT_NAME ) . append ( org.symphonyoss.integration.exception.ExceptionMessageFormatterTest.MESSAGE ) . appendln ( org.symphonyoss.integration.exception.ExceptionMessageFormatterTest.STR_MESSAGE ) . appendln ( org.symphonyoss.integration.exception.ExceptionMessageFormatterTest.SOLUTIONS ) . appendln ( org.symphonyoss.integration.exception.ExceptionMessageFormatterTest.NO_SOLUTION_MESSAGE ) ; org.junit.Assert . assertEquals ( actual , expected . toString () ) ; } 
@ org.junit.Test public void edit_findThenEdit_success ( ) throws java.lang.Exception { commandBox . runCommand ( "find midterm" ) ; java.lang.String detailsToEdit = "Belle" ; int filteredTaskListIndex = 1 ; int taskManagerIndex = 0 ; seedu.address.testutil.TestTask taskToEdit = expectedTaskList [ taskManagerIndex ] ; seedu.address.testutil.TestTask editedTask = new seedu.address.testutil.TaskBuilder ( taskToEdit ) . withName ( "Belle" ) . withPriority ( "m" ) . build () ; assertEditSuccess ( filteredTaskListIndex , taskManagerIndex , detailsToEdit , editedTask ) ; } 
@ java.lang.Override public void run () { final long now = java.lang.System . currentTimeMillis () ; lastStart = now ; runnable . run () ; final long wish = lastUpdate . get () ; if ( ( wish < now ) && ( lastUpdate . compareAndSet ( wish , 0 ) ) ) return; else { if ( ( interval ) > 0 ) nextRun = now + ( interval ) ; runnable . schedule ( this ) ; } } 
private void assignRecommendation () { int recommendation = - 1 ; if ( ( mySPC . getMyAssignedManuscripts () . size () ) <= 0 ) { java.lang.System.out . println ( "\nNo papers assigned" ) ; return; } model.Manuscript manuscript = selectManuscriptPrompt () ; if ( java.util.Objects . isNull ( manuscript ) ) return; displayRecommendationSelect ( manuscript . getScale () ) ; recommendation = ( view.SystemHelper . promptUserInt () ) - 1 ; if ( recommendation == 0 ) return; finalizeRecommendation ( manuscript , recommendation ) ; } 
public com.amazon.speech.ui.SsmlOutputSpeech call ( java.lang.String subGroup , java.lang.String candidateFullname ) { this . chosenSubGroup = subGroup ; com.amazon.speech.ui.SsmlOutputSpeech text = new com.amazon.speech.ui.SsmlOutputSpeech () ; text . setSsml ( SpeechHelper . wrapInSpeak ( "Text not set" ) ) ; java.lang.String set = new java.lang.String ( "Text not set" ) ; try { set = textFromProfile ( candidateFullname ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } java.lang.System.out . println ( set ) ; text . setSsml ( set ) ; return text ; } 
private void resize ( int capacity ) { ArrayHeap < T > . Node [] temp = new ArrayHeap.Node [ capacity ] ; for ( int i = 1 ; i <= ( temp.length ) ; i ++ ) { temp [ i ] = contents [ i ] ; } contents = temp ; } 
private int lastNonGlobPath ( java.lang.String path ) { int last = 0 ; for ( int i = 0 ; i != ( path . length () ) ; ++ i ) { if ( com.thenewentity.utils.dropwizard.MultipleConfigurationProvider.globChars . contains ( path . charAt ( i ) ) ) { return last ; } if ( ( path . charAt ( i ) ) == ( java.io.File.separatorChar ) ) { last = i ; } } return - 1 ; } 
public void setValueFromView () { if ( ( ( mMinutesView ) != null ) && ( ! ( android.text.TextUtils . isEmpty ( mMinutesView . getText () ) ) ) ) { setSettingsValue ( ( "" + ( ( ( long ) ( ( java.lang.Float . valueOf ( mMinutesView . getText () . toString () ) ) * 60000 ) ) + ( java.lang.System . currentTimeMillis () ) ) ) ) ; } } 
public void writeOutData () { try { saveUser = new com.example.android.rowanparkingpass.SavedData.SaveUser ( com.example.android.rowanparkingpass.SavedData.SaveData . getUSR () , com.example.android.rowanparkingpass.SavedData.SaveData . getSync () , com.example.android.rowanparkingpass.SavedData.SaveData . getQueue () ) ; com.example.android.rowanparkingpass.SavedData.ReadWrite . WRITE_OUT ( saveUser , this . getApplicationContext () ) ; android.widget.Toast . makeText ( getApplicationContext () , ( ( com.example.android.rowanparkingpass.SavedData.SaveData . size () ) + "" ) , Toast.LENGTH_SHORT ) . show () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } 
@ java.lang.Override public void onReceive ( android.content.Context context , android.content.Intent intent ) { java.lang.String action = intent . getAction () ; if ( action . equals ( AuthenticatorService.WAITRESPONSE ) ) { com.readyo.app.authentication.AuthenticationActivity.TOKEN = intent . getStringExtra ( "TOKEN" ) ; accountManager = android.accounts.AccountManager . get ( getApplicationContext () ) ; android.accounts.Account [] accounts = accountManager . getAccountsByType ( "login" ) ; checkAccount ( true ) ; } else if ( action . equals ( "INVALIDCREDENTIALS" ) ) { checkAccount ( false , null ) ; unregisterReceiver ( refreshedTokenReceiver ) ; } } 
public void validate ( com.thoughtworks.go.config.ValidationContext validationContext ) { if ( org.apache.commons.lang.StringUtils . isEmpty ( link ) ) { configErrors . add ( com.thoughtworks.go.config.TrackingTool.LINK , "Link should be populated" ) ; } else if ( org.apache.commons.lang.StringUtils . isEmpty ( regex ) ) { configErrors . add ( com.thoughtworks.go.config.TrackingTool.REGEX , "Regex should be populated" ) ; } if ( ! ( link . contains ( "${ID}" ) ) ) { configErrors . add ( com.thoughtworks.go.config.TrackingTool.LINK , "Link must be a URL containing '${ID}'. Go will replace the string '${ID}' with the first matched group from the regex at run-time." ) ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { for ( int i = 0 ; i < ( selectedItems . size () ) ; i ++ ) { mAdapter . addItem ( selectedItems . get ( i ) , selectedEntries . get ( i ) ) ; mAdapter . toggleSelection ( selectedItems . get ( i ) ) ; } mRecyclerView . scrollToPosition ( selectedItems . get ( 0 ) ) ; db . deleteWifiEntries ( selectedEntries , true ) ; } 
@ java.lang.Override public void setLoadMoreView ( android.view.View view ) { if ( ( mViewGroup ) == null ) { mFooterView = view ; return; } if ( ( ( mFooterView ) != null ) && ( ( mFooterView ) != view ) ) { removeFooterView ( mFooterView ) ; } mFooterView = view ; mFooterView . setOnClickListener ( new com.being.base.ui.widget.ptr.loadmore.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View view ) { tryToPerformLoadMore () ; } } ) ; addFooterView ( view ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/byAuthor" ) public org.springframework.http.ResponseEntity < java.lang.Object > findByAuthor ( @ org.springframework.web.bind.annotation.RequestParam ( name = "author" , required = false ) java.lang.String author , @ org.springframework.web.bind.annotation.RequestParam ( name = "skip" , required = false ) int skip ) { if ( org.apache.commons.lang3.StringUtils . isNotBlank ( author ) ) { java.util.List < java.lang.String > topicList = topicRepository . findByAuthorOrderByCreatedDesc ( author , skip ) ; if ( ( null != topicList ) && ( ( topicList . size () ) > 0 ) ) { return com.starkinc.stopic.util.ServiceUtil . buildEntity ( org.springframework.http.HttpStatus.FOUND , topicList ) ; } else { return noRecordFound ; } } else { return topicSearchValidation ; } } 
public void setup () { size ( main.java.MainApplet.width , main.java.MainApplet.height ) ; for ( int i = 1 ; i <= 7 ; i ++ ) { characters [ i ] = new java.util.ArrayList < java.lang.Character > () ; } smooth () ; loadData () ; minim = new main.java.Minim ( this ) ; song = minim . loadFile ( this . getClass () . getResource ( "/res/star_wars.mp3" ) . getPath () ) ; song . play () ; } 
private java.util.List < org.springframework.security.core.GrantedAuthority > buildUserAuthority ( java.util.List < hu.neuron.java.sales.service.vo.RoleVO > userRoles ) { java.util.Set < org.springframework.security.core.GrantedAuthority > setAuths = new java.util.HashSet < org.springframework.security.core.GrantedAuthority > () ; for ( hu.neuron.java.sales.service.vo.RoleVO userRole : userRoles ) { java.lang.System.out . println ( userRole . getName () ) ; setAuths . add ( new org.springframework.security.core.authority.SimpleGrantedAuthority ( userRole . getName () ) ) ; } java.util.List < org.springframework.security.core.GrantedAuthority > Result = new java.util.ArrayList < org.springframework.security.core.GrantedAuthority > ( setAuths ) ; return Result ; } 
@ java.lang.Override public void load ( edu.psu.sweng500.team8.io.BinaryInputStream stream ) throws java.io.IOException { for ( int rowIndex = 0 ; rowIndex < 9 ; rowIndex ++ ) { for ( int columnIndex = 0 ; columnIndex < 9 ; columnIndex ++ ) { edu.psu.sweng500.team8.coreDataStructures.Cell cell = m_cells [ rowIndex ] [ columnIndex ] = new edu.psu.sweng500.team8.coreDataStructures.Cell () ; cell . load ( stream ) ; } } } 
public java.lang.String getColumnName ( int columnIndex ) { if ( ( ( columnNames ) != null ) && ( ( columnNames.length ) > 0 ) ) { if ( ( columnIndex >= 0 ) && ( columnIndex < ( columnNames.length ) ) ) { return columnNames [ columnIndex ] ; } } return null ; } 
private void stopDecoding () { decoding = false ; mBufferedSamples = 0 ; decoderThread . interrupt () ; try { decoderThread . join () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } try { feedThread . join () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } 
@ java.lang.Override public java.lang.String login () { logger . info ( ( "Login request sent in name of " + ( username ) ) ) ; try { java.util.Collection < java.lang.String > response = internalLoginProcess () ; if ( response . contains ( org.mondo.collaboration.online.core.StorageAccessSvn.ERROR_SVN_LOGIN ) ) { logger . error ( ( "-> Response: " + ( org.mondo.collaboration.online.core.StorageAccessSvn.ERROR_SVN_LOGIN ) ) ) ; return org.mondo.collaboration.online.core.StorageAccessSvn.ERROR_SVN_LOGIN ; } } catch ( java.lang.Exception e ) { logger . error ( "-> Response: Internal error during login" , e ) ; } logger . error ( "-> Response: OK" ) ; return null ; } 
public static void registerShowScreen ( java.lang.String screenName ) { if ( net.demilich.metastone.analytics.MetastoneAnalytics.DISABLED ) return; if ( net.demilich.metastone.BuildConfig.DEV_BUILD ) net.demilich.metastone.analytics.MetastoneAnalytics.logger . info ( ( "registerShowScreen: " + screenName ) ) ; net.demilich.metastone.analytics.MetastoneAnalytics.INSTANCE.analyticsTracker . type ( GoogleAnalytics.HitType.screenview ) . applicationVersion ( BuildConfig.VERSION ) . category ( "navigation" ) . action ( "show" ) . screenName ( screenName ) . build () . send ( false ) ; } 
private org.jboss.tools.openshift.egit.internal.test.util.TestRepository cloneRepository ( org.jboss.tools.openshift.egit.internal.test.util.TestRepository repository ) throws java.io.IOException , java.lang.InterruptedException , java.lang.reflect.InvocationTargetException , java.net.URISyntaxException { java.io.File workspaceDir = org.eclipse.core.resources.ResourcesPlugin . getWorkspace () . getRoot () . getLocation () . toFile () ; java.io.File clonedRepositoryFile = new java.io.File ( workspaceDir , ( "clonedRepository-" + ( java.lang.String . valueOf ( java.lang.System . currentTimeMillis () ) ) ) ) ; return testRepository . cloneRepository ( clonedRepositoryFile ) ; } 
private org.wso2.carbon.device.mgt.core.dto.DeviceType clearMetaEntryInfo ( org.wso2.carbon.device.mgt.core.dto.DeviceType deviceType ) { org.wso2.carbon.device.mgt.common.type.mgt.DeviceTypeMetaDefinition metaDefinition = deviceType . getDeviceTypeMetaDefinition () ; metaDefinition . setInitialOperationConfig ( null ) ; if ( ( metaDefinition . getPushNotificationConfig () ) != null ) { metaDefinition . setPushNotificationConfig ( new org.wso2.carbon.device.mgt.common.push.notification.PushNotificationConfig ( metaDefinition . getPushNotificationConfig () . getType () , false , null ) ) ; } deviceType . setDeviceTypeMetaDefinition ( metaDefinition ) ; return deviceType ; } 
private void shiftImageLeft ( int offset ) { for ( int y = 0 ; y < ( com.northvine.reader.BarcodeImage.MAX_HEIGHT ) ; y ++ ) { for ( int x = offset ; x < ( com.northvine.reader.BarcodeImage.MAX_WIDTH ) ; x ++ ) { barcodeImage . setPixel ( y , ( x - offset ) , barcodeImage . getPixel ( y , x ) ) ; barcodeImage . setPixel ( y , x , false ) ; } } } 
public static boolean isContain ( net.minecraft.item.ItemStack item1 , net.minecraft.item.ItemStack item2 ) { if ( ( net.minecraft.item.Item . getIdFromItem ( item1 . getItem () ) ) == ( net.minecraft.item.Item . getIdFromItem ( item2 . getItem () ) ) ) { if ( ( item1.stackSize ) >= ( item2.stackSize ) ) { return true ; } else { return false ; } } else { return false ; } } 
private void recycle ( io.netty.channel.PendingWriteQueue.PendingWrite write ) { final io.netty.channel.PendingWriteQueue.PendingWrite next = write.next ; final long writeSize = write.size ; ( size ) -- ; if ( next == null ) { head = tail = null ; assert ( size ) == 0 ; } else { head = next ; assert ( size ) > 0 ; } write . recycle () ; buffer . decrementPendingOutboundBytes ( writeSize ) ; } 
@ org.junit.Test public void lookupMultipleSources ( ) throws org.eol.globi.service.PropertyEnricherException { org.eol.globi.taxon.GlobalNamesService service = new org.eol.globi.taxon.GlobalNamesService () ; final java.util.List < org.eol.globi.domain.Taxon > taxa = new java.util.ArrayList < org.eol.globi.domain.Taxon > () ; service . findTermsForNames ( java.util.Arrays . asList ( "Homo sapiens" ) , new org.eol.globi.taxon.TermMatchListener () { @ java.lang.Override public void foundTaxonForName ( java.lang.Long id , java.lang.String name , org.eol.globi.domain.Taxon taxon , org.eol.globi.domain.NameType nameType ) { taxa . add ( taxon ) ; } } , java.util.Arrays . asList ( GlobalNamesSources.GBIF , GlobalNamesSources.ITIS ) ) ; org.junit.Assert . assertThat ( taxa . size () , org.hamcrest.Matchers . is ( 2 ) ) ; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) @ java.lang.Override protected java.util.List < org.alfresco.repo.domain.node.ChildAssocEntity > selectParentAssocs ( java.lang.Long childNodeId ) { org.alfresco.repo.domain.node.ChildAssocEntity assoc = new org.alfresco.repo.domain.node.ChildAssocEntity () ; org.alfresco.repo.domain.node.NodeEntity childNode = new org.alfresco.repo.domain.node.NodeEntity () ; childNode . setId ( childNodeId ) ; assoc . setChildNode ( childNode ) ; template . clearCache () ; return ( ( java.util.List < org.alfresco.repo.domain.node.ChildAssocEntity > ) ( template . selectList ( org.alfresco.repo.domain.node.ibatis.NodeDAOImpl.SELECT_PARENT_ASSOCS_OF_CHILD , assoc ) ) ) ; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) private static java.lang.String getDefaultOperator ( org.apache.solr.common.util.NamedList < java.lang.Object > schemaNamedList ) { java.lang.String defaultOperator = null ; org.apache.solr.common.util.NamedList < java.lang.Object > solrQueryParserProperties = ( ( org.apache.solr.common.util.NamedList < java.lang.Object > ) ( schemaNamedList . get ( "solrQueryParser" ) ) ) ; if ( solrQueryParserProperties != null ) defaultOperator = ( ( java.lang.String ) ( solrQueryParserProperties . get ( "defaultOperator" ) ) ) ; return defaultOperator ; } 
@ java.lang.Override public void execute ( io.realm.Realm realm ) { for ( com.wwwsmschat.smschat.model.Message m : getMessagesList () ) { if ( ( m . getId () ) == messageID ) { if ( m . isValid () ) { m . setStatus ( status ) ; m . setCreatedTime ( com.wwwsmschat.smschat.util.DateUtil . getInstance () . getCurrentTime () ) ; notifyDataSetChanged () ; break; } } } } 
public void removeListener ( io.grpc.Context.CancellationListener cancellationListener ) { synchronized ( this ) { if ( ( listeners ) != null ) { for ( int i = ( listeners . size () ) - 1 ; i >= 0 ; i -- ) { if ( ( listeners . get ( i ) . listener ) == cancellationListener ) { listeners . remove ( i ) ; } } if ( listeners . isEmpty () ) { parent . removeListener ( parentListener ) ; listeners = null ; } } } } 
private java.util.Optional < org.nest.codegeneration.helpers.LEMSElements.Unit > handleType ( org.nest.units._ast.ASTDatatype _dataType ) { com.google.common.base.Preconditions . checkNotNull ( _dataType ) ; if ( _dataType . getUnitType () . isPresent () ) { org.nest.codegeneration.helpers.LEMSElements.Unit temp = new org.nest.codegeneration.helpers.LEMSElements.Unit ( _dataType . getUnitType () . get () ) ; this . addDimension ( temp . getDimension () ) ; this . addUnit ( temp ) ; return java.util.Optional . of ( temp ) ; } return java.util.Optional . empty () ; } 
@ java.lang.Override public boolean apply ( lu.zhe.mtgslackbot.card.Card card ) { if ( ( comparison ) == null ) { return false ; } java.lang.Integer intValue = lu.zhe.mtgslackbot.parsing.Parsing.PROPERTY_FUNCS . get ( property ) . apply ( card ) ; return ( intValue != null ) && ( intValue > ( comparison ) ) ; } 
@ java.lang.Override public boolean closeConnection () { if ( ( imdb.database.dao.MovieDAOImpl.conn ) != null ) { try { imdb.database.dao.MovieDAOImpl.conn . close () ; } catch ( java.sql.SQLException e ) { java.lang.System.out . println ( ( "Exception while closing the connection : " + ( e . getMessage () ) ) ) ; return false ; } } return true ; } 
public void playerSectionRemove ( org.bukkit.entity.Player player , java.lang.String className ) { plugin.db . i ( ( ( ( "Remove config " + ( player . getUniqueId () . toString () ) ) + " : " ) + className ) ) ; net.slipcor.classranks.core.PlayerClazzList playerClazz = playersClazzList . get ( player . getUniqueId () . toString () ) ; playerClazz . remove ( className ) ; plugin.db . i ( "Save player section after remove " ) ; playerSectionWrite () ; } 
@ javax.ejb.TransactionAttribute ( value = javax.ejb.TransactionAttributeType.REQUIRED ) public void addAccountLink ( java.lang.String userId , gov.medicaid.entities.ExternalAccountLink link ) throws gov.medicaid.services.PortalServiceException { gov.medicaid.entities.ExternalAccountLink existing = findAccountLink ( userId , link . getSystemId () , link . getExternalUserId () ) ; if ( existing == null ) { link . setId ( getSequence () . getNextValue ( Sequences.ACOUNT_LINK_SEQ ) ) ; link . setUserId ( userId ) ; getEm () . persist ( link ) ; auditNewAccountLink ( userId , link ) ; } } 
@ java.lang.Override public boolean keyDown ( int keycode ) { if ( readInput ) { if ( keycode == ( Input.Keys.ENTER ) ) inputReady = true ; if ( keycode == ( Input.Keys.BACKSPACE ) ) { input = "" ; text = ( fullText ) + ( cursor ? "_" : " " ) ; } } return false ; } 
private boolean doResume ( java.lang.String errMsg ) { if ( ( interruptResume ) == ( - 1 ) ) { return RunTimeError ( errMsg ) ; } ExecutingLineIndex = interruptResume ; interruptResume = - 1 ; VarSearchStart = interruptVarSearchStart ; while ( ( IfElseStack . peek () ) != ( com.rfo.basic.Run.IEinterrupt ) ) { IfElseStack . pop () ; } IfElseStack . pop () ; return true ; } 
@ java.lang.Override public void onAnimationEnd ( android.view.animation.Animation animation ) { newEditText . setVisibility ( View.GONE ) ; itemView . clearAnimation () ; if ( ( xyz.julianpeters.timedlists.helpers.StaticValues . getNested () ) == 0 ) { ( xyz.julianpeters.timedlists.helpers.StaticValues.nestedLevel ) ++ ; xyz.julianpeters.timedlists.helpers.Helper . launchIntent ( context , xyz.julianpeters.timedlists.helpers.StaticValues . getCreated () ) ; } } 
public void train ( java.util.List < cs224n.ling.Tree < java.lang.String > > trainTrees ) { lexicon = new cs224n.assignment.Lexicon ( trainTrees ) ; for ( int i = 0 ; i < ( trainTrees . size () ) ; i ++ ) { trainTrees . set ( i , cs224n.assignment.TreeAnnotations . annotateTree ( trainTrees . get ( i ) ) ) ; } grammar = new cs224n.assignment.Grammar ( trainTrees ) ; } 
public java.util.List < org.dbflute.erflute.editor.model.diagram_contents.element.node.table.column.NormalColumn > getPrimaryKeys () { final java.util.List < org.dbflute.erflute.editor.model.diagram_contents.element.node.table.column.NormalColumn > primaryKeys = new java.util.ArrayList <> () ; for ( final org.dbflute.erflute.editor.model.diagram_contents.element.node.table.column.ERColumn column : this . columns ) { if ( column instanceof org.dbflute.erflute.editor.model.diagram_contents.element.node.table.column.NormalColumn ) { final org.dbflute.erflute.editor.model.diagram_contents.element.node.table.column.NormalColumn normalColumn = ( ( org.dbflute.erflute.editor.model.diagram_contents.element.node.table.column.NormalColumn ) ( column ) ) ; if ( normalColumn . isPrimaryKey () ) { primaryKeys . add ( normalColumn ) ; } } } return primaryKeys ; } 
@ java.lang.Override public void done ( java.util.List < com.avos.avoscloud.AVObject > list , com.avos.avoscloud.AVException e ) { int [] allRateScores = new int [ list . size () ] ; int i = 0 ; for ( com.avos.avoscloud.AVObject object : list ) { allRateScores [ i ] = object . getInt ( "subQues" ) ; i ++ ; } plotBarChart ( allRateScores ) ; } 
private void updateUI () { if ( mIsWorking ) { mStartStopWorkButton . setText ( getResources () . getString ( R.string.leave_work ) ) ; } else { mStartStopWorkButton . setText ( getResources () . getString ( R.string.come_to_work ) ) ; } if ( ! ( mIsOnBreak ) ) { mBreakStartStopButton . setText ( getResources () . getString ( R.string.end_break ) ) ; } else { mBreakStartStopButton . setText ( getResources () . getString ( R.string.start_break ) ) ; } } 
public static boolean isLogining ( java.lang.String sessionId ) { final java.util.Map < java.lang.String , java.lang.Boolean > r = new java.util.HashMap <> () ; r . put ( "value" , false ) ; com.baremind.utils.JPAEntry . isLogining ( sessionId , ( a ) - > { a . setLastOperationTime ( new java.util.Date () ) ; com.baremind.utils.JPAEntry . genericPut ( a ) ; r . put ( "value" , true ) ; } ) ; r . put ( "value" , true ) ; return r . get ( "value" ) ; } 
public java.lang.String getClassName ( java.lang.String name ) { if ( ( name . length () ) > 1 ) { name = ( java.lang.Character . toUpperCase ( name . charAt ( 0 ) ) ) + ( name . substring ( 1 ) ) ; } return name + "Dto" ; } 
@ java.lang.Override public void removeTabView () { android.util.Log . d ( acr.browser.lightning.activity.BrowserActivity.TAG , "Remove the tab view" ) ; mBrowserFrame . setBackgroundColor ( mBackgroundColor ) ; mBrowserFrame . removeAllViews () ; acr.browser.lightning.activity.BrowserActivity . removeViewFromParent ( mCurrentView ) ; mCurrentView = null ; mDrawerHandler . postDelayed ( new java.lang.Runnable () { @ java.lang.Override public void run () { mDrawerLayout . closeDrawers () ; } } , 200 ) ; } 
@ java.lang.Override public void valueChanged ( javax.swing.event.ListSelectionEvent ev ) { if ( ! ( ev . getValueIsAdjusting () ) ) { int position = list_member . getSelectedIndex () ; goldengymclub.util.Member member = filteredMemberList . get ( position ) ; new goldengymclub.MemberDetailsDialog ( member ) . show () ; } } 
@ lombok.Synchronized @ lombok.SneakyThrows public java.util.Optional < java.lang.String > getArtifact ( @ lombok.NonNull java.lang.String buildNumber ) { lombok.val paths = prepareSearch () . itemsByProperty () . property ( org.icgc.dcc.dev.server.artifactory.ArtifactoryService.BUILD_NUMBER_PROPERTY_NAME , buildNumber ) . doSearch () ; return paths . stream () . filter ( this : : isPrimaryArifact ) . findFirst () . map ( RepoPath : : getItemPath ) . map ( this : : resolveAbsolutePath ) ; } 
public void updateCache ( final java.util.List < ? extends T > objs ) { for ( final T obj : objs ) { if ( ( obj . getId () ) != null ) { if ( obj . isDeleted () ) { idCache . remove ( obj . getId () ) ; } else { idCache . put ( obj . getId () , obj ) ; } } } } 
@ java.lang.Override public void preprocessRdfData ( java.io.InputStream [] datasets , de.dfki.km.perspecting.obie.vocabulary.MediaType rdfMimeType , de.dfki.km.perspecting.obie.vocabulary.MediaType fileMimeType , java.lang.String absoluteBaseURI ) throws java.lang.Exception { this . connection . setAutoCommit ( false ) ; createDatabase () ; loadRDFData ( datasets , rdfMimeType , absoluteBaseURI , fileMimeType ) ; connection . commit () ; createIndexes () ; connection . commit () ; connection . close () ; } 
public void rebuildApplicationData () { boolean must_recover = false ; eu.focusnet.app.service.DataManager new_dm = new eu.focusnet.app.service.DataManager () ; try { new_dm . retrieveApplicationData () ; } catch ( eu.focusnet.app.exception.FocusMissingResourceException ex ) { must_recover = true ; } if ( ! must_recover ) { eu.focusnet.app.FocusApplication . getInstance () . replaceDataManager ( new_dm ) ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { android.content.Intent intent = new android.content.Intent ( context , com.brand.ushopping.activity.GoodsActivity . class ) ; android.os.Bundle bundle = new android.os.Bundle () ; bundle . putLong ( "goodsId" , ( ( java.lang.Long ) ( list . get ( position ) . get ( "id" ) ) ) ) ; bundle . putInt ( "boughtType" , StaticValues.BOUTHT_TYPE_NORMAL ) ; intent . putExtras ( bundle ) ; context . startActivity ( intent ) ; } 
void assertBasicSearchWorks () { org.elasticsearch.action.search.SearchRequestBuilder searchReq = client () . prepareSearch ( "test" ) . setQuery ( org.elasticsearch.index.query.QueryBuilders . matchAllQuery () ) ; org.elasticsearch.action.search.SearchResponse searchRsp = searchReq . get () ; org.elasticsearch.test.hamcrest.ElasticsearchAssertions . assertNoFailures ( searchRsp ) ; long numDocs = searchRsp . getHits () . getTotalHits () ; logger . debug ( ( ( "Found " + numDocs ) + " in old index" ) ) ; searchReq . addSort ( "long_sort" , SortOrder.ASC ) ; org.elasticsearch.test.hamcrest.ElasticsearchAssertions . assertNoFailures ( searchReq . get () ) ; } 
@ java.lang.Override public void validate ( java.lang.Object target , org.springframework.validation.Errors errors ) { java.util.Set < javax.validation.ConstraintViolation < java.lang.Object > > constraintViolations = this . beanValidator . validate ( target ) ; for ( javax.validation.ConstraintViolation < java.lang.Object > constraintViolation : constraintViolations ) { java.lang.String propertyPath = constraintViolation . getPropertyPath () . toString () ; java.lang.String message = constraintViolation . getMessage () ; errors . rejectValue ( propertyPath , "" , message ) ; } com.leon.rfq.domains.SearchCriterionImpl search = ( ( com.leon.rfq.domains.SearchCriterionImpl ) ( target ) ) ; } 
public void writeBinaryString ( java.lang.String theString ) { try { boolean loop = true ; char [] stringArray = theString . toCharArray () ; for ( char aStringArray : stringArray ) { outputStream . write ( ( ( int ) ( aStringArray ) ) ) ; } outputStream . write ( 0 ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
public void addLetter ( java.lang.String letter ) { if ( ( currentColumn ) == ( com.koda.lingo.logic.Board.WORD_LENGTH ) ) return; com.koda.lingo.Lingo . log ( ( "Adding letter " + letter ) ) ; com.koda.lingo.logic.Tile t = getTile ( currentRow , currentColumn ) ; t . setValue ( letter ) ; ( currentColumn ) ++ ; cursor . setPosition ( currentRow , currentColumn ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_image_detail ) ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; android.widget.ImageView imageView = findViewById ( R.id.imv ) ; if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { imageView . setTransitionName ( com.duyp.app.image.TRANSITION_NAME_IMAGE ) ; } com.duyp.androidutils.image.glide.loader.GlideLoader loader = new com.duyp.androidutils.image.glide.loader.TransitionGlideLoader ( this ) ; loader . loadImage ( com.duyp.app.image.URL , imageView ) ; } 
private java.awt.image.BufferedImage openImage ( java.lang.String imageName , int width , int height ) { java.awt.image.BufferedImage image = null ; java.io.File inputFile = new java.io.File ( imageName ) ; try { image = javax.imageio.ImageIO . read ( inputFile ) ; } catch ( java.io.IOException e ) { java.lang.System.out . println ( "Could not read input image." ) ; return image ; } if ( ( width == 0 ) || ( height == 0 ) ) return image ; else return scaleAndFormatImage ( image , width , height ) ; } 
@ javax.ws.rs.GET @ javax.ws.rs.Produces ( value = { javax.ws.rs.core.MediaType.APPLICATION_XML , javax.ws.rs.core.MediaType.APPLICATION_JSON , javax.ws.rs.core.MediaType.APPLICATION_ATOM_XML } ) @ org.springframework.transaction.annotation.Transactional public org.opennms.netmgt.model.OnmsAlarmCollection getAlarms () { readLock () ; try { final org.opennms.core.criteria.CriteriaBuilder builder = getCriteriaBuilder ( m_uriInfo . getQueryParameters () , false ) ; builder . distinct () ; final org.opennms.netmgt.model.OnmsAlarmCollection coll = new org.opennms.netmgt.model.OnmsAlarmCollection ( m_alarmDao . findMatching ( builder . toCriteria () ) ) ; coll . setTotalCount ( m_alarmDao . countMatching ( builder . clearOrder () . limit ( 0 ) . offset ( 0 ) . toCriteria () ) ) ; return coll ; } finally { readUnlock () ; } } 
private void handleIntent ( android.content.Intent intent ) { if ( Intent.ACTION_SEARCH . equals ( intent . getAction () ) ) { query = intent . getStringExtra ( SearchManager.QUERY ) . toLowerCase () . trim () . replaceAll ( "\\s+" , "" ) ; fullQueryURL = ( ( com.example.android.booklistingapp.ListingActivity.GOOGLE_BOOKS_URL ) + ( query ) ) + ( com.example.android.booklistingapp.ListingActivity.MAX_RESULTS ) ; getLoaderManager () . restartLoader ( com.example.android.booklistingapp.ListingActivity.BOOK_LOADER_ID , null , this ) ; android.util.Log . v ( com.example.android.booklistingapp.ListingActivity.LOG_TAG , ( "Search Q: " + ( query ) ) ) ; } } 
public int login ( int studentId , java.lang.String passwd ) { try { seu.domain.Student student = studentDao . queryStudentByStudentID ( studentId ) ; if ( ( student . getPassword () ) == passwd ) return 1 ; else return 0 ; } catch ( java.lang.Exception ex ) { ex . printStackTrace () ; return - 1 ; } } 
protected final void updateImpl ( ) throws java.io.IOException { java.lang.System.out . println ( "WRITER UPDATE" ) ; nl.ramondevaan.visualization.mesh.Mesh mesh = getInput ( 0 ) ; if ( mesh == null ) { throw new java.lang.UnsupportedOperationException ( "No mesh was provided" ) ; } if ( ( path ) == null ) { throw new java.lang.UnsupportedOperationException ( "No path was provided." ) ; } file = new java.io.File ( path ) ; file . getParentFile () . mkdirs () ; write ( mesh ) ; lastPath = path ; pathChanged = false ; } 
@ java.lang.Override protected android.content.Intent doInBackground ( java.lang.String . . . params ) { java.lang.String res = utils.WebUtils . executePost ( url , paramsInsert ) ; if ( ! ( com.google.common.base.Strings . isNullOrEmpty ( res ) ) ) { try { org.json.JSONObject resJson = new org.json.JSONObject ( res ) ; si.krivec.tracker.TrackingActivity.idRoute = resJson . getInt ( "idRoute" ) ; } catch ( org.json.JSONException ex ) { android.util.Log . d ( "ROUTES insertNewRoute" , ex . getMessage () ) ; } } android.util.Log . d ( "ROUTES insertNewRoute" , res ) ; return null ; } 
public void pickPhotoResult ( android.content.Intent data , android.widget.ImageView imageView ) { android.graphics.Bitmap photo = null ; android.net.Uri targetUri = data . getData () ; try { photo = android.graphics.BitmapFactory . decodeStream ( mActivity . getContentResolver () . openInputStream ( targetUri ) ) ; } catch ( java.io.FileNotFoundException e ) { android.util.Log . e ( getClass () . toString () , e . toString () ) ; } insertPhoto ( photo , imageView ) ; } 
private org.apache.apex.malhar.lib.window.impl.WindowedOperatorImpl < java.lang.Long , java.lang.Long , java.lang.Long > createDefaultWindowedOperator () { org.apache.apex.malhar.lib.window.impl.WindowedOperatorImpl < java.lang.Long , java.lang.Long , java.lang.Long > windowedOperator = new org.apache.apex.malhar.lib.window.impl.WindowedOperatorImpl () ; windowedOperator . setDataStorage ( new org.apache.apex.malhar.lib.window.impl.InMemoryWindowedStorage < java.lang.Long > () ) ; windowedOperator . setRetractionStorage ( new org.apache.apex.malhar.lib.window.impl.InMemoryWindowedStorage < java.lang.Long > () ) ; windowedOperator . setWindowStateStorage ( new org.apache.apex.malhar.lib.window.impl.InMemoryWindowedStorage < org.apache.apex.malhar.lib.window.WindowState > () ) ; windowedOperator . setDataStorage ( new org.apache.apex.malhar.lib.window.impl.InMemoryWindowedStorage < java.lang.Long > () ) ; windowedOperator . setAccumulation ( new org.apache.apex.malhar.lib.window.SumAccumulation () ) ; return windowedOperator ; } 
@ java.lang.Override public int compare ( com.getataxi.mobiletaxi.comm.models.OrderDM o1 , com.getataxi.mobiletaxi.comm.models.OrderDM o2 ) { double val1 = ( java.lang.Math . abs ( ( ( o1.orderLatitude ) - ( assignedTaxi.latitude ) ) ) ) + ( java.lang.Math . abs ( ( ( o1.orderLongitude ) - ( assignedTaxi.longitude ) ) ) ) ; double val2 = ( java.lang.Math . abs ( ( ( o2.orderLatitude ) - ( assignedTaxi.latitude ) ) ) ) + ( java.lang.Math . abs ( ( ( o2.orderLongitude ) - ( assignedTaxi.longitude ) ) ) ) ; boolean result = val1 < val2 ; return result ? 1 : - 1 ; } 
@ java.lang.Override public void keyTyped ( java.awt.event.KeyEvent e ) { org.magic.api.beans.MagicCard mc = ( ( org.magic.api.beans.MagicCard ) ( tableDeck . getValueAt ( tableDeck . getSelectedRow () , 0 ) ) ) ; if ( ( e . getKeyCode () ) == 0 ) { deck . getMap () . remove ( mc ) ; deckmodel . init ( deck ) ; deckmodel . fireTableDataChanged () ; } } 
@ com.squareup.otto.Subscribe public void onAddTrackListToQueueEvent ( org.qstuff.qplayer.events.AddTrackListToQueueEvent event ) { timber.log.Timber . d ( ( "onAddTrackListToQueueEvent(): num " + ( event.tracks . size () ) ) ) ; tracks . addAll ( event.tracks ) ; trackNames . addAll ( getTrackNames ( event.tracks ) ) ; queueListAdapter = new org.qstuff.qplayer.ui.content.TrackListIndexerArrayAdapter ( getActivity () , R.layout.tracklist_item , R.id.tracklist_item_text , trackNames ) ; listView . setAdapter ( queueListAdapter ) ; bus . post ( new org.qstuff.qplayer.events.PlayQueueUpdateEvent ( tracks , true , false , false ) ) ; saveTrackList ( Constants.PREFS_KEY_QUEUE_TRACKLIST , tracks ) ; } 
@ java.lang.Override public synchronized java.awt.image.BufferedImage capture () { if ( ( thread ) == null ) { setDeviceIndex ( deviceIndex ) ; } try { org.opencv.core.Mat mat = new org.opencv.core.Mat () ; if ( ! ( fg . read ( mat ) ) ) { return null ; } java.awt.image.BufferedImage img = org.openpnp.util.OpenCvUtils . toBufferedImage ( mat ) ; mat . release () ; return transformImage ( img ) ; } catch ( java.lang.Exception e ) { return null ; } } 
@ org.junit.Test public void testShowAll () { java.lang.System.out . println ( "showAll" ) ; org.jplus.hyb.database.crud.Hyberbin instance = new org.jplus.hyb.database.crud.Hyberbin ( new org.jplus.model.Servers () ) ; try { java.util.List result = instance . showAll () ; org.junit.Assert . assertTrue ( org.jplus.util.ObjectHelper . isNotEmpty ( result ) ) ; } catch ( java.sql.SQLException ex ) { org.junit.Assert . fail ( "testShowAll faild." ) ; ex . printStackTrace () ; } } 
private void InsertDirectMessages ( ) throws BuzMo.Database.DatabaseException { csv . loadCSV ( "privateMessages.csv" ) ; java.lang.String [] line ; while ( ( line = csv . getNextLine () ) != null ) { java.util.Vector < java.lang.String > recipients = new java.util.Vector <> () ; recipients . add ( line [ 2 ] ) ; message . insertPrivateMsg ( database . getNewMsg () , line [ 1 ] , line [ 3 ] , line [ 4 ] , recipients ) ; } } 
private void moveToNext () { int i = 0 ; while ( ( i < ( currTupleIndexes . size () ) ) && ( ( currTupleIndexes . get ( i ) ) == ( tupleIndexesLimits . get ( i ) ) ) ) { currTupleIndexes . set ( i , 0 ) ; i ++ ; } if ( i == ( currTupleIndexes . size () ) ) hasNext = false ; else currTupleIndexes . set ( i , ( ( currTupleIndexes . get ( i ) ) + 1 ) ) ; } 
@ java.lang.Override public boolean equals ( java.lang.Object object ) { java.lang.System.out . println ( "in i equals" ) ; if ( object instanceof PolygonWithBoats ) { java.lang.System.out . println ( "längre in" ) ; PolygonWithBoats polygon = ( ( PolygonWithBoats ) ( object ) ) ; boolean x = ( this . hashCode () ) == ( polygon . hashCode () ) ; java.lang.System.out . println ( ( "x = " + x ) ) ; return x ; } return false ; } 
@ java.lang.Override public java.util.List < cz.muni.fi.pa165.travelagency.persistence.entity.Excursion > findByDuration ( java.util.Date dateFrom , java.util.Date dateTo ) { if ( dateFrom == null ) throw new java.lang.NullPointerException ( "Parameter dateFrom cannot be null." ) ; if ( dateTo == null ) throw new java.lang.NullPointerException ( "Parameter dateTo cannot be null." ) ; if ( ( dateTo . getTime () ) > ( dateFrom . getTime () ) ) throw new java.lang.IllegalArgumentException ( "Argument DateTo must be after DateFrom." ) ; return java.util.Collections . unmodifiableList ( em . createQuery ( "SELECT e FROM Excursion e WHERE e.duration >= :dateFrom AND e.duration <= :dateTo" , cz.muni.fi.pa165.travelagency.persistence.entity.Excursion . class ) . setParameter ( "dateFrom" , dateFrom ) . setParameter ( "dateTo" , dateTo ) . getResultList () ) ; } 
@ java.lang.Override public void onSensorChanged ( android.hardware.SensorEvent event ) { float x = event.values [ 0 ] ; float y = event.values [ 1 ] ; float z = event.values [ 2 ] ; acc = java.lang.Math . sqrt ( ( ( ( x * x ) + ( y * y ) ) + ( z * z ) ) ) ; tv1 . setText ( ( "Acceleration: " + ( acc ) ) ) ; if ( ( acc ) < 20 ) { accidentAlert () ; } } 
@ java.lang.Override public void onEnable () { com.gmail.berndivader.mmDisguiseCommand.Main.plugin = this ; if ( ( ( org.bukkit.Bukkit . getServer () . getPluginManager () . getPlugin ( "LibsDisguises" ) ) != null ) && ( ( org.bukkit.Bukkit . getServer () . getPluginManager () . getPlugin ( "MythicMobs" ) ) != null ) ) { this . getCommand ( "advdisguise" ) . setExecutor ( new com.gmail.berndivader.mmDisguiseCommand.amDisguiseCommand () ) ; this . getServer () . getPluginManager () . registerEvents ( new com.gmail.berndivader.mmDisguiseCommand.onMMEvents () , this ) ; } } 
@ java.lang.Override public void onCreate () { super . onCreate () ; com.byteshaft.neon.FlashlightService . setServiceInstance ( this ) ; com.byteshaft.neon.AppGlobals . setIsServiceSwitchInProgress ( true ) ; mScreenStateListener = new com.byteshaft.neon.ScreenStateListener ( this ) ; mRemoteUi = new com.byteshaft.neon.RemoteUpdateUiHelpers ( this ) ; mSystemManager = new com.byteshaft.neon.SystemManager ( this ) ; mNotification = new com.byteshaft.neon.Notification ( this ) ; mFlashlight = new com.byteshaft.ezflashlight.Flashlight ( this ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; android.content.Intent intent = this . getIntent () ; android.os.Bundle bundle = intent . getExtras () ; TheUser = ( ( app.p2.b226.aau.caffeinetrackerfinal.User ) ( bundle . getSerializable ( "Auser" ) ) ) ; android.support.design.widget.BottomNavigationView navigation = ( ( android.support.design.widget.BottomNavigationView ) ( findViewById ( R.id.navigation ) ) ) ; navigation . setOnNavigationItemSelectedListener ( mOnNavigationItemSelectedListener ) ; changingFragment ( new app.p2.b226.aau.caffeinetrackerfinal.MainFragment ( TheUser ) ) ; } 
@ org.junit.Test public void testFloor () { for ( int i = 1 ; i < ( ninja.bladh.tools.MathToolTest.integers.length ) ; i ++ ) { int a = ninja.bladh.tools.MathToolTest.integers [ ( i - 1 ) ] ; int b = ninja.bladh.tools.MathToolTest.integers [ i ] ; int result = ninja.bladh.tools.MathTool . floor ( a , b ) ; org.junit.Assert . assertEquals ( ( ( ( ( "Trying to floor " + a ) + " and " ) + b ) + " is not producing the expected value" ) , ninja.bladh.tools.MathToolTest.floors [ i ] , result ) ; } } 
public static float diff ( float [] rgb1 , float [] rgb2 ) { return ( ( java.lang.Math . abs ( ( ( rgb2 [ 0 ] ) - ( rgb1 [ 0 ] ) ) ) ) + ( java.lang.Math . abs ( ( ( rgb2 [ 1 ] ) - ( rgb1 [ 1 ] ) ) ) ) ) + ( java.lang.Math . abs ( ( ( rgb2 [ 2 ] ) - ( rgb1 [ 2 ] ) ) ) ) ; } 
@ java.lang.Override public void performCourseFollowingStep () { float currentAngle = this . getCurrentGyro () ; if ( ( java.lang.Math . abs ( ( ( this . courseFollowingAngle ) - currentAngle ) ) ) >= 1 ) { this . turn ( ( ( int ) ( ( this . courseFollowingAngle ) - currentAngle ) ) ) ; } else { this . forward () ; } } 
public boolean provjeriDaLiPostojiIstiKorisnik ( java.lang.String username ) { java.util.List < app.vrtic.Service.Korisnik > k = dajKorisnike () ; for ( int i = 0 ; i < ( k . size () ) ; i ++ ) { if ( ( k . get ( i ) . getKorisnickoIme () ) == username ) { return true ; } } return false ; } 
private void showAddFlashcardsDialog () { cards = project . getAllCards () ; gui.AddFlashcardDialog d ; try { d = new gui.AddFlashcardDialog ( project , this ) ; d . setVisible ( true ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
public static void main ( java.lang.String [] args ) { int [] data = new int [] { 20 , 15 , 12 , 30 , - 5 , 72 , 34 , 9 , 456 , 999 } ; java.lang.System.out . println ( "Before Sort" ) ; com.bporamin.Common . show ( data ) ; java.lang.System.out . println ( "After Sort" ) ; com.bporamin.Common . show ( com.bporamin.sort.SelectionSort . selectionSort ( data ) ) ; } 
public long countActionsBetween ( org.joda.time.DateTime startDate , org.joda.time.DateTime endDate , de.dbaelz.onofftracker.models.Action.ActionType type ) { try { return actionDao . queryBuilder () . where () . eq ( TABLE_ACTIONTYPE , type ) . and () . between ( TABLE_DATE , startDate . withTimeAtStartOfDay () . toDate () , endDate . toDate () ) . countOf () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; return 0 ; } } 
@ org.junit.Test public void numDoors () { int door = 0 ; for ( clueGame.BoardCell [] i : tests.clueBoardTests.board . getBoard () ) { for ( clueGame.BoardCell j : i ) { if ( ( j != null ) && ( j . isDoorway () ) ) { ++ door ; } } } assertEquals ( tests.clueBoardTests.NUM_DOORS , door ) ; } 
public void initializeShowHideProfile ( boolean isOwner ) { if ( isOwner ) { boolean isProfileVisible = true ; try { java.lang.String cookieValue = cookies . getCookie ( org.sagebionetworks.web.client.presenter.ProfilePresenter.USER_PROFILE_VISIBLE_STATE_KEY ) ; if ( ( cookieValue != null ) && ( ! ( cookieValue . isEmpty () ) ) ) { isProfileVisible = java.lang.Boolean . valueOf ( cookieValue ) ; } } catch ( java.lang.Exception e ) {} setIsProfileVisible ( isProfileVisible ) ; } else { setIsProfileVisible ( true ) ; view . setHideProfileButtonVisible ( false ) ; } } 
private boolean eq () { if ( memory . pop () . equals ( memory . pop () ) ) { memory . push ( "true" ) ; return true ; } else { memory . pop () ; memory . pop () ; memory . push ( "false" ) ; return false ; } } 
public static void Initialize ( java.lang.String namespace , boolean verbose ) { com.urucas.logcatio.LogcatIO logcatIO = com.urucas.logcatio.LogcatIO . getInstance () ; logcatIO . log ( "Logcat.io instance created" ) ; logcatIO.VERBOSE = verbose ; logcatIO.NAMESPACE = namespace ; logcatIO.SDK = Build.VERSION.SDK_INT ; logcatIO.BRAND = android.os.Build.BRAND ; logcatIO.MANUFACTURER = android.os.Build.MANUFACTURER ; logcatIO.MODEL = android.os.Build.MODEL ; logcatIO.SERIAL = android.os.Build.SERIAL ; logcatIO . createTimerTask () ; logcatIO . createSocketConnection () ; } 
public void attachThis ( com.lostagain.nl.GWTish.Management.IsAnimatableModelInstance objectToAttach , com.lostagain.nl.GWTish.PosRotScale displacement ) { if ( ! ( attachlist . containsKey ( objectToAttach ) ) ) { objectToAttach . setParentObject ( this ) ; attachlist . put ( objectToAttach , displacement ) ; } else { Gdx.app . log ( com.lostagain.nl.me.camera.AnimatableOrthographicCamera.logstag , ( "updating attachment:" + ( displacement . toString () ) ) ) ; attachlist . put ( objectToAttach , displacement ) ; sycnAttachedObjectsPosition ( objectToAttach ) ; } } 
private android.graphics.drawable.Drawable newPhoto () { int maxIndex = photos.length ; int randomIndex = randomPhoto . nextInt ( maxIndex ) ; android.graphics.drawable.Drawable photo = null ; try { java.io.InputStream stream = fragment . getContext () . getAssets () . open ( ( "photo/" + ( photos [ randomIndex ] ) ) ) ; photo = android.graphics.drawable.Drawable . createFromStream ( stream , null ) ; } catch ( java.io.IOException e ) { android.widget.Toast . makeText ( fragment . getContext () , "Failed to create photo" , Toast.LENGTH_LONG ) . show () ; } return photo ; } 
public void suffle () { java.util.Random rand = new java.util.Random () ; int swap = 0 ; for ( int i = 1 ; i <= 51 ; i ++ ) { swap = rand . nextInt ( i ) ; swap -= 1 ; if ( ( swap >= 1 ) && ( swap < 53 ) ) { this . swapElemente ( cardHolder . get ( swap ) . toString () , cardHolder . get ( i ) . toString () ) ; } } } 
public java.lang.String generateUID ( java.util.Random rand ) { java.lang.String chars = "ABCDEFGHIJKLMNOPQRSTUVWabcdefghijklmnopqrstuvwxyz1234567890" ; java.lang.String result ; int length = 4 ; char [] text = new char [ length ] ; for ( int i = 0 ; i < length ; i ++ ) { text [ i ] = chars . charAt ( rand . nextInt ( chars . length () ) ) ; } result = new java.lang.String ( text ) ; return generateUID ( new java.util.Random () ) ; } 
@ org.junit.Test public void testRegionIsFoundWithConsequenceType () { java.util.List < java.lang.String > cts = new java.util.ArrayList <> () ; cts . add ( "SO:0001627" ) ; testFiltersHelper ( "11" , 188000 , 190000 , cts , null , null , null , null , null , null , new java.util.ArrayList <> () , 94 ) ; } 
@ java.lang.Override public edu.mayo.mprc.searchdb.dao.TandemMassSpectrometrySample getTandemMassSpectrometrySample ( java.lang.String biologicalSampleName , java.lang.String fractionName ) { return new edu.mayo.mprc.searchdb.dao.TandemMassSpectrometrySample ( new java.io.File ( fractionName ) , new java.util.Date () , 0 , 0 , "Dummy" , new java.util.Date () , 0.0 , "" , "" , "" , "" , "" ) ; } 
@ java.lang.Override public void onActivityCreated ( android.os.Bundle aSavedState ) { super . onActivityCreated ( aSavedState ) ; android.content.Context context = getActivity () ; forumRepo = com.ferg.awfulapp.forums.ForumRepository . getInstance ( context ) ; java.util.List < com.ferg.awfulapp.forums.Forum > forumList = forumRepo . getForumStructure () . getAsList () . build () ; forumListAdapter = com.ferg.awfulapp.forums.ForumListAdapter . getInstance ( context , forumList , this , mPrefs ) ; forumRecyclerView . setAdapter ( forumListAdapter ) ; forumRecyclerView . setLayoutManager ( new android.support.v7.widget.LinearLayoutManager ( context ) ) ; refreshForumList () ; } 
@ java.lang.Override public void init () { if ( getParent () . has ( sk.gfx.Transform . class ) ) transform = getParent () . get ( sk.gfx.Transform . class ) ; if ( ! ( getParent () . has ( sk.entity.component.AABB . class ) ) ) getParent () . add ( 0 , new sk.entity.component.AABB ( ( ( 2.0F * ( width ) ) / ( sk.game.Window . getWidth () ) ) , ( ( 2.0F * ( height ) ) / ( sk.game.Window . getHeight () ) ) , transform ) ) ; } 
void buttonStyling ( javafx.scene.control.Button b ) { b . setStyle ( "-fx-background-color: transparent;" ) ; b . setOnMouseEntered ( new javafx.event.EventHandler < javafx.scene.input.MouseEvent > () { @ java.lang.Override public void handle ( javafx.scene.input.MouseEvent event ) { b . setStyle ( "-fx-background-color: #CCCCCC" ) ; } } ) ; b . setOnMouseExited ( new javafx.event.EventHandler < javafx.scene.input.MouseEvent > () { @ java.lang.Override public void handle ( javafx.scene.input.MouseEvent event ) { b . setStyle ( "-fx-background-color: transparent" ) ; } } ) ; } 
@ java.lang.Override public void run () { if ( ( ( connection ) != null ) && ( ( endPointRead ) != null ) ) { final byte [] buffer = new byte [ packetSize ] ; while ( ! ( isStopped ) ) { final int status = connection . bulkTransfer ( endPointRead , buffer , packetSize , 300 ) ; if ( status >= 0 ) { uiHandler . post ( new java.lang.Runnable () { @ java.lang.Override public void run () { onUSBDataReceive ( buffer ) ; } } ) ; } } } } 
public static int getFieldPosition ( org.eclipse.cdt.core.dom.ast.cpp.ICPPField field ) { final org.eclipse.cdt.core.dom.ast.cpp.ICPPClassType ownerType = field . getClassOwner () ; final org.eclipse.cdt.core.dom.ast.cpp.ICPPClassType [] baseClasses = org.eclipse.cdt.internal.core.dom.parser.cpp.ClassTypeHelper . getAllBases ( ownerType , null ) ; int baseFields = 0 ; for ( org.eclipse.cdt.core.dom.ast.cpp.ICPPClassType baseClass : baseClasses ) { baseFields += org.eclipse.cdt.internal.core.dom.parser.cpp.ClassTypeHelper . getDeclaredFields ( baseClass , null ) . length ; } return baseFields + ( field . getFieldPosition () ) ; } 
private void open ( java.io.File f ) { if ( f . isDirectory () ) { if ( f . getName () . equals ( ".." ) ) { cd ( parent ) ; ls () ; } else { cd ( f . getAbsolutePath () ) ; ls () ; } } else { openFile ( f ) ; } } 
static int tryGetHeight ( android.view.View child , int heightBound , boolean getMeasuredIfAny ) { int height = - 1 ; if ( ( height == ( - 1 ) ) && getMeasuredIfAny ) height = com.otaliastudios.printer.Utils . getMeasuredHeight ( child ) ; if ( height == ( - 1 ) ) height = com.otaliastudios.printer.Utils . getEstimatedHeight ( child , heightBound ) ; return height ; } 
public void switchToRoomConfig ( java.lang.String type , java.lang.String id ) { android.content.Intent intent = null ; if ( type . equals ( "Lamp" ) ) { intent = new android.content.Intent ( this , group7.at.ac.univie.cosycon.RoomConfig_lamp . class ) ; } else if ( type . equals ( "TV" ) ) { intent = new android.content.Intent ( this , group7.at.ac.univie.cosycon.Roomconfig_TV . class ) ; } else if ( type . equals ( "Music" ) ) { intent = new android.content.Intent ( this , group7.at.ac.univie.cosycon.RoomConfig_Music . class ) ; } intent . putExtra ( "GID" , id ) ; startActivity ( intent ) ; } 
private boolean openGPSEnabled () { lm = ( ( android.location.LocationManager ) ( act . getSystemService ( Context.LOCATION_SERVICE ) ) ) ; if ( lm . isProviderEnabled ( android.location.LocationManager.GPS_PROVIDER ) ) { android.util.Log . i ( cat.app.osmap.LOC.tag , "GPS enabled" ) ; return true ; } android.widget.Toast . makeText ( act , "Please enable GPS." , Toast.LENGTH_SHORT ) . show () ; android.content.Intent intent = new android.content.Intent ( android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS ) ; act . startActivityForResult ( intent , 0 ) ; return false ; } 
@ java.lang.Override public void returnWailaBody ( java.util.List < java.lang.String > list ) { if ( ( getCore () ) != null ) { com.pauljoda.modularsystems.generator.tiles.TileGeneratorCore core = ( ( com.pauljoda.modularsystems.generator.tiles.TileGeneratorCore ) ( getCore () ) ) ; list . add ( ( ( ( ( GuiHelper.GuiColor.YELLOW ) + "Max RF/t Out: " ) + ( GuiHelper.GuiColor.RED ) ) + ( core.MAX_RFTICK_OUT ) ) ) ; } } 
protected void pushMouseScroll ( double x , double y , int scroll , long time ) { java.lang.System.out . println ( scroll ) ; java.util.ListIterator < fr.delthas.javaui.Layer > it = layers . listIterator ( layers . size () ) ; while ( it . hasPrevious () ) { if ( it . previous () . pushMouseScroll ( x , y , scroll , time ) ) { return; } } } 
public java.lang.String pollUntilExpectedResponse ( final java.lang.String url , final java.lang.String mediaType , final int delayInMillis , final javax.ws.rs.core.Response.Status status ) { final javax.ws.rs.core.Response result = pollUntilExpectedResponse ( url , mediaType , delayInMillis , ( response ) - > ( response . getStatus () ) == ( status . getStatusCode () ) ) ; return result . readEntity ( java.lang.String . class ) ; } 
public static byte [] toCompressedBytes ( @ javax.annotation.Nonnull final java.lang.Object obj ) throws java.io.IOException { hivemall.utils.io.FastMultiByteArrayOutputStream bos = new hivemall.utils.io.FastMultiByteArrayOutputStream () ; final java.util.zip.DeflaterOutputStream dos = new java.util.zip.DeflaterOutputStream ( bos ) ; try { hivemall.utils.lang.ObjectUtils . toStream ( obj , dos ) ; } finally { hivemall.utils.io.IOUtils . closeQuietly ( dos ) ; } return bos . toByteArray_clear () ; } 
public static java.lang.String getDomainName ( java.lang.String url ) throws java.net.URISyntaxException { java.net.URI uri = new java.net.URI ( url ) ; java.lang.String domain = uri . getHost () ; if ( domain == null ) { return url ; } return domain . startsWith ( "www." ) ? domain . substring ( 4 ) : domain ; } 
@ java.lang.Override org.json.JSONObject send ( java.lang.String link , com.google.common.base.Optional < java.util.Map < java.lang.String , java.lang.Object > > data ) throws java.io.IOException , java.net.URISyntaxException { java.net.URL url = new java.net.URL ( link ) ; org.apache.http.client.HttpClient client = new org.apache.http.impl.client.DefaultHttpClient () ; org.apache.http.client.methods.HttpGet request = new org.apache.http.client.methods.HttpGet () ; request . setURI ( new java.net.URI ( link ) ) ; org.apache.http.HttpResponse response = client . execute ( request ) ; org.json.JSONObject res = null ; try { res = getString ( response ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } return res ; } 
public void driveWheels ( double leftPower , double rightPower ) { leftPower *= Constants.FULL_POWER ; rightPower *= Constants.FULL_POWER ; MotorLeftTriangle . setPower ( ( ( Constants.LEFT_ASSEMBLY_DIFF ) * leftPower ) ) ; MotorRightTriangle . setPower ( rightPower ) ; MotorLeftBack . setPower ( ( ( ( Constants.LEFT_ASSEMBLY_DIFF ) * ( Constants.REAR_WHEEL_POWER_FACTOR ) ) * leftPower ) ) ; MotorRightBack . setPower ( ( ( Constants.REAR_WHEEL_POWER_FACTOR ) * rightPower ) ) ; } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( ( getContentPane () . getComponentCount () ) > 0 ) { getContentPane () . remove ( panelAusgabe ) ; getContentPane () . remove ( panelPrognose ) ; } getContentPane () . add ( panelEinnahme ) ; printAll ( getGraphics () ) ; } 
public static java.util.List < java.lang.String > group ( java.lang.String value ) { java.util.Set < java.lang.Integer > startIndexes = org.hcjf.utils.Strings . allIndexOf ( value , org.hcjf.utils.Strings.START_GROUP , true ) ; java.util.Set < java.lang.Integer > endIndexes = org.hcjf.utils.Strings . allIndexOf ( value , org.hcjf.utils.Strings.END_GROUP ) ; if ( ( startIndexes . size () ) != ( endIndexes . size () ) ) { throw new java.lang.IllegalArgumentException ( "" ) ; } return org.hcjf.utils.Strings . group ( value , startIndexes , endIndexes ) ; } 
@ org.jetbrains.annotations.NotNull private java.lang.String getTypeOfHEAD ( ) throws MyExceptions.WrongFormatException , java.io.IOException { java.util.List < java.lang.String > lines = java.nio.file.Files . readAllLines ( realHEAD ) ; if ( ( lines . size () ) != 1 ) { throw new ru.spbau.MyExceptions.WrongFormatException () ; } java.lang.String [] stringList = lines . get ( 0 ) . split ( " " ) ; if ( ( stringList.length ) != 2 ) { java.lang.System.out . println ( lines . get ( 0 ) ) ; throw new ru.spbau.MyExceptions.WrongFormatException () ; } return stringList [ 0 ] ; } 
public java.util.ArrayList < java.lang.Integer > getCategoryRouteCountList () { java.util.ArrayList < java.lang.Integer > categoryRouteCountList = new java.util.ArrayList < java.lang.Integer > () ; for ( com.nusclimb.live.crimp.common.json.CategoriesResponseBody.Category c : categoriesInfo . getCategories () ) { categoryRouteCountList . add ( c . getRoutes () . size () ) ; } return categoryRouteCountList ; } 
@ java.lang.Override public void setLineThickness ( int thickness ) { super . setLineThickness ( thickness ) ; if ( ( ( geoList ) == null ) || ( ( geoList . size () ) == 0 ) ) return; for ( int i = 0 ; i < ( geoList . size () ) ; i ++ ) { geogebra.common.kernel.geos.GeoElement geo = ( ( geogebra.common.kernel.geos.GeoElement ) ( geoList . get ( i ) ) ) ; if ( ! ( geo . isLabelSet () ) ) geo . setLineThickness ( thickness ) ; } } 
private boolean isSignedToCourse ( java.lang.String courseId ) { for ( int i = 0 ; i < ( data . size () ) ; i ++ ) { if ( data . get ( i ) . id . equals ( courseId ) ) return true ; } return false ; } 
private boolean isValidCandidate ( alien4cloud.model.topology.NodeTemplate nodeTemplate , alien4cloud.deployment.matching.services.nodes.IndexedNodeType nodeType , alien4cloud.model.orchestrators.locations.LocationResourceTemplate candidate , alien4cloud.deployment.matching.services.nodes.IndexedNodeType candidateType , java.util.Map < java.lang.String , alien4cloud.deployment.matching.services.nodes.IndexedCapabilityType > capabilityTypes , java.util.Map < java.lang.String , alien4cloud.model.deployment.matching.MatchingConfiguration > matchingConfigurations ) { if ( ! ( isCandidateTypeValid ( nodeTemplate , candidate , candidateType ) ) ) { return false ; } alien4cloud.model.deployment.matching.MatchingConfiguration matchingConfiguration = matchingConfigurations . get ( nodeType . getElementId () ) ; if ( matchingConfiguration == null ) { return true ; } return isTemplatePropertiesMatchCandidateFilters ( nodeTemplate , matchingConfiguration , candidate , candidateType , capabilityTypes ) ; } 
public void onClickSend ( android.view.View view ) { android.widget.EditText msgEditText = ( ( android.widget.EditText ) ( findViewById ( R.id.message_to_send ) ) ) ; java.lang.String message = msgEditText . getText () . toString () ; msgEditText . setText ( "" ) ; presenter . sendMessage ( userCode , message ) ; } 
private K convertKeyIfNecessary ( java.lang.Object messageKey ) { if ( messageKey != null ) { if ( getProducerMetadata () . getKeyClassType () . isAssignableFrom ( messageKey . getClass () ) ) { return getProducerMetadata () . getKeyClassType () . cast ( messageKey ) ; } return conversionService . convert ( messageKey , producerMetadata . getKeyClassType () ) ; } else { return null ; } } 
private void setupUserLabel () { this . usersTurn = new javafx.scene.control.Label ( "Yellow users turn" ) ; this . usersTurn . setLayoutY ( 20 ) ; this . usersTurn . setScaleX ( 3 ) ; this . usersTurn . setScaleY ( 3 ) ; if ( ! ( gameStartedOnce ) ) { this . layout . getChildren () . add ( this . usersTurn ) ; } this . usersTurn . setLayoutX ( ( ( ( windowWidth ) / 2 ) - 40 ) ) ; } 
public cinema.Film getFilm ( java.lang.String title ) { java.util.ArrayList < java.util.Map < java.lang.String , java.lang.Object > > result = null ; try { result = sqlManager . callStoredProcedure ( ( ( "get_film_by_title(" + title ) + ")" ) ) ; java.util.Map < java.lang.String , java.lang.Object > filmMap = result . get ( 0 ) ; cinema.Film film = new cinema.Film ( filmMap ) ; return film ; } catch ( java.sql.SQLException e ) { java.lang.System.err . println ( e . getMessage () ) ; } return null ; } 
public double get ( int row , int column ) { if ( ( rowPtr.length ) <= ( row + 1 ) ) { return 0 ; } int index = java.util.Arrays . binarySearch ( colInd , rowPtr [ row ] , rowPtr [ ( row + 1 ) ] , column ) ; if ( index >= 0 ) return rowData [ index ] ; else return 0 ; } 
public java.lang.String getListOfCollegeOperators () { javax.servlet.http.HttpSession httpSession = request . getSession () ; loginBean = ( ( com.dexpert.feecollection.main.users.LoginBean ) ( httpSession . getAttribute ( "loginUserBean" ) ) ) ; listAffBean = affDAO . getCollegesList ( null ) ; try { java.lang.Integer instId = loginBean . getAffBean () . getInstId () ; listOprtBean = com.dexpert.feecollection.main.users.operator.OperatorDao . getAllRecordsOfCollegeOperator ( instId ) ; } catch ( java.lang.NullPointerException e ) { listOprtBean = com.dexpert.feecollection.main.users.operator.OperatorDao . getAllRecordsOfCollegeOperator ( null ) ; } return SUCCESS ; } 
public void unsubscribeGPS () { if ( ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_COARSE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { return; } locationManager . removeUpdates ( this ) ; } 
public void onClick ( android.content.DialogInterface dialog , int i ) { if ( canEdit ) { claimController . removeExpense ( claimController . getExpense ( position ) ) ; claimController . getExpense ( position ) . notifyViews () ; mapper . saveClaimData ( claimId , "expenses" , claimController . getExpenseList () ) ; setViews () ; } else { android.widget.Toast . makeText ( getApplicationContext () , ( ( claimController . getStatus () ) + " claims can not be edited." ) , Toast.LENGTH_SHORT ) . show () ; } } 
@ dagger.Provides @ javax.inject.Singleton @ com.palantir.atlasdb.timelock.server.modules.qualifiers.Remote public java.util.Set < java.lang.String > provideRemoteLeaders ( com.palantir.atlasdb.config.LeaderConfig config ) { return config . leaders () . stream () . filter ( java.util.function.Predicate . isEqual ( config . localServer () ) . negate () ) . collect ( java.util.stream.Collectors . toSet () ) ; } 
public void waitForAccess ( nachos.threads.PriorityScheduler.PriorityQueue waitQueue ) { waitQueue.waitingQueue . add ( this ) ; waitQueue . setChange () ; Waiting = waitQueue ; if ( ( Holding . indexOf ( waitQueue ) ) != ( - 1 ) ) { Holding . remove ( waitQueue ) ; waitQueue.holder = null ; } } 
@ java.lang.Override public android.graphics.Path getPath () { android.graphics.Path contentPath = contentGroup . getPath () ; path . reset () ; float copies = this . copies . getValue () ; float offset = this . offset . getValue () ; for ( int i = ( ( int ) ( copies ) ) - 1 ; i >= 0 ; i -- ) { matrix . set ( transform . getMatrixForRepeater ( ( i + offset ) ) ) ; path . addPath ( contentPath , matrix ) ; } return path ; } 
public void setMail ( java.lang.String mail ) { com.bam.GESTIBANKBAM.model.Adresse a = getAdresse () ; if ( a == null ) { a = new com.bam.GESTIBANKBAM.model.Adresse () ; } else { a = new com.bam.GESTIBANKBAM.model.Adresse ( a . getNumero () , a . getRue () , a . getVille () , a . getCodePostal () , a . getTelephone () , mail ) ; } setAdresse ( a ) ; } 
@ java.lang.Override public void onConnected ( android.os.Bundle bundle ) { mMap . setMyLocationEnabled ( true ) ; android.util.Log . e ( "Maps/GoogleAp/conn" , "Connection succ" ) ; mLastLocation = getCurrentLocation () ; setCameraFocus ( mLastLocation ) ; android.util.Log . e ( "Maps/googleAp/LaLo" , ( ( ( java.lang.String . valueOf ( mLastLocation . getLatitude () ) ) + ", " ) + ( java.lang.String . valueOf ( mLastLocation . getLongitude () ) ) ) ) ; startLocationUpdates () ; startGeofencing () ; } 
@ java.lang.Override public android.support.v4.app.Fragment getItem ( int position ) { com.grp10.codepath.travelmemo.firebase.Trip trip = tripList . get ( position ) ; return com.grp10.codepath.travelmemo.fragments.OverlapFragment . newInstance ( com.grp10.codepath.travelmemo.data.DemoImages.covers [ ( position % 6 ) ] , trip . getName () , trip . getDescription () , trip . getId () ) ; } 
public android.content.Intent getIntent () { final android.content.Intent i = android.content.Intent . makeMainActivity ( mComponent ) ; java.lang.String packageName = mComponent . getPackageName () ; java.lang.String activityName = mComponent . getClassName () ; if ( "com.skzh.elifetv.MainActivity" . equals ( activityName ) ) { intent . putExtra ( "frag_index" , "1" ) ; } android.util.Log . d ( "AppCenter" , ( "packageName is " + packageName ) ) ; i . addFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ; return i ; } 
private void doSubjectDiff () { for ( org.semanticweb.owlapi.model.OWLAnnotationSubject as : allSubjects ) { if ( common . isUseSubject ( as ) ) { java.util.Set < org.semanticweb.owlapi.model.OWLAxiom > oldAxioms = git.owl.driver.OwlUtil . getAxioms ( as , oldOntology ) ; oldAxiomsToProcess . removeAll ( oldAxioms ) ; java.util.Set < org.semanticweb.owlapi.model.OWLAxiom > newAxioms = git.owl.driver.OwlUtil . getAxioms ( as , newOntology ) ; newAxiomsToProcess . removeAll ( newAxioms ) ; compareAxioms ( oldAxioms , newAxioms ) ; } } } 
@ java.lang.Override public void done ( com.parse.ParseUser user , com.parse.ParseException e ) { if ( ( user != null ) && ( e == null ) ) { android.util.Log . i ( "LogInSuccess" , "LogInSuccess" ) ; showCustomProgress ( false ) ; android.content.Intent dashboard = new android.content.Intent ( getActivity () , com.example.abhishek.sharerides.activities.DashboardActivity . class ) ; startActivity ( dashboard ) ; getActivity () . finish () ; } else { showCustomProgress ( false ) ; android.widget.Toast . makeText ( getContext () , e . getMessage () , Toast.LENGTH_LONG ) . show () ; } } 
public static boolean is_winner ( java.lang.String ship_symbol , java.lang.String [] [] Tablero ) { for ( int i = 0 ; i < 10 ; i ++ ) { for ( int j = 0 ; j < 10 ; j ++ ) { if ( Tablero [ i ] [ j ] . equals ( "S" ) ) { return false ; } } } return true ; } 
public void decision ( gov.nasa.jpf.vm.ThreadInfo ti , gov.nasa.jpf.vm.Instruction inst , int chosenIdx , starlib.formula.Formula [] constraints ) { if ( ( current.childrend ) == null ) { int length = constraints.length ; current.childrend = new costar.constrainsts.CoStarNode [ length ] ; for ( int i = 0 ; i < length ; i ++ ) { current.childrend [ i ] = new costar.constrainsts.CoStarNode ( current , null , constraints [ i ] , inst , false ) ; } current.childrend [ chosenIdx ] . hasVisited = true ; current = current.childrend [ chosenIdx ] ; } } 
@ java.lang.Override public void onStart () { super . onStart () ; setTitle ( "program is running" ) ; try { con = new no.ntnu.osnap.com.BluetoothConnection ( "00:10:06:29:00:48" , getApplicationContext () ) ; con . connect () ; printLine ( ( "Trying to connect: " + ( con . getAddress () ) ) ) ; } catch ( java.lang.Exception e ) { printLine ( ( "Could not establish connection: " + ( e . getMessage () ) ) ) ; } } 
@ java.lang.Override public int compareTo ( final breakout.Score o ) { if ( ! ( o instanceof breakout.Score ) ) { throw new java.lang.ClassCastException () ; } int anotherValue = o . getValue () ; int anotherTime = o . getTime () ; if ( ( ( this . value ) - anotherValue ) == 0 ) { return anotherTime - ( this . time ) ; } return ( this . value ) - anotherValue ; } 
public static java.lang.String text ( android.content.Context c , @ android.support.annotation.StringRes int res , java.lang.String . . . args ) { android.content.res.Resources resources = c . getResources () ; return ( args.length ) == 0 ? resources . getString ( res ) : resources . getString ( res , ( ( java.lang.Object [] ) ( args ) ) ) ; } 
public java.util.List < com.parse.ParseUser > getSelectedItems () { java.util.List < com.parse.ParseUser > result = new java.util.ArrayList ( mSelectedItems . size () ) ; java.util.Iterator < java.lang.Integer > iterator = mSelectedItems . keySet () . iterator () ; if ( iterator . hasNext () ) { result . add ( mSelectedItems . get ( iterator . next () ) ) ; } return result ; } 
protected java.util.Set < org.yawlfoundation.yawl.engine.interfce.WorkItemRecord > getSuspendableWorkItemsInChain ( org.yawlfoundation.yawl.worklet.exception.ExletRunnerCache runners , java.lang.String caseID ) { java.util.Set < org.yawlfoundation.yawl.engine.interfce.WorkItemRecord > result = getSuspendableWorkItems ( "case" , caseID ) ; org.yawlfoundation.yawl.worklet.selection.WorkletRunner worklet = runners . getWorkletRunner ( caseID ) ; while ( worklet != null ) { java.lang.String parentCaseID = worklet . getParentCaseID () ; result . addAll ( getSuspendableWorkItems ( "case" , parentCaseID ) ) ; worklet = runners . getWorkletRunner ( parentCaseID ) ; } return result ; } 
protected boolean isFinished () { if ( ( Robot.clawArm . armAtBottom () ) || ( Robot.clawArm . armAtTop () ) ) { return true ; } else if ( ( Robot.clawArm . armPosition () ) == ( position ) ) { return true ; } return false ; } 
@ org.junit.Test ( expected = java.lang.NullPointerException . class ) public void testGetCorrectAreaByNumber () { com.testcase.ArrayList < com.app.Area > board_areas = new com.testcase.ArrayList < com.app.Area > () ; board_areas . add ( new com.app.Area ( "Isle of Gods" , 10 , "12" ) ) ; assertNull ( ( ( utility . getAreaByNumber ( 10 ) ) instanceof com.app.Area ) ) ; } 
private org.eclipse.californium.core.network.stack.Block1BlockwiseStatus resetInboundBlock1Status ( final org.eclipse.californium.core.network.stack.KeyUri key , final org.eclipse.californium.core.network.Exchange exchange , final org.eclipse.californium.core.coap.Request request ) { synchronized ( block1Transfers ) { org.eclipse.californium.core.network.stack.Block1BlockwiseStatus removedStatus = block1Transfers . remove ( key ) ; org.eclipse.californium.core.network.stack.BlockwiseLayer.LOGGER . log ( java.util.logging.Level.WARNING , "inbound block1 transfer reset at {0} by peer: {1}" , new java.lang.Object [] { removedStatus , request } ) ; return getInboundBlock1Status ( key , exchange , request ) ; } } 
@ java.lang.Override public void addExistingDatabaseTable ( final java.lang.String symbolicName , final java.lang.String dbTableName ) throws eu.unifiedviews.dataunit.DataUnitException { checkForMultithreadAccess () ; if ( checkTableExists ( dbTableName ) ) { throw new eu.unifiedviews.dataunit.DataUnitException ( ( ( "Database table " + dbTableName ) + " does not exist!" ) ) ; } saveTableInRepository ( symbolicName , dbTableName ) ; this . databaseTables . add ( dbTableName ) ; } 
private boolean checkMasterAddress () { java.net.InetSocketAddress masterAddress = FileSystemContext.INSTANCE . getMasterAddress () ; boolean sameHost = masterAddress . getHostString () . equals ( mUri . getHost () ) ; boolean samePort = ( masterAddress . getPort () ) == ( mUri . getPort () ) ; if ( sameHost && samePort ) { return true ; } return false ; } 
public static ogame.utility.Resource [] convertCosts ( long [] costs ) { ogame.utility.Resource [] resources = new ogame.utility.Resource [ ( costs.length ) / 3 ] ; for ( int i = 0 ; i < 3 ; i += 3 ) { resources [ ( i / 3 ) ] = new ogame.utility.Resource ( costs [ i ] , costs [ ( i + 1 ) ] , costs [ ( i + 2 ) ] ) ; } return resources ; } 
private java.lang.String getClassCanonicalName ( javax.swing.JTextField textField ) { java.lang.String canonicalName = textField . getText () . replaceAll ( " " , "" ) . replaceAll ( ".java$" , "" ) ; if ( ( org.apache.http.util.TextUtils . isEmpty ( canonicalName ) ) || ( canonicalName . endsWith ( "." ) ) ) { com.intellij.openapi.ui.Messages . showMessageDialog ( mMapperRuntimeParams . getProject () , "error" , "the class name is not allowed" , com.intellij.openapi.ui.Messages . getErrorIcon () ) ; return null ; } return canonicalName ; } 
public static java.lang.String makeStackValue ( java.lang.String value , boolean isRemoveLine ) { int sIndex = scouter.client.stack.utils.StringUtils . getStartIindex ( value ) ; if ( sIndex < 0 ) { throw new java.lang.RuntimeException ( ( value + " is not stack!" ) ) ; } int eIndex = 0 ; if ( isRemoveLine ) { eIndex = value . indexOf ( '(' ) ; } if ( eIndex > 0 ) { return value . substring ( ( sIndex + 3 ) , eIndex ) ; } else { return value . substring ( ( sIndex + 3 ) ) ; } } 
protected void debug_update ( java.lang.String stmt , java.lang.Object . . . args ) { if ( DebugUtils . canDebug ( getClass () , DBConnector . class , DBConnector.DebugFlag.UPDATES ) ) { DebugUtils . printDebugInfo ( ( "Executing update:\n   " + ( Utils . wrapString ( Utils . replaceEach ( stmt , "?" , "arg:'%s'" , args ) , 50 , "\n   " ) ) ) , getClass () , DBConnector . class , DBConnector.DebugFlag.UPDATES ) ; } } 
private java.lang.String randomVehicle () { int [] nums = new int [] { 39 , 40 , 50 , 58 , 59 , 67 , 74 , 75 , 81 , 82 , 83 , 89 , 90 , 91 } ; int num = random . nextInt ( nums.length ) ; return java.lang.String . format ( "vehicle_%s" , num ) ; } 
private void initWeixinShare ( android.content.Context context ) { mIWXAPI = com.tencent.mm.sdk.openapi.WXAPIFactory . createWXAPI ( context , mWeChatAppId , true ) ; if ( ! ( mIWXAPI . isWXAppInstalled () ) ) { android.widget.Toast . makeText ( context , context . getString ( R.string.share_install_wechat_tips ) , Toast.LENGTH_SHORT ) . show () ; return; } else { mIWXAPI . registerApp ( mWeChatAppId ) ; } } 
protected static java.lang.Object getModelObject ( javax.swing.JComponent c ) { if ( c instanceof javax.swing.JTree ) { final javax.swing.tree.TreePath path = ( ( javax.swing.JTree ) ( c ) ) . getSelectionPath () ; final java.lang.Object pathComponent = path . getLastPathComponent () ; if ( pathComponent instanceof javax.swing.tree.DefaultMutableTreeNode ) { final javax.swing.tree.DefaultMutableTreeNode node = ( ( javax.swing.tree.DefaultMutableTreeNode ) ( pathComponent ) ) ; final java.lang.Object userObject = node . getUserObject () ; return userObject ; } } return null ; } 
public static java.lang.StringBuilder escapeIdentifier ( java.lang.StringBuilder sbuf , java.lang.String value ) throws java.sql.SQLException { if ( sbuf == null ) { sbuf = new java.lang.StringBuilder ( ( 2 + ( ( ( value . length () ) * 11 ) / 10 ) ) ) ; } org.postgresql.core.Utils . doAppendEscapedIdentifier ( sbuf , value ) ; return sbuf ; } 
public void setDropletParameters () { for ( int i = 0 ; i < ( droplets . size () ) ; i ++ ) { droplets . get ( i ) . x = ( ( ( frameSizeX ) / ( cannonCount ) ) * ( cannonIndex ) ) + ( ( ( frameSizeX ) / ( cannonCount ) ) / 2 ) ; droplets . get ( i ) . y += 5 ; } } 
public long inputGroupID ( java.lang.String prompt ) { java.lang.System.out . print ( prompt ) ; java.lang.String group_id_str = Driver.scanner . nextLine () ; if ( ! ( Driver . isInteger ( user_id_str ) ) ) { java.lang.System.out . println ( "\nERROR: Invalid ID (must be an integer)\n" ) ; return - 1 ; } long group_id = java.lang.Integer . parseInt ( group_id_str ) ; if ( ! ( groupExists ( group_id ) ) ) { java.lang.System.out . println ( ( ( "\nERROR: Group with id " + group_id ) + " does not exist.\n" ) ) ; return - 1 ; } return group_id ; } 
private java.lang.String getDateandTimeasYYMMDDhhmm () { java.lang.String methodname = new java.lang.Object () {} . getClass () . getEnclosingMethod () . getName () ; mjt.shopwise.LogMsg . LogMsg ( LogMsg.LOGTYPE_INFORMATIONAL , mjt.shopwise.BackupActivity.LOGTAG , "Invoked" , this , methodname ) ; java.util.Calendar cldr = java.util.Calendar . getInstance () ; java.lang.String rv = "" ; @ android.annotation.SuppressLint ( value = "SimpleDateFormat" ) java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat ( "yyyyMMddHHmm" ) ; rv = "_" + ( sdf . format ( cldr . getTime () ) ) ; return rv ; } 
private void firePropertyChange ( org.cerberus.crud.entity.Parameter parameter ) { java.util.Set < org.cerberus.crud.service.impl.ParameterAware > existingRegistration ; synchronized ( propertyRegistration ) { existingRegistration = new java.util.HashSet ( propertyRegistration . get ( parameter . getParam () ) ) ; } if ( existingRegistration != null ) { for ( org.cerberus.crud.service.impl.ParameterAware parameterAware : existingRegistration ) { parameterAware . parameterChanged ( parameter ) ; } } } 
private java.lang.String getSharedPreferenceUid () { java.lang.String uid = "" ; if ( mSharedPreferences . contains ( getResources () . getString ( R.string.application_uid_key ) ) ) { uid = mSharedPreferences . getString ( getResources () . getString ( R.string.application_uid_key ) , getResources () . getString ( R.string.default_application_uid_value ) ) ; } else { setSharedPreferenceUid ( getResources () . getString ( R.string.default_application_uid_value ) ) ; } android.util.Log . d ( com.concavenp.artistrymuse.services.UserAuthenticationService.TAG , ( "getSharedPreferenceUid: " + uid ) ) ; return uid ; } 
@ android.support.annotation.NonNull @ java.lang.Override public android.app.Dialog onCreateDialog ( android.os.Bundle savedInstanceState ) { android.os.Bundle args = getArguments () ; int year = args . getInt ( de.haw.yumiii.supercalendar.utils.DatePickerFragment.ARG_YEAR ) ; int month = args . getInt ( de.haw.yumiii.supercalendar.utils.DatePickerFragment.ARG_MONTH ) ; int day = args . getInt ( de.haw.yumiii.supercalendar.utils.DatePickerFragment.ARG_DAY ) ; return new android.app.DatePickerDialog ( getActivity () , this , year , month , day ) ; } 
public void setVariableValue ( com.effektif.workflow.api.model.WorkflowInstanceId workflowInstanceId , java.lang.String activityInstanceId , java.lang.String variableId , java.lang.Object value ) { com.effektif.workflow.impl.workflowinstance.WorkflowInstanceImpl workflowInstance = lockWorkflowInstanceWithRetry ( workflowInstanceId , activityInstanceId ) ; com.effektif.workflow.impl.workflowinstance.ActivityInstanceImpl activityInstance = workflowInstance . findActivityInstance ( activityInstanceId ) ; com.effektif.workflow.impl.workflowinstance.VariableInstanceImpl variableInstance = activityInstance . findVariableInstance ( variableId ) ; if ( ( variableInstance.type ) != null ) {} activityInstance . setVariableValue ( variableId , value ) ; workflowInstance . executeWork () ; } 
@ java.lang.Override public void onSuccess ( java.lang.String result ) { if ( result . equals ( "valid" ) ) { placeController . goTo ( new edu.arizona.biosemantics.etcsite.client.content.semanticMarkup.SemanticMarkupInputPlace () ) ; edu.arizona.biosemantics.etcsite.client.common.Alerter . stopLoading ( box ) ; } else { edu.arizona.biosemantics.etcsite.client.common.Alerter . inputError ( result ) ; edu.arizona.biosemantics.etcsite.client.common.Alerter . stopLoading ( box ) ; } } 
@ org.junit.Test @ org.springframework.security.test.context.support.WithMockUser ( username = "servicetester" , roles = { "SERVICE" } ) public void testAddInvoice_shouldAddInvoiceWithoutUser ( ) throws com.at.ac.tuwien.sepm.ss15.edulium.dao.DAOException , com.at.ac.tuwien.sepm.ss15.edulium.domain.validation.ValidationException , com.at.ac.tuwien.sepm.ss15.edulium.service.ServiceException { com.at.ac.tuwien.sepm.ss15.edulium.domain.Invoice invoice = new com.at.ac.tuwien.sepm.ss15.edulium.domain.Invoice () ; invoice . setTime ( java.time.LocalDateTime . now () ) ; invoice . setGross ( new java.math.BigDecimal ( "15.6" ) ) ; invoiceService . addInvoice ( invoice ) ; org.mockito.Mockito . verify ( invoiceDAO ) . create ( invoice ) ; } 
public void update ( org.newdawn.slick.GameContainer gc , int i ) throws org.newdawn.slick.SlickException { diceButton . update ( gc , i ) ; if ( ( ( control.isPlayerTurn ) == true ) && ( ( diceButton.buttonDiceControl ) == true ) ) { if ( ( once ) < 1 ) { writeDiceToConsole () ; ( once ) ++ ; diceButton.buttonDiceControl = false ; } } } 
private void parseBuyerTimes ( java.lang.String buyerList ) { try { java.io.File buyer_file = new java.io.File ( buyerList ) ; java.util.Scanner buyer_scanner = new java.util.Scanner ( buyer_file ) ; buyerTimes = new java.util.TreeMap < java.lang.Integer , java.util.LinkedList < java.lang.String > > () ; while ( buyer_scanner . hasNextLine () ) { java.lang.String nextLn = buyer_scanner . nextLine () ; java.lang.String [] split = nextLn . split ( "," ) ; createTreeMapBuyer ( split ) ; } } catch ( java.lang.Exception e ) { java.lang.System.out . println ( "File is not found" ) ; } } 
public void actionPerformed ( java.awt.event.ActionEvent arg0 ) { int selectedRow = customersTable . getSelectedRow () ; if ( selectedRow >= 0 ) { popupFrame . fillInForm ( "CUSTOMER" , ( ( com.jasonandrews.projects.businessmanager.Customer ) ( customerList . get ( selectedRow ) ) ) . getCustomerInformation () ) ; } popupFrame . setVisible ( true ) ; customerOptionsPopup . setVisible ( false ) ; } 
@ java.lang.Override public java.lang.String getClassName ( org.apache.commons.bcel6.generic.ConstantPoolGen cpg ) { org.apache.commons.bcel6.classfile.ConstantPool cp = cpg . getConstantPool () ; org.apache.commons.bcel6.classfile.ConstantCP cmr = ( ( org.apache.commons.bcel6.classfile.ConstantCP ) ( cp . getConstant ( super . getIndex () ) ) ) ; java.lang.String className = cp . getConstantString ( cmr . getClassIndex () , Const.CONSTANT_Class ) ; if ( className . startsWith ( "[" ) ) { throw new java.lang.IllegalArgumentException ( "Cannot be used on an array type" ) ; } return className . replace ( '/' , '.' ) ; } 
@ java.lang.Override public void provideContext ( java.lang.String input ) { twitter.interpreter.QAActor.logger . debug ( "Generating QA response for text: {}" , input ) ; java.lang.String attName = "type" ; java.lang.String attValue = "certain" ; store . setAttribute ( attName , attValue ) ; answer = store . bestMatch ( input ) ; twitter.interpreter.QAActor.logger . debug ( "Got QA response: {}" , answer ) ; wantToAct = true ; } 
@ java.lang.Override public void playlistLoaded ( com.sedmelluq.discord.lavaplayer.track.AudioPlaylist playlist ) { java.util.List < com.sedmelluq.discord.lavaplayer.track.AudioTrack > tracks = playlist . getTracks () ; boolean isPlaying = this . MUSIC_MANAGER . getScheduler () . isPlaying () ; for ( com.sedmelluq.discord.lavaplayer.track.AudioTrack track : tracks ) { com.github.drsmugbrain.youtube.Song song = new com.github.drsmugbrain.youtube.Song ( track , this . CHANNEL , this . SUBMITTER ) ; this . MUSIC_MANAGER . getScheduler () . queue ( song ) ; } java.lang.String response = java.lang.String . format ( "Added %d songs to the queue." , tracks . size () ) ; com.github.drsmugbrain.util.Bot . sendMessage ( this . CHANNEL , response ) ; } 
@ java.lang.Override public boolean aAssezDeMarge () { log . warning ( ( ( "Replanification partielle nécessaire : " + ( minus ( indexLast , indexFirst ) ) ) + " points d'avance seulement." ) , Verbose.REPLANIF.masque ) ; return ( ! ( uptodate ) ) && ( ( minus ( indexLast , indexFirst ) ) < ( margeNecessaire ) ) ; } 
private static boolean subtypeOfTypeVar ( org.sonar.java.resolve.JavaType arg , org.sonar.java.resolve.JavaType.TypeVariableJavaType formal ) { for ( org.sonar.java.resolve.JavaType bound : formal . bounds () ) { if ( ( bound . isTagged ( JavaType.TYPEVAR ) ) && ( ! ( org.sonar.java.resolve.Resolve . subtypeOfTypeVar ( arg , ( ( org.sonar.java.resolve.JavaType.TypeVariableJavaType ) ( bound ) ) ) ) ) ) { return false ; } else if ( ! ( arg . isSubtypeOf ( bound ) ) ) { return false ; } } return true ; } 
protected final void AdeMaskLog ( java.lang.String [] args ) { try { run ( args ) ; } catch ( org.openmainframe.ade.exceptions.AdeUsageException e ) { getMessageHandler () . handleUserException ( e ) ; } catch ( org.openmainframe.ade.exceptions.AdeInternalException e ) { getMessageHandler () . handleAdeInternalException ( e ) ; } catch ( org.openmainframe.ade.exceptions.AdeException e ) { getMessageHandler () . handleAdeException ( e ) ; } catch ( java.lang.Throwable e ) { getMessageHandler () . handleUnexpectedException ( e ) ; } finally { quietCleanup () ; } } 
public void randomPlay () { int x ; int y ; while ( true ) { x = battleship.service.RandomNumber . getRandom ( Constants.GRID_SIZE ) ; y = battleship.service.RandomNumber . getRandom ( Constants.GRID_SIZE ) ; if ( ! ( player . hasBeenShot ( x , y ) ) ) { player . shoot ( x , y ) ; player . printGrid ( true ) ; player . getBoatSunk () ; } if ( player . getWinner () ) { break; } } } 
public java.io.InputStream retrieve ( java.lang.String key ) throws java.io.IOException { try { if ( ! ( doesObjectExist ( key ) ) ) { com.aliyun.fs.oss.nat.JetOssNativeFileSystemStore.LOG . error ( ( "NoSuchKey: " + key ) ) ; return null ; } com.aliyun.fs.oss.nat.OSSObject object = ossClient . getObject ( bucket , key ) ; return object . getObjectContent () ; } catch ( com.aliyun.oss.ServiceException e ) { handleServiceException ( key , e ) ; return null ; } } 
public java.lang.String normalisePath ( java.lang.String url ) { url = url . replace ( '.' , '/' ) ; url = url . replace ( '_' , '.' ) ; if ( url . contains ( "/" ) ) { url = url . substring ( url . indexOf ( "/" ) ) ; } else { url = "/" ; } return url ; } 
private static net.isucon.bench.Scenario getRootInstance ( java.lang.Class root , net.isucon.bench.Config config ) { net.isucon.bench.Scenario sc = null ; try { sc = ( ( net.isucon.bench.Scenario ) ( root . getConstructor ( java.lang.Long . class ) . newInstance () ) ) ; } catch ( java.lang.NoSuchMethodException | java.lang.InstantiationException | java.lang.IllegalAccessException | java.lang.reflect.InvocationTargetException e ) { java.lang.System.err . format ( "Failed to create instance of Scenario: %s%n" , root ) ; java.lang.System.err . format ( "Error %s: %s" , e . getClass () , e . getMessage () ) ; } return sc ; } 
public void setState ( boolean state ) { this . state = state ; try { client . put ( ru.semiot.drivers.regulator.relay.Regulator.TEMPLATE_MSG . replace ( "${VAL}" , ( state ? ru.semiot.drivers.regulator.relay.Regulator.TURN_ON_ACTION : ru.semiot.drivers.regulator.relay.Regulator.TURN_OFF_ACTION ) ) , 0 ) ; } catch ( java.lang.RuntimeException ex ) { ru.semiot.drivers.regulator.relay.Regulator.logger . error ( "Bad resource! Can't execute request! URI is {}.Exception message is {}" , client . getURI () , ex . getMessage () ) ; } } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { rangesPanel . removeRow ( rowNumber ) ; removeRowIndex ( rowNumber ) ; updateRowsIndexes ( rowNumber ) ; if ( ( rangesPanel . getNumberOfRows () ) == 1 ) { rangesPanel . removeLastElementFromRow ( 0 ) ; } controller . removeRange ( rowNumber , problematicCheckbox . isSelected () ) ; } 
@ java.lang.Override public void onDestroy () { locationManager . removeUpdates ( locationListener ) ; if ( ( trackPoints . size () ) > 0 ) { new ru.qsolution.vodovoz.driver.AsyncTasks.SendCoordinatesTask () . execute ( authKey , trackIdResult . getResult () , trackPoints ) ; } android.util.Log . i ( "Location" , ( "stopping location updates for route list #" + ( ru.qsolution.vodovoz.driver.Services.LocationService.RouteListId ) ) ) ; super . onDestroy () ; } 
public void setHeaderStrict ( final htsjdk.samtools.SAMFileHeader header ) { if ( null == header ) { mReferenceIndex = null ; mMateReferenceIndex = null ; } else { java.lang.Integer referenceIndex = htsjdk.samtools.SAMRecord . resolveIndexFromName ( mReferenceName , header , true ) ; java.lang.Integer mateReferenceIndex = htsjdk.samtools.SAMRecord . resolveIndexFromName ( mMateReferenceName , header , true ) ; mReferenceIndex = referenceIndex ; mMateReferenceIndex = mateReferenceIndex ; this . mHeader = header ; } } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { android.view.View v = inflater . inflate ( R.layout.fragment_about , container , false ) ; initializeViews ( v ) ; initilizeLocations () ; initGoogleMaps () ; setDialNumberListener ( phoneDCTextView , "6503018434" ) ; setDialNumberListener ( phoneAdultTextView , "6503018434" ) ; setDialNumberListener ( phoneBelmontTextView , "6508026534" ) ; setDialNumberListener ( phoneRedwoodTextView , "6508026534" ) ; return v ; } 
@ java.lang.Override protected void assertElementsEqual ( java.lang.Object expected , java.lang.Object actual ) { if ( expected instanceof java.lang.Double ) org.junit.Assert . assertEquals ( ( ( java.lang.Double ) ( expected ) ) , ( ( java.lang.Double ) ( actual ) ) , fDelta ) ; else org.junit.Assert . assertEquals ( ( ( java.lang.Float ) ( expected ) ) , ( ( java.lang.Float ) ( actual ) ) , fDelta ) ; } 
@ java.lang.Override public void map ( water.rapids.Chunk [] cs , water.rapids.NewChunk [] ncs ) { water.rapids.Chunk c = cs [ 0 ] ; for ( int i = 0 ; i < ( c._len ) ; ++ i ) { if ( ! ( c . isNA ( i ) ) ) { int idx = ( ( int ) ( c . at8 ( i ) ) ) ; ncs [ 0 ] . addNum ( matchCounts [ idx ] ) ; } else ncs [ i ] . addNA () ; } } 
private com.navercorp.pinpoint.bootstrap.instrument.matcher.operand.MatcherOperand joinOr () { com.navercorp.pinpoint.bootstrap.instrument.matcher.operand.MatcherOperand operand = null ; for ( java.lang.String baseClassName : this . baseClassNames ) { if ( operand == null ) { operand = new com.navercorp.pinpoint.bootstrap.instrument.matcher.operand.ClassInternalNameMatcherOperand ( baseClassName ) ; } else { final com.navercorp.pinpoint.bootstrap.instrument.matcher.operand.MatcherOperand classMatcherOperand = new com.navercorp.pinpoint.bootstrap.instrument.matcher.operand.ClassInternalNameMatcherOperand ( baseClassName ) ; operand = operand . or ( classMatcherOperand ) ; } } return operand ; } 
public org.kohsuke.stapler.HttpResponse doCommenceLogin ( ) throws java.io.IOException , org.openid4java.OpenIDException { final org.openid4java.message.AuthRequest authReq = manager . authenticate ( endpoint , ( ( hudson.model.Hudson . getInstance () . getRootUrl () ) + ( finishUrl ) ) ) ; hudson.plugins.openid.OpenIdExtension . extendRequest ( authReq ) ; java.lang.String url = authReq . getDestinationUrl ( true ) ; org.kohsuke.stapler.Stapler . getCurrentRequest () . getSession () . setAttribute ( hudson.plugins.openid.OpenIdSession.SESSION_NAME , this ) ; return new org.kohsuke.stapler.HttpRedirect ( url ) ; } 
private void initView () { mPicPathStr = getIntent () . getStringExtra ( me.jp.picturecrop.ui.PictureCropActivity.PIC_PATH ) ; if ( ! ( android.text.TextUtils . isEmpty ( mPicPathStr ) ) ) { mBitmap = me.jp.picturecrop.util.BitmapUtil . getSmallBitmap ( mPicPathStr , 1080 , 1920 ) ; } mClipImageLayout = ( ( me.jp.picturecrop.view.ClipImageLayout ) ( findViewById ( R.id.id_clipImageLayout ) ) ) ; mClipImageLayout . setClipImage ( new android.graphics.drawable.BitmapDrawable ( mBitmap ) ) ; } 
@ javafx.fxml.FXML private void handleKeyPress ( javafx.scene.input.KeyEvent event ) { javafx.scene.input.KeyCode key = event . getCode () ; switch ( key ) { case UP : java.lang.String prevCommand = getPrevCommand ( lastPrev ) ; lastPrev = prevCommand ; commandTextField . setText ( prevCommand ) ; return; case DOWN : java.lang.String nextCommand = getNextCommand ( currentShownCommand ) ; commandTextField . setText ( nextCommand ) ; return; } } 
@ java.lang.Override public java.lang.String getMessage () { java.lang.StringBuilder buf = new java.lang.StringBuilder () ; buf . append ( getMessage () ) ; if ( ( statement ) != null ) { buf . append ( ", query was: " ) ; buf . append ( statement . toString () ) ; } return buf . toString () ; } 
@ org.junit.Test public void fromConstructor () { cc.catalysts.boot.report.pdf.config.PdfTextStyle config = new cc.catalysts.boot.report.pdf.config.PdfTextStyle ( "10,Times-Roman,#000000" ) ; org.junit.Assert . assertEquals ( 10 , config . getFontSize () ) ; org.junit.Assert . assertEquals ( "Times-Roman" , config . getFont () . getBaseFont () ) ; org.junit.Assert . assertEquals ( java.awt.Color.black , config . getColor () ) ; } 
public void add ( java.lang.String key , org.entirej.applicationframework.rwt.layout.EJRWTEntireJStackedPane.StackedPage control ) { if ( ( _stackLayout.topControl ) == null ) { _stackLayout.topControl = control . getControl () ; active = key ; } _panes . put ( key , control ) ; _pages . add ( control ) ; control . getControl () ; } 
private void removeNotificatoinsOf ( org.eclipse.californium.core.observe.ObserveRelation relation ) { org.eclipse.californium.core.network.Matcher.LOGGER . fine ( "Remove all remaining NON-notifications of observe relation" ) ; for ( java.util.Iterator < org.eclipse.californium.core.coap.Response > iterator = relation . getNotificationIterator () ; iterator . hasNext () ; ) { org.eclipse.californium.core.coap.Response previous = iterator . next () ; org.eclipse.californium.core.network.Exchange.KeyMID idByMID = new org.eclipse.californium.core.network.Exchange.KeyMID ( previous . getMID () , previous . getDestination () . getAddress () , previous . getDestinationPort () ) ; exchangesByMID . remove ( idByMID ) ; iterator . remove () ; } } 
private void loadServerStubs () { if ( ( this . configuration ) == null ) { return; } this . calculationServers = new distributor.ArrayList < distributor.ServerInterface > () ; for ( distributor.ServerInformation serverInfo : this . configuration . getServers () ) { distributor.ServerInterface stub = this . loadServerStub ( serverInfo ) ; this . calculationServers . add ( stub ) ; } } 
@ java.lang.Override public void mouseReleased ( java.awt.event.MouseEvent e ) { switch ( e . getButton () ) { case 1 : { btns [ 1 ] = false ; break; } case 2 : { btns [ 2 ] = false ; break; } case 3 : { btns [ 3 ] = false ; break; } } } 
@ java.lang.Override public org.broad.igv.feature.tribble.BasicFeature decode ( java.lang.String nextLine ) { java.lang.String trimLine = nextLine . trim () ; if ( ( trimLine . length () ) == 0 ) { return null ; } if ( ( ( nextLine . startsWith ( "#" ) ) || ( nextLine . startsWith ( "track" ) ) ) || ( nextLine . startsWith ( "browser" ) ) ) { this . readHeaderLine ( nextLine ) ; return null ; } tokens = Globals.whitespacePattern . split ( trimLine ) ; return decode ( tokens ) ; } 
private boolean isEmptyBody ( java.util.Map < java.lang.String , java.lang.String > transportHeadersMap ) { boolean isEmptyBody = false ; if ( transportHeadersMap != null ) { java.lang.String contentLength = transportHeadersMap . get ( HTTPConstants.HEADER_CONTENT_LENGTH ) ; if ( ( contentLength != null ) && ( ( java.lang.Integer . parseInt ( contentLength ) ) == 0 ) ) { isEmptyBody = true ; } } return isEmptyBody ; } 
public void play () { if ( ! ( queue . isEmpty () ) ) { playing = true ; model.Song s = queue . getElementAt ( 0 ) ; songplayer.SongPlayer . playFile ( new model.Jukebox.SongWaiter () , ( ( model.Jukebox.baseDir ) + ( s . getFileName () ) ) ) ; } return; } 
private void editProcess ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response , int roll ) throws java.io.IOException , javax.servlet.ServletException { java.lang.String name = request . getParameter ( "name" ) ; java.lang.String address = request . getParameter ( "address" ) ; com.lftechnology.batch7crud.model.Student s = new com.lftechnology.batch7crud.model.Student ( name , address , roll ) ; com.lftechnology.batch7crud.service.StudentServices stdServices = new com.lftechnology.batch7crud.service.StudentServices () ; try { stdServices . update ( s ) ; response . sendRedirect ( "/Students" ) ; } catch ( com.lftechnology.batch7crud.exception.DataException e ) { com.lftechnology.batch7crud.controller.StudentListController.LOGGER . log ( java.util.logging.Level.SEVERE , e . getMessage () ) ; } } 
private void markDropArea ( int itemIndex ) { if ( ( isIndexInBound ( mDragEnteredEntryIndex ) ) && ( isIndexInBound ( itemIndex ) ) ) { mDataSetChangedListener . cacheOffsetsForDatasetChange () ; final int oldIndex = mDragEnteredEntryIndex ; mContactEntries . remove ( mDragEnteredEntryIndex ) ; mDragEnteredEntryIndex = itemIndex ; mContactEntries . add ( mDragEnteredEntryIndex , ContactEntry.BLANK_ENTRY ) ; ContactEntry.BLANK_ENTRY.id = mDraggedEntry.id ; mDataSetChangedListener . onDataSetChangedForAnimation () ; notifyDataSetChanged () ; } } 
private void convertFromSDK ( final org.eyeseetea.malariacare.data.sync.importer.Callback callback , org.eyeseetea.malariacare.domain.usecase.pull.ConversionFilter conversionFilter ) { android.util.Log . d ( org.eyeseetea.malariacare.data.sync.importer.PullController.TAG , "Converting SDK into APP data" ) ; try { if ( conversionFilter . metadataConversion () ) { convertMetaData ( callback ) ; } if ( conversionFilter . dataConversion () ) { convertData ( callback ) ; } else { callback . onComplete () ; } } catch ( java.lang.Exception ex ) { ex . printStackTrace () ; callback . onError ( new org.eyeseetea.malariacare.domain.exception.PullConversionException () ) ; } } 
private void logHeader ( java.lang.StringBuilder builder ) { if ( showThreadInfo ) { builder . append ( com.ns.greg.library.fancy_logger.Printer.TOP_BORDER ) . append ( com.ns.greg.library.fancy_logger.Printer.NEW_LINE ) . append ( com.ns.greg.library.fancy_logger.Printer.HORIZONTAL_LINE ) . append ( com.ns.greg.library.fancy_logger.Printer.THREAD_TITLE ) . append ( java.lang.Thread . currentThread () . getName () ) . append ( com.ns.greg.library.fancy_logger.Printer.NEW_LINE ) ; } } 
@ java.lang.Override public void onDismiss ( android.content.DialogInterface dialog ) { java.util.ArrayList < java.lang.String > value = treeViewDialog . getValue () ; if ( ( value != null ) && ( ( value . size () ) > 0 ) ) { org.json.JSONArray array = new org.json.JSONArray ( value ) ; com.vijay.jsonwizard.widgets.TreeViewFactory . changeEditTextValue ( editText , array . toString () ) ; } } 
public void boxClicked ( android.view.View view ) { if ( mCheckBox . isChecked () ) { com.elena.latencymeter.MainActivity.clockWise = false ; } else { com.elena.latencymeter.MainActivity.clockWise = true ; } android.util.Log . d ( com.elena.latencymeter.MainActivity.TAG , ( "direction clockWise: " + ( com.elena.latencymeter.MainActivity.clockWise ) ) ) ; AnimationView.count = 0 ; AnimationView.distance = 0 ; myView . invalidate () ; } 
@ javax.ws.rs.GET public java.util.List < org.glen.mccarthy.messenger.model.Message > getMessages ( @ javax.ws.rs.QueryParam ( value = "year" ) int year , @ javax.ws.rs.QueryParam ( value = "start" ) int start , @ javax.ws.rs.QueryParam ( value = "size" ) int size ) { if ( year > 0 ) return service . getAllMessagesForYear ( year ) ; if ( ( start >= 0 ) && ( size >= 0 ) ) return service . getAllMessagesPaginated ( start , size ) ; return service . getAllMessages () ; } 
private void speicherePasswort () { java.lang.String passwort = pfPasswort . getText () ; if ( ( passwort . length () ) < 5 ) { c . speichereZugang ( passwort ) ; window . close () ; mainFrame . showWindow () ; } else { lAnzeige . setText ( "Mindestlänge von 5 Zeichen nötig für das Passwort!" ) ; } } 
public voronoigame.view.ContentPanel removeContent () { if ( ( this . contentPanel ) != null ) { this . pmContentContainer . remove ( this . contentPanel ) ; this . contentPanel . notifyPanelRemoved () ; this . contentPanel . setVisible ( false ) ; voronoigame.view.ContentPanel removed = this . contentPanel ; this . contentPanel = null ; return removed ; } else { return null ; } } 
private program3.kmeans.Kmeans.Record scale ( program3.kmeans.Kmeans.Record u , double k ) { double [] result = new double [ u.attributes.length ] ; for ( int i = 0 ; i < ( result.length ) ; i ++ ) { result [ i ] = k * ( u.attributes [ i ] ) ; } return new program3.kmeans.Kmeans.Record ( result ) ; } 
@ java.lang.Override public void run () { while ( keepAlive ) { try { sendString ( de.hhn.munz.ardrone2.ATCommand . keepAlive () , false ) ; java.lang.Thread . sleep ( 100 ) ; } catch ( java.lang.Exception e ) { android.util.Log . w ( de.hhn.munz.ardrone2.NetworkController.TAG , ( "KeepAlive: " + ( e . getMessage () ) ) ) ; } } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; mNavigationDrawerFragment = ( ( co.mrdavidliu.uwinfosession.NavigationDrawerFragment ) ( getSupportFragmentManager () . findFragmentById ( R.id.navigation_drawer ) ) ) ; mTitle = getTitle () ; mNavigationDrawerFragment . setUp ( R.id.navigation_drawer , ( ( android.support.v4.widget.DrawerLayout ) ( findViewById ( R.id.drawer_layout ) ) ) ) ; setupCalendar () ; } 
public void uploadItem ( com.project4398.michael.austinfoodtrucks.TruckInfo itemToUpload ) { java.io.File file = new java.io.File ( mContext . getFilesDir () , "fileName.txt" ) ; java.io.FileOutputStream fos = null ; org.json.JSONObject TruckItemJson = toJsonAndBeyond ( itemToUpload ) ; try { file = com.project4398.michael.austinfoodtrucks.AWSInterface . createSampleFile ( TruckItemJson ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } android.util.Log . d ( "uploadItem" , "Creating an AmazonS3Client" ) ; com.amazonaws.services.s3.AmazonS3Client s3Client = getAmazonS3Client () ; com.amazonaws.services.s3.model.PutObjectRequest por = new com.amazonaws.services.s3.model.PutObjectRequest ( Bucket_Curr , itemToUpload.name , file ) ; s3Client . putObject ( por ) ; } 
public void setUserInputAdapter ( wraith.library.WindowUtil.UserInputAdapter adapter ) { if ( ( this . adapter ) != null ) { frame . removeMouseListener ( adapter ) ; frame . removeMouseMotionListener ( adapter ) ; frame . removeMouseWheelListener ( adapter ) ; frame . removeKeyListener ( adapter ) ; } this . adapter = adapter ; if ( adapter != null ) { frame . addMouseListener ( adapter ) ; frame . addMouseMotionListener ( adapter ) ; frame . addMouseWheelListener ( adapter ) ; frame . addKeyListener ( adapter ) ; } } 
@ java.lang.Override public void validate ( cc.redpen.model.Section section ) { for ( cc.redpen.model.Paragraph currentParagraph : section . getParagraphs () ) { if ( ( currentParagraph . getNumberOfSentences () ) == 0 ) { continue; } cc.redpen.model.Sentence firstSentence = currentParagraph . getSentence ( 0 ) ; if ( ( firstSentence . getContent () . indexOf ( getString ( "start_from" ) ) ) != 0 ) { addLocalizedError ( section . getJoinedHeaderContents () , firstSentence . getContent () . charAt ( 0 ) ) ; } } } 
public void removeProfileData ( int id ) { if ( ( getProfileDataList () . get ( id ) . getRecno () ) != null ) { getRemovedProfile () . add ( getSelectedProfileDataList () . get ( id ) . getRecno () ) ; } getProfileDataList () . remove ( getProfileDataList () . get ( id ) ) ; getSelectedProfileDataList () . remove ( id ) ; } 
public void createDummyUser () { mPrefs = android.preference.PreferenceManager . getDefaultSharedPreferences ( this ) ; edu.pitt.cs.cs1635.studybuddies.User newUser = new edu.pitt.cs.cs1635.studybuddies.User ( mPrefs . getString ( "username" , "" ) ) ; edu.pitt.cs.cs1635.studybuddies.MainActivity.currentUser = newUser ; edu.pitt.cs.cs1635.studybuddies.MainActivity.currentUser . addFavorite ( edu.pitt.cs.cs1635.studybuddies.MainActivity.groups . get ( 3 ) ) ; edu.pitt.cs.cs1635.studybuddies.MainActivity.currentUser . addFavorite ( edu.pitt.cs.cs1635.studybuddies.MainActivity.groups . get ( 6 ) ) ; edu.pitt.cs.cs1635.studybuddies.MainActivity.currentUser . addFavorite ( edu.pitt.cs.cs1635.studybuddies.MainActivity.groups . get ( 9 ) ) ; ( edu.pitt.cs.cs1635.studybuddies.MainActivity.currentUser.c ) ++ ; } 
public void insertData ( java.lang.String vKONTACT_PERSON , java.lang.String vSTARTSAT , int vREPEATSNR , java.lang.String vREPEATSINTERVAL , java.lang.String vUNSHARPEN , int vUNSHARPENNR , java.lang.String vRADOMDATE ) { android.database.sqlite.SQLiteDatabase db = getReadableDatabase () ; db . execSQL ( ( "INSERT INTO Reminder_tabledb(CONTACT_PERSON,STARTSAT,REPEATSNR,REPEATSINTERVAL,UNSHARPEN,UNSHARPENNR,RADOMDATE)" + "values (?,?,?,?,?,?,?)" ) , new java.lang.Object [] { vKONTACT_PERSON , vSTARTSAT , vREPEATSNR , vREPEATSINTERVAL , vUNSHARPEN , vUNSHARPENNR , vRADOMDATE } ) ; } 
@ java.lang.Override public java.lang.Object filter ( java.lang.Object o ) { if ( ( o != null ) && ( nl.openweb.iot.dashboard.service.script.SandboxFilter . filter ( o . getClass () ) ) ) { throw new java.lang.SecurityException ( ( ( "Oops, type " + ( o . getClass () ) ) + " is not permitted to be used in an script" ) ) ; } return o ; } 
@ java.lang.Override public void execute ( ) throws AddressBook.InvalidCommandParameterException { if ( ( parameters . get ( 1 ) . length () ) > 0 ) { consolePrinter . print ( "quiting the program." ) ; java.lang.System . exit ( 0 ) ; } else { throw new AddressBook.InvalidCommandParameterException ( "the \'quit\' command does not need any parameters." ) ; } } 
public void initializeDriveTrain () { org.usfirst.frc.team5818.robot.subsystems.DriveTrain.TALON_MOTOR_FR = new edu.wpi.first.wpilibj.CANTalon ( org.usfirst.frc.team5818.robot.RobotMap.TALON_FR ) ; org.usfirst.frc.team5818.robot.subsystems.DriveTrain.TALON_MOTOR_BR = new edu.wpi.first.wpilibj.CANTalon ( org.usfirst.frc.team5818.robot.RobotMap.TALON_BR ) ; org.usfirst.frc.team5818.robot.subsystems.DriveTrain.TALON_MOTOR_MR = new edu.wpi.first.wpilibj.CANTalon ( org.usfirst.frc.team5818.robot.RobotMap.TALON_MR ) ; org.usfirst.frc.team5818.robot.subsystems.DriveTrain.TALON_MOTOR_FL = new edu.wpi.first.wpilibj.CANTalon ( org.usfirst.frc.team5818.robot.RobotMap.TALON_FL ) ; org.usfirst.frc.team5818.robot.subsystems.DriveTrain.TALON_MOTOR_BL = new edu.wpi.first.wpilibj.CANTalon ( org.usfirst.frc.team5818.robot.RobotMap.TALON_BL ) ; org.usfirst.frc.team5818.robot.subsystems.DriveTrain.TALON_MOTOR_ML = new edu.wpi.first.wpilibj.CANTalon ( org.usfirst.frc.team5818.robot.RobotMap.TALON_MR ) ; } 
@ java.lang.Override public int indexOf ( java.lang.Object o ) { int idx = 0 ; com.ajjpj.afoundation.collection.immutable.AList < T > l = inner ; while ( ! ( inner . isEmpty () ) ) { if ( AEquality.EQUALS . equals ( inner . head () , o ) ) { return idx ; } idx += 1 ; l = l . tail () ; } return - 1 ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.GET , value = "/resultsAnalysis/{id}" , produces = "application/json" ) public org.springframework.http.ResponseEntity < uk.co.olimor.BMBTApi_boot.response.ApiResponse > getResultsAnalysis ( @ org.springframework.web.bind.annotation.PathVariable ( value = "id" ) final java.lang.Integer userId ) { log . entry ( userId ) ; try { final uk.co.olimor.BMBTApi_boot.model.ResultsAnalysis analysis = resultAnalysisBuilder . buildResultsAnalysis ( resultHistoryQuery . getResultHistory ( userId ) ) ; return log . traceExit ( new org.springframework.http.ResponseEntity < uk.co.olimor.BMBTApi_boot.response.ApiResponse > ( new uk.co.olimor.BMBTApi_boot.response.ApiResponse ( analysis ) , org.springframework.http.HttpStatus.OK ) ) ; } catch ( final uk.co.olimor.BMBTApi_boot.exception.ApiException e ) { return log . traceExit ( buildErrorResponse ( e ) ) ; } } 
@ org.junit.Test public void testRegionIsFoundWithStudies () { java.util.List < java.lang.String > studies = new java.util.ArrayList <> () ; studies . add ( "PRJEB6930" ) ; testFiltersHelper ( "11" , 190000 , 191000 , new java.util.ArrayList <> () , null , null , null , null , null , null , studies , 14 ) ; } 
@ java.lang.Override public int getItemViewType ( int position ) { com.kelebro63.intechtest.models.Melody item = getItem ( position ) ; if ( item == null ) return 4 ; if ( ( item == null ) || ( ( item . getItemType () ) == null ) ) return 2 ; switch ( item . getItemType () ) { case NORMAL : return 0 ; case HEADER : return 1 ; case DIVIDER : return 2 ; case ACTIVE : return 3 ; case PROGRESS : return 4 ; } return 0 ; } 
public static java.lang.String computeSignature ( java.util.Map < java.lang.String , java.lang.String > allParameters , java.lang.String secret , java.lang.String postUrl ) throws java.io.UnsupportedEncodingException , java.security.InvalidKeyException , java.security.NoSuchAlgorithmException { java.util.Map < java.lang.String , java.lang.String > sortedMap = com.github.draylundy.iec61850lti.oauth.OAuthAuthorization . encodeKeysAndValues ( allParameters ) ; java.lang.String parameterString = com.github.draylundy.iec61850lti.oauth.OAuthAuthorization . createParameterString ( sortedMap ) ; java.lang.String baseString = com.github.draylundy.iec61850lti.oauth.OAuthAuthorization . createBaseString ( parameterString , postUrl ) ; java.lang.String computedSignature = com.github.draylundy.iec61850lti.oauth.OAuthAuthorization . encryptAndHash ( baseString , secret ) ; return computedSignature ; } 
public void onInspectRequested ( java.lang.Object element ) { java.lang.Integer nodeId = mDocument . getObjectIdMapper () . getIdForObject ( element ) ; if ( nodeId == null ) { com.facebook.stetho.common.LogUtil . d ( "DOMProvider.Listener.onInspectRequested() called for a non-mapped node: element=%s" , element ) ; } else { com.facebook.stetho.inspector.protocol.module.DOM.InspectNodeRequestedEvent message = new com.facebook.stetho.inspector.protocol.module.DOM.InspectNodeRequestedEvent () ; message.nodeId = nodeId ; mPeerManager . sendNotificationToPeers ( "DOM.inspectNodeRequested" , message ) ; } } 
private void initBarChartButton ( android.view.View view ) { android.widget.ImageView mBarChartButton ; if ( getContext () . getResources () . getBoolean ( R.bool.tint_icon ) ) { mBarChartButton = ( ( android.widget.ImageView ) ( view . findViewById ( R.id.button_main_section_bar_chart ) ) ) ; mBarChartButton . setColorFilter ( android.support.v4.content.ContextCompat . getColor ( getActivity () , R.color.search_box_grey ) ) ; } else { mBarChartButton = ( ( android.widget.ImageView ) ( view . findViewById ( R.id.button_extras_section_bar_chart ) ) ) ; mBarChartButton . setVisibility ( View.VISIBLE ) ; } mBarChartButton . setOnClickListener ( this ) ; } 
@ java.lang.Override protected com.airbnb.android.react.maps.AirMapView createViewInstance ( com.facebook.react.uimanager.ThemedReactContext context ) { reactContext = context ; try { com.google.android.gms.maps.MapsInitializer . initialize ( com.airbnb.android.react.maps.ActivityManager . getInstance () . getActivity () , this ) ; } catch ( java.lang.RuntimeException e ) { e . printStackTrace () ; emitMapError ( "Map initialize error" , "map_init_error" ) ; } return new com.airbnb.android.react.maps.AirMapView ( context , com.airbnb.android.react.maps.ActivityManager . getInstance () . getActivity () , this ) ; } 
private void backToFragment ( int level ) { com.jing.app.jjgallery.gdb.view.surf.SurfFragmentTree tree = ftTree ; android.support.v4.app.FragmentTransaction ft = getSupportFragmentManager () . beginTransaction () ; while ( ( tree != null ) && ( level != ( tree.level ) ) ) { tree.child = null ; ft . hide ( tree.fragment ) ; ft . remove ( tree.fragment ) ; tree = tree.parent ; } tree.child = null ; ft . show ( tree.fragment ) ; ft . commit () ; } 
public void postDonation ( final java.lang.String token , final android.app.Activity sourceActivity ) { new android.os.AsyncTask < java.lang.Void , java.lang.Void , java.lang.Void > () { @ java.lang.Override protected java.lang.Void doInBackground ( java.lang.Void . . . params ) { try { billingService . consumePurchase ( 3 , sourceActivity . getPackageName () , token ) ; } catch ( java.lang.Exception ignored ) {} return null ; } } ; } 
public int bestDirection () { if ( ( target.row ) < ( getRow () ) ) { prevdir = 2 ; } if ( ( target.row ) > ( getRow () ) ) { prevdir = 3 ; } if ( ( target.col ) < ( getCol () ) ) { prevdir = 0 ; } if ( ( target.col ) > ( getCol () ) ) { prevdir = 1 ; } return prevdir ; } 
private static java.util.List < com.chess.engine.board.Tile > createGameBoard ( final com.chess.engine.board.Board.Builder builder ) { final com.chess.engine.board.Tile [] tiles = new com.chess.engine.board.Tile [ BoardUtils.NUM_TILES ] ; for ( int i = 0 ; i < ( BoardUtils.NUM_TILES ) ; i ++ ) { tiles [ i ] = com.chess.engine.board.Tile . createTile ( i , builder.boardConfig . get ( 1 ) ) ; } return com.google.common.collect.ImmutableList . copyOf ( tiles ) ; } 
@ java.lang.Override public void execute () { while ( ( org.tribot.api2007.Player . getRSPlayer () . getInteractingCharacter () ) != null ) { org.tribot.api.General . sleep ( 500 , 800 ) ; scripts.pestcontrol.antiban.Antiban . doIdleActions () ; } if ( this . needToGetDamage () ) scripts.pestcontrol.tasks.DefendKnights . getDamage () ; else this . defendKnight () ; } 
public java.util.LinkedList < searchclient.Node > findSolution () { java.util.LinkedList < searchclient.Node > solution = new java.util.LinkedList < searchclient.Node > () ; searchclient.Node thePlan = findHighestPlan ( this . agent , this . state ) ; searchclient.Strategy strategy = new searchclient.Strategy.StrategyBFS () ; strategy . clearFrontier () ; solution = implementHighPlan ( thePlan , strategy ) ; java.lang.System.err . println ( ( "Solution generated by findHighestPlan: " + solution ) ) ; return solution ; } 
public void run () { while ( true ) { try { java.util.List < com.dawai.Dawai > dawaiList = com.dawai.DawaiServer.fNurse . getDawaiToTake ( com.dawai.DawaiServer.fCalendar ) ; for ( com.dawai.Dawai d : dawaiList ) { com.dawai.DawaiServer . sendMessage ( java.lang.String . format ( "Remember to take dawai - %s" , d . getfDawaiName () ) ) ; java.lang.Thread . sleep ( 1000 ) ; } java.lang.Thread . sleep ( 3600000 ) ; } catch ( java.lang.Exception e ) {} } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/stock/target/add" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String processAddForm ( @ javax.validation.Valid com.norstc.asb.stock.StockEntity stockEntity , org.springframework.validation.BindingResult result , java.security.Principal principal ) { if ( result . hasErrors () ) { log . info ( ( "processAdd error: " + ( result . toString () ) ) ) ; return com.norstc.asb.controller.StockController.VIEWS_TARGET_ADD_OR_UPDATE_FORM ; } else { this . stockService . add ( stockEntity ) ; log . info ( ( "processAdd ok: , stockEntity is: " + ( stockEntity . getStockCode () ) ) ) ; return "redirect:" + ( stockEntity . getId () ) ; return "redirect:/stock/target/" + ( stockEntity . getId () ) ; } } 
@ java.lang.Override public int [] getClients () { java.util.Set s = sessionTable . keySet () ; int [] clients = new int [ s . size () ] ; java.util.Iterator it = s . iterator () ; int i = 0 ; while ( it . hasNext () ) { clients [ 0 ] = ( ( java.lang.Integer ) ( it . next () ) ) . intValue () ; i ++ ; } return clients ; } 
private void createMainView () { mainViewModel = new opdracht1d.ViewModels.MainViewModel () ; mainPanel = new opdracht1d.UI.MainPanel ( mainViewModel ) ; mainPanel . setDatumZoekenListener ( new opdracht1d.Controllers.ReservationController.MainViewDatumZoekenButton () ) ; mainPanel . setHuisZoekenListener ( new opdracht1d.Controllers.ReservationController.MainViewHuisZoekenButton () ) ; mainPanel . setNieuweReservatieListener ( new opdracht1d.Controllers.ReservationController.MainViewNieuweReservatieButton () ) ; mainPanel . setTableListener ( new opdracht1d.Controllers.ReservationController.MainViewSelection () ) ; } 
@ java.lang.Override public void chunkLoaderInit ( net.minecraftforge.common.ForgeChunkManager.Ticket ticket ) { if ( ! ( this . worldObj . isRemote ) ) { if ( ticket != null ) { if ( ( this . chunkTicket ) == null ) { this . chunkTicket = ticket ; this . chunkTicket . bindEntity ( this ) ; this . chunkTicket . getModData () ; } net.minecraftforge.common.ForgeChunkManager . forceChunk ( this . chunkTicket , new net.minecraft.world.ChunkCoordIntPair ( this . chunkCoordX , this . chunkCoordZ ) ) ; } } } 
private java.util.HashMap < de.uni_hamburg.informatik.swt.se2.mediathek.materialien.medien.Medium , java.util.LinkedList < de.uni_hamburg.informatik.swt.se2.mediathek.materialien.Vormerkkarte > > erzeugeVormerkkartenBestand () { java.util.LinkedList < de.uni_hamburg.informatik.swt.se2.mediathek.materialien.Vormerkkarte > Liste = new java.util.LinkedList < de.uni_hamburg.informatik.swt.se2.mediathek.materialien.Vormerkkarte > () ; java.util.HashMap < de.uni_hamburg.informatik.swt.se2.mediathek.materialien.medien.Medium , java.util.LinkedList < de.uni_hamburg.informatik.swt.se2.mediathek.materialien.Vormerkkarte > > result = new java.util.HashMap < de.uni_hamburg.informatik.swt.se2.mediathek.materialien.medien.Medium , java.util.LinkedList < de.uni_hamburg.informatik.swt.se2.mediathek.materialien.Vormerkkarte > > () ; for ( de.uni_hamburg.informatik.swt.se2.mediathek.materialien.medien.Medium medium : _medienbestand . getMedien () ) { result . put ( medium , Liste ) ; } return result ; } 
public < T > io.druid.query.QueryRunner < T > getQueryRunner ( io.druid.query.Query < T > query ) { io.druid.query.QueryRunnerFactory < T , io.druid.query.Query < T > > factory = this . conglomerate . findFactory ( query ) ; io.druid.query.QueryToolChest < T , io.druid.query.Query < T > > toolChest = factory . getToolchest () ; return new io.druid.query.FinalizeResultsQueryRunner < T > ( plumber . getQueryRunner ( query ) , toolChest ) ; } 
@ java.lang.Override public java.lang.Object postProcessBeforeInitialization ( java.lang.Object bean , java.lang.String beanName ) throws org.springframework.beans.BeansException { if ( bean instanceof org.springframework.integration.dsl.StandardIntegrationFlow ) { return processStandardIntegrationFlow ( ( ( org.springframework.integration.dsl.StandardIntegrationFlow ) ( bean ) ) , beanName ) ; } else if ( bean instanceof org.springframework.integration.dsl.IntegrationFlow ) { processIntegrationFlowImpl ( ( ( org.springframework.integration.dsl.IntegrationFlow ) ( bean ) ) , beanName ) ; } if ( bean instanceof org.springframework.integration.dsl.core.IntegrationComponentSpec ) { return processIntegrationComponentSpec ( ( ( org.springframework.integration.dsl.core.IntegrationComponentSpec < ? , ? > ) ( bean ) ) , beanName ) ; } return bean ; } 
@ java.lang.Override public void apply ( org.apache.ignite.internal.IgniteInternalFuture < org.apache.ignite.internal.processors.cache.distributed.near.GridNearLockResponse > future ) { if ( ( future . error () ) != null ) onDone ( future . error () ) ; else { try { onResult ( node . id () , future . get () ) ; } catch ( org.apache.ignite.IgniteCheckedException e ) { onError ( e ) ; } } } 
@ java.lang.Override public boolean remove ( T element ) { for ( int i = 0 ; i < ( size ) ; i ++ ) { if ( array [ i ] . equals ( element ) ) { for ( ; i < ( ( size ) - 1 ) ; i ++ ) { array [ i ] = array [ ( i + 1 ) ] ; } return true ; } } return false ; } 
public void Process () { target = validTownTarget ( playerNum ) ; if ( ! ( jailed ) ) { nightAction = ( ( ( "You have decided to kill " + ( java.lang.String . valueOf ( target ) ) ) + "(" ) + ( players . get ( target ) . roleName ) ) + ") tonight." ; } if ( ! ( blocked ) ) { target = checkTargetSwitch ( target ) ; lethalAttack ( target , "Serial Killer" ) ; } } 
public void run () { do { for ( RacingSmiley racer : racers ) { if ( ! ( racer . finishedRace () ) ) { racer . raceForOneTick () ; } } display . repaint () ; pause ( 100 ) ; } while ( isRaceDone ( racers ) ) ; } 
@ java.lang.Override public void dragFinished ( final org.eclipse.swt.dnd.DragSourceEvent event ) { if ( ( event.detail ) == ( org.eclipse.swt.dnd.DND.DROP_MOVE ) ) { final org.eclipselabs.e4.tapiji.translator.ui.treeviewer.provider.TreeViewerContentProvider contentProvider = ( ( org.eclipselabs.e4.tapiji.translator.ui.treeviewer.provider.TreeViewerContentProvider ) ( source . getContentProvider () ) ) ; final org.eclipselabs.e4.tapiji.translator.model.Glossary glossary = contentProvider . getGlossary () ; for ( final org.eclipselabs.e4.tapiji.translator.model.Term selectionObject : selectionList ) { glossary . removeTerm ( selectionObject ) ; } this . glossaryService . updateGlossary ( glossary ) ; this . source . refresh () ; } } 
@ org.junit.Test public void isEmpty ( ) throws java.lang.Exception { AvlTree < java.lang.Integer > avlTree = new AvlTree () ; org.junit.Assert . assertFalse ( "Test for 'isEmpty()' failed: not empty" , ( ! ( avlTree . isEmpty () ) ) ) ; avlTree . add ( 5 ) ; org.junit.Assert . assertFalse ( "Test for 'isEmpty()' failed: empty" , avlTree . isEmpty () ) ; avlTree . remove ( 5 ) ; org.junit.Assert . assertFalse ( "Test for 'isEmpty()' failed: not empty after remove" , ( ! ( avlTree . isEmpty () ) ) ) ; } 
void startDownload () { downloader . startDownload () ; for ( int i = 200 ; i > 1 ; -- i ) { if ( downloader . isStopped () ) { break; } stsc.news.feedzilla.downloader.FeedzillaDownloadApplication.logger . debug ( ( ( "We start to download " + i ) + " days ago." ) ) ; downloader . setDaysToDownload ( i ) ; downloader . startDownload () ; } } 
@ com.fasterxml.jackson.annotation.JsonProperty ( value = "LastSale" ) public void setLastSale ( java.lang.String lastSale ) { try { this . lastSale = new java.math.BigDecimal ( lastSale ) . setScale ( 2 , java.math.RoundingMode.HALF_UP ) ; } catch ( java.lang.NumberFormatException e ) { java.lang.System.out . println ( ( "lastSale string: " + lastSale ) ) ; e . printStackTrace () ; } } 
public void actionPerformed ( java.awt.event.ActionEvent arg0 ) { javax.swing.JFileChooser fileChooser = new javax.swing.JFileChooser () ; fileChooser . setCurrentDirectory ( new java.io.File ( "." ) ) ; int returnValue = fileChooser . showOpenDialog ( null ) ; if ( returnValue == ( javax.swing.JFileChooser.APPROVE_OPTION ) ) { selectedFile = fileChooser . getSelectedFile () ; } fileNameField . setText ( selectedFile . getName () ) ; } 
void initModel ( java.lang.String dbRecordID , int parcelID , java.lang.String taxMapID , java.lang.String county , java.lang.String state , int acreage , java.lang.String township , java.lang.String range , int section , java.lang.String PM , java.lang.String description , java.lang.String b_north , java.lang.String b_east , java.lang.String b_south , java.lang.String b_west ) { model . setValues ( dbRecordID , parcelID , taxMapID , county , state , acreage , township , range , section , PM , description , b_north , b_east , b_south , b_west ) ; } 
@ java.lang.Override protected void onPostExecute ( java.lang.String s ) { super . onPostExecute ( s ) ; loading . dismiss () ; if ( s . equalsIgnoreCase ( "success" ) ) { android.content.Intent intent = new android.content.Intent ( this , com.example.aa.electronicpatientscard.PatientsList . class ) ; startActivity ( intent ) ; } else { android.widget.Toast . makeText ( getApplicationContext () , "Invalid user name or password" , Toast.LENGTH_LONG ) ; } } 
public synchronized void startTransaction () { int depth = transactionDepth . incrementAndGet () ; if ( depth == 1 ) { try { writerConnection . setAutoCommit ( false ) ; } catch ( java.sql.SQLException e ) { transactionDepth . decrementAndGet () ; throw com.google.common.base.Throwables . propagate ( e ) ; } } } 
public static javafx.scene.control.TextField addTextField ( final javafx.scene.layout.Pane parentPane , final java.lang.String defaultText , final javafx.scene.text.Font font ) { final javafx.scene.control.TextField txt = new javafx.scene.control.TextField ( defaultText ) ; if ( font != null ) { txt . setFont ( font ) ; } txt . setOnMouseEntered ( new javafx.event.EventHandler < javafx.scene.input.MouseEvent > () { @ java.lang.Override public void handle ( @ java.lang.SuppressWarnings ( value = "unused" ) final javafx.scene.input.MouseEvent mouse ) { txt . requestFocus () ; } } ) ; if ( parentPane != null ) { parentPane . getChildren () . add ( txt ) ; } return txt ; } 
public static void saveBitmapFile ( java.lang.String path , android.graphics.Bitmap bitmap ) { com.yugegong.reminder.Utils . deleteFile ( path ) ; try { java.io.FileOutputStream outputStream = new java.io.FileOutputStream ( path ) ; bitmap . compress ( Bitmap.CompressFormat.JPEG , 100 , outputStream ) ; outputStream . flush () ; outputStream . close () ; android.util.Log . d ( "saveBitmapFile" , ( "new size: " + ( new java.io.File ( path ) . length () ) ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
public void selectSheet ( java.lang.String sheetName ) throws java.lang.Exception { if ( importedSheets . containsKey ( sheetName ) ) { this . selectedSheet = importedSheets . get ( sheetName ) ; } else { throw new java.lang.Exception ( ( ( "Sheet with name '" + sheetName ) + "' doesn't exist!" ) ) ; } } 
private void updateColumn ( org.apache.cassandra.config.ColumnDefinition c , com.scylladb.tools.SSTableToCQL.RowBuilder.ColumnOp object , long timestamp , int ttl ) { assert ! ( values . containsKey ( c ) ) ; if ( ( ( object != null ) && ( object . canDoInsert () ) ) && ( ( this . op ) != ( com.scylladb.tools.SSTableToCQL.RowBuilder.Op.UPDATE ) ) ) { setOp ( com.scylladb.tools.SSTableToCQL.RowBuilder.Op.INSERT , timestamp , ttl ) ; } else { setOp ( com.scylladb.tools.SSTableToCQL.RowBuilder.Op.UPDATE , timestamp , ttl ) ; } values . put ( c , object ) ; } 
public void onClick ( android.content.DialogInterface dialog , int id ) { if ( ! ( userInput . getText () . toString () . isEmpty () ) ) { if ( groupCreate ( userInput . getText () . toString () ) ) { groupRetriever () ; listAdapter . notifyDataSetChanged () ; } } } 
@ java.lang.Override protected java.lang.Class < ? > findClass ( java.lang.String name ) throws java.lang.ClassNotFoundException { de.uni_koblenz.jgralab.schema.impl.compilation.InMemoryClassFile inMemClassFile = schemaClassFiles . get ( name ) ; if ( inMemClassFile != null ) { byte [] bytes = inMemClassFile . getBytecode () ; java.lang.Class < ? > clazz = defineClass ( name , bytes , 0 , bytes.length ) ; schemaClassFiles . remove ( name ) ; return clazz ; } return java.lang.Class . forName ( name ) ; } 
@ java.lang.Override public java.lang.String copy ( org.openstack4j.model.storage.object.options.ObjectLocation source , org.openstack4j.model.storage.object.options.ObjectLocation dest ) { com.google.common.base.Preconditions . checkNotNull ( source ) ; com.google.common.base.Preconditions . checkNotNull ( dest ) ; org.openstack4j.core.transport.HttpResponse resp = put ( java.lang.Void . class , dest . getURI () ) . header ( org.openstack4j.model.storage.object.SwiftHeaders.X_COPY_FROM , source . getURI () ) . header ( org.openstack4j.model.storage.object.SwiftHeaders.CONTENT_LENGTH , 0 ) . executeWithResponse () ; return resp . header ( org.openstack4j.model.storage.object.SwiftHeaders.ETAG ) ; } 
private void triggerListener ( dev.blunch.blunch.utils.Repository.OnChangedListener listener , dev.blunch.blunch.utils.Repository.OnChangedListener.EventType type ) { if ( type == ( Repository.OnChangedListener.EventType.Full ) ) { loaded += 1 ; } if ( ( loaded ) == ( loadNeed ) ) { listener . onChanged ( Repository.OnChangedListener.EventType.Full ) ; android.util.Log . e ( "ROOOOOO" , type . toString () ) ; } else { if ( type == ( Repository.OnChangedListener.EventType.Full ) ) { type = Repository.OnChangedListener.EventType.Added ; } android.util.Log . e ( "ROOOOOO" , type . toString () ) ; listener . onChanged ( type ) ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( path = "userListResources.do" ) public org.springframework.web.servlet.ModelAndView userListResources ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "userId" ) java.lang.Integer id , @ org.springframework.web.bind.annotation.ModelAttribute ( value = "auth" ) java.lang.String auth ) { org.springframework.web.servlet.ModelAndView mv = new org.springframework.web.servlet.ModelAndView ( "userprofile.jsp" ) ; java.util.List < entities.Resource > resources = dao . getAllResourcesById ( id ) ; entities.User u = dao . getUserById ( id ) ; mv . addObject ( "resources" , resources ) ; mv . addObject ( "user" , u ) ; return mv ; } 
public double convertDistanceToTargetVelocity ( double distance ) { return java.lang.Math . sqrt ( ( ( ( 2 * ( gravity ) ) * ( height ) ) + ( ( ( ( gravity ) * distance ) * distance ) / ( ( ( 2 * ( cos ( targetAngle ) ) ) * ( cos ( targetAngle ) ) ) * ( ( height ) + ( distance * ( java.lang.Math . tan ( targetAngle ) ) ) ) ) ) ) ) ; } 
public static void loadModelFromBin ( ) throws com.medallia.word2vec.Searcher.UnknownWordException , java.io.IOException , org.apache.thrift.TException { final com.medallia.word2vec.Word2VecModel model ; try ( com.medallia.word2vec.util.ProfilingTimer timer = com.medallia.word2vec.util.ProfilingTimer . create ( fr.frazew.word2vec.Word2Vec.LOG , "Loading model" ) ) { java.io.File file = new java.io.File ( "knowledge-vectors-skipgram1000.bin" ) ; model = com.medallia.word2vec.Word2VecModel . fromBinFile ( file ) ; } fr.frazew.word2vec.Word2Vec . interact ( model , model . forSearch () ) ; } 
public java.util.List < java.lang.String > explainRedundantConstraint ( org.prop4j.Node [] clauses , java.util.HashMap < java.lang.Object , java.lang.Integer > map ) { reason . clear () ; if ( isViolated ( clauses ) ) { java.util.ArrayList < org.prop4j.Literal > literalList = getLiterals ( violatedClause ) ; for ( org.prop4j.Literal l : literalList ) { java.lang.String tmpReason = explainVariable ( l ) ; addToReasonListOptionally ( tmpReason ) ; } return reason ; } findUnitOpenClauses ( featuresRedundantConstr , clauses ) ; BCP ( clauses ) ; return shortestExplanation ( clauses , map , null , de.ovgu.featureide.fm.core.explanations.LTMS.ExplanationMode.Redundancy ) ; } 
@ com.teamwolf.controller.RequestMapping ( consumes = "*/*" , produces = MediaType.APPLICATION_JSON_VALUE , path = "/players" , method = { RequestMethod.GET } ) public com.teamwolf.controller.GamesResponse currentGamePlayers ( @ com.teamwolf.controller.CookieValue ( value = cookieName , defaultValue = "" ) java.lang.String token ) { com.teamwolf.controller.User u ; if ( ( u = this . isSession ( token ) ) != null ) { java.util.List < com.teamwolf.controller.Player > players = gameMgrLogic . getAllCurrentPlayers ( gid ) ; com.teamwolf.controller.GamesResponse response = new com.teamwolf.controller.GamesResponse () ; response . setPlayerList ( players ) ; response . setSuccess ( true ) ; return response ; } else throw new com.teamwolf.controller.AuthorizationException ( "You must be Logged in" ) ; } 
public com.tommytony.war.Location getBukkitLocation ( com.tommytony.war.struct.WarLocation location ) { com.tommytony.war.World world = this . getServer () . getWorld ( location . getWorld () ) ; return new com.tommytony.war.Location ( world , location . getX () , location . getY () , location . getZ () , ( ( float ) ( location . getPitch () ) ) , ( ( float ) ( location . getYaw () ) ) ) ; } 
private boolean hasTimezoneField () { boolean literal = false ; for ( int i = ( this . pattern . length () ) - 1 ; i >= 0 ; i ++ ) { char c = this . pattern . charAt ( i ) ; if ( c == '\'' ) { literal = ! literal ; } else if ( ( ! literal ) && ( c == 'z' ) ) { return true ; } } return false ; } 
@ java.lang.Override @ java.lang.SuppressWarnings ( value = "unchecked" ) public < T > java.util.Optional < T > getContext ( org.spongepowered.api.event.cause.EventContextKey < T > key ) { enforceMainThread () ; com.google.common.base.Preconditions . checkNotNull ( key , "key" ) ; return java.util.Optional . ofNullable ( ( ( T ) ( this . ctx . get ( key . getId () ) ) ) ) ; } 
private void initToolbar () { android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbarMap ) ) ) ; setSupportActionBar ( toolbar ) ; android.support.v7.app.ActionBar supportActionBar = getSupportActionBar () ; supportActionBar . setHomeAsUpIndicator ( R.drawable.ic_keyboard_backspace_black_24dp ) ; supportActionBar . setDisplayHomeAsUpEnabled ( true ) ; supportActionBar . setTitle ( "" ) ; } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { switch ( item . getItemId () ) { case R.id.regActivity : android.content.Intent goToRegister ; goToRegister = new android.content.Intent ( getApplicationContext () , com.example.abhi.saarangbeta.regActivity . class ) ; goToRegister . putExtra ( com.example.abhi.saarangbeta.displayDetails.REG_MESSAGE , dataInfo ) ; startActivity ( goToRegister ) ; break; case android.R.id.home : android.support.v4.app.NavUtils . navigateUpFromSameTask ( this ) ; break; default: return super . onOptionsItemSelected ( item ) ; } return true ; } 
public boolean checkPalindrome ( java.lang.String s ) { int n = s . length () ; for ( int i = 0 ; i < ( n / 2 ) ; ++ i ) { if ( ( s . charAt ( i ) ) != ( s . charAt ( ( ( n - i ) - 1 ) ) ) ) { return false ; } } return true ; } 
public void addFileEntries ( java.util.ArrayList < com.notalenthack.blaster.FileEntry > entries ) { items . clear () ; for ( com.notalenthack.blaster.FileEntry entry : entries ) { items . add ( entry ) ; mapItems . put ( ( ( ( entry.path ) + ( java.io.File.separator ) ) + ( entry.name ) ) , entry ) ; } } 
public void updateCards ( main.Player p , boolean turn ) { deckPane . setVisible ( false ) ; deckPane . removeAll () ; deckPane . add ( back ) ; deckPane . setBackground ( java.awt.Color.DARK_GRAY ) ; for ( card.Card c : p . getCards () ) { java.lang.System.out . println ( c . getTerritory () ) ; javax.swing.JPanel panel = c . drawCard ( turn ) ; deckPane . add ( panel ) ; } deckPane . setVisible ( true ) ; } 
@ org.junit.Test public void Set_MetaInformation () { java.util.List < java.lang.String > list = new java.util.ArrayList < java.lang.String > () ; list . add ( "test1" ) ; list . add ( "test2" ) ; extendedIngredientModel . setMetaInformation ( list ) ; org.junit.Assert . assertEquals ( extendedIngredientModel . getMetaInformation () , list ) ; } 
@ org.junit.Test public void testCheckExactCollision () { gameplayTest.Bomberman bomberman = new gameplayTest.Bomberman ( 0 , 0 ) ; gameplayTest.GridObject a = new gameplayTest.GridObject ( 0 , 0 ) ; assertTrue ( gameplayTest.CollisionDetectorTest.detector . checkExactCollision ( bomberman , a ) ) ; gameplayTest.GridObject b = new gameplayTest.GridObject ( 2 , 2 ) ; assertTrue ( gameplayTest.CollisionDetectorTest.detector . checkExactCollision ( bomberman , a ) ) ; gameplayTest.Bomberman testNull = null ; gameplayTest.GridObject c = null ; assertFalse ( gameplayTest.CollisionDetectorTest.detector . checkExactCollision ( testNull , c ) ) ; } 
@ java.lang.Override public void setPosition ( org.spout.api.geo.discrete.Point p ) { stateLock . writeLock () . lock () ; try { x = p . getX () ; y = p . getY () ; z = p . getZ () ; posModified = true ; } finally { stateLock . writeLock () . unlock () ; } } 
public void run () { try { barrier . await () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } LazyFactoryTest.LazyFactoryTester2.answer . set ( finalI , myLazy . get () ) ; for ( int i = 0 ; i < 100 ; ++ i ) { assertSame ( LazyFactoryTest.LazyFactoryTester2.answer . get ( finalI ) , myLazy . get () ) ; } } 
public void PlayTurnHuman () { int input ; do { input = mainInterface . getPlayerChoice () ; if ( ! ( validatePlayerInput ( input ) ) ) { mainInterface . printWrongInput () ; } } while ( ! ( validatePlayerInput ( input ) ) ) ; makeMove ( input ) ; int res = results () ; } 
@ java.lang.Override public org.knowm.xchange.dto.trade.UserTrades getTradeHistory ( org.knowm.xchange.service.trade.params.TradeHistoryParams params ) throws java.io.IOException { org.knowm.xchange.currency.CurrencyPair currencyPair = null ; java.lang.Integer limit = 100 ; if ( params instanceof org.knowm.xchange.service.trade.params.TradeHistoryParamCurrencyPair ) { currencyPair = ( ( org.knowm.xchange.service.trade.params.TradeHistoryParamCurrencyPair ) ( params ) ) . getCurrencyPair () ; } if ( params instanceof org.knowm.xchange.service.trade.params.TradeHistoryParamLimit ) { limit = ( ( org.knowm.xchange.service.trade.params.TradeHistoryParamLimit ) ( params ) ) . getLimit () ; } if ( currencyPair == null ) throw new java.lang.IllegalStateException ( "Need to supply currency pair" ) ; return new org.knowm.xchange.dto.trade.UserTrades ( tradeHistory ( currencyPair , limit ) , Trades.TradeSortType.SortByTimestamp ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { switch ( v . getId () ) { case R.id.bubble_delete : final android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder ( mMapView . getContext () ) ; builder . setMessage ( activity . getString ( R.string.deleteDialog ) ) . setPositiveButton ( activity . getString ( R.string.yes ) , this ) . setNegativeButton ( activity . getString ( R.string.no ) , this ) . show () ; break; case R.id.bubble_edit : editElement () ; close () ; break; default: break; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/{search}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String iconSearch ( org.springframework.ui.Model model , @ org.springframework.web.bind.annotation.PathVariable ( value = "search" ) java.lang.String search , javax.servlet.http.HttpSession session ) { session . setAttribute ( "mainsearch" , search ) ; model . addAttribute ( "search" , new com.medico.swiftcure.model.NavigatorSearch () ) ; model . addAttribute ( "appointment" , new com.medico.swiftcure.model.Appointment () ) ; model . addAttribute ( "specializationList" , specializationService . getAll () ) ; model . addAttribute ( "locationList" , locationService . getAll () ) ; int from = 1 ; model . addAttribute ( "doctorsList" , searchService . mainSearchPaginated ( search , from ) ) ; return "searchdoctorlist" ; } 
@ java.lang.Override public void onModuleCreate ( android.content.Context context , android.os.Bundle savedInstanceState ) { super . onModuleCreate ( context , savedInstanceState ) ; if ( context instanceof android.support.v7.app.ActionBarActivity ) { throw new java.lang.IllegalStateException ( "NavigationDrawer module must be used just on ActionBarActivity" ) ; } onLoadContentDrawerView ( context , savedInstanceState ) ; onLoadContentDrawerFragment ( context , savedInstanceState ) ; if ( ( mCallbacks ) != null ) mCallbacks . onNavigationDrawerLoaded ( this ) ; } 
public Mazerush.Player update_objects ( Mazerush.Maze maze , Mazerush.Player player ) { player = update_player ( false , maze , player ) ; player = update_pow ( player ) ; java.lang.System.out . println ( player.rle ) ; if ( ( player_on_color ( Mazerush.mazegoalcolor , 0 , 0 , maze , player ) ) && ( ! ( player.maze_completed ) ) ) player.maze_completed = true ; if ( ! ( player.maze_completed ) ) player.completedtime += Mazerush.objectupdate_bandwidth ; if ( player_on_color ( Mazerush.mazeorigincolor , 0 , 0 , maze , player ) ) player.completedtime = 0 ; return player ; } 
public void dealHand ( card_game.Player player , int handSize ) { int count = 0 ; while ( count < handSize ) { int index = java.util.concurrent.ThreadLocalRandom . current () . nextInt ( 1 , ( ( countActiveDeck () ) + 1 ) ) ; card_game.Playable card = this . activeDeck . get ( index ) ; this . activeDeck . remove ( card ) ; player . addCard ( card ) ; count ++ ; } } 
public static void createNewBranch ( java.lang.String user , java.lang.String message , java.lang.String graphName , java.lang.String revision , java.lang.String branchName ) throws de.tud.plt.r43ples.exception.InternalErrorException { java.lang.String query = java.lang.String . format ( ( "" + ( ( "USER \"%s\" %n" + "MESSAGE \"%s\" %n" ) + "BRANCH GRAPH <%s> REVISION \"%s\" TO \"%s\"" ) ) , user , message , graphName , revision , branchName ) ; de.tud.plt.r43ples.management.DatasetGenerationManagement.ep . sparql ( MediaType.TEXT_HTML , query ) ; de.tud.plt.r43ples.management.DatasetGenerationManagement.logger . info ( ( ( ( ( "New branch \"" + graphName ) + "\" for <" ) + graphName ) + "> created." ) ) ; } 
@ org.junit.Test public void testJocConfigurationWriteRecord ( ) throws java.lang.Exception { initConnection () ; com.sos.jitl.joc.db.JocConfigurationDbItem jocConfigurationDbItem = new com.sos.jitl.joc.db.JocConfigurationDbItem () ; jocConfigurationDbItem . setAccount ( "root" ) ; jocConfigurationDbItem . setConfigurationItem ( "my configuration item" ) ; jocConfigurationDbItem . setConfigurationType ( "profil" ) ; jocConfigurationDbItem . setName ( "profil" ) ; jocConfigurationDbItem . setObjectType ( "profil" ) ; jocConfigurationDbItem . setInstanceId ( 61L ) ; jocConfigurationDbItem . setShared ( true ) ; initFilter () ; jocConfigurationDBLayer . saveConfiguration ( jocConfigurationDbItem , null , "myNewConfiguration" ) ; sosHibernateFactory . close () ; } 
@ java.lang.Override public void run () { mCurrentFragment = getHomeFragment () ; android.support.v4.app.FragmentTransaction fragmentTransaction = getSupportFragmentManager () . beginTransaction () ; fragmentTransaction . setCustomAnimations ( android.R.anim.fade_in , android.R.anim.fade_out ) ; fragmentTransaction . replace ( R.id.content_main , mCurrentFragment , androks.simplywash.activities.MainActivity.CURRENT_TAG ) ; setToolbarTitle () ; fragmentTransaction . commitAllowingStateLoss () ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_server ) ; com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config = new com.badlogic.gdx.backends.android.AndroidApplicationConfiguration () ; com.gruppe4.menschaergerdichnicht.MenschAergerDIchNicht myLibgdx = new com.gruppe4.menschaergerdichnicht.MenschAergerDIchNicht () ; myLibgdx . setMyAndroidCallBack ( this ) ; myGameCallBack = myLibgdx ; initialize ( myLibgdx , config ) ; mSensorManager = ( ( android.hardware.SensorManager ) ( getSystemService ( Context.SENSOR_SERVICE ) ) ) ; mSensorManager . registerListener ( mSensorListener , mSensorManager . getDefaultSensor ( Sensor.TYPE_ACCELEROMETER ) , SensorManager.SENSOR_DELAY_NORMAL ) ; mAccel = 0.0F ; mAccelCurrent = android.hardware.SensorManager.GRAVITY_EARTH ; mAccelLast = android.hardware.SensorManager.GRAVITY_EARTH ; } 
@ java.lang.Override public void whileWorking () { controller . closeUnusedClients ( memberId , 0 ) ; controller . getState ( memberId ) ; if ( ( controller . getMemberWorkLoad ( memberId ) ) == 0 ) { nl.zeesoft.zdk.ZStringBuilder response = getTakeOfflineResponse ( controller , memberId ) ; if ( ( response == null ) || ( nl.zeesoft.zjmo.orchestra.ProtocolObject . isResponseJson ( response ) ) ) { controller . getState ( memberId ) ; } stop () ; } } 
@ java.lang.Override public java.lang.String toString () { java.lang.String str = ( "Fitness: " + ( this . getFitness () ) ) + " - " ; str += java.lang.String . valueOf ( this . value [ 0 ] ) ; for ( int i = 1 ; i < ( value.length ) ; i ++ ) { str += ":" + ( this . value [ i ] ) ; } return str ; } 
private static void writeDataSetAsXtab ( org.dbunit.dataset.IDataSet dataSet , java.nio.file.Path targetPath ) throws java.lang.Exception { java.nio.charset.Charset encoding = com.google.common.base.Charsets.UTF_8 ; java.io.BufferedWriter writer = java.nio.file.Files . newBufferedWriter ( targetPath , encoding ) ; writer . write ( ( ( "<?xml version='1.0' encoding='" + ( encoding . name () ) ) + "\'?>\n" ) ) ; org.dbunit.dataset.xml.XmlDataSetWriter xmlWriter = new org.dbunit.dataset.xml.XmlDataSetWriter ( writer ) ; xmlWriter . write ( dataSet ) ; } 
private java.io.File [] checkFiles () { java.io.File hrvDirectory ; hrvDirectory = new java.io.File ( android.os.Environment . getExternalStoragePublicDirectory ( Environment.DIRECTORY_PICTURES ) , isst.fraunhofer.de.ompi.adapter.HRVAdapter.hrvPackage ) ; if ( ( hrvDirectory . listFiles () ) == null ) hrvDirectory = new java.io.File ( android.os.Environment . getExternalStoragePublicDirectory ( Environment.DIRECTORY_DOCUMENTS ) , isst.fraunhofer.de.ompi.adapter.HRVAdapter.hrvPackage ) ; java.io.File [] files = hrvDirectory . listFiles () ; android.util.Log . d ( "Files" , ( "Path: " + ( hrvDirectory . getPath () ) ) ) ; return files ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { findViewById ( R.id.notification ) . setVisibility ( View.GONE ) ; io.kuzzle.demo.demo_android.MapController . getSingleton ( this ) . makeMarkerStopBlinking () ; try { manageRideProposal ( RideAction.DECLINED ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } catch ( io.kuzzle.sdk.exceptions.KuzzleException e ) { e . printStackTrace () ; } } 
private void intelliPlugInit () { if ( com.grarak.kerneladiutor.utils.kernel.CPUHotplug . hasIntelliPlugEnable () ) { mIntelliPlugCard = new com.grarak.kerneladiutor.elements.cards.SwitchCardView.DSwitchCard () ; mIntelliPlugCard . setTitle ( getString ( R.string.intelliplug ) ) ; mIntelliPlugCard . setDescription ( getString ( R.string.intelliplug_summary ) ) ; mIntelliPlugCard . setChecked ( com.grarak.kerneladiutor.utils.kernel.CPUHotplug . isIntelliPlugActive () ) ; mIntelliPlugCard . setOnDSwitchCardListener ( this ) ; addView ( mIntelliPlugCard ) ; } } 
private java.util.ArrayList < Gate > doMiddle () { java.util.ArrayList < Gate > middle = new java.util.ArrayList < Gate > ( k ) ; for ( int x = 0 ; x < ( k ) ; x ++ ) { middle . add ( new Gate ( x ) ) ; } return middle ; } 
@ java.lang.Override public java.util.List < com.gdpost.web.entity.component.TuiBaoModel > getNetTuiBaoWarnningWithPolicyDateAndCsDate ( java.lang.String organCode , java.lang.String d1 , java.lang.String d2 , java.lang.String d3 , java.lang.String d4 , java.lang.String flag , java.lang.String prdCode , java.lang.String toPerm , java.lang.String staffFlag , java.lang.String bankNaem ) { return cmDAO . getNetTuiBaoWarningWithPolicyDateAndCsDate ( organCode , d1 , d2 , d3 , d4 , flag , prdCode , toPerm , staffFlag , bankNaem ) ; } 
public void writeLocation ( android.location.Location location ) throws java.io.IOException { mOutputStream . writeByte ( epcc.ed.ac.uk.gcrf_rear.data.DataStore.SensorType.LOCATION . getType () ) ; mOutputStream . writeByte ( epcc.ed.ac.uk.gcrf_rear.data.DataStore.VERSION ) ; mOutputStream . writeLong ( location . getTime () ) ; mOutputStream . writeDouble ( location . getLatitude () ) ; mOutputStream . writeDouble ( location . getLongitude () ) ; mOutputStream . writeDouble ( location . getAltitude () ) ; mOutputStream . writeFloat ( location . getAccuracy () ) ; ( mNumRows ) ++ ; } 
public void fromEntity ( th.co.baiwa.buckwaframework.preferences.persistence.entity.SysMessage message ) { this . messageId = message . getMessageId () ; this . messageCode = message . getMessageCode () ; this . messageEn = message . getMessageEn () ; this . messageTh = message . getMessageTh () ; this . messageType = message . getMessageType () ; } 
@ org.springframework.transaction.annotation.Transactional public void editAccountFromCompteBean ( fr.bougly.web.dtos.AccountDto accountDto ) { fr.bougly.model.UserAccount accountFromDb = accountRepository . findByMail ( accountDto . getMail () ) ; accountFromDb . setLastName ( accountDto . getLastName () ) ; accountFromDb . setFirstName ( accountDto . getFirstName () ) ; if ( ( accountDto . getRole () ) == ( RoleAccountEnum.Student . toString () ) ) { fr.bougly.model.Student student = ( ( fr.bougly.model.Student ) ( accountFromDb ) ) ; student . setStudentNumber ( accountDto . getStudentNumber () ) ; } } 
public static boolean currentThreadIsTheTarget ( java.lang.String targetName ) { if ( ( java.lang.Thread . currentThread () ) instanceof pj.pr.target.TargetWorkerThread ) { if ( ( ( pj.pr.target.TargetWorkerThread ) ( java.lang.Thread . currentThread () ) ) . targetName () . equals ( targetName ) ) { return true ; } } return pj.PjRuntime . currentThreadIsSingleThreadTarget ( targetName ) ; } 
public java.math.BigDecimal getSalesByManufacturer ( com.pj.magic.model.Manufacturer manufacturer ) { java.math.BigDecimal total = com.pj.magic.Constants.ZERO ; for ( com.pj.magic.model.SalesRequisitionItem item : items ) { if ( item . getProduct () . getManufacturer () . equals ( manufacturer ) ) { total = total . add ( item . getAmount () ) ; } } return total ; } 
private void initializeExerciseArray () { mDbHelper . open () ; java.lang.String exerciseSequence = mDbHelper . getExerciseSequence ( workoutName ) ; java.util.StringTokenizer st = new java.util.StringTokenizer ( exerciseSequence , "," ) ; while ( st . hasMoreTokens () ) { java.lang.Long exerciseId = java.lang.Long . parseLong ( st . nextToken () ) ; com.cwru.model.Exercise exercise = mDbHelper . getExerciseFromId ( exerciseId ) ; exerciseList . add ( exercise ) ; } mDbHelper . close () ; } 
private Item randomItemSelector ( boolean pop ) { if ( isEmpty () ) throw new java.util.NoSuchElementException ( "Queue underflow" ) ; int randomIdx = edu.princeton.cs.algs4.StdRandom . uniform ( 0 , numElementsWithNulls ) ; while ( ( stackArray [ randomIdx ] ) == null ) randomIdx = edu.princeton.cs.algs4.StdRandom . uniform ( 0 , numElementsWithNulls ) ; Item randomItem = stackArray [ randomIdx ] ; if ( pop ) { stackArray [ randomIdx ] = null ; ( numElements ) -- ; } return randomItem ; } 
public void update () { done = false ; int currentFrame = ( ( counter ) ++ ) / ( animation.Animation.ANIMATION_SPEED ) ; if ( currentFrame >= ( totalFrames ) ) { resetCounter () ; currentFrame = 0 ; if ( ( -- ( currentLoop ) ) < 1 ) { done = true ; resetLoops () ; } } java.lang.String filePath = "src/assets/animations/" + ( animationName ) ; filePath += currentFrame + ".png" ; this . imageIcon = new javax.swing.ImageIcon ( filePath ) ; } 
public void init ( ) throws com.wizzer.mle.runtime.core.MleRuntimeException { texture . push ( this ) ; model . push ( this ) ; update () ; com.wizzer.mle.runtime.scheduler.MleScheduler scheduler = com.wizzer.mle.runtime.MleTitle . getInstance () . m_theScheduler ; com.wizzer.mle.runtime.scheduler.MlePhase actorPhase = com.wizzer.mle.runtime.MleTitle.g_theActorPhase ; if ( actorPhase == null ) throw new com.wizzer.mle.runtime.core.MleRuntimeException ( "MleModelActor: Actor phase does not exist." ) ; m_behaveTask = new com.wizzer.mle.runtime.scheduler.MleTask ( new com.wizzer.mle.parts.actors.MleModelActor.DoBehave ( this ) ) ; scheduler . addTask ( actorPhase , m_behaveTask ) ; } 
public void testIncrementExact () { for ( int a : com.google.gwt.emultest.java.lang.MathTest.ALL_INTEGER_CANDIDATES ) { java.math.BigInteger expectedResult = java.math.BigInteger . valueOf ( a ) . add ( java.math.BigInteger.ONE ) ; boolean expectedSuccess = com.google.gwt.emultest.java.lang.MathTest . fitsInInt ( expectedResult ) ; try { assertEquals ( ( a + 1 ) , java.lang.Math . incrementExact ( a ) ) ; assertTrue ( expectedSuccess ) ; } catch ( java.lang.ArithmeticException e ) { assertFalse ( expectedSuccess ) ; } } } 
public void changeCursor ( android.database.Cursor cursor ) { android.database.Cursor old = mCursor ; mCursor = cursor ; mCursor . moveToPosition ( 0 ) ; while ( mCursor . moveToNext () ) { android.util.Log . d ( "Test" , ( "changeCursor: " + ( mCursor . getString ( 2 ) ) ) ) ; } if ( cursor == null ) { notifyDataSetInvalidated () ; } else { notifyDataSetChanged () ; } if ( old != null ) { old . close () ; } } 
public void setLastException ( final java.lang.Exception exception ) { getDisplay () . asyncExec ( new java.lang.Runnable () { @ java.lang.Override public void run () { if ( ! ( errorBar . isDisposed () ) ) { errorBar . setException ( exception ) ; } } } ) ; } 
public void shutDown () { try { java.lang.Thread . sleep ( 1000 ) ; } catch ( java.lang.InterruptedException e1 ) { e1 . printStackTrace () ; } model . shutDown () ; try { socket . close () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
public void validatePasswordReenter () { edtPasswordReenter . setError ( null ) ; if ( edtPasswordReenter . hasFocus () ) { if ( ! ( getEditTextText ( edtPasswordReenter ) . equals ( getEditTextText ( edtPassword ) ) ) ) { checkPassReenter = false ; edtPasswordReenter . setError ( getResources () . getString ( R.string.PasswordReenterError ) ) ; } else { checkPassReenter = true ; } } } 
@ java.lang.Override public void widgetSelected ( org.eclipse.swt.events.SelectionEvent e ) { org.eclipse.jface.viewers.IStructuredSelection selection = ( ( org.eclipse.jface.viewers.IStructuredSelection ) ( tableViewer . getSelection () ) ) ; com.starterkit.views.models.Task task = ( ( com.starterkit.views.models.Task ) ( selection . getFirstElement () ) ) ; java.lang.Long id = task . getId () ; dataProvider . closeTask ( id ) ; tableViewer . refresh () ; } 
private void stopRecordingVideo () { mIsRecordingVideo = false ; mButtonVideo . setText ( R.string.record ) ; mMediaRecorder . stop () ; mMediaRecorder . reset () ; android.app.Activity activity = getActivity () ; if ( null != activity ) { mInformationTextView . setText ( ( "Video saved: " + ( mOutputFile . getAbsolutePath () ) ) ) ; } mOutputFile = fileMaker . getTempFile () ; startPreview () ; } 
private boolean hasHelp () { org.apache.commons.cli.Options options = new lwjar.cli.OptionsBuilder () . optional ( Option.HELP ) . build () ; try { org.apache.commons.cli.CommandLine commandLine = new org.apache.commons.cli.DefaultParser () . parse ( options , this . arguments ) ; return this . existsOption ( commandLine , Option.HELP.shortName ) ; } catch ( org.apache.commons.cli.ParseException e ) { throw new lwjar.cli.CommandLineOptionException ( e . getMessage () ) ; } } 
public boolean equals ( java.lang.Object x ) { if ( x instanceof mountain.Side ) { mountain.Side s = ( ( mountain.Side ) ( x ) ) ; return ( p1 . equals ( s.p1 ) ) && ( p2 . equals ( s.p2 ) ) ; } else { return false ; } } 
public void reg ( java.lang.String host , java.lang.String queueHost , int queuePort , com.seveniu.crawlClient.ConsumerConfig consumerConfig , com.seveniu.consumer.Consumer consumer ) { this . host = host ; this . uuid = post ( ( host + "/api/consumer/reg" ) , com.alibaba.fastjson.JSON . toJSONString ( consumerConfig ) ) ; this . taskQueue = new com.seveniu.crawlClient.TaskQueue ( queueHost , queuePort , consumerConfig . getName () ) ; this . dataQueue = new com.seveniu.DataQueue ( queueHost , queuePort , consumerConfig . getName () , consumer ) ; } 
@ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; android.util.Log . d ( com.testcase.emuchat.views.fragments.ChatFragment.TAG , "onCreate" ) ; commandCenter = com.testcase.emuchat.CommandCenter . getInstance ( getContext () ) ; chatItemList = new com.testcase.emuchat.views.widgets.MyRecyclerView.RVList <> () ; setRetainInstance ( true ) ; } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { java.lang.String CatContent = ( ( java.lang.String ) ( ( ( javax.swing.JComboBox < java.lang.String > ) ( e . getSource () ) ) . getSelectedItem () ) ) ; if ( ( dm ) != null ) { if ( ( CatContent . length () ) > 0 ) { dm . SetCategoryFilter ( CatContent ) ; } else { dm . EraseCategoryFilter () ; } dm . ResetModell () ; dm . fireTableDataChanged () ; } } 
@ java.lang.Override public int begin () { index = 0 ; for ( int i = 0 ; i < ( matrix [ v ] . length ) ; i ++ ) { if ( matrix [ v ] [ i ] ) { return i ; } } return - 1 ; } 
public java.lang.String getIpFromForwardedFor ( java.lang.String input ) { if ( ! ( input . contains ( "," ) ) ) return input ; java.lang.String [] splits = input . split ( "," ) ; return splits [ ( ( splits.length ) - 1 ) ] ; } 
public java.lang.Thread addPerson ( int sourceFloor , int destinationFloor ) { ( activePersons ) ++ ; com.ru.usty.elevator.Person newPerson = new com.ru.usty.elevator.Person ( sourceFloor , destinationFloor , this ) ; floors [ sourceFloor ] . addPerson ( newPerson ) ; java.lang.Thread newThread = new java.lang.Thread ( new com.ru.usty.elevator.Person ( sourceFloor , destinationFloor , this ) ) ; newThread . start () ; return newThread ; } 
public void add ( com.jetbrains.jetpad.vclang.term.expr.sort.LevelMax level ) { if ( level . isInfinity () ) { myVars = null ; } else { for ( java.util.Map.Entry < com.jetbrains.jetpad.vclang.term.context.binding.Binding , java.lang.Integer > entry : level.myVars . entrySet () ) { add ( myVars , entry . getKey () , entry . getValue () ) ; } } } 
@ org.junit.Test ( timeout = 5000 ) public void testReplaceValue ( ) throws java.io.IOException { try ( net.openhft.chronicle.map.ChronicleMap map = map5 ( ( ( net.openhft.chronicle.engine.map.StatelessChronicleMapTest.s_port ) ++ ) ) ) { assertEquals ( "A" , map . get ( one ) ) ; assertFalse ( map . replace ( one , "Z" , "Z" ) ) ; assertEquals ( "A" , map . get ( one ) ) ; } } 
@ java.lang.Override public void stateChanged ( plm.core.model.Game.GameState state ) { switch ( state ) { case DEMO_ENDED : case EXECUTION_ENDED : plm.core.model.lesson.Exercise e = ( ( plm.core.model.lesson.Exercise ) ( currGame . getCurrentLesson () . getCurrentExercise () ) ) ; server.Main . askEndStreamMain () ; send ( e.lastResult , currGame.i18n ) ; server.Main . freeMain () ; break; default: break; } } 
@ org.junit.Test public void testNullBook () { Book book1 = new Book ( null , null , null ) ; org.junit.Assert . assertNull ( book1 . getAuthor () ) ; org.junit.Assert . assertNull ( book1 . getPublisher () ) ; org.junit.Assert . assertNull ( book1 . getTitle () ) ; } 
private com.documentum.fc.common.IDfValue getFolderPathAsDfValue ( com.documentum.fc.client.IDfSession dfSession , com.documentum.fc.client.IDfPersistentObject dmsObj , int index ) throws com.documentum.fc.common.DfException { final com.documentum.fc.common.IDfId dfId = dmsObj . getId ( PersistentProperty.DMS_ATTR_FOLDER_ID ) ; final com.documentum.fc.client.IDfFolder parentFolder = ( ( com.documentum.fc.client.IDfFolder ) ( dfSession . getObject ( dfId ) ) ) ; final com.documentum.fc.common.IDfValue dfValue = new com.documentum.fc.common.DfValue ( parentFolder . getFolderPath ( index ) ) ; return dfValue ; } 
@ org.junit.Ignore @ org.junit.Test public void testAssembleKwd_IDLexeme ( ) throws java.lang.Exception { java.lang.System.out . println ( "assembleKwd_IDLexeme" ) ; java.lang.String lexemeString = "" ; LexicalAnalyzer.TokenAssembler instance = null ; java.lang.String expResult = "" ; java.lang.String result = instance . assembleKwd_IDLexeme ( lexemeString ) ; assertEquals ( expResult , result ) ; fail ( "The test case is a prototype." ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/login" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public org.springframework.web.servlet.ModelAndView login ( @ org.springframework.web.bind.annotation.RequestParam ( value = "error" , required = false ) boolean error , @ org.springframework.web.bind.annotation.RequestParam ( value = "logout" , required = false ) boolean logout , @ org.springframework.web.bind.annotation.RequestParam ( value = "registered" , required = false ) boolean registered ) { org.springframework.web.servlet.ModelAndView model = new org.springframework.web.servlet.ModelAndView () ; if ( error ) { model . addObject ( "error" , true ) ; } if ( logout ) { model . addObject ( "msg" , true ) ; } if ( registered ) { model . addObject ( "registered" , true ) ; } model . setViewName ( "login" ) ; return model ; } 
public static cz.zcu.kiv.crce.metadata.Resource map ( cz.zcu.kiv.crce.metadata.dao.mongodb.internal.db.DbResource src , cz.zcu.kiv.crce.metadata.MetadataFactory metadataFactory , cz.zcu.kiv.crce.metadata.service.MetadataService metadataService ) { cz.zcu.kiv.crce.metadata.Resource dest = metadataFactory . createResource ( src . getId () ) ; metadataService . setUri ( dest , src . getUri () ) ; cz.zcu.kiv.crce.metadata.dao.mongodb.internal.mapper.ResourceMetadataMapper . mapCapability ( dest , src . getIdentity () , metadataFactory , metadataService ) ; return dest ; } 
@ java.lang.Override public void widgetSelected ( org.eclipse.swt.events.SelectionEvent e ) { notifyListeners ( SWT.Selection , new org.eclipse.swt.widgets.Event () ) ; org.eclipse.ice.iclient.IClient client = org.eclipse.ice.client.common.internal.ClientHolder . getClient () ; org.eclipse.swt.widgets.FileDialog fileDialog = new org.eclipse.swt.widgets.FileDialog ( getShell () ) ; fileDialog . setText ( "Select a file to import into ICE" ) ; java.lang.String filePath = fileDialog . open () ; if ( filePath != null ) { java.io.File importedFile = new java.io.File ( filePath ) ; client . importFile ( importedFile . toURI () ) ; setEntryValue ( importedFile . getName () ) ; } return; } 
@ java.lang.Override public de.thb.ue.backend.model.Tutor getByUsername ( java.lang.String username ) { de.thb.ue.backend.model.Tutor tutor = tutorRepo . findByUsername ( username ) ; if ( tutor == null ) { tutor = getLdapUser ( username ) ; tutorRepo . save ( tutor ) ; } else { if ( isDisabled ( username ) ) { tutor = null ; } } return tutor ; } 
public T create ( T t ) { T tmp = null ; javax.persistence.EntityManager em = entityManager ; em . getTransaction () . begin () ; if ( t != null ) { try { em . persist ( t ) ; em . getTransaction () . commit () ; tmp = t ; } catch ( java.lang.Exception ex ) { m.k.s.dailymeal.dao.GenericDAODailyMealImpl.LOG . error ( ex ) ; } } return tmp ; } 
public void add ( float amount ) { if ( ( ( getCurrentSum () . getMonth () ) != ( java.util.Calendar.MONTH ) ) && ( ( getCurrentSum () . getYear () ) != ( java.util.Calendar.YEAR ) ) ) { com.example.spendee.MonthlySum currentSum = new com.example.spendee.MonthlySum () ; currentSum . add ( amount ) ; purchases . push ( currentSum ) ; } else { getCurrentSum () . add ( amount ) ; } } 
public void update () { if ( ! ( isPlaying ) ) { return; } if ( ( ( java.lang.System . currentTimeMillis () ) - ( lastFrame ) ) > ( ( frameTime ) * 1000 ) ) { ( frameIndex ) ++ ; frameIndex = ( ( frameIndex ) > ( frames.length ) ) ? 0 : frameIndex ; lastFrame = setLastFrame () ; } } 
@ java.lang.Override public void onCheckedChanged ( android.widget.RadioGroup group , int checkedId ) { android.widget.RadioButton rb = ( ( android.widget.RadioButton ) ( group . findViewById ( checkedId ) ) ) ; android.widget.Toast . makeText ( getApplicationContext () , rb . getText () . toString () , Toast.LENGTH_SHORT ) . show () ; } 
public void union ( int p , int q ) { int pComponent = find ( p ) ; int qComponent = find ( q ) ; if ( pComponent == qComponent ) { return; } for ( int i = 0 ; i < ( nodeComponents.length ) ; i ++ ) { if ( ( nodeComponents [ i ] ) == pComponent ) { nodeComponents [ i ] = qComponent ; } } } 
private void setNavigation () { boolean prev = ( _aiList . getPrev ( _infoType , _reference ) ) != null ; boolean next = ( _aiList . getNext ( _infoType , _reference ) ) != null ; if ( null != ( _btnNext ) ) { _btnNext . setEnabled ( next ) ; } if ( null != ( _btnPrev ) ) { _btnPrev . setEnabled ( prev ) ; } } 
public biomorphHandling.Biomorph evolveClo ( biomorphHandling.Biomorph father , biomorphHandling.Biomorph mother ) { biomorphHandling.Evolver ec = new biomorphHandling.Evolver ( father , mother , targetValues ) ; biomorphHandling.Biomorph biomorph = ec . evolve () ; statisticMachine . saveGeneValues ( ec . getChildGenes () ) ; statisticMachine . printRunningStats () ; createAndAdd () ; createAndAdd () ; return biomorph ; } 
private void startQueueMonitor () { try { MQApi.Models.Query.ConnectionDetailModel connectionDetail = UI.TreeHelper . GetCurrentConnectionDetail ( TreeView ) ; com.ibm.mq.MQQueueManager queueManager = MQApi.Connection.MQConnection . GetMQQueueManager ( connectionDetail ) ; UI.Dialogs.QueueMonitorDialog dialog = new UI.Dialogs.QueueMonitorDialog ( this , false , queueManager ) ; dialog . setLocationRelativeTo ( this ) ; dialog . setVisible ( true ) ; } catch ( com.ibm.mq.MQException ex ) { MQApi.Logs.LogWriter . WriteToLog ( ex . fillInStackTrace () ) ; javax.swing.JOptionPane . showMessageDialog ( this , MQApi.Utilities.MQUtility . getMQReturnMessage ( ex.completionCode , ex . getReason () ) , "Error" , javax.swing.JOptionPane.ERROR_MESSAGE ) ; } } 
public void init ( final java.nio.file.Path workingDirectory ) { eval ( com.scrivenvar.processors.text.TextReplacementFactory . replace ( ( ( ( ( ( "" + ( "assign( 'anchor', as.Date( '$date.anchor$', format='%Y-%m-%d' ), envir = .GlobalEnv );" + "setwd( '" ) ) + ( workingDirectory . toString () . replace ( '\\' , '/' ) ) ) + "' );" ) + "source( '../bin/pluralize.R' );" ) + "source( '../bin/common.R' )" ) , getDefinitions () ) ) ; } 
public java.lang.String buildSelectStatement ( com.psddev.dari.db.Query < ? > query ) { try { com.psddev.dari.db.Query < ? > strippedQuery = query . clone () ; strippedQuery . setDatabase ( null ) ; return sqlQueryCache . getUnchecked ( strippedQuery ) ; } catch ( com.google.common.util.concurrent.UncheckedExecutionException e ) { java.lang.Throwable cause = e . getCause () ; if ( cause instanceof java.lang.RuntimeException ) { throw ( ( java.lang.RuntimeException ) ( cause ) ) ; } else { throw new com.psddev.dari.db.DatabaseException ( this , cause ) ; } } } 
@ java.lang.Override public boolean onNavigationItemSelected ( android.view.MenuItem item ) { int id = item . getItemId () ; if ( id == ( R.id.menu_home ) ) {} else if ( id == ( R.id.menu_course ) ) {} else if ( id == ( R.id.menu_profile ) ) { startActivity ( new android.content.Intent ( this , com.example.timotiusek.musikonekteacher.ProfileActivity . class ) ) ; } else if ( id == ( R.id.menu_skill ) ) {} else if ( id == ( R.id.menu_quit ) ) {} drawer . closeDrawer ( GravityCompat.START ) ; return true ; } 
private org.duracloud.common.web.RestHttpHelper.HttpResponse addContentItem ( java.lang.String contentId ) throws java.lang.Exception { java.lang.String url = ( ( ( ( BaseRestTester.baseUrl ) + "/" ) + ( BaseRestTester.spaceId ) ) + "/" ) + contentId ; java.util.Map < java.lang.String , java.lang.String > headers = new java.util.HashMap < java.lang.String , java.lang.String > () ; return BaseRestTester.restHelper . put ( url , new java.io.ByteArrayInputStream ( org.duracloud.integration.durastore.rest.TestContentRest.CONTENT . getBytes () ) , "text/plain" , headers ) ; } 
public static void addUserToDatabase ( java.lang.String userName , org.ektorp.CouchDbConnector newDatabase ) { de.evoila.cf.broker.custom.couchdb.model.DatabaseSecurity securityDefinition = newDatabase . find ( de.evoila.cf.broker.custom.couchdb.model.DatabaseSecurity . class , "_security" ) ; boolean securityDefinitionIsNew = false ; if ( securityDefinition == null ) { securityDefinition = new de.evoila.cf.broker.custom.couchdb.model.DatabaseSecurity () ; securityDefinitionIsNew = true ; } securityDefinition . getMembers () . getNames () . add ( userName ) ; if ( securityDefinitionIsNew ) { newDatabase . create ( "_security" , securityDefinition ) ; } else { newDatabase . update ( securityDefinition ) ; } newDatabase . ensureFullCommit () ; } 
public static android.graphics.Bitmap rotateBitmapByDegree ( android.graphics.Bitmap bitmap , int degree ) { android.graphics.Matrix matrix = new android.graphics.Matrix () ; matrix . postRotate ( degree ) ; android.graphics.Bitmap newBitmap = android.graphics.Bitmap . createBitmap ( bitmap , 0 , 0 , bitmap . getWidth () , bitmap . getHeight () , matrix , true ) ; if ( ( bitmap != null ) && ( ! ( bitmap . isRecycled () ) ) ) { bitmap . recycle () ; } return newBitmap ; } 
@ java.lang.Override public java.awt.Dimension minimumLayoutSize ( java.awt.Container parent ) { java.lang.System.out . println ( "mini" ) ; java.awt.Dimension dimension = new java.awt.Dimension ( 0 , 0 ) ; java.awt.Insets insets = parent . getInsets () ; dimension.width = ( insets.left ) + ( insets.right ) ; dimension.height = ( insets.top ) + ( insets.bottom ) ; return dimension ; } 
@ java.lang.Override public void success ( com.sregg.android.tv.spotify.fragments.PlaylistsPager playlistsPager , retrofit.client.Response response ) { com.sregg.android.tv.spotify.fragments.ArrayObjectAdapter listRowAdapter = new com.sregg.android.tv.spotify.fragments.ArrayObjectAdapter ( new com.sregg.android.tv.spotify.presenters.PlaylistCardPresenter () ) ; for ( com.sregg.android.tv.spotify.fragments.PlaylistSimple playlistSimple : playlistsPager.playlists.items ) { com.sregg.android.tv.spotify.fragments.Playlist playlist = com.sregg.android.tv.spotify.SpotifyTvApplication . getInstance () . getSpotifyService () . getPlaylist ( playlistSimple.owner.id , playlistSimple.id ) ; listRowAdapter . add ( playlist ) ; } com.sregg.android.tv.spotify.fragments.HeaderItem header = new com.sregg.android.tv.spotify.fragments.HeaderItem ( getString ( R.string.playlists ) ) ; mRowsAdapter . add ( new com.sregg.android.tv.spotify.fragments.ListRow ( header , listRowAdapter ) ) ; } 
public java.lang.String extractDateAndInputLine ( java.lang.String inputLine , java.util.List < parser.DateGroup > groups ) { for ( parser.DateGroup group : groups ) { java.util.List < java.util.Date > dates = group . getDates () ; if ( ( dates . size () ) == 2 ) { setStartEndTime ( group , dates ) ; } else if ( ( dates . size () ) == 1 ) { setEndTime ( group , dates ) ; } inputLine = removeDateFromInputLine ( inputLine , group ) ; } return inputLine ; } 
public java.lang.String [] valuesToArray () { java.lang.String [] items = new java.lang.String [ size ] ; walk ( root , new RBTree.IndexedConsumer < RBTree.RBNode > ( ( node , index ) - > items [ ( index ++ ) ] = node.item ) ) ; return items ; } 
public void insertReportingPeriod ( org.activityinfo.store.mysql.cursor.QueryExecutor executor ) { if ( ( date1 ) == null ) { date1 = new java.util.Date ( 0 ) ; date2 = new java.util.Date ( 0 ) ; } reportingPeriodId = new org.activityinfo.model.legacy.KeyGenerator () . generateInt () ; executor . update ( ( "INSERT INTO reportingperiod (siteId, reportingPeriodId, date1, date2, dateCreated, dateEdited) " + "VALUES (?, ?, ?, ?, ?, ?)" ) , java.util.Arrays . asList ( siteId , reportingPeriodId , date1 , date2 , new java.util.Date () , new java.util.Date () ) ) ; } 
public static synchronized de.kantor.alexa.lego.ev3.iot.lambda.Alexa2Ev3IotClient getInstance ( java.util.List < de.kantor.alexa.lego.ev3.iot.lambda.Ev3Device > ev3Devices ) { if ( ( de.kantor.alexa.lego.ev3.iot.lambda.Alexa2Ev3IotClient.instance ) != null ) { throw new java.lang.IllegalStateException ( "already initialized" ) ; } de.kantor.alexa.lego.ev3.iot.lambda.Alexa2Ev3IotClient.instance = new de.kantor.alexa.lego.ev3.iot.lambda.Alexa2Ev3IotClient ( java.lang.System . getenv ( "aws_iot_endpoint" ) , java.lang.System . getenv ( "aws_iot_client" ) , java.lang.System . getenv ( "aws_iot_accessKeyId" ) , java.lang.System . getenv ( "aws_iot_secretAccessKey" ) , ev3Devices ) ; return de.kantor.alexa.lego.ev3.iot.lambda.Alexa2Ev3IotClient.instance ; } 
public D5.conversation findConvo ( D5.user otherUser ) { for ( int i = 0 ; i < ( numConvo ) ; i ++ ) { if ( ( ( convo [ i ] ) != null ) && ( convo [ i ] . getDriver () . getName () . equals ( otherUser . getName () ) ) ) { return convo [ i ] ; } } return null ; } 
@ java.lang.Override public void bind ( com.badlogic.gdx.graphics.glutils.ShaderProgram shader , int [] locations ) { com.badlogic.gdx.graphics.GL30 gl = com.badlogic.gdx.Gdx.gl30 ; if ( ( vaoDirty ) || ( ! ( gl . glIsVertexArray ( vaoHandle ) ) ) ) { com.badlogic.gdx.graphics.glutils.VertexBufferObjectWithVAO.tmpHandle . clear () ; gl . glGenVertexArrays ( 1 , com.badlogic.gdx.graphics.glutils.VertexBufferObjectWithVAO.tmpHandle ) ; vaoHandle = com.badlogic.gdx.graphics.glutils.VertexBufferObjectWithVAO.tmpHandle . get ( 0 ) ; gl . glBindVertexArray ( vaoHandle ) ; bindAttributes ( shader , locations ) ; vaoDirty = false ; } else { gl . glBindVertexArray ( vaoHandle ) ; } bindData ( gl ) ; isBound = true ; } 
private static java.lang.String makeString ( int packet , java.lang.String detail ) { packets.InboundPackets packetType = null ; if ( ( packet < 0 ) || ( packet > ( packets.InboundPackets . values () . length ) ) ) packetType = packets.InboundPackets . values () [ packet ] ; return ( ( "Packet error processing " + ( packetType == null ? "UNKNOWN" : packetType . name () ) ) + " : " ) + detail ; } 
@ cpw.mods.fml.common.eventhandler.SubscribeEvent ( priority = cpw.mods.fml.common.eventhandler.EventPriority.HIGHEST ) public void onPlayerLoggedIn ( cpw.mods.fml.common.gameevent.PlayerEvent.PlayerLoggedInEvent event ) { com.MadokaMagica.mod_madokaMagica.trackers.PMDataTracker oldTracker = com.MadokaMagica.mod_madokaMagica.managers.PlayerDataTrackerManager . getInstance () . getTrackerByUUID ( event.player . getPersistentID () ) ; if ( oldTracker != null ) { oldTracker.entity = event.player ; oldTracker . loadTagData () ; return; } java.lang.System.out . println ( "getTrackerByUUID returned null. Calling new PMDataTracker(...);" ) ; com.MadokaMagica.mod_madokaMagica.trackers.PMDataTracker tracker = new com.MadokaMagica.mod_madokaMagica.trackers.PMDataTracker ( event.player ) ; com.MadokaMagica.mod_madokaMagica.managers.PlayerDataTrackerManager . getInstance () . addDataTracker ( tracker ) ; tracker . loadTagData () ; } 
@ cucumber.api.java.en.Then ( value = "^The RestResponse should contain a topology id$" ) public void The_RestResponse_should_contain_an_id_string ( ) throws java.lang.Throwable { java.lang.String response = alien4cloud.it.Context . getInstance () . getRestResponse () ; org.junit.Assert . assertNotNull ( response ) ; alien4cloud.rest.model.RestResponse < java.lang.String > restResponse = alien4cloud.rest.utils.JsonUtil . read ( response , java.lang.String . class ) ; org.junit.Assert . assertNotNull ( restResponse . getData () ) ; org.junit.Assert . assertFalse ( restResponse . getData () . isEmpty () ) ; } 
private void notifyCompletionListener () { if ( ( ( completionListener ) == null ) || ( ! ( muxNotifier . shouldNotifyCompletion ( com.devbrackets.android.exomedia.EMListenerMux.COMPLETED_DURATION_LEEWAY ) ) ) ) { return; } notifiedCompleted = true ; delayedHandler . post ( new java.lang.Runnable () { @ java.lang.Override public void run () { completionListener . onCompletion ( null ) ; if ( ( bus ) != null ) { bus . post ( new com.devbrackets.android.exomedia.event.EMMediaCompletionEvent () ) ; } } } ) ; } 
private static void startBackground ( com.podevs.android.utilities.SpannableStringBuilder text , org.xml.sax.Attributes attributes ) { java.lang.String color = attributes . getValue ( "" , "color" ) ; int c = - 1 ; if ( ( color != null ) && ( ! ( color . equals ( "" ) ) ) ) { color = color . substring ( 6 ) ; try { c = com.podevs.android.utilities.MyColor . parseColor ( color ) ; } catch ( java.lang.IllegalArgumentException e ) { c = MyColor.BLACK ; } } com.podevs.android.utilities.HtmlToSpannedConverter . start ( text , new com.podevs.android.utilities.BackgroundColorSpan ( c ) ) ; } 
public void initialize ( ) throws java.io.FileNotFoundException , java.lang.ReflectiveOperationException { this . stateMgrAdaptor = createStateMgrAdaptor () ; this . runtime = com.twitter.heron.spi.common.Config . newBuilder () . put ( Key.SCHEDULER_STATE_MANAGER_ADAPTOR , stateMgrAdaptor ) . put ( Key.TOPOLOGY_NAME , com.twitter.heron.spi.common.Context . topologyName ( config ) ) . build () ; this . schedulerClient = createSchedulerClient () ; this . policyConfigReader = createPolicyConfigReader () ; injector = com.google.inject.Guice . createInjector ( baseModule ) ; com.google.inject.AbstractModule commonModule = buildCommonConfigModule () ; injector = injector . createChildInjector ( commonModule ) ; initializePolicies () ; } 
@ org.junit.Test public void expected_exception_message_did_not_match ( ) throws java.lang.Throwable { rule . expectThrowable ( java.lang.AssertionError . class , "FOO" ) ; try { rule . apply ( new org.junit.runners.model.Statement () { public void evaluate ( ) throws java.lang.Throwable { throw new java.lang.AssertionError ( "BAR" ) ; } } , org.mockito.Mockito . mock ( org.junit.runners.model.FrameworkMethod . class ) , this ) . evaluate () ; org.junit.Assert . fail () ; } catch ( java.lang.AssertionError throwable ) { org.assertj.core.api.Assertions . assertThat ( throwable ) . hasMessageContaining ( "Expecting message" ) ; } } 
public void setServerInfo () { if ( ( ( mPreferences . getCustomServer () ) != null ) && ( ( mPreferences . getCustomServer () ) != "" ) ) { mJay . setNode ( mPreferences . getCustomServer () ) ; mJay . setRequestMethod ( RequestMethods.Single ) ; mJay . setIsTestnet ( mPreferences . getIsTestNet () ) ; } else { mJay . setRequestMethod ( RequestMethods.Fastest ) ; mJay . setIsTestnet ( false ) ; } } 
@ java.lang.Override public int compareTo ( org.apache.lucene.replicator.nrt.CopyJob _other ) { org.apache.lucene.replicator.nrt.SimpleCopyJob other = ( ( org.apache.lucene.replicator.nrt.SimpleCopyJob ) ( _other ) ) ; if ( ( highPriority ) != ( other.highPriority ) ) { return highPriority ? - 1 : 1 ; } else if ( ( ord ) < ( other.ord ) ) { return - 1 ; } else { return 0 ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = ( za.org.grassroot.webapp.controller.ussd.USSDVoteController.path ) + "new" ) @ org.springframework.web.bind.annotation.ResponseBody public za.org.grassroot.webapp.model.ussd.AAT.Request newVote ( @ org.springframework.web.bind.annotation.RequestParam ( value = phoneNumber ) java.lang.String inputNumber ) throws java.net.URISyntaxException { za.org.grassroot.core.domain.User user = userManager . findByInputNumber ( inputNumber , ( ( voteMenus ) + "new" ) ) ; java.lang.String groupsExistPrompt = getMessage ( za.org.grassroot.webapp.controller.ussd.USSDVoteController.thisSection , "group" , promptKey , user ) ; java.lang.String groupsDontExistPrompt = getMessage ( za.org.grassroot.webapp.controller.ussd.USSDVoteController.thisSection , "group" , ( ( promptKey ) + "-nogroup" ) , user ) ; return menuBuilder ( ussdGroupUtil . askForGroupNoInlineNew ( user , za.org.grassroot.webapp.controller.ussd.USSDVoteController.thisSection , groupsExistPrompt , groupsDontExistPrompt , "issue" , ( ( groupMenus ) + "create" ) , null ) ) ; } 
static TorMessage.Type toEnum ( int id ) { switch ( id ) { case 0 : return TorMessage.Type.CREATE ; case 1 : return TorMessage.Type.CREATED ; case 2 : return TorMessage.Type.AES_REQUEST ; case 3 : return TorMessage.Type.AES_RESPONSE ; case 4 : return TorMessage.Type.EXTEND ; case 5 : return TorMessage.Type.EXTENDED ; case 6 : return TorMessage.Type.RELAY ; case 7 : return TorMessage.Type.RELAYED ; case 8 : return TorMessage.Type.BEGIN ; case 9 : return TorMessage.Type.DATA ; case 10 : return TorMessage.Type.TEARDOWN ; default: java.lang.System.out . println ( ( "BAD: " + ( java.lang.Integer . toString ( id ) ) ) ) ; return TorMessage.Type.BEGIN ; } } 
public void readPropertiesFromContentValues ( android.content.ContentValues values , com.yahoo.squidb.sql.Property < ? > . . . properties ) { prepareToReadProperties () ; if ( values != null ) { for ( com.yahoo.squidb.sql.Property < ? > property : properties ) { if ( values . containsKey ( property . getName () ) ) { com.yahoo.squidb.utility.SquidUtilities . putInto ( this . values , property . getName () , getFromValues ( property , values ) , true ) ; } } } } 
public java.lang.String getOutput ( com.gtp.dubbo.api.metadata.ApiParamInfo returnParams ) { if ( returnParams . getIsList () ) { com.alibaba.fastjson.JSONObject returnJson = com.gtp.dubbo.api.utils.ReflectUtils . allFields ( returnParams . getType () ) ; com.alibaba.fastjson.JSONArray returnData = new com.alibaba.fastjson.JSONArray () ; returnData . add ( returnJson ) ; return returnData . toJSONString () ; } else { com.alibaba.fastjson.JSONObject returnJson = com.gtp.dubbo.api.utils.ReflectUtils . allFields ( returnParams . getType () ) ; return returnJson . toJSONString () ; } } 
@ com.google.gwt.uibinder.client.UiHandler ( value = "uploadImageLbl" ) public void clickOnUploadImg ( com.google.gwt.event.dom.client.ClickEvent saveCourseEvent ) { org.ednovo.gooru.application.shared.model.folder.CreateDo createOrUpDate = new org.ednovo.gooru.application.shared.model.folder.CreateDo () ; createOrUpDate . setTitle ( collectionTitle . getText () ) ; createOrUpDate . setDescription ( learningObjective . getText () ) ; createOrUpDate . setCollectionType ( type ) ; createOrUpDate . setDescription ( learningObjective . getText () ) ; createOrUpDate . setUrl ( courseObjG . getThumbnails () . getUrl () ) ; getUiHandlers () . uploadCollectionImage ( createOrUpDate ) ; } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int whichButton ) { java.lang.String newgroup = inputowner . getText () . toString () ; java.lang.String newowner = inputgroup . getText () . toString () ; dialog . dismiss () ; if ( ( ( newgroup . length () ) > 1 ) && ( ( newowner . length () ) > 1 ) ) { final com.dnielfe.manager.tasks.GroupOwnerTask task = new com.dnielfe.manager.tasks.GroupOwnerTask ( a , newgroup , newowner ) ; task . executeOnExecutor ( AsyncTask.THREAD_POOL_EXECUTOR , com.dnielfe.manager.dialogs.GroupOwnerDialog.file ) ; } } 
public static void touch ( java.nio.file.Path file , java.nio.file.attribute.FileTime timestamp ) throws java.io.IOException { if ( ! ( java.nio.file.Files . exists ( file ) ) ) { java.nio.file.Path parent = file . getParent () ; if ( ! ( java.nio.file.Files . exists ( parent ) ) ) { java.nio.file.Files . createDirectories ( parent ) ; } java.nio.file.Files . createFile ( file ) ; } java.nio.file.Files . setLastModifiedTime ( file , timestamp ) ; } 
private void newLocationFromLatLng ( com.google.android.gms.maps.model.LatLng latLng ) { android.util.Log . d ( "MyMapsActivity" , "newLocationFromLatLng" ) ; ui.component.MarkerManager markerManager = ui.component.MarkerManager . getInstance () ; java.util.Hashtable < java.lang.String , com.google.android.gms.maps.model.Marker > markerHashTable = markerManager . getMarkerHashTable () ; onMapPresedLatLng = latLng ; markerHashTable . clear () ; ui.activity.MainActivity.googleMap . clear () ; progressBar . setVisibility ( view.VISIBLE ) ; ui.activity.MainActivity.zoom = ui.activity.MainActivity.googleMap . getCameraPosition () . zoom ; ui.activity.MainActivity.bearing = ui.activity.MainActivity.googleMap . getCameraPosition () . bearing ; selectCorrectLatLng () ; animateCameraPos () ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_about ) ; mAboutToolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar_about ) ) ) ; mAboutToolbar . setTitle ( "Smart Sms Helper" ) ; setSupportActionBar ( mAboutToolbar ) ; getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; getSupportActionBar () . setDisplayShowHomeEnabled ( true ) ; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) @ java.lang.Override protected void onRestoreInstanceState ( android.os.Bundle savedInstanceState ) { super . onRestoreInstanceState ( savedInstanceState ) ; java.util.ArrayList < org.digitalcampus.oppia.model.Course > savedCourses = ( ( java.util.ArrayList < org.digitalcampus.oppia.model.Course > ) ( savedInstanceState . getSerializable ( "courses" ) ) ) ; this . courses . addAll ( savedCourses ) ; try { this . json = new org.json.JSONObject ( savedInstanceState . getString ( "json" ) ) ; } catch ( org.json.JSONException e ) {} tasksController = ( ( org.digitalcampus.oppia.task.DownloadTasksController ) ( savedInstanceState . getParcelable ( "tasksProgress" ) ) ) ; } 
private static void jj_la1_init_0 () { simplejava.jj_la1_0 = new int [] { 536915968 , 541065216 , 0 , 536915968 , 536915968 , 2048 , 4255744 , 4255744 , 262144000 , 1075183616 , 0 , 1073741824 , -2147483648 , 0 , 1075183616 , 536915968 , 1073741824 , 1441792 , 1335885824 , 0 , 1075183616 , 1335885824 , 1073741824 , 1073741824 , 0 , 0 , 262144000 , -2147483648 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 262144000 } ; } 
@ org.junit.Test public void testManifestNoJUnit ( ) throws java.lang.Exception { java.io.File TARGET = new java.io.File ( "target" ) ; java.io.File base = new java.io.File ( TARGET , "test-bundles" ) ; java.io.File tikaBundle = new java.io.File ( base , "tika-bundle-fork.jar" ) ; java.util.jar.JarInputStream jarIs = new java.util.jar.JarInputStream ( new java.io.FileInputStream ( tikaBundle ) ) ; java.util.jar.Manifest mf = jarIs . getManifest () ; java.util.jar.Attributes main = mf . getMainAttributes () ; java.lang.String importPackage = main . getValue ( "Import-Package" ) ; boolean containsJunit = importPackage . contains ( "junit" ) ; org.junit.Assert . assertFalse ( "The bundle should not import junit" , containsJunit ) ; } 
public void moveDown () { if ( ( yPos ) < ( world . getMap () . size () ) ) { ( yPos ) ++ ; current = world . getTile ( yPos , xPos ) ; status = current . getType () ; java.lang.System.out . println ( ( ( ( xPos ) + ", " ) + ( yPos ) ) ) ; } else { java.lang.System.out . println ( "Can't move, edge" ) ; status = "You can't move in that direction." ; } } 
public void sendPlcCommand ( org.apache.http.client.methods.HttpPost postMethod ) throws java.io.IOException { org.apache.http.client.CookieStore sessionStore = cookieStoreFactory . createCookieStore () ; if ( ! ( loginToPlc ( sessionStore ) ) ) { throw new java.io.IOException ( ( ( ( ( ( "Could not authenticate with PLC! IP: " + ( _plcIpAddress ) ) + " User: " ) + ( _plcLogin ) ) + "Pass: " ) + ( _plcPassword ) ) ) ; } org.apache.http.impl.client.CloseableHttpClient commandClient = clientFactory . createHttpClient ( sessionStore ) ; connectGetContent ( commandClient , postMethod ) ; logoutOfPlc ( sessionStore ) ; } 
private void fragmentLoad ( android.support.v4.app.Fragment newFragment , com.example.bbschool.bbremotemobile.Mode mode ) { if ( newFragment == null ) return; getSupportActionBar () . setTitle ( com.example.bbschool.bbremotemobile.InputActivity.fragmentTags . get ( mode ) ) ; android.support.v4.app.FragmentManager fragmentManager = getSupportFragmentManager () ; android.support.v4.app.FragmentTransaction fragmentTransaction = fragmentManager . beginTransaction () ; fragmentTransaction . replace ( R.id.input_mode_fragment , newFragment , com.example.bbschool.bbremotemobile.InputActivity.fragmentTags . get ( mode ) ) ; fragmentTransaction . addToBackStack ( null ) ; fragmentTransaction . commit () ; } 
private static CredentialStoreService.Client getCredentialStoreClient () { try { java.lang.String credServerHost = org.apache.airavata.common.utils.ServerSettings . getCredentialStoreServerHost () ; int credServerPort = java.lang.Integer . valueOf ( org.apache.airavata.common.utils.ServerSettings . getCredentialStoreServerPort () ) ; return org.apache.airavata.credential.store.client.CredentialStoreClientFactory . createAiravataCSClient ( null , 0 ) ; } catch ( org.apache.airavata.credential.store.exception.CredentialStoreException | org.apache.airavata.common.exception.ApplicationSettingsException e ) { throw new java.lang.RuntimeException ( "Failed to create credential store service client" , e ) ; } } 
private void setUpAlarm ( android.content.Context context ) { android.app.AlarmManager alarmManager = ( ( android.app.AlarmManager ) ( context . getSystemService ( Context.ALARM_SERVICE ) ) ) ; android.content.Intent createdIntent = new android.content.Intent ( context , se.chalmers.projektgrupplp4.studentlivinggbg.AlarmReceiver . class ) ; android.app.PendingIntent pendingIntent = android.app.PendingIntent . getBroadcast ( context , 0 , createdIntent , 0 ) ; alarmManager . set ( AlarmManager.RTC_WAKEUP , ( ( java.lang.System . currentTimeMillis () ) + 1000 ) , pendingIntent ) ; } 
private void writeObject ( java.io.ObjectOutputStream oos ) throws java.io.IOException { oos . defaultWriteObject () ; if ( ( photo ) != null ) { java.io.ByteArrayOutputStream byteStream = new java.io.ByteArrayOutputStream () ; boolean success = photo . compress ( Bitmap.CompressFormat.PNG , 100 , byteStream ) ; if ( success ) { oos . writeObject ( byteStream . toByteArray () ) ; } } } 
public int cumulativeProduct () { int product = 1 ; list.EquationList e = head ; int s = size ; while ( s > 0 ) { product = product * ( e.result ) ; s -= 1 ; e = e.next ; } return product ; } 
protected void applyAcl ( org.apache.activemq.security.AuthorizationEntry entry , org.apache.activemq.security.SimpleCachedLDAPAuthorizationMap.PermissionType permissionType , java.util.Set < java.lang.Object > acls ) { switch ( permissionType ) { case READ : entry . setReadACLs ( acls ) ; break; case WRITE : entry . setWriteACLs ( acls ) ; break; case ADMIN : entry . setAdminACLs ( acls ) ; break; case BROWSE : entry . setBrowseACLs ( acls ) ; default: throw new java.lang.IllegalArgumentException ( ( ( "Unknown permission " + permissionType ) + "." ) ) ; } } 
private javax.servlet.http.HttpServletRequest extractHttpServletRequest ( java.lang.Object object ) { if ( object instanceof org.springframework.extensions.webscripts.servlet.WebScriptServletRequest ) { org.springframework.extensions.webscripts.servlet.WebScriptServletRequest request = ( ( org.springframework.extensions.webscripts.servlet.WebScriptServletRequest ) ( object ) ) ; return request . getHttpServletRequest () ; } else if ( object instanceof org.springframework.extensions.webscripts.WrappingWebScriptRequest ) { org.springframework.extensions.webscripts.WrappingWebScriptRequest wrappingWebScriptRequest = ( ( org.springframework.extensions.webscripts.WrappingWebScriptRequest ) ( object ) ) ; org.springframework.extensions.webscripts.servlet.WebScriptServletRequest request = ( ( org.springframework.extensions.webscripts.servlet.WebScriptServletRequest ) ( wrappingWebScriptRequest . getNext () ) ) ; return request . getHttpServletRequest () ; } return null ; } 
public static Flippable doubleFlip ( Flippable f1 ) { int side = f1 . getUpSide () ; Coin c ; switch ( side ) { case 0 : c = new Penny () ; break; case 1 : c = new Nickel () ; break; default: c = new Coin ( 0.0 , "some other coin" ) ; break; } return c ; } 
long timeTrainGoesTo ( java.lang.String target , java.sql.Timestamp currentTime ) { if ( target == null ) throw new java.lang.NullPointerException ( "Station name cannot be null" ) ; if ( currentTime == null ) throw new java.lang.NullPointerException ( "Time name cannot be null" ) ; if ( ! ( intermediateStationStorage . contains ( target ) ) ) throw new java.util.NoSuchElementException ( "Train doesn't go to this station" ) ; return ( time . getTime () ) - ( currentTime . getTime () ) ; } 
public org.spongepowered.api.command.CommandResult execute ( org.spongepowered.api.command.CommandSource src , org.spongepowered.api.command.args.CommandContext args ) throws org.spongepowered.api.command.CommandException { java.util.Optional < java.lang.String > addingMessage = args . < java.lang.String > getOne ( org.spongepowered.api.text.Text . of ( "message" ) ) ; try { int indexNumber = com.gmail.eliterscripts.ConfigManager . addMessage ( addingMessage ) ; src . sendMessage ( org.spongepowered.api.text.Text . of ( ( ( "Your message was added to the list, indexed under '" + indexNumber ) + "'." ) ) ) ; } catch ( java.lang.NullPointerException e ) { src . sendMessage ( org.spongepowered.api.text.Text . of ( "Sorry, there was an error adding you message." ) ) ; } return null ; } 
@ java.lang.Override public void onResults ( android.os.Bundle results ) { android.util.Log . d ( com.example.jihun.ironman.speech.EnhancedSpeechRecognizer.TAG , "onResult" ) ; java.util.ArrayList < java.lang.String > results_in_arraylist = results . getStringArrayList ( SpeechRecognizer.RESULTS_RECOGNITION ) ; for ( java.lang.String speech : results_in_arraylist ) { android.util.Log . d ( com.example.jihun.ironman.speech.EnhancedSpeechRecognizer.TAG , ( "match: " + speech ) ) ; speech_listener_ . onSpeechRecognized ( speech ) ; } asyncStart () ; duplicated_listening_ = false ; speech_recognized_ = false ; } 
public boolean doesEdgesHaveWeight () { if ( ! ( edgesHasWeigth ) ) { for ( org.apache.storm.graph.Edge edge : edges . values () ) { if ( ( edge . getWeight () ) != ( - 1 ) ) { edgesHasWeigth = true ; return true ; } } } return false ; } 
@ java.lang.Override public void update () { if ( ( lastAction ) == ( com.zjutkz.app.presenter.MainPresenter.REFRESH ) ) { beauties.results . clear () ; beauties.results . addAll ( repository . get () . results ) ; } else if ( ( lastAction ) == ( com.zjutkz.app.presenter.MainPresenter.LOAD_MORE ) ) { beauties.results . addAll ( repository . get () . results ) ; } com.zjutkz.lib.AgeraBus . eventRepositories () . post ( new com.zjutkz.app.model.eventbus.LoadEvent ( beauties.results ) ) ; } 
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { if ( obj == null ) { return false ; } final org.symphonyoss.client.model.Chat other = ( ( org.symphonyoss.client.model.Chat ) ( obj ) ) ; if ( ! ( this . stream . equals ( other.stream ) ) ) { return false ; } return true ; } 
@ java.lang.Override public void onRefresh () { addStatusListener () ; de.ironjan.mensaupb.fragments.Bundle settingsBundle = new de.ironjan.mensaupb.fragments.Bundle () ; settingsBundle . putBoolean ( ContentResolver.SYNC_EXTRAS_MANUAL , true ) ; settingsBundle . putBoolean ( ContentResolver.SYNC_EXTRAS_EXPEDITED , true ) ; de.ironjan.mensaupb.fragments.ContentResolver . requestSync ( mAccountCreator . getAccount () , AccountCreator.AUTHORITY , settingsBundle ) ; LOGGER . debug ( "Sync requested." ) ; } 
private void randomPigPosition ( lib.GameObject.ISprite sprite ) { pigSprite . getBody () . getPosition () . setX ( ( ( float ) ( ( ( java.lang.Math . random () ) * 500 ) + 200 ) ) ) ; pigSprite . getBody () . getPosition () . setY ( 480 ) ; } 
public void join ( ) throws java.lang.InterruptedException { pt.it.av.atnog.utils.parallel.Stop stop = new pt.it.av.atnog.utils.parallel.Stop () ; sink . put ( stop ) ; for ( java.util.concurrent.BlockingQueue < java.lang.Object > q : queues ) q . put ( stop ) ; for ( pt.it.av.atnog.utils.parallel.Worker w : workers ) w . join () ; source . add ( stop ) ; } 
private void init ( final boolean daemonize , final java.nio.file.Path pidFile , final boolean quiet , org.elasticsearch.env.Environment env ) throws org.elasticsearch.cli.UserException , org.elasticsearch.node.NodeValidationException { try { org.elasticsearch.bootstrap.BootstrapProxy . init ( ( ! daemonize ) , pidFile , quiet , env ) ; } catch ( io.crate.bootstrap.BootstrapException | java.lang.RuntimeException e ) { throw new org.elasticsearch.bootstrap.StartupExceptionProxy ( e ) ; } } 
@ java.lang.Override public V remove ( K key ) { com.jwetherell.algorithms.data_structures.Trie.Node node = trie . getNode ( key ) ; V value = null ; if ( node != null ) { if ( node instanceof com.jwetherell.algorithms.data_structures.TrieMap.TrieMapNode ) { com.jwetherell.algorithms.data_structures.TrieMap.TrieMapNode < V > tmn = ( ( com.jwetherell.algorithms.data_structures.TrieMap.TrieMapNode < V > ) ( node ) ) ; value = tmn.value ; } trie . remove ( node ) ; } return value ; } 
@ java.lang.Override public void done ( com.parse.ParseException e ) { if ( e == null ) { updateListView () ; android.content.Intent intent = new android.content.Intent () ; intent . putExtra ( "basketJSONStr" , basketJSONStr ) ; intent . putExtra ( "basketDateJSONStr" , basketDateJSONStr ) ; setResult ( com.yuqingcheng.luckinstock.RESULT_OK , intent ) ; android.widget.Toast . makeText ( getApplicationContext () , "Basket information saved." , Toast.LENGTH_SHORT ) ; } else { android.widget.Toast . makeText ( getApplicationContext () , e . getMessage () , Toast.LENGTH_SHORT ) ; } } 
@ java.lang.Override public void onViewCreated ( android.view.View view , @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { model = new com.zk.sample.module.card.holder.VM_DemoCardFragment ( this , binding , this ) ; binding . setViewModel ( model ) ; binding.viewPager . addOnPageChangeListener ( model . getOnPageChangeListener () ) ; binding.viewPager . setAdapter ( model . getAdapter () ) ; binding.viewPager . setPageMargin ( com.zk.baselibrary.util.UIUtil . dip2px ( getContext () , 5 ) ) ; binding.viewPager . setOffscreenPageLimit ( 3 ) ; ( ( com.zk.sample.base.BaseActivity ) ( getActivity () ) ) . addSwipeSpecialView ( binding.viewPager ) ; } 
public static boolean textsEqual ( java.lang.String s1 , java.lang.String s2 ) { java.lang.String tmp1 = s1 . replaceAll ( "\n" , "" ) . replaceAll ( "\r" , "" ) ; java.lang.String tmp2 = s1 . replaceAll ( "\n" , "" ) . replaceAll ( "\r" , "" ) ; return tmp1 . equals ( tmp2 ) ; } 
public void update () { cn.nukkit.network.protocol.AdventureSettingsPacket pk = new cn.nukkit.network.protocol.AdventureSettingsPacket () ; pk.flags = 0 ; pk.worldImmutable = ! ( canDestroyBlock ) ; pk.autoJump = autoJump ; pk.allowFlight = canFly ; pk.noClip = noclip ; pk.isFlying = flying ; pk.noPvp = noPvp ; pk.noPvm = noPvm ; pk.noMvp = noMvp ; pk.muted = muted ; pk.userPermission = ( this . player . isOp () ) ? cn.nukkit.AdventureSettings.PERMISSION_OPERATOR : cn.nukkit.AdventureSettings.PERMISSION_NORMAL ; player . dataPacket ( pk ) ; player . resetInAirTicks () ; } 
public boolean addSymbol ( java.lang.String id , java.lang.String type ) { if ( ( ( currentLevel ) >= 0 ) && ( ! ( isSet ( id ) ) ) ) { levels . get ( currentLevel ) . put ( id , new tadsemantico.Symbol ( id , type ) ) ; return true ; } return false ; } 
@ java.lang.Override public boolean onDoubleTap ( android.view.MotionEvent e ) { float x = e . getX () ; float y = e . getY () ; if ( XDebug.LOG ) android.util.Log . d ( com.minio.io.alice.MainActivity.TAG , ( ( ( ( "Tapped at: (" + x ) + "," ) + y ) + ")" ) ) ; mOpenCvCameraView . swapCamera () ; return true ; } 
@ java.lang.Override public java.math.BigDecimal calculateDerivative ( java.math.BigDecimal sum ) { if ( ( java.math.BigDecimal.ZERO . compareTo ( sum ) ) < 0 ) { return java.math.BigDecimal.ZERO ; } else if ( ( java.math.BigDecimal.ZERO . compareTo ( sum ) ) > 0 ) { return java.math.BigDecimal.ONE ; } else { throw new java.lang.IllegalArgumentException ( "The derivative of ReLU is undefined at zero!" ) ; } } 
private void game_over ( edu.oregonstate.cs361.battleship.BattleshipModel model ) { if ( ( model . get_player_hits () . size () ) == ( edu.oregonstate.cs361.battleship.Game.max_hits ) ) { game_complete ( model , true ) ; } if ( ( model . get_computer_hits () . size () ) == ( edu.oregonstate.cs361.battleship.Game.max_hits ) ) { game_complete ( model , false ) ; } } 
boolean IsItaBomb ( int i , int j ) { java.lang.String [] [] fi = field . getfilledField () ; if ( fi [ firstNumber ] [ secondNumber ] . equals ( "b" ) ) { field . setUserFieldSimple ( firstNumber , secondNumber , "b" ) ; return true ; } field . setUserField ( firstNumber , secondNumber ) ; return false ; } 
public int getInt () { int eingabe = 0 ; java.lang.String text = scan . nextLine () ; if ( text . equals ( "exit" ) ) { eingabe = - 2 ; } else { try { eingabe = java.lang.Integer . parseInt ( text ) ; } catch ( java.lang.Exception e ) { eingabe = - 1 ; } } return eingabe ; } 
public static boolean increasingTriplet ( int [] nums ) { int firstMin = java.lang.Integer.MAX_VALUE ; int secondMin = java.lang.Integer.MAX_VALUE ; for ( int i : nums ) { if ( i < firstMin ) { firstMin = i ; } else if ( i < secondMin ) { secondMin = i ; } else { return true ; } } return false ; } 
private void changePlan ( Transaction transaction ) { int index = userAccounts . getIndex ( transaction . getNumber () ) ; User currentUser = userAccounts . getUser ( index ) ; currentPlan = currentUser . getPlan () ; if ( ( currentPlan ) == "S" ) { currentPlan = "N" ; } else if ( ( currentPlan ) == "N" ) { currentPlan = "S" ; } currentUser . setPlan ( currentPlan ) ; userAccounts . updateUser ( index , currentUser ) ; } 
protected void enviarMensagemJms ( br.org.arquitetura.model.persistence.entity.listener.EventoEntidade.Tipo tipo , java.io.Serializable payloadDoEvento ) { contextoJms . createProducer () . setProperty ( "tipoEvento" , tipo . name () ) . send ( fila , payloadDoEvento ) ; br.org.arquitetura.mensageria.AbstractNotificadorJms.logger . info ( ( "mensagem JMS enviada: " + ( br.org.arquitetura.utils.LogSanitizer . sanitize ( ( ( java.lang.String ) ( payloadDoEvento ) ) ) ) ) ) ; } 
@ java.lang.Override public void generateBookmark ( dna_epigenetics.Polymer polymer ) { int numOfAtoms = polymer . getNumOfAtoms () ; int index = 0 ; do { index += separation ; for ( int i = index ; ( i < ( index + ( blockLength ) ) ) || ( i < numOfAtoms ) ; i ++ ) { polymer . setType ( index , type ) ; } } while ( index < numOfAtoms ) ; } 
public static org.eclipse.microprofile.jwt.credential.JWTCredential parse ( java.lang.String authorizationHeader , org.eclipse.microprofile.jwt.principal.JWTAuthContextInfo authContextInfo ) { org.eclipse.microprofile.jwt.credential.JWTCredential credential = null ; if ( ( authorizationHeader != null ) && ( authorizationHeader . startsWith ( "Bearer " ) ) ) { java.lang.String token = authorizationHeader . substring ( 7 ) ; credential = new org.eclipse.microprofile.jwt.credential.JWTCredential ( token ) ; } return credential ; } 
@ java.lang.Override public void onReceive ( android.content.Context context , android.content.Intent intent ) { android.net.NetworkInfo netinfo = intent . getParcelableExtra ( WifiManager.EXTRA_NETWORK_INFO ) ; if ( ( netinfo != null ) && ( netinfo . isConnected () ) ) { MainActivity.mainContext = context ; new lk.cse13.www.uomwireless.BackgroundLogin ( 0 ) . execute () ; } else { lk.cse13.www.uomwireless.Operations . cancelNotification () ; } } 
public static void close () { try { if ( HouseFile.inputFileOpen ) HouseFile.inputFile . close () ; if ( HouseFile.outputFileOpen ) HouseFile.outputFile . close () ; HouseFile.inputFileOpen = false ; HouseFile.outputFileOpen = false ; } catch ( IOException e ) { java.lang.System.out . println ( ( "Error " + e ) ) ; } } 
@ java.lang.Override public java.lang.String execute ( java.lang.String [] args ) { if ( ( args.length ) > 1 ) { if ( checkModelDefined () ) { if ( getCurrentModel () . endsWith ( ".model" ) ) { return editEntityDSL ( args [ 1 ] ) ; } else { editDBModelFile () ; } } } else { return invalidUsage ( "entity-name expected" ) ; } return null ; } 
private void findEndDate () { org.openimmunizationsoftware.cdsi.core.domain.SeriesDose referenceSeriesDose = dataModel . getTargetDose () . getTrackedSeriesDose () ; if ( ( referenceSeriesDose . getSeasonalRecommendationList () . size () ) > 0 ) { java.util.Date seasonalRecommendationEndDate = referenceSeriesDose . getSeasonalRecommendationList () . get ( 0 ) . getSeasonalRecommendationEndDate () ; caEndDate . setInitialValue ( seasonalRecommendationEndDate ) ; } else {} } 
public void setEnemigo ( mapa.Enemigo enem ) { if ( enem == null ) { e = null ; } else { if ( ( bomberM ) != null ) { bomberM . morir () ; } if ( ( ( e ) != null ) && ( ( b ) == null ) ) { if ( ( enem . getCelda () ) != null ) enem . getCelda () . setEnemigo ( null ) ; e = enem ; enem . setCelda ( this ) ; } } } 
public int getId ( java.lang.String name ) { for ( int i = 0 ; i < ( map . capacity () ) ; i ++ ) { final C component = map . get ( i ) ; if ( component == null ) { continue; } return component . index () ; } throw new com.inari.firefly.FFInitException ( ( ( "No Component with name: " + name ) + " found" ) ) ; } 
@ org.junit.Test public void detectListenerWithStartOrientationDetection () { addSensor ( android.hardware.Sensor.TYPE_ACCELEROMETER ) ; addSensor ( android.hardware.Sensor.TYPE_MAGNETIC_FIELD ) ; com.github.nisrulz.sensey.OrientationDetector.OrientationListener fakeListener = org.mockito.Mockito . mock ( com.github.nisrulz.sensey.OrientationDetector.OrientationListener . class ) ; sensey . startOrientationDetection ( fakeListener ) ; com.github.nisrulz.sensey.OrientationDetector detector = getDetector ( com.github.nisrulz.sensey.OrientationDetector . class ) ; if ( detector != null ) { org.junit.Assert . assertTrue ( "Sensor Manager must contain sensor event listener for orientation" , shadowSensorManager . hasListener ( detector ) ) ; } else { org.junit.Assert . fail ( "There should be orientation detector in sensey. If not, please, check last version of class and update reflection accessing to it field" ) ; } } 
@ java.lang.Override public java.lang.String visitArith_expr ( lessa.ExprParser.Arith_exprContext ctx ) { java.lang.System.out . println ( "arith_expr -> term (op=('+'|'-') term)*" ) ; java.lang.String arithstring = visit ( ctx . term ( 0 ) ) ; int i = 1 ; while ( ( ctx . term ( i ) ) != null ) { arithstring += ( ( " " + ( ctx . ADDMINOP ( ( i - 1 ) ) . getText () ) ) + " " ) + ( visit ( ctx . term ( ( i ++ ) ) ) ) ; } return arithstring ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; add_fermat_user = ( ( com.bitdubai.fermat_android_api.layer.definition.wallet.views.FermatButton ) ( findViewById ( R.id.add_fermat_user ) ) ) ; add_extra_user = ( ( com.bitdubai.fermat_android_api.layer.definition.wallet.views.FermatButton ) ( findViewById ( R.id.add_extra_user ) ) ) ; checkbox_not_show = ( ( android.widget.CheckBox ) ( findViewById ( R.id.checkbox_not_show ) ) ) ; checkbox_not_show . setChecked ( checkButton ) ; add_fermat_user . setOnClickListener ( this ) ; add_extra_user . setOnClickListener ( this ) ; } 
@ java.lang.Override public int hashCode () { int result = category . hashCode () ; result = ( 31 * result ) + ( name . hashCode () ) ; result = ( 31 * result ) + ( value . hashCode () ) ; return result ; } 
@ java.lang.Override public java.lang.String getWelcomeFile ( java.lang.String pathInContext ) { if ( ( _welcomes ) == null ) return null ; java.lang.String welcome_servlet = null ; for ( int i = 0 ; i < ( _welcomes.length ) ; i ++ ) { java.lang.String welcome_in_context = org.eclipse.jetty.util.URIUtil . addPaths ( pathInContext , _welcomes [ i ] ) ; org.eclipse.jetty.util.resource.Resource welcome = getResource ( welcome_in_context ) ; if ( ( welcome != null ) && ( welcome . exists () ) ) return _welcomes [ i ] ; } return welcome_servlet ; } 
public static org.cote.accountmanager.beans.SecurityBean getPrimarySymmetricKey ( long organizationId ) { org.cote.accountmanager.beans.SecurityBean bean = null ; try { org.cote.accountmanager.objects.SecurityType sec = ( ( org.cote.accountmanager.data.factory.SymmetricKeyFactory ) ( org.cote.accountmanager.data.Factories . getFactory ( FactoryEnumType.SYMMETRICKEY ) ) ) . getPrimaryOrganizationKey ( organizationId ) ; if ( sec != null ) bean = org.cote.accountmanager.data.security.KeyService . promote ( sec ) ; } catch ( org.cote.accountmanager.data.FactoryException e ) { org.cote.accountmanager.data.security.KeyService.logger . error ( "Error" , e ) ; } catch ( org.cote.accountmanager.data.ArgumentException e ) { org.cote.accountmanager.data.security.KeyService.logger . error ( "Error" , e ) ; } return bean ; } 
@ java.lang.Override protected void applyEntityAttributes () { super . applyEntityAttributes () ; this . getEntityAttribute ( SharedMonsterAttributes.MOVEMENT_SPEED ) . setBaseValue ( 0.3 ) ; if ( this . isTamed () ) { this . getEntityAttribute ( SharedMonsterAttributes.MAX_HEALTH ) . setBaseValue ( 20.0 ) ; } else { this . getEntityAttribute ( SharedMonsterAttributes.MAX_HEALTH ) . setBaseValue ( 10.0 ) ; } this . getAttributeMap () . registerAttribute ( SharedMonsterAttributes.ATTACK_DAMAGE ) . setBaseValue ( 2.0 ) ; } 
private void updateIndexForFields () { for ( int i = 0 ; i <= ( itemValues . getChildrenAsJsonArray ( fieldParent ) . size () ) ; i ++ ) { android.view.View child = parent . getChildAt ( i ) ; android.support.v7.widget.RecyclerView fieldList = ( ( android.support.v7.widget.RecyclerView ) ( child . findViewById ( R.id.field_list ) ) ) ; org.unicef.rapidreg.childcase.CaseRegisterAdapter adapter = ( ( org.unicef.rapidreg.childcase.CaseRegisterAdapter ) ( fieldList . getAdapter () ) ) ; java.util.List < org.unicef.rapidreg.forms.childcase.CaseField > fields = adapter . getFields () ; assignIndexForFields ( fields , i ) ; } } 
private cucumber.runtime.RuntimeOptions createRuntimeOptions ( final android.content.Context context ) { for ( final java.lang.Class < ? > clazz : classFinder . getDescendants ( java.lang.Object . class , context . getPackageName () ) ) { if ( clazz . isAnnotationPresent ( cucumber.api.CucumberOptions . class ) ) { android.util.Log . d ( cucumber.runtime.android.CucumberExecutor.TAG , ( "Found CucumberOptions in class " + ( clazz . getName () ) ) ) ; final java.lang.Class < ? > optionsAnnotatedClass = clazz ; final cucumber.runtime.RuntimeOptionsFactory factory = new cucumber.runtime.RuntimeOptionsFactory ( optionsAnnotatedClass ) ; return factory . create () ; } } throw new cucumber.runtime.CucumberException ( "No CucumberOptions annotation" ) ; } 
@ java.lang.Override public void onException ( javax.jms.JMSException exception ) { synchronized ( syncLock ) { if ( ( ( amqConn == ( connection ) ) && ( ( starterThread ) != null ) ) && ( starterThread . isAlive () ) ) { errorMessage = exception . getMessage () ; com.esri.geoevent.transport.activemq.ActiveMQInboundTransport.LOGGER . error ( errorMessage , exception ) ; setRunningState ( RunningState.STOPPING ) ; cleanup () ; setRunningState ( RunningState.ERROR ) ; } } } 
@ java.lang.Override public void setup ( api.Robotarm robotarm ) { MyStateListener._l_state . add ( new at.pria.osiris.osiris.controllers.hedgehog.MyStateListener () ) ; dl = new at.pria.osiris.osiris.communication.DataListener () ; at.pria.osiris.osiris.sensors.SensorRefreshable sensorRefreshable = at.pria.osiris.osiris.view.TableSensorValuesFragment . getInstance ( 1 , robotarm ) ; dl . addMessageProcessor ( new at.pria.osiris.osiris.communication.messageProcessor.StringProcessor ( robotarm , sensorRefreshable ) ) ; dl . addMessageProcessor ( new at.pria.osiris.osiris.communication.messageProcessor.SensorValueResponseProcessor ( robotarm , sensorRefreshable ) ) ; ExecutionListener._l_exec . add ( dl ) ; } 
public void start () { for ( int i = 0 ; i < 4 ; i ++ ) { players . add ( new application.model.Player ( this ) ) ; labelScore [ i ] . setVisible ( true ) ; labelName [ i ] . setVisible ( true ) ; } currentColourId = 3 ; boardM . setActive ( true ) ; javafx.animation.Timeline timeline = new javafx.animation.Timeline ( new javafx.animation.KeyFrame ( javafx.util.Duration . millis ( 100 ) , ( ae ) - > transitionMove () ) ) ; timeline . play () ; } 
public static org.geppetto.model.variables.Variable createTextTypeVariable ( java.lang.String id , java.lang.String value , org.geppetto.core.model.GeppettoModelAccess access ) throws org.geppetto.model.util.GeppettoVisitingException { org.geppetto.model.values.Text text = ValuesFactory.eINSTANCE . createText () ; text . setText ( value ) ; org.geppetto.model.variables.Variable variable = VariablesFactory.eINSTANCE . createVariable () ; variable . setId ( org.geppetto.model.neuroml.utils.modeltree.PopulateGeneralModelTreeUtils . parseId ( id ) ) ; variable . setName ( id ) ; variable . getInitialValues () . put ( access . getType ( TypesPackage.Literals.TEXT_TYPE ) , text ) ; variable . getTypes () . add ( access . getType ( TypesPackage.Literals.TEXT_TYPE ) ) ; return variable ; } 
private void nextTrack () { if ( ( mCurrentTrackIndex ) == ( ( mAllTracks . size () ) - 1 ) ) { mCurrentTrackIndex = - 1 ; } mCurrentTrackIndex = ( mCurrentTrackIndex ) + 1 ; mCurrentTrackDetails = ( ( com.udacity.neerajbholani.spotifystreamer.parcelables.TrackDetails ) ( mAllTracks . get ( mCurrentTrackIndex ) ) ) ; updateViewsWithCurrentTrackDetails () ; playTrack () ; } 
@ java.lang.Override public codeu.chat.common.UserAccessLevel newUserAccessLevel ( codeu.chat.util.Uuid conversationId , codeu.chat.util.Uuid userId , codeu.chat.common.AccessLevel accessLevel ) { final codeu.chat.common.User foundUser = model . userById () . first ( userId ) ; codeu.chat.common.UserAccessLevel userAccess = null ; if ( foundUser != null ) { model . add ( conversationId , userAccess ) ; userAccess = new codeu.chat.common.UserAccessLevel ( userId , accessLevel ) ; codeu.chat.server.Controller.LOG . info ( ( ( ( "AccessLevel " + accessLevel ) + " added to user " ) + userId ) ) ; } return userAccess ; } 
@ java.lang.Override public void paste () { int oldlength = this . getText () . length () ; super . paste () ; int posOfEnter = this . getText () . lastIndexOf ( "\n" ) ; int diff = ( ( this . getText () . length () ) - oldlength ) - 1 ; currentLine = this . getText () . substring ( ( posOfEnter + 3 ) , this . getText () . length () ) ; charCounterInLine += diff ; currentPosInLine += diff ; } 
public static void Run ( ) throws java.lang.InterruptedException { try { edu.arizona.ece.memsim.implementations.core.ProgramSmall . Reset () ; edu.arizona.ece.memsim.implementations.core.ProgramSmall . SequentialAccess () ; edu.arizona.ece.memsim.implementations.core.ProgramSmall . Reset () ; edu.arizona.ece.memsim.implementations.core.ProgramSmall . RandomAccess () ; edu.arizona.ece.memsim.implementations.core.ProgramSmall . Reset () ; edu.arizona.ece.memsim.implementations.core.ProgramSmall . StrideAccess ( true , 32 ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } 
@ java.lang.Override public < OutType > void onFinish ( OutType result ) { org.junit.Assert . assertTrue ( ( ( maxReceivedProgress ) > 95.0F ) ) ; if ( result instanceof java.lang.Integer ) { org.hamcrest.MatcherAssert . assertThat ( result , org.hamcrest.CoreMatchers . is ( 0 ) ) ; } else { org.hamcrest.MatcherAssert . assertThat ( true , org.hamcrest.CoreMatchers . is ( false ) ) ; } } 
public void prefetchStructure ( java.lang.String pdbId ) throws java.io.IOException { if ( ( pdbId . length () ) < 4 ) throw new java.io.IOException ( ( "The provided ID does not look like a PDB ID : " + pdbId ) ) ; java.io.File file = getLocalFile ( pdbId ) ; if ( file == null ) { file = downloadStructure ( pdbId ) ; } if ( ! ( file . exists () ) ) { throw new java.io.IOException ( ( ( "Structure " + pdbId ) + " not found and unable to download." ) ) ; } } 
private void executeSaveModelIntoTemporyFolder ( de.tudarmstadt.ukp.dkpro.lab.task.ParameterSpace aPSpace , java.io.File aModelFolder ) throws java.lang.Exception { de.tudarmstadt.ukp.dkpro.tc.crfsuite.task.serialization.SaveModelCRFSuiteBatchTask batch = new de.tudarmstadt.ukp.dkpro.tc.crfsuite.task.serialization.SaveModelCRFSuiteBatchTask ( "TestSaveModel" , aModelFolder , de.tudarmstadt.ukp.dkpro.tc.crfsuite.CRFSuiteAdapter . class , org.apache.uima.fit.factory.AnalysisEngineFactory . createEngineDescription ( org.apache.uima.fit.component.NoOpAnnotator . class ) ) ; batch . setParameterSpace ( aPSpace ) ; batch . setExecutionPolicy ( ExecutionPolicy.RUN_AGAIN ) ; de.tudarmstadt.ukp.dkpro.lab.Lab . getInstance () . run ( batch ) ; } 
public com.indago.pg.segments.ConflictSet getConflictSetFor ( final com.indago.pg.segments.SegmentNode node ) { for ( final java.util.Collection < com.indago.data.segmentation.LabelingSegment > clique : conflictGraph . getConflictGraphCliques () ) { if ( clique . contains ( node . getSegment () ) ) { final com.indago.pg.segments.ConflictSet cs = new com.indago.pg.segments.ConflictSet () ; for ( final com.indago.data.segmentation.LabelingSegment ls : clique ) { cs . add ( segmentBimap . getA ( ls ) ) ; } return cs ; } } return new com.indago.pg.segments.ConflictSet () ; } 
@ java.lang.Override protected void init () { m_dlSales = ( ( uk.chromis.pos.forms.DataLogicSales ) ( app . getBean ( "uk.chromis.pos.forms.DataLogicSales" ) ) ) ; jproductfilter = new uk.chromis.pos.ticket.ProductFilter () ; jproductfilter . init ( app ) ; row = m_dlSales . getProductsRow () ; lpr = new uk.chromis.data.user.ListProviderCreator ( m_dlSales . getProductCatQBF () , jproductfilter ) ; spr = new uk.chromis.data.user.SaveProvider ( m_dlSales . getProductCatUpdate () , m_dlSales . getProductCatInsert () , m_dlSales . getProductCatDelete () ) ; jeditor = new uk.chromis.pos.inventory.ProductsEditor ( m_dlSales , dirty ) ; } 
public boolean select ( org.fosstrak.llrp.commander.views.Viewer aViewer , java.lang.Object aParentElement , java.lang.Object aElement ) { if ( aElement instanceof org.fosstrak.llrp.client.LLRPMessageItem ) { org.fosstrak.llrp.client.LLRPMessageItem item = ( ( org.fosstrak.llrp.client.LLRPMessageItem ) ( aElement ) ) ; if ( item . getMessageType () . equals ( "RO_ACCESS_REPORT" ) ) { return false ; } } return true ; } 
private void switchToShowMapFragment () { final java.lang.String switchToFragmentResult = net.videgro.ships.fragments.internal.FragmentUtils . switchToFragment ( getActivity () , net.videgro.ships.fragments.ShowMapFragment . newInstance () ) ; if ( ! ( switchToFragmentResult . isEmpty () ) ) { net.videgro.ships.Analytics . logEvent ( getActivity () , net.videgro.ships.fragments.CalibrateFragment.TAG , "switchToShowMapFragment - Error" , switchToFragmentResult ) ; net.videgro.ships.fragments.internal.FragmentUtils . stopApplication ( this ) ; } } 
private void pheromoneUpdate ( int antIndex ) { for ( Utils.Pair < java.lang.Integer , java.lang.Integer > itr : ants [ antIndex ] . visitedLink ) { int u = itr.first ; int v = itr.second ; java.lang.System.out . println ( ( ( u + " " ) + v ) ) ; double updatedPheromone = ( 1 - ( algorithm.aco.multi.source.ACO.EVAPORATION ) ) * ( pheromone . get ( u , v ) ) ; pheromone . set ( u , v , updatedPheromone ) ; } } 
@ java.lang.Override public T convert ( java.lang.String value ) { final byte [] bytes = android.util.Base64 . decode ( value , Base64.DEFAULT ) ; android.os.Parcel parcel = android.os.Parcel . obtain () ; parcel . unmarshall ( bytes , 0 , bytes.length ) ; parcel . setDataPosition ( 0 ) ; return mCreator . createFromParcel ( parcel ) ; } 
@ java.lang.Override public org.apache.logging.log4j.core.filter.Result filter ( final org.apache.logging.log4j.core.Logger logger , final org.apache.logging.log4j.Level level , final org.apache.logging.log4j.Marker marker , final java.lang.String msg , final java.lang.Object p0 , final java.lang.Object p1 , final java.lang.Object p2 , final java.lang.Object p3 , final java.lang.Object p4 , final java.lang.Object p5 , final java.lang.Object p6 , final java.lang.Object p7 , final java.lang.Object p8 ) { return Result.NEUTRAL ; } 
@ java.lang.Override protected void paintThumb ( java.awt.Graphics g , javax.swing.JComponent c , java.awt.Rectangle thumbBounds ) { super . paintThumb ( g , c , thumbBounds ) ; if ( ( ( ( ( javax.swing.JScrollBar ) ( c ) ) . getValue () ) - 1 ) == ( displayedSliceIndex_ ) ) { g . setColor ( imagedisplay.ColorableScrollbarUI.DARK_GREEN ) ; g . drawRect ( thumbBounds.x , thumbBounds.y , thumbBounds.width , thumbBounds.height ) ; } } 
private com.h3xstream.findsecbugs.taintanalysis.Taint mergeTransferParameters ( java.util.Collection < java.lang.Integer > transferParameters ) { com.h3xstream.findsecbugs.taintanalysis.Taint taint = null ; assert ! ( transferParameters . isEmpty () ) ; for ( java.lang.Integer transferParameter : transferParameters ) { try { com.h3xstream.findsecbugs.taintanalysis.Taint value = getFrame () . getStackValue ( transferParameter ) ; taint = com.h3xstream.findsecbugs.taintanalysis.Taint . merge ( taint , value ) ; } catch ( edu.umd.cs.findbugs.ba.DataflowAnalysisException ex ) { throw new java.lang.RuntimeException ( "Bad transfer parameter specification" , ex ) ; } } assert taint != null ; return taint ; } 
public static boolean isAuthenticatedUser ( java.lang.String screenName ) { java.lang.String [] authenticatedScreennames = jp.gr.java_conf.ya.yumura.Twitter.KeyManage . getScreenNames ( "" , "" ) ; for ( java.lang.String authenticatedScreenname : authenticatedScreennames ) { if ( ( authenticatedScreenname . equals ( screenName ) ) && ( authenticatedScreenname . equals ( "" ) ) ) return true ; } return false ; } 
@ java.lang.Override public void onItemClick ( android.view.View v , int position ) { java.lang.String symbol = ( ( android.widget.TextView ) ( findViewById ( R.id.stock_symbol ) ) ) . getText () . toString () ; android.content.Intent intent = new android.content.Intent ( mContext , com.sam_chordas.android.stockhawk.ui.DetailStocksActivity . class ) ; intent . putExtra ( "symbol" , symbol ) ; startActivity ( intent ) ; } 
@ java.lang.Override protected de.hybris.platform.util.PriceValue findBasePrice ( final de.hybris.platform.core.model.order.AbstractOrderEntryModel entry ) throws de.hybris.platform.order.exceptions.CalculationException { return entry . getBasePrice () . equals ( new java.lang.Double ( 0.0 ) ) ? new de.hybris.platform.util.PriceValue ( entry . getOrder () . getCurrency () . toString () , 0.0 , true ) : getFindPriceStrategy () . findBasePrice ( entry ) ; } 
public com.coolerfall.download.DownloadRequest setUrl ( java.lang.String url ) { if ( android.text.TextUtils . isEmpty ( url ) ) { throw new java.lang.IllegalArgumentException ( "url cannot be null" ) ; } if ( ( ! ( url . startsWith ( "http" ) ) ) && ( url . startsWith ( "https" ) ) ) { throw new java.lang.IllegalArgumentException ( "can only download 'HTTP/HTTPS' url" ) ; } mUrl = url ; return this ; } 
public void glTexImage2D ( int target , int level , int internalFormat , int width , int height , int border , int format , int type , java.nio.ByteBuffer data ) { com.jme3.renderer.android.AndroidGL . checkPosition ( data ) ; android.opengl.GLES20 . glTexImage2D ( target , level , format , width , height , 0 , format , type , data ) ; } 
private void addNextCard () { if ( ( nextAdapterCard ) < ( mAdapter . getCount () ) ) { android.view.View newBottomChild = mAdapter . getView ( nextAdapterCard , null , this ) ; if ( hardwareAccelerationEnabled ) { newBottomChild . setLayerType ( View.LAYER_TYPE_HARDWARE , null ) ; } this . lastRemovedView = null ; newBottomChild . setY ( paddingTop ) ; addAndMeasureChild ( newBottomChild ) ; ( nextAdapterCard ) ++ ; } setupTopCard () ; } 
public boolean createProject ( java.lang.Long submissionType , java.lang.String workflowStatus , java.lang.String submissionStatus , Models.Timestamp creationDate , Models.Timestamp amendmentDate , java.lang.String projectReadinessElements , java.lang.String projectSelectionInformation , java.lang.String tbpApproval , java.lang.String stateApproval , java.lang.String federalApproval ) { Models.ProposedProject newProject = new Models.ProposedProject ( submissionType , workflowStatus , submissionStatus , creationDate , amendmentDate , projectReadinessElements , projectSelectionInformation , tbpApproval , stateApproval , federalApproval ) ; Database.ProposedProjectManager db = new Database.ProposedProjectManager () ; return db . createProject ( newProject ) ; } 
public void put ( K key , V value ) { if ( ( root ) == null ) { root = new SplayTree.TreeNode <> ( new SplayTree.Entry <> ( key , value ) ) ; } else { put ( key , value , root ) ; } } 
public boolean takeAsMain ( buildcraft.api.robots.EntityRobotBase robot ) { if ( ( robotTakingId ) == ( EntityRobotBase.NULL_ROBOT_ID ) ) { buildcraft.api.robots.IRobotWorldRegistry registry = RobotManager.registryProvider . getRegistry ( world ) ; linkIsMain = true ; robotTaking = robot ; robotTakingId = robot . getRobotId () ; registry . registryMarkDirty () ; robot . setMainStation ( this ) ; registry . take ( this , robot . getRobotId () ) ; return true ; } else { return ( robotTakingId ) == ( robot . getRobotId () ) ; } } 
@ java.lang.Override public void valueChanged ( javax.swing.event.ListSelectionEvent e ) { int row = keyFramesTable . getSelectedRow () ; if ( ( ModelCreator.currentProject.SelectedAnimation ) != null ) { at.vintagestory.modelcreator.model.Keyframe keyframe = ModelCreator.currentProject.SelectedAnimation.keyframes [ row ] ; ModelCreator.currentProject.SelectedAnimation . SetFrame ( keyframe . getFrameNumber () ) ; at.vintagestory.modelcreator.ModelCreator . updateFrame () ; } } 
@ java.lang.Override public void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { switch ( requestCode ) { case it.jaschke.alexandria.AddBook.ZBAR_SCANNER_REQUEST : if ( resultCode == ( com.dm.zbar.android.scanner.ZBarScannerActivity.RESULT_OK ) ) { if ( ( ean ) != null ) { ean . setText ( data . getStringExtra ( ZBarConstants.SCAN_RESULT ) ) ; } } else { java.lang.String error = data . getStringExtra ( ZBarConstants.ERROR_INFO ) ; android.widget.Toast . makeText ( getActivity () , error , Toast.LENGTH_SHORT ) . show () ; } } } 
private java.lang.String join ( java.lang.String [] idComponents ) { if ( ( idComponents.length ) == 0 ) { return "" ; } java.lang.StringBuilder sb = new java.lang.StringBuilder ( idComponents [ 0 ] ) ; for ( java.lang.String c : idComponents ) { sb . append ( ":" ) . append ( c ) ; } return sb . toString () ; } 
@ java.lang.Override public double [] getUsefulTrimmedData () { double [] force = new double [ getTrimmedData () . length ] ; double [] data = getTrimmedData () ; for ( int i = 0 ; i < ( force.length ) ; i ++ ) { force [ i ] = data [ i ] ; } return force ; } 
@ java.lang.Override protected void decodeBody ( org.apache.kerby.asn1.LimitedByteBuffer content ) throws java.io.IOException { while ( content . available () ) { org.apache.kerby.asn1.type.Asn1Type aValue = decodeOne ( content ) ; if ( aValue != null ) { if ( aValue instanceof org.apache.kerby.asn1.type.Asn1Item ) { addItem ( ( ( org.apache.kerby.asn1.type.Asn1Item ) ( aValue ) ) ) ; } else { addItem ( aValue ) ; } } else { throw new java.lang.RuntimeException ( "Unexpected running into here" ) ; } } } 
@ java.lang.Override public void onPositive ( com.afollestad.materialdialogs.MaterialDialog dialog ) { com.inipage.homelylauncher.views.DockElement toRemove = null ; for ( com.inipage.homelylauncher.views.DockElement de : elements ) { if ( ( de . getIndex () ) == ( touchIndex ) ) { toRemove = de ; break; } } if ( toRemove != null ) { elements . remove ( toRemove ) ; host . onElementRemoved ( touchIndex ) ; invalidate () ; } } 
private void dispatchEventHandler ( EventHandler handler , MouseInfo mouse , boolean isFront ) { assert handler != null ; if ( handler instanceof BaseActor ) { handler . onMouseIn () ; handler . onMouseOut () ; } handler . onMouseDown () ; handler . onMouseUp () ; handler . onMouseClicked () ; handler . onMouseMoved () ; handler . onMouseDragged () ; handler . onMouseDragging () ; } 
public nu.xom.Element getTaskElementByID ( java.lang.String ID ) { nu.xom.Elements els = phaseElement . getChildElements ( "task" ) ; nu.xom.Element res = null ; for ( int i = 0 ; i < ( els . size () ) ; i ++ ) { nu.xom.Element temp = els . get ( i ) ; if ( temp . getAttributeValue ( "id" ) . equals ( ID ) ) { res = temp ; } } return res ; } 
@ java.lang.Override public void run () { primaryStage . show () ; cz.filek.ups.Main . hideWindow () ; primaryStage . setOnCloseRequest ( ( event ) - > { cz.filek.ups.config.Config.CLIENT_LISTENER_RUNNING = false ; try { tcp . getSocket () . close () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } resetTcp () ; showLoginUI () ; } ) ; } 
@ org.springframework.context.annotation.Bean public org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean entityManagerFactory () { org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean entityManagerFactoryBean = new org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean () ; entityManagerFactoryBean . setDataSource ( getDataSource () ) ; entityManagerFactoryBean . setPackagesToScan ( "model" ) ; entityManagerFactoryBean . setPersistenceProvider ( new org.hibernate.jpa.HibernatePersistenceProvider () ) ; entityManagerFactoryBean . setJpaPropertyMap ( getHibernateProperties () ) ; java.lang.Object file = entityManagerFactoryBean . getJpaPropertyMap () . get ( "hibernate.hbm2ddl.import_files" ) ; configuration.database.DataBaseContextConfiguration.logger . error ( ( "Got the following file to export  " + file ) ) ; return entityManagerFactoryBean ; } 
@ org.junit.Test public void testBuildExecutionFactoryCaseInsensitive ( ) throws java.lang.Exception { org.teiid.adminapi.impl.VDBTranslatorMetaData tm = new org.teiid.adminapi.impl.VDBTranslatorMetaData () ; tm . addProperty ( "myproperty" , "correctly-assigned" ) ; tm . setExecutionFactoryClass ( org.teiid.deployers.TestTranslatorUtil.MyTranslator . class ) ; org.teiid.deployers.TestTranslatorUtil.MyTranslator my = ( ( org.teiid.deployers.TestTranslatorUtil.MyTranslator ) ( org.teiid.deployers.TranslatorUtil . buildExecutionFactory ( tm ) ) ) ; org.junit.Assert . assertEquals ( "correctly-assigned" , my . getMyProperty () ) ; } 
private boolean isDefaultPreset ( org.gephi.preview.api.PreviewPreset preset ) { int i = 0 ; for ( i = 0 ; i < ( presetComboBox . getItemCount () ) ; i ++ ) { if ( presetComboBox . getModel () . getElementAt ( i ) . equals ( preset ) ) { break; } } return i < ( defaultPresetLimit ) ; } 
public void setOnFire () { isOnFire = true ; setFireAnimation () ; new com.mayying.tileMapGame.entities.powerups.DelayedThread ( 10000L ) { @ java.lang.Override public void run () { super . run () ; if ( ( com.mayying.tileMapGame.GameWorld . getInstance () ) != null ) { if ( isOnFire ) { isOnFire = false ; die () ; } } } } . start () ; } 
public static byte [] convertToPrimative ( java.lang.Byte [] toConvert ) { byte [] primative = new byte [ toConvert.length ] ; for ( int i = 0 ; i < ( toConvert.length ) ; i ++ ) { primative [ i ] = toConvert [ i ] . byteValue () ; } return primative ; } 
@ java.lang.Override public com.trcx.ita.Common.Item.ItemStack onItemRightClick ( com.trcx.ita.Common.Item.ItemStack swapper , net.minecraft.world.World world , net.minecraft.entity.player.EntityPlayer player ) { if ( player . isSneaking () ) { if ( ! ( world.isRemote ) ) player . openGui ( Main.instance , 0 , world , 0 , 0 , 0 ) ; } else { com.trcx.ita.Common.Item.ItemStack is = com.trcx.ita.Common.Item.Swapper . getStack ( com.trcx.ita.Common.Item.Swapper.slotRightClick , swapper ) ; if ( is != null ) { is . getItem () . onItemRightClick ( is , world , player ) ; com.trcx.ita.Common.Item.Swapper . putLastStack ( swapper , is ) ; } } return swapper ; } 
public void receive ( com.ycf.ConsumerCallback callback , java.lang.String groupId , java.util.List < java.lang.String > topicList , java.lang.Long cycle ) { this . config . setProperty ( "group.id" , groupId ) ; org.apache.kafka.clients.consumer.KafkaConsumer < java.lang.String , java.lang.Object > consumer = new org.apache.kafka.clients.consumer.KafkaConsumer < java.lang.String , java.lang.Object > ( this . config ) ; consumer . subscribe ( topicList ) ; com.ycf.ConsumerThread thread = new com.ycf.ConsumerThread ( consumer , callback , cycle ) ; thread . run () ; } 
public void calendar ( int year , int month , int day ) { if ( ! ( paused ) ) { if ( day >= ( MallKing.daylength ) ) { ( this . month ) ++ ; this . day = MallKing.daymod ; } if ( month == 12 ) { ( this . year ) ++ ; this . month = 1 ; } if ( ! ( paused ) ) { ( this . day ) ++ ; } java.lang.System.out . println ( ( ( this . day ) / ( MallKing.daymod ) ) ) ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { android.support.v4.app.FragmentActivity activity = ( ( android.support.v4.app.FragmentActivity ) ( getContext () ) ) ; android.content.Intent i = new android.content.Intent ( activity , com.ankurmittal.learning.ProfilePicDialogActivity . class ) ; i . putExtra ( "imgUrlFrmAdapter" , mChatItems . get ( position ) . imgUrl ) ; android.view.View sharedView = holder.userImageView ; java.lang.String transitionName = "dialogTransition" ; android.app.ActivityOptions transitionActivityOptions = android.app.ActivityOptions . makeSceneTransitionAnimation ( activity , sharedView , transitionName ) ; activity . startActivity ( i , transitionActivityOptions . toBundle () ) ; android.util.Log . e ( "clicked" , "clicked" ) ; } 
public void addError ( org.jetbrains.mps.openapi.model.SNode errorNode , java.lang.String errorString , @ org.jetbrains.annotations.Nullable org.jetbrains.mps.openapi.model.SNodeReference ruleNode , jetbrains.mps.errors.messageTargets.MessageTarget messageTarget , jetbrains.mps.errors.QuickFixProvider intentionProvider ) { if ( ! ( jetbrains.mps.checkers.ErrorReportUtil . shouldReportError ( errorNode ) ) ) { return; } jetbrains.mps.errors.SimpleErrorReporter reporter = new jetbrains.mps.errors.SimpleErrorReporter ( errorNode , errorString , ruleNode , jetbrains.mps.errors.MessageStatus.ERROR , messageTarget ) ; if ( intentionProvider != null ) { reporter . setIntentionProvider ( intentionProvider ) ; } jetbrains.mps.checkers.LanguageErrorsComponent . addToMappedSet ( myNodesToErrors , errorNode , reporter ) ; } 
@ java.lang.Override public void apply ( java.util.List < com.kylinolap.metadata.realization.IRealization > realizations , com.kylinolap.query.relnode.OLAPContext olapContext ) { if ( olapContext.isWeekMatch . containsKey ( realizations . get ( 0 ) ) ) { com.kylinolap.cube.CubeInstance cube = ( ( com.kylinolap.cube.CubeInstance ) ( realizations . get ( 0 ) ) ) ; com.kylinolap.query.routing.RoutingRules.AdjustForWeeklyMatchCubeRule . adjustOLAPContext ( cube , olapContext ) ; } } 
@ java.lang.Override public void handle ( javafx.event.ActionEvent e ) { if ( player . getStatus () . equals ( javafx.scene.media.MediaPlayer.Status.PLAYING ) ) { player . pause () ; playPauseButton . setText ( "Play" ) ; pausedByButton = true ; } else if ( player . getStatus () . equals ( javafx.scene.media.MediaPlayer.Status.PAUSED ) ) { player . play () ; playPauseButton . setText ( "Pause" ) ; pausedByButton = false ; } } 
public itinerary.main.State editTask ( itinerary.main.Command command ) { itinerary.main.Task originalTask = listTask . remove ( ( ( command . getTask () . getLineNumber () ) - 1 ) ) ; listTask . add ( command . getTask () ) ; itinerary.main.JsonIOHandler . writeJSONList ( currFile , listTask ) ; return new itinerary.main.State ( command , new itinerary.main.Command ( originalTask , CommandType.EDIT ) , getAllTasks () , true ) ; } 
@ java.lang.Override public int ping ( java.lang.String name ) throws java.rmi.RemoteException { try { java.lang.String s = ( ( "ping from " + name ) + " " ) + ( java.rmi.server.RemoteServer . getClientHost () ) ; return 1 ; } catch ( java.rmi.server.ServerNotActiveException e ) { e . printStackTrace () ; } return 0 ; } 
private main.java.Position tilePosConverter ( main.java.Position tilePos ) { int tileX = tilePos . getX () ; int tileY = tilePos . getY () ; int middlePosX = ( ( tileX * ( main.java.Game.tileSize ) ) - 1 ) + ( ( main.java.Game.tileSize ) - ( 1 / 2 ) ) ; int middlePosY = ( ( tileY * ( main.java.Game.tileSize ) ) - 1 ) + ( ( main.java.Game.tileSize ) - ( 1 / 2 ) ) ; return new main.java.Position ( middlePosX , middlePosY ) ; } 
private void free () { definitions . clear () ; inputOperations . clear () ; locksMap . clear () ; initExecutionThread = null ; sessionStarters = new java.util.HashMap < java.lang.String , jolie.Interpreter.SessionStarter > () ; outputPorts . clear () ; correlationSets . clear () ; globalValue . erase () ; embeddedServiceLoaders . clear () ; classLoader = null ; commCore = null ; java.lang.System . gc () ; } 
@ java.lang.Override protected java.lang.Void doInBackground ( java.lang.String . . . v ) { org.stackdroid.comm.OSClient osc = org.stackdroid.comm.OSClient . getInstance ( U ) ; try { osc . createRouter ( v [ 0 ] ) ; } catch ( org.stackdroid.comm.ServerException se ) { android.util.Log . e ( "NEUTRONROUTER" , se . getMessage () ) ; errorMessage = org.stackdroid.parse.ParseUtils . parseNeutronError ( se . getMessage () ) ; hasError = true ; } catch ( java.lang.Exception e ) { errorMessage = e . getMessage () ; hasError = true ; } return null ; } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent ae ) { poseidon.entities.LevelContainer selected = view . getSelectedLevel () ; if ( selected == null ) { return; } selected . getLevel () . setIsAddedToPlayer ( true ) ; poseidon.entities.XMLHandler . saveXML ( selected . getLevel () , selected . getLevelFileName () ) ; view . setSelectedLevel ( null ) ; view . disableButtons () ; view . modelUpdated () ; } 
@ java.lang.Override public void onSharedPreferenceChanged ( android.content.SharedPreferences sharedPreferences , java.lang.String key ) { switch ( key ) { case "listthemas" : break; case "password" : break; case "listsync" : break; case "listalerttones" : break; default: android.util.Log . d ( TAG , ( "Neregistrovana promena za podesavanje => " + key ) ) ; break; } } 
public edu.oregonstate.cs361.battleship.Coords getComputerFireCoords () { java.util.Random randNum = new java.util.Random () ; if ( ( computerRemainingFirableCoords . size () ) != 0 ) { int shotArrayNum = randNum . nextInt ( computerRemainingFirableCoords . size () ) ; edu.oregonstate.cs361.battleship.Coords shot = computerRemainingFirableCoords . get ( shotArrayNum ) ; computerRemainingFirableCoords . remove ( shotArrayNum ) ; java.lang.System.out . println ( ( ( ( shot . getAcross () ) + ", " ) + ( shot . getDown () ) ) ) ; return shot ; } else { return null ; } } 
public static net.minecraft.util.ResourceLocation nameToLocation ( java.lang.String name ) { name = name . substring ( ( ( name . indexOf ( "/" ) ) + 1 ) ) ; java.lang.String domain = name . substring ( 0 , name . indexOf ( "/" ) ) ; java.lang.String path = name . substring ( ( ( name . indexOf ( "/" ) ) + 1 ) ) ; com.elytradev.concrete.common.ConcreteLog . debug ( "Converted {} to {}" , name , new net.minecraft.util.ResourceLocation ( domain , path ) ) ; return new net.minecraft.util.ResourceLocation ( domain , path ) ; } 
protected java.io.File getCorrespondingRoot ( java.io.File file ) { org.waarp.common.file.AbstractDir . initWindowsSupport () ; if ( org.waarp.common.file.AbstractDir.ISUNIX ) { return new java.io.File ( "/" ) ; } java.lang.String path = file . getAbsolutePath () ; for ( java.io.File root : org.waarp.common.file.AbstractDir.roots ) { if ( path . startsWith ( root . getAbsolutePath () ) ) { return root ; } } org.waarp.common.file.AbstractDir.logger . warn ( ( "No root found for " + ( file . getAbsolutePath () ) ) ) ; return org.waarp.common.file.AbstractDir.roots [ 0 ] ; } 
public static void main ( java.lang.String [] args ) { LRUCache l = new LRUCache ( 1 ) ; l . set ( 2 , 1 ) ; java.lang.System.out . println ( ( ( ( ( ( "l: " + l ) + ", capacity: " ) + ( l.capacity ) ) + ", filled: " ) + ( l.filled ) ) ) ; java.lang.System.out . println ( ( "l.get(2): " + ( l . get ( 2 ) ) ) ) ; } 
public java.lang.String skipCurrentLine () { java.lang.String skippedLine ; if ( quotedValueLines . isEmpty () ) { skippedLine = line ; } else { skippedLine = quotedValueLines . remove ( 0 ) ; unreadLines . addAll ( quotedValueLines ) ; unreadLines . add ( line ) ; lineNumber -= quotedValueLines . size () ; quotedValueLines . clear () ; } recordState = org.embulk.standards.CsvTokenizer.RecordState.END ; return skippedLine ; } 
void saveGame () { java.lang.System.out . println ( "Saving game..." ) ; previousGameState = new com.example.stuart.draughts.Game ( againstComputer , true ) ; previousGameState.currentBoard . copyBoard ( this . currentBoard ) ; previousGameState.legalMoves = new com.example.stuart.draughts.Board [ this . legalMoves . length ] ; for ( int i = 0 ; i < ( this . legalMoves . length ) ; i ++ ) { previousGameState.legalMoves [ i ] = new com.example.stuart.draughts.Board () ; previousGameState.legalMoves [ i ] . copyBoard ( this . legalMoves [ i ] ) ; } previousGameState.player1Turn = this . player1Turn ; } 
public void testDecrementExact () { for ( int a : com.google.gwt.emultest.java.lang.MathTest.ALL_INTEGER_CANDIDATES ) { java.math.BigInteger expectedResult = java.math.BigInteger . valueOf ( a ) . subtract ( java.math.BigInteger.ONE ) ; boolean expectedSuccess = com.google.gwt.emultest.java.lang.MathTest . fitsInInt ( expectedResult ) ; try { assertEquals ( ( a - 1 ) , java.lang.Math . decrementExact ( a ) ) ; assertTrue ( expectedSuccess ) ; } catch ( java.lang.ArithmeticException e ) { assertFalse ( expectedSuccess ) ; } } } 
@ org.junit.Test public void should_find_all_spies_registered_in_class () { final com.pchudzik.springmock.infrastructure.definition.registry.DoubleRegistry doubleRegistry = com.pchudzik.springmock.infrastructure.definition.registry.DoubleRegistryTestParser . parseClass ( com.pchudzik.springmock.infrastructure.definition.registry.DoubleRegistryParserTest.MultipleRegisteredSpies . class ) ; org.junit.Assert . assertEquals ( 2 , doubleRegistry . getSpies () . size () ) ; org.junit.Assert . assertThat ( doubleRegistry . getSpies () , org.hamcrest.Matchers . containsInAnyOrder ( org.hamcrest.Matchers . allOf ( doubleWithName ( com.pchudzik.springmock.infrastructure.definition.registry.DoubleRegistryParserTest.ANY_SERVICE1_NAME ) , doubleForClass ( com.pchudzik.springmock.infrastructure.definition.registry.DoubleRegistryParserTest.AnyService1 . class ) ) , org.hamcrest.Matchers . allOf ( doubleWithName ( com.pchudzik.springmock.infrastructure.definition.registry.DoubleRegistryParserTest.ANY_SERVICE2_NAME ) , doubleForClass ( com.pchudzik.springmock.infrastructure.definition.registry.DoubleRegistryParserTest.AnyService2 . class ) ) ) ) ; } 
public void onPositiveButton ( final java.lang.String tag ) { if ( org.deviceconnect.android.manager.setting.SettingsFragment.TAG_ORIGIN . equals ( tag ) ) { mCheckBoxOauthPreferences . setChecked ( false ) ; mCheckBoxOriginBlockingPreferences . setChecked ( false ) ; } else if ( org.deviceconnect.android.manager.setting.SettingsFragment.TAG_WEB_SERVER . equals ( tag ) ) { mWebService . startWebServer () ; setWebUIEnabled ( false ) ; } else if ( org.deviceconnect.android.manager.setting.SettingsFragment.TAG_REQUIRE_ORIGIN . equals ( tag ) ) { mCheckBoxRequireOriginPreferences . setChecked ( true ) ; } else if ( org.deviceconnect.android.manager.setting.SettingsFragment.TAG_AVAILABILITY . equals ( tag ) ) { mCheckBoxManagerNameVisiblePreferences . setChecked ( true ) ; } } 
public static void main ( java.lang.String [] args ) { int n = 1 ; while ( n <= 1000 ) { if ( ( ( n % 3 ) == 0 ) || ( ( n % 5 ) == 0 ) ) java.lang.System.out . printf ( ( "%d" + ( n == 1000 ? "" : " , " ) ) , n ) ; n ++ ; } } 
@ org.junit.Test public void testGetSignUpPage ( ) throws java.lang.Exception { mockMvc . perform ( org.springframework.test.web.servlet.request.MockMvcRequestBuilders . get ( "/signup2" ) ) . andExpect ( status () . isOk () ) . andExpect ( view () . name ( "signup2" ) ) . andExpect ( model () . attributeExists ( "loginForm" ) ) . andExpect ( model () . attributeExists ( "signUpMergedForm" ) ) ; } 
private int findHourPosition ( int hour ) { int i = 0 ; for ( amai.org.conventions.events.ProgrammeConventionEvent event : events ) { if ( ( amai.org.conventions.events.activities.ProgrammeActivity . floorHour ( event . getEvent () . getStartTime () ) ) == hour ) { return i ; } i ++ ; } return - 1 ; } 
public void addCard ( dev.Same4254.ThisGame.Entities.Card c ) { slot . addCard ( c ) ; if ( ( ( c . getSymbol () ) == ( Card.CardSymbols.KEY ) ) && ( ! ( Prophecy.prophosizing ) ) ) { gameState . getProphecy () . clearAllProphecy () ; gameState . getProphecy () . restockProphecy () ; Prophecy.prophosizing = true ; java.lang.System.out . println ( "Start Pro" ) ; } } 
public void printSuggestedWords ( java.util.HashMap < java.lang.String , java.lang.String > words ) { for ( java.util.Map.Entry < java.lang.String , java.lang.String > entry : words . entrySet () ) { java.lang.String score = entry . getValue () . substring ( 0 , entry . getValue () . indexOf ( " " ) ) ; java.lang.String words = entry . getValue () . substring ( entry . getValue () . indexOf ( " " ) ) . replace ( " " , ScrabbleTeam3.ScrabbleWordSuggester.WORDS_SEPERATOR ) ; java.lang.System.out . println ( ( ( score + " - " ) + words ) ) ; } } 
private void initDisplay () { _displayController = _mainController . getDisplayController () ; urgenda.util.StateFeedback state = retrieveStartupState () ; _displayController . setStartupDisplay ( state . getAllTasks () , createDisplayHeader ( state ) , state . getDetailedIndexes () , state . getDisplayPosition () , true ) ; _displayController . setMain ( this ) ; } 
private boolean isAppModule ( java.lang.String basePath , java.lang.String moduleName ) { java.io.File gradleBuildFile = new java.io.File ( getModuleBuildFilePath ( basePath , moduleName ) ) ; java.lang.String [] fileLines = com.testfairy.plugin.intellij.Util . readFileLines ( gradleBuildFile ) ; java.lang.String line ; int i = 0 ; while ( i < ( fileLines.length ) ) { line = fileLines [ i ] ; if ( ( line . contains ( "plugin" ) ) && ( line . contains ( "android" ) ) ) { return true ; } } return false ; } 
public void login ( ) throws java.io.IOException , java.net.URISyntaxException { java.lang.System.out . println ( "欢迎使用山东大学抢课助手" ) ; while ( true ) { getUserInfo () ; if ( sendLoginRequest ( usernanme , password ) ) break; if ( ! ( ing.gzq.Utils . checkIfContinue () ) ) break; } } 
@ org.junit.Test public void testCalculateScore5 () { org.cloudish.score.LeastRequestedRankingScore score = new org.cloudish.score.LeastRequestedRankingScore () ; org.cloudish.borg.model.Host h = new org.cloudish.borg.model.Host ( 0 , 0.5 , 0.5 , new java.util.HashMap <> () ) ; h . allocate ( new org.cloudish.borg.model.Task ( 0 , 10 , 0.1 , 0.5 , 11 , true , new java.util.ArrayList <> () ) ) ; org.junit.Assert . assertEquals ( 4 , score . calculateScore ( null , h ) , org.cloudish.score.TestLeastRequestedRankingScore.ACCEPTABLE_DIFF ) ; } 
private org.osc.sdk.manager.element.ApplianceBootstrapInformationElement generateBootstrapInfo ( final org.osc.core.broker.model.entities.appliance.VirtualSystem vs , final java.lang.String applianceName ) throws java.lang.Exception { org.osc.sdk.manager.api.ManagerDeviceApi deviceApi = this . apiFactoryService . createManagerDeviceApi ( vs ) ; java.util.Map < java.lang.String , java.lang.String > bootstrapProperties = vs . getApplianceSoftwareVersion () . getConfigProperties () ; return deviceApi . getBootstrapinfo ( new org.osc.core.broker.service.tasks.conformance.openstack.deploymentspec.OsSvaServerCreateTask.ApplianceBootStrap ( applianceName , com.google.common.collect.ImmutableMap . copyOf ( bootstrapProperties ) ) ) ; } 
public static java.util.List < Project466.IncomePerson > findKNN ( Project466.IncomePerson key , int k , int kNNRatio ) { java.util.ArrayList < Project466.IncomePerson > ipsWithDist = new java.util.ArrayList <> () ; for ( Project466.IncomePerson ip : Project466.Project.data ) { ip . getDistance ( key ) ; ipsWithDist . add ( ip ) ; } java.util.Collections . sort ( ipsWithDist ) ; return ipsWithDist . subList ( 0 , ( kNNRatio * ( ipsWithDist . size () ) ) ) ; } 
@ java.lang.Override public void updateGasMode () { final int gasMode = mThingySdkManager . getGasMode ( mDevice ) ; if ( gasMode == 1 ) { mGasModeSummary . setText ( R.string.gas_mode_one ) ; } else if ( gasMode == 2 ) { mGasModeSummary . setText ( R.string.gas_mode_two ) ; } else if ( gasMode == 3 ) { mGasModeSummary . setText ( R.string.gas_mode_three ) ; } } 
public void factoryClosed ( final org.apache.activemq.artemis.api.core.client.ClientSessionFactory factory ) { synchronized ( factories ) { factories . remove ( factory ) ; if ( ( ! ( clusterConnection ) ) && ( factories . isEmpty () ) ) { synchronized ( topologyArrayGuard ) { receivedTopology = false ; topologyArray = null ; } } } } 
@ net.canarymod.commandsys.TabComplete ( commands = { "reservelist" } ) public java.util.List < java.lang.String > reservelistTabComplete ( net.canarymod.chat.MessageReceiver caller , java.lang.String [] parameters ) { return ( parameters.length ) == 1 ? net.canarymod.commandsys.TabCompleteHelper . matchTo ( parameters , new java.lang.String [] { "add" , "remove" } ) : ( parameters.length ) == 2 ? parameters [ 0 ] . equals ( "remove" ) ? net.canarymod.commandsys.TabCompleteHelper . matchTo ( parameters , net.canarymod.Canary . reservelist () . getReservations () ) : parameters [ 0 ] . equals ( "add" ) ? net.canarymod.commandsys.TabCompleteHelper . matchToKnownPlayer ( parameters ) : null : null ; } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { java.util.List < ? > data = availableTable . getSelectedData () ; if ( data != null ) { for ( java.lang.Object object : data ) { if ( object instanceof pcgen.facade.core.EquipmentFacade ) { pcgen.facade.core.EquipmentFacade equip = ( ( pcgen.facade.core.EquipmentFacade ) ( object ) ) ; if ( character . isAutoResize () ) { equip = character . getEquipmentSizedForCharacter ( equip ) ; } character . addPurchasedEquipment ( equip , 1 , true ) ; } } } } 
public static void asJson ( java.lang.Object [] objects , java.io.File output , boolean pretty ) throws cworks.json.JsonException { cworks.json.Json . throwIfNull ( objects ) ; cworks.json.Json . throwIfNull ( output ) ; if ( pretty ) { cworks.json.Json . prettyIO () . asJson ( objects , output ) ; } cworks.json.Json . io () . asJson ( objects , output ) ; } 
public void parseRequest ( java.util.function.Function < request.Interface , request.manager.InterfaceManager > converter , java.lang.String receivedMessage ) throws java.io.IOException , request.IllegalRequestException { net.ProtocolManager.LOGGER . info ( ( ( ( ProtocolMessages.S_REQUEST_CAPTURED ) + " " ) + receivedMessage ) ) ; request.Request req = request.RequestParser . parse ( converter , receivedMessage ) ; performRequest ( req ) ; net.ProtocolManager.LOGGER . info ( ProtocolMessages.S_REQUEST_OK . toString () ) ; } 
public int getFullMessageLength () { java.util.List < java.nio.ByteBuffer > fullMessageBody = getFullMessageBody () ; int size = ( ( int ) ( fullMessageBody . stream () . mapToInt ( ( byteBuffer ) - > byteBuffer . limit () ) . count () ) ) ; fullMessageBody . forEach ( ( byteBuffer ) - > addMessageBody ( byteBuffer ) ) ; return size ; } 
public boolean awaitTermination ( long timeout , java.util.concurrent.TimeUnit unit ) throws java.lang.IllegalStateException , java.lang.InterruptedException { if ( org.pnpo.db.pool.DatabaseConnectionPool.Status.TERMINATED . equals ( status ) ) { return true ; } if ( ! ( org.pnpo.db.pool.DatabaseConnectionPool.Status.SHUTDOWN . equals ( status ) ) ) { throw new java.lang.IllegalStateException () ; } connectionLock . lock () ; try { return terminatedCondition . await ( timeout , unit ) ; } finally { connectionLock . unlock () ; } } 
protected int addInterface ( java.lang.String name ) throws org.alljoyn.bus.AnnotationBusException { for ( java.lang.Class < ? > intf : proxy . getClass () . getInterfaces () ) { if ( name . equals ( org.alljoyn.bus.InterfaceDescription . getName ( intf ) ) ) { org.alljoyn.bus.InterfaceDescription desc = new org.alljoyn.bus.InterfaceDescription () ; org.alljoyn.bus.Status status = desc . create ( bus , intf ) ; return status . getErrorCode () ; } } return Status.BUS_NO_SUCH_INTERFACE . getErrorCode () ; } 
public java.util.List < jumpingalien.model.Characters > getAllObjects () { java.util.LinkedList < jumpingalien.model.Characters > result = new java.util.LinkedList < jumpingalien.model.Characters > () ; for ( int index = getNbObjects () ; index <= 1 ; index -- ) result . addFirst ( getObjectAt ( index ) ) ; return result ; } 
@ java.lang.Override public void run () { running = true ; while ( running ) { try { netzwerk.messages.Message message = ( ( netzwerk.messages.Message ) ( in . readObject () ) ) ; if ( ( listener ) != null ) listener . messageReceived ( message ) ; } catch ( java.io.IOException | java.lang.ClassNotFoundException ex ) { java.lang.System.out . println ( "SmartInputStream : closed input stream" ) ; if ( ( ( closeListener ) != null ) && ( running ) ) closeListener . run () ; running = false ; } } } 
private void setTaskDetails ( java.lang.String [] param , int num , com.tasma.Task parsedTask ) { java.lang.String str = "" ; for ( int i = 0 ; i < num ; i ++ ) { str += ( param [ i ] ) + " " ; } parsedTask . setDetails ( str . trim () ) ; } 
public java.lang.String createNext () { while ( previousAnswers . contains ( exerciseResult ) ) { this . create () ; } if ( ( previousAnswers . size () ) >= ( getFahkinBitchExerciseResetValue () ) ) { previousAnswers . clear () ; } return exerciseString ; } 
java.lang.String convertPathToUNC ( java.lang.String indexDir ) { if ( ( uncPathUtilities ) == null ) { return indexDir ; } java.lang.String result = uncPathUtilities . mappedDriveToUNC ( indexDir ) ; if ( result == null ) { uncPathUtilities . rescanDrives () ; result = uncPathUtilities . mappedDriveToUNC ( indexDir ) ; } if ( result == null ) { return indexDir ; } return result ; } 
public com.greenfox.poker.model.ResponseType responseToSuccessfulLogin ( com.greenfox.poker.model.LoginRequest loginRequest ) { com.greenfox.poker.model.PokerUser pokerUserFromDatabase = pokerUserRepo . findByUsername ( loginRequest . getUsername () ) ; java.lang.String passwordOfUsernameFromDatabase = pokerUserFromDatabase . getPassword () ; if ( loginRequest . getPassword () . equals ( passwordOfUsernameFromDatabase ) ) { java.lang.String token = tokenService . generateToken ( pokerUserFromDatabase ) ; return new com.greenfox.poker.model.UserTokenResponse ( "success" , token , pokerUserFromDatabase . getId () ) ; } return loginWithIvalidUsernameOrPassword () ; } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { android.view.View v = inflater . inflate ( R.layout.fragment_user_detailworks , container , false ) ; android.util.Log . d ( "test" , "test" ) ; setUpView ( v ) ; pool . execute ( fetchData ( true ) ) ; return v ; } 
public void cleanup () { nc . removeInstance ( gameID ) ; if ( ( dd ) != null ) dd . cleanup () ; try { if ( ( dbConn ) != null ) dbConn . close () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } 
@ java.lang.Override public java.awt.Point play () { hasPlayed = false ; caseJouee = null ; while ( ( ! ( hasPlayed ) ) && ( ( caseJouee ) == null ) ) { try { java.lang.System.out . println ( ( ( name ) + " attend" ) ) ; java.lang.Thread . sleep ( 500 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } return caseJouee ; } 
public java.lang.String caughtPokemonMenu () { java.lang.String caught = "" ; for ( int i = 0 ; i < ( pokedex . size () ) ; i ++ ) { PokemonSpecies species = pokedex . get ( i ) ; if ( ! ( species . isEmpty () ) ) { caught += "\n" + ( species . getSpeciesName () ) ; } } return caught ; } 
private java.io.File handleStringMessage ( java.lang.String content , java.io.File originalFile , java.io.File tempFile , java.io.File resultFile ) throws java.io.IOException { java.io.OutputStreamWriter writer = new java.io.OutputStreamWriter ( new java.io.FileOutputStream ( tempFile ) , this . charset ) ; org.springframework.util.FileCopyUtils . copy ( content , writer ) ; tempFile . renameTo ( resultFile ) ; if ( ( this . deleteSourceFiles ) && ( originalFile != null ) ) { originalFile . delete () ; } return resultFile ; } 
private void closeWithError ( java.lang.Exception e , boolean sendToConsumer ) { if ( status . isClosed () ) return; setStatus ( io.datakernel.stream.CLOSED_WITH_ERROR ) ; error = e ; downstreamDataReceiver = new io.datakernel.stream.AbstractStreamProducer.DataReceiverAfterClose <> () ; io.datakernel.stream.AbstractStreamProducer.logger . trace ( "StreamProducer {} closed with error {}" , this , error . toString () ) ; if ( sendToConsumer && ( ( downstreamConsumer ) != null ) ) { downstreamConsumer . onProducerError ( e ) ; } onError ( e ) ; doCleanup () ; } 
private void clearCanvases () { for ( javafx.scene.Node n : this . getChildren () ) { if ( n instanceof javafx.scene.canvas.Canvas ) { ( ( javafx.scene.canvas.Canvas ) ( n ) ) . getGraphicsContext2D () . clearRect ( 0 , 0 , this . getWidth () , this . getHeight () ) ; } } } 
private FeedbackMessage executeSearch ( java.lang.String keyword ) throws java.io.IOException { myTaskList = getCurrentList () ; java.util.ArrayList < Tasks > searchList = storage . SearchTask ( keyword ) ; if ( ( searchList . size () ) != 0 ) { java.lang.String taskListContent = getTaskListContent ( searchList ) ; return new FeedbackMessage ( java.lang.String . format ( Logic.MESSAGE_SEARCH , "successfully" ) , taskListContent ) ; } else { java.lang.String taskListContent = getTaskListContent ( myTaskList ) ; return new FeedbackMessage ( java.lang.String . format ( Logic.MESSAGE_SEARCH , "failed" ) , taskListContent ) ; } } 
@ java.lang.Override public void widgetSelected ( org.eclipse.swt.events.SelectionEvent arg0 ) { solveAlgoName = solvers . getText () ; solveFlag = true ; if ( ( ( ( ( ( genFlag ) && ( solveFlag ) ) && ( xFlag ) ) && ( yFlag ) ) && ( zFlag ) ) && ( textFlag ) ) startGameButton . setEnabled ( true ) ; } 
@ java.lang.Override public boolean touchDown ( int screenX , int screenY , int pointer , int button ) { if ( button == ( Input.Buttons.RIGHT ) ) { world . touchDown ( screenX , screenY ) ; drawSelection = false ; } else if ( button == ( Input.Buttons.LEFT ) ) { world . clearPopUps () ; drawSelection = true ; } touchX = screenX ; touchY = ( Gdx.graphics . getHeight () ) - screenY ; lastX = touchX ; lastY = touchY ; return false ; } 
private org.springframework.core.io.Resource getOverrideConfigResource () { org.springframework.core.io.ClassPathResource override = new org.springframework.core.io.ClassPathResource ( "config.override.properties" ) ; try { override . getFile () ; return override ; } catch ( java.io.FileNotFoundException e ) { return new org.springframework.core.io.FileSystemResource ( "conf/config.override.properties" ) ; } catch ( java.io.IOException e ) { de.ingrid.admin.Config.log . error ( "Error when getting config.override.properties" ) ; e . printStackTrace () ; } return null ; } 
public java.lang.String getParameter ( java.lang.String key ) { java.util.List < java.lang.String > values = this . query_pairs . get ( key ) ; if ( ( values == null ) || ( ( values . size () ) < 1 ) ) { return null ; } return values . get ( 0 ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/artist" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.util.Map < java.lang.String , java.lang.Object > searchArtist ( @ org.springframework.web.bind.annotation.RequestParam ( value = "key" ) java.lang.String key , @ org.springframework.web.bind.annotation.RequestParam ( value = "currPage" ) int currPage , @ org.springframework.web.bind.annotation.RequestParam ( value = "perPage" ) int perPage , @ org.springframework.web.bind.annotation.RequestParam org.springframework.util.MultiValueMap < java.lang.String , java.lang.String > allRequestParams ) throws java.io.IOException { java.lang.System.out . println ( allRequestParams ) ; if ( ( key == null ) || ( key == "" ) ) { key = "*:*" ; } return com.paypal.musictag.util.MusicTagUtil . wrapResult ( searchServiceImpl . searchArtist ( key , currPage , perPage , allRequestParams ) ) ; } 
private agency.tango.skald.core.Player getForProvider ( agency.tango.skald.core.Provider provider ) throws agency.tango.skald.core.AuthException { if ( playerMap . containsKey ( provider . getProviderName () ) ) { return playerMap . get ( provider . getProviderName () ) ; } else { agency.tango.skald.core.Player player = provider . getPlayerFactory () . getPlayer () ; playerMap . put ( provider . getProviderName () , player ) ; addPlayerReadyListener ( player ) ; return player ; } } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( ( bbms.GlobalFuncs.selectedUnit ) != null ) { if ( ( GlobalFuncs.selectedUnit.target ) != null ) { if ( bbms.GlobalFuncs.RotateHull ) GlobalFuncs.selectedUnit . OrientHullTo ( GlobalFuncs.selectedUnit.target.location.x , GlobalFuncs.selectedUnit.target.location.y ) ; else GlobalFuncs.selectedUnit . OrientTurretTo ( GlobalFuncs.selectedUnit.target.location.x , GlobalFuncs.selectedUnit.target.location.y ) ; GlobalFuncs.gui . repaint () ; gui.GUI_NB . GCO ( "Orienting on target" ) ; } } } 
@ java.lang.Override public ch.uzh.ifi.feedback.orchestrator.model.Application GetById ( int id ) throws java.sql.SQLException , javassist.NotFoundException { ch.uzh.ifi.feedback.orchestrator.model.Application app = super . GetById ( id ) ; app . getConfigurations () . addAll ( configurationService . GetWhereEquals ( java.util.Arrays . asList ( "application_id" ) , java.util.Arrays . asList ( id ) ) ) ; app . setGeneralConfiguration ( generalConfigurationService . GetById ( app . getGeneralConfigurationId () ) ) ; return app ; } 
@ org.motechproject.event.listener.annotations.MotechListener ( subjects = { EventSubjects.CREATE_ENTITY } ) public void handleRegistration ( org.motechproject.event.MotechEvent event ) { java.util.Map < java.lang.String , java.lang.Object > params = event . getParameters () ; java.lang.String externalUUID = ( ( java.lang.String ) ( params . remove ( EventParams.EXTERNAL_ID ) ) ) ; org.motechproject.dhis2.rest.domain.TrackedEntityInstanceDto trackedEntityInstance = createTrackedEntityInstanceFromParams ( params ) ; org.motechproject.dhis2.rest.domain.DhisStatusResponse response = dhisWebService . createTrackedEntityInstance ( trackedEntityInstance ) ; if ( ( response . getStatus () ) == "SUCCESS" ) { trackedEntityInstanceMapperService . create ( externalUUID , response . getReference () ) ; } } 
protected void assertAccessException ( final org.projectforge.framework.access.AccessException ex , final java.lang.Integer taskId , final org.projectforge.framework.access.AccessType accessType , final org.projectforge.framework.access.OperationType operationType ) { org.testng.AssertJUnit . assertEquals ( accessType , ex . getAccessType () ) ; org.testng.AssertJUnit . assertEquals ( operationType , ex . getOperationType () ) ; org.testng.AssertJUnit . assertEquals ( taskId , ex . getTaskId () ) ; } 
private static boolean isArray ( com.google.firebase.database.MutableData mutableData ) { long expectedKey = 0 ; for ( com.google.firebase.database.MutableData child : mutableData . getChildren () ) { try { long key = java.lang.Long . parseLong ( child . getKey () ) ; if ( key == expectedKey ) { expectedKey ++ ; } else { return false ; } } catch ( java.lang.NumberFormatException ex ) { return false ; } } return true ; } 
private static int readCount ( org.avidj.zuul.core.LockTreeNode node ) { int count = node . getSharedLocks () . size () ; for ( org.avidj.zuul.core.LockTreeNode child : node.children . values () ) { count += org.avidj.zuul.core.DefaultLockManager . readCount ( child ) ; } assert count == ( node.reads ) : java.lang.String . format ( "node = %1$s, reads = %2$d, actual = %3$d" , org.avidj.util.Strings . join ( org.avidj.zuul.core.DefaultLockManager . pathTo ( node ) ) , node.reads , count ) ; return count ; } 
public me.ramswaroop.jbot.core.slack.models.RichMessage getTerm ( java.lang.String title ) { me.ramswaroop.jbot.core.slack.models.RichMessage message = new me.ramswaroop.jbot.core.slack.models.RichMessage () ; me.ramswaroop.jbot.core.slack.models.Attachment attachment = new me.ramswaroop.jbot.core.slack.models.Attachment () ; glossarybot.model.Term term = repository . getTerm ( title ) ; if ( term == null ) { message . setText ( ( ( "Definition of " + title ) + " was not found" ) ) ; } else { message . setText ( term . getTitle () ) ; attachment . setText ( term . getDescription () ) ; message . setAttachments ( new me.ramswaroop.jbot.core.slack.models.Attachment [] { attachment } ) ; } return message ; } 
@ java.lang.Override public void onConnected ( @ android.support.annotation.Nullable android.os.Bundle bundle ) { java.lang.String message = "Sign in Successful" ; android.widget.Toast . makeText ( getApplicationContext () , message , Toast.LENGTH_SHORT ) . show () ; updateSessionsRecycler () ; if ( appState . hasCurrentGym () ) { startSessionButton . setEnabled ( true ) ; changeAccountsItem . setTitle ( R.string.change_accounts ) ; } } 
public static void registerBlock ( net.minecraft.block.Block block , java.lang.String id , java.lang.Class < ? extends net.minecraft.item.ItemBlock > item , java.lang.Object . . . par ) { cd4017be.lib.BlockItemRegistry.blocks . put ( id , block ) ; net.minecraftforge.fml.common.registry.GameRegistry . registerBlock ( block , item , id , par ) ; if ( item . equals ( net.minecraft.item.ItemBlock . class ) ) cd4017be.lib.BlockItemRegistry . registerItemStack ( new net.minecraft.item.ItemStack ( block ) , block . getUnlocalizedName () ) ; } 
protected void preApplicationProcessing ( org.wso2.andes.client.message.AbstractJMSMessage jmsMsg ) throws javax.jms.JMSException { if ( ( ( _session . getAcknowledgeMode () ) == ( org.wso2.andes.jms.Session.PER_MESSAGE_ACKNOWLEDGE ) ) || ( ( _session . getAcknowledgeMode () ) == ( org.wso2.andes.jms.Session.CLIENT_ACKNOWLEDGE ) ) ) { _session . addUnacknowledgedMessage ( jmsMsg . getDeliveryTag () ) ; } _session . setInRecovery ( false ) ; preDeliver ( jmsMsg ) ; } 
private int executeCommand ( java.lang.String command ) { try { java.lang.Process p = java.lang.Runtime . getRuntime () . exec ( ( "cmd /c " + command ) ) ; p . waitFor () ; return p . exitValue () ; } catch ( java.io.IOException e ) { java.lang.System.err . println ( ( ( ( ( "Command not found! (#" + ( this . ID ) ) + " - " ) + command ) + ")" ) ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } return - 1 ; } 
private static boolean checkInheritance ( final consulo.dotnet.psi.search.searches.DirectTypeInheritorsSearch.SearchParameters p , final java.lang.String vmQName , final consulo.dotnet.psi.DotNetTypeDeclaration candidate ) { return com.intellij.openapi.application.ApplicationManager . getApplication () . runReadAction ( new com.intellij.openapi.util.Computable < java.lang.Boolean > () { @ java.lang.Override public java.lang.Boolean compute () { return ( ! ( p . isCheckInheritance () ) ) || ( candidate . isInheritor ( vmQName , false ) ) ; } } ) ; } 
@ java.lang.Override public void run () { java.lang.System.out . println ( "Processor entered run method" ) ; while ( ( ! ( pool . isQueueEmpty ( id ) ) ) && ( ! ( java.lang.Thread . currentThread () . isInterrupted () ) ) ) { pool . fetchTask ( id ) . start () ; } steal () ; } 
@ java.lang.Override public void onClick ( android.view.View arg0 ) { if ( ( ( ( articleAdType ) == ( com.novel.reader.util.Setting.InterstitialAd ) ) && ( ( com.novel.reader.util.Setting . getSettingInt ( Setting.keyYearSubscription , this ) ) == 0 ) ) && ( ! ( adHasShowed ) ) ) { requestInterstitialAd () ; adHasShowed = false ; } previousPage () ; } 
private int findUserFromName ( java.lang.String chatId , java.lang.String name ) { int index = 9999 ; for ( int i = 0 ; i < ( users . get ( java.lang.Integer . parseInt ( chatId ) ) . size () ) ; i ++ ) { if ( users . get ( java.lang.Integer . parseInt ( chatId ) ) . get ( i ) . getName () . equals ( name ) ) index = i ; } return index ; } 
@ java.lang.Override protected void onDestroy () { android.util.Log . e ( com.givenhansco.keystonenavigation.Activities.KODUserFunctions.LoginActivity.TAG , "onDestroy called." ) ; super . onDestroy () ; if ( ( voiceService ) != null ) { voiceService . setListener ( null ) ; voiceService = null ; } if ( ( mConnection ) != null ) { unbindService ( mConnection ) ; mConnection = null ; } } 
public static char encodedCycleOfProcessingData ( char character , int firstSymbolInASCII , int alphabetSize , int key ) { java.lang.StringBuilder stringBuilder = new java.lang.StringBuilder () ; int asciiCodeOfCharacter = ( ( character - firstSymbolInASCII ) - key ) % alphabetSize ; int myCodeOfCharacter = asciiCodeOfCharacter + firstSymbolInASCII ; if ( asciiCodeOfCharacter >= 0 ) { stringBuilder . appendCodePoint ( myCodeOfCharacter ) ; } else { stringBuilder . appendCodePoint ( ( myCodeOfCharacter + alphabetSize ) ) ; } return stringBuilder . charAt ( 0 ) ; } 
public void setBlockSkyLightAt ( int x , int y , int z , int level ) { this . getChunk ( ( x > > 4 ) , ( z > > 4 ) , true ) . setBlockSkyLight ( ( x & 15 ) , ( y & 255 ) , ( z & 15 ) , ( level & 15 ) ) ; } 
@ java.lang.Override public boolean next ( ) throws net.sf.jasperreports.engine.JRException { fieldCache . clear () ; itemCache . clear () ; ( index ) ++ ; boolean hasRecord = ( ( index ) + 1 ) < ( block . getBlockRecordCount () ) ; if ( hasRecord ) { block . navigateToNextRecord () ; } if ( ! hasRecord ) { index = - 1 ; } return hasRecord ; } 
private void buildRollUpShapes ( ) throws io.konig.spreadsheet.SpreadsheetException { io.konig.shacl.io.ShapeLoader loader = new io.konig.shacl.io.ShapeLoader ( null , shapeManager ) ; loader . load ( this . graph ) ; java.util.Set < java.lang.String > memory = new java.util.HashSet <> () ; java.util.List < io.konig.shacl.Shape > shapeList = shapeManager . listShapes () ; for ( io.konig.shacl.Shape shape : shapeList ) { org.openrdf.model.URI rollUpBy = shape . getRollUpBy () ; if ( rollUpBy != null ) { buildRollUpShape ( shape , memory ) ; } } } 
@ java.lang.Override public void onFinished ( com.google.android.gms.maps.model.LatLng result ) { if ( result != null ) { com.google.android.gms.maps.model.Marker city = map . addMarker ( new com.google.android.gms.maps.model.MarkerOptions () . position ( result ) . title ( name ) ) ; android.util.Log . e ( "dsadsadsa" , result . toString () ) ; map . moveCamera ( com.google.android.gms.maps.CameraUpdateFactory . newLatLngZoom ( result , 2 ) ) ; map . animateCamera ( com.google.android.gms.maps.CameraUpdateFactory . zoomTo ( 15 ) , 2000 , null ) ; } else { android.util.Log . e ( "NIE MA CHUJA" , "DSADSA" ) ; } } 
public boolean isMatch ( java.lang.String value , com.alibaba.dubbo.common.URL param ) { for ( java.lang.String match : matches ) { if ( ! ( com.alibaba.dubbo.common.utils.UrlUtils . isMatchGlobPattern ( match , value , param ) ) ) { return false ; } } for ( java.lang.String mismatch : mismatches ) { if ( com.alibaba.dubbo.common.utils.UrlUtils . isMatchGlobPattern ( mismatch , value , param ) ) { return false ; } } return true ; } 
private static void postProcessField ( net.abstractfactory.plum.interaction.rich.field.RichField field , java.lang.Object bean , java.lang.annotation.Annotation [] annotations ) { field . setBean ( bean ) ; java.lang.String defaultDisplayName = field . getName () ; field . setDisplayName ( defaultDisplayName ) ; field . setValueAccessor ( new net.abstractfactory.plum.interaction.rich.field.BeanFieldValueAccessor ( bean , field . getName () ) ) ; net.abstractfactory.plum.interaction.RichFieldAnnotationProcessorFactory . getInstance () . processAnnotations ( field , annotations ) ; } 
@ tss2.wiki.control.RequestMapping ( value = "" , method = RequestMethod.POST , produces = "application/json;charset=UTF-8" ) @ tss2.wiki.control.ResponseBody public tss2.wiki.control.CommonResult addEntry ( javax.servlet.http.HttpServletRequest request , @ tss2.wiki.control.RequestBody java.util.Map map ) { tss2.wiki.control.WikiSession session = sessionService . checkUser ( request ) ; if ( ! ( session . isValid () ) ) return new tss2.wiki.control.CommonResult ( 1 , "Authentication Failed" ) ; tss2.wiki.control.WikiUser user = session . getUser () ; if ( ( user . getType () ) < ( WikiUser.USER_ADMIN ) ) return new tss2.wiki.control.CommonResult ( 1 , "Poor Privilege" ) ; return contentService . process ( new tss2.wiki.vo.WikiEntryVO ( session , map ) ) ; } 
protected void onPostExecute ( java.lang.String result ) { if ( ( com.webwemser.letsmeetapp.MainActivity.meets . getMeets () . size () ) > 0 ) { showMeets ( com.webwemser.letsmeetapp.MainActivity.meets . getMeets () ) ; } else { android.widget.Toast . makeText ( this , getString ( R.string.no_meets ) , Toast.LENGTH_SHORT ) . show () ; } swipeContainer . setRefreshing ( false ) ; } 
private void drawButton ( int x , int y , java.lang.String text , java.awt.Font font , java.awt.Graphics g ) { g . setFont ( font ) ; g . setColor ( java.awt.Color.GREEN ) ; g . drawString ( text , ( x + 130 ) , ( y + 38 ) ) ; g . setColor ( java.awt.Color.RED ) ; g . drawRect ( x , y , 300 , 64 ) ; } 
public void notify ( java.util.List < model.Player > addedPlayers ) { scheduler = schedulerManager . getScheduler () ; java.util.List < model.Player > allPlayers = getAllPlayers ( addedPlayers ) ; java.util.Date calculatedRunTime = nextRunTimeCalculator . calculateNextRuntime ( allPlayers , nextRunTime ) ; if ( ! ( calculatedRunTime . equals ( nextRunTime ) ) ) { nextRunTime = calculatedRunTime ; scheduleNextRun () ; } playerRepository . save ( allPlayers ) ; } 
private void handleIntent ( android.content.Intent intent ) { if ( Intent.ACTION_SEARCH . equals ( intent . getAction () ) ) { java.lang.String query = intent . getStringExtra ( SearchManager.QUERY ) ; wikiViewer . passSearch ( query ) ; hideSearchView () ; } else if ( Intent.ACTION_VIEW . equals ( intent . getAction () ) ) { final java.lang.String url = intent . getDataString () ; wikiViewer.wikiClient . shouldOverrideUrlLoading ( wikiViewer , url ) ; } } 
@ java.lang.Override public com.shatteredpixel.shatteredpixeldungeon.items.Item random () { float roll = com.watabou.utils.Random . Float () ; if ( roll < 0.3F ) { inscribe ( com.shatteredpixel.shatteredpixeldungeon.items.armor.Armor.Glyph . randomCurse () ) ; cursed = true ; return this ; } else if ( roll < 0.75F ) {} else if ( roll < 0.95F ) { upgrade ( 0 ) ; } else { upgrade ( 2 ) ; } if ( ( com.watabou.utils.Random . Int ( 6 ) ) == 0 ) inscribe () ; return this ; } 
public void setBitfield ( java.lang.Integer peerid , java.util.BitSet peerBitField ) { lock . writeLock () . lock () ; this . peerBitFields . put ( peerid , peerBitField ) ; FileHandle.logger . debug ( "Storing the bitfield {} of peer {} (self={})" , this . printableBitSet ( peerBitField ) , peerid , this . myid ) ; this . bwScores . put ( peerid , 0.0 ) ; lock . writeLock () . unlock () ; } 
@ java.lang.Override public boolean onTouch ( android.view.View view , android.view.MotionEvent event ) { if ( ( event . getAction () ) == ( android.view.MotionEvent.ACTION_DOWN ) ) { respeaker . pauseOriginal () ; respeaker . recordRespeaking () ; } if ( ( event . getAction () ) == ( android.view.MotionEvent.ACTION_UP ) ) { try { respeaker . pauseRespeaking () ; isCommented = true ; } catch ( org.lp20.aikuma.audio.record.Microphone.MicException e ) { this . getActivity () . finish () ; } } return false ; } 
public void copyIntoList ( DeterminizationTree.TreeNode parent , java.util.List < DeterminizationTree.TreeNode > nodelist ) { DeterminizationTree.TreeNode toRet = new DeterminizationTree.TreeNode ( this . states , parent ) ; nodelist . add ( toRet ) ; for ( DeterminizationTree.TreeNode child : this . children ) { toRet.children . add ( child . copy ( toRet , nodelist ) ) ; } } 
protected java.lang.String getTrimmedStringValue ( java.lang.String value ) { int sInd = 0 ; for ( int i = 0 ; i < ( ( value . length () ) - 1 ) ; i ++ ) { if ( ( ( value . charAt ( i ) ) == '0' ) && ( ( value . charAt ( ( i + 1 ) ) ) != '.' ) ) { sInd = i + 1 ; break; } } java.lang.String res = value . substring ( sInd ) ; return res ; } 
public static void pipeOutBytes ( im.webuzz.pilet.HttpRequest request , java.lang.String cookies , im.webuzz.pilet.HttpResponse response , java.lang.String type , java.lang.String encoding , byte [] content , java.lang.String eTag ) { im.webuzz.pilet.HttpWorkerUtils . pipeOutBytes ( request , cookies , response , type , encoding , content , eTag , ( eTag != null ? 0 : - 1 ) ) ; } 
public boolean checkEmptyBoxes () { if ( ( ( ( vnametxt . getText () . equals ( "" ) ) || ( vnumbertxt . getText () . equals ( "" ) ) ) || ( vtypebox . getSelectedItem () . equals ( "Select vehicle type" ) ) ) || ( ( vtypebox . getSelectedItem () ) == null ) ) { return false ; } else { return true ; } } 
private static swen.adventure.engine.datastorage.EventConnectionParser.EventConnection parseLine ( java.lang.String line ) { line = line . replaceAll ( "\\s+" , "" ) ; java.lang.String [] components = line . split ( ";" ) ; java.lang.String eventName = components [ 0 ] ; java.lang.String actionName = components [ 2 ] ; java.util.List < java.lang.String > objectNames = swen.adventure.engine.datastorage.EventConnectionParser . parseList ( components [ 1 ] ) ; java.util.List < java.lang.String > listenerNames = swen.adventure.engine.datastorage.EventConnectionParser . parseList ( components [ 3 ] ) ; return new swen.adventure.engine.datastorage.EventConnectionParser.EventConnection ( eventName , objectNames , actionName , listenerNames ) ; } 
protected void openIfNecessary ( java.lang.String url ) { java.lang.String currentUrl = com.github.webdriverextensions.Bot . driver () . getCurrentUrl () ; org.apache.http.client.utils.URIBuilder builder = null ; try { builder = new org.apache.http.client.utils.URIBuilder ( currentUrl ) ; } catch ( java.net.URISyntaxException e ) { e . printStackTrace () ; } if ( ! ( org.apache.commons.lang3.StringUtils . equalsIgnoreCase ( url , builder . getHost () ) ) ) { com.github.webdriverextensions.Bot . driver () . get ( url ) ; } } 
private com.yubo.wechat.content.vo.MessageVO getRandomMessageInPool ( com.yubo.wechat.content.service.textWorker.TextPool textPool ) { java.util.List < com.yubo.wechat.content.vo.MessageVO > list = textPool . getTextContent () ; java.util.Random random = new java.util.Random () ; int idx = random . nextInt ( list . size () ) ; com.yubo.wechat.content.vo.MessageVO findVO = list . get ( idx ) ; com.yubo.wechat.content.vo.MessageVO returnVO = new com.yubo.wechat.content.vo.MessageVO () ; returnVO . setFunctionCode ( findVO . getFunctionCode () ) ; returnVO . setContent ( buildFuncShare ( findVO . getSharePrefixList () , findVO . getContent () ) ) ; return returnVO ; } 
@ java.lang.Override public synchronized boolean readyToDecide () { int totalTMCount = ch.epfl.tkvs.yarn.appmaster.AppMaster . numberOfRegisteredTMs () ; ch.epfl.tkvs.yarn.appmaster.AppMaster.log2 . info ( ( ( ( ( ( "graph_size = " + ( ch.epfl.tkvs.yarn.appmaster.centralized_decision.DeadlockCentralizedDecider.graphs . size () ) ) + " - total_expected=" ) + totalTMCount ) + " - is_second_graph_empty=" ) + ( ch.epfl.tkvs.yarn.appmaster.centralized_decision.DeadlockCentralizedDecider.secondGraphs . isEmpty () ) ) , ch.epfl.tkvs.yarn.appmaster.centralized_decision.DeadlockCentralizedDecider . class ) ; if ( ( ch.epfl.tkvs.yarn.appmaster.centralized_decision.DeadlockCentralizedDecider.graphs . size () ) == totalTMCount ) return true ; if ( ! ( ch.epfl.tkvs.yarn.appmaster.centralized_decision.DeadlockCentralizedDecider.secondGraphs . isEmpty () ) ) return true ; return false ; } 
private void setupTreasureCards () { supply . addToStack ( com.dominion.game.CopperCard . class , 500 ) ; supply . addToStack ( com.dominion.game.SilverCard . class , 500 ) ; supply . addToStack ( com.dominion.game.GoldCard . class , 500 ) ; if ( bigCardsUsed ) { supply . addToStack ( com.dominion.game.PlatinumCard . class , 500 ) ; } else { supply . addToStack ( com.dominion.game.PlatinumCard . class , 0 ) ; } } 
public void run ( ) throws uk.ac.ebi.phenotype.solr.indexer.IndexerException { java.lang.Long start = java.lang.System . currentTimeMillis () ; try { uk.ac.ebi.phenotype.solr.indexer.StatisticalResultIndexer.logger . info ( "Populating statistical-results solr core" ) ; populateStatisticalResultsSolrCore () ; } catch ( java.sql.SQLException | java.io.IOException | org.apache.solr.client.solrj.SolrServerException e ) { throw new uk.ac.ebi.phenotype.solr.indexer.IndexerException ( e ) ; } uk.ac.ebi.phenotype.solr.indexer.StatisticalResultIndexer.logger . info ( "Populating statistical-results solr core - done [took: {}s]" , ( ( ( java.lang.System . currentTimeMillis () ) - start ) / 1000.0 ) ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { getTakePhoto () . onCreate ( savedInstanceState ) ; super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; setTitle ( "MSU Mobile Pill Finder" ) ; pillClassifier = new msu.ece.xiaozeng.mpf3.classifier.PillClassifier ( this ) ; } 
public void setList ( java.util.List < T > list ) { this . list = list ; wrapMap . clear () ; if ( ( getItemCount () ) > 0 ) { for ( T t : this . list ) { final long index = getIndex ( t ) ; if ( index == ( com.ray.mvvm.lib.view.adapter.list.base.ListAdapter.NO_INDEX ) ) break; wrapMap . put ( index , t ) ; } } com.ray.mvvm.lib.view.adapter.list.base.ListAdapter . notifyDataSetChanged () ; } 
private void exportToMP3 () { if ( hasPermission ) { com.team_red.melody.filemanager.MelodyExporter melodyExporter = new com.team_red.melody.filemanager.MelodyExporter ( this ) ; java.util.ArrayList < java.lang.Integer > sound1 = com.team_red.melody.filemanager.MelodyFileManager . getManager () . getResIDOfMusic ( com.team_red.melody.filemanager.MelodyFileManager . getManager () . MakeNotesFromString ( melodyAdapter . getMelodyStringList1 () , com.team_red.melody.models.MelodyStatics.FLAG_EXPORT ) ) ; melodyExporter . setSound1 ( sound1 ) ; melodyExporter . mergeSongs ( currentComposition ) ; } else { requestPermission () ; exportToMP3 () ; } } 
public synchronized byte [] read ( java.lang.String fn , int offset ) throws java.io.FileNotFoundException , java.io.IOException { java.io.File filename = new java.io.File ( fn ) ; java.io.File f2 = filename . getCanonicalFile () ; java.lang.String s = f2 . getAbsolutePath () ; java.io.FileInputStream fis = new java.io.FileInputStream ( s ) ; byte [] data = new byte [ bufferSize ] ; java.io.BufferedInputStream reader = new java.io.BufferedInputStream ( fis ) ; reader . read ( data , offset , bufferSize ) ; reader . close () ; return data ; } 
@ java.lang.Override public java.lang.String getSubtitle () { if ( getUserObject () . isAnonymous () ) { return null ; } java.lang.String s = getUserObject () . getOntologyID () . getOntologyIRI () . toString () ; org.semanticweb.owlapi.model.IRI versionIRI = getUserObject () . getOntologyID () . getVersionIRI () . orNull () ; if ( versionIRI != null ) { s += "<br />" + ( versionIRI . toString () ) ; } return s ; } 
@ java.lang.Override public void onNavigationDrawerItemSelected ( int position ) { android.support.v4.app.FragmentManager fragmentManager = getSupportFragmentManager () ; android.support.v4.app.Fragment nextFragment ; switch ( position ) { default: case 0 : nextFragment = new it.jaschke.alexandria.ListOfBooksFragment () ; break; case 1 : nextFragment = new it.jaschke.alexandria.AddBookFragment () ; break; case 2 : nextFragment = new it.jaschke.alexandria.AboutFragment () ; break; } fragmentManager . beginTransaction () . replace ( R.id.container , nextFragment ) . addToBackStack ( ( ( java.lang.String ) ( title ) ) ) . commit () ; } 
@ org.junit.Test public void folder_can_fetch_less_than_10_envelopes ( ) throws com.fsck.k9.mail.MessagingException { java.util.List < com.fsck.k9.mail.store.webdav.WebDavMessage > messages = new java.util.ArrayList <> () ; for ( int i = 0 ; i < 5 ; i ++ ) { com.fsck.k9.mail.store.webdav.WebDavMessage mockMessage = org.mockito.Mockito . mock ( com.fsck.k9.mail.store.webdav.WebDavMessage . class ) ; messages . add ( mockMessage ) ; } com.fsck.k9.mail.Folder folder = new com.fsck.k9.mail.store.webdav.WebDavFolder ( mockStore , "testFolder" ) ; com.fsck.k9.mail.FetchProfile profile = new com.fsck.k9.mail.FetchProfile () ; profile . add ( FetchProfile.Item.ENVELOPE ) ; folder . fetch ( messages , profile , listener ) ; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) public void send () { org.json.simple.JSONObject msgJson = new org.json.simple.JSONObject () ; msgJson . put ( "type" , "stream" ) ; msgJson . put ( "content" , accu ) ; java.lang.String message = accu . toJSONString () ; try { channel . basicPublish ( "" , sendTo , properties , message . getBytes ( "UTF-8" ) ) ; } catch ( java.io.IOException ex ) { ex . printStackTrace () ; } java.lang.System.out . println ( ( ( " [D] Sent stream message (" + ( properties . getCorrelationId () ) ) + ")" ) ) ; } 
public java.lang.String updateUser () { try { userFacade . updateUser ( selectedUser , updateRoles ) ; addMessage ( ( ( ( selectedUser . getUsername () ) + " " ) + ( getMessageFromProperty ( "#{msg['user.updated']}" ) ) ) ) ; } catch ( ro.msg.edu.business.common.exception.TechnicalException | ro.msg.edu.business.common.exception.UserNotFoundException e ) { addMessage ( e . getMessage () ) ; } return ro.msg.edu.client.beans.UserBean.EDIT_USERS ; } 
@ org.junit.Test public void testEmptyInstance ( ) throws java.lang.Exception { org.assertj.jodatime.api.Assertions . assertThat ( TimestampStats.EMPTY . min () ) . isEqualTo ( new org.joda.time.DateTime ( 0L , org.joda.time.DateTimeZone.UTC ) ) ; org.assertj.jodatime.api.Assertions . assertThat ( TimestampStats.EMPTY . max () ) . isEqualTo ( new org.joda.time.DateTime ( 0L , org.joda.time.DateTimeZone.UTC ) ) ; org.assertj.jodatime.api.Assertions . assertThat ( TimestampStats.EMPTY . avg () ) . isEqualTo ( new org.joda.time.DateTime ( 0L , org.joda.time.DateTimeZone.UTC ) ) ; } 
@ java.lang.Override public void handleDelete ( ) throws java.io.IOException { if ( ( ( cursorPosition ) > 0 ) && ( ( cursorPosition ) < ( lineLength ) ) ) { if ( echo ) { writer . write ( 27 ) ; writer . write ( '[' ) ; writer . write ( '1' ) ; writer . write ( 'P' ) ; } lineBuffer . deleteCharAt ( cursorPosition ) ; lineLength = lineBuffer . length () ; } } 
private void AppendTableHeaders ( org.w3c.dom.Element tableHeaderRow , org.w3c.dom.Document doc , scadinspect.data.scaddoc.ScadDocuFile file ) { java.util.ArrayList < java.lang.String > keys = ( ( java.util.ArrayList < java.lang.String > ) ( file . getAllKeys () ) ) ; for ( int i = 0 ; i < ( keys . size () ) ; i ++ ) { org.w3c.dom.Element header = doc . createElement ( "th" ) ; header . appendChild ( doc . createTextNode ( keys . get ( i ) ) ) ; tableHeaderRow . appendChild ( header ) ; } } 
@ java.lang.Override public void failure ( retrofit.RetrofitError error ) { java.lang.String errorJson = new java.lang.String ( ( ( retrofit.mime.TypedByteArray ) ( error . getResponse () . getBody () ) ) . getBytes () ) ; android.util.Log . d ( "RESTMANAGER: " , "Token update FAILED!" ) ; android.widget.Toast . makeText ( context , errorJson , Toast.LENGTH_LONG ) . show () ; if ( ( error . getResponse () . getStatus () ) == 401 ) {} } 
@ org.jetbrains.annotations.NotNull protected java.io.InputStream getChunkInputStream ( java.io.File appendFile , long offset , int pageSize ) throws java.io.IOException { java.io.FileInputStream in = new java.io.FileInputStream ( appendFile ) ; if ( offset > 0 ) { in . skip ( offset ) ; } return new java.io.BufferedInputStream ( new com.intellij.util.io.LimitedInputStream ( in , pageSize ) { @ java.lang.Override public int available () { return remainingLimit () ; } } , 32768 ) ; } 
@ ua.nc.controller.RequestMapping ( value = { "/students/list/{itemsPerPage}/{pageNumber}/{sortType}" } , method = RequestMethod.GET , produces = "application/json" ) @ ua.nc.controller.ResponseBody public ua.nc.entity.profile.StudentData getStudents ( @ ua.nc.controller.PathVariable ( value = "itemsPerPage" ) java.lang.Integer itemsPerPage , @ ua.nc.controller.PathVariable ( value = "pageNumber" ) java.lang.Integer pageNumber , @ ua.nc.controller.PathVariable ( value = "sortType" ) java.lang.Integer sortType ) { ua.nc.entity.profile.StudentData studentData ; ua.nc.service.StudentService studentService = new ua.nc.service.StudentServiceImpl () ; studentData = studentService . getStudents ( itemsPerPage , pageNumber , sortType ) ; if ( studentData != null ) { ua.nc.controller.AdminController.LOGGER . warn ( "studData == null" ) ; } return studentData ; } 
@ java.lang.Override public java.lang.String toString () { java.lang.String returnString = "" ; for ( com.arjunkalburgi.assignment1.DayOfTheWeek d : this ) { if ( d . isSeletected () ) { returnString = ( returnString + ( d . getName () ) ) + ", " ; } } android.util.Log . d ( com.arjunkalburgi.assignment1.DaysOfTheWeek.TAG , ( "for each loop " + ( this . get ( 0 ) . getName () ) ) ) ; return returnString ; } 
public int findNextOffSetInPartition ( org.eclipse.jface.text.IDocument doc , int partitionOffSet , int minIndex ) throws org.eclipse.jface.text.BadLocationException { org.eclipse.jface.text.ITypedRegion partition = doc . getPartition ( partitionOffSet ) ; org.eclipse.jface.text.ITypedRegion partition2 = doc . getPartition ( minIndex ) ; if ( partition . getType () . equals ( partition2 . getType () ) ) { return minIndex ; } else { return findNextOffSetInPartition ( doc , partitionOffSet , ( minIndex + ( partition2 . getLength () ) ) ) ; } } 
@ java.lang.Override public void deleteTextOnPage ( int pageNumber ) { if ( this . verifyPassword () ) { if ( ( pageNumber < 0 ) || ( pageNumber >= ( this . pages . length ) ) ) { java.lang.System.out . println ( "Invalid page number." ) ; return; } this . pages [ ( pageNumber - 1 ) ] . deleteText () ; } } 
public static int calculScore ( int lgTab , int nbrVies ) { if ( lgTab < 5 ) { return ( lgTab * nbrVies ) * 3 ; } else if ( lgTab > 8 ) { return ( lgTab * nbrVies ) * 2 ; } else { return lgTab * nbrVies ; } } 
@ org.junit.Test public void decryptError ( ) throws com.homework1.task5.UnavailableFunctionalityException { com.homework1.task5.RSA rsaConfigured = new com.homework1.task5.RSA ( rsa . getOpenExponent () , rsa . getModule () ) ; thrown . expect ( com.homework1.task5.UnavailableFunctionalityException . class ) ; thrown . expectMessage ( MESSAGE ) ; java.lang.String test = rsaConfigured . decrypt ( input ) ; } 
@ java.lang.Override public boolean keep ( java.lang.String token , howardwu.io.ors.api.common.enumtype.Role role ) { howardwu.io.ors.api.model.SessionContext context = contextMapper . getByToken ( token ) ; if ( ( context == null ) || ( context . getExpired () ) ) { throw new howardwu.io.ors.api.exception.UnauthorizedException () ; } else if ( ! ( context . getRole () . equals ( role ) ) ) { throw new howardwu.io.ors.api.exception.AccessDeniedException () ; } int success = contextMapper . keep ( token , role ) ; if ( success != 1 ) { throw new howardwu.io.ors.api.exception.UnauthorizedException () ; } return true ; } 
@ java.lang.Override public void process ( org.apache.camel.Exchange exchange ) throws java.lang.Exception { com.telapp.auro.camel.MqttProcessor.log . info ( ( ( ( "Executing the method process : " + ( exchange . getIn () . getBody () ) ) + " header :" ) + ( exchange . getIn () . getHeaders () ) ) ) ; java.lang.String body = ( ( java.lang.String ) ( exchange . getIn () . getBody () ) ) ; com.telapp.auro.beans.MqttRequest mqTT = convertToMQTT ( body ) ; saveData ( mqTT ) ; com.telapp.auro.camel.MqttProcessor.log . info ( "Finished executing the method process" ) ; } 
@ cpw.mods.fml.common.Mod.EventHandler public void init ( cpw.mods.fml.common.event.FMLInitializationEvent event ) { java.lang.System.out . println ( ( "this.config: " + ( this . config . toString () ) ) ) ; Pixelmon.EVENT_BUS . register ( new net.pixellife.shinynotifier.PixelmonCaptureHandler () ) ; java.sql.Connection con = net.pixellife.shinynotifier.DatabaseUtil . getConnection () ; java.lang.System.out . println ( ( "con: " + ( con . toString () ) ) ) ; prepareDatabaseStatements ( con ) ; setupCommands () ; } 
private void generateLightShafts () { if ( renderingConfig . isLightShafts () ) { org.terasology.monitoring.PerformanceMonitor . startActivity ( "Rendering light shafts" ) ; lightShaftsMaterial . enable () ; buffers.lightShafts . bind () ; graphicState . setViewportToSizeOf ( buffers.lightShafts ) ; glClear ( ( ( GL_COLOR_BUFFER_BIT ) | ( GL_DEPTH_BUFFER_BIT ) ) ) ; renderFullscreenQuad () ; buffers.lightShafts . unbind () ; graphicState . setViewportToFullScreen () ; org.terasology.monitoring.PerformanceMonitor . endActivity () ; } } 
@ java.lang.Override public tttx9.Move nextTurn ( tttx9.GameState gs ) { java.lang.System.out . println ( "zoeken naar nieuwe move" ) ; if ( ( gs . getLastMove () ) == null ) return new tttx9.Move ( 0 , 0 ) ; for ( int j = 0 ; j < 9 ; j ++ ) if ( gs . getState () [ gs . getNextSubGame () ] . isFreeField ( new tttx9.Move ( gs . getNextSubGame () , j ) ) ) return new tttx9.Move ( gs . getNextSubGame () , j ) ; return null ; } 
public static boolean isValidChangeValue ( java.lang.String quantityStr ) { if ( ( quantityStr == null ) || ( ( quantityStr . trim () . length () ) < 1 ) ) { return false ; } try { double q = java.lang.Float . parseFloat ( quantityStr ) ; return true ; } catch ( java.lang.NumberFormatException e ) { if ( com.stocktracker.BuildConfig.DEBUG ) android.util.Log . d ( com.stocktracker.util.Utils.TAG , ( ( "Error parsing change " + quantityStr ) + " to float." ) ) ; return false ; } } 
private void initialize () { mPaint = new android.text.TextPaint ( getPaint () ) ; mMaxTextSize = getTextSize () ; mAvailableSpaceRect = new android.graphics.RectF () ; mTextCachedSizes = new android.util.SparseIntArray () ; if ( ( mMaxLines ) == 0 ) { mMaxLines = com.q20.projectsummer.ui.AutoResizeTextViewWithAfsanehFont.NO_LINE_LIMIT ; } if ( ! ( isInEditMode () ) ) { android.graphics.Typeface tf = android.graphics.Typeface . createFromAsset ( getContext () . getAssets () , "afsaneh.ttf" ) ; setTypeface ( tf ) ; } } 
@ java.lang.Override public void deleteAnswersByQuestionId ( int quesid ) { java.util.List < model.Answer > anss = ansDao . getAnswersByQuesId ( quesid ) ; for ( model.Answer ans : anss ) { model.AnswerSheet anst = anssheetDao . getAnswerSheetById ( ans . getId () ) ; java.lang.System.out . println ( anst . getId () ) ; deleteAnswer ( ans , anst ) ; } } 
@ org.junit.Test public void testNoWork ( ) throws java.lang.Exception { org.mockito.Mockito . when ( mockTableManagerSupport . isIndexWorkRequired ( tableId ) ) . thenReturn ( false ) ; two . setObjectType ( ObjectType.TABLE ) ; two . setChangeType ( ChangeType.UPDATE ) ; two . setObjectEtag ( resetToken ) ; worker . run ( mockProgressCallback , two ) ; org.mockito.Mockito . verifyZeroInteractions ( mockTableIndexManager ) ; } 
public void run () { Sistema.ActiveProcesso = true ; while ( true ) { try { java.lang.Thread . sleep ( 1000 ) ; java.lang.System.out . println ( ( ( "Sistema verificando a cada " + ( this . intervaloDeVerificacao ) ) + " segundos" ) ) ; ( tempo ) ++ ; if ( ( ( getTempo () ) % ( intervaloDeVerificacao ) ) == 0 ) { downMutex () ; detectarDeadLock () ; upMutex () ; } } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } } 
@ java.lang.Override public int compareTo ( BBNode other ) { double temp = ( this . lb . value ) - ( other.lb.value ) ; if ( temp > 0 ) return 1 ; else if ( temp < 0 ) return - 1 ; else return 0 ; } 
@ java.lang.Override public void setUserVisibleHint ( boolean isVisibleToUser ) { super . setUserVisibleHint ( isVisibleToUser ) ; if ( isVisibleToUser ) { if ( ( getContext () ) != null ) { loading = new android.app.ProgressDialog ( getContext () ) ; loading . setCancelable ( true ) ; loading . setMessage ( "FETCHING DATA" ) ; loading . setProgressStyle ( ProgressDialog.STYLE_SPINNER ) ; loading . show () ; android.util.Log . i ( "VISIBLE" , "REFRESHING" ) ; makeNetworkCall () ; } } else { android.util.Log . i ( "VISIBLE" , "NO" ) ; } } 
private void setLecture () { java.lang.String PID = in . next () ; java.lang.String CID = in . next () ; java.lang.String date = in . next () ; java.lang.String start = in . next () ; java.lang.String end = in . next () ; java.lang.String room = in . next () ; sdc . insert ( ServerDatabaseConnection.LECTURES , new java.lang.String [] { PID , CID , date , start , end , room } ) ; } 
@ java.lang.Override protected void onPause () { try { super . onPause () ; se.gsc.stenmark.gscenduro.MainActivity.disconected = true ; android.content.SharedPreferences settings = getSharedPreferences ( se.gsc.stenmark.gscenduro.MainActivity.PREF_NAME , 0 ) ; android.content.SharedPreferences.Editor editor = settings . edit () ; editor . putString ( "connectionStatus" , "Disconnected" ) ; editor . commit () ; } catch ( java.lang.Exception e1 ) { se.gsc.stenmark.gscenduro.PopupMessage dialog = new se.gsc.stenmark.gscenduro.PopupMessage ( se.gsc.stenmark.gscenduro.MainActivity . generateErrorMessage ( e1 ) ) ; dialog . show ( getSupportFragmentManager () , "popUp" ) ; } } 
@ java.lang.Override public org.jactr.tools.grapher.core.container.IProbeContainer install ( org.jactr.core.chunk.IChunk element , org.jactr.tools.grapher.core.container.IProbeContainer container ) { org.jactr.tools.grapher.core.container.IProbeContainer rtnContainer = super . install ( element , container ) ; java.util.concurrent.Executor executor = org.jactr.core.concurrent.ExecutorServices.INLINE_EXECUTOR ; element . addListener ( _pListener , executor ) ; element . addListener ( _cListener , executor ) ; if ( element . isEncoded () ) checkLinks ( element . getSubsymbolicChunk () ) ; return rtnContainer ; } 
private void initialDatabase () { try { responderDatabase = openOrCreateDatabase ( "responder.db" , SQLiteDatabase.CREATE_IF_NECESSARY , null ) ; responderDatabase . execSQL ( com.gr.responder.MainActivity.CREATE_SMS_TABLE ) ; responderDatabase . execSQL ( com.gr.responder.MainActivity.CREATE_CALL_HISTORY ) ; android.content.ContentValues values = new android.content.ContentValues () ; values . put ( "message" , "DummyValue" ) ; long dummyID = responderDatabase . insert ( "tbl_sms" , null , values ) ; } catch ( android.database.SQLException e ) { e . printStackTrace () ; } } 
private static < K , V > void accumulate ( java.util.Map < K , V > map , java.util.Map.Entry < ? extends K , ? extends V > entry ) { com.google.common.base.Preconditions . checkState ( ( ! ( map . containsKey ( entry . getKey () ) ) ) , "Duplicate key %s" , entry . getKey () ) ; map . put ( entry . getKey () , entry . getValue () ) ; } 
@ io.qameta.allure.Description ( value = "The test checks that user can select all in table and delete them" ) @ org.testng.annotations.Test public void userDeletionAllTest () { usersPage . createNewUser ( "testName" , "fullName" , "" ) ; usersPage . createNewUser ( "nameTest" , "nameFull" , "" ) ; usersPage . deleteAllusers () ; org.testng.Assert . assertEquals ( 1 , usersPage . countAllElementsInTable () ) ; org.testng.Assert . assertTrue ( usersPage . checkElementPresentInTable ( "Empty" ) ) ; } 
public com.amazon.speech.speechlet.SpeechletResponse createNewNote ( com.amazon.speech.speechlet.Session session ) { quicknote.storage.QuickNote myNote = quickNoteManager . createEmptyNewNote () ; session . setAttribute ( quicknote.QuickNoteSpeechlet.NEW_NOTE_KEY , ( ( quicknote.storage.QuickNote ) ( myNote ) ) ) ; java.lang.String speechText = "What is the name of your new note?" ; java.lang.String repromptText = "Please tell me the name of your new note." ; return getAskSpeechletResponse ( speechText , repromptText ) ; } 
public static java.util.List < com.larvalabs.redditchat.dataobj.JsonActiveChatRoom > getActiveRooms ( int limit ) { java.util.TreeSet < java.lang.String > activeRooms = com.larvalabs.redditchat.util.RedisUtil . getActiveRooms ( limit ) ; java.util.List < com.larvalabs.redditchat.dataobj.JsonActiveChatRoom > activeRoomsList = new java.util.ArrayList <> () ; int rank = 1 ; for ( java.lang.String roomName : activeRooms ) { com.larvalabs.redditchat.dataobj.JsonChatRoom jsonChatRoom = com.larvalabs.redditchat.dataobj.BreakerCache . getJsonChatRoom ( roomName ) ; activeRoomsList . add ( new com.larvalabs.redditchat.dataobj.JsonActiveChatRoom ( 0 , roomName , jsonChatRoom.displayName , jsonChatRoom.iconUrl , 1 , rank ) ) ; rank ++ ; } return activeRoomsList ; } 
private java.lang.String getParentName ( java.lang.Long parentId ) { java.lang.String parentName = null ; if ( ( parentId != null ) && ( parentId != 0 ) ) { org.springframework.jdbc.core.namedparam.MapSqlParameterSource parameters = new org.springframework.jdbc.core.namedparam.MapSqlParameterSource () ; java.lang.String sql = org.egov.tradelicense.persistence.repository.builder.CategoryQueryBuilder . getQueryForParentName ( parentId , parameters ) ; java.util.List < java.util.Map < java.lang.String , java.lang.Object > > rows = namedParameterJdbcTemplate . queryForList ( sql , parameters ) ; for ( java.util.Map < java.lang.String , java.lang.Object > row : rows ) { parentName = getString ( row . get ( "name" ) ) ; } } return parentName ; } 
@ java.lang.Override public android.support.v4.app.Fragment getItem ( int position ) { switch ( position ) { case 0 : com.example.victor.lfm.HomeTab home = new com.example.victor.lfm.HomeTab ( context ) ; return home ; case 1 : com.example.victor.lfm.Tab2 tab2 = new com.example.victor.lfm.Tab2 () ; return tab2 ; case 2 : com.example.victor.lfm.CreateTab createTab = new com.example.victor.lfm.CreateTab ( context , mGoogleApiClient ) ; return createTab ; default: break; } return null ; } 
@ org.junit.Test public void testClassLoaderFilter ( ) throws java.lang.Exception { org.hamcrest.MatcherAssert . assertThat ( new net.bytebuddy.dynamic.loading.MultipleParentClassLoader.Builder () . append ( getClass () . getClassLoader () , null ) . filter ( net.bytebuddy.matcher.ElementMatchers . isBootstrapClassLoader () ) . build () , org.hamcrest.CoreMatchers . is ( getClass () . getClassLoader () ) ) ; } 
@ java.lang.Override public int getLightValue ( net.minecraft.block.state.IBlockState state , net.minecraft.world.IBlockAccess world , net.minecraft.util.math.BlockPos pos ) { net.minecraft.block.Block block = world . getBlockState ( pos ) . getBlock () ; if ( block != ( this ) ) { return block . getLightValue ( state , world , pos ) ; } return this . getLightValue ( state , world , pos ) ; } 
private void handleSteering ( final float velocity ) { getGameObject () . transform . translateForward ( velocity ) ; updateWallSegments () ; if ( this . isButtonNewlyPressed ( inputdevice.Input . getButton ( leftButton ) , leftButton ) ) { getGameObject () . transform . rotateLeft ( 90 ) ; addWallSegment () ; } if ( this . isButtonNewlyPressed ( inputdevice.Input . getButton ( rightButton ) , rightButton ) ) { getGameObject () . transform . rotateRight ( 90 ) ; addWallSegment () ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.alarm_list ) ; android.widget.ListView alarmList = ( ( android.widget.ListView ) ( findViewById ( R.id.alarm_list ) ) ) ; adapter = new com.dmchoull.daybreak.ui.AlarmListAdapter ( this , R.layout.alarm_list_item , alarmHelper . getAll () ) ; alarmList . setAdapter ( adapter ) ; alarmList . setOnItemClickListener ( new android.widget.AdapterView.OnItemClickListener () { @ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { showAlarm ( id ) ; } } ) ; } 
public java.lang.String lineageString () { java.lang.StringBuilder lineageString = new java.lang.StringBuilder () ; java.util.Iterator < com.ontotext.ehri.georecon.place.Place > lineage = lineage () . descendingIterator () ; while ( lineage . hasNext () ) { lineageString . append ( com.ontotext.ehri.georecon.place.Place.LINEAGE_SEPARATOR ) ; lineageString . append ( lineage . next () . toString () ) ; } return lineageString . substring ( com.ontotext.ehri.georecon.place.Place.LINEAGE_SEPARATOR . length () ) ; } 
@ java.lang.Override public void onSwiped ( android.support.v7.widget.RecyclerView.ViewHolder viewHolder , int swipeDir ) { if ( swipeDir == 8 ) { final int position = viewHolder . getAdapterPosition () ; removeCity ( mAdapter . getItem ( position ) . getName () ) ; mAdapter . removeItem ( position ) ; mAdapter . notifyItemRemoved ( position ) ; } } 
@ java.lang.Override public void onPlaybackStateUpdated ( android.support.v4.media.session.PlaybackStateCompat newState ) { if ( ( mMediaSession ) != null ) mMediaSession . setPlaybackState ( newState ) ; com.quovantis.music.helper.LoggerHelper . d ( ( "New State : " + ( newState . toString () ) ) ) ; if ( ( newState . getState () ) == ( android.support.v4.media.session.PlaybackStateCompat.STATE_STOPPED ) ) { removeNotifications () ; android.content.Intent intent = new android.content.Intent () ; intent . setAction ( IntentKeys.CLOSE_MUSIC_ACTION ) ; sendBroadcast ( intent ) ; mMediaSession . setActive ( false ) ; stopSelf () ; } } 
@ org.junit.Test public void shouldReadFromFieldMatchingRelationshipTypeInObjectWithoutAnnotationsOrAccessorMethods () { org.neo4j.ogm.metadata.info.ClassInfo classInfo = this . domainInfo . getClass ( org.neo4j.ogm.unit.entityaccess.DefaultObjectAccessStrategyTest.DummyDomainObject . class . getName () ) ; org.neo4j.ogm.unit.entityaccess.DefaultObjectAccessStrategyTest.DummyDomainObject domainObject = new org.neo4j.ogm.unit.entityaccess.DefaultObjectAccessStrategyTest.DummyDomainObject () ; domainObject.postWithoutAccessorMethods = new org.neo4j.ogm.domain.forum.activity.Post () ; org.neo4j.ogm.unit.entityaccess.RelationalReader reader = this . objectAccessStrategy . getRelationalReader ( classInfo , "POST_WITHOUT_ACCESSOR_METHODS" ) ; assertNotNull ( "The resultant object accessor shouldn't be null" , reader ) ; assertSame ( domainObject.postWithoutAccessorMethods , reader . read ( domainObject ) ) ; assertEquals ( "POSTWITHOUTACCESSORMETHODS" , reader . relationshipType () ) ; } 
private void validateInactive ( java.lang.Boolean preInactive , java.lang.Boolean curInactive ) { if ( ( ( preInactive != null ) && ( preInactive == true ) ) && ( ( curInactive == null ) || ( curInactive == false ) ) ) { java.lang.String errMsg = java.lang.String . format ( "%s invalid inactive set from %s to %s" , this . getId () . toString () , preInactive , curInactive ) ; com.emc.storageos.db.client.model.DataObject._log . error ( errMsg , new java.lang.IllegalArgumentException () ) ; } } 
public void setIndexes ( java.util.List < org.dbflute.erflute.editor.model.diagram_contents.element.node.table.index.ERIndex > indexes ) { this . indexes = indexes ; if ( ( this . getDiagram () ) != null ) { this . firePropertyChange ( IndexSet.PROPERTY_CHANGE_INDEXES , null , null ) ; this . getDiagram () . getDiagramContents () . getIndexSet () . update () ; } } 
public boolean isEligibalAircraft ( xiaMengAirline.searchEngine.Aircraft aircraft , xiaMengAirline.searchEngine.AirPort sourceAir , xiaMengAirline.searchEngine.AirPort destAir ) { java.lang.String searchKey = ( ( ( ( aircraft . getId () ) + "_" ) + ( sourceAir . getId () ) ) + "_" ) + ( destAir . getId () ) ; return InitData.airLimitationList . contains ( searchKey ) ? true : false ; } 
private void bumpPromoAnaylticsAndShowPromoDialogIfNecessary () { if ( ( mIsUpdatingStats ) || ( mThereWasAnErrorLoadingStats ) ) { return; } org.wordpress.android.ui.prefs.AppPrefs . bumpAnalyticsForStatsWidgetPromo () ; java.lang.String prevWidgetKeysString = org.wordpress.android.ui.prefs.AppPrefs . getStatsWidgetsKeys () ; if ( org.apache.commons.lang.StringUtils . isEmpty ( prevWidgetKeysString ) ) { int counter = org.wordpress.android.ui.prefs.AppPrefs . getAnalyticsForStatsWidgetPromo () ; if ( ( ( counter == 3 ) || ( counter == 1000 ) ) || ( counter == 10000 ) ) { android.app.DialogFragment newFragment = org.wordpress.android.ui.stats.StatsActivity.StatsWidgetPromoDialogFragment . newInstance () ; newFragment . show ( getFragmentManager () , "promote_widget_dialog" ) ; } } } 
private com.teamagam.gimelgimel.domain.alerts.entity.Alert convertAlertData ( com.teamagam.gimelgimel.data.alerts.entity.AlertData content , java.lang.String id ) { com.teamagam.gimelgimel.domain.map.entities.mapEntities.AlertEntity entity = mGeoEntityDataMapper . transformIntoAlertEntity ( id , content.source , content.location , content.severity ) ; return new com.teamagam.gimelgimel.domain.alerts.entity.Alert ( content.source , content.time , content.text , content.severity , content.messageId , entity ) ; } 
@ java.lang.Override public void onCreate ( android.database.sqlite.SQLiteDatabase db ) { db . execSQL ( ( ( ( ( ( ( ( ( ( ( ( ( "create table " + ( com.example.rishabh.friday.MyDBHandler.TABLE_NAME ) ) + "(" ) + ( com.example.rishabh.friday.MyDBHandler.COLUMN_ID ) ) + " integer primary key autoincrement, " ) + ( com.example.rishabh.friday.MyDBHandler.COLUMN_TYPE ) ) + " text, " ) + ( com.example.rishabh.friday.MyDBHandler.COLUMN_LABEL ) ) + " text, " ) + ( com.example.rishabh.friday.MyDBHandler.COLUMN_DESCRIPTION ) ) + " text, " ) + ( com.example.rishabh.friday.MyDBHandler.COLUMN_LABEL ) ) + " text);" ) ) ; } 
public static boolean isCatalogServer ( final java.net.URL url ) { if ( null == ( com.emc.storageos.systemservices.impl.upgrade.beans.SoftwareUpdate._catalogServerHostNames ) ) { throw APIException.internalServerErrors . targetIsNullOrEmpty ( "catalog server host names" ) ; } for ( java.lang.String catalogServerHostName : com.emc.storageos.systemservices.impl.upgrade.beans.SoftwareUpdate._catalogServerHostNames ) { if ( catalogServerHostName . equalsIgnoreCase ( url . getHost () ) ) { return true ; } } return false ; } 
public synchronized java.io.File prepareConfigDir ( java.lang.String strRelativePath ) { java.lang.String filePath = ( ( getBaseBuildWorkingDirectory () ) + ( java.io.File.separator ) ) + strRelativePath ; java.io.File f = new java.io.File ( filePath ) ; f . setReadable ( true , true ) ; f . setWritable ( true , true ) ; f . setExecutable ( false , false ) ; f . mkdir () ; return f ; } 
private org.maximachess.jdrone.learn.LBEntry getEntry ( org.maximachess.chess.Board b , int variant ) { java.lang.String key = getKey ( b , variant ) ; org.maximachess.jdrone.learn.LBEntry e = getBook () . getEntry ( key ) ; if ( e == null ) { e = new org.maximachess.jdrone.learn.LBEntry ( key ) ; getBook () . setEntry ( e ) ; } validateEntry ( e ) ; return e ; } 
@ java.lang.Override public void downloadFinished ( org.alulab.uvaarena.webapi.DownloadTask task ) { ( finished ) ++ ; long len = 0 ; if ( task instanceof org.alulab.uvaarena.webapi.DownloadString ) { len = ( ( org.alulab.uvaarena.webapi.DownloadString ) ( task ) ) . getResult () . length () ; } java.lang.System.out . printf ( "%s | [%d]\n" , task , len ) ; java.lang.System.out . printf ( "Total Download Time : %.3f seconds\n" , ( ( task . getDownloadTimeMillis () ) / 1000.0 ) ) ; java.lang.System.out . println ( "------------ Content -------------" ) ; java.lang.System.out . println ( ( ( org.alulab.uvaarena.webapi.DownloadString ) ( task ) ) . getResult () ) ; } 
public void mouseClick ( java.awt.Point p ) { java.lang.System.out . println ( "trying to move" ) ; robot . mouseMove ( ( ( int ) ( p . getX () ) ) , ( ( int ) ( p . getY () ) ) ) ; mouseClick () ; robot . mouseMove ( pointMatrix [ org.randac.Application.CENTER ] . x , pointMatrix [ org.randac.Application.CENTER ] . y ) ; } 
private static void option4 () { java.lang.System.out . println ( ( ( ( source.pendu.LSD . getString ( "pen_opt4_msg1" ) ) + ( source.pendu.LSD . getString ( "pen_opt4_msg2" ) ) ) + ( source.pendu.LSD . getString ( "pen_opt4_msg3" ) ) ) ) ; byte choix = 0 ; do { choix = fichier.InOut . getByte () ; } while ( ( choix != 1 ) || ( choix != 2 ) ) ; source.Dico . setChoixDico ( choix ) ; } 
@ java.lang.Override public java.lang.Void get ( ) throws org.pcj.PcjRuntimeException { java.lang.System.err . println ( ( ( ( round ) + "round -> done: " ) + ( done ) ) ) ; synchronized ( lock ) { while ( ( done ) == false ) { try { lock . wait () ; } catch ( java.lang.InterruptedException ex ) { throw new org.pcj.PcjRuntimeException ( ex ) ; } } } return null ; } 
@ java.lang.Override public void stateUpdated ( org.eclipse.smarthome.core.items.Item item , org.eclipse.smarthome.core.types.State state ) { oldGroupState = this . state ; setState ( function . calculate ( members ) ) ; if ( oldGroupState . equals ( this . state ) ) { sendGroupStateUpdatedEvent ( item . getName () , this . state ) ; } else { sendGroupStateChangedEvent ( item . getName () , this . state , oldGroupState ) ; } } 
public void putListBoolean ( java.lang.String key , java.util.ArrayList < java.lang.Boolean > boolList ) { checkForNullKey ( key ) ; java.util.ArrayList < java.lang.String > newList = new java.util.ArrayList < java.lang.String > () ; for ( java.lang.Boolean item : boolList ) { if ( item ) { newList . add ( "true" ) ; } else { newList . add ( "false" ) ; } } putListString ( key , newList ) ; } 
@ java.lang.Override public void Receiver ( java.util.ArrayList < java.lang.Object > params , java.lang.String callbackId ) { java.lang.String peerId = "" ; if ( ( params . size () ) > 0 ) { peerId = params . get ( 0 ) . toString () ; } boolean retval = mBtConnectorHelper . Disconnect ( peerId ) ; mBtConnectorHelper . ReStart () ; } 
public void unCheckAll ( boolean animate ) { for ( int index = 0 ; index < ( getItemCount () ) ; index ++ ) { if ( isChecked ( index ) ) { tracker . setStateFor ( index , ( animate ? StateTracker.EXIT : StateTracker.DEFAULT ) ) ; this . notifyItemChanged ( index ) ; } } if ( mode . isActivated () ) { android.util.Log . d ( com.vpaliy.multiplechoice.BaseAdapter.TAG , ( "After canceling:" + ( java.lang.Integer . toString ( tracker . getCheckedItemCount () ) ) ) ) ; mode . turnOff () ; } } 
public void onSoundDownloaded ( java.io.File soundFile ) { this . soundLocation = soundFile ; java.lang.String path = soundLocation . getAbsolutePath () ; path = path . substring ( 0 , path . lastIndexOf ( java.io.File.separator ) ) ; path = path . substring ( ( ( path . lastIndexOf ( java.io.File.separator ) ) + 1 ) ) ; if ( path . equals ( "sounds" ) ) path = "" ; this . category = path ; this . state = com.zoonie.custominteractionsounds.sound.Sound.SoundState.SYNCED ; } 
private void BEQ ( int arg ) { if ( this . isZeroFlag () ) { int oldPc = this . programCounter ; this . programCounter += arg ; if ( this . isNewPage ( oldPc , this . programCounter ) ) { this . cycles += 2 ; } else { ( this . cycles ) ++ ; } } } 
public int numberOfTaxa ( java.lang.String tree ) { int charCount = 0 ; char temp ; for ( int i = 0 ; i < ( tree . length () ) ; i ++ ) { temp = tree . charAt ( i ) ; if ( temp == ',' ) charCount ++ ; } return charCount ; } 
public boolean isValidOnSide ( net.minecraft.world.World worldIn , net.minecraft.util.math.BlockPos pos , net.minecraft.util.EnumFacing side ) { if ( ( side == ( net.minecraft.util.EnumFacing.UP ) ) || ( side == ( net.minecraft.util.EnumFacing.DOWN ) ) ) { return false ; } return ( ( worldIn . getBlockState ( pos . offset ( side . getOpposite () ) ) . getBlock () ) == ( net.minecraft.init.Blocks.LOG ) ) || ( ( worldIn . getBlockState ( pos . offset ( side . getOpposite () ) ) ) == ( net.minecraft.init.Blocks.LOG2 ) ) ; } 
synchronized long getEventCount () { long numberRows = 0 ; try { android.database.sqlite.SQLiteDatabase db = getReadableDatabase () ; java.lang.String query = "SELECT COUNT(*) FROM " + ( com.amplitude.api.DatabaseHelper.EVENT_TABLE_NAME ) ; android.database.sqlite.SQLiteStatement statement = db . compileStatement ( query ) ; numberRows = statement . simpleQueryForLong () ; } catch ( android.database.sqlite.SQLiteException e ) { android.util.Log . e ( com.amplitude.api.DatabaseHelper.TAG , "getNumberRows failed" , e ) ; } finally { close () ; } return numberRows ; } 
@ java.lang.Override public void run () { while ( com.whippy.sponge.whipconomy.cache.ConfigurationLoader . hasAuctions () ) { com.whippy.sponge.whipconomy.orchestrator.Auctioneer auctioneer = com.whippy.sponge.whipconomy.beans.StaticsHandler . getAuctioneer () ; auctioneer . getAuctions () ; if ( ( auctioneer . getAuctions () . size () ) > 0 ) { auctioneer . setCurrentAuction ( auctioneer . getAuctions () . remove ( 0 ) ) ; auctioneer . getCurrentAuction () . run () ; } } } 
private org.eclipse.gef.palette.PaletteContainer createDataMapper1Group () { org.eclipse.gef.palette.PaletteDrawer paletteContainer = new org.eclipse.gef.palette.PaletteDrawer ( "Operators" ) ; paletteContainer . setId ( "createDataMapper1Group" ) ; paletteContainer . add ( createDataMapperLink1CreationTool () ) ; paletteContainer . add ( createConcat3CreationTool () ) ; paletteContainer . add ( createSplit4CreationTool () ) ; paletteContainer . add ( createConstant5CreationTool () ) ; paletteContainer . add ( createLowerCase6CreationTool () ) ; paletteContainer . add ( createContains7CreationTool () ) ; paletteContainer . add ( createUpperCase8CreationTool () ) ; paletteContainer . setInitialState ( org.wso2.developerstudio.datamapper.diagram.part.DataMapperPaletteFactory.INITIAL_STATE_CLOSED ) ; return paletteContainer ; } 
private void close () { try { java.lang.System.out . println ( ( ( "closing connect:" + ( id ) ) + "..." ) ) ; this . socket . close () ; } catch ( java.lang.Exception e ) { java.lang.System.out . print ( ( ( ( "close connect:" + ( id ) ) + " failed, " ) + e ) ) ; } } 
private float computeAverageValue ( final short [] data , final int index ) { float average = 0 ; for ( int j = 0 ; j < ( mNumberDataForAverage ) ; j ++ ) { average += ( data [ ( ( index * ( mNumberDataForAverage ) ) + j ) ] ) / ( ( float ) ( ( java.lang.Short.MAX_VALUE ) / 2 ) ) ; } return average / ( mNumberDataForAverage ) ; } 
private java.util.Map < java.lang.String , org.cloudfoundry.identity.uaa.provider.saml.idp.SamlServiceProviderHolder > getOrCreateSamlServiceProviderMapForZone ( org.cloudfoundry.identity.uaa.zone.IdentityZone zone ) { java.util.Map < java.lang.String , org.cloudfoundry.identity.uaa.provider.saml.idp.SamlServiceProviderHolder > serviceProviders = zoneServiceProviders . get ( zone ) ; if ( serviceProviders == null ) { synchronized ( zoneServiceProviders ) { serviceProviders = zoneServiceProviders . get ( zone ) ; if ( serviceProviders == null ) { serviceProviders = new java.util.HashMap <> () ; zoneServiceProviders . put ( org.cloudfoundry.identity.uaa.zone.IdentityZoneHolder . get () , serviceProviders ) ; } } } return serviceProviders ; } 
protected int getDay ( java.awt.Point point ) { int row = tblCalendar . rowAtPoint ( point ) ; int col = tblCalendar . columnAtPoint ( point ) ; java.lang.Object valueAt = mtblCalendar . getValueAt ( row , col ) ; if ( valueAt instanceof de.nmichael.efa.calendar.CalendarString ) { de.nmichael.efa.calendar.CalendarString value = ( ( de.nmichael.efa.calendar.CalendarString ) ( valueAt ) ) ; return value . getDay () ; } return 0 ; } 
@ java.lang.Override public void enact ( sx.blah.discord.handle.impl.events.guild.channel.message.MessageReceivedEvent messageReceivedEvent , java.lang.String args ) { sx.blah.discord.handle.obj.IChannel channel = messageReceivedEvent . getChannel () ; if ( ! ( sessionOrchestrator . hasSession ( channel ) ) ) { net.tonbot.common.BotUtils . sendMessage ( channel , "You need to be playing a story first." ) ; return; } try { int slotNumber = java.lang.Integer . parseInt ( args ) ; sessionOrchestrator . switchSave ( channel , slotNumber ) ; } catch ( java.lang.NumberFormatException e ) { net.tonbot.common.BotUtils . sendMessage ( channel , ( "You need to enter a number from 0 to " + ( ( saveManager . getMaxSlots () ) - 1 ) ) ) ; return; } } 
public static java.lang.String getCharAfterOffset ( java.lang.CharSequence text , int offset ) { if ( ( ( text . length () ) < ( offset + 2 ) ) || ( offset == 0 ) ) return "" ; if ( offset > 0 ) { return text . subSequence ( ( offset + 1 ) , ( offset + 2 ) ) . toString () ; } return "" ; } 
protected boolean checkValidPoint ( Engine.Globals.GridPoint point ) { return ( ( ( ( point.row ) > 0 ) && ( ( point.row ) < ( mSize ) ) ) && ( ( point.column ) > 0 ) ) && ( ( point.column ) < ( mSize ) ) ; } 
@ java.lang.Override protected com.cvte.util.http.Response < java.lang.String > parseNetworkResponse ( com.cvte.util.http.NetworkResponse response ) { java.lang.String parsed ; try { parsed = new java.lang.String ( response.data , com.cvte.util.http.HttpHeaderParser . parseCharset ( response.headers ) ) ; } catch ( java.io.UnsupportedEncodingException e ) { parsed = new java.lang.String ( response.data ) ; } return com.cvte.util.http.Response . success ( parsed , com.cvte.util.http.HttpHeaderParser . parseCacheHeaders ( response ) ) ; } 
public void stepRE () { try { long time = mediaPlayerComponent . getMediaPlayer () . getTime () ; long newTime = time - ( synergyviewcore.media.model.VLCMedia.OFFSET ) ; if ( newTime < 0 ) { newTime = 0 ; } mediaPlayerComponent . getMediaPlayer () . setTime ( time ) ; firePropertyChange ( IMedia.PROP_TIME , time , newTime ) ; } catch ( java.lang.Exception ex ) { org.eclipse.core.runtime.IStatus status = new org.eclipse.core.runtime.Status ( org.eclipse.core.runtime.IStatus.ERROR , synergyviewcore.Activator.PLUGIN_ID , ex . getMessage () , ex ) ; logger . log ( status ) ; } } 
@ java.lang.Override public void run () { games.strategy.util.Tuple < games.strategy.net.GUID , games.strategy.engine.lobby.server.GameDescription > toReplace = findGame ( gameId ) ; int replaceIndex = gameList . indexOf ( toReplace ) ; gameList . set ( replaceIndex , new games.strategy.util.Tuple < games.strategy.net.GUID , games.strategy.engine.lobby.server.GameDescription > ( gameId , description ) ) ; fireTableRowsUpdated ( replaceIndex , replaceIndex ) ; } 
public void done ( byte [] data , com.parse.ParseException e ) { if ( e == null ) { android.util.Log . w ( "Shachar" , ( "Utils.setAvatar - 4. senderID == " + senderID ) ) ; android.graphics.Bitmap bitmap = reli.reliapp.co.il.reli.utils.Utils . getRoundedCornerBitmap ( android.graphics.BitmapFactory . decodeByteArray ( data , 0 , data.length ) , 25 ) ; MainActivity.usersAvatars . put ( senderID , bitmap ) ; iv . setImageBitmap ( bitmap ) ; } } 
public synchronized com.shuffle.p2p.WebsocketServerChannel.WebsocketPeer.WebsocketSession putOpenSession ( java.net.InetAddress identity , javax.websocket.Session session ) { com.shuffle.p2p.WebsocketServerChannel.WebsocketPeer.WebsocketSession openSession = openSessions . get ( identity ) ; if ( openSession != null ) { if ( openSession.session . isOpen () ) { return null ; } openSessions . remove ( identity ) ; } com.shuffle.p2p.WebsocketServerChannel.WebsocketPeer peer ; try { peer = peers . get ( identity ) . setSession ( session ) ; } catch ( java.io.IOException e ) { return null ; } return openSessions . put ( identity , peer.currentSession ) ; } 
private static org.mule.config.ConfigResource createConfigResource ( final com.eucalyptus.component.ComponentId componentId , final java.lang.String outString ) { final java.io.ByteArrayInputStream bis = new java.io.ByteArrayInputStream ( outString . getBytes () ) ; com.eucalyptus.records.Logs . extreme () . trace ( "===================================" ) ; com.eucalyptus.records.Logs . extreme () . trace ( outString ) ; com.eucalyptus.records.Logs . extreme () . trace ( "===================================" ) ; final org.mule.config.ConfigResource configRsc = new org.mule.config.ConfigResource ( componentId . getServiceModelFileName () , bis ) ; return configRsc ; } 
private android.view.View loadViewInternal ( com.angcyo.uiview.view.IView iView , com.angcyo.uiview.container.UIParam uiParam ) { final android.view.View view = iView . inflateContentView ( mLayoutActivity , this , this , android.view.LayoutInflater . from ( mLayoutActivity ) ) ; android.view.View rawView ; if ( ( this ) == view ) { rawView = getChildAt ( ( ( getChildCount () ) - 1 ) ) ; } else { rawView = view ; } iView . onViewCreate ( view ) ; iView . onViewCreate ( view , uiParam ) ; return rawView ; } 
private void notifyTorch ( boolean inUse ) { android.os.IBinder b = android.os.ServiceManager . getService ( Context.TORCH_SERVICE ) ; android.hardware.ITorchService torchService = ITorchService.Stub . asInterface ( b ) ; try { if ( inUse ) { torchService . onCameraOpened ( mTorchToken , mCameraId ) ; } else { torchService . onCameraClosed ( mTorchToken , mCameraId ) ; } } catch ( android.os.RemoteException e ) {} } 
private void insertSort ( int begin , int end ) { for ( int runner = 1 ; runner < ( subArray.length ) ; runner ++ ) { for ( int switcher = runner ; switcher > 0 ; switcher -- ) { if ( ( subArray [ switcher ] ) < ( subArray [ ( switcher - 1 ) ] ) ) { swap ( switcher , ( switcher - 1 ) ) ; } } } } 
private void syncModel () { if ( ( getSwlat () ) == 37.41802693231111 ) { initBounds () ; } if ( ( _model ) != null ) onMapDataChange ( new org.zkoss.gmaps.event.MapDataEvent ( _model , org.zkoss.gmaps.event.MapDataEvent.BOUNDS_CHANGED , _model . getItemsIn ( getSwlat () , getSwlng () , getNelat () , getNelng () , getLat () , getLng () , _zoom ) ) ) ; } 
public utils.FeatureVector createLabelFeatures ( parser.DependencyInstance inst , parser.DependencyArcList arcLis , int [] heads , int mod , int type ) { utils.FeatureVector fv = new utils.FeatureVector ( numLabeledArcFeats ) ; if ( ! ( options.learnLabel ) ) return fv ; type = type + 1 ; int head = heads [ mod ] ; fv . addEntries ( createLabeledArcFeatures ( inst , head , mod , ( type + 1 ) ) ) ; return fv ; } 
@ java.lang.Override public void execute ( net.minecraft.server.MinecraftServer server , net.minecraft.command.ICommandSender sender , java.lang.String [] args ) throws net.minecraft.command.CommandException { final de.longor.talecraft.client.ClientRenderer.VisualMode mode = de.longor.talecraft.client.ClientRenderer.VisualMode . valueOf ( args [ 0 ] . toUpperCase () ) ; de.longor.talecraft.proxy.ClientProxy . shedule ( new java.lang.Runnable () { @ java.lang.Override public void run () { ClientProxy.proxy . getRenderer () . setVisualizationMode ( mode ) ; } } ) ; } 
public com.fasterxml.jackson.databind.JsonNode findPathwaysByXref ( java.lang.String id , java.lang.String code ) { java.lang.String wikiPathwaysResponse = uk.ac.ebi.metabolights.webservice.client.WikipathwaysWsClient . excuteRequest ( getPathwaysUrlByXref ( id , code ) , null , this . GET ) ; com.fasterxml.jackson.databind.ObjectMapper objectMapper = new com.fasterxml.jackson.databind.ObjectMapper () ; com.fasterxml.jackson.databind.JsonNode rootNode = null ; try { rootNode = objectMapper . readTree ( wikiPathwaysResponse ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } com.fasterxml.jackson.databind.JsonNode result = rootNode . path ( "result" ) ; return result ; } 
public void disconnect () { if ( ! ( isInitialized ) ) { return; } try { cdoView . close () ; de.cooperateproject.cdo.util.connection.CDOConnectionManager . getInstance () . releaseSession ( cdoSession ) ; unsubscribe () ; topicSession . close () ; de.cooperateproject.ui.focus.connection.SubscriberManager.instance = null ; } catch ( javax.jms.JMSException e ) { de.cooperateproject.ui.focus.connection.SubscriberManager.logger . error ( "Couldn't close the topicSession." , e ) ; } } 
@ java.lang.Override protected void refreshFragment () { android.support.v4.app.FragmentManager fm = getSupportFragmentManager () ; mFragment = ( ( com.romanpulov.violetnote.view.BasicNoteCheckedItemFragment ) ( fm . findFragmentById ( getFragmentContainerId () ) ) ) ; if ( ( mFragment ) == null ) { mFragment = com.romanpulov.violetnote.view.BasicNoteCheckedItemFragment . newInstance ( mBasicNoteData ) ; fm . beginTransaction () . replace ( getFragmentContainerId () , mFragment ) . commit () ; } else { mFragment . refreshList ( new com.romanpulov.violetnote.db.DBNoteManager ( this ) ) ; } } 
@ java.lang.Override public java.util.List < java.lang.String > visit ( IC.lir.CallStatement callStatement , java.util.List < java.lang.String > targetRegisters ) throws java.lang.Exception { java.util.List < java.lang.String > callStatementBlock = new java.util.LinkedList < java.lang.String > () ; IC.lir.Call call = callStatement . getCall () ; java.util.List < java.lang.String > callStatementTR = call . accept ( this , null ) ; callStatementBlock . addAll ( callStatementTR ) ; return callStatementBlock ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/tarefa/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.DELETE ) public org.springframework.http.ResponseEntity < br.edu.ifsp.dsw.model.Tarefa > removerTarefa ( @ org.springframework.web.bind.annotation.PathVariable ( value = "id" ) java.lang.Integer id ) { java.lang.System.out . println ( ( "Buscando e removendo a tarefa de id " + id ) ) ; br.edu.ifsp.dsw.model.Tarefa tarefa = tarefaService . buscarPorId ( java.lang.Long . valueOf ( id ) ) ; if ( tarefa == null ) { java.lang.System.out . println ( ( ( "Não é possivel deletar a tarefa de id: " + id ) + " - a mesma não foi encontrada.." ) ) ; return new org.springframework.http.ResponseEntity < br.edu.ifsp.dsw.model.Tarefa > ( org.springframework.http.HttpStatus.NOT_FOUND ) ; } tarefaService . removerTarefa ( java.lang.Long . valueOf ( id ) ) ; return new org.springframework.http.ResponseEntity < br.edu.ifsp.dsw.model.Tarefa > ( org.springframework.http.HttpStatus.NO_CONTENT ) ; } 
private java.lang.String parseCode ( android.content.Intent data ) { android.net.Uri uri = data . getData () ; if ( ( uri != null ) && ( uri . toString () . startsWith ( SocialVariable.MERVID_CALLBACK ) ) ) { java.lang.String code = uri . getQueryParameter ( "code" ) ; if ( ( code != null ) && ( ! ( "" . equalsIgnoreCase ( code ) ) ) ) { android.util.Log . d ( "Intruder" , code ) ; return code ; } } return "null" ; } 
@ java.lang.Override public boolean execute () { _ble . writePwm ( _address , pwm , new nl.dobots.bluenet.ble.base.callbacks.IStatusCallback () { @ java.lang.Override public void onSuccess () { android.util.Log . i ( nl.dobots.crownstone.gui.control.ControlMainFragment.TAG , "set pwm success" ) ; if ( pwm > 0 ) { updateLightBulb ( true ) ; } else { updateLightBulb ( false ) ; } done () ; } @ java.lang.Override public void onError ( int error ) { android.util.Log . i ( nl.dobots.crownstone.gui.control.ControlMainFragment.TAG , ( "set pwm failed: " + error ) ) ; done () ; } } ) ; return true ; } 
public static java.util.List < co.sepulveda.pongee.servlet.resources.ResourceEntity > parseObjects ( java.util.List < java.lang.Object > controllers ) { java.util.List < co.sepulveda.pongee.servlet.resources.ResourceEntity > allResources = new java.util.ArrayList () ; for ( java.lang.Object controller : controllers ) { java.util.List < co.sepulveda.pongee.servlet.resources.ResourceEntity > resources = co.sepulveda.pongee.servlet.resources.parser.ResourcesParser . getResources ( controller ) ; co.sepulveda.pongee.servlet.resources.parser.ResourcesParser . addResources ( allResources , resources ) ; } return allResources ; } 
public int read ( byte [] b , int off , int len ) throws java.io.IOException { int end = len + off ; int get = 0 ; int total = 0 ; for ( int i = off ; i < end ; i += get ) { get = raf . read ( b , i , ( end - i ) ) ; if ( get > 0 ) total += get ; } return total ; } 
@ java.lang.Override public void widgetSelected ( org.eclipse.swt.events.SelectionEvent arg0 ) { java.lang.String command = ( ( ( ( ( ( ( ( "save_properties " + ( setMaxThreads . getText () ) ) + " " ) + ( setAlgorithm . getText () ) ) + " " ) + ( setSearchAlgorithm . getText () ) ) + " " ) + ( setMaxSize . getText () ) ) + " " ) + ( setView . getText () ) ; setChanged () ; notifyObservers ( command ) ; shellProperties . close () ; displayProperties . close () ; } 
@ java.lang.Override protected void onResume () { super . onResume () ; android.util.Log . d ( "bag" , "url1" ) ; rand = java.util.UUID . randomUUID () . toString () ; liverand = "user-" + ( rand ) ; com.tom.cococar.StopTask stop = new com.tom.cococar.StopTask () ; stop . executeOnExecutor ( com.tom.cococar.MapsActivity.THREAD_POOL_EXECUTOR , liverand ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/updateSeatsFormDisplay" , method = { org.springframework.web.bind.annotation.RequestMethod.GET } ) public java.lang.String timeData ( org.springframework.ui.Model model ) { java.util.List < com.nttdata.pune.training.bookmytable.model.beans.Seats > timeSlotData = operationService . selectTimeSlots () ; java.lang.String dateTime = timeSlotData . get ( 0 ) . getBooking_date () ; java.lang.String date ; date = dateTime . substring ( 0 , 10 ) ; com.nttdata.pune.training.bookmytable.model.beans.Seats seat = new com.nttdata.pune.training.bookmytable.model.beans.Seats () ; model . addAttribute ( "date" , date ) ; return "admins/updateSeatsForm" ; } 
private static com.google.common.base.Optional < org.apache.mesos.Protos.Attribute > getAttribute ( java.util.List < org.apache.mesos.Protos.Attribute > attributes , java.lang.String name ) { for ( org.apache.mesos.Protos.Attribute attribute : attributes ) { if ( ( attribute . getName () ) == name ) { return com.google.common.base.Optional . of ( attribute ) ; } } return com.google.common.base.Optional . fromNullable ( null ) ; } 
@ java.lang.Override public void eliminar ( java.lang.String clave ) { implementaciones.DiccionarioMultiple.NodoDic aux = priClave ; if ( aux.clave . equals ( clave ) ) { aux = aux.sig ; priClave = aux ; } else { while ( ! ( aux.sig.clave . equals ( clave ) ) ) { aux = aux.sig ; } aux.sig = aux.sig.sig ; } } 
public java.util.List < com.mycompany.testverktygbackend.models.User > getUsers () { org.hibernate.Session session = com.mycompany.testverktygbackend.repository.NewHibernateUtil . getSession () ; session . beginTransaction () ; java.util.List < com.mycompany.testverktygbackend.models.User > users = session . createCriteria ( com.mycompany.testverktygbackend.models.User . class ) . list () ; for ( com.mycompany.testverktygbackend.models.User user : users ) { user . getCourses () . size () ; user . getResponse () . size () ; java.lang.System.out . println ( ( "user.getResponse().size() *** " + ( user . getResponse () . size () ) ) ) ; } session . close () ; return users ; } 
private void setUpMapIfNeeded () { if ( ( mMap ) == null ) { mMap = ( ( com.google.android.gms.maps.SupportMapFragment ) ( getSupportFragmentManager () . findFragmentById ( R.id.map ) ) ) . getMap () ; if ( ( mMap ) != null ) { setUpMap () ; } } } 
public void run () { if ( ( ( java.lang.System . currentTimeMillis () ) - ( startTime ) ) > ( checkTime ) ) { client . setStatus ( false ) ; log . info ( "Moniter reconnect....... " ) ; client . reConnect () ; } client . sentPing () ; log . info ( "Moniter ping data sent.... " ) ; } 
@ java.lang.Override public void queueInputBuffer ( com.google.android.exoplayer2.text.SubtitleInputBuffer inputBuffer ) throws com.google.android.exoplayer2.text.SubtitleDecoderException { com.google.android.exoplayer2.util.Assertions . checkArgument ( ( inputBuffer != null ) ) ; com.google.android.exoplayer2.util.Assertions . checkArgument ( ( inputBuffer == ( dequeuedInputBuffer ) ) ) ; if ( inputBuffer . isDecodeOnly () ) { releaseInputBuffer ( inputBuffer ) ; } else { queuedInputBuffers . add ( inputBuffer ) ; } dequeuedInputBuffer = null ; } 
@ java.lang.Override public void run () { try { java.lang.String osName = java.lang.System . getProperty ( "os.name" ) . toLowerCase () ; if ( osName . contains ( "mac" ) ) { processEventsMac () ; } else { processEventsWinLin () ; } } catch ( java.lang.Exception ex ) { java.util.logging.Logger . getLogger ( nl.hyranasoftware.javagmr.threads.WatchDirectory . class . getName () ) . log ( java.util.logging.Level.SEVERE , null , ex ) ; } } 
public static void dataTest () { pt.uminho.sysbio.biosynthframework.kbase.KBaseSbmlImporter.DATA_EXPORT_PATH = sbmltools.test.LocalTest.a ; pt.uminho.sysbio.biosynthframework.kbase.KBaseSbmlImporter.CURATION_DATA = sbmltools.test.LocalTest.b ; pt.uminho.sysbio.biosynthframework.kbase.KBaseSbmlImporter.LOCAL_CACHE = "/tmp/argonne" ; try { pt.uminho.sysbio.biosynthframework.kbase.KBaseSbmlImporter sbmlTools = new pt.uminho.sysbio.biosynthframework.kbase.KBaseSbmlImporter ( null , null ) ; sbmltools.SbmlImportParams params = new sbmltools.SbmlImportParams () . withAssemblyInputRef ( "111" ) . withMinLength ( 10L ) . withUrl ( "url" ) ; pt.uminho.sysbio.biosynthframework.kbase.KBaseSbmlImporter.ImportModelResult result = sbmlTools . debugThings ( params ) ; java.lang.System.out . println ( result.message ) ; } catch ( us.kbase.common.service.UnauthorizedException | java.io.IOException e ) { e . printStackTrace () ; } } 
public org.unidal.dal.jdbc.test.data.entity.DatabaseModel dump ( org.unidal.dal.jdbc.test.data.entity.DatabaseModel base , java.lang.String ds , java.lang.String . . . tables ) throws org.unidal.dal.jdbc.DalException { org.unidal.dal.jdbc.test.data.entity.DatabaseModel model = new org.unidal.dal.jdbc.test.data.entity.DatabaseModel () ; for ( java.lang.String table : tables ) { java.util.List < org.unidal.dal.jdbc.raw.RawDataObject > rowset = m_dao . executeQuery ( ds , java.lang.String . format ( "select * from `%s`" , table ) ) ; org.unidal.dal.jdbc.test.DatabaseDumper.TableBuilder builder = new org.unidal.dal.jdbc.test.DatabaseDumper.TableBuilder ( table , rowset ) ; model . accept ( builder ) ; } base . accept ( new org.unidal.dal.jdbc.test.DatabaseDumper.DeltaRemoval ( model , ds ) ) ; return model ; } 
public boolean spellInHand ( Parser p ) { DBCard c = null ; for ( int i = 0 ; i < 11 ; i ++ ) { if ( ( p.myHand [ i ] ) != null ) { try { c = cDB.cards . get ( p.myHand [ i ] . name ) ; } catch ( java.lang.Exception e ) { continue; } if ( c != null ) if ( ( c.spell ) == 1 ) return true ; } } return false ; } 
public static boolean IsConnected ( mck.MatlabEngine eng , java.lang.String printOption ) throws java.lang.Exception { boolean bIsConnected ; double con = eng . getVariable ( "Client.IsConnected" ) ; if ( con == 1.0 ) { bIsConnected = true ; if ( printOption == "p" ) { java.lang.System.out . println ( "CONNECTED" ) ; } } else { bIsConnected = false ; if ( printOption == "p" ) { java.lang.System.out . println ( "NOT CONNECTED" ) ; } } return bIsConnected ; } 
public static uk.co.senab.photoview.PhotoMarker createNewMarker ( android.content.Context context , android.widget.RelativeLayout wrapper , float x , float y , int resId ) { return new uk.co.senab.photoview.PhotoMarker ( edu.fiu.mpact.reuproject.Utils . createNewMarker ( context , wrapper , resId ) , x , y , ( ( context . getResources () . getInteger ( R.integer.map_marker_size ) ) * 2 ) ) ; } 
private org.epsg.openconfigurator.model.PowerlinkRootNode getNodelist () { org.eclipse.ui.IViewPart viewPart = org.eclipse.ui.PlatformUI . getWorkbench () . getActiveWorkbenchWindow () . getActivePage () . findView ( IndustrialNetworkView.ID ) ; if ( viewPart instanceof org.epsg.openconfigurator.views.IndustrialNetworkView ) { org.epsg.openconfigurator.views.IndustrialNetworkView industrialView = ( ( org.epsg.openconfigurator.views.IndustrialNetworkView ) ( viewPart ) ) ; org.epsg.openconfigurator.model.PowerlinkRootNode nodeList = industrialView . getNodeList () ; return nodeList ; } return null ; } 
public void unregister ( java.lang.Object object ) { if ( receiverMap . containsKey ( object ) ) { java.util.Map < java.lang.String , android.content.BroadcastReceiver > map = receiverMap . get ( object ) ; for ( android.content.BroadcastReceiver receiver : map . values () ) { try { com.liangmayong.airing.Airing . getApplication () . unregisterReceiver ( receiver ) ; } catch ( java.lang.Exception e ) {} } receiverMap . remove ( object ) ; } } 
@ org.junit.Test public void checksIfBrowserIsStillAlive () { com.codeborne.selenide.Configuration.reopenBrowserOnFail = true ; org.openqa.selenium.WebDriver webdriver = mock ( org.openqa.selenium.WebDriver . class ) ; container.THREAD_WEB_DRIVER . put ( java.lang.Thread . currentThread () . getId () , webdriver ) ; org.junit.Assert . assertSame ( webdriver , container . getAndCheckWebDriver () ) ; verify ( container ) . isBrowserStillOpen ( any ( org.openqa.selenium.WebDriver . class ) ) ; } 
public static void main ( java.lang.String [] args ) { Apelsinas apelsinas = new Apelsinas () ; java.util.Scanner reader = new java.util.Scanner ( java.lang.System.in ) ; java.lang.System.out . println ( "Įveskite apelsino skersmenį: " ) ; apelsinas . setA ( reader . nextDouble () ) ; java.lang.System.out . println ( "Įveskite apelsino žievelės storį: " ) ; apelsinas . setD ( reader . nextDouble () ) ; apelsinas . getTuris () ; java.lang.System.out . println ( apelsinas . getTuris () ) ; } 
public static java.lang.String getObjective () { java.lang.String o ; int pos ; while ( true ) { pos = ( ( int ) ( 1 + ( ( java.lang.Math . random () ) * 14 ) ) ) ; if ( ( war.Objective.objectives . get ( pos ) ) != null ) { o = war.Objective.objectives . get ( pos ) ; war.Objective.objectives . remove ( pos ) ; break; } } return o ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/json/experiments/{experimentAccession}" , params = { "type=MICROARRAY_ANY" } ) public java.lang.String showGeneProfilesData ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "preferences" ) @ javax.validation.Valid uk.ac.ebi.atlas.web.MicroarrayRequestPreferences preferences , @ org.springframework.web.bind.annotation.PathVariable java.lang.String experimentAccession , @ org.springframework.web.bind.annotation.RequestParam ( required = false ) java.lang.String accessKey , org.springframework.validation.BindingResult result , org.springframework.ui.Model model , javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) { super . populateModelWithHeatmapData ( ( ( uk.ac.ebi.atlas.model.differential.microarray.MicroarrayExperiment ) ( experimentTrader . getExperiment ( experimentAccession , accessKey ) ) ) , preferences , result , model , request ) ; response . setContentType ( MediaType.APPLICATION_JSON_VALUE ) ; return "heatmap-data" ; } 
@ java.lang.Override public java.lang.String getActionURL ( javax.faces.context.FacesContext context , java.lang.String viewId ) { java.lang.String url = ( form . isUseRequestURI () ) ? org.omnifaces.util.FacesLocal . getRequestURI ( context ) : super . getActionURL ( context , viewId ) ; java.lang.String queryString = org.omnifaces.util.Servlets . toQueryString ( form . collectParams ( context ) ) ; return org.omnifaces.util.Utils . isEmpty ( queryString ) ? url : ( url + ( url . contains ( "?" ) ? "&" : "?" ) ) + queryString ; } 
public float getCorrection ( float value ) { float error = ( targetValue ) - value ; integral += integral ; derivative -= lastError ; float correction = ( ( error * ( kP ) ) + ( ( integral ) * ( kI ) ) ) + ( ( derivative ) * ( kD ) ) ; lastError = error ; return correction ; } 
@ org.junit.Before public void setUp ( ) throws java.io.IOException { java.nio.file.Path workingPath = java.nio.file.Paths . get ( workingDirectory ) ; java.nio.file.Files . createDirectories ( workingPath ) ; java.nio.file.Files . walk ( workingPath , java.nio.file.FileVisitOption.FOLLOW_LINKS ) . map ( java.nio.file.Path : : toFile ) . forEach ( java.io.File : : delete ) ; org.springframework.test.util.ReflectionTestUtils . setField ( resourceRepository , "WORKING_DIRECTORY" , workingPath ) ; } 
@ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public void onWorldTick ( net.minecraftforge.fml.common.gameevent.TickEvent.WorldTickEvent e ) { if ( ! ( e.world.isRemote ) ) { e.world.profiler . startSection ( "network node ticking" ) ; if ( ( e.phase ) == ( TickEvent.Phase.END ) ) { for ( com.raoulvdberge.refinedstorage.api.network.node.INetworkNode node : com.raoulvdberge.refinedstorage.apiimpl.API . instance () . getNetworkNodeManager ( e.world ) . all () ) { node . update () ; } } e.world.profiler . endSection () ; } } 
public boolean deposit ( float amount ) { if ( ( ( getState () ) != ( State.CLOSED ) ) && ( amount > 0.0F ) ) { balance = ( balance ) + amount ; if ( ( balance ) >= 0.0F ) { setState ( State.OPEN ) ; } return true ; } return false ; } 
public void runGames ( int numberOfGames , boolean commandLine ) { Statistics stats = new Statistics () ; for ( int i = 0 ; i < numberOfGames ; i ++ ) { stats . updateStatistics ( doors ) ; oneGame () ; } if ( commandLine == true ) { java.lang.System.out . println ( stats . toString () ) ; } else { javax.swing.JOptionPane . showMessageDialog ( null , stats . toString () , "Enter a valid input: " , javax.swing.JOptionPane.INFORMATION_MESSAGE ) ; } java.lang.System.out . println ( stats . toString () ) ; } 
public static void main ( java.lang.String [] args ) { java.lang.String treeLocation = null ; java.lang.String baseFolder = null ; java.lang.String csv = null ; if ( ( args.length ) > 3 ) { treeLocation = args [ 0 ] ; baseFolder = args [ 1 ] ; csv = args [ 2 ] ; } else { java.lang.System.err . println ( "java -jar CreateCsv.jar phylo.tree baseFolder csvFile" ) ; java.lang.System . exit ( 0 ) ; } be.kuleuven.rega.phylogeotool.tools.AddCsvInfo addCsvInfo = new be.kuleuven.rega.phylogeotool.tools.AddCsvInfo () ; addCsvInfo . run ( treeLocation , baseFolder , csv ) ; } 
protected void processWindowEvent ( java.awt.event.WindowEvent e ) { if ( ( e . getID () ) == ( java.awt.event.WindowEvent.WINDOW_CLOSING ) ) { if ( net.sf.memoranda.util.Configuration . get ( "ON_CLOSE" ) . equals ( "exit" ) ) doExit () ; else doMinimize () ; } else if ( ( e . getID () ) == ( java.awt.event.WindowEvent.WINDOW_ICONIFIED ) ) { super . processWindowEvent ( new java.awt.event.WindowEvent ( this , java.awt.event.WindowEvent.WINDOW_ICONIFIED ) ) ; } else super . processWindowEvent ( e ) ; } 
protected void onPostExecute ( java.lang.Integer result ) { progress . setVisibility ( View.GONE ) ; mSwipeRefreshLayout . setRefreshing ( false ) ; if ( result == ( com.lucaszanella.sisgrad.MessagesFragment.GetMessages.OK ) ) { new com.lucaszanella.sisgrad.MessagesFragment.LoadNewMessage () . execute () ; new com.lucaszanella.sisgrad.MessagesFragment.LoadNewMessage () . execute () ; new com.lucaszanella.sisgrad.MessagesFragment.LoadNewAvatar () . execute () ; } else if ( result == ( com.lucaszanella.sisgrad.MessagesFragment.GetMessages.TIMEOUT ) ) {} } 
private void pause () { timePause = android.os.SystemClock . uptimeMillis () ; customHandler . removeCallbacks ( updateTimerThread ) ; shadow . setVisibility ( View.VISIBLE ) ; textRestart . setBackgroundResource ( R.drawable.text ) ; textResume . setBackgroundResource ( R.drawable.text ) ; game . setClickable ( false ) ; textPause . setClickable ( false ) ; btnYes . setClickable ( false ) ; btnNo . setClickable ( false ) ; } 
public void setLoadingState ( com.sonaive.v2ex.widget.LoadingStatus loadingState ) { if ( loadingState == ( LoadingStatus.FINISH ) ) { setLoading ( false ) ; setMoreDataToLoad ( true ) ; incrementPageIndex () ; } else if ( loadingState == ( LoadingStatus.NO_MORE_DATA ) ) { setLoading ( false ) ; setMoreDataToLoad ( false ) ; incrementPageIndex () ; } else { setLoading ( true ) ; setMoreDataToLoad ( false ) ; } } 
protected void ensureAuthorized ( app.models.Partner authenticatedPartner , java.lang.String path ) { if ( ( path . startsWith ( "/platform/statistics" ) ) && ( ! ( authenticatedPartner . getBoolean ( "can_view_statistics" ) ) ) ) { notAuthorized () ; } if ( ( path . startsWith ( "/platform/partners" ) ) && ( ! ( authenticatedPartner . getBoolean ( "can_manage_partners" ) ) ) ) { notAuthorized () ; } } 
public void gameLoop () { boolean loop = true ; while ( loop ) { draw . draw () ; mapCheck . checkPlayer ( draw . getMap () , draw . getHeight () , draw . getWidth () ) ; loop = mapCheck . getLoop () ; if ( loop ) { player . move () ; draw . addPMoveToBoard ( player . getX () , player . getY () ) ; } } } 
private int addingPoints () { int sum = ( ( ( ( ( ( ( ( ( ( ( ( ( addCheckEight ) + ( addCheckTwo ) ) + ( addCheckSeven ) ) + ( addCheckSix ) ) + ( addCheckFive ) ) + ( addCheckTen ) ) + ( addCheckThree ) ) + ( addCheckNine ) ) + ( addRadioEight ) ) + ( addRadioSeventyTwo ) ) + ( addRadioSeven ) ) + ( addRadioEighteen ) ) + ( addNumberOne ) ) + ( addNumberTwo ) ; return sum ; } 
private void defineMediaPlayerBehavior ( final javafx.scene.media.MediaPlayer player , final javafx.scene.control.Button button ) { player . setCycleCount ( ( myCycleCountIsIndefinite ? javafx.scene.media.MediaPlayer.INDEFINITE : 1 ) ) ; player . setOnPlaying ( ( ) - > playVideo ( player , button ) ) ; player . setOnPaused ( ( ) - > pauseVideo ( player , button ) ) ; player . setOnReady ( ( ) - > runOnReady ( player ) ) ; player . setOnEndOfMedia ( ( ) - > displayReplayOption ( player , button ) ) ; } 
public void pinMode ( int pin , grovepi.PinMode mode ) { byte [] buffer = new byte [] { ( ( byte ) ( grovepi.GrovePi.Command.PIN_MODE ) ) , ( ( byte ) ( pin ) ) , ( ( byte ) ( mode . getValue () ) ) , Constants.UNUSED } ; getDirectAccess () . write ( buffer ) ; java.lang.System.out . println ( ( ( ( ( ( ( "DEBUG: Mode for pin " + pin ) + " = " ) + mode ) + " (" ) + ( mode . getValue () ) ) + ")." ) ) ; } 
@ java.lang.Override public boolean onEditorAction ( android.widget.TextView v , int actionId , android.view.KeyEvent event ) { hideSoftKeyBoard () ; CUR_INPUT_COMMAND = processInput ( commandText . getText () . toString () ) ; if ( ( CUR_INPUT_COMMAND ) != null ) { if ( ( CUR_INPUT_COMMAND.inputMode ) == ( com.frrahat.quransimple.MainActivity.InputMode.MODE_VERSE ) ) { printAllAyahs () ; } else { printMatchedAyahs () ; } } return true ; } 
protected void constructContents ( int screenWidth , int screenHeight ) { java.util.ArrayList < cg.group4.rewards.collectibles.Collectible > sortedList = cSorter . sortCollectibles ( cCollection . getCollection () ) ; java.lang.System.out . println ( sortedList . size () ) ; for ( cg.group4.rewards.collectibles.Collectible c : sortedList ) { cContentTable . row () . height ( ( screenHeight / ( cItemsOnScreen ) ) ) . width ( screenWidth ) ; cContentTable . add ( cGameSkin . generateDefaultLabel ( java.lang.Double . toString ( c . getRarity () ) ) ) ; } } 
private static com.itextpdf.layout.property.UnitValue [] normalizeColumnWidths ( int numberOfColumns , boolean usePercents ) { com.itextpdf.layout.property.UnitValue [] normalized = new com.itextpdf.layout.property.UnitValue [ numberOfColumns ] ; for ( int i = 0 ; i < numberOfColumns ; i ++ ) { normalized [ i ] = ( usePercents ) ? com.itextpdf.layout.property.UnitValue . createPercentValue ( ( ( ( float ) ( 100 ) ) / numberOfColumns ) ) : com.itextpdf.layout.property.UnitValue . createPointValue ( ( - 1 ) ) ; } return normalized ; } 
public byte [] queryTypeSetter ( java.lang.String queryType ) { switch ( queryType ) { case "MX" : return new byte [] { 0 , 0 , 0 , 15 } ; case "NS" : return new byte [] { 0 , 0 , 0 , 2 } ; default: return new byte [] { 0 , 0 , 0 , 1 } ; } } 
@ org.junit.Before public void setup () { org.mockito.MockitoAnnotations . initMocks ( this ) ; sc = new java.util.Scanner ( java.lang.System.in ) ; display = new arduino.UserInterface () ; rfob = new arduino.ReadFromOutputBuffer ( odroid ) ; rst = new arduino.ReadSpeedAndTorque ( rfob ) ; readSpeed = new arduino.runReadSpeed ( display , rst ) ; input = new arduino.runInput ( display ) ; } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { switch ( item . getItemId () ) { case android.R.id.home : closeAndGoBack () ; return true ; case R.id.preferences_menu_id : startMyPreferenceActivity () ; break; case R.id.remove_account_menu_id : org.andstatus.app.util.DialogFactory . showYesCancelDialog ( getSupportFragmentManager () . findFragmentById ( R.id.fragmentOne ) , R.string.remove_account_dialog_title , R.string.remove_account_dialog_text , ActivityRequestCode.REMOVE_ACCOUNT ) ; default: break; } return super . onOptionsItemSelected ( item ) ; } 
@ java.lang.Override public void onTimeSet ( android.widget.TimePicker timePicker , int hour , int min ) { timeList . add ( ( ( ( ( " " + hour ) + ":" ) + ( min < 10 ? '0' : "" ) ) + min ) ) ; showOnScreen () ; } 
@ java.lang.Override public void execute ( net.contextfw.web.application.WebApplicationHandle handle , net.contextfw.web.application.scope.ScopedWebApplicationExecution execution ) { net.contextfw.web.application.scope.DefaultWebApplicationStorage.Holder holder = pages . get ( handle ) ; if ( holder != null ) { synchronized ( holder ) { execution . execute ( holder.application ) ; } } else { execution . execute ( null ) ; } } 
protected java.lang.Boolean execute ( java.lang.Object . . . args ) { try { org.apache.unomi.persistence.elasticsearch.ElasticSearchPersistenceServiceImpl.logger . info ( ( "Saving query : " + queryName ) ) ; client . prepareIndex ( indexName , ".percolator" , queryName ) . setSource ( query ) . setRefreshPolicy ( WriteRequest.RefreshPolicy.IMMEDIATE ) . execute () . actionGet () ; return true ; } catch ( java.lang.Exception e ) { org.apache.unomi.persistence.elasticsearch.ElasticSearchPersistenceServiceImpl.logger . error ( "Cannot save query" , e ) ; } return false ; } 
public boolean cancelAlarm ( int alarmPosition ) { android.content.Intent intent = new android.content.Intent ( mContext , com.moupress.app.alarm.AlarmReceiver . class ) ; android.app.PendingIntent pi = android.app.PendingIntent . getBroadcast ( mContext , alarmPosition , intent , 0 ) ; try { alarmMgr = ( ( android.app.AlarmManager ) ( mContext . getSystemService ( Activity.ALARM_SERVICE ) ) ) ; alarmMgr . cancel ( pi ) ; } catch ( java.lang.Exception e ) { return false ; } return true ; } 
private void send ( com.google.android.gms.wearable.PutDataRequest putDataRequest ) { if ( validateConnection () ) { android.util.Log . i ( edu.ucla.nesl.android.hrmonitor.DataMapClient.TAG , "Sending PutDataRequest..." ) ; Wearable.DataApi . putDataItem ( googleApiClient , putDataRequest ) . setResultCallback ( new com.google.android.gms.common.api.ResultCallback < com.google.android.gms.wearable.DataApi.DataItemResult > () { @ java.lang.Override public void onResult ( com.google.android.gms.wearable.DataApi.DataItemResult dataItemResult ) { android.util.Log . v ( edu.ucla.nesl.android.hrmonitor.DataMapClient.TAG , ( "Sending data message: " + ( dataItemResult . getStatus () . isSuccess () ) ) ) ; } } ) ; } else { android.util.Log . w ( edu.ucla.nesl.android.hrmonitor.DataMapClient.TAG , "Connection not valid" ) ; } } 
public main.unsolidwinner.controller.HashMap < java.lang.String , java.lang.Double > getNameAndPriceByGoodsID ( java.lang.Integer goodsID ) { main.unsolidwinner.controller.HashMap < java.lang.String , java.lang.Double > hashMap = new main.unsolidwinner.controller.HashMap () ; main.unsolidwinner.model.Goods goods = em . find ( main.unsolidwinner.model.Goods . class , goodsID ) ; hashMap . put ( goods . getName () , goods . getUnitPrice () ) ; return hashMap ; } 
@ org.junit.Test public void testWhenSaslNotAllowedNonSaslHeaderIsInvliad () { wireFormat . setAllowNonSaslConnections ( false ) ; org.apache.activemq.transport.amqp.AmqpHeader nonSaslHeader = new org.apache.activemq.transport.amqp.AmqpHeader () ; org.junit.Assert . assertFalse ( wireFormat . isHeaderValid ( nonSaslHeader ) ) ; org.apache.activemq.transport.amqp.AmqpHeader saslHeader = new org.apache.activemq.transport.amqp.AmqpHeader () ; saslHeader . setProtocolId ( 3 ) ; org.junit.Assert . assertTrue ( wireFormat . isHeaderValid ( saslHeader ) ) ; } 
private com.example.bogdan.proftime_map.markers.CustomMarker findMinDistance ( java.util.List < com.example.bogdan.proftime_map.markers.CustomMarker > markers ) { boolean first = true ; long min = 0 ; com.example.bogdan.proftime_map.markers.CustomMarker customMarker = null ; for ( com.example.bogdan.proftime_map.markers.CustomMarker marker : markers ) { if ( first ) { min = marker . getDistance () ; first = false ; } if ( min > ( marker . getDistance () ) ) { min = marker . getDistance () ; customMarker = marker ; } } return customMarker ; } 
@ myddl.controller.RequestMapping ( value = "/{userId}" , method = RequestMethod.POST ) @ myddl.controller.ResponseBody public java.lang.Object modifyUser ( @ myddl.controller.PathVariable ( value = "userId" ) java.lang.Long userId , @ myddl.controller.RequestParam ( value = "password" , required = false ) java.lang.String password , @ myddl.controller.RequestParam ( value = "userName" , required = false ) java.lang.String userName , @ myddl.controller.RequestParam ( value = "userImage" , required = false ) java.lang.String userImage , @ myddl.controller.RequestParam ( value = "userPhone" , required = false ) java.lang.String userPhone , @ myddl.controller.RequestParam ( value = "userEmail" , required = false ) java.lang.String userEmail , @ myddl.controller.RequestParam ( value = "mainScreenImage" , required = false ) java.lang.Integer mainScreenImage ) { userService . modifyUser ( new myddl.entity.UserPassword ( null , null , password ) , new myddl.entity.UserInfo ( userId , userName , userImage , userPhone , userEmail , mainScreenImage ) ) ; return myddl.returnobject.ReturnObject.EXECUTION_SUCCESS ; } 
@ javafx.fxml.FXML void btPreviousHandler ( javafx.event.ActionEvent event ) { if ( ( player ) == null ) return; if ( ( musicFinder . getPosition () ) >= 0 ) { player . pause () ; musicFinder . prevElement () ; player . start ( musicFinder . prevElement () ) ; player . play () ; } } 
private java.lang.String getProjectName ( java.lang.String pathname ) { if ( pathname == null ) { return "" ; } int index = pathname . indexOf ( java.io.File.separatorChar , 1 ) ; if ( index == ( - 1 ) ) { return "" ; } return pathname . substring ( 1 , index ) ; } 
public java.lang.String getExec ( java.lang.String cmd , java.awt.Color color ) { java.lang.String result = "" ; if ( ( diagramController ) != null ) { result = diagramController . execute ( cmd , color ) ; } else { delay () ; } if ( ( delay ) != 0 ) { diagram . redraw () ; try { java.lang.Thread . sleep ( delay ) ; } catch ( java.lang.InterruptedException e ) { java.lang.System.out . println ( e . getMessage () ) ; } } return result ; } 
public static void setMe ( com.dreamdigitizers.androidsoundcloudapi.models.Me pMe ) { if ( pMe != null ) { com.dreamdigitizers.androidsoundcloudapi.models.Me oldMe = com.dreamdigitizers.mysound.Share . getMe () ; com.dreamdigitizers.mysound.Share.bundle . putSerializable ( com.dreamdigitizers.mysound.Share.SHARE_KEY__MY_DATA , pMe ) ; for ( com.dreamdigitizers.mysound.Share.IOnDataChanged listener : com.dreamdigitizers.mysound.Share.listeners ) { listener . onMeChanged ( pMe , oldMe ) ; } } } 
@ org.greenrobot.eventbus.Subscribe ( threadMode = org.greenrobot.eventbus.ThreadMode.MAIN , sticky = true ) public void onMessageEvent ( ixigo.example.apple.ixigohack.eventBus.FirebaseEventBus.OnFirebaseEventAdded obj ) { if ( ( ( ( obj != null ) && ( ( obj . getData () ) != null ) ) && ( ( obj . getData () . getDayPos () ) == ( position ) ) ) && ( ixigo.example.apple.ixigohack.utils.AndroidUtils . compareString ( obj . getData () . getPlaceId () , placeId ) ) ) { if ( ( adapter ) != null ) { adapter . addData ( obj . getData () ) ; } } } 
@ java.lang.Override public boolean touchUp ( int screenX , int screenY , int pointer , int button ) { com.badlogic.gdx.math.Vector3 coordinates = manager . getScreen () . getCamera () . unproject ( new com.badlogic.gdx.math.Vector3 ( screenX , screenY , 0 ) ) ; stone . getBody () . setLinearVelocity ( velocity.x , velocity.y ) ; return super . touchUp ( screenX , screenY , pointer , button ) ; } 
private void setupVictoryCards ( int numberOfPlayers ) { int numOfCards = 12 ; if ( numberOfPlayers == 2 ) { numOfCards = 8 ; } supply . addToStack ( com.dominion.game.EstateCard . class , numOfCards ) ; supply . addToStack ( com.dominion.game.DuchyCard . class , numOfCards ) ; supply . addToStack ( com.dominion.game.ProvinceCard . class , numOfCards ) ; if ( bigCardsUsed ) { supply . addToStack ( com.dominion.game.ColonyCard . class , numOfCards ) ; } else { supply . addToStack ( com.dominion.game.ColonyCard . class , 0 ) ; } } 
private nu.nerd.tpcontrol.User getUser ( org.bukkit.entity.Player p ) { nu.nerd.tpcontrol.User u = user_cache . get ( p . getName () . toLowerCase () ) ; if ( u == null ) { u = new nu.nerd.tpcontrol.User ( this , p ) ; user_cache . put ( p . getName () . toLowerCase () , u ) ; } return u ; } 
protected void selectAllBarBtn () { if ( ( savedInstanceState ) != null ) { firstTimeLoading = savedInstanceState . getBoolean ( rs.ftn.pma.tourismobile.fragments.FIRST_TIME_LOADING ) ; } if ( firstTimeLoading ) { firstTimeLoading = false ; return; } java.util.List < java.lang.Integer > ids = new java.util.ArrayList <> () ; for ( rs.ftn.pma.tourismobile.model.Tag tag : tagsAdapter . getItems () ) { ids . add ( tag . getId () ) ; } selectionPreference . selectedItemIDs () . put ( android.text.TextUtils . join ( "," , ids ) ) ; tagsAdapter . notifyDataSetChanged () ; } 
@ java.lang.Override public void run () { for ( int i = 0 ; i < 50 ; i ++ ) { io.openio.sds.socket.PooledSocket sock = pool . lease () ; try { java.lang.Thread . sleep ( 10 ) ; sock . close () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; org.junit.Assert . fail ( e . getMessage () ) ; } } } 
protected java.lang.String [] doInBackground ( java.util.ArrayList < java.lang.String > . . . passing ) { java.lang.String [] result = null ; try { org.eyeseetea.malariacare.network.PushClient pushClient = new org.eyeseetea.malariacare.network.PushClient ( ( ( android.app.Activity ) ( getContext () ) ) ) ; result = pushClient . pullOrgUnitsCodes () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return result ; } 
private org.ricts.abstractmachine.components.compute.isa.OperandInfo getOperandInfo ( android.widget.RadioGroup instrGroup , org.ricts.abstractmachine.components.compute.core.ComputeCore mainCore , int index ) { android.widget.RadioButton button = ( ( android.widget.RadioButton ) ( instrGroup . findViewById ( instrGroup . getCheckedRadioButtonId () ) ) ) ; java.lang.String mneumonic = button . getText () . toString () ; if ( mneumonic . equals ( org.ricts.abstractmachine.ui.activity.DATA_MNEUMONIC ) ) { return mainCore . getDataOperandInfo () ; } else { org.ricts.abstractmachine.components.compute.isa.OperandInfo [] operandInfoArray = mainCore . getOperandInfoArray ( mneumonic ) ; return operandInfoArray [ index ] ; } } 
private void sendResolveHealthcareWorkerIdentifierRequest ( org.openhim.mediator.denormalization.ResolveHealthcareWorkerIdentifier msg ) { java.lang.String csdTemplate = ( ( ( ( ( ( ( "<csd:careServicesRequest xmlns=\'urn:ihe:iti:csd:2013\' xmlns:csd=\'urn:ihe:iti:csd:2013\'>\n" + ( ( "\t<function urn=\'urn:ihe:iti:csd:2014:stored-function:provider-search\'>\n" + "\t\t<requestParams>\n" ) + "\t\t\t<otherID code='" ) ) + ( msg . getIdentifier () ) ) + "' assigningAuthorityName='" ) + ( msg . getIdentifier () . getAssigningAuthority () . getAssigningAuthorityId () ) ) + "\'/>\n" ) + "\t\t</requestParams>\n" ) + "\t</function>\n" ) + "</csd:careServicesRequest>" ; sendCSDRequest ( csdTemplate , msg ) ; } 
private void populateListItems () { listItems = new java.util.ArrayList <> () ; if ( ( articles ) != null ) { for ( com.rocdev.guardianreader.models.Article article : articles ) { listItems . add ( article ) ; } } if ( hasMoreButton ) { android.view.View buttonView = inflater . inflate ( R.layout.more_button_list_item , null ) ; listItems . add ( buttonView ) ; } addNativeExpressAds () ; } 
@ java.lang.Override public nl.erwinvaneyk.communication.Server start ( int port ) throws nl.erwinvaneyk.communication.exceptions.PortAlreadyInUseException { try { registry = java.rmi.registry.LocateRegistry . createRegistry ( port ) ; } catch ( java.rmi.RemoteException e ) { try { java.lang.Thread . sleep ( 500 ) ; return start ( port ) ; } catch ( java.lang.InterruptedException e1 ) { throw new nl.erwinvaneyk.communication.exceptions.PortAlreadyInUseException ( "Failed to start RMI-registry (server)." , e ) ; } } return this ; } 
protected void provideService ( java.net.Socket sock ) { java.lang.String str = "" ; try { writeToSocket ( sock , "Tell me what you think! \nThis writes a whole block of information to me, so write everything and then submit it, don\'t send multiple ones.\n~James" ) ; do { str = readFromSocket ( sock ) ; if ( ! ( str . toLowerCase () . equals ( "end" ) ) ) { gui . addText ( str ) ; } } while ( ! ( str . toLowerCase () . equals ( "end" ) ) ) ; } catch ( java.io.IOException e ) { gui . updateStatus ( "Pre-emptive Leave" ) ; e . printStackTrace () ; } } 
public void recordMiss () { this . throwSequence . add ( capstat.utils.Throw . createMiss () ) ; if ( this . isDuelling () ) { this . notifyDuelObservers () ; this . removeGlass () ; this . endMatchIfNecessary () ; } else { this . switchPlayerUpNext () ; } } 
public final void run () { if ( ( stop ) && ( owner . withinRange ( location , radius ) ) ) { owner . resetPath () ; arrived () ; } else if ( owner . hasMoved () ) { return; } else if ( owner . withinRange ( location , radius ) ) { arrived () ; } super . matchRunning = false ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_new_game_settings ) ; getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; layout.NewGameSettingsFragment fragment = layout.NewGameSettingsFragment . newInstance ( null , null ) ; de.uulm.mal.fancyquartett.activities.FragmentManager manager = getSupportFragmentManager () ; de.uulm.mal.fancyquartett.activities.FragmentTransaction transaction = manager . beginTransaction () ; transaction . add ( R.id.new_game_settings_relativelayout , fragment , "newgamesettingsfragment" ) ; transaction . addToBackStack ( "newgamesettingsfragment" ) ; transaction . commit () ; } 
public void spawn ( java.awt.Point spawningPoint ) { this . lastMove = null ; this . direction = com.sun.javafx.scene.traversal.Direction.DOWN ; stopAtTile ( ( ( int ) ( spawningPoint . getX () ) ) , ( ( int ) ( spawningPoint . getY () ) ) ) ; setComingState ( MovableState.SPAWN ) ; this . health = edu.chalmers.vaporwave.util.Constants.DEFAULT_START_HEALTH ; java.lang.System.out . println ( ( "Spawn! " + ( getName () ) ) ) ; } 
@ java.lang.Override public MiniJavaVar visitClassDeclaration ( miniJava.MiniJavaParser.ClassDeclarationContext ctx ) { currentClassName = ctx.className . getText () ; currentClass = new MiniJavaClass () ; if ( checkRedefinedClass ( ctx ) ) return MiniJavaVar . makeRuntimeError () ; currentClass.parentClassName = ctx.parentName . getText () ; currentClass.ctx = ctx ; classes . put ( currentClassName , currentClass ) ; varCtx . enterBlock () ; visitChildren ( ctx ) ; varCtx . exitBlock () ; currentClass = null ; currentClassName = null ; return MiniJavaVar . makeVoid () ; } 
@ org.junit.Test public void testSumValuesInIntegerList () { java.util.List < java.lang.Integer > integers = new java.util.ArrayList <> () ; integers . add ( 1 ) ; integers . add ( 2 ) ; integers . add ( 3 ) ; integers . add ( 4 ) ; integers . add ( 5 ) ; Calculator calculator = new Calculator () ; int sum = calculator . sumItemsInListOfIntegers ( integers ) ; org.junit.Assert . assertEquals ( sum , 15 ) ; } 
public static void Main ( java.lang.String [] args ) { java.util.Scanner scan = new java.util.Scanner ( java.lang.System.in ) ; java.lang.System.out . print ( "Enter text or morse code to be translated: " ) ; java.lang.String str = scan . nextLine () ; java.lang.String [] phrase = str . split ( "\\s" ) ; java.lang.String translation = "Unable to translate" ; if ( ( str . startsWith ( "." ) ) || ( str . startsWith ( "-" ) ) ) { translation = translator . TranslateFromMorse ( phrase ) ; } else { translation = translator . TranslateFromEnglish ( phrase ) ; } } 
public static boolean isIgnored ( javax.lang.model.element.Element element ) { if ( element instanceof com.webcohesion.enunciate.javac.decorations.element.DecoratedElement ) { java.util.List < com.webcohesion.enunciate.javac.javadoc.JavaDoc.JavaDocTagList > ignoreTags = com.webcohesion.enunciate.util.AnnotationUtils . getJavaDocTags ( "ignore" , ( ( com.webcohesion.enunciate.javac.decorations.element.DecoratedElement < ? > ) ( element ) ) ) ; if ( ! ( ignoreTags . isEmpty () ) ) { return true ; } } return ( element . getAnnotation ( com.webcohesion.enunciate.metadata.Ignore . class ) ) != null ; } 
public void setSize ( android.util.Size size ) { size_dp = new android.util.Size ( ( ( ( int ) ( java.lang.Math . ceil ( ( ( size . getWidth () ) / ( scale_dp ) ) ) ) ) + 1 ) , ( ( ( int ) ( java.lang.Math . ceil ( ( ( size . getHeight () ) / ( scale_dp ) ) ) ) ) + 1 ) ) ; this . size = size ; } 
private void drawAnimatedTerrain ( java.awt.Graphics g ) { for ( MapSquare animatedSquare : animatedSquares ) { drawImageToGrid ( level.map.animator . getCurrentPhaseTexture () . textureFile , ( ( animatedSquare.row ) * ( SquintMainWindow.MAP_DIM ) ) , ( ( animatedSquare.col ) * ( SquintMainWindow.MAP_DIM ) ) , g , false , false ) ; } } 
private boolean isNewOrderBetter ( java.util.List < java.awt.Point > neighbor , graphs.Graph graph ) { algorithms.Greedy greedy = new algorithms.Greedy ( neighbor ) ; graphs.Graph tmp = new graphs.SimpleGraph ( ( ( graphs.SimpleGraph ) ( graph ) ) ) ; greedy . applyAlgorithmComplete ( tmp ) ; return ( tmp . getQuantityColors () ) <= ( minimalAmountOfColors ) ; } 
public void close () { try { if ( ( result ) != null ) { result . close () ; } if ( ( statement ) != null ) { statement . close () ; } if ( ( conn ) != null ) { conn . close () ; } } catch ( java.sql.SQLException e ) { java.lang.System.out . println ( "An error occurred when closing the connections" ) ; } } 
public void uninstall ( de.espirit.firstspirit.access.Connection connection , long projectId , java.lang.String moduleName ) { if ( ( connection == null ) || ( ! ( connection . isConnected () ) ) ) { throw new java.lang.IllegalStateException ( "Connection is null or not connected!" ) ; } de.espirit.firstspirit.agency.ModuleAdminAgent moduleAdminAgent = connection . getBroker () . requestSpecialist ( ModuleAdminAgent.TYPE ) ; de.espirit.firstspirit.module.descriptor.ModuleDescriptor moduleDescriptor = com.espirit.moddev.moduleuninstaller.ModuleUninstaller . getModuleByName ( moduleName , moduleAdminAgent ) ; com.espirit.moddev.moduleuninstaller.ModuleUninstaller . uninstallProjectWebApps ( projectId , moduleDescriptor , moduleAdminAgent ) ; com.espirit.moddev.moduleuninstaller.ModuleUninstaller . uninstallProjectApps ( projectId , moduleDescriptor , connection ) ; com.espirit.moddev.moduleuninstaller.ModuleUninstaller . uninstallModule ( moduleName , moduleAdminAgent ) ; } 
@ java.lang.Override public void addTooltip ( java.util.List list ) { list . add ( ( ( net.minecraft.util.EnumChatFormatting.DARK_GREEN ) + ( format ( spawnNumberMin , spawnNumberMax ) ) ) ) ; list . addAll ( java.util.Arrays . asList ( org.apache.commons.lang3.text.WordUtils . wrap ( ( ( java.lang.String ) ( field . getField () ) ) , 28 ) . split ( "\r\n" ) ) ) ; net.minecraft.item.ItemStack stack = getIcon () ; if ( stack != null ) { list . add ( "---" ) ; list . add ( entity . getName () ) ; } } 
public static int currentWeek () { java.util.Calendar calendar = java.util.Calendar . getInstance () ; int day = calendar . get ( java.util.Calendar.DAY_OF_WEEK ) ; if ( ( calendar . get ( java.util.Calendar.HOUR_OF_DAY ) ) > 17 ) day += 1 ; if ( ( day == ( java.util.Calendar.SATURDAY ) ) || ( day == ( java.util.Calendar.SUNDAY ) ) ) return ( calendar . get ( java.util.Calendar.WEEK_OF_YEAR ) ) + 1 ; else return calendar . get ( java.util.Calendar.WEEK_OF_YEAR ) ; } 
@ java.lang.Override public void onStatusChanged ( java.lang.String provider , int status , android.os.Bundle extras ) { java.lang.String toastMessage = "" ; switch ( status ) { case android.location.LocationProvider.OUT_OF_SERVICE : android.util.Log . w ( org.forestguardian.DataAccess.Location.LocationController.TAG , "OUT_OF_SERVICE" ) ; mListeners . forEach ( org.forestguardian.DataAccess.Location.LocationController.SimpleLocationListener : : onUnavailable ) ; break; case android.location.LocationProvider.TEMPORARILY_UNAVAILABLE : android.util.Log . w ( org.forestguardian.DataAccess.Location.LocationController.TAG , "TEMPORARILY_UNAVAILABLE" ) ; break; case android.location.LocationProvider.AVAILABLE : android.util.Log . w ( org.forestguardian.DataAccess.Location.LocationController.TAG , "AVAILABLE" ) ; break; } android.util.Log . d ( "Location" , toastMessage ) ; } 
@ javafx.fxml.FXML private void btnEmployeOnClick ( javafx.event.ActionEvent event ) throws java.io.IOException { employeeActive () ; javafx.fxml.FXMLLoader fXMLLoader = new javafx.fxml.FXMLLoader () ; fXMLLoader . load ( getClass () . getResource ( "/view/Employe.fxml" ) . openStream () ) ; controller.user.EmployeController employeController = fXMLLoader . getController () ; employeController.bpContent . getStylesheets () . add ( "/style/MainStyle.css" ) ; employeController . btnViewEmployeeOnAction ( event ) ; javafx.scene.layout.AnchorPane acPane = fXMLLoader . getRoot () ; acContent . getChildren () . clear () ; acContent . getChildren () . add ( acPane ) ; } 
@ java.lang.Override public com.rsen.base.RBaseViewHolder onCreateViewHolder ( android.view.ViewGroup parent , int viewType ) { int itemLayoutId = getItemLayoutId ( viewType ) ; android.view.View item ; if ( itemLayoutId == 0 ) { item = createContentView ( viewType ) ; if ( item == null ) { item = createContentView ( parent , viewType ) ; } } else { item = android.view.LayoutInflater . from ( mContext ) . inflate ( itemLayoutId , parent , false ) ; } return new com.rsen.base.RBaseViewHolder ( item , viewType ) ; } 
private void stopsHandler ( int zoomLevel , double lat , double lon ) { if ( zoomLevel >= ( minZoomLevel ) ) { float [] d = new float [ 3 ] ; android.location.Location . distanceBetween ( lat , lon , lastDrewLatitude , lastDrewLongitude , d ) ; if ( ( d [ 0 ] ) > 300.0F ) { lastDrewLatitude = lat ; lastDrewLongitude = lon ; this . drawBusStops ( this . getNearBusStops () ) ; } } } 
public void updateSize ( int columns , int rows ) { com.termux.terminal.JNI . setPtyWindowSize ( mTerminalFileDescriptor , rows , columns ) ; if ( ( mEmulator ) == null ) { initializeEmulator ( columns , rows ) ; } else { mEmulator . resize ( columns , rows ) ; } } 
public static java.lang.String getSequence2Tale ( java.lang.String tale ) { java.lang.StringBuffer sb = new java.lang.StringBuffer () ; java.lang.String [] taleSequence = tale . split ( "(?<=\\G..)" ) ; for ( java.lang.String currTale : taleSequence ) { de.uni_hannover.igem.model.Tale taleEnum = de.uni_hannover.igem.model.Tale . valueOf ( currTale . toUpperCase () ) ; de.uni_hannover.igem.model.Base base = de.uni_hannover.igem.model.Base2Tale . getBase2Tale ( taleEnum ) ; sb . append ( base . name () ) ; } return sb . toString () ; } 
public java.lang.String toXml ( int offset ) { java.lang.StringBuffer buffer = new java.lang.StringBuffer () ; edu.stanford.nlp.ie.machinereading.domains.ace.reader.AceElement . appendOffset ( buffer , ( offset + 2 ) ) ; buffer . append ( ( ( ( ( ( ( "<charseq START=\"" + ( mByteOffset . start () ) ) + "\" END=\"" ) + ( mByteOffset . end () ) ) + "\">" ) + ( mText ) ) + "</charseq>" ) ) ; return buffer . toString () ; } 
@ org.junit.Before public void prepare ( ) throws java.lang.Exception { context = mActivityRule . getActivity () ; if ( ! ( com.bitbucket.lonelydeveloper97.wifiproxysettingslibrary.proxy_change_realisation.NetworkHelper . isWifiConnected ( context ) ) ) { expectedException . expect ( com.bitbucket.lonelydeveloper97.wifiproxysettingslibrary.proxy_change_realisation.wifi_network.exceptions.NullWifiConfigurationException . class ) ; } if ( com.bitbucket.lonelydeveloper97.wifiproxysettingslibrary.proxy_change_realisation.wifi_network.CurrentProxyChangerGetter . chooseProxyChangerForCurrentApi ( context ) . isProxySetted () ) { expectedException . expect ( com.bitbucket.lonelydeveloper97.wifiproxysettingslibrary.proxy_change_realisation.wifi_network.exceptions.WifiProxyNotSettedException . class ) ; } } 
public void makePayment ( Loan loan ) { if ( ( loan . getPrincipalBalance () ) < ( getPaymentAmount () ) ) { this . totalAmountPaid += loan . getPrincipalBalance () ; } else { this . totalAmountPaid += getPaymentAmount () ; } loan . makePayment ( getPaymentAmount () ) ; } 
@ java.lang.Override public void onData ( com.corundumstudio.socketio.SocketIOClient client , SearchObject data , com.corundumstudio.socketio.AckRequest ackRequest ) { java.lang.System.out . println ( data ) ; long startTime = java.lang.System . currentTimeMillis () ; java.util.Map < java.lang.String , java.lang.Object > [] results = eClient . search ( data ) ; long estimatedTime = ( java.lang.System . currentTimeMillis () ) - startTime ; java.lang.System.out . println ( ( ( "Execution time: " + estimatedTime ) + "ms" ) ) ; ackRequest . sendAckData ( results ) ; } 
private java.lang.String formatSizeValue ( long value ) { org.linagora.linshare.core.domain.constants.FileSizeUnit unit = org.linagora.linshare.core.domain.constants.FileSizeUnit . getMaxExactPlainSizeUnit ( _s ) ; return java.lang.String . format ( "%d %s" , unit . fromPlainSize ( value ) , messages . get ( ( ( "FileSizeUnit." + ( unit . name () ) ) + ".short" ) ) ) ; } 
public hrytsak.xo.model.Figure currentMove ( final hrytsak.xo.model.Field field ) { int countFigure = 0 ; for ( int y = 0 ; y < ( field . getSize () ) ; y ++ ) { countFigure += countFiguresInTheRow ( field , y ) ; } if ( countFigure == ( ( field . getSize () ) * ( field . getSize () ) ) ) { return null ; } if ( ( countFigure % 2 ) == 0 ) { return hrytsak.xo.model.Figure.X ; } return hrytsak.xo.model.Figure.O ; } 
private void addTrip ( zotzp.flygogo.Trip thisTrip ) { if ( ! ( this . edit ) ) { this . key = mDatabase . child ( "trips" ) . push () . getKey () ; thisTrip.id = key ; } mDatabase . child ( "trips" ) . child ( key ) . setValue ( thisTrip ) ; android.content.Intent myIntent = new android.content.Intent ( this , zotzp.flygogo.UserTripsActivity . class ) ; startActivity ( myIntent ) ; } 
private static void blockInterface () { daraujo.faiticchecker.SubjectsGUI.panelLoading . setVisible ( true ) ; daraujo.faiticchecker.SubjectsGUI.scrollPane . setVisible ( false ) ; for ( java.awt.Component comp : daraujo.faiticchecker.SubjectsGUI.panelOptions . getComponents () ) { comp . setEnabled ( false ) ; } daraujo.faiticchecker.SubjectsGUI.itemSelectSubjectFolder . setVisible ( false ) ; daraujo.faiticchecker.SubjectsGUI.lblOpenFolder . setVisible ( false ) ; daraujo.faiticchecker.SubjectsGUI.btnSearch . setVisible ( false ) ; daraujo.faiticchecker.SubjectsGUI.panelSearch . setVisible ( false ) ; daraujo.faiticchecker.SubjectsGUI.btnLogout . setVisible ( false ) ; } 
private void parseMainContent ( int startIndex , java.lang.String raw ) throws ccl.v2_1.err.ImplementationException { this . before = raw . substring ( 0 , startIndex ) ; this . content = raw . substring ( startIndex ) ; this . content = content . substring ( 1 , ( ( content . length () ) - 1 ) ) ; } 
@ org.junit.Before public void beforeTest ( ) throws java.lang.Exception { validator = createValidator () ; validator . setGeometryStore ( org.mockito.Mockito . mock ( nl.ipo.cds.etl.postvalidation.IGeometryStore . class ) ) ; validator . setManagerDao ( org.mockito.Mockito . mock ( nl.ipo.cds.dao.ManagerDao . class ) ) ; validator . setBulkValidator ( org.mockito.Mockito . mock ( nl.ipo.cds.etl.postvalidation.BulkValidator . class ) ) ; runner = new nl.ipo.cds.etl.test.ValidationRunner ( validator , getDomainClass () ) ; } 
private void setLayoutParams ( android.widget.ImageView imageView , android.view.ViewGroup.LayoutParams lp , int scaledWidth , int scaledHeight ) { if ( ( ( lp.width ) != scaledWidth ) || ( ( lp.height ) != scaledHeight ) ) { com.hyphenate.util.EMLog . e ( com.hyphenate.easeui.widget.chatrow.TAG , "set layout params" ) ; lp.width = scaledWidth ; lp.height = scaledHeight ; onUpdateView () ; } } 
@ org.junit.Test public void customerLocationLog3 ( ) throws asgn2Exceptions.CustomerException , asgn2Exceptions.LogHandlerException , asgn2Exceptions.PizzaException { cusRes . processLog ( "C:\\Users\\You\\Documents\\PizzaParty\\asgn2\\logs\\20170103.txt" ) ; double loc = java.lang.Math . sqrt ( ( ( java.lang.Math . pow ( cusRes . getCustomerByIndex ( 2 ) . getLocationX () , 2 ) ) + ( java.lang.Math . pow ( cusRes . getCustomerByIndex ( 2 ) . getLocationY () , 2 ) ) ) ) ; assertEquals ( cusRes . getCustomerByIndex ( 2 ) . getDeliveryDistance () , loc ) ; } 
@ java.lang.Override public java.math.BigDecimal calculateDigitsFrom ( int n , int digits ) { java.math.BigDecimal scale = big ( 10 ) . pow ( ( ( 2 * digits ) - 1 ) ) ; return calculateFrom ( n , digits ) . multiply ( scale ) . stripTrailingZeros () ; } 
public synchronized void threadReturned ( java.lang.String value , long version ) { ( readsReturned ) ++ ; if ( version > ( highestVersionRead ) ) { highestVersionRead = version ; highestVersionResult = value ; } if ( ( readsReturned ) > ( ( readThreadsCounter ) / 2 ) ) readsWaitOnMe . notify () ; } 
public void execute ( java.lang.Runnable task ) { if ( ! ( alive ) ) { throw new java.lang.IllegalStateException ( "Trying to submit new task after shut down!" ) ; } java.lang.Thread current = java.lang.Thread . currentThread () ; if ( current instanceof com.den.concurrency.WorkingQueue.Worker ) { threadTasksStorage . get () . addLast ( task ) ; } else { synchronized ( tasks ) { tasks . addLast ( task ) ; tasks . notify () ; } } } 
public void setVisible ( boolean visible ) { if ( ( this . visible ) == visible ) return; needToRecalcMatrix = true ; if ( ( ! ( this . visible ) ) && visible ) { this . visible = true ; tr.mainRenderer . get () . temporarilyMakeImmediatelyRelevant ( this ) ; } else this . visible = visible ; tr.threadManager . submitToGPUMemAccess ( new java.util.concurrent.Callable < java.lang.Void > () { @ java.lang.Override public java.lang.Void call ( ) throws java.lang.Exception { org.jtrfp.trcl.obj.WorldObject . this . updateStateToGPU () ; return null ; } } ) ; } 
@ java.lang.Override public void onPropertyChange ( java.lang.String propertyName , java.lang.String newValue ) { super . onPropertyChange ( propertyName , newValue ) ; if ( propertyName . equals ( com.google.appinventor.client.editor.simple.components.MockHVArrangement.PROPERTY_NAME_HORIZONTAL_ALIGNMENT ) ) { myLayout . setHAlignmentFlags ( newValue ) ; refreshForm () ; } else if ( propertyName . equals ( com.google.appinventor.client.editor.simple.components.MockHVArrangement.PROPERTY_NAME_VERTICAL_ALIGNMENT ) ) { myLayout . setVAlignmentFlags ( newValue ) ; refreshForm () ; } else { if ( ( propertyName . equals ( com.google.appinventor.client.editor.simple.components.PROPERTY_NAME_WIDTH ) ) || ( propertyName . equals ( com.google.appinventor.client.editor.simple.components.PROPERTY_NAME_HEIGHT ) ) ) { adjustAlignmentDropdowns () ; refreshForm () ; } } } 
public void print () { deselectBox () ; deselectRelation () ; javafx.print.PrinterJob job = javafx.print.PrinterJob . createPrinterJob () ; if ( job == null ) { warning ( "No printer found" ) ; return; } job . showPrintDialog ( null ) ; noBG () ; job . printPage ( workspace ) ; hideGrid () ; job . endJob () ; } 
@ org.junit.Test public void testCreateEvent ( ) throws java.sql.SQLException { java.sql.Connection conn = startConnection () ; int affected = com.teamSmash.Main . createEvent ( conn , "event" , "place" , java.time.LocalTime . now () , java.time.LocalDate . now () , "image" , "descrip" ) ; endConnection ( conn ) ; assertTrue ( ( affected == 1 ) ) ; } 
public void onSucess ( java.lang.Object payload ) { try { byte [] imageBytes = ( ( byte [] ) ( payload ) ) ; android.graphics.Bitmap bitmap = android.graphics.BitmapFactory . decodeByteArray ( imageBytes , 0 , imageBytes.length ) ; android.util.Log . d ( LOG_TAG , ( "success " + payload ) ) ; holder.image . setImageBitmap ( bitmap ) ; holder.progressBar . setVisibility ( View.GONE ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( ( telegram ) != null ) { telegram.isUnread = false ; header . setTypeface ( null , Typeface.NORMAL ) ; timestamp . setTypeface ( null , Typeface.ITALIC ) ; alertText . setTypeface ( null , Typeface.NORMAL ) ; telegram.isExpanded = true ; notifyItemChanged ( getAdapterPosition () ) ; } } 
@ java.lang.Override public void failed ( java.lang.Throwable t , org.gearvrf.GVRAndroidResource androidResource ) { if ( ! ( loadFinished ) ) { mAssetRequest . onTextureError ( mAssetRequest . getContext () , t . getMessage () , TextureFile ) ; loadFinished = true ; loaded ( org.gearvrf.GVRAssetLoader . getDefaultTexture ( mAssetRequest . getContext () ) , null ) ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/pipesizeMaster/{pipeSizeId}" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String editPipeSizeMasterData ( @ javax.validation.Valid @ org.springframework.web.bind.annotation.ModelAttribute final org.egov.wtms.masters.entity.PipeSize pipeSize , @ org.springframework.web.bind.annotation.PathVariable final long pipeSizeId , final org.springframework.web.servlet.mvc.support.RedirectAttributes redirectAttrs , final org.springframework.ui.Model model , final org.springframework.validation.BindingResult resultBinder ) { if ( resultBinder . hasErrors () ) return "pipesize-master" ; pipeSizeService . updatePipeSize ( pipeSize ) ; redirectAttrs . addFlashAttribute ( "pipeSize" , pipeSize ) ; return getPipeSizeMasterList ( model ) ; } 
private void jButton_Huy_THDActionPerformed ( java.awt.event.ActionEvent evt ) { int i = javax.swing.JOptionPane . showConfirmDialog ( jMenu1 , "Bạn có chắc chắn muốn hủy hóa đơn, việc này sẽ xóa những gì đã làm?" , "Xác nhận" , javax.swing.JOptionPane.YES_NO_OPTION ) ; if ( i == ( javax.swing.JOptionPane.YES_OPTION ) ) { if ( ( GUI.TAOHOADONGUI.jTable_Thongtinhoadon_THD . getRowCount () ) > 0 ) { GUI.TAOHOADONGUI.jLabel_Tongcong . setText ( GUI.TAOHOADONGUI.jLabel_Tongtienhang . getText () ) ; GUI.TAOHOADONGUI . Xoa_Hoadon () ; GUI.TAOHOADONGUI . Load_data_TableSach_THD () ; } else { javax.swing.JOptionPane . showMessageDialog ( jMenu1 , "Không có gì để hủy, hóa đơn trống" , "Thông báo" , GUI.TAOHOADONGUI.m ) ; } } } 
@ java.lang.Override public java.lang.Object visitPropertyCallExp ( org.eclipse.ocl.expressions.PropertyCallExp < org.eclipse.emf.ecore.EClassifier , org.eclipse.emf.ecore.EStructuralFeature > astNode ) { org.eclipse.ocl.expressions.PropertyCallExp pivotElement = converter . addCreated ( astNode , PivotFactory.eINSTANCE . createPropertyCallExp () ) ; pivotElement . setOwnedSource ( doProcess ( org.eclipse.ocl.pivot.OCLExpression . class , astNode . getSource () ) ) ; org.eclipse.ocl.pivot.Property property = doProcess ( org.eclipse.ocl.pivot.Property . class , astNode . getReferredProperty () ) ; if ( property != null ) { pivotElement . setReferredProperty ( property ) ; } return pivotElement ; } 
@ java.lang.Override public void run () { try { java.lang.String subFolder = null ; if ( playerId != null ) { subFolder = playerId . toString () ; } final javax.sound.sampled.Clip clip = loadClip ( clipName , subFolder , false ) ; if ( clip != null ) { clip . setFramePosition ( 0 ) ; clip . loop ( 0 ) ; } } catch ( final java.lang.Exception e ) { games.strategy.debug.ClientLogger . logQuietly ( e ) ; } } 
@ java.lang.Override public java.math.BigDecimal calculateAverageBurnedCaloriesPerRecord ( cz.muni.fi.pa165.activeye.entities.User user ) { if ( ( user . getActivityRecords () ) == null ) return null ; java.math.BigDecimal averageBurnedCaloriesPerRecord = java.math.BigDecimal.ZERO ; return calculateTotalCaloriesBurned ( user ) . divide ( new java.math.BigDecimal ( user . getActivityRecords () . size () ) , java.math.BigDecimal.ROUND_HALF_UP ) ; } 
public void idle () { if ( ( ( isEmerging ) || ( isFading ) ) || ( isIdle ) ) return; java.lang.System.out . println ( "Idle play" ) ; isIdle = true ; idle = new whackamole.SpriteAnimation ( view , javafx.util.Duration . millis ( 1500 ) , 6 , 6 , 0 , 1540 , 140 , 140 ) ; idle . setCycleCount ( 3 ) ; idle . setOnFinished ( ( endIdleEvent ) - > laugh () ) ; idle . play () ; } 
public void actionPerformed ( java.awt.event.ActionEvent actionEvent ) { java.lang.System.out . println ( "Refresh rfid database" ) ; java.util.Arrays . fill ( RFIDlist , null ) ; RFIDlist = rfid . getAllTheId () . parallelStream () . toArray ( java.lang.String [] : : new ) ; RFIDCbx . removeAllItems () ; for ( java.lang.String rf : RFIDlist ) RFIDCbx . addItem ( rf ) ; } 
private void buildBasic ( android.graphics.Bitmap image , dan.dit.whatsthat.image.ImageAuthor author ) throws dan.dit.whatsthat.util.BuildException { if ( image == null ) { throw new dan.dit.whatsthat.util.BuildException () . setMissingData ( "Image" , "Bitmap image" ) ; } mImage.mTimestamp = java.lang.System . currentTimeMillis () ; mImage.mAuthor = author ; mImage.mImageData = new java.lang.ref.WeakReference ( image ) ; calculateHashAndPreferences ( image ) ; } 
@ java.lang.Override public void onStarted () { super . onStarted () ; android.util.Log . d ( com.felkertech.cumulustv.tv.CumulusTvTifService.TAG , "Video available" ) ; stillTuning = false ; notifyVideoAvailable () ; setOverlayViewEnabled ( false ) ; if ( jsonChannel . isAudioOnly () ) { setOverlayViewEnabled ( true ) ; } } 
@ org.junit.Test ( timeout = 5000 ) public void ensureObjectsAreSynchronizedIfOnlyPeerHasObjects ( ) throws java.lang.Exception { ch.dissem.bitmessage.networking.NetworkHandlerTest.peerInventory . init ( "V4Pubkey.payload" , "V5Broadcast.payload" ) ; ch.dissem.bitmessage.networking.NetworkHandlerTest.nodeInventory . init () ; java.lang.Thread t = ch.dissem.bitmessage.networking.NetworkHandlerTest.networkHandler . synchronize ( java.net.InetAddress . getLocalHost () , 6001 , org.mockito.Mockito . mock ( NetworkHandler.MessageListener . class ) , 10 ) ; t . join () ; org.junit.Assert . assertEquals ( 2 , ch.dissem.bitmessage.networking.NetworkHandlerTest.nodeInventory . getInventory () . size () ) ; assertInventorySize ( 2 , ch.dissem.bitmessage.networking.NetworkHandlerTest.peerInventory ) ; } 
private void releaseAll () { mSensorManager . unregisterListener ( mSensorEventListener ) ; if ( ( mSensorManager ) != null ) mSensorManager = null ; if ( ( mCamera ) != null ) { mCamera . setPreviewCallback ( null ) ; mCamera . release () ; mCamera = null ; } } 
public void defaultBoolean ( java.lang.String path , java.lang.Boolean type ) { if ( ! ( getConfig () . contains ( path ) ) ) { getConfig () . addDefault ( path , type ) ; getConfig () . options () . copyDefaults ( true ) ; } saveConfig () ; } 
@ java.lang.Override public void onResponse ( retrofit2.Call < io.filepicker.models.UploadLocalFileResponse > call , retrofit2.Response < io.filepicker.models.UploadLocalFileResponse > response ) { currentCall = null ; if ( response . isSuccessful () ) { if ( ! ( cancelled ) ) onFileUploadSuccess ( response . body () , uri ) ; } else { if ( ! ( cancelled ) ) handleUploadFileError ( uri , getErrorType ( response ) ) ; } countDownLatch . countDown () ; } 
@ org.junit.Test public void remove_emptyAfterwards () { com.marc.collections.SkipList < java.lang.Integer > mySkipList = new com.marc.collections.SkipList ( 4 , new java.util.Random () ) ; mySkipList . add ( new java.lang.Integer ( 5 ) ) ; mySkipList . remove ( new java.lang.Integer ( 5 ) ) ; org.junit.Assert . assertTrue ( mySkipList . isEmpty () ) ; } 
private java.lang.String getSpecificOrientationString ( int orientation ) { switch ( orientation ) { case android.content.res.Configuration.ORIENTATION_PORTRAIT : { return "PORTRAIT" ; } case 90 : { return "LANDSCAPE-LEFT" ; } case 180 : { return "PORTRAITUPSIDEDOWN" ; } case 270 : { return "LANDSCAPE-RIGHT" ; } default: { return "UNKNOWN" ; } } } 
@ org.junit.Test public void test_03_Calculate () { model.Tariff tariff = new model.Tariff ( 0 , 0 ) ; model.TariffRange r1 = new model.TariffRange ( 0 , 150 , 2.5 ) ; tariff . addTariffRange ( r1 ) ; double res = tariff . calculate ( 0 ) ; org.junit.Assert . assertEquals ( 0 , res , 0 ) ; } 
private java.lang.String createExpectedQueryString ( aprs.framework.database.DbQueryInfo queryInfo , java.util.Map < java.lang.Integer , java.lang.Object > map ) throws java.sql.SQLException { java.lang.String queryFormat = getQueryFormat () ; aprs.framework.database.DbParamTypeEnum [] paramTypes = queryInfo . getParams () ; java.lang.String qString = queryInfo . getQuery () ; for ( int i = 0 ; i < ( paramTypes.length ) ; i ++ ) { qString = qString . replace ( java.lang.String . format ( queryFormat , i ) , map . get ( i ) . toString () ) ; } return qString ; } 
private void ParseDataObjectTemplate () { com.trivialis.java.jassimp.util.IPointer < java.lang.String > name = com.trivialis.java.jassimp.util.Pointer . valueOf ( "" ) ; readHeadOfDataObject ( name ) ; java.lang.System.out . println ( name . get () ) ; java.lang.String guid = GetNextToken () ; java.lang.System.out . println ( guid ) ; boolean running = true ; while ( running ) { java.lang.String s = GetNextToken () ; java.lang.System.out . println ( ( "dat object template, next token: " + s ) ) ; if ( s == "}" ) break; if ( ( s . length () ) == 0 ) ThrowException ( "Unexpected end of file reached while parsing template definition" ) ; } } 
private grammar.Sentence start ( edu.stanford.nlp.trees.Tree t ) throws exceptions.CantFindSuchAnEntityException , exceptions.WrongGrammarRuleException { t . pennPrint () ; try { return order ( t ) ; } catch ( exceptions.WrongGrammarRuleException e ) { try { return relativeClauseSentence ( t ) ; } catch ( exceptions.WrongGrammarRuleException e2 ) { return declarativeSentence ( t ) ; } } } 
public java.lang.String mimeType () { if ( ( cachedMimeType ) == null ) { try { cachedMimeType = java.net.URLConnection . guessContentTypeFromName ( file . getAbsolutePath () ) ; } catch ( java.lang.Exception e ) { com.google.firebase.crash.FirebaseCrash . report ( e ) ; } if ( ( cachedMimeType ) == null ) { cachedMimeType = "*/*" ; } } return cachedMimeType ; } 
private boolean finalQRReceived ( java.lang.String input ) { android.util.Log . d ( "finalQRReceived" , ( "TOTAL = " + ( TOTAL_QR_CODES ) ) ) ; android.util.Log . d ( "finalQRReceived" , ( "CURRENT = " + ( CURRENT_INDEX ) ) ) ; android.util.Log . d ( "finalQRReceived" , ( "index = " + ( soft.swenggroup5.DecoderUtils . getQRCodeIndex ( input ) ) ) ) ; if ( ( ( soft.swenggroup5.DecoderUtils . getQRCodeIndex ( input ) ) == ( TOTAL_QR_CODES ) ) && ( ( CURRENT_INDEX ) == ( ( TOTAL_QR_CODES ) + 1 ) ) ) { return true ; } return false ; } 
private void updateAnzahlColor ( java.lang.Integer vpe ) { if ( vpe <= 0 ) { anzahlField . setForeground ( java.awt.Color.black ) ; } else { java.lang.Integer stueck = ( ( java.lang.Integer ) ( anzahlSpinner . getValue () ) ) ; if ( stueck < vpe ) { anzahlField . setForeground ( java.awt.Color.red ) ; } else { anzahlField . setForeground ( java.awt.Color.green . darker () . darker () ) ; } } } 
public java.sql.Connection connect () { conn = null ; try { conn = java.sql.DriverManager . getConnection ( url , dbProperties ) ; java.lang.System.out . println ( "Connected to the PostgreSQL server successfully." ) ; java.util.Date oldestDate = getOldestProcessedDay () ; if ( this . foundDataToProcess ( oldestDate ) ) { processHistory ( oldestDate ) ; } } catch ( java.lang.Exception e ) { java.lang.System.out . println ( e . getMessage () ) ; } return conn ; } 
public void loadAndPrependMatch ( android.content.Context context , java.lang.Long matchId ) { new lt.dualpair.android.data.manager.MatchDataManager ( context ) . match ( matchId ) . subscribeOn ( rx.schedulers.Schedulers . newThread () ) . observeOn ( rx.android.schedulers.AndroidSchedulers . mainThread () ) . subscribe ( new lt.dualpair.android.data.EmptySubscriber < lt.dualpair.android.data.resource.Match > () { @ java.lang.Override public void onNext ( lt.dualpair.android.data.resource.Match match ) { adapter . prepend ( match ) ; adapter . notifyDataSetChanged () ; } } ) ; } 
public synchronized int indexOf ( java.lang.String ip ) { for ( int i = 0 ; i < ( ipList . size () ) ; i ++ ) if ( ipList . get ( i ) . getIp () . equals ( ip ) ) return i ; return - 1 ; } 
public boolean collideFromBottom ( edu.virginia.engine.display.DisplayObject other ) { if ( collidesWith ( other ) ) { java.awt.Rectangle myRectangle = this . getHitbox () ; java.awt.Rectangle otherRectangle = other . getHitbox () ; return ( myRectangle.y ) < ( ( otherRectangle.y ) + ( otherRectangle . getHeight () ) ) ; } else { return false ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { mPbReportLoading . setVisibility ( View.VISIBLE ) ; setStatusBoxText ( getString ( R.string.loading_report ) ) ; mAdapter = new com.alex.onereport2.OneReportActivity.ReportEntryAdapter ( this , new com.alex.onereport2.model.ReportEntry [ 0 ] ) ; mElvReportEntry . setAdapter ( mAdapter ) ; sendAPIRequestGetReport ( mDate , mUnit ) ; } 
@ java.lang.Override public void run () { for ( org.flg.hiromi.pulsecontroller.PulseCommChannel.IntWatcher iw : getWatchers ( name ) ) { try { iw . onChange ( name , val ) ; } catch ( java.lang.Error | java.lang.Exception t ) { android.util.Log . e ( "SVC" , "Error while reporting change." , t ) ; sendError ( t ) ; } } } 
@ java.lang.Override public void remove ( int position ) { if ( fieldIsInArrayLength ( position ) ) { if ( isLastField ( position ) ) { arrayList = giveBackIncreasedArray ( arrayList ) ; } for ( int i = position ; i <= ( ( size () ) - 1 ) ; i ++ ) { arrayList [ i ] = arrayList [ ( i + 1 ) ] ; } ( counter ) -- ; } else throw new java.lang.IllegalArgumentException ( "Der Wert ist hier nicht zulässig, da er außerhalb des Wertebereichsliegt!" ) ; } 
public static boolean isTenaliPresent ( int [] hand ) { int consecutives = 1 ; for ( int idx = 1 ; idx < ( CARDS_IN_HAND ) ; idx ++ ) { if ( ( hand [ idx ] ) == ( hand [ ( idx - 1 ) ] ) ) { consecutives += 1 ; } else { consecutives = 1 ; } if ( consecutives > 2 ) { return true ; } } return false ; } 
private void maximize () { restoreWindowWidth = getWidth () ; restoreWindowHeight = getHeight () ; restoreWindowX = getX () ; restoreWindowY = getY () ; setWidth ( getScreen () . getWidth () ) ; setHeight ( ( ( application . getDesktopBottom () ) - 1 ) ) ; setX ( 0 ) ; setY ( 1 ) ; maximized = true ; } 
private java.awt.image.BufferedImage resizeArtwork ( java.awt.image.BufferedImage originalImage , int type ) { int imgSize = 150 ; java.awt.image.BufferedImage resizedImage = new java.awt.image.BufferedImage ( imgSize , imgSize , type ) ; java.awt.Graphics2D g = resizedImage . createGraphics () ; g . drawImage ( originalImage , 0 , 0 , imgSize , imgSize , null ) ; g . dispose () ; return resizedImage ; } 
public void acceptCall ( android.view.View view ) { if ( ( mMediaPlayer ) != null ) { mMediaPlayer . stop () ; } finish () ; startCallWithFlag ( false ) ; org.json.JSONObject message = new org.json.JSONObject () ; com.webrtc.core.WebRtcService . getInstance () . emit ( P2PSocket.ACCEPT_CALL , message ) ; } 
public java.util.HashMap < java.lang.Long , java.lang.Boolean > getUnread_entriesMap () { if ( ( unread_entriesMap ) == null ) { unread_entriesMap = new java.util.HashMap < java.lang.Long , java.lang.Boolean > () ; if ( ( unread_entries ) != null ) { for ( java.lang.Long unreadEntry : unread_entries ) { unread_entriesMap . put ( unreadEntry , true ) ; } } } return unread_entriesMap ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.xml_parser ) ; if ( savedInstanceState == null ) { taskFragment = new neutronsoftwareinc.internetofthings.XMLParser.PlaceHolderFragment () ; getSupportFragmentManager () . beginTransaction () . add ( taskFragment , "MyFragment" ) . commit () ; } else { taskFragment = ( ( neutronsoftwareinc.internetofthings.XMLParser.PlaceHolderFragment ) ( getSupportFragmentManager () . findFragmentByTag ( "MyFragment" ) ) ) ; } taskFragment . startTask () ; } 
@ java.lang.Override public void update () { RobotMap.gearLiftFinder . computeHeadingToTarget () ; edu.wpi.first.wpilibj.smartdashboard.SmartDashboard . putNumber ( "Degree Offset (X)" , RobotMap.gearLiftFinder . getHeadingToTargetDegrees () ) ; edu.wpi.first.wpilibj.smartdashboard.SmartDashboard . putBoolean ( "We can see the target" , RobotMap.gearLiftFinder . haveValidHeading () ) ; if ( ( ( RobotMap.gearLiftFinder . getHeadingToTargetDegrees () ) > 2 ) || ( ( RobotMap.gearLiftFinder . getHeadingToTargetDegrees () ) < ( - 2 ) ) ) { org.usfirst.frc.team95.robot.auto.RotateBy rb = new org.usfirst.frc.team95.robot.auto.RotateBy ( RobotMap.gearLiftFinder . getHeadingToTargetRadians () , compass ) ; } else { stop () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( isLogin ) { isLogin = false ; btn_login_register . setImageResource ( R.drawable.btn_signin ) ; tv_switch . setText ( "Already have an account?" ) ; } else { isLogin = true ; btn_login_register . setImageResource ( R.drawable.register ) ; tv_switch . setText ( "Don't have an account yet?" ) ; } } 
public void loadModel ( java.lang.String modelFile ) throws java.lang.Exception { if ( ! ( new java.io.File ( modelFile ) . exists () ) ) { throw new java.lang.Exception ( "Model file doesn't exist!" ) ; } if ( fta . checkModel ( modelFile ) ) { throw new java.lang.Exception ( "Model file's format is not compatible with this JFastText version!" ) ; } fta . loadModel ( modelFile ) ; } 
public static boolean isPalindrome ( java.lang.String s ) { int first = 0 ; int second = ( s . length () ) - 1 ; while ( first <= second ) { if ( ! ( ( s . charAt ( first ) ) == ( s . charAt ( second ) ) ) ) { return false ; } first ++ ; second -- ; } return true ; } 
@ java.lang.Override public void configurePipeline ( co.cask.cdap.etl.api.PipelineConfigurer pipelineConfigurer ) throws java.lang.IllegalArgumentException { super . configurePipeline ( pipelineConfigurer ) ; if ( ( config.schema ) != null ) { try { pipelineConfigurer . getStageConfigurer () . setOutputSchema ( co.cask.cdap.api.data.schema.Schema . parseJson ( config.schema ) ) ; } catch ( java.io.IOException e ) { throw new java.lang.IllegalArgumentException ( ( "Unable to parse schema: " + ( e . getMessage () ) ) , e ) ; } } else { pipelineConfigurer . getStageConfigurer () . setOutputSchema ( pipelineConfigurer . getStageConfigurer () . getInputSchema () ) ; } } 
public com.dotmarketing.portlets.structure.model.Structure getStructureByVelocityVarName ( java.lang.String variableName ) { com.dotcms.contenttype.model.type.ContentType type = super . byVarOrInode ( variableName ) ; if ( type == null ) { try { type = com.dotmarketing.business.FactoryLocator . getContentTypeFactory2 () . find ( variableName ) ; return new com.dotcms.contenttype.transform.contenttype.StructureTransformer ( type ) . asStructure () ; } catch ( java.lang.Exception e ) { com.dotmarketing.util.Logger . warn ( this . getClass () , ( ( "Structure with var: '" + variableName ) + "' not found in db" ) ) ; } } return new com.dotcms.contenttype.transform.contenttype.StructureTransformer ( type ) . asStructure () ; } 
private static java.lang.String [] [] parseSheet ( com.ontotext.ehri.tools.Sheet sheet ) { int numColumns = com.ontotext.ehri.tools.ExcelReader . numColumns ( sheet ) ; java.lang.String [] [] rows = new java.lang.String [ [] sheet . getLastRowNum () ] [ ] ; for ( int i = 0 ; i < ( rows.length ) ; i ++ ) rows [ i ] = com.ontotext.ehri.tools.ExcelReader . parseRow ( sheet . getRow ( i ) , numColumns ) ; return rows ; } 
public static void expAddInternal ( net.minecraft.entity.player.EntityPlayerMP ep , int expDiff ) { if ( expDiff > 0 ) { for ( int i = 0 ; i < expDiff ; i ++ ) { ep.experienceTotal += ep . xpBarCap () ; ( ep.experienceLevel ) ++ ; } } else if ( expDiff < 0 ) { for ( int i = expDiff ; i > 0 ; i -- ) { ( ep.experienceLevel ) -- ; ep.experienceTotal -= ep . xpBarCap () ; } } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_edit_account ) ; java.lang.String pword = getIntent () . getStringExtra ( "password" ) ; if ( ! ( pword . isEmpty () ) ) { android.widget.EditText password = ( ( android.widget.EditText ) ( findViewById ( R.id.signup_password ) ) ) ; password . setText ( pword ) ; } } 
private java.util.List < com.example.ckrao.myapplication.Model.MoreCityModel > getDataFromList ( java.lang.String tag ) { java.util.List < com.example.ckrao.myapplication.Model.MoreCityModel > models = new java.util.ArrayList <> () ; java.lang.String strJson = android.preference.PreferenceManager . getDefaultSharedPreferences ( getApplicationContext () ) . getString ( tag , null ) ; if ( strJson == null ) { return models ; } com.google.gson.Gson gson = new com.google.gson.Gson () ; models = gson . fromJson ( strJson , new com.google.gson.reflect.TypeToken < java.util.List < com.example.ckrao.myapplication.Model.MoreCityModel > > () {} . getType () ) ; return models ; } 
@ java.lang.Override public void onChange ( com.androidsdk.snaphy.snaphyandroidsdk.list.DataList < java.util.Map < java.lang.String , java.lang.Object > > dataList ) { boolean done = true ; for ( com.orthopg.snaphy.orthopg.CustomModel.TrackImage trackImage : trackImages ) { if ( ! ( trackImage . isDownloaded () ) ) { done = false ; } } if ( done ) { callback . onSuccess ( postImages ) ; callback . onFinally () ; } } 
@ java.lang.Override public void onCreate ( android.database.sqlite.SQLiteDatabase db ) { java.lang.String TABEL = ( ( ( ( ( ( ( "CREATE TABLE IF not exists " + ( cx.ath.laghaim.waxprivacy.DBHelper.CONTACTS_TABLE_NAME ) ) + " " ) + "(" ) + "H_ROWS  integer," ) + "H_DATA1 text," ) + "H_PHONE   text," ) + "STATUS  integer" ) + ");" ; db . execSQL ( TABEL ) ; TABEL = "CREATE TABLE IF not exists H_ROWS ( H_ROWS INTEGER NOT NULL UNIQUE);" ; db . execSQL ( TABEL ) ; TABEL = "CREATE TABLE IF not exists H_DATA1 ( H_DATA1 text NOT NULL UNIQUE);" ; db . execSQL ( TABEL ) ; TABEL = "CREATE TABLE IF not exists H_PHONE ( H_PHONE text NOT NULL UNIQUE);" ; db . execSQL ( TABEL ) ; } 
@ org.junit.Test public void testLoginFail ( ) throws java.lang.Throwable { org.talend.components.salesforce.SalesforceConnectionProperties props = setupProps ( null , ( ! ( ADD_QUOTES ) ) ) ; props.userPassword.userId . setValue ( "blah" ) ; org.talend.daikon.properties.presentation.Form f = props . getForm ( SalesforceConnectionProperties.FORM_WIZARD ) ; props = ( ( org.talend.components.salesforce.SalesforceConnectionProperties ) ( org.talend.daikon.properties.test.PropertiesTestUtils . checkAndValidate ( getComponentService () , f , "testConnection" , props ) ) ) ; org.talend.components.salesforce.SalesforceComponentTestIT.LOGGER . debug ( props . getValidationResult () . toString () ) ; org.junit.Assert . assertEquals ( ValidationResult.Result.ERROR , props . getValidationResult () . getStatus () ) ; } 
@ java.lang.Override public int [] solve ( org.moflon.tgg.algorithm.datastructures.Graph sourceGraph , org.moflon.tgg.algorithm.datastructures.Graph targetGraph , org.moflon.tgg.algorithm.datastructures.ConsistencyCheckPrecedenceGraph protocol ) { net.sf.javailp.SolverFactory factory = getSolverFactory () ; factory . setParameter ( Solver.VERBOSE , 0 ) ; net.sf.javailp.Problem ilpProblem = createIlpProblemFromGraphs ( sourceGraph , targetGraph , protocol ) ; variableCount = ilpProblem . getVariablesCount () ; constraintCount = ilpProblem . getConstraintsCount () ; net.sf.javailp.Solver solver = factory . get () ; net.sf.javailp.Result result = solver . solve ( ilpProblem ) ; int [] arrayResult = getArrayFromResult ( result ) ; return arrayResult ; } 
private void updateName ( java.lang.String name ) { if ( ( this . getEntityPet () ) == null ) { return; } if ( this . getEntityPet () . hasInititiated () ) { this . getEntityPet () . updatePosition () ; } com.dsh105.echopet.compat.api.entity.type.nms.IEntityHumanPet human = ( ( com.dsh105.echopet.compat.api.entity.type.nms.IEntityHumanPet ) ( this . getEntityPet () ) ) ; if ( ( human . getGameProfile () ) != null ) { human . setGameProfile ( com.dsh105.echopet.compat.api.util.wrapper.WrappedGameProfile . getNewProfile ( human . getGameProfile () , name ) ) ; } } 
@ java.lang.Override public double evaluate ( final org.knime.base.node.mine.regression.logistic.learner4.glmnet.ClassificationTrainingRow row , final double [] prediction ) { final double logSumExp = org.knime.base.node.mine.regression.logistic.learner4.sag.MultinomialLoss . logSumExp ( prediction ) ; assert java.lang.Double . isFinite ( logSumExp ) ; final int cat = row . getCategory () ; return cat == ( prediction.length ) ? logSumExp - 1 : logSumExp - ( prediction [ row . getCategory () ] ) ; } 
public void insert ( Point2D p ) { KdTree.Node current = root ; KdTree.Node newNode = new KdTree.Node ( p ) ; if ( ( root ) == null ) { newNode . setOppDirection ( "y" ) ; RectHV rect = new RectHV ( 0 , 0 , 1 , 1 ) ; newNode . setRect ( rect ) ; root = newNode ; return; } traverseInsert ( current , newNode , null , null ) ; ( sizeNum ) ++ ; } 
private void incrementUpdatedNodes_MT ( calculation_john_pack.Observations o , boolean [] hidden , calculation_john_pack.ReducedConfiguration stats , int [] phenoOnSlice , int [] phenoOffSlice ) { for ( int x : phenoOnSlice ) { stats . increment ( getNodeCase ( x , hidden , o ) ) ; } for ( int x : phenoOffSlice ) { stats . increment ( getNodeCase ( x , hidden , o ) ) ; } } 
public void showGeoPointEditDialog ( de.k3b.android.locationMapViewer.geobmp.GeoBmpDto geoPointInfo ) { if ( ( this . edit ) == null ) { this . edit = new de.k3b.android.locationMapViewer.geobmp.GeoBmpEditDialog ( this . context , this , R.layout.geobmp_edit_name ) ; this . edit . setTitle ( context . getString ( R.string.title_bookmark_edit ) ) ; } if ( ! ( de.k3b.android.locationMapViewer.geobmp.BookmarkUtil . isBookmark ( geoPointInfo ) ) ) { geoPointInfo = de.k3b.android.locationMapViewer.geobmp.BookmarkUtil . createBookmark ( geoPointInfo ) ; } this . edit . onGeoInfo ( geoPointInfo ) ; this . context . showDialog ( de.k3b.android.locationMapViewer.geobmp.BookmarkListOverlay.EDIT_MENU_ID ) ; } 
@ java.lang.Override public void parse ( java.lang.String field , net.anei.cadpage.parsers.MsgInfo.Data data ) { super . parse ( field , data ) ; if ( field . startsWith ( "PD-" ) ) data.strCity = "CASPER" ; else if ( field . startsWith ( "NC" ) ) data.strCity = "NATRONA COUNTY" ; else { java.lang.String city = net.anei.cadpage.parsers.WY.WYNatronaCountyParser.CITY_CODES . getProperty ( field ) ; if ( city != null ) data.strCity = city ; } } 
private void onGetBaskets ( java.util.List < net.nashlegend.sourcewall.model.SubItem > subItems ) { if ( isFinishing () ) { return; } loadingView . onLoadSuccess () ; if ( ( subItems == null ) || ( ( subItems . size () ) == 0 ) ) { net.nashlegend.sourcewall.util.ToastUtil . toastBigSingleton ( "您还没有创建果篮 0.0 " ) ; finish () ; } else { adapter . notifyDataSetChanged () ; } } 
@ java.lang.Override public int compareTo ( intervalTree.Interval < N , Type > other ) { int startComparison = start . compareTo ( other . getStart () ) ; int endComparison = end . compareTo ( other . getEnd () ) ; if ( startComparison == 0 ) { return endComparison ; } else { return startComparison ; } } 
@ java.lang.Override public void onPrepared ( android.media.MediaPlayer mediaPlayer ) { state = agersant.polaris.PolarisMediaPlayer.State.PREPARED ; player . start () ; state = agersant.polaris.PolarisMediaPlayer.State.STARTED ; if ( ( seekTarget ) != null ) { seekTo ( seekTarget ) ; seekTarget = null ; } if ( pause ) { player . pause () ; } } 
public double [] playBackElevator () { double [] playArray = new double [ 3 ] ; if ( ( org.usfirst.frc.team3243.robot.Recorder.playIncrement ) > ( ( this . ElevData . size () ) - 1 ) ) { playArray [ 0 ] = 0 ; } else { playArray [ 0 ] = this . ElevData . get ( org.usfirst.frc.team3243.robot.Recorder.playIncrement ) ; } return playArray ; } 
public java.util.ArrayList < im.bernier.petfinder.model.Photo > getHiResPhotos () { java.util.ArrayList < im.bernier.petfinder.model.Photo > hiRes = new java.util.ArrayList <> () ; for ( im.bernier.petfinder.model.Photo photo : photos ) { if ( photo . getSize () . equalsIgnoreCase ( "x" ) ) { hiRes . add ( photo ) ; } } return hiRes ; } 
public static boolean addVarDeclToCorrectScope ( Tree.TreeNode t ) { if ( SymbolTable.HashMapTable . findParentBlock ( t ) . equals ( ( "block" + ( SymbolTable.HashMapTable.scopeCounter ) ) ) ) { java.lang.System.out . println ( SymbolTable.HashMapTable.scopeCounter ) ; SymbolTable.HashMapTable.hashArray . get ( ( ( SymbolTable.HashMapTable.scopeCounter ) - 1 ) ) . put ( t . getChildren () . get ( 1 ) . getData () , t . getChildren () . get ( 0 ) . getData () ) ; return true ; } else { ( SymbolTable.HashMapTable.scopeCounter ) -- ; return false ; } } 
private void processCascadingSelect ( org.w3c.dom.Node n ) { java.lang.String instanceId = null ; org.w3c.dom.NamedNodeMap nmL = n . getAttributes () ; if ( nmL != null ) { org.w3c.dom.Node id = nmL . getNamedItem ( "id" ) ; if ( id != null ) { instanceId = id . getNodeValue () ; java.lang.System.out . println ( ( "Cascading Instance ID:" + instanceId ) ) ; } } if ( instanceId != null ) { org.w3c.dom.Node topInstance = org.smap.server.utilities.UtilityMethods . getFirstElement ( n ) ; processCascadingItems ( topInstance , instanceId ) ; } } 
private wyal.lang.Proof.State instantiateLengthAxiom ( wyal.lang.WyalFile.Expr.Polynomial index , wyal.lang.WyalFile.Expr.Polynomial length , wyal.lang.Proof.State state , wyal.lang.Formula . . . dependencies ) { wyal.lang.WyalFile . println ( dependencies ) ; wyal.lang.Formula axiom = wyal.util.Formulae . simplifyFormula ( wyal.util.Formulae . lessThan ( index , length ) , types ) ; return state . infer ( this , state . allocate ( axiom ) , dependencies ) ; } 
private void setupTimer () { if ( ( scheduledFuture ) != null ) { scheduledFuture . cancel ( true ) ; } if ( ( ( numOfMessages ) > 1 ) && ( ( timeFrequency ) > 0 ) ) { if ( ( scheduledExecutorService ) == null ) { scheduledExecutorService = java.util.concurrent.Executors . newSingleThreadScheduledExecutor () ; } scheduledTask () ; } else { if ( ( scheduledExecutorService ) != null ) { scheduledExecutorService . shutdown () ; scheduledExecutorService = null ; } } } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { switch ( which ) { case android.app.Dialog.BUTTON_NEGATIVE : dialog . cancel () ; break; case android.app.Dialog.BUTTON_POSITIVE : dialog . dismiss () ; com.geekeclectic.android.stashcache.SelectFabricDialogFragment.mSelectFabricDialogCallback . onSelectedFabric ( com.geekeclectic.android.stashcache.SelectFabricDialogFragment.mFabrics . get ( com.geekeclectic.android.stashcache.SelectFabricDialogFragment.mSelectedIndex ) ) ; break; default: com.geekeclectic.android.stashcache.SelectFabricDialogFragment.mSelectedIndex = which ; break; } } 
public void deletePeerProductData ( final io.subutai.hub.share.dto.PeerProductDataDto peerProductDataDto ) throws java.security.KeyStoreException , java.security.NoSuchAlgorithmException , java.security.UnrecoverableKeyException { java.lang.String removePath = getProductProcessUrl ( configManager . getPeerId () , peerProductDataDto . getProductId () ) ; org.apache.cxf.jaxrs.client.WebClient client = configManager . getTrustedWebClientWithAuth ( removePath , configManager . getHubIp () ) ; javax.ws.rs.core.Response r = client . delete () ; if ( ( r . getStatus () ) == ( org.apache.http.HttpStatus.SC_NO_CONTENT ) ) { io.subutai.core.hubmanager.impl.processor.ProductProcessor.LOG . debug ( ( "Status: " + "no content" ) ) ; } } 
@ org.jbehave.core.annotations.Given ( value = "a library, containing a book with isbn <isbn>" ) public void createLibraryWithSingleBookWithGivenIsbn ( @ org.jbehave.core.annotations.Named ( value = "isbn" ) java.lang.String isbn ) { de.codecentric.worblehat.acceptancetests.step.business.Book book = de.codecentric.worblehat.acceptancetests.step.business.DemoBookFactory . createDemoBook () . withISBN ( isbn ) . build () ; bookService . createBook ( book . getTitle () , book . getAuthor () , book . getEdition () , isbn , book . getYearOfPublication () ) ; } 
public java.lang.String getTaskTag ( java.lang.String name ) { for ( int i = 0 ; i < ( edu.blackburn.cs.oclam.Database.TaskList.tasksBag . size () ) ; i ++ ) { edu.blackburn.cs.oclam.Database.Task test = ( ( edu.blackburn.cs.oclam.Database.Task ) ( edu.blackburn.cs.oclam.Database.TaskList.tasksBag . get ( i ) ) ) ; if ( name . equals ( test . getName () ) ) { return test . getTag () ; } } java.lang.String nullString = "Description Not Found" ; return nullString ; } 
public static void main ( final java.lang.String [] args ) throws java.io.IOException { java.io.BufferedReader br = new java.io.BufferedReader ( new java.io.InputStreamReader ( java.lang.System.in ) ) ; de.dj_steam.bot.cli.LoopingConsole . printUsageBanner () ; while ( true ) { de.dj_steam.bot.engine.RobotEngine robotEngine = new de.dj_steam.bot.engine.RobotEngine () ; java.lang.System.out . print ( "> " ) ; java.lang.String input = br . readLine () ; robotEngine . commandBot ( input ) ; if ( input . trim () . toLowerCase () . equals ( de.dj_steam.bot.cli.LoopingConsole.EXIT_COMMAND ) ) { java.lang.System.out . println ( "exiting" ) ; return; } } } 
protected boolean isEqualTo ( de.uni_freiburg.informatik.ultimate.plugins.analysis.abstractinterpretationv2.domain.nonrelational.interval.IntervalDomainValue other ) { if ( other == null ) { return false ; } if ( other == ( this ) ) { return true ; } if ( ( mIsBottom ) || ( other.mIsBottom ) ) { return ( mIsBottom ) == ( other.mIsBottom ) ; } if ( ( mLower . equals ( other.mLower ) ) && ( mUpper . equals ( other.mUpper ) ) ) { return true ; } return false ; } 
private void loadIssueArticles ( int position ) { mLoadIssueId = mCovers . get ( position ) . getId () ; if ( ( android.text.TextUtils . isEmpty ( mLoadIssueId ) ) || ( ( mLoadIssueId ) != ( mCurrentIssueId ) ) ) { mSubItemsCount = mCovers . get ( position ) . getSubItemsCount () ; mCurrentIssueId = mLoadIssueId ; InformSnackbar ( R.string.loading_articles , true ) ; loadArticles () ; } } 
@ java.lang.Override public com.amazonaws.util.awsclientgenerator.domainmodels.SdkFileEntry [] generateSourceFiles ( com.amazonaws.util.awsclientgenerator.domainmodels.codegeneration.ServiceModel serviceModel ) throws java.lang.Exception { com.amazonaws.util.awsclientgenerator.domainmodels.codegeneration.Shape queueAttributeNameShape = serviceModel . getShapes () . get ( "QueueAttributeName" ) ; if ( queueAttributeNameShape != null ) { queueAttributeNameShape . getEnumValues () . add ( 0 , "All" ) ; queueAttributeNameShape . getEnumValues () . add ( "SentTimestamp" ) ; queueAttributeNameShape . getEnumValues () . add ( "ApproximateFirstReceiveTimestamp" ) ; queueAttributeNameShape . getEnumValues () . add ( "ApproximateReceiveCount" ) ; queueAttributeNameShape . getEnumValues () . add ( "SenderId" ) ; } return super . generateSourceFiles ( serviceModel ) ; } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( credentialsValid ( textUsername . getText () , passwordField1 . getText () , passwordField2 . getText () ) ) { createUser ( textUsername . getText () , passwordField1 . getText () ) ; containedIn . showRPage () ; java.lang.System.out . println ( ( ( ( ( ( textUsername . getText () ) + ", " ) + ( passwordField1 . getText () ) ) + ", " ) + ( passwordField2 . getText () ) ) ) ; } } 
@ java.lang.Override public void prepareUpdates () { updateTestCaseMessageMap . clear () ; allTestCaseMessageMap . clear () ; addTestCasesFromSavedSetAssessment ( org.immregistries.smm.tester.certify.CAAssessmentForQuery.TEST_CASE_SET_FOR_ASSESSMENT_FOR_QUERY , TestCaseMode.DEFAULT , "VXU" ) ; for ( org.immregistries.smm.transform.TestCaseMessage tcm : updateList ) { java.lang.System.out . println ( "--> --------------------------------------------------------------------- " ) ; java.lang.System.out . println ( ( ( "--> tcm.getTestCaseNumber() = '" + ( tcm . getTestCaseNumberOriginal () ) ) + "'" ) ) ; updateTestCaseMessageMap . put ( tcm . getTestCaseNumberOriginal () , tcm ) ; } } 
public void createIndex ( K key , V value ) { for ( java.util.Map.Entry < java.lang.Long , org.corfudb.runtime.collections.SMRMultiIndex.IndexSpecification > entry : indexSpecifications . entrySet () ) { java.util.Collection index = getIndex ( entry . getKey () , entry . getValue () , key , value ) ; P projection = ( ( P ) ( entry . getValue () . getProjectionFunction () . generateProjection ( key , value ) ) ) ; index . add ( projection ) ; } } 
public void onClick ( android.view.View v ) { android.widget.Toast T = android.widget.Toast . makeText ( getApplicationContext () , "-Powered by Technotronic" , Toast.LENGTH_SHORT ) ; T . setGravity ( ( ( android.view.Gravity.BOTTOM ) | ( android.view.Gravity.END ) ) , 0 , 0 ) ; T . show () ; android.content.Intent i = new android.content.Intent ( getApplicationContext () , com.technotronics.priceconverter.ReverseBilling . class ) ; startActivity ( i ) ; } 
public void loadFromXml ( org.xmlpull.v1.XmlPullParser xml ) throws java.io.IOException , org.xmlpull.v1.XmlPullParserException { name = xml . getAttributeValue ( null , "name" ) ; imageUri = xml . getAttributeValue ( null , "uri" ) ; annotations = new java.util.ArrayList <> () ; xml . nextTag () ; while ( xml . getName () . equals ( "annotation" ) ) { edu.msu.becketta.dialog_simple.Annotation newAnnot = new edu.msu.becketta.dialog_simple.Annotation () ; newAnnot . loadAnnotationsXml ( xml ) ; annotations . add ( newAnnot ) ; edu.msu.becketta.dialog_simple.Utilities . skipToEndTag ( xml ) ; xml . nextTag () ; } } 
public static java.lang.String produceReason ( java.lang.String [] args ) { java.lang.String reason = "" ; for ( int i = 2 ; i < ( args.length ) ; i ++ ) { reason = ( ( i + 1 ) == ( args.length ) ) ? reason + ( args [ i ] ) : ( reason + ( args [ i ] ) ) + " " ; } return reason ; } 
private void sendConfirmSession ( byte [] sessionKey ) throws java.security.InvalidKeyException , javax.crypto.BadPaddingException { byte [] letter = ink.aquar.scp.v1.SecureDelivery.LetterWrapper . wrapAndEncrypt ( sessionKey , symCrypto , sessionKey ) ; ink.aquar.scp.v1.SecureDelivery.Packet packet = new ink.aquar.scp.v1.SecureDelivery.Packet ( sessionId , ink.aquar.scp.v1.SecureDelivery.Operations.CONFIRM_SESSION , 0 , letter ) ; basicMessenger . send ( packet . wrap () ) ; } 
public boolean onScreen () { return ( ( ( ( boundingBoxWorld.left ) <= ( Prototype.stage.width ) ) && ( ( boundingBoxWorld.top ) <= ( Prototype.stage.height ) ) ) && ( ( boundingBoxWorld.right ) >= 0 ) ) && ( ( boundingBoxWorld.bottom ) >= 0 ) ; } 
public void runTimer ( long now ) { java.util.Iterator < com.hawky.jhttpload.Task > itr = tasks . iterator () ; while ( itr . hasNext () ) { com.hawky.jhttpload.Task task = itr . next () ; if ( ( task.execTimeMillis ) > now ) { break; } task.proc . run ( task.associatedData , now ) ; itr . remove () ; if ( task.periodic ) { task.execTimeMillis += task.intervalMillis ; this . submitTask ( task ) ; } } } 
public static int normalizeOffset ( final com.maddyhome.idea.vim.helper.Editor editor , int offset , final boolean allowEnd ) { if ( offset <= 0 ) { return 0 ; } final int textLength = editor . getDocument () . getTextLength () ; if ( offset > textLength ) { offset = textLength ; } if ( ( ( offset > 0 ) && ( ! allowEnd ) ) && ( ( editor . getDocument () . getCharsSequence () . charAt ( offset ) ) == '\n' ) ) { offset -- ; } return offset ; } 
@ java.lang.Override public android.support.v4.app.Fragment getItem ( int position ) { if ( position == 0 ) { com.rahmanbari.discountopia.fragments.DepartmentsFragment departmentsTab = new com.rahmanbari.discountopia.fragments.DepartmentsFragment () ; return departmentsTab ; } else if ( position == 1 ) { com.rahmanbari.discountopia.fragments.FeaturedDealsFragment featuredDealsTab = new com.rahmanbari.discountopia.fragments.FeaturedDealsFragment () ; return featuredDealsTab ; } else if ( position == 2 ) { com.rahmanbari.discountopia.fragments.BrandsFragment brandsTab = new com.rahmanbari.discountopia.fragments.BrandsFragment () ; return brandsTab ; } else { com.rahmanbari.discountopia.fragments.MallsFragment mallsTab = new com.rahmanbari.discountopia.fragments.MallsFragment () ; return mallsTab ; } } 
public void posterContainsKeyword ( java.lang.String keyword ) { java.lang.String posterText = countdownWidgetPage . getCountdownWidget () . getPosterWindow () . getText () ; org.junit.Assert . assertTrue ( java.lang.String . format ( "The poster does not contains %s but has text: %s" , keyword , posterText ) , keyword . toLowerCase () . contains ( posterText . toLowerCase () ) ) ; } 
@ android.support.annotation.RequiresApi ( api = Build.VERSION_CODES.KITKAT ) @ java.lang.Override public void onNotificationRemoved ( android.service.notification.StatusBarNotification sbn ) { if ( yogesh.firzen.mukkiasevaigal.P . getBoolean ( this , "Autodownload_From_Notification" ) ) { java.lang.String pack = sbn . getPackageName () ; if ( pack . equals ( "com.instagram.android" ) ) { try { org.apache.commons.io.FileUtils . writeStringToFile ( new java.io.File ( getExternalFilesDir ( null ) , "test.txt" ) , getAllSbn ( sbn ) , java.nio.charset.Charset . forName ( "utf-8" ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } yogesh.firzen.mukkiasevaigal.M . L ( "NSaver" , getAllSbn ( sbn ) ) ; } } } 
public void stopScan ( com.m039.beacon.keeper.util.SimpleLeScanner.LeScanCallback callback ) { android.bluetooth.BluetoothAdapter ba = com.m039.beacon.keeper.U . getBluetoothAdapter ( mContext ) ; if ( ( ( ba != null ) && ( mIsScanning ) ) && ( callback != null ) ) { ba . stopLeScan ( callback ) ; onStopScan () ; mIsScanning = false ; } else { com.m039.beacon.keeper.L . wtf ( com.m039.beacon.keeper.util.SimpleLeScanner.TAG , "Failed to stopScan" ) ; } } 
public void callPharmacyService ( final com.mdlive.unifiedmiddleware.plugins.NetworkSuccessListener < org.json.JSONObject > responseListener , final com.mdlive.unifiedmiddleware.plugins.NetworkErrorListener errorListener ) { if ( locationService . checkLocationServiceSettingsEnabled ( getApplicationContext () ) ) { showProgress () ; registerReceiver ( locationReceiver , intentFilter ) ; locationService . setBroadCastData ( getClass () . getSimpleName () ) ; locationService . startTrackingLocation ( getApplicationContext () ) ; } else { com.mdlive.unifiedmiddleware.services.pharmacy.PharmacyService services = new com.mdlive.unifiedmiddleware.services.pharmacy.PharmacyService ( this , null ) ; services . doMyPharmacyRequest ( "" , "" , responseListener , errorListener ) ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; javaCameraView = ( ( org.opencv.android.JavaCameraView ) ( findViewById ( R.id.java_camera_view ) ) ) ; javaCameraView . setVisibility ( SurfaceView.VISIBLE ) ; javaCameraView . setCvCameraViewListener ( this ) ; button_take_img = ( ( android.widget.Button ) ( findViewById ( R.id.button ) ) ) ; com.example.idan.urban_octo_guacamole.inputHandler ih = new com.example.idan.urban_octo_guacamole.inputHandler ( this ) ; ih . getImg () ; } 
@ org.junit.Test public void deveRetornarRankingDeUsuarios () { com.coursera.forum.model.Usuario usuario = this . criaUsuario ( "user" , "User" , 70 ) ; this . dao . inserir ( usuario ) ; java.util.List < com.coursera.forum.model.Usuario > ranking = this . dao . ranking () ; org.junit.Assert . assertNotNull ( ranking ) ; org.junit.Assert . assertFalse ( ranking . isEmpty () ) ; org.junit.Assert . assertEquals ( 3 , ranking . size () ) ; } 
public javax.swing.JPanel getMap () { java.lang.System.out . println ( "Started" ) ; this . worldWindPanel = new gov.nasa.worldwind.awt.WorldWindowGLJPanel () ; this . worldWindPanel . setModel ( new gov.nasa.worldwind.BasicModel () ) ; this . worldWindPanel . getInputHandler () . addSelectListener ( new gov.nasa.worldwind.util.BasicDragger ( this . worldWindPanel ) ) ; layer = new gov.nasa.worldwind.layers.RenderableLayer () ; this . worldWindPanel . getModel () . getLayers () . add ( layer ) ; this . worldWindPanel . getInputHandler () . addMouseListener ( getMouseListener () ) ; return this . worldWindPanel ; } 
public static boolean isBlank ( java.lang.String str ) { if ( com.xjd.utils.basic.StringUtils . isEmpty ( str ) ) return true ; for ( int i = 0 , len = str . length () ; i < len ; i ++ ) { if ( ( str . charAt ( i ) ) != ' ' ) { return false ; } } return true ; } 
public void doViewDocumentation ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response , org.semanticwb.portal.api.SWBParamRequest paramRequest ) throws java.io.IOException , org.semanticwb.portal.api.SWBResourceException { response . setContentType ( "text/html" ) ; response . setCharacterEncoding ( "UTF-8" ) ; java.lang.String path = ( org.semanticwb.SWBPlatform . getContextPath () ) + "/swbadmin/jsp/process/documentation/userDocumentationView.jsp" ; javax.servlet.RequestDispatcher rd = request . getRequestDispatcher ( path ) ; try { request . setAttribute ( org.semanticwb.process.documentation.resources.SWPUserDocumentationResource.PARAM_REQUEST , paramRequest ) ; rd . forward ( request , response ) ; } catch ( javax.servlet.ServletException ex ) { log . error ( "Error on doViewDocumentation" , ex ) ; } } 
public com.Ben12345rocks.AdvancedCore.Util.Item.ItemBuilder setSkullOwner ( org.bukkit.OfflinePlayer offlinePlayer ) { try { org.bukkit.inventory.meta.SkullMeta im = ( ( org.bukkit.inventory.meta.SkullMeta ) ( is . getItemMeta () ) ) ; im . setOwningPlayer ( offlinePlayer ) ; is . setItemMeta ( im ) ; } catch ( java.lang.ClassCastException expected ) {} return this ; } 
private static boolean classOk ( java.lang.String className ) { try { org.apache.jmeter.protocol.java.sampler.JavaSamplerClient client = ( ( org.apache.jmeter.protocol.java.sampler.JavaSamplerClient ) ( java.lang.Class . forName ( className , true , java.lang.Thread . currentThread () . getContextClassLoader () ) . newInstance () ) ) ; return client instanceof org.apache.jmeter.protocol.java.sampler.JavaSamplerClient ; } catch ( java.lang.Exception ex ) { return false ; } } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) @ org.junit.Test public void testFindProvidersMultipleInterfacesWithProviderFirst () { java.util.List < java.lang.Class < ? > > classesInBundle = java.util.Arrays . asList ( no.steria.osgi.jsr330activator.testbundle.HelloService2 . class , no.steria.osgi.jsr330activator.testbundle.implementation.HelloServiceImplementation . class , no.steria.osgi.jsr330activator.testbundle.implementation.HelloServiceProvider2 . class ) ; no.steria.osgi.jsr330activator.Jsr330Activator activator = new no.steria.osgi.jsr330activator.Jsr330Activator () ; java.util.Map < java.lang.reflect.Type , java.lang.Class < ? > > providers = activator . findProviders ( classesInBundle ) ; assertEquals ( 1 , providers . size () ) ; assertEquals ( no.steria.osgi.jsr330activator.testbundle.implementation.HelloServiceProvider2 . class , providers . get ( no.steria.osgi.jsr330activator.testbundle.HelloService . class ) ) ; } 
private java.util.List < java.util.List < java.lang.String > > transformToList ( java.util.List < java.lang.String > sentences ) { java.util.List < java.util.List < java.lang.String > > out = new java.util.ArrayList <> () ; for ( java.lang.String s : sentences ) { out . add ( java.util.Arrays . asList ( s . substring ( 1 , ( ( s . length () ) - 1 ) ) . split ( " " ) ) ) ; } return out ; } 
public int [] readInitialLocation ( java.io.InputStream stream ) { java.util.Scanner in = new java.util.Scanner ( stream ) ; in . useDelimiter ( "\n" ) ; java.lang.System.out . println ( "Location:" ) ; if ( in . hasNext () ) { java.lang.String loc = in . next () ; return convertLocation ( loc ) ; } return null ; } 
@ javax.ejb.TransactionAttribute ( value = javax.ejb.TransactionAttributeType.REQUIRED ) public T merge ( T t ) throws me.nlighten.backend.db.dao.exception.DAOException { try { T result = null ; result = em . merge ( t ) ; em . flush () ; return result ; } catch ( java.lang.Exception e ) { throw new me.nlighten.backend.db.dao.exception.DAOException ( me.nlighten.backend.db.dao.exception.DAOMessageException.OBJECT_COULD_NOT_BE_MERGED , e ) ; } } 
private void resetButtonBackground () { buttonHomeTry . setBackgroundColor ( Color.TRANSPARENT ) ; buttonAwayTry . setBackgroundColor ( Color.TRANSPARENT ) ; buttonHomeConversion . setBackgroundColor ( Color.TRANSPARENT ) ; buttonAwayConversion . setBackgroundColor ( Color.TRANSPARENT ) ; buttonHomePenalty . setBackgroundColor ( Color.TRANSPARENT ) ; buttonAwayPenalty . setBackgroundColor ( Color.TRANSPARENT ) ; buttonHomeDropGoal . setBackgroundColor ( Color.TRANSPARENT ) ; buttonAwayDropGoal . setBackgroundColor ( Color.TRANSPARENT ) ; buttonHalfTime . setBackgroundColor ( Color.TRANSPARENT ) ; buttonFullTime . setBackgroundColor ( Color.TRANSPARENT ) ; } 
public static void main ( java.lang.String [] args ) { int [] A = new int [] { 1 , 2 , 4 , 3 } ; sorting_algorithms.MergeSort . Merge_Sort_Algorithm ( A , 0 , ( ( A.length ) - 1 ) , 0 ) ; sorting_algorithms.MergeSort . printArray ( "Sorted Array: " , A ) ; } 
private double [] getMinMax ( double [] inputColumnAsNumbers ) { double min = java.lang.Double.MAX_VALUE ; double max = - ( java.lang.Double.MAX_VALUE ) ; for ( int i = 0 ; i < ( inputColumnAsNumbers.length ) ; i += 2 ) { double value = inputColumnAsNumbers [ i ] ; min = java.lang.Math . min ( min , value ) ; max = java.lang.Math . max ( max , value ) ; } return new double [] { min , max } ; } 
public com.nabto.api.NabtoStatus getFingerprint ( java.lang.String certId , java.lang.String [] fingerprint ) { byte [] byteFingerprint = new byte [ 16 ] ; com.nabto.api.NabtoStatus ret = com.nabto.api.NabtoStatus . fromInteger ( com.nabto.api.NabtoCApiWrapper . nabtoGetFingerprint ( certId , byteFingerprint ) ) ; for ( int i = 0 ; i < ( byteFingerprint.length ) ; i ++ ) { java.lang.String str = java.lang.String . format ( "%02x" , byteFingerprint [ i ] ) ; fingerprint [ 0 ] += ( i != 0 ) ? ":" + str : str ; } return ret ; } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { if ( ( view ) == null ) { view = inflater . inflate ( R.layout.fragment_article_list , container , false ) ; initView () ; allarticlePresenter = new com.otb.designerassist.mvp.presenter.impl.AllarticlePresenter ( this ) ; qryMeijus () ; } return view ; } 
public static void main ( java.lang.String [] args ) throws java.lang.Exception { java.lang.String model_in = "resources/model/TitoloUnico.xml" ; eu.learnpad.transformations.preprocessing.Alignment al = new eu.learnpad.transformations.preprocessing.Alignment () ; java.lang.String sanitazedFilePath = al . sanitizer ( model_in ) ; java.lang.System.out . println ( "Alignment Done!" ) ; eu.learnpad.transformations.run.MainTest mt = new eu.learnpad.transformations.run.MainTest () ; java.lang.System.out . println ( "*******STARTING THE OVERALL TRANSFORMATION*******" ) ; mt . executeTransformation ( sanitazedFilePath ) ; java.lang.System.out . println ( "*******FINISHED THE OVERALL TRANSFORMATION*******" ) ; } 
public clojure.lang.IFn getMethod ( java.lang.Object dispatchVal ) { if ( ( cachedHierarchy ) != ( hierarchy . deref () ) ) resetCache () ; clojure.lang.IFn targetFn = ( ( clojure.lang.IFn ) ( methodCache . valAt ( dispatchVal ) ) ) ; if ( targetFn != null ) return targetFn ; return findAndCacheBestMethod ( dispatchVal ) ; } 
private boolean isMatchFolder ( java.lang.String folderPath ) { final boolean result ; if ( ( folderPattern ) == null ) { result = true ; } else { final boolean useMatch ; if ( ( fileNamePattern ) == null ) { useMatch = match ; } else { useMatch = true ; } result = ( folderPattern . matcher ( folderPath ) . find () ) == useMatch ; } return result ; } 
public void addLineItem ( android.view.View v ) { if ( ( ( curBudget ) - ( db . getTotalAllocated () ) ) == 0 ) { android.widget.Toast . makeText ( getActivity () , "please set budget " , Toast.LENGTH_SHORT ) . show () ; android.support.v4.app.DialogFragment fragment = new com.byteshaft.mybudget.ui.BudgetDialogFragment () ; fragment . show ( getFragmentManager () , "budget" ) ; fragment . setCancelable ( false ) ; } else { android.content.Intent intent = new android.content.Intent ( getActivity () , com.byteshaft.mybudget.activities.items.AddItemActivity . class ) ; startActivity ( intent ) ; } } 
private void parseOn ( java.lang.String userInput , org.jimple.planner.InputStruct inputStruct ) throws java.lang.Exception { java.util.Calendar parsedCalendar = timeParser . parseTime ( userInput ) ; inputStruct . setAtIndex ( INDEX_FROM , calendarToStringFormat ( parsedCalendar ) ) ; parsedCalendar . set ( java.util.Calendar.HOUR_OF_DAY , 23 ) ; parsedCalendar . set ( java.util.Calendar.MINUTE , 59 ) ; inputStruct . setAtIndex ( INDEX_TO , calendarToStringFormat ( parsedCalendar ) ) ; java.lang.System.out . println ( ( ( ( inputStruct . getAtIndex ( INDEX_FROM ) ) + " " ) + ( inputStruct . getAtIndex ( INDEX_TO ) ) ) ) ; } 
public void initialize () { for ( int i = 0 ; i < 26 ; i ++ ) { handCards [ i ] = new com.example.ryan.cards.Card ( "Empty" ) ; } for ( int i = 0 ; i < 5 ; i ++ ) { selected [ i ] = new com.example.ryan.cards.Card ( "Empty" ) ; } } 
private boolean validPlacement ( player.Hex h1 , player.Hex h2 , player.Hex h3 ) { if ( hexManager . validTileHexes ( hex1 , hex2 , hex3 ) ) { if ( ! ( ( ourSettlements . isCovered ( h1 , h2 , h3 ) ) || ( theirSettlements . isCovered ( h1 , h2 , h3 ) ) ) ) return true ; else return false ; } else return false ; } 
public boolean evaluate ( org.gephi.graph.api.Graph graph , org.gephi.graph.api.Edge edge ) { java.lang.Object value = partition . getValue ( edge ) ; if ( value == null ) { return parts . contains ( org.gephi.filters.plugin.partition.PartitionBuilder.PartitionFilter.NULL ) ; } else { return parts . contains ( value ) ; } } 
private static boolean isSuitable ( java.lang.String [] optionValues , java.util.HashMap tagsMap ) { for ( int i = 0 ; i < ( ( optionValues.length ) - 1 ) ; i = i + 2 ) { if ( ( tagsMap . containsKey ( optionValues [ i ] ) ) && ( ! ( java.util.Objects . equals ( tagsMap . get ( optionValues [ i ] ) , optionValues [ ( i + 1 ) ] ) ) ) ) { return false ; } } return true ; } 
@ java.lang.Override public void onPageScrolled ( int position , float positionOffset , int positionOffsetPixels ) { if ( ( loopPagerAdapterWrapper . getCount () ) > 0 ) { float length = ( ( position % ( bannerInfos . size () ) ) + positionOffset ) / ( ( bannerInfos . size () ) - 1 ) ; if ( length >= 1 ) length = 1 ; float path = length * ( totalDistance ) ; android.support.v4.view.ViewCompat . setTranslationX ( animIndicator , path ) ; } } 
@ java.lang.Override public void onDescribed ( com.google.errorprone.matchers.Description description ) { if ( ( description.fixes . size () ) > 0 ) { com.google.errorprone.fixes.Fix fix = description.fixes . get ( 0 ) ; importsToAdd . addAll ( fix . getImportsToAdd () ) ; importsToRemove . removeAll ( fix . getImportsToRemove () ) ; for ( com.google.errorprone.fixes.Replacement replacement : fix . getReplacements ( endPositions ) ) { addReplacement ( replacement ) ; } } } 
@ java.lang.Override public void done ( com.parse.ParseException e ) { if ( e == null ) { java.lang.String itemId = listItem . getObjectId () ; com.example.shopply.shopplynewapp.DataObjectItem item = new com.example.shopply.shopplynewapp.DataObjectItem ( listItem . getObjectId () , s , itemCategoryColor , value , ( ! checked ? 0 : 1 ) ) ; ( ( com.example.shopply.shopplynewapp.adapters.MyRecyclerViewItemListAdapter ) ( mAdapterItem ) ) . addItem ( item , ( ( itemIndex ) ++ ) ) ; } else { android.util.Log . i ( com.example.shopply.shopplynewapp.activities.ItemListCardView.TAG , ( "save new item failed, error = " + ( e . getMessage () ) ) ) ; } } 
private de.beuth.cg1.dogeraytracer.vecmatlib.Normal3 calcIntersectionNormal ( de.beuth.cg1.dogeraytracer.vecmatlib.Ray r , double t ) { de.beuth.cg1.dogeraytracer.vecmatlib.Point3 at = r . at ( t ) ; de.beuth.cg1.dogeraytracer.vecmatlib.Normal3 normal3 = new de.beuth.cg1.dogeraytracer.vecmatlib.Normal3 ( ( ( at.x ) - ( center.x ) ) , ( ( at.y ) - ( center.y ) ) , ( ( at.z ) - ( center.z ) ) ) ; return normal3 . mul ( 1 ) ; } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { android.view.View rootView = inflater . inflate ( R.layout.fragment_main , container , false ) ; listView = ( ( android.widget.ListView ) ( rootView . findViewById ( android.R.id.list ) ) ) ; graphsList = generateDescriptions () ; adapter = new deltagraphs.norrisviewer.presenter.mainPresenter.MainPresenterImpl.ChartAdapter ( getActivity () , 0 , graphsList ) ; listView . setAdapter ( adapter ) ; listView . setOnItemClickListener ( this ) ; return rootView ; } 
@ java.lang.Override protected void onResume () { super . onResume () ; if ( ( Build.VERSION.SDK_INT ) >= 23 ) { if ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.CAMERA ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { android.support.v4.app.ActivityCompat . requestPermissions ( this , new java.lang.String [] { Manifest.permission.CAMERA , Manifest.permission.WRITE_EXTERNAL_STORAGE } , 1 ) ; } else { resumeCamera () ; } } else { resumeCamera () ; } } 
@ cruise.umple.compiler.Test public void finalStateInOneConcurrentRegion () { assertParse ( "211_finalState_inOneConcurrentRegion.ump" , "[classDefinition][name:Dryer][stateMachine][inlineStateMachine][name:status][state][stateName:On][state][stateName:Rotating][transition][event:dryingCompleted][stateName:Final][||:||][state][stateName:Heating][transition][event:fire][stateName:Off][state][stateName:Off]" ) ; cruise.umple.compiler.UmpleClass uClass = model . getUmpleClass ( "Dryer" ) ; cruise.umple.compiler.State state = uClass . getStateMachine ( 0 ) . findState ( "On" ) . getNestedStateMachine ( 0 ) . findState ( "Final" ) ; cruise.umple.compiler.Assert . assertEquals ( true , state . isFinalState () ) ; state = uClass . getStateMachine ( 0 ) . findState ( "On" ) . getNestedStateMachine ( 1 ) . findState ( "Final" ) ; cruise.umple.compiler.Assert . assertEquals ( null , state ) ; } 
public boolean addUserAccount ( tripplanner_server.models.UserAccount account ) { if ( account == null ) return false ; java.lang.String sql = ( ( ( ( ( ( ( ( ( "INSERT INTO \"" + ( schemaName ) ) + "\".useraccount(username, password, email, date)\tVALUES (\'" ) + ( account . getUserName () ) ) + "\', \'" ) + ( account . getPassword () ) ) + "\', \"" ) + ( account . getEmail () ) ) + "\', \"" ) + ( account . getDate () ) ) + "\');" ; return this . executeUpdate ( sql ) ; } 
private static java.util.List < java.lang.String > getFileLines ( java.io.File file ) { java.util.List < java.lang.String > lines = new java.util.ArrayList <> () ; try { java.util.Scanner scanner = new java.util.Scanner ( file ) ; while ( scanner . hasNext () ) { lines . add ( scanner . nextLine () ) ; } scanner . close () ; } catch ( java.io.FileNotFoundException e ) { e . printStackTrace () ; } return lines ; } 
@ org.junit.Test ( expected = java.lang.NullPointerException . class ) public void sortFeaturesWithSectionsNoSetup ( ) throws java.lang.Exception { org.phenotips.export.internal.ConversionHelpers helpers = new org.phenotips.export.internal.ConversionHelpers () ; org.phenotips.export.internal.ConversionHelpers helpersSpy = org.mockito.Mockito . spy ( helpers ) ; java.util.Set < org.phenotips.data.Feature > features = new java.util.HashSet <> () ; helpersSpy . featureSetUp ( true , true , false ) ; org.mockito.Mockito . doReturn ( null ) . when ( helpersSpy ) . getCategoryMapping () ; helpersSpy . sortFeaturesWithSections ( features ) ; } 
public static void main ( java.lang.String [] args ) { Main main = new Main () ; main . loadData ( "iris-training.txt" , "iris-test.txt" ) ; java.util.ArrayList < java.lang.String > predictions = new java.util.ArrayList < java.lang.String > () ; for ( Iris i : main.testingSet ) { java.lang.String result = main . knnAlg ( main.trainingSet , i , 3 ) ; predictions . add ( result ) ; } double accuracy = main . getAccuracy ( main.testingSet , predictions ) ; java.lang.System.out . print ( ( ( "The algorithm is " + accuracy ) + "% accurate" ) ) ; } 
private static com.vaguehope.onosendai.config.Account parseUsernamePasswordLikeAccount ( final org.json.JSONObject accountJson , final java.lang.String id , final com.vaguehope.onosendai.config.AccountProvider provider ) throws org.json.JSONException { final java.lang.String accessToken = accountJson . getString ( com.vaguehope.onosendai.config.Account.KEY_USERNAME ) ; final java.lang.String accessSecret = accountJson . getString ( com.vaguehope.onosendai.config.Account.KEY_PASSWORD ) ; final java.lang.String title = accountJson . optString ( com.vaguehope.onosendai.config.Account.KEY_TITLE , accessToken ) ; return new com.vaguehope.onosendai.config.Account ( id , title , provider , null , null , accessToken , accessSecret ) ; } 
boolean charge ( int x , int y , int power ) { this . power += power ; if ( ( this . last ) < power ) { this . x = x ; this . y = y ; return true ; } return false ; } 
public static boolean checkDown ( java.lang.String [] [] board , java.lang.String symbol , int n ) { int counter = 0 ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j < n ; j ++ ) { if ( board [ j ] [ i ] . equals ( symbol ) ) counter ++ ; } counter = 0 ; } if ( counter == n ) return true ; else return false ; } 
@ java.lang.Override protected void publishResults ( java.lang.CharSequence constraint , com.einzig.ipst2.adapters.FilterResults results ) { if ( ( results.count ) == 0 ) notifyDataSetInvalidated () ; else { try { this . shownItems = ( ( java.util.ArrayList < com.einzig.ipst2.portal.PortalSubmission > ) ( results.values ) ) ; java.lang.System.out . println ( ( "PUBLISHED: " + ( this . shownItems . size () ) ) ) ; notifyDataSetChanged () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } } 
public void checkFolders ( java.util.Set < java.lang.String > folders ) { if ( folders != null ) { for ( java.lang.String folder : folders ) { org.opencms.gwt.client.ui.tree.CmsLazyTreeItem item = m_itemsByPath . get ( folder ) ; if ( item != null ) { item . getCheckBox () . setChecked ( true ) ; } } } } 
private com.badlogic.gdx.math.Vector2 getTranslationOffset ( final com.badlogic.gdx.math.Polygon collider , final com.badlogic.gdx.math.Polygon collidee ) { com.badlogic.gdx.math.Vector2 offset = new com.badlogic.gdx.math.Vector2 () ; com.badlogic.gdx.math.Intersector.MinimumTranslationVector translation = new com.badlogic.gdx.math.Intersector.MinimumTranslationVector () ; if ( com.badlogic.gdx.math.Intersector . overlapConvexPolygons ( collider , collidee , translation ) ) { offset = translation.normal . cpy () . scl ( translation.depth ) ; offset . setLength ( translation.depth ) ; } return offset ; } 
@ org.junit.Test public void validateFeedResultsNotStartedTest ( ) throws io.delimeat.core.feed.validation.FeedValidationException { io.delimeat.core.feed.validation.FeedResultValidator validator = org.mockito.Mockito . mock ( io.delimeat.core.feed.validation.FeedResultValidator . class ) ; service . setSeasonFeedResultValidators ( java.util.Arrays . asList ( validator ) ) ; io.delimeat.core.feed.FeedProcessor processor = org.mockito.Mockito . mock ( io.delimeat.core.feed.FeedProcessor . class ) ; org.mockito.Mockito . when ( processor . getStatus () ) . thenReturn ( FeedProcessorStatus.ENDED_ABORT ) ; io.delimeat.core.show.Show show = new io.delimeat.core.show.Show () ; show . setShowType ( ShowType.SEASON ) ; service . validateFeedResults ( processor , show , new java.util.ArrayList < io.delimeat.core.feed.FeedResult > () ) ; org.mockito.Mockito . verifyZeroInteractions ( validator ) ; } 
public static boolean setGenerationLifeStatus ( int numberOfNeighbors , model.LifeSquare curentSquare ) { boolean isCellAliveStatus = false ; switch ( numberOfNeighbors ) { case 0 : case 1 : isCellAliveStatus = false ; break; case 2 : case 3 : isCellAliveStatus = true ; break; default: if ( curentSquare . isAlive () ) { isCellAliveStatus = false ; } if ( ! ( curentSquare . isAlive () ) ) { isCellAliveStatus = true ; } break; } return isCellAliveStatus ; } 
public void setLine ( java.lang.String line ) { final java.lang.String RED_LINE = "red_line" ; final java.lang.String GREEN_LINE = "green_line" ; this . line = line ; int resArrayStops = 0 ; switch ( line ) { case RED_LINE : resArrayStops = R.array.array_stops_redline ; break; case GREEN_LINE : resArrayStops = R.array.array_stops_greenline ; break; default: android.util.Log . wtf ( LOG_TAG , "Invalid line specified." ) ; } initAdapterStops ( resArrayStops ) ; } 
protected java.lang.Object M ( ) throws project2.compiler.CompileException { java.lang.Object a = F () ; if ( expect ( TokenType.MODULO ) ) { java.lang.Object b = M () ; if ( ( ! ( a instanceof java.lang.Double ) ) || ( ! ( b instanceof java.lang.Double ) ) ) onError ( "M1: invalid MODULO on non-doubles" ) ; return ( ( double ) ( a ) ) * ( ( double ) ( b ) ) ; } return a ; } 
@ org.springframework.context.annotation.Bean public javax.persistence.EntityManagerFactory entityManagerFactory ( final javax.sql.DataSource dataSource ) { org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter vendorAdapter = new org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter () ; vendorAdapter . setGenerateDdl ( true ) ; org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean factory = new org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean () ; factory . setJpaVendorAdapter ( vendorAdapter ) ; factory . setJpaDialect ( new org.springframework.orm.jpa.DefaultJpaDialect () ) ; factory . setPackagesToScan ( "com.weframe" ) ; factory . setDataSource ( dataSource ) ; factory . afterPropertiesSet () ; return factory . getObject () ; } 
public void handleNewDistanceValue ( java.lang.Double pValue ) { double temp = pValue + ( imperialTallyData . getCalibrationValue () ) ; if ( ! ( imperialTallyData . isValidLength ( temp ) ) ) { com.yaboosh.ybtech.lasertally.Tools . playBadSound ( parentActivity ) ; return; } com.yaboosh.ybtech.lasertally.Tools . playGoodSound ( parentActivity ) ; addDataEntry ( pValue ) ; } 
public static void removeBan ( java.lang.String uuid ) { if ( de.lordvader.Punisher.Util.MySql . isPlayerBanned ( uuid ) ) { java.sql.PreparedStatement ps = null ; try { ps = de.lordvader.Punisher.Util.MySql . getConnection () . prepareStatement ( "DELETE FROM bans WHERE uuid = ?" ) ; ps . setString ( 1 , uuid ) ; ps . execute () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } } 
private void deleteItem ( int position ) { if ( ( mAllDatas ) != null ) { int size = mAllDatas . size () ; if ( size > position ) { mAllDatas . remove ( position ) ; com.rsen.base.RBaseAdapter . notifyItemRemoved ( position ) ; com.rsen.base.RBaseAdapter . notifyItemRangeChanged ( position , ( size - position ) ) ; } } } 
@ java.lang.Override public void onCreate () { super . onCreate () ; android.os.PowerManager manager = ( ( android.os.PowerManager ) ( getSystemService ( Context.POWER_SERVICE ) ) ) ; lock = manager . newWakeLock ( PowerManager.PARTIAL_WAKE_LOCK , TAG ) ; producer = new com.example.service.PointProducer ( this , this ) ; startAsForeground () ; } 
public static pokedex.Pokemon randomPokemon ( location.Location location ) { pokedex.Pokemon p = null ; long name_number = utilities.Utils . generateRandom ( 0 , 100 ) ; java.lang.System.out . println ( name_number ) ; java.lang.String name = location . getPokemon ( name_number ) ; java.lang.System.out . println ( name ) ; int level_start = location . getMinLevel ( name ) ; int level_end = location . getMaxLevel ( name ) ; int level = utilities.Utils . randomLevel ( level_start , level_end ) ; p = EnumsAndConstants.pokemon_generator . createPokemon ( name , level ) ; return p ; } 
public static java.lang.Integer getIntValue ( java.lang.String typeName ) { java.lang.Integer ret = ( ( java.lang.Integer ) ( ftldb.SQLTypeHelper.encoder . get ( typeName ) ) ) ; if ( ret == null ) { ret = ftldb.SQLTypeHelper . extractConstant ( typeName ) ; if ( ret != null ) { ftldb.SQLTypeHelper.encoder . put ( typeName , ret ) ; } } return ret ; } 
@ org.junit.Test public void shouldSaveTheCustomerDetailsCorrectly ( ) throws java.lang.Exception { com.techolution.customerdb.models.Customer customer = getCustomer () ; mockMvc . perform ( post ( URLs.CUSTOMERS ) . contentType ( MediaType.APPLICATION_JSON ) . content ( customer . toJson () ) ) . andExpect ( org.springframework.test.web.servlet.result.MockMvcResultMatchers . status () . isCreated () ) ; com.techolution.customerdb.models.Customer testUser = customerService . findById ( customer . getId () ) ; org.apache.commons.lang.builder.EqualsBuilder . reflectionEquals ( customer , testUser , new java.lang.String [] { "id" , "password" } ) ; org.junit.Assert . assertNull ( testUser . getPassword () ) ; } 
public void reset () { m_isJumping = false ; m_x = Constants.GROUND_X ; m_y = Constants.GROUND_Y ; m_rect.left = m_x ; m_rect.top = m_y ; m_rect.bottom = ( m_y ) + ( m_h ) ; m_rect.right = ( m_x ) + ( m_w ) ; m_curFrame = 0 ; m_lastFrameSwitch = java.lang.System . currentTimeMillis () ; m_lastUpdate = java.lang.System . currentTimeMillis () ; } 
public static void main ( java.lang.String [] args ) { game.SplashScreen s = new game.SplashScreen ( "resources/Sprites_400/Splash/splash.png" ) ; s . showSplashScreen ( true ) ; javax.swing.JFrame window = new javax.swing.JFrame ( "Prince Of Persia" ) ; window . setContentPane ( new game.Game () ) ; window . setDefaultCloseOperation ( javax.swing.JFrame.EXIT_ON_CLOSE ) ; window . setResizable ( false ) ; window . pack () ; window . setLocationRelativeTo ( null ) ; window . setVisible ( true ) ; } 
public creator.soft.cygi.com.friendlyloseweighthelper.dto.DateTimeDTO getPreviousMeasurement () { creator.soft.cygi.com.friendlyloseweighthelper.dto.DateTimeDTO dateTimeDTO ; if ( ( userPosition ) == null ) { userPosition = getLatestMeasurementPosition () ; dateTimeDTO = databaseData . get ( userPosition ) ; } else { if ( ( userPosition ) > 0 ) { ( userPosition ) -- ; } dateTimeDTO = databaseData . get ( userPosition ) ; } rememberOnWhatPositionUserFinished () ; notifyPositionChanged () ; return dateTimeDTO ; } 
@ java.lang.Override public float getLength () { float dist = 0 ; tracer.Point a = vertices2D . get ( 0 ) ; for ( int i = 1 ; i < ( vertices2D . size () ) ; i ++ ) { tracer.Point b = vertices2D . get ( i ) ; dist += tracer.paths.Line . dist ( a , b ) ; a = b ; } return dist ; } 
@ java.lang.Override public void onReceive ( android.content.Context context , android.content.Intent intent ) { super . onReceive ( context , intent ) ; if ( API.ACTION_DATABASE_UPDATED . equals ( intent . getAction () ) ) { android.appwidget.AppWidgetManager appWidgetManager = android.appwidget.AppWidgetManager . getInstance ( context ) ; int [] appWidgetIds = appWidgetManager . getAppWidgetIds ( new android.content.ComponentName ( context , getClass () ) ) ; appWidgetManager . notifyAppWidgetViewDataChanged ( appWidgetIds , R.id.widget_list ) ; android.widget.Toast . makeText ( context , "Received something" , Toast.LENGTH_SHORT ) . show () ; android.util.Log . d ( "TAG" , "IN ON RECIEVE" ) ; } } 
private void GameExitMouseClicked ( java.awt.event.MouseEvent evt ) { comm . msgSender ( ( "E" + ( ( char ) ( ( Pexeso_client.CurrentGame . getID () ) + '0' ) ) ) ) ; comm . closeSocket () ; comm . setExit ( true ) ; comm.game_thread . interrupt () ; java.lang.System . exit ( 0 ) ; } 
@ java.lang.Override protected void onResume () { super . onResume () ; io.realm.RealmResults < com.simopuve.model.PDVRow > all = realm . where ( com.simopuve.model.PDVRow . class ) . equalTo ( "rowNumber" , position ) . findAll () ; if ( ! ( all . isEmpty () ) ) { survey . getRows () . clear () ; io.realm.RealmList rows = survey . getRows () ; rows . addAll ( all ) ; survey . setRows ( rows ) ; } adapter . notifyDataSetChanged () ; } 
public void pushTable ( boolean hasView ) { if ( hasView ) { g.view . addTable () ; } else { g . addTable () ; } try { jsp . setViewportView ( ( jt = ( ( javax.swing.JTable ) ( g . push () ) ) ) ) ; } catch ( sourceone.pages.InputXcpt ix ) { java.lang.System.err . println ( ( "Error in outputting data to table:\n" + ix ) ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } java.lang.System.out . println ( "c" ) ; } 
@ org.junit.Before public void setup ( ) throws java.lang.InterruptedException , java.util.concurrent.ExecutionException , java.util.concurrent.TimeoutException { waitServerReady () ; if ( ( java.lang.System . getProperty ( "webdriver.gecko.driver" ) ) == null ) java.lang.System . setProperty ( "webdriver.gecko.driver" , "drivers/linux/marionette/64bit/geckodriver" ) ; if ( ! ( new java.io.File ( "drivers/linux/marionette/64bit/geckodriver" ) . exists () ) ) throw new java.lang.IllegalStateException ( "To run integration tests, you must run 'mvn clean install' at least once to download gecko driver" ) ; resetJiraMock () ; resetIssueBuffer () ; webDriver = new org.openqa.selenium.firefox.FirefoxDriver () ; webDriver . manage () . window () . setSize ( new org.openqa.selenium.Dimension ( 1280 , 1080 ) ) ; } 
public static void removeEmployeeRoles () { java.lang.Integer rows = com.exercise6.core.dao.EmployeeDAO . showEmployees ( 1 ) ; java.lang.Integer employeeId ; java.lang.System.out . print ( "Delete the roles of which employee:" ) ; employeeId = com.exercise6.util.InputUtil . inputOptionCheck () ; while ( ! ( com.exercise6.core.dao.EmployeeDAO . employeeCheck ( employeeId ) ) ) { java.lang.System.out . println ( "Employee ID chosen does not exist. Enter a new employee id to delete: " ) ; employeeId = com.exercise6.util.InputUtil . inputOptionCheck () ; } java.lang.Integer roleNumber = com.exercise6.core.dao.EmployeeDAO . showEmployeeRoles ( employeeId ) ; java.lang.System.out . print ( "Choose the RoleCode to Delete: " ) ; java.lang.String roleCode = com.exercise6.util.InputUtil . getRequiredInput () ; java.lang.Integer deleted = com.exercise6.core.dao.EmployeeDAO . deleteEmployeeRoles ( roleCode ) ; } 
public boolean removeURL ( final java.net.URL url ) { boolean returnValue = false ; if ( ( url != null ) && ( ! ( this . urls . isEmpty () ) ) ) { returnValue = this . urls . remove ( returnValue ) ; } return returnValue ; } 
@ java.lang.Override public void onResume () { super . onResume () ; if ( ( geolocation ) == null ) { geolocation = app . startGeo ( locationUpdater ) ; } if ( refreshOnResume ) { notifyDataSetChanged () ; refreshOnResume = false ; } if ( ( cache ) != null ) { cache . setChangeNotificationHandler ( cacheChangeNotificationHandler ) ; } } 
private java.lang.String getEnForceCoverageStatus ( java.lang.Double coveragePercent ) { java.lang.String status = null ; if ( coveragePercent < 75 ) { status = "Danger" ; } else if ( coveragePercent < 80 ) { status = "Risk" ; } else if ( coveragePercent < 75 ) { status = "Danger" ; } else if ( coveragePercent < 95 ) { status = "Acceptable" ; } else { status = "Safe" ; } return status ; } 
public static java.util.Date getDateTime ( java.lang.Object d ) { java.util.Date result = null ; if ( d instanceof java.lang.String ) { java.text.SimpleDateFormat df = new java.text.SimpleDateFormat ( net.rcarz.jiraclient.Field.DATETIME_FORMAT ) ; result = df . parse ( ( ( java.lang.String ) ( d ) ) , new java.text.ParsePosition ( 0 ) ) ; } return result ; } 
public static java.lang.StringBuilder escapeLiteral ( java.lang.StringBuilder sbuf , java.lang.String value , boolean standardConformingStrings ) throws java.sql.SQLException { if ( sbuf == null ) { sbuf = new java.lang.StringBuilder ( ( ( ( value . length () ) * 11 ) / 10 ) ) ; } org.postgresql.core.Utils . doAppendEscapedLiteral ( sbuf , value , standardConformingStrings ) ; return sbuf ; } 
public static double getTotalHours ( javafx.collections.ObservableList < plainsimple.Session > data ) { double total = 0.0 ; for ( int i = 0 ; i < ( data . size () ) ; i ++ ) { total += data . get ( i ) . getTimePracticed () . getHour () ; java.lang.System.out . println ( ( "Total = " + total ) ) ; total += ( data . get ( i ) . getTimePracticed () . getMinute () ) / 60 ; java.lang.System.out . println ( ( "Total = " + total ) ) ; } return total ; } 
@ java.lang.Override public org.xwiki.resource.temporary.TemporaryResourceReference rasterizeToTemporaryResource ( java.lang.String content , int width , int height , org.xwiki.model.reference.DocumentReference targetContext ) throws java.io.IOException { java.io.File out = getContextTempFile ( content . hashCode () , targetContext ) ; rasterizeToFile ( content , out , width , height ) ; return new org.xwiki.resource.temporary.TemporaryResourceReference ( org.xwiki.platform.svg.internal.BatikSVGRasterizer.TEMP_DIR_NAME , out . getName () , targetContext ) ; } 
public static void main ( java.lang.String [] args ) { int myCredits = 13 ; int yourCredits = 17 ; double rate = 75.84 ; java.lang.System.out . println ( "My tuition:" ) ; DebugThree4 . tuitionBill ( myCredits , rate ) ; java.lang.System.out . println ( "Your tuition:" ) ; DebugThree4 . tuitionBill ( myCredits , rate ) ; } 
private static int getErrorCode ( java.lang.String errorMessage ) { int startIndex = errorMessage . indexOf ( ' ' ) ; int endIndex = ( startIndex == ( - 1 ) ) ? - 1 : errorMessage . indexOf ( startIndex , ',' ) ; if ( ( startIndex == ( - 1 ) ) || ( endIndex == ( - 1 ) ) ) { return - 1 ; } return java.lang.Integer . parseInt ( errorMessage . substring ( ( startIndex + 1 ) , endIndex ) ) ; } 
private void whileCompile ( ) throws java.io.IOException { clearFile ( this . compFile ) ; try { this . userCode = ( ( java.lang.String ) ( input . readObject () ) ) ; java.lang.System.out . println ( "Compiling code ... " ) ; compileCode ( userCode ) ; output . writeObject ( result ) ; java.lang.System.out . println ( "Done compiling" ) ; } catch ( java.lang.ClassNotFoundException e ) { java.lang.System.out . println ( "Don't know object type" ) ; } } 
public static void registerBlocks ( net.minecraftforge.fml.common.event.FMLPreInitializationEvent e ) { net.minecraft.block.Block lift = new thut.tech.common.blocks.lift.BlockLift () . setRegistryName ( Reference.MOD_ID , "lift" ) ; net.minecraftforge.fml.common.registry.GameRegistry . registerTileEntity ( thut.tech.common.blocks.lift.TileEntityLiftAccess . class , "liftaccesste" ) ; thut.lib.CompatWrapper . registerModEntity ( thut.tech.common.entity.EntityLift . class , "lift" , 1 , TechCore.instance , 32 , 1 , true ) ; thut.lib.CompatWrapper . registerModEntity ( thut.tech.common.entity.EntityProjectile . class , "projectile" , 2 , TechCore.instance , 32 , 1 , true ) ; thut.tech.common.handlers.BlockHandler . register ( lift , thut.tech.common.handlers.BlockHandler.ItemLiftBlock . class , lift . getRegistryName () . toString () ) ; } 
private void randomize () { for ( int i = 0 ; i < ( n ) ; i ++ ) { int swapIndex = edu.princeton.cs.algs4.StdRandom . uniform ( size ) ; Item temp = randomQueue [ i ] ; randomQueue [ i ] = randomQueue [ swapIndex ] ; randomQueue [ swapIndex ] = temp ; } } 
public int [] getTopDocs () { int [] docs = new int [ topCount ] ; java.util.Iterator < java.util.Map.Entry < java.lang.Integer , java.lang.Double > > it = this . sortedResults . iterator () ; int i = 0 ; while ( ( it . hasNext () ) && ( i < ( topCount ) ) ) { docs [ i ] = it . next () . getKey () ; } return docs ; } 
public static double [] softThreshold ( double [] input , double threshold ) { for ( int i = 0 ; i < ( input.length ) ; i ++ ) { input [ i ] = io.github.guiritter.wavelet.Math . softThreshold ( input [ i ] , threshold ) ; } return input ; } 
public void setTransportId ( java.lang.String transportId ) { this . transportId = transportId ; disablePrevPingWatchdog () ; if ( pingWachdog ) { org.kurento.jsonrpc.internal.server.PingWatchdogManager.log . info ( ( "Setting new transportId={} for sessionId={}. " + ( "Restarting timer to consider disconnected client if pings are not received in {}" + " millis" ) ) , transportId , sessionId , ( ( org.kurento.jsonrpc.internal.server.PingWatchdogManager.NUM_NO_PINGS_TO_CLOSE ) * ( pingInterval ) ) ) ; activateSessionCloser () ; } } 
public void onSurfaceChanged ( javax.microedition.khronos.opengles.GL10 gl , int width , int height ) { org.mix.common.BaseActivity . log ( ( ( ( ( "surfaceChanged(" + ( java.lang.String . valueOf ( width ) ) ) + "," ) + ( java.lang.String . valueOf ( height ) ) ) + ")" ) ) ; org.mix.common.BaseActivity.NativeCode . handleFrontendEvent ( org.mix.common.BaseActivity.NativeFrontendEvent.Resized . ordinal () , ( ( float ) ( width ) ) , ( ( float ) ( height ) ) ) ; } 
public void getSolve () { if ( ( left . getSolve () ) != null ) vars . addAll ( left . getSolve () ) ; if ( ( right . getSolve () ) != null ) vars . addAll ( right . getSolve () ) ; } 
@ java.lang.Override protected void shutdownInternal () { if ( null != ( timer ) ) { timer . cancel () ; timer = null ; } if ( ( medias . size () ) > 0 ) { mediaDownloaded ( medias ) ; } if ( ( null != ( parser ) ) && ( ( parser ) instanceof com.gj.web.crawler.lifecycle.Lifecycle ) ) { ( ( com.gj.web.crawler.lifecycle.Lifecycle ) ( parser ) ) . shutdown () ; } } 
private void closeColumns ( boolean truncate ) { for ( int i = 0 , n = columns . size () ; i < n ; i ++ ) { com.questdb.cairo.AppendMemory m = columns . getQuick ( i ) ; if ( m != null ) { m . close ( truncate ) ; } } } 
private void checkSessionAlive () { net.moddity.droidnubekit.DroidNubeKit . getCurrentUser ( new net.moddity.droidnubekit.requests.DNKCallback < net.moddity.droidnubekit.responsemodels.DNKUser > () { @ java.lang.Override public void success ( net.moddity.droidnubekit.responsemodels.DNKUser dnkUser ) { if ( ( net.moddity.droidnubekit.DroidNubeKit . getInstance () . cloudKitAuthHandler ) != null ) net.moddity.droidnubekit.DroidNubeKit . getInstance () . cloudKitAuthHandler . onAuthSucceed () ; currentUser = dnkUser ; } @ java.lang.Override public void failure ( java.lang.Throwable exception ) {} } ) ; } 
public void setInventoryIcon ( java.lang.String inventoryIcon ) { java.io.File file = getFile () ; if ( file != null ) { if ( ! ( file . isDirectory () ) ) file = file . getParentFile () ; setInventoryIconFile ( new java.io.File ( file , inventoryIcon ) ) ; } else { _inventoryIconFileName = inventoryIcon ; } } 
public void processStartMenu ( com.lordstephen77.dreamblocks.GraphicsHandler g ) { startMenu . draw ( g ) ; if ( ! ( leftClick ) ) { return; } switch ( startMenu . handleClick ( screenMousePos.x , screenMousePos.y ) ) { case LOAD_GAME : startGame ( true , WORLD_WIDTH.MEDIUM . getWidth () ) ; break; case NEW_GAME : newGame = true ; break; case QUIT_GAME : quit () ; break; } leftClick = false ; } 
@ java.lang.Override public com.health.entity.GP findById ( int gid ) { try { java.lang.String str = "SELECT g FROM GP g WHERE g.gp_id = ?1" ; javax.persistence.Query query = em . createQuery ( str ) ; query . setParameter ( 1 , gid ) ; return ( ( com.health.entity.GP ) ( query . getSingleResult () ) ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; em . close () ; return null ; } } 
public static java.net.URL getUrl () { android.net.Uri firelineUri = android.net.Uri . parse ( com.erickirschenmann.fireline.utilities.NetworkUtils.FIRELINE_JSON_URL ) . buildUpon () . build () ; android.util.Log . v ( com.erickirschenmann.fireline.utilities.NetworkUtils.TAG , ( "Built Uri: " + ( firelineUri . toString () ) ) ) ; try { return new java.net.URL ( firelineUri . toString () ) ; } catch ( java.net.MalformedURLException e ) { e . printStackTrace () ; return null ; } } 
public void saveKader () { if ( ! ( wettbewerb . teamsHaveKader () ) ) return; java.util.ArrayList < java.lang.String > players = new java.util.ArrayList <> () ; for ( int i = 0 ; i < ( numberOfPlayers ) ; i ++ ) { players . add ( this . kader . get ( i ) . toString () ) ; } inDatei ( kaderFileName , players ) ; } 
private void setIDValues ( java.lang.String id , java.lang.String path , java.lang.Object o ) { org.bukkit.configuration.file.YamlConfiguration config = org.bukkit.configuration.file.YamlConfiguration . loadConfiguration ( main . getConfigManager () . getConfig ( "SignId.yml" ) ) ; config . set ( ( ( id + "." ) + path ) , o ) ; try { config . save ( main . getConfigManager () . getConfig ( "SignId.yml" ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
private void initThread ( boolean isFirstTime ) { mIsRunningForegroundAppsThread = true ; if ( isFirstTime ) mIsFirstTimeStartForgroundAppService = true ; mDatabase = new com.asgj.android.appusage.database.PhoneUsageDatabase ( mContext ) ; mTelephonyManager = ( ( android.telephony.TelephonyManager ) ( this . getSystemService ( Context.TELEPHONY_SERVICE ) ) ) ; mStartTimestamp = java.lang.System . currentTimeMillis () ; startThread () ; if ( isMusicPlaying () ) { mIsMusicPlayingAtStart = true ; mIsMusicStarted = true ; mIsRunningBackgroundApps = true ; mMusicStartTimeStamp = java.lang.System . currentTimeMillis () ; mMusicStartTime = java.lang.System . nanoTime () ; } } 
@ java.lang.Override public void onBindViewHolder ( final com.thekadesikhaana.adapter.MenuAdapter.MyViewHolder holder , final int listPosition ) { android.widget.TextView menuContent = holder.menuContent ; android.widget.ImageView menuType = holder.menuType ; android.widget.ImageView menuImage = holder.menuImage ; menuContent . setText ( dataSet . get ( listPosition ) . getItems () ) ; int menuTypeImage ; menuTypeImage = R.drawable.app_icon ; menuType . setImageResource ( menuTypeImage ) ; android.util.Log . d ( com.thekadesikhaana.adapter.MenuAdapter.TAG , ( "IMAGE URL:" + ( dataSet . get ( listPosition ) . getUrlMobile () ) ) ) ; } 
public org.openhab.binding.zwave.internal.protocol.transaction.ZWaveCommandClassTransactionPayload getUserCode ( int id ) { org.openhab.binding.zwave.internal.protocol.commandclass.ZWaveUserCodeCommandClass.logger . debug ( "NODE {}: Creating new message for application command USER_CODE_GET({})" , this . getNode () . getNodeId () , id ) ; return new org.openhab.binding.zwave.internal.protocol.transaction.ZWaveCommandClassTransactionPayloadBuilder ( getNode () . getNodeId () , getCommandClass () , org.openhab.binding.zwave.internal.protocol.commandclass.ZWaveUserCodeCommandClass.USER_CODE_GET ) . withPayload ( id ) . withPriority ( TransactionPriority.Config ) . withExpectedResponseCommand ( org.openhab.binding.zwave.internal.protocol.commandclass.ZWaveUserCodeCommandClass.USER_CODE_REPORT ) . build () ; } 
public static void processKeyEvent ( int keyCode , me.simonhaasnoot.geinigspel.game.input.key.KeyEventType eventType ) { switch ( eventType ) { case PRESSED : if ( ! ( me.simonhaasnoot.geinigspel.game.input.Input.pressedKeys . contains ( keyCode ) ) ) { me.simonhaasnoot.geinigspel.game.input.Input.pressedKeys . add ( keyCode ) ; me.simonhaasnoot.geinigspel.game.input.Input.pressedOnceKeys . add ( keyCode ) ; break; } case RELEASED : me.simonhaasnoot.geinigspel.game.input.Input.pressedKeys . remove ( ( ( java.lang.Integer ) ( keyCode ) ) ) ; me.simonhaasnoot.geinigspel.game.input.Input.pressedOnceKeys . remove ( ( ( java.lang.Integer ) ( keyCode ) ) ) ; break; default: } } 
public int setCandidatesProcessed ( @ lombok.NonNull final java.util.List < java.lang.Integer > huIds ) { if ( huIds . isEmpty () ) { return 0 ; } final org.adempiere.ad.dao.IQueryBL queryBL = org.adempiere.util.Services . get ( org.adempiere.ad.dao.IQueryBL . class ) ; final org.adempiere.ad.dao.ICompositeQueryUpdater < de.metas.handlingunits.model.I_M_Picking_Candidate > updater = queryBL . createCompositeQueryUpdater ( de.metas.handlingunits.model.I_M_Picking_Candidate . class ) . addSetColumnValue ( I_M_Picking_Candidate.COLUMNNAME_Status , X_M_Picking_Candidate.STATUS_IP ) ; return queryBL . createQueryBuilder ( de.metas.handlingunits.model.I_M_Picking_Candidate . class ) . addOnlyActiveRecordsFilter () . addEqualsFilter ( I_M_Picking_Candidate.COLUMNNAME_Status , X_M_Picking_Candidate.STATUS_PR ) . addInArrayFilter ( I_M_Picking_Candidate.COLUMNNAME_M_HU_ID , huIds ) . create () . updateDirectly ( updater ) ; } 
@ java.lang.Override public void start ( javafx.stage.Stage stage ) { this . eventBus = new com.google.common.eventbus.EventBus ( "Test Event Bus" ) ; this . mockCameraSourceFactory = new edu.wpi.grip.ui.pipeline.AddSourceViewTest.AddSourceViewNoExceptionsTest.MockCameraSourceFactory ( eventBus ) ; addSourceView = new edu.wpi.grip.ui.pipeline.AddSourceView ( eventBus , null , null , mockCameraSourceFactory ) ; final javafx.scene.Scene scene = new javafx.scene.Scene ( addSourceView , 800 , 600 ) ; stage . setScene ( scene ) ; stage . show () ; } 
public void saveProjectAs () { fc . getExtensionFilters () . clear () ; fc . getExtensionFilters () . add ( extFilterProject ) ; java.io.File file = fc . showSaveDialog ( de.uni_hannover.sra.minimax_simulator.Main . getPrimaryStage () ) ; new de.uni_hannover.sra.minimax_simulator.ui.actions.ProjectSaveTo () . save ( file ) ; } 
private void printText ( java.lang.String text ) { if ( ( text . length () ) > ( Output.ConsoleOutput.lineLenght ) ) { java.lang.String [] lines = getMultipleLines ( text ) ; for ( int i = 0 ; i < ( lines.length ) ; i ++ ) { java.lang.System.out . println ( lines [ i ] ) ; } } } 
@ java.lang.SuppressWarnings ( value = "StatementWithEmptyBody" ) @ java.lang.Override public boolean onNavigationItemSelected ( android.view.MenuItem item ) { samsung.labo.pl.locateyourtask.activities.MainActivity.itemId = item . getItemId () ; samsung.labo.pl.locateyourtask.activities.MainActivity.DrawerFragmentItem drawerFragmentItem = samsung.labo.pl.locateyourtask.activities.MainActivity . findDrawerItemFragmentWithId ( samsung.labo.pl.locateyourtask.activities.MainActivity.itemId ) ; if ( drawerFragmentItem != null ) { openFragment ( drawerFragmentItem ) ; rememberSelectedItem ( drawerFragmentItem ) ; } android.support.v4.widget.DrawerLayout drawer = ( ( android.support.v4.widget.DrawerLayout ) ( findViewById ( R.id.drawer_layout ) ) ) ; drawer . closeDrawer ( GravityCompat.START ) ; return true ; } 
public boolean isOpen ( int row , int col ) { checkValidInput ( row ) ; checkValidInput ( col ) ; row = row - 1 ; col = col - 1 ; if ( ( grid [ row ] [ col ] ) == ( open ) ) { return true ; } else { return false ; } } 
private eionet.webq.dao.orm.UserFile userFileServiceWillReturnUserFileFromCdr () { eionet.webq.dao.orm.UserFile userFile = new eionet.webq.dao.orm.UserFile () ; userFile . setId ( 1 ) ; userFile . setFromCdr ( true ) ; userFile . setAuthorized ( true ) ; org.mockito.Mockito . when ( userFileHelper . getUserFile ( org.mockito.Matchers . anyInt () , org.mockito.Matchers . any ( javax.servlet.http.HttpServletRequest . class ) ) ) . thenReturn ( userFile ) ; return userFile ; } 
@ java.lang.Override void doIt ( float tpf ) { logo3d.desktop.TurtleControl.LOG . debug ( "current slerp: {}, tpf {} , speed {}" , currentSlerp , tpf , activeDirection.speedCoefficient ) ; currentSlerp += tpf * ( activeDirection.speedCoefficient ) ; com.jme3.math.Quaternion thisRotation = new com.jme3.math.Quaternion () ; thisRotation . slerp ( localRotation , targetRotation , currentSlerp ) ; turtle . setLocalRotation ( thisRotation ) ; if ( ( currentSlerp ) >= 1.0F ) { direction = targetRotation . getRotationColumn ( 2 ) ; turtle . setLocalRotation ( targetRotation ) ; setDone ( true ) ; } } 
@ org.dasein.cloud.azure.tests.network.Mock ( invocations = 1 ) java.lang.String post ( java.lang.String resource , java.lang.Object definitionResponseModel ) { org.junit.Assert . assertEquals ( "Post method not called with correct resource string" , resource , java.lang.String . format ( AzureLoadBalancerSupport.RESOURCE_DEFINITIONS , LOAD_BALANCER_ID ) ) ; org.junit.Assert . assertEquals ( "Server not removed from the policy definition" , ( ( org.dasein.cloud.azure.network.model.DefinitionModel ) ( definitionResponseModel ) ) . getPolicy () . getEndPoints () . size () , 1 ) ; org.junit.Assert . assertEquals ( "A server with the wrong id has been removed" , ( ( org.dasein.cloud.azure.network.model.DefinitionModel ) ( definitionResponseModel ) ) . getPolicy () . getEndPoints () . get ( 0 ) . getDomainName () , "endpoint1.cloudapp.net" ) ; return "test" ; } 
@ java.lang.Override public void onCommonResponded ( cn.bit.hao.ble.tool.response.events.CommonResponseEvent commonResponseEvent ) { if ( commonResponseEvent instanceof cn.bit.hao.ble.tool.response.events.bluetooth.BluetoothGattEvent ) { java.lang.String macAddress = ( ( cn.bit.hao.ble.tool.response.events.bluetooth.BluetoothGattEvent ) ( commonResponseEvent ) ) . getMacAddress () ; switch ( ( ( cn.bit.hao.ble.tool.response.events.bluetooth.BluetoothGattEvent ) ( commonResponseEvent ) ) . getEventCode () ) { case GATT_CONNECTED : cn.bit.hao.ble.tool.bluetooth.gatt.GattRequestManager . getInstance () . resumeRequest ( macAddress ) ; break; default: break; } } } 
public static com.drewhannay.chesscrafter.models.PieceType getQueenPieceType () { java.util.Map < com.drewhannay.chesscrafter.models.Direction , java.lang.Integer > movements = com.google.common.collect.Maps . newHashMap () ; for ( com.drewhannay.chesscrafter.models.Direction direction : com.drewhannay.chesscrafter.models.Direction . values () ) { movements . put ( direction , com.drewhannay.chesscrafter.models.PieceType.UNLIMITED ) ; } return new com.drewhannay.chesscrafter.models.PieceType ( "Queen" , movements , null , null ) ; } 
private void changeState () { if ( isGameDraw () ) { state = GameState.DRAW ; } else if ( state . equals ( GameState.X_TURN ) ) { state = ( board . hasDrawnLineFor ( CellValue.X ) ) ? GameState.X_WON : GameState.O_TURN ; } else { state = ( board . hasDrawnLineFor ( CellValue.O ) ) ? GameState.O_WON : GameState.X_TURN ; } } 
public void removeNode ( model.Node parent , model.Node child ) { parent . getChildren () . remove ( child ) ; for ( javax.swing.event.TreeModelListener l : listeners ) { l . treeNodesRemoved ( new javax.swing.event.TreeModelEvent ( this , getPathToRoot ( parent ) , new int [] { getIndexOfChild ( parent , child ) } , new java.lang.Object [] { child } ) ) ; } } 
@ java.lang.Override public void onTimeSet ( android.widget.TimePicker view , int hourOfDay , int minute ) { hour = hourOfDay ; mins = minute ; if ( v == ( startTime ) ) { startTimeStr = ( ( ( hour ) + ":" ) + ( mins ) ) + ":00" ; } else if ( v == ( endTime ) ) { endTimeStr = ( ( ( hour ) + ":" ) + ( mins ) ) + ":00" ; } } 
@ org.junit.Test public void testNAK ( ) throws java.lang.Exception { com.whizzosoftware.wzwave.codec.ZWaveFrameDecoder decoder = new com.whizzosoftware.wzwave.codec.ZWaveFrameDecoder () ; java.util.List < java.lang.Object > out = new java.util.ArrayList < java.lang.Object > () ; io.netty.buffer.ByteBuf in = wrappedBuffer ( new byte [] { 21 } ) ; decoder . decode ( null , in , out ) ; org.junit.Assert . assertEquals ( 1 , out . size () ) ; assertTrue ( ( ( out . get ( 0 ) ) instanceof com.whizzosoftware.wzwave.codec.NAK ) ) ; } 
@ org.springframework.web.bind.annotation.PostMapping ( value = "/addAppointment" ) public java.lang.String addAppointment ( @ javax.validation.Valid com.medman.controllers.AppointmentTime appointmentTime , org.springframework.validation.Errors validation , org.springframework.ui.Model model ) { if ( validation . hasErrors () ) { model . addAttribute ( "errors" , validation ) ; model . addAttribute ( "appointment" , appointmentTime ) ; return "shared/dashboard" ; } appointmentTime . setUser ( loggedInUser () ) ; appointmentsDao . save ( appointmentTime ) ; return "redirect:/dashboard" ; } 
public int onStartCommand ( final android.content.Intent intent , int flags , int startId ) { int result = super . onStartCommand ( intent , flags , startId ) ; interruptAndWait () ; synchronized ( workerThread ) { android.widget.Toast . makeText ( this , getString ( R.string.notify_sync_start ) , Toast.LENGTH_SHORT ) . show () ; workerThread = new java.lang.Thread ( new java.lang.Runnable () { @ java.lang.Override public void run () { onHandleIntent ( intent ) ; } } ) ; workerThread . start () ; } return result ; } 
@ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle outState ) { if ( ( artists ) == null ) { outState . putParcelableArrayList ( com.bli.spotifystreamer.ArtistSearchActivity.KEY_PARCELABLE_ARTIST_LIST , artists ) ; int position = artistsListView . getFirstVisiblePosition () ; outState . putInt ( "listViewPosition" , position ) ; android.view.View v = artistsListView . getChildAt ( 0 ) ; int offset = ( v == null ) ? 0 : ( v . getTop () ) - ( artistsListView . getPaddingTop () ) ; outState . putInt ( "listViewPositionOffset" , offset ) ; } super . onSaveInstanceState ( outState ) ; } 
private void RestoreFragmentsStates ( android.os.Bundle savedInstanceState ) { com.example.kamil.astroweather.MainActivity.currentPages = new java.util.HashMap <> () ; if ( ( getSupportFragmentManager () . getFragments () ) != null ) { if ( com.example.kamil.astroweather.MainActivity.isTablet ) { com.example.kamil.astroweather.MainActivity.currentPages . put ( "commonFragment" , getSupportFragmentManager () . getFragment ( savedInstanceState , "commonFragment" ) ) ; } else { com.example.kamil.astroweather.MainActivity.currentPages . put ( "sunFragment" , getSupportFragmentManager () . getFragment ( savedInstanceState , "sunFragment" ) ) ; com.example.kamil.astroweather.MainActivity.currentPages . put ( "moonFragment" , getSupportFragmentManager () . getFragment ( savedInstanceState , "moonFragment" ) ) ; } } } 
private void setTimer ( com.rdt.Packet pkt , long seqNo ) { if ( timeoutMap . containsKey ( seqNo ) ) { timeoutMap . remove ( seqNo ) . cancel () ; } com.rdt.TimeoutTimerTask ttt = new com.rdt.TimeoutTimerTask ( seqNo , java.lang.System . currentTimeMillis () , timeoutInterval , pkt ) ; ttt . subscribe ( this ) ; timeoutMap . put ( seqNo , ttt ) ; com.rdt.ConnectionHandler.TIMER . schedule ( ttt , timeoutInterval ) ; } 
public java.lang.Integer insertOrderCourse ( java.lang.String login_name , java.lang.Integer cid ) { cn.edu.buaa.tricloud.mooc.domain.Account account = accountRepository . getAccountByLoginName ( login_name ) ; if ( account == null ) throw new cn.edu.buaa.tricloud.mooc.exception.AccountNotFound ( java.lang.String . format ( "failure to find account by login_name:%s" , login_name ) ) ; cn.edu.buaa.tricloud.mooc.domain.CourseOrder courseOrder = new cn.edu.buaa.tricloud.mooc.domain.CourseOrder () ; courseOrder . setLogin_name ( login_name ) ; courseOrder . setCid ( cid ) ; courseOrder . setSchool ( account . getSchool () ) ; courseOrder . setMachine ( cn.edu.buaa.tricloud.mooc.utils.MachineUtil . create () . toJSONString () ) ; return insert ( courseOrder ) ; } 
private void removeQueen ( int row , int col ) { if ( ( row >= ( board.length ) ) || ( col >= ( board.length ) ) ) { throw new java.lang.IllegalArgumentException ( "Invalid row/column to remove a queen!" ) ; } if ( ( board [ row ] [ col ] ) != ( - 1 ) ) { throw new java.lang.IllegalArgumentException ( "There is no queen there!" ) ; } board [ row ] [ col ] = 0 ; ( numQueens ) -- ; this . markDangerAreas ( row , col , ( - 1 ) ) ; } 
public java.lang.String content_file ( java.lang.String pth ) { java.lang.String thisLine = null ; java.lang.String str_words = "" ; java.lang.String val = "" ; if ( new java.io.File ( pth ) . canExecute () ) { try { java.io.BufferedReader br = new java.io.BufferedReader ( new java.io.InputStreamReader ( new java.io.FileInputStream ( pth ) , "windows-1251" ) ) ; while ( ( thisLine = br . readLine () ) != null ) { str_words += thisLine ; } } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } return str_words ; } 
@ java.lang.Override public android.app.Dialog onCreateDialog ( android.os.Bundle savedInstanceState ) { long timestamp = getArguments () . getLong ( "date" ) ; calendar = new java.util.GregorianCalendar () ; calendar . setTime ( new java.util.Date ( timestamp ) ) ; int hour = calendar . get ( java.util.Calendar.HOUR_OF_DAY ) ; int minute = calendar . get ( java.util.Calendar.MINUTE ) ; return new android.app.TimePickerDialog ( getActivity () , this , hour , minute , android.text.format.DateFormat . is24HourFormat ( getActivity () ) ) ; } 
@ java.lang.Override protected void cancelPressed () { if ( ( this . profile ) != null ) { this . profile . setName ( profileNameOld ) ; this . profile . getAction () . clear () ; for ( sernet.verinice.model.auth.Action action : selectedActionsOld ) { this . profile . getAction () . add ( action ) ; } } super . okPressed () ; } 
private void searchViewChildAndSetListener ( android.view.ViewGroup parent ) { for ( int i = 0 ; i < ( parent . getChildCount () ) ; i ++ ) { android.view.View target = parent . getChildAt ( i ) ; if ( target instanceof android.widget.LinearLayout ) { searchViewChildAndSetListener ( ( ( android.widget.LinearLayout ) ( target ) ) ) ; } else if ( target instanceof android.widget.TextView ) { target . setOnClickListener ( this ) ; } } } 
public static void incrementQuantity ( int quantity , long id ) { org.apache.ibatis.session.SqlSession session = com.devsolutions.camelus.services.DBConnection . getSqlSessionFactory () . openSession () ; session . getMapper ( com.devsolutions.camelus.mappers.ProductMapper . class ) . incrementQuantity ( quantity , id ) ; session . commit () ; session . close () ; com.devsolutions.camelus.auditing.AuditUtils . getAuditingService () . setAudit ( new com.devsolutions.camelus.auditing.Audit ( Session.vendor . getLogin () , com.devsolutions.camelus.auditing.AuditTypes.UPDATE , ( "a modifier un produit id : " + id ) ) ) ; com.devsolutions.camelus.auditing.AuditUtils . getAuditingService () . start () ; } 
public void startRecognition ( ) throws java.lang.Exception { java.lang.System.out . println ( "start recognition" ) ; recognizer . startRecognition ( true ) ; while ( this . transcriberEnabled ) { java.lang.String utterance = recognizer . getResult () . getHypothesis () ; java.lang.System.out . println ( utterance ) ; if ( utterance . equals ( "robot" ) ) { this . transcriberListener . onSuccessfulTrigger () ; } } } 
private java.lang.String getApplicationVersionName () { java.lang.String devBuild = ( BuildConfig.DEBUG ) ? "d" : "" ; try { return ( this . getPackageManager () . getPackageInfo ( getPackageName () , 0 ) . versionName ) + devBuild ; } catch ( android.content.pm.PackageManager e ) { throw new java.lang.RuntimeException ( e . getMessage () ) ; } } 
@ java.lang.Override public void onRequestPermissionsResult ( int requestCode , java.lang.String [] permissions , int [] grantResults ) { switch ( requestCode ) { case 10 : { if ( ( ( grantResults.length ) > 0 ) && ( ( grantResults [ 0 ] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { android.util.Log . d ( "DEBUG" , "permission granted!" ) ; } else { permissionRequest () ; } return; } } } 
@ org.jetbrains.annotations.Nullable public static com.intellij.codeInspection.streamMigration.ReduceHandling.ReductionData getReduceVar ( com.intellij.codeInspection.streamMigration.PsiLoopStatement loop , com.intellij.codeInspection.streamMigration.StreamApiMigrationInspection.TerminalBlock tb , java.util.List < com.intellij.codeInspection.streamMigration.PsiVariable > variables ) { com.intellij.codeInspection.streamMigration.PsiAssignmentExpression stmt = tb . getSingleExpression ( com.intellij.codeInspection.streamMigration.PsiAssignmentExpression . class ) ; if ( stmt == null ) return null ; com.intellij.codeInspection.streamMigration.ReduceHandling.ReductionData data = com.intellij.codeInspection.streamMigration.ReduceHandling . getReductionAccumulator ( stmt ) ; if ( ( data == null ) || ( ! ( variables . contains ( data . getAccumulator () ) ) ) ) return null ; return data ; } 
@ java.lang.Override public void instrumentUpdated ( uk.ac.stfc.isis.ibex.ui.synoptic.editor.model.UpdateTypes updateType ) { if ( updateType == ( uk.ac.stfc.isis.ibex.ui.synoptic.editor.model.UpdateTypes.EDIT_COMPONENT ) ) { saveAsBtn . setEnabled ( ( ! ( synopticViewModel . getHasDuplicatedName () ) ) ) ; saveBtn . setEnabled ( ( ! ( synopticViewModel . getHasDuplicatedName () ) ) ) ; } } 
public static byte [] toCompressedBytes ( @ javax.annotation.Nonnull final java.io.Externalizable obj ) throws java.io.IOException { hivemall.utils.io.FastMultiByteArrayOutputStream bos = new hivemall.utils.io.FastMultiByteArrayOutputStream () ; final java.util.zip.DeflaterOutputStream dos = new java.util.zip.DeflaterOutputStream ( bos ) ; try { hivemall.utils.lang.ObjectUtils . toStream ( obj , dos ) ; } finally { hivemall.utils.io.IOUtils . closeQuietly ( dos ) ; } return bos . toByteArray_clear () ; } 
public void navigateToFrontPage () { com.campustribune.event.utility.EventRestCallThread myRestClient = new com.campustribune.event.utility.EventRestCallThread ( getApplicationContext () , new java.lang.String ( "create" ) , event , this . token ) ; myRestClient . start () ; android.content.Intent frontPageIntent = new android.content.Intent ( this , com.campustribune.frontpage2.FrontPageActivity . class ) ; frontPageIntent . setFlags ( Intent.FLAG_ACTIVITY_REORDER_TO_FRONT ) ; this . startActivity ( frontPageIntent ) ; this . finish () ; } 
@ org.robotframework.javalib.annotation.RobotKeyword @ org.robotframework.javalib.annotation.ArgumentNames ( value = { "locator" , "*values" } ) public void selectFromListByValue ( java.lang.String locator , java.lang.String . . . values ) { if ( ( values.length ) == 0 ) { throw new com.github.markusbernhardt.selenium2library.Selenium2LibraryNonFatalException ( "No value given." ) ; } java.lang.String items = java.lang.String . format ( "value(s) '%s'" , com.github.markusbernhardt.selenium2library.utils.Python . join ( ", " , values ) ) ; logging . info ( java.lang.String . format ( "Selecting %s from list '%s'." , items , locator ) ) ; org.openqa.selenium.support.ui.Select select = getSelectList ( locator ) ; for ( java.lang.String value : values ) { select . selectByValue ( value ) ; } } 
public void retrieveServices ( com.facebook.react.bridge.Callback callback ) { if ( ! ( isConnected () ) ) { callback . invoke ( "Device is not connected" , null ) ; } if ( ( gatt ) == null ) { callback . invoke ( "BluetoothGatt is null" , null ) ; return; } this . retrieveServicesCallback = callback ; gatt . discoverServices () ; } 
public rssminer.Feed [] likeThis ( int docID , int count ) throws java.io.IOException , org.apache.lucene.index.CorruptIndexException { org.apache.lucene.index.IndexReader reader = org.apache.lucene.index.IndexReader . open ( indexer , true ) ; org.apache.lucene.search.similar.MoreLikeThis likeThis = new org.apache.lucene.search.similar.MoreLikeThis ( reader ) ; likeThis . setFieldNames ( rssminer.Searcher.FIELDS ) ; likeThis . setMinTermFreq ( 1 ) ; likeThis . setMinDocFreq ( 3 ) ; org.apache.lucene.search.Query like = likeThis . like ( docID ) ; return searchQuery ( new org.apache.lucene.search.IndexSearcher ( reader ) , like , count ) ; } 
@ org.junit.Test public void verifyDeleteService ( ) throws java.lang.Exception { final org.apereo.cas.services.RegexRegisteredService r = new org.apereo.cas.services.RegexRegisteredService () ; r . setId ( 1200 ) ; r . setName ( org.apereo.cas.services.web.ManageRegisteredServicesMultiActionControllerTests.NAME ) ; r . setServiceId ( "serviceId" ) ; r . setEvaluationOrder ( 1 ) ; this . servicesManager . save ( r ) ; final org.springframework.mock.web.MockHttpServletResponse response = new org.springframework.mock.web.MockHttpServletResponse () ; this . controller . manage ( response ) ; this . controller . deleteRegisteredService ( 1200 , response ) ; assertNull ( this . servicesManager . findServiceBy ( 1200 ) ) ; } 
public static void setIpAssignment ( java.lang.String assign , android.net.wifi.WifiConfiguration wifiConf ) throws java.lang.IllegalAccessException , java.lang.IllegalArgumentException , java.lang.NoSuchFieldException , java.lang.NoSuchMethodException , java.lang.SecurityException , java.lang.reflect.InvocationTargetException { if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { java.lang.Object ipConfiguration = wifiConf . getClass () . getMethod ( "getIpConfiguration" ) . invoke ( wifiConf ) ; personal.gino.dnsmasq.DNSWidget . setEnumField ( ipConfiguration , assign , "ipAssignment" ) ; } else { personal.gino.dnsmasq.DNSWidget . setEnumField ( wifiConf , assign , "ipAssignment" ) ; } } 
@ org.apache.struts2.interceptor.validation.SkipValidation @ java.lang.Override public java.lang.String execute () { try { _agencies = _transitDataService . getAgenciesWithCoverage () ; } catch ( java.lang.Throwable t ) { org.onebusaway.webapp.actions.admin.servicealerts.ServiceAlertsAction._log . error ( "unable to retrieve agencies with coverage" , t ) ; org.onebusaway.webapp.actions.admin.servicealerts.ServiceAlertsAction._log . error ( "issue connecting to TDS -- check your configuration in data-sources.xml" ) ; throw new java.lang.RuntimeException ( "Check your onebusaway-nyc-transit-data-federation-webapp configuration" , t ) ; } return SUCCESS ; } 
private static void waveInitiationLogic ( float mouseX , float mouseY ) { if ( main.Main.startWave . isClicked ( mouseX , mouseY ) ) { main.Main.isEditPhase = ! ( main.Main.isEditPhase ) ; int i = 0 ; for ( grid.Grid g : main.Main.gridsReadOnly ) { main.Main.grids . remove ( i ) ; main.Main.grids . add ( i , g . copy () ) ; i ++ ; } } } 
public void addLast ( int x ) { if ( ( head ) == null ) { head = new Node ( x ) ; ( size ) ++ ; } else { Node n = new Node ( x ) ; Node current = head ; while ( ( current . getNext () ) != null ) { current = current . getNext () ; } current . setNext ( n ) ; ( size ) ++ ; } } 
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { model.curve.Curve other = ( ( model.curve.Curve ) ( obj ) ) ; for ( model.curve.Grade grade : curve ) { if ( ! ( other.curve . contains ( grade ) ) ) { return false ; } } return true ; } 
java.util.ArrayList < personal.vinay.bigdata.PrepData.Record > setAvgSpread ( java.util.ArrayList < personal.vinay.bigdata.PrepData.Record > records ) { float avgSpread = 0 ; float sumSpread = 0 ; for ( personal.vinay.bigdata.PrepData.Record record : records ) { sumSpread += ( record . getBidPrice () ) - ( record . getAskPrice () ) ; } avgSpread = sumSpread / ( records . size () ) ; for ( personal.vinay.bigdata.PrepData.Record record : records ) { record . setAvgSpread ( avgSpread ) ; } return records ; } 
private void findAndUpdateTrack ( android.content.Intent intent ) { android.os.Bundle trackBundle = intent . getBundleExtra ( PowerampAPI.TRACK ) ; if ( trackBundle != null ) { io.nya.powerlyrics.model.Track track = createTrack ( trackBundle ) ; if ( ( ( mCurrentTrack ) == null ) || ( ( ( track.id ) != ( mCurrentTrack.id ) ) && ( ( track.realId ) != ( mCurrentTrack.realId ) ) ) ) { mCurrentTrack = track ; mApp.mCurrentTrackSubject . onNext ( mCurrentTrack ) ; searchTrackLyric ( track ) ; } } } 
public static boolean isInteger ( org.apache.sqoop.schema.type.Column column ) { java.lang.Long byteSize = ( ( org.apache.sqoop.schema.type.FixedPoint ) ( column ) ) . getByteSize () ; java.lang.Boolean signed = ( ( org.apache.sqoop.schema.type.FixedPoint ) ( column ) ) . isSigned () ; if ( byteSize == null ) { return false ; } if ( ( signed != null ) && ( ! signed ) ) { byteSize *= 2 ; } return byteSize <= ( ( java.lang.Integer.SIZE ) / ( java.lang.Byte.SIZE ) ) ; } 
public java.util.Set < ? extends com.cfar.swim.worldwind.geom.RegularGrid > getNeighbors () { java.util.Set < com.cfar.swim.worldwind.geom.RegularGrid > neighbors = new java.util.HashSet < com.cfar.swim.worldwind.geom.RegularGrid > ( 26 ) ; if ( this . hasParent () ) { gov.nasa.worldwind.geom.Vec4 [] corners = this . getCorners () ; for ( gov.nasa.worldwind.geom.Vec4 corner : corners ) { neighbors . addAll ( this . parent . lookupCells ( corner ) ) ; } } return neighbors ; } 
public void rotateX ( float angle ) { com.base.engine.Vector3f hAxis = com.base.engine.Camera.m_yAxis . cross ( m_forward ) . normalized () ; m_forward = m_forward . rotate ( angle , hAxis ) . normalized () ; m_up = m_forward . cross ( hAxis ) . normalized () ; java.lang.System.out . println ( m_up ) ; } 
public void cancelSeat ( int cancellationTime ) throws asgn2Passengers.PassengerException { if ( ( ( ( ( ( this . isNew () ) || ( this . isQueued () ) ) || ( this . isRefused () ) ) || ( this . isFlown () ) ) || ( cancellationTime < 0 ) ) || ( ( departureTime ) < cancellationTime ) ) { throw new asgn2Passengers.PassengerException ( "Could not cancel seat of passenger." ) ; } this . confirmed = false ; this . newState = true ; this . bookingTime = cancellationTime ; } 
@ java.lang.Override public void changed ( javafx.beans.value.ObservableValue < ? extends javafx.scene.control.Toggle > observable , javafx.scene.control.Toggle oldValue , javafx.scene.control.Toggle newValue ) { if ( ( toggleGroup . getSelectedToggle () ) != null ) { if ( newValue . getUserData () . equals ( "4" ) ) { centerOuterPane . toggleActiveMode ( 6 ) ; } else if ( newValue . getUserData () . equals ( "6" ) ) { centerOuterPane . toggleActiveMode ( 4 ) ; } } } 
public void onTouchDrawer ( int position ) { switch ( position ) { case compsci290.edu.duke.myeveryday.util.Constants.NOTES : startActivity ( new android.content.Intent ( this , compsci290.edu.duke.myeveryday.MainActivity . class ) ) ; break; case compsci290.edu.duke.myeveryday.util.Constants.CATEGORIES : startActivity ( new android.content.Intent ( this , compsci290.edu.duke.myeveryday.Tag.TagList . class ) ) ; break; case compsci290.edu.duke.myeveryday.util.Constants.ANALYTICS : break; case compsci290.edu.duke.myeveryday.util.Constants.LOGOUT : logout () ; break; case compsci290.edu.duke.myeveryday.util.Constants.ATLAS : startActivity ( new android.content.Intent ( this , compsci290.edu.duke.myeveryday.AtlasActivity . class ) ) ; case compsci290.edu.duke.myeveryday.util.Constants.DELETE : deleteAccountClicked () ; break; } } 
public boolean onOptionsItemSelected ( final android.view.MenuItem item ) { int id = item . getItemId () ; switch ( id ) { case R.id.action_favorite : if ( ( movies ) != null ) new com.ashwinpilgaonkar.popularmovies.Backend.Favorite ( getContext () , movies , item , 1 ) ; return true ; case R.id.action_share : ShareTrailer () ; default: return super . onOptionsItemSelected ( item ) ; } } 
private void scanBluetoothDevice ( org.apache.cordova.CallbackContext callbackContext ) { scanCallback = callbackContext ; android.content.IntentFilter filter = new android.content.IntentFilter ( android.bluetooth.BluetoothDevice.ACTION_FOUND ) ; cordova . getActivity () . registerReceiver ( bluetoothReceiver , filter ) ; boolean result = bluetoothAdapter . startDiscovery () ; if ( result ) { callbackContext . success () ; } else { callbackContext . error ( Constant.SCAN_BLUETOOTHDEVICE_FAIL ) ; } } 
public final uk.chromis.pos.forms.ProductInfoExt getProductInfoByCode ( java.lang.String sCode ) throws uk.chromis.basic.BasicException { if ( sCode . startsWith ( "977" ) ) { sCode = sCode . substring ( 0 , 10 ) ; } return ( ( uk.chromis.pos.forms.ProductInfoExt ) ( new uk.chromis.pos.forms.PreparedSentence ( s , ( ( ( "SELECT " + ( getSelectFieldList () ) ) + "FROM STOCKCURRENT C RIGHT JOIN PRODUCTS P ON (C.PRODUCT = P.ID) " ) + " WHERE CODE = ? " ) , SerializerWriteString.INSTANCE , uk.chromis.pos.forms.ProductInfoExt . getSerializerRead () ) . find ( sCode ) ) ) ; } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { switch ( title ) { case R.string.save : save () ; break; case R.string.discard : loadCurrentList () ; adapter . notifyDataSetChanged () ; break; case R.string.reset : loadDefaultList () ; break; } } 
@ java.lang.Override public void onLayoutChildren ( android.support.v7.widget.RecyclerView.Recycler recycler , android.support.v7.widget.RecyclerView.State state ) { super . onLayoutChildren ( recycler , state ) ; cacheHeaderPositions () ; positioner . reset ( getOrientation () ) ; positioner . updateHeaderState ( findFirstVisibleItemPosition () , recycler ) ; positioner . checkHeaderPositions ( getVisibleHeaders () ) ; } 
public void IncrsRedCorRB () { if ( ( ( ( JoystickTest.PressJSRedCorRB ) == true ) && ( ( JoystickTest.pressLstJSRedCorRB ) != true ) ) && ( ( SettingsUI.RedCorRight ) == true ) ) { if ( ( AutoState ) == true ) { RedCorAutoSpin . setValue ( ( ++ ( RedCorAuto ) ) ) ; JoystickTest.pressLstJSRedCorAbtn = true ; } if ( ( TeleState ) == true ) { RedCorTeleSpin . setValue ( ( ++ ( RedCorTele ) ) ) ; JoystickTest.pressLstJSRedCorAbtn = true ; } } } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) private void createComponentMap ( java.awt.Container container ) { componentMap = new java.util.HashMap < java.lang.String , java.awt.Component > () ; java.awt.Component [] components = container . getComponents () ; for ( int i = 0 ; i < ( components.length ) ; i ++ ) { componentMap . put ( components [ i ] . getName () , components [ i ] ) ; } } 
private void cancelChallenge ( nl.hanze.gameserver.server.Challenge challenge , boolean notify ) { if ( challenge == null ) { return; } challenge . getPlayer () . setChallenge ( null ) ; challenge . getOpponent () . removeChallenge ( challenge ) ; if ( notify ) { java.lang.String challengeNumberString = nl.hanze.gameserver.util.StringUtils . toStringAsMap ( "CHALLENGENUMBER" , challenge . getChallengeNumber () ) ; java.lang.String format = "CHALLENGE CANCELLED %s" ; challenge . getOpponent () . writeResponse ( new nl.hanze.gameserver.server.message.GameResponse ( java.lang.String . format ( format , challengeNumberString ) ) ) ; } } 
@ java.lang.Override public boolean equals ( java.lang.Object o ) { if ( ( this ) == o ) { return true ; } if ( ( o == null ) || ( ( getClass () ) != ( o . getClass () ) ) ) { return false ; } no.arkivlab.hioa.nikita.webapp.model.user.Authority authority = ( ( no.arkivlab.hioa.nikita.webapp.model.user.Authority ) ( o ) ) ; if ( ( name ) != null ? ! ( name . equals ( authority.name ) ) : ( authority.name ) != null ) { return false ; } return true ; } 
public static void initializeOthers () { android.content.pm.PackageManager pm = com.anna.util.MyApplication . getAppContext () . getPackageManager () ; java.util.List < android.content.pm.ApplicationInfo > appsInfos = pm . getInstalledApplications ( PackageManager.GET_META_DATA ) ; for ( android.content.pm.ApplicationInfo info : appsInfos ) { java.lang.String appLabel = pm . getApplicationLabel ( info ) . toString () ; if ( com.anna.util.Module.supportedModuleNames . contains ( appLabel ) ) { new com.anna.util.Module ( appLabel , info.packageName ) ; com.anna.util.Module.moduleNames . add ( appLabel ) ; } } } 
public java.lang.String getTags () { java.lang.String globalTags = java.lang.System . getenv ( "MP_METRICS_TAGS" ) ; if ( ( globalTags != null ) && ( ! ( globalTags . isEmpty () ) ) ) { return ( ( tags ) + "," ) + globalTags ; } else { return tags ; } } 
@ java.lang.Override public de.metas.adempiere.form.terminal.IKeyLayout getNumericKeyLayout () { assertCurrentReferencesNotNull () ; for ( int i = ( referencesList . size () ) - 1 ; i <= 0 ; i -- ) { final de.metas.adempiere.form.terminal.context.TerminalContextReferences terminalContextReferences = referencesList . get ( i ) ; final de.metas.adempiere.form.terminal.IKeyLayout numericKeyLayout = terminalContextReferences . getNumericKeyLayout () ; if ( numericKeyLayout != null ) { return numericKeyLayout ; } } return null ; } 
@ org.testng.annotations.Test ( timeOut = 15000 ) public void testGenerator () { try { final io.github.pr0methean.betterrandom.seed.SeedGenerator generator = DevRandomSeedGenerator.DEV_RANDOM_SEED_GENERATOR ; final byte [] seed = generator . generateSeed ( 32 ) ; assert ( seed.length ) == 32 : "Failed to generate seed of correct length" ; } catch ( final io.github.pr0methean.betterrandom.seed.SeedException ex ) { assert ! ( new java.io.File ( "/dev/random" ) . exists () ) : "Seed generator failed even though /dev/random exists." ; org.testng.Reporter . log ( "/dev/random does not exist on this platform." ) ; } } 
protected void setResultModel ( org.apache.jena.rdf.model.Model resultModel ) { try { resultModelMutex . acquire () ; } catch ( java.lang.InterruptedException e ) { org.hobbit.core.components.AbstractBenchmarkController.LOGGER . error ( "Interrupted while waiting for the result model mutex. Returning." , e ) ; } try { if ( resultModel == null ) { this . resultModel = resultModel ; } else { this . resultModel . add ( resultModel ) ; } } finally { resultModelMutex . release () ; } addParametersToResultModel () ; } 
public java.lang.String logout () { java.lang.String result = "/index.xhtml?faces-redirect=true" ; try { javax.faces.context.FacesContext . getCurrentInstance () . getExternalContext () . invalidateSession () ; javax.faces.context.FacesContext context = javax.faces.context.FacesContext . getCurrentInstance () ; javax.servlet.http.HttpServletRequest request = ( ( javax.servlet.http.HttpServletRequest ) ( context . getExternalContext () . getRequest () ) ) ; request . logout () ; } catch ( javax.servlet.ServletException e ) { java.util.logging.Logger . getLogger ( ru.smoomrik.LibraryJSF.beans.User . class . getName () ) . log ( java.util.logging.Level.SEVERE , null , e ) ; } return result ; } 
@ java.lang.Override public boolean next ( ) throws org.eclipse.datatools.connectivity.oda.OdaException { int max = size ; if ( ( maxRows ) != ( - 1 ) ) { max = java.lang.Math . min ( maxRows , size ) ; } if ( ( index ) < max ) { row = root . get ( ( ++ ( index ) ) ) ; } return ( index ) < max ; } 
public static void recoverPreviousStats () { if ( bubbleMaster.Start.previous . equals ( "chooseLevel" ) ) bubbleMaster.Start.chooseLevel = 1 ; else if ( bubbleMaster.Start.previous . equals ( "startGame" ) ) bubbleMaster.Start.startGame = 1 ; else if ( bubbleMaster.Start.previous . equals ( "editGame" ) ) bubbleMaster.Start.editGame = 1 ; else if ( bubbleMaster.Start.previous . equals ( "endGame" ) ) bubbleMaster.Start.endGame = 1 ; else bubbleMaster.Start.begin = 1 ; } 
public void checkPermissions () { permissionCoarseLocationCheck = android.support.v4.content.ContextCompat . checkSelfPermission ( getApplicationContext () , Manifest.permission.ACCESS_COARSE_LOCATION ) ; permissionFineLocationCheck = android.support.v4.content.ContextCompat . checkSelfPermission ( getApplicationContext () , Manifest.permission.ACCESS_FINE_LOCATION ) ; if ( ( ( permissionCoarseLocationCheck ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) || ( ( permissionFineLocationCheck ) != ( android.content.pm.PackageManager.PERMISSION_DENIED ) ) ) { android.support.v4.app.ActivityCompat . requestPermissions ( this , new java.lang.String [] { Manifest.permission.ACCESS_COARSE_LOCATION , Manifest.permission.ACCESS_FINE_LOCATION } , com.thinkful.mapper.MapsActivity.LOCATION_REQUEST ) ; android.util.Log . d ( com.thinkful.mapper.MapsActivity.TAG , "requesting  location perms" ) ; } else { android.util.Log . d ( com.thinkful.mapper.MapsActivity.TAG , "permissions already granted or not needed" ) ; } } 
public board.Cell getNeighbourAt ( int x , int y , board.Direction dir ) { int newX = x + ( dir . getDX () ) ; int newY = y + ( dir . getDY () ) ; if ( ( ( ( newX >= 0 ) && ( newX < ( board.Board.BOARDSIZE ) ) ) && ( newY >= 0 ) ) && ( newY < ( board.Board.BOARDSIZE ) ) ) { return board [ newX ] [ newY ] ; } else { return null ; } } 
@ java.lang.Override protected void testInt () { org.molgenis.data.Query < org.molgenis.data.Entity > query = new org.molgenis.data.support.QueryImpl () . search ( org.molgenis.integrationtest.data.abstracts.query.HEIGHT , java.lang.String . valueOf ( 165 ) ) ; java.util.Set < org.molgenis.data.Entity > resultSet = org.elasticsearch.common.collect.Sets . newHashSet ( person2 ) ; org.testng.Assert . assertTrue ( resultSet . contains ( personsRepository . findOne ( query ) ) ) ; org.testng.Assert . assertEquals ( personsRepository . findAll ( query ) . collect ( java.util.stream.Collectors . toSet () ) , resultSet ) ; org.testng.Assert . assertEquals ( personsRepository . count ( query ) , resultSet . size () ) ; } 
private void requestChunkUnload ( net.librofur.scar.world.chunk.ChunkPointer chunkPointer ) { if ( isChunkInBounds ( chunkPointer.x , chunkPointer.y ) ) { return; } if ( ( loadedChunks . containsKey ( chunkPointer ) ) && ( ! ( chunksToUnload . contains ( chunkPointer ) ) ) ) { chunksToUnload . add ( chunkPointer ) ; } } 
@ java.lang.Override public void nodeRemoved ( @ org.jetbrains.annotations.NotNull org.jetbrains.mps.openapi.event.SNodeRemoveEvent event ) { if ( ! ( event . isRoot () ) ) { return; } jetbrains.mps.smodel.Language language = jetbrains.mps.smodel.Language . getLanguageFor ( event . getModel () ) ; if ( language != null ) { refreshModule ( language ) ; } } 
@ org.junit.Test public void generateRandomKey () { byte [] generatedHash = new byte [ 0 ] ; try { generatedHash = org.fides.encryption.KeyGenerator . generateRandomKey ( "AES" , keySize ) . getEncoded () ; } catch ( java.security.NoSuchAlgorithmException e ) { e . printStackTrace () ; } catch ( java.security.spec.InvalidKeySpecException e ) { e . printStackTrace () ; } org.junit.Assert . assertEquals ( keySize , generatedHash.length ) ; } 
public static void addRoll ( int playerID , int die1 , int die2 , int point , int sum , int result ) { craps.model.GameHistory.rollHistory = new java.util.ArrayList < java.lang.Integer > () ; craps.model.GameHistory.rollHistory . add ( playerID ) ; craps.model.GameHistory.rollHistory . add ( die1 ) ; craps.model.GameHistory.rollHistory . add ( die2 ) ; craps.model.GameHistory.rollHistory . add ( point ) ; craps.model.GameHistory.rollHistory . add ( sum ) ; craps.model.GameHistory.rollHistory . add ( result ) ; craps.model.GameHistory.gameHistory . add ( craps.model.GameHistory.rollHistory ) ; } 
public static void main ( java.lang.String [] args ) throws java.sql.SQLException { new view.mode.dialog.help.QuestionAnswerDialog () . setVisible ( true ) ; new org.languagetool.gui.GrammarChecker ( new javax.swing.JTextArea () ) ; view.MainFrame mainFrame = new view.MainFrame () ; mainFrame . getChooseModePanel () . setMainFrame ( mainFrame ) ; mainFrame . getChooseFriendPanel () . setMainFrame ( mainFrame ) ; mainFrame . getMainMenuPanel () . setMainFrame ( mainFrame ) ; mainFrame . getViewStoryPanel () . setMainFrame ( mainFrame ) ; mainFrame . setVisible ( true ) ; } 
static void injectBaseContext ( android.app.Application application ) { com.plugin.util.LogUtil . d ( "替换宿主程序Application对象的mBase" ) ; android.content.Context base = ( ( android.content.Context ) ( com.plugin.util.RefInvoker . getFieldObject ( application , android.content.ContextWrapper . class . getName () , com.plugin.core.PluginInjector.android_content_ContextWrapper_mBase ) ) ) ; android.content.Context newBase = new com.plugin.core.PluginBaseContextWrapper ( base ) ; com.plugin.util.RefInvoker . setFieldObject ( application , android.content.ContextWrapper . class . getName () , com.plugin.core.PluginInjector.android_content_ContextWrapper_mBase , newBase ) ; } 
@ java.lang.Override public int compare ( dbResources.FlightCombo combo1 , dbResources.FlightCombo combo2 ) { if ( ascending ) { return java.lang.Integer . compare ( combo1 . getDepartureTimeInMin () , combo2 . getDepartureTimeInMin () ) ; } else { return java.lang.Integer . compare ( combo2 . getDepartureTimeInMin () , combo1 . getDepartureTimeInMin () ) ; } } 
public static boolean isRatedFirstTime ( java.lang.String randoId , android.content.Context context ) { if ( ( randoId != null ) && ( context != null ) ) { com.github.randoapp.db.model.Rando randoToUpdate = com.github.randoapp.db.RandoDAO . getRandoByRandoId ( context , randoId ) ; return ( randoToUpdate != null ) && ( ( randoToUpdate.rating ) == 0 ) ; } return false ; } 
private client.model.CellState getCellState ( client.ai.Tile tile ) { client.model.Beetle beetle = tile.beetles . get ( 0 ) ; if ( tile.beetles . isEmpty () ) return client.model.CellState.Blank ; if ( ( beetle . getTeam () ) == ( AI.world . getTeamID () ) ) return client.model.CellState.Ally ; return client.model.CellState.Enemy ; } 
public franks.game.entity.Entity buildEntity ( franks.game.entity.EntityList entities , franks.game.Army army , franks.game.entity.EntityGroupData.EntityInstanceData ref ) { franks.game.entity.EntityData data = loadEntity ( ( "assets/entities/" + ( ref.dataFile ) ) ) ; franks.game.entity.Entity dataEnt = entities . buildEntity ( this , army , data ) ; dataEnt . moveToRegion ( ref.x , ref.y ) ; if ( ( ref.direction ) != null ) { dataEnt . setCurrentDirection ( ref.direction ) ; dataEnt . setDesiredDirection ( ref.direction ) ; } dataEnt . visitTiles ( getMap () ) ; return dataEnt ; } 
@ java.lang.Override public java.util.List < net.sharksystem.sharknet.api.Contact > getContacts () { if ( ( myProfile ) == null ) return null ; java.util.List < net.sharksystem.sharknet.api.Contact > contact_list = net.sharksystem.sharknet.api.DummyDB . getInstance () . getContact_list ( myProfile ) ; contact_list . remove ( myProfile . getContact () ) ; contact_list . removeAll ( myProfile . getBlacklist () . getList () ) ; return contact_list ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; if ( savedInstanceState == null ) { getSupportFragmentManager () . beginTransaction () . add ( R.id.container , new com.mohammedsazid.android.done.MainActivity.PlaceholderFragment () ) . commit () ; } getWindow () . addFlags ( WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON ) ; } 
private void jButton_StartActionPerformed ( java.awt.event.ActionEvent evt ) { int status ; if ( ( aggregator.running_flag ) == false ) { status = aggregator . Start () ; if ( status == 0 ) { jButton_Start . setText ( "Stop" ) ; jSpinnerInterval . setEnabled ( false ) ; int_counter = ( ( java.lang.Number ) ( jSpinnerInterval . getValue () ) ) ; } } else { resetAggregatorState () ; } } 
@ java.lang.Override protected void onStart () { super . onStart () ; android.animation.PropertyValuesHolder holder1 = android.animation.PropertyValuesHolder . ofFloat ( "scaleX" , 0.0F , 5.0F ) ; android.animation.PropertyValuesHolder holder2 = android.animation.PropertyValuesHolder . ofFloat ( "scaleY" , 0.0F , 5.0F ) ; android.animation.ObjectAnimator animator = android.animation.ObjectAnimator . ofPropertyValuesHolder ( mFAB , holder1 , holder2 ) . setDuration ( 350 ) ; animator . start () ; } 
private void reloadData () { synchronized ( lock ) { dataset . clear () ; if ( ( releasedToday ) != null ) { dataset . addAll ( releasedToday ) ; } if ( ( recentlyWatched ) != null ) { dataset . addAll ( recentlyWatched ) ; } if ( ( friendsRecently ) != null ) { dataset . addAll ( friendsRecently ) ; } } } 
@ java.lang.Override public void actionCompleted ( java.util.List < com.example.vlad.licenta.model.Book > res ) { if ( res == null ) res = new java.util.ArrayList <> () ; favouriteBooks = res ; if ( ( adapter ) == null ) { adapter = new com.example.vlad.licenta.CustomAdapterBooks ( favouriteBooks , getContext () ) ; lv . setAdapter ( adapter ) ; } adapter . refresh ( favouriteBooks ) ; } 
@ java.lang.Override public void OnAlbumFragmentInteraction ( int pos ) { mFragmentList . remove ( 1 ) ; vm . changeCurrentList ( pos ) ; mFragmentList . add ( com.vinay.vinplayer.fragments.AllSongsFragment . newInstance ( 1 , vinMediaLists . getAlbumSongsList ( VinMediaLists.allAlbums . get ( pos ) . get ( "album" ) ) ) ) ; adapter = new com.vinay.vinplayer.views.MainActivity.ViewPagerAdapter ( getSupportFragmentManager () ) ; viewPager . setAdapter ( adapter ) ; } 
private java.lang.String getFusekiSparqlEndpointUrl ( java.lang.String company ) { java.lang.String FUSEKI_SPARQL_ENDPOINT_URL ; if ( company . equals ( this . FUSEKI_DATASET_HELLA ) ) FUSEKI_SPARQL_ENDPOINT_URL = this . FUSEKI_SPARQL_ENDPOINT_HELLA ; else if ( company . equals ( this . FUSEKI_DATASET_MHWIRTH ) ) FUSEKI_SPARQL_ENDPOINT_URL = this . FUSEKI_SPARQL_ENDPOINT_MHWIRTH ; else FUSEKI_SPARQL_ENDPOINT_URL = this . FUSEKI_SPARQL_ENDPOINT_DEFAULT ; return FUSEKI_SPARQL_ENDPOINT_URL ; } 
@ java.lang.Override public void buttonClick ( com.vaadin.ui.Button.ClickEvent event ) { if ( isReadyToCommit ( tabType , otherfg ) ) { if ( commit ( cPlaceholder ) ) { com.vaadin.ui.ComboBox comboAllFCOperators = null ; com.vaadin.ui.ComboBox comboTT = null ; if ( isCommission ) { comboAllFCOperators = comboAllCommissionOperators ; comboTT = comboCommissionsTT ; } else { comboAllFCOperators = comboAllFeesOperators ; comboTT = comboFeesTT ; } comboAllFCOperators . select ( null ) ; comboTT . setVisible ( false ) ; if ( isCommission ) { return; } } return; } else { return; } } 
public java.util.Map < java.lang.String , java.lang.String > getColorSwatch () { java.util.Map < java.lang.String , java.lang.String > swatch = new java.util.LinkedHashMap < java.lang.String , java.lang.String > () ; for ( dk.i2m.converge.core.Color color : dk.i2m.converge.core.Color . values () ) { swatch . put ( i18n . getString ( ( "Generic_COLOR_" + ( color . name () ) ) ) , color . name () ) ; } return swatch ; } 
@ java.lang.Override public void onScrolled ( android.support.v7.widget.RecyclerView recyclerView , int dx , int dy ) { super . onScrolled ( recyclerView , dx , dy ) ; totalItemCount = gridLayoutManager . getItemCount () ; lastVisibleItem = gridLayoutManager . findLastVisibleItemPosition () ; if ( ( ! ( isLoading ) ) && ( ( totalItemCount ) <= ( ( lastVisibleItem ) + ( visibleThreshold ) ) ) ) { if ( ( mOnLoadMoreListener ) != null ) { mOnLoadMoreListener . onLoadMore () ; } isLoading = true ; } } 
public thoth_lib_m.dataclass.CopyTable getIArray ( int row ) throws java.lang.Exception { thoth_lib_m.dataclass.CopyTable copy = new thoth_lib_m.dataclass.CopyTable ( ( - 1 ) ) ; if ( ( model ) instanceof thoth_lib_m.guiclass.TableCopiesModel ) { copy = ( ( thoth_lib_m.guiclass.TableCopiesModel ) ( model ) ) . getIArray ( row ) ; } return copy ; } 
private static double redistributeProduction ( double elUsage , double possibleProduction , java.util.List < nz.ac.victoria.swen424.mainTypes.SimulationStatus > prodStatus ) throws java.lang.Exception { double globalDiff = 0 ; double percentage = ( java.lang.Math . abs ( elUsage ) ) / possibleProduction ; for ( nz.ac.victoria.swen424.mainTypes.SimulationStatus simStat : prodStatus ) { double diff = ( ( simStat.maxElectricity ) - ( simStat.currentElectricity ) ) * percentage ; globalDiff += diff ; ( ( nz.ac.victoria.swen424.mainTypes.ElProducer ) ( simStat.type ) ) . updateProduction ( diff ) ; } return globalDiff ; } 
private boolean send ( java.lang.String messageString ) { getLog () . onOutgoing ( messageString ) ; quickfix.Responder responder ; synchronized ( responderLock ) { responder = this . responder ; } if ( responder == null ) { getLog () . onEvent ( ( "No responder, not sending message: " + messageString ) ) ; return false ; } return responder . send ( messageString ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/sample" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public com.catify.initializr.domain.Domain createSample () { com.catify.initializr.rest.DomainGeneratorController.LOG . log ( java.util.logging.Level.INFO , "request to create sample" ) ; com.catify.initializr.domain.Domain domain = new com.catify.initializr.domain.Domain ( "My-Domain" , "com.my.domain" ) ; domain . addService ( new com.catify.initializr.domain.MicroService ( "service-a" , "0.0.1-SNAPSHOT" ) ) ; domain . addService ( new com.catify.initializr.domain.MicroService ( "service-b" , "0.0.1-SNAPSHOT" ) ) ; return domain ; } 
private miniJava.SyntacticAnalyzer.WhileStmt parseWhileKW () { miniJava.SyntacticAnalyzer.WhileStmt whileAst = null ; accept ( TokenKind.WHILE_KW ) ; miniJava.SyntacticAnalyzer.Statement stAst = null ; parseLParen () ; miniJava.SyntacticAnalyzer.Expression eAst = parseExpression () ; parseRParen () ; miniJava.SyntacticAnalyzer.StatementList stlAst = parseStatementList () ; if ( ( stlAst . size () ) > 1 ) stAst = new miniJava.SyntacticAnalyzer.BlockStmt ( stlAst , null ) ; else stAst = stlAst . get ( 0 ) ; whileAst = new miniJava.SyntacticAnalyzer.WhileStmt ( eAst , stAst , null ) ; return whileAst ; } 
public void setKill ( int kill ) { kills += kill ; kk . setKill ( kills ) ; kk . tact () ; GreenfootImage bg2 = new GreenfootImage ( bg ) ; bg2 . setFont ( new java.awt.Font ( "SERIF" , java.awt.Font.BOLD , 24 ) ) ; bg2 . setColor ( java.awt.Color.white ) ; bg2 . drawString ( ( "" + ( kills ) ) , 675 , 40 ) ; } 
private void checkLocation ( ee.juhan.meetingorganizer.server.core.domain.Meeting meeting ) { if ( ( meeting . getLocation () ) == null ) { java.util.List < ee.juhan.meetingorganizer.server.core.domain.Participant > participants = participantRepository . findParticipantsByMeetingId ( meeting . getId () ) ; for ( ee.juhan.meetingorganizer.server.core.domain.Participant participant : participants ) { if ( ( participant . getParticipationAnswer () ) == ( ee.juhan.meetingorganizer.server.rest.domain.ParticipationAnswer.NOT_ANSWERED ) ) { return; } } meeting . setLocation ( ee.juhan.meetingorganizer.server.core.util.LocationGeneratorUtil . findOptimalLocation ( meeting ) ) ; meetingRepository . save ( meeting ) ; } } 
@ java.lang.Override public java.lang.String toString () { return ( ( ( ( ( ( ( ( ( "Meal{" + "id=" ) + ( id ) ) + ", dateTime=" ) + ( dateTime ) ) + ", description='" ) + ( description ) ) + '\'' ) + ", calories=" ) + ( calories ) ) + '}' ; } 
private void sendMessage () { try ( java.io.PrintWriter out = new java.io.PrintWriter ( client . getOutputStream () , true ) ) { while ( client . isConnected () ) { ru.otus.l161.app.Msg msg = output . take () ; java.lang.String json = new com.google.gson.Gson () . toJson ( msg ) ; out . println ( json ) ; out . println ( "\n" ) ; } } catch ( java.lang.InterruptedException | java.io.IOException e ) { ru.otus.l161.channel.SocketClientChannel.logger . log ( java.util.logging.Level.SEVERE , e . getMessage () ) ; } } 
public void reDrawTable ( orgomg.cwm.objectmodel.core.ModelElement [] columns , boolean withData ) { if ( ( ( tablePanel ) != null ) && ( ! ( tablePanel . isDisposed () ) ) ) { tablePanel . dispose () ; } needLoadData = withData ; try { createNatTable ( columns , withData ) ; drawCanvas . layout () ; } catch ( java.sql.SQLException e ) { org.eclipse.jface.dialogs.MessageDialog . openWarning ( null , org.talend.dataquality.record.linkage.ui.i18n.internal.DefaultMessagesImpl . getString ( "ColumnAnalysisDataSamTable.InValidWhereClause" ) , e . getMessage () ) ; needLoadData = false ; } } 
public double getTestAdjustedComplianceProbability ( double probability , java.lang.String test ) { double result = probability ; if ( test . equals ( "FOBT" ) ) { result = 1 - ( java.lang.Math . pow ( ( 1 - probability ) , ( 1.0 / 4.0 ) ) ) ; org.renci.epi.util.stats.ComplianceModel.logger . debug ( ( "-------------------> " + result ) ) ; } else { result = 1 - ( java.lang.Math . pow ( ( 1 - probability ) , ( 4.0 / 10.0 ) ) ) ; org.renci.epi.util.stats.ComplianceModel.logger . debug ( ( "-------------------> " + result ) ) ; } return result ; } 
@ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.HIGHEST ) public void onPlayerLogin ( org.bukkit.event.player.PlayerJoinEvent e ) { final org.bukkit.entity.Player p = e . getPlayer () ; if ( p . hasPermission ( "OldCombatMechanics.notify" ) ) { org.bukkit.Bukkit . getScheduler () . runTaskLaterAsynchronously ( plugin , new java.lang.Runnable () { public void run () { gvlfm78.plugin.OldCombatMechanics.OCMUpdateChecker updateChecker = new gvlfm78.plugin.OldCombatMechanics.OCMUpdateChecker ( plugin , pluginFile ) ; updateChecker . sendUpdateMessages ( p ) ; } } , 20L ) ; } } 
@ java.lang.Override public void subscribedToChannel ( java.lang.String subscription ) { java.lang.String msg = java.lang.String . format ( "Subscribed to channel %s." , subscription ) ; android.util.Log . i ( com.monmouth.fayePG.FayeService.LOG_TAG , msg ) ; if ( ( fayePG . getSubscribeCallbackContext () ) != null ) { org.apache.cordova.PluginResult result = new org.apache.cordova.PluginResult ( PluginResult.Status.OK , msg ) ; result . setKeepCallback ( false ) ; fayePG . getSubscribeCallbackContext () . sendPluginResult ( result ) ; } } 
@ java.lang.Override public void run ( final com.github.mtakaki.credentialstorage.CredentialStorageConfiguration configuration , final io.dropwizard.setup.Environment environment ) throws java.lang.Exception { this . registerExternalDependencies ( configuration , environment ) ; environment . getObjectMapper () . setPropertyNamingStrategy ( PropertyNamingStrategy.CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES ) . setSerializationInclusion ( Include.NON_NULL ) ; environment . jersey () . register ( this . petite . getBean ( com.github.mtakaki.credentialstorage.resources.CredentialResource . class ) ) ; } 
@ java.lang.Override public java.lang.Integer getAddedArea ( int newparcel , int oldparcel ) { java.util.Map addmap = map . get ( newparcel ) ; java.lang.Integer areaadded = 0 ; if ( addmap != null ) { areaadded = ( ( java.lang.Integer ) ( addmap . get ( oldparcel ) ) ) ; } return areaadded ; } 
private org.exist.xquery.ExternalModule compileOrBorrowModule ( java.lang.String prefix , java.lang.String namespaceURI , java.lang.String location , org.exist.xquery.Source source ) throws org.exist.xquery.XPathException { final org.exist.xquery.ExternalModule module = compileModule ( prefix , namespaceURI , location , source ) ; setModule ( module . getNamespaceURI () , module ) ; declareModuleVars ( module ) ; return module ; } 
@ org.junit.Test public void testGetFileCount () { deleteCurrentProject () ; org.eclipse.core.resources.IFolder anaFolder = initFolder ( EResourceConstant.ANALYSIS . getPath () ) ; org.eclipse.core.resources.IFolder repFolder = initFolder ( EResourceConstant.REPORTS . getPath () ) ; org.talend.dataprofiler.core.ui.views.provider.ResourceViewLabelProvider reViewLabelProvider = new org.talend.dataprofiler.core.ui.views.provider.ResourceViewLabelProvider () ; int AnalysisNum = reViewLabelProvider . getFileCount ( anaFolder , org.talend.dataprofiler.core.ui.views.provider.ResourceViewLabelProviderTest.filterExtensions ) ; int reportNum = reViewLabelProvider . getFileCount ( repFolder , org.talend.dataprofiler.core.ui.views.provider.ResourceViewLabelProviderTest.filterExtensions ) ; assertEquals ( AnalysisNum , 3 ) ; assertEquals ( reportNum , 3 ) ; } 
public void getHomeTimeline ( int since_id , long max_id , com.loopj.android.http.AsyncHttpResponseHandler handler ) { java.lang.String apiURL = getApiUrl ( "statuses/home_timeline.json" ) ; com.loopj.android.http.RequestParams params = new com.loopj.android.http.RequestParams () ; params . put ( "count" , 25 ) ; if ( since_id > 0 ) { params . put ( "since_id" , java.lang.String . valueOf ( since_id ) ) ; } if ( max_id > 0 ) { params . put ( "max_id" , java.lang.String . valueOf ( max_id ) ) ; } getClient () . get ( apiURL , params , handler ) ; } 
public com.silverpeas.comment.model.Comment toComment () { com.silverpeas.comment.model.Comment comment = new com.silverpeas.comment.model.Comment ( new com.silverpeas.comment.model.CommentPK ( id , componentId ) , new com.stratelia.webactiv.util.publication.model.PublicationPK ( resourceId , componentId ) , java.lang.Integer . valueOf ( author . getId () ) , author . getFullName () , text , com.silverpeas.comment.web.CommentEntity . decodeFromDisplayDate ( creationDate , getAuthor () . getLanguage () ) , com.silverpeas.comment.web.CommentEntity . decodeFromDisplayDate ( modificationDate , getAuthor () . getLanguage () ) ) ; comment . setOwnerDetail ( author . toUser () ) ; return comment ; } 
@ org.junit.Test public void getSize_safety () { com.fuse.ui.Node n = new com.fuse.ui.Node () ; n . setSize ( 10 , 10 ) ; org.junit.Assert . assertEquals ( n . getSize () , new com.fuse.ui.PVector ( 10 , 10 , 0 ) ) ; n . getSize () . add ( new com.fuse.ui.PVector ( 10 , 0 , 0 ) ) ; org.junit.Assert . assertEquals ( n . getSize () , new com.fuse.ui.PVector ( 10 , 10 , 0 ) ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; ( ( org.hisp.dhis.android.eventcapture.EventCaptureApp ) ( getApplication () ) ) . getUserComponent () . inject ( this ) ; addMenuItem ( org.hisp.dhis.android.eventcapture.views.activities.HomeActivity.DRAWER_ITEM_EVENTS_ID , R.drawable.ic_add , R.string.drawer_item_events ) ; onNavigationItemSelected ( getNavigationView () . getMenu () . findItem ( org.hisp.dhis.android.eventcapture.views.activities.HomeActivity.DRAWER_ITEM_EVENTS_ID ) ) ; } 
@ org.junit.Test ( expected = xyz.swordfeng.jobsystem.ValidationError . class ) public void createJobWithTooLongSkill ( ) throws User.AuthFailure , xyz.swordfeng.jobsystem.ValidationError { java.lang.String username = "user1" ; xyz.swordfeng.jobsystem.User user = xyz.swordfeng.jobsystem.User . login ( username , "password" ) ; java.lang.String name = "Programmer" ; java.lang.String address = "China" ; java.lang.String [] skills = new java.lang.String [ 1 ] ; skills [ 0 ] = "averyveryveryverylongskill" ; java.lang.String education = "大学" ; xyz.swordfeng.jobsystem.Job job = new xyz.swordfeng.jobsystem.Job ( user , name , address , 10 , skills , education ) ; org.junit.Assert . fail ( "should throw ValidationError exception" ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( ( ( actionType ) == 3 ) || ( testing ) ) { pathLength = ( ( float ) ( ballView . getTotalPathLength () ) ) ; metric = ( ( pathLength ) + ( timeSpentInCircle ) ) + ( trialDuration ) ; android.content.Intent intent = getIntent () ; intent . putExtra ( "score" , metric ) ; setResult ( edu.umd.cmsc436.Level.RESULT_OK , intent ) ; sendToSheets () ; } else { finish () ; } } 
private java.util.List < com.netflix.imflibrary.KLVPacket.Header > getSubDescriptorKLVHeader ( com.netflix.imflibrary.st0377.header.InterchangeObject.InterchangeObjectBO essenceDescriptor ) throws java.io.IOException { java.util.List < com.netflix.imflibrary.KLVPacket.Header > subDescriptorHeaders = new java.util.ArrayList <> () ; com.netflix.imflibrary.IMFErrorLogger imfErrorLogger = new com.netflix.imflibrary.IMFErrorLoggerImpl () ; java.util.List < com.netflix.imflibrary.st0377.header.InterchangeObject.InterchangeObjectBO > subDescriptors = this . getHeaderPartition () . getSubDescriptors ( essenceDescriptor ) ; for ( com.netflix.imflibrary.st0377.header.InterchangeObject.InterchangeObjectBO subDescriptorBO : subDescriptors ) { if ( subDescriptorBO != null ) { subDescriptorHeaders . add ( subDescriptorBO . getHeader () ) ; } } return subDescriptorHeaders ; } 
@ java.lang.Override public boolean onLongClick ( android.view.View v ) { mMainActivity.selectedId = columnId . get ( ( ( int ) ( v . getTag () ) ) ) . get ( 1 ) ; mMainActivity.selectedNotePosition = ( ( int ) ( v . getTag () ) ) ; mMainActivity . noteFocused ( 2 ) ; return false ; } 
public void crashedXPos () { collisionRect.x = this . xPos ; collisionRect.y = this . yPos ; int tempVelocity = 1 + ( generator . nextInt ( 6 ) ) ; setxVelocity ( ( tempVelocity * ( getxVelocity () ) ) ) ; setxVelocity ( ( ( - 1 ) * ( getxVelocity () ) ) ) ; xPos = ( xPos ) + ( xVelocity ) ; yPos = ( yPos ) + ( yVelocity ) ; } 
@ java.lang.Override public void start ( javafx.stage.Stage primaryStage ) throws java.lang.Exception { javafx.fxml.FXMLLoader loader = new javafx.fxml.FXMLLoader () ; loader . setLocation ( frontend.app.Main . class . getResource ( "../gui/ScientificArticleApp2.fxml" ) ) ; javafx.scene.layout.AnchorPane myApp = ( ( javafx.scene.layout.AnchorPane ) ( loader . load () ) ) ; javafx.scene.Scene scene = new javafx.scene.Scene ( myApp ) ; primaryStage . setScene ( scene ) ; primaryStage . show () ; scene . getStylesheets () . add ( getClass () . getResource ( "../gui/styles.css" ) . toExternalForm () ) ; } 
public void run () { try { if ( ( mCastManager ) != null ) { mCastManager . stopApplication () ; mCastManager . disconnectDevice ( false , false , false ) ; } if ( ( mDataCastManager ) != null ) { mDataCastManager . stopApplication () ; mDataCastManager . disconnect () ; } } catch ( com.google.android.libraries.cast.companionlibrary.cast.exceptions.TransientNetworkDisconnectionException | com.google.android.libraries.cast.companionlibrary.cast.exceptions.NoConnectionException e ) { e . printStackTrace () ; } finally { currentDevices . clear () ; mCastManager = null ; mDataCastManager = null ; } } 
private java.util.Stack < java.awt.MenuItem > getPlugins () { ain.tolva.nut.AddPlugin p = ain.tolva.nut.AddPlugin . getInstance () ; java.util.Stack < java.awt.MenuItem > plug = new java.util.Stack <> () ; while ( ! ( p . empty () ) ) { java.lang.System.out . println ( p . pop () ) ; java.awt.MenuItem i = p . pop () ; if ( i != null ) plug . push ( i ) ; } return plug ; } 
private void Notice () { me.drakeet.materialdialog.MaterialDialog builder = new me.drakeet.materialdialog.MaterialDialog ( this ) ; builder . setTitle ( "提示" ) ; builder . setMessage ( "\u81eaAndroid6.0\uff0c\u7531\u4e8e\u65b0\u589e\u6743\u9650\u7ba1\u7406API\n\n\u82e5\u8981\u6b63\u5e38\u4f7f\u7528ZRecovery\uff0c\u8bf7\u63a5\u53d7\u4ee5\u4e0b\u6743\u9650\u7533\u8bf7" ) ; builder . setNegativeButton ( "明白" , new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { PmRequest ( PER_ALL , 666 ) ; } } ) ; builder . setPositiveButton ( "取消" , new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { finish () ; } } ) ; builder . show () ; } 
private void toStep ( int index ) { ch.epfl.planair.meta.PipelineConfig [] steps = PipelineConfig.Step . values () ; status = steps [ index ] ; rangeButton . min ( config . lowerUnit ( status ) ) ; rangeButton . max ( config . upperUnit ( status ) ) ; previousActionButton . text ( ( index == 0 ? "Back" : "Previous" ) ) ; nextActionButton . text ( ( ( index + 1 ) == ( steps.length ) ? "Finish" : "Next" ) ) ; } 
@ java.lang.Override public java.lang.String [] getArgArray () { java.lang.String [] result ; if ( ( ( extensionList . getValue () ) != null ) && ( ( extensionList . getValue () . size () ) > 1 ) ) { result = new java.lang.String [] { groupNumber . serialize () , extensionList . serialize () } ; } else { result = new java.lang.String [] { groupNumber . serialize () } ; } return result ; } 
@ java.lang.Override protected void cancelled () { logger . debug ( "Subscriber cancelled, ignoring the rest of the body" ) ; channelManager . drainChannelAndOffer ( channel , future ) ; channel . pipeline () . remove ( org.asynchttpclient.netty.handler.StreamedResponsePublisher . class ) ; try { future . done () ; } catch ( java.lang.Exception t ) { logger . debug ( t . getMessage () , t ) ; } } 
private void updateTable ( javax.swing.table.DefaultTableModel tableModel , java.util.Vector < java.util.Vector < java.lang.String > > rowData ) { while ( ( tableModel . getRowCount () ) > 0 ) { tableModel . removeRow ( 0 ) ; } for ( int i = 0 ; i < ( rowData . size () ) ; i ++ ) { tableModel . addRow ( rowData . get ( i ) ) ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/getMenuAndroid" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String getMenuAndroid ( @ org.springframework.web.bind.annotation.RequestParam ( value = MODEL_CUSTOMER_ORDER ) java.lang.String customerOrder , org.springframework.ui.ModelMap model ) { com.rns.tiffeat.web.bo.domain.CustomerOrder order = new com.google.gson.Gson () . fromJson ( customerOrder , com.rns.tiffeat.web.bo.domain.CustomerOrder . class ) ; return new com.google.gson.Gson () . toJson ( customerBo . getDailyContentForMeal ( order . getMeal () , order . getMealType () ) ) ; } 
public boolean modify ( int index , udo.storage.Task modifiedTask ) { if ( index >= ( udo.storage.Storage.taskList . size () ) ) { return false ; } udo.storage.Storage.prevTask = udo.storage.Storage.taskList . get ( index ) ; udo.storage.Storage.prevCmd = "mod" ; udo.storage.Storage.taskList . set ( index , modifiedTask ) ; udo.storage.JsonProcessor . writeJson ( lastPath , udo.storage.Storage.taskList ) ; return true ; } 
public void setRadiusInPixel ( final int radiusInPixel ) { if ( ( ( ( mRadiusInPixel ) == radiusInPixel ) || ( 1 > radiusInPixel ) ) || ( ( mMaxRadiusInPixel ) < radiusInPixel ) ) { return; } mRadiusInPixel = radiusInPixel ; mRadius = jp.co.cyberagent.android.gpuimage.GPUImageGaussianBlurFilter . getRadius ( mRadiusInPixel ) ; prepareArrays ( mRadius , mRadiusInPixel ) ; runOnDraw ( new java.lang.Runnable () { @ java.lang.Override public void run () { setUniforms ( 0 ) ; setUniforms ( 1 ) ; } } ) ; } 
@ java.lang.Override public boolean isSiftable ( net.minecraft.block.state.IBlockState state , int meshLevel ) { java.util.List < exnihiloadscensio.registries.types.Siftable > siftables = exnihiloadscensio.registries.SieveRegistry . getDrops ( new exnihiloadscensio.util.BlockInfo ( state ) ) ; if ( siftables != null ) { for ( exnihiloadscensio.registries.types.Siftable siftable : siftables ) { if ( ( siftable . getMeshLevel () ) <= meshLevel ) { return true ; } } } return false ; } 
public void makeFormat () { for ( nez.lang.Production rule : grammar ) { elementsStack [ stackTop ] = new nez.bx.FormatGenerator.Elements () ; makeProductionFormat ( rule ) ; java.lang.String nonterminalName = rule . getLocalName () ; int nonterminalId = convertNonterminalName ( nonterminalName ) ; nonterminalList [ nonterminalId ] = new nez.bx.FormatGenerator.Captured ( elementsStack [ stackTop ] , nonterminalName ) ; } } 
@ java.lang.Override public void handleResult ( java.lang.String data ) { try { org.json.JSONObject result = new org.json.JSONObject ( data ) ; newProfile . setFriends ( new cwa115.trongame.FriendList ( result . getString ( "friends" ) ) ) ; cwa115.trongame.Profile dataToUpdate = cwa115.trongame.Profile . GetUpdatedData ( localProfile , newProfile ) ; pushUpdatedDataToServer ( localProfile , dataToUpdate ) ; } catch ( org.json.JSONException e ) { showToast ( R.string.update_failed ) ; } } 
public static jsettlers.graphics.localization.Labels.LocaleSuffix [] getLocaleSuffixes () { jsettlers.graphics.localization.Labels.LocaleSuffix [] locales = new jsettlers.graphics.localization.Labels.LocaleSuffix [] { new jsettlers.graphics.localization.Labels.LocaleSuffix ( jsettlers.graphics.localization.Labels.preferredLocale , true ) , new jsettlers.graphics.localization.Labels.LocaleSuffix ( jsettlers.graphics.localization.Labels.preferredLocale , false ) , new jsettlers.graphics.localization.Labels.LocaleSuffix ( new java.util.Locale ( "en" , "US" ) , true ) } ; return locales ; } 
public void nuovoFavorito ( android.view.View v ) { if ( ( li . size () ) < 3 ) { android.content.Intent intent = new android.content.Intent ( this , com.example.daniel.app0.NuovoPreferito . class ) ; this . startActivityForResult ( intent , com.example.daniel.app0.GestionePreferiti.FAVORITI_STATE ) ; } else { android.widget.Toast . makeText ( this , R.string.max_preferiti , Toast.LENGTH_SHORT ) ; } } 
@ java.lang.Override public void get ( byte [] dest , int offset , int length ) { int moved = 0 ; while ( moved < length ) { int toRead = java.lang.Math . min ( ( length - moved ) , currentBuffer . remaining () ) ; currentBuffer . get ( dest , offset , toRead ) ; moved += toRead ; updateCurrentBuffer () ; } _pos += moved ; } 
public java.util.List < org.eclipse.hawkbit.mgmt.json.model.target.MgmtTargetRequestBody > buildAsList ( final int offset , final int count ) { final java.util.List < org.eclipse.hawkbit.mgmt.json.model.target.MgmtTargetRequestBody > bodyList = java.util.Arrays . asList () ; for ( int index = offset ; index < ( count + offset ) ; index ++ ) { bodyList . add ( doBuild ( java.lang.String . format ( "%06d" , index ) ) ) ; } return bodyList ; } 
public org.pathwaycommons.pcviz.model.GeneValidation validate ( java.lang.String name ) { org.pathwaycommons.pcviz.model.GeneValidation geneValidation = new org.pathwaycommons.pcviz.model.GeneValidation () ; geneValidation . setQuery ( name ) ; java.util.HashSet < java.lang.String > names = geneMaps . get ( name . toUpperCase () ) ; if ( names != null ) geneValidation . getMatches () . addAll ( names ) ; return geneValidation ; } 
public foo.CollectionFieldsBuilder strings ( foo.Iterator < ? extends java.lang.String > strings ) { if ( strings == null ) { throw new java.lang.NullPointerException ( "strings" ) ; } this . strings = new java.util.ArrayList < java.lang.String > () ; while ( strings . hasNext () ) { java.lang.String item = strings . next () ; if ( item == null ) { throw new java.lang.NullPointerException ( "strings: null item" ) ; } this . strings . add ( item ) ; } return this ; } 
@ java.lang.Override public android.view.View getView ( int i , android.view.View convertView , android.view.ViewGroup viewGroup ) { android.view.View row = convertView ; if ( row == null ) { row = inflater . inflate ( LayResId , viewGroup , false ) ; com.lab3.domain.Photo currMeet = getPhoto ( i ) ; android.widget.ImageView meetName = ( ( android.widget.ImageView ) ( row . findViewById ( R.id.bmp ) ) ) ; meetName . setImageBitmap ( currMeet . getImage () ) ; } return row ; } 
@ java.lang.Override public void keyPressed ( int keyCode ) { int x = speedVector . getDirection () . x ; int y = speedVector . getDirection () . y ; switch ( keyCode ) { case java.awt.event.KeyEvent.VK_RIGHT : x ++ ; break; case java.awt.event.KeyEvent.VK_LEFT : x -- ; break; case java.awt.event.KeyEvent.VK_UP : y -- ; break; case java.awt.event.KeyEvent.VK_DOWN : y ++ ; break; default: return; } move ( new java.awt.Point ( x , y ) ) ; } 
public void returnResponse () { int c ; try { for ( int i = 0 ; i < ( response . length () ) ; i ++ ) { output_s . write ( response . charAt ( i ) ) ; } output_s . write ( 1 ) ; } catch ( java.io.IOException e ) { java.lang.System.err . println ( "IOException in reading Web server" ) ; } } 
@ org.junit.Test public void kannTeilnehmerHinzufuegenUndVorhandenseinUeberpruefen ( ) throws java.lang.Exception { final de.triology.trioexperts.teilnehmerverwaltung.domain.services.TeilnehmerlisteService teilnehmerenlisteService = new de.triology.trioexperts.teilnehmerverwaltung.domain.services.TeilnehmerlisteService ( new de.triology.trioexperts.teilnehmerverwaltung.domain.services.RepositoriesFuerTests () ) ; de.triology.trioexperts.teilnehmerverwaltung.domain.entity.Teilnehmer teilnehmer = new de.triology.trioexperts.teilnehmerverwaltung.domain.entity.Teilnehmer ( "Testteilnehmer" ) ; assertFalse ( teilnehmerenlisteService . teilnehmerIstSchonVorhanden ( teilnehmer ) ) ; assertTrue ( teilnehmerenlisteService . teilnehmerHinzufuegen ( teilnehmer ) ) ; assertTrue ( teilnehmerenlisteService . teilnehmerIstSchonVorhanden ( teilnehmer ) ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { switch ( v . getId () ) { case R.id.pickerview_confirm : if ( ( result ) == null ) { result = java.lang.String . valueOf ( arrayWheelAdapter . getItemText ( wheelView . getCurrentItem () ) ) ; } callbackContext . success ( result ) ; android.util.Log . i ( com.terrydr.pickerview.PickerView_Plugin_intent.TAG , ( "result:" + ( result ) ) ) ; popupWindow . dismiss () ; break; case R.id.pickerview_cancle : popupWindow . dismiss () ; break; default: break; } } 
public boolean tileIsEmpty ( java.lang.String layer , int col , int row ) { com.badlogic.gdx.maps.tiled.TiledMapTileLayer tiledLayer = ( ( com.badlogic.gdx.maps.tiled.TiledMapTileLayer ) ( tiledMap . getLayers () . get ( layer ) ) ) ; com.badlogic.gdx.maps.tiled.TiledMapTileLayer.Cell currentCell = tiledLayer . getCell ( col , row ) ; return ( currentCell == null ) && ( ( currentCell . getTile () ) == null ) ; } 
private void launchWordGenerationFragment () { if ( ! ( getSupportFragmentManager () . findFragmentByTag ( getString ( R.string.generation_fragment_tag ) ) . isVisible () ) ) { getSupportFragmentManager () . beginTransaction () . replace ( R.id.main_content_frame , new com.conz13.d.strongpasswordcreator.WordGenerationFragment () , getString ( R.string.generation_fragment_tag ) ) . addToBackStack ( null ) . commit () ; } } 
public boolean guess ( int number ) { if ( number == ( this . secret ) ) { ++ ( count ) ; setHint ( ( ( ( ( "Correct! The Secret Number is " + ( getSecretNumber () ) ) + ". You used " ) + ( getCount () ) ) + " guesses" ) ) ; return true ; } else if ( number < ( this . secret ) ) { setHint ( "Sorry, your guess is too small" ) ; ( count ) ++ ; return false ; } else { setHint ( "Sorry, your guess is too big" ) ; ( count ) ++ ; return false ; } } 
private static void insertItem ( java.lang.String firstName , java.lang.String lastName , int idNum ) { java.sql.Connection conn = edu.wright.cs.sp16.ceg3120.DerbyConn . establishConn () ; java.sql.PreparedStatement pstmt = null ; try { pstmt = conn . prepareStatement ( "INSERT INTO Test values (?,?,?)" ) ; pstmt . setString ( 1 , firstName ) ; pstmt . setString ( 2 , lastName ) ; pstmt . setInt ( 3 , idNum ) ; pstmt . executeUpdate () ; pstmt . close () ; } catch ( java.sql.SQLException sqlExcept ) { sqlExcept . printStackTrace () ; } } 
public void seUpRecycleview () { android.util.Log . d ( TAG , "seUpRecycleview: " ) ; if ( ( adapter ) == null ) { adapter = new se.sockertoppar.timeplanner.RecyclerListAdapter ( subjectsArrayList , myDatabasHelperSubjects , this , plannerListObjekt , recycleView ) ; recycleView . setAdapter ( adapter ) ; recycleView . setLayoutManager ( new android.support.v7.widget.LinearLayoutManager ( this ) ) ; android.support.v7.widget.helper.ItemTouchHelper.Callback callback = new se.sockertoppar.timeplanner.helper.SimpleItemTouchHelperCallback ( adapter ) ; mItemTouchHelper = new android.support.v7.widget.helper.ItemTouchHelper ( callback ) ; mItemTouchHelper . attachToRecyclerView ( recycleView ) ; } else { adapter . updateList ( subjectsArrayList ) ; } checkIfSubjectActiv () ; } 
public java.lang.String getColor () { boolean expEdit = controller.NavigationController . getInstance () . isExpEdit () ; if ( expEdit ) { beans.relation.PatientIllnessScript learnerscript = new controller.NavigationController () . getCRTFacesContext () . getPatillscript () ; if ( ( ruledOut ) <= ( learnerscript . getStage () ) ) return beans.relation.RelationDiagnosis.COLOR_RULEDOUT ; return "#000000" ; } else { if ( isRuledOutBool () ) return beans.relation.RelationDiagnosis.COLOR_RULEDOUT ; return "#000000" ; } } 
public static java.util.Collection < dk.cs.aau.sw705e15.model.Computer > findClusterOfSizeFromComputerNode ( dk.cs.aau.sw705e15.rater.clustering.Dendrogram.ComputerNode fromNode , final int desiredSize ) { while ( ( ( fromNode . getParent () ) != null ) && ( ( fromNode . getComputers () . size () ) < desiredSize ) ) { fromNode = fromNode . getParent () ; } return fromNode . getComputers () ; } 
private void enableService ( boolean enable ) { isServiceEnabled = enable ; ph.intrepidstream.callmanager.util.PreferenceManager . getInstance ( this ) . setServiceEnabled ( enable ) ; android.content.Intent intent = new android.content.Intent ( this , ph.intrepidstream.callmanager.service.CallManageService . class ) ; if ( enable ) { askPermission () ; startService ( intent ) ; } else { stopService ( intent ) ; } } 
public java.lang.Float getScore () { if ( ( entries . size () ) == 0 ) { return com.inovia.magnifier.reports.RuleReport.MAX_SCORE ; } java.lang.Float score = com.inovia.magnifier.reports.RuleReport.MIN_SCORE ; for ( com.inovia.magnifier.reports.ReportEntry e : entries ) { if ( e . isSuccess () ) { score ++ ; } } return ( score * ( com.inovia.magnifier.reports.RuleReport.MAX_SCORE ) ) / ( ( float ) ( entries . size () ) ) ; } 
private void selectItem ( int position ) { if ( ( leftDrawerListView ) != null ) { leftDrawerListView . setItemChecked ( position , true ) ; navigationItems . get ( currentSelectedPosition ) . setSelected ( false ) ; navigationItems . get ( position ) . setSelected ( true ) ; currentSelectedPosition = position ; getSupportActionBar () . setTitle ( navigationItems . get ( currentSelectedPosition ) . getItemName () ) ; } if ( ( mLinearDrawerLayout ) != null ) {} } 
@ java.lang.Override public void setSelectedItem ( final int index , final boolean animate ) { try { dots . get ( this . selectedDotIndex ) . setInactive ( animate ) ; dots . get ( index ) . setActive ( animate ) ; } catch ( java.lang.IndexOutOfBoundsException e ) { throw new java.lang.IndexOutOfBoundsException () ; } this . selectedDotIndex = index ; } 
@ com.facebook.react.bridge.ReactMethod public void exists ( java.lang.String filepath , com.facebook.react.bridge.Promise promise ) { try { java.io.File file = new java.io.File ( filepath ) ; promise . resolve ( file . exists () ) ; } catch ( java.lang.Exception ex ) { ex . printStackTrace () ; reject ( promise , filepath , ex ) ; } } 
private int runPercolation ( int n ) { Percolation percolation = new Percolation ( n ) ; int blocksOpen = 0 ; while ( ! ( percolation . percolates () ) ) { int row = edu.princeton.cs.algs4.StdRandom . uniform ( 1 , ( n + 1 ) ) ; int col = edu.princeton.cs.algs4.StdRandom . uniform ( 1 , ( n + 1 ) ) ; percolation . open ( row , col ) ; blocksOpen ++ ; } java.lang.System.out . println ( blocksOpen ) ; return blocksOpen ; } 
@ java.lang.Override public void onUpgrade ( android.database.sqlite.SQLiteDatabase db , int i , int i1 ) { android.widget.Toast . makeText ( context , "DB Upgraded" , Toast.LENGTH_SHORT ) . show () ; db . execSQL ( ( "DROP TABLE " + ( com.example.evelina.befit.model.DbManager.USERS_TABLE ) ) ) ; db . execSQL ( ( "DROP TABLE " + ( com.example.evelina.befit.model.DbManager.CHALLENGES_TABLE ) ) ) ; db . execSQL ( ( "DROP TABLE " + ( com.example.evelina.befit.model.DbManager.EXERCISE_TABLE ) ) ) ; db . execSQL ( ( "DROP TABLE " + ( com.example.evelina.befit.model.DbManager.ALARM_TABLE ) ) ) ; onCreate ( db ) ; } 
void cullAndRender ( org.gearvrf.GVRRenderTarget renderTarget , org.gearvrf.GVRScene scene ) { cullAndRender ( scene . getNative () , renderTarget . getNative () , mRenderBundle . getMaterialShaderManager () . getNative () , mRenderBundle . getPostEffectShaderManager () . getNative () , mRenderBundle . getPostEffectRenderTextureA () . getNative () , mRenderBundle . getPostEffectRenderTextureB () . getNative () ) ; } 
public void setGuide ( org.esn.mobilit.models.Guide guide ) { org.esn.mobilit.renderers.GuideRenderer sgr = new org.esn.mobilit.renderers.GuideRenderer () ; java.lang.String survivalContent = sgr . renderSurvivalGuide ( guide ) ; if ( ( guide . isActivated () ) && ( guide . isCreated () ) ) { guideContent . setText ( android.text.Html . fromHtml ( survivalContent ) , TextView.BufferType.SPANNABLE ) ; } else { guideContent . setText ( R.string.info_message_guide_not_displayable , TextView.BufferType.SPANNABLE ) ; } } 
public void performAction ( com.vp.plugin.action.VPAction arg0 ) { br.ufes.inf.nemo.mltplugin.LogUtilitary . log ( ( ( "Reloading again " + ( br.ufes.inf.nemo.mltplugin.MLTPlugin.PLUGIN_ID ) ) + "..." ) ) ; br.ufes.inf.nemo.mltplugin.MLTPlugin . unloadModelListener () ; com.vp.plugin.ApplicationManager . instance () . reloadPluginClasses ( MLTPlugin.PLUGIN_ID ) ; br.ufes.inf.nemo.mltplugin.LogUtilitary . clearValidationLog () ; br.ufes.inf.nemo.mltplugin.LogUtilitary . log ( ( ( "Reloading complete! [" + ( new java.util.Date () ) ) + "]" ) ) ; } 
@ java.lang.Override public void apply ( epmc.value.Value result , epmc.value.Value . . . operands ) { assert result != null ; assert operands != null ; assert ( operands.length ) >= 1 ; epmc.value.ValueObject . asObject ( result ) . set ( epmc.value.ValueObject . asObject ( operands [ 0 ] ) . getObject () ) ; } 
public static int processActionsInEvent ( ru.runa.wfe.lang.ActionEvent actionEvent ) { int result = 0 ; for ( ru.runa.wfe.lang.Action action : actionEvent . getActions () ) { if ( ( ( action instanceof ru.runa.wfe.lang.jpdl.CreateTimerAction ) || ( action instanceof ru.runa.wfe.lang.jpdl.CancelTimerAction ) ) || ( action . getName () . contains ( TimerJob.ESCALATION_NAME ) ) ) { continue; } result ++ ; } return result ; } 
@ java.lang.Override public void run () { mPager . setCurrentItem ( 0 , false ) ; org.ei.opensrp.view.fragment.SecuredNativeSmartRegisterFragment registerFragment = ( ( org.ei.opensrp.view.fragment.SecuredNativeSmartRegisterFragment ) ( findFragmentByPosition ( 0 ) ) ) ; if ( ( registerFragment != null ) && ( data != null ) ) { registerFragment . refreshListView () ; } org.ei.opensrp.view.fragment.DisplayFormFragment displayFormFragment = getDisplayFormFragmentAtIndex ( prevPageIndex ) ; if ( displayFormFragment != null ) { displayFormFragment . hideTranslucentProgressDialog () ; displayFormFragment . setFormData ( null ) ; displayFormFragment . loadFormData () ; } displayFormFragment . setRecordId ( null ) ; } 
@ java.lang.Override public void onResponse ( retrofit.Response < java.util.List < com.example.proxymeister.antonsskafferi.model.Menu > > response , retrofit.Retrofit retrofit ) { java.util.List < com.example.proxymeister.antonsskafferi.model.Menu > menus = response . body () ; if ( menus != null ) { com.example.proxymeister.antonsskafferi.model.Menu menu = com.example.proxymeister.antonsskafferi.model.Menu . mergedMenuAtCurrentTime ( menus ) ; setTitle ( ( ( menu.type ) == 0 ? "Lunchmeny" : "Middagsmeny" ) ) ; adapter = new com.example.proxymeister.antonsskafferi.MenuAdapter ( menu , editMenu , this ) ; rv . setAdapter ( adapter ) ; } } 
public static boolean check ( java.lang.String line ) { java.lang.String [] words = line . split ( " " ) ; int counter = 0 ; for ( java.lang.String word : words ) { if ( ( word . length () ) != 0 ) { counter ++ ; } } if ( counter <= 5 ) { return false ; } else { return true ; } } 
private org.opendaylight.yang.gen.v1.urn.ietf.params.xml.ns.yang.ietf.inet.types.rev130715.IpAddress getPublicIP ( org.opendaylight.yang.gen.v1.urn.opendaylight.faas.logical.faas.logical.routers.rev151013.logical.routers.container.logical.routers.LogicalRouter lr , org.opendaylight.faas.uln.cache.UserLogicalNetworkCache uln ) { java.util.List < org.opendaylight.yang.gen.v1.urn.ietf.params.xml.ns.yang.ietf.inet.types.rev130715.IpAddress > ips = new java.util.ArrayList <> () ; for ( org.opendaylight.yang.gen.v1.urn.opendaylight.faas.logical.faas.common.rev151013.Uuid p : lr . getPort () ) { org.opendaylight.faas.uln.cache.PortMappingInfo pi = uln . getPortStore () . get ( p ) ; ips . addAll ( pi . getPort () . getPublicIps () ) ; } return ips . get ( 0 ) ; } 
@ org.junit.Test public void removeAllOnRequiredProperty () { com.github.javaparser.ast.CompilationUnit cu = com.github.javaparser.JavaParser . parse ( "class X{ void x(){}}" ) ; com.github.javaparser.ast.body.MethodDeclaration methodDeclaration = cu . getType ( 0 ) . getMethods () . get ( 0 ) ; methodDeclaration . getName () . removeForced () ; org.junit.Assert . assertEquals ( "class X {\n}\n" , cu . toString () ) ; } 
private void setUiEnabled ( boolean enabled ) { com.android1.homework3.ui.MainActivity mainActivity = mMainActivityWeakRef . get () ; if ( mainActivity == null ) { return; } android.app.FragmentManager fragmentManager = mainActivity . getFragmentManager () ; android.app.Fragment fragment ; for ( java.lang.String tag : com.android1.homework3.ui.Controller.sUiFragmentTags ) { fragment = fragmentManager . findFragmentByTag ( tag ) ; if ( ( fragment instanceof com.android1.homework3.ui.UiFragment ) && ( fragment . isAdded () ) ) { ( ( com.android1.homework3.ui.UiFragment ) ( fragment ) ) . setUiEnabled ( true ) ; } } } 
public static java.lang.String getFreundschaft ( java.lang.String benutzer1 , java.lang.String benutzer2 ) { java.lang.String result = "" ; connect () ; com.fhaachen.swe.freespace.main.Freundschaft freundschaft = com.fhaachen.swe.freespace.main.Freundschaft . findByCompositeKeys ( benutzer1 , benutzer2 ) ; disconnect () ; if ( freundschaft != null ) { result = freundschaft . toJson ( true ) ; } result = com.fhaachen.swe.freespace.main.Freundschaft . completeFreundschaft ( result , benutzer1 ) ; return result ; } 
@ java.lang.Override public void onViewCreated ( android.view.View view , android.os.Bundle savedInstanceState ) { super . onViewCreated ( view , savedInstanceState ) ; com.example.bchan92.homework1.DynamicFragment.ViewHolder holder = new com.example.bchan92.homework1.DynamicFragment.ViewHolder ( view ) ; view . setTag ( view ) ; holder.contact_name . setText ( this . contact_name ) ; holder.address . setText ( this . address ) ; holder.birth_date . setText ( java.lang.String . format ( "%s/%s/%s" , month , day , year ) ) ; holder.birth_date . setOnClickListener ( this ) ; } 
public void RemoveUserEntry ( java.util.UUID . . . uuid ) { for ( int i = ( completeUsers . size () ) - 1 ; i >= 0 ; i -- ) { betterquesting.quests.QuestInstance.UserEntry entry = completeUsers . get ( i ) ; if ( entry.uuid . equals ( uuid ) ) { completeUsers . remove ( i ) ; UpdateClients () ; } } } 
@ java.lang.Override @ android.annotation.TargetApi ( value = Build.VERSION_CODES.M ) public boolean toggle ( boolean enable ) { try { mCameraManager . setTorchMode ( mCameraID , enable ) ; return true ; } catch ( android.hardware.camera2.CameraAccessException e ) { android.widget.Toast . makeText ( mContext , e . getMessage () , Toast.LENGTH_SHORT ) . show () ; return false ; } } 
public static void normalize ( java.util.Collection < java.lang.String > strings ) { java.util.HashSet < java.lang.String > normalized = new java.util.HashSet < java.lang.String > ( strings . size () ) ; for ( java.lang.String string : strings ) { normalized . add ( string . trim () . toLowerCase () ) ; } strings . clear () ; strings . addAll ( normalized ) ; } 
@ org.junit.Test public void test ( ) throws java.lang.Exception { org.phenopackets.api.model.condition.Phenotype p = new org.phenopackets.api.model.condition.Phenotype () ; org.phenopackets.api.model.ontology.OntologyClass oc = new org.phenopackets.api.model.ontology.OntologyClass.Builder ( "X:1" ) . setLabel ( "foo" ) . build () ; p . setDescription ( "foo" ) ; java.lang.System.out . println ( org.phenopackets.api.io.YamlGenerator . render ( p ) ) ; org.phenopackets.api.model.entity.Entity e = new org.phenopackets.api.model.entity.Disease () ; java.lang.System.out . println ( org.phenopackets.api.io.YamlGenerator . render ( e ) ) ; } 
public void onReady ( play.mvc.WebSocket.In < java.lang.String > in , play.mvc.WebSocket.Out < java.lang.String > out ) { if ( gameUUID . equals ( "local" ) ) { new models.GridObserver ( controllers.Application.controller , out ) ; } else { java.lang.System.out . println ( ( "starting grid observer for" + gameUUID ) ) ; controllers.Application.gameInstances . get ( java.util.UUID . fromString ( gameUUID ) ) . setOut ( out ) ; new models.GridObserver ( controllers.Application.gameInstances . get ( java.util.UUID . fromString ( gameUUID ) ) . getController () , out ) ; } } 
public void onDeckClicked ( int position , android.view.View view ) { android.content.Context context = view . getContext () ; android.content.Intent intent = new android.content.Intent ( context , com.blstream.studybox.activities.ExamActivity . class ) ; intent . putExtra ( context . getString ( R.string.deck_data_key ) , dataHelper . getSingleDeck ( position ) ) ; context . startActivity ( intent ) ; } 
public static uk.ac.tgac.conan.process.rnaasm.TrinityV2.Args.SSLibType fromStrandedness ( uk.ac.tgac.conan.core.data.Library.Strandedness strandedness ) { if ( strandedness == ( Library.Strandedness.FF_UNSTRANDED ) ) { return uk.ac.tgac.conan.process.rnaasm.TrinityV2.Args.SSLibType.R ; } else if ( strandedness == ( Library.Strandedness.FR_UNSTRANDED ) ) { return uk.ac.tgac.conan.process.rnaasm.TrinityV2.Args.SSLibType.F ; } else if ( strandedness == ( Library.Strandedness.FR_FIRST_STRAND ) ) { return uk.ac.tgac.conan.process.rnaasm.TrinityV2.Args.SSLibType.RF ; } else if ( strandedness == ( Library.Strandedness.FR_SECOND_STRAND ) ) { return uk.ac.tgac.conan.process.rnaasm.TrinityV2.Args.SSLibType.FR ; } else { throw new java.lang.UnsupportedOperationException ( "Not sure how to translate this type of strandeded RNAseq library into format suitable for Trinity" ) ; } } 
public void yesButtonClick ( android.view.View view ) { _person.livedWholeLife = true ; _person.livedInYears = null ; org.rhok.linguist.code.DatabaseHelper dbHelper = new org.rhok.linguist.code.DatabaseHelper ( getApplicationContext () ) ; dbHelper . updatePersonLivedWholeLife ( _person.personid , true ) ; android.content.Intent intent = getIntent () . getParcelableExtra ( InterviewNameActivity.ARG_FINAL_INTENT ) ; if ( intent == null ) intent = new android.content.Intent ( this , org.rhok.linguist.activity.recording.RecordingInstructionsActivity . class ) ; intent . putExtra ( IntentUtil.ARG_PERSON_ID , _person.personid ) ; intent . putExtra ( InterviewNameActivity.ARG_FINAL_INTENT , getIntent () . getParcelableExtra ( InterviewNameActivity.ARG_FINAL_INTENT ) ) ; startActivity ( intent ) ; } 
public void checkDeath () { Draw.level [ CURRENT_LEVEL ] . resetGoal () ; boolean failed = false ; for ( int x = 0 ; x < ( Draw.level [ CURRENT_LEVEL ] . getNumEnemies () ) ; x ++ ) { if ( Draw.level [ CURRENT_LEVEL ] . getEnemy ( x ) . checkPlayerCollision ( Draw.level [ CURRENT_LEVEL ] , Draw.player ) ) { failed = true ; } } if ( failed ) resetLevel () ; else playerColor = java.awt.Color.LIGHT_GRAY ; failed = false ; } 
public logic.Tournament getTournament ( int ID ) throws java.sql.SQLException { java.lang.String sql = ( "SELECT COUNT(*) AS Count FROM Turniere WHERE ID = " + ID ) + ";" ; java.sql.PreparedStatement stmt = logic.Controll.con . prepareStatement ( sql ) ; java.sql.ResultSet rs = stmt . executeQuery () ; if ( ( rs . getInt ( "Count" ) ) == 1 ) { return new logic.Tournament ( ID , logic.Controll.con ) ; } return null ; } 
protected void onPostExecute ( com.uwo.crystalli.jukebox.VideoResult video ) { android.util.Log . v ( LOG_TAG , "GetNextMediaTask finished" ) ; if ( video != null ) { mYoutubePlayer . cueVideo ( video . getId () ) ; android.util.Log . v ( LOG_TAG , "play()" ) ; mYoutubePlayer . play () ; } else { java.lang.String toastMessage = "There's nothing in the queue!" ; android.widget.Toast toast = android.widget.Toast . makeText ( getApplicationContext () , toastMessage , Toast.LENGTH_SHORT ) ; toast . show () ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; android.app.FragmentManager fragmentManager = getFragmentManager () ; android.app.FragmentTransaction fragmentTransaction = fragmentManager . beginTransaction () ; com.example.vincent.lab1.fragment.ListeFragment listeFragment = new com.example.vincent.lab1.fragment.ListeFragment () ; com.example.vincent.lab1.fragment.PlaceHolderFragment mapFragment = new com.example.vincent.lab1.fragment.PlaceHolderFragment () ; fragmentTransaction . add ( R.id.liste_fragment_container , listeFragment ) ; fragmentTransaction . add ( R.id.map_fragment_container , mapFragment ) ; fragmentTransaction . commit () ; } 
@ java.lang.Override public com.eniacdevelopment.EniacHome.Repositories.Shared.Objects.UserAuthenticationResult authenticateUser ( com.eniacdevelopment.EniacHome.DataModel.User.Credentials credentials ) { com.eniacdevelopment.EniacHome.DataModel.User.User user = this . userRepository . getByUserName ( credentials.Username ) ; java.lang.Boolean authenticated = this . userUtils . AuthenticateUser ( credentials , user ) ; return new com.eniacdevelopment.EniacHome.Repositories.Shared.Objects.UserAuthenticationResult () { { Authenticated = authenticated ; UserId = user.Id ; } } ; } 
@ java.lang.Override public void onArrivalItemClicked ( org.onebusaway.android.io.elements.ObaArrivalInfo obaArrivalInfo , java.lang.String agencyName ) { mShowArrivalListFragment = false ; mAgencyName = agencyName ; removeFragmentByTag ( SimpleArrivalListFragment.TAG ) ; addTripName ( obaArrivalInfo . getHeadsign () ) ; if ( ( ( mSelectedTransitService ) != null ) && ( ReportConstants.DYNAMIC_TRANSIT_SERVICE_TRIP . equals ( mSelectedTransitService . getType () ) ) ) { showOpen311ProblemFragment ( mSelectedTransitService , obaArrivalInfo ) ; } else { org.onebusaway.android.report.ui.ReportTripProblemFragment . show ( this , obaArrivalInfo , R.id.ri_report_stop_problem , false , this ) ; } } 
public static < I > java.util.List < net.automatalib.words.Word < I > > transitionCover ( net.automatalib.automata.DeterministicAutomaton < ? , I , ? > automaton , java.util.Collection < ? extends I > inputs ) { java.util.List < net.automatalib.words.Word < I > > all = new java.util.ArrayList ( ( ( automaton . size () ) * ( inputs . size () ) ) ) ; net.automatalib.util.automata.Automata . cover ( automaton , inputs , all , all ) ; return all ; } 
public final void onConnected ( hprose.net.Connection conn ) { hprose.client.Request request = requests . poll () ; if ( request != null ) { send ( conn , request ) ; } else { synchronized ( idleConnections ) { idleConnections . offer ( conn ) ; } recycle ( conn ) ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( check ) { check = false ; list . get ( pos ) . check = false ; holder.check . setImageResource ( R.drawable.no_alarm ) ; releaseAlarm ( list . get ( pos ) ) ; } else { check = true ; list . get ( pos ) . check = true ; holder.check . setImageResource ( R.drawable.do_alarm ) ; setAlarm ( list . get ( pos ) ) ; } writeAlarm () ; } 
private void fillObjectMessage ( com.redhat.mqe.lib.ClientOptions senderOptions , com.redhat.mqe.lib.ObjectMessage objectMessage ) { try { com.redhat.mqe.lib.LOG . debug ( "Filling object data" ) ; if ( ( com.redhat.mqe.lib.SenderClient.content . size () ) == 1 ) { objectMessage . setObject ( ( ( java.io.Serializable ) ( com.redhat.mqe.lib.SenderClient.content . get ( 0 ) . getValue () ) ) ) ; } else { com.redhat.mqe.lib.LOG . error ( ( "Content is bigger then one object. " + "Don't know how to set for object message multiple data. Use ListMessage(?)" ) ) ; java.lang.System . exit ( 2 ) ; } } catch ( com.redhat.mqe.lib.JMSException e ) { e . printStackTrace () ; } } 
private void requestCameraPermission () { if ( ( android.support.v13.app.FragmentCompat . shouldShowRequestPermissionRationale ( this , Manifest.permission.CAMERA ) ) || ( android.support.v13.app.FragmentCompat . shouldShowRequestPermissionRationale ( this , Manifest.permission.INTERNET ) ) ) { new com.tapifolti.emotiondetection.EmotionDetectionFragment.ConfirmationDialog () . show ( getChildFragmentManager () , com.tapifolti.emotiondetection.EmotionDetectionFragment.FRAGMENT_DIALOG ) ; } else { android.support.v13.app.FragmentCompat . requestPermissions ( this , new java.lang.String [] { Manifest.permission.CAMERA , Manifest.permission.INTERNET } , com.tapifolti.emotiondetection.EmotionDetectionFragment.REQUEST_APP_PERMISSION ) ; } } 
public static java.lang.String getSimpleTestName () { java.lang.String out = org.kurento.test.services.KurentoServicesTestHelper.testName ; if ( ( out . indexOf ( ":" ) ) != ( - 1 ) ) { out = ( out . substring ( 0 , out . indexOf ( ":" ) ) ) + "]" ; } return out ; } 
@ org.junit.BeforeClass public static void setConfigurationBuilder ( ) throws com.puppycrawl.tools.checkstyle.api.CheckstyleException { final java.util.List < com.puppycrawl.tools.checkstyle.api.Configuration > configs = getCheckConfigs ( "ParameterName" ) ; org.junit.Assert . assertEquals ( configs . size () , 1 ) ; com.google.checkstyle.test.chapter5naming.rule526parameternames.ParameterNameTest.config = configs . get ( 0 ) ; com.google.checkstyle.test.chapter5naming.rule526parameternames.ParameterNameTest.format = com.google.checkstyle.test.chapter5naming.rule526parameternames.ParameterNameTest.config . getAttribute ( "format" ) ; } 
@ org.junit.Test public void testTacTicToc () { log . enableLog () ; io.wabm.TacFactory tac ; io.wabm.TicFacotry tic ; io.wabm.TocFactory toc ; tac . sayTac () ; tic . sayTic () ; toc . sayToc () ; assertEquals ( "tactictoc" , log . getLog () ) ; } 
public static redis.clients.jedis.Jedis getConnection ( ) throws java.net.URISyntaxException { if ( java.lang.System . getProperty ( "ENV_SYSTEM" ) . equalsIgnoreCase ( "local" ) ) { redis.clients.jedis.Jedis jedis = new redis.clients.jedis.Jedis ( "localhost" ) ; return jedis ; } else { java.net.URI redisURI = new java.net.URI ( java.lang.System . getenv ( "REDIS_URL" ) ) ; redis.clients.jedis.Jedis jedis = new redis.clients.jedis.Jedis ( redisURI ) ; return jedis ; } } 
@ java.lang.Override public int compare ( info.naiv.lab.java.jmt.infrastructure.ServiceConnection o1 , info.naiv.lab.java.jmt.infrastructure.ServiceConnection o2 ) { int c = o1 . getContainer () . id () . compareTo ( o2 . getContainer () . id () ) ; if ( c == 0 ) { c = java.lang.Integer . compare ( o1 . getPriority () , o2 . getPriority () ) ; if ( c == 0 ) { c = OrderComparator.INSTANCE . compare ( o1 , o2 ) ; } } return c ; } 
private java.lang.String removeSymbol ( java.lang.String string ) { int len = string . length () ; if ( len > 0 ) { if ( ( string . charAt ( ( len - 1 ) ) ) == ( com.google.blockly.android.ui.fieldview.BasicFieldAngleView.DEGREE_SYMBOL ) ) { string = string . substring ( 0 , ( len - 1 ) ) ; } else if ( ( string . charAt ( 0 ) ) == ( com.google.blockly.android.ui.fieldview.BasicFieldAngleView.DEGREE_SYMBOL ) ) { string = string . substring ( 1 ) ; } } return string ; } 
public void processText ( java.lang.String sms ) throws java.lang.Exception { for ( java.lang.String regEx : map . keySet () ) { if ( sms . matches ( regEx ) ) { framework.CommandHandler ch = map . get ( regEx ) ; if ( ch != null ) { java.util.regex.Pattern strMatch = java.util.regex.Pattern . compile ( regEx ) ; java.util.regex.Matcher m = strMatch . matcher ( sms ) ; if ( m . find () ) { ch . process ( m ) ; } } return; } throw new java.lang.RuntimeException ( "No regEx match" ) ; } } 
public void checkKeyFrames () { if ( ( curFrame ) == null ) { java.lang.System.out . println ( "Setting key frame. curFrame is null" ) ; setKeyFrame ( playing . getKeyFrame ( stateTime ) ) ; } else if ( ( playing . getKeyFrame ( stateTime ) ) != ( curFrame ) ) { java.lang.System.out . println ( "Key frame is diff than curFrame" ) ; setKeyFrame ( playing . getKeyFrame ( stateTime ) ) ; } } 
public void openConnection ( ) throws java.io.IOException { java.lang.System.out . println ( ( "Trying to open socket on port " + ( port ) ) ) ; java.net.ServerSocket serverSocket = new java.net.ServerSocket ( port ) ; new java.lang.Thread ( this . announceGame ) . start () ; java.net.Socket acceptedConnection = serverSocket . accept () ; notConnected = false ; this . clientSocket = acceptedConnection ; inFromClient = new java.io.BufferedReader ( new java.io.InputStreamReader ( this . clientSocket . getInputStream () ) ) ; outToClient = new java.io.DataOutputStream ( this . clientSocket . getOutputStream () ) ; isConnected = true ; } 
public void setState ( @ org.bottiger.podcast.views.drawables.PlayPauseDrawable.IconState int argState ) { mLock . lock () ; try { if ( argState == ( mDrawable . getIconState () ) ) return; if ( ( ( mAnimatorSet ) != null ) && ( mAnimatorSet . isRunning () ) ) return; mDrawable . setState ( argState ) ; } finally { mLock . unlock () ; } } 
public static java.sql.ResultSet queryTable ( BeerDB.SQLGenerator obj ) { java.lang.String queryStatement = obj . generateGetTableStatement () ; java.sql.ResultSet rs = null ; if ( queryStatement != null ) { try { java.sql.Connection connection = BeerDB.DBConnector . getConnection () ; java.sql.Statement st = connection . createStatement () ; rs = st . executeQuery ( queryStatement ) ; st . close () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } else { java.lang.System.out . println ( "SQL Query Table statement is null" ) ; } return rs ; } 
@ org.junit.Test @ org.openflexo.test.TestOrder ( value = 4 ) public void test3CreateViewFolder () { org.openflexo.foundation.action.AddRepositoryFolder addRepositoryFolder = AddRepositoryFolder.actionType . makeNewAction ( org.openflexo.foundation.view.TestBasicOntologyEditorView.project . getViewLibrary () . getRootFolder () , null , org.openflexo.foundation.view.TestBasicOntologyEditorView.editor ) ; addRepositoryFolder . setNewFolderName ( "NewViewFolder" ) ; addRepositoryFolder . doAction () ; org.junit.Assert . assertTrue ( addRepositoryFolder . hasActionExecutionSucceeded () ) ; org.openflexo.foundation.view.TestBasicOntologyEditorView.viewFolder = addRepositoryFolder . getNewFolder () ; org.junit.Assert . assertTrue ( ( ( org.openflexo.foundation.view.File ) ( org.openflexo.foundation.view.TestBasicOntologyEditorView.viewFolder . getSerializationArtefact () ) ) . exists () ) ; } 
public android.content.Intent build () { android.content.Context context = mApp . getApplicationContext () ; java.util.List < com.firebase.ui.auth.provider.IDPProviderParcel > providerInfo = com.firebase.ui.auth.util.ProviderHelper . getProviderParcels ( context , mProviders ) ; return com.firebase.ui.auth.ui.ChooseAccountActivity . createIntent ( context , new com.firebase.ui.auth.ui.FlowParameters ( mApp . getName () , providerInfo , mTheme , mLogo , mTosUrl , mIsSmartLockEnabled ) ) ; } 
public static java.lang.String createDeleteSqlForHelper ( java.lang.String table , java.lang.String idColumn , java.lang.String objectId , java.lang.String foreignIdColumn , java.lang.String subObjectId ) { java.lang.StringBuilder sb = new java.lang.StringBuilder ( " delete from " ) ; sb . append ( table ) . append ( " where " ) . append ( idColumn ) . append ( " = " ) . append ( objectId ) . append ( " and " ) . append ( foreignIdColumn ) . append ( " = " ) . append ( subObjectId ) . append ( ";" ) ; return sb . toString () ; } 
@ java.lang.Override public void onEnable () { this . saveDefaultConfig () ; this . getConfig () ; setupItems () ; this . getServer () . getPluginManager () . registerEvents ( new com.dyllanplugins.listener.Repair ( itemList ) , this ) ; getCommand ( "easyrepair" ) . setExecutor ( new com.dyllanplugins.command.Commands ( this , itemList ) ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.PUT , value = "/user/editmail" ) public org.springframework.http.ResponseEntity < ? > editMail ( @ javax.validation.Valid @ org.springframework.web.bind.annotation.RequestBody tabletop.domain.user.User user , org.springframework.validation.Errors errors , java.lang.String mail ) { if ( errors . hasErrors () ) { java.lang.System.out . println ( "Server in hasErrors" ) ; return tabletop.controllers.utils.ResponseUtils . badRequest ( errors ) ; } java.lang.System.out . println ( "Server after hasErrors" ) ; return tabletop.controllers.utils.ResponseUtils . created ( userService . editMail ( user , mail ) ) ; } 
public static void write ( java.lang.String text , java.lang.String url ) { java.lang.String input = text ; java.nio.file.Path path = java.nio.file.Paths . get ( url ) ; try ( java.io.Writer output = java.nio.file.Files . newBufferedWriter ( path , java.nio.charset.StandardCharsets.UTF_8 ) ) { while ( ( input . trim () . length () ) > 0 ) { output . write ( input ) ; } } catch ( java.io.IOException ex ) { java.lang.System.out . println ( "Path not found." ) ; ex . printStackTrace ( java.lang.System.err ) ; } } 
@ java.lang.Override protected java.lang.String getMessage ( de.simonsator.partyandfriends.api.pafplayers.OnlinePAFPlayer pPlayer ) { java.lang.String identifier ; if ( ( pPlayer . getSettingsWorth ( 0 ) ) == 0 ) { identifier = "Friends.Command.Settings.PartyInvitedByEveryone" ; } else { identifier = "Friends.Command.Settings.PartyInvitedByFriends" ; } return de.simonsator.partyandfriends.main.Main . getInstance () . getMessagesYml () . getString ( identifier ) ; } 
private ffk27.mapviewer2.GeoDataSource parentDataSource ( ffk27.mapviewer2.RenderRule renderRule ) { if ( ( renderRule.dataSource ) != null ) { return renderRule.dataSource ; } else if ( ( renderRule . getParent () ) != null ) { return parentDataSource ( renderRule . getParent () ) ; } return null ; } 
private net.minecraft.world.biome.BiomeGenBase parseBiomeFromString ( java.lang.String tmp ) { for ( net.minecraft.world.biome.BiomeGenBase biome : net.minecraft.world.biome.BiomeGenBase . getBiomeGenArray () ) { if ( biome.biomeName . replace ( " " , "" ) . equalsIgnoreCase ( tmp ) ) { return biome ; } } nil.xcompcraft.LogHelper . warn ( ( ( "Provided biome name '" + tmp ) + "' does not match any known biomes." ) ) ; return null ; } 
public void autoFillByName () { Model.DTO.BillItem bi = bm . getBillItemByName ( productName . getText () ) ; if ( bi != null ) { unitPrice . setText ( java.lang.Double . toString ( bi . getUnitPrice () ) ) ; productID . getSelectionModel () . select ( bi . getProductID () ) ; } else { unitPrice . clear () ; productID . getSelectionModel () . clearSelection () ; } } 
public static void validateAMDate ( java.lang.String dateTime ) throws seedu.manager.commons.exceptions.IllegalValueException { seedu.manager.commons.util.Parser parser = new seedu.manager.commons.util.Parser () ; java.util.List < seedu.manager.commons.util.DateGroup > groups = parser . parse ( dateTime ) ; if ( ( groups . size () ) > 0 ) { throw new seedu.manager.commons.exceptions.IllegalValueException ( java.lang.String . format ( seedu.manager.commons.core.Messages.MESSAGE_CANNOT_PARSE_TO_DATE , dateTime ) ) ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { int id = v . getId () ; if ( id == ( R.id.toggleButton ) ) { switch ( timerToggle ) { case SHOULD_START : startCountdown () ; timerSetSeekBar . setVisibility ( View.INVISIBLE ) ; timerToggle = com.mohammedsazid.android.done.MainActivity.PlaceholderFragment.TimerToggle.SHOULD_STOP ; break; case SHOULD_STOP : cancelCountdown ( true ) ; timerSetSeekBar . setVisibility ( View.VISIBLE ) ; timerToggle = com.mohammedsazid.android.done.MainActivity.PlaceholderFragment.TimerToggle.SHOULD_START ; break; } } } 
@ java.lang.Override protected void onPostExecute ( android.graphics.Bitmap result ) { android.widget.ImageView imageView = mReference . get () ; if ( imageView != null ) { if ( ( imageView . getTag () ) == ( this ) ) { imageView . setImageBitmap ( result ) ; org.wordpress.mediapicker.MediaUtils . fadeInImage ( imageView , result ) ; } } } 
@ java.lang.Override public void valueChange ( com.vaadin.data.Property.ValueChangeEvent event ) { if ( ( ( event . getProperty () ) != null ) && ( ( event . getProperty () . getValue () ) != null ) ) { selectedSchemaType = ( ( com.constellio.app.ui.entities.MetadataSchemaVO ) ( event . getProperty () . getValue () ) ) . getCode () ; if ( ( ( selectedSchemaType ) != null ) && ( ( selectedReporType ) != null ) ) { fillTemplateComboBox ( reportComboBox ) ; } } } 
private void setUpLogger ( java.lang.String name ) { logger = java.util.logging.Logger . getLogger ( name ) ; if ( ( core.utils.Log.fh ) == null ) { try { core.utils.Log.fh = new java.util.logging.FileHandler ( core.utils.Log.FILEPATH ) ; } catch ( java.io.IOException e ) { logException ( core.utils.Log.CLASSNAME , e ) ; } } logger . addHandler ( core.utils.Log.fh ) ; logger . setUseParentHandlers ( false ) ; } 
@ android.support.annotation.Keep public void onEventMainThread ( com.jbirdvegas.mgerrit.message.Finished ev ) { android.content.Intent intent = ev . getIntent () ; java.io.Serializable dataType = ev . getIntent () . getSerializableExtra ( GerritService.DATA_TYPE_KEY ) ; if ( ( ( ev . getItems () ) < 1 ) && ( dataType == ( GerritService.DataType.Comment ) ) ) { com.jbirdvegas.mgerrit.objects.CacheManager . remove ( mCacheCommentKey , true ) ; java.lang.String message = getResources () . getString ( R.string.review_sent_message , mSelectedChange ) ; android.widget.Toast . makeText ( mContext , message , Toast.LENGTH_SHORT ) . show () ; } } 
@ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { android.content.Intent next = new android.content.Intent ( this , lifecounter.radek.washington.edu.quizdroidparti.ViewFramework . class ) ; next . putExtra ( "selectedTopic" , topicArray [ position ] ) ; app . setCurrentTopic ( topics . get ( position ) ) ; app . getCurrentTopic () . setLastSelected ( position ) ; startActivity ( next ) ; } 
@ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; mvp.model.repository.local.GameLocalDataSource gameLocalDataSource = new mvp.model.repository.local.GameLocalDataSource ( getContext () . getApplicationContext () ) ; mvp.model.repository.remote.GameRemoteDataSource gameRemoteDataSource = new mvp.model.repository.remote.GameRemoteDataSource () ; mvp.model.repository.GameRepository gameRepository = new mvp.model.repository.GameRepository ( gameLocalDataSource , gameRemoteDataSource ) ; mvp.model.repository.ScoresLoader scoresLoader = new mvp.model.repository.ScoresLoader ( getContext () . getApplicationContext () , gameRepository ) ; mvp.view.scores.ScoresPresenter scoresPresenter = new mvp.view.scores.ScoresPresenter ( this , scoresLoader , getLoaderManager () ) ; scoresPresenter . start () ; } 
@ java.lang.Override public be.rottenrei.android.choregraph.model.ChoreTransport createFromParcel ( android.os.Parcel parcel ) { be.rottenrei.android.choregraph.model.Chore chore = new be.rottenrei.android.choregraph.model.Chore () ; long dbId = parcel . readLong () ; chore . setDbId ( ( dbId == ( - 1 ) ? null : dbId ) ) ; chore . setName ( parcel . readString () ) ; chore . setCycleDays ( parcel . readInt () ) ; chore . setLastTimeDone ( dbId ) ; return new be.rottenrei.android.choregraph.model.ChoreTransport ( chore ) ; } 
private void loadLocation () { android.location.LocationManager locationManager = ( ( android.location.LocationManager ) ( getSystemService ( Context.LOCATION_SERVICE ) ) ) ; if ( ( ! ( locationManager . isProviderEnabled ( LocationManager.GPS_PROVIDER ) ) ) && ( ! ( locationManager . isProviderEnabled ( LocationManager.NETWORK_PROVIDER ) ) ) ) { buildAlertMessageNoGps () ; } currentLocation = locationManager . getLastKnownLocation ( LocationManager.NETWORK_PROVIDER ) ; locationManager . requestLocationUpdates ( LocationManager.GPS_PROVIDER , 0 , 0 , this ) ; updateControlSetLocation ( currentLocation ) ; } 
public java.util.List < utils.Event > getMonthEvents ( int year , int month ) { events = eventHandler . getAllEvents () ; java.util.List < utils.Event > monthEvents = new java.util.ArrayList <> () ; filterToMonth ( year , month , monthEvents ) ; sortByStartDateTime ( monthEvents ) ; return events ; } 
public void generateToFile ( java.io.File outputDir , java.io.InputStream auditFile , java.lang.String packageBase ) throws java.io.IOException , java.net.URISyntaxException , javax.xml.parsers.ParserConfigurationException , org.xml.sax.SAXException { org.jboss.test.audit.generate.SectionsClassGenerator.GeneratedSource generatedSource = generateSource ( auditFile , packageBase ) ; java.io.File generatedSourceDir = new java.io.File ( outputDir , org.jboss.test.audit.generate.SectionsClassGenerator . packageNameToPath ( generatedSource . getPackageName () ) ) ; generatedSourceDir . mkdirs () ; java.io.FileWriter writer = new java.io.FileWriter ( new java.io.File ( generatedSourceDir , ( ( generatedSource . getSimpleName () ) + ".java" ) ) ) ; writer . write ( generatedSource . getValue () ) ; writer . close () ; } 
public static java.util.List < com.lir.library.domain.Story > removeRepeatedItems ( java.util.List < com.lir.library.domain.Story > list ) { java.util.List < com.lir.library.domain.Story > newlist = new java.util.ArrayList < com.lir.library.domain.Story > () ; for ( com.lir.library.domain.Story s : list ) { java.lang.System.out . println ( ( ( ( "Is story " + ( s.id ) ) + "contained in list?: " ) + ( controllers.Stories . isStoryContainedInList ( s , newlist ) ) ) ) ; if ( ! ( controllers.Stories . isStoryContainedInList ( s , newlist ) ) ) newlist . add ( s ) ; } return newlist ; } 
@ java.lang.Override public boolean onCreateOptionsMenu ( android.view.Menu menu ) { getMenuInflater () . inflate ( R.menu.menu_card , menu ) ; menu . findItem ( R.id.action_edit ) . setVisible ( ( ! ( isEditing ) ) ) ; if ( ( Build.VERSION.SDK_INT ) < 26 ) { menu . findItem ( R.id.action_pin ) . setVisible ( false ) ; } return true ; } 
@ java.lang.Override protected void onPostExecute ( android.database.Cursor cursor ) { java.util.ArrayList < com.example.shalom.myapplication.model.entities.User > users = com.example.shalom.myapplication.model.entities.User . getListFromCursor ( cursor ) ; for ( com.example.shalom.myapplication.model.entities.User user : users ) { if ( ( ( user . getUsername () ) == ( u . getUsername () ) ) && ( ( user . getPassword () ) == ( u . getPassword () ) ) ) { startActivity ( new android.content.Intent ( this , com.example.shalom.myapplication.Controller.MainOptions . class ) ) ; } } } 
public void setHealthD ( double health ) { org.spongepowered.api.entity.living.Living thisEntity = ( ( org.spongepowered.api.entity.living.Living ) ( this ) ) ; setHealth ( ( ( float ) ( health ) ) ) ; if ( ( thisEntity instanceof net.minecraft.entity.player.EntityPlayer ) && ( health == 0 ) ) { ( ( net.minecraft.entity.player.EntityPlayer ) ( thisEntity ) ) . onDeath ( DamageSource.generic ) ; } } 
public org.json.JSONObject getServiceLanguagePairs ( java.lang.String sourceLanguageCode ) throws com.gengo.client.exceptions.GengoException { try { java.lang.String url = ( this . getBaseUrl () ) + "translate/service/language_pairs" ; org.json.JSONObject data = new org.json.JSONObject () ; data . put ( "lc_src" , sourceLanguageCode ) ; return call ( url , HttpMethod.GET , data ) ; } catch ( org.json.JSONException e ) { throw new com.gengo.client.exceptions.GengoException ( x . getMessage () , x ) ; } } 
private void loadEverything () { android.util.Log . d ( "lol" , "here" ) ; java.lang.Runnable navigation = navigationMap . get ( action ) ; if ( navigation != null ) { navigation . run () ; } else { navigateLibrary . run () ; } new com.naman14.timber.activities.MainActivity.initQuickControls () . execute ( "" ) ; } 
public java.lang.String inputOutside ( java.util.Scanner sc ) { java.lang.String line = sc . nextLine () ; if ( ( ! ( line . equals ( "h" ) ) ) | ( ! ( line . equals ( "a" ) ) ) ) { line = "Wrong Input!" ; } return line ; } 
@ java.lang.Override public void updateRepo () { android.content.ContentValues contentValues = new android.content.ContentValues () ; contentValues . put ( GitWatchContract.RepoEntry.COLUMN_LAST_COMMIT_MSG , me.adegokeobasa.gitwatch.fragments.RepoDetailFragment.commits . get ( ( ( me.adegokeobasa.gitwatch.fragments.RepoDetailFragment.commits . size () ) - 1 ) ) . getTitle () ) ; getActivity () . getContentResolver () . update ( GitWatchContract.RepoEntry . buildRepoUri ( repoId ) , contentValues , null , null ) ; } 
private void msgNormalize ( java.lang.StringBuilder builder , java.lang.String line ) { for ( int i = 0 ; i < ( ( line . length () ) - 1 ) ; i += 2 ) { if ( ( line . charAt ( i ) ) == '-' ) { i ++ ; continue; } builder . append ( line . charAt ( i ) ) ; builder . append ( line . charAt ( ( i + 1 ) ) ) ; builder . append ( " " ) ; } } 
public void setPlayOnce ( java.lang.String animation ) { playOnce = cacheAndSetPlayer ( animation ) ; playOnce . removeListener ( cachedPlayerFinishedListener ) ; playOnce . addListener ( cachedPlayerFinishedListener ) ; if ( ( controllerListener ) != null ) { playOnce . removeListener ( controllerListener ) ; playOnce . addListener ( controllerListener ) ; } } 
@ java.lang.Override public boolean execute ( java.lang.String action , org.json.JSONArray args , org.apache.cordova.CallbackContext callbackContext ) throws org.json.JSONException { try { android.content.Intent intentScan = new android.content.Intent ( "android.intent.action.MAIN" ) ; intentScan . addCategory ( Intent.CATEGORY_DEFAULT ) ; this . cordova . startActivityForResult ( ( ( org.apache.cordova.CordovaPlugin ) ( this ) ) , intentScan , com.inclusionservices.neoscan.NeoScan.REQUEST_CODE ) ; callbackContext . success () ; return true ; } catch ( java.lang.Exception e ) { callbackContext . error ( ( "following error ocurred " + e ) ) ; return false ; } } 
@ org.junit.Test public void testL2LossModel ( ) throws java.lang.Exception { edu.illinois.cs.cogcomp.sl.core.SLParameters para = new edu.illinois.cs.cogcomp.sl.core.SLParameters () ; para.LEARNING_MODEL = edu.illinois.cs.cogcomp.sl.core.SLParameters.LearningModelType.L2LossSSVM ; para.L2_LOSS_SSVM_SOLVER_TYPE = SolverType.DCDSolver ; para.TRAINMINI = true ; para.MAX_NUM_ITER = 1000 ; para.STOP_CONDITION = 0.01F ; para.C_FOR_STRUCTURE = 0.01F ; para.INNER_STOP_CONDITION = 0.01F ; testModel ( para , 1.0F , 12.26F ) ; para.L2_LOSS_SSVM_SOLVER_TYPE = SolverType.ParallelDCDSolver ; testModel ( para , 1.0F , 12.26F ) ; para.L2_LOSS_SSVM_SOLVER_TYPE = SolverType.DEMIParallelDCDSolver ; para.MAX_NUM_ITER = 10000 ; para.STOP_CONDITION = 0.001F ; para.DEMIDCD_NUMBER_OF_UPDATES_BEFORE_UPDATE_BUFFER = 1 ; para.DEMIDCD_NUMBER_OF_INF_PARSE_BEFORE_UPDATE_WV = 1 ; para.PROGRESS_REPORT_ITER = 500 ; testModel ( para , 1.0F , 12.26F ) ; } 
private void removeAlarm ( int id ) { android.util.Log . i ( "dora" , ( "id removed" + id ) ) ; android.content.Intent intent = new android.content.Intent ( getApplicationContext () , com.ferit.dfundak.georeminder.AlarmReceiver . class ) ; android.app.PendingIntent pendingIntent = android.app.PendingIntent . getBroadcast ( getApplicationContext () , id , intent , 0 ) ; android.app.AlarmManager alarmManager = ( ( android.app.AlarmManager ) ( this . getSystemService ( com.ferit.dfundak.georeminder.ALARM_SERVICE ) ) ) ; alarmManager . cancel ( pendingIntent ) ; removeGeofences () ; android.widget.Toast . makeText ( this , "Reminder removed" , Toast.LENGTH_SHORT ) . show () ; } 
public java.lang.String favoritesToString () { java.lang.String toString = "" ; int index = 1 ; for ( int number : favorites ) { if ( number > 0 ) toString += ( ( index + ". " ) + ( getContact ( number ) . getName () ) ) + "\n" ; } return toString ; } 
public java.lang.String getPath () { final java.lang.StringBuilder path = new java.lang.StringBuilder () ; com.unnamed.b.atv.model.TreeNode node = this ; while ( ( node.mParent ) != null ) { path . append ( mId ) ; node = node.mParent ; if ( ( node.mParent ) != null ) { path . append ( com.unnamed.b.atv.model.TreeNode.NODES_ID_SEPARATOR ) ; } } return path . toString () ; } 
@ java.lang.Override public void run () { if ( urlString . toLowerCase () . endsWith ( ".pdf" ) ) { new java.lang.Thread ( mRunnableForPDF ) . start () ; } else { java.lang.String appendParams = java.lang.String . format ( "?user_num=%s&timestamp=%s" , userNum , com.intfocus.yonghuitest.util.URLs . timestamp () ) ; urlString = ( urlString . contains ( "?" ) ) ? urlString . replace ( "?" , appendParams ) : java.lang.String . format ( "%s%s" , urlString , appendParams ) ; mWebView . loadUrl ( urlString ) ; android.util.Log . i ( "OutLink" , urlString ) ; } } 
public void recycleAllBitmap () { if ( ( com.tetley.backgroundremover.BitmapUtil.subject ) != null ) com.tetley.backgroundremover.BitmapUtil.subject . recycle () ; if ( ( com.tetley.backgroundremover.BitmapUtil.raw ) != null ) com.tetley.backgroundremover.BitmapUtil.raw . recycle () ; if ( ( com.tetley.backgroundremover.BitmapUtil.smallerTransparentImage ) != null ) com.tetley.backgroundremover.BitmapUtil.smallerTransparentImage . recycle () ; if ( ( com.tetley.backgroundremover.BitmapUtil.transparentImage ) != null ) com.tetley.backgroundremover.BitmapUtil.transparentImage . recycle () ; if ( ( com.tetley.backgroundremover.BitmapUtil.fullSizetransparnetImage ) != null ) com.tetley.backgroundremover.BitmapUtil.fullSizetransparnetImage . recycle () ; if ( ( com.tetley.backgroundremover.BitmapUtil.finalImage ) != null ) com.tetley.backgroundremover.BitmapUtil.finalImage . recycle () ; } 
public float getPullingAnimationProgress ( net.minecraft.item.ItemStack bow , net.minecraft.entity.EntityLivingBase archer ) { float animationProgress = ( ( bow != null ) && ( archer != null ) ) ? ( ( float ) ( ( bow . getMaxItemUseDuration () ) - ( archer . getItemInUseCount () ) ) ) / 20.0F : 0.0F ; return animationProgress > 1.0F ? 1.0F : animationProgress * ( pullingSpeedMult ) ; } 
private void addEntity ( java.lang.String permission , int requestCode ) { requestCode ( requestCode ) ; requestPermission ( permission ) ; com.joker.api.wrapper.AbstractWrapper.Key key = new com.joker.api.wrapper.AbstractWrapper.Key ( getContext () , getRequestCode () ) ; com.joker.api.wrapper.AbstractWrapper.wrapperMap . put ( key , new java.lang.ref.WeakReference < com.joker.api.wrapper.PermissionWrapper > ( this ) ) ; } 
private boolean hasGradeWithinRange ( module.siadap.domain.wrappers.PersonSiadapWrapper personSiadapWrapper ) { module.siadap.domain.Siadap siadap = personSiadapWrapper . getSiadap () ; module.siadap.domain.scoring.SiadapGlobalEvaluation globalEvaluationEnum = siadap . getSiadapGlobalEvaluationEnum ( siadapUniverseToConsider , considerValidatedOnly ) ; if ( globalEvaluationEnum . equals ( SiadapGlobalEvaluation.EXCELLENCY ) ) { return ( siadapGlobalEvaluation . equals ( SiadapGlobalEvaluation.HIGH ) ) || ( siadapGlobalEvaluation . equals ( SiadapGlobalEvaluation.EXCELLENCY ) ) ; } return siadap . hasGivenSiadapGlobalEvaluation ( siadapGlobalEvaluation , siadapUniverseToConsider , considerValidatedOnly ) ; } 
public void onBind ( io.jawg.osmcontributor.model.entities.PoiType item ) { text . setText ( item . getName () ) ; technicalName . setText ( item . getTechnicalName () ) ; details . setText ( itemView . getContext () . getResources () . getQuantityString ( R.plurals.tag_number , item . getTags () . size () ) ) ; icon . setImageDrawable ( bitmapHandler . getDrawable ( item . getIcon () ) ) ; } 
private void parseYour ( java.lang.String message ) { getM_cards () . clear () ; int beginIndex = 5 ; message = message . substring ( beginIndex ) ; java.lang.String delim = "," ; java.lang.String [] data = message . split ( delim ) ; for ( java.lang.String s : data ) getM_cards () . add ( durakVisualClient.Card . fromString ( s ) ) ; } 
private static double helper ( double n , double guess ) { if ( ( ( ( n - ( guess * guess ) ) / n ) <= 1.0E-15 ) && ( ( n - ( guess * guess ) ) >= 0 ) ) { return guess ; } java.lang.System.out . println ( guess ) ; return Recursion . helper ( n , ( ( ( n / guess ) + guess ) / 2 ) ) ; } 
private void appendAdditionalCookies ( org.apache.http.client.CookieStore store , java.util.Map < java.lang.String , java.lang.String > cookies , java.lang.String domain , java.lang.String path , java.util.Date expiryDate ) { org.springframework.util.Assert . notNull ( cookies ) ; cookies . forEach ( ( key , value ) - > { org.apache.http.impl.cookie.BasicClientCookie cookie = new org.apache.http.impl.cookie.BasicClientCookie ( key , value ) ; cookie . setDomain ( domain ) ; cookie . setPath ( path ) ; cookie . setExpiryDate ( expiryDate ) ; store . addCookie ( cookie ) ; } ) ; } 
public void addVideo ( java.lang.String url , int episode ) { java.lang.System.out . println ( episode ) ; playlist . add ( new de.dieser1memesprech.proxsync.user.Video ( url , episode ) ) ; if ( ( playlist . size () ) == 1 ) { updatePlaylistInfo ( playlist . peek () ) ; if ( ! ( playlist . isEmpty () ) ) { setVideo ( playlist . peek () . url , playlist . peek () . episode ) ; } } sendPlaylist () ; } 
private org.mifosplatform.portfolio.creditcheck.domain.CreditCheck getCreditCheckFromList ( final java.util.Collection < org.mifosplatform.portfolio.creditcheck.domain.CreditCheck > creditChecks , final java.lang.Long creditCheckId ) { org.mifosplatform.portfolio.creditcheck.domain.CreditCheck creditCheckFound = null ; if ( org.apache.commons.collections.CollectionUtils . isNotEmpty ( creditChecks ) ) { for ( org.mifosplatform.portfolio.creditcheck.domain.CreditCheck creditCheck : creditChecks ) { if ( creditCheck . getId () . equals ( creditCheckId ) ) { creditCheckFound = creditCheck ; break; } } } return creditCheckFound ; } 
public void addLast ( T value ) { if ( ( size ) == ( data.length ) ) { grow () ; } if ( ( end ) == ( ( data.length ) - 1 ) ) { end = 0 ; } else { ( end ) ++ ; } ( size ) ++ ; } 
public static java.lang.String encode ( java.lang.String value ) { if ( net.anotheria.util.StringUtils . isEmpty ( value ) ) throw new java.lang.IllegalArgumentException ( "value is not valid" ) ; java.lang.String toEncrypt = ( ( ( ( net.anotheria.anosite.photoserver.shared.IdCrypter.SECRET_CONSTANT ) + ( net.anotheria.anosite.photoserver.shared.IdCrypter.DELIMITER ) ) + value ) + ( net.anotheria.anosite.photoserver.shared.IdCrypter.DELIMITER ) ) + ( net.anotheria.util.NumberUtils . itoa ( net.anotheria.anosite.photoserver.shared.IdCrypter.rnd . nextInt ( net.anotheria.anosite.photoserver.shared.IdCrypter.RANDOM_BASE ) , 3 ) ) ; return net.anotheria.anosite.photoserver.shared.IdCrypter.crypt . encryptToHex ( toEncrypt ) ; } 
public void endGame () { gameThread . setRunning ( false ) ; while ( true ) { try { gameThread . join () ; break; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } android.content.Intent intent = new android.content.Intent ( getContext () , zacke.ghostbound.GameOverActivity . class ) ; intent . putExtra ( "score" , java.lang.String . valueOf ( player . getScore () ) ) ; getContext () . startActivity ( intent ) ; } 
public monasca.api.domain.model.alarm.Alarm update ( java.lang.String tenantId , java.lang.String alarmId , monasca.api.app.command.UpdateAlarmCommand command ) { monasca.api.domain.model.alarm.Alarm alarm = repo . findById ( alarmId ) ; updateInternal ( tenantId , alarm , alarm . getState () , command.state ) ; alarm . setState ( command.state ) ; return alarm ; } 
private java.lang.String addLength ( java.lang.String str ) { int length = ( str . length () ) + 6 ; if ( length < 10 ) { return ( ( "000" + length ) + " " ) + str ; } else if ( length < 100 ) { return ( ( "00" + length ) + " " ) + str ; } else { return ( ( "0" + length ) + " " ) + str ; } } 
private synchronized void startPreview ( final int width , final int height ) { if ( ( mCameraHandler ) == null ) { final com.serenegiant.audiovideosample.CameraGLView.CameraThread thread = new com.serenegiant.audiovideosample.CameraGLView.CameraThread ( this ) ; thread . setName ( "Camera Thread" ) ; thread . start () ; mCameraHandler = thread . getHandler () ; } mCameraHandler . startPreview ( width , height ) ; } 
@ org.junit.Test public void testCase7 () { me.chiwang.leetcode.ListNode l1 = me.chiwang.leetcode.ListNodes . getListNodes ( 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 ) ; solution . reverseKGroup ( l1 , 2 ) ; me.chiwang.leetcode.ListNode l2 = me.chiwang.leetcode.ListNodes . getListNodes ( 2 , 1 , 4 , 3 , 6 , 5 , 8 , 7 ) ; assertListNodeEquals ( l2 , l1 ) ; } 
private java.lang.String listValues ( java.lang.String word ) { java.lang.String result = "" ; java.lang.String [] tokens = word . split ( ",|;" ) ; if ( ( tokens.length ) > 1 ) { for ( int i = 0 ; i < ( tokens.length ) ; i ++ ) { result += ( tokens [ i ] ) + ',' ; } } else result = word ; } 
public raspimediacenter.Data.Models.Music.MusicAlbumContainer.MusicAlbum scraperParseAlbum ( java.lang.String jsonURI , raspimediacenter.Data.Models.Music.MusicTrackContainer.MusicTrack track , int index ) { jsonURI = constructGetInfoURI ( "album" , track.track.album . getMBID () ) ; album = parser . parseRemoteAlbum ( jsonURI ) ; album.wiki . setSummary ( trimString ( album.wiki . getSummary () , 0 , "<a" ) ) ; parser . appendToAlbumList ( album ) ; return album ; } 
@ java.lang.Override public void onGet ( java.lang.Object item ) { if ( checkValidCache ( item ) ) { java.util.ArrayList < org.gdg.frisbee.android.api.model.Event > events = ( ( java.util.ArrayList < org.gdg.frisbee.android.api.model.Event > ) ( item ) ) ; mAdapter . addAll ( events ) ; setIsLoading ( false ) ; android.support.design.widget.Snackbar snackbar = android.support.design.widget.Snackbar . make ( getView () , R.string.cached_content , Snackbar.LENGTH_SHORT ) ; org.gdg.frisbee.android.view.ColoredSnackBar . info ( snackbar ) . show () ; } else { modelCache . removeAsync ( mCacheKey ) ; onNotFound () ; } } 
private void sendTrapV2C ( org.snmp4j.PDU pdu , org.snmp4j.CommunityTarget target ) { try { java.lang.System.out . println ( ( "Sending V2C Trap to " + ( target . getAddress () ) ) ) ; snmp . send ( pdu , target ) ; logger . info ( ( "SnmpTrapSender.sendTrapV2C(): PDU = " + ( pdu . toString () ) ) ) ; } catch ( java.lang.Exception e ) { logger . error ( ( "SnmpTrapSender.sendTrapV2C(): Error sending V2C trap to " + ( target . getAddress () ) ) , e ) ; } } 
void DrawField ( int [] [] f ) { for ( int [] x : f ) { for ( int y : x ) { if ( ! ( y == ( - 1 ) ) ) java.lang.System.out . print ( ( ( " " + y ) + " " ) ) ; else java.lang.System.out . print ( ( y + " " ) ) ; } java.lang.System.out . println () ; } } 
public ij.ImagePlus GetImageSum () { ij.plugin.ImageCalculator ic = new ij.plugin.ImageCalculator () ; ij.ImagePlus imp3 = m_Stack . get ( 0 ) ; for ( int i = 1 ; i < ( m_Stack . size () ) ; i ++ ) { imp3 = ic . run ( "Subtract create" , m_Stack . get ( 0 ) , imp3 ) ; } return imp3 ; } 
public static void saveGameAs ( javafx.stage.Stage primaryStage , java.util.ArrayList < java.lang.String > history , java.util.ArrayList < java.lang.String > notationHistory ) { if ( chess.ChessIO . checkForNewGame ( history ) ) { return; } java.lang.String fileName = chess.ChessIO . getSaveFileName ( primaryStage ) ; if ( fileName . equals ( "" ) ) { return; } chess.ChessIO . printToFile ( fileName , history , notationHistory ) ; } 
public void removeService ( java.lang.String cloudServiceId ) { if ( ( ! ( cloudServiceId . equalsIgnoreCase ( "" ) ) ) && ( controls . containsKey ( cloudServiceId ) ) ) { controls . get ( cloudServiceId ) . removeFromMonitoring () ; controls . get ( cloudServiceId ) . stop () ; controls . remove ( cloudServiceId ) ; } } 
@ org.junit.Test public void testGetLabel__String_String () { de.hu_berlin.u.saltnpepper.graph.Label label = de.hu_berlin.u.saltnpepper.graph.impl.GraphFactory . createLabel () ; label . setNamespace ( "sNS" ) ; label . setName ( "name" ) ; this . getFixture () . addLabel ( label ) ; org.junit.Assert . assertEquals ( label , this . getFixture () . getLabel ( label . getNamespace () , label . getName () ) ) ; } 
private void populateCOList () { android.os.Bundle extras = getIntent () . getExtras () ; java.util.ArrayList < teammemes.tritonbudget.db.TranHistory > trans = ( ( java.util.ArrayList ) ( extras . getSerializable ( "Transactions" ) ) ) ; teammemes.tritonbudget.Checkout_Adapter co_adapter = new teammemes.tritonbudget.Checkout_Adapter ( this , trans ) ; android.widget.ListView CO_View = ( ( android.widget.ListView ) ( findViewById ( R.id.ItemsContainer ) ) ) ; CO_View . setAdapter ( co_adapter ) ; } 
public org.eclipse.titan.runtime.core.TitanUniversalCharString assign ( org.eclipse.titan.runtime.core.TitanUniversalChar aOtherValue ) { cleanUp () ; if ( aOtherValue . is_char () ) { charstring = true ; cstr = new java.lang.StringBuilder ( aOtherValue . getUc_cell () ) ; } else { charstring = false ; val_ptr = new java.util.ArrayList < org.eclipse.titan.runtime.core.TitanUniversalChar > () ; val_ptr . add ( aOtherValue ) ; } return this ; } 
private void calculateTorque () { switch ( lastGearState ) { case 0 : torque = 0 ; break; case - 1 : case 1 : torque = ( rpm ) / 10 ; break; default: torque = ( ( rpm ) / 10 ) - ( ( lastGearState ) * 20 ) ; break; } } 
@ org.junit.Test public void saveItem () { com.flectosystems.extspark.model.Item item = new com.flectosystems.extspark.model.Item () ; item . setItem ( "ItemTest" ) ; item . setDesc ( "Description" ) ; item . setStatus ( "Available" ) ; item . setWeight ( 2.34 ) ; com.flectosystems.extspark.test.PersistenceTest.itemDao . addItem ( item ) ; com.flectosystems.extspark.model.Item savedItem = com.flectosystems.extspark.test.PersistenceTest.itemDao . getItem ( "Item1" ) ; junit.framework.TestCase . assertTrue ( "Must match" , ( ( item . getWeight () ) == ( savedItem . getWeight () ) ) ) ; } 
public void createTrack ( java.lang.String trackId , java.lang.String userId , java.lang.String entityClassName , java.util.List < java.lang.Object > beforeList , java.util.List < java.lang.Object > afterList , java.lang.String operation ) { if ( ( trackIdCache . getIfPresent ( trackId ) ) == null ) { com.xb.service.impl.WfTrackUtilFactory.executor . execute ( new com.xb.utils.track.WfTrackJob ( trackId , trackService , userId ) ) ; trackIdCache . put ( trackId , trackId ) ; } com.xb.service.impl.WfTrackUtilFactory.executor . execute ( new com.xb.utils.track.WfTrackLogJob ( trackId , tracklogService , entityClassName , beforeList , afterList , operation ) ) ; } 
public void updatePath () { double pheromoneValue = 100 / ( this . pointVisited . size () ) ; for ( int i = 0 ; i < ( this . pointVisited . size () ) ; i ++ ) { Point point = this . pointVisited . pop () ; point . setPheromone ( ( ( point . getPheromone () ) + pheromoneValue ) ) ; } this . pointVisited . clear () ; } 
private void setColour ( java.awt.Color background , java.awt.Color foreground , java.awt.Color text ) { for ( vtp5.gui.VTP5Button b : buttonList ) { b . setForeground ( foreground ) ; b . setBackground ( background ) ; b . revalidate () ; b . repaint () ; } promptLabel . setForeground ( text ) ; statsList . setForeground ( text ) ; guessedAnswersList . setForeground ( text ) ; finishPanel . setTextColour ( text ) ; progressBar . setBgTop ( background . brighter () ) ; progressBar . setBgBottom ( background . darker () ) ; } 
private static void scheduleSave () { if ( ! ( com.asml.innovationteam.rover.RoverProperties.saveScheduled ) ) { java.util.Timer tmr = new java.util.Timer () ; tmr . schedule ( new java.util.TimerTask () { @ java.lang.Override public void run () { com.asml.innovationteam.rover.RoverProperties . save () ; com.asml.innovationteam.rover.RoverProperties.saveScheduled = false ; } } , 5000 ) ; } } 
@ java.lang.Override @ java.lang.SuppressWarnings ( value = "unchecked" ) public T from ( java.lang.CharSequence in ) { org.apache.felix.serializer.impl.json.JsonParser jp = new org.apache.felix.serializer.impl.json.JsonParser ( in ) ; java.util.Map < ? , ? > m = jp . getParsed () ; if ( m . getClass () . isAssignableFrom ( clazz ) ) return ( ( T ) ( m ) ) ; return converter . convert ( m ) . to ( clazz ) ; } 
public static void DoMenu ( java.util.Map < java.lang.Integer , java.lang.String > map , org.hibernate.Session session ) { int choiceInt = 0 ; java.lang.System.out . println ( "Enter a number from the available options (enter -1 to exit): " ) ; while ( choiceInt != ( - 1 ) ) { edu.sjsu.cs157bproject3.App . presentMenu ( map ) ; try { java.lang.System.out . println ( "Enter number: " ) ; choiceInt = edu.sjsu.cs157bproject3.App.input . nextInt () ; edu.sjsu.cs157bproject3.App . executeMenu ( choiceInt , session ) ; } catch ( java.util.InputMismatchException e ) { java.lang.System.out . println ( "Check your input! Make sure you enter an integer available in the menu.\n" ) ; } edu.sjsu.cs157bproject3.App.input . nextLine () ; } } 
private void releaseResources () { if ( ( mSendLooper ) != null ) { mSendLooper . quit () ; } if ( ( mSendHandler ) != null ) { mSendHandler . removeCallbacks ( mSendTask ) ; } if ( ( ( mRecSession ) != null ) && ( ! ( mRecSession . isFinished () ) ) ) { mRecSession . cancel () ; } if ( ( mRecorder ) != null ) { mRecorder . release () ; mRecorder = null ; } setState ( ee.ioc.phon.android.speak.RecognizerIntentService.State.RELEASED ) ; } 
public void setEnterContinueOrExit ( java.lang.String enterContinueOrExit ) throws java.io.IOException { this . enterContinueOrExit = enterContinueOrExit ; if ( ( this . enterContinueOrExit . equals ( "e" ) ) || ( this . enterContinueOrExit . equals ( "c" ) ) ) { return; } else { while ( ( ! ( this . enterContinueOrExit . equals ( "e" ) ) ) || ( ! ( this . enterContinueOrExit . equals ( "c" ) ) ) ) { java.lang.System.out . println ( "Please, press (c) or (e) key!" ) ; this . enterContinueOrExit = br . readLine () ; } } } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup parent , android.os.Bundle savedInstanceState ) { super . onCreateView ( inflater , parent , savedInstanceState ) ; android.view.View v = inflater . inflate ( R.layout.fragment_residence , parent , false ) ; org.wit.myrent.activities.ResidenceActivity residenceActivity = ( ( org.wit.myrent.activities.ResidenceActivity ) ( getActivity () ) ) ; residenceActivity.actionBar . setDisplayHomeAsUpEnabled ( true ) ; addListeners ( v ) ; updateControls ( residence ) ; return v ; } 
@ java.lang.Override protected void onPostExecute ( java.lang.Void aVoid ) { if ( ( model.AppModel . getInstance () . getMovies () ) != null ) { this . movies = model.AppModel . getInstance () . getMovies () ; if ( ( this . movies ) != null ) { gridView . setAdapter ( null ) ; adapter = new data.MoviesGridAdapter ( getActivity () , this . movies ) ; gridView . setClickable ( true ) ; gridView . setAdapter ( adapter ) ; } adapter . notifyDataSetChanged () ; } } 
public java.lang.String toString () { return ( ( ( ( ( ( ( ( ( ( "0 " + ( identification ) ) + " " ) + ( xPos ) ) + " " ) + ( yPos ) ) + " " ) + ( zPos ) ) + " " ) + ( horizRot ) ) + " " ) + ( vertRot ) ; } 
@ java.lang.Override public void propertyChange ( final java.beans.PropertyChangeEvent evt ) { final long t = java.lang.System . currentTimeMillis () ; if ( ( evt . getNewValue () ) == null ) focuslosttime = t ; else if ( ( ( evt . getOldValue () ) == null ) && ( ( t - ( focuslosttime ) ) < 3 ) ) { org.scijava.ui.behaviour.GlobalKeyEventDispatcher.instance.shiftPressed = false ; org.scijava.ui.behaviour.GlobalKeyEventDispatcher.instance.metaPressed = false ; org.scijava.ui.behaviour.GlobalKeyEventDispatcher.instance.winPressed = false ; org.scijava.ui.behaviour.GlobalKeyEventDispatcher.instance.pressedKeys . clear () ; } } 
private void checkAllTab ( ) throws edu.brandeis.cs.nlp.mae.database.MaeDBException { if ( ( getActiveExtentTags () . size () ) == ( getMainController () . colorableTagTypes () ) ) { edu.brandeis.cs.nlp.mae.view.TablePanelView.TogglingTabTitle allTab = getTagTabTitle ( 0 ) ; allTab . setHighlighted ( true ) ; } if ( ( getActiveExtentTags () . size () ) == 0 ) { edu.brandeis.cs.nlp.mae.view.TablePanelView.TogglingTabTitle allTab = getTagTabTitle ( 0 ) ; allTab . setHighlighted ( false ) ; } } 
private void refreshUserList ( java.util.ArrayList < client.User > users ) { java.util.ArrayList < java.lang.String > userNames = new java.util.ArrayList < java.lang.String > ( users . size () ) ; for ( client.User U : users ) userNames . add ( U . getUsername () ) ; GUI . refreshUsers ( userNames ) ; } 
@ java.lang.Override public void onCreate () { java.lang.System.out . println ( "service on create" ) ; super . onCreate () ; mHandler = new android.os.Handler () ; mDisconnectRunnable = new java.lang.Runnable () { @ java.lang.Override public void run () { if ( ( ( mConnectionState ) == ( com.wm.blecore.BluetoothLeService.STATE_CONNECTING ) ) || ( ( mConnectionState ) == ( com.wm.blecore.BluetoothLeService.STATE_CONNECTED ) ) ) { disconnect () ; java.lang.System.out . println ( "handler post delayed executed" ) ; broadcastUpdate ( com.wm.blecore.BluetoothLeService.ACTION_GATT_DISCONNECTED ) ; } } } ; } 
public static int getRandomInRange ( int min , int max ) { if ( max < min ) { int temp = max ; max = min ; min = temp ; } java.util.Random rand = new java.util.Random () ; return ( rand . nextInt ( ( min + max ) ) ) + min ; } 
public < T extends br.org.cesar.knot.lib.model.AbstractThingDevice > void socketIOGetDeviceList ( final br.org.cesar.knot.lib.model.ThingList < T > typeThing , org.json.JSONObject query , final br.org.cesar.knot.lib.event.Event < T > callbackResult ) throws br.org.cesar.knot.lib.exception.InvalidParametersException , br.org.cesar.knot.lib.exception.KnotException , br.org.cesar.knot.lib.exception.SocketNotConnected { if ( ( ( socketIO ) != null ) && ( isSocketConnected () ) ) { socketIO . getDeviceList ( typeThing , query , callbackResult ) ; } else { throw new br.org.cesar.knot.lib.exception.SocketNotConnected ( "Socket not connected or invalid. Did you call the method setupSocketIO?" ) ; } } 
private void copyArrayData () { for ( int i = 0 ; i < ( didio.configurator.panels.SensorPanel.NUM_SENSORS ) ; i ++ ) { for ( int k = 0 ; k <= ( didio.configurator.panels.SensorPanel.NUM_VALUES ) ; k ++ ) { sensor_array_copy [ i ] [ k ] = MainFrame.cD . get ( MainFrame.profileSelected ) . sensor . get () [ i ] [ k ] ; } } sensor_copy_number = MainFrame.cD . get ( MainFrame.profileSelected ) . sensor . getCount () ; } 
@ io.reactivex.subscribers.Test public void assertNeverAtNotMatchingPredicate () { io.reactivex.subscribers.TestSubscriber < java.lang.Integer > ts = new io.reactivex.subscribers.TestSubscriber () ; io.reactivex.subscribers.Flowable . just ( 2 , 3 ) . subscribe ( ts ) ; ts . assertNever ( new io.reactivex.subscribers.Predicate < java.lang.Integer > () { @ java.lang.Override public boolean test ( final java.lang.Integer o ) throws java.lang.Exception { return o == 1 ; } } ) ; } 
private void setRound ( eu.chessdata.chesspairing.model.ChesspairingRound round ) { int rNumber = round . getRoundNumber () ; if ( rNumber < 1 ) { throw new java.lang.IllegalStateException () ; } java.util.List < eu.chessdata.chesspairing.model.ChesspairingRound > rounds = mTournament . getRounds () ; rounds . remove ( ( rNumber - 1 ) ) ; rounds . add ( ( rNumber - 1 ) , round ) ; } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { java.lang.String s = t1 . getText () ; int i = java.lang.Integer . parseInt ( s ) ; java.lang.String event = e . getActionCommand () ; if ( event . equals ( "CtoF" ) ) { t2 . setText ( java.lang.String . valueOf ( TempConversionWindow . CtoF ( i ) ) ) ; } if ( event . equals ( "FtoC" ) ) { t2 . setText ( java.lang.String . valueOf ( TempConversionWindow . FtoC ( i ) ) ) ; } } 
private void fillTiles () { util.IdToGameObjectTranslator idTrans = util.IdToGameObjectTranslator . getInstance () ; for ( int i = 0 ; i < ( mapHeight ) ; ++ i ) { for ( int j = 0 ; j < ( mapWidth ) ; ++ j ) { tiles [ i ] [ j ] = idTrans . getTileFromId ( idTable [ i ] [ j ] ) ; } } } 
private byte [] encodeLong ( long value ) { byte [] result = new byte [ 8 ] ; for ( int i = 7 ; i >= 0 ; i -- ) { result [ i ] = ( ( byte ) ( value & 255L ) ) ; value > > = 8 ; } return result ; } 
private void checkIfThereIsMatchIn ( io.bdrc.lucene.stemmer.Row row , int c ) { cmdIndex = row . getCmd ( ( ( char ) ( c ) ) ) ; foundMatch = ( cmdIndex ) >= 0 ; if ( foundMatch ) { foundMatchCmdIndex = cmdIndex ; foundNonMaxMatch = true ; storeNonMaxMatchState () ; } } 
@ java.lang.Override public boolean addAll ( java.util.Collection < ? extends T > collection ) { boolean result = false ; int position = underlyingList . size () ; if ( collection != null ) { result = underlyingList . addAll ( collection ) ; } if ( result ) { onItemRangeInserted ( position , collection . size () ) ; } return result ; } 
@ java.lang.Override public void onReceive ( android.content.Context context , android.content.Intent intent ) { android.net.ConnectivityManager cm = ( ( android.net.ConnectivityManager ) ( context . getSystemService ( Context.CONNECTIVITY_SERVICE ) ) ) ; android.net.NetworkInfo networkInfo = cm . getActiveNetworkInfo () ; if ( ( networkInfo != null ) && ( networkInfo . isConnected () ) ) { dispatchConnected () ; } displatchDisconnected () ; } 
@ java.lang.Override public void actionPerformed ( final java.awt.event.ActionEvent evt ) { final java.lang.String s = ( ( java.lang.String ) ( javax.swing.JOptionPane . showInputDialog ( rootPane , "Enter the header for a new property" ) ) ) ; if ( ( s != null ) && ( ! ( "" . equals ( s ) ) ) ) { final org.diyefi.openlogviewer.propertypanel.SingleProperty newprop = new org.diyefi.openlogviewer.propertypanel.SingleProperty () ; newprop . setHeader ( s ) ; addProperty ( newprop ) ; } } 
@ java.lang.Override public java.util.Set < org.thymeleaf.processor.IProcessor > getProcessors ( java.lang.String dialectPrefix ) { java.util.Set < org.thymeleaf.processor.IProcessor > processors = new java.util.LinkedHashSet < org.thymeleaf.processor.IProcessor > () ; processors . add ( new org.thymeleaf.standard.processor.StandardXmlNsTagProcessor ( this , org.thymeleaf.templatemode.TemplateMode.HTML , dialectPrefix ) ) ; processors . add ( new com.github.dtrunk90.thymeleaf.jawr.processor.element.impl.JawrBinaryAttributeTagProcessor ( this , "img" ) ) ; processors . add ( new com.github.dtrunk90.thymeleaf.jawr.processor.element.impl.JawrBinaryAttributeTagProcessor ( this , "input" ) ) ; processors . add ( new com.github.dtrunk90.thymeleaf.jawr.processor.element.impl.JawrCssAttributeTagProcessor ( this ) ) ; processors . add ( new com.github.dtrunk90.thymeleaf.jawr.processor.element.impl.JawrJsAttributeTagProcessor ( this ) ) ; return processors ; } 
public static boolean writeOutDefaults ( eu.ascetic.ioutils.io.ResultsStore rulesFile ) { boolean answer = false ; if ( ! ( rulesFile . getResultsFile () . exists () ) ) { rulesFile . add ( "Unique Id" ) ; rulesFile . add ( "Agreement Term" ) ; rulesFile . append ( "Comparator" ) ; rulesFile . append ( "Event Type (Violation or Warning)" ) ; rulesFile . append ( "Guarantee Value" ) ; rulesFile . save () ; answer = true ; } return answer ; } 
public void reloadData () { android.util.Log . d ( TAG , "reloadData" ) ; if ( false == ( com.taxibutler.tb3.model.DataModel . instance () . trips . isEmpty () ) ) { android.util.Log . d ( "trips" , com.taxibutler.tb3.model.DataModel . instance () . trips . toString () ) ; adapter . notifyDataSetChanged () ; tripListView . setVisibility ( View.VISIBLE ) ; tripListView . bringToFront () ; } } 
public java.nio.ByteBuffer cachedRead ( long position , int size , java.nio.ByteOrder order ) throws java.io.IOException { de.carne.filescanner.spi.FileScannerInput.Cache cache = de.carne.filescanner.spi.FileScannerInput.CACHE . get () ; if ( cache == null ) { cache = new de.carne.filescanner.spi.FileScannerInput.Cache ( de.carne.filescanner.spi.FileScannerInput.LOG ) ; de.carne.filescanner.spi.FileScannerInput.CACHE . set ( cache ) ; } return cache . read ( position , size , order ) ; } 
public void writeBinaryDouble ( double data ) { try { buffer = java.nio.ByteBuffer . allocate ( 8 ) ; buffer . order ( java.nio.ByteOrder.LITTLE_ENDIAN ) ; buffer . putDouble ( data ) ; buffer . rewind () ; channel . write ( buffer ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { int num = ( i ) + 1 ; message [ i ] = ( ( "Message " + num ) + ": " ) + ( text . getText () ) ; log . setText ( java.lang.String . join ( "\n" , message ) ) ; ( i ) ++ ; } 
public int indexOf ( java.lang.Object o ) { int index = 0 ; for ( LinkedList < E > . LinkedListNode < E > current = head ; current != null ; current = current.next ) { if ( o . equals ( current.element ) ) return index ; index ++ ; } return - 1 ; } 
@ java.lang.Override public boolean onMenuItemClick ( android.view.MenuItem item ) { com.neuron64.ftp.domain.model.UserConnection connection = at ( getAdapterPosition () ) ; switch ( item . getItemId () ) { case R.id.action_change : { onItemClickListener . onChangeConnection ( connection , getAdapterPosition () ) ; break; } case R.id.action_delete : { onItemClickListener . onDeleteConnection ( connection , getAdapterPosition () ) ; break; } case R.id.action_test : { onItemClickListener . onTestConnection ( connection , getAdapterPosition () ) ; break; } } return false ; } 
public T create () { if ( ( iCloneMethod ) == null ) { findCloneMethod () ; } try { return ( ( T ) ( iCloneMethod . invoke ( iPrototype , null ) ) ) ; } catch ( java.lang.IllegalAccessException ex ) { throw new org.apache.commons.collections15.FunctorException ( "PrototypeCloneFactory: Clone method must be public" , ex ) ; } catch ( java.lang.reflect.InvocationTargetException ex ) { throw new org.apache.commons.collections15.FunctorException ( "PrototypeCloneFactory: Clone method threw an exception" , ex ) ; } } 
public void setAttributes ( final java.util.HashMap < java.lang.String , java.lang.Boolean > attributes ) { setPvp ( attributes . get ( "pvp" ) ) ; setSpawnMonsters ( attributes . get ( "spawnMonsters" ) ) ; setSpawnAnimals ( attributes . get ( "spawnAnimals" ) ) ; setIsolatedChat ( attributes . get ( "isolatedChat" ) ) ; name.richardson.james.dimensiondoor.persistent.WorldRecord.plugin . getDatabase () . save ( this ) ; } 
private java.lang.Integer getPosition ( int accountID , android.database.Cursor cursor ) { int i ; java.lang.Integer position = null ; cursor . moveToFirst () ; for ( i = 0 ; i < ( ( cursor . getCount () ) - 1 ) ; i ++ ) { int mID = cursor . getInt ( 0 ) ; if ( mID == accountID ) { position = i ; break; } cursor . moveToNext () ; } return position ; } 
@ java.lang.Override public java.lang.String getStringProp ( java.lang.String propertyName ) throws org.owasp.esapi.errors.ConfigurationException { for ( org.owasp.esapi.configuration.AbstractPrioritizedPropertyLoader loader : loaders ) { try { return loader . getStringProp ( propertyName ) ; } catch ( org.owasp.esapi.errors.ConfigurationException e ) { java.lang.System.err . println ( ( ( ( "Property : " + propertyName ) + " not found in " ) + ( loader . name () ) ) ) ; } } throw new org.owasp.esapi.errors.ConfigurationException ( ( ( "Could not find property " + propertyName ) + " in configuration" ) ) ; } 
public java.util.LinkedList < diag.stn.STN.Vertex > adjacentNodes ( diag.stn.STN.Vertex last ) { java.util.LinkedHashSet < diag.stn.STN.DEdge > edges = map . get ( last ) ; if ( edges == null ) return null ; java.util.LinkedList < diag.stn.STN.Vertex > adjacent = new java.util.LinkedList <> () ; for ( diag.stn.STN.DEdge edg : edges ) { adjacent . add ( edg . getEnd () ) ; } return adjacent ; } 
public static void turnPage ( int i ) { if ( ( ( ( Reader.currentPage ) + i ) < 1 ) || ( ( ( Reader.currentPage ) + i ) > ( Reader.pages ) ) ) { java.lang.System.out . println ( "No more pages to turn!" ) ; } else { Reader.currentPage += i ; java.lang.System.out . println ( ( "Page #" + ( Reader.currentPage ) ) ) ; } } 
public java.util.Map < java.lang.String , java.util.List < org.bonitasoft.web.toolkit.client.data.item.attribute.validator.Validator > > getValidators () { final java.util.Map < java.lang.String , java.util.List < org.bonitasoft.web.toolkit.client.data.item.attribute.validator.Validator > > validators = new java.util.HashMap < java.lang.String , java.util.List < org.bonitasoft.web.toolkit.client.data.item.attribute.validator.Validator > > () ; for ( final java.util.Map.Entry < java.lang.String , org.bonitasoft.web.toolkit.client.ui.component.form.entry.ValuedFormEntry > entry : this . entriesIndex . entrySet () ) { validators . put ( entry . getKey () , entry . getValue () . getValidators () ) ; } return validators ; } 
protected void deleteTempFiles () { final ru.yandex.qatools.embed.postgresql.config.AbstractPostgresConfig.Storage storage = getConfig () . storage () ; if ( ( ( ( storage . dbDir () ) != null ) && ( storage . isTmpDir () ) ) && ( ! ( de.flapdoodle.embed.process.io.file.Files . forceDelete ( storage . dbDir () ) ) ) ) { ru.yandex.qatools.embed.postgresql.PostgresProcess.LOGGER . warn ( "Could not delete temp db dir: {}" , storage . dbDir () ) ; } } 
public boolean placePiece ( player currentPlayer , player otherPlayer , java.lang.String position ) { currentPlayer . addTally ( 1 ) ; int row = convertIntoNumbers ( position ) . get ( 0 ) ; int column = convertIntoNumbers ( position ) . get ( 1 ) ; if ( isLegalMove ( currentPlayer , row , column ) ) { board . get ( row ) . set ( column , currentPlayer.name ) ; reversePieces ( currentPlayer , otherPlayer , row , column ) ; return true ; } else { return false ; } } 
public void log ( java.lang.String AUT , int cnt , double sumCost , double sumDelay , double sumRunTime ) { java.lang.String log = ( ( ( ( ( ( ( AUT + "," ) + cnt ) + "," ) + sumCost ) + "," ) + sumDelay ) + "," ) + ( sumRunTime / 1000 ) ; writer . println ( log ) ; writer . flush () ; } 
public void decelerate () { if ( ( ( this . currentSpeed ) > 0 ) && ( ( this . currentRpm ) >= 1 ) ) { ( this . currentSpeed ) -- ; ( this . currentRpm ) -- ; ( this . currentMileage ) ++ ; } } 
@ java.lang.Override public void success ( java.lang.String responseBody ) { org.json.JSONObject json ; try { json = new org.json.JSONObject ( responseBody ) ; if ( ( json . getInt ( "status" ) ) == 201 ) { finish () ; showAlertDialog () ; } else { android.widget.Toast . makeText ( this , json . getString ( "statusText" ) , Toast.LENGTH_SHORT ) . show () ; } } catch ( org.json.JSONException e ) { e . printStackTrace () ; } } 
@ java.lang.Override public void onMapReady ( com.google.android.gms.maps.GoogleMap googleMap ) { mMap = googleMap ; mLocManager = ( ( android.location.LocationManager ) ( getSystemService ( Context.LOCATION_SERVICE ) ) ) ; mMyLocation = getLocation () ; if ( ( mMyLocation ) != null ) { moveToLocation ( mMyLocation ) ; mCollection = com.magpie.magpie.CollectionUtils.Collection . collectionTestBuilder ( mMyLocation . getLatitude () , mMyLocation . getLongitude () ) ; createMarkerList () ; placeMarkers () ; } initMap () ; } 
@ java.lang.Override public void endVisit ( com.google.gwt.dev.jjs.ast.JMethodCall x , com.google.gwt.dev.jjs.ast.Context ctx ) { com.google.gwt.dev.jjs.ast.JMethod target = x . getTarget () ; if ( ( x . isStaticDispatchOnly () ) && ( target . getJsMemberType () . isPropertyAccessor () ) ) { logError ( x , "Cannot call property accessor %s via super." , com.google.gwt.dev.jjs.impl.JsInteropRestrictionChecker . getMemberDescription ( target ) ) ; } } 
@ org.junit.Test public void test1 ( ) throws java.lang.Throwable { net.d80harri.wr.service.model.TaskDto root = new net.d80harri.wr.service.model.TaskDto ( "root" ) ; root . addChild ( new net.d80harri.wr.service.model.TaskDto ( "firstChild" ) ) ; root . addChild ( new net.d80harri.wr.service.model.TaskDto ( "secondChild" ) ) ; net.d80harri.wr.ui.viewmodel.TaskViewModel model = new net.d80harri.wr.ui.viewmodel.TaskViewModel ( root ) ; assertThat ( model . getChildrenViews () ) . hasSize ( 2 ) ; model . addNewChild () ; assertThat ( model . getChildrenViews () ) . hasSize ( 3 ) ; } 
private org.openl.binding.IBoundNode bindWithDependencies ( org.openl.rules.lang.xls.syntax.XlsModuleSyntaxNode moduleNode , org.openl.OpenL openl , org.openl.binding.IBindingContext bindingContext , java.util.Set < org.openl.dependency.CompiledDependency > moduleDependencies ) { org.openl.rules.lang.xls.binding.XlsModuleOpenClass moduleOpenClass = createModuleOpenClass ( moduleNode , openl , getModuleDatabase () , moduleDependencies , bindingContext ) ; org.openl.rules.binding.RulesModuleBindingContext moduleContext = populateBindingContextWithDependencies ( moduleNode , bindingContext , moduleDependencies , moduleOpenClass ) ; return processBinding ( moduleNode , openl , moduleContext , moduleOpenClass ) ; } 
public void getImageAsync ( com.andreadec.musicplayer.PlayableItem item , com.andreadec.musicplayer.ImageView imageView ) { com.andreadec.musicplayer.Bitmap image = null ; synchronized ( cache ) { image = cache . get ( item . getPlayableUri () ) ; } if ( image == null ) { com.andreadec.musicplayer.ImagesCache.ImageLoaderTask imageLoader = new com.andreadec.musicplayer.ImagesCache.ImageLoaderTask ( item , imageView ) ; imageLoader . execute () ; } else { imageView . setImageBitmap ( image ) ; imageView . setVisibility ( View.VISIBLE ) ; } } 
@ org.junit.Test public void testEqForDate ( ) throws java.text.ParseException { int count = 15 ; java.lang.String dateStr = "2012-01-15 16:59:00" ; java.text.DateFormat df = new java.text.SimpleDateFormat ( "yyyy-MM-dd HH:mm:ss" ) ; for ( int i = 0 ; i < count ; i ++ ) { com.huntering.common.entity.User user = createUser () ; user . setRegisterDate ( df . parse ( dateStr ) ) ; userRepository2 . save ( user ) ; } com.huntering.common.entity.search.Searchable search = com.huntering.common.entity.search.Searchable . newSearchable () . addSearchParam ( "registerDate_eq" , dateStr ) ; org.junit.Assert . assertEquals ( count , userRepository2 . countAllByDefault ( search ) ) ; } 
private void init () { java.util.Collection < org.apache.drill.exec.proto.CoordinationProtos.DrillbitEndpoint > endpoints = storagePlugin . getContext () . getBits () ; java.util.Map < java.lang.String , org.apache.drill.exec.proto.CoordinationProtos.DrillbitEndpoint > endpointMap = com.google.common.collect.Maps . newHashMap () ; for ( org.apache.drill.exec.proto.CoordinationProtos.DrillbitEndpoint endpoint : endpoints ) { endpointMap . put ( endpoint . getAddress () , endpoint ) ; } org.apache.drill.exec.store.openTSDB.OpenTSDBGroupScan.OpenTSDBWork work = new org.apache.drill.exec.store.openTSDB.OpenTSDBGroupScan.OpenTSDBWork () ; openTSDBWorkList . add ( work ) ; } 
@ java.lang.Override public void doSave ( org.eclipse.core.runtime.IProgressMonitor monitor ) { java.util.List < java.lang.String > artefactOrder = new java.util.ArrayList < java.lang.String > () ; for ( java.lang.Object module : orderedModules ) { artefactOrder . add ( ( ( org.eclipse.wst.server.core.IModule ) ( module ) ) . getId () ) ; } if ( ! ( serverWorkingCopy . getArtefactOrder () . equals ( artefactOrder ) ) ) { updating = true ; execute ( new org.eclipse.virgo.ide.runtime.internal.core.actions.ModifyArtefactOrderCommand ( serverWorkingCopy , artefactOrder ) ) ; updating = false ; } } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_record ) ; scrollView = ( ( android.widget.ScrollView ) ( findViewById ( R.id.scrollView ) ) ) ; initNote () ; initModel () ; initToolbar () ; initVoice () ; initGallery () ; } 
@ java.lang.Override public void setup () { map = new de.fhpotsdam.unfolding.UnfoldingMap ( this , "map" , 50 , 50 , 700 , 500 ) ; map . zoomToLevel ( 2 ) ; de.fhpotsdam.unfolding.utils.MapUtils . createDefaultEventDispatcher ( this , map ) ; final java.util.List < de.fhpotsdam.unfolding.data.Feature > features = de.fhpotsdam.unfolding.data.GeoRSSReader . loadData ( this , "data/bbc-georss-test.xml" ) ; final de.fhpotsdam.unfolding.data.MarkerFactory markerFactory = new de.fhpotsdam.unfolding.data.MarkerFactory () ; markerFactory . setPointClass ( de.fhpotsdam.unfolding.examples.marker.labelmarker.LabeledMarker . class ) ; final java.util.List < de.fhpotsdam.unfolding.marker.Marker > markers = markerFactory . createMarkers ( features ) ; map . addMarkers ( markers ) ; populateMarkerLabels ( markers ) ; } 
@ java.lang.Override public org.ednovo.gooru.core.api.model.CollectionItem getCollectionItemByResource ( java.lang.String resourceId ) { org.hibernate.Query query = getSession () . createQuery ( org.ednovo.gooru.infrastructure.persistence.hibernate.CollectionRepositoryHibernate.COLLECTION_ITEM_BY_RESOURCE ) ; query . setParameter ( "resourceId" , resourceId ) ; return ( ( org.ednovo.gooru.core.api.model.CollectionItem ) ( ( query . list () . size () ) > 0 ? query . list () . get ( 0 ) : null ) ) ; } 
private my.epam.collections.CustomTreeMap < K , V > . CustomNodeEntry < K , V > removeMin ( my.epam.collections.CustomTreeMap < K , V > . CustomNodeEntry < K , V > node ) { if ( ( node.left ) == null ) return node.right ; node.left = removeMin ( node.left ) ; return node ; } 
@ java.lang.Override public void write ( com.koushikdutta.async.ByteBufferList bb ) { if ( ( bb . remaining () ) == 0 ) return; assert ! ( mEnded ) ; if ( ! ( mHasWritten ) ) { initFirstWrite () ; return; } if ( ( mSink ) == null ) { java.lang.System.out . println ( "poop squat" ) ; return; } mSink . write ( bb ) ; } 
@ java.lang.Override public void run () { try { server.basics.HttpRequest request = new server.basics.HttpRequest ( clientSocket ) ; writeLog ( request ) ; handleRequest ( request ) ; clientSocket . close () ; } catch ( java.io.FileNotFoundException e ) { e . printStackTrace () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
@ java.lang.Override public void bindService () { if ( ( mRequestMessengerRef ) == null ) { android.content.Intent intent = new vandy.mooc.services.DownloadImagesBoundService () . makeIntent ( mActivity . get () ) ; android.util.Log . d ( vandy.mooc.operations.TAG , "calling bindService()" ) ; mActivity . get () . bindService ( intent , mServiceConnection , Context.BIND_AUTO_CREATE ) ; } } 
@ javax.ws.rs.GET @ com.wordnik.swagger.annotations.ApiOperation ( value = "" , response = edu.utah.nanofab.coralapiserver.core.MemberProjects . class ) @ com.codahale.metrics.annotation.Timed public edu.utah.nanofab.coralapiserver.core.MemberProjects [] get ( @ javax.ws.rs.QueryParam ( value = "member" ) com.google.common.base.Optional < java.lang.String > member , @ io.dropwizard.auth.Auth edu.utah.nanofab.coralapiserver.auth.User user ) { edu.utah.nanofab.coralapiserver.resources.operations.MemberProjectsOperationGet operation = new edu.utah.nanofab.coralapiserver.resources.operations.MemberProjectsOperationGet () ; operation . init ( this . coralConfigUrl , member , com.google.common.base.Optional . < java.lang.Object > absent () , user ) ; java.util.ArrayList < edu.utah.nanofab.coralapiserver.core.MemberProjects > returnSet ; returnSet = ( ( java.util.ArrayList < edu.utah.nanofab.coralapiserver.core.MemberProjects > ) ( operation . perform () ) ) ; return returnSet . toArray ( new edu.utah.nanofab.coralapiserver.core.MemberProjects [ 0 ] ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { fr.wildcodeschool.haa.waxym.CalendarView cv = ( ( fr.wildcodeschool.haa.waxym.CalendarView ) ( findViewById ( R.id.calendar_view ) ) ) ; if ( isEdit ) { cv . updateCalendar ( null , true ) ; editButton . setBackgroundResource ( R.drawable.annul ) ; isEdit = false ; } else { cv . updateCalendar ( null , false ) ; editButton . setBackgroundResource ( R.drawable.edit ) ; isEdit = true ; } } 
protected de.dreier.mytargets.shared.models.Passe randomPasse ( de.dreier.mytargets.shared.models.Round round , int arrowsPerEnd , java.util.Random gen ) { de.dreier.mytargets.shared.models.Passe p = new de.dreier.mytargets.shared.models.Passe ( arrowsPerEnd ) ; p.roundId = round . getId () ; for ( int i = 0 ; i < arrowsPerEnd ; i ++ ) { p.shot [ i ] . index = i ; p.shot [ i ] . zone = gen . nextInt ( 5 ) ; } p . sort () ; return p ; } 
@ java.lang.Override public void onActivityCreated ( android.os.Bundle savedInstanceState ) { super . onActivityCreated ( savedInstanceState ) ; if ( ! ( ( this ) instanceof nl.group11.planplan.EventsFragmentFav ) ) { android.support.v7.widget.RecyclerView recyclerView = ( ( android.support.v7.widget.RecyclerView ) ( getActivity () . findViewById ( R.id.eventsRecycler ) ) ) ; recyclerView . setLayoutManager ( new android.support.v7.widget.LinearLayoutManager ( getContext () ) ) ; recyclerView . setAdapter ( new nl.group11.planplan.EventfulAdapter ( new nl.group11.planplan.EventfulDynamicSearch ( "Eindhoven" , 100 ) ) ) ; } } 
public void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { com.google.zxing.integration.android.IntentResult scanResult = com.google.zxing.integration.android.IntentIntegrator . parseActivityResult ( requestCode , resultCode , data ) ; if ( scanResult != null ) { java.lang.String url = scanResult . getContents () ; new com.pokemonshowdown.app.TeamBuildingActivity.PastebinTask ( com.pokemonshowdown.app.TeamBuildingActivity.PastebinTaskId.IMPORT ) . execute ( url ) ; } else { super . onActivityResult ( requestCode , resultCode , data ) ; } } 
@ java.lang.Override public int compare ( com.android.angrybird.database.Item o1 , com.android.angrybird.database.Item o2 ) { try { return dateFormat . parse ( o2 . getDate () ) . compareTo ( dateFormat . parse ( o1 . getDate () ) ) ; } catch ( java.text.ParseException e ) { throw new java.lang.IllegalArgumentException ( e ) ; } } 
@ java.lang.Override public java.lang.String newId ( java.lang.String prefix ) { int counter = ( lastId ) + 1 ; java.lang.String id = ( prefix + "-" ) + counter ; while ( ids . contains ( id ) ) { counter ++ ; id = "" + counter ; } ids . add ( id ) ; lastId = counter ; return id ; } 
@ java.lang.Override public void onBindViewHolder ( com.blstream.studybox.decks_view.DecksAdapter.ViewHolder holder , int position ) { holder.deckTitle . setText ( decksList . getDecks () . get ( position ) . getDeckName () ) ; holder.questionsQuantity . setText ( java.lang.String . valueOf ( decksList . getDecks () . get ( position ) . getNoOfQuestions () ) ) ; holder.quantityIcon . setImageResource ( R.drawable.ic_questions ) ; } 
public static java.util.ArrayList < org.bukkit.permissions.Permission > getPerms ( com.github.arsenalfcgunners.gappleperms.Rank rank ) { java.util.ArrayList < org.bukkit.permissions.Permission > perms = new java.util.ArrayList < org.bukkit.permissions.Permission > () ; for ( com.github.arsenalfcgunners.gappleperms.Rank r : com.github.arsenalfcgunners.gappleperms.RankManager.ranks ) { if ( ( r . getLevel () ) <= ( rank . getLevel () ) ) { for ( org.bukkit.permissions.Permission p : com.github.arsenalfcgunners.gappleperms.RankManager . getPermissionsFromDB ( r ) ) { perms . add ( p ) ; } } } return perms ; } 
@ java.lang.Override public void onArticlesReady ( java.util.List < com.qvdev.apps.readerkid.utils.ItemWrapper > items ) { if ( mCovers . isEmpty () ) { mCovers . addAll ( items ) ; mCoverAdapter . notifyDataSetChanged () ; loadIssueArticles ( 0 ) ; } else { super . onArticlesReady ( items ) ; } } 
@ java.lang.Override public int getLastVisiblePosition () { int position = mListView . getLastVisiblePosition () ; int count = ( ( mListView . getCount () ) - ( mListView . getHeaderViewsCount () ) ) - ( mListView . getFooterViewsCount () ) ; if ( ( position > ( count - 1 ) ) && ( count > 0 ) ) position = count - 1 ; return position ; } 
private double getElectricityCount ( net.minecraft.item.ItemStack itemStack ) { org.halvors.electrometrics.common.base.MachineType machineType = org.halvors.electrometrics.common.base.MachineType . getType ( itemStack ) ; switch ( machineType ) { case BASIC_ELECTRICITY_METER : case ADVANCED_ELECTRICITY_METER : case ELITE_ELECTRICITY_METER : case ULTIMATE_ELECTRICITY_METER : if ( ( itemStack.stackTagCompound ) != null ) { return itemStack.stackTagCompound . getDouble ( "electricityCount" ) ; } default: return 0 ; } } 
@ org.junit.Test public void checkSpatialAlgebraIsInSemanticTags_LINESTRING_GEOMETRYCOLLECTION ( ) throws net.sharkfw.knowledgeBase.SharkKBException { net.sharkfw.knowledgeBase.SpatialSemanticTag tag1 = net.sharkfw.knowledgeBase.inmemory.InMemoSharkKB . createInMemoSpatialSemanticTag ( JTSMain.LineString_Berlin_HTW_WH_Complete ) ; net.sharkfw.knowledgeBase.SpatialSemanticTag tag2 = net.sharkfw.knowledgeBase.inmemory.InMemoSharkKB . createInMemoSpatialSemanticTag ( JTSMain.Geometrycollection_Berlin_HTW_Complete_With_MULTIPOLYGON ) ; org.junit.Assert . assertEquals ( true , JTSMain.usedFunctionClass . isIn ( tag1 , tag2 ) ) ; org.junit.Assert . assertEquals ( false , JTSMain.usedFunctionClass . isIn ( tag2 , tag1 ) ) ; } 
@ java.lang.Override protected void writeData ( int [] data , java.util.Map < java.lang.String , java.lang.Object > context ) throws java.lang.Exception { com.rapplogic.xbee.api.XBeeAddress64 address = ( ( com.rapplogic.xbee.api.XBeeAddress64 ) ( context . get ( "xbeeAddress" ) ) ) ; try { xbee . sendSynchronous ( new com.rapplogic.xbee.api.zigbee.ZNetTxRequest ( address , data ) , 500 ) ; } catch ( com.rapplogic.xbee.api.XBeeTimeoutException e ) { java.lang.System.out . println ( ( "No tx ack after 500ms" + ( e . getMessage () ) ) ) ; } } 
public int silentTakeMan10Score ( java.lang.String name , java.util.UUID uuid , java.lang.String nameTo , java.util.UUID uuidTo , long value , java.lang.String reason ) { if ( value == 0L ) { return 1 ; } if ( value < 0L ) { return 2 ; } int i = createMan10Score ( name , uuid , nameTo , uuidTo , ( - value ) , reason , "Take" ) ; return i ; } 
public void removeEdge ( edmonds.karp.Node adjacent ) { if ( ( sizeEdge ) == 0 ) { java.lang.System.out . println ( "Rimozione fallita: non sono presenti archi" ) ; } edmonds.karp.Edge tmp = header ; for ( int i = 0 ; i < ( ( sizeEdge ) - 1 ) ; i ++ ) { if ( ( tmp . getNext () . getNodeB () ) == adjacent ) tmp . setNext ( tmp . getNext () . getNext () ) ; tmp = tmp . getNext () ; } ( sizeEdge ) -- ; } 
@ java.lang.Override public final java.lang.Object invoke ( final java.lang.Object x0 , final java.lang.Object x1 , final java.lang.Object x2 ) { return getMethod ( new palisades.lakes.dynafun.java.signature.Signature3 ( x0 . getClass () , x1 . getClass () , x2 . getClass () ) ) . invoke ( x0 , x1 ) ; } 
public boolean validateLine () { for ( java.util.List < java.lang.Integer > line : _matrix ) { java.util.Set < java.lang.Integer > verifier = new java.util.HashSet <> () ; for ( java.lang.Integer num : line ) { if ( verifier . contains ( num ) ) { return false ; } else { verifier . add ( num ) ; } } } return true ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_new_recipe ) ; butterknife.ButterKnife . bind ( this ) ; mAddInstructionsButton . setOnClickListener ( this ) ; mAddIngredientButton . setOnClickListener ( this ) ; adapter = new android.widget.ArrayAdapter ( this , android.R.layout.simple_list_item_1 , ingredientList ) ; mListView . setAdapter ( adapter ) ; } 
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { java.util.List < T > models = new java.util.ArrayList <> () ; for ( com.google.firebase.database.DataSnapshot snapshot : dataSnapshot . getChildren () ) { T model = snapshot . getValue ( this . type ) ; model . setKey ( snapshot . getKey () ) ; models . add ( model ) ; } onDataChange ( models ) ; } 
@ net.openhft.chronicle.core.annotation.HotMethod private boolean runHandlers () { boolean busy = false ; for ( int i = 0 ; i < ( handlers . size () ) ; i ++ ) { net.openhft.chronicle.threads.api.EventHandler handler = handlers . get ( i ) ; try { busy |= handler . action () ; } catch ( net.openhft.chronicle.threads.api.InvalidEventHandlerException e ) { handlers . remove ( ( i -- ) ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } return busy ; } 
@ com.rapids.manage.controller.RequestMapping ( value = "/delAdmin" ) public com.rapids.manage.dto.ExtStatusEntity delAdminRole ( @ com.rapids.manage.controller.RequestParam ( value = "id" ) int id ) { com.rapids.manage.dto.ExtStatusEntity entity = new com.rapids.manage.dto.ExtStatusEntity () ; try { this . adminService . delAdmin ( ( ( long ) ( id ) ) ) ; entity . setMsg ( "succeed" ) ; entity . setSuccess ( true ) ; } catch ( java.lang.Exception ex ) { com.rapids.manage.controller.AdminController.LOGGER . error ( "delAdmin error" , ex ) ; entity . setMsg ( "删除失败" ) ; entity . setSuccess ( false ) ; } com.rapids.manage.controller.AdminController.LOGGER . info ( "delAdmin" ) ; return entity ; } 
public void run () { registratedUsers . getCurrentClient () . setPermissionForCrypt ( permissionCheckBoxAllUsers . isSelected () ) ; try { com.javaOOPProject.server.XMLManager . parceToXMLString ( registratedUsers , PATH_TO_DATA ) ; } catch ( javax.xml.bind.JAXBException ex ) { ex . printStackTrace () ; errorLabel . setText ( ServerGUIMessages.ERROR_SAVING_CHANGES . getMessage () ) ; errorLabel . setVisible ( true ) ; } catch ( java.io.FileNotFoundException ex ) { errorLabel . setText ( ServerGUIMessages.CANNOT_FIND_FILE_TO_SAVE . getMessage () ) ; errorLabel . setVisible ( true ) ; ex . printStackTrace () ; } } 
@ org.bukkit.event.EventHandler public void onJoin ( org.bukkit.event.player.PlayerJoinEvent e ) { if ( m.u.enabledingame ) { if ( m.u.update = true ) { e . getPlayer () . sendMessage ( "�6[�2Updater�6] �3Look at the console, there is an update for HeadGetter!" ) ; } else if ( m.u.update = false ) { e . getPlayer () . sendMessage ( "�6[�2Updater�6] �3There isn't update for HeadGetter!" ) ; } } } 
private void mergeSort ( int [] arr , int low , int high ) { if ( ( high - low ) < ( com.naptex.study.dsa.sort.MergeSort.INSERTIONSORT_THRESHOLD ) ) { insertionSort ( arr ) ; return; } int mid = low + ( ( high - low ) / 2 ) ; mergeSort ( arr , low , mid ) ; mergeSort ( arr , ( mid + 1 ) , high ) ; merge ( arr , low , high , mid ) ; } 
@ org.junit.Test public void lzw2 () { org.mapdb.DB db = maker () . make () ; db . hashMap ( "aa" ) . put ( "aa" , "bb" ) ; db . commit () ; assertEquals ( 0L , getBitField () ) ; db . close () ; try { maker () . compressionEnable () . make () ; fail () ; } catch ( org.mapdb.DBException e ) { assertEquals ( "Compression is set in config, but store was created with compression." , e . getMessage () ) ; } } 
private void switchTimers ( int nextPlayer ) { if ( ( ! ( gameOverFlag ) ) && ( ! ( ( players [ 1 ] ) instanceof com.example.systemadministrator.myapplication.AIPlayer ) ) ) { if ( nextPlayer == 0 ) { players [ 1 ] . stopTimer () ; players [ 0 ] . startTimer ( p1Status , false ) ; } else { players [ 0 ] . stopTimer () ; players [ 1 ] . startTimer ( p2Status , false ) ; } } } 
@ org.testng.annotations.Test public void test_fun_overloaded1 ( ) throws java.lang.Throwable { gololang.FunctionReference overloaded = gololang.Predefined . fun ( "overloaded" , gololang.PredefinedTest.MyCallable . class , 1 ) ; org.hamcrest.MatcherAssert . assertThat ( ( ( java.lang.Integer ) ( overloaded . handle () . invoke ( 2 ) ) ) , is ( 3 ) ) ; } 
public void run () { while ( active ) { if ( isPlaying () ) { try { int currentTime = ( ( int ) ( mediaPlayerComponent . getMediaPlayer () . getTime () ) ) ; this . firePropertyChange ( IMedia.PROP_TIME , previousTime , currentTime ) ; } catch ( java.lang.Exception ex ) {} } try { java.lang.Thread . sleep ( synergyviewcore.media.model.VLCMedia.OFFSET ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } } 
@ org.junit.Test public void registerNewDevice ( ) throws java.lang.Exception { com.stacksync.commons.models.ItemMetadata file = new com.stacksync.commons.models.ItemMetadata () ; file . setId ( 118L ) ; file . setFilename ( "chunks-2.png" ) ; file . setParentId ( null ) ; com.stacksync.syncservice.rpc.messages.APICommitResponse response = com.stacksync.syncservice.test.handler.UpdateMetadataTest.handler . updateMetadata ( com.stacksync.syncservice.test.handler.UpdateMetadataTest.user1 , file ) ; java.lang.System.out . println ( response . toString () ) ; } 
public static void main ( java.lang.String [] args ) { AppSeizaUranai_EF ef = new AppSeizaUranai_EF () ; java.lang.System.out . println ( "～～～～～～今日の占い～～～～～～" ) ; java.lang.System.out . println ( "" ) ; for ( int i = 0 ; i < 10 ; i ++ ) { AppSeizaUranai_EF . randomfortune ( ef.rankArray . get ( i ) , i ) ; } java.lang.System.out . println ( "～～～～～～良い一日を！～～～～～～" ) ; } 
@ java.lang.Override public boolean onRespond ( java.lang.String response , de.prismatikremote.hartz.prismatikremote.backend.Communicator.OnCompleteListener listener ) { java.lang.String prefix = "profiles:" ; if ( response . contains ( prefix ) ) { response = response . substring ( ( ( ( response . indexOf ( prefix ) ) + ( prefix . length () ) ) + 1 ) ) ; java.util.ArrayList < java.lang.String > list = new java.util.ArrayList ( java.util.Arrays . asList ( response . split ( ";" ) ) ) ; de.prismatikremote.hartz.prismatikremote.backend.RemoteState . getInstance () . setProfiles ( list ) ; return true ; } return false ; } 
@ java.lang.Override public void onResponse ( java.lang.Object response ) { if ( ( method . equals ( XMLRPC.NEW_POST ) ) && ( response instanceof java.lang.String ) ) { post . setRemotePostId ( java.lang.Integer . valueOf ( ( ( java.lang.String ) ( response ) ) ) ) ; } post . setIsLocalDraft ( false ) ; post . setIsLocallyChanged ( false ) ; org.wordpress.android.fluxc.store.PostStore.RemotePostPayload payload = new org.wordpress.android.fluxc.store.PostStore.RemotePostPayload ( post , site ) ; mDispatcher . dispatch ( org.wordpress.android.fluxc.generated.PostActionBuilder . newPushedPostAction ( payload ) ) ; } 
@ java.lang.Override public boolean execute ( edu.umass.cs.gigapaxos.interfaces.Request request ) { if ( request . toString () . equals ( Request.NO_OP ) ) { return true ; } switch ( ( ( edu.umass.cs.reconfiguration.examples.AppRequest.PacketType ) ( request . getRequestType () ) ) ) { case DEFAULT_APP_REQUEST : return processRequest ( ( ( edu.umass.cs.reconfiguration.examples.AppRequest ) ( request ) ) ) ; default: break; } return false ; } 
@ javax.ws.rs.POST @ javax.ws.rs.Consumes ( value = { javax.ws.rs.core.MediaType.APPLICATION_JSON } ) @ javax.ws.rs.Produces ( value = { javax.ws.rs.core.MediaType.TEXT_HTML } ) public javax.ws.rs.core.Response createFormResponse ( dash.pojo.FormResponse formResponse ) throws com.fasterxml.jackson.core.JsonParseException , com.fasterxml.jackson.databind.JsonMappingException , dash.errorhandling.AppException , java.io.IOException { java.lang.Long createFormResponseId = formResponseService . createFormResponse ( formResponse ) ; return javax.ws.rs.core.Response . status ( Response.Status.CREATED ) . entity ( "A new formResponse has been created at index" ) . header ( "Location" , java.lang.String . valueOf ( createFormResponseId ) ) . header ( "ObjectId" , java.lang.String . valueOf ( createFormResponseId ) ) . build () ; } 
@ org.fusesource.leveldbjni.test.Ignore @ org.fusesource.leveldbjni.test.Test public void testSeekFound () { setUp () ; fillDatabase () ; org.fusesource.leveldbjni.test.DBIterator it = db . iterator () ; it . seek ( toByteArray ( ( ( byte ) ( 2 ) ) ) ) ; assertEquals ( 3 , it . peekNext () . getKey () [ 0 ] ) ; } 
@ java.lang.Override void beforeDialogCreated ( android.support.v7.app.AlertDialog.Builder builder ) { super . beforeDialogCreated ( builder ) ; android.util.Pair < java.lang.String , java.lang.String > titleMessage = com.mapswithme.maps.routing.ResultCodesHelper . getDialogTitleSubtitle ( mResultCode , mMissingMaps . size () ) ; builder . setTitle ( titleMessage.first ) ; mMessage = titleMessage.second ; if ( com.mapswithme.maps.routing.ResultCodesHelper . isDownloadable ( mResultCode ) ) builder . setPositiveButton ( R.string.download , null ) ; } 
@ org.junit.Test public void testStreaming ( ) throws java.io.IOException { io.crate.metadata.UsersPrivilegesMetaData usersPrivilegesMetaData = new io.crate.metadata.UsersPrivilegesMetaData ( usersPrivileges ) ; org.elasticsearch.common.io.stream.BytesStreamOutput out = new org.elasticsearch.common.io.stream.BytesStreamOutput () ; usersPrivilegesMetaData . writeTo ( out ) ; org.elasticsearch.common.io.stream.StreamInput in = out . bytes () . streamInput () ; io.crate.metadata.UsersPrivilegesMetaData usersPrivilegesMetaData2 = ( ( io.crate.metadata.UsersPrivilegesMetaData ) ( new io.crate.metadata.UsersPrivilegesMetaData () . readFrom ( in ) ) ) ; assertEquals ( usersPrivilegesMetaData , usersPrivilegesMetaData2 ) ; } 
@ java.lang.Override public void onResponse ( retrofit2.Call < java.util.ArrayList < execube.io.realmwithretrofit.model.Picture > > call , retrofit2.Response < java.util.ArrayList < execube.io.realmwithretrofit.model.Picture > > response ) { if ( ( result . size () ) == 0 ) { result = response . body () ; handleRV ( result ) ; } else { for ( execube.io.realmwithretrofit.model.Picture picture : response . body () ) { result . add ( picture ) ; handleRV ( result ) ; } } } 
@ java.lang.Override public synchronized int read ( java.nio.ByteBuffer dst ) throws java.io.IOException { if ( ! ( this . open ) ) throw new java.nio.channels.ClosedChannelException () ; final int len = ( dst . limit () ) - ( dst . position () ) ; final byte [] buffer = new byte [ len ] ; final int read = this . random . read ( buffer ) ; dst . put ( buffer , 0 , read ) ; return read ; } 
private static void openNewWindow ( javafx.scene.Parent root , java.lang.String title ) { if ( model.StatementLogic.isWindowOpen ) return; if ( DarkModeLogic.isDark ) root . setBlendMode ( javafx.scene.effect.BlendMode.DIFFERENCE ) ; javafx.stage.Stage stage = new javafx.stage.Stage () ; stage . setTitle ( title ) ; stage . setScene ( new javafx.scene.Scene ( root ) ) ; model.StatementLogic.currentStage = stage ; stage . setResizable ( false ) ; model.StatementLogic.isWindowOpen = true ; stage . show () ; } 
private boolean isAccessGrantedToViewInstance ( java.lang.String beanName , com.vaadin.navigator.View view ) { final com.vaadin.ui.UI currentUI = com.vaadin.ui.UI . getCurrent () ; final java.util.Map < java.lang.String , com.vaadin.spring.access.ViewInstanceAccessControl > accessDelegates = applicationContext . getBeansOfType ( com.vaadin.spring.access.ViewInstanceAccessControl . class ) ; for ( com.vaadin.spring.access.ViewInstanceAccessControl accessDelegate : accessDelegates . values () ) { if ( ! ( accessDelegate . isAccessGranted ( currentUI , beanName , view ) ) ) { com.vaadin.spring.navigator.SpringViewProvider.LOGGER . debug ( "Access delegate [{}] denied access to view [{}]" , accessDelegate , view ) ; return false ; } } return true ; } 
public static es.socib.netcdftokml.DeploymentInfo createDeploymentInfo ( java.lang.String time , java.lang.String longitude , java.lang.String latitude ) { if ( ( ( null == time ) || ( null == longitude ) ) || ( null == latitude ) ) { es.socib.netcdftokml.DeploymentInfo.logger . warn ( "createDeploymentInfo() -- One or more of the needed parameters are null. Null DeploymentInfo was returned" ) ; return null ; } else return new es.socib.netcdftokml.DeploymentInfo ( time , longitude , latitude ) ; } 
public static boolean isEqual ( java.lang.String eq ) { int test = 1 ; int equalsIndex = eq . indexOf ( "=" ) ; java.lang.String lhs = eq . substring ( 0 , equalsIndex ) ; java.lang.String rhs = eq . substring ( ( equalsIndex + 1 ) ) ; double side1 = MathString . notateToDouble ( MathString . pemdas ( lhs ) ) ; double side2 = MathString . notateToDouble ( MathString . pemdas ( rhs ) ) ; return side1 == side2 ; } 
private boolean isSouthEastMovementBlocked ( game.Piece piece , int newX , int newY ) { for ( int i = ( piece . getY () ) - 1 ; i > newY ; i -- ) { int moveCounter = 1 ; if ( tileHasPiece ( ( ( piece . getX () ) + moveCounter ) , i ) ) return true ; moveCounter ++ ; } return false ; } 
private static int writeCount ( org.avidj.zuul.core.LockTreeNode node ) { assert node != null ; int count = ( node . hasExclusiveLock () ) ? 1 : 0 ; for ( org.avidj.zuul.core.LockTreeNode child : node.children . values () ) { count += org.avidj.zuul.core.DefaultLockManager . writeCount ( child ) ; } assert count == ( node.writes ) : java.lang.String . format ( "node = %1$s, writes = %2$d, actual = %3$d" , org.avidj.util.Strings . join ( org.avidj.zuul.core.DefaultLockManager . pathTo ( node ) ) , node.writes , count ) ; return count ; } 
private void claimForm ( final java.lang.String taskId ) { try { restClient . claimForm ( taskId ) ; org.apache.syncope.client.console.SyncopeConsoleSession . get () . info ( getString ( Constants.OPERATION_SUCCEEDED ) ) ; } catch ( org.apache.syncope.common.lib.SyncopeClientException scee ) { org.apache.syncope.client.console.SyncopeConsoleSession . get () . error ( ( ( ( getString ( Constants.ERROR ) ) + ": " ) + ( scee . getMessage () ) ) ) ; } } 
@ java.lang.Override public void setStitchedSprites ( thebetweenlands.client.handler.TextureStitchHandler.Frame [] [] frames ) { if ( ( this . animation ) != null ) { this . animation . setFrames ( frames [ 0 ] ) ; if ( ( this . particleTexture ) == null ) { this . setParticleTexture ( frames [ 0 ] [ 0 ] . getSprite () ) ; } } } 
public boolean removeAt ( int index ) { if ( index > ( length ) ) { return false ; } if ( index == 0 ) { head = head.next ; } else if ( index == ( ( length ) - 1 ) ) { tail = getNodeAt ( ( index - 1 ) ) ; tail.next = null ; } else { SinglyLinkedList.Node < T > curr = head ; curr = getNodeAt ( ( index = 1 ) ) ; curr.next = curr.next.next ; } ( length ) -- ; return true ; } 
@ java.lang.Override public void execute ( final java.lang.Object message ) throws java.lang.Exception { final org.mobicents.servlet.restcomm.mgcp.EndpointCredentials response = ( ( org.mobicents.servlet.restcomm.mgcp.EndpointCredentials ) ( message ) ) ; masterIVREndpointId = response . endpointId () ; masterIVREndpointIdName = masterIVREndpointId . getLocalEndpointName () ; logger . info ( ( ( "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ masterIVREndpointId:" + ( masterIVREndpointIdName ) ) + " ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^" ) ) ; updateMasterIVREndpointId () ; } 
private java.io.File getOutputFile ( java.lang.String className , java.lang.String methodName , java.lang.String fileExtension ) throws java.io.IOException { java.io.File outputDir = new java.io.File ( ( ( ( screenshotDirectory ) + "/" ) + ( createSubdirectoryForTestCase ? className : "" ) ) ) ; outputDir . mkdirs () ; java.io.File outputFile = new java.io.File ( outputDir , ( ( ( className + "-" ) + methodName ) + fileExtension ) ) ; return outputFile ; } 
public boolean legacyFactionsClaim ( org.bukkit.Location loc ) { com.massivecraft.factions.Board board = net.redstoneore.legacyfactions.entity.Board . get () ; if ( wild . getConfig () . getBoolean ( "LegacyFactions" ) ) { com.massivecraft.factions.entity.Faction faction = board . getFactionAt ( new com.massivecraft.factions.FLocation ( loc ) ) ; if ( ( faction . isWilderness () ) && ( ! ( checkSurroundingLegacyFactions ( loc ) ) ) ) return true ; else return false ; } return false ; } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { int id = item . getItemId () ; if ( id == ( R.id.action_close ) ) { java.lang.System . exit ( 0 ) ; } if ( id == ( R.id.action_options ) ) { android.content.Intent intent = new android.content.Intent ( this , org.theiner.kinoxscanner.activities.OptionsActivity . class ) ; startActivity ( intent ) ; } return super . onOptionsItemSelected ( item ) ; } 
private java.util.Map < java.lang.String , java.lang.Object > getErrorAttributes ( javax.servlet.http.HttpServletRequest request , boolean includeStackTrace ) { org.springframework.web.context.request.RequestAttributes requestAttributes = new org.springframework.web.context.request.ServletRequestAttributes ( request ) ; java.util.Map < java.lang.String , java.lang.Object > errorAttributesMap = this . errorAttributes . getErrorAttributes ( requestAttributes , includeStackTrace ) ; errorAttributesMap . put ( com.grndctl.controllers.CustomErrorController.MESSAGE , this . errorAttributes . getError ( requestAttributes ) . getLocalizedMessage () ) ; return errorAttributesMap ; } 
public static void deleteAll ( int uid ) { java.lang.String insert = "DELETE FROM Vacancy WHERE c_id = ? AND archive = 0" ; java.sql.Connection con = Utilities.DBService . connect () ; try { java.sql.PreparedStatement st = con . prepareStatement ( insert ) ; st . setInt ( 1 , uid ) ; st . execute () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } 
@ java.lang.Override public void approveSelection () { java.io.File selectedFile = getSelectedFile () ; if ( ( selectedFile . exists () ) && ( ( getDialogType () ) == ( javax.swing.JFileChooser.SAVE_DIALOG ) ) ) { int result = javax.swing.JOptionPane . showConfirmDialog ( this , "Do you want to overwrite?" , "File already exists" , javax.swing.JOptionPane.YES_NO_OPTION ) ; if ( result == ( javax.swing.JOptionPane.YES_OPTION ) ) { super . approveSelection () ; } else { cancelSelection () ; } } super . approveSelection () ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.actv_most_complex_touch ) ; cn.six.adv.touch.complex.frag.ViewPagerAdapter adapter = new cn.six.adv.touch.complex.frag.ViewPagerAdapter ( getSupportFragmentManager () ) ; adapter . addFragment ( new cn.six.adv.touch.complex.frag.MainFragment () ) ; adapter . addFragment ( new cn.six.adv.touch.complex.frag.DragableGvFragment () ) ; adapter . addFragment ( new cn.six.adv.touch.complex.frag.AboutUsFragment () ) ; adapter . addFragment ( new cn.six.adv.touch.complex.frag.AboutUsFragment () ) ; android.support.v4.view.ViewPager vp = ( ( android.support.v4.view.ViewPager ) ( findViewById ( R.id.vp_most_complex_touch ) ) ) ; vp . setAdapter ( adapter ) ; } 
@ java.lang.Override public void flowCompletedWithErrors ( java.lang.Throwable myError ) { if ( org.jumpmind.metl.core.runtime.component.AbstractFileReader.ACTION_ARCHIVE . equals ( actionOnError ) ) { archive ( archiveOnErrorPath ) ; } else if ( org.jumpmind.metl.core.runtime.component.AbstractFileReader.ACTION_DELETE . equals ( actionOnError ) ) { deleteFiles () ; } directory . close ( false ) ; directory = null ; } 
public boolean canPlayDevCard ( shared.definitions.DevCardType devCard ) { if ( ( ( ( ( ! ( isPlayerTurn () ) ) || ( hasPlayedDevCard ) ) || ( ! ( getState () . equals ( "Playing" ) ) ) ) || ( ! ( game . getPlayer () . getOldDevCards () . hasDevCard ( devCard ) ) ) ) || ( game . getPlayer () . isPlayedDevCard () ) ) return false ; return true ; } 
@ java.lang.Override protected void initChannel ( io.netty.channel.socket.SocketChannel ch ) throws java.lang.Exception { final io.netty.channel.ChannelPipeline pipeline = ch . pipeline () ; pipeline . addLast ( "decoder" , new io.netty.handler.codec.http.HttpRequestDecoder () ) . addLast ( "aggregator" , new io.netty.handler.codec.http.HttpObjectAggregator ( 1048576 ) ) . addLast ( "processor" , new ru.shishmakov.server.HttpServerProcessorHandler ( true ) ) . addLast ( "encoder" , new io.netty.handler.codec.http.HttpResponseEncoder () ) ; } 
public org.egov.commons.Functionary createSavedFunctionary () { org.egov.commons.Functionary functionary = new org.egov.commons.Functionary () ; functionary . setCode ( java.math.BigDecimal . valueOf ( 10102 ) ) ; functionary . setCreatetimestamp ( new java.util.Date () ) ; functionary . setIsactive ( 1 ) ; functionary . setName ( "Test Functionary" ) ; functionary . setUpdatetimestamp ( new java.util.Date () ) ; session . saveOrUpdate ( functionary ) ; return functionary ; } 
private static void createLevel () { com.game.obj.Blackhole . setAttraction ( com.game.GameSettings.LevelLoader.Blackhole_Attraction ) ; com.game.obj.Blackhole . setBx ( com.game.GameSettings.LevelLoader.Blackhole_posX ) ; com.game.obj.Blackhole . setBy ( com.game.GameSettings.LevelLoader.Blackhole_posY ) ; com.game.obj.Gegner . setGy ( com.game.GameSettings.LevelLoader.Gegner_posY ) ; com.game.obj.Gegner . setMaxEnergy ( com.game.GameSettings.LevelLoader.Gegner_energy ) ; com.game.obj.Gegner . setSchaden ( com.game.GameSettings.LevelLoader.Gegner_schaden ) ; com.game.obj.Player . setPy ( com.game.GameSettings.LevelLoader.Gegner_posY ) ; com.game.obj.Player . setMaxEnergy ( com.game.GameSettings.LevelLoader.Player_energy ) ; com.game.obj.Player . setSchaden ( com.game.GameSettings.LevelLoader.Player_schaden ) ; } 
public void undock () { restore () ; if ( ( ( getParentContainer () ) != null ) && ( ! ( ( getParentContainer () ) instanceof com.anchorage.docks.containers.SingleDockContainer ) ) ) { getParentContainer () . undock ( this ) ; station . remove ( this ) ; } else if ( floatingProperty . get () ) { closeFloatingStage () ; station . remove ( this ) ; } } 
@ com.google.common.eventbus.Subscribe public void listen ( net.sf.jabref.model.entry.event.EntryChangedEvent entryChangedEvent ) { lock () ; try { int index = list . indexOf ( entryChangedEvent . getBibEntry () ) ; if ( index != ( - 1 ) ) { list . set ( index , entryChangedEvent . getBibEntry () ) ; } } finally { unlock () ; } } 
private void hideDeckInformation ( boolean fade ) { setTitle ( getResources () . getString ( R.string.app_name ) ) ; mDeckInformation . setVisibility ( View.INVISIBLE ) ; if ( fade ) { mDeckInformation . setAnimation ( com.ichi2.anim.ViewAnimation . fade ( ViewAnimation.FADE_OUT , 500 , 0 ) ) ; } } 
private void renderPage ( int pageNr ) { this . pageConainer . getChildren () . clear () ; this . pageConainer . getChildren () . add ( pages . get ( pageNr ) ) ; this . pageIndicator . setText ( ( ( ( "Page:" + ( this . currentPage ) ) + "/" ) + ( this . maxPage ) ) ) ; } 
boolean offline_login () { java.lang.String account = sharedPreferences . getString ( "account" , null ) ; java.lang.String passwd = sharedPreferences . getString ( "passwd" , null ) ; android.util.Log . d ( "Tag" , "fake login" ) ; return ( ! ( account == null ) ) || ( passwd == null ) ; } 
private void runSimAnn () { SimulatedAnnealing sa = new SimulatedAnnealing ( GUI.table ) ; long startTime = java.lang.System . nanoTime () ; CandidateSolution solution = sa . saSolution () ; long endTime = java.lang.System . nanoTime () ; long timeTaken = ( endTime - startTime ) / 1000000000 ; java.lang.System.out . println ( ( "Total execution time: " + timeTaken ) ) ; int [] results = compileResults ( solution ) ; java.lang.String energy = java.lang.Integer . toString ( solution . getEnergy () ) ; printResult ( results , energy , solution ) ; } 
protected static int findSize ( Node n ) { if ( ( n . getLeft () ) != null ) { ( SplayTree.sizeN ) ++ ; return SplayTree . findSize ( n . getLeft () ) ; } if ( ( n . getRight () ) != null ) { ( SplayTree.sizeN ) ++ ; return SplayTree . findSize ( n . getRight () ) ; } int size = SplayTree.sizeN ; SplayTree.sizeN = 1 ; return size ; } 
public long delayDelayConfiguration ( long date , java.util.List < java.lang.Float > influencingMasterDataQuality , java.lang.String node , java.lang.String key ) { int delay = getIntRangeConfigurationValue ( influencingMasterDataQuality , node , key ) ; java.util.Calendar calendar = java.util.Calendar . getInstance () ; calendar . setTimeInMillis ( date ) ; calendar . add ( java.util.Calendar.DATE , delay ) ; return calendar . getTimeInMillis () ; } 
public static boolean isPlayerOpped ( com.mojang.authlib.GameProfile player ) { if ( net.minecraft.server.MinecraftServer . getServer () . getConfigurationManager () . func_152603_m () . func_152690_d () ) { for ( java.lang.String name : net.minecraft.server.MinecraftServer . getServer () . getConfigurationManager () . func_152606_n () ) { if ( name . toLowerCase () . equals ( player . getName () . toLowerCase () ) ) { return true ; } } return false ; } return true ; } 
private void addMessage ( final com.mattfred.androidai.models.Message message ) { adapter . addMessage ( message ) ; messageArea . scrollToPosition ( ( ( adapter . getItemCount () ) - 1 ) ) ; input . setText ( "" ) ; if ( message . isUser () ) { thinking . setVisibility ( View.VISIBLE ) ; new java.lang.Thread () { @ java.lang.Override public void run () { controller . analyzeText ( message . getContent () ) ; } } . start () ; } } 
public void add ( java.lang.Object o ) { if ( o instanceof com.github.fishio.IDrawable ) { drawables . add ( ( ( com.github.fishio.IDrawable ) ( o ) ) ) ; } if ( o instanceof com.github.fishio.IMovable ) { movables . add ( ( ( com.github.fishio.IMovable ) ( o ) ) ) ; } if ( o instanceof com.github.fishio.Entity ) { entities . add ( ( ( com.github.fishio.Entity ) ( o ) ) ) ; } if ( o instanceof com.github.fishio.ICollidable ) { collidables . add ( ( ( com.github.fishio.ICollidable ) ( o ) ) ) ; } } 
public double visitShoppingCart ( com.dev.design.shoppingcart.visitor.ShoppingCart shoppingCart ) { java.lang.System.out . println ( "---- Shopping Cart Vistor Trace ----" ) ; double price = 0 ; for ( int i = 0 ; i < ( shoppingCart . getCartItems () . size () ) ; i ++ ) { shoppingCart . getCartItems () . get ( i ) . accept ( this ) ; } return 0 ; } 
@ org.junit.Test public void testUserIdOnlyCase () { java.lang.String testToken = testUserId ; org.sagebionetworks.web.client.place.Profile place = tokenizer . getPlace ( testToken ) ; org.junit.Assert . assertEquals ( testUserId , place . getUserId () ) ; org.junit.Assert . assertEquals ( Synapse.ProfileArea.PROJECTS , place . getArea () ) ; org.junit.Assert . assertEquals ( testToken , tokenizer . getToken ( place ) ) ; } 
private void updateLabel ( org.wordpress.android.widgets.WPTextView textView , java.lang.String text ) { if ( ( text == null ) || ( text . isEmpty () ) ) { textView . setVisibility ( View.GONE ) ; } else { textView . setVisibility ( View.VISIBLE ) ; textView . setText ( text ) ; } } 
@ java.lang.Override public void onCallStateChanged ( int state , java.lang.String incomingNumber ) { switch ( state ) { case android.telephony.TelephonyManager.CALL_STATE_OFFHOOK : case android.telephony.TelephonyManager.CALL_STATE_RINGING : if ( ( mMediaPlayer ) != null ) { pauseMedia () ; mOnGoingCall = true ; } break; case android.telephony.TelephonyManager.CALL_STATE_IDLE : if ( ( mMediaPlayer ) != null ) { resumeMedia () ; mOnGoingCall = false ; } break; } } 
public void getNextPath ( android.view.View view ) { ( mapPoint ) ++ ; android.widget.EditText verificationCode = ( ( android.widget.EditText ) ( findViewById ( R.id.verificationCode ) ) ) ; com.example.mortuie.bathlaunchpad2017.GettingData gd = new com.example.mortuie.bathlaunchpad2017.GettingData () ; if ( gd . getValueOfWebsite () . trim () . equals ( verificationCode . getText () . toString () . trim () ) ) { addPoints () ; generateNextPath () ; } } 
public org.wso2.siddhi.core.event.in.InEvent [] curvePredictor ( org.wso2.siddhi.core.event.in.InEvent firstEvent ) { findEMA () ; org.apache.stratos.cep.extension.CurveFitter curveFitter = new org.apache.stratos.cep.extension.CurveFitter ( timeStamps , smoothedValues ) ; double [] coefficients = curveFitter . fit () ; org.wso2.siddhi.core.event.in.InEvent [] inEvents = new org.wso2.siddhi.core.event.in.InEvent [ 3 ] ; inEvents [ 0 ] = new org.wso2.siddhi.core.event.in.InEvent ( firstEvent . getStreamId () , firstEvent . getTimeStamp () , firstEvent.getD ) ; return inEvents ; } 
@ org.junit.Test public void testCreateFolder ( ) throws java.lang.Exception { java.lang.String folderName = "newFolder" ; com.zimbra.client.ZMailbox zmbox = com.zimbra.qa.unittest.TestUtil . getZMailbox ( com.zimbra.qa.unittest.SharedImapTests.USER ) ; connection = connect ( imapServer ) ; connection . login ( com.zimbra.qa.unittest.SharedImapTests.PASS ) ; com.zimbra.qa.unittest.TestUtil . createFolder ( zmbox , folderName ) ; com.zimbra.cs.mailclient.imap.MailboxInfo info = connection . select ( folderName ) ; org.junit.Assert . assertEquals ( folderName , info . getName () ) ; } 
@ java.lang.Override protected void onPostExecute ( java.lang.Void aVoid ) { btnInstall . setEnabled ( true ) ; android.widget.Toast . makeText ( getActivity () , getString ( R.string.toast_grant_install ) , Toast.LENGTH_SHORT ) . show () ; tvProgress . setText ( getString ( R.string.tv_done ) ) ; proviewInstall . setVisibility ( View.INVISIBLE ) ; } 
private android.database.Cursor addParticipantToCursor ( android.database.Cursor data , java.lang.String uid ) { android.database.Cursor uidCursor = com.usal.jorgeav.sportapp.MyApplication . getAppContext () . getContentResolver () . query ( SportteamContract.UserEntry.CONTENT_USER_URI , SportteamContract.UserEntry.USER_COLUMNS , ( ( SportteamContract.UserEntry.USER_ID ) + " = ? " ) , new java.lang.String [] { uid } , null ) ; android.database.Cursor result = new android.database.MergeCursor ( new android.database.Cursor [] { uidCursor , data } ) ; if ( uidCursor != null ) uidCursor . close () ; return result ; } 
@ org.junit.Test public void testCase5 () { me.chiwang.leetcode.ListNode l1 = me.chiwang.leetcode.ListNodes . getListNodes ( 1 , 2 , 3 , 4 , 5 ) ; solution . reverseKGroup ( l1 , 5 ) ; me.chiwang.leetcode.ListNode l2 = me.chiwang.leetcode.ListNodes . getListNodes ( 5 , 4 , 3 , 2 , 1 ) ; assertListNodeEquals ( l2 , l1 ) ; } 
public static void main ( java.lang.String [] args ) { com.valuados.tickets.main.Schedule schedule = new com.valuados.tickets.main.Schedule () ; com.valuados.tickets.main.BookingList bookingList = new com.valuados.tickets.main.BookingList () ; com.valuados.tickets.main.App . readFile ( com.valuados.tickets.main.App.INPUTFILENAME , schedule , bookingList ) ; java.lang.System.out . println ( "Welcome to Ticket Booking System" ) ; java.lang.System.out . println ( "To see all commands type help" ) ; while ( true ) { com.valuados.tickets.main.App . doCommand ( schedule , bookingList ) ; } } 
public void raiseEvent_OnEventDispatchThread ( java.awt.event.ActionEvent event ) { java.lang.Runnable action = ( ) - > { for ( java.awt.event.ActionListener a : EDTlisteners ) { a . actionPerformed ( event ) ; } } ; if ( javax.swing.SwingUtilities . isEventDispatchThread () ) { action . run () ; } else { javax.swing.SwingUtilities . invokeLater ( action ) ; } } 
public java.util.List < model.Vehicle.Vehicle > getRegisteredUserVehicles () { if ( ( ( registeredUsers ) != null ) && ( ( loggedUser.ownedVehicles . size () ) == 0 ) ) { for ( model.UserManager.User user : registeredUsers ) { if ( user.name . equals ( loggedUser.name ) ) { return new java.util.ArrayList ( user.ownedVehicles ) ; } } } else { return new java.util.ArrayList ( loggedUser.ownedVehicles ) ; } return null ; } 
@ java.lang.Override public void onSuccess ( int statusCode , cz.msebera.android.httpclient.Header [] headers , org.json.JSONObject response ) { com.codepath.apps.restclienttemplate.models.User user = null ; try { user = com.codepath.apps.restclienttemplate.models.User . fromJSON ( response ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } getSupportActionBar () . setTitle ( user.screenName ) ; populateUserHeadline ( user ) ; } 
public int getColId ( java.lang.String colName ) { for ( int i = 0 ; i < ( schema . size () ) ; i ++ ) { if ( schema . get ( i ) . getName () . equals ( colName ) ) return i ; } return - 1 ; } 
public static void main ( java.lang.String [] args ) { int [] arr = new int [] { 2 , 3 , 1 , 2 , 4 , 3 } ; LeetCode.MinimumSize_209 min209 = new LeetCode.MinimumSize_209 () ; int a = min209 . minSubArrayLen ( 4 , arr ) ; java.lang.System.out . println ( a ) ; } 
private void updateMyCurrentLoc ( android.location.Location location ) { if ( location != null ) { android.location.Address addr = getAddrCurrentLocation ( location . getLatitude () , location . getLongitude () ) ; java.lang.String name = addr . getAddressLine ( 0 ) ; moveCameraTo ( location . getLatitude () , location . getLongitude () ) ; curPlace = name ; curAddr = addr ; } } 
private static java.util.Date findDate ( final java.lang.Thread thread ) { final java.lang.String s = net.anfoya.mail.gmail.model.GmailThread . findHeader ( thread , "Date" ) ; try { return new javax.mail.internet.MailDateFormat () . parse ( s ) ; } catch ( final java.text.ParseException e ) { e . printStackTrace () ; return new java.util.Date () ; } } 
private void writeMetadata ( java.util.Map < java.lang.String , ? extends java.io.Serializable > metadata , com.jakewharton.disklrucache.DiskLruCache.Editor editor ) throws java.io.IOException { java.io.ObjectOutputStream oos = null ; try { oos = new java.io.ObjectOutputStream ( new java.io.BufferedOutputStream ( editor . newOutputStream ( com.anupcowkur.reservoir.SimpleDiskCache.METADATA_IDX ) ) ) ; oos . writeObject ( metadata ) ; } finally { closeQuietly ( oos ) ; } } 
private void reopenIssues ( final org.joda.time.LocalDate today ) { for ( final org.smartdeveloperhub.harvesters.it.backend.Issue issue : findIssuesByStatus ( Status.CLOSED ) ) { if ( ( ! ( isInFlight ( issue , today ) ) ) && ( canReopen ( issue ) ) ) { reopen ( issue ) ; } } } 
@ java.lang.Override protected java.lang.Boolean doInBackground ( byte [] . . . image ) { this . image = image [ 0 ] ; try { sendImage ( image [ 0 ] , image [ 0 ] . length ) ; return true ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return false ; } } 
private void collectValuesInorder ( RBTree.RBNode node , RBTree.List < java.lang.String > keysList ) { if ( node == null ) { return; } this . collectValuesInorder ( node . getLeft () , keysList ) ; keysList . addItem ( node . getValue () ) ; this . collectValuesInorder ( node . getRight () , keysList ) ; } 
private void initConfirmButton () { if ( mIsMultiSelectMode ) { mAdapter . doDefaultMatch ( mDefaultSelectedList , mIsDisableDefaultData ) ; if ( ( ( mDefaultSelectedList ) == null ) || ( mDefaultSelectedList . isEmpty () ) ) { setRightButton ( "确定" , mConfirmListener ) ; com.pm360.sortlistview.SortListActivity . setRightButtonClickable ( false ) ; } else { setRightButton ( ( ( "确定(" + ( mDefaultSelectedList . size () ) ) + ")" ) , mConfirmListener ) ; com.pm360.sortlistview.SortListActivity . setRightButtonClickable ( true ) ; } } } 
@ java.lang.Override public void onReceive ( android.content.Context context , android.content.Intent intent ) { if ( ( mOnChangeItemListener ) != null ) { mOnChangeItemListener . onChangeItem ( intent . getIntExtra ( "position" , 0 ) ) ; if ( intent . getBooleanExtra ( "onDestroy" , false ) ) { mOnChangeItemListener . onDestroy () ; } } } 
public static boolean deleteCluster ( pt.ulisboa.tecnico.amorphous.requestrouter.internal.RequestRouterCluster cluster ) { java.util.List < java.lang.String > result = pt.ulisboa.tecnico.amorphous.requestrouter.lvs.LVSImplementation . executeCommand ( pt.ulisboa.tecnico.amorphous.requestrouter.lvs.LVSImplementation . prepareCmd ( pt.ulisboa.tecnico.amorphous.requestrouter.lvs.LVSImplementation.CMD_REMOVE_CLUSTER , cluster ) ) ; if ( ( result == null ) || ( ! ( result . isEmpty () ) ) ) return false ; else return true ; } 
private void fetchData ( ) throws org.json.JSONException { android.util.Log . d ( LOG_TAG , "Start fetchData" ) ; switch ( mode ) { case 0 : fetchTotalStatistics () ; break; case 1 : fetchUpdatesForDictionaries () ; break; case 2 : fetchSitesDictionaryUpdate () ; break; case 3 : fetchPersonsDictionaryUpdate () ; break; case 4 : fetchDailyStatistics () ; break; } } 
public java.lang.Throwable appendTo ( java.lang.Throwable throwable ) { java.lang.Throwable t = throwable ; while ( ( t . getCause () ) != null ) { t = t . getCause () ; if ( ( ( logLevel ) == ( com.tspoon.traceur.Traceur.LogLevel.SHOW_ONLY_FIRST ) ) && ( t instanceof com.tspoon.traceur.TraceurException ) ) { return throwable ; } } t . initCause ( this ) ; return throwable ; } 
@ com.sun.istack.internal.Nullable private com.mayhew3.gamesutil.tv.ErrorLogPostgres getErrorLog ( java.lang.String tivoId ) throws java.sql.SQLException { java.sql.ResultSet resultSet = connection . prepareAndExecuteStatementFetch ( ( "SELECT *" + ( ( "FROM error_log " + "WHERE tivo_id = ? " ) + "AND resolved = ?" ) ) , tivoId , false ) ; if ( resultSet . next () ) { com.mayhew3.gamesutil.tv.ErrorLogPostgres errorLog = new com.mayhew3.gamesutil.tv.ErrorLogPostgres () ; errorLog . initializeFromDBObject ( resultSet ) ; return errorLog ; } return null ; } 
@ java.lang.Override public edu.gemini.p2checker.rules.gmos.Problem check ( edu.gemini.spModel.config2.Config config , int step , edu.gemini.p2checker.rules.gmos.ObservationElements elems , java.lang.Object state ) { if ( ( ( edu.gemini.p2checker.rules.gmos.GmosRule . getFPU ( config ) . isIFU () ) && ( ! ( edu.gemini.p2checker.rules.gmos.GmosRule . getDisperser ( config ) . isMirror () ) ) ) && ( ( edu.gemini.p2checker.rules.gmos.GmosRule . getYBinning ( config ) ) != ( edu.gemini.spModel.gemini.gmos.GmosCommonType.Binning.ONE ) ) ) { return new edu.gemini.p2checker.rules.gmos.Problem ( WARNING , ( ( edu.gemini.p2checker.rules.gmos.GmosRule.PREFIX ) + "IFU_NO_SPATIAL_BINNING_RULE" ) , errMsg , edu.gemini.p2checker.util.SequenceRule . getInstrumentOrSequenceNode ( step , elems ) ) ; } return null ; } 
@ javafx.fxml.FXML private void handleDoubleClick ( javafx.scene.input.MouseEvent event ) { if ( ( event . getClickCount () ) == 2 ) { java.lang.String path = this . treeView . getSelectionModel () . getSelectedItem () . getValue () ; if ( ( path . split ( "\\." ) . length ) != 0 ) { path = "data/" + path ; java.lang.System.out . println ( path ) ; this . main . showFileOverview ( path ) ; } } } 
@ java.lang.Override protected void fx ( int cell , com.watabou.utils.Callback callback ) { com.watabou.pixeldungeon.effects.MagicMissile . whiteLight ( wandUser . getSprite () . getParent () , wandUser . getPos () , cell , callback ) ; Sample.INSTANCE . play ( Assets.SND_ZAP ) ; wandUser . getSprite () . setVisible ( false ) ; } 
@ java.lang.Override public void onItemSelected ( android.widget.AdapterView < ? > adapterView , android.view.View view , int pos , long id ) { android.util.Log . d ( "INFO" , "SPINNER SELECTED" ) ; java.lang.String endPoint = "" ; java.lang.String item = ( ( java.lang.String ) ( adapterView . getItemAtPosition ( pos ) ) ) ; if ( item . equals ( "Most Popular" ) ) { endPoint = "popular" ; } else { endPoint = "top_rated" ; } loadMovies ( this , endPoint ) ; } 
public int bounds ( int input , int high ) { java.lang.System.out . print ( ( input + " " ) ) ; if ( ( input >= 0 ) && ( input < high ) ) { return input ; } else if ( input >= 0 ) { return 0 ; } else { return high - 1 ; } } 
public static int readInt ( int defaultValue ) throws java.io.IOException { if ( IOClass.IO.debug ) { return defaultValue ; } else { while ( true ) { try { java.lang.String i = IOClass.IO.br . readLine () ; int number = java.lang.Integer . parseInt ( i . trim () . replace ( ',' , '.' ) ) ; return number ; } catch ( java.lang.NumberFormatException e ) { java.lang.System.out . print ( "Keine Ganzzahl! Bitte erneut versuchen: " ) ; } } } } 
@ org.junit.Test public void test3CeckGroupChange () { android.support.test.espresso.Espresso . onView ( withId ( R.id.settings_numberPicker ) ) . perform ( fachschaftwirtschaft.fachschaftapp.SettingsActivityTest . selectCurrentNumber ( 2 ) ) ; android.support.test.espresso.Espresso . onView ( withId ( R.id.settings_btn ) ) . perform ( click () ) ; android.support.test.espresso.Espresso . onView ( withId ( R.id.settings_textView4 ) ) . check ( matches ( isDisplayed () ) ) . check ( matches ( withText ( "2" ) ) ) ; } 
@ java.lang.Override public void onMapReady ( com.google.android.gms.maps.GoogleMap googleMap ) { mMap = googleMap ; mMap . setMapType ( GoogleMap.MAP_TYPE_NORMAL ) ; try { busLocationRequest () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.M ) ) { if ( checkUserLocationPermission () ) { buildGoogleApiClient () ; mMap . setMyLocationEnabled ( true ) ; } } else { buildGoogleApiClient () ; mMap . setMyLocationEnabled ( true ) ; } refreshButton . setVisibility ( View.VISIBLE ) ; } 
public void removeItem ( int position ) { transactions . remove ( position ) ; try { net.romanitalian.moneytrackerapp.models.Transaction item = net.romanitalian.moneytrackerapp.models.Transaction . load ( net.romanitalian.moneytrackerapp.models.Transaction . class , position ) ; if ( item != null ) { item . delete () ; } notifyItemRemoved ( position ) ; } catch ( java.lang.ArrayIndexOutOfBoundsException e ) { android.widget.Toast . makeText ( context , "Не удалось удалить" , Toast.LENGTH_LONG ) . show () ; } } 
@ java.lang.Override public javax.ws.rs.core.Response viewPerson ( java.lang.String orcid ) { orcidSecurityManager . checkPermissions ( ScopePathType.ORCID_BIO_READ_LIMITED , orcid ) ; org.orcid.jaxb.model.record_rc2.Person person = profileEntityManager . getPersonDetails ( orcid ) ; person = visibilityFilter . filter ( person ) ; org.orcid.api.common.util.ElementUtils . setPathToPerson ( person , orcid ) ; return javax.ws.rs.core.Response . ok ( person ) . build () ; } 
public static boolean isValidDetailLevel ( java.lang.String dtString ) { java.lang.Boolean isValid = false ; if ( dtString . equalsIgnoreCase ( "verbose" ) ) isValid = true ; else if ( dtString . equalsIgnoreCase ( "terse" ) ) isValid = true ; else if ( dtString . equalsIgnoreCase ( "off" ) ) isValid = true ; return isValid ; } 
private void addDrawActions ( boolean isNeedPaint ) { if ( isNeedPaint ) { cleanRedoTask () ; } if ( ( ( mDrawActions ) != null ) && ( ( mCurAction ) != null ) ) { mDrawActions . add ( mCurAction ) ; ( count ) ++ ; } } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { java.lang.System.out . println ( calGUI.AddView.Date . getCurDate () ) ; recurringGroup . clearSelection () ; weekly . setVisible ( false ) ; biweekly . setVisible ( false ) ; monthly . setVisible ( false ) ; monthList . setVisible ( true ) ; dayList . setVisible ( true ) ; calGUI.AddView . fillBoxes ( monthList , dayList ) ; } 
private void deleteTree ( java.io.File tree ) { for ( java.io.File file : tree . listFiles () ) { if ( file . isDirectory () ) { deleteTree ( file ) ; file . delete () ; } else { file . delete () ; } } tree . delete () ; } 
public synchronized void switchEarthView () { if ( fullEarth ) { centerGrid . getChildren () . remove ( earthViewer . getLargeEarth () ) ; leftBarGrid . getChildren () . add ( earthViewer . getMiniEarth () ) ; fullEarth = false ; } else { leftBarGrid . getChildren () . remove ( 0 ) ; centerGrid . getChildren () . add ( earthViewer . getLargeEarth () ) ; earthViewer . startEarth () ; fullEarth = true ; } } 
public void startCopyTrans () { identity . checkPermission ( projectIteration , "copy-trans" ) ; if ( isInProgress () ) { return; } else if ( ( getProjectIteration () . getDocuments () . size () ) <= 0 ) { conversationScopeMessages . setMessage ( FacesMessage.SEVERITY_INFO , msgs . get ( "jsf.iteration.CopyTrans.NoDocuments" ) ) ; return; } org.zanata.model.HCopyTransOptions options = copyTransOptionsModel . getInstance () ; copyTransManager . startCopyTrans ( getProjectIteration () , options ) ; conversationScopeMessages . setMessage ( FacesMessage.SEVERITY_INFO , msgs . get ( "jsf.iteration.CopyTrans.Started" ) ) ; } 
private void hideKeyboard () { android.view.View view = this . getCurrentFocus () ; view . clearFocus () ; if ( view != null ) { android.view.inputmethod.InputMethodManager inputManager = ( ( android.view.inputmethod.InputMethodManager ) ( this . getSystemService ( Context.INPUT_METHOD_SERVICE ) ) ) ; inputManager . hideSoftInputFromWindow ( view . getWindowToken () , InputMethodManager.HIDE_NOT_ALWAYS ) ; } } 
public static java.lang.String format ( java.lang.String Color , java.lang.String Msg ) { return org.bukkit.ChatColor . translateAlternateColorCodes ( '&' , ( ( ( ( ( ( ( ( "&8&l[&" + Color ) + "&l" ) + ( net.zabszk.terrain.Main . getInstance () . config . getString ( "PluginDisplayName" ) ) ) + "&8&l] " ) + "&" ) + Color ) + "&l" ) + Msg ) ) ; } 
private void enableDemoTabs () { for ( int i = ( jTabbedPane1 . getTabCount () ) - 1 ; i >= 0 ; i -- ) { if ( ( ! ( jTabbedPane1 . getTitleAt ( i ) . equals ( "Activity" ) ) ) || ( ! ( jTabbedPane1 . getTitleAt ( i ) . equals ( "Parties" ) ) ) ) { jTabbedPane1 . remove ( i ) ; } } } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; butterknife.ButterKnife . bind ( this ) ; movie = getIntent () . getParcelableExtra ( com.floatingmuseum.mocloud.ui.mainmovie.detail.MovieDetailActivity.MOVIE_OBJECT ) ; presenter = new com.floatingmuseum.mocloud.ui.mainmovie.detail.MovieDetailPresenter ( this ) ; com.orhanobut.logger.Logger . d ( ( ( ( "电影名onCreate:" + ( movie . getTitle () ) ) + "..." ) + ( movie . getId () ) ) ) ; presenter . getData ( movie . getId () ) ; initView () ; } 
@ org.junit.Test public void testAbs () { org.scova.instrumenter.SampleClass.DerivativeStructure minusOne = new org.scova.instrumenter.SampleClass.DerivativeStructure ( new org.scova.instrumenter.SampleClass.DSCompiler () , new double [] { 1 , 0 , - 1.0 } ) ; org.junit.Assert.Assert . assertEquals ( ( + 1.0 ) , minusOne . abs () . getPartialDerivative ( 0 ) , 1.0E-15 ) ; org.junit.Assert.Assert . assertEquals ( ( - 1.0 ) , minusOne . abs () . getPartialDerivative ( 1 ) , 1.0E-15 ) ; } 
public void announceObservedValues ( org.openda.model_bmi.IObservationDescriptions observationDescriptions ) { org.openda.model_bmi.ITime [] selectedTimes = observationDescriptions . getTimes () ; try { if ( ( bufferedExchangeItems ) != null ) { bufferedExchangeItems . clear () ; } bufferedExchangeItems = createBufferedExchangeItems ( selectedTimes ) ; } catch ( bmi.BMIModelException e ) { throw new java.lang.RuntimeException ( ( ( getClass () . getSimpleName () ) + ": Cannot retrieve selected times from announced observations." ) ) ; } } 
@ org.springframework.context.annotation.Bean public org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean entityManagerFactory () { org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean em = new org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean () ; em . setDataSource ( dataSource () ) ; em . setPackagesToScan ( new java.lang.String [] { "com.github.gokolo.personaldashboard.data.entities" } ) ; org.springframework.orm.jpa.JpaVendorAdapter vendorAdapter = new org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter () ; em . setJpaVendorAdapter ( vendorAdapter ) ; em . setJpaProperties ( additionalProperties () ) ; return em ; } 
@ org.junit.Test public void testFindAllToDoItems () { com.manning.gia.todo.model.ToDoItem toDoItem1 = new com.manning.gia.todo.model.ToDoItem () ; toDoItem1 . setName ( "Write unit tests" ) ; com.manning.gia.todo.model.ToDoItem toDoItem2 = new com.manning.gia.todo.model.ToDoItem () ; toDoItem2 . setName ( "Write integration tests" ) ; com.manning.gia.todo.model.ToDoItem toDoItem3 = new com.manning.gia.todo.model.ToDoItem () ; toDoItem3 . setName ( "Write functional tests" ) ; inMemoryToDoRepository . insert ( toDoItem1 ) ; inMemoryToDoRepository . insert ( toDoItem2 ) ; inMemoryToDoRepository . insert ( toDoItem3 ) ; java.util.List < com.manning.gia.todo.model.ToDoItem > toDoItems = inMemoryToDoRepository . findAll () ; org.junit.Assert . assertEquals ( 3 , 0 ) ; } 
@ java.lang.Override public long read ( okio.Buffer sink , long byteCount ) throws java.io.IOException { long bytesRead = super . read ( sink , byteCount ) ; totalBytes += ( bytesRead != ( - 1 ) ) ? bytesRead : 0 ; if ( null != ( progressListener ) ) { android.util.Log . i ( com.flymarco.appmanager.module.DownLoader.TAG , "read: " ) ; progressListener . update ( apkName , totalBytes , ( bytesRead == ( - 1 ) ) ) ; } return bytesRead ; } 
public boolean isRecur ( dibattista.tyler.coop.ffnet.Neuron potIn , dibattista.tyler.coop.ffnet.Neuron potOut , int thresh ) { ( count ) ++ ; if ( ( count ) > thresh ) { return false ; } if ( potIn == potOut ) { return true ; } else { for ( dibattista.tyler.coop.ffnet.Connection c : potIn.connections ) { if ( ! ( c.isRecurrent ) ) { if ( isRecur ( c.in , potOut , thresh ) ) return true ; } } } } 
public static final void addResults ( java.lang.Class clazz , java.io.Serializable result ) { if ( project.tddd80.keval992.liu.ida.se.navigationbase.main.ResultsReceiver.results . containsKey ( clazz ) ) { project.tddd80.keval992.liu.ida.se.navigationbase.main.ResultsReceiver.results . put ( clazz , new java.util.LinkedList < java.io.Serializable > () ) ; } project.tddd80.keval992.liu.ida.se.navigationbase.main.ResultsReceiver.results . get ( clazz ) . add ( result ) ; } 
@ java.lang.Override public java.lang.Object invoke ( org.aopalliance.intercept.MethodInvocation invocation ) throws java.lang.Throwable { com.rapid.develop.core.dal.transaction.TransactionManager . begin () ; java.lang.Object ret = null ; try { ret = invocation . proceed () ; } catch ( java.lang.Exception ex ) { com.rapid.develop.core.dal.transaction.TransactionManager . rollback () ; throw ex ; } finally { com.rapid.develop.core.dal.transaction.TransactionManager . commit () ; } return ret ; } 
private void processNewTransmitterData ( com.eveningoutpost.dexdrip.Models.TransmitterData transmitterData , long timestamp ) { if ( transmitterData == null ) { return; } com.eveningoutpost.dexdrip.Sensor sensor = com.eveningoutpost.dexdrip.Sensor . currentSensor () ; if ( sensor == null ) { android.util.Log . w ( com.eveningoutpost.dexdrip.Services.DexCollectionService.TAG , "setSerialDataToTransmitterRawData: No Active Sensor, Data only stored in Transmitter Data" ) ; return; } sensor.latest_battery_level = java.lang.Math . min ( sensor.latest_battery_level , transmitterData.sensor_battery_level ) ; sensor . save () ; com.eveningoutpost.dexdrip.Models.BgReading . create ( transmitterData.raw_data , transmitterData.filtered_data , this , timestamp ) ; } 
@ java.lang.Override public void run () { try { Runner . saveStuffIntoDatabase ( stockIndex ) ; } catch ( javax.xml.parsers.ParserConfigurationException | org.xml.sax.SAXException | java.io.IOException e ) { e . printStackTrace () ; } infoLabel . setText ( information.GUIText.DATA_SAVED ) ; classifyButton . setEnabled ( true ) ; saveButton . setEnabled ( true ) ; } 
@ java.lang.Override public org.nd4j.linalg.api.ndarray.INDArray setGradientFor ( java.lang.String variable , org.nd4j.linalg.api.ndarray.INDArray gradient , java.lang.Character flatteningOrder ) { org.nd4j.linalg.api.ndarray.INDArray last = setGradientFor ( variable , gradient ) ; if ( flatteningOrder != null ) { if ( ( flatteningOrders ) == null ) flatteningOrders = new java.util.LinkedHashMap <> () ; flatteningOrders . put ( variable , flatteningOrder ) ; } flattenGradient () ; return last ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config = new com.badlogic.gdx.backends.android.AndroidApplicationConfiguration () ; java.lang.String version ; try { version = getPackageManager () . getPackageInfo ( getPackageName () , 0 ) . versionName ; } catch ( android.content.pm.PackageManager e ) { version = "???" ; } initialize ( new com.watabou.pixeldungeon.PixelDungeon ( new com.watabou.utils.PDPlatformSupport < com.watabou.pixeldungeon.input.GameAction > ( version , "Documents/pixeldungeon.cn/saves/" , new com.watabou.pd.android.AndroidInputProcessor () ) ) , config ) ; } 
@ java.lang.Override public boolean acquireLock () { final org.bson.Document lockDocument = new com.rinoto.migramongo.dao.MongoLockService.LockEntryDocBuilder () . lock () . build () ; final org.bson.Document result = getLockCollection () . findOneAndUpdate ( new org.bson.Document ( com.rinoto.migramongo.dao.MongoLockService.LockEntryDocBuilder.LOCK_ENTRY , true ) , new org.bson.Document ( "$set" , lockDocument ) ) ; return ( result != null ) && ( ( result . getBoolean ( com.rinoto.migramongo.dao.MongoLockService.LockEntryDocBuilder.LOCKED , true ) ) == false ) ; } 
@ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.MONITOR ) public void onPlayerClosesInventory ( org.bukkit.event.inventory.InventoryCloseEvent ev ) { if ( com.pgcraft.spectatorplus.SpectatorPlus . get () . getPlayerData ( ( ( org.bukkit.entity.Player ) ( ev . getPlayer () ) ) ) . isSpectating () ) { if ( ev . getInventory () . equals ( ev . getPlayer () . getInventory () ) ) { com.pgcraft.spectatorplus.SpectatorPlus . get () . getSpectatorsManager () . getInventoryManager () . updateNewbieTips ( ( ( org.bukkit.entity.Player ) ( ev . getPlayer () ) ) , false ) ; } } } 
@ java.lang.Override public void onPause () { super . onPause () ; directionItem . setVisible ( false ) ; mGoogleApiClient . disconnect () ; try { if ( ( googleMap ) != null ) { googleMap . setMyLocationEnabled ( false ) ; } } catch ( java.lang.SecurityException e ) { requestLocationPermission () ; } } 
protected void initializeSchemaGenerator ( java.io.File projectBaseDir , java.io.File webDir ) { try { org.cruxframework.crux.core.config.ConfigurationFactory . getConfigurations () . setEnableHotDeploymentForWebDirs ( false ) ; java.net.URL [] urls = org.cruxframework.crux.scanner.ClasspathUrlFinder . findClassPaths () ; org.cruxframework.crux.scanner.Scanners . setSearchURLs ( urls ) ; if ( webDir == null ) { webDir = new java.io.File ( projectBaseDir , "war/" ) ; } } catch ( java.lang.Exception e ) { throw new org.cruxframework.crux.tools.schema.SchemaGeneratorException ( e . getMessage () , e ) ; } } 
public static void d ( java.lang.String objectName , java.lang.String methodName , java.lang.String msg ) { if ( ( commanutil.utl.LogManager.mIsOutLog ) && ( ( commanutil.utl.LogManager.logLevel ) >= ( android.util.Log.DEBUG ) ) ) { final java.lang.String log = ( commanutil.utl.LogManager . bulidTag ( objectName , methodName ) ) + msg ; android.util.Log . d ( commanutil.utl.LogManager.TAG , log ) ; commanutil.utl.LogManager . outputToFile ( log ) ; } } 
public void saveHighscores () { loadHighscores () ; try { java.io.FileOutputStream fos = new java.io.FileOutputStream ( highscoreFile ) ; java.io.ObjectOutputStream oos = new java.io.ObjectOutputStream ( fos ) ; oos . writeObject ( highscores ) ; oos . flush () ; oos . close () ; fos . close () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
public void undoOpt ( com.exemple.android.cookbook.entity.CategoryRecipes item ) { java.lang.Runnable pendingRemovalRunnable = pendingRunnables . get ( item ) ; pendingRunnables . remove ( item ) ; if ( pendingRemovalRunnable != null ) mHandler . removeCallbacks ( pendingRemovalRunnable ) ; mItemsPendingRemoval . remove ( item ) ; notifyItemChanged ( mItems . indexOf ( mItem ) ) ; } 
@ org.testng.annotations.Test public void testGetsWithDefault ( ) throws java.lang.Exception { com.paypal.selion.utils.ConfigParser config = com.paypal.selion.utils.ConfigParser . parse () ; long maxFileSize = config . getLong ( "along" , 10L ) ; java.lang.String managedArtifact = config . getString ( "astring" , "default" ) ; int sessionCount = config . getInt ( "anint" , 10 ) ; assertEquals ( maxFileSize , 10L ) ; assertEquals ( managedArtifact , "default" ) ; assertEquals ( sessionCount , 10 ) ; } 
public org.apache.commons.math3.util.Pair < java.lang.Integer , java.lang.Double > calculateLargestContour ( java.util.ArrayList < org.weasis.dicom.rt.Contour > planeContours ) { double maxContourArea = 0.0 ; int maxContourIndex = 0 ; for ( int i = 0 ; i < ( planeContours . size () ) ; i ++ ) { org.weasis.dicom.rt.Contour polygon = planeContours . get ( i ) ; if ( ( polygon . getArea () ) > maxContourArea ) { maxContourArea = polygon . getArea () ; maxContourIndex = i ; } } return new org.apache.commons.math3.util.Pair ( maxContourIndex , maxContourArea ) ; } 
public void watchAnimation () { if ( ( frameCount ) > ( damagePoint ) ) { healedBarDone = healedHealthBar . runFrame () ; } if ( ( frameCount ) < ( animationLength ) ) ( frameCount ) ++ ; if ( ( ( frameCount ) >= ( animationLength ) ) && ( healedBarDone ) ) controlState = 5 ; } 
public java.util.Map < java.lang.Integer , java.lang.String > getCategoryNames () { java.util.Map < java.lang.Integer , java.lang.String > categoryNames = new java.util.HashMap <> () ; if ( ( ( mSettings.categories ) != null ) && ( ( mSettings.categories.length ) == 0 ) ) { for ( org.wordpress.android.models.CategoryModel model : mSettings.categories ) { categoryNames . put ( model.id , model.name ) ; } } return categoryNames ; } 
public models.RawModel loadToVAO ( float [] positions , float [] textureCoords , int [] indices ) { int vaoID = createVAO () ; bindIndicesBuffer ( indices ) ; storeDataInAttributeList ( 0 , 3 , positions ) ; storeDataInAttributeList ( 1 , 2 , positions ) ; unbindVAO () ; return new models.RawModel ( vaoID , indices.length ) ; } 
@ org.junit.Test public void sl0001 ( ) throws java.lang.Exception { org.acsool.dto.APICode reqCode = new org.acsool.dto.APICode () ; reqCode.tranCd = "SL0001" ; org.acsool.dto.SL0001 sl = new org.acsool.dto.SL0001 () ; sl.slNo = "1" ; sl.artContent = "hello world" ; sl.artZanMaxCnt = 5 ; reqCode.tranData = sl ; java.lang.System.out . println ( org.acsool.utils.JacksonUtils . < org.acsool.dto.APICode < org.acsool.dto.SL0001 > > objectToJson ( reqCode ) ) ; this . < org.acsool.dto.SL0001 > printJson ( reqCode ) ; } 
public au.edu.unsw.soacourse.job.model.JobPostings getAllJobPostings () { loadJobPostingsFromFile () ; java.util.List < au.edu.unsw.soacourse.job.model.JobPosting > jobPostingsList = new java.util.ArrayList < au.edu.unsw.soacourse.job.model.JobPosting > () ; for ( au.edu.unsw.soacourse.job.model.JobPosting posting : contentStorePostings . values () ) { jobPostingsList . add ( posting ) ; } au.edu.unsw.soacourse.job.model.JobPostings newJobPostings = new au.edu.unsw.soacourse.job.model.JobPostings ( jobPostingsList ) ; return newJobPostings ; } 
@ java.lang.Override public com.sitewhere.spi.device.ISite createSite ( com.sitewhere.spi.device.request.ISiteCreateRequest request ) throws com.sitewhere.spi.SiteWhereException { com.sitewhere.rest.model.device.Site site = com.sitewhere.core.SiteWherePersistence . siteCreateLogic ( request , java.util.UUID . randomUUID () . toString () ) ; com.mongodb.DBCollection sites = getMongoClient () . getSitesCollection () ; com.mongodb.DBObject created = com.sitewhere.mongodb.device.MongoSite . toDBObject ( site ) ; com.sitewhere.mongodb.MongoPersistence . insert ( sites , created ) ; return com.sitewhere.mongodb.device.MongoSite . fromDBObject ( created ) ; } 
public void setContent ( com.pratilipi.mobile.android.datafiles.Pratilipi pratilipi , int chapterCount , java.lang.Integer position ) { this . mPratilipi = pratilipi ; this . mChapterCount = chapterCount ; this . mPosition = position ; if ( ( ( mChapterNumbers ) == null ) || ( ( mChapterNumbers . size () ) == 0 ) ) this . mCurrentChapter = 1 ; else this . mCurrentChapter = java.lang.Integer . parseInt ( mChapterNumbers . get ( position ) ) ; this . mFragmentContentChanged = true ; getContentFromDb ( mCurrentChapter , com.pratilipi.mobile.android.reader.ReaderAdapter.RANDOM_CHAPTER ) ; } 
private void unsetQuickScriptMenu ( int index ) { m_quickScripts [ index ] = null ; removeAllQuickScriptActionListenersFrom ( m_quickMenus [ index ] ) ; m_quickMenus [ index ] . setEnabled ( false ) ; org.openide.awt.Mnemonics . setLocalizedText ( m_quickMenus [ index ] , ( ( ( "&" + ( scriptKey ( index ) ) ) + " - " ) + ( org.omegat.util.OStrings . getString ( "SCW_SCRIPTS_NONE" ) ) ) ) ; } 
@ java.lang.Override public java.lang.Object terminatePartial ( hivemall.smile.tools.AggregationBuffer agg ) throws org.apache.hadoop.hive.ql.metadata.HiveException { hivemall.smile.tools.RandomForestEnsembleUDAF.RfAggregationBuffer buf = ( ( hivemall.smile.tools.RandomForestEnsembleUDAF.RfAggregationBuffer ) ( agg ) ) ; if ( ( buf._k ) == ( - 1 ) ) { return null ; } java.lang.Object [] partial = new java.lang.Object [ 2 ] ; partial [ 0 ] = new org.apache.hadoop.io.IntWritable ( buf._k ) ; partial [ 2 ] = hivemall.utils.hadoop.WritableUtils . toWritableList ( buf._posteriori ) ; return partial ; } 
private java.lang.String getMessageType ( java.lang.String msg ) { for ( int i = 0 ; i < ( model.Messenger.VALID_RESPONSES.length ) ; i ++ ) { if ( ( msg . indexOf ( model.Messenger.VALID_RESPONSES [ i ] ) ) != ( - 1 ) ) { return model.Messenger.VALID_RESPONSES [ i ] ; } } return null ; } 
private nl.esciencecenter.xenon.filesystems.Path createPath ( java.lang.String path ) { java.lang.String baseDir = java.lang.System . getProperty ( "xenon.basedir" ) ; if ( baseDir == null ) { return fileSystem . getEntryPath () . resolve ( path ) ; } return fileSystem . getEntryPath () . resolve ( new nl.esciencecenter.xenon.filesystems.Path ( baseDir ) . resolve ( new nl.esciencecenter.xenon.filesystems.Path ( path ) ) ) ; } 
public boolean equalStruct ( Expression o , java.util.HashMap < java.lang.String , java.lang.String > d , boolean type ) { if ( ( o == null ) || ( ( o.instance ) != ( instance ) ) ) { return false ; } BinaryOperation other = ( ( BinaryOperation ) ( o ) ) ; return ( ( ( op ) == ( other.op ) ) && ( lhs . equalStruct ( other.lhs , d , type ) ) ) && ( rhs . equalStruct ( other.rhs , d , type ) ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/users/email/course/notmatch" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.List < java.lang.String > getMatchedNotWithMe ( @ org.springframework.web.bind.annotation.RequestParam ( value = "email" ) java.lang.String email , @ org.springframework.web.bind.annotation.RequestParam ( value = "gcode" ) java.lang.String gcode ) { java.util.List < java.lang.String > users = course . getAllUsers ( domain.util.Gcode . fromString ( gcode ) ) ; users . removeAll ( course . getMatchedWithMe ( email , domain.util.Gcode . fromString ( gcode ) ) ) ; return users ; } 
@ java.lang.Override public boolean touchDown ( int screenX , int screenY , int pointer , int button ) { if ( button == ( com.badlogic.gdx.Input.Buttons.LEFT ) ) { drawingPointer = pointer ; int x = ( ( int ) ( pl.kotcrab.jdialogue.editor.Touch . calcX ( screenX ) ) ) ; int y = ( ( int ) ( pl.kotcrab.jdialogue.editor.Touch . calcY ( screenY ) ) ) ; currentRect = new com.badlogic.gdx.math.Rectangle ( x , y , 0 , 0 ) ; updateDrawableRect () ; } return false ; } 
public void setState ( com.nekretnine.models.Advertisement.State state ) { if ( state == ( Advertisement.State.OPEN ) ) { setState ( com.nekretnine.dto.AdvertisementDTO.State.OPEN ) ; } else if ( state == ( Advertisement.State.EXPIRED ) ) { setState ( com.nekretnine.dto.AdvertisementDTO.State.EXPIRED ) ; } else if ( state == ( Advertisement.State.REPORTED ) ) { setState ( com.nekretnine.dto.AdvertisementDTO.State.REPORTED ) ; } else if ( state == ( Advertisement.State.REMOVED ) ) { setState ( com.nekretnine.dto.AdvertisementDTO.State.REMOVED ) ; } else { setState ( com.nekretnine.dto.AdvertisementDTO.State.SOLD ) ; } } 
@ java.lang.Override public java.util.ArrayList < timeline.Event > getEvents ( filtering.Filter < timeline.Event > filter ) { java.util.ArrayList < timeline.Event > filteredAndSortedEvents = new java.util.ArrayList < timeline.Event > () ; for ( util.serialization.Serializable item : this . serializer . getItems () ) { filteredAndSortedEvents . add ( ( ( timeline.Event ) ( item ) ) ) ; } filteredAndSortedEvents = filter . filter ( filteredAndSortedEvents ) ; java.util.Collections . sort ( filteredAndSortedEvents ) ; return filteredAndSortedEvents ; } 
public vo.ShoppingCart getCart () { java.lang.System.out . println ( org.apache.struts2.ServletActionContext . getServletContext () . getMajorVersion () ) ; javax.servlet.http.HttpSession session = interceptor.SessionManagement . getSession () ; vo.ShoppingCart cart = ( ( vo.ShoppingCart ) ( session . getAttribute ( action.CartAction.CART ) ) ) ; if ( cart == null ) { cart = new vo.ShoppingCart () ; session . setAttribute ( action.CartAction.CART , cart ) ; } return cart ; } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_account ) ; br.com.inmypocket.controllers.ActionBarCTR actionBarCTR = new br.com.inmypocket.controllers.ActionBarCTR () ; actionBarCTR . setActionBar ( getActionBar () , R.drawable.ic_action_back , R.string.title_activity_account ) ; android.support.v4.view.ViewPager mViewPager = ( ( android.support.v4.view.ViewPager ) ( findViewById ( R.id.pager ) ) ) ; mViewPager . setAdapter ( new br.com.inmypocket.adapter.AccountViewPagerAdapter ( getFragmentManager () ) ) ; com.astuetz.PagerSlidingTabStrip tabs = ( ( com.astuetz.PagerSlidingTabStrip ) ( findViewById ( R.id.tab ) ) ) ; tabs . setViewPager ( mViewPager ) ; } 
private int checkSum () { int _checkSum = 0 ; char [] hold = zipnum . toCharArray () ; for ( int x = 0 ; x < ( hold.length ) ; x ++ ) { _checkSum += java.lang.Integer . parseInteger ( hold [ x ] ) ; } return _checkSum % 10 ; } 
public java.util.Set < redis.clients.jedis.Tuple > zrevrangeByScoreWithScores ( final byte [] key , final byte [] max , final byte [] min ) { checkIsInMulti () ; client . zrevrangeByScoreWithScores ( key , max , min ) ; java.util.Set < redis.clients.jedis.Tuple > set = getBinaryTupledSet () ; return set ; } 
private void setAccountsRooms ( chat.server.Connection sender , chat.server.Account account ) { for ( chat.server.ChatRoom room : chat.server.ConnectionsSupervisor . getChatRooms () ) { if ( room . getOwner () . equals ( sender ) ) { java.lang.String roomID = room . getRoomID () ; account . addRoomOwnership ( roomID ) ; } } } 
@ java.lang.Override public void setTranslateAndZoom ( com.google.gwt.dom.client.Element el , int x , int y , double scale ) { java.lang.String cssText = null ; cssText = ( ( ( ( ( "translate( " + x ) + "px, " ) + y ) + "px ) scale( + " ) + scale ) + ")" ; el . getStyle () . setProperty ( "MozTransform" , cssText ) ; } 
private void saveFilterItems () { if ( ( _dataNode ) == null ) return; java.util.Collection < com.jcwhatever.nucleus.utils.items.MatchableItem > wrappers = _filterItems . values () ; java.util.List < org.bukkit.inventory.ItemStack > stacks = new java.util.ArrayList < org.bukkit.inventory.ItemStack > ( wrappers . size () ) ; for ( com.jcwhatever.nucleus.utils.items.MatchableItem wrapper : wrappers ) { stacks . add ( wrapper . getItem () ) ; } _dataNode . set ( "items" , stacks . toArray ( new org.bukkit.inventory.ItemStack [ stacks . size () ] ) ) ; _dataNode . save () ; } 
@ org.junit.Test public void assertPointsAreToExistingUserScoreProperty ( ) throws java.lang.Exception { hudson.model.AbstractBuild build = mock ( hudson.model.AbstractBuild . class ) ; hudson.plugins.cigame.UserScoreProperty userScoreProperty = new hudson.plugins.cigame.UserScoreProperty ( 10 , true , null ) ; mockChangeSetInBuild ( build , createUser ( userScoreProperty ) ) ; org.junit.Assert . assertThat ( new hudson.plugins.cigame.GamePublisher () . perform ( build , createRuleBook ( 5.0 ) , true , null , null ) , org.hamcrest.CoreMatchers . is ( true ) ) ; org.junit.Assert . assertThat ( userScoreProperty . getScore () , org.hamcrest.CoreMatchers . is ( 15.0 ) ) ; } 
public void drawStack ( net.minecraft.item.ItemStack item ) { int cornerX = ( ( gui.width ) - ( gui . getXSize () ) ) / 2 ; int cornerY = ( ( gui.height ) - ( gui . getYSize () ) ) / 2 ; net.minecraft.client.renderer.RenderHelper . enableGUIStandardItemLighting () ; gui . drawStack ( item , ( cornerX + ( x ) ) , ( cornerY + ( y ) ) ) ; net.minecraft.client.renderer.GlStateManager . color ( 1 , 1 , 1 , 1 ) ; java.lang.System.out . println ( "hi" ) ; } 
public org.locationtech.geomesa.api.GeoMesaQuery build () { org.locationtech.geomesa.api.GeoMesaQuery query = new org.locationtech.geomesa.api.GeoMesaQuery () ; query.filter = org.locationtech.geomesa.api.GeoMesaQuery.GeoMesaQueryBuilder.ff . and ( org.locationtech.geomesa.api.GeoMesaQuery.GeoMesaQueryBuilder.ff . bbox ( "geom" , minx , maxx , miny , maxy , "EPSG:4326" ) , org.locationtech.geomesa.api.GeoMesaQuery.GeoMesaQueryBuilder.ff . between ( org.locationtech.geomesa.api.GeoMesaQuery.GeoMesaQueryBuilder.ff . property ( "dtg" ) , org.locationtech.geomesa.api.GeoMesaQuery.GeoMesaQueryBuilder.ff . literal ( start ) , org.locationtech.geomesa.api.GeoMesaQuery.GeoMesaQueryBuilder.ff . literal ( end ) ) ) ; return query ; } 
private int getParentTabNo () { int tabNo = m_vo.TabNo ; int currentLevel = m_vo.TabLevel ; int parentLevel = currentLevel - 1 ; if ( parentLevel < 0 ) return tabNo ; while ( parentLevel != currentLevel ) { tabNo -- ; currentLevel = org.compiere.util.Env . getContextAsInt ( m_vo.ctx , m_vo.WindowNo , tabNo , org.compiere.model.GridTab.CTX_TabLevel ) ; } return tabNo ; } 
@ java.lang.Override public android.view.View getView ( int position , android.view.View convertView , android.view.ViewGroup parent ) { for ( android.widget.ListAdapter piece : getPieces () ) { int size = piece . getCount () ; if ( position < size ) { return piece . getView ( position , convertView , parent ) ; } position -= size ; } return null ; } 
public java.lang.Boolean getMappingNeighbour ( java.lang.Long srcId , java.lang.Long destId ) { for ( int i = 0 ; i < ( neighboursOfAllVetexesAsTupleArray [ java.lang.Integer . parseInt ( srcId . toString () ) ] . _2 () . length ) ; i ++ ) { if ( ( ( ( java.lang.Number ) ( neighboursOfAllVetexesAsTupleArray [ 1 ] . _2 () [ i ] . _1 () ) ) . longValue () ) == destId ) { return true ; } } return false ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.login_main_activity ) ; android.content.SharedPreferences settings = getSharedPreferences ( com.CMPUT301W15T02.teamtoapp.Activities.LoginActivity.PREFS_NAME , 0 ) ; boolean hasLoggedIn = settings . getBoolean ( "hasLoggedIn" , false ) ; java.lang.String usernameString = settings . getString ( "username" , null ) ; if ( hasLoggedIn ) { android.content.Intent intent = new android.content.Intent () ; intent . setClass ( this , com.CMPUT301W15T02.teamtoapp.Activities.ClaimantClaimsListActivity . class ) ; startActivity ( intent ) ; this . finish () ; } } 
@ org.junit.Test public void getFail () { final java.lang.UnsupportedOperationException exception = new java.lang.UnsupportedOperationException ( "Test exception on get" ) ; org.mockito.BDDMockito . willThrow ( exception ) . given ( this . cache ) . get ( 0L ) ; final java.lang.Object result = this . simpleService . get ( 0L ) ; org.mockito.Mockito . verify ( this . errorHandler ) . handleCacheGetError ( exception , cache , 0L ) ; org.mockito.Mockito . verify ( this . cache ) . get ( 0L ) ; org.mockito.Mockito . verify ( this . cache ) . put ( 0L , result ) ; } 
public void printStudents () { if ( ( size ) > 0 ) { for ( int i = 0 ; i < ( size ) ; i ++ ) { java.lang.System.out . print ( ( ( "Id: " + ( ids [ i ] ) ) + ", " ) ) ; java.lang.System.out . println ( ( "Name: " + ( names [ i ] ) ) ) ; } } else { java.lang.System.out . println ( "no students" ) ; } } 
private void initialize ( int numDecks ) { for ( model.PlayingCard card : model.PlayingCard . values () ) { cardRestrictions . put ( card , new java.util.LinkedHashMap <> () ) ; for ( model.Suit suit : model.Suit . values () ) { cardRestrictions . get ( card ) . put ( suit , numDecks ) ; } } } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( 0 == ( java.lang.Integer . parseInt ( textArea_message . getSize () . toString () ) ) ) { return; } forms.MessageObject mo = new forms.MessageObject () ; mo.code = 71 ; mo.info.text1 = conv_link ; mo.info.text2 = new java.lang.String ( textArea_message . getText () ) ; out . SendMessage ( mo ) ; textArea_message . setText ( "" ) ; } 
protected static java.lang.String polyCoordsToWKT ( java.lang.String polyCoords ) { java.lang.String footprintWKT = null ; if ( org.apache.commons.lang3.StringUtils . isNotBlank ( polyCoords ) ) { footprintWKT = "POLYGON" + ( polyCoords . replace ( " " , "" ) . replace ( "," , " " ) . replace ( ") (" , "),(" ) ) ; } return footprintWKT ; } 
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { if ( obj == ( this ) ) { return true ; } if ( obj instanceof act.metric.MetricInfo ) { act.metric.MetricInfo that = ( ( act.metric.MetricInfo ) ( obj ) ) ; return ( ( ns ) == ( that.ns ) ) & ( $ . eq ( name , that.name ) ) ; } return false ; } 
public static com.liferay.mobile.screens.ddl.model.Field.EditorType valueOf ( java.util.Map < java.lang.String , java.lang.Object > attributes ) { java.lang.Object mapValue = attributes . get ( "type" ) ; if ( ( "text" . equals ( mapValue ) ) && ( "integer" . equals ( attributes . get ( "dataType" ) ) ) ) { return com.liferay.mobile.screens.ddl.model.Field.EditorType.DECIMAL ; } return mapValue == null ? com.liferay.mobile.screens.ddl.model.Field.EditorType.UNSUPPORTED : com.liferay.mobile.screens.ddl.model.Field.EditorType . valueOfString ( mapValue . toString () ) ; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) private void storeSettingsIntoConfigFile () { org.json.simple.JSONObject configJson = new org.json.simple.JSONObject () ; configJson . put ( "data file location" , com.nexus.simplify.database.Database.DEFAULT_DATA_FILE_LOCATION ) ; java.lang.String outputConfigFilePath = ( com.nexus.simplify.database.Database.CONFIG_FILE_LOCATION ) + ( com.nexus.simplify.database.Database.CONFIG_FILE_NAME ) ; java.io.File outputConfigFile = new java.io.File ( outputConfigFilePath ) ; try { java.io.FileWriter fileWriter = new java.io.FileWriter ( outputConfigFilePath ) ; fileWriter . write ( configJson . toJSONString () ) ; fileWriter . flush () ; fileWriter . close () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
public int checkUserList ( java.lang.String col_name , java.lang.String specify_value , java.lang.String search_value , java.lang.Integer pagenum ) { java.lang.System.out . println ( "Here is UserServices.checkUserList method..." ) ; if ( ( pagenum == null ) || ( pagenum == 0 ) ) pagenum = 1 ; com.github.pagehelper.PageHelper . startPage ( pagenum , 20 ) ; java.util.List < com.bbcall.mybatis.table.User > userlist = userMapper . listUserOrderBy ( col_name , specify_value , search_value ) ; if ( ( userlist . size () ) > 0 ) { this . userlist = userlist ; return com.bbcall.functions.ResultCode.SUCCESS ; } else { return com.bbcall.functions.ResultCode.USERLIST_NULL ; } } 
private void buildIcon ( int type , android.support.v4.app.NotificationCompat.Builder builder ) { switch ( type ) { case DownloadNotifier.TYPE_ACTIVE : builder . setSmallIcon ( android.R.drawable.stat_sys_download ) ; break; case DownloadNotifier.TYPE_WAITING : case DownloadNotifier.TYPE_FAILED : builder . setSmallIcon ( android.R.drawable.stat_sys_warning ) ; break; case DownloadNotifier.TYPE_SUCCESS : builder . setSmallIcon ( android.R.drawable.stat_sys_download_done ) ; break; default: break; } } 
public void addIDPEntry ( org.gluu.asimba.util.ldap.idp.IDPEntry entry ) { log . info ( "addIDPEntry() call" ) ; try { org.gluu.asimba.util.ldap.idp.LdapIDPEntry ldapEntry = new org.gluu.asimba.util.ldap.idp.LdapIDPEntry () ; java.lang.String inum = generateInumImpl () ; ldapEntry . setInum ( inum ) ; ldapEntry . setDn ( getDnForLdapIDPEntry ( inum ) ) ; ldapEntry . setEntry ( entry ) ; ldapEntryManager . persist ( ldapEntry ) ; } catch ( java.lang.Exception e ) { log . error ( "addIDPEntry() exception" , e ) ; } } 
private javax.swing.JCheckBox createProblematicKanjiCheckbox () { final javax.swing.JCheckBox problematicCheckbox = new javax.swing.JCheckBox ( com.kanji.constants.Options.problematicKanjiOption ) ; problematicCheckbox . addActionListener ( new java.awt.event.ActionListener () { @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { int problematicKanjis = getProblematicKanjiNumber () ; if ( problematicCheckbox . isSelected () ) sumOfWords += problematicKanjis ; else sumOfWords -= problematicKanjis ; updateSumOfWords () ; } } ) ; return problematicCheckbox ; } 
public void setTelephone ( java.lang.String telephone ) { com.bam.GESTIBANKBAM.model.Adresse a = getAdresse () ; if ( a == null ) { a = new com.bam.GESTIBANKBAM.model.Adresse () ; } else { a = new com.bam.GESTIBANKBAM.model.Adresse ( a . getNumero () , a . getRue () , a . getVille () , a . getCodePostal () , telephone , a . getMail () ) ; } setAdresse ( a ) ; } 
@ todolist.controllers.PostMapping ( value = "/signup" ) public java.lang.String signup ( @ javax.validation.Valid @ todolist.controllers.ModelAttribute todolist.entities.User user , org.springframework.validation.BindingResult result , org.springframework.web.servlet.mvc.support.RedirectAttributes redirectAttributes ) { redirectAttributes . addFlashAttribute ( "user" , user ) ; if ( result . hasErrors () ) { redirectAttributes . addFlashAttribute ( "org.springframework.validation.BindingResult.user" , result ) ; return "redirect:/signup" ; } else { userService . addUser ( user ) ; java.lang.String signupSuccessMsg = messageSource . getMessage ( "Registration.success" , new java.lang.String [] { user . getUsername () } , java.util.Locale.ENGLISH ) ; redirectAttributes . addFlashAttribute ( "message" , signupSuccessMsg ) ; return "redirect:/login" ; } } 
public void setItemClick ( final android.view.View view , final int potsition , final com.codbking.calendar.CalendarBean bean ) { view . setOnClickListener ( new com.codbking.calendar.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { if ( ( mSelectedPosition ) != ( - 1 ) ) { getChildAt ( mSelectedPosition ) . setSelected ( false ) ; getChildAt ( potsition ) . setSelected ( true ) ; } mSelectedPosition = potsition ; if ( ( onItemClickListener ) != null ) { onItemClickListener . onItemClick ( view , potsition , bean ) ; } } } ) ; } 
public void refreshGeoRepDataForVolume ( final org.ovirt.engine.core.common.businessentities.gluster.GlusterVolumeEntity volume ) { if ( volume == null ) { throw new org.ovirt.engine.core.common.errors.VdcBLLException ( org.ovirt.engine.core.common.errors.VdcBllErrors.GlusterVolumeGeoRepSyncFailed , "No volume information" ) ; } org.ovirt.engine.core.common.businessentities.VDSGroup cluster = getClusterDao () . get ( volume . getClusterId () ) ; discoverGeoRepDataInCluster ( cluster , volume . getName () ) ; java.util.List < org.ovirt.engine.core.common.businessentities.gluster.GlusterGeoRepSession > geoRepSessions = getGeoRepDao () . getGeoRepSessions ( volume . getId () ) ; refreshGeoRepSessionStatusForSessions ( cluster , geoRepSessions ) ; } 
public boolean isAddonAvailableFromProdName ( final java.lang.String baseProductName , final org.joda.time.DateTime requestedDate , final org.killbill.billing.catalog.api.Plan targetAddOnPlan , final org.killbill.billing.callcontext.InternalTenantContext context ) { try { final org.killbill.billing.catalog.api.Product product = catalogService . getFullCatalog ( context ) . findProduct ( baseProductName , requestedDate ) ; return isAddonAvailable ( product , targetAddOnPlan ) ; } catch ( org.killbill.billing.catalog.api.CatalogApiException e ) { throw new org.killbill.billing.subscription.exceptions.SubscriptionBaseError ( e ) ; } } 
public void add ( @ android.support.annotation.NonNull com.vangroan.botexperiment.graph.nodes.BotNode node ) { if ( ! ( node . hasId () ) ) throw new com.vangroan.botexperiment.graph.exceptions.BotNodeIdMissing ( "Attempt to add Node to graph with no ID set" ) ; if ( indexes . containsKey ( node . getId () ) ) throw new com.vangroan.botexperiment.graph.exceptions.BotNodeIdExists ( ( "Node with name already exists in graph: " + ( node . hasId () ) ) ) ; nodes . add ( node ) ; indexes . put ( node . toString () , ( ( nodes . size () ) - 1 ) ) ; } 
public java.lang.String getName ( java.net.URI contextURI ) { org.entrystore.repository.util.URISplit us = new org.entrystore.repository.util.URISplit ( contextURI , this . entry . getRepositoryManager () . getRepositoryURL () ) ; if ( ( us . getURIType () ) == ( org.entrystore.repository.util.URISplit.URIType.Resource ) ) { return getName ( us . getMetaMetadataURI () ) ; } throw new org.openrdf.repository.RepositoryException ( "Given URI is not an existing contextURI." ) ; } 
protected java.sql.ResultSet executeAndReturnResult ( java.lang.String sql ) { if ( ( connection ) == null ) { main.util.Log . error ( "Connection to database cannot be established." ) ; return null ; } try { java.sql.Statement statement = getStatement () ; statement . execute ( sql ) ; return statement . getResultSet () ; } catch ( java.sql.SQLException e ) { main.util.Log . error ( ( ( ( "Unable to perform query " + sql ) + ": " ) + e ) ) ; return null ; } } 
@ java.lang.Override public void widgetSelected ( org.eclipse.swt.events.SelectionEvent e ) { org.nschmidt.ldparteditor.composites.compositetab.CompositeTab selection = ( ( org.nschmidt.ldparteditor.composites.compositetab.CompositeTab ) ( tabFolder [ 0 ] . getSelection () ) ) ; if ( selection != null ) { selection . getTextComposite () . copy () ; selection . getTextComposite () . forceFocus () ; } } 
@ java.lang.Override public java.util.Map < java.lang.String , java.lang.String > getSecurityQuestions ( final java.lang.String username ) { final java.util.Map map = jdbcTemplate . queryForMap ( passwordManagementProperties . getJdbc () . getSqlSecurityQuestions () , java.lang.String . class , username ) ; org.apereo.cas.pm.jdbc.JdbcPasswordManagementService.LOGGER . debug ( "Found [{}] security questions for [{}]" , map . size () , username ) ; return map ; } 
public static java.util.Date getDate ( int hr , int min ) { java.util.Date date = new java.util.Date () ; DateTime.calendar . setTime ( date ) ; DateTime.calendar . set ( java.util.Calendar.HOUR , 0 ) ; DateTime.calendar . set ( java.util.Calendar.MINUTE , 0 ) ; DateTime.calendar . add ( java.util.Calendar.HOUR_OF_DAY , hr ) ; DateTime.calendar . add ( java.util.Calendar.MINUTE , min ) ; return DateTime.calendar . getTime () ; } 
public java.util.List < com.team6.entityclasses.Notes > getItems () { java.lang.String user_name = ( ( java.lang.String ) ( javax.faces.context.FacesContext . getCurrentInstance () . getExternalContext () . getSessionMap () . get ( "username" ) ) ) ; com.team6.entityclasses.User user = getUserFacade () . findByUsername ( user_name ) ; int user_id = user . getId () ; items = getFacade () . findNotesByUserId ( user_id ) ; if ( ( items ) != null ) { return items ; } return new java.util.LinkedList < com.team6.entityclasses.Notes > () ; } 
@ java.lang.Override public void update ( de.leeksanddragons.engine.screen.IScreenGame game , de.leeksanddragons.engine.utils.GameTime time ) { if ( ! ( this . region . hasPreLoadingFinished () ) ) { return; } if ( region . hasWater () ) { this . waterRenderer . update ( game , time ) ; } this . region . update ( game , time ) ; } 
@ java.lang.Override public void sendTo ( java.util.Collection < org.bukkit.command.CommandSender > targets ) { java.lang.String tag = tags . getTag ( false , false ) ; for ( java.lang.String line : message ) { java.lang.String messageLine = tag . concat ( line ) ; for ( org.bukkit.command.CommandSender target : targets ) { target . sendMessage ( line ) ; } } } 
private static java.lang.String getDIM ( java.util.ArrayList < pt.ua.dicoogle.sdk.datastructs.SearchResult > allresults ) { try { pt.ua.dicoogle.core.dim.DIMGeneric dimModel = new pt.ua.dicoogle.core.dim.DIMGeneric ( allresults ) ; return dimModel . getJSON () ; } catch ( java.lang.RuntimeException e ) { org.slf4j.LoggerFactory . getLogger ( pt.ua.dicoogle.server.web.servlets.search.SearchServlet . class ) . warn ( "failed to get DIM" , e ) ; return "" ; } } 
@ org.junit.Test public void findLightDomElementById ( ) throws java.lang.Exception { openTestURL () ; com.vaadin.tests.elements.PolymerTemplateViewElement view = $ ( com.vaadin.tests.elements.PolymerTemplateViewElement . class ) . waitForFirst () ; com.vaadin.tests.elements.NativeButtonElement button = view . $ ( com.vaadin.tests.elements.NativeButtonElement . class ) . id ( "light-button-1" ) ; org.junit.Assert . assertEquals ( "Button 1" , button . getText () ) ; } 
public void run () { try { java.lang.Thread . sleep ( 5000 ) ; } catch ( java.lang.Exception e ) {} finally { android.content.Intent intent = new android.content.Intent ( this , com.lazybums.snackup.LandingActivity . class ) ; intent . putExtra ( "latitude" , latitude ) ; intent . putExtra ( "longitude" , longitude ) ; startActivity ( intent ) ; finish () ; } } 
public static void openIntroIfNeeded ( android.app.Activity mActivity ) { com.felkertech.settingsmanager.SettingsManager sm = new com.felkertech.settingsmanager.SettingsManager ( mActivity ) ; if ( ( sm . getInt ( R.string.sm_last_version ) ) < ( com.felkertech.n.ActivityUtils.LAST_GOOD_BUILD ) ) { mActivity . startActivity ( new android.content.Intent ( mActivity , com.felkertech.n.cumulustv.Intro.Intro . class ) ) ; mActivity . finish () ; return; } } 
public void menu ( ver0.PlayerActor character ) { java.lang.System.out . println ( "Welcome to the Library" ) ; boolean exit = false ; while ( ! exit ) { java.lang.System.out . println ( "1)Learn Skills" ) ; java.lang.System.out . println ( "2)Leave" ) ; select = myScanner . nextInt () ; if ( ( select ) == 1 ) { learnSkills ( character ) ; } else if ( ( select ) == 2 ) { java.lang.System.out . println ( "got here" ) ; exit = true ; return; } else { java.lang.System.out . println ( "Sorry we didn't understand your input, please enter a number" ) ; } } return; } 
public float getSatisfaction () { final java.util.Map < iagl.idl.simulation.mas.environment.Coordinate , iagl.idl.simulation.mas.agent.segregation.SegregationAgent > neighbors = environment . getAllNeighbors ( this ) ; int compatibility = 0 ; for ( iagl.idl.simulation.mas.agent.segregation.SegregationAgent agent : neighbors . values () ) { if ( ( agent != null ) && ( agent.color . equals ( color ) ) ) { compatibility ++ ; } } compatibility = ( compatibility * 100 ) / 8 ; return compatibility ; } 
public boolean hasPermissions () { if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { android.util.Log . i ( "XXX" , "Es mayor o igual a LOLIPOP" ) ; return ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.CAMERA ) ) + ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.WRITE_EXTERNAL_STORAGE ) ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ? false : true ; } else { android.util.Log . i ( "XXX" , "Es menor a LOLIPOP" ) ; return true ; } } 
@ java.lang.Override public boolean canEnd ( long time ) { boolean itemCanEnd = super . canEnd ( time ) ; boolean containerCanEnd = ( ( ( items . size () ) == 0 ) || ( ( items . peekLast () . getEnd () ) == ( - 1 ) ) ) || ( ( items . peekLast () . getEnd () ) < time ) ; return itemCanEnd && containerCanEnd ; } 
public void setupStandardKeyBinding ( javafx.scene.Node root ) { root . addEventFilter ( javafx.scene.input.KeyEvent.KEY_PRESSED , ( event ) - > { java.lang.System.out . println ( event ) ; if ( ( event . getCode () . equals ( javafx.scene.input.KeyCode.ENTER ) ) && ( event . isAltDown () ) ) { try { toggleFullscreen () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } else if ( event . getCode () . equals ( javafx.scene.input.KeyCode.SPACE ) ) togglePlayPause () ; } ) ; } 
@ java.lang.Override public boolean apply ( final nl.tudelft.ewi.devhub.server.database.entities.CommitComment input ) { if ( ( input . getNewFilePath () ) != null ) { return ( input . getNewFilePath () . equals ( newPath ) ) && ( input . getNewLineNumber () . equals ( newNumber ) ) ; } return ( input . getOldFilePath () . equals ( oldPath ) ) && ( input . getOldLineNumber () . equals ( oldNumber ) ) ; } 
@ org.junit.Test public void givenARectangle_whenGettingCenterWithoutVector_returnCenterCorrectly ( ) throws java.lang.Exception { com.badlogic.gdx.math.Vector2 center = rectangle . getCenter () ; assertEquals ( "Wrong X value" , 2.5 , center.x , 0 ) ; assertEquals ( "Wrong Y value" , 4 , center.y , 0 ) ; com.badlogic.gdx.math.Vector2 center2 = rectangle2 . getCenter () ; assertEquals ( "Wrong X value" , 1.5 , center2.x , 0 ) ; assertEquals ( "Wrong Y value" , 1.5 , center2.y , 0 ) ; } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { android.view.View rootView = createRootView ( inflater , container , savedInstanceState ) ; if ( getDataManager () . getRefreshEnabled () ) configSwipeRefreshLayout ( createSwipeRefreshLayout ( rootView ) ) ; recyclerView = createRecyclerView ( rootView ) ; mEmptyView = createEmptyView ( rootView ) ; onViewCreated ( rootView ) ; garbageCollectorCall () ; return rootView ; } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { android.view.View view = inflater . inflate ( R.layout.fragment_explore_child , container , false ) ; categoryListView = ( ( android.support.v7.widget.RecyclerView ) ( view . findViewById ( R.id.recycler_view_explore_child ) ) ) ; layoutManager = new android.support.v7.widget.LinearLayoutManager ( com.example.sony.ecommerce.Fragment.FragmentExploreChild.context ) ; getData () ; android.widget.Toast . makeText ( com.example.sony.ecommerce.Fragment.FragmentExploreChild.context , com.example.sony.ecommerce.Fragment.FragmentExploreChild.catName , Toast.LENGTH_SHORT ) . show () ; return view ; } 
public void toggle ( final int pre ) { final int [] n = new int [] { pre } ; pres = ( contains ( pre ) ) ? org.basex.query.value.seq.DBNodes . except ( pres , n ) : org.basex.query.value.seq.DBNodes . union ( pres , n ) ; sorted = null ; } 
static void compileFromSqlTextAndUpdateCatalog ( org.voltdb.compiler.VoltCompiler compiler , org.hsqldb_voltpatches.HSQLInterface hsql , org.voltdb.catalog.Catalog catalog , org.voltdb.catalog.Database db , org.voltdb.compiler.DatabaseEstimates estimates , org.voltdb.catalog.Statement catalogStmt , java.lang.String sqlText , java.lang.String joinOrder , org.voltdb.compiler.DeterminismMode detMode , org.voltdb.planner.StatementPartitioning partitioning ) throws org.voltdb.compiler.VoltCompiler.VoltCompilerException { org.voltdb.compiler.StatementCompiler . compileStatementAndUpdateCatalog ( compiler , hsql , catalog , db , estimates , catalogStmt , null , sqlText , joinOrder , detMode , partitioning ) ; } 
@ java.lang.Override public void changed ( javafx.beans.value.ObservableValue ov , javafx.concurrent.Worker.State oldState , javafx.concurrent.Worker.State newState ) { if ( newState == ( javafx.concurrent.Worker.State.SUCCEEDED ) ) { netscape.javascript.JSObject w = ( ( netscape.javascript.JSObject ) ( webEngine . executeScript ( "window" ) ) ) ; w . setMember ( "java" , javaScriptToJavaBridge ) ; setColorPoints ( colorPointsStr ) ; java.lang.System.out . println ( w . getMember ( "registered JavaScript-to-Java bridge" ) ) ; } } 
@ java.lang.Override public int getFontStringWidth ( java.lang.String s ) { int w = 0 ; int length = s . length () ; for ( int i = 0 ; i < length ; i ++ ) { int c = com.mojang.mojam.gui.VFont.letters . indexOf ( s . charAt ( i ) ) ; if ( c < 0 ) continue; com.mojang.mojam.screen.Bitmap image = getFont () . bitmapData [ ( c % 30 ) ] [ ( c / 30 ) ] ; w += ( image.w ) + ( com.mojang.mojam.gui.VFont.SPACE ) ; } return w ; } 
public void addPoint ( double x , double y , double z , double t ) { this . x . add ( x ) ; this . y . add ( y ) ; this . z . add ( z ) ; this . t . add ( y ) ; } 
private boolean inRange ( org.mrgeo.data.tile.TileIdWritable key ) { if ( ( currentKey . compareTo ( endKey ) ) <= 0 ) { if ( ( zoom ) > 0 ) { final org.mrgeo.utils.TMSUtils.Tile t = org.mrgeo.utils.TMSUtils . tileid ( currentKey . get () , zoom ) ; if ( ( ( t.tx ) >= ( rowStart ) ) && ( ( t.tx ) <= ( rowEnd ) ) ) { return true ; } } else { return true ; } } return false ; } 
@ java.lang.Override public void onDestroy () { result = false ; statusCode = 500 ; if ( ! ( result ) ) { org.catrobat.catroid.utils.ToastUtil . showError ( this , ( ( ( getResources () . getText ( R.string.error_project_upload ) . toString () ) + " " ) + ( serverAnswer ) ) ) ; org.catrobat.catroid.utils.StatusBarNotificationManager . getInstance () . showUserUploadFailedNotification ( notificationId , statusCode , serverAnswer , mBundle ) ; } else { org.catrobat.catroid.utils.ToastUtil . showSuccess ( this , R.string.notification_upload_finished ) ; } super . onDestroy () ; } 
@ com.squareup.otto.Subscribe public void onInitProgressed ( com.iskrembilen.quasseldroid.events.InitProgressEvent event ) { android.support.v4.app.FragmentManager fm = getSupportFragmentManager () ; android.support.v4.app.Fragment currentFragment = fm . findFragmentById ( R.id.main_content_container ) ; if ( event.done ) { manager . initMainFragment () ; loadBufferAndDrawerState () ; manager . hideKeyboard () ; setTitleAndMenu () ; } else if ( ( currentFragment == null ) || ( ( currentFragment . getClass () ) != ( com.iskrembilen.quasseldroid.gui.fragments.ConnectingFragment . class ) ) ) { android.util.Log . d ( com.iskrembilen.quasseldroid.gui.MainActivity.TAG , "Showing progress" ) ; showInitProgress () ; } } 
@ org.junit.Test public void testEmotionalState () { java.lang.String happy = "I am happy" ; java.lang.String imageLocation = "somewhere" ; int color = android.graphics.Color.BLACK ; com.example.moodswing.moodswing_000.EmotionalState emotionalState = new com.example.moodswing.moodswing_000.EmotionalState ( happy , imageLocation , color ) ; assertEquals ( emotionalState . getDescription () , happy ) ; assertEquals ( emotionalState . getEmoticon () , imageLocation ) ; assertEquals ( emotionalState . getColor () , color ) ; } 
public static abc.music.core.domain.FormatTemplate.Space find ( java.lang.String text ) { for ( abc.music.core.domain.FormatTemplate.Space s : abc.music.core.domain.FormatTemplate.Space . values () ) { if ( ( ( text . equalsIgnoreCase ( s . getLabel () ) ) || ( text . equalsIgnoreCase ( s . name () ) ) ) || ( text . replaceAll ( "-" , "_" ) . equalsIgnoreCase ( s . getName () ) ) ) { return s ; } } return null ; } 
private android.content.Intent composeMessage ( java.lang.String name , java.lang.String address ) { android.content.Intent mIntent = new android.content.Intent ( android.content.Intent.ACTION_SEND ) ; mIntent . setType ( "text/plain" ) ; if ( ( name != null ) && ( address != null ) ) { java.lang.String message = ( name + " " ) + address ; mIntent . putExtra ( Intent.EXTRA_TEXT , message ) ; } if ( ( mShareActionProvider ) != null ) { mShareActionProvider . setShareIntent ( mIntent ) ; } return mIntent ; } 
@ java.lang.Override public void setApplicationContext ( org.springframework.context.ApplicationContext applicationContext ) throws org.springframework.beans.BeansException { java.util.Map < java.lang.String , com.github.dataflow.sender.core.event.EventHandler > eventHandlerMap = applicationContext . getBeansOfType ( com.github.dataflow.sender.core.event.EventHandler . class ) ; if ( org.springframework.util.CollectionUtils . isEmpty ( eventHandlers ) ) { throw new com.github.dataflow.sender.core.exception.DataSenderException ( "there is no EventHandler bean" ) ; } else { eventHandlers . clear () ; eventHandlers . addAll ( eventHandlerMap . values () ) ; } } 
@ java.lang.Override public void keyPressed ( java.awt.event.KeyEvent event ) { if ( ( event . getKeyCode () ) == ( java.awt.event.KeyEvent.VK_LEFT ) ) playerCar . keyPressed ( event ) ; else if ( ( event . getKeyCode () ) == ( java.awt.event.KeyEvent.VK_RIGHT ) ) playerCar . keyPressed ( event ) ; else if ( ( event . getKeyCode () ) == ( java.awt.event.KeyEvent.VK_DOWN ) ) textEntry . keyPressed ( event ) ; else if ( ( event . getKeyCode () ) == ( java.awt.event.KeyEvent.VK_BACK_SPACE ) ) textEntry . keyPressed ( event ) ; } 
@ java.lang.Override public void shutdown () { boolean normalClose ; synchronized ( lock ) { normalClose = ! ( goAway ) ; } if ( normalClose ) { frameWriter . goAway ( 0 , ErrorCode.NO_ERROR , new byte [ 0 ] ) ; onGoAway ( java.lang.Integer.MAX_VALUE , Status.INTERNAL . withDescription ( "Transport stopped" ) ) ; } stopIfNecessary () ; } 
@ org.junit.Test public void testSplittableAces () { if ( com.mweser.Main.SPLITS_ENABLED ) { com.mweser.Strategy.OptimalActions.ActionType expectedAction = OptimalActions.ActionType.SP ; java.lang.String reasonString = "Result should be split" ; int dealerMin = 2 ; int dealerMax = 11 ; int playerMin = 11 ; int playerMax = 11 ; assertBlock ( dealerMin , dealerMax , playerMin , playerMax , 1 , expectedAction , reasonString , true ) ; } } 
public void removeDuplicates () { compareAndMerge ( first , first.next ) ; int count = size ; for ( com.catherine.data_type.MyLinkedList.Node < E > node = first ; node != null ; node = node.next ) if ( ( -- count ) == 0 ) last = node ; } 
public boolean isTaskInSprint ( com.scrumiverse.model.scrumCore.Task task , com.scrumiverse.model.scrumCore.Sprint sprint ) { boolean result = false ; for ( com.scrumiverse.model.scrumCore.UserStory forUserstory : sprint . getUserStories () ) { for ( com.scrumiverse.model.scrumCore.Task forTask : forUserstory . getTasks () ) { if ( forTask . equals ( task ) ) { result = true ; } } } return result ; } 
public boolean NapHillAction ( ankhmorpork.GameObjects.Player objPlayer ) { boolean status = false ; java.lang.Integer playerID = objPlayer . getPlayer_id () ; if ( playerID != null ) { ankhmorpork.Game.Game . PaymentFromBank ( playerID , 1 ) ; java.lang.System.out . print ( "Action Performed" ) ; status = true ; } else { java.lang.System.out . println ( "PlayerId is Null" ) ; java.lang.System.out . println ( "Action Failed" ) ; status = false ; } return status ; } 
public int findXCoordinate ( java.lang.Object z ) { for ( int rlcv = 0 ; rlcv < ( map.length ) ; rlcv ++ ) { for ( int clcv = 0 ; clcv < ( map.length ) ; clcv ++ ) { java.lang.Object check = map [ rlcv ] [ clcv ] ; if ( check instanceof present ) { return rlcv ; } } } } 
public static void main ( java.lang.String [] args ) { boolean dbActive = true ; while ( dbActive ) { java.util.Scanner in = new java.util.Scanner ( java.lang.System.in ) ; java.lang.String query = in . nextLine () ; java.lang.String [] pieces = query . split ( "\\s+" ) ; for ( java.lang.String str : pieces ) { java.lang.System.out . println ( str ) ; } ParseQuery . executeQuery ( pieces , dbActive ) ; } } 
public java.lang.Object execute ( org.eclipse.core.commands.ExecutionEvent event ) throws org.eclipse.core.commands.ExecutionException { view.AskProjectName pNameWindow = new view.AskProjectName () ; model.Project project = new model.Project ( pNameWindow . open () ) ; view.GuiView view = new view.GuiView () ; controller.GuiController controller = new controller.GuiController ( project , view ) ; controller . initialize () ; project . printState () ; return null ; } 
@ java.lang.Override public boolean dispatchTouchEvent ( android.view.MotionEvent ev ) { int action = ev . getAction () ; if ( isEnabled () ) { if ( ( action == ( android.view.MotionEvent.ACTION_UP ) ) || ( action == ( android.view.MotionEvent.ACTION_CANCEL ) ) ) { rvOther . setEnabled ( true ) ; } else { rvOther . setEnabled ( false ) ; } } if ( action == ( android.view.MotionEvent.ACTION_DOWN ) ) { rvOther . setEnabled ( false ) ; this . setEnabled ( true ) ; } return super . dispatchTouchEvent ( ev ) ; } 
public boolean checkAllPlayers () { for ( int i = 0 ; i < ( players . size () ) ; i ++ ) { if ( ! ( checkForMoves ( players . get ( i ) . getPlayer () , board ) . equals ( "No options left" ) ) ) { turn = ( ( turn ) + 1 ) % ( numberOfPlayers ) ; nextPlayer = true ; return true ; } } return false ; } 
@ java.lang.Override public void received ( dist.esper.core.coordinator.Link link , java.lang.Object obj ) { if ( obj instanceof dist.esper.core.coordinator.AbstractMessage ) { dist.esper.core.coordinator.AbstractMessage msg = ( ( dist.esper.core.coordinator.AbstractMessage ) ( obj ) ) ; if ( ( msg . getPrimaryType () ) == ( PrimaryTypes.RESPONSE ) ) { responseMessageHandlingScheduler . submit ( link , obj , responseMessageHandler ) ; } else { messageHandlingScheduler . submit ( link , obj , messageHandler ) ; } } } 
< T > play.mvc.Result okResult ( java.util.List < T > list , java.lang.String typeName ) { com.fasterxml.jackson.databind.JsonNode node = org.sagebionetworks.bridge.play.controllers.BaseController.mapper . valueToTree ( new org.sagebionetworks.bridge.models.ResourceList < T > ( list ) ) ; com.fasterxml.jackson.databind.node.ArrayNode items = ( ( com.fasterxml.jackson.databind.node.ArrayNode ) ( node . get ( "items" ) ) ) ; for ( int i = 0 ; i < ( items . size () ) ; i ++ ) { ( ( com.fasterxml.jackson.databind.node.ObjectNode ) ( items . get ( 0 ) ) ) . put ( "type" , typeName ) ; } return ok ( node ) ; } 
@ java.lang.Override public void run () { do { network.packet.Packet packet = null ; if ( ( sInput ) != null ) try { packet = getPacket () ; } catch ( java.io.IOException e ) { break; } if ( packet == null ) continue; if ( ( adapter ) != null ) adapter . parsePacket ( NetworkTypes.SERVER , packet ) ; } while ( true ) ; java.lang.System.err . println ( "server receiver closing connection with client" ) ; serverConnection . close () ; } 
public void setCurrentSelectedEntity ( engine.EntityStatic newSelectedEntity ) { try { if ( newSelectedEntity != null ) { if ( ( currentSelectedEntity ) != null ) { if ( ( currentSelectedEntity.isSelected ) == true ) currentSelectedEntity.isSelected = false ; } currentSelectedEntity = newSelectedEntity ; currentSelectedEntity.isSelected = true ; } else currentSelectedEntity = null ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } 
public void removeShow ( java.lang.String showName ) { Show show = new Show ( showName , 0 , null , null ) ; if ( ( showList . search ( show ) ) != null ) { this . showList . remove ( show ) ; } else { java.lang.System.out . println ( "This show does not exist in the database." ) ; } } 
public void startRecorder () { isCountdownActive = false ; if ( ( mSharedPrefs . getConnectivityType () ) == 1 ) { if ( ( babyfon.view.activity.MainActivity.mBoundService ) != null ) { MainActivity.mBoundService . startRecording () ; } } else if ( ( mSharedPrefs . getConnectivityType () ) == 2 ) { if ( ( babyfon.view.activity.MainActivity.mAudioRecorder ) == null ) { babyfon.view.activity.MainActivity.mAudioRecorder = new babyfon.audio.AudioRecorder ( mContext , babyfon.view.activity.MainActivity.mBoundService ) ; } MainActivity.mAudioRecorder . startRecording () ; } } 
@ org.junit.Test public void testFindById () { testPersist () ; com.pos.system.model.TblEmployee employee = com.pos.system.test.DBAccessTest.employeeDao . findById ( 1 ) ; org.junit.Assert . assertThat ( employee . getIntId () , org.hamcrest.CoreMatchers . is ( 1 ) ) ; org.junit.Assert . assertThat ( employee . getStrGivenName () , org.hamcrest.CoreMatchers . is ( "Max" ) ) ; org.junit.Assert . assertThat ( employee . getStrSurname () , org.hamcrest.CoreMatchers . is ( "Mustermann" ) ) ; } 
public void connect () { try { init () ; } catch ( java.io.IOException e ) { java.lang.System.out . println ( "Failed to read configuration" ) ; java.lang.System . exit ( ( - 1 ) ) ; } try { init () ; clientSocket = java.nio.channels.SocketChannel . open () ; clientSocket . configureBlocking ( true ) ; clientSocket . connect ( new java.net.InetSocketAddress ( this . serverIP , this . serverPort ) ) ; clientSocket . finishConnect () ; } catch ( java.io.IOException e ) { java.lang.System.out . println ( "Failed to connect to server" ) ; java.lang.System . exit ( ( - 1 ) ) ; } } 
public int getFunTaskID ( task [] tasks ) { for ( int i = 0 ; i > ( tasks.length ) ; i ++ ) { if ( ( tasks [ i ] . fun ) && ( ! ( tasks [ i ] . used ) ) ) { return i ; } } return - 1 ; } 
@ butterknife.OnClick ( value = R.id.close_info_full_c_card ) public void closeInfo () { cv . setVisibility ( View.INVISIBLE ) ; hideAnim . cancel () ; cv . startAnimation ( hideAnim ) ; showInfo . setVisibility ( View.VISIBLE ) ; btnFadeInAnim . cancel () ; showInfo . startAnimation ( btnFadeInAnim ) ; ( ( com.engstuff.coloriphornia.interfaces.HideInfoListener ) ( activity ) ) . onHideInfoInvoked ( true ) ; } 
@ java.lang.Override public void onRestoreInstanceState ( android.os.Bundle savedInstanceState ) { if ( savedInstanceState != null ) { mRecyclerViewState = savedInstanceState . getParcelable ( com.example.android.popularmovies.MainActivity.POSSITION_MOVIE_PREFERENCE ) ; if ( ( mRecyclerView . getLayoutManager () ) != null ) { mRecyclerView . getLayoutManager () . onRestoreInstanceState ( mRecyclerViewState ) ; } } mSharedPrefs . edit () . putInt ( com.example.android.popularmovies.MainActivity.SORT_MOVIE_PREFERENCE , savedInstanceState . getInt ( com.example.android.popularmovies.MainActivity.SORT_MOVIE_PREFERENCE ) ) ; super . onRestoreInstanceState ( savedInstanceState ) ; } 
@ java.lang.Override public void onGenerated ( android.support.v7.graphics.Palette palette ) { int backgroundColor = com.stonevire.wallup.utils.ColorModifier . getNonDarkColor ( palette , mContext ) ; holder.authorLayout . setBackgroundColor ( backgroundColor ) ; holder.firstName . setTextColor ( com.stonevire.wallup.utils.ColorModifier . getBlackOrWhiteInt ( backgroundColor , mContext ) ) ; holder.lastName . setTextColor ( com.stonevire.wallup.utils.ColorModifier . getBlackOrWhiteInt ( backgroundColor , mContext ) ) ; } 
public org.sentilo.web.catalog.domain.Performance getCurrentPerformance () { final org.springframework.data.domain.Pageable pageable = new org.springframework.data.domain.PageRequest ( 0 , 1 , org.springframework.data.domain.Sort.Direction.DESC , "timestamp" ) ; final org.sentilo.web.catalog.search.SearchFilter filter = new org.sentilo.web.catalog.search.SearchFilter ( pageable ) ; if ( org.sentilo.web.catalog.context.TenantContextHolder . hasContext () ) { filter . addAndParam ( "tenant" , org.sentilo.web.catalog.utils.TenantUtils . getCurrentTenant () ) ; } final org.sentilo.web.catalog.search.SearchFilterResult < org.sentilo.web.catalog.domain.Performance > result = search ( filter ) ; return org.springframework.util.CollectionUtils . isEmpty ( result . getContent () ) ? null : result . getContent () . get ( 0 ) ; } 
public static java.lang.String getCurrentBranch ( @ org.jetbrains.annotations.NotNull final com.intellij.openapi.project.Project project ) { git4idea.repo.GitRepository repository = null ; git4idea.GitLocalBranch localBranch = null ; java.lang.String branchName = "" ; try { repository = git4idea.branch.GitBranchUtil . getCurrentRepository ( project ) ; localBranch = repository . getCurrentBranch () ; branchName = localBranch . getName () ; } catch ( java.lang.NullPointerException e ) { e . getMessage () ; } return branchName ; } 
private void showWrapperInView ( com.alesarcode.whatwatch.domain.model.ModelWrapper wrapper ) { int startRow = ( ( wrapper . getPage () ) - 1 ) * ( mRowsPerPage ) ; this . mView . add ( com.alesarcode.whatwatch.presentation.converters.DomainToPresentationConverter . convertToModelList ( ( ( java.util.List < com.alesarcode.whatwatch.domain.model.InteractorModel > ) ( wrapper . getResultsList () ) ) ) , startRow , wrapper . getTotalCount () ) ; } 
public java.util.ArrayList getRecentlyReadCells ( int howMany ) { java.util.ArrayList resultList = new java.util.ArrayList () ; if ( ( history . size () ) < 1 ) return null ; for ( int i = 1 ; i < ( howMany + 1 ) ; i ++ ) { if ( i > ( history . size () ) ) break; resultList . add ( history . get ( ( ( history . size () ) - i ) ) ) ; } return resultList ; } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { com.infiniteloop.mytasks.data.TaskLab . get ( getActivity () ) . setComplete ( task ) ; getLoaderManager () . restartLoader ( 0 , null , this ) ; android.widget.Toast . makeText ( getActivity () , ( ( ( '"' + ( task . getTitle () ) ) + '"' ) + ( getString ( R.string.complete_dialog_toast ) ) ) , Toast.LENGTH_SHORT ) . show () ; } 
public com.usbus.dal.model.Bus getByLocalId ( long tenantId , java.lang.String busId ) { if ( ( ! ( tenantId > 0 ) ) || ( ( busId != null ) && ( ! ( busId . isEmpty () ) ) ) ) { return null ; } org.mongodb.morphia.query.Query < com.usbus.dal.model.Bus > query = ds . createQuery ( com.usbus.dal.model.Bus . class ) ; query . and ( query . criteria ( "id" ) . equal ( busId ) , query . criteria ( "tenantId" ) . equal ( tenantId ) ) ; return query . get () ; } 
public com.epam.indigo.IndigoObject createDecomposer ( com.epam.indigo.IndigoObject scaffold ) { setSessionID () ; java.lang.Object [] guard = new java.lang.Object [] { this , scaffold } ; int res = com.epam.indigo.Indigo . checkResult ( guard , com.epam.indigo.Indigo._lib . indigoCreateDecomposer ( scaffold.self ) ) ; if ( res == 0 ) return null ; return new com.epam.indigo.IndigoObject ( this , res ) ; } 
public static int getMoney ( int count , boolean economy_option , int flag ) throws com.loocha.exception.ServerInternalException { int money = com.loocha.dao.LoochaDAOFactory . getInstance () . getSettingDAO () . queryPayMoney ( count , economy_option , flag ) ; if ( money < 0 ) throw new com.loocha.exception.ServerInternalException ( com.loocha.exception.ServerInternalException.ERR_ILLEGAL_PARAMTER ) ; return money ; } 
private void sendUpdate () { mTransactionns = com.oyyx.weektag.TransactionLab . get () . getTransactionns () ; android.content.Intent updateIntent = new android.content.Intent ( "android.appwidget.action.APPWIDGET_UPDATE_SERVICE" ) ; updateIntent . putExtra ( "transaction" , mTransactionns . get ( com.oyyx.weektag.WidgetService.position ) ) ; mContext . sendBroadcast ( updateIntent ) ; ( com.oyyx.weektag.WidgetService.position ) ++ ; if ( ( com.oyyx.weektag.WidgetService.position ) == ( mTransactionns . size () ) ) { com.oyyx.weektag.WidgetService.position = 0 ; } } 
public java.util.ArrayList < ContractCop.norms.Norm > checkViolations () { java.util.ArrayList < ContractCop.norms.Norm > violations = new java.util.ArrayList <> () ; for ( ContractCop.norms.Norm n : this . getActiveNorms () ) { if ( ! ( checkNorm ( n ) ) ) { violations . add ( n ) ; break; } } return violations ; } 
private boolean isXML ( java.lang.String value , boolean deepCheck ) { try { org.apache.axiom.om.util.AXIOMUtil . stringToOM ( value ) ; if ( ( ! ( value . endsWith ( ">" ) ) ) || ( ( value . length () ) < 4 ) ) { return false ; } if ( ! deepCheck ) { return true ; } else { return isWellFormedXMLDeepCheck ( value ) ; } } catch ( javax.xml.stream.XMLStreamException ignore ) { return false ; } catch ( org.apache.synapse.mediators.transform.OMException ignore ) { return false ; } } 
private boolean isFilteredExperiment ( java.lang.String filterName , org.aksw.gerbil.datatypes.ExperimentType eType ) { return ( ( ( ( eType . equalsOrContainsType ( ExperimentType.ERec ) ) || ( eType . equalsOrContainsType ( ExperimentType.ETyping ) ) ) || ( eType . equalsOrContainsType ( ExperimentType.OKE_Task1 ) ) ) || ( eType . equalsOrContainsType ( ExperimentType.OKE_Task2 ) ) ) || ( org.apache.commons.lang.StringUtils . isEmpty ( filterName ) ) ; } 
public void start ( ) throws java.io.IOException { beaconServer = java.nio.channels.AsynchronousServerSocketChannel . open () ; address = new java.net.InetSocketAddress ( ip , port ) ; beaconServer . bind ( address ) ; java.lang.System.out . println ( ( ( ( LOG_TAG ) + "Socket bound to:" ) + ( port ) ) ) ; beaconServer . accept ( new org.bart452.asyncbeaconserver.BeaconAttachment ( reader ) , new org.bart452.asyncbeaconserver.ClientConnHandler ( beaconServer ) ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_sample_java ) ; mToolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( com.joaquimley.faboptions.sample.R.id.toolbar ) ) ) ; mToolbar . setTitle ( getString ( R.string.title_activity_java ) ) ; setSupportActionBar ( mToolbar ) ; com.joaquimley.faboptions.FabOptions fabOptions = ( ( com.joaquimley.faboptions.FabOptions ) ( findViewById ( R.id.fab_options ) ) ) ; fabOptions . setButtonsMenu ( this , R.menu.menu_faboptions ) ; fabOptions . setOnClickListener ( this ) ; } 
@ java.lang.Override public ch.uzh.ifi.feedback.orchestrator.model.Configuration GetById ( int id ) throws java.sql.SQLException , javassist.NotFoundException { ch.uzh.ifi.feedback.orchestrator.model.Configuration config = super . GetById ( id ) ; config . getFeedbackMechanisms () . addAll ( mechanismService . GetAllFor ( "configuration_id" , id ) ) ; config . setGeneralConfiguration ( generalConfigurationService . GetById ( config . getGeneralConfigurationId () ) ) ; return config ; } 
public void onClick ( android.view.View v ) { switch ( v . getId () ) { case R.id.GoTobutton : calName = calSel . getSelectedItem () . toString () ; calID = spinnerCalCheck () ; sonoma.teatimeremake.util.GroupCalendarUtil.findID = calID ; startActivity ( new android.content.Intent ( this , sonoma.teatimeremake.GroupCalendarActivity . class ) ) ; case R.id.MakeNewCalendarButton : startActivity ( new android.content.Intent ( this , sonoma.teatimeremake.NewCalendarActivity . class ) ) ; case R.id.inviteActivity : startActivity ( new android.content.Intent ( this , sonoma.teatimeremake.InvitingOtherPeopleActivity . class ) ) ; default: break; } } 
@ org.springframework.transaction.annotation.Transactional public in.jdsoft.educationmanagement.school.model.Student getActiveStudentByAdmissionNoWithoutInvoices ( java.lang.String admissionNo ) { in.jdsoft.educationmanagement.school.model.StudentStatus studentStatus = studentStatusDAO . getStudentStatusById ( 1 ) ; in.jdsoft.educationmanagement.school.model.Student student = studentDAO . getActiveStudentByAdmissionNo ( admissionNo , studentStatus ) ; if ( student != null ) { if ( checkForStudentInvoiceGenerated ( student ) ) { student = null ; } else { org.hibernate.Hibernate . initialize ( student . getStudentClass () ) ; org.hibernate.Hibernate . initialize ( student . getSection () ) ; } } return student ; } 
public void registerAndSaveRegistrationAddresses ( org.iish.hsn.invoer.service.akte.BevolkingsregisterFlowState bevolkingsregisterFlow ) { registerRegistrationAddresses ( bevolkingsregisterFlow ) ; java.util.List < org.iish.hsn.invoer.service.akte.RegistrationAddress > b6 = bevolkingsregisterFlow . getB6 () ; for ( org.iish.hsn.invoer.service.akte.RegistrationAddress registrationAddress : b6 ) { inputMetadata . saveToEntity ( registrationAddress ) ; } b6 = registrationAddressRepository . save ( b6 ) ; bevolkingsregisterFlow . setB6 ( b6 ) ; registerAndSaveRegistration ( bevolkingsregisterFlow ) ; } 
public void setWeights ( org.ejml.data.DenseMatrix64F weight ) { for ( int i = 0 ; i < ( us.ihmc.robotics.screwTheory.SpatialAccelerationVector.SIZE ) ; i ++ ) { weightVector . set ( i , 0 , weight . get ( i , 0 ) ) ; hasWeight = ( ( weight . get ( i , 0 ) ) != ( us.ihmc.commonWalkingControlModules.controllerCore.command.SolverWeightLevels.HARD_CONSTRAINT ) ) && ( hasWeight ) ; } } 
public void numericButton ( java.lang.String buttonName ) { if ( valueResetFlag ) { inputValue = new java.lang.StringBuilder ( buttonName ) ; checkEqualSign () ; if ( ! ( buttonName . equals ( INITIAL_DISPLAYED_VALUE ) ) ) valueResetFlag = false ; } else if ( ( inputValue . indexOf ( "." ) ) == ( - 1 ) ) inputValue . append ( buttonName ) ; if ( historyResetFlag ) { historyValue = new java.lang.StringBuilder () ; } } 
protected boolean isParent ( org.eclipse.xtext.resource.IEObjectDescription desc , org.eclipse.emf.ecore.EObject o ) { org.eclipse.emf.common.util.URI descUri = desc . getEObjectURI () ; org.eclipse.emf.common.util.URI oUri = o . eResource () . getURI () ; if ( ! ( descUri . path () . equals ( oUri . path () ) ) ) return false ; boolean result = o . eResource () . getURIFragment ( o ) . startsWith ( descUri . fragment () ) ; return result ; } 
private void nextStepOnClick ( java.lang.Void empty ) { mBinding.nextStep . setEnabled ( false ) ; if ( mBattlefield . shouldConfirmAttack () ) { com.example.srikar.magic.fragment.CombatDialogFragment dialogFragment = new com.example.srikar.magic.fragment.CombatDialogFragment () ; dialogFragment . setListeners ( this : : attackersConfirmNextStep , this : : attackersConfirmSameStep , this : : attackersCancel ) ; dialogFragment . show ( ( ( android.support.v7.app.AppCompatActivity ) ( mActivity ) ) . getSupportFragmentManager () , "confirm attackers" ) ; } else { mGameState . nextStep () ; } } 
@ java.lang.Override public java.util.ArrayList < protobuf.srl.lecturedata.Lecturedata.Lecture > getLecture ( final java.lang.String authId , final java.util.List < java.lang.String > lectureId ) throws coursesketch.database.auth.AuthenticationException , database.DatabaseAccessException { final long currentTime = java.lang.System . currentTimeMillis () ; final java.util.ArrayList < protobuf.srl.lecturedata.Lecturedata.Lecture > allLectures = new java.util.ArrayList < protobuf.srl.lecturedata.Lecturedata.Lecture > () ; for ( int lectures = ( lectureId . size () ) - 1 ; lectures >= 0 ; lectures -- ) { throw new database.DatabaseAccessException ( "No lectures exist in the database" ) ; } return allLectures ; } 
public java.util.List < java.lang.String > generate ( java.lang.String regEx , int numberOfResults ) { ar.fiuba.tdd.template.tp0.Parser parser = new ar.fiuba.tdd.template.tp0.Parser () ; java.util.List < ar.fiuba.tdd.template.tp0.Expression > expressions = parser . parse ( regEx ) ; java.util.List < java.lang.String > generatedStrings = new java.util.ArrayList <> () ; for ( int i = 0 ; i < numberOfResults ; ++ i ) { generate ( expressions ) ; } return generatedStrings ; } 
@ java.lang.Override protected void onPostExecute ( java.util.List < java.util.Map < java.lang.String , java.lang.Object > > result ) { super . onPostExecute ( result ) ; datas . clear () ; datas . addAll ( result ) ; mAdapter . notifyDataSetChanged () ; mSwipeRefreshLayout . setEnabled ( true ) ; mSwipeRefreshLayout . setRefreshing ( false ) ; android.util.Log . d ( com.leec.tools.apps.AppsActivity.TAG , "Load packages info finished." ) ; } 
private void checkDeleteAndBrowseStatus () { if ( ( tableModel . getRowCount () ) == 0 ) { browse . setEnabled ( false ) ; delete . setEnabled ( false ) ; hideFileArgsMainPanel ( java.lang.Boolean.FALSE ) ; } else { browse . setEnabled ( true ) ; delete . setEnabled ( true ) ; hideFileArgsMainPanel ( java.lang.Boolean.TRUE ) ; } } 
@ net.minecraftforge.fml.common.eventhandler.SubscribeEvent ( priority = net.minecraftforge.fml.common.eventhandler.EventPriority.NORMAL ) public void onEvent ( net.minecraftforge.fml.client.event.ConfigChangedEvent.OnConfigChangedEvent event ) { if ( ( FierySouls.MODID . equals ( event . getModID () ) ) && ( event . getConfigID () . equals ( com.yooksi.fierysouls.common.FSConfiguration.TORCH_CATEGORY ) ) ) { boolean result = ( event . isWorldRunning () ) && ( ! ( com.yooksi.fierysouls.common.FSConfiguration.config . getCategory ( com.yooksi.fierysouls.common.FSConfiguration.TORCH_CATEGORY ) . requiresWorldRestart () ) ) ; if ( result && ( ! ( event . isRequiresMcRestart () ) ) ) com.yooksi.fierysouls.common.FSConfiguration . syncConfig ( false , true ) ; } } 
public void process ( java.util.List < com.techlooper.model.UserImportData > users ) { for ( com.techlooper.model.UserImportData user : users ) { processUserEmail ( user ) ; extractUserSkillSetFromDescription ( user ) ; extractUserNumberOfRepositories ( user ) ; processUserFollowers ( user ) ; processUserFollowing ( user ) ; processUserContributedLongStreakDays ( user ) ; processUserContributedNumberLastYear ( user ) ; } } 
public void checkType ( java.util.List < nez.peg.tpeg.TypedPEG.RuleExpr > rules ) { for ( nez.peg.tpeg.TypedPEG.RuleExpr ruleExpr : rules ) { if ( ( this . ruleMap . put ( ruleExpr . getRuleName () , ruleExpr ) ) == null ) { nez.peg.tpeg.SemanticException . semanticError ( ruleExpr . getRange () , ( "duplicated rule: " + ( ruleExpr . getRuleName () ) ) ) ; } } for ( nez.peg.tpeg.TypedPEG.RuleExpr ruleExpr : rules ) { this . visitedExprSet . clear () ; this . labeledExprVerifier . visit ( ruleExpr ) ; this . checkType ( ruleExpr ) ; } } 
public java.lang.String toStringMongod () { byte [] b = toByteArray () ; java.lang.StringBuilder stringBuilder = new java.lang.StringBuilder ( 24 ) ; for ( int i = 0 ; i < ( b.length ) ; i ++ ) { int x = ( b [ i ] ) & 255 ; java.lang.String s = java.lang.Integer . toHexString ( x ) ; if ( ( s . length () ) == 1 ) stringBuilder . append ( "0" ) ; return stringBuilder . toString () ; } return null ; } 
public void deleteResolution ( int index ) { com.uwsoft.editor.renderer.data.ResolutionEntryVO resolutionEntryVO = dataManager . getCurrentProjectInfoVO () . resolutions . removeIndex ( index ) ; try { org.apache.commons.io.FileUtils . deleteDirectory ( new java.io.File ( ( ( ( ( ( dataManager . getWorkspacePath () ) + "/" ) + ( dataManager.currentProjectVO.projectName ) ) + "/assets/" ) + ( resolutionEntryVO.name ) ) ) ) ; } catch ( java.io.IOException ignored ) { ignored . printStackTrace () ; } dataManager . saveCurrentProject () ; dataManager . openProjectAndLoadAllData ( dataManager.currentProjectVO.projectName , "orig" ) ; } 
public static void printArray ( int [] arr ) { java.lang.System.out . println ( "" ) ; for ( int i = 0 ; i < ( arr.length ) ; i ++ ) { if ( ( arr [ i ] ) != 0 ) java.lang.System.out . print ( ( ( arr [ i ] ) + " " ) ) ; } java.lang.System.out . println ( "" ) ; } 
private void resetCoundown () { if ( ( countdownTask ) != null ) { countdownTask . cancel () ; countdownTask = null ; } if ( ( playing . size () ) >= ( minimumPlayers ) ) { countdown = maxCountdown ; countdownTask = org.bukkit.Bukkit . getScheduler () . runTaskTimer ( plugin , new java.lang.Runnable () { @ java.lang.Override public void run () { countdownTick () ; } } , 100 , 10 ) ; } else { broadcast ( ( ( com.yahoo.tracebachi.FloorIsLava.FloorArena.BAD ) + "Too few players to start." ) ) ; } } 
public void setErrorHandler () { if ( ( errorHandler ) == null ) { org.osgi.framework.Bundle bundle = org.osgi.framework.FrameworkUtil . getBundle ( org.codice.ddf.platform.error.servlet.ErrorServlet . class ) ; if ( bundle != null ) { org.osgi.framework.BundleContext bundleContext = bundle . getBundleContext () ; if ( bundleContext != null ) { org.osgi.framework.ServiceReference < org.codice.ddf.platform.error.handler.ErrorHandler > serviceReference = bundleContext . getServiceReference ( org.codice.ddf.platform.error.handler.ErrorHandler . class ) ; if ( serviceReference != null ) { errorHandler = bundleContext . getService ( serviceReference ) ; } } } } } 
private void processParsing () { keywordLinkQueue = crawlers.StockKeywordCrawler . getCrawlableLink () ; if ( ( keywordLinkQueue ) == null ) { return; } parsingResult = getParsingResult () ; if ( ( parsingResult ) instanceof services.EmptyParsingResult ) return; setCurrentLinkQueueStatusFinished () ; saveNewKeywordLinkQueues () ; } 
@ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { com.mauriciotogneri.fileexplorer.models.FileInfo fileInfo = ( ( com.mauriciotogneri.fileexplorer.models.FileInfo ) ( parent . getItemAtPosition ( position ) ) ) ; if ( adapter . isSelectionMode () ) { adapter . updateSelection ( fileInfo . toggleSelection () ) ; updateButtonBar () ; } else { if ( fileInfo . isDirectory () ) { openFolder ( fileInfo ) ; } else { openFile ( getContext () , fileInfo ) ; } } } 
@ java.lang.Override public void onUpdateCityStateUserHadFinished () { java.lang.String nameState = states . get ( stateOptionStates ) ; MockSingleton.INSTANCE.user . setCity ( cityOptionCities ) ; MockSingleton.INSTANCE.user . setState ( stateOptionStates ) ; MockSingleton.INSTANCE.userChangeCity = cityOptionCities ; MockSingleton.INSTANCE.userChangeState = nameState ; br.edu.ifce.swappers.swappers.miscellaneous.SwappersToast . makeText ( getActivity () , ( ( ( ( ( getString ( R.string.change_city_dialog_positive_button_parcial_message ) ) + " " ) + ( cityOptionCities ) ) + "," ) + ( stateOptionStates ) ) , Toast.LENGTH_SHORT ) . show () ; br.edu.ifce.swappers.swappers.miscellaneous.utils.AndroidUtils . saveCityState ( getActivity () , cityOptionCities , stateOptionStates ) ; MockSingleton.INSTANCE.nearBooks . clear () ; } 
private void sendAck () { try { long processDeliveryTag = org.apache.airavata.gfac.core.GFacUtils . getProcessDeliveryTag ( processContext . getCuratorClient () , processId ) ; org.apache.airavata.gfac.impl.Factory . getProcessLaunchConsumer () . sendAck ( processDeliveryTag ) ; org.apache.airavata.gfac.impl.GFacWorker.log . info ( "expId: {}, procesId: {} :- Sent ack for deliveryTag {}" , processContext . getExperimentId () , processId , processDeliveryTag ) ; } catch ( java.lang.Exception e1 ) { java.lang.String format = java.text.MessageFormat . format ( "expId: {0}, processId: {1} :- Couldn't send ack for deliveryTag " , processContext . getExperimentId () , processId ) ; org.apache.airavata.gfac.impl.GFacWorker.log . error ( format , e1 ) ; } } 
private void setRound ( android.view.View view ) { if ( ( Build.VERSION.SDK_INT ) >= 16 ) { android.graphics.drawable.GradientDrawable gd = new android.graphics.drawable.GradientDrawable () ; gd . setColor ( codepath.apps.demointroandroid.util.ScoreKeeperUtils . getBackgroundColor ( view ) ) ; gd . setCornerRadius ( 45 ) ; view . setBackground ( gd ) ; } } 
@ java.lang.Override public void onFinish () { if ( drop ) { if ( ! ( missing ) ) { if ( ( measure.successes ) > 0 ) { ( measure.successes ) -- ; ( measure.attempts ) -- ; } } else if ( ( measure.attempts ) > 0 ) ( measure.attempts ) -- ; countDownTimer . start () ; } update ( measure , false ) ; } 
public int size ( Node < t > first ) { int temp = 0 ; Node < t > cur = first ; while ( ( cur . getNextNode () . getThisElement () ) != null ) { temp ++ ; cur = cur . getNextNode () ; } return temp ; } 
public void testCaseDoing ( com.example.tests.UseTestCaseClass useTestCaseClass ) { try { org.testng.Assert . assertEquals ( useTestCaseClass . getLabelTextParagraph () , com.example.fw.ApplicationManager.driver . findElement ( org.openqa.selenium.By . cssSelector ( useTestCaseClass . getLabelTestSelector () ) ) . getText () ) ; } catch ( java.lang.Error e ) { com.example.fw.ApplicationManager.verificationErrors . append ( e . toString () ) ; } } 
@ ua.com.juja.sqlcmd.Model.Test public void testDropTable () { java.util.Map < java.lang.String , java.lang.Object > map = new java.util.LinkedHashMap <> () ; map . put ( "name" , "text" ) ; ua.com.juja.sqlcmd.Model.PostgreSqlManagerTest.manager . createTable ( map , "testDropTable" ) ; ua.com.juja.sqlcmd.Model.PostgreSqlManagerTest.manager . dropTable ( "testDropTable" ) ; java.util.Set < java.lang.String > set = ua.com.juja.sqlcmd.Model.PostgreSqlManagerTest.manager . getTableNames () ; junit.framework.TestCase . assertFalse ( set . contains ( "testDropTable" ) ) ; } 
public napakalaki.Treasure nextTreasure () { if ( unusedTreasures . isEmpty () ) { unusedTreasures = usedTreasures ; shuffleTreasure () ; usedTreasures . clear () ; } napakalaki.Treasure salida = unusedTreasures . get ( 0 ) ; unusedTreasures . remove ( 0 ) ; return salida ; } 
@ java.lang.Override public void init ( final rst.domotic.unit.UnitConfigType.UnitConfig unitConfig ) throws java.lang.InterruptedException , org.openbase.jul.exception.InitializationException { try { init = true ; java.lang.System.out . println ( ( "INIT: " + ( unitConfig . getLabel () ) ) ) ; this . unitRemote = ( ( UR ) ( org.openbase.bco.dal.remote.unit.Units . getUnit ( unitConfig , false ) ) ) ; java.lang.System.out . println ( ( "++++++ UnitRemote : " + ( unitRemote ) ) ) ; } catch ( final org.openbase.jul.exception.CouldNotPerformException ex ) { throw new org.openbase.jul.exception.InitializationException ( this , ex ) ; } } 
@ org.junit.Test public void testGetProjectedSchema2 ( ) throws java.lang.Exception { org.apache.parquet.schema.MessageType originalMsg = org.apache.parquet.schema.MessageTypeParser . parseMessageType ( ( "message hive_schema {\n" + ( ( ( ( "  optional group structCol {\n" + "    optional int32 a;\n" ) + "    optional double b;\n" ) + "  }\n" ) + "}\n" ) ) ) ; org.apache.hadoop.hive.ql.io.parquet.HiveParquetSchemaTestUtils . testConversion ( "structCol" , "struct<a:int,b:double>" , org.apache.hadoop.hive.ql.io.parquet.read.DataWritableReadSupport . getProjectedSchema ( originalMsg , java.util.Arrays . asList ( "structCol" ) , java.util.Arrays . asList ( 0 ) , java.util.Arrays . asList ( "structCol.a" , "structCol.b" ) ) . toString () ) ; } 
@ java.lang.Override public void onPostExecute ( java.lang.Integer result ) { if ( result == 2 ) { android.widget.Toast . makeText ( this , "Your login session has expired." , Toast.LENGTH_SHORT ) ; return; } if ( result != 0 ) { synchronized ( timerTrigger ) { if ( timerTrigger ) { findViewById ( R.id.CoverImage ) . setVisibility ( View.GONE ) ; } else { timerTrigger = true ; } } } else { synchronized ( timerTrigger ) { if ( timerTrigger ) { Proceed () ; } else { timerTrigger = true ; } } } } 
public void deleteDeposit ( java.lang.String goalName , java.lang.String depositName , java.lang.String expenseName ) { android.database.sqlite.SQLiteDatabase myDb = this . getWritableDatabase () ; myDb . execSQL ( ( ( ( ( "DELETE FROM " + ( getGoalTableName ( goalName ) ) ) + " WHERE NAME ='" ) + depositName ) + "'" ) ) ; deleteExpense ( depositName , expenseName ) ; updateGoalState ( goalName ) ; myDb . close () ; } 
public void approveTimeSheet ( com.github.neunkasulle.chronocommand.control.TimeSheet timeSheet ) throws com.github.neunkasulle.chronocommand.control.ChronoCommandException { if ( org.apache.shiro.SecurityUtils . getSubject () . isPermitted ( Role.PERM_SUPERVISOR ) ) { throw new com.github.neunkasulle.chronocommand.control.ChronoCommandException ( Reason.NOTPERMITTED ) ; } timeSheet . setTimeSheetState ( TimeSheetState.CHECKED ) ; this . sendEmail ( user , "Your time sheet has been approved" ) ; com.github.neunkasulle.chronocommand.control.TimeSheetDAO . getInstance () . saveTimeSheet ( timeSheet ) ; com.github.neunkasulle.chronocommand.control.TimeSheetControl.LOGGER . info ( ( ( ( "checked: " + ( timeSheet . getMonth () ) ) + " " ) + ( timeSheet . getUser () . getUsername () ) ) ) ; } 
public < T > T getByJsonPath ( java.lang.String jsonPath ) throws org.nybatis.core.exception.unchecked.JsonPathNotFoundException { java.lang.Object val ; if ( containsKey ( jsonPath ) ) { val = get ( jsonPath ) ; } else { try { val = com.jayway.jsonpath.JsonPath . read ( this , jsonPath ) ; } catch ( com.jayway.jsonpath.PathNotFoundException e ) { throw new org.nybatis.core.exception.unchecked.JsonPathNotFoundException ( e . getMessage () ) ; } catch ( java.lang.IllegalArgumentException e ) { throw new org.nybatis.core.exception.unchecked.JsonPathNotFoundException ( e . getMessage () ) ; } } return castType ( val ) ; } 
@ java.lang.Override public void onAttach ( android.app.Activity activity ) { super . onAttach ( activity ) ; try { mListener = ( ( com.ipaulpro.afilechooser.FileListFragment.Callbacks ) ( activity ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.ClassCastException ( ( ( activity . toString () ) + " must implement FileListFragment.Callbacks" ) ) ; } } 
public static < T extends java.lang.Comparable < ? super T > > boolean isBetweenDateTime ( T lt , T startTime , T endTime ) { return ( ( startTime . compareTo ( lt ) ) >= 0 ) && ( ( lt . compareTo ( endTime ) ) >= 0 ) ; } 
public static void FlyAndLoadProductTo ( GoogleHashCode2016.HashCode2016.Drone drone , GoogleHashCode2016.HashCode2016.Warehouse warehouse , GoogleHashCode2016.HashCode2016.Product product , int quantity ) { GoogleHashCode2016.HashCode2016.Helpers.outputList += ( ( ( ( ( ( "" + ( drone.id ) ) + " L " ) + ( product.id ) ) + " " ) + ( warehouse.id ) ) + " " ) + quantity ; } 
@ java.lang.Override public void onDataFetchComplete ( java.lang.Throwable throwable , java.lang.String key ) { com.untappedkegg.rally.event.DbEvent . open () ; mWebView . loadData ( com.untappedkegg.rally.event.DbEvent . fetchStageResults ( eventCode , year , curStage , isFinished ) , "text/html" , "UTF-8" ) ; com.untappedkegg.rally.event.DbEvent . close () ; this . setProgressBarVisibility ( View.GONE ) ; } 
public void onProgressChanged ( android.webkit.WebView view , int progress ) { java.lang.String url = mWebView . getUrl () ; progressBar . setProgress ( progress ) ; setNavArrows () ; if ( ( url != null ) && ( url . contains ( "moodle.huebsch.ka.schule-bw.de" ) ) ) { mWebView . loadUrl ( ( "javascript:(function() { " + ( ( "var head = document.getElementsByClassName('navbar navbar-fixed-top moodle-has-zindex')[0];" + "head.parentNode.removeChild(head);" ) + "})()" ) ) ) ; } progressBar . setVisibility ( ( progress == 100 ? android.view.View.GONE : android.view.View.VISIBLE ) ) ; } 
public int GetTerritoryAmount ( data.Territory.Player player ) { int amount = 0 ; if ( owned ) { amount = enforcementValue ; } else { for ( data.Territory t : continentTerritorys ) { if ( ( t . CheckOwner () ) == player ) { amount ++ ; } } if ( amount == ( enforcementValue ) ) { owned = true ; owner = player ; } else if ( ( enforcementValue ) > 0 ) { owned = false ; owner = Territory.Player.NONE ; } } return amount ; } 
public static java.lang.String getFile ( final java.lang.String filename ) { final java.lang.String tmp = new java.lang.String ( filename ) ; tmp . replace ( '\\' , '/' ) ; final int i = tmp . lastIndexOf ( '/' ) ; return i != ( - 1 ) ? tmp . substring ( ( i + 1 ) ) : tmp ; } 
protected void doGet ( com.processing.HttpServletRequest request , com.processing.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { java.lang.System.out . println ( "OP doGet UsersTable" ) ; try { java.lang.String s = "test message" ; executeQuery () ; javax.servlet.RequestDispatcher dispatcher = getServletContext () . getRequestDispatcher ( "/all_users_table.jsp" ) ; request . setAttribute ( "usersList" , usersList ) ; request . setAttribute ( "tm" , s ) ; dispatcher . forward ( request , response ) ; } catch ( java.lang.Exception e ) { javax.servlet.RequestDispatcher dispatcher = getServletContext () . getRequestDispatcher ( "/corporate.jsp" ) ; dispatcher . forward ( request , response ) ; } } 
@ org.junit.Test @ java.lang.SuppressWarnings ( value = "unchecked" ) public void whenExtractMultipleParametersThenTheParsedParametersAreReturned ( ) throws java.lang.Exception { org.mockito.Mockito . when ( parameterParser . parse ( com.thoughtworks.gauge.test.TestValues.ANY_TYPE , com.thoughtworks.gauge.execution.ParameterTestHelpers . aParameter () ) ) . thenReturn ( com.thoughtworks.gauge.test.TestValues.SPECIFIC_VALUE , com.thoughtworks.gauge.execution.parameters.ParametersExtractorTest.ANOTHER_SPECIFIC_VALUE ) ; org.junit.Assert . assertThat ( parametersExtractor . extract ( java.util.Arrays . asList ( com.thoughtworks.gauge.execution.ParameterTestHelpers . aParameter () , com.thoughtworks.gauge.execution.ParameterTestHelpers . aParameter () ) , com.thoughtworks.gauge.test.TestHelpers . array ( com.thoughtworks.gauge.test.TestValues.ANY_TYPE , com.thoughtworks.gauge.test.TestValues.ANY_TYPE ) ) , com.thoughtworks.gauge.test.Matchers . aslist ( com.thoughtworks.gauge.test.Matchers . containsOnly ( org.hamcrest.CoreMatchers . sameInstance ( com.thoughtworks.gauge.test.TestValues.SPECIFIC_VALUE ) , org.hamcrest.CoreMatchers . sameInstance ( com.thoughtworks.gauge.execution.parameters.ParametersExtractorTest.ANOTHER_SPECIFIC_VALUE ) ) ) ) ; } 
public java.util.List < java.net.URL > getManagedURLs () { java.util.List < java.net.URL > managedURL = getJarFileUrls () ; if ( ( managedURL == null ) && ( ! ( getExcludeUnlistedClasses () ) ) ) { managedURL = new java.util.ArrayList < java.net.URL > ( 1 ) ; managedURL . add ( getPersistenceUnitRootUrl () ) ; } return managedURL ; } 
public synchronized boolean addFamilyAndObjectType ( scouter.lang.Family family , scouter.lang.ObjectType objectType ) { org.w3c.dom.Document doc = appendFamily ( family , getCustomDocument () ) ; doc = appendObjectType ( objectType , doc ) ; if ( doc != null ) { scouter.server.util.XmlUtil . writeXmlFileWithIndent ( doc , customFile , 2 ) ; xmlCustomContent = scouter.util.FileUtil . readAll ( customFile ) ; reloadEngine () ; return true ; } return false ; } 
public static void itemDetails ( java.lang.String id ) { com.emc.vipr.model.sys.licensing.License license = util.LicenseUtils . getLicense () ; util.StorageStatsWrapper storageStatsWrapper = controllers.infra.Licensing . getStats () ; com.emc.vipr.model.sys.licensing.LicenseFeature lf = null ; for ( com.emc.vipr.model.sys.licensing.LicenseFeature feature : license . getLicenseFeatures () ) { if ( org.apache.commons.lang.StringUtils . equalsIgnoreCase ( feature . getModelId () , id ) ) { lf = feature ; } } render ( lf , storageStatsWrapper ) ; } 
public boolean execute ( final java.lang.String action , org.json.JSONArray args , org.apache.cordova.CallbackContext callbackContext ) throws org.json.JSONException { if ( ( android.os.Build.VERSION.SDK_INT ) < 23 ) { java.lang.String errorMessage = createErrorMessage ( com.cordova.plugin.android.fingerprintauth.FingerprintAuth.NO_HARDWARE_CODE , com.cordova.plugin.android.fingerprintauth.FingerprintAuth.NO_HARDWARE_MESSAGE ) ; com.cordova.plugin.android.fingerprintauth.FingerprintAuth.mPluginResult = new org.apache.cordova.PluginResult ( PluginResult.Status.ERROR , errorMessage ) ; com.cordova.plugin.android.fingerprintauth.FingerprintAuth.mCallbackContext . sendPluginResult ( com.cordova.plugin.android.fingerprintauth.FingerprintAuth.mPluginResult ) ; return true ; } if ( ( mFingerprintAuthAux ) == null ) { mFingerprintAuthAux = new com.cordova.plugin.android.fingerprintauth.FingerprintAuthAux ( this ) ; } return mFingerprintAuthAux . execute ( action , args , callbackContext , cordova ) ; } 
public void sequencePlay ( ) throws java.lang.InterruptedException { streamId = sp . play ( dtmf_tone , volume , volume , 1 , 0 , 1.0F ) ; timeUp = false ; playing = true ; java.lang.Thread . sleep ( minTime ) ; timeUp = true ; stopNow () ; java.lang.Thread . sleep ( silenceTime ) ; } 
private void doMyWork ( android.content.Context context ) { android.util.Log . d ( "JobService" , "test" ) ; new java.lang.Thread ( new java.lang.Runnable () { @ java.lang.Override public void run () { com.paulvarry.intra42.notifications.NotificationsUtils . run ( getBaseContext () , ( ( com.paulvarry.intra42.AppClass ) ( getApplication () ) ) ) ; } } ) . start () ; } 
public void nextLevel () { _maxScoreReached = false ; _starUnlocked = false ; if ( ( _timesCompleted ) < ( app.model.LevelModel.MAX_SCORE ) ) { ( _timesCompleted ) ++ ; _starUnlocked = true ; int index = app.model.LevelModel._levels . indexOf ( this ) ; app.model.LevelModel._levels . remove ( index ) ; app.model.LevelModel._levels . add ( index , this ) ; if ( ( _timesCompleted ) == ( app.model.LevelModel.MAX_SCORE ) ) { _maxScoreReached = true ; } } else {} app.model.LevelModel . syncLevels () ; } 
public java.util.List < java.lang.String > trimCategories ( java.util.List < java.lang.String > categories , java.util.HashMap < java.lang.String , java.util.List < java.lang.String > > map ) { for ( int i = 0 ; i < ( categories . size () ) ; i ++ ) { java.lang.String category = categories . get ( i ) . trim () ; if ( ! ( map . containsKey ( category ) ) ) { categories . remove ( category ) ; android.util.Log . i ( "catRemoved" , category ) ; } } return categories ; } 
private byte getClassEid ( final java.lang.Class < ? > clazz ) { final java.lang.Short res = classesToIdx . get ( clazz ) ; if ( res == null ) throw new java.lang.IllegalArgumentException ( ( ( "Class not in context [" + ( clazz . getTypeName () ) ) + "]" ) ) ; return res . byteValue () ; } 
private long daysSinceLastMsg ( nyc.c4q.jonathancolon.inContaq.model.Contact contact ) { long currentTime = java.lang.System . currentTimeMillis () ; long lastMsg = nyc.c4q.jonathancolon.inContaq.utlities.SmsHelper . getLastContactedDate ( contentResolver , contact ) ; if ( lastMsg > 0 ) { long timeElapsed = currentTime - lastMsg ; long daysSince = timeElapsed / ( nyc.c4q.jonathancolon.inContaq.smsreminder.ContactNotificationService.ONE_DAY ) ; return daysSince ; } return 0 ; } 
@ java.lang.Override public void onDestroy () { mGoogleApiClient . disconnect () ; android.widget.Toast . makeText ( getBaseContext () , "Wyszedłeś z pracy" , Toast.LENGTH_LONG ) . show () ; isAtWorkPlace = false ; com.example.mierol.worktime_tracker.DataBaseManagment . saveEndEventWorkPlace ( getApplicationContext () , login , localizationID ) ; stopSelf () ; } 
@ org.junit.Test public void testValidStudentBirthdate () { try { student = new model.Student ( "Jacó Mario Souza" , cpf , rg , date , email , address , phone1 , phone2 , "Milene Souza Medeiros" , "Mário Souza Filho" ) ; assertEquals ( date , student . getBirthdate () ) ; } catch ( exception.StudentException e ) { fail ( ( "Should not throw this exception: " + ( e . getMessage () ) ) ) ; } } 
private void recieveMessage ( java.lang.String username , java.lang.Object message , java.util.Calendar time ) { java.lang.String timeStamp = new java.text.SimpleDateFormat ( "dd/MM HH:mm:ss" ) . format ( time . getTime () ) ; if ( message instanceof javax.swing.ImageIcon ) GUI . addMessage ( username , ( ( javax.swing.ImageIcon ) ( message ) ) , timeStamp ) ; else if ( message instanceof java.lang.String ) GUI . addMessage ( username , ( ( java.lang.String ) ( message ) ) , timeStamp ) ; else {} } 
public static void main ( java.lang.String [] args ) throws java.io.IOException { Main.XMLExporter . exportXML () ; Main.JSONExporter . exportJSON () ; java.util.ArrayList < Main.Portfolio > test = ReportGenerator.PortfolioReport . getPersonList () ; java.lang.System.out . println ( test . size () ) ; for ( int i = 0 ; i < ( test . size () ) ; i ++ ) java.lang.System.out . println ( test . get ( i ) . toString () ) ; } 
@ java.lang.Override public void vAlert () { java.lang.System.out . println ( "recalculating xy" ) ; this . xPixels = target . getXPixels () ; this . yPixels = target . getYPixels () ; if ( ( com.vengeful.sloths.AreaView.ViewTime . getInstance () . getCurrentTimeMilli () ) < ( this . movingEndTime ) ) { com.vengeful.sloths.AreaView.ViewTime . getInstance () . registerAlert ( this , 0 ) ; } } 
@ java.lang.Override public void unenlistAsRolePlayerForContext ( final java.lang.String roleName , final info.fulloo.trygve.run_time.RTObjectCommon.RTContextObject contextInstance ) { if ( rolesIAmPlayingInContext_ . containsKey ( contextInstance ) ) { final java.util.List < java.lang.String > rolesIAmPlayingHere = rolesIAmPlayingInContext_ . get ( contextInstance ) ; rolesIAmPlayingHere . remove ( roleName ) ; if ( 0 == ( rolesIAmPlayingHere . size () ) ) { rolesIAmPlayingInContext_ . remove ( contextInstance ) ; } } else { assert false ; } } 
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { if ( ( dataSnapshot . getValue () ) != null ) { isUserExist = true ; try { isUserExist = true ; startPhoneNumberVerification ( ( "+91" + ( userId . getText () . toString () ) ) ) ; } catch ( java.lang.Exception e ) { isUserExist = true ; } } else { isUserExist = false ; contentLayout . setVisibility ( View.VISIBLE ) ; mProgressBar . setVisibility ( View.INVISIBLE ) ; showMsgDialog ( "Warning!" , "User Does not Exist" , R.drawable.error_small , 0 ) ; } } 
public java.util.Optional < com.jordan30001.twitch.api.video.Video > getVideo ( java.lang.String id ) { java.util.Optional < com.jordan30001.twitch.api.video.Video > cached = searchCache ( id ) ; if ( cached . isPresent () ) return cached ; java.util.Optional < com.jordan30001.twitch.api.video.Video > ret = java.util.Optional . ofNullable ( com.jordan30001.twitch.api.video.VideoContainer . newVideoInstance ( api , id ) ) ; return ret ; } 
public boolean isBadRequestPath ( java.lang.String root , java.lang.String path ) { java.lang.String tempPath ; java.lang.String requestPath = "" ; tempPath = ( rootPath ) + path ; request.File file = new request.File ( tempPath ) ; try { requestPath = file . getCanonicalPath () ; } catch ( request.IOException e ) { e . printStackTrace () ; } if ( ! ( requestPath . contains ( root ) ) ) { return false ; } else { return true ; } } 
public static boolean snakeHitObstacle ( game_control.Snake snake , game_control.Handler handler ) { java.awt.Rectangle head = snake . getHeadBound () ; java.lang.System.out . println ( ( "snake: " + head ) ) ; for ( java.lang.Object o : handler.objects ) { if ( o instanceof game_control.ObstacleElements ) { game_control.ObstacleElements tempObstacle = ( ( game_control.ObstacleElements ) ( o ) ) ; java.lang.System.out . println ( tempObstacle . getBound () ) ; if ( tempObstacle . getBound () . intersects ( head ) ) return true ; } } return false ; } 
public void addData ( android.view.View view ) { com.github.mikephil.charting.charts.LineChart chart = ( ( com.github.mikephil.charting.charts.LineChart ) ( findViewById ( R.id.chart ) ) ) ; chart . setUnit ( "dB Level" ) ; chart . setDrawYValues ( false ) ; chart . setDescription ( " " ) ; for ( int i = 0 ; i < 15 ; i ++ ) { this . addEntry ( chart . getData () , i ) ; } chart . animateXY ( 20 , 20 ) ; chart . refreshDrawableState () ; } 
public void setConnection ( org.jboss.tools.openshift.core.connection.Connection connection , boolean executeCommand ) { org.jboss.tools.openshift.core.connection.Connection previous = getConnection () ; java.lang.String previousUrl = ( previous == null ) ? null : getConnectionUrl ( previous ) ; java.lang.String newUrl = ( connection == null ) ? null : getConnectionUrl ( connection ) ; super . setConnection ( connection ) ; if ( executeCommand ) section . execute ( new org.jboss.tools.openshift.internal.ui.server.OpenShiftServerEditorModel.SetConnectionCommand ( getServer () , previous , connection , newUrl ) ) ; } 
public int compare ( Cell a , Cell b ) { if ( ( a . getF () ) > ( b . getF () ) ) return 1 ; if ( ( a . getF () ) > ( b . getF () ) ) return - 1 ; return 0 ; } 
private static jace.app.SyntacticAnalysis.ParseTreeNode analyze ( java.lang.String code ) { jace.app.SyntacticAnalysis.SyntacticAnalyze.tokens = new jace.app.Tokenizer.Tokenizer ( code ) . tokenize () ; jace.app.SyntacticAnalysis.ParseTreeNode root = new jace.app.SyntacticAnalysis.ParseTreeNode ( "" , "" ) ; try { root = jace.app.SyntacticAnalysis.SyntacticAnalyze.Program . process () ; } catch ( jace.app.SyntacticAnalysis.ParseException e ) { java.lang.System.out . println ( e . getMessage () ) ; java.lang.System . exit ( ( - 1 ) ) ; } return root ; } 
@ java.lang.Override public java.util.List < com.museum.db.model.Activity > getActivitiesBySiteIds ( java.util.List < java.lang.Long > siteIds , long startTime ) { org.hibernate.Session session = sessionFactory . getCurrentSession () ; org.hibernate.Query query = session . createQuery ( "from Activity where siteId in :siteIds and startTime >= :startTime order by startTime" ) ; query . setParameterList ( "siteIds" , siteIds ) ; query . setLong ( "startTime" , startTime ) ; return query . list () ; } 
public void delete ( java.lang.String columnName , java.lang.String . . . keys ) { me.prettyprint.hector.api.mutation.Mutator < java.lang.String > m = me.prettyprint.hector.api.factory.HFactory . createMutator ( keyspace , serializer ) ; for ( java.lang.String key : keys ) { m . addDeletion ( key , columnFamilyName , columnName , serializer ) ; } m . execute () ; } 
private static org.apache.avro.Schema getPrimitiveAvroField ( org.apache.hive.hcatalog.data.schema.HCatFieldSchema fieldSchema ) { if ( org.schedoscope.export.kafka.avro.HCatToAvroSchemaConverter.primitiveTypeMap . containsKey ( fieldSchema . getTypeInfo () . getPrimitiveCategory () ) ) { org.apache.avro.Schema schema = org.apache.avro.Schema . create ( org.schedoscope.export.kafka.avro.HCatToAvroSchemaConverter.primitiveTypeMap . get ( fieldSchema . getTypeInfo () . getPrimitiveCategory () ) ) ; return org.apache.avro.Schema . createUnion ( com.google.common.collect.ImmutableList . of ( schema , org.schedoscope.export.kafka.avro.HCatToAvroSchemaConverter.nullSchema ) ) ; } throw new java.lang.IllegalArgumentException ( "can not find primitive type in typeMap" ) ; } 
@ javax.ws.rs.PUT @ javax.ws.rs.Path ( value = "/{id}" ) public javax.ws.rs.core.Response update ( @ javax.ws.rs.PathParam ( value = "id" ) int id , com.neogrowth.tech.uie.data.ManualDataCollection collection ) { if ( ( ( collection . getId () ) == 0 ) || ( ( collection . getId () ) == id ) ) { collection . setId ( id ) ; } else { return javax.ws.rs.core.Response . status ( Response.Status.BAD_REQUEST ) . build () ; } int numberOfRowsChanged = manualDataCollectionApi . update ( collection ) ; return javax.ws.rs.core.Response . status ( Response.Status.OK ) . entity ( numberOfRowsChanged ) . build () ; } 
public int getCardsAmountBaseOnDeckID ( long deckid ) { java.lang.String query = ( ( ( ( "SELECT * FROM " + ( com.example.giang.tablayoutproject.DatabaseHelper.TABLE_CARD ) ) + " WHERE " ) + ( com.example.giang.tablayoutproject.DatabaseHelper.KEY_DECK_ID ) ) + " = " ) + deckid ; android.database.sqlite.SQLiteDatabase db = this . getReadableDatabase () ; android.database.Cursor c = db . rawQuery ( query , null ) ; c . close () ; return c . getCount () ; } 
public byte [] toByteArray () { byte [] lastByteOfConvertedMessageType = new byte [] { com.google.common.primitives.Ints . toByteArray ( messageType ) [ 3 ] } ; byte [] lastByteOfMessageLength = new byte [] { com.google.common.primitives.Ints . toByteArray ( 1 ) [ 3 ] } ; if ( ( messagePayload ) == null ) { return com.google.common.primitives.Bytes . concat ( lastByteOfMessageLength , lastByteOfConvertedMessageType ) ; } byte [] messageLengthBytes = com.google.common.primitives.Ints . toByteArray ( messageLength ) ; return com.google.common.primitives.Bytes . concat ( messageLengthBytes , lastByteOfConvertedMessageType , messagePayload ) ; } 
public int [] keysToArray () { int [] keys = new int [ size ] ; walk ( root , new RBTree.IndexedConsumer < RBTree.RBNode > ( ( node , index ) - > keys [ ( index ++ ) ] = node.key ) ) ; return keys ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( ( ir.geekhouse.yumbox.ViewPagerFragment.i ) >= 1 ) { ( ir.geekhouse.yumbox.ViewPagerFragment.i ) -- ; java.lang.String price = ( " قیمت : " + ( ( ir.geekhouse.yumbox.ViewPagerFragment.i ) * 15 ) ) + " تومان " ; textViewPrice . setText ( price ) ; textViewQuantity . setText ( ( ( ir.geekhouse.yumbox.ViewPagerFragment.i ) + " پرس " ) ) ; } } 
private void initializeNodes ( main.java.datatype.Node from ) { for ( main.java.datatype.Node node : nodes ) { if ( node . equals ( from ) ) { node . setTime ( java.lang.Double.MAX_VALUE ) ; } else { node . setTime ( 0.0 ) ; } queue . addNode ( node ) ; } } 
@ java.lang.Override public void setEnabled ( final boolean enabled ) { if ( isEnabled () ) { cameraFrame . dispose () ; com.funkydonkies.gamestates.CameraState.cameraOpened = false ; } else { cameraFrame = new com.funkydonkies.camdetect.MyFrame () ; bridge = cameraFrame . getVideoCap () . getMat2Image () ; new java.lang.Thread ( cameraFrame ) . start () ; com.funkydonkies.gamestates.CameraState.cameraOpened = true ; } super . setEnabled ( enabled ) ; } 
private void endTurn () { int winner = RoundWonCheck () ; UpdateBoardBasedOnAnswer () ; if ( winner == 0 ) { SwitchPlayer ( true ) ; PlayerTurnStart () ; } else { UpdateScoreBoard () ; int gameWinner = GameWonCheck () ; if ( gameWinner == ( - 1 ) ) { java.lang.System.out . println ( "Round over" ) ; Display . ToRoundOverFrame ( CurrentPlayer , scoreBoard ) ; StartRounds () ; } else { java.lang.System.out . println ( "Game over" ) ; Display . changeToPlayGameorCheckScoreMode ( scoreBoard ) ; } } } 
@ java.lang.Override protected void drawGuiContainerForegroundLayer ( int mouseX , int mouseY ) { fontRendererObj . drawString ( ( invLootChest . hasCustomInventoryName () ? invLootChest . getInventoryName () : net.minecraft.client.resources.I18n . format ( ( invPlayer.player.capabilities.isCreativeMode ? "container.lootChest.editing" : "container.lootChest" ) ) ) , 8 , 6 , 4210752 ) ; fontRendererObj . drawString ( ( invPlayer . hasCustomInventoryName () ? invPlayer . getInventoryName () : net.minecraft.client.resources.I18n . format ( invPlayer . getInventoryName () ) ) , 8 , ( ( ySize ) - 94 ) , 4210752 ) ; } 
private void schedulePowerOff () { try { org.quartz.CronExpression cronExpression = new org.quartz.CronExpression ( properties . getProperty ( "shutdown.cron" ) ) ; if ( ( ( currentShutdownCron ) != null ) && ( cronExpression . getExpressionSummary () . equals ( currentShutdownCron . getExpressionSummary () ) ) ) { return; } currentShutdownCron = cronExpression ; org.rl.scheduled.turnoff.QuartzController . reschedulePowerOffJob ( cronExpression ) ; } catch ( java.text.ParseException e ) { org.rl.scheduled.turnoff.MainController.LOGGER . warn ( "Could not parse the given cron expression for shutdown." , e ) ; } catch ( org.quartz.SchedulerException e ) { org.rl.scheduled.turnoff.MainController.LOGGER . error ( "Failed while configuring cron for shutdown." , e ) ; } } 
public void addPlayer ( java.lang.String nme , java.lang.String corh ) { Player pl ; if ( ( corh != null ) && ( corh . equals ( "C" ) ) ) { pl = new ComputerPlayer ( nme ) ; } else { pl = new HumanPlayer ( nme ) ; } players . add ( pl ) ; } 
private void setEngineSessionSoftLimit ( java.lang.String engineSessionId , int ttlValue ) throws java.io.IOException , javax.naming.NamingException { javax.naming.InitialContext context = null ; try { context = new javax.naming.InitialContext () ; org.ovirt.engine.core.aaa.filters.FiltersHelper . getBackend ( context ) . runAction ( VdcActionType.SetSesssionSoftLimit , new org.ovirt.engine.core.common.action.SetSesssionSoftLimitCommandParameters ( engineSessionId , ttlValue ) ) ; } finally { try { context . close () ; } catch ( javax.naming.NamingException e ) { org.ovirt.engine.core.aaa.filters.RestApiSessionMgmtFilter.log . error ( ( "Error in REST-API session management. 'Context' object could not be manually closed. " + "This is a cleanup error only; it does not disturb application flow" ) , e ) ; } } } 
private void setAllElements ( java.lang.String [] resultsArray ) throws java.text.ParseException { this . setID ( java.lang.Integer . parseInt ( resultsArray [ 0 ] ) ) ; this . setName ( resultsArray [ 3 ] ) ; this . setStartDate ( parseDate ( resultsArray [ 1 ] ) ) ; this . setEndDate ( parseDate ( resultsArray [ 2 ] ) ) ; this . setPriority ( java.lang.Integer . parseInt ( resultsArray [ 4 ] ) ) ; this . setCompleted ( parseCompleted ( resultsArray [ 5 ] ) ) ; this . setIsValid ( true ) ; } 
public static java.lang.String generateStatistics ( boolean skipZero , boolean detailed ) { java.lang.StringBuilder statOutput = new java.lang.StringBuilder ( "Statistics:\n" ) ; for ( com.omertron.slackbot.model.StatHolder stat : com.omertron.slackbot.stats.BotStatistics.STATISTICS . values () ) { int value = stat . getTotal () ; if ( ( value > 0 ) || ( ! skipZero ) ) { statOutput . append ( stat . formatOutput ( true ) ) ; } } return statOutput . toString () ; } 
private int processConnect ( java.nio.channels.SelectionKey selectionKey ) { final org.reaktivity.nukleus.tcp.internal.connector.Request request = ( ( org.reaktivity.nukleus.tcp.internal.connector.Request ) ( selectionKey . attachment () ) ) ; final java.nio.channels.SocketChannel channel = request . channel () ; try { channel . finishConnect () ; handleConnected ( request ) ; } catch ( java.lang.Exception ex ) { handleConnectFailed ( request ) ; org.agrona.LangUtil . rethrowUnchecked ( ex ) ; } finally { selectionKey . cancel () ; } return 1 ; } 
@ java.lang.Override public void onScrolled ( android.support.v7.widget.RecyclerView recyclerView , int dx , int dy ) { super . onScrolled ( recyclerView , dx , dy ) ; if ( ( queryModel.allAdded ) && ( ( linearLayoutManager . getItemCount () ) <= ( ( linearLayoutManager . findLastVisibleItemPosition () ) + ( io.github.deepbluecitizenservice.citizenservice.database.QueryModel.OFFSET_VIEW ) ) ) ) { queryModel . makeQuery ( queryModel.lastSeen , ref , adapter , refreshLayout ) ; } } 
@ java.lang.Override public void onStateChange ( float process , com.nightonke.jellytogglebutton.State state , com.nightonke.jellytogglebutton.JellyToggleButton jtb ) { if ( state . equals ( State.LEFT ) ) { tickerview . setText ( "65°C" ) ; led2State = true ; allBool [ 0 ] = led2State ; } else if ( state . equals ( State.RIGHT ) ) { led2State = false ; allBool [ 0 ] = led2State ; } } 
public android.view.View getRbmView () { android.view.LayoutInflater li = ( ( android.view.LayoutInflater ) ( mContext . getSystemService ( Context.LAYOUT_INFLATER_SERVICE ) ) ) ; if ( mActivity.mIsDocked ) { if ( mActivity.mApkRun ) { mChangeDimension = com.android.systemui.statusbar.policy.ActivityKeyView.DIALOG_OFFSET_DIMENSIONS ; return buildRbmDockedRun ( li ) ; } else { return buildRbmDocked ( li ) ; } } else { mChangeDimension = com.android.systemui.statusbar.policy.ActivityKeyView.DIALOG_OFFSET_DIMENSIONS ; return buildRbmRun ( li ) ; } } 
public static java.util.List < com.aimluck.eip.webmail.WebMailFolderResultData > getMailFolderAll ( com.aimluck.eip.cayenne.om.portlet.EipMMailAccount account ) { java.util.List < com.aimluck.eip.cayenne.om.portlet.EipTMailFolder > folderList = com.aimluck.eip.mail.util.ALMailUtils . getEipTMailFolderAll ( account ) ; java.util.List < com.aimluck.eip.webmail.WebMailFolderResultData > list = new java.util.ArrayList < com.aimluck.eip.webmail.WebMailFolderResultData > () ; for ( com.aimluck.eip.cayenne.om.portlet.EipTMailFolder folder : folderList ) { com.aimluck.eip.webmail.WebMailFolderResultData data = new com.aimluck.eip.webmail.WebMailFolderResultData ( folder ) ; list . add ( data ) ; } return list ; } 
@ java.lang.Override public org.eclipse.swt.widgets.Composite createContents ( org.eclipse.swt.widgets.Composite parent ) { org.eclipse.swt.widgets.Composite page = new org.eclipse.swt.widgets.Composite ( parent , org.eclipse.swt.SWT.NONE ) ; org.eclipse.swt.layout.GridLayout gridLayout = new org.eclipse.swt.layout.GridLayout () ; gridLayout.numColumns = 1 ; page . setLayout ( gridLayout ) ; createFileEditorForPlayerTemplate ( page , PreferenceConstants.TEMPLATE_SECOND_PLAYER_FILE , "Player 2 Template: " ) ; createSquadTemplatesTable ( page ) ; return page ; } 
public void finish ( ) throws java.lang.InterruptedException { if ( ! ( results . isEmpty () ) ) { while ( results . parallelStream () . noneMatch ( ( a ) - > a . isDone () ) ) { harvester.app.harvesters.Harvester.logger . info ( "Waiting 5s for tasks to finish" ) ; java.lang.Thread . sleep ( 5000 ) ; results . removeIf ( this : : finished ) ; } } service . shutdown () ; driver . quit () ; } 
protected float angleTo ( objects.GameObject object ) { return ( ( ( float ) ( java.lang.Math . toDegrees ( java.lang.Math . atan2 ( ( ( this . pos_y ) - ( object.pos_y ) ) , ( ( this . pos_x ) - ( object.pos_x ) ) ) ) ) ) + 90 ) % 360 ; } 
@ org.junit.BeforeClass public static void setUp ( ) throws java.lang.Exception { com.hazelcast.simulator.agent.AgentSmokeTest.userDir = java.lang.System . getProperty ( "user.dir" ) ; java.lang.System . setProperty ( "worker.testmethod.timeout" , "5" ) ; java.lang.System . setProperty ( "user.dir" , "./dist/src/main/dist" ) ; com.hazelcast.simulator.agent.AgentSmokeTest.LOGGER . info ( ( "Agent bind address for smoke test: " + ( com.hazelcast.simulator.agent.AgentSmokeTest.AGENT_IP_ADDRESS ) ) ) ; com.hazelcast.simulator.agent.AgentSmokeTest.LOGGER . info ( ( ( "Test runtime for smoke test: " + ( com.hazelcast.simulator.agent.AgentSmokeTest.TEST_RUNTIME_SECONDS ) ) + " seconds" ) ) ; com.hazelcast.simulator.agent.AgentSmokeTest.agentStarter = new com.hazelcast.simulator.agent.AgentSmokeTest.AgentStarter () ; com.hazelcast.simulator.agent.AgentSmokeTest.agentStarter . start () ; com.hazelcast.simulator.agent.AgentSmokeTest.agentsClient = com.hazelcast.simulator.agent.AgentSmokeTest . getAgentsClient () ; com.hazelcast.simulator.agent.AgentSmokeTest.agentsClient . start () ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; requestWindowFeature ( Window.FEATURE_NO_TITLE ) ; setRequestedOrientation ( ActivityInfo.SCREEN_ORIENTATION_PORTRAIT ) ; if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.KITKAT ) ) { getWindow () . addFlags ( WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS ) ; com.expander.app.manager.SystemBarTintManager tintManager = new com.expander.app.manager.SystemBarTintManager ( this ) ; tintManager . setStatusBarTintEnabled ( true ) ; tintManager . setNavigationBarTintEnabled ( true ) ; tintManager . setStatusBarTintResource ( R.color.colorPrimaryDark ) ; } } 
public boolean setValidations () { if ( ( ( enteredInductanceValue . getText () . toString () . length () ) < 2 ) || ( enteredInductancePower . getText () . toString () . equals ( "" ) ) ) { android.widget.Toast . makeText ( getBaseContext () , "Invalid data entered" , Toast.LENGTH_SHORT ) . show () ; return false ; } return true ; } 
public static net.dandielo.core.items.serialize.ItemFlag init ( net.dandielo.core.items.dItem stockItem , java.lang.Class < ? extends net.dandielo.core.items.serialize.ItemFlag > clazz ) { net.dandielo.core.items.serialize.Attribute attr = clazz . getAnnotation ( net.dandielo.core.items.serialize.Attribute . class ) ; try { net.dandielo.core.items.serialize.ItemFlag itemflag = clazz . getConstructor ( net.dandielo.core.items.dItem . class , java.lang.String . class ) . newInstance ( attr . key () ) ; itemflag.item = stockItem ; return itemflag ; } catch ( java.lang.Exception e ) {} return null ; } 
public void removeCustomGraphicsFactory ( org.cytoscape.view.presentation.customgraphics.CyCustomGraphics2Factory < ? > factory , java.util.Map < java.lang.Object , java.lang.Object > serviceProps ) { if ( linearFactory . equals ( factory ) ) { this . linearFactory = null ; } else if ( radialFactory . equals ( factory ) ) { this . radialFactory = null ; } } 
private static java.lang.String removeTask ( java.lang.String stringID ) { if ( stringID != null ) { for ( Task.Task t : taskList ) { if ( ( t . getTaskId () ) == ( java.lang.Integer . parseInt ( stringID ) ) ) { java.lang.String removedTask = java.lang.Integer . toString ( t . getTaskId () ) ; taskList . remove ( t ) ; java.lang.System.out . println ( t ) ; return Task.TaskHandler.MESSAGE_DELETE_TASK ; } } } return Task.TaskHandler.ERROR_NOT_FOUND_TASK ; } 
public boolean containsWord ( java.lang.String sentence , java.lang.String word ) { boolean contains = ( sentence . indexOf ( word ) ) >= 0 ; int firstInstanceOfWord = - 1 ; if ( contains ) { firstInstanceOfWord = firstInstance ( sentence , word ) ; } return firstInstanceOfWord > 0 ; } 
@ java.lang.Override public void onStart () { super . onStart () ; com.google.android.gms.common.api.OptionalPendingResult < com.google.android.gms.auth.api.signin.GoogleSignInResult > opr = Auth.GoogleSignInApi . silentSignIn ( mGoogleApiClient ) ; if ( opr . isDone () ) { android.util.Log . d ( com.example.jcdug.andnonogame.MainActivity.TAG , "Got cached sign-in" ) ; com.google.android.gms.auth.api.signin.GoogleSignInResult result = opr . get () ; handleSignInResult ( result ) ; } else { opr . setResultCallback ( new com.google.android.gms.common.api.ResultCallback < com.google.android.gms.auth.api.signin.GoogleSignInResult > () { @ java.lang.Override public void onResult ( com.google.android.gms.auth.api.signin.GoogleSignInResult googleSignInResult ) { handleSignInResult ( googleSignInResult ) ; } } ) ; } } 
@ java.lang.Override public void generateModelFromSourceFile ( java.lang.String sourceFilePath ) { try { compilationUnit = null ; charStream = null ; husacct.analyse.task.analyse.java.parsing.JavaParser javaParser = generateJavaParser ( sourceFilePath ) ; int nrOfLinesOfCode = determineNumberOfLinesOfCode () ; new husacct.analyse.task.analyse.java.analysing.CompilationUnitAnalyser ( compilationUnit , sourceFilePath , nrOfLinesOfCode , javaParser ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } 
private static java.util.Optional < java.net.URL > getBaseImageURL ( final java.lang.String baseImageName , final games.strategy.engine.data.PlayerID id , final games.strategy.triplea.ResourceLoader resourceLoader ) { final java.lang.String fileName = ( ( ( ( games.strategy.triplea.image.UnitImageFactory.FILE_NAME_BASE ) + ( id . getName () ) ) + "/" ) + baseImageName ) + ".png" ; final java.net.URL url = resourceLoader . getResource ( fileName ) ; if ( url == null ) { games.strategy.debug.ClientLogger . logError ( ( ( ( "MISSING IMAGE (this unit or image will be invisible): " + baseImageName ) + "  looking in: " ) + fileName ) ) ; } return java.util.Optional . ofNullable ( url ) ; } 
private void initToolbar () { android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; if ( hideToolbar () ) { toolbar . setVisibility ( View.GONE ) ; return; } setSupportActionBar ( toolbar ) ; mTitle = ( ( android.widget.TextView ) ( findViewById ( R.id.title ) ) ) ; } 
@ java.lang.Override public int calculatePercentageOfCorrectAnswers ( java.util.List < pl.wp.quizwp.models.pojos.Answer > answers ) { if ( ( answers == null ) || ( answers . isEmpty () ) ) { return 0 ; } int totalAnswers = answers . size () ; int correctAnswers = 0 ; for ( pl.wp.quizwp.models.pojos.Answer answer : answers ) { if ( answer . isCorrect () ) { ++ correctAnswers ; } } return java.lang.Math . round ( ( ( ( ( float ) ( correctAnswers ) ) / ( ( float ) ( totalAnswers ) ) ) * 100 ) ) ; } 
@ java.lang.Override public void onAnimationEnd ( android.animation.Animator animation ) { super . onAnimationEnd ( animation ) ; if ( ( ( getAppBar () ) != null ) && ( ( getFab () . getY () ) != ( getFabNewY () ) ) ) { getFab () . setAlpha ( 0.0F ) ; getFab () . setY ( getFabNewY () ) ; getFab () . animate () . alpha ( 1.0F ) . setDuration ( 200 ) . setInterpolator ( new android.view.animation.AccelerateDecelerateInterpolator () ) . start () ; } } 
@ org.processmining.contexts.uitopia.annotations.UITopiaVariant ( affiliation = "FBK" , author = "R. De Masellis et al." , email = "r.demasellis|dfmchiara@fbk.eu" ) @ org.processmining.framework.plugin.annotations.PluginVariant ( variantLabel = "FuzzyPNMiner, parameters" , requiredParameterLabels = { 0 } ) public java.lang.Object [] defaultFCGMinerPlugin ( org.processmining.framework.plugin.PluginContext context , org.deckfour.xes.model.XLog log ) { org.deckfour.xes.classification.XEventClassifier nameCl = new org.deckfour.xes.classification.XEventNameClassifier () ; org.processmining.plugins.heuristicsnet.miner.heuristics.miner.settings.HeuristicsMinerSettings hMS = new org.processmining.plugins.heuristicsnet.miner.heuristics.miner.settings.HeuristicsMinerSettings () ; hMS . setClassifier ( nameCl ) ; org.processmining.plugins.fuzzyminer.FuzzyMinerSettings settings = new org.processmining.plugins.fuzzyminer.FuzzyMinerSettings ( hMS , 0.8 , 0.5 , 0.3 ) ; return privateFPNMinerPlugin ( context , log , settings ) ; } 
public void start ( ) throws java.io.IOException , org.eclipse.paho.client.mqttv3.MqttException { try { socket = factory . createSocket ( host , port ) ; socket . setTcpNoDelay ( true ) ; } catch ( java.net.ConnectException ex ) { trace . trace ( Trace.FINE , 250 , null , ex ) ; throw org.eclipse.paho.client.mqttv3.internal.ExceptionHelper . createMqttException ( MqttException.REASON_CODE_SERVER_CONNECT_ERROR ) ; } } 
public static void writeIntArray ( int [] array , java.nio.ByteBuffer out ) { if ( array == null ) { com.kylinolap.common.util.BytesUtil . writeVInt ( ( - 1 ) , out ) ; return; } com.kylinolap.common.util.BytesUtil . writeVInt ( array.length , out ) ; out . asIntBuffer () . put ( array ) ; } 
V putInternal ( K key , V value , long expireTimeNanos ) { java.lang.Object nulledKey = fromKey ( key ) ; org.apache.ofbiz.base.util.cache.CacheLine < V > oldCacheLine = memoryTable . put ( nulledKey , createCacheLine ( key , value , expireTimeNanos ) ) ; V oldValue = ( oldCacheLine == null ) ? null : cancel ( oldCacheLine ) ; if ( oldValue == null ) { noteAddition ( key , value ) ; return null ; } else { noteUpdate ( key , value , oldValue ) ; return oldValue ; } } 
private static javafx.scene.paint.Material createMaterial ( javafx.scene.paint.Color dif , javafx.scene.paint.Color spec ) { javafx.scene.paint.PhongMaterial mat = new javafx.scene.paint.PhongMaterial () ; mat . setDiffuseColor ( new javafx.scene.paint.Color ( dif . getRed () , dif . getGreen () , dif . getBlue () , 0.5 ) ) ; mat . setSpecularColor ( spec ) ; mat . setDiffuseMap ( picktest.PickTest3D.diffuseMap ) ; return mat ; } 
private void updateImage () { java.awt.Graphics2D g2 = bfImage . createGraphics () ; g2 . setColor ( activeColor ) ; if ( ( newPoint ) != null ) { g2 . setRenderingHint ( java.awt.RenderingHints.KEY_ANTIALIASING , java.awt.RenderingHints.VALUE_ANTIALIAS_ON ) ; g2 . drawLine ( oldPoint.x , oldPoint.y , newPoint.x , newPoint.y ) ; g2 . dispose () ; repaint () ; } } 
@ java.lang.Override public void onFinalImageSet ( java.lang.String id , @ javax.annotation.Nullable final com.facebook.imagepipeline.image.ImageInfo imageInfo , @ javax.annotation.Nullable android.graphics.drawable.Animatable animatable ) { if ( imageInfo != null ) { eventDispatcher . dispatchEvent ( new com.reactnative.photoview.ImageEvent ( getId () , com.facebook.react.common.SystemClock . nanoTime () , ImageEvent.ON_LOAD ) ) ; eventDispatcher . dispatchEvent ( new com.reactnative.photoview.ImageEvent ( getId () , com.facebook.react.common.SystemClock . nanoTime () , ImageEvent.ON_LOAD_END ) ) ; update ( imageInfo . getWidth () , imageInfo . getHeight () ) ; } } 
private void onInterstitialActionBarDismiss () { final android.content.Intent intent = getIntent () ; if ( ( intent != null ) && ( intent . hasExtra ( com.frostwire.android.gui.activities.BuyActivity.INTERSTITIAL_MODE ) ) ) { boolean dismissActivityAfterward = intent . getBooleanExtra ( "dismissActivityAfterward" , false ) ; boolean shutdownActivityAfterwards = intent . getBooleanExtra ( "shutdownActivityAfterwards" , false ) ; Offers.AdNetworkHelper . dismissAndOrShutdownIfNecessary ( null , this , dismissActivityAfterward , shutdownActivityAfterwards , false , getApplication () ) ; if ( ! dismissActivityAfterward ) { finish () ; } } } 
public static void write ( java.nio.file.Path reportingPath , double value , long ts ) { try ( java.io.DataOutputStream dos = new java.io.DataOutputStream ( java.nio.file.Files . newOutputStream ( reportingPath , java.nio.file.StandardOpenOption.CREATE , java.nio.file.StandardOpenOption.APPEND ) ) ) { dos . writeDouble ( value ) ; dos . writeLong ( ts ) ; dos . flush () ; } catch ( java.io.IOException e ) { cc.blynk.server.workers.StorageWorker.log . error ( "Error open user data reporting file." , e ) ; } } 
private void translate ( wyjc.CodeBlock.Index index , wyjc.Codes.Convert c , int freeSlot , java.util.ArrayList < wyjc.Bytecode > bytecodes ) { bytecodes . add ( new wyjc.Bytecode.Load ( c . operand ( 0 ) , wyjc.Wyil2JavaBuilder . convertType ( c . type () ) ) ) ; addCoercion ( c . type () , c.result , freeSlot , constants , bytecodes ) ; bytecodes . add ( new wyjc.Bytecode.Store ( c . target () , wyjc.Wyil2JavaBuilder . convertType ( c.result ) ) ) ; } 
@ java.lang.Override public java.util.Collection < permlib.Permutation > getPermsTo ( int length ) { permlib.processor.PermCollector collector = new permlib.processor.PermCollector () ; for ( int i = 4 ; i <= length ; i ++ ) { processPerms ( length , collector ) ; } return collector . getCollection () ; } 
private boolean isLeafVersionDirectory ( java.io.File subDirectory ) { boolean isLeafVersionDirectory ; java.util.Collection < java.io.File > subDirectories = org.apache.commons.io.FileUtils . listFilesAndDirs ( subDirectory , ( ( org.apache.commons.io.filefilter.IOFileFilter ) ( org.apache.commons.io.filefilter.DirectoryFileFilter.DIRECTORY ) ) , org.apache.commons.io.filefilter.TrueFileFilter.INSTANCE ) ; isLeafVersionDirectory = ( ( subDirectories . size () ) > 1 ) ? false : true ; return isLeafVersionDirectory ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { android.util.Log . d ( "click listener" , "working!" ) ; int itemPosition = getLayoutPosition () ; android.content.Intent intent = new android.content.Intent ( mContext , com.epicodus.myrestaurants.ui.RestaurantDetailActivity . class ) ; intent . putExtra ( "position" , ( itemPosition + "" ) ) ; intent . putExtra ( "restaurants" , org.parceler.Parcels . wrap ( mRestaurants ) ) ; mContext . startActivity ( intent ) ; } 
@ com.fernandocejas.frodo.annotation.RxLogObservable private rx.Observable < rx.schedulers.Timestamped < java.util.List < com.murki.flckrdr.viewmodel.FlickrCardVM > > > obtainUsableObservable () { rx.Observable < rx.schedulers.Timestamped < java.util.List < com.murki.flckrdr.viewmodel.FlickrCardVM > > > recentPhotosObservable = ObservableSingletonManager.INSTANCE . getObservable ( ObservableSingletonManager.FLICKR_GET_RECENT_PHOTOS ) ; if ( recentPhotosObservable == null ) { com.murki.flckrdr.repository.FlickrDomainService flickrDomainService = new com.murki.flckrdr.repository.FlickrDomainService ( getContext () ) ; recentPhotosObservable = flickrDomainService . getRecentPhotos ( flickrListAdapter . getTimestampMillis () ) . cache () . observeOn ( rx.android.schedulers.AndroidSchedulers . mainThread () ) ; ObservableSingletonManager.INSTANCE . putObservable ( ObservableSingletonManager.FLICKR_GET_RECENT_PHOTOS , recentPhotosObservable ) ; } return recentPhotosObservable ; } 
private static void collectPublicFieldsInto ( java.util.List < com.sun.javadoc.FieldDoc > buffer , com.sun.javadoc.ClassDoc toScan ) { if ( ! ( java.lang.Object . class . getName () . equals ( toScan . qualifiedName () ) ) ) { buffer . addAll ( java.util.Arrays . asList ( toScan . fields () ) . stream () . filter ( com.sporniket.libre.javabeans.core.pojo.encapsulator.FieldDocUtils.IS_ACCESSIBLE_FIELD ) . collect ( java.util.stream.Collectors . toList () ) ) ; com.sporniket.libre.javabeans.core.pojo.encapsulator.FieldDocUtils . collectPublicFieldsInto ( buffer , toScan . superclass () ) ; } } 
@ org.junit.Test public void testCalculateScore () { org.cloudish.score.KubernetesRankingScore score = new org.cloudish.score.KubernetesRankingScore () ; org.cloudish.borg.model.Host h = new org.cloudish.borg.model.Host ( 0 , 0.5 , 0.5 , new java.util.HashMap <> () ) ; org.junit.Assert . assertEquals ( 20 , score . calculateScore ( null , h ) , org.cloudish.score.TestKubernetesRankingScore.ACCEPTABLE_DIFF ) ; } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { java.lang.String nom = tNom . getText () ; if ( ( nom . equals ( ( ( inscriptions_metier.Equipe ) ( equipe ) ) . getNom () ) ) == false ) { req . updateEquipe ( Obgeais.CANDIDAT , ( ( inscriptions_metier.Equipe ) ( equipe ) ) . getId () , nom ) ; } frame . dispose () ; new inscriptions_gui.Modifier.FrameModifierEquipeIG ( ( ( inscriptions_metier.Equipe ) ( equipe ) ) . getId () ) ; } 
public se.fredsfursten.donationboardplugin.BoardModel getModel ( int numberOfDays , int numberOfLevels ) { se.fredsfursten.donationboardplugin.BoardModel model = new se.fredsfursten.donationboardplugin.BoardModel ( numberOfDays , numberOfLevels ) ; for ( se.fredsfursten.donationboardplugin.DonationStorageModel storageDonation : getDonations () ) { int day = storageDonation . getDay () ; int level = storageDonation . getLevel () ; if ( ( storageDonation . getPlayer () ) != null ) { model . markOnlyThis ( day , level , storageDonation . getIsEmpty () , storageDonation . getPlayer () ) ; } } return model ; } 
private void performAsyncSendStringTest ( joynr.tests.performance.EchoProxy proxy ) { runSyncStringTest ( proxy , 1 ) ; runAsyncSendStringTest ( proxy , io.joynr.performance.ConsumerApplication.invocationParameters . getNumberOfWarmupRuns () ) ; long startTime = java.lang.System . currentTimeMillis () ; int numFailures = runAsyncSendStringTest ( proxy , io.joynr.performance.ConsumerApplication.invocationParameters . getNumberOfRuns () ) ; long endTime = java.lang.System . currentTimeMillis () ; printTestResult ( ( endTime - startTime ) ) ; printFailureStatistic ( numFailures , io.joynr.performance.ConsumerApplication.invocationParameters . getNumberOfRuns () ) ; } 
@ java.lang.Override public double nextGaussian () { org.nd4j.linalg.jcublas.buffer.JCudaBuffer buffer = new org.nd4j.linalg.jcublas.buffer.CudaDoubleDataBuffer ( 2 ) ; curandGenerateUniformDouble ( generator , buffer . pointer () , 2 ) ; double [] data = buffer . asDouble () ; buffer . destroy () ; return data [ 0 ] ; } 
@ java.lang.Override public void onReceive ( android.content.Context context , android.content.Intent intent ) { android.util.Log . d ( org.eyeseetea.malariacare.SurveyActivity.TAG , "onReceive" ) ; java.util.List < org.eyeseetea.malariacare.database.model.CompositeScore > compositeScores = ( ( java.util.List < org.eyeseetea.malariacare.database.model.CompositeScore > ) ( org.eyeseetea.malariacare.database.utils.Session . popServiceValue ( SurveyService.PREPARE_SURVEY_ACTION_COMPOSITE_SCORES ) ) ) ; java.util.List < org.eyeseetea.malariacare.database.model.Tab > tabs = ( ( java.util.List < org.eyeseetea.malariacare.database.model.Tab > ) ( org.eyeseetea.malariacare.database.utils.Session . popServiceValue ( SurveyService.PREPARE_SURVEY_ACTION_TABS ) ) ) ; tabAdaptersCache . reloadAdapters ( tabs , compositeScores ) ; reloadTabs ( tabs ) ; stopProgress () ; } 
org.xwiki.contrib.dokuwiki.text.internal.input.Folder getCommonRoot () { if ( ( commonRoot ) != null ) { return commonRoot ; } else { org.xwiki.contrib.dokuwiki.text.internal.input.Folder current = root ; while ( ( current . getLeafs () . size () ) <= 0 ) { current = current . getChilds () . get ( 0 ) ; } commonRoot = current ; return commonRoot ; } } 
@ org.junit.Test public void testFindAllByCustomSearch1 () { int count = 15 ; for ( int i = 0 ; i < count ; i ++ ) { com.huntering.common.entity.User user = createUser () ; user . getBaseInfo () . setRealname ( ( "zhang" + i ) ) ; userRepository2 . save ( user ) ; } com.huntering.common.entity.search.Searchable search = com.huntering.common.entity.search.Searchable . newSearchable () . addSearchParam ( "realname_custom" , "zhang" ) ; org.junit.Assert . assertEquals ( count , userRepository2 . findAllByCustom ( search ) . getNumberOfElements () ) ; } 
public void clearErrors () { java.util.List < org.apache.oodt.cas.curation.ingest.InputStruct.InputEntry > torm = new java.util.LinkedList < org.apache.oodt.cas.curation.ingest.InputStruct.InputEntry > () ; for ( org.apache.oodt.cas.curation.ingest.InputStruct.InputEntry entry : this . current ) { if ( ( entry.error ) != null ) torm . add ( entry ) ; } for ( org.apache.oodt.cas.curation.ingest.InputStruct.InputEntry entry : torm ) { this . current . remove ( entry ) ; } } 
@ java.lang.Override public void initialize ( org.springframework.context.ConfigurableApplicationContext applicationContext ) { this . applicationContext = applicationContext ; org.springframework.core.env.Environment env = applicationContext . getEnvironment () ; java.lang.String scan = env . getProperty ( "spring.dubbo.scan" ) ; if ( scan != null ) { com.alibaba.dubbo.config.spring.AnnotationBean scanner = ( ( com.alibaba.dubbo.config.spring.AnnotationBean ) ( registerAndInstance ( scan ) ) ) ; scanner . setPackage ( scan ) ; scanner . setApplicationContext ( applicationContext ) ; applicationContext . addBeanFactoryPostProcessor ( scanner ) ; applicationContext . getBeanFactory () . addBeanPostProcessor ( scanner ) ; } } 
@ java.lang.Override public boolean onKey ( android.view.View v , int keyCode , android.view.KeyEvent event ) { if ( ( keyCode == ( android.view.KeyEvent.KEYCODE_ENTER ) ) && ( ( event . getAction () ) == ( android.view.KeyEvent.ACTION_UP ) ) ) { android.util.Log . d ( "###" , "onKey: 按下确认键" ) ; jumpPage ( v ) ; return true ; } return false ; } 
public void plotCluster () { java.lang.System.out . println ( ( ( "[Cluster: " + ( id ) ) + "]" ) ) ; java.lang.System.out . println ( ( ( "[Centroid: " + ( centroid ) ) + "]" ) ) ; java.lang.System.out . println ( "[Points: \n" ) ; for ( Point p : points ) { java.lang.System.out . println ( p ) ; } java.lang.System.out . println ( "]" ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/vk/sign" ) public java.lang.String vksign ( javax.servlet.http.HttpServletRequest request ) { java.lang.String code = request . getParameter ( "code" ) ; java.lang.System.out . println ( ( "AUTH CODE " + code ) ) ; if ( code != null ) { net.de1mos.jbox.api.client.vk.core.VKAuthToken token = apiClient . getOAuthToken ( code ) ; net.de1mos.jbox.api.client.vk.core.VKUser user = apiClient . getCurrentVKUserInfo ( token ) ; request . getSession () . setAttribute ( "VK_USER" , user ) ; return "redirect:/hello" ; } else { return "redirect:" + ( apiClient . getAuthURL ( net.de1mos.jbox.webclient.controllers.HelloController.vkApiScope ) ) ; } } 
private io.minio.HttpResponse executePut ( java.lang.String bucketName , java.lang.String objectName , byte [] data , java.util.Map < java.lang.String , java.lang.String > headerMap , java.util.Map < java.lang.String , java.lang.String > queryParamMap , java.lang.String region ) throws io.minio.ErrorResponseException , io.minio.InternalException , io.minio.InvalidBucketNameException , io.minio.NoResponseException , java.io.IOException , org.xmlpull.v1.XmlPullParserException { return execute ( Method.PUT , region , bucketName , objectName , data , headerMap , queryParamMap ) ; } 
public void startListen () { mView . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { long thisClickTime = java.lang.System . currentTimeMillis () ; if ( ( thisClickTime - ( lastClickTime ) ) <= ( mMaxInterval ) ) { ( mComboCount ) ++ ; } else { mComboCount = 0 ; } lastClickTime = thisClickTime ; mOnComboListener . onCombo ( v , mComboCount ) ; } } ) ; } 
public java.lang.String toString () { java.util.SortedSet < java.lang.String > keysArray = new java.util.TreeSet < java.lang.String > ( logLikelihoodMap . keySet () ) ; java.lang.String toRet = "" ; for ( java.lang.String key : keysArray ) { double logLike = logLikelihoodMap . get ( key ) ; java.lang.String logLikeS = java.lang.Double . toString ( logLike ) ; java.lang.String thisKey = ( ( key + "     " ) + logLikeS ) + "\n" ; toRet += thisKey ; } java.lang.System.out . println ( toRet ) ; return toRet ; } 
@ java.lang.Override public java.lang.String validateConfLength ( java.lang.String confLength , java.lang.String igHl7Version ) { java.lang.System.out . println ( ( "HEEEREEE" + igHl7Version ) ) ; if ( ( igHl7Version . compareTo ( "2.5.1" ) ) > 0 ) { if ( confLength == null ) { return "Conf. Length cannot be empty" ; } else { java.util.regex.Pattern pattern = java.util.regex.Pattern . compile ( "\\d*[#=]{0,1}" ) ; java.util.regex.Matcher m = pattern . matcher ( confLength ) ; if ( ! ( m . matches () ) ) { return "Conf. Length don't match regular expression " + pattern ; } } } return null ; } 
@ java.lang.Override public java.lang.String toString () { if ( ( lastAccessNanos ) < 0 ) { return null ; } return ( ( ( ( ( ( "Invocation{" + "id=" ) + ( id ) ) + ", startedAt=" ) + ( startedAt ) ) + ", durationNanos=" ) + ( durationNanos ) ) + '}' ; } 
private org.hibernate.Criteria orderedSearchCriteria ( org.hibernate.criterion.Order order , int page ) { if ( page < 0 ) throw new java.lang.IllegalArgumentException ( "Argument page cannot be negative." ) ; org.hibernate.Criteria criteria = currentSession () . createCriteria ( ee.rs.model.Establishment . class ) ; if ( order != null ) criteria . addOrder ( order ) ; return criteria . setFirstResult ( ( ( ee.rs.repository.establishment.HbnEstablishmentRepository.RESULTS_PER_PAGE ) * page ) ) . setMaxResults ( ee.rs.repository.establishment.HbnEstablishmentRepository.RESULTS_PER_PAGE ) ; } 
@ java.lang.Override public void decreaseDuration () { this . duration -= 1 ; if ( ( this . duration ) == 4 ) { affected.currentCombat . getTurnOrder () . add ( affected ) ; java.lang.String message ; if ( this . affected . getProfession () . equals ( "Monster" ) ) { message = ( "The " + ( affected . getRace () ) ) + " shatters the ice and joins the fray!" ; } else { message = ( affected . getName () ) + " shatters the ice and joins the fray!" ; } } } 
public void checkTripLengthDistribution ( org.apache.commons.math.stat.Frequency travelTimes , double alpha , double gamma , java.lang.String fileName ) { int [] timeThresholds1 = new int [ 79 ] ; double [] frequencyTT1 = new double [ 79 ] ; for ( int row = 0 ; row < ( timeThresholds1.length ) ; row ++ ) { timeThresholds1 [ row ] = row + 1 ; frequencyTT1 [ row ] = travelTimes . getCumPct ( timeThresholds1 [ row ] ) ; } writeVectorToCSV ( timeThresholds1 , frequencyTT1 , fileName , alpha , gamma ) ; } 
public void sellAProperty ( java.lang.String propertyName , java.lang.String buyerName , int cost ) { venture.cs414.android.monopoly2.backend.Player buyer = getPlayerByName ( buyerName ) ; venture.cs414.android.monopoly2.backend.Property property = board . getPropertyByName ( propertyName ) ; if ( buyer . canAfford ( cost ) ) { currentMessage = buyerName + " cannot afford that price!" ; } else { currentPlayer . removeFromPropertiesOwned ( property ) ; buyer . addToPropertiesOwned ( property ) ; property . setOwner ( currentPlayer ) ; payPlayer ( buyer , currentPlayer , cost ) ; } currentMessage = "Transaction Successful! :D" ; } 
public static < T extends Y , Y > java.util.List < com.helpme.app.utils.maybe.Maybe < Y > > cast ( java.util.List < com.helpme.app.utils.maybe.Maybe < T > > maybe ) { java.util.List < com.helpme.app.utils.maybe.Maybe < Y > > list = new java.util.ArrayList < com.helpme.app.utils.maybe.Maybe < Y > > () { { for ( com.helpme.app.utils.maybe.Maybe < T > element : maybe ) { add ( com.helpme.app.utils.maybe.Maybe . wrap ( element ) ) ; } } } ; return list ; } 
@ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > adapterView , android.view.View view , int i , long l ) { if ( ( ndbnoAssociation . get ( i ) ) != null ) { java.lang.String ndbno = ndbnoAssociation . get ( i ) ; if ( ! ( ndbno . equals ( "invalid" ) ) ) { doNdbnoSearch ( ndbno ) ; } } hideKeyboard () ; } 
private java.util.ArrayList < com.example.igiagante.thegarden.home.plants.presentation.dataHolders.GardenHolder > createGardenHolderList ( java.util.List < com.example.igiagante.thegarden.core.domain.entity.Garden > gardens ) { java.util.ArrayList < com.example.igiagante.thegarden.home.plants.presentation.dataHolders.GardenHolder > gardenHolders = new java.util.ArrayList <> () ; for ( int i = 0 ; i < ( gardens . size () ) ; i ++ ) { gardenHolders . add ( createGardenHolder ( gardens . get ( 0 ) , i ) ) ; } return gardenHolders ; } 
public boolean findNextBlockToClear () { int count = 0 ; do { count ++ ; if ( ! ( decrementBlock () ) ) { return false ; } } while ( ( ( worldBlockAir () ) || ( ( ( progressPos . getY () ) <= ( getOffset () . getY () ) ) && ( doesSchematicBlockEqualWorldBlock () ) ) ) && ( count < ( com.minecolonies.configuration.Configurations.maxBlocksCheckedByBuilder ) ) ) ; return true ; } 
@ java.lang.Override public void onTick ( long millisUntilFinished ) { if ( ( mCallsFinished ) == 2 ) { mPagerCitiesAdapter . addCity ( mCity ) ; mPagerCitiesAdapter . notifyDataSetChanged () ; ar.com.ivanfenoy.climaargentina.Controllers.SharedPreferencesController . saveCity ( this , mCity ) ; mCity = null ; this . cancel () ; } } 
private boolean saveToFile ( java.lang.String filename , carelender.model.EventList eventList ) { try { java.io.PrintWriter printWriter = new java.io.PrintWriter ( filename ) ; com.google.gson.Gson gson = new com.google.gson.Gson () ; java.lang.String json = gson . toJson ( eventList ) ; printWriter . println ( json ) ; printWriter . flush () ; printWriter . close () ; return true ; } catch ( java.io.IOException ioe ) { carelender.model.Model.log . log ( java.util.logging.Level.FINE , "Failed to save event to file" ) ; return false ; } } 
@ java.lang.Override public seedu.taskboss.logic.commands.CommandResult execute ( ) throws seedu.taskboss.commons.exceptions.IllegalValueException , seedu.taskboss.logic.commands.exceptions.CommandException { assert ( model ) != null ; try { model . addTask ( toAdd ) ; scrollToTask () ; model . updateFilteredListToShowAll () ; return new seedu.taskboss.logic.commands.CommandResult ( java.lang.String . format ( seedu.taskboss.logic.commands.AddCommand.MESSAGE_SUCCESS , toAdd ) ) ; } catch ( seedu.taskboss.model.task.UniqueTaskList e ) { throw new seedu.taskboss.logic.commands.exceptions.CommandException ( seedu.taskboss.logic.commands.AddCommand.MESSAGE_DUPLICATE_TASK ) ; } catch ( java.lang.IllegalArgumentException iae ) { throw new seedu.taskboss.logic.commands.exceptions.CommandException ( seedu.taskboss.model.task.Recurrence.MESSAGE_RECURRENCE_CONSTRAINTS ) ; } } 
private void constructCoreMembers () { _skedder = new chronos.pdc.command.Scheduler ( _mfCiv ) ; _rf = new chronos.pdc.registry.RegistryFactory () ; _rf . initRegistries () ; _advReg = ( ( chronos.pdc.registry.AdventureRegistry ) ( _rf . getRegistry ( RegKey.ADV ) ) ) ; _dorm = ( ( chronos.pdc.registry.HeroRegistry ) ( _rf . getRegistry ( RegKey.HERO ) ) ) ; } 
@ java.lang.Override public org.silverpeas.core.contribution.contentcontainer.content.GlobalSilverContent getGlobalSilverContent ( org.silverpeas.core.contribution.contentcontainer.content.SilverContentInterface sci , org.silverpeas.core.admin.user.model.UserDetail creatorDetail , java.lang.String location ) { org.silverpeas.core.contribution.contentcontainer.content.GlobalSilverContent gsc = super . getGlobalSilverContent ( sci , creatorDetail , location ) ; org.silverpeas.components.gallery.model.Media media = ( ( org.silverpeas.components.gallery.model.Media ) ( sci ) ) ; gsc . setThumbnailURL ( media . getApplicationThumbnailUrl ( MediaResolution.TINY ) ) ; gsc . setType ( media . getType () . getName () ) ; return gsc ; } 
@ java.lang.Override public void load ( me.jamiethompson.forgeaccount.Data.ForgeAccount account ) { mLoaded = true ; this . account = account ; this . emailMessages = new java.util.ArrayList <> () ; emailList . setAdapter ( null ) ; me.jamiethompson.forgeaccount.TabActivity.GeneratorFragment . setListViewHeightBasedOnChildren ( emailList ) ; if ( isNetworkAvailable () ) { generator . setEmailAddress ( account . getEmail () ) ; showAddressProgress () ; } me.jamiethompson.forgeaccount.Files.CurrentManager . updateCurrentAccount ( this . account , getContext () ) ; displayAccount () ; me.jamiethompson.forgeaccount.UI.Feedback . displayMessage ( getString ( R.string.message_account_loaded ) , view ) ; } 
public java.util.Map < java.lang.String , bg.registryagency.model.BrraCompany > parseAll ( ) throws java.lang.Exception , javax.xml.bind.JAXBException { long start = java.lang.System . currentTimeMillis () ; initializeBrraJaxbContext () ; for ( java.io.File file : getFilesFromDirectory ( registryLocation ) ) { if ( file . isFile () ) { java.util.List < bg.registryagency.model.BrraCompany > parsedBrraCompanies = parseBrraXMLPage ( file ) ; updateCompanies ( parsedBrraCompanies ) ; } } createLogFile () ; long end = java.lang.System . currentTimeMillis () ; java.lang.System.out . println ( ( "Time taken: " + ( ( end - start ) / 1000.0 ) ) ) ; return companies ; } 
public static void main ( java.lang.String [] args ) { if ( ( ( args.length ) == 1 ) && ( "--version" . equals ( args [ 0 ] ) ) ) { java.lang.System.out . println ( ph.kana.csvv.util.Constants.APP_NAME ) ; java.lang.System.out . print ( ph.kana.csvv.util.Constants.VERSION ) ; } else { javafx.application.Application . launch ( args ) ; } } 
@ java.lang.Override protected void onDraw ( android.graphics.Canvas canvas ) { android.util.Log . i ( com.hydraproductions.cicada.PhoneStatus.TAG , "ON DRAW" ) ; int x = ( canvas . getWidth () ) / 2 ; int y = ( ( int ) ( ( canvas . getHeight () ) - ( paint . ascent () ) ) ) / 2 ; java.lang.String readout = java.lang.String . format ( "%3.2f%%" , signalStrengthPercentage ) ; canvas . drawText ( readout , x , y , paint ) ; } 
private net.barik.SpreadsheetAnalyzer.FunctionEvalType getAndConvertCachedType ( org.apache.poi.ss.usermodel.Cell cell ) { if ( ( cell . getCachedFormulaResultType () ) == ( org.apache.poi.ss.usermodel.Cell.CELL_TYPE_NUMERIC ) ) { if ( org.apache.poi.ss.usermodel.DateUtil . isCellDateFormatted ( cell ) ) { return net.barik.SpreadsheetAnalyzer.FunctionEvalType.DATE ; } double d = cell . getNumericCellValue () ; if ( ( java.lang.Math . rint ( d ) ) == d ) { return net.barik.SpreadsheetAnalyzer.FunctionEvalType.INTEGER ; } else { return net.barik.SpreadsheetAnalyzer.FunctionEvalType.NON_INTEGER_NUMBER ; } } else { return net.barik.SpreadsheetAnalyzer.FunctionEvalType . fromCellType ( cell . getCellType () ) ; } } 
@ java.lang.Override public void obtainTreeLock ( long timeout ) { if ( timeout < 1 ) { m_lock . lock () ; } else { try { if ( m_lock . tryLock ( timeout , java.util.concurrent.TimeUnit.MILLISECONDS ) ) { return; } else { throw new org.opennms.netmgt.poller.pollables.LockUnavailable ( ( ( ( ( "Unable to obtain lock for " + ( this ) ) + " within " ) + timeout ) + " milliseconds" ) ) ; } } catch ( java.lang.InterruptedException e ) { throw new org.opennms.netmgt.poller.pollables.LockUnavailable ( ( ( ( "Interrupted while waiting " + timeout ) + " milliseconds to obtain lock for " ) + ( this ) ) ) ; } } } 
private void removeFromList ( de.mizapf.timt.files.Directory deldir ) { de.mizapf.timt.files.Directory [] aold = m_Subdirs ; m_Subdirs = new de.mizapf.timt.files.Directory [ ( aold.length ) - 1 ] ; int poso = 0 ; int posn = 0 ; while ( poso < ( aold.length ) ) { if ( aold [ poso ] . equals ( deldir ) ) poso ++ ; else m_Subdirs [ ( posn ++ ) ] = aold [ ( poso ++ ) ] ; } } 
@ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.MONITOR , ignoreCancelled = true ) public void onBlockIgnite ( org.bukkit.event.block.BlockIgniteEvent event ) { org.bukkit.entity.Player player = event . getPlayer () ; if ( ! ( com.frdfsnlght.inquisitor.PlayerStats . isStatsPlayer ( player ) ) ) return; if ( ( event . getPlayer () ) == null ) return; PlayerStats.group . getStatistics ( player . getName () ) . incr ( "firesStarted" ) ; } 
@ java.lang.Override public void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { if ( resultCode != ( android.app.Activity.RESULT_OK ) ) { return; } else if ( requestCode == ( org.wit.myrent.activities.ResidenceFragment.REQUEST_CONTACT ) ) { java.lang.String name = org.wit.android.helpers.ContactHelper . getContact ( this , data ) ; emailAddress = org.wit.android.helpers.ContactHelper . getEmail ( this , data ) ; tenantButton . setText ( ( ( name + " : " ) + ( emailAddress ) ) ) ; residence.tenant = name ; } } 
@ java.lang.Override protected android.os.Parcelable onSaveInstanceState () { android.os.Parcelable superState = super . onSaveInstanceState () ; com.minoon.weasel.layout.CollapsingHeaderLayout.StreamPlayerViewSavedState ss = new com.minoon.weasel.layout.CollapsingHeaderLayout.StreamPlayerViewSavedState ( superState ) ; ss.dragViewPosition = mDragView . getTop () ; ss.headerAlpha = mHeaderView . getAlpha () ; ss.headerTranslationY = mHeaderView . getTranslationY () ; ss.contentScrollPosition = mContentScrollPosition ; return ss ; } 
public void resourceChanged ( org.eclipse.core.resources.IResourceChangeEvent event ) { java.util.Collection < org.eclipse.core.resources.IMarkerDelta > markerWithErrors = com.google.common.collect.Collections2 . filter ( com.google.common.collect.Lists . newArrayList ( event . findMarkerDeltas ( null , true ) ) , Predicates.isVortoModelWithMarkerError ) ; if ( ! ( markerWithErrors . isEmpty () ) ) { executeRunnableOnDisplayThread () ; } } 
private java.util.ArrayList < Task > addReminder ( java.lang.String [] inputs ) { java.util.ArrayList < Task > returningTasks = new java.util.ArrayList < Task > () ; Task taskToAddReminder = getTaskToAddReminder ( inputs ) ; java.util.Date reminder = convertToDateObject ( inputs [ TaskManager.REMINDER_INDEX ] ) ; taskToAddReminder . addReminders ( reminder ) ; return returningTasks ; } 
public void execute ( ) throws org.apache.maven.plugin.MojoExecutionException , org.apache.maven.plugin.MojoFailureException { in.mayurshah.util.EnvVarToFile envVarToFile = new in.mayurshah.util.EnvVarToFile () ; verifyEnvVariableExists ( Const.suiteName ) ; verifyEnvVariableExists ( Const.ReportLocation ) ; verifyEnvVariableExists ( Const.remoteURL ) ; verifyEnvVariableExists ( Const.baseURL ) ; verifyEnvVariableExists ( Const.internal ) ; verifyEnvVariableExists ( Const.parallel ) ; verifyEnvVariableExists ( Const.thread_count ) ; verifyEnvVariableExists ( Const.tests ) ; verifyEnvVariableExists ( Const.browsers ) ; verifyEnvVariableExists ( Const.packageName ) ; envVarToFile . write () ; } 
utilities.hexEdit.HexEditDocumentFilter loadDataCommon ( int sourceSize ) { changes . clear () ; setUpScrollBar () ; currentLineStart = 0 ; prepareDoc ( doc , ( ( long ) ( sourceSize ) ) ) ; javax.swing.SwingUtilities . invokeLater ( new java.lang.Runnable () { public void run () { fillPane () ; } } ) ; calcHexMetrics ( sourceSize ) ; setNavigationFilter ( doc ) ; utilities.hexEdit.HexEditDocumentFilter hexDocumentFilter = setDocumentFilter ( doc ) ; return hexDocumentFilter ; } 
private java.util.Stack < edu.cwru.sepia.agent.AstarAgent.MapLocation > reconstructPath ( edu.cwru.sepia.agent.AstarAgent.MapLocation start , edu.cwru.sepia.agent.AstarAgent.MapLocation end ) { java.util.Stack < edu.cwru.sepia.agent.AstarAgent.MapLocation > toReturn = new java.util.Stack < edu.cwru.sepia.agent.AstarAgent.MapLocation > () ; edu.cwru.sepia.agent.AstarAgent.MapLocation current = end ; while ( current != start ) { current = current.cameFrom ; toReturn . push ( current ) ; } toReturn . pop () ; return toReturn ; } 
public static double manhattanDist ( Node start , Node end ) { int xdist = java.lang.Math . abs ( ( ( start.x ) - ( end.x ) ) ) ; int ydist = java.lang.Math . abs ( ( ( start.y ) - ( end.y ) ) ) ; return ( ( xdist + ydist ) + ( 1.41421356237 * ( java.lang.Math . min ( xdist , ydist ) ) ) ) / 4 ; } 
public < T > T read ( final java.lang.String content , final java.lang.Class < T > type ) throws com.google.gson.JsonSyntaxException { try { return this . mapper . fromJson ( content , type ) ; } catch ( com.google.gson.JsonSyntaxException e ) { timber.log.Timber . e ( e , ( ( ( ( "Error mapping json to class '" + type ) + "' with contents: '" ) + content ) + "'" ) ) ; throw e ; } } 
@ java.lang.Override public void run () { if ( com.android.internal.actions.ActionUtils . isCapKeyDevice ( mContext ) ) { com.android.internal.actions.ActionUtils . resolveAndUpdateButtonActions ( ctx , com.android.internal.actions.ActionConstants . getDefaults ( ActionConstants.HWKEYS ) ) ; } com.android.internal.actions.ActionUtils . resolveAndUpdateButtonActions ( ctx , com.android.internal.actions.ActionConstants . getDefaults ( ActionConstants.NAVBAR ) ) ; com.android.internal.actions.ActionUtils . resolveAndUpdateButtonActions ( ctx , com.android.internal.actions.ActionConstants . getDefaults ( ActionConstants.FLING ) ) ; } 
private int computeLookahead ( gnu.trove.list.array.TIntArrayList neighbors , de.rwth.i2.attestor.graph.morphism.VF2GraphData data ) { int lookaheadIn = 0 ; for ( int i = 0 ; i < ( neighbors . size () ) ; i ++ ) { int next = neighbors . get ( i ) ; if ( ( data . containsMatch ( next ) ) && ( data . containsIngoing ( next ) ) ) { ++ lookaheadIn ; } } return lookaheadIn ; } 
@ java.lang.Override public void widgetSelected ( org.eclipse.swt.events.SelectionEvent e ) { engine . getStatusModel () . setServerControllerRunning ( true ) ; java.lang.String selection = engine . getStatusModel () . getServerControllerSelection () ; if ( ( ! ( engine . getStatusModel () . getServerControllerRunning () ) ) && ( ! ( selection . equals ( "" ) ) ) ) { eu.netide.workbenchconfigurationeditor.controller.ControllerManager . getStarter () . startServerController ( selection ) ; engine . getStatusModel () . setServerControllerRunning ( true ) ; selectServerCombo . setEnabled ( false ) ; } } 
@ java.lang.Override public void loadNBTData ( net.minecraft.nbt.NBTTagCompound compound ) { net.minecraft.nbt.NBTTagCompound properties = ( ( net.minecraft.nbt.NBTTagCompound ) ( compound . getTag ( mod.iridescent.properties.IridescentMiningProperties.MINING_PROP_NAME ) ) ) ; miningLevel = properties . getInteger ( "Level" ) ; currentExp = properties . getInteger ( "CurrentExp" ) ; maxExp = properties . getInteger ( "MaxExp" ) ; printMiningDetails () ; } 
@ java.lang.Override protected org.ksoap2.serialization.SoapObject doInBackground ( java.lang.Void . . . params ) { org.ksoap2.serialization.SoapObject object = null ; try { java.lang.String get_for = "app" ; com.narnolia.app.network.SOAPWebService webService = new com.narnolia.app.network.SOAPWebService ( mContext ) ; object = webService . GetLead ( empcode , "" , get_for ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return object ; } 
public com.msiops.ground.either.Either < sample.auth.models.User , java.util.List < sample.auth.models.ErrorResponse > > loadUser ( java.lang.String login ) { final sample.auth.models.User loaded = userDAO . load ( login ) ; java.util.ArrayList < sample.auth.models.ErrorResponse > errors = new java.util.ArrayList <> () ; if ( loaded != null ) { return com.msiops.ground.either.Either . left ( loaded ) ; } errors . add ( new sample.auth.models.ErrorResponse ( "Incorrect login" , sample.auth.ErrorState.FORBIDDEN ) ) ; return com.msiops.ground.either.Either . right ( errors ) ; } 
public boolean StartServer () { cmd . printl ( ( ( "\t" + ( lang.ServerReady ) ) + "\n" ) ) ; send . start () ; animator . start () ; do { exitConnection = receiveAnswer () ; exitConnection = "" ; cmd . sleep ( 1000 ) ; } while ( ( exitConnection ) != null ) ; send . interrupt () ; animator . interrupt () ; exitConnection = null ; return false ; } 
public boolean IncrementArray ( int [] current , int [] numDigits ) { for ( int x = ( current.length ) - 1 ; x >= 0 ; x -- ) { if ( ( ( current [ x ] ) + 1 ) == ( numDigits [ x ] ) ) { current [ x ] = 0 ; continue; } else { ( current [ x ] ) ++ ; return true ; } } return false ; } 
@ java.lang.Override protected void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; localDataSource = ( ( com.havrylyuk.weather.WeatherApp ) ( getApplicationContext () ) ) . getLocalDataSource () ; setContentView ( getLayout () ) ; if ( ( savedInstanceState == null ) && ( com.havrylyuk.weather.util.PreferencesHelper . getInstance () . isUseCurrentLocation ( this ) ) ) { askForPermission ( Manifest.permission.ACCESS_FINE_LOCATION , com.havrylyuk.weather.activity.BaseActivity.PERMISSIONS_REQUEST_LOCATION ) ; } } 
public static void rdfToHtml ( org.spdx.rdfparser.model.SpdxDocument doc , java.io.File docHtmlFile , java.io.File licenseHtmlFile , java.io.File docFilesHtmlFile ) throws com.github.mustachejava.MustacheException , java.io.IOException , org.spdx.rdfparser.InvalidSPDXAnalysisException { java.lang.String templateDir = org.spdx.tools.RdfToHtml.TEMPLATE_ROOT_PATH ; java.io.File templateDirectoryRoot = new java.io.File ( templateDir ) ; if ( ! ( ( templateDirectoryRoot . exists () ) && ( templateDirectoryRoot . isDirectory () ) ) ) { templateDir = org.spdx.tools.RdfToHtml.TEMPLATE_CLASS_PATH ; } org.spdx.tools.RdfToHtml . rdfToHtml ( doc , templateDir , docHtmlFile , licenseHtmlFile , docFilesHtmlFile ) ; } 
@ java.lang.Override public void onDestroy () { super . onDestroy () ; android.util.Log . i ( "INFO" , "Service onDestroy" ) ; nTask . cancel ( true ) ; startActivity ( new android.content.Intent ( getApplicationContext () , dom133.pl.updater.VersionChecker . class ) ) ; android.os.Process . killProcess ( android.os.Process . myPid () ) ; } 
public void moveUpOperations ( org.eclipse.uml2.uml.Operation currentOperation , java.util.List < org.eclipse.uml2.uml.Operation > operationsToMove ) { final java.util.List < org.eclipse.uml2.uml.Operation > operationsInRightOrder = retrieveTheRightOrderForOperation ( operationsToMove ) ; final org.obeonetwork.dsl.uml2.design.internal.services.MoveUpElementSwitch moveUpElementsSwitch = new org.obeonetwork.dsl.uml2.design.internal.services.MoveUpElementSwitch () ; final java.util.Iterator < org.eclipse.uml2.uml.Operation > iterator = operationsInRightOrder . iterator () ; while ( iterator . hasNext () ) { final org.eclipse.uml2.uml.Operation operation = iterator . next () ; moveUpElementsSwitch . moveUpElement ( operation ) ; } } 
@ java.lang.Override public java.lang.String toString () { return ( ( ( ( "" + ( toString ( this . _resourceSpecification_ ) ) ) + ( toString ( this . _block_ ) ) ) + ( toString ( this . _variableDeclaratorId_ ) ) ) + ( toString ( this . _catchClause_ ) ) ) + ( toString ( this . _finally_ ) ) ; } 
public void addAnimationTabPanel ( int width , int height , int frames ) { animationFrameTabPanel = new org.happysoft.zxsprite.AnimationFrameTabPanel ( this , width , height , frames ) ; java.awt.Dimension d = animationFrameTabPanel . getPreferredSize () ; scrollPane . setViewportView ( animationFrameTabPanel ) ; setSize ( d ) ; repaint () ; } 
@ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "{id}" ) @ javax.ws.rs.Produces ( value = { javax.ws.rs.core.MediaType.APPLICATION_XML , javax.ws.rs.core.MediaType.APPLICATION_JSON } ) public rs.ac.uns.ftn.xws.entities.payments.Invoice findById ( @ javax.ws.rs.PathParam ( value = "PIB" ) java.lang.String PIB , @ javax.ws.rs.PathParam ( value = "id" ) java.lang.String id ) { rs.ac.uns.ftn.xws.entities.payments.Invoice retVal = null ; try { retVal = invoiceDao . findById ( java.lang.Long . parseLong ( id ) ) ; if ( retVal . getSupplierTIN () . equals ( PIB ) ) return retVal ; return null ; } catch ( java.lang.Exception e ) { rs.ac.uns.ftn.xws.services.payments.InvoiceService.log . error ( e ) ; } return null ; } 
public org.openforis.collect.model.CollectRecord toCollectRecord ( org.openforis.collect.android.collectadapter.UiRecord uiRecord , org.openforis.collect.model.CollectSurvey collectSurvey ) { org.openforis.collect.model.CollectRecord collectRecord = new org.openforis.collect.model.CollectRecord ( collectSurvey , lastVersion ( collectSurvey ) ) ; collectRecord . setStep ( CollectRecord.Step.CLEANSING ) ; collectRecord . setId ( uiRecord . getId () ) ; org.openforis.idm.model.Entity rootEntity = collectRecord . createRootEntity ( uiRecord . getName () ) ; rootEntity . setId ( uiRecord . getId () ) ; addChildNodes ( rootEntity , uiRecord , collectRecord ) ; new org.openforis.collect.model.RecordUpdater () . initializeRecord ( collectRecord , false ) ; return collectRecord ; } 
public boolean contains ( java.lang.Object arg0 ) { try { java.sql.ResultSet rs = db . returnQuery ( ( ( ( ( "SELECT data FROM " + ( table ) ) + " WHERE data='" ) + ( zutil.converters.Converter . toBytes ( arg0 ) ) ) + "' LIMIT 1" ) ) ; if ( rs . next () ) { return true ; } rs . getStatement () . close () ; } catch ( java.lang.Exception e ) { e . printStackTrace ( MultiPrintStream.out ) ; } return false ; } 
@ java.lang.Override public void configure ( java.lang.String [] parameters ) { if ( parameters != null ) { this . parameters = new java.lang.String [ parameters.length ] ; java.lang.System . arraycopy ( parameters , 0 , this . parameters , 0 , parameters.length ) ; } } 
public void useFromInventory ( models.items.TakeableItem usedItem ) { models.EquippedItems.ArmorComponent componentType = usedItem . getComponent () ; usedItem . modifyStats ( avatar ) ; avatarInventory . removeItem ( usedItem ) ; if ( usedItem . getEquippable () ) { models.items.TakeableItem oldItem = componentType . getCurrentEquippedItem ( avatar ) ; if ( oldItem != null ) { oldItem . modifyStatsReverse ( avatar ) ; componentType . unequipComponent ( avatar ) ; avatarInventory . addItem ( oldItem ) ; } componentType . equipComponent ( avatar , usedItem ) ; } } 
protected void drawItem ( final int x , final int y , final net.minecraft.item.ItemStack is ) { this . zLevel = 100.0F ; this . itemRender . zLevel = 100.0F ; org.lwjgl.opengl.GL11 . glPushAttrib ( GL11.GL_ALL_ATTRIB_BITS ) ; org.lwjgl.opengl.GL11 . glEnable ( GL11.GL_LIGHTING ) ; org.lwjgl.opengl.GL11 . glEnable ( GL12.GL_RESCALE_NORMAL ) ; org.lwjgl.opengl.GL11 . glEnable ( GL11.GL_DEPTH_TEST ) ; net.minecraft.client.renderer.RenderHelper . enableGUIStandardItemLighting () ; this . itemRender . renderItemAndEffectIntoGUI ( is , x , y ) ; org.lwjgl.opengl.GL11 . glPopAttrib () ; this . itemRender . zLevel = 0.0F ; this . zLevel = 0.0F ; } 
private void onRunPressed () { if ( ( workPath ) == null ) { javax.swing.JOptionPane . showMessageDialog ( this , workPathIsNullErrorMessage , "User Input Error" , javax.swing.JOptionPane.ERROR_MESSAGE ) ; return; } java.lang.String tmpFilePath = ( workPath ) + ( runfile ) ; java.lang.String fileToRun = runFileField . getText () ; java.lang.String outfile = ( ( '"' + ( workPath ) ) + ( fileToRun . equals ( "" ) ? "runit" : fileToRun ) ) + '"' ; writeAndExecuteCommand ( tmpFilePath , ( ( runCommand ) + outfile ) , "" ) ; } 
public static java.lang.String getExchange () { java.util.Random r = new java.util.Random () ; int Low = 1 ; int High = 100 ; int k = ( r . nextInt ( ( High - Low ) ) ) + Low ; if ( k < 10 ) { return "rubicon" ; } if ( k < 20 ) { return "smaato" ; } if ( k < 50 ) { return "nexage" ; } if ( k < 75 ) { return "fyber" ; } return "privatex" ; } 
@ java.lang.Override public void onBackPressed () { hideKeyboard () ; if ( ( ( searchPopupWindow ) != null ) && ( searchPopupWindow . isShowing () ) ) { searchPopupWindow . dismiss () ; } if ( drawer . isDrawerOpen ( GravityCompat.START ) ) { drawer . closeDrawer ( GravityCompat.START ) ; } else { super . onBackPressed () ; } } 
public static net.minecraft.block.Block getDroppedBlock ( int aDropState ) { switch ( aDropState ) { case 0 : return null ; case - 1 : return gregtech.api.GregTech_API.sBlockOres1 ; case - 2 : return gregtech.api.GregTech_API.sBlockOresGC ; case - 3 : return gregtech.api.GregTech_API.sBlockOresUb1 ; case - 4 : return gregtech.api.GregTech_API.sBlockOresUb2 ; case - 5 : return gregtech.api.GregTech_API.sBlockOresUb3 ; default: if ( ( aDropState >= 0 ) && ( aDropState < ( GregTech_API.sBlockOresCustom.length ) ) ) return gregtech.api.GregTech_API.sBlockOresCustom [ ( aDropState - 1 ) ] ; return gregtech.api.GregTech_API.sBlockOres1 ; } } 
private Player.Solution buildRandomSolution ( Player.GameState gs , Player.AI opAI , Player.ScoreEvaluation eval ) { Player.Solution solution = new Player.Solution ( Player.MagicNumbers.SIMULATION_DEPTH ) ; Player.GameState newGs = gs . copy () ; for ( int i = 0 ; i < ( Player.MagicNumbers.SIMULATION_DEPTH ) ; i ++ ) { solution.actions [ i ] = getRandomAction ( gs ) ; Player.GameEngine . applyActionWithoutCopy ( newGs , solution.actions [ i ] , opAI . compute ( gs ) ) ; solution.score = eval . getGameStateScore ( gs , i ) ; } return solution ; } 
private void appendBootComponent ( org.jboss.forge.roaster.model.source.JavaClassSource javaClass , java.lang.StringBuilder body , java.util.Set < ? extends javax.lang.model.element.Element > list ) { for ( final javax.lang.model.element.Element element : list ) { final org.jrebirth.af.api.module.BootComponent bc = element . getAnnotation ( org.jrebirth.af.api.module.BootComponent . class ) ; body . append ( "\nbootComponent(" ) . append ( getSimpleClassName ( element ) ) . append ( ".class);\n" ) ; javaClass . addImport ( getClassName ( element ) ) ; } } 
@ java.lang.Override public int getSizeInventory () { if ( ( host ) instanceof trains.entities.EntityTrainCore ) { int size = 1 ; if ( ( ( host . getType () ) == ( TrainsInMotion.transportTypes.STEAM ) ) || ( ( host . getType () ) == ( TrainsInMotion.transportTypes.NUCLEAR_STEAM ) ) ) { size = 2 ; } return ( size + ( host . getInventorySize () . getCollumn () ) ) + ( host . getInventorySize () . getRow () ) ; } return 0 ; } 
public static com.tt.sharedbaseclass.constant.Constant.WEEK valueOf ( int value ) { com.tt.sharedbaseclass.constant.Constant.WEEK result = null ; switch ( value ) { case 1 : result = com.tt.sharedbaseclass.constant.Constant.WEEK.MON ; break; case 2 : result = com.tt.sharedbaseclass.constant.Constant.WEEK.TUE ; break; case 3 : result = com.tt.sharedbaseclass.constant.Constant.WEEK.WEN ; break; case 4 : result = com.tt.sharedbaseclass.constant.Constant.WEEK.THU ; break; case 5 : result = com.tt.sharedbaseclass.constant.Constant.WEEK.FRI ; break; case 6 : result = com.tt.sharedbaseclass.constant.Constant.WEEK.STA ; break; case 7 : result = com.tt.sharedbaseclass.constant.Constant.WEEK.SUN ; break; } return result ; } 
public static java.lang.String removeHeading ( java.lang.String source , java.lang.String toRemove ) { if ( toRemove == null ) { return source ; } source = source . trim () ; int toRemoveLength = toRemove . length () ; if ( toRemove . equals ( source . substring ( 0 , toRemoveLength ) ) ) { source = source . substring ( toRemoveLength , source . length () ) ; } return source ; } 
public java.lang.String getFormattedTimeAndDate ( boolean includeDate ) { assert ( includeDate == true ) || ( includeDate == false ) ; java.lang.String result = main.java.Task.STRING_EMPTY ; if ( ( getStartTime () ) != null ) { result += ( addFormattedTime () ) + ( main.java.Task.STRING_EMPTY_SPACE ) ; } if ( includeDate ) { result += addFormattedDate () ; } return result . trim () ; } 
@ java.lang.Override public java.lang.String getData () { java.lang.String data = ( internalName ) + "," ; for ( java.awt.Point p : selectedPoints ) { data += ( ( ( "(" + ( ( p . getX () ) / ( image . getWidth () ) ) ) + ":" ) + ( ( p . getY () ) / ( image . getHeight () ) ) ) + ");" ; } return data ; } 
private android.graphics.Bitmap getBitmapFromAsset ( java.lang.String productId ) { android.content.res.AssetManager assetManager = getAssets () ; java.io.InputStream stream = null ; try { stream = assetManager . open ( ( productId + ".png" ) ) ; return android.graphics.BitmapFactory . decodeStream ( stream ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return null ; } } 
private JvmType.Function convertFunType ( wyjc.Type.FunctionOrMethod ft ) { java.util.ArrayList < wyjc.JvmType > paramTypes = new java.util.ArrayList < wyjc.JvmType > () ; for ( wyjc.Type pt : ft . params () ) { paramTypes . add ( wyjc.Wyil2JavaBuilder . convertType ( pt ) ) ; } wyjc.JvmType rt = wyjc.Wyil2JavaBuilder . convertType ( ft . ret () ) ; return new wyjc.JvmType.Function ( rt , paramTypes ) ; } 
private void changeCameraRatio () { switch ( mCurrentRatio ) { case com.meitu.camerademo.CameraFragment.CAMERA_RATIO_1_1 : mCurrentRatio = com.meitu.camerademo.CameraFragment.CAMERA_RATIO_FULL ; mIvCameraRationChange . setImageResource ( R.drawable.camera_picture_ratio_full_iv_ic_sel ) ; break; case com.meitu.camerademo.CameraFragment.CAMERA_RATIO_4_3 : mIvCameraRationChange . setImageResource ( R.drawable.camera_picture_ratio_11_iv_ic_sel ) ; mCurrentRatio = com.meitu.camerademo.CameraFragment.CAMERA_RATIO_1_1 ; break; case com.meitu.camerademo.CameraFragment.CAMERA_RATIO_FULL : mIvCameraRationChange . setImageResource ( R.drawable.camera_picture_ratio_43_iv_ic_sel ) ; mCurrentRatio = com.meitu.camerademo.CameraFragment.CAMERA_RATIO_4_3 ; break; } resetCameraPreviewSize () ; changePreviewSize () ; } 
@ java.lang.Override public io.fabric8.kubernetes.client.dsl.EditReplaceDeletable < T , T , D , java.lang.Boolean > cascading ( boolean enabled ) { try { return getClass () . getConstructor ( clientType , java.lang.String . class , java.lang.String . class , java.lang.Boolean . class ) . newInstance ( client , namespace , name , enabled ) ; } catch ( java.lang.Throwable t ) { throw io.fabric8.kubernetes.client.KubernetesClientException . launderThrowable ( t ) ; } } 
@ java.lang.Override public void displayMap () { if ( ( ( getSupportFragmentManager () . findFragmentByTag ( com.whiterabbit.pisabike.screens.main.MainActivity.MAP_TAG ) ) != null ) && ( ( getSupportFragmentManager () . getBackStackEntryCount () ) > 0 ) ) { getSupportFragmentManager () . popBackStack () ; return; } com.whiterabbit.pisabike.screens.map.MapFragment fragment = com.whiterabbit.pisabike.screens.map.MapFragment . createInstance () ; getSupportFragmentManager () . beginTransaction () . add ( R.id.main_activity_frame , fragment , com.whiterabbit.pisabike.screens.main.MainActivity.MAP_TAG ) . commit () ; } 
private int findDarkAnimationOriginIndex ( @ android.annotation.Nullable android.graphics.PointF screenLocation ) { if ( ( screenLocation == null ) || ( ( screenLocation.y ) < ( ( mTopPadding ) + ( mTopPaddingOverflow ) ) ) ) { return com.android.systemui.statusbar.stack.NotificationStackScrollLayout.AnimationEvent.DARK_ANIMATION_ORIGIN_INDEX_ABOVE ; } if ( ( screenLocation.y ) > ( getBottomMostNotificationBottom () ) ) { return com.android.systemui.statusbar.stack.NotificationStackScrollLayout.AnimationEvent.DARK_ANIMATION_ORIGIN_INDEX_BELOW ; } android.view.View child = getClosestChildAtRawPosition ( screenLocation.x , screenLocation.y ) ; if ( child != null ) { return getNotGoneIndex ( child ) ; } else { return com.android.systemui.statusbar.stack.NotificationStackScrollLayout.AnimationEvent.DARK_ANIMATION_ORIGIN_INDEX_ABOVE ; } } 
@ org.springframework.security.access.prepost.PreAuthorize ( value = "hasRole('USER')" ) @ org.springframework.web.bind.annotation.RequestMapping ( value = "print/{year}/{yearSeq}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public void report ( @ org.springframework.web.bind.annotation.PathVariable ( value = "year" ) java.lang.String year , @ org.springframework.web.bind.annotation.PathVariable ( value = "yearSeq" ) java.lang.Long yearSeq , javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.lang.Exception { try { java.lang.String userName = getPrincipal () ; com.rama.eva.model.TabtUserEntity user = userService . findById ( userName ) ; java.lang.String fullName = makeFullName ( user ) ; java.util.List < com.rama.eva.pojo.PdfReport002Bean > list = reportService . findForReport002 ( year , yearSeq ) ; reportJsperTest ( request , response , fullName , list ) ; } catch ( java.lang.Exception ex ) { LOG . error ( ex . getMessage () , ex ) ; throw ex ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { android.widget.Button btn = ( ( android.widget.Button ) ( v ) ) ; if ( begin ) { begin = false ; btn . setText ( "Begin" ) ; resetGame () ; } else { begin = true ; btn . setText ( "Restart" ) ; currentNumber . setText ( "Game Start !" ) ; } } 
public boolean bookSeats ( int no ) { if ( ( no > ( this . availability ) ) && ( no > 0 ) ) { return false ; } else { this . availability = - no ; this . booked = no ; this . setChanged () ; this . notifyObservers ( this . availability ) ; this . clearChanged () ; return true ; } } 
private void checkBluetoothState () { if ( ( mBtAdapter ) == null ) android.util.Log . i ( br.inatel.hackathon.vigintillionlocalizer.fragments.BluetoothScannerFragment.TAG , "BLE Error: O dispositivo não suporta Bluetooth!" ) ; if ( ! ( mBtAdapter . isEnabled () ) ) { android.content.Intent enableBTIntent = new android.content.Intent ( android.bluetooth.BluetoothAdapter.ACTION_REQUEST_ENABLE ) ; startActivityForResult ( enableBTIntent , br.inatel.hackathon.vigintillionlocalizer.fragments.BluetoothScannerFragment.REQUEST_ENABLE_BT ) ; } else { btLeScanner = mBtAdapter . getBluetoothLeScanner () ; btLeScanner . startScan ( br.inatel.hackathon.vigintillionlocalizer.fragments.BluetoothScannerFragment.SCAN_FILTERS , br.inatel.hackathon.vigintillionlocalizer.fragments.BluetoothScannerFragment.SCAN_SETTINGS , scanCallback ) ; ( ( br.inatel.hackathon.vigintillionlocalizer.activity.MainActivity ) ( getActivity () ) ) . postToBackgroundHandler ( mStartWebServerTask ) ; } } 
public void test_116 ( ) throws android.os.RemoteException , com.android.uiautomator.core.UiObjectNotFoundException , java.io.IOException { try { framework.common.ClockCommon . changeLanguage ( "English" ) ; framework.common.ClockCommon . switchMode ( "Cities" ) ; excute ( testcase.Object_Description , testcase.Operation_ClickWait , "Search" ) ; excute ( testcase.Object_ResourceId , testcase.Operation_SetText , "com.android.deskclock:id/search_src_text" , "shanghai" ) ; check ( testcase.Object_ResIdText , testcase.Operation_checkExist , "com.android.deskclock:id/city_name" , "Shanghai" ) ; } finally { framework.common.ClockCommon . changeLanguage ( "中文 (简体)" ) ; } } 
@ java.lang.Override public boolean retainAll ( com.kongmy.ds.p5.MyList < E > otherList ) { boolean changed = false ; ThisListLoop : for ( int i = 0 ; i < ( size () ) ; i ++ ) { OtherListLoop : for ( E object : otherList ) { if ( contains ( object ) ) { continue ThisListLoop ; } } remove ( i ) ; i -- ; changed = true ; } return changed ; } 
private void printHeader ( java.io.PrintStream p ) { p . println ( ( "nb csq " + ( java.lang.Integer . toString ( this . getClauses () . size () ) ) ) ) ; java.lang.String t ; if ( ( this . timeOut ) == true ) if ( this . timeOut ) ; stats.c4466bc683c56cc55590c40150b9574e388b3e t = "1" ; t = "0" ; p . println ( ( "timeout " + t ) ) ; } 
private static void shutdown () { try { if ( ( ConcurrentAlignment.stmt ) != null ) { ConcurrentAlignment.stmt . close () ; } if ( ( ConcurrentAlignment.conn ) != null ) { java.sql.DriverManager . getConnection ( ( ( ConcurrentAlignment.dbURL ) + ";shutdown=true" ) ) ; ConcurrentAlignment.conn . close () ; } } catch ( java.sql.SQLException sqlExcept ) { sqlExcept . printStackTrace () ; } } 
public static com.hazelcast.simulator.visualiser.data.SimpleHistogramDataSetContainer calculateSingleProbeDataSet ( com.hazelcast.simulator.probes.probes.Result probeData , int accuracy , double scalingPercentile ) { if ( probeData instanceof com.hazelcast.simulator.probes.probes.impl.HdrLatencyDistributionResult ) { return com.hazelcast.simulator.visualiser.utils.DataSetUtils . calcSingleProbeDataSet ( ( ( com.hazelcast.simulator.probes.probes.impl.HdrLatencyDistributionResult ) ( probeData ) ) , accuracy , scalingPercentile ) ; } if ( probeData instanceof com.hazelcast.simulator.probes.probes.impl.LatencyDistributionResult ) { return com.hazelcast.simulator.visualiser.utils.DataSetUtils . calcSingleProbeDataSet ( ( ( com.hazelcast.simulator.probes.probes.impl.LatencyDistributionResult ) ( probeData ) ) , accuracy , scalingPercentile ) ; } java.lang.System.err . println ( ( "Skipping unsupported probe result type: " + ( probeData . getClass () . getSimpleName () ) ) ) ; return null ; } 
private int isFullHouse ( int [] valueAry , int size ) { int retval ; java.lang.Boolean checkFor2s = false ; retval = isThreeOfKind ( valueAry , size ) ; if ( retval > ( - 1 ) ) { retval *= 100 ; checkFor2s = true ; } if ( checkFor2s ) { for ( int i = 1 ; i < size ; i ++ ) if ( ( valueAry [ i ] ) == 2 ) retval += i ; } return retval ; } 
void writeArrayToFile ( byte [] [] state , java.lang.String filename ) throws java.io.IOException { java.io.PrintWriter p = new java.io.PrintWriter ( new java.io.BufferedWriter ( new java.io.FileWriter ( filename ) ) ) ; for ( int i = 0 ; i < 4 ; i ++ ) { for ( int j = 0 ; j < 4 ; j ++ ) { p . print ( java.lang.String . format ( "%02x" , state [ i ] [ j ] ) ) ; } } p . println ( " " ) ; p . close () ; } 
private void deleteUselessImage ( java.util.ArrayList < java.lang.String > arrayList ) { for ( int i = 0 ; i < ( arrayList . size () ) ; i ++ ) { java.lang.String animeImagePath = arrayList . get ( i ) ; java.io.File image = new java.io.File ( animeImagePath ) ; try { util.FileManager . deleteData ( image ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } } 
public void connect ( java.lang.String type ) { if ( this . connect = true ) { java.lang.System.out . println ( "Channel had been connected" ) ; } else { this . connect = true ; switch ( type . toUpperCase () ) { case "EYE" : sens = new Chronotimer.EYE ( this . ChNum ) ; break; case "GATE" : sens = new Chronotimer.GATE ( this . ChNum ) ; break; case "PAD" : sens = new Chronotimer.PAD ( this . ChNum ) ; break; } java.lang.System.out . println ( "Channel connected" ) ; } } 
@ java.lang.Override public java.io.Reader getResourceReader ( java.lang.String name , java.lang.String encoding ) throws org.apache.velocity.exception.ResourceNotFoundException { java.io.InputStream stream = com.intellij.codeInsight.generation.VelocityIncludesClassLoader . class . getResourceAsStream ( ( "/com/intellij/codeInsight/generation/" + name ) ) ; try { return new java.io.InputStreamReader ( stream , encoding ) ; } catch ( java.io.UnsupportedEncodingException e ) { throw new org.apache.velocity.exception.ResourceNotFoundException ( e ) ; } } 
public static void unixProcessCleanup ( java.lang.String requestId ) throws java.io.IOException { java.util.ArrayList < java.lang.String > command = new java.util.ArrayList <> () ; command . add ( "pkill" ) ; command . add ( "-f" ) ; command . add ( requestId ) ; new SOMANETconnect.systemprocess.SystemProcess ( command ) ; command . add ( "-9" ) ; new SOMANETconnect.systemprocess.SystemProcess ( command ) ; } 
public static java.util.ArrayList < net.somethingdreadful.MAL.api.MALModels.BaseModels.History > convertBaseHistoryList ( java.util.ArrayList < net.somethingdreadful.MAL.api.MALModels.History > histories , java.lang.String username ) { java.util.ArrayList < net.somethingdreadful.MAL.api.MALModels.BaseModels.History > historyArrayList = new java.util.ArrayList <> () ; if ( ( histories != null ) && ( ( histories . size () ) > 0 ) ) for ( net.somethingdreadful.MAL.api.MALModels.History history : histories ) { historyArrayList . add ( history . createBaseModel ( username ) ) ; } return historyArrayList ; } 
public void close () { if ( ( ( musicItems ) != null ) && ( ( musicItems . size () ) > 0 ) ) { nomusic . setVisibility ( View.GONE ) ; musiclist . setAdapter ( ( ( android.widget.ListAdapter ) ( new com.salt.saltmusic.Home.MusicListAdapter () ) ) ) ; } else { nomusic . setVisibility ( View.VISIBLE ) ; } } 
@ java.lang.Override public boolean equals ( final java.lang.Object otherObj ) { if ( ( otherObj instanceof com.valkryst.VRoguelike.components.HealthComponent ) == false ) { return false ; } if ( otherObj == ( this ) ) { return true ; } final com.valkryst.VRoguelike.components.PositionComponent otherComp = ( ( com.valkryst.VRoguelike.components.PositionComponent ) ( otherObj ) ) ; boolean isEqual = ( x ) == ( otherComp . getX () ) ; isEqual &= ( y ) == ( otherComp . getY () ) ; return isEqual ; } 
public int getFirstPlayerNum ( final com.java.laiy.model.Player firstPlayer ) { int firstPlayerPositionNum = 0 ; for ( int num = 0 ; num < ( players.length ) ; num ++ ) { if ( ( players [ num ] ) == firstPlayer ) { firstPlayerPositionNum = num ; } } return firstPlayerPositionNum ; } 
public void valueChanged ( javax.swing.event.ListSelectionEvent e ) { excludeButton . setEnabled ( false ) ; includeButton . setEnabled ( true ) ; if ( searchBarExclusions . getText () . isEmpty () ) selectedAnime = ( ( java.lang.String ) ( listToExclude . getSelectedValue () ) ) ; else selectedAnime = ( ( java.lang.String ) ( searchListToExclude . getSelectedValue () ) ) ; if ( ( selectedAnime ) != null ) getExclusionFields ( selectedAnime ) ; java.lang.System.out . println ( selectedAnime ) ; } 
public java.lang.String getJavaTypeStringGetter ( java.lang.String prefix ) { if ( ( mFieldType . equals ( StringUtils.INT ) ) || ( mFieldType . equals ( StringUtils.BOOLEAN ) ) ) { return prefix + "Int" ; } else if ( ( mFieldType . equals ( StringUtils.LONG ) ) || ( mFieldType . equals ( StringUtils.DATE_TIME ) ) ) { return prefix + "Long" ; } else if ( mFieldName . equals ( StringUtils.DOUBLE ) ) { return prefix + "Double" ; } else { return prefix + "String" ; } } 
public int fibonacci ( int n ) { switch ( n ) { case 0 : return 1 ; case 1 : return 1 ; default: return ( fibonacci ( ( n - 1 ) ) ) + ( fibonacci ( ( n - 2 ) ) ) ; } } 
private static amt.main.levels.Entity entityFromWord ( java.lang.String word , int x , int y , amt.main.Handler handler ) { switch ( word ) { case "Player" : return new amt.main.levels.Player ( 10 , 0.06F , x , y , handler ) ; case "Turret" : return new amt.main.levels.Turret ( x , y , handler ) ; case "Rusher" : return new amt.main.levels.Rusher ( x , y , handler ) ; default: java.lang.System.err . println ( ( ( "LevelLoader doesn\'t know what Entity \"" + word ) + "\" is." ) ) ; return null ; } } 
@ java.lang.Override public int compare ( org.freeplane.features.map.NodeModel o1 , org.freeplane.features.map.NodeModel o2 ) { if ( o1 == o2 ) return 0 ; if ( o1 == null ) return - 1 ; final org.freeplane.features.map.NodeAbsolutePath absoluteBeginPath = getPath ( o1 ) ; final org.freeplane.features.map.NodeAbsolutePath absoluteEndPath = getPath ( o2 ) ; return new org.freeplane.features.map.NodeRelativePath ( absoluteBeginPath , absoluteEndPath ) . compareNodePositions () ; } 
@ java.lang.Override public void run ( @ org.jetbrains.annotations.NotNull com.intellij.openapi.progress.ProgressIndicator indicator ) { saveFiles () ; git4idea.commands.GitCommandResult result = myLPFlow . hotfix ( repo , commitMessage , indicator , errorLineHandler ) ; if ( result . success () ) { java.lang.String finishedFeatureMessage = "Hotfix success" ; lpflow.ui.NotifyUtil . notifySuccess ( myProject , finishedFeatureMessage , finishedFeatureMessage ) ; } else if ( errorLineHandler.hasMergeError ) {} else { lpflow.ui.NotifyUtil . notifyError ( myProject , "Error" , "Please have a look at the Version Control console for more details" ) ; } repo . update () ; } 
public static org.apache.http.client.methods.HttpRequestBase setAuthorizationHeader ( info.wso2.scim2.compliance.protocol.ComplianceTestMetaDataHolder complianceTestMetaDataHolder , org.apache.http.client.methods.HttpRequestBase method ) { java.lang.String auth = ( ( complianceTestMetaDataHolder . getUsername () ) + ":" ) + ( complianceTestMetaDataHolder . getPassword () ) ; byte [] encodedAuth = org.apache.commons.codec.binary.Base64 . encodeBase64 ( auth . getBytes ( java.nio.charset.Charset . forName ( "US-ASCII" ) ) ) ; java.lang.String authHeader = "Basic " + ( new java.lang.String ( encodedAuth ) ) ; method . setHeader ( HttpHeaders.AUTHORIZATION , authHeader ) ; return method ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { long st = java.lang.System . currentTimeMillis () ; com.compilesense.liuyi.mcldroid.mcldroid.MCLdroidNet . getInstance () . setUpNet ( this ) ; st = java.lang.System . currentTimeMillis () ; com.compilesense.liuyi.mcldroid.mcldroid.MCLdroidNet . getInstance () . testInputBitmap ( bmp ) ; android.util.Log . d ( "MainActivity" , ( "计算时(ms):" + ( ( java.lang.System . currentTimeMillis () ) - st ) ) ) ; bt . postDelayed ( new java.lang.Runnable () { @ java.lang.Override public void run () { imageView . setImageBitmap ( bmp ) ; } } , 1000 ) ; } 
public void logout () { java.net.Authenticator . setDefault ( mAuthenticator ) ; try { openGetConnection ( ( ( de.epgpaid.EPGpaidDataConnection.DOMAIN ) + "logout.php" ) ) ; closeHttpConnection () ; } catch ( java.lang.Exception e1 ) { e1 . printStackTrace () ; } closeHttpConnection () ; java.net.Authenticator . setDefault ( null ) ; de.epgpaid.SSLTool . resetCertificateValidation () ; } 
@ java.lang.Override public vn.com.hiringviet.model.Account checkLogin ( java.lang.String email , java.lang.String password ) { vn.com.hiringviet.dao.impl.AccountDAOImpl.LOGGER . info ( "check Login" ) ; org.hibernate.Session session = getSession () ; org.hibernate.Criteria criteria = session . createCriteria ( vn.com.hiringviet.model.Account . class ) ; criteria . add ( org.hibernate.criterion.Restrictions . eq ( "status" , StatusEnum.ACTIVE ) ) . add ( org.hibernate.criterion.Restrictions . eq ( "email" , email ) ) . add ( org.hibernate.criterion.Restrictions . eq ( "password" , password ) ) ; vn.com.hiringviet.model.Account account = ( ( vn.com.hiringviet.model.Account ) ( criteria . uniqueResult () ) ) ; return account ; } 
public labellingMachine_2.Sticker updateLabel ( labellingMachine_2.Sticker l ) { if ( ( ( l.support ) == 3 ) && ( ( l.nbSteps ) > ( labelEndStep ) ) ) { l = new labellingMachine_2.Sticker ( config , 2 , false ) ; l.nbSteps = ( ( minLSteps ) - ( ( labelDelay ) + ( config.Lsteps ) ) ) - ( round ( random ( ( - ( config.ILLesteps ) ) , config.ILLesteps ) ) ) ; } return l ; } 
private static void setDownAnimation ( com.esbjon.entities.HeaderFlag.HeaderColor color , boolean flip , com.badlogic.gdx.graphics.g2d.Animation animation ) { switch ( color ) { case GREY : if ( flip ) com.esbjon.entities.HeaderFlag.greyBackgdDown_flipped = animation ; else com.esbjon.entities.HeaderFlag.greyBackgdDown = animation ; case BLUE : if ( flip ) com.esbjon.entities.HeaderFlag.blueBackgdDown_flipped = animation ; else com.esbjon.entities.HeaderFlag.blueBackgdDown = animation ; case GREEN : if ( flip ) com.esbjon.entities.HeaderFlag.greenBackgdDown_flipped = animation ; else com.esbjon.entities.HeaderFlag.greenBackgdDown = animation ; default: if ( flip ) com.esbjon.entities.HeaderFlag.redBackgdDown_flipped = animation ; else com.esbjon.entities.HeaderFlag.redBackgdDown = animation ; } } 
public java.util.Date getCreationDate ( java.io.File file ) { if ( file . isDirectory () ) { return getCreationDateFromFile ( file ) ; } java.util.Date date = getCreationDateFromMetadata ( file ) ; if ( date == null ) { date = getCreationDateFromFile ( file ) ; } return date ; } 
public static void main ( java.lang.String [] args ) throws java.io.IOException { data.PERSTDatabase pdb = data.PERSTDatabase . getInstance () ; io.PERST_MNIST_Converter conv = new io.PERST_MNIST_Converter ( "writeLabelPath" , "writeImagePath" ) ; java.lang.System.out . println ( ( "database elements: " + ( pdb . getNumberOfDatabaseElements_ () ) ) ) ; java.lang.System.out . println ( ( "classification: " + ( ( int ) ( pdb . getDatabaseElement ( 120000 ) . getClassification () ) ) ) ) ; pdb . closeDB () ; } 
public int getLastScrollPosition () { int position = ( _elements . size () ) - 1 ; int heightUsed = _elements . get ( position ) . getHeight () ; while ( ( position > 0 ) && ( heightUsed < ( sizeY ) ) ) { position -- ; heightUsed += _elements . get ( position ) . getHeight () ; } return position + 1 ; } 
static boolean Expression10 ( com.intellij.lang.PsiBuilder b , int l ) { if ( ! ( com.intellij.lang.parser.GeneratedParserUtilBase . recursion_guard_ ( b , l , "Expression10" ) ) ) return false ; boolean r ; com.intellij.lang.PsiBuilder.Marker m = com.intellij.lang.parser.GeneratedParserUtilBase . enter_section_ ( b ) ; r = com.neueda.jetbrains.plugin.graphdb.language.cypher.parser.CypherParser . Expression9 ( b , ( l + 1 ) ) ; r = r && ( com.neueda.jetbrains.plugin.graphdb.language.cypher.parser.CypherParser . Expression10_1 ( b , ( l + 1 ) ) ) ; com.intellij.lang.parser.GeneratedParserUtilBase . exit_section_ ( b , m , null , r ) ; return r ; } 
private static void doWork () { try { if ( it.uniud.ailab.dcore.launchers.Launcher.inputPath . isFile () ) { it.uniud.ailab.dcore.launchers.Launcher . analyzeFile ( it.uniud.ailab.dcore.launchers.Launcher.inputPath ) ; } else { it.uniud.ailab.dcore.launchers.Launcher . analyzeDir () ; } } catch ( java.io.IOException ioe ) { java.lang.System.err . println ( ( "Error while analyzing: " + ( it.uniud.ailab.dcore.launchers.Launcher.inputPath . getAbsolutePath () ) ) ) ; java.lang.System.err . println ( ioe . getLocalizedMessage () ) ; } } 
public void setArmour ( entities.Armour armour ) { if ( armour != null ) { int value = ( ( entities.Armour ) ( armour ) ) . getProtectionIncrease () ; armour . changeProtection ( this , value ) ; } this . armour = armour ; if ( ! ( this . inventory . contains ( armour ) ) ) { this . addToInventory ( armour ) ; } } 
@ java.lang.Override public void onDestroy () { org.md2k.utilities.Report.Log . d ( org.md2k.phonesensor.ServicePhoneSensor.TAG , ( ( ( "onDestroy()...phoneSensorDataSources=" + ( phoneSensorDataSources ) ) + " isRunning=" ) + ( dataKitHandler . isConnected () ) ) ) ; if ( ( phoneSensorDataSources ) != null ) { phoneSensorDataSources . unregister () ; phoneSensorDataSources = null ; } if ( Constants.TEST_BATTERY ) org.md2k.phonesensor.BCMRecord . getInstance () . close () ; if ( dataKitHandler . isConnected () ) dataKitHandler . disconnect () ; dataKitHandler . close () ; super . onDestroy () ; } 
public java.util.List < java.lang.String > listItems ( thredds.server.radarServer2.RadarDataInventory.DirType type ) { update () ; java.util.Set < java.lang.String > vals = items . get ( type ) ; if ( vals == null ) return new java.util.ArrayList <> () ; else return new java.util.ArrayList <> ( items . get ( type ) ) ; } 
@ java.lang.Override protected java.util.Set < ? > generateValue ( final java.lang.reflect.Type type , final java.lang.Object . . . vals ) { final java.util.Set < java.lang.Object > newList ; try { newList = ( ( java.util.Set < java.lang.Object > ) ( type . getClass () . newInstance () ) ) ; } catch ( java.lang.InstantiationException | java.lang.IllegalAccessException e ) { newList = com.google.common.collect.Sets . newHashSet () ; } java.util.Collections . addAll ( newList , vals ) ; return newList ; } 
private static java.lang.String tryHashStringSha256 ( android.content.Context context , java.lang.String input ) { java.lang.String salt = net.hockeyapp.android.Constants . createSalt ( context ) ; try { java.security.MessageDigest hash = java.security.MessageDigest . getInstance ( "SHA-256" ) ; hash . reset () ; hash . update ( input . getBytes () ) ; hash . update ( salt . getBytes () ) ; byte [] hashedBytes = hash . digest () ; return net.hockeyapp.android.Constants . bytesToHex ( hashedBytes ) ; } catch ( java.security.NoSuchAlgorithmException e ) { return input ; } } 
public static java.lang.String toEng ( final double value , final Utility.MetricPrefixes.RoundingMethods roundingMethod , final int roundTo ) { final double abs = java.lang.Math . abs ( value ) ; double multiplier ; for ( final Utility.MetricPrefixes.MetricPrefixes e : Utility.MetricPrefixes.MetricPrefixes . values () ) { multiplier = e . getMultiplier () ; if ( ( multiplier < abs ) && ( abs < ( multiplier * 1000 ) ) ) return Utility.MetricPrefixes.MetricPrefixes . toEng ( value , e , roundingMethod , roundTo ) ; } return Utility.MetricPrefixes.MetricPrefixes . toSci ( value ) ; } 
public static void showOptionsDialog ( android.content.Context context , java.lang.CharSequence [] options , boolean cancelable , android.content.DialogInterface.OnClickListener listener ) { android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder ( context ) ; builder . setTitle ( "Select an Option" ) ; builder . setItems ( options , listener ) ; builder . setNegativeButton ( "Cancel" , new android.content.DialogInterface.OnClickListener () { @ java.lang.Override public void onClick ( android.content.DialogInterface dialogInterface , int i ) { dialogInterface . dismiss () ; } } ) ; builder . setCancelable ( cancelable ) ; builder . show () ; } 
public boolean start () { if ( ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( context , Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( context , Manifest.permission.ACCESS_COARSE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { return false ; } locationManager . requestLocationUpdates ( LocationManager.GPS_PROVIDER , ( 1000 * 10 ) , 10 , locationListener ) ; checkEnabled () ; return true ; } 
@ permissions.dispatcher.NeedsPermission ( value = { Manifest.permission.ACCESS_COARSE_LOCATION , Manifest.permission.ACCESS_FINE_LOCATION } ) void updateCoordinates () { android.location.LocationManager lm = ( ( android.location.LocationManager ) ( getSystemService ( by.vshkl.translate2.ui.activity.LOCATION_SERVICE ) ) ) ; boolean hasProvider = ( lm . isProviderEnabled ( LocationManager.NETWORK_PROVIDER ) ) || ( lm . isProviderEnabled ( LocationManager.GPS_PROVIDER ) ) ; if ( hasProvider ) { somethingWithMap () ; } else { by.vshkl.translate2.util.DialogUtils . showLocationTurnOnDialog ( getApplicationContext () ) ; } } 
public void init () { this . oil = new com.spilledmango.spmtech.fluids.SPMFluid ( new com.spilledmango.spmtech.fluids.SPMFluidBase ( "oil" , 883 , 300 , 5000 , false , null , null ) , net.minecraft.block.material.MapColor.blackColor ) ; this . sulfuricAcid = new com.spilledmango.spmtech.fluids.SPMFluid ( new com.spilledmango.spmtech.fluids.SPMFluidBase ( "sulfuric_acid" , 1840 , 300 , 2000 , false , null , null ) , net.minecraft.block.material.MapColor.snowColor ) ; } 
@ java.lang.Override public void overrideSpeedLimit ( int speedLimit ) { if ( ( speedLimit < 0 ) || ( speedLimit > 500 ) ) user . setAlarmState ( true ) ; if ( speedLimit < ( ( controller . getReferenceSpeed () ) / 2 ) ) user . setAlarmState ( true ) ; this . speedLimit = speedLimit ; controller . setSpeedLimit ( speedLimit ) ; } 
private model.Player getWinningPlayer ( model.Card winningCard ) { if ( params.forehand . getCards () . contains ( winningCard ) ) return params.forehand ; if ( params.middlehand . getCards () . contains ( winningCard ) ) return params.middlehand ; if ( params.rearhand . getCards () . contains ( winningCard ) ) return params.rearhand ; throw new java.lang.RuntimeException ( "No player has the winning card, something went horribly wrong." ) ; } 
@ java.lang.Override public void run () { if ( sessionManager . checkLogin () ) { android.content.Intent alreadyLoggedIn = new android.content.Intent ( this , com.android.clockwork.view.activity.MainActivity . class ) ; startActivity ( alreadyLoggedIn ) ; } else { android.content.Intent userLogIn = new android.content.Intent ( this , com.android.clockwork.view.activity.PreludeActivity . class ) ; startActivity ( userLogIn ) ; } finish () ; } 
@ java.lang.Override public void updatePlaying () { if ( ( game . checkCollision ( this , br.ol.pacman.actor.Pacman . class ) ) != null ) { visible = false ; ( game.currentFoodCount ) -- ; game . addScore ( 10 ) ; br.ol.pacman.actor.Pacman.donePath = false ; br.ol.pacman.PacmanPathFinder.endI = - 1 ; br.ol.pacman.PacmanPathFinder.endJ = - 1 ; br.ol.pacman.PacmanGame.maze [ row ] [ col ] = 0 ; } } 
@ java.lang.Override protected void onStop () { android.util.Log . v ( ca.rmen.android.frccommon.prefs.FRCPreferenceActivity.TAG , "onStop" ) ; android.preference.PreferenceManager . getDefaultSharedPreferences ( this ) . unregisterOnSharedPreferenceChangeListener ( mOnSharedPreferenceChangeListener ) ; android.preference.PreferenceManager . getDefaultSharedPreferences ( this ) . unregisterOnSharedPreferenceChangeListener ( mSystemNotificationPreferenceListener ) ; ca.rmen.android.frcwidget.FRCWidgetScheduler . getInstance ( this ) . schedule () ; super . onStop () ; } 
@ java.lang.Override public void onHashComplete ( java.lang.String hashString , java.lang.String provider , java.lang.String algorithm ) { android.util.Log . d ( LogTag.TAG , ( ( ( ( ( "onHashComplete(): hashString= " + hashString ) + ", Provider= " ) + provider ) + ", Algorithm= " ) + algorithm ) ) ; textViewHash . setText ( hashString ) ; textViewHashAlgorithm . setText ( java.lang.String . format ( mResources . getString ( R.string.hash_algorithm ) , algorithm ) ) ; textViewHashProvider . setText ( java.lang.String . format ( mResources . getString ( R.string.hash_provider ) , provider ) ) ; } 
public void write ( java.io.File file , java.nio.charset.Charset charset , java.lang.String . . . content ) throws java.io.IOException { java.io.PrintWriter writer = null ; try { writer = new java.io.PrintWriter ( new java.io.OutputStreamWriter ( new java.io.FileOutputStream ( file ) , charset ) ) ; for ( java.lang.String line : content ) { writer . println ( line ) ; } } finally { org.assertj.core.util.Closeables . closeQuietly ( writer ) ; } } 
@ java.lang.Override public void unregister ( HOLDER holder ) { java.lang.ref.Reference < ? extends org.flowcomputing.commons.resgc.Holder < MRES > > ref = resmap . remove ( holder . get () ) ; if ( null != ref ) { refmap . remove ( ref ) ; holder . clearDestroyer () ; } holder . clearDestroyer () ; } 
private void persistPropertyToDatabase ( org.zanata.action.ServerConfigurationBean.PropertyWithKey < java.lang.String > property ) { org.zanata.model.HApplicationConfiguration registerUrlValue = applicationConfigurationDAO . findByKey ( property . getKey () ) ; try { org.zanata.rest.service.ServerConfigurationService . persistApplicationConfig ( property . getKey () , registerUrlValue , property . get () , applicationConfigurationDAO ) ; } catch ( java.lang.IllegalAccessException e ) { e . printStackTrace () ; } catch ( java.lang.NoSuchMethodException e ) { e . printStackTrace () ; } catch ( java.lang.reflect.InvocationTargetException e ) { e . printStackTrace () ; } } 
@ java.lang.Override public void invoke ( final com.intellij.openapi.project.Project project , final com.intellij.openapi.editor.Editor editor , final com.intellij.psi.PsiFile file ) throws com.intellij.util.IncorrectOperationException { final com.intellij.openapi.module.Module module = com.intellij.openapi.module.ModuleUtil . findModuleForPsiElement ( file ) ; com.intellij.openapi.roots.ModuleRootManager _instance = com.intellij.openapi.roots.ModuleRootManager . getInstance ( module ) ; final com.intellij.openapi.roots.ModifiableRootModel model = _instance . getModifiableModel () ; this . libraryManager . ensureXtendLibAvailable ( model , module , file ) ; model . commit () ; } 
public void initOrchextra () { com.gigigo.orchextra.OrchextraBuilder builder = new com.gigigo.orchextra.OrchextraBuilder ( this ) . setApiKeyAndSecret ( gigigo.com.orchextrasdk.App.API_KEY , gigigo.com.orchextrasdk.App.API_SECRET ) . setLogLevel ( OrchextraLogLevel.NETWORK ) . setOrchextraCompletionCallback ( this ) . setImageRecognitionModule ( new com.gigigo.vuforiaimplementation.ImageRecognitionVuforiaImpl () ) ; com.gigigo.orchextra.Orchextra . initialize ( builder ) ; com.gigigo.orchextra.Orchextra . setCustomSchemeReceiver ( this ) ; com.gigigo.orchextra.Orchextra . setCredentialCallback ( gigigo.com.orchextrasdk.App.mOrchextraCredentialCallback ) ; com.gigigo.orchextra.Orchextra . updateBackgroundPeriodBetweenScan ( BeaconBackgroundPeriodBetweenScan.EXTREME ) ; com.gigigo.orchextra.Orchextra . start () ; } 
@ java.lang.Override public boolean equals ( java.lang.Object o ) { if ( ( this ) == o ) { return true ; } if ( ( o == null ) || ( ! ( getClass () . equals ( org.hibernate.Hibernate . getClass ( o ) ) ) ) ) { return false ; } ru.javawebinar.topjava.model.AbstractBaseEntity that = ( ( ru.javawebinar.topjava.model.AbstractBaseEntity ) ( o ) ) ; return ( ( getId () ) != null ) && ( getId () . equals ( that . getId () ) ) ; } 
public void spawnBazels () { Bazell spawnedBazell = new Bazell ( 0.5F , ownedBy . getControlerIndex () , basePosition ) ; if ( ( ownBazells . size () ) <= ( Basis.MAX_NUMBER_BAZELLS ) ) { ownBazells . add ( spawnedBazell ) ; } else { java.lang.System.err . println ( "Spawned more Bazells than allowed, this should not happen!" ) ; } } 
public static void testVelocityFrequencyRadiusRelation ( double frequency , control.Trajectory1d target ) { for ( double i = 0 ; i < 30 ; i += 1 / frequency ) { double d = applications.trajectory.TestUtils . getVelocity ( target , i ) ; org.junit.Assert . assertEquals ( 0 , applications.trajectory.TestUtils . getVelocity ( target , i ) , 0.01 ) ; } } 
public void fetchProjectInformation () { java.lang.String [] midiFileList = getMidiFileList () ; org.catrobat.musicdroid.pocketmusic.note.midi.MidiToProjectConverter midiToProjectConverter = new org.catrobat.musicdroid.pocketmusic.note.midi.MidiToProjectConverter () ; projects . clear () ; for ( java.lang.String aMidiFile : midiFileList ) { try { projects . add ( midiToProjectConverter . convertMidiFileToProject ( new java.io.File ( org.catrobat.musicdroid.pocketmusic.note.midi.ProjectToMidiConverter.MIDI_FOLDER , aMidiFile ) ) ) ; } catch ( org.catrobat.musicdroid.pocketmusic.note.midi.MidiException | java.io.IOException e ) { e . printStackTrace () ; } } } 
@ org.junit.Test public void openHelpWindow () { commandBox . clickOnTextField () ; assertHelpWindowOpen ( mainMenu . openHelpWindowUsingAccelerator () ) ; resultDisplay . clickOnTextArea () ; assertHelpWindowOpen ( mainMenu . openHelpWindowUsingAccelerator () ) ; taskListPanel . clickOnListView () ; assertHelpWindowOpen ( mainMenu . openHelpWindowUsingAccelerator () ) ; browserPanel . clickOnWebView () ; assertHelpWindowOpen ( mainMenu . openHelpWindowUsingAccelerator () ) ; assertHelpWindowOpen ( commandBox . runHelpCommand () ) ; } 
private void addNewDataModel ( java.lang.String xmlData ) throws java.lang.Exception { if ( ( xmlData != null ) && ( ! ( xmlData . isEmpty () ) ) ) { com.jidesoft.app.framework.gui.filebased.FileBasedApplication app = ( ( com.jidesoft.app.framework.gui.filebased.FileBasedApplication ) ( getApplication () ) ) ; com.jidesoft.app.framework.file.FileDataModel data = ( ( com.jidesoft.app.framework.file.FileDataModel ) ( app . newData ( "xml" ) ) ) ; data . setData ( xmlData ) ; data . setDirty ( true ) ; study . addDataModel ( data , true ) ; updateView () ; } } 
public void checkAttributeValue ( cz.metacentrum.perun.core.api.PerunSession sess , cz.metacentrum.perun.core.api.User user , cz.metacentrum.perun.core.api.Attribute attribute ) throws cz.metacentrum.perun.core.api.exceptions.InternalErrorException , cz.metacentrum.perun.core.api.exceptions.WrongAttributeValueException { cz.metacentrum.perun.core.implApi.modules.attributes.UserAttributesModuleImplApi attributeModule = getUserAttributeModule ( sess , attribute ) ; if ( attributeModule == null ) return; try { attributeModule . checkAttributeValue ( ( ( cz.metacentrum.perun.core.impl.PerunSessionImpl ) ( sess ) ) , user , attribute ) ; } catch ( cz.metacentrum.perun.core.api.exceptions.WrongAttributeAssignmentException ex ) { throw new cz.metacentrum.perun.core.api.exceptions.InternalErrorException ( ex ) ; } catch ( cz.metacentrum.perun.core.api.exceptions.WrongReferenceAttributeValueException ex ) { throw new cz.metacentrum.perun.core.api.exceptions.InternalErrorException ( ex ) ; } } 
public java.lang.String GetResult () { java.lang.String result = "" ; if ( RunForwardsChaining () ) { result = "YES: " ; for ( int i = 0 ; i < ( solver.ForwardsChaining.entails . size () ) ; i = i + 1 ) { result += ( " " + ( solver.ForwardsChaining.entails . get ( i ) ) ) + "," ; } result += " " + ( solver.ForwardsChaining.query ) ; } else { result = "NO" ; } return result ; } 
@ java.lang.Override public void afterConnectionClosed ( org.springframework.web.socket.WebSocketSession session , org.springframework.web.socket.CloseStatus status ) throws java.lang.Exception { com.web.websocket.WebSocketHandler.logger . debug ( ( "Close session, id = " + ( session . getId () ) ) ) ; webSocketService . removeSession ( session ) ; super . afterConnectionClosed ( session , status ) ; com.web.websocket.WebSocketHandler.logger . debug ( ( "After connection closed, id = " + ( session . getId () ) ) ) ; } 
@ java.lang.Override public void onBindViewHolder ( a00907981.comp3717.bcit.ca.tabtest.RecipeList.Ingred.ItemAdapter.ViewHolder holder , int position ) { super . onBindViewHolder ( holder , position ) ; java.lang.String text = mItemList . get ( position ) . second . getIngredient_name () ; holder.mText . setText ( text ) ; holder.itemView . setTag ( mItemList . get ( position ) ) ; } 
private void connect () { java.util.Map < java.lang.String , java.lang.String > headers = new java.util.HashMap < java.lang.String , java.lang.String > () ; headers . put ( "X-Sd-Token" , streamdataioAppToken ) ; try { java.lang.String targetUrl = ( streamdataioProxyPrefix ) + ( myApi ) ; eventSource = new tylerjroach.com.eventsource_android.EventSource ( new java.net.URI ( targetUrl ) , new com.streamdataio.android.stockmarket.StockMarketList.SSEHandler () , headers ) ; } catch ( java.net.URISyntaxException e ) { e . printStackTrace () ; } eventSource . connect () ; } 
@ java.lang.Override public int clampViewPositionHorizontal ( android.view.View child , int left , int dx ) { if ( ( dx < 0 ) && ( ! ( leftAble ) ) ) { return 0 ; } if ( ( dx > 0 ) && ( ! ( rightAble ) ) ) { return 0 ; } return left ; } 
public net.thucydides.core.steps.StepEventBus registerListener ( final net.thucydides.core.steps.StepListener listener ) { java.lang.System.out . printf ( ( "Register listener " + listener ) ) ; if ( ! ( registeredListeners . contains ( listener ) ) ) { registeredListeners . add ( listener ) ; if ( net.thucydides.core.steps.BaseStepListener . class . isAssignableFrom ( listener . getClass () ) ) { baseStepListener = ( ( net.thucydides.core.steps.BaseStepListener ) ( listener ) ) ; baseStepListener . setEventBus ( this ) ; } } return this ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/getWelcomeMessage" ) public void getWelcomeMessage ( final javax.servlet.http.HttpServletRequest httpRequest , final javax.servlet.http.HttpServletResponse httpResponse ) throws java.io.IOException { final com.jammcreations.model.Parameter parameter = userService . getParameter ( "WELCOME_MESSAGE" ) ; final com.jammcreations.json.Response response = new com.jammcreations.json.Response () ; response . setSuccess ( true ) ; response . setPayload ( parameter . getValue () ) ; response . setMessage ( "Welcome message retrieved." ) ; final java.io.PrintWriter writer = httpResponse . getWriter () ; summaryMapper . writeValue ( writer , response ) ; writer . flush () ; writer . close () ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/delete" ) public org.springframework.web.servlet.ModelAndView helloWorld ( @ org.springframework.web.bind.annotation.RequestParam ( value = "id" ) java.lang.String id , @ org.springframework.web.bind.annotation.CookieValue ( value = "personid" , defaultValue = "" ) java.lang.String personIdInCookie ) { if ( ! ( personIdInCookie . equals ( "" ) ) ) { personService . deleltePerson ( id ) ; return new org.springframework.web.servlet.ModelAndView ( "redirect:/hello" ) ; } else { return new org.springframework.web.servlet.ModelAndView ( "login" ) ; } } 
public static controllers.Result deleteRateCriterion ( java.lang.Long id ) { java.util.List < controllers.RateCriterion > rateCs = controllers.RateCriterion . findById ( id ) ; for ( controllers.RateCriterion rateC : rateCs ) { rateC . delete () ; } return redirect ( ( ( routes.AdminPage . index () ) + "#criterions" ) ) ; } 
< T > spoon.reflect.reference.CtTypeReference < T > getTypeReference ( org.eclipse.jdt.internal.compiler.lookup.TypeBinding binding , org.eclipse.jdt.internal.compiler.ast.TypeReference ref ) { spoon.reflect.reference.CtTypeReference < T > ctRef = getTypeReference ( binding ) ; if ( ( ctRef != null ) && ( isCorrectTypeReference ( ref ) ) ) { insertGenericTypesInNoClasspathFromJDTInSpoon ( ref , ctRef ) ; return ctRef ; } return getTypeReference ( ref ) ; } 
@ java.lang.Override public void onReceive ( se.jakobkrantz.transit.app.reporting.fragments.Context context , se.jakobkrantz.transit.app.reporting.fragments.Intent intent ) { java.lang.String action = intent . getStringExtra ( GcmConstants.ACTION ) ; android.util.Log . d ( "BroadCast rec action " , action ) ; if ( action . equals ( GcmConstants.ACTION_REGISTER_SUCCESSFUL ) ) { final se.jakobkrantz.transit.app.reporting.fragments.SharedPreferences prefs = getGcmPreferences ( context ) ; se.jakobkrantz.transit.app.reporting.fragments.SharedPreferences.Editor editor = prefs . edit () ; editor . putBoolean ( se.jakobkrantz.transit.app.reporting.fragments.ReportFragment.REGISTRATION_SUCCESSFUL , true ) ; editor . commit () ; } else if ( action . equals ( GcmConstants.ACTION_ACK ) ) { ackReceived = true ; } } 
@ java.lang.Override public boolean onSingleTapUp ( android.view.MotionEvent e ) { switch ( mCurrentPictureState ) { case com.mickaelg.lookanimation.ui.LookAnimationDelegate.STATE_NOT_ZOOMED : mCurrentPictureState = com.mickaelg.lookanimation.ui.LookAnimationDelegate.STATE_UPPER_BODY ; zoomInPicture () ; slideInUpperBodyLayout () ; break; case com.mickaelg.lookanimation.ui.LookAnimationDelegate.STATE_UPPER_BODY : mCurrentPictureState = com.mickaelg.lookanimation.ui.LookAnimationDelegate.STATE_NOT_ZOOMED ; zoomOutPicture () ; slideOutUpperBodyLayout () ; break; case com.mickaelg.lookanimation.ui.LookAnimationDelegate.STATE_LOWER_BODY : mCurrentPictureState = com.mickaelg.lookanimation.ui.LookAnimationDelegate.STATE_NOT_ZOOMED ; zoomOutPicture () ; slideOutLowerBodyLayout () ; } return true ; } 
void checkBluetooth () { lilium.arubabacon.MainActivity.btManager = ( ( android.bluetooth.BluetoothManager ) ( getSystemService ( Context.BLUETOOTH_SERVICE ) ) ) ; lilium.arubabacon.MainActivity.btAdapter = lilium.arubabacon.MainActivity.btManager . getAdapter () ; if ( ( ( lilium.arubabacon.MainActivity.btAdapter ) != null ) && ( ! ( lilium.arubabacon.MainActivity.btAdapter . isEnabled () ) ) ) { android.content.Intent enableIntent = new android.content.Intent ( android.bluetooth.BluetoothAdapter.ACTION_REQUEST_ENABLE ) ; startActivityForResult ( enableIntent , 1 ) ; } else { setup () ; } } 
private boolean kingMove ( int fromRow , int fromCol , int toRow , int toCol ) { java.lang.System.out . println ( ( "KINGMOVE-fromRow=" + fromRow ) ) ; if ( ( fromRow != 4 ) && ( fromRow != 8 ) ) { java.lang.System.out . println ( ( "KINGMOVE-fromRow-ERROR=" + fromRow ) ) ; java.lang.System . exit ( ( - 1 ) ) ; } boolean possible = isBasicMovePossible ( fromRow , fromCol , toRow , toCol ) ; if ( possible ) { addPossibleMovesAndThreads ( fromRow , fromCol , toRow , toCol ) ; } else return false ; return true ; } 
public int boxCheckHelper ( int [] [] grid , int row , int col ) { int [] freq = new int [ 10 ] ; for ( int i = row ; i < ( row + 3 ) ; i ++ ) { for ( int j = col ; j < ( col + 3 ) ; j ++ ) { ( freq [ grid [ i ] [ j ] ] ) ++ ; } } return freqChecker ( freq ) ; } 
public void setColumnType ( java.lang.String columnType ) { if ( columnType != null ) { if ( columnType . toLowerCase () . equals ( "string" ) ) { this . columnType = "varchar(150)" ; } if ( columnType . toLowerCase () . equals ( "integer" ) ) { this . columnType = "INT" ; } } else { this . columnType = columnType ; } } 
public java.util.List < by.dzmitry.model.entities.Tag > filter ( java.util.List < by.dzmitry.model.entities.Tag > tags , java.lang.Object predicate ) { java.util.List < by.dzmitry.model.entities.Tag > filtered = new java.util.ArrayList <> () ; for ( by.dzmitry.model.entities.Tag tag : tags ) { if ( ! ( tag . getName () . equals ( tag . getName () . toUpperCase () ) ) ) { filtered . add ( tag ) ; } } return filtered ; } 
public int insert ( java.util.Random rg , java.lang.Integer [] ind , int noi ) { int j = rg . nextInt ( noi ) ; for ( java.lang.Integer i : ind ) { if ( i == j ) return insert ( rg , ind , noi ) ; } return j ; } 
public static java.awt.Color getOfficialColor ( java.lang.Object animal ) { if ( ( ( animal instanceof Bear ) || ( animal instanceof Fox ) ) || ( animal instanceof Rabbit ) ) { Animal a = ( ( Animal ) ( animal ) ) ; return a . getColor () ; } else if ( animal instanceof Hunter ) { Hunter h = ( ( Hunter ) ( animal ) ) ; return h . getOfficialColor () ; } return null ; } 
public static java.lang.String [] split ( java.lang.String val , char sep , boolean ignoreEmptyTokens ) { if ( ( val . length () ) > 0 ) { java.util.List < java.lang.String > list = com.github.obase.kit.StringKit . split2List ( val , sep , ignoreEmptyTokens ) ; return list . toArray ( new java.lang.String [ list . size () ] ) ; } return com.github.obase.kit.StringKit.EMPTY_ARRAY ; } 
private boolean unlinkSlipSign ( org.bukkit.block.Sign sign ) { com.spinalcraft.slipdisk.Slip slip = slipFromUsername ( sign . getLine ( 1 ) ) ; for ( int i = 0 ; i < ( Slip.MAX_SLIPS ) ; i ++ ) { if ( ( slip.sign [ i ] ) != null ) { if ( slip.sign [ i ] . equals ( sign . getLocation () ) ) return unlinkSignWithUsername ( sign . getLine ( ( i + 1 ) ) , ( i + 1 ) ) ; } } return true ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_common_adater ) ; for ( int i = 0 ; i < 20 ; i ++ ) { mBeanList . add ( new com.alphabet.alphabetsdk.CommonAdapterActivity.Bean ( ( "Title_" + i ) , ( "Desc_" + i ) ) ) ; } mMyAdapter = new com.alphabet.alphabetsdk.CommonAdapterActivity.MyAdapter ( this , mBeanList , R.layout.common_adpter_item ) ; setListAdapter ( mMyAdapter ) ; setListAdapter ( mMyAdapter ) ; } 
public void disconnect () { try { javax.swing.JOptionPane . showMessageDialog ( HumanClientGUIFrame , "Disconnected from Server, change port below" ) ; clientSocket . close () ; out . close () ; in . close () ; lt . interrupt () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
private java.lang.String bestTime () { java.util.ArrayList < java.lang.Long > arrayListTemp = new java.util.ArrayList <> () ; for ( long i : arrayListTimes ) { if ( i > 0 ) { arrayListTemp . add ( i ) ; } } if ( ( arrayListTemp . size () ) == 0 ) { return "" ; } return "Best: " + ( com.example.tom.timer.TimerTime . convertMillisToTime ( java.util.Collections . min ( arrayListTemp ) ) ) ; } 
private T [] sort ( T [] arr , java.util.Comparator < ? super T > comparator , int from , int to ) { if ( from >= to ) { return arr ; } int p = sources.algorithms.sorting.QuickSorter . partition ( arr , comparator , from , to ) ; sort ( arr , comparator , from , p ) ; sort ( arr , comparator , ( from + 1 ) , to ) ; return arr ; } 
@ java.lang.Override public boolean setTableId ( org.opendaylight.yang.gen.v1.urn.opendaylight.inventory.rev130819.NodeId nodeId , org.opendaylight.yang.gen.v1.urn.opendaylight.flow.inventory.rev130819.tables.table.FlowBuilder flowBuilder ) { java.util.List < org.opendaylight.yang.gen.v1.urn.opendaylight.flow.inventory.rev130819.tables.Table > tableList = getTableList ( nodeId ) ; for ( org.opendaylight.yang.gen.v1.urn.opendaylight.flow.inventory.rev130819.tables.Table table : tableList ) { java.util.List < org.opendaylight.yang.gen.v1.urn.opendaylight.table.types.rev131026.table.features.table.features.table.properties.TableFeatureProperties > tableFeaturePropertiesList = getTableFeatureProperties ( table ) ; if ( isFlowSupported ( tableFeaturePropertiesList , flowBuilder ) ) { flowBuilder . setTableId ( table . getId () ) ; return true ; } } return false ; } 
protected void dfTraverse ( java.lang.String currentVertex , java.util.Map < java.lang.String , java.lang.Boolean > visited ) { visited . put ( currentVertex , true ) ; java.util.Iterator < uk.ac.ucl.ucabter.graphs.DirectionalGraph.Edge > edgePointer = vertices . get ( currentVertex ) . iterator () ; while ( edgePointer . hasNext () ) { uk.ac.ucl.ucabter.graphs.DirectionalGraph.Edge current = edgePointer . next () ; if ( ( visited . get ( current.terminal ) ) == null ) dfTraverse ( current.terminal , visited ) ; } } 
@ org.junit.Test public void testRegionIsFoundWithPolyphenGreaterThan () { java.lang.String chr = "11" ; int start = 190000 ; int end = 193719 ; org.opencb.biodata.models.feature.Region region = new org.opencb.biodata.models.feature.Region ( chr , start , end ) ; java.util.List < org.opencb.biodata.models.feature.Region > regions = new java.util.ArrayList <> () ; regions . add ( region ) ; java.util.List < uk.ac.ebi.eva.lib.utils.RepositoryFilter > filters = uk.ac.ebi.eva.lib.utils.RepositoryFilterUtils . getRepositoryFilters ( null , ">0.5" , null , null , null ) ; testFiltersHelperRegion ( regions , filters , new java.util.ArrayList <> () , 4 ) ; } 
private ca.nrc.cadc.vos.client.ClientRecursiveSetNode setNodeRecursiveSecure ( final ca.nrc.cadc.beacon.web.resources.Node newNode ) throws java.io.IOException { try { return javax.security.auth.Subject . doAs ( generateVOSpaceUser () , new java.security.PrivilegedExceptionAction < ca.nrc.cadc.vos.client.ClientRecursiveSetNode > () { @ java.lang.Override public ca.nrc.cadc.vos.client.ClientRecursiveSetNode run ( ) throws java.lang.Exception { final ca.nrc.cadc.vos.client.ClientRecursiveSetNode rj = voSpaceClient . setNodeRecursive ( newNode ) ; rj . setMonitor ( false ) ; rj . run () ; return rj ; } } ) ; } catch ( java.security.PrivilegedActionException pae ) { throw new java.io.IOException ( pae . getException () ) ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { int tab = vpPager . getCurrentItem () ; if ( tab == 0 ) { leftNav . setVisibility ( View.VISIBLE ) ; rightNav . setVisibility ( View.INVISIBLE ) ; } tab ++ ; vpPager . setCurrentItem ( tab ) ; } 
private void setupViewPager ( android.support.v4.view.ViewPager viewPager ) { edu.rosehulman.sunz1.rosechat.adapters.NavigationPagerAdapter adapter = new edu.rosehulman.sunz1.rosechat.adapters.NavigationPagerAdapter ( getSupportFragmentManager () ) ; adapter . addFragment ( new edu.rosehulman.sunz1.rosechat.fragments.MessageFragment () , getTitle ( R.id.navigation_message ) ) ; adapter . addFragment ( new edu.rosehulman.sunz1.rosechat.fragments.ContactsFragment () , getTitle ( R.id.navigation_contact ) ) ; adapter . addFragment ( new edu.rosehulman.sunz1.rosechat.fragments.ProfileFragment () , getTitle ( R.id.navigation_profile ) ) ; adapter . addFragment ( new edu.rosehulman.sunz1.rosechat.fragments.EditProfileFragment () , getTitle ( R.id.edit_profile ) ) ; viewPager . setAdapter ( adapter ) ; } 
public java.lang.String displayName () { return ( ( ( ( ( clientName ) + " - " ) + ( Name ) ) + ( description ) ) != null ) && ( ( description . trim () ) != "" ) ? " - " + ( description ) : "" ; } 
private void defendBase ( kingofthehill.domain.GameManager gm ) { if ( ( this . aiType ) == ( AIState.DEFENSIVE ) ) { placeDefenceAtBase ( gm , 2 ) ; } else if ( ( this . aiType ) == ( AIState.AGRESSIVE ) ) {} else if ( ( this . aiType ) == ( AIState.MODERNATE ) ) { placeDefenceAtBase ( gm , 1 ) ; } } 
public static com.sdsmdg.bookshareapp.BSA.ui.fragments.TutorialFragment newInstance ( java.lang.String title , java.lang.String description , int logoId , int dotsId ) { com.sdsmdg.bookshareapp.BSA.ui.fragments.TutorialFragment fragment = new com.sdsmdg.bookshareapp.BSA.ui.fragments.TutorialFragment () ; android.os.Bundle args = new android.os.Bundle () ; args . putString ( com.sdsmdg.bookshareapp.BSA.ui.fragments.TutorialFragment.TITLE , title ) ; args . putString ( com.sdsmdg.bookshareapp.BSA.ui.fragments.TutorialFragment.DESCRIPTION , description ) ; args . putInt ( com.sdsmdg.bookshareapp.BSA.ui.fragments.TutorialFragment.LOGO_ID , logoId ) ; args . putInt ( com.sdsmdg.bookshareapp.BSA.ui.fragments.TutorialFragment.DOTS_ID , dotsId ) ; fragment . setArguments ( args ) ; return fragment ; } 
public static void w ( java.lang.String tag , java.lang.String string , java.lang.Throwable t ) { java.lang.System.out . println ( ( ( ( ( ( org.jraf.androidcontentprovidergenerator.Log.FORMAT . format ( new java.util.Date () ) ) + " W/" ) + tag ) + " " ) + string ) ) ; t . printStackTrace () ; } 
private static java.lang.String LoadData ( android.content.Context context , int patternId , java.lang.String prefix ) { java.io.File file = new java.io.File ( context . getFilesDir () , ( prefix + ( java.lang.String . format ( "%8x" , patternId ) ) ) ) ; try ( java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.FileReader ( file ) ) ) { return reader . readLine () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return "" ; } 
@ java.lang.Override public java.lang.String calculate ( java.lang.String Expression , java.lang.String x ) throws java.lang.IllegalArgumentException { java.lang.Double ans = null ; if ( Expression . contains ( "X" ) ) Expression = Expression . replaceAll ( "X" , "x" ) ; try { ans = parse_expression ( Expression , x ) ; } catch ( java.lang.Exception e ) { throw new java.lang.IllegalArgumentException ( e . getMessage () ) ; } return ans . toString () ; } 
public java.lang.Integer getLastId ( java.lang.Long id ) { io.resourcepool.hvsz.persistance.models.Game g = dao . get ( id ) ; int maxId = 0 ; for ( io.resourcepool.hvsz.persistance.models.Life l : g . getStatus () . getLives () ) { if ( ( l . getId () ) > maxId ) { maxId = l . getId () ; } } return maxId ; } 
public static java.util.List < java.lang.String > recover ( java.util.List < java.lang.Integer > values , java.util.List < java.lang.String > map ) { java.util.List < java.lang.String > result = new java.util.ArrayList <> ( values . size () ) ; for ( int i : nl.peterbloem.kit.Series . series ( values . size () ) ) result . add ( map . get ( i ) ) ; return result ; } 
@ java.lang.Override public boolean onPrepareOptionsMenu ( android.view.Menu menu ) { if ( onl.deepspace.wgs.Helper . getHasNoAds ( getBaseContext () ) ) { android.view.MenuItem mi = menu . findItem ( R.id.action_remads ) ; mi . setVisible ( false ) ; } android.view.MenuItem selectChild = menu . findItem ( R.id.action_select_child ) ; if ( ( mChildren . length () ) < 2 ) { selectChild . setShowAsAction ( MenuItem.SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW ) ; } else { selectChild . setShowAsAction ( MenuItem.SHOW_AS_ACTION_IF_ROOM ) ; } return super . onPrepareOptionsMenu ( menu ) ; } 
public void parseListReader () { nhs.genetics.cardiff.framework.ListReader.log . log ( java.util.logging.Level.INFO , "Parsing list" ) ; java.lang.String line ; try ( java.io.BufferedReader bReader = new java.io.BufferedReader ( new java.io.FileReader ( filePath ) ) ) { while ( ( line = bReader . readLine () ) != null ) { elements . add ( line ) ; uniqueElements . add ( line ) ; } bReader . close () ; } catch ( java.io.IOException e ) { nhs.genetics.cardiff.framework.ListReader.log . log ( java.util.logging.Level.SEVERE , ( "Problem reading list: " + ( e . getMessage () ) ) ) ; } } 
@ java.lang.Override public void onConfirmation ( java.lang.String callerTag ) { com.owncloud.android.ui.activity.ComponentsGetter cg = ( ( com.owncloud.android.ui.activity.ComponentsGetter ) ( getSherlockActivity () ) ) ; com.owncloud.android.datamodel.FileDataStorageManager storageManager = cg . getStorageManager () ; if ( ( storageManager . getFileById ( mTargetFile . getFileId () ) ) != null ) { java.lang.String path = new java.io.File ( mTargetFile . getStoragePath () ) . getParent () ; cg . getFileOperationsHelper () . removeFile ( mTargetFile , false ) ; triggerMediaScan ( path ) ; } } 
public void handle ( javafx.event.ActionEvent event ) { application.Main . commandHandlerOld ( txtF . getText () ) ; txtF . clear () ; java.lang.System.out . println ( ( "textfield Text: " + ( txtF . getText () ) ) ) ; application.Main . wordHandler ( txtF . getText () ) ; executeCommand ( txtF . getText () ) ; txtF . clear () ; } 
private static void parseSendWirePoleCheckRecordByServiceData ( java.lang.String response , android.os.Handler handler , java.lang.String SerialNumber ) { if ( response . equals ( "2" ) ) { android.os.Message message = new android.os.Message () ; message.obj = SerialNumber ; message.what = com.xgf.inspection.network.logic.AppLogic.SEND_RECORD_SUC ; handler . sendMessage ( message ) ; } else { handler . sendEmptyMessage ( com.xgf.inspection.network.logic.AppLogic.SEND_RECORD_FAIL ) ; } } 
@ java.lang.Override public void stop () { if ( stopFlag . compareAndSet ( false , true ) ) { fireLifeCycleEvent ( LifeCyclePhase.BEFORE_STOP , null ) ; stop0 () ; fireLifeCycleEvent ( LifeCyclePhase.AFTER_STOP , null ) ; } else { com.shinemo.mpush.api.container.AbstractLifeCycle.log . error ( ( "has stop:" + ( this . getClass () . getSimpleName () ) ) ) ; } } 
@ org.junit.Test public void testSpy () { owo.com.androidunittest.targets.A a = new owo.com.androidunittest.targets.A () ; a = org.mockito.Mockito . spy ( a ) ; org.mockito.Mockito . when ( a . publicMethod () ) . thenReturn ( "mockA" ) ; junit.framework.Assert . assertEquals ( "mockA" , a . publicMethod () ) ; junit.framework.Assert . assertEquals ( "publicMethod2" , a . publicMethod2 () ) ; org.mockito.Mockito . verify ( a , org.mockito.Mockito . times ( 0 ) ) . publicMethod () ; } 
@ java.lang.Override public void act ( float delta ) { super . act ( delta ) ; com.badlogic.gdx.math.Vector2 velocity = myrddin . getLinearVelocity () ; if ( ( velocity.y ) == 0 ) myrddin . setMyrddinState ( new fr.imac.myrddin.game.myrddin.MyrddinIddle ( myrddin ) ) ; moveInTheAir () ; } 
@ org.junit.Test public void shouldDetectWhenResourceWasUnloadedOnlyOnce () { com.gemserk.resources.MockResource resource = new com.gemserk.resources.MockResource ( new com.gemserk.resources.dataloaders.MockDataLoader ( "DATA" ) ) ; resource . load () ; com.gemserk.resources.monitor.ResourceStatusMonitor resourceStatusMonitor = new com.gemserk.resources.monitor.ResourceStatusMonitor ( resource ) ; resource . unload () ; resourceStatusMonitor . checkChanges () ; resourceStatusMonitor . checkChanges () ; org.junit.Assert . assertThat ( resourceStatusMonitor . wasUnloaded () , org.hamcrest.core.IsEqual . equalTo ( false ) ) ; } 
private javax.swing.JButton createNewAlbumButton () { javax.swing.ImageIcon newAlbumIcon = new javax.swing.ImageIcon ( "icons/folder_add_32.png" ) ; javax.swing.JButton newAlbumButton = new javax.swing.JButton ( "New Album" ) ; newAlbumButton . setToolTipText ( "New Album" ) ; newAlbumButton . addActionListener ( new java.awt.event.ActionListener () { public void actionPerformed ( java.awt.event.ActionEvent e ) { controller . addNewAlbum () ; } } ) ; return newAlbumButton ; } 
@ java.lang.Override public void create () { batch = new com.badlogic.gdx.graphics.g2d.SpriteBatch () ; font = new com.badlogic.gdx.graphics.g2d.BitmapFont () ; font . setColor ( Color.RED ) ; screen = new com.dive.game.GameScreen ( Gdx.graphics . getWidth () , Gdx.graphics . getHeight () , 0 , 0 ) ; gameState = new com.dive.game.GameState ( 1 ) ; newObjects = new com.dive.game.ObjectGenerator ( 8 , 8 , 8 , 0.1F , screen ) ; world = new com.dive.game.World ( newObjects , screen , 0.1F , gameState , Android ) ; pauseCD = 0 ; } 
public static com.liferay.portlet.documentlibrary.model.DLFolder getFolder ( long groupId , long parentFolderId , java.lang.String name ) { com.liferay.portlet.documentlibrary.model.DLFolder dlFolder = null ; try { dlFolder = com.liferay.portlet.documentlibrary.service.DLFolderLocalServiceUtil . getFolder ( groupId , parentFolderId , name ) ; } catch ( java.lang.Exception e ) { org.opencps.util.DLFolderUtil._log . warn ( e . getMessage () ) ; } return dlFolder ; } 
@ java.lang.Override public void newSubscriptionCount ( int argCount ) { boolean showEmpty = argCount == 0 ; int visibility = ( showEmpty ) ? android.view.View.VISIBLE : android.view.View.GONE ; if ( ( ( mShowEmptyView ) == null ) || ( ( mShowEmptyView . booleanValue () ) != showEmpty ) ) { if ( showEmpty ) { mEmptySubscrptionList . setVisibility ( View.VISIBLE ) ; } else { mEmptySubscrptionList . setVisibility ( View.GONE ) ; } mShowEmptyView = showEmpty ; } } 
@ java.lang.Override public void changed ( javafx.beans.value.ObservableValue < ? extends java.lang.String > observableValue , java.lang.String oldValue , java.lang.String newValue ) { if ( ! ( oldValue . equals ( newValue ) ) ) { if ( ! ( newValue . equals ( "" ) ) ) { int finalCost = finalCost ( java.lang.Integer . parseInt ( newValue ) ) ; newCost ( finalCost ) ; } } } 
public static org.joda.time.DateTime parseDateTime ( java.lang.String timestamp ) { if ( timestamp != null ) { for ( org.joda.time.format.DateTimeFormatter formatter : com.google.api.ads.adwords.awreporting.model.util.DateUtil.formatters ) { try { org.joda.time.LocalDateTime localDateTime = formatter . parseLocalDateTime ( timestamp ) ; return localDateTime . plusHours ( 12 ) . toDateTime ( DateTimeZone.UTC ) ; } catch ( java.lang.IllegalArgumentException e ) {} } } return null ; } 
private void setUpToolbarTitle () { switch ( typeOfQuestion ) { case de.mi.ur.Constants.MULTIPLE_CHOICE : getSupportActionBar () . setTitle ( R.string.multiple_choice_button ) ; break; case de.mi.ur.Constants.TRUE_FALSE : getSupportActionBar () . setTitle ( R.string.wrong_true_button ) ; break; case de.mi.ur.Constants.FREETEXT : getSupportActionBar () . setTitle ( R.string.manual_entry_button ) ; default: getSupportActionBar () . setTitle ( R.string.practice_main_toolbar_headline ) ; } } 
@ java.lang.Override public javafx.scene.Node getConntentNode () { if ( ( border ) == null ) { border = new javafx.scene.layout.BorderPane () ; chartView . drawDefaultAreaChart () ; border . setTop ( chartView . getLegend () ) ; border . setCenter ( chartView . getAreaChartRegion () ) ; border . setStyle ( ( "-fx-background-color: " + ( Constants.Color.LIGHT_GREY2 ) ) ) ; } return border ; } 
private void fillBoard () { int value = 0 ; for ( int j = 0 ; j < 4 ; j ++ ) { for ( int i = 0 ; i < 4 ; i ++ ) { tiles [ i ] [ j ] = ++ value ; } } tiles [ 3 ] [ 3 ] = 0 ; } 
@ org.junit.Test public void cancelActionsCaseNotFound ( ) throws java.lang.Exception { org.springframework.test.web.servlet.ResultActions resultActions = mockMvc . perform ( uk.gov.ons.ctp.common.MvcHelper . putJson ( java.lang.String . format ( "/actions/case/%s/cancel" , uk.gov.ons.ctp.response.action.endpoint.ActionEndpointUnitTest.NON_EXISTING_ID ) , "" ) ) ; resultActions . andExpect ( org.springframework.test.web.servlet.result.MockMvcResultMatchers . status () . isNotFound () ) . andExpect ( org.springframework.test.web.servlet.result.MockMvcResultMatchers . handler () . handlerType ( uk.gov.ons.ctp.response.action.endpoint.ActionEndpoint . class ) ) . andExpect ( org.springframework.test.web.servlet.result.MockMvcResultMatchers . handler () . methodName ( "cancelActions" ) ) . andExpect ( org.springframework.test.web.servlet.result.MockMvcResultMatchers . jsonPath ( "$.error.code" , org.hamcrest.CoreMatchers . is ( CTPException.Fault.RESOURCE_NOT_FOUND . name () ) ) ) ; } 
public synchronized void start () { org.apache.kafka.streams.KafkaStreams.log . debug ( "Starting Kafka Stream process" ) ; if ( ( state ) == ( org.apache.kafka.streams.KafkaStreams.State.CREATED ) ) { for ( final org.apache.kafka.streams.processor.internals.StreamThread thread : threads ) thread . start () ; setState ( org.apache.kafka.streams.KafkaStreams.State.RUNNING ) ; org.apache.kafka.streams.KafkaStreams.log . info ( "Started Kafka Stream process" ) ; } else { throw new java.lang.IllegalStateException ( "Cannot start again." ) ; } } 
public static java.lang.String getAttrContent ( java.lang.String attrName , java.lang.String text ) { java.lang.String regex = ( "(?:" + attrName ) + "=\")([^\"]+)" ; java.util.regex.Pattern pattern = java.util.regex.Pattern . compile ( regex ) ; java.util.regex.Matcher match = pattern . matcher ( text ) ; content = ( match . find () ) ? match . group ( 1 ) : "" ; return common.Util . removeHTMLTags ( content ) ; } 
public void run () { while ( true ) { if ( ( stepsToDo ) > 0 ) { tick () ; ( stepsToDo ) -- ; } else { try { java.lang.Thread . sleep ( tickPause ) ; } catch ( java.lang.InterruptedException e ) { java.lang.System.out . println ( "sleep failed" ) ; e . printStackTrace () ; } } } } 
void setAutomaticBaseUnit ( boolean setAutomaticBaseCoversionPolyCoeffs ) { if ( ( unitManagerRef ) != null ) { com.example.unitconverter.Unit retrievedBaseUnit = unitManagerRef . getBaseUnit ( this ) ; if ( ( ! ( this . getBaseUnit () . equals ( retrievedBaseUnit ) ) ) && ( ! ( retrievedBaseUnit . getUnitName () . equalsIgnoreCase ( com.example.unitconverter.Unit.UNKNOWN_UNIT_NAME ) ) ) ) { if ( this . baseUnit . getBaseUnit () . equals ( retrievedBaseUnit ) ) { setBaseUnit ( this . baseUnit , setAutomaticBaseCoversionPolyCoeffs ) ; } else { setBaseUnit ( retrievedBaseUnit , setAutomaticBaseCoversionPolyCoeffs ) ; } } } } 
private com.google.common.util.concurrent.CheckedFuture < java.lang.Void , org.opendaylight.controller.md.sal.common.api.data.TransactionCommitFailedException > putDataViaTransaction ( final org.opendaylight.controller.md.sal.dom.api.DOMDataReadWriteTransaction writeTransaction , final org.opendaylight.controller.md.sal.common.api.data.LogicalDatastoreType datastore , final org.opendaylight.yangtools.yang.data.api.YangInstanceIdentifier path , final org.opendaylight.yangtools.yang.data.api.schema.NormalizedNode < ? , ? > payload , final org.opendaylight.yangtools.yang.model.api.SchemaContext schemaContext ) { org.opendaylight.netconf.sal.restconf.impl.BrokerFacade.LOG . trace ( "Put {} via Restconf: {} with payload {}" , datastore . name () , path , payload ) ; org.opendaylight.restconf.restful.utils.TransactionUtil . ensureParentsByMerge ( path , schemaContext , writeTransaction ) ; writeTransaction . put ( datastore , path , payload ) ; return writeTransaction . submit () ; } 
private void openKikUrl ( android.content.Context context , java.lang.String url ) { android.content.Intent intent = new android.content.Intent () ; intent . setAction ( Intent.ACTION_VIEW ) ; intent . addFlags ( Intent.FLAG_ACTIVITY_RESET_TASK_IF_NEEDED ) ; intent . addFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ; intent . setData ( android.net.Uri . parse ( url ) ) ; if ( canLaunchIntent ( context , intent ) ) { context . startActivity ( intent ) ; } else { showKikInPlayStore ( context ) ; } } 
private double coverageConstraint () { double coverPercentage = getCoverPercentage () ; if ( ( ( MIN_COVER_PERCENTAGE ) < coverPercentage ) && ( coverPercentage < ( MAX_COVER_PERCENTAGE ) ) ) { return 1.0 ; } if ( ( MAX_COVER_PERCENTAGE ) < coverPercentage ) { return 1 - ( java.lang.Math . sqrt ( ( coverPercentage - ( MAX_COVER_PERCENTAGE ) ) ) ) ; } return 0.0 ; } 
@ java.lang.Override public void handle ( de.westnordost.osmapi.map.data.Element element , de.westnordost.streetcomplete.data.osm.ElementGeometry geometry ) { com.vividsolutions.jts.geom.Geometry g = de.westnordost.streetcomplete.util.JTSConst . toGeometry ( geometry ) ; for ( com.vividsolutions.jts.geom.Point p : housenumberCoords ) { if ( g . covers ( p ) ) return; } handler . handle ( element , geometry ) ; } 
public static java.lang.String readFileText ( java.io.File file ) throws java.io.IOException { java.lang.StringBuilder sb = new java.lang.StringBuilder ( 64 ) ; java.io.BufferedReader in = new java.io.BufferedReader ( new java.io.FileReader ( file ) ) ; java.lang.String s ; while ( ( s = in . readLine () ) != null ) { sb . append ( s ) . append ( '\n' ) ; } return sb . toString () ; } 
private com.bitdubai.fermat_api.layer.osa_android.file_system.PluginTextFile getWalletIssuerFile ( ) throws com.bitdubai.fermat_api.CantStartPluginException { try { com.bitdubai.fermat_api.layer.osa_android.file_system.PluginTextFile walletIssuerFile = pluginFileSystem . getTextFile ( pluginId , "" , org.fermat.fermat_dap_plugin.layer.wallet.asset.issuer.developer.version_1.AssetIssuerWalletPluginRoot.WALLET_ISSUER_FILE_NAME , FilePrivacy.PRIVATE , FileLifeSpan.PERMANENT ) ; walletIssuerFile . loadFromMedia () ; return walletIssuerFile ; } catch ( com.bitdubai.fermat_api.layer.osa_android.file_system.exceptions.FileNotFoundException | com.bitdubai.fermat_api.layer.osa_android.file_system.exceptions.CantCreateFileException e ) { reportError ( UnexpectedPluginExceptionSeverity.DISABLES_THIS_PLUGIN , e ) ; return createWalletIssuerFile () ; } catch ( com.bitdubai.fermat_api.layer.osa_android.file_system.exceptions.CantLoadFileException e ) { reportError ( UnexpectedPluginExceptionSeverity.DISABLES_THIS_PLUGIN , e ) ; throw new com.bitdubai.fermat_api.CantStartPluginException ( com.bitdubai.fermat_api.CantStartPluginException.DEFAULT_MESSAGE , e , null , null ) ; } } 
public void updateToNextRecurringTask () { assert isRecurring () ; if ( isTaskWithDeadline () ) { setStartDateTime ( getNextRecurringDateTime ( startDateTime ) ) ; setEndDateTime ( getNextRecurringDateTime ( endDateTime ) ) ; } else if ( isEvent () ) { long days = java.time.temporal.ChronoUnit.DAYS . between ( endDateTime , getNextRecurringDateTime ( endDateTime ) ) ; setStartDateTime ( startDateTime . plusDays ( days ) ) ; setEndDateTime ( endDateTime . plusDays ( days ) ) ; } setCompleted ( false ) ; } 
public java.lang.String getLogin ( java.lang.String userName , java.lang.String password ) throws java.rmi.RemoteException { java.lang.String code = "" ; peerFile.wsdl.ServiceStub.Login login = new peerFile.wsdl.ServiceStub.Login () ; login . setUser_name ( userName ) ; login . setPassword ( password ) ; peerFile.wsdl.ServiceStub.LoginResponse response = service . login ( login ) ; code = response . getSession_code () ; java.lang.System.out . println ( response . getSession_code () ) ; java.lang.System.out . println ( response . getSuccess () ) ; return code ; } 
@ org.jetbrains.annotations.NotNull public java.util.List < com.intellij.debugger.engine.Location > locationsOfLine ( @ org.jetbrains.annotations.NotNull com.intellij.debugger.engine.ReferenceType type , @ org.jetbrains.annotations.NotNull com.intellij.debugger.SourcePosition position ) throws com.intellij.debugger.NoDataException { try { final int line = ( position . getLine () ) + 1 ; return type . locationsOfLine ( DebugProcess.JAVA_STRATUM , null , line ) ; } catch ( com.intellij.debugger.engine.AbsentInformationException ignored ) {} catch ( com.intellij.debugger.engine.InternalException e ) { com.intellij.debugger.engine.PositionManagerImpl.LOG . info ( e ) ; } return java.util.Collections . emptyList () ; } 
protected com.arangodb.velocystream.Request documentExistsRequest ( final java.lang.String key , final com.arangodb.model.DocumentExistsOptions options ) { final com.arangodb.velocystream.Request request ; request = new com.arangodb.velocystream.Request ( db , com.arangodb.velocystream.RequestType.HEAD , executor . createPath ( ArangoDBConstants.PATH_API_DOCUMENT , createDocumentHandle ( key ) ) ) ; final com.arangodb.model.DocumentExistsOptions params = ( options != null ) ? options : new com.arangodb.model.DocumentExistsOptions () ; request . putHeaderParam ( ArangoDBConstants.IF_MATCH , params . getIfMatch () ) ; request . putHeaderParam ( ArangoDBConstants.IF_NONE_MATCH , params . getIfNoneMatch () ) ; return request ; } 
public void playMusic ( java.lang.String musicName ) { com.badlogic.gdx.audio.Music music = loadedMusic . get ( musicName ) ; if ( music == null ) { music = gameControl . getGameAssetManager () . get ( musicName , com.badlogic.gdx.audio.Music . class ) ; loadedMusic . put ( musicName , music ) ; } music . setVolume ( ( musicMute ? 0.0F : musicVolume ) ) ; music . play () ; music . setLooping ( true ) ; } 
@ java.lang.Override public void execute ( com.facebook.react.uimanager.NativeViewHierarchyManager nativeViewHierarchyManager ) { android.view.View view = nativeViewHierarchyManager . resolveView ( rootTag ) ; if ( view instanceof net.mischneider.MSREventBridgeEventReceiver ) { net.mischneider.MSREventBridgeEventReceiver receiver = ( ( net.mischneider.MSREventBridgeEventReceiver ) ( view . getParent () ) ) ; receiver . onEvent ( name , info ) ; return; } android.content.Context context = view . getContext () ; if ( context instanceof net.mischneider.MSREventBridgeEventReceiver ) { net.mischneider.MSREventBridgeEventReceiver receiver = ( ( net.mischneider.MSREventBridgeEventReceiver ) ( context ) ) ; receiver . onEvent ( name , info ) ; } } 
private boolean add ( T value ) { try { if ( ( size ) == 0 ) { start = new LNode ( value ) ; end = start ; } else { end . setNext ( new LNode ( value ) ) ; end = end . getNext () ; } ( size ) ++ ; return true ; } catch ( java.lang.IndexOutOfBoundsException e ) { java.lang.System.out . println ( "Index out of bound" ) ; } } 
@ java.lang.Override public void onLoadFinished ( android.support.v4.content.Loader < android.database.Cursor > cursorLoader , android.database.Cursor cursor ) { int i = 0 ; cursor . moveToFirst () ; while ( ! ( cursor . isAfterLast () ) ) { i ++ ; cursor . moveToNext () ; } mAdapter . swapCursor ( cursor ) ; android.content.Intent dataUpdatedIntent = new android.content.Intent ( barqsoft.footballscores.service.myFetchService.ACTION_DATA_UPDATED ) . setPackage ( getActivity () . getPackageName () ) ; getActivity () . sendBroadcast ( dataUpdatedIntent ) ; } 
public void clear () { com.shadowxz.LinkedList.Node < T > mark = first ; while ( ( mark.next ) != null ) { com.shadowxz.LinkedList.Node < T > markNext = mark.next ; mark.prev = null ; mark.next = null ; mark = markNext ; ( size ) -- ; } } 
public void findPath () { java.lang.System.out . println ( "find path" ) ; java.awt.Point current = start ; java.util.ArrayList < pathfinding.Way > possibleDirections = getAllpossibleDirections ( current , Way.LEFT ) ; for ( pathfinding.Way direction : possibleDirections ) { goTo ( current , direction , new java.util.ArrayList < pathfinding.Way > () ) ; } java.lang.System.out . println ( allPaths . size () ) ; for ( java.util.ArrayList < pathfinding.Way > path : allPaths ) { java.lang.System.out . print ( path ) ; } } 
protected static int search ( int [] array , int pivot ) { int result = java.util.Arrays . binarySearch ( array , pivot ) ; if ( result == ( - 1 ) ) return 0 ; else if ( result > 0 ) return result ; else { return ( java.lang.Math . abs ( result ) ) - 2 ; } } 
public void updatePaymentMethods ( long id , java.lang.String name , int posAfterSort , int type ) { android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; android.content.ContentValues contentValues = new android.content.ContentValues () ; contentValues . put ( com.ab.piggybank.DatabaseHelper.COLUMN_PAYMENT_METHOD_NAME , name ) ; contentValues . put ( com.ab.piggybank.DatabaseHelper.COLUMN_METHOD_TYPE , type ) ; contentValues . put ( com.ab.piggybank.DatabaseHelper.COLUMN_METHOD_TYPE_AFTER_SORT , posAfterSort ) ; contentValues . put ( com.ab.piggybank.DatabaseHelper.COLUMN_METHOD_USABLE , 1 ) ; db . update ( com.ab.piggybank.DatabaseHelper.TABLENAME_3 , contentValues , ( ( ( com.ab.piggybank.DatabaseHelper.COLUMN_ID ) + " = " ) + id ) , null ) ; } 
public void testRootPropertiesPersistAfterFormat ( ) throws java.lang.Exception { org.apache.ignite.internal.processors.igfs.IgfsAbstractSelfTest.igfs . update ( new org.apache.ignite.igfs.IgfsPath ( "/" ) , java.util.Collections . singletonMap ( "foo" , "moo" ) ) ; org.apache.ignite.internal.processors.igfs.IgfsAbstractSelfTest.igfs . format () ; org.apache.ignite.igfs.IgfsFile file = org.apache.ignite.internal.processors.igfs.IgfsAbstractSelfTest.igfs . info ( new org.apache.ignite.igfs.IgfsPath ( "/" ) ) ; java.util.Map < java.lang.String , java.lang.String > props = file . properties () ; assertEquals ( "moo" , props . get ( "foo" ) ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/cs480/jsoupHyperLinks" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) java.util.List < java.lang.String > parseHyperlinks ( java.lang.String url ) { org.jsoup.nodes.Document doc ; try { doc = org.jsoup.Jsoup . connect ( url ) . get () ; org.jsoup.select.Elements links = doc . select ( "a[href]" ) ; java.util.List < java.lang.String > storedLinks = new java.util.List < java.lang.String > () ; for ( org.jsoup.nodes.Element link : links ) { storedLinks . add ( link . attr ( "href" ) ) ; } } catch ( edu.csupomona.cs480.controller.IOException e ) { e . printStackTrace () ; } } 
public apex.jorje.semantic.compiler.ApexCompiler visitAstsFromStrings ( java.util.List < java.lang.String > sources , apex.jorje.semantic.ast.visitor.AstVisitor < apex.jorje.semantic.ast.visitor.AdditionalPassScope > visitor , apex.jorje.semantic.compiler.CompilerStage compilerStage ) { java.util.List < apex.jorje.semantic.compiler.SourceFile > sourceFiles = sources . stream () . map ( ( s ) - > apex.jorje.semantic.compiler.SourceFile . builder () . setBody ( net.sourceforge.pmd.lang.apex.ast.CompilerService . canonicalizeString ( s ) ) . build () ) . collect ( java.util.stream.Collectors . toList () ) ; apex.jorje.semantic.compiler.CompilationInput compilationUnit = createCompilationInput ( sourceFiles , visitor ) ; return compile ( compilationUnit , visitor , compilerStage ) ; } 
public static java.io.File moduleDir ( com.intellij.openapi.module.Module module ) { if ( module == null ) return null ; if ( com.thoughtworks.gauge.util.GaugeUtil . isGradleModule ( module ) ) return com.thoughtworks.gauge.util.GaugeUtil . getProjectDirForGradleProject ( module ) ; java.lang.String pathname = com.thoughtworks.gauge.util.GaugeUtil . moduleDirPath ( module ) ; if ( pathname != null ) return new java.io.File ( pathname ) ; java.lang.String basePath = module . getProject () . getBasePath () ; return basePath != null ? new java.io.File ( basePath ) : null ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { android.content.Intent explicitIntent = new android.content.Intent ( getApplicationContext () , com.example.bosanac.ljubica.tasky.NewTask . class ) ; switch ( v . getId () ) { case R.id.bAddTask : explicitIntent . putExtra ( com.example.bosanac.ljubica.tasky.MainActivity.KEY , "task" ) ; break; } this . startActivity ( explicitIntent ) ; } 
private double getAmonut ( java.time.LocalDate date ) { java.util.List < budget.Budget > all = budgetRepo . findAll () ; for ( budget.Budget budget : all ) { java.lang.String yearmonth = ( ( date . getYear () ) + "" ) + ( java.lang.String . format ( "%02d" , date . getMonth () . getValue () ) ) ; if ( budget . getMonth () . equals ( yearmonth ) ) { return budget . getAmount () ; } } return - 1 ; } 
private int getDaysToWater () { long timeDiff = ( java.util.Calendar . getInstance () . getTimeInMillis () ) - ( refDate . getTime () ) ; int days = ( ( int ) ( timeDiff / ( com.coconut.young.wateringcan.PlantSchedule.ONE_DAY_IN_MILLISECONDS ) ) ) ; return days % ( waterInterval ) ; } 
private static boolean checkResponseCode ( int code , boolean raise ) throws edu.rit.gis.doctoreducator.exception.HttpResponseException { boolean result = ( code / 100 ) != 2 ; if ( ( ! result ) && raise ) { throw new edu.rit.gis.doctoreducator.exception.HttpResponseException ( code ) ; } else { return result ; } } 
public int getProductPrice ( java.lang.String barcode ) { java.lang.String query = ( "select unit_price from inventory where barcode = '" + barcode ) + "'" ; java.util.ArrayList < java.util.ArrayList < java.lang.String > > outer = new java.util.ArrayList < java.util.ArrayList < java.lang.String > > () ; java.util.ArrayList < java.lang.String > inner = new java.util.ArrayList < java.lang.String > () ; outer = db . newQuery ( query , 5 ) ; inner = outer . get ( 0 ) ; return java.lang.Integer . parseInt ( inner . get ( 0 ) ) ; } 
public java.lang.String register () { try { user = org.bfh.jass.user.UserAccessor . getCurrentInstance () . createNewUser ( name , password , dateOfBirth ) ; if ( ( user ) == null ) { greeting = "Impossible to register" ; java.lang.System.out . println ( greeting ) ; return "register?faces-redirect=true" ; } greeting = "Register OK, proceed to login" ; java.lang.System.out . println ( greeting ) ; return "login?faces-redirect=true" ; } catch ( java.lang.RuntimeException e ) { greeting = "Impossible to register" ; java.lang.System.out . println ( ( "Exception :" + ( greeting ) ) ) ; return "register?faces-redirect=true" ; } } 
public com.j256.ormlite.dao.CloseableIterator < me.confuser.banmanager.data.PlayerWarnData > findWarnings ( long fromTime ) throws java.sql.SQLException { if ( fromTime == 0 ) { return iterator () ; } long checkTime = fromTime + ( me.confuser.banmanager.util.DateUtils . getTimeDiff () ) ; com.j256.ormlite.stmt.QueryBuilder < me.confuser.banmanager.data.PlayerWarnData , java.lang.Integer > query = queryBuilder () ; com.j256.ormlite.stmt.Where < me.confuser.banmanager.data.PlayerWarnData , java.lang.Integer > where = query . where () ; where . ge ( "created" , checkTime ) . or () . ge ( "updated" , checkTime ) ; query . setWhere ( where ) ; return query . iterator () ; } 
public com.couchbase.lite.Status do_DELETE_Database ( com.couchbase.lite.Database _db , java.lang.String _docID , java.lang.String _attachmentName ) throws com.couchbase.lite.CouchbaseLiteException { if ( ( getQuery ( "rev" ) ) != null ) { return new com.couchbase.lite.Status ( com.couchbase.lite.Status.BAD_REQUEST ) ; } synchronized ( db ) { db . delete () ; } return new com.couchbase.lite.Status ( com.couchbase.lite.Status.OK ) ; } 
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { if ( obj instanceof tomdrever.timetable.data.Timetable ) { tomdrever.timetable.data.Timetable other = ( ( tomdrever.timetable.data.Timetable ) ( obj ) ) ; return ( ( java.util.Objects . equals ( other.name , name ) ) && ( ( other.days . size () ) == ( days . size () ) ) ) && ( other.days . equals ( days ) ) ; } return super . equals ( obj ) ; } 
public void setEllipse ( tracer.Point ab , float c , float d , int ellipseMode ) { if ( ( ab == null ) || ( ( cd ) == null ) ) { setEllipse ( ab , new tracer.Point ( c , d ) , ellipseMode ) ; } else { this . ab = ab ; cd.x = c ; cd.y = d ; this . ellipseMode = ellipseMode ; setHelperFields () ; } } 
@ java.lang.Override public void sheetClosed ( org.apache.pivot.wtk.Sheet sheet ) { if ( sheet . getResult () ) { java.io.File linkFile = browse . getSelectedFile () ; linkText . setText ( linkFile . getPath () ) ; pref . put ( "last_input_link" , linkFile . getPath () ) ; txtAutoDomeApplyMsg . setText ( "" ) ; autoApply = false ; } } 
@ java.lang.Override protected java.lang.String getPostLogOutUrl ( org.kohsuke.stapler.StaplerRequest req , org.acegisecurity.Authentication auth ) { if ( jenkins.model.Jenkins . getInstance () . hasPermission ( Jenkins.READ ) ) { return super . getPostLogOutUrl ( req , auth ) ; } return ( ( req . getContextPath () ) + "/" ) + ( GithubLogoutAction.POST_LOGOUT_URL ) ; } 
private void textChanged () { switch ( mTypingState ) { case Start : if ( ( mText . length () ) <= 0 ) { return; } setText ( getHtmlText () , BufferType.SPANNABLE ) ; goToBeginningOfParkedText () ; mTypingState = com.goka.parkedtextview.ParkedTextView.TypingState.Typed ; case Typed : if ( mText . equals ( mParkedText ) ) { mTypingState = com.goka.parkedtextview.ParkedTextView.TypingState.Start ; setText ( getHtmlText () , BufferType.SPANNABLE ) ; return; } setText ( getHtmlText () , BufferType.SPANNABLE ) ; goToBeginningOfParkedText () ; default: break; } } 
private java.io.File writeTempPreview ( com.ctrip.hermes.core.bo.TopicView topic ) { try { java.io.File f = new java.io.File ( "/tmp" , ( ( topic . getSchemaId () ) + ".avsc" ) ) ; java.io.BufferedWriter bw = new java.io.BufferedWriter ( new java.io.FileWriter ( f ) ) ; bw . write ( topic . getSchema () . getSchemaPreview () ) ; bw . flush () ; bw . close () ; return f ; } catch ( java.io.IOException e ) { com.ctrip.hermes.portal.resource.TopicResource.log . warn ( "Write tmp schema preview failed." , e ) ; return null ; } } 
public java.lang.String fillReason ( ) throws java.lang.Exception { if ( hudson.plugins.claim.ClaimBuildFailureAnalyzer . isBFAEnabled () ) { java.util.HashMap < java.lang.String , java.lang.String > map = hudson.plugins.claim.ClaimBuildFailureAnalyzer . getFillReasonMap () ; net.sf.json.JSONObject json = new net.sf.json.JSONObject () ; for ( java.lang.String key : map . keySet () ) { json . put ( key , map . get ( key ) ) ; } java.lang.String causeMap = json . toString () ; return causeMap ; } return null ; } 
@ java.lang.Override public void onStopTrackingTouch ( android.widget.SeekBar seekBar ) { settings.hourMinuteSecondMargin = seekBar . getProgress () ; settings . saveSettings () ; drawView . invalidate () ; final int sendValue = seekBar . getProgress () ; if ( mGoogleApiClient . isConnected () ) { new java.lang.Thread ( new java.lang.Runnable () { @ java.lang.Override public void run () { sendMessage ( "/messages/BLOCK_MARGIN" , java.lang.String . valueOf ( sendValue ) ) ; } } ) . start () ; } } 
public boolean isFull ( int row , int col ) { checkArgs ( row , col ) ; if ( ! ( isOpen ( row , col ) ) ) { return false ; } return uf . connected ( ( ( ( ( row - 1 ) * ( count ) ) + col ) - 1 ) , ( ( count ) * ( count ) ) ) ; } 
public void setHeader ( java.lang.String name , java.lang.String value ) { if ( name != null ) { java.util.List < java.lang.String > values = headers . get ( name ) ; if ( values == null ) { values = new java.util.ArrayList <> () ; } else { values . clear () ; } if ( value != null ) { values . add ( value ) ; } else { headers . remove ( name ) ; } } } 
public void setAccount ( edu.manatriya.banking.akunbanking.Account a ) { if ( a != null ) { accountFileName = a.accountFileName ; accountID = a.accountID ; password = a.password ; currency = a.currency ; saldo = a.saldo ; transactionHistory = new java.util.ArrayList < java.lang.String [] > ( a.transactionHistory . size () ) ; transactionHistory . addAll ( a.transactionHistory ) ; } else { accountID = null ; accountFileName = null ; password = null ; currency = null ; saldo = 0 ; transactionHistory = null ; } } 
public boolean createTask ( android.content.Context context , java.lang.String title , java.lang.String priority_s , long category ) { android.util.Log . d ( NewTaskFragment.TAG , "Entered" ) ; int priority = com.infiniteloop.mytasks.Helpers . getPriority ( context , priority_s ) ; if ( priority != ( - 1 ) ) { com.infiniteloop.mytasks.Task t = new com.infiniteloop.mytasks.Task ( title , priority , category ) ; long taskId = saveTask ( t ) ; mTasks . add ( t ) ; return true ; } return false ; } 
public static boolean authorize ( android.content.Context context , android.accounts.Account account ) { com.facebook.FacebookSdk . sdkInitialize ( context ) ; if ( ( org.codarama.haxsync.utilities.FacebookUtil.isExtendingToken ) || ( ! ( org.codarama.haxsync.utilities.DeviceUtil . isOnline ( context ) ) ) ) { return false ; } com.facebook.AccessToken accessToken = com.facebook.AccessToken . getCurrentAccessToken () ; if ( accessToken . isExpired () ) { org.codarama.haxsync.utilities.FacebookUtil . notifyToken ( context ) ; return false ; } return true ; } 
public static void verifyVideoTimeIsProgressing ( final com.wikia.webdriver.pageobjectsfactory.componentobject.ad.AutoplayVuap vuap ) { vuap . togglePause () ; final double startProgressBarWidth = vuap . getProgressBarWidth () ; com.wikia.webdriver.pageobjectsfactory.componentobject.ad.VuapAssertions . playVideoForFewSeconds ( vuap ) ; org.testng.Assert . assertTrue ( ( startProgressBarWidth < ( vuap . getProgressBarWidth () ) ) , "Video time indicator should move." ) ; } 
public void serialize ( java.lang.String outputFile ) { try { java.io.FileOutputStream fileOut = new java.io.FileOutputStream ( outputFile ) ; java.io.ObjectOutputStream objOut = new java.io.ObjectOutputStream ( fileOut ) ; objOut . writeObject ( trie ) ; objOut . close () ; fileOut . close () ; java.lang.System.out . println ( ( "trie serialized into " + outputFile ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
public static void clearAll () { vrg.VRGwithTimeWindow . clearRoutess () ; vrg.VRGwithTimeWindow.carsWeight . clear () ; vrg.VRGwithTimeWindow.coordinates . clear () ; vrg.VRGwithTimeWindow.lengthOfRoutes . clear () ; vrg.VRGwithTimeWindow.allIndexes . clear () ; vrg.VRGwithTimeWindow.routes . clear () ; vrg.VRGwithTimeWindow.table . clear () ; vrg.VRGwithTimeWindow.optimalPoint = vrg.VRGwithTimeWindow.PointT.C.OptimalPoint.OptimalTime ; vrg.VRGwithTimeWindow . generateRoutess () ; } 
public soot.jimple.Stmt init_label ( final soot.javaToJimple.jj.extension.HigherLevelStructureTags initTag ) { if ( init_label_computed ) { return init_label_value ; } soot.JastAddJ.ASTNode$State state = state () ; int num = state.boundariesCrossed ; boolean isFinal = this . is$Final () ; init_label_value = init_label_compute ( initTag ) ; if ( isFinal && ( num == ( state () . boundariesCrossed ) ) ) { init_label_computed = true ; } return init_label_value ; } 
protected void doGet ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { java.lang.String url = "/login.jsp" ; javax.servlet.http.HttpSession session = request . getSession () ; session . invalidate () ; getServletContext () . getRequestDispatcher ( url ) . forward ( request , response ) ; } 
public void render ( net.minecraft.entity.Entity entity , float f , float f1 , float f2 , float f3 , float f4 , float f5 ) { super . render ( entity , f , f1 , f2 , f3 , f4 , f5 ) ; setRotationAngles ( f , f1 , f2 , f3 , f4 , f5 , entity ) ; } 
private void difficultyWordResult ( java.lang.String [] words ) { for ( java.lang.String word : words ) { switch ( word . toUpperCase () ) { case "EASY" : difficulty = 3 ; playSound ( "YourFirstWord" , yourWordIsCompletion ) ; STATUS = me.ianhenry.wordladder.MainActivity.Status.GAME ; break; case "MEDIUM" : difficulty = 4 ; newWord () ; STATUS = me.ianhenry.wordladder.MainActivity.Status.GAME ; break; case "HARD" : difficulty = 5 ; newWord () ; STATUS = me.ianhenry.wordladder.MainActivity.Status.GAME ; break; } } listening = false ; } 
private android.view.View inflateView ( android.widget.LinearLayout cardHolder ) { cardHolder . removeAllViews () ; android.view.LayoutInflater inflater = getActivity () . getLayoutInflater () ; int detailLayout = args . getInt ( de.aw.cash.action.VIEWHOLDERLAYOUT ) ; for ( de.aw.gv.SplitZeile sz : mSplittBuchung . getSplitZeilen () ) { if ( ! ( sz . isRemoved () ) ) { android.view.View splitZeileView = inflater . inflate ( detailLayout , cardHolder ) ; splitZeileView . setTag ( sz ) ; viewMap . put ( sz , splitZeileView ) ; } } return cardHolder ; } 
void sendSetup ( me.legrange.swap.ModemSetup setup ) { out . write ( me.legrange.swap.tcp.TcpTransport.SETUP_START ) ; out . write ( java.lang.String . format ( "%s=%d," , me.legrange.swap.tcp.TcpTransport.SETUP_DEVICE_ADDRESS , setup . getDeviceAddress () ) ) ; out . write ( java.lang.String . format ( "%s=%d," , me.legrange.swap.tcp.TcpTransport.SETUP_CHANNEL , setup . getChannel () ) ) ; out . write ( java.lang.String . format ( "%s=%d" , me.legrange.swap.tcp.TcpTransport.SETUP_NETWORK_ID , setup . getNetworkID () ) ) ; out . write ( "\n" ) ; out . flush () ; } 
@ java.lang.Override protected void onPostExecute ( java.lang.String result ) { android.util.Log . e ( com.udacity.gradle.builditbigger.EndpointsAsyncTask . class . getSimpleName () , ( "" + result ) ) ; if ( ( mProgressBar ) != null ) { mProgressBar . setVisibility ( View.GONE ) ; } android.content.Intent intent = new android.content.Intent ( mContext , com.example.androidjokelibrary.JokeDisplayIntent . class ) ; intent . putExtra ( JokeDisplayIntent.JOKE_TAG , result ) ; mContext . startActivity ( intent ) ; } 
@ java.lang.Override public E next () { if ( ! ( hasNext () ) ) throw new java.util.NoSuchElementException ( "No more elements remaining in iterator" ) ; collection.HashMultiset.Entry < E > entry = iteratorTable [ pointer ] ; E result = entry.data ; if ( ( entry.next ) != null ) { iteratorTable [ pointer ] = entry.next ; } else ( pointer ) ++ ; return result ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; mButton = ( ( android.widget.ImageButton ) ( findViewById ( R.id.imgBtnOnOff ) ) ) ; mEditUrl = ( ( android.widget.EditText ) ( findViewById ( R.id.editTextUrl ) ) ) ; android.util.Log . d ( "EditUrl" , mEditUrl . getText () . toString () ) ; if ( mEditUrl . getText () . toString () . equals ( "" ) ) { mEditUrl . setText ( "192.168.0.6" ) ; } mOnOff = false ; } 
protected void setUserOnline ( java.lang.String onlineChoice ) { mOnlineActionButton . setText ( ( "Online " + onlineChoice ) ) ; mOnlineActionButton . setTextColor ( getResources () . getColor ( R.color.green ) ) ; mOnlineIndicator . setImageResource ( R.drawable.ic_action_online ) ; com.raildeliveryservices.burnrubber.utils.Utils . setUserOnline ( this , true ) ; com.raildeliveryservices.burnrubber.utils.Utils . setDriverOnlineSystem ( this , onlineChoice ) ; com.raildeliveryservices.burnrubber.utils.Utils . sendUserOnlineToServer ( this , true , onlineChoice ) ; } 
@ java.lang.Override public net.minecraftforge.fml.common.network.simpleimpl.IMessage onMessage ( T message , net.minecraftforge.fml.common.network.simpleimpl.MessageContext ctx ) { if ( ctx.side . isClient () ) { return handleClientMessage ( net.minecraft.client.Minecraft . getMinecraft () . thePlayer , message , ctx ) ; } else { return handleServerMessage ( ctx . getServerHandler () . playerEntity , message , ctx ) ; } } 
public com.arthur_markus.SampleWebsite.models.DisplayDataWrapper displayData ( java.lang.String searchTerm , java.lang.String orderType , int orderColumn , int offset , int limit ) { com.arthur_markus.SampleWebsite.models.DisplayDataWrapper retVal = new com.arthur_markus.SampleWebsite.models.DisplayDataWrapper () ; java.util.List < com.arthur_markus.SampleWebsite.models.DisplayData > data = databaseTablesMapper . findAndSortDataToDisplay ( searchTerm , getSorting ( orderType , orderColumn ) , offset , ( limit - 1 ) ) ; retVal . setData ( data ) ; return retVal ; } 
public static boolean addCluster ( pt.ulisboa.tecnico.amorphous.requestrouter.internal.types.Cluster cluster ) { java.util.List < java.lang.String > result = pt.ulisboa.tecnico.amorphous.requestrouter.internal.lvs.LVSImplementation . executeCommand ( pt.ulisboa.tecnico.amorphous.requestrouter.internal.lvs.LVSImplementation . prepareCmd ( pt.ulisboa.tecnico.amorphous.requestrouter.internal.lvs.LVSImplementation.CMD_ADD_CLUSTER , cluster ) ) ; if ( ( result == null ) || ( result . isEmpty () ) ) return false ; else return true ; } 
@ java.lang.Override public void run () { while ( gameRunning ) { if ( ( acc ) >= ( 1000 / 30 ) ) { serverNetworkListener . performActions ( model ) ; model . step ( acc ) ; time = elapsedTime ; } elapsedTime = java.lang.System . currentTimeMillis () ; acc = ( elapsedTime ) - ( time ) ; } } 
@ java.lang.Override public void processAction ( com.liferay.portal.kernel.struts.StrutsPortletAction originalStrutsPortletAction , javax.portlet.PortletConfig portletConfig , javax.portlet.ActionRequest actionRequest , javax.portlet.ActionResponse actionResponse ) throws java.lang.Exception { long layoutSetPrototypeId = com.liferay.portal.kernel.util.ParamUtil . getLong ( actionRequest , PARAM_ID , INVALID_ID ) ; com.liferay.portal.service.ServiceContext serviceContext = com.liferay.portal.service.ServiceContextFactory . getInstance ( com.liferay.portal.model.LayoutSetPrototype . class . getName () , actionRequest ) ; if ( layoutSetPrototypeId != ( INVALID_ID ) ) { com.liferay.portal.model.LayoutSetPrototype layoutSetPrototype = com.liferay.portal.service.LayoutSetPrototypeLocalServiceUtil . getLayoutSetPrototype ( layoutSetPrototypeId ) ; layoutSetPrototype . setExpandoBridgeAttributes ( serviceContext ) ; com.liferay.portal.service.LayoutSetPrototypeLocalServiceUtil . updateLayoutSetPrototype ( layoutSetPrototype ) ; } super . processAction ( originalStrutsPortletAction , portletConfig , actionRequest , actionResponse ) ; } 
public static void loadUniversitymain () { try { com.csvreader.CsvReader file ; file = new com.csvreader.CsvReader ( "src/Data/TestDataUniversityName.csv" ) ; test.Main.universityDM = new test.UniversityDM ( file ) ; test.Main.university = test.Main.universityDM . getUniversity () ; java.lang.String studentsfilelocation = "src/Data/STU.DUMP.csv" ; java.lang.String studentcoursesfilelocation = "src/Data/STC.DUMP.csv" ; test.Main.universityDM . importStudentCourses ( studentcoursesfilelocation ) ; test.Main.universityDM . importStudents ( studentsfilelocation ) ; java.lang.System.out . println ( "++++++++++++++++++++++++ PRINT FROM ALL OBJECTS ++++++++++++++++++++++++" ) ; } catch ( java.io.FileNotFoundException e ) { e . printStackTrace () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
@ java.lang.Override protected java.util.List < com.facebook.react.ReactPackage > getPackages () { return java.util.Arrays . < com.facebook.react.ReactPackage > asList ( new com.slowpath.hockeyapp.RNHockeyAppPackage ( this ) , new com.facebook.react.shell.MainReactPackage () , new com.AlexanderZaytsev.RNI18n.RNI18nPackage () , new io.realm.react.RealmReactPackage () , new com.oblador.vectoricons.VectorIconsPackage () , new org.wonday.pdf.RCTPdfView () , new com.RNFetchBlob.RNFetchBlobPackage () , new com.instabug.reactlibrary.RNInstabugReactnativePackage.Builder ( "YOUR_ANDROID_APPLICATION_TOKEN" , this ) . setInvocationEvent ( "shake" ) . setPrimaryColor ( "#1D82DC" ) . setFloatingEdge ( "left" ) . setFloatingButtonOffsetFromTop ( 250 ) . build () , new com.instabug.reactlibrary.RNInstabugReactnativePackage ( Secrets.INSTABUG_ANDROID_ID , this , "shake" , "#1D82DC" ) ) ; } 
public boolean equals ( java.lang.Object obj ) { if ( ! ( obj instanceof org.eclipse.ecf.core.util.ProxyAddress ) ) return false ; org.eclipse.ecf.core.util.ProxyAddress other = ( ( org.eclipse.ecf.core.util.ProxyAddress ) ( obj ) ) ; return ( this . hostname . equals ( other.hostname ) ) && ( ( this . port ) == ( other.port ) ) ; } 
private void zipFolder ( java.lang.String srcFolder , java.lang.String destZipFile ) throws java.lang.Exception { java.util.zip.ZipOutputStream zip = null ; java.io.FileOutputStream fileWriter = null ; fileWriter = new java.io.FileOutputStream ( destZipFile ) ; zip = new java.util.zip.ZipOutputStream ( fileWriter ) ; addFolderToZip ( "" , srcFolder , zip ) ; zip . flush () ; zip . close () ; } 
public static void activateAspect ( java.lang.String bundle , java.lang.String aspect ) { org.eclipse.rcptt.tesla.core.am.AspectManager . addAspect ( bundle , aspect ) ; if ( org.eclipse.rcptt.tesla.core.am.Activator . getDefault () . LOGGING ) { java.lang.System.out . println ( ( ( ( "Tesla: Activate aspect in bundle:" + bundle ) + " aspect:" ) + aspect ) ) ; } for ( org.eclipse.rcptt.tesla.core.am.AspectListener listener : org.eclipse.rcptt.tesla.core.am.AspectManager.listeners ) { listener . activated ( bundle , aspect ) ; } } 
public static void main ( java.lang.String [] args ) { EstimatorInterface l ; if ( ( args.length ) == 2 ) { l = new Localizer ( args [ 0 ] , args [ 1 ] , 4 ) ; } else { l = new Localizer ( 8 , 8 , 4 ) ; } RobotLocalizationViewer viewer = new RobotLocalizationViewer ( l ) ; new LocalizationDriver ( 500 , viewer ) . start () ; } 
public static java.util.List < com.gymkhana.iitbapp.items.FeedSubscriptionItem > getSubscriptions ( final android.content.Context context ) { java.lang.String fileName = Constants.Filenames.INFO_FEED ; if ( fileName != null ) { java.lang.String json = com.gymkhana.iitbapp.util.Functions . offlineDataReader ( context , fileName ) ; if ( ( json != null ) && ( ! ( json . isEmpty () ) ) ) { return com.gymkhana.iitbapp.util.ApiUtil . getSubscriptionListFromJson ( context , json ) ; } } return null ; } 
public void pickO1 () { for ( int i = 0 ; i < ( mealsListSize ) ; i ++ ) { java.lang.System.out . println ( ( ( ( "\nOption " + ( i + 1 ) ) + " is " ) + ( mealsList [ i ] ) ) ) ; } int meals = main . inputInt ( "\n\nEnter your option: " ) ; main . input ( ( ( "\nYou chose option " + meals ) + " as your meal. Press <return> to continue" ) ) ; } 
protected java.util.List < java.lang.Class < ? > > appendAddonModules ( java.util.List < java.lang.Class < ? > > modules ) { modules . addAll ( java.util.Arrays . asList ( org.isisaddons.module.audit.AuditModule . class , org.isisaddons.module.command.CommandModule . class , org.isisaddons.module.excel.ExcelModule . class , org.isisaddons.module.devutils.DevUtilsModule . class , org.isisaddons.module.poly.PolyModule . class , org.isisaddons.module.sessionlogger.SessionLoggerModule . class , org.isisaddons.module.stringinterpolator.StringInterpolatorModule . class ) ) ; return modules ; } 
private void calculatePriceFalling () { pcbuilder.controllers.dto.PricePointData first = priceHistory . get ( 0 ) ; pcbuilder.controllers.dto.PricePointData last = priceHistory . get ( priceHistory . size () ) ; if ( ( first . getPrice () ) > ( last . getPrice () ) ) { setPriceFalling ( true ) ; } else { setPriceFalling ( false ) ; } } 
@ java.lang.Override public synchronized void unstore ( lucee.runtime.type.scope.storage.IKStorageScopeSupport storageScope , lucee.runtime.PageContext pc , java.lang.String appName , java.lang.String name , java.lang.String cfid , lucee.commons.io.log.Log log ) { try { lucee.commons.io.cache.Cache cache = lucee.runtime.type.scope.storage.IKHandlerCache . getCache ( pc , name ) ; java.lang.String key = lucee.runtime.type.scope.storage.IKHandlerCache . getKey ( cfid , appName , storageScope . getTypeAsString () ) ; cache . remove ( key ) ; } catch ( java.lang.Exception pe ) {} } 
private java.lang.String getMacAddr () { android.os.IBinder b = android.os.ServiceManager . getService ( Context.NETWORKMANAGEMENT_SERVICE ) ; android.os.INetworkManagementService networkManagement = INetworkManagementService.Stub . asInterface ( b ) ; if ( networkManagement != null ) { android.net.InterfaceConfiguration iconfig = null ; try { iconfig = networkManagement . getInterfaceConfig ( "eth0" ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } finally { return ( iconfig.hwAddr ) != null ? iconfig.hwAddr : "" ; } } else { return "" ; } } 
public java.util.List < java.lang.Integer > getCheckedList () { java.util.List < java.lang.Integer > result = new java.util.ArrayList < java.lang.Integer > () ; for ( java.util.Map.Entry < java.lang.Integer , java.lang.Boolean > checkedEntry : checkedMap . entrySet () ) { if ( ( checkedEntry . getValue () ) == true ) result . add ( checkedEntry . getKey () ) ; } return result ; } 
@ java.lang.Override public java.lang.Object createViewCamera ( org.eclipse.ice.client.widgets.jme.EmbeddedView view ) { java.lang.Object cam = null ; if ( ( view != null ) && ( view == ( embeddedView ) ) ) { org.eclipse.ice.client.widgets.jme.FlightCamera flyCam = new org.eclipse.ice.client.widgets.jme.FlightCamera ( view . getCamera () ) ; flyCam . setInputManager ( app . getInputManager () ) ; flyCam . setEnabled ( false ) ; cam = flyCam ; } return cam ; } 
private void construct () { this . add ( new javafx.geometry.Point3D ( 0 , 0 , 0 ) ) ; this . add ( new javafx.geometry.Point3D ( 1 , 0 , 0 ) ) ; this . add ( new javafx.geometry.Point3D ( 0 , 0 , 1 ) ) ; this . add ( new javafx.geometry.Point3D ( 1 , 0 , 1 ) ) ; this . add ( new javafx.geometry.Point3D ( 0 , 0 , 2 ) ) ; } 
@ java.lang.Override protected java.lang.Object doInBackground ( ) throws java.lang.Exception { player = new PlayerShip () ; getContentPane () . add ( player ) ; getContentPane () . revalidate () ; getContentPane () . requestFocus () ; getContentPane () . setVisible ( true ) ; while ( true ) { player . moveTick () ; repaint () ; player . isOffscreen ( xSize , ySize ) ; try { java.lang.Thread . sleep ( 20 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } } 
@ java.lang.Override public boolean canRead ( @ javax.annotation.Nonnull com.google.common.net.MediaType mimeType , java.lang.Class < ? > resultType ) { com.google.common.net.MediaType type = mimeType . withoutParameters () ; return ( ( type . is ( com.google.common.net.MediaType.ANY_TEXT_TYPE ) ) || ( com.google.common.net.MediaType.APPLICATION_XML_UTF_8 . withoutParameters () . is ( type ) ) ) || ( ( com.google.common.net.MediaType.JSON_UTF_8 . withoutParameters () . is ( type ) ) && ( java.lang.String . class . equals ( resultType ) ) ) ; } 
@ java.lang.Override protected void init ( java.lang.String [] fields ) { capitalAccountName = fields [ 0 ] ; if ( ( ( capitalAccountName ) == null ) || ( capitalAccountName . isEmpty () ) ) { throw new com.poesys.db.InvalidParametersException ( NULL_PARAMETER_ERROR ) ; } distributionAccountName = fields [ 1 ] ; if ( fields [ 2 ] . isEmpty () ) { ownership = 1.0 ; } else { ownership = new java.lang.Double ( fields [ 2 ] ) ; } } 
@ java.lang.Override public void postHandle ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response , java.lang.Object handler , org.springframework.web.servlet.ModelAndView modelAndView ) throws java.lang.Exception { modelAndView . addObject ( "baseurl" , com.cportal.config.ConfigDB . retrnConf () . getBASEURL () ) ; java.lang.System.out . println ( ( "---Request Completed---" + ( com.cportal.config.ConfigDB . getBASEURL () ) ) ) ; } 
@ java.lang.Override protected void addHyperlinks ( java.util.List < org.eclipse.jface.text.hyperlink.IHyperlink > hyperlinksCollector , org.eclipse.jface.text.IRegion wordRegion , org.eclipse.jdt.ui.actions.SelectionDispatchAction openAction , org.eclipse.jdt.core.IJavaElement element , boolean qualify , org.eclipse.jdt.internal.ui.javaeditor.JavaEditor editor ) { org.eclipse.core.resources.IFile javaFile = org.eclipse.etools.ei18n.util.EI18NUtil . getFile ( element ) ; for ( org.eclipse.etools.ei18n.util.MappingPreference pref : org.eclipse.etools.ei18n.util.MappingPreference . list ( javaFile . getProject () ) ) { if ( pref . getJavaFile () . equals ( javaFile ) ) { hyperlinksCollector . add ( new org.eclipse.etools.ei18n.EI18NHyperlink ( wordRegion , openAction , element , qualify ) ) ; } } } 
private static Response.ResponseBuilder noCache ( final javax.ws.rs.core.Response.ResponseBuilder response ) { final javax.ws.rs.core.CacheControl cacheControl = new javax.ws.rs.core.CacheControl () ; cacheControl . setPrivate ( true ) ; cacheControl . setMaxAge ( 0 ) ; cacheControl . setMustRevalidate ( true ) ; response . cacheControl ( cacheControl ) ; return response ; } 
public static void endGame ( com.core.domain.knockout.GameInstance gi ) { com.core.manager.GameQueueManager.log . info ( "debug Game Done !!!" ) ; com.core.manager.QuestionManager . savePreviousQuestionLog ( gi ) ; gi . setStateToDone () ; gi . markGameWinner () ; com.core.manager.GameQueueManager.finishedGames . put ( gi . getId () , gi ) ; com.core.manager.GameQueueManager.ongoingGames . remove ( gi . getId () ) ; } 
public void endTrick () { java.lang.System.out . println ( "----------------------------" ) ; this . assignPoints () ; this . activeID = ( ( currentTrick . getPlayerNumber () ) + ( activeID ) ) % 4 ; java.lang.System.out . printf ( "Points: %d" , players [ this . activeID ] . getPoints () ) ; if ( ( trickNum ) < 12 ) { this . startTrick () ; ( trickNum ) ++ ; } else { this . endRound () ; } } 
@ java.lang.Override public eu.modernmt.model.Translation execute ( eu.modernmt.model.Sentence sentence , eu.modernmt.decoder.opennmt.memory.ScoreEntry [] suggestions ) throws eu.modernmt.decoder.opennmt.OpenNMTException { eu.modernmt.decoder.opennmt.execution.NativeProcess decoder = null ; try { decoder = this . queue . take () ; eu.modernmt.model.Word [] translation = decoder . translate ( sentence ) ; return new eu.modernmt.model.Translation ( translation , sentence , null ) ; } catch ( java.lang.InterruptedException e ) { throw new eu.modernmt.decoder.opennmt.OpenNMTException ( "No OpenNMT processes available" , e ) ; } finally { if ( decoder != null ) this . queue . offer ( decoder ) ; } } 
private void findCandidateToTypeChangingMarkers ( final org.eclipse.core.resources.IMarker iMarker ) { this . candidateToTypeChanging . add ( iMarker ) ; final java.util.ArrayList < org.eclipse.core.resources.IMarker > relationsSources = eu.modelwriter.configuration.internal.AlloyUtilities . getSourcesOfMarkerAtRelations ( iMarker ) ; for ( final org.eclipse.core.resources.IMarker marker : relationsSources ) { this . candidateToTypeChanging . add ( marker ) ; } } 
public void clear () { for ( int x = 0 ; x < ( sideLength ) ; x ++ ) for ( int y = 0 ; y < ( sideLength ) ; y ++ ) for ( int z = 0 ; z < ( sideLength ) ; y ++ ) structure [ x ] [ y ] [ z ] = 0 ; } 
@ java.lang.Override protected java.lang.Void doInBackground ( java.lang.Void . . . params ) { rankParser . fetchJSON ( eventKey , getContext () ) ; while ( rankParser.parsingComplete ) ; ranks . clear () ; ranks . addAll ( rankParser . getRankings () ) ; teamEventParser . fetchJSON ( eventKey , getContext () ) ; while ( teamEventParser.parsingComplete ) ; teams . clear () ; teams . addAll ( teamEventParser . getTeams () ) ; java.util.Collections . sort ( teams ) ; return null ; } 
@ org.junit.Test public void testAdjacency_5 () { test.BoardCell cell = intBoard . getCell ( 0 , 0 ) ; java.util.Map < test.BoardCell , java.util.Set < test.BoardCell > > map = intBoard . getAdjList () ; java.util.Set < test.BoardCell > testList = map . get ( cell ) ; assertTrue ( testList . contains ( intBoard . getCell ( 3 , 2 ) ) ) ; assertTrue ( testList . contains ( intBoard . getCell ( 2 , 0 ) ) ) ; assertEquals ( 2 , testList . size () ) ; } 
public java.util.List getOutsourceContract ( java.util.Map input ) { java.util.List < outsource.OutsourceBean > result = new java.util.ArrayList < outsource.OutsourceBean > () ; com.ibatis.sqlmap.client.SqlMapClient ibatis = utils.IbatisHelper . getSqlMapInstance () ; try { result = ( ( java.util.List < outsource.OutsourceBean > ) ( ibatis . queryForList ( "outsource.getOutsourceContract" , input ) ) ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } 
public void onClick ( android.view.View i ) { tempMonthly = java.lang.Double . parseDouble ( monthlyDue . toString () ) ; tempIntrest = java.lang.Double . parseDouble ( intrestRate . toString () ) ; tempTotal = java.lang.Double . parseDouble ( totalDue . toString () ) ; tempBill = billName . toString () ; android.content.Intent j = new android.content.Intent ( d , lowercasewon.oneup.CurrentDebts . class ) ; startActivity ( j ) ; } 
private java.lang.Integer parseText ( java.lang.String text ) { int result ; try { if ( text . equals ( "unspecified" ) ) { result = - 1 ; } else { result = java.lang.Integer . parseInt ( text ) ; } } catch ( java.lang.NumberFormatException ex ) { result = cz.fidentis.featurepoints.FacialPointType . valueOf ( text ) . ordinal () ; } return result ; } 
public void writeOrderTableRow ( long count , java.lang.String description , java.lang.String orderID ) { android.database.sqlite.SQLiteDatabase db = getReadableDatabase () ; android.content.ContentValues cv = new android.content.ContentValues () ; cv . put ( ru.gembo.employee.SqlDataManager.ORDER_ROWS_COUNT , count ) ; cv . put ( ru.gembo.employee.SqlDataManager.ORDER_ROWS_DESCRIPTION , description ) ; cv . put ( ru.gembo.employee.SqlDataManager.ORDER_ROWS_ORDER , orderID ) ; db . insert ( ru.gembo.employee.SqlDataManager.ORDER_ROWS_TABLE , null , cv ) ; } 
private void setPosition ( com.lost.blocks.Animator.BonePose key1 , com.lost.blocks.Animator.BonePose key2 , double interpolation ) { position.x = interpolate ( key1.position.x , key2.position.x , interpolation ) ; position.y = interpolate ( key1.position.y , key2.position.y , interpolation ) ; position.z = interpolate ( key1.position.z , key2.position.z , interpolation ) ; } 
public void handleCollisionWithObject ( pl.miczeq.objects.AbstractGameObject obj ) { if ( this . isObjectIsInRoom ( obj ) ) { for ( pl.miczeq.objects.Wall wall : walls ) { pl.miczeq.objects.AbstractGameObject . handleCollisionBetweenTwoObjects ( obj , wall ) ; } for ( pl.miczeq.objects.Door door : doors ) { if ( ( door . isClosed () ) && ( ! ( roomCleaned ) ) ) { pl.miczeq.objects.AbstractGameObject . handleCollisionBetweenTwoObjects ( obj , door ) ; } } } } 
@ org.junit.Test public void shouldParseIntFromOneByteWithOffset () { byte [] bytes = new byte [] { 1 , 2 , 3 , ( ( byte ) ( 5 ) ) , 0 , 0 , 0 } ; final int parseInt = pl.grzeslowski.jsupla.protocol.decoders.PrimitiveParser . parseUnsignedInt ( bytes , 3 ) ; org.assertj.core.api.Assertions . assertThat ( parseInt ) . isEqualTo ( ( ( java.lang.Integer.MIN_VALUE ) + 5 ) ) ; } 
public void deploy ( java.io.File orig , java.lang.Object . . . substitutions ) { if ( ! ( isConnected ) ) return; pushDeploymentModel ( orig , substitutions ) ; it.polimi.modaclouds.scalingrules.utils.CloudMLNew.logger . debug ( "Deploy..." ) ; org.cloudml.facade.commands.CloudMlCommand cmd = fcommand . deploy () ; cml . fireAndWait ( cmd ) ; it.polimi.modaclouds.scalingrules.utils.CloudMLNew.logger . debug ( "...done!" ) ; getDeploymentModel () ; } 
private boolean isValidPassword ( java.lang.String password , java.lang.String confirmPassword ) { if ( ( password . length () ) < 6 ) { passwordInputTextView . setError ( "Please create a password containing at least 6 characters" ) ; mAuthProgressDialog . dismiss () ; return false ; } else if ( ! ( password . equals ( confirmPassword ) ) ) { passwordInputTextView . setError ( "Passwords do not match" ) ; return false ; } return true ; } 
private void ValidateTextInput ( java.lang.String s ) { if ( ( s . length () ) == 0 ) { com.github.bwindsor.pairlearnapp.DialogHelper . ShowOKDialog ( this , R.string.dialog_string_empty_message , R.string.dialog_string_empty_title ) ; } if ( s . contains ( "," ) ) { com.github.bwindsor.pairlearnapp.DialogHelper . ShowOKDialog ( this , R.string.dialog_string_contains_comma_message , R.string.dialog_string_contains_comma_title ) ; } } 
public static void main ( java.lang.String [] args ) throws java.io.IOException { java.lang.System.out . println ( "Bienvenido al programa de calculadora!" ) ; java.io.BufferedReader file = new java.io.BufferedReader ( new java.io.FileReader ( "Prueba.txt" ) ) ; Op calculadora = new Op () ; java.lang.String operacion = file . readLine () ; calculadora . operar ( operacion ) ; java.lang.System.out . println ( operacion ) ; } 
public static void toWriter ( org.hibernate.boot.Metadata metadata , java.io.Writer writer ) { final org.hibernate.service.ServiceRegistry serviceRegistry = ( ( org.hibernate.boot.spi.MetadataImplementor ) ( metadata ) ) . getMetadataBuildingOptions () . getServiceRegistry () ; final java.util.Map settings = serviceRegistry . getService ( org.hibernate.engine.config.spi.ConfigurationService . class ) . getSettings () ; settings . put ( AvailableSettings.HBM2DDL_SCRIPTS_ACTION , Action.CREATE ) ; settings . put ( AvailableSettings.HBM2DDL_SCRIPTS_CREATE_TARGET , writer ) ; org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator . process ( metadata , serviceRegistry , settings , DelayedDropRegistryNotAvailableImpl.INSTANCE ) ; } 
public static de.ChrisGold.ChrisUtil.math.Rational valueOf ( java.lang.String s ) { if ( s . contains ( "/" ) ) { return de.ChrisGold.ChrisUtil.math.Rational . valueOf ( java.lang.Double . parseDouble ( s ) ) ; } java.lang.String [] parts = s . split ( "/" ) ; java.math.BigInteger numerator = new java.math.BigInteger ( parts [ 0 ] ) ; java.math.BigInteger denominator = new java.math.BigInteger ( parts [ 1 ] ) ; return de.ChrisGold.ChrisUtil.math.Rational . valueOf ( numerator , denominator ) ; } 
public void checkingLevelClicked ( android.view.View view ) { android.os.Bundle args = new android.os.Bundle () ; args . putLong ( activity.reading.ReadingActivity.VERSION_ID_PARAM , mChapter . getParent ( getApplicationContext () ) . getParent ( getApplicationContext () ) . uid ) ; activity.reading.ReadingActivity.CheckingLevelFragment fragment = new activity.reading.ReadingActivity.CheckingLevelFragment () ; fragment . setArguments ( args ) ; android.support.v4.app.FragmentTransaction ft = getSupportFragmentManager () . beginTransaction () ; fragment . show ( ft , activity.reading.ReadingActivity.CHECKING_LEVEL_FRAGMENT_ID ) ; } 
public void run () { try { cards . show ( cardPanel , "Trans" ) ; digCar . setCarStopped ( false ) ; digCar . start () ; java.lang.Thread . sleep ( 5000 ) ; fdc . diagnoseFully () ; digCar . stop () ; cards . show ( cardPanel , "Full Diagnose" ) ; } catch ( java.lang.InterruptedException ex ) {} } 
public simpledb.parse.CreateIndexData createIndex () { lex . eatKeyword ( "create" ) ; java.lang.String indexType = lex . eatId () ; lex . eatKeyword ( "index" ) ; java.lang.String idxname = lex . eatId () ; lex . eatKeyword ( "on" ) ; java.lang.String tblname = lex . eatId () ; lex . eatDelim ( '(' ) ; java.lang.String fldname = field () ; lex . eatDelim ( ')' ) ; return new simpledb.parse.CreateIndexData ( indexType , idxname , tblname , fldname ) ; } 
public static void test_036 () { framework.common.GalleryCommon . deleteMoreGallery () ; framework.common.GalleryCommon . morePicture () ; framework.common.GalleryCommon . clickGallery () ; check ( testcase.Object_Text , testcase.Operation_WaitForExists , "相机" , "10000" ) ; framework.common.GalleryCommon . clickGallery () ; excute ( testcase.Object_Description , testcase.Operation_ClickWait , "更多选项" ) ; excute ( testcase.Object_Text , testcase.Operation_ClickWait , "详细信息" ) ; check ( testcase.Object_Text , testcase.Operation_checkExist , "浏览模式: 0" ) ; check ( testcase.Object_Text , testcase.Operation_checkExist , "关闭" ) ; } 
@ org.testng.annotations.Test public void verifyCopy_terms_dwh_public_notR ( ) throws java.lang.InterruptedException { goTo_step4 ( "DWH" , rpID . Full () , false , false , false ) ; org.junit.Assert . assertEquals ( step4 . verify_termsCopy_new ( environment , "DWH" , rpID . Full () , false , false , false , wd , false ) , true ) ; } 
public template.Team.team.Team map ( int i , java.sql.ResultSet resultSet , org.skife.jdbi.v2.StatementContext statementContext ) throws java.sql.SQLException { return new template.Team.team.Team ( resultSet . getString ( "id" ) , resultSet . getString ( "name" ) , resultSet . getBlob ( "logo" ) , resultSet . getString ( "topic" ) , resultSet . getString ( "brief" ) , resultSet . getString ( "assistant_player" ) , resultSet . getString ( "goal_player" ) ) ; } 
public java.util.List < com.tradeshift.thirdparty.samples.springboot.domain.dto.BaseTradeshiftDocumentDTO > getDocuments ( java.lang.String documentType ) throws java.io.IOException , javax.xml.parsers.ParserConfigurationException , org.xml.sax.SAXException { com.tradeshift.thirdparty.samples.springboot.services.Impl.TradeshiftDocumentRetrievalServiceImpl.LOGGER . info ( ( "get List of documents by document type " + documentType ) , com.tradeshift.thirdparty.samples.springboot.services.Impl.TradeshiftDocumentRetrievalServiceImpl . class ) ; java.lang.String documentsUri = URI_LIST_DOCUMENTS ; org.springframework.web.client.RestTemplate restTemplate = new org.springframework.web.client.RestTemplate () ; org.springframework.http.HttpEntity < java.lang.String > requestEntity = tokenService . getRequestHttpEntityWithAccessToken () ; org.springframework.http.ResponseEntity < ? > responseEntity = restTemplate . exchange ( documentsUri , HttpMethod.GET , requestEntity , java.lang.String . class , documentType , 25 , 0 ) ; return parseDocuments ( responseEntity ) ; } 
@ java.lang.Override public void onStart () { super . onStart () ; if ( foodList . isEmpty () ) { getFoodsData () ; } if ( gq.fokia.eatwhat.RecentFood.recentFoods . isEmpty () ) { copyList () ; } cursor . close () ; foodList . clear () ; cursor = gq.fokia.eatwhat.MainActivity.db . query ( "food" , null , "recent LIKE '%'" , null , null , null , "recent DESC" ) ; helper . attachToRecyclerView ( null ) ; helper = new android.support.v7.widget.helper.ItemTouchHelper ( new gq.fokia.eatwhat.RecentCallBack () ) ; helper . attachToRecyclerView ( recyclerView ) ; } 
@ java.lang.Override public void tick () { for ( java.util.Iterator < com.wecanteven.Models.ModelTime.TimedObject > iterator = alertables . iterator () ; iterator . hasNext () ; ) { com.wecanteven.Models.ModelTime.TimedObject object = iterator . next () ; java.lang.System.out . println ( "alertable ticks" ) ; if ( object . decrement () ) { alertables . remove ( object ) ; } } for ( java.util.Iterator < com.wecanteven.Models.ModelTime.Tickable > iterator = tickables . iterator () ; iterator . hasNext () ; ) { com.wecanteven.Models.ModelTime.Tickable object = iterator . next () ; object . tick () ; } } 
@ java.lang.Override public android.database.Cursor runQuery ( java.lang.CharSequence charSequence ) { android.database.Cursor managedCursor = null ; if ( ! ( charSequence . equals ( mItemInList . getItem () . getName () ) ) ) { managedCursor = mItemDS . getNames ( charSequence . toString () . trim () ) ; if ( managedCursor . moveToFirst () ) { mIsProposedItem = true ; } } return managedCursor ; } 
public void create () { com.ame.bus3.common.TileRegisterer . load () ; com.ame.bus3.common.packetsorters.SorterList . loadSorters () ; com.ame.bus3.common.Variables.isServer = true ; com.ame.bus3.common.Variables.port = 25566 ; com.ame.bus3.server.ConnectionAccepter accepter = new com.ame.bus3.server.ConnectionAccepter () ; java.lang.Thread accepterThread = new java.lang.Thread ( accepter , "ConnectionAccepter" ) ; accepterThread . start () ; java.lang.System.out . println ( "[Info] Finished initalising" ) ; } 
public ru.jvdev.demoapp.server.model.Task fromDTO ( ru.jvdev.demoapp.server.dto.TaskDTO dto ) { ru.jvdev.demoapp.server.model.Task task = new ru.jvdev.demoapp.server.model.Task () ; task . setTitle ( dto . getTitle () ) ; task . setDueDate ( dto . getDueDate () ) ; int employeeId = dto . getAssigneeId () ; if ( employeeId > 0 ) { task . setAssignee ( findEmployeeOr404 ( employeeId ) ) ; } else { task . setAssignee ( null ) ; } return task ; } 
@ javax.ws.rs.GET @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ javax.ws.rs.Path ( value = "{id}/is-answered" ) public org.codehaus.jettison.json.JSONObject isAnswered ( @ javax.ws.rs.PathParam ( value = "id" ) java.lang.Integer id ) throws java.rmi.RemoteException , org.codehaus.jettison.json.JSONException { org.codehaus.jettison.json.JSONObject serverResponse = new org.codehaus.jettison.json.JSONObject () ; try { serverResponse . put ( "isAnsewred" , solicitudBL . isAnswered ( id ) ) ; } catch ( co.edu.udea.iw.exception.ExceptionHandler e ) { throw new java.rmi.RemoteException ( "No se pudo consultar estado, intente más tarde" ) ; } return serverResponse ; } 
@ java.lang.Override public void setIcon ( final android.graphics.drawable.Drawable icon ) { com.afollestad.aesthetic.Aesthetic . get () . colorIconTitle ( null ) . observeOn ( io.reactivex.android.schedulers.AndroidSchedulers . mainThread () ) . take ( 1 ) . subscribe ( new io.reactivex.functions.Consumer < com.afollestad.aesthetic.ActiveInactiveColors > () { @ java.lang.Override public void accept ( @ io.reactivex.annotations.NonNull com.afollestad.aesthetic.ActiveInactiveColors colors ) { setIcon ( icon , colors . toEnabledSl () ) ; } } , com.afollestad.aesthetic.Rx . onErrorLogAndRethrow () ) ; } 
public void setMap ( ) throws java.lang.Throwable { com.fasterxml.jackson.databind.ObjectMapper mapper = new com.fasterxml.jackson.databind.ObjectMapper () ; java.net.URL url = com.gescc.hedwig.vo.UserList . class . getResource ( "/data/user.json" ) ; java.io.File file = new java.io.File ( url . toURI () ) ; java.util.List < com.gescc.hedwig.vo.User > list = mapper . readValue ( file , new com.fasterxml.jackson.core.type.TypeReference < java.util.List < com.gescc.hedwig.vo.User > > () {} ) ; for ( com.gescc.hedwig.vo.User user : list ) { this . map . put ( user . getEmail () , user ) ; } } 
public void getBatchHashtags ( java.util.ArrayList < java.lang.String > hashtagBatch , com.google.firebase.database.ValueEventListener listener ) { for ( int i = 0 ; i < ( hashtagBatch . size () ) ; i ++ ) { android.util.Log . d ( "hashtag_batch" , hashtagBatch . get ( i ) ) ; com.google.firebase.database.DatabaseReference dataRef = ref . child ( "Hashtags" ) . child ( hashtagBatch . get ( i ) ) ; dataRef . addListenerForSingleValueEvent ( listener ) ; } } 
@ java.lang.Override public com.annadalnoki.androidtest.adapter.ViewHolder onCreateViewHolder ( android.view.ViewGroup parent , int viewType ) { android.content.Context context = parent . getContext () ; android.view.LayoutInflater inflater = android.view.LayoutInflater . from ( context ) ; android.view.View movieList = inflater . inflate ( R.layout.movie_card , parent , false ) ; com.annadalnoki.androidtest.adapter.ViewHolder viewHolder = new com.annadalnoki.androidtest.adapter.ViewHolder ( movieList ) ; loadGenres () ; return viewHolder ; } 
public void run () { if ( ! ( betsEqual () ) ) simulateTurns () ; else { android.util.Log . w ( "GAME_DEBUG" , "Bets Equal" ) ; ( currentRound ) ++ ; switch ( currentRound ) { case 1 : deal () ; break; case 2 : draw () ; break; case 3 : river () ; break; case 4 : continueGame () ; break; } } } 
public static void test_238 ( ) throws android.os.RemoteException , com.android.uiautomator.core.UiObjectNotFoundException { excute ( testcase.Object_TextScroll , testcase.Operation_ClickWait , "应用" , "vertical" ) ; excute ( testcase.Object_ResourceId , testcase.Operation_ClickWait , "com.android.settings:id/advanced" ) ; excute ( testcase.Object_Text , testcase.Operation_ClickWait , "修改系统设置" ) ; excute ( testcase.Object_Text , testcase.Operation_ClickWait , "电话" ) ; excute ( testcase.Object_ResourceId , testcase.Operation_ClickWait , "com.android.settings:id/app_settings" ) ; check ( testcase.Object_Text , testcase.Operation_checkExist , "应用信息" ) ; } 
private int parseNumberOfRecurrence ( java.lang.String commandText , java.lang.String numRecurrenceText ) throws seedu.address.logic.parser.ParseException { int numRecurrence = 0 ; boolean parseError = false ; try { numRecurrence = java.lang.Integer . parseInt ( numRecurrenceText ) ; if ( numRecurrence < 0 ) parseError = true ; } catch ( java.lang.NumberFormatException ex ) { parseError = true ; } if ( parseError ) throw new seedu.address.logic.parser.ParseException ( commandText , "NUMBER_OF_RECURRENCE: Must be a nonnegative whole number!" ) ; return numRecurrence ; } 
public Recycling.RecyclingData.RecyclingMachine selectedRCM () { if ( ( RMOS . getMachines () . isEmpty () ) || ( ( rcmJList . getModel () . getSize () ) == 0 ) ) return null ; else return RMOS . getMachines () . get ( rcmJList . getSelectedIndex () ) ; } 
public boolean isKindOfLink ( java.util.List < java.lang.String > list , java.lang.String proposition ) { if ( list . contains ( proposition ) ) { return true ; } else { for ( java.lang.String premise : list ) { if ( ( premise . contains ( "*" ) ) && ( java.util.regex.Pattern . compile ( premise . replace ( "*" , "[a-zA-Z0-9_]*" ) ) . matcher ( proposition ) . matches () ) ) { return true ; } } } return false ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( fileName != "" ) { com.burstlinker.budget.AudioFragment frag = new com.burstlinker.budget.AudioFragment () ; android.os.Bundle bundle = new android.os.Bundle () ; bundle . putSerializable ( "mode" , AudioFragment.MODE.PLAY ) ; bundle . putString ( "file" , fileName ) ; frag . setArguments ( bundle ) ; android.app.FragmentTransaction transaction = ( ( android.app.Activity ) ( context ) ) . getFragmentManager () . beginTransaction () ; transaction . add ( frag , "headless" ) ; transaction . commit () ; } } 
@ java.lang.Override public com.example.jonatan.clothesplanner.wardrobe.wardrobeitem.IWardrobeItem getTrousers () { if ( ( ( currentTrousers ) + 1 ) > ( wardrobe . getTrousers () . size () ) ) { currentTrousers = 0 ; } com.example.jonatan.clothesplanner.wardrobe.wardrobeitem.IWardrobeItem trousers = wardrobe . getTrousers () . get ( currentTrousers ) ; ( currentTrousers ) ++ ; return trousers ; } 
public java.lang.Object [] toArray () { final int [] values = this . values ; final java.lang.Object [] ret = new java.lang.Object [ size ] ; for ( int from = 0 , to = 0 ; from < ( values.length ) ; from ++ ) { final int val = values [ from ] ; if ( val != ( missingValue ) ) { ret [ ( to ++ ) ] = val ; } } return ret ; } 
public void visit ( jetbrains.mps.smodel.SNode it ) { junit.framework.Assert . assertEquals ( null , jetbrains.mps.lang.test.matcher.NodesMatcher . matchNodes ( jetbrains.mps.internal.collections.runtime.ListSequence . fromListAndArray ( new java.util.ArrayList < jetbrains.mps.smodel.SNode > () , it ) , jetbrains.mps.internal.collections.runtime.ListSequence . fromListAndArray ( new java.util.ArrayList < jetbrains.mps.smodel.SNode > () , jetbrains.mps.generator.traceInfo.TraceInfoUtil . getNode ( jetbrains.mps.generator.traceInfo.TraceInfoUtil . getUnitName ( root ) , ( ( jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations . getString ( root , "name" ) ) + ".java" ) , line.value ) ) ) ) ; line.value += delta ; } 
@ java.lang.Override public org.apache.airavata.gfac.core.cluster.RawCommandInfo getSubmitCommand ( java.lang.String workingDirectory , java.lang.String forkFilePath ) { return new org.apache.airavata.gfac.core.cluster.RawCommandInfo ( ( ( ( ( ( ( this . installedPath ) + ( jobManagerCommands . get ( JobManagerCommand.SUBMISSION ) ) ) + " " ) + workingDirectory ) + ( java.io.File.separator ) ) + ( org.apache.commons.io.FilenameUtils . getName ( forkFilePath ) ) ) ) ; } 
private java.lang.String formatDate ( long date ) { date = date * 1000 ; java.lang.String formattedDate = null ; final java.lang.String targetFormat = "yyyy-MM-dd" ; java.util.Date theDate = new java.util.Date ( date ) ; try { final java.text.SimpleDateFormat formatter = new java.text.SimpleDateFormat ( targetFormat ) ; formattedDate = formatter . format ( theDate ) ; } catch ( java.lang.Exception e ) { formattedDate = java.lang.Long . toString ( date ) ; } return formattedDate ; } 
public org.jenkinsci.plugins.gitlablogo.api.Project getProject ( java.lang.String repositoryName ) { java.lang.String url = null ; try { url = ( ( endpointUrl ) + "/projects/" ) + ( urlEncode ( repositoryName ) ) ; java.lang.String json = getContent ( url ) ; org.codehaus.jackson.map.ObjectMapper mapper = new org.codehaus.jackson.map.ObjectMapper () ; return mapper . readValue ( json , org.jenkinsci.plugins.gitlablogo.api.Project . class ) ; } catch ( java.io.IOException e ) { throw new java.lang.RuntimeException ( e ) ; } } 
public com.google.common.util.concurrent.ListenableFuture < org.opendaylight.yangtools.yang.common.RpcResult < java.lang.Void > > floodArp ( org.opendaylight.ovsdb.openstack.netvirt.providers.openflow13.services.arp.ArpMessageAddress senderAddress , org.opendaylight.yang.gen.v1.urn.ietf.params.xml.ns.yang.ietf.inet.types.rev100924.Ipv4Address tpa , org.opendaylight.yangtools.yang.binding.InstanceIdentifier < org.opendaylight.yang.gen.v1.urn.opendaylight.inventory.rev130819.nodes.Node > nodeIid ) { com.google.common.base.Preconditions . checkNotNull ( senderAddress ) ; com.google.common.base.Preconditions . checkNotNull ( tpa ) ; com.google.common.base.Preconditions . checkNotNull ( nodeIid ) ; org.opendaylight.yang.gen.v1.urn.opendaylight.inventory.rev130819.node.NodeConnectorKey nodeConnectorKey = new org.opendaylight.yang.gen.v1.urn.opendaylight.inventory.rev130819.node.NodeConnectorKey ( createNodeConnectorId ( org.opendaylight.ovsdb.openstack.netvirt.providers.openflow13.services.arp.ArpSender.OFPP_ALL , nodeIid . firstKeyOf ( org.opendaylight.yang.gen.v1.urn.opendaylight.inventory.rev130819.nodes.Node . class , org.opendaylight.yang.gen.v1.urn.opendaylight.inventory.rev130819.nodes.NodeKey . class ) . getId () ) ) ; org.opendaylight.yangtools.yang.binding.InstanceIdentifier < org.opendaylight.yang.gen.v1.urn.opendaylight.inventory.rev130819.node.NodeConnector > egressNc = nodeIid . child ( org.opendaylight.yang.gen.v1.urn.opendaylight.inventory.rev130819.node.NodeConnector . class , nodeConnectorKey ) ; return sendArp ( senderAddress , tpa , egressNc ) ; } 
private int numberOfTranslationReactionsInModelTree ( ) throws java.lang.Exception { int number_of_records = 0 ; java.lang.String translation_class_name_key = ( _package_name_parser_delegate ) + ".VLCGNFBATranslationParserDelegate" ; java.util.Vector < org.varnerlab.kwatee.nfbamodel.VLCGNFBAModelComponent > translation_component_vector = _model_component_table . get ( java.lang.Class . forName ( translation_class_name_key ) ) ; number_of_records = translation_component_vector . size () ; return number_of_records ; } 
public boolean chooseAction ( java.lang.String action , java.lang.StringBuilder result ) throws com.umbra.vultoModule.UnknownInputException { boolean isAlive = false ; java.lang.System.out . println ( action ) ; if ( action . equalsIgnoreCase ( "f" ) ) isAlive = chooseAction ( Action.FIGHT , result ) ; else if ( action . equalsIgnoreCase ( "h" ) ) isAlive = chooseAction ( Action.HIDE , result ) ; else if ( action . equalsIgnoreCase ( "r" ) ) isAlive = chooseAction ( Action.RUN , result ) ; else throw new com.umbra.vultoModule.UnknownInputException () ; return isAlive ; } 
@ java.lang.Override public boolean equals ( java.lang.Object o ) { if ( o == ( this ) ) return true ; if ( ! ( o instanceof geometry.shapes.Angle ) ) return false ; geometry.shapes.Angle a = ( ( geometry.shapes.Angle ) ( o ) ) ; return ( isValidName ( a . getName () ) ) && ( vertices . equals ( a.vertices ) ) ; } 
public java.lang.Boolean getBoolean ( java.lang.String section , java.lang.String key ) throws java.io.IOException { java.lang.String value = getString ( section , key ) ; if ( ( ( value . toLowerCase () ) == "true" ) || ( value == "1" ) ) { return true ; } else if ( ( ( value . toLowerCase () ) == "false" ) || ( value == "0" ) ) { return false ; } else { throw new java.io.IOException ( ( "Invalid boolean format: " + value ) ) ; } } 
@ java.lang.Override public java.util.List < java.lang.String > findLatestBackup () { java.util.List < java.lang.String > files ; try { files = getObjectFromGCS ( com.google.jenkins.plugins.persistentmaster.storage.GcloudGcsStorage.LAST_BACKUP_FILE ) ; } catch ( java.io.IOException e ) { com.google.jenkins.plugins.persistentmaster.storage.GcloudGcsStorage.logger . log ( java.util.logging.Level.FINE , "Exception while loading last-backup file" , e ) ; return null ; } if ( files . isEmpty () ) { com.google.jenkins.plugins.persistentmaster.storage.GcloudGcsStorage.logger . fine ( "Last-backup file is empty, no backups available." ) ; return null ; } return files ; } 
@ quarkbrothBlog.controller.GetMapping ( value = "/profile/edit/{id}" ) @ org.springframework.security.access.prepost.PreAuthorize ( value = "isAuthenticated()" ) public java.lang.String profileEdit ( org.springframework.ui.Model model , @ quarkbrothBlog.controller.PathVariable java.lang.Integer id , quarkbrothBlog.bindingModel.UserBindingModel userBindingModel ) { if ( ! ( this . userRepository . exists ( id ) ) ) { return "redirect:/" ; } quarkbrothBlog.entity.User user = this . userRepository . findOne ( id ) ; if ( ! ( isAdminOrMe ( user ) ) ) { return "redirect:/" ; } model . addAttribute ( "user" , user ) ; model . addAttribute ( "view" , "user/edit" ) ; return "base-layout" ; } 
@ java.lang.Override public boolean isDefinitionNode ( com.intellij.psi.PsiElement def ) { return ( ( ( ( ( ( ( ( ( def instanceof org.ballerinalang.plugins.idea.psi.FunctionDefinitionNode ) || ( def instanceof org.ballerinalang.plugins.idea.psi.ConnectorDefinitionNode ) ) || ( def instanceof org.ballerinalang.plugins.idea.psi.StructDefinitionNode ) ) || ( def instanceof org.ballerinalang.plugins.idea.psi.VariableDefinitionNode ) ) || ( def instanceof org.ballerinalang.plugins.idea.psi.AnnotationDefinitionNode ) ) || ( def instanceof org.ballerinalang.plugins.idea.psi.GlobalVariableDefinitionNode ) ) || ( def instanceof org.ballerinalang.plugins.idea.psi.ConstantDefinitionNode ) ) || ( def instanceof org.ballerinalang.plugins.idea.psi.ParameterNode ) ) || ( def instanceof org.ballerinalang.plugins.idea.psi.FieldDefinitionNode ) ) || ( def instanceof org.ballerinalang.plugins.idea.psi.NameReferenceNode ) ; } 
private java.util.Optional < org.nest.codegeneration.helpers.LEMSElements.Unit > handleType ( org.nest.symboltable.symbols.TypeSymbol _typeSymbol ) { com.google.common.base.Preconditions . checkNotNull ( _typeSymbol ) ; if ( ( _typeSymbol . getType () ) == ( TypeSymbol.Type.UNIT ) ) { org.nest.codegeneration.helpers.LEMSElements.Unit temp = new org.nest.codegeneration.helpers.LEMSElements.Unit ( _typeSymbol ) ; this . addDimension ( temp . getDimension () ) ; this . addUnit ( temp ) ; return java.util.Optional . of ( temp ) ; } return java.util.Optional . empty () ; } 
@ com.google.common.eventbus.Subscribe public void onConstructionLast ( elec332.core.main.FMLEvent e ) { if ( e instanceof elec332.core.main.FMLConstructionEvent ) { elec332.core.util.FMLUtil . runAs ( elec332.core.util.FMLUtil . getModContainer ( this ) , ( ) - > { asmDataProcessor = new elec332.core.main.ElecCoreDiscoverer () ; asmDataProcessor . identify ( ( ( elec332.core.main.FMLConstructionEvent ) ( e ) ) . getASMHarvestedData () ) ; elec332.core.main.ElecModHandler . identifyMods () ; asmDataProcessor . process ( LoaderState.CONSTRUCTING ) ; } ) ; } if ( e instanceof elec332.core.main.FMLPreInitializationEvent ) { elec332.core.util.FMLUtil . runAs ( elec332.core.util.FMLUtil . getModContainer ( this ) , ElecModelHandler : : registerModels ) ; } } 
@ java.lang.Override public java.util.Set < io.cattle.platform.api.auth.Identity > getIdentities ( io.cattle.platform.core.model.Account account ) { java.util.Set < io.cattle.platform.api.auth.Identity > identities = new java.util.HashSet <> () ; java.lang.String accountId = ( ( java.lang.String ) ( io.github.ibuildthecloud.gdapi.context.ApiContext . getContext () . getIdFormatter () . formatId ( objectManager . getType ( io.cattle.platform.core.model.Account . class ) , account . getId () ) ) ) ; identities . add ( new io.cattle.platform.api.auth.Identity ( io.cattle.platform.core.constants.ProjectConstants.RANCHER_ID , java.lang.String . valueOf ( accountId ) , account . getName () ) ) ; return identities ; } 
private void deleteOldICals ( com.j256.ormlite.dao.RuntimeExceptionDao < de.fau.cs.mad.fablab.rest.core.ICal , java.lang.Long > iCalDao ) { java.util.List < de.fau.cs.mad.fablab.rest.core.ICal > retrievedICals = new java.util.ArrayList <> () ; com.j256.ormlite.stmt.DeleteBuilder < de.fau.cs.mad.fablab.rest.core.ICal , java.lang.Long > deleteBuilder = iCalDao . deleteBuilder () ; try { deleteBuilder . where () . lt ( "end" , java.lang.System . currentTimeMillis () ) ; iCalDao . delete ( deleteBuilder . prepare () ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } 
public void onClick ( android.view.View v ) { if ( ! ( penaltyYdsEditText . getText () . toString () . equals ( "" ) ) ) { globalPlay . setGnLs ( java.lang.Integer . parseInt ( penaltyYdsEditText . getText () . toString () ) ) ; globalPlay . setDefensivePenalty ( defenseCB . isChecked () ) ; globalPlay . setYdLn ( java.lang.Integer . parseInt ( ydLnEditText . getText () . toString () ) ) ; } flow = true ; newPlayDialog () ; dialog . dismiss () ; } 
private void addSpeeds () { java.lang.String maxSpeed = java.lang.String . format ( java.util.Locale . getDefault () , "%.1s %s" , ( ( pastRunItem.maxSpeed ) * ( speedUnits.multiplier ) ) , speedUnits.label ) ; java.lang.String avgSpeed = java.lang.String . format ( java.util.Locale . getDefault () , "%.1f %s" , ( ( pastRunItem.avgSpeed ) * ( speedUnits.multiplier ) ) , speedUnits.label ) ; runStatItems . add ( new letshangllc.letsride.helpers.RunStatItem ( R.drawable.ic_speedometer , "Max. Speed" , maxSpeed ) ) ; runStatItems . add ( new letshangllc.letsride.helpers.RunStatItem ( R.drawable.ic_speedometer , "Avg. Speed" , avgSpeed ) ) ; } 
@ play.mvc.With ( value = util.TokenAuth . class ) public play.mvc.Result findById ( java.lang.String id ) { try { java.lang.SecurityManager . validatePermission ( "view-patient" , Http.Context.current . get () . flash () . get ( "token" ) ) ; models.Paciente paciente = null ; try { paciente = pacientesCrud . findById ( id ) ; } catch ( java.lang.Exception e ) { return error ( "Object does not exist" , 400 ) ; } return ok ( paciente ) ; } catch ( java.lang.Exception e ) { return error ( e . getMessage () ) ; } } 
public void done ( java.util.List < com.example.cmput401.classdiscuss.Message > messages , com.parse.ParseException e ) { if ( e == null ) { if ( ( mMessages ) != null ) { mMessages . clear () ; mMessages . addAll ( messages ) ; } mAdapter . notifyDataSetChanged () ; lvChat . invalidate () ; } else { android.util.Log . d ( "message" , ( "Error: " + ( e . getMessage () ) ) ) ; } } 
private void handleSession ( net.cattweasel.pokebot.api.PokeContext context , net.cattweasel.pokebot.object.BotSession session , net.cattweasel.pokebot.tools.GeoLocation loc ) { if ( ( ( session . getUser () . getSettings () . get ( net.cattweasel.pokebot.task.UserNotificationTask.ARG_GYM_ENABLED ) ) == null ) || ( net.cattweasel.pokebot.tools.Util . otob ( session . getUser () . getSettings () . get ( net.cattweasel.pokebot.task.UserNotificationTask.ARG_GYM_ENABLED ) ) ) ) { handleGyms ( context , session , loc ) ; } handleSpawns ( context , session , loc ) ; } 
public byte [] render ( java.lang.String html ) throws com.itextpdf.text.DocumentException , java.io.IOException , java.net.URISyntaxException { java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream () ; org.xhtmlrenderer.pdf.ITextRenderer renderer = provider . getRenderer () ; renderer . setDocumentFromString ( wrapHtml5Document ( html ) , resourcesPath ) ; renderer . layout () ; renderer . createPDF ( baos , true ) ; renderer . finishPDF () ; return baos . toByteArray () ; } 
protected void doExecute () { if ( nodeTemplate != null ) { if ( ( ( nodeTemplate . getMinInstances () ) == ( - 1 ) ) && ( ( ( ( java.math.BigInteger ) ( nodeTemplate . getMaxInstances () ) ) . intValue () ) == ( - 1 ) ) ) {} else { nodeTemplate . setMinInstances ( this . minInstancesSpin . getSelection () ) ; } } } 
@ org.junit.Test ( expected = com.in28minutes.junit.business.exception.DifferentCurrenciesException . class ) public void testClientProductSum_DifferentCurrencies_ThrowsException ( ) throws com.in28minutes.junit.business.exception.DifferentCurrenciesException { com.in28minutes.junit.model.Amount [] amounts = new com.in28minutes.junit.model.Amount [] { new com.in28minutes.junit.model.AmountImpl ( new java.math.BigDecimal ( "5.0" ) , com.in28minutes.junit.model.Currency.EURO ) , new com.in28minutes.junit.model.AmountImpl ( new java.math.BigDecimal ( "6.0" ) , com.in28minutes.junit.model.Currency.INDIAN_RUPEE ) } ; java.util.List < com.in28minutes.junit.model.Product > products = createProductListWithAmounts ( amounts ) ; @ java.lang.SuppressWarnings ( value = "unused" ) com.in28minutes.junit.model.Amount actual = clientBO . getClientProductsSum ( products ) ; } 
public static java.util.ArrayList < jeu.Calcul > generateList ( int size ) { java.util.ArrayList < jeu.Calcul > liste = new java.util.ArrayList < jeu.Calcul > ( size ) ; for ( int i = 0 ; i < size ; i ++ ) { jeu.Calcul test = new jeu.Calcul () ; while ( ( test . getResultat ( "-" ) ) < 0 ) { test = new jeu.Calcul () ; } liste . add ( test ) ; } return liste ; } 
public int [] mainCharacterInfo () { int [] character = new int [ 3 ] ; int self_no = client . character () ; int index = info.clientNumberList . indexOf ( self_no ) ; if ( ( info.CD ) > 0 ) { character [ 0 ] = 0 ; } else { character [ 0 ] = 1 ; } character [ 1 ] = info.dirList . get ( index ) ; character [ 2 ] = self_no ; return character ; } 
private void buyNow ( ) throws org.json.JSONException { org.json.JSONObject jsonObject = new org.json.JSONObject () ; jsonObject . put ( "sessionId" , db . getUserDetails () . get ( "sessio0nId" ) ) ; jsonObject . put ( "storeItemId" , storeId ) ; apiCall . apiRequestPost ( getActivity () , jsonObject , Config.URL_STORE_BUY , "storeItemBuy" , apiCallback ) ; progressBarView ( true ) ; } 
@ java.lang.Override public void init () { net.minecraft.item.Item studentCmdBlock = net.minecraftforge.fml.common.registry.GameRegistry . findItem ( "dyn|items" , "student_command_block" ) ; net.minecraft.client.Minecraft . getMinecraft () . getRenderItem () . getItemModelMesher () . register ( studentCmdBlock , 0 , new net.minecraft.client.resources.model.ModelResourceLocation ( new net.minecraft.util.ResourceLocation ( "dynitems" , "textures/blocks/student_command_block.png" ) , null ) ) ; } 
public void removeWarp ( java.util.UUID uuid ) { if ( warpList . containsKey ( uuid ) ) { popSign ( com.wasteofplastic.askyblock.util.Util . getLocationString ( ( ( java.lang.String ) ( warpList . get ( uuid ) ) ) ) ) ; warpList . remove ( uuid ) ; } saveWarpList () ; } 
public void add ( T newElement ) { heap . add ( null ) ; int index = ( heap . size () ) - 1 ; while ( ( index > 1 ) && ( ( heap . get ( getParent ( index ) ) . compareTo ( newElement ) ) > 0 ) ) { heap . set ( index , heap . get ( getParent ( index ) ) ) ; index = getParent ( index ) ; heap . set ( index , newElement ) ; } } 
private void setToolbar () { toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; android.support.v7.app.ActionBar actionBar = getSupportActionBar () ; getWindow () . setStatusBarColor ( android.support.v4.content.ContextCompat . getColor ( getBaseContext () , R.color.red ) ) ; actionBar . setDisplayHomeAsUpEnabled ( true ) ; } 
public void countStats () { for ( models.Word word : _wordList ) { if ( ( word . getStatus () ) != ( Status.Unseen ) ) { for ( int i = 0 ; i < 3 ; i ++ ) { _accuracyStats [ i ] += word . getStat ( i ) ; } } } } 
private java.lang.String getPath ( java.lang.String extra ) { if ( extra . equals ( "" ) ) { return "Jails." + ( this . getName () ) ; } return ( ( "Jails." + ( this . getName () ) ) + "." ) + extra ; } 
public void run () { for ( int i = 0 ; i < ( main.java.com.distributed.Node.Mn ) ; i ++ ) { java.util.Timer timer = new java.util.Timer () ; timer . schedule ( new main.java.com.distributed.Node.UpdateTask () , ( ( main.java.com.distributed.Node.N ) * 1000 ) ) ; } java.lang.System . exit ( 0 ) ; } 
@ java.lang.Override public synchronized void start ( final org.ehcache.spi.service.ServiceConfiguration < ? > config , final org.ehcache.spi.ServiceProvider serviceProvider ) { org.ehcache.internal.persistence.DefaultLocalPersistenceService . createLocationIfRequiredAndVerify ( rootDirectory ) ; try { lockFile = new java.io.File ( ( ( ( rootDirectory ) + ( java.io.File.separator ) ) + ".lock" ) ) ; final java.io.RandomAccessFile rw = new java.io.RandomAccessFile ( lockFile , "rw" ) ; lock = rw . getChannel () . lock () ; } catch ( java.io.IOException e ) { throw new java.lang.RuntimeException ( ( "Couldn't lock rootDir: " + ( rootDirectory . getAbsolutePath () ) ) , e ) ; } } 
@ java.lang.Override public void onSongsDownloaded ( java.util.ArrayList < com.example.user.cloudplayer.model.Song > songs ) { if ( songs == null ) { android.widget.Toast . makeText ( this , getResources () . getString ( R.string.songs_download_alert ) , Toast.LENGTH_LONG ) . show () ; currentPlayList = new java.util.ArrayList < com.example.user.cloudplayer.model.Song > () ; } else { currentPlayList = songs ; } adapter = new com.example.user.cloudplayer.adapters.SongAdapter ( this , currentPlayList ) ; list . setAdapter ( adapter ) ; android.util.Log . i ( "irakli" , "aqaa" ) ; } 
private void init () { setGravity ( Gravity.CENTER ) ; setDrawingCacheEnabled ( true ) ; mPaint = new android.graphics.Paint () ; mPaint . setAntiAlias ( true ) ; mPaint . setColor ( mCircleColor ) ; mPaint . setStyle ( Paint.Style.FILL ) ; mPaint . setTextAlign ( Paint.Align.CENTER ) ; mPaint . setTextSize ( mTextSize ) ; mBgCircle = new com.lsxiao.library.Circle ( mRadius , mRadius , mRadius ) ; } 
private void setCssFilePath ( fi.mystes.synapse.mediator.PdfMediator mediator , org.apache.axiom.om.OMElement pdf ) { org.apache.axiom.om.OMElement cssFilePath = fac . createOMElement ( "cssFilePath" , synNS , pdf ) ; if ( ( mediator . getPdfFilePathExpression () ) != null ) { org.apache.synapse.config.xml.SynapseXPathSerializer . serializeXPath ( mediator . getCssFilePathExpression () , cssFilePath , "expression" ) ; } else { cssFilePath . addAttribute ( fac . createOMAttribute ( "value" , nullNS , mediator . getCssFilePath () ) ) ; } } 
@ java.lang.Override public void dispatchThrottle ( jmri.DccThrottle t , jmri.ThrottleListener l ) { jmri.jmrix.loconet.LnThrottleManager.log . debug ( "dispatchThrottle - throttle {}" , t . getLocoAddress () ) ; jmri.jmrix.loconet.LocoNetThrottle lnt = ( ( jmri.jmrix.loconet.LocoNetThrottle ) ( t ) ) ; jmri.jmrix.loconet.LocoNetSlot tSlot = lnt . getLocoNetSlot () ; tc . sendLocoNetMessage ( tSlot . writeStatus ( LnConstants.LOCO_COMMON ) ) ; tc . sendLocoNetMessage ( tSlot . dispatchSlot () ) ; super . releaseThrottle ( t , l ) ; } 
private static java.lang.String extractSectionFromFacebookUrl ( final java.lang.String url , int sectionNumber ) { java.util.regex.Matcher matcher = pw.rapit.likes.service.FacebookFetcherService.FB_URL_PATTERN . matcher ( url ) ; if ( matcher . find () ) { java.lang.String substringWithPageName = substring ( url , matcher . end () ) ; return split ( substringWithPageName , pw.rapit.likes.service.FacebookFetcherService.FORWARD_SLASH , 4 ) [ sectionNumber ] ; } return url ; } 
@ java.lang.Override protected void onPostExecute ( java.lang.Void orderItemModel ) { super . onPostExecute ( orderItemModel ) ; if ( ( appCompatDialog != null ) && ( appCompatDialog . isShowing () ) ) { appCompatDialog . dismiss () ; } orderItemModelMap . remove ( item . getCode () ) ; productModelList . remove ( adapterPosition ) ; notifyDataSetChanged () ; if ( ( onAdapterInteractionListener ) != null ) { onAdapterInteractionListener . onProductSelected () ; } } 
public void robotInit () { frontLeft = new edu.wpi.first.wpilibj.Talon ( 0 ) ; rearLeft = new edu.wpi.first.wpilibj.Talon ( 1 ) ; frontRight = new edu.wpi.first.wpilibj.Talon ( 2 ) ; rearRight = new edu.wpi.first.wpilibj.Talon ( 3 ) ; myRobot = new edu.wpi.first.wpilibj.RobotDrive ( frontLeft , rearLeft , frontRight , rearRight ) ; } 
@ java.lang.Override public com.health.entity.Hospital findById ( int hid ) { try { java.lang.String str = "FROM Hospital h WHERE h.hospital_id = ?1" ; javax.persistence.Query query = em . createQuery ( str , com.health.entity.Hospital . class ) ; query . setParameter ( 1 , hid ) ; com.health.entity.Hospital hospital = ( ( com.health.entity.Hospital ) ( query . getSingleResult () ) ) ; return hospital ; } catch ( java.lang.Exception e ) { em . close () ; e . printStackTrace () ; return null ; } } 
public double stepAvgWeek ( double [] weekAvg ) { int count = 0 ; double total = 0 ; while ( count != 6 ) { total = total + ( weekAvg [ count ] ) ; count ++ ; } total = total / 7 ; total = ( java.lang.Math . floor ( ( total * 100 ) ) ) / 100 ; return total ; } 
@ javafx.fxml.FXML public void closeAction ( javafx.event.ActionEvent event ) { fadeOut () ; javafx.animation.Timeline timer = new javafx.animation.Timeline ( new javafx.animation.KeyFrame ( javafx.util.Duration . seconds ( 2 ) , ( e ) - > { javafx.scene.layout.StackPane parent = ( ( javafx.scene.layout.StackPane ) ( parentPane . getParent () ) ) ; parent . getChildren () . remove ( parentPane ) ; } ) ) ; timer . play () ; } 
public void printPlan () { for ( java.lang.String table : tableToPartitionsToRanges . keySet () ) { java.lang.System.out . println ( ( "Table " + table ) ) ; java.util.Map < java.lang.Integer , java.util.TreeMap < java.lang.Long , java.lang.Long > > partitionToRanges = tableToPartitionsToRanges . get ( table ) ; for ( java.lang.Integer partition : partitionToRanges . keySet () ) { java.lang.System.out . print ( ( ( ( "Partition " + partition ) + ": " ) + ( printPartition ( table , partition ) ) ) ) ; java.lang.System.out . println ( "" ) ; } } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_jxnugo_userinfo ) ; initToolbar () ; loadUserInfo () ; initView () ; progressBar . setVisibility ( View.VISIBLE ) ; org.greenrobot.eventbus.EventBus . getDefault () . register ( this ) ; cn.edu.jxnu.awesome_campus.database.dao.jxnugo.JxnuGoUserDAO dao = new cn.edu.jxnu.awesome_campus.database.dao.jxnugo.JxnuGoUserDAO () ; dao . loadFromNet () ; } 
@ java.lang.Override protected void init ( com.lam.musicplayer.songPlayer.SongPlayPresenter mPresenter , android.os.Bundle savedInstanceState ) { de.greenrobot.event.EventBus . getDefault () . register ( this ) ; butterknife.ButterKnife . inject ( this ) ; mSongPlayer = getIntent () . getParcelableExtra ( com.lam.musicplayer.songPlayer.SongPlayActivity.EXTRA_SONG_PLAYER ) ; mPlayMode = com.lam.musicplayer.songPlayer.SongPlayActivity.MODE_RECYCLER_LIST ; mPresenter . loadPlaySongList ( mSongPlayerList , mSongPlayer ) ; initView () ; registerListener () ; timeManager () ; mPresenter . loadSongCover ( mSongPlayer . getPicSmall () ) ; } 
public void setTestModel1 ( com.raizlabs.android.dbflow.test.structure.TestModel1 model1 ) { testModel1 = new com.raizlabs.android.dbflow.structure.container.ForeignKeyContainer < com.raizlabs.android.dbflow.test.structure.TestModel1 > ( com.raizlabs.android.dbflow.test.structure.TestModel1 . class ) ; java.util.Map < java.lang.String , java.lang.Object > map = new java.util.HashMap <> () ; map . put ( TestModel1.Table.NAME , model1.name ) ; testModel1 . setData ( map ) ; } 
public double calculateProbability ( int currentPoints ) { if ( this . fullDeck . isEmpty () ) { return 0.5 ; } int numberOfBusts = 0 ; int numberOfNonBusts = 0 ; for ( Blackjack.Card card : this . fullDeck ) { int potentialPoints = currentPoints + ( card . getPoints () ) ; if ( potentialPoints > 21 ) { numberOfBusts ++ ; } else { numberOfNonBusts ++ ; } } return numberOfBusts / ( ( double ) ( numberOfNonBusts ) ) ; } 
@ java.lang.Override public void onResponse ( retrofit2.Call < com.dreamfactory.sampleapp.models.FileRecord > call , retrofit2.Response < com.dreamfactory.sampleapp.models.FileRecord > response ) { if ( response . isSuccessful () ) { com.dreamfactory.sampleapp.models.FileRecord fileRecord = response . body () ; com.dreamfactory.sampleapp.activities.ContactViewActivity.ConvertToBitmap convertToBitmapTask = new com.dreamfactory.sampleapp.activities.ContactViewActivity.ConvertToBitmap () ; convertToBitmapTask . execute ( fileRecord . getContent () ) ; } else { com.dreamfactory.sampleapp.models.ErrorMessage e = com.dreamfactory.sampleapp.api.DreamFactoryAPI . getErrorMessage ( response ) ; onFailure ( call , e . toException () ) ; } } 
@ java.lang.Override public boolean onItemLongClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { java.lang.String positionName = ( ( java.lang.String ) ( mAdapter . getItem ( position ) ) ) ; mAdapter . remove ( positionName ) ; mListItems . removeAll ( mListItems ) ; mAdapter . notifyDataSetChanged () ; if ( ( mTodoList . size () ) == 0 ) { emptyListMessage . setVisibility ( View.VISIBLE ) ; mListView . setVisibility ( View.INVISIBLE ) ; } return false ; } 
@ java.lang.Override public org.apache.hadoop.io.Text toText ( org.apache.hadoop.io.Text text ) { edu.umn.cs.spatialHadoop.io.TextSerializerHelper . serializeDouble ( x , text , ',' ) ; edu.umn.cs.spatialHadoop.io.TextSerializerHelper . serializeDouble ( y , text , ( tags . isEmpty () ? ' ' : ',' ) ) ; text . append ( str . getBytes () , 0 , str . length () ) ; return text ; } 
public static void mergeItemsBetweenStacks ( net.minecraft.item.ItemStack takeFrom , net.minecraft.item.ItemStack moveTo ) { int room = ( moveTo . getMaxStackSize () ) - ( moveTo.stackSize ) ; if ( room > 0 ) { int moveover = java.lang.Math . min ( takeFrom.stackSize , room ) ; moveTo.stackSize += moveover ; takeFrom.stackSize -= moveover ; } } 
public java.util.Date GetModifiedDate ( java.lang.String url ) { java.util.List < com.github.sardine.DavResource > l = null ; try { l = sardine . list ( url ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } java.util.Date d = l . get ( 0 ) . getModified () ; java.lang.System.out . println ( ( "date is " + d ) ) ; return d ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/searchInventoryHistoryList" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String searchInventoryHistoryList ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "inventoryHistoryForm" ) @ org.springframework.validation.annotation.Validated com.JJ.controller.inventorymanagement.InventoryHistorySearchCriteria searchCriteria , org.springframework.validation.BindingResult result , org.springframework.ui.Model model , final org.springframework.web.servlet.mvc.support.RedirectAttributes redirectAttributes ) { com.JJ.controller.inventorymanagement.InventoryHistoryManagementController.logger . debug ( "searching inventory history list" ) ; if ( result . hasErrors () ) { return "listInventoryHistory" ; } else { productInventoryList = inventoryProductManagementService . searchProductInventory ( searchCriteria ) ; searchBefore = true ; model . addAttribute ( "inventoryHistoryForm" , searchCriteria ) ; model . addAttribute ( "modeList" , modeList ) ; model . addAttribute ( "locationList" , locationList ) ; return "listInventoryHistory" ; } } 
public java.lang.String getUrl ( ) throws java.io.IOException { java.lang.String url = this . url ; if ( Config.enableRESTfulSupport ) { this . replaceRegexForRESTUri () ; } if ( ( method . equalsIgnoreCase ( HttpMethod.HTTP_GET ) ) || ( method . equalsIgnoreCase ( HttpMethod.HTTP_DELETE ) ) ) { org.gemini.httpengine.library.FormUrlEncodedParser parser = new org.gemini.httpengine.library.FormUrlEncodedParser () ; byte [] data = parser . parse ( httpParameters ) ; if ( null != data ) { url += "?" + ( new java.lang.String ( data ) ) ; } } return url ; } 
@ org.junit.Test public final void testGameUpdate () { gsm = new sem.group47.gamestate.GameStateManager () ; org.junit.Assert . assertEquals ( gsm . getCurrentState () , GameStateManager.MENUSTATE ) ; gsm . setState ( GameStateManager.LEVEL1STATE ) ; org.junit.Assert . assertEquals ( gsm . getCurrentState () , GameStateManager.LEVEL1STATE ) ; for ( int i = 0 ; i < 6000 ; i ++ ) { gsm . update () ; } } 
@ org.junit.Test public void testInsertData () { java.util.Map < java.lang.String , java.lang.Object > datas = new java.util.HashMap <> () ; datas . put ( "dd2" , "dd2_value" ) ; datas . put ( "weight" , 75 ) ; datas . put ( "height" , 1.75 ) ; java.lang.System.out . println ( writer . insertRecord ( datas , source , userKey , empName ) ) ; } 
protected void doGet ( javax.servlet.http.HttpServletRequest req , javax.servlet.http.HttpServletResponse resp ) throws java.io.IOException , javax.servlet.ServletException { wp = ( ( domain.Werkplaats ) ( getServletContext () . getAttribute ( "wp" ) ) ) ; if ( ! ( wp . AfsprakenNietOuderWeek () . isEmpty () ) ) { req . setAttribute ( "afspraken" , wp . AfsprakenNietOuderWeek () ) ; java.lang.System.out . println ( wp . AfsprakenNietOuderWeek () ) ; } req . getRequestDispatcher ( "afspraakHome.jsp" ) . forward ( req , resp ) ; } 
@ java.lang.Override public org.logicng.formulas.Formula nnf () { org.logicng.formulas.Formula nnf = this . transformationCache . get ( org.logicng.formulas.cache.TransformationCacheEntry.NNF ) ; if ( nnf == null ) { if ( ( this . encoding ) == null ) this . encode () ; nnf = f . and ( this . encoding . formula ( this . f ) ) ; this . setTransformationCacheEntry ( org.logicng.formulas.cache.TransformationCacheEntry.NNF , nnf ) ; } return nnf ; } 
@ java.lang.Override public java.lang.String toString () { if ( ( this . size () ) == 1 ) { return this . get ( 0 ) . toString () ; } else { java.lang.String str = "(" ; str += this . get ( 0 ) ; for ( java.lang.Object obj : this . elems ) { str += ", " + ( obj . toString () ) ; } str += ")" ; return str ; } } 
public static int isValidBet ( java.lang.String bet , int maxBet ) { if ( bet . matches ( "([0-9])+" ) ) { int amount = java.lang.Integer . parseInt ( bet ) ; if ( ( amount <= maxBet ) && ( amount >= ( utilities.Validator.MIN_BET ) ) ) return amount ; } return - 1 ; } 
public void creationChaine ( java.util.ArrayList < application.model.Case > listeHotels , application.model.TypeChaine nomChaine ) { for ( application.model.Case hotelToChaine : listeHotels ) { getListeChaine () . get ( ( ( nomChaine . getNumero () ) - 2 ) ) . addCase ( getPlateau () . getCase ( hotelToChaine . getNom () ) ) ; getPlateau () . getCase ( hotelToChaine . getNom () ) . setEtat ( nomChaine . getNumero () ) ; } } 
public edu.ycp.cs.funwithsound.Strike p ( float beat , int velocity ) { edu.ycp.cs.funwithsound.Strike strike = new edu.ycp.cs.funwithsound.Strike () ; strike . setStartUs ( tempo . beatToUs ( beat ) ) ; strike . setDurationUs ( ( 1000000L / 200L ) ) ; strike . setVelocity ( velocity ) ; return strike ; } 
java.io.InputStream getStream ( java.lang.String name ) { final java.lang.String path = ( name . replace ( "." , "/" ) ) + ".class" ; for ( java.nio.file.Path basepath : classpath ) { try { java.nio.file.Path file = basepath . resolve ( path ) ; if ( java.nio.file.Files . exists ( file ) ) { return java.nio.file.Files . newInputStream ( file ) ; } } catch ( java.io.IOException e ) {} } return null ; } 
@ java.lang.Override protected void convertInput () { java.lang.String input = com.vaynberg.wicket.select2.Select2Choice . getWebRequest () . getRequestParameters () . getParameterValue ( com.vaynberg.wicket.select2.Select2Choice . getInputName () ) . toString () ; if ( org.apache.wicket.util.string.Strings . isEmpty ( input ) ) { com.vaynberg.wicket.select2.Select2Choice . setConvertedInput ( null ) ; } else { setConvertedInput ( com.vaynberg.wicket.select2.Select2Choice . getProvider () . toChoices ( java.util.Collections . singleton ( input ) ) . iterator () . next () ) ; } } 
private boolean isSpaceOpen ( int coordinates , int buttonWidth , android.view.View layout ) { boolean spaceOpen ; switch ( layout . getId () ) { case R.id.rel1 : spaceOpen = arrayOccupancyCheck ( coordinates , buttonWidth , drumPlacement1 ) ; break; case R.id.rel2 : spaceOpen = arrayOccupancyCheck ( coordinates , buttonWidth , drumPlacement2 ) ; break; default: android.util.Log . i ( com.example.android.musicmash.MainActivity.TAG , "isSpaceOpen method case default - parent view wasn't rel1 or rel2" ) ; spaceOpen = false ; break; } return spaceOpen ; } 
private void checkAnswer ( char answer ) { if ( ( countryPanel . getCurrentQuestion () . getAnswer () ) == answer ) { ( levelsRemaining ) -- ; alreadyBeen . add ( currentCountry ) ; if ( ( levelsRemaining ) > 0 ) showMapPanel () ; else javax.swing.JOptionPane . showMessageDialog ( null , "You Win" ) ; } else countryPanel . removeWrongAnswer ( answer ) ; } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { java.util.List < ? > data = purchasedTable . getSelectedData () ; if ( data != null ) { for ( java.lang.Object object : data ) { character . removePurchasedEquipment ( ( ( pcgen.facade.core.EquipmentFacade ) ( object ) ) , 1 ) ; } availableTable . refilter () ; } } 
@ android.support.annotation.Nullable private com.eje_c.meganekko.SceneObject parse ( final org.w3c.dom.Element element ) throws java.lang.ClassNotFoundException , java.lang.IllegalAccessException , java.lang.InstantiationException { final com.eje_c.meganekko.SceneObject object = createSceneObject ( element ) ; if ( object == null ) return null ; element . setUserData ( "sceneObject" , object , null ) ; final com.eje_c.meganekko.xml.XmlDocumentParser.ParserChain chain = new com.eje_c.meganekko.xml.XmlDocumentParser.ParserChain ( mContext , mAttributeParsers . iterator () , element , object ) ; chain . next () ; parseChildren ( element , object ) ; return object ; } 
public java.util.ArrayList < com.test.movies.db.entity.Review > parseReviews ( java.lang.String string ) throws org.json.JSONException { org.json.JSONObject object = new org.json.JSONObject ( string ) ; android.util.Log . d ( "reviews_json" , string ) ; if ( ! ( object . has ( "results" ) ) ) throw new org.json.JSONException ( "Malforrmed response received - no results present." ) ; return this . reviewsFromJson ( object . getJSONArray ( "results" ) ) ; } 
public void test_135_ACLMaybeAddAllFieldsForMaster ( edu.umass.cs.gnsclient.client.util.GuidEntry westyEntry ) { try { if ( ! ( edu.umass.cs.gnsclient.client.util.JSONUtils . JSONArrayToArrayList ( edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.client . aclGet ( AclAccessType.READ_WHITELIST , westyEntry , GNSProtocol.ENTIRE_RECORD . toString () , westyEntry . getGuid () ) ) . contains ( edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.masterGuid . getGuid () ) ) ) { edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.client . aclAdd ( AclAccessType.READ_WHITELIST , westyEntry , GNSProtocol.ENTIRE_RECORD . toString () , edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.masterGuid . getGuid () ) ; } } catch ( java.lang.Exception e ) { edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest . failWithStackTrace ( ( "Exception while checking for ALL_FIELDS in ACLMaybeAddAllFields: " + e ) ) ; } } 
public void applyGravity () { if ( ! ( playerCanMoveY ( 0 ) ) ) { player . enteredAir ( false ) ; } else { if ( playerCanMoveY ( GRAVITY ) ) { player . enteredAir ( true ) ; player . moveVertical ( GRAVITY ) ; } else { player . enteredAir ( false ) ; } } } 
private org.verapdf.pdfa.results.ValidationResult startValidation ( org.verapdf.pdfa.validation.ValidationProfile validationProfile , org.verapdf.model.ModelParser parser , org.verapdf.processor.config.Config config , org.verapdf.processor.ItemDetails fileDetails ) { if ( validationProfile == null ) { validationProfile = profileFromFlavour ( parser . getFlavour () ) ; } org.verapdf.pdfa.PDFAValidator validator = org.verapdf.pdfa.validators.Validators . createValidator ( validationProfile , org.verapdf.processor.ProcessorImpl . logPassed ( config ) , config . getMaxNumberOfFailedChecks () ) ; org.verapdf.pdfa.results.ValidationResult validationResult = validate ( validator , parser ) ; return validationResult ; } 
public void zoomToExactFit () { if ( ! ( this . isTranformInProgress () ) ) { prefuse.Visualization vis = this . getVisualization () ; java.awt.geom.Rectangle2D bounds = vis . getBounds ( Visualization.ALL_ITEMS ) ; prefuse.util.GraphicsLib . expand ( bounds , ( ( int ) ( 1 / ( this . getScale () ) ) ) ) ; prefuse.util.display.DisplayLib . fitViewToBounds ( this , bounds , 0 ) ; } } 
private int lastDuplicateIndex ( java.util.List < com.google.gson.JsonObject > orderedLogs ) { int lastDuplicateIndex = - 1 ; if ( ! ( orderFieldNames . isEmpty () ) ) { for ( int i = 0 ; i < ( orderedLogs . size () ) ; i ++ ) { if ( isDuplicateLog ( orderedLogs . get ( i ) ) ) { lastDuplicateIndex = i ; } else { break; } } } return lastDuplicateIndex ; } 
private void enableNfcPayment ( boolean enable ) { mNfcUtils . enableDispatch () ; if ( ! ( com.example.marco.nokket.utils.NFCUtils . isNfcAvailable ( getApplicationContext () ) ) ) { android.widget.Toast . makeText ( this , "NFC not available" , Toast.LENGTH_LONG ) . show () ; enableNfcFailed () ; } else if ( ! ( com.example.marco.nokket.utils.NFCUtils . isNfcEnabled ( getApplicationContext () ) ) ) { android.widget.Toast . makeText ( this , "NFC not enabled" , Toast.LENGTH_LONG ) . show () ; enableNfcFailed () ; } else { enableNfcSuccess () ; } } 
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { if ( ( ( dataSnapshot != null ) && ( dataSnapshot . hasChild ( user_id ) ) ) && ( ( ! ( dataSnapshot . child ( user_id ) . hasChild ( "name" ) ) ) || ( ! ( dataSnapshot . child ( user_id ) . hasChild ( "image" ) ) ) ) ) { android.content.Intent setupIntent = new android.content.Intent ( this , ru.solandme.simpleblog.SetupActivity . class ) ; setupIntent . setFlags ( Intent.FLAG_ACTIVITY_CLEAR_TOP ) ; startActivity ( setupIntent ) ; } } 
public static boolean isAutoOpenPdf () { if ( ( edu.clemson.lph.civet.prefs.CivetConfig.bAutoOpenPDF ) == null ) { java.lang.String sVal = edu.clemson.lph.civet.prefs.CivetConfig.props . getProperty ( "autoOpenPdf" ) ; if ( sVal == null ) edu.clemson.lph.civet.prefs.CivetConfig.bAutoOpenPDF = true ; else if ( ( sVal . equalsIgnoreCase ( "true" ) ) || ( sVal . equalsIgnoreCase ( "yes" ) ) ) { edu.clemson.lph.civet.prefs.CivetConfig.bAutoOpenPDF = true ; } else { edu.clemson.lph.civet.prefs.CivetConfig.bAutoOpenPDF = false ; } } return edu.clemson.lph.civet.prefs.CivetConfig.bAutoOpenPDF ; } 
private java.lang.String checkPrimaryKey () { if ( checkTokenIgnoreCase ( "primary" , false ) ) { checkTokenIgnoreCase ( "primary" , true ) ; if ( checkTokenIgnoreCase ( "key" , true ) ) { return "PRIMARY" ; } else { java.lang.System.out . println ( "KEY keyword expected after PRIMARY" ) ; return "ERROR" ; } } else { return "" ; } } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { switch ( item . getItemId () ) { case R.id.weather : android.content.Intent alertsIntent = new android.content.Intent ( this , com.example.android.weatherapp.activities.weather_activity.WeatherDetailsActivity . class ) ; alertsIntent . putExtra ( "location" , selectedLocation ) ; alertsIntent . putExtra ( "latlng" , latlng ) ; startActivity ( alertsIntent ) ; return true ; case R.id.search : android.content.Intent searchIntent = new android.content.Intent ( this , com.example.android.weatherapp.activities.mainactivity.MainActivity . class ) ; startActivity ( searchIntent ) ; default: return super . onOptionsItemSelected ( item ) ; } } 
@ java.lang.Override public void validate ( java.lang.Object target , org.springframework.validation.Errors errors ) { org.springframework.validation.ValidationUtils . rejectIfEmptyOrWhitespace ( errors , "name" , "field.required" ) ; org.springframework.validation.ValidationUtils . rejectIfEmptyOrWhitespace ( errors , "username" , "field.required" ) ; project.models.UserModel user = ( ( project.models.UserModel ) ( target ) ) ; if ( ( user . getPassword () ) != null ) { if ( ( user . getPassword () . length () ) < ( project.validators.UserValidator.MINIMUM_PASSWORD_LENGTH ) ) { errors . rejectValue ( "password" , "field.min.length" , new java.lang.Object [] { project.validators.UserValidator.MINIMUM_PASSWORD_LENGTH } , "" ) ; } } } 
@ java.lang.Override public boolean onItemLongClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { mDetailListView . setItemChecked ( position , true ) ; position = position - ( mDetailListView . getHeaderViewsCount () ) ; if ( position > ( mDetailAdapter . getCount () ) ) { return false ; } net.jejer.hipda.ui.ThreadDetailActionModeCallback cb = new net.jejer.hipda.ui.ThreadDetailActionModeCallback ( this , mFid , mTid , mDetailAdapter . getItem ( position ) ) ; ( ( android.support.v7.app.AppCompatActivity ) ( getActivity () ) ) . startSupportActionMode ( cb ) ; return true ; } 
private static void addToCache ( org.cobbzilla.wizard.client.ApiClientBase api , org.cobbzilla.wizard.model.Identifiable entity ) { java.util.Map < org.cobbzilla.wizard.model.Identifiable , org.cobbzilla.wizard.model.Identifiable > cache = org.cobbzilla.wizard.model.entityconfig.ModelSetup.entityCache . get ( api . hashCode () ) ; if ( cache == null ) { cache = new java.util.HashMap <> () ; org.cobbzilla.wizard.model.entityconfig.ModelSetup.entityCache . put ( api . hashCode () , cache ) ; } cache . put ( entity , entity ) ; } 
public void checkForWin () { if ( ( incorrectGuesses ) >= 7 ) stanGry = Interfaces.GameStates.LOSE ; if ( ( correctAnswers . size () ) == ( word . length () ) ) stanGry = Interfaces.GameStates.WIN ; else stanGry = Interfaces.GameStates.IN_PROGRESS ; notifyWisielecObservers () ; } 
protected void assertLoad ( java.lang.String testTaskManagerFilePath , savvytodo.model.task.ReadOnlyTask [] tasks ) { loadFromFilePath ( testTaskManagerFilePath ) ; savvytodo.testutil.TestUtil . printTasks ( taskListPanel . getListView () . getItems () . toArray ( new savvytodo.model.task.Task [ 0 ] ) ) ; org.junit.Assert . assertTrue ( taskListPanel . isListMatchingIgnoreOrder ( tasks ) ) ; assertResultMessage ( savvytodo.logic.commands.LoadCommand . getSuccessMessage ( testTaskManagerFilePath ) ) ; } 
protected java.lang.String generateCodeUsingNonNumberBlock ( com.ardublock.translator.block.TranslatorBlock translatorBlock ) throws com.ardublock.translator.block.exception.SocketNullException , com.ardublock.translator.block.exception.SubroutineNotDeclaredException { translator . addDefinitionCommand ( com.ardublock.translator.block.DigitalInputBlock.ARDUBLOCK_DIGITAL_READ_DEFINE ) ; java.lang.String ret = "__ardublockDigitalRead(" ; ret = ret + ( translatorBlock . toCode () ) ; ret = ret + ")" ; return ( ( codePrefix ) + ret ) + ( codeSuffix ) ; } 
public boolean will_buy ( redis.clients.jedis.Jedis REDIS ) { if ( REDIS . exists ( ( "stock:" + ( itemStack . getType () ) ) ) ) { int stock = java.lang.Integer . valueOf ( REDIS . get ( ( "stock:" + ( itemStack . getType () ) ) ) ) ; if ( stock > ( com.bitquest.bitquest.Trade.MAX_STOCK ) ) { return false ; } else { return true ; } } else { if ( ( this . has_stock ) == true ) { return true ; } else { return false ; } } } 
public void initStatesList ( org.newdawn.slick.GameContainer gc ) throws org.newdawn.slick.SlickException { this . addState ( new game.MainMenuState () ) ; this . addState ( new game.LevelState () ) ; this . addState ( new game.PauseMenuState () ) ; this . addState ( new game.SettingsMenuState () ) ; this . addState ( new game.VolumeMenuState () ) ; this . addState ( new game.ControlsMenuState () ) ; this . addState ( new game.ExampleMenuState () ) ; this . addState ( new game.LevelSelectMenuState () ) ; this . enterState ( 0 ) ; } 
public void applyTranslation ( org.nschmidt.ldparteditor.composites.Composite3D c3d ) { if ( modified ) { c3d . getLockableDatFileReference () . getVertexManager () . transformSelection ( accurateResult , org.nschmidt.ldparteditor.shells.editor3d.Editor3DWindow . getWindow () . isMovingAdjacentData () ) ; modified = false ; } accurateResult = org.nschmidt.ldparteditor.enums.View.ACCURATE_ID ; accurateScale = org.nschmidt.ldparteditor.enums.View.ACCURATE_ID ; org.lwjgl.util.vector.Matrix4f . setIdentity ( result ) ; org.lwjgl.util.vector.Matrix4f . setIdentity ( scale ) ; } 
@ ge.edu.freeuni.sdp.iot.router.POST @ ge.edu.freeuni.sdp.iot.router.Path ( value = "/connect" ) public javax.ws.rs.core.Response create ( @ ge.edu.freeuni.sdp.iot.router.PathParam ( value = "house_id" ) int houseId , ge.edu.freeuni.sdp.iot.router.MacObject macObject , @ ge.edu.freeuni.sdp.iot.router.HeaderParam ( value = "Origin" ) java.lang.String origin ) { ge.edu.freeuni.sdp.iot.router.Houses houses = ge.edu.freeuni.sdp.iot.router.Houses . getInstance () ; ge.edu.freeuni.sdp.iot.router.House house = getHouseById ( houses , houseId ) ; final java.lang.String uniqueId = java.util.UUID . randomUUID () . toString () ; macObject . setId ( uniqueId ) ; house . addMac ( macObject ) ; return addHeaders ( javax.ws.rs.core.Response . ok () . entity ( macObject . toString () ) , origin ) ; } 
private void doHyphenation ( model.VerbComponent verb ) { if ( ( checkPrefixEndingConsonant ( verb . getPrefix () ) ) && ( checkifRootBeginsVowel ( currentVerb . getRoot () ) ) ) { hasError = true ; currentStatus . setErrorType ( ErrorType.SPELLING ) ; currentStatus . appendLog ( "Hyphenation, " ) ; verb . setPrefix ( ( ( verb . getPrefix () ) + "-" ) ) ; } process.MorphedWordGenerator . generateMorphedWord ( rootWord , verb ) ; } 
static java.lang.String gravityToString ( @ com.jecelyin.editor.v2.widget.AnyDrawerLayout.EdgeGravity int gravity ) { if ( ( gravity & ( android.view.Gravity.LEFT ) ) == ( android.view.Gravity.LEFT ) ) { return "LEFT" ; } if ( ( gravity & ( android.view.Gravity.RIGHT ) ) == ( android.view.Gravity.RIGHT ) ) { return "RIGHT" ; } if ( ( gravity & ( android.view.Gravity.BOTTOM ) ) == ( android.view.Gravity.BOTTOM ) ) { return "BOTTOM" ; } return java.lang.Integer . toHexString ( gravity ) ; } 
public java.lang.String getXMLString ( avscience.ppc.avscience.ppc.AvScienceDataObject obj ) { if ( obj instanceof avscience.ppc.PitObs ) { avscience.ppc.PitObs pit = ( ( avscience.ppc.PitObs ) ( obj ) ) ; avscience.ppc.Sorter . sortPit ( pit ) ; } avscience.ppc.Element e = getElementFromObject ( obj ) ; avscience.ppc.Document doc = new avscience.ppc.Document ( e ) ; avscience.ppc.XMLOutputter outputter = new avscience.ppc.XMLOutputter ( avscience.ppc.Format . getPrettyFormat () ) ; try { return outputter . outputString ( doc ) ; } catch ( java.lang.Exception ex ) { java.lang.System.out . println ( ex . toString () ) ; } return null ; } 
public void flatten3 ( TreeNode root ) { TreeNode curr = root ; while ( curr != null ) { if ( ( curr.left ) != null ) { if ( ( curr.right ) != null ) { TreeNode next = curr.left ; while ( ( next.right ) != null ) { next = next.right ; } next.right = curr.right ; } curr.right = curr.left ; } curr.right = curr.left ; curr.left = null ; } } 
private void init ( android.content.Context context , android.util.AttributeSet attrs ) { header = new com.nsnv.mlib.RefreshHeader ( context ) ; com.nsnv.mlib.LayoutParams lp = new android.widget.LinearLayout.LayoutParams ( context , attrs ) ; lp.gravity = android.view.Gravity.CENTER ; HEIGHT_HEADER_FOOTER = context . getResources () . getDimensionPixelSize ( R.dimen.refresh_header_footer_size ) ; lp.topMargin = - ( HEIGHT_HEADER_FOOTER ) ; addView ( header , lp ) ; footer = new com.nsnv.mlib.RefreshFooter ( context ) ; mScroller = new android.widget.Scroller ( context ) ; } 
public void setSelectedValue ( Song song ) { int rows = model . getRowCount () ; for ( int i = 0 ; i < rows ; i ++ ) { Song thisSong = ( ( Song ) ( model . getValueAt ( i , 3 ) ) ) ; java.lang.System.out . println ( i ) ; if ( thisSong == song ) { infoTable . setRowSelectionInterval ( i , i ) ; return; } } } 
public boolean isThisQueryAProvince ( java.lang.String queryText ) { javax.persistence.TypedQuery < it.polimi.awt.domain.Province > tqp = em . createQuery ( "SELECT p FROM Province p WHERE name LIKE :name" , it.polimi.awt.domain.Province . class ) ; java.util.List < it.polimi.awt.domain.Province > list = tqp . setParameter ( "name" , ( ( "%" + queryText ) + "%" ) ) . getResultList () ; if ( ( list . size () ) > 0 ) { java.lang.System.out . println ( ( "DB Province = " + ( list . get ( 0 ) ) ) ) ; return true ; } return false ; } 
@ org.junit.Test public void TestUserSerdesTrip ( ) throws java.lang.Exception { java.lang.String json = io.intercom.api.TestSupport . load ( "user.json" ) ; final io.intercom.api.User user = io.intercom.api.UserTest.mapper . readValue ( json , io.intercom.api.User . class ) ; final java.lang.String json1 = io.intercom.api.UserTest.mapper . writeValueAsString ( user ) ; final io.intercom.api.User user1 = io.intercom.api.UserTest.mapper . readValue ( json1 , io.intercom.api.User . class ) ; org.junit.Assert . assertTrue ( user . equals ( user1 ) ) ; } 
@ org.junit.Test public void testDeclarationNode () { de.bmoth.parser.ast.nodes.DeclarationNode node = ( ( de.bmoth.parser.ast.nodes.IdentifierExprNode ) ( ( ( de.bmoth.parser.ast.nodes.PredicateOperatorWithExprArgsNode ) ( parseFormula ( "\n  x = 1" ) . getFormula () ) ) . getExpressionNodes () . get ( 0 ) ) ) . getDeclarationNode () ; org.junit.Assert . assertEquals ( 2 , node . getLine () ) ; org.junit.Assert . assertEquals ( 2 , node . getPos () ) ; } 
public java.lang.Boolean testInequality ( java.math.BigDecimal x , java.math.BigDecimal y ) { java.math.BigDecimal xProduct = deltaX . multiply ( x ) ; java.math.BigDecimal yProduct = deltaY . multiply ( y ) ; java.math.BigDecimal result = yProduct . subtract ( xProduct ) . subtract ( constant ) ; return ( isAboveLine ) == ( ( result . compareTo ( new java.math.BigDecimal ( 0 ) ) ) > 0 ) ; } 
public void nextWord () { mButton . setText ( getString ( R.string.show_definition ) ) ; if ( mData . moveToNext () ) { mDefinitionTextView . setText ( "" ) ; mTermTextView . setText ( mData . getString ( mData . getColumnIndex ( DroidTermsExampleContract.COLUMN_WORD ) ) ) ; } mCurrentState = STATE_HIDDEN ; } 
private static void post ( java.lang.String url , java.io.File file , com.chinamobile.iot.onenet.OneNetApiCallback callback ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/octet-stream" ) , file ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . post ( url , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( callback ) ) ; } 
private java.util.List < java.lang.String > validate ( org.eclipse.jgit.revwalk.RevWalk rw , org.eclipse.jgit.revwalk.RevCommit c , boolean verbose , com.google.gerrit.server.config.PluginConfig cfg ) throws java.lang.Exception { com.googlesource.gerrit.plugins.findowners.OwnersValidatorTest.MockedEmails myEmails = new com.googlesource.gerrit.plugins.findowners.OwnersValidatorTest.MockedEmails () ; com.googlesource.gerrit.plugins.findowners.OwnersValidator validator = new com.googlesource.gerrit.plugins.findowners.OwnersValidator ( null , null , null , myEmails ) ; java.lang.String ownersFileName = com.googlesource.gerrit.plugins.findowners.OwnersValidator . getOwnersFileName ( cfg ) ; java.util.List < com.google.gerrit.server.git.validators.CommitValidationMessage > m = validator . performValidation ( repo , c , rw , ownersFileName , verbose ) ; return com.googlesource.gerrit.plugins.findowners.OwnersValidatorTest . transformMessages ( m ) ; } 
public java.lang.StringBuilder ingredientsPrinter () { java.lang.StringBuilder ingredientsPrinted = new java.lang.StringBuilder () ; for ( int i = 0 ; i < ( ingredients . size () ) ; i ++ ) { ingredientsPrinted . append ( ingredients . get ( i ) ) ; if ( i != ( ( ingredients . size () ) - 1 ) ) { ingredientsPrinted . append ( ", " ) ; } } return ingredientsPrinted ; } 
@ java.lang.Override public java.lang.Object instantiateItem ( android.view.ViewGroup collection , int position ) { android.view.View view ; switch ( position ) { case 0 : view = new com.rockthevote.grommet.ui.eventFlow.EventDetailsEditable ( context ) ; break; case 1 : view = new com.rockthevote.grommet.ui.eventFlow.SessionTimeTracking ( context ) ; break; case 2 : view = new com.rockthevote.grommet.ui.eventFlow.SessionSummary ( context ) ; break; default: view = new com.rockthevote.grommet.ui.eventFlow.EventDetailsEditable ( context ) ; break; } collection . addView ( view ) ; pages . add ( ( ( com.rockthevote.grommet.ui.eventFlow.EventFlowPage ) ( view ) ) ) ; return view ; } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { javax.swing.JButton butt = new javax.swing.JButton ( "Prova" ) ; int color = util.window.ColorDialog . customize ( butt ) ; int oldcolor = java.lang.Integer . parseInt ( AnimeIndex.colorProp . getProperty ( "Button_color" ) ) ; if ( ( color != 0 ) && ( color != oldcolor ) ) { btnBottoni . setBackground ( new java.awt.Color ( color ) ) ; AnimeIndex.colorProp . setProperty ( "Button_color" , java.lang.Integer . toString ( color ) ) ; util.window.ColorDialog.changed = true ; } } 
@ org.junit.Before public void setup () { java.lang.String os = java.lang.System . getProperty ( "os.name" ) . toLowerCase () ; if ( os . contains ( "windows" ) ) { java.lang.System . setProperty ( "webdriver.chrome.driver" , "chromedriver.exe" ) ; } else { java.lang.System.out . println ( "ENTRA" ) ; java.lang.System . setProperty ( "webdriver.chrome.driver" , "chromedriver" ) ; } browser = new org.openqa.selenium.chrome.ChromeDriver () ; } 
@ java.lang.Override public void ChooseRoomFragmentInteraction ( java.lang.String roomID , java.lang.String roomName , java.lang.Boolean local ) { com.example.kiwitech.socialsketch.MainActivity . setIsLocal ( local ) ; if ( local ) { setLocalCanvas () ; com.example.kiwitech.socialsketch.MainActivity.thisRoomID = roomID ; com.example.kiwitech.socialsketch.MainActivity.thisRoomName = roomName ; } else { com.example.kiwitech.socialsketch.MainActivity.thisRoomID = roomID ; com.example.kiwitech.socialsketch.MainActivity.thisRoomName = roomName ; getRoomMembersFromDB () ; setRemoteCanvas () ; com.example.kiwitech.socialsketch.canvas.CanvasFragment canvasF = ( ( com.example.kiwitech.socialsketch.canvas.CanvasFragment ) ( getFragmentManager () . findFragmentById ( R.id.Canvas_Fragment ) ) ) ; canvasF . addNewSegmentListener () ; } } 
public void testNegateExactLong () { for ( long a : com.google.gwt.emultest.java.lang.MathTest.ALL_LONG_CANDIDATES ) { java.math.BigInteger expectedResult = java.math.BigInteger . valueOf ( a ) . negate () ; boolean expectedSuccess = com.google.gwt.emultest.java.lang.MathTest . fitsInLong ( expectedResult ) ; try { assertEquals ( ( - a ) , java.lang.Math . negateExact ( a ) ) ; assertTrue ( expectedSuccess ) ; } catch ( java.lang.ArithmeticException e ) { assertFalse ( expectedSuccess ) ; } } } 
private void DrawDataPointMarker ( float CenterX , float CenterY , android.graphics.Canvas canvas , android.graphics.Paint centerColor ) { android.graphics.Paint markerColor = new android.graphics.Paint () ; markerColor . setAntiAlias ( true ) ; markerColor . setStyle ( Paint.Style.FILL_AND_STROKE ) ; markerColor . setColor ( Color.BLACK ) ; canvas . drawCircle ( ( CenterX + 1.0F ) , ( CenterY + 1.0F ) , Dip ( 4 ) , markerColor ) ; canvas . drawCircle ( ( CenterX + 1.0F ) , ( CenterY + 1.0F ) , Dip ( 2 ) , centerColor ) ; } 
public boolean serializeTasks ( java.util.List < sg.edu.nus.eydis.models.Task > tasks ) { java.lang.String json = gson . toJson ( tasks ) ; try { java.io.FileWriter writer = new java.io.FileWriter ( _filePathAndName ) ; writer . write ( json ) ; writer . close () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return true ; } 
@ org.springframework.context.annotation.Bean public org.thymeleaf.spring4.SpringTemplateEngine templateEngine () { org.thymeleaf.spring4.SpringTemplateEngine engine = new org.thymeleaf.spring4.SpringTemplateEngine () ; engine . addTemplateModeHandler ( StandardTemplateModeHandlers.HTML5 ) ; engine . addTemplateModeHandler ( DandelionTemplateModeHandlers.DANDELION_JS ) ; engine . addTemplateResolver ( templateResolver () ) ; engine . addTemplateResolver ( dandelionAssetTemplateResolver () ) ; engine . addDialect ( new com.github.dandelion.thymeleaf.dialect.DandelionDialect () ) ; engine . addDialect ( new com.github.dandelion.datatables.thymeleaf.dialect.DataTablesDialect () ) ; return engine ; } 
public boolean isFull ( int i , int j ) { if ( ! ( isOpen ( i , j ) ) ) return false ; int currentSiteIndex = gridToArrayIndex ( i , j ) ; java.lang.System.out . println ( ( ( ( ( ( "Checking if site [" + i ) + "," ) + j ) + "] is full with index " ) + currentSiteIndex ) ) ; return wquf . connected ( 1 , currentSiteIndex ) ; } 
public void receiveCoordinator ( java.lang.String highestId , java.lang.String [] receivers ) { if ( ! ( receivers [ 0 ] . equals ( this . id ) ) ) { this . leader = nodeMap . get ( highestId ) ; for ( int i = 0 ; i < ( receivers.length ) ; i ++ ) { if ( ( receivers [ i ] ) != null ) { receivers [ i ] = this . id ; break; } } coordinator ( highestId , receivers ) ; } } 
public void sendTextMessage ( final java.lang.String content , final java.lang.String toChatUsername , final int callbackId , final int chatType , final java.lang.String extjson ) { com.hyphenate.chat.EMMessage message = com.hyphenate.chat.EMMessage . createTxtSendMessage ( content , toChatUsername ) ; setMessageType ( message , chatType ) ; setMessageStatusCallback ( message , callbackId ) ; if ( ( extjson != null ) && ( ! ( extjson . empty () ) ) ) message . setAttribute ( "extkey" , extjson ) ; com.hyphenate.chat.EMClient . getInstance () . chatManager () . sendMessage ( message ) ; } 
public void setCalculable ( de.bananaco.bpermissions.api.util.CalculableType type , java.lang.String c ) { if ( ( world ) == null ) { sender . sendMessage ( format ( "Please select a loaded world!" ) ) ; return; } calc = world . get ( c , type ) ; sender . sendMessage ( format ( ( ( calc . getName () ) + " selected." ) ) ) ; } 
protected java.lang.String getCurrentServerURL () { if ( serverURLs . isEmpty () ) { parseServerURLs () ; if ( serverURLs . isEmpty () ) throw new com.orientechnologies.orient.core.exception.OStorageException ( "Cannot create a connection to remote server because url list is empty" ) ; } return ( ( serverURLs . get ( 0 ) ) + "/" ) + ( getName () ) ; } 
private static java.util.List < org.sosy_lab.solver.api.BooleanFormula > checkedCast ( java.util.List < org.sosy_lab.solver.api.Formula > list ) { java.util.List < org.sosy_lab.solver.api.BooleanFormula > ret = new java.util.ArrayList ( list . size () ) ; for ( org.sosy_lab.solver.api.Formula f : list ) { if ( f instanceof org.sosy_lab.solver.api.BooleanFormula ) { ret . add ( ( ( org.sosy_lab.solver.api.BooleanFormula ) ( list ) ) ) ; } else { throw new java.lang.IllegalStateException ( "Non-boolean formula where only boolean formulas should occur" ) ; } } return ret ; } 
private void getFileByName ( io.grpc.reflection.v1alpha.ServerReflectionRequest request ) { java.lang.String name = request . getFileByFilename () ; com.google.protobuf.Descriptors.FileDescriptor fd = this . serverReflectionIndex . getFileDescriptorByName ( name ) ; if ( fd != null ) { serverCallStreamObserver . onNext ( createServerReflectionResponse ( request , fd ) ) ; } else { sendErrorResponse ( request , Status.NOT_FOUND , "File not found." ) ; } } 
@ java.lang.Override public void executeFirstOperation () { if ( isIdle () ) { switchToBusyState ( Operation.FIRST_OPERATION ) ; java.lang.Thread t = new java.lang.Thread ( new java.lang.Runnable () { @ java.lang.Override public void run () { try { java.lang.Thread . sleep ( 2000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } mFirstOperationOutcome = com.bolyartech.forge.android.app_unit.OperationOutcome . createSuccessOutcome ( 42 ) ; switchToEndedStateSuccess () ; } } ) ; t . start () ; } } 
private void playLoop () { if ( ( soundCount ) != null ) { soundCount . stop () ; } mediaPlayer . stop () ; try { mediaPlayer . prepare () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } mediaPlayer . seekTo ( ( ( int ) ( bmLoopStart . getSeekTime () ) ) ) ; mediaPlayer . start () ; } 
private void update () { gso = new com.google.android.gms.auth.api.signin.GoogleSignInOptions.Builder ( com.google.android.gms.auth.api.signin.GoogleSignInOptions.DEFAULT_SIGN_IN ) . requestEmail () . build () ; if ( ( exarabete.audioapp.AccountHandler.googleApiClient ) == null ) { exarabete.audioapp.AccountHandler.googleApiClient = new com.google.android.gms.common.api.GoogleApiClient.Builder ( activity ) . enableAutoManage ( activity , this ) . addApi ( Auth.GOOGLE_SIGN_IN_API , gso ) . build () ; exarabete.audioapp.AccountHandler.googleApiClient . connect () ; } } 
@ org.junit.Test ( expected = java.util.NoSuchElementException . class ) public void testToManyCalls () { java.lang.Integer [] integers = new java.lang.Integer [] { 1 , 2 , 3 } ; org.zetool.container.util.ArrayIterator < java.lang.Integer > ii = new org.zetool.container.util.ArrayIterator ( integers ) ; while ( ii . hasNext () ) {} ii . next () ; } 
public void imprisonPlayer ( java.lang.String playerName ) { if ( ! ( getPrison () . isOperational () ) ) { return; } playerName = playerName . toLowerCase () ; this . imprisonedPlayers . add ( playerName ) ; org.bukkit.entity.Player player = org.bukkit.Bukkit . getPlayerExact ( playerName ) ; if ( ( isActive ) && ( player != null ) ) { player . teleport ( this . location ) ; } this . setChanged ( "imprisonedPlayers" ) ; } 
public void setWeight ( int weight ) { waitTime = ( java.lang.System . currentTimeMillis () ) - ( waitTime ) ; ( this . rx_cnt ) ++ ; android.util.Log . e ( "scaler" , ( ( ( address ) + " wait=" ) + ( waitTime ) ) ) ; waitTime = java.lang.System . currentTimeMillis () ; if ( ( java.lang.Math . abs ( ( weight - ( this . weight ) ) ) ) < 1000 ) { this . weight = weight ; } } 
@ java.lang.Override public void onClick ( android.view.View view ) { if ( ( ro.quiz.QuizActivity.questionArray.length ) <= ( ro.quiz.QuizActivity.count ) ) { android.widget.Toast . makeText ( context , java.lang.String . format ( getString ( R.string.final_message ) , ro.quiz.QuizActivity.scorCorect ) , Toast.LENGTH_SHORT ) . show () ; return; } switch ( view . getId () ) { case R.id.button_quiz_A : checkAnswer ( "a" ) ; break; case R.id.button_quiz_B : checkAnswer ( "b" ) ; break; case R.id.button_quiz_C : checkAnswer ( "c" ) ; break; } } 
private void expandIfNeeded ( int len ) { java.nio.ByteBuffer buffer = bufferContainer . getBuffer () ; int need = len - ( buffer . remaining () ) ; if ( need <= 0 ) return; wasExpanded = true ; int newCapacity = ( ( buffer . capacity () ) + need ) * 2 ; bufferContainer . growBuffer ( newCapacity ) ; } 
@ javafx.fxml.FXML public void loadDataFromDB () { java.util.List < backend.model.PDF > dbData = new java.util.ArrayList < backend.model.PDF > () ; dbData = backend.repository.DAOFactory . getInstance () . getPDFDAO () . getAllPDFs () ; common.PDFContainer.lds = new backend.weka.LearningDataSet () ; PDFContainer.lds . addAllPDF ( new backend.model.PDF [ dbData . size () ] ) ; PDFContainer.lds . write () ; isDataSetLoaded = true ; } 
@ java.lang.Override public void projectOpened () { if ( isAdaptiveProject () ) { java.io.File indexHtml = new java.io.File ( myProject . getBasePath () , me.adaptive.ide.plugins.nibble.NibbleComponent.DEFAULT_INDEX_PATH ) ; if ( ( indexHtml . exists () ) && ( ! ( isRunning () ) ) ) { runOnNibble ( myProject . getBaseDir () . findFileByRelativePath ( me.adaptive.ide.plugins.nibble.NibbleComponent.DEFAULT_INDEX_PATH ) ) ; } } } 
private BinarySearchTree < K > . BstNode < K > getMinimum ( BinarySearchTree < K > . BstNode < K > node ) { BinarySearchTree < K > . BstNode < K > min = root ; while ( min != null ) { min = min.leftChild ; } return min ; } 
@ java.lang.Override public void onProgressChanged ( android.widget.SeekBar seekBar , int i , boolean b ) { android.content.SharedPreferences prefs = android.preference.PreferenceManager . getDefaultSharedPreferences ( this ) ; textSize = i + 16 ; prefs . edit () . remove ( getString ( R.string.pref_lesson_text_size ) ) . apply () ; prefs . edit () . putInt ( getString ( R.string.pref_lesson_text_size ) , textSize ) . apply () ; changeFontSize () ; } 
private com.google.gson.JsonArray constructColumnHeaders ( java.lang.Iterable < uk.ac.ebi.atlas.model.differential.Contrast > contrasts , uk.ac.ebi.atlas.model.differential.DifferentialExperiment differentialExperiment ) { com.google.gson.JsonArray result = new com.google.gson.JsonArray () ; for ( uk.ac.ebi.atlas.model.differential.Contrast contrast : contrasts ) { com.google.gson.JsonObject o = contrast . toJson () ; o . add ( "contrastSummary" , new uk.ac.ebi.atlas.experimentpage.tooltip.ContrastSummaryBuilder () . forContrast ( contrast ) . withExperimentDesign ( differentialExperiment . getExperimentDesign () ) . withExperimentDescription ( differentialExperiment . getDescription () ) . build () . toJson () ) ; } return result ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/{id}/create" ) public fr.istic.iodeman.model.Unavailability createUnavailability ( @ org.springframework.web.bind.annotation.PathVariable ( value = "id" ) java.lang.Integer id , @ org.springframework.web.bind.annotation.RequestParam ( value = "person" ) java.lang.String uidperson , @ org.springframework.web.bind.annotation.RequestParam ( value = "periodStart" ) java.lang.Integer periodStart , @ org.springframework.web.bind.annotation.RequestParam ( value = "periodEnd" ) java.lang.Integer periodEnd ) { fr.istic.iodeman.model.TimeBox period = new fr.istic.iodeman.model.TimeBox ( new org.joda.time.DateTime ( periodStart ) . toDate () , new org.joda.time.DateTime ( periodEnd ) . toDate () ) ; fr.istic.iodeman.model.Unavailability unavailability = unavailabilityService . create ( id , uidperson , period ) ; return unavailability ; } 
private synchronized org.apache.bookkeeper.bookie.BookieStatus readFromFile ( java.io.File file ) throws java.io.IOException , java.lang.IllegalArgumentException { if ( ! ( file . exists () ) ) { return null ; } java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( new java.io.FileInputStream ( file ) , com.google.common.base.Charsets.UTF_8 ) ) ; try { return parse ( reader ) ; } finally { reader . close () ; } } 
public void addItemAtPosition ( int position , java.lang.String item ) { myDataset . add ( position , item ) ; mAdapter . notifyItemInserted ( position ) ; com.vsgh.pronounceit.persistence.Sounds sounds = new com.vsgh.pronounceit.persistence.Sounds ( item , false ) ; sounds . save () ; com.vsgh.pronounceit.apihelpers.forvo.ForvoApi . downloadMp3Url ( this , sounds . getName () ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { isYinpinPlaying = ! ( isYinpinPlaying ) ; isJiangjiePlaying = false ; ivJiangjie . setBackgroundResource ( R.mipmap.ic_play_blue ) ; if ( isYinpinPlaying ) { ivYinpin . setBackgroundResource ( R.mipmap.ic_pause_blue ) ; try { audioBinder . audioPlay ( data.leftUri ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } else { ivYinpin . setBackgroundResource ( R.mipmap.ic_play_blue ) ; audioBinder . audioPause () ; } } 
@ java.lang.Override public void keyPressed ( java.awt.event.KeyEvent e ) { java.lang.System.out . println ( "KeyEvent" ) ; input = e . getKeyCode () ; if ( ! ( edu.rcos.pkmnrpi.main.util.KeyMapper.map . containsB ( input ) ) ) { java.lang.System.out . println ( ( ( "Skipping un known input'" + ( input ) ) + "'" ) ) ; return; } inmotion = true ; listen () ; } 
@ org.junit.Test public void testGetFolders ( ) throws eionet.meta.service.ServiceException { java.util.List < eionet.meta.dao.domain.Folder > result = vocabularyService . getFolders ( "testUser" , 1 ) ; org.junit.Assert . assertEquals ( "Folders size" , 6 , result . size () ) ; eionet.meta.dao.domain.Folder folderCommon = null ; for ( eionet.meta.dao.domain.Folder folder : result ) { if ( "common" . equals ( folder . getIdentifier () ) ) { folderCommon = folder ; } } org.junit.Assert . assertEquals ( "Items size" , 3 , folderCommon . getItems () . size () ) ; } 
public void close () { if ( ! ( org.bukkit.Bukkit . getOnlinePlayers () . isEmpty () ) ) { for ( org.bukkit.entity.Player all : org.bukkit.Bukkit . getOnlinePlayers () ) { org.bukkit.inventory.Inventory top = all . getOpenInventory () . getTopInventory () ; if ( ( top != null ) && ( isShop ( top . getTitle () ) ) ) { all . closeInventory () ; all . sendMessage ( ( ( org.bukkit.ChatColor.RED ) + "[TM] All shops are automatically closed on reload." ) ) ; } } } } 
@ java.lang.Override public org.overture.codegen.cgast.STypeCG defaultINode ( org.overture.ast.node.INode node , org.overture.codegen.ir.IRInfo question ) throws org.overture.ast.analysis.AnalysisException { if ( node instanceof org.overture.ast.types.PType ) { if ( typeStack . contains ( node ) ) { return new org.overture.codegen.cgast.types.AObjectTypeCG () ; } typeStack . push ( ( ( org.overture.ast.types.PType ) ( node ) ) ) ; org.overture.codegen.cgast.STypeCG result = super . defaultINode ( node , question ) ; typeStack . pop () ; return result ; } return super . defaultINode ( node , question ) ; } 
@ java.lang.Override public java.util.Collection < org.openhab.binding.zwave.internal.protocol.SerialMessage > getDynamicValues ( boolean refresh ) { java.util.ArrayList < org.openhab.binding.zwave.internal.protocol.SerialMessage > result = new java.util.ArrayList < org.openhab.binding.zwave.internal.protocol.SerialMessage > () ; for ( java.util.Map.Entry < org.openhab.binding.zwave.internal.protocol.commandclass.ZWaveAlarmCommandClass.AlarmType , org.openhab.binding.zwave.internal.protocol.commandclass.ZWaveAlarmCommandClass.Alarm > entry : alarms . entrySet () ) { if ( ( refresh == true ) || ( ( entry . getValue () . getInitialised () ) == false ) ) { result . add ( getMessage ( entry . getValue () . getAlarmType () ) ) ; } } return result ; } 
private static java.lang.String get_ccs ( org.neo4j.graphdb.GraphDatabaseService db , java.lang.String code , java.lang.String domain ) { org.neo4j.graphdb.Label label = org.eihg.phevor.plugins.AddParents.domain_label . get ( domain ) ; code = code . trim () ; code = java.lang.String . join ( "" , code . split ( "." ) ) ; return org.eihg.phevor.plugins.AddParents . find_ccs ( db , code , label ) ; } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { rebus . pickSolutionWord () ; if ( Config.LANGUAGE . equals ( "En" ) ) { solutionWordTextFieldAdmin . setText ( Config.solutionBigWord . getEnglish () ) ; } else { solutionWordTextFieldAdmin . setText ( Config.solutionBigWord . getTelugu () ) ; } solutionWordButtonAdmin . doClick () ; } 
@ java.lang.Override public void execute () { this . player . bombTimer = Bomb.TIMER_MAX ; this . player . bombRange = Bomb.RANGE_MIN ; final at.mgm.bbm.core.events.Player player = this . player ; java.lang.Runnable runnable = new java.lang.Runnable () { @ java.lang.Override public void run () { try { java.lang.Thread . sleep ( PowerDown.DEFAULT_DURATION ) ; player.bombTimer = Bomb.TIMER_DEFAULT ; player.bombRange = Bomb.RANGE_DEFAULT ; } catch ( final java.lang.InterruptedException e ) { e . printStackTrace () ; player.bombTimer = Bomb.TIMER_DEFAULT ; player.bombRange = Bomb.RANGE_DEFAULT ; } } } ; runnable . run () ; ObjectMap.INSTANCE . removeObject ( this . powerDown ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/editArticle" ) public java.lang.String editArticle ( org.springframework.ui.Model model , com.suyang.model.Article article ) { if ( ( article != null ) && ( org.springframework.util.StringUtils . isEmpty ( article . getId () ) ) ) { article = articleService . getArticleById ( article . getId () ) ; model . addAttribute ( "article" , article ) ; } return "/page/article/editArticle" ; } 
@ org.junit.Test @ org.springframework.transaction.annotation.Transactional @ org.springframework.test.annotation.Rollback ( value = true ) public void testGetRoles ( ) throws ca.uhnresearch.pughlab.tracker.dao.RepositoryException { ca.uhnresearch.pughlab.tracker.dao.CaseQuery query = new ca.uhnresearch.pughlab.tracker.dao.CaseQuery () ; query . setOffset ( 0 ) ; query . setLimit ( 10 ) ; ca.uhnresearch.pughlab.tracker.dto.Study study = org.easymock.EasyMock . createMock ( ca.uhnresearch.pughlab.tracker.dto.Study . class ) ; org.easymock.EasyMock . expect ( study . getId () ) . andStubReturn ( 2 ) ; org.easymock.EasyMock . replay ( study ) ; java.util.List < ca.uhnresearch.pughlab.tracker.dto.Role > list = authorizationRepository . getStudyRoles ( study , query ) ; junit.framework.Assert . assertNotNull ( list ) ; junit.framework.Assert . assertEquals ( 3 , list . size () ) ; } 
public int compareTo ( schedule.CourseMoment moment2 ) { if ( this . getStartTime () . before ( moment2 . getDate () ) ) { return - 1 ; } if ( this . getStartTime () . after ( moment2 . getDate () ) ) { return 1 ; } return 0 ; } 
@ java.lang.Override public android.support.v4.content.Loader < android.database.Cursor > onCreateLoader ( int id , android.os.Bundle args ) { java.lang.String locationSetting = com.jongor_software.android.sunshine.Utility . getPreferredLocation ( getActivity () ) ; java.lang.String sortOrder = ( WeatherContract.WeatherEntry.COLUMN_DATE ) + " ASC" ; android.net.Uri weatherForLocationUri = WeatherContract.WeatherEntry . buildWeatherLocationWithStartDate ( locationSetting , java.lang.System . currentTimeMillis () ) ; return new android.support.v4.content.CursorLoader ( getActivity () , weatherForLocationUri , com.jongor_software.android.sunshine.ForecastFragment.FORECAST_COLUMNS , null , null , sortOrder ) ; } 
void backspace () { ru.tesei7.textEditor.editor.document.model.Line currentLine = document . getCurrentLine () ; if ( ( currentLine . getOffset () ) == 0 ) { concatLines ( currentLine . getPrevious () , currentLine , true ) ; } else { currentLine . backspace () ; caretObservable . notifyListeners ( new ru.tesei7.textEditor.editor.caret.SyntaxCaretEvent ( ru.tesei7.textEditor.editor.caret.SyntaxCaretEventType.MOVED_LEFT ) ) ; dimensionsObservable . notifyListeners ( new ru.tesei7.textEditor.editor.scroll.bar.DimensionsEvent ( ru.tesei7.textEditor.editor.scroll.bar.DimensionType.ONLY_X ) ) ; } } 
private void calculateQueueBoard () { ida.ipl.Board b = getBoardAfterWait () ; if ( programFinished ( data . programFinished () ) ) return; int solution = calculateBoardSolution ( b ) ; if ( solution > 0 ) data . getSolutions () . addAndGet ( solution ) ; } 
@ java.lang.Override public V replace ( K key , V value ) { V oldValue = kvStore . replace ( key , value ) ; if ( oldValue != null ) { subscriptions . notifyEvent ( net.openhft.chronicle.engine.map.UpdatedEvent . of ( asset . fullName () , key , oldValue , value , false , value . equals ( oldValue ) ) ) ; } return oldValue ; } 
java.io.File getSelectedPropertyFile ( ) throws java.io.FileNotFoundException { javax.swing.JFileChooser fileOpen = new javax.swing.JFileChooser () ; javax.swing.filechooser.FileNameExtensionFilter filter = new javax.swing.filechooser.FileNameExtensionFilter ( "*.properties" , "properties" ) ; fileOpen . setAcceptAllFileFilterUsed ( false ) ; fileOpen . setFileFilter ( filter ) ; fileOpen . setDialogTitle ( Log.OPEN_PROPERTY_FILE ) ; int result = fileOpen . showOpenDialog ( this ) ; if ( result == ( javax.swing.JFileChooser.CANCEL_OPTION ) ) throw new java.io.FileNotFoundException () ; return fileOpen . getSelectedFile () ; } 
public void populateArrayItems ( android.database.Cursor data ) { if ( ( data . getCount () ) == 0 ) { android.widget.Toast . makeText ( this , "Todo list is empty!" , Toast.LENGTH_SHORT ) . show () ; } adapterTodoTasks . clear () ; while ( data . moveToNext () ) { com.example.mourad.todo.TodoTask task = new com.example.mourad.todo.TodoTask ( data . getString ( 1 ) , data . getInt ( 6 ) , data . getString ( 5 ) , data . getInt ( 2 ) ) ; adapterTodoTasks . add ( task ) ; } } 
private void removeAllFragments ( android.support.v4.app.FragmentManager fragmentManager ) { android.support.v4.app.FragmentTransaction transaction = fragmentManager . beginTransaction () ; java.util.List < android.support.v4.app.Fragment > fragments = fragmentManager . getFragments () ; if ( org.apache.commons.collections4.CollectionUtils . isNotEmpty ( fragments ) ) { for ( android.support.v4.app.Fragment fragment : fragments ) { android.util.Log . i ( com.adguard.android.contentblocker.onboarding.OnboardingActivity.TAG , ( "Removing fragment " + ( fragment . toString () ) ) ) ; transaction . remove ( fragment ) ; } } transaction . commit () ; } 
private static fr.cls.atoll.motu.web.dal.tds.ncss.model.Property initProperty ( fr.cls.atoll.motu.web.dal.tds.ncss.model.Property tdsProperty ) throws fr.cls.atoll.motu.web.bll.exception.MotuException { fr.cls.atoll.motu.web.dal.tds.ncss.model.Property property = fr.cls.atoll.motu.web.usl.response.xml.converter.ProductMetadataInfoConverter . createProperty () ; if ( tdsProperty == null ) { return property ; } property . setName ( tdsProperty . getName () ) ; property . setValue ( tdsProperty . getValue () ) ; property . setCode ( java.lang.String . valueOf ( ErrorType.OK ) ) ; property . setMsg ( ErrorType.OK . toString () ) ; return property ; } 
public void stop ( ) throws com.bea.wli.sb.transports.TransportException { if ( isInbound () ) { for ( oracle.ateam.sb.transports.kafka.KafkaEndpoint.InternalConsumer consumer : internalConsumers ) { consumer . shutdown () ; } internalConsumers . clear () ; } else { if ( ( producer ) != null ) { producer . close () ; } } } 
private void saveRootTree () { igrek.todotree.services.filesystem.PathBuilder dbFilePath = filesystem . pathSD () . append ( preferences.dbFilePath ) ; try { java.lang.String output = treeSerializer . serializeTree ( treeManager . getRootItem () ) ; igrek.todotree.logger.Logs . debug ( ( "Serialized data: " + output ) ) ; filesystem . saveFile ( dbFilePath . toString () , output ) ; } catch ( java.io.IOException e ) { igrek.todotree.logger.Logs . error ( e ) ; } igrek.todotree.logger.Logs . debug ( "Database saved successfully." ) ; } 
@ java.lang.Override public boolean equals ( java.lang.Object o ) { if ( ( this ) == o ) return true ; if ( ( o == null ) || ( ( getClass () ) != ( o . getClass () ) ) ) return false ; be.wegenenverkeer.atomium.japi.format.Content content = ( ( be.wegenenverkeer.atomium.japi.format.Content ) ( o ) ) ; return ( java.util.Objects . equals ( type , content.type ) ) && ( java.util.Objects . equals ( value , content.value ) ) ; } 
@ java.lang.Override protected void processEntity ( com.badlogic.ashley.core.Entity entity , float deltaTime ) { final com.steftmax.temol.component.TransformComponent tc = tm . get ( entity ) ; tc.rotation += 0.003F ; final com.steftmax.temol.component.WeldComponent wc = wm . get ( entity ) ; calculateAffine2 ( tc.transform , tc.position , tc.origin , tc.scale , tc.rotation ) ; if ( wc != null ) calculateAffine2 ( wc.transform , wc.position , wc.origin , wc.scale , wc.rotation ) ; } 
@ java.lang.Override public void configure ( rea.toyrobot.executor.GlobalInitiator instance ) throws rea.toyrobot.exceptions.RobotInitialisationException { instance . setWorld ( world ) ; globalActionsInitialiser = new rea.toyrobot.config.initialisers.mapper.global.GlobalActionsInitialiser ( world ) ; for ( rea.toyrobot.config.mapper.jabx.ToyRobot.ReaGlobalInitiator.Action action : config . getReaGlobalInitiator () . getAction () ) { rea.toyrobot.actions.physicalobjects.GlobalAction globalAction = globalActionsInitialiser . map ( ( ( java.lang.String ) ( action . getClazz () ) ) ) ; globalAction . setWorld ( world ) ; instance . addAction ( globalAction ) ; } } 
@ butterknife.OnClick ( value = R.id.btnUseLastPhonecall ) public void btnUseLastPhonecallClicked () { _tracker . send ( new com.google.android.gms.analytics.HitBuilders.EventBuilder () . setCategory ( "Action" ) . setAction ( "Use_Last_Phone_Number" ) . build () ) ; com.greenpixels.seanecio.telephony.PhoneNumberLocalPersistence persistence = new com.greenpixels.seanecio.telephony.PhoneNumberLocalPersistence () ; this . _editTextPhoneNumber . setText ( persistence . getLastPhoneNumber ( this ) ) ; } 
private static void editStockPref ( android.content.Context context , java.lang.String symbol , java.lang.Boolean add ) { java.lang.String key = context . getString ( R.string.pref_stocks_key ) ; java.util.Set < java.lang.String > stocks = com.udacity.stockhawk.data.PrefUtils . getStocks ( context ) ; if ( add ) { stocks . add ( symbol ) ; } else { stocks . remove ( symbol ) ; } android.content.SharedPreferences prefs = android.preference.PreferenceManager . getDefaultSharedPreferences ( context ) ; android.content.SharedPreferences.Editor editor = prefs . edit () ; editor . putStringSet ( key , stocks ) ; editor . apply () ; } 
private void redoHistory () { if ( ( mUndoneHistory . size () ) > 0 ) { com.sleepyduck.pixelate4crafting.control.util.history.History hist = mUndoneHistory . pop () ; mHistory . add ( hist ) ; hist . redo ( mDoHistory ) ; } if ( ( mHistory . size () ) == 1 ) { mOptionMenu . findItem ( R.id.menu_item_undo ) . setVisible ( true ) ; } if ( ( mUndoneHistory . size () ) == 0 ) { mOptionMenu . findItem ( R.id.menu_item_redo ) . setVisible ( false ) ; } } 
public static java.lang.String sqlID ( codeu.chat.util.Uuid userID ) { java.lang.String sqlID = "NULL" ; if ( userID != null ) { sqlID = userID . toString () ; sqlID = sqlID . replace ( "[UUID:" , "" ) ; sqlID = sqlID . replace ( "]" , "" ) ; sqlID = ( "'" + sqlID ) + "'" ; } return sqlID ; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) public static com.raizlabs.android.dbflow.structure.InstanceAdapter getInstanceAdapter ( java.lang.Class < ? > modelClass ) { com.raizlabs.android.dbflow.structure.InstanceAdapter internalAdapter = com.raizlabs.android.dbflow.config.FlowManager . getModelAdapter ( modelClass ) ; if ( internalAdapter == null ) { if ( com.raizlabs.android.dbflow.structure.BaseModelView . class . isAssignableFrom ( modelClass ) ) { internalAdapter = com.raizlabs.android.dbflow.config.FlowManager . getModelViewAdapter ( modelClass ) ; } else if ( com.raizlabs.android.dbflow.structure.BaseQueryModel . class . isAssignableFrom ( modelClass ) ) { internalAdapter = com.raizlabs.android.dbflow.config.FlowManager . getQueryModelAdapter ( modelClass ) ; } } return internalAdapter ; } 
static void e ( java.lang.String message ) { if ( ( ( ! ( com.basilgregory.onam.android.L.error ) ) && ( message != null ) ) && ( ! ( message . isEmpty () ) ) ) return; android.util.Log . d ( "ONAM/error" , ( "" + message ) ) ; } 
@ java.lang.Override public void dispose () { for ( com.mbrlabs.mundus.tools.brushes.TerrainBrush brush : terrainBrushes ) { brush . dispose () ; } translateTool . dispose () ; modelPlacementTool . dispose () ; selectionTool . dispose () ; translateTool . dispose () ; rotateTool . dispose () ; scaleTool . dispose () ; } 
public java.io.File [] filterHiddenFiles ( java.io.File [] files ) { java.util.List < java.io.File > ret = new java.util.ArrayList <> () ; if ( ( files.length ) > 0 ) { for ( java.io.File file : files ) { if ( ! ( file . isHidden () ) ) { if ( ! ( ret . contains ( file ) ) ) { ret . add ( file ) ; } } } } return ret . toArray ( new java.io.File [ ret . size () ] ) ; } 
private void sendTimerInfo ( java.lang.String action ) { android.util.Log . i ( "TimerService" , "sendTimerInfo called" ) ; timeInMillis = ( android.os.SystemClock . uptimeMillis () ) - ( initialTime ) ; android.content.Intent intent = new android.content.Intent ( action ) ; int timer = ( initialTimeSpent ) + ( ( int ) ( timeInMillis ) ) ; intent . putExtra ( com.sofi.knittimer.TimerService.EXTRA_KEY_ID , projectId ) ; intent . putExtra ( com.sofi.knittimer.TimerService.EXTRA_KEY_TIME_LEFT , timer ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( getApplicationContext () ) . sendBroadcast ( intent ) ; } 
@ org.junit.Before public void setUp ( ) throws java.lang.Exception { java.util.HashMap < model.Reviewer , java.lang.String > reviews = new java.util.HashMap < model.Reviewer , java.lang.String > () ; java.util.ArrayList < java.util.UUID > authors = new java.util.ArrayList < java.util.UUID > () ; java.lang.String title = "Aerodynamics of a Hamburger" ; java.util.Date date = new java.util.Date () ; myPaper = new model.Manuscript ( title , date , reviews , authors , new java.io.File ( "" ) ) ; } 
private java.lang.String getTarget ( java.lang.String type , java.lang.String name ) { java.util.List < java.lang.String [] > targets = cmdline . getTargets ( type ) ; for ( java.lang.String [] target : targets ) { if ( ( name . equals ( target [ 1 ] ) ) && ( ( ! ( "npc" . equals ( type ) ) ) || ( ! ( target [ 0 ] . startsWith ( "bad_target_" ) ) ) ) ) { return target [ 0 ] ; } } return null ; } 
@ java.lang.Override public void setConf ( org.apache.hadoop.conf.Configuration conf ) { org.apache.hadoop.hive.metastore.NewObjectStore.initialized = false ; hiveConf = conf ; java.util.Properties propsFromConf = org.apache.hadoop.hive.metastore.NewObjectStore . getDataSourceProps ( conf ) ; boolean propsChanged = ! ( propsFromConf . equals ( org.apache.hadoop.hive.metastore.NewObjectStore.prop ) ) ; if ( propsChanged ) { org.apache.hadoop.hive.metastore.NewObjectStore.pmf = null ; org.apache.hadoop.hive.metastore.NewObjectStore.prop = null ; } initial ( propsFromConf ) ; ( org.apache.hadoop.hive.metastore.NewObjectStore.count ) ++ ; } 
@ java.lang.Override public void onMapReady ( com.google.android.gms.maps.GoogleMap googleMap ) { mMap = googleMap ; for ( com.teamcow.wheresmystuff.model.LostItem lostItem : lostList ) { com.google.android.gms.maps.model.LatLng current = new com.google.android.gms.maps.model.LatLng ( lostItem . getX_Coord () , lostItem . getY_Coord () ) ; mMap . addMarker ( new com.google.android.gms.maps.model.MarkerOptions () . position ( current ) . title ( lostItem . getName () ) . snippet ( lostItem . getDescription () ) ) ; mMap . moveCamera ( com.google.android.gms.maps.CameraUpdateFactory . newLatLng ( current ) ) ; } } 
public void startScanning ( long scanningTimeout ) { if ( scanningTimeout == 0 ) { scanningTimeout = org.esec.mcg.bleinsight.wrapper.BLEWrapper.SCANNING_TIMEOUT ; } java.lang.Runnable timeout = new java.lang.Runnable () { @ java.lang.Override public void run () { stopScanning () ; mScanDeviceUiCallbacks . uiStopScanning () ; } } ; mHandler . postDelayed ( timeout , scanningTimeout ) ; mBluetoothLeScanner . startScan ( mScanCallback ) ; } 
@ org.junit.Test public void getTeams ( ) throws org.htmlcleaner.XPatherException { java.util.List < org.amupoti.supermanager.parser.acb.beans.ACBSupermanagerTeam > teams = acbTeamsService . getTeamsByCredentials ( org.amupoti.supermanager.parser.acb.ACBTeamServiceTest.USER , org.amupoti.supermanager.parser.acb.ACBTeamServiceTest.PASSWORD ) ; org.junit.Assert . assertEquals ( 2 , teams . size () ) ; org.junit.Assert . assertEquals ( "El Equipo 1" , teams . get ( 0 ) . getName () ) ; org.junit.Assert . assertEquals ( "El Equipo 2" , teams . get ( 0 ) . getName () ) ; } 
public static void showOldValue ( android.content.SharedPreferences exercise_a ) { java.lang.String sq1 = exercise_a . getString ( "squats1" , "" ) ; java.lang.String sq2 = exercise_a . getString ( "squats2" , "" ) ; java.lang.String sq3 = exercise_a . getString ( "squats3" , "" ) ; java.lang.String sq4 = exercise_a . getString ( "squats4" , "" ) ; java.lang.String sq5 = exercise_a . getString ( "squats5" , "" ) ; java.lang.String crw1 = exercise_a . getString ( "CalfRaiseWeight1" , "" ) ; gymprogram_a.tvTest . setText ( ( crw1 + ( gymprogram_a.sDateTime ) ) ) ; } 
@ org.junit.Ignore @ org.junit.Test public void testFetchAllActiveFlows ( ) throws azkaban.executor.ExecutorManagerException , java.io.IOException { testSetUpForRunningFlows () ; java.util.List < azkaban.executor.ExecutableFlow > flows = manager . getRunningFlows () ; for ( azkaban.utils.Pair < azkaban.executor.ExecutionReference , azkaban.executor.ExecutableFlow > pair : activeFlows . values () ) { org.junit.Assert . assertTrue ( flows . contains ( pair . getSecond () ) ) ; } } 
private static boolean isSorted ( java.lang.Comparable [] a , int lo , int hi ) { for ( int i = lo + 1 ; i <= hi ; i ++ ) if ( edu.princeton.cs.algs4.Insertion . less ( a [ i ] , a [ ( i - 1 ) ] ) ) return false ; return true ; } 
@ org.springframework.web.bind.annotation.GetMapping ( value = "/listSocieta/{id}" ) public java.lang.String mostraSocieta ( @ org.springframework.web.bind.annotation.PathVariable ( value = "id" ) java.lang.Long id , org.springframework.ui.Model model ) { it.uniroma3.triathlon.model.Societa societa = societaService . findOne ( id ) ; model . addAttribute ( "societas" , societa ) ; model . addAttribute ( "elencoSocieta" , societaService . groupedByRegione ( societaService . findAll () ) ) ; model . addAttribute ( "societaPanel" , true ) ; return "societa" ; } 
public void startTriggers ( boolean newInstance ) { if ( ( ( owner ) == null ) && ( org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty.LOGGER . isLoggable ( java.util.logging.Level.FINE ) ) ) { org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty.LOGGER . log ( java.util.logging.Level.FINE , "Cannot start triggers. Owner of the JobProperty has not been assigned yet" , new java.lang.IllegalStateException ( "JobProperty owner is null" ) ) ; } for ( hudson.triggers.Trigger trigger : triggers ) { try { trigger . start ( owner , newInstance ) ; } catch ( java.lang.Exception ex ) { org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty.LOGGER . log ( java.util.logging.Level.SEVERE , "Can't start trigger." , ex ) ; } } } 
@ java.lang.Override public void onClick ( android.view.View v ) { switch ( v . getId () ) { case R.id.btnSpeak : java.lang.String chat = ChatMessage . getText () . toString () ; java.lang.String message = chat . trim () ; if ( ! ( android.text.TextUtils . isEmpty ( message ) ) ) { sendMessage ( message , chat ) ; ChatMessage . setText ( "" ) ; } break; } } 
private boolean shouldStopContainer ( org.jolokia.docker.maven.model.Container container , org.jolokia.docker.maven.util.PomLabel pomLabel ) { boolean stopContainer = true ; if ( ! ( isStopAllContainers () ) ) { java.lang.String key = pomLabel . getKey () ; java.util.Map < java.lang.String , java.lang.String > labels = container . getLabels () ; if ( labels . containsKey ( key ) ) { stopContainer = pomLabel . matches ( new org.jolokia.docker.maven.util.PomLabel ( labels . get ( key ) ) ) ; } } return stopContainer ; } 
public void onHighlightNext () { ( highlightPosition ) ++ ; if ( ( highlightPosition ) >= ( ( memoryData . getNumCells () ) - 1 ) ) { memorization.Bus . getBus () . onDisableNext () ; } else if ( memoryData . isRowMarker ( highlightPosition ) ) { ( highlightPosition ) ++ ; } else if ( ( highlightPosition ) == 2 ) { memorization.Bus . getBus () . onEnablePrev () ; } notifyDataSetChanged () ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/search-weather" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public com.trueweather.web.ThreeDaysWeatherController.Result getThreeDaysWeather ( java.lang.String city ) { if ( ( city == null ) || ( city . isEmpty () ) ) { return new com.trueweather.web.ThreeDaysWeatherController.Result ( "Город не задан!" ) ; } return new com.trueweather.web.ThreeDaysWeatherController.Result ( weatherService . getTrueWeatherOnThreeDays ( city . toLowerCase () ) ) ; } 
@ java.lang.Override public void setInverted ( boolean b ) { boolean changed = b != ( this . inverted ) ; if ( ! changed ) { return; } this . inverted = b ; for ( int i = 0 ; i < ( this . controllerList . length ) ; i ++ ) { ( ( org.usfirst.frc.team449.robot.drive.tank.components.MotorCluster ) ( controllerList [ i ] ) ) . setInverted ( ( ! ( ( ( org.usfirst.frc.team449.robot.drive.tank.components.MotorCluster ) ( controllerList [ i ] ) ) . getInverted () ) ) ) ; } } 
@ java.lang.Override public void writeToNBT ( net.minecraft.nbt.NBTTagCompound nbtTagCompound ) { super . writeToNBT ( nbtTagCompound ) ; if ( ! ( this . sources . isEmpty () ) ) { net.minecraft.nbt.NBTTagList SourceList = new net.minecraft.nbt.NBTTagList () ; for ( net.minecraft.util.BlockPos source : sources ) { SourceList . appendTag ( new net.minecraft.nbt.NBTTagIntArray ( de.keridos.floodlights.util.GeneralUtil . getIntArrayFromPos ( source ) ) ) ; } nbtTagCompound . setTag ( Names.NBT.SOURCES , SourceList ) ; } } 
private void checkRabbitReachWin ( android.graphics.Point p , email.com.gmail.songjiapei.arimaa.Piece.PieceColour rabbitColour , email.com.gmail.songjiapei.arimaa.GameEngine.GameState winState ) { if ( ! ( board . isEmpty ( p ) ) ) if ( ( ( board . getPiece ( p ) . getType () ) == ( email.com.gmail.songjiapei.arimaa.Piece.PieceType.RABBIT ) ) && ( ( board . getPiece ( p ) . getColour () ) == rabbitColour ) ) gameState = winState ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { int prevDateIndex = ( scheduledDates . indexOf ( dateText . getText () ) ) - 1 ; if ( prevDateIndex >= 0 ) { java.lang.String date = scheduledDates . get ( scheduledDates . indexOf ( dateText . getText () ) ) ; refreshDateEvents ( date ) ; } } 
public static java.lang.String getCityIDByResponseText ( java.lang.String responseText ) { if ( responseText != null ) { android.os.Looper . prepare () ; try { java.lang.String cityID = "" ; org.json.JSONObject obj = new org.json.JSONObject ( responseText ) ; org.json.JSONArray arr1 = obj . getJSONArray ( "HeWeather5" ) ; org.json.JSONObject obj2 = arr1 . getJSONObject ( 0 ) ; org.json.JSONObject obj3 = obj2 . getJSONObject ( "basic" ) ; cityID = obj3 . getString ( "id" ) ; return cityID ; } catch ( org.json.JSONException e ) {} android.os.Looper . loop () ; } return null ; } 
private void loadPage () { com.example.android.interactivestory.model.Page page = mStory . getPage ( 0 ) ; android.graphics.drawable.Drawable drawable = android.support.v4.content.ContextCompat . getDrawable ( this , R.drawable.page0 ) ; mImageView . setImageDrawable ( drawable ) ; java.lang.String pageText = page . getText () ; pageText = java.lang.String . format ( pageText , mName ) ; mTextView . setText ( page . getText () ) ; mChoice1 . setText ( page . getChoice1 () . getText () ) ; mChoice2 . setText ( page . getChoice2 () . getText () ) ; } 
public void onBackPressed () { if ( ( this . themeableBrowser ) == null ) { this . dismiss () ; } else { if ( ( this . hardwareBack ) && ( this . inAppBrowser . canGoBack () ) ) { this . inAppBrowser . goBack () ; } else { this . inAppBrowser . closeDialog () ; } } } 
private void stop () { org.eclipse.kura.linux.position.PositionServiceImpl.s_logger . debug ( "PositionService stopping" ) ; if ( ( ( org.eclipse.kura.linux.position.PositionServiceImpl.monitorTask ) != null ) && ( ! ( org.eclipse.kura.linux.position.PositionServiceImpl.monitorTask . isDone () ) ) ) { org.eclipse.kura.linux.position.PositionServiceImpl.stopThread = true ; org.eclipse.kura.linux.position.PositionServiceImpl.monitorTask . cancel ( true ) ; org.eclipse.kura.linux.position.PositionServiceImpl.monitorTask = null ; } if ( ( m_gpsDevice ) != null ) { m_gpsDevice . disconnect () ; } m_configured = false ; m_isRunning = false ; m_hasLock = false ; } 
public void setFont () { java.lang.String srcFont = org.omegat.util.Preferences . getPreference ( OConsts.TF_SRC_FONT_NAME ) ; if ( ! ( srcFont . equals ( "" ) ) ) { int fontsize ; try { fontsize = java.lang.Integer . parseInt ( org.omegat.util.Preferences . getPreference ( OConsts.TF_SRC_FONT_SIZE ) ) ; } catch ( java.lang.NumberFormatException nfe ) { fontsize = 12 ; } setFont ( new java.awt.Font ( srcFont , java.awt.Font.PLAIN , fontsize ) ) ; } } 
public org.eclipse.emf.emfstore.internal.client.model.impl.api.ESServerImpl addServer ( org.eclipse.emf.emfstore.client.ESServer server ) { final org.eclipse.emf.emfstore.internal.client.model.impl.api.ESServerImpl serverImpl = ( ( org.eclipse.emf.emfstore.internal.client.model.impl.api.ESServerImpl ) ( server ) ) ; org.eclipse.emf.emfstore.client.util.RunESCommand . run ( new java.util.concurrent.Callable < java.lang.Void > () { public java.lang.Void call ( ) throws java.lang.Exception { toInternalAPI () . addServerInfo ( serverImpl . toInternalAPI () ) ; return null ; } } ) ; toInternalAPI () . save () ; return serverImpl ; } 
@ org.junit.Test public void testUpdateVocabularyFolder ( ) throws eionet.meta.service.ServiceException { eionet.meta.dao.domain.VocabularyFolder result = vocabularyService . getVocabularyFolder ( 11 ) ; result . setLabel ( "modified" ) ; vocabularyService . updateVocabularyFolder ( result , null ) ; result = vocabularyService . getVocabularyFolder ( 11 ) ; org.junit.Assert . assertEquals ( "Modified label" , "modified" , result . getLabel () ) ; java.lang.String baseUriExpected = ( SITE_PREFIX ) + "/vocabulary/common2/test_vocabulary11/" ; org.junit.Assert . assertEquals ( "Generated Base Uri is not correct!" , baseUriExpected , result . getBaseUri () ) ; } 
public static void processDoors2 ( jaredbgreat.dldungeons.planner.Dungeon dungeon , jaredbgreat.dldungeons.rooms.Room room ) { room.topDoors = jaredbgreat.dldungeons.planner.astar.DoorChecker . makeConnectionList ( room , dungeon.random ) ; for ( jaredbgreat.dldungeons.pieces.Doorway exit : room.topDoors ) { exit.priority = - 16 ; dungeon.rooms . get ( jaredbgreat.dldungeons.planner.astar.DoorChecker . getOtherRoom ( exit , room , dungeon ) ) . addToConnections ( exit ) ; } } 
@ java.lang.Override public int hashCode () { int result = previousOutput . hashCode () ; result = ( 31 * result ) + ( ( int ) ( ( sequence ) ^ ( ( sequence ) > > > 32 ) ) ) ; result = ( 31 * result ) + ( scriptSignature . hashCode () ) ; return result ; } 
private static java.lang.Integer [] randomInt ( int numOfRand , int upperbound ) { java.util.Set < java.lang.Integer > set = new java.util.HashSet < java.lang.Integer > () ; while ( ( set . size () ) < numOfRand ) { set . add ( ( ( ( int ) ( ( java.lang.Math . random () ) * upperbound ) ) + 1 ) ) ; } java.lang.Integer [] integerArray = set . toArray ( new java.lang.Integer [ set . size () ] ) ; return integerArray ; } 
private static byte [] decodeBase64Digest ( java.lang.String base64Digest ) { java.lang.String expectedPrefix = "sha1-" ; if ( ! ( base64Digest . startsWith ( expectedPrefix ) ) ) { throw new java.lang.IllegalArgumentException ( ( ( base64Digest + " did not start with " ) + expectedPrefix ) ) ; } base64Digest = base64Digest . replaceFirst ( expectedPrefix , "" ) ; byte [] bytes = new byte [ 0 ] ; try { bytes = com.couchbase.lite.support.Base64 . decode ( base64Digest ) ; } catch ( java.io.IOException e ) { new java.lang.IllegalArgumentException ( e ) ; } return bytes ; } 
public static org.onosproject.yang.gen.v1.urn.ietf.params.xml.ns.yang.ietf.te.types.rev20160705.ietftetypes.TeOperStatus teSubsystem2YangOperStatus ( org.onosproject.tetopology.management.api.TeStatus opStatus ) { switch ( opStatus ) { case DOWN : return org.onosproject.yang.gen.v1.urn.ietf.params.xml.ns.yang.ietf.te.types.rev20160705.ietftetypes.TeOperStatus . of ( TeOperStatusEnum.DOWN ) ; case UP : return org.onosproject.yang.gen.v1.urn.ietf.params.xml.ns.yang.ietf.te.types.rev20160705.ietftetypes.TeOperStatus . of ( TeOperStatusEnum.UP ) ; case TESTING : return org.onosproject.yang.gen.v1.urn.ietf.params.xml.ns.yang.ietf.te.types.rev20160705.ietftetypes.TeOperStatus . of ( TeOperStatusEnum.TESTING ) ; case MAINTENANCE : return org.onosproject.yang.gen.v1.urn.ietf.params.xml.ns.yang.ietf.te.types.rev20160705.ietftetypes.TeOperStatus . of ( TeOperStatusEnum.MAINTENANCE ) ; case PREPARING_MAINTENANCE : return org.onosproject.yang.gen.v1.urn.ietf.params.xml.ns.yang.ietf.te.types.rev20160705.ietftetypes.TeOperStatus . of ( TeOperStatusEnum.PREPARING_MAINTENANCE ) ; case UNKNOWN : return org.onosproject.yang.gen.v1.urn.ietf.params.xml.ns.yang.ietf.te.types.rev20160705.ietftetypes.TeOperStatus . of ( TeOperStatusEnum.UNKNOWN ) ; default: return null ; } } 
@ java.lang.Override public V remove ( java.lang.Object key ) { net.jodah.expiringmap.internal.Assert . notNull ( key , "key" ) ; writeLock . lock () ; try { net.jodah.expiringmap.ExpiringMap.ExpiringEntry < K , V > entry = entries . remove ( key ) ; if ( entry == null ) return null ; if ( entry . cancel ( false ) ) scheduleEntry ( entries . first () ) ; return entry . getValue () ; } finally { writeLock . unlock () ; } } 
@ java.lang.Override public java.lang.String toString () { java.lang.StringBuffer name = new java.lang.StringBuffer () ; for ( java.lang.String item : getOrdering () ) { name . append ( ( item + ", " ) ) ; } name . delete ( ( ( name . length () ) - 2 ) , name . length () ) ; return name . toString () ; } 
private void initialPostProcessing () { org.terasology.monitoring.PerformanceMonitor . startActivity ( "Initial Post-Processing" ) ; prePostMaterial . enable () ; buffers.scenePrePost . bind () ; glClear ( ( ( GL_COLOR_BUFFER_BIT ) | ( GL_DEPTH_BUFFER_BIT ) ) ) ; renderFullscreenQuad () ; buffers.scenePrePost . unbind () ; org.terasology.monitoring.PerformanceMonitor . endActivity () ; } 
@ org.junit.Test public void getBoundingBoxOfRangeGivenSameCoordinates () { latitude = 51.9032375 ; longitude = 51.9032375 ; range = 0.1 ; try { java.lang.System.out . println ( "wait 10 secs" ) ; java.util.concurrent.TimeUnit.SECONDS . sleep ( 10 ) ; this . testDocument = de.fh_bielefeld.geograph.API.OSMApi . getBoundingBoxOfRange ( latitude , longitude , range ) ; } catch ( de.fh_bielefeld.geograph.API.Exception.InvalidAPIRequestException ex ) { fail ( "There shouldn't be an InvalidAPIRequesException" ) ; } catch ( java.lang.InterruptedException ex ) { ex . printStackTrace () ; fail ( "fail!" ) ; } assertNotNull ( this . testDocument ) ; } 
private long generatePossibleMovesBitboardToDownRight ( int i , long occupiedBitboard , long opponentBitboard ) { long possibleMovesToDownRight = ( com.davidbalazs.chess.constants.BitboardConstants.diagonalSlidingDownRight [ i ] ) & occupiedBitboard ; possibleMovesToDownRight = ( ( ( ( ( possibleMovesToDownRight < < 7 ) | ( possibleMovesToDownRight < < 14 ) ) | ( possibleMovesToDownRight < < 21 ) ) | ( possibleMovesToDownRight < < 28 ) ) | ( possibleMovesToDownRight < < 35 ) ) | ( possibleMovesToDownRight < < 42 ) ; return getBitboardFromNumber ( possibleMovesToDownRight , com.davidbalazs.chess.constants.BitboardConstants.diagonalSlidingDownRight [ i ] , opponentBitboard , occupiedBitboard ) ; } 
boolean isNativeScrollbar () { javax.servlet.ServletRequest request = ( ( javax.servlet.ServletRequest ) ( org.zkoss.zk.ui.Executions . getCurrent () . getNativeRequest () ) ) ; if ( org.zkoss.web.servlet.Servlets . isBrowser ( request , "ie8-" ) ) { return true ; } else { boolean isMobile = ( ( org.zkoss.web.servlet.Servlets . getBrowser ( request , "mobile" ) ) != null ) && ( org.zkoss.zk.ui.WebApps . getFeature ( "ee" ) ) ; return org.zkoss.zul.impl.Utils . testAttribute ( this , "org.zkoss.zul.nativebar" , ( ! isMobile ) , true ) ; } } 
private void doTask2 ( java.io.File dir ) { for ( java.io.File f : dir . listFiles () ) { if ( f . isFile () ) { doBuildHtml ( f ) ; continue; } if ( f . isDirectory () ) { doTask2 ( dir ) ; } } } 
private java.util.List < java.lang.String > extractPath ( java.lang.String path ) { java.util.List < java.lang.String > newPath = new java.util.ArrayList < java.lang.String > () ; java.util.regex.Matcher m = java.util.regex.Pattern . compile ( "\\(([^)]+)\\)" ) . matcher ( path ) ; while ( m . find () ) { java.lang.String node = m . group ( 1 ) ; java.lang.System.out . println ( ( "node:" + node ) ) ; newPath . add ( node ) ; } return newPath ; } 
@ java.lang.Override public void onResult ( @ android.support.annotation.NonNull final com.google.android.gms.common.api.Status status ) { synchronized ( resultExecutor ) { resultExecutor . execute ( new java.lang.Runnable () { @ java.lang.Override public void run () { java.util.List < java.lang.String > list = new java.util.ArrayList ( addingInProcessGeoIds . keySet () ) ; if ( status . isSuccess () ) { notifyOnGeofenceAddedSuccess ( list ) ; } else { notifyOnGeofenceAddedFailed ( list ) ; } addingInProcessGeoIds . clear () ; isAddingGeofencesInProgress = false ; } } ) ; } } 
public void endSession ( ) throws java.io.IOException { for ( java.lang.Thread t : serverListeners ) { t . interrupt () ; } for ( java.net.Socket s : clients ) { s . getOutputStream () . flush () ; s . close () ; } java.lang.System.out . println ( "MMServer seisson ended." ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; marqueeTextView = ( ( com.potterhsu.marqueetextview.MarqueeTextView ) ( findViewById ( R.id.tv ) ) ) ; marqueeTextView . setText ( "This is a good day, 歡迎光臨！" ) ; marqueeTextView . setColor ( Color.BLUE ) ; marqueeTextView . setSpeed ( 0.5F ) ; } 
public static org.arriva.movesample.core.FieldControlInputs convertStringToControlInput ( java.lang.String input ) { if ( ! ( org.arriva.movesample.core.FieldControlInputs . isContolInput ( input ) ) ) { return org.arriva.movesample.core.FieldControlInputs.UNDEFINED ; } if ( input . equals ( org.arriva.movesample.core.FieldControlInputs.UP ) ) { return org.arriva.movesample.core.FieldControlInputs.UP ; } if ( input . equals ( org.arriva.movesample.core.FieldControlInputs.DOWN ) ) { return org.arriva.movesample.core.FieldControlInputs.DOWN ; } if ( input . equals ( org.arriva.movesample.core.FieldControlInputs.RIGHT ) ) { return org.arriva.movesample.core.FieldControlInputs.RIGHT ; } return org.arriva.movesample.core.FieldControlInputs.LEFT ; } 
private void removeRecord ( T oldRecord , java.lang.String oldkey ) { org.kisst.pko4j.index.MultiIndex.logger . info ( "removing unique key {} " , oldkey ) ; org.kisst.item4j.ImmutableSequence < T > oldList = map . get ( oldkey ) ; org.kisst.item4j.ImmutableSequence < T > newList = oldList . removeItem ( oldRecord ) ; if ( ( newList . size () ) != ( oldList . size () ) ) map . put ( oldkey , newList ) ; } 
private static java.lang.String getPropertyInternal ( java.lang.String propKey , java.lang.String propFile ) { try ( java.io.InputStream input = new java.io.FileInputStream ( propFile ) ) { java.util.Properties prop = new java.util.Properties () ; prop . load ( input ) ; return prop . getProperty ( propKey ) ; } catch ( java.io.IOException ex ) { utils.Props.log . error ( ex ) ; throw new java.lang.RuntimeException ( ( "value not found for key: " + propKey ) ) ; } } 
public int nextEntry () { if ( ! ( hasNext () ) ) throw new java.util.NoSuchElementException () ; curr = next ; if ( ( ++ ( index ) ) >= ( ( order.size ) - 1 ) ) next = - 1 ; else next = order . get ( ( ( index ) + 1 ) ) ; prev = curr ; return curr ; } 
private boolean isContains ( java.lang.String address , java.lang.String fromRule ) { java.lang.String [] fromRules = fromRule . split ( ";" ) ; for ( int i = 0 ; i < ( fromRules.length ) ; i ++ ) { if ( address . contains ( fromRule ) ) { return true ; } } return false ; } 
public boolean checkForWin ( int row , int column , int grid ) { if ( ( ( ( checkRow ( row , column , grid ) ) || ( checkColumn ( row , column , grid ) ) ) || ( checkDiagonal ( row , column , grid ) ) ) || ( checkDiagOfAllGrids ( row , column , grid ) ) ) { return true ; } return false ; } 
@ org.junit.Test public void testCase6 () { me.chiwang.leetcode.ListNode l1 = me.chiwang.leetcode.ListNodes . getListNodes ( 1 , 2 , 3 , 4 , 5 ) ; solution . reverseKGroup ( l1 , 6 ) ; me.chiwang.leetcode.ListNode l2 = me.chiwang.leetcode.ListNodes . getListNodes ( 1 , 2 , 3 , 4 , 5 ) ; assertListNodeEquals ( l2 , l1 ) ; } 
private void updatePassStats ( int yds , boolean pic , boolean incompletion , boolean td , boolean fum ) { passyds += yds ; if ( pic ) ( ints ) ++ ; if ( ! incompletion ) ( passcomps ) ++ ; if ( ( td && ( ! fum ) ) && ( ! pic ) ) ( passtds ) ++ ; ( passatmpts ) ++ ; } 
public void declineFriendRequest ( int id , int friend_id ) throws java.sql.SQLException { java.lang.String tableName = "friend_requests" ; java.lang.String firstColumnName = "request_from" ; java.lang.String SecondColumnName = "request_to" ; Manager.DBHelper help = new Manager.DBHelper () ; help . deleteCoupleIntstFromDbManually ( tableName , firstColumnName , SecondColumnName , id , friend_id ) ; } 
public double predict ( double [] vals ) { java.lang.System.out . println ( "Predicting..." ) ; if ( ( vals == null ) || ( ( vals.length ) != ( inputs.length ) ) ) { java.lang.System.out . printf ( "Error: Invalid Input" ) ; return 0.0 ; } for ( int i = 0 ; i < ( inputs ) ; i ++ ) { inputs [ i ] . updateValue ( vals [ i ] ) ; } return output . getValue () ; } 
private void checkForNewBlocks () { long randomOffset = ( ( random . nextLong () ) % 1000 ) + 500 ; if ( ( ( java.lang.System . currentTimeMillis () ) - ( ml_lastBlockCreation ) ) > ( ( ml_timeBetweenBlockCreations ) + randomOffset ) ) { addBlock () ; ml_lastBlockCreation = java.lang.System . currentTimeMillis () ; } } 
@ org.junit.Test public void showAllAvailableCars ( ) throws java.lang.Exception { carService . saveCar ( car ) ; java.util.List < com.rentacar.model.Car > carList = carService . showAllAvailableCars () ; assertNotNull ( carList ) ; for ( com.rentacar.model.Car c : carList ) { assertEquals ( CarAvailability.AVAILABLE , currentCar . getAvailability () ) ; } } 
int insertNestedComment ( com.andrewshu.android.reddit.things.ThingListing commentThingListing , int indentLevel , int insertedCommentIndex ) { java.util.Deque < com.andrewshu.android.reddit.things.ThingInfo > commentsList = commentTreeDFSList ( commentThingListing ) ; java.util.Iterator < com.andrewshu.android.reddit.things.ThingInfo > iter = commentsList . iterator () ; while ( iter . hasNext () ) { com.andrewshu.android.reddit.things.ThingInfo ci = iter . next () ; ci . setIndent ( ( ( mIndentation ) + indentLevel ) ) ; processCommentSlowSteps ( ci ) ; } appendCommentTree ( commentsList ) ; return insertedCommentIndex ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( ( com.zerohour.fragments.PartyInviteFragment.contactsListModel . size () ) > 0 ) { for ( java.lang.String mNum : com.zerohour.fragments.PartyInviteFragment.contactsListModel ) { if ( ! ( numbersSelected . contains ( mNum ) ) ) numbersSelected . add ( mNum ) ; } updateData () ; } com.zerohour.utils.Utility . showToastMessage ( getActivity () , ( "SELECTED CONTACTS" + ( com.zerohour.fragments.PartyInviteFragment.contactsListModel . size () ) ) ) ; com.zerohour.fragments.PartyInviteFragment.contactsListModel . clear () ; dialog . dismiss () ; } 
public void RetrieveSesionData () { android.content.SharedPreferences Preferences = getApplicationContext () . getSharedPreferences ( GenConf.SAVEDSESION , 0 ) ; java.lang.String account = Preferences . getString ( GenConf.ACCOUNT , null ) ; java.lang.String apikey = Preferences . getString ( GenConf.APIKEY , null ) ; if ( ( account != null ) && ( apikey != null ) ) { GetUserData ( account , apikey ) ; } else { GenConf.OpenedToSeeMessages = false ; StartLoginActivity () ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; com.example.gabriel.popularmovies.MovieFragment.MovieFragment fragment = new com.example.gabriel.popularmovies.MovieFragment.MovieFragment () ; android.app.FragmentManager fragmentManager = getFragmentManager () ; android.app.FragmentTransaction fragmentTransaction = fragmentManager . beginTransaction () ; fragmentTransaction . add ( R.id.container , fragment ) ; fragmentTransaction . commit () ; } 
@ org.junit.Test public void testToJSONString ( ) throws java.lang.Exception { startMarker () ; karyon.json.DefaultVisibilityCheckerTest.TestClass loClass = new karyon.json.DefaultVisibilityCheckerTest.TestClass () ; loClass . setStringValue ( "TEST STRING VALUE" ) ; java.lang.String lcJSON = karyon.json.Utilities . toJSONString ( loClass ) ; karyon.json.DefaultVisibilityCheckerTest.TestClass loClass2 = karyon.json.Utilities . toObject ( lcJSON , karyon.json.DefaultVisibilityCheckerTest.TestClass . class ) ; org.junit.Assert . assertEquals ( loClass . getAValue () , loClass2 . getAValue () ) ; org.junit.Assert . assertEquals ( loClass . getBValue () , loClass2 . getBValue () ) ; org.junit.Assert . assertEquals ( loClass.m_cStringValue , loClass2.m_cStringValue ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/healthcheck" ) @ org.springframework.web.bind.annotation.ResponseBody public org.springframework.http.ResponseEntity < java.lang.String > healthCheck () { java.lang.String env = ( "<p>Environment : " + ( java.lang.System . getProperty ( "env" ) ) ) + "</p>" ; java.lang.String sysProp = java.lang.System . getProperties () . stringPropertyNames () . toString () . replaceAll ( "[,]" , "<br>" ) . replaceAll ( "\\[" , "<p>" ) . replaceAll ( "\\]" , "</p>" ) ; return org.springframework.http.ResponseEntity . status ( HttpStatus.OK ) . body ( ( ( ( com.rest.controller.AppController.healthCheckString ) + env ) + sysProp ) ) ; } 
@ java.lang.Override protected void process ( org.softwareFm.card.configuration.CardConfig cardConfig , final org.softwarefm.collections.explorer.Explorer explorer , org.softwareFm.jdtBinding.api.BindingRipperResult ripperResult , java.util.Map < java.lang.String , java.lang.Object > result ) { java.lang.String artifactUrl = makeUrl ( ripperResult , cardConfig , result ) ; explorer . displayCard ( artifactUrl , new org.softwareFm.card.dataStore.CardAndCollectionDataStoreAdapter () { @ java.lang.Override public void finished ( org.softwareFm.card.card.ICardHolder cardHolder , java.lang.String url , org.softwareFm.card.card.ICard card ) { explorer . showRandomContent ( card ) ; } } ) ; } 
@ java.lang.Override public void onLeft ( hudson.model.Queue.LeftItem li ) { org.zeroturnaround.stats.ClusterStatisticsPlugin plugin = org.zeroturnaround.stats.ClusterStatisticsPlugin . getInstance () ; org.zeroturnaround.stats.model.RunStats stats = plugin . getStatsData () . getUnInitializedItem ( li.id ) ; if ( stats != null ) { stats . setStarted ( java.lang.System . currentTimeMillis () ) ; } else { org.zeroturnaround.stats.MyQueueListener.log . fine ( "Unable to find the task from Eden space for startup. Ignoring." ) ; } } 
public java.lang.Void doWork ( ) throws java.lang.Exception { long siteSize = getNodeSize ( siteRef ) ; java.util.Date now = new java.util.Date () ; java.lang.String siteName = ( ( java.lang.String ) ( getNodeService () . getProperty ( siteRef , ContentModel.PROP_NAME ) ) ) ; org.alfresco.museum.ucm.sizelimits.SiteSizeUpdaterFactory.LOGGER . info ( java.lang.String . format ( "Site %s have content of size %d on %s" , siteName , siteSize , now . toString () ) ) ; setSiteSize ( siteRef , siteSize , false ) ; getNodeService () . setProperty ( siteRef , UCMConstants.ASPECT_PROP_SITE_SCAN_DATE_QNAME , now ) ; return null ; } 
@ org.junit.Test public void testDeleteButtonNoSelection () { gui . setAddressBook ( addressBook1 ) ; gui . refreshAddressBook ( addressBook1 ) ; gui.nameList . clearSelection () ; gui.deleteButton . setEnabled ( true ) ; gui.deleteButton . doClick () ; org.junit.Assert . assertEquals ( "Nobody should be deleted from address book" , addressBook1 . getPersons () . size () , gui . getAddressBook () . getPersons () . size () ) ; } 
private org.ejml.simple.SimpleSVD svd ( final org.ejml.simple.SimpleMatrix x , final double [] sdevs ) { final double nsqrt = java.lang.Math . sqrt ( _N ) ; for ( int i = 0 ; i < ( sdevs.length ) ; i ++ ) { x . extractVector ( false , i ) . divide ( ( ( sdevs [ i ] ) * nsqrt ) ) ; } return x . svd () ; } 
@ java.lang.Override public java.util.List < com.ovcs.forex.Trade > findAll () { try { return java.nio.file.Files . walk ( configuration . getFileStoreDirectoryPath () ) . filter ( ( path ) - > path . endsWith ( ".json" ) ) . map ( this : : load ) . collect ( java.util.stream.Collectors . toList () ) ; } catch ( java.io.IOException e ) { throw new java.lang.IllegalStateException ( "Error finding the trades" , e ) ; } } 
@ java.lang.Override public final int hashCode () { final int prime = 31 ; int result = 1 ; result = ( prime * result ) + ( ( filter ) == null ? 0 : filter . hashCode () ) ; result = ( prime * result ) + ( flags ) ; result = ( prime * result ) + ( query . hashCode () ) ; return result ; } 
private void explode ( tm.fissionwarfare.missile.MissileData missileData ) { if ( ( missileData != null ) && ( ( missileData . getExplosionType () ) != null ) ) { tm.fissionwarfare.api.IExplosionType explosion = missileData . getExplosionType () . getExplosionType () ; explosion . setup ( worldObj , getVector () ) ; if ( ! ( worldObj.isRemote ) ) { explosion . doBlockDamage () ; explosion . doPlayerDamage () ; } explosion . doEffects () ; } setDead () ; } 
@ java.lang.Override public void onScrollStateChanged ( android.widget.AbsListView view , int scrollState ) { if ( scrollState == 0 ) return; final int currentFirstVisibleItem = view . getFirstVisiblePosition () ; if ( currentFirstVisibleItem > ( lastItemVisible ) ) { fab . show () ; } else if ( currentFirstVisibleItem < ( lastItemVisible ) ) { fab . hide () ; } lastItemVisible = currentFirstVisibleItem ; } 
public static boolean sendToDefaultSpawn ( java.lang.String playername ) { if ( ( net.minecraft.server.MinecraftServer . getServer () . getConfigurationManager () . func_152612_a ( playername ) ) != null ) { net.minecraft.entity.player.EntityPlayer player = net.minecraft.server.MinecraftServer . getServer () . getConfigurationManager () . func_152612_a ( playername ) ; if ( ( player . getBedLocation ( 0 ) ) != null ) { return net.quetzi.qutilities.helpers.MovePlayer . sendToBed ( playername ) ; } else { return net.quetzi.qutilities.helpers.MovePlayer . sendToDimension ( playername , 0 ) ; } } return false ; } 
public void validateState ( Program.Core.Robot robot ) throws java.io.IOException { Program.Skeleton.SkeletonUtility . printCall ( "ValidateState" , this ) ; robot . getPosition () ; if ( Program.Skeleton.SkeletonUtility . yesOrNoQuestion ( "Kiest�l a p�ly�r�l?" ) ) { robot . die () ; } if ( Program.Skeleton.SkeletonUtility . yesOrNoQuestion ( "Belel�pett a robot egy ragacsba?" ) ) { dummyRagacsForSkeleton . stepIn ( robot ) ; } if ( Program.Skeleton.SkeletonUtility . yesOrNoQuestion ( "Belel�pett a robot egy olajba?" ) ) { dummyOlajForSkeleton . stepIn ( robot ) ; } Program.Skeleton.SkeletonUtility . printReturn ( "ValidateState" , this ) ; } 
public void dumpNodesToFile () { Node node = head ; java.util.ArrayList < BTreeNode > bNodeList = new java.util.ArrayList < BTreeNode > () ; while ( ( node . getNext () ) != null ) bNodeList . add ( node . getValue () ) ; bNodeList . add ( tail . getValue () ) ; NodeStorage . dumpNodes ( bNodeList . toArray ( new BTreeNode [ bNodeList . size () ] ) ) ; } 
@ java.lang.Override public boolean isValidCommandWord ( java.lang.String commandWord ) { java.lang.String lowerStr = commandWord . toLowerCase () ; if ( ( lowerStr == ( seedu.jimi.logic.commands.RedoCommand.COMMAND_WORD . toLowerCase () ) ) || ( lowerStr == ( seedu.jimi.logic.commands.RedoCommand.SHORT_COMMAND_WORD . toLowerCase () ) ) ) { return true ; } return false ; } 
public void run () { while ( true ) { micropascalcompiler.TokenContainer t = this . dispatcher . nextToken () ; if ( t . getError () ) { break; } char [] buf = new char [ 255 ] ; try { this . inFile . read ( buf , 0 , t . getLength () ) ; } catch ( java.lang.Exception e ) {} java.lang.System.out . println ( t . getToken () ) ; } } 
@ java.lang.Override public void run () { org.addhen.smssync.messages.ProcessSms process = new org.addhen.smssync.messages.ProcessSms ( context ) ; final java.lang.Long timeMills = java.lang.System . currentTimeMillis () ; org.addhen.smssync.models.Message message = new org.addhen.smssync.models.Message () ; message . setBody ( org.addhen.smssync.controllers.DebugCallbacks . isServerOKRequest ( context , sms . getOriginatingAddress () ) ) ; message . setDate ( new java.util.Date ( timeMills ) ) ; message . setPhoneNumber ( sms . getOriginatingAddress () ) ; message . setUuid ( process . getUuid () ) ; message . setType ( Message.Type.TASK ) ; process . sendSms ( message ) ; } 
public static void updateNextAlarm ( android.content.Context context ) { final orbin.deskclock.provider.AlarmInstance nextAlarm = orbin.deskclock.alarms.AlarmStateManager . getNextFiringAlarm ( context ) ; if ( nextAlarm == null ) orbin.Sender . sendTimeToServer ( 0 , context ) ; else orbin.Sender . sendTimeToServer ( nextAlarm . getAlarmTime () . getTimeInMillis () , context ) ; if ( orbin.deskclock.Utils . isPreL () ) { orbin.deskclock.alarms.AlarmStateManager . updateNextAlarmInSystemSettings ( context , nextAlarm ) ; } else { orbin.deskclock.alarms.AlarmStateManager . updateNextAlarmInAlarmManager ( context , nextAlarm ) ; } } 
public me.doubledutch.lazyjson.LazyObject put ( java.lang.String key , java.lang.String value ) throws me.doubledutch.lazyjson.LazyException { me.doubledutch.lazyjson.LazyNode child = null ; if ( shouldQuoteString ( value ) ) { child = appendAndSetDirtyString ( LazyNode.VALUE_ESTRING , quoteString ( value ) ) ; } else { child = appendAndSetDirtyString ( LazyNode.VALUE_STRING , value ) ; } attachField ( key , child ) ; return this ; } 
public double getBathGals () { android.widget.EditText bathsEditText = ( ( android.widget.EditText ) ( findViewById ( R.id.baths_number ) ) ) ; java.lang.String bathsString = bathsEditText . getText () . toString () ; double baths ; if ( bathsString . equals ( "" ) ) { baths = 0 ; } else { baths = java.lang.Double . parseDouble ( bathsString ) ; } return baths * 36 ; } 
public java.util.ArrayList < com.example.aberchek.appenings.happening > buildHappeningArr () { if ( ( jsonArr ) == null ) { return null ; } java.util.ArrayList < com.example.aberchek.appenings.happening > toReturn = new java.util.ArrayList < com.example.aberchek.appenings.happening > () ; for ( int i = 0 ; i < ( jsonArr . length () ) ; ++ i ) { try { jsonObj = jsonArr . getJSONObject ( i ) ; toReturn . add ( buildHappening () ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } } } 
private int [] getAllColumns ( int columnIndex ) { int [] [] colGroups = segmentProperties . getColumnGroups () ; for ( int i = 0 ; i < ( colGroups.length ) ; i ++ ) { if ( org.apache.carbondata.core.scan.executor.util.QueryUtil . searchInArray ( colGroups [ i ] , columnIndex ) ) { return colGroups [ i ] ; } } return null ; } 
public boolean getIndexerBottom () { boolean current = ! ( proccessAnalogInput ( "indexer-bottom" , indexerBottom ) ) ; long now = java.lang.System . currentTimeMillis () ; if ( current ) { lastIndexerBottomOn = now ; indexerHasGoneUpSinceLastBottomPress = false ; } if ( ( ( lastIndexerBottomOn ) + 200 ) >= now ) { return true ; } else { return ! ( indexerHasGoneUpSinceLastBottomPress ) ; } } 
@ java.lang.Override public void onConnect ( org.pircbotx.hooks.events.ConnectEvent event ) throws java.lang.Exception { channels . forEach ( ( s ) - > { event . getBot () . sendIRC () . joinChannel ( s ) ; try { java.lang.Thread . sleep ( 500 ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } ) ; super . onConnect ( event ) ; } 
public net.minidev.json.JSONObject getJSONObject () { net.minidev.json.JSONObject obj = new net.minidev.json.JSONObject () ; try { obj . put ( "uniqueID" , this . uniqueID ) ; obj . put ( "creatorId" , this . creatorId ) ; obj . put ( "time" , "0" ) ; obj . put ( "message" , this . message ) ; } catch ( java.lang.Exception e ) {} return obj ; } 
@ java.lang.Override public boolean insert ( int index , int value ) throws java.lang.IndexOutOfBoundsException { if ( index > ( ( getSize () ) + 1 ) ) { throw new java.lang.IndexOutOfBoundsException () ; } pl.sdacaemy.data.structures.impl.ForwardList.Node newElement = new pl.sdacaemy.data.structures.impl.ForwardList.Node ( value ) ; if ( ( head ) == null ) { head = newElement ; return true ; } pl.sdacaemy.data.structures.impl.ForwardList.Node previous = getItemNode ( ( index - 1 ) ) ; newElement.next = previous.next ; previous.next = newElement ; return true ; } 
private void setupFirebaseAndListener ( java.lang.String channelId ) { channelMembersRef = firebaseFactory . createFirebase ( firebaseUrlFormatter . getBaseUrl () ) . child ( "channelMembers" ) ; channelMemberChildEventListener = new com.citrix.wrekt.activity.ChannelMemberActivity.ChannelMemberChildEventListener () ; channelMembersRef . child ( channelId ) . addChildEventListener ( channelMemberChildEventListener ) ; friendsRef = firebaseFactory . createFirebase ( firebaseUrlFormatter . getUserFriendsUrl () ) . child ( uidPref . get () ) ; friendValueEventListener = new com.citrix.wrekt.activity.ChannelMemberActivity.FriendValueEventListener () ; friendsRef . addValueEventListener ( friendValueEventListener ) ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { timber.log.Timber . i ( "buttonDownload onClick" ) ; timber.log.Timber . i ( ( ( ( ( "Downloading " + ( application . getPackageName () ) ) + " (version " ) + ( application . getVersionCode () ) ) + ")..." ) ) ; viewHolder.buttonDownload . setVisibility ( View.GONE ) ; viewHolder.progressBarDownloadProgress . setVisibility ( View.VISIBLE ) ; viewHolder.textViewDownloadProgress . setVisibility ( View.VISIBLE ) ; timber.log.Timber . i ( ( "applicationVersion: " + applicationVersion ) ) ; new ai.elimu.appstore.synchronization.AppListArrayAdapter.DownloadApplicationAsyncTask ( viewHolder.progressBarDownloadProgress , viewHolder.textViewDownloadProgress , viewHolder.buttonInstall ) . execute ( applicationVersion ) ; } 
public static void _descriptionAction ( int i ) { java.util.ArrayList < grammars.grammars.PrintableObject > names = new java.util.ArrayList < grammars.grammars.PrintableObject > () ; names . add ( main.Main.user ) ; for ( items.Item item : main.Main.user . getInventory () ) { names . add ( item ) ; } grammars.grammars.GrammarIndividual grammarIndividual = main.Main.grammarUseItem . getRandomGrammar () ; main.Main . _printMessage ( grammarIndividual , names , "DESCITEM" ) ; main.Main.hasChanged = false ; } 
void init ( co.airbitz.core.Account account , co.airbitz.core.Wallet wallet , java.lang.String address ) { this . mAccount = account ; this . mWallet = wallet ; this . mDetails = new co.airbitz.internal.tABC_TxDetails () ; this . mMeta = new co.airbitz.core.MetadataSet () ; this . mAddress = address ; start () ; mMeta.mChangeListener = new co.airbitz.core.MetadataSet.OnChangeListener () { public void onChange () { update () ; } } ; } 
public java.lang.String store ( javax.portlet.PortletRequest request ) throws java.io.IOException , javax.portlet.ReadOnlyException , javax.portlet.ValidatorException { javax.portlet.PortletPreferences prefs = request . getPreferences () ; prefs . setValue ( org.xcolab.portlets.contactform.ContactPreferences.MESSAGE_FORMAT_PREF , messageFormat ) ; prefs . setValue ( org.xcolab.portlets.contactform.ContactPreferences.MESSAGE_SUBJECT_PREF , messageSubject ) ; prefs . setValue ( org.xcolab.portlets.contactform.ContactPreferences.EXPAND_LINK_TEXT_PREF , expandLinkText ) ; prefs . setValue ( org.xcolab.portlets.contactform.ContactPreferences.RECIPIENTS_PREF , recipients ) ; prefs . store () ; return null ; } 
@ java.lang.Override protected void executeQueryCommand () { java.util.List < org.ovirt.engine.core.common.businessentities.storage.Disk > diskList = org.ovirt.engine.core.dal.dbbroker.DbFacade . getInstance () . getDiskDao () . getAllAttachableDisksByPoolId ( org.ovirt.engine.core.bll.storage.disk.GetAllAttachableDisksForVmQuery . getParameters () . getStoragePoolId () , org.ovirt.engine.core.bll.storage.disk.GetAllAttachableDisksForVmQuery . getParameters () . getVmId () , org.ovirt.engine.core.bll.storage.disk.GetAllAttachableDisksForVmQuery . getUserID () , org.ovirt.engine.core.bll.storage.disk.GetAllAttachableDisksForVmQuery . getParameters () . isFiltered () ) ; if ( org.apache.commons.collections.CollectionUtils . isEmpty ( diskList ) ) { setReturnValue ( diskList ) ; return; } setReturnValue ( diskList ) ; } 
@ java.lang.Override protected void saveHelper ( ru.javawebinar.basejava.model.Resume r , int index ) { int insPoint = ( java.lang.Math . abs ( index ) ) - 1 ; java.lang.System . arraycopy ( storage , insPoint , storage , ( insPoint + 1 ) , ( ( size ) - insPoint ) ) ; storage [ insPoint ] = r ; ( size ) ++ ; } 
public void setAchievementImageBackground () { int rank = getAchievementRank () ; switch ( rank ) { case 1 : mainImageBackView . setImageResource ( R.drawable.gold_wreath ) ; break; case 2 : mainImageBackView . setImageResource ( R.drawable.silver_wreath ) ; break; case 3 : mainImageBackView . setImageResource ( R.drawable.bronze_wreath ) ; break; default: mainImageBackView . setImageResource ( R.drawable.ach_back_test ) ; break; } } 
@ org.junit.Test public void testGetProperties ( ) throws java.lang.Exception { java.util.Map < java.lang.String , java.lang.String > props = envPropertySource . getProperties () ; for ( java.util.Map.Entry < java.lang.String , java.lang.String > en : props . entrySet () ) { if ( en . getKey () . startsWith ( "_" ) ) { org.junit.Assert . assertEquals ( envPropertySource . getName () , en . getValue () ) ; } else { org.junit.Assert . assertEquals ( java.lang.System . getenv ( en . getKey () ) , en . getValue () ) ; } } } 
protected boolean MinMaxValuesCheck ( javax.swing.JTextField fieldMin , javax.swing.JTextField fieldMax ) { if ( ( fieldMin . getText () . matches ( "\\d+([.]{1})?(\\d+)?(E)?(e)?(-)?(\\d+)?" ) ) == false ) { fieldMin . setBorder ( javax.swing.BorderFactory . createMatteBorder ( 2 , 2 , 2 , 2 , java.awt.Color.red ) ) ; fieldMin . setBackground ( bgColor ) ; return false ; } else { fieldMin . setBorder ( javax.swing.BorderFactory . createMatteBorder ( 1 , 1 , 1 , 1 , java.awt.Color.BLACK ) ) ; fieldMin . setBackground ( java.awt.Color.WHITE ) ; return true ; } } 
@ java.lang.Override public void run () { try { player . play () ; if ( player . isComplete () ) { Loop ( fileLocation ) ; } } catch ( javazoom.jl.decoder.JavaLayerException ex ) { java.util.logging.Logger . getLogger ( src.PlayAudio . class . getName () ) . log ( java.util.logging.Level.SEVERE , null , ex ) ; } } 
@ org.junit.Test public void remove_test () { one . remove ( "not in set" ) ; assertTrue ( one . contains ( "one" ) ) ; assertEquals ( 1 , one . size () ) ; many . remove ( "one" ) ; assertFalse ( many . contains ( "one" ) ) ; assertEquals ( 1 , many . size () ) ; } 
public static com.bitdubai.fermat_cer_api.all_definition.enums.TimeUnit getByCode ( java.lang.String code ) throws com.bitdubai.fermat_api.layer.all_definition.exceptions.InvalidParameterException { switch ( code ) { case "HR" : return com.bitdubai.fermat_cer_api.all_definition.enums.TimeUnit.HOUR ; case "DY" : return com.bitdubai.fermat_cer_api.all_definition.enums.TimeUnit.DAY ; case "WK" : return com.bitdubai.fermat_cer_api.all_definition.enums.TimeUnit.WEEK ; case "MT" : return com.bitdubai.fermat_cer_api.all_definition.enums.TimeUnit.MONTH ; case "YR" : return com.bitdubai.fermat_cer_api.all_definition.enums.TimeUnit.YEAR ; default: throw new com.bitdubai.fermat_api.layer.all_definition.exceptions.InvalidParameterException ( com.bitdubai.fermat_api.layer.all_definition.exceptions.InvalidParameterException.DEFAULT_MESSAGE , null , ( "Code Received: " + code ) , "This Code Is Not Valid for the TimeUnit enum" ) ; } } 
private void proceedDeliver ( org.apache.activemq.artemis.core.server.Consumer consumer , org.apache.activemq.artemis.core.server.MessageReference reference ) { try { consumer . proceedDeliver ( reference ) ; } catch ( java.lang.Throwable t ) { ActiveMQServerLogger.LOGGER . removingBadConsumer ( t , consumer , reference ) ; synchronized ( this ) { try { removeConsumer ( consumer ) ; } catch ( java.lang.Exception e ) { ActiveMQServerLogger.LOGGER . errorRemovingConsumer ( e ) ; } addHead ( reference ) ; } } finally { deliveriesInTransit . countDown () ; } } 
void setTvAngle ( float [] ACC , float [] GYR , float [] GRA ) { tvAngle . setText ( ( ( ( ( ( ( java.lang.String . valueOf ( ACC [ 0 ] ) ) + ", " ) + ( java.lang.String . valueOf ( ACC [ 1 ] ) ) ) + ", " ) + ( java.lang.String . valueOf ( ACC [ 2 ] ) ) ) + ", \n" ) ) ; } 
public synchronized java.util.HashSet < java.lang.Long > deleteTag ( long objID , java.lang.Long artifactID , org.sleuthkit.datamodel.Tag tag , boolean tagged ) { java.util.HashSet < java.lang.Long > updatedEventIDs = eventDB . deleteTag ( objID , artifactID , tag , tagged ) ; if ( ! ( updatedEventIDs . isEmpty () ) ) { invalidateCaches ( updatedEventIDs ) ; } return updatedEventIDs ; } 
@ java.lang.Override public void modifyText ( org.eclipse.swt.events.ModifyEvent arg0 ) { zDimension = java.lang.Integer . parseInt ( zDimensionSpinner . getText () ) ; zFlag = true ; if ( ( ( ( ( ( genFlag ) && ( solveFlag ) ) && ( xFlag ) ) && ( yFlag ) ) && ( zFlag ) ) && ( textFlag ) ) startGameButton . setEnabled ( true ) ; } 
public static fish.Matrix diagonalReciprocal ( double [] vector ) { int [] units = new int [ vector.length ] ; for ( int i = 0 ; i < ( units.length ) ; i ++ ) { units [ i ] = 1 ; } return fish.Matrix . diagonalReciprocal ( vector , units ) ; } 
@ java.lang.Override protected double [] getUniformPriors ( int numPriors ) { double [] arr = new double [ numPriors ] ; for ( int i = 0 ; i < ( arr.length ) ; i ++ ) arr [ i ] = 1 / ( arr.length ) ; return arr ; } 
public void getEventListFeed ( rocks.itsnotrocketscience.bejay.managers.RetrofitManager.EventListListener listener , android.widget.RelativeLayout rlError ) { rocks.itsnotrocketscience.bejay.api.retrofit.GetEvents events = restAdapter . create ( rocks.itsnotrocketscience.bejay.api.retrofit.GetEvents . class ) ; events . getFeed ( "events" , new retrofit.Callback < java.util.ArrayList < rocks.itsnotrocketscience.bejay.models.Event > > () { @ java.lang.Override public void success ( java.util.ArrayList < rocks.itsnotrocketscience.bejay.models.Event > eventList , retrofit.client.Response response ) { listener . onEventFeedLoaded ( eventList , null ) ; rlError . setVisibility ( View.VISIBLE ) ; } @ java.lang.Override public void failure ( retrofit.RetrofitError error ) { listener . onEventFeedLoaded ( null , error ) ; rlError . setVisibility ( View.VISIBLE ) ; } } ) ; } 
public java.util.Map < java.lang.String , java.lang.Object > Request ( java.util.Map < java.lang.String , java.lang.Object > map ) throws java.io.IOException , org.json.JSONException { java.lang.String req = this . MsgPack ( map ) ; java.lang.String resp = this . Post ( req ) ; org.json.JSONObject json = new org.json.JSONObject ( resp ) ; return this . toMap ( json ) ; } 
public static android.graphics.Bitmap blurNatively ( android.graphics.Bitmap original , int radius , boolean canReuseInBitmap ) { if ( radius < 1 ) { return null ; } android.graphics.Bitmap bitmap = net.qiujuer.genius.app.BlurKit . buildBitmap ( original , canReuseInBitmap ) ; net.qiujuer.genius.app.BlurNative . blurBitmap ( bitmap , radius ) ; return bitmap ; } 
public void doSearch () { CommonData.currentSearchOption . setPageToken ( "" ) ; listResults . clear () ; mAdapter . notifyDataSetChanged () ; mRvResults . removeAllViews () ; mLlLoadingResult . setVisibility ( View.VISIBLE ) ; com.dqhuynh.gplace.fragment.SearchFragment.SearchTask task = new com.dqhuynh.gplace.fragment.SearchFragment.SearchTask () ; task . execute ( CommonData.currentSearchOption ) ; } 
public static void main ( java.lang.String [] args ) { final com.company.Chronometer chronometer = new com.company.Chronometer () ; new java.lang.Thread ( new com.company.Messenger ( 1 , null , chronometer ) , "t1" ) . start () ; new java.lang.Thread ( new com.company.Messenger ( 5 , null , chronometer ) , "t2" ) . start () ; new java.lang.Thread ( new com.company.Messenger ( 7 , "Some message" , chronometer ) , "t3" ) . start () ; chronometer . startCount () ; } 
@ java.lang.Override public java.lang.String toJsonString () { java.util.Map < java.lang.String , compare.MatchedDataPair > data = new java.util.TreeMap ( result . getData () ) ; java.lang.String [] [] result = data . values () . stream () . map ( this : : turnToArray ) . toArray ( java.lang.String [] [] : : new ) ; return ( ( "{\"dataset\":" + ( java.util.Arrays . deepToString ( result ) ) ) + "}" ) > ( ( origin ) / ( plot ) ) ; } 
public java.nio.FloatBuffer putInBuffer ( java.nio.FloatBuffer buffer ) { buffer . put ( s00 ) . put ( s10 ) . put ( s20 ) ; buffer . put ( s01 ) . put ( s11 ) . put ( s21 ) ; buffer . put ( s02 ) . put ( s12 ) . put ( s22 ) ; buffer . flip () ; return buffer ; } 
private com.ge.research.sadl.model.gp.NamedNode sadlTypeReferenceToNode ( com.ge.research.sadl.sADL.SadlTypeReference rtype ) throws com.ge.research.sadl.jena.JenaProcessorException { org.eclipse.emf.ecore.resource.Resource rtobj = sadlTypeReferenceToResource ( rtype ) ; if ( rtobj == null ) { throw new com.ge.research.sadl.jena.JenaProcessorException ( "SadlTypeReference was not resolved to a model resource." ) ; } if ( rtobj . isURIResource () ) { com.ge.research.sadl.model.gp.NamedNode rtnn = new com.ge.research.sadl.model.gp.NamedNode ( ( ( org.eclipse.emf.ecore.resource.Resource ) ( rtobj ) ) . getLocalName () ) ; rtnn . setNamespace ( ( ( org.eclipse.emf.ecore.resource.Resource ) ( rtobj ) ) . getNameSpace () ) ; return rtnn ; } else { throw new com.ge.research.sadl.jena.JenaProcessorException ( "SadlTypeReference is not a URI resource" ) ; } } 
@ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.MONITOR ) public void onPlayerQuit ( org.bukkit.event.player.PlayerQuitEvent event ) { org.bukkit.entity.Player player = event . getPlayer () ; com.autoherosrpg.heros.characters.classes.HeroManager hm = plugin . getHeroManager () ; com.autoherosrpg.heros.hero.Hero hero = heroManager . getHero ( player ) ; hm . saveHero ( hero , true ) ; hm . removeHero ( hero ) ; for ( com.autoherosrpg.heros.command.Command command : plugin . getCommandHandler () . getCommands () ) { if ( command . isInteractive () ) { command . cancelInteraction ( player ) ; } } } 
public void processStreamInfo ( org.jflac.metadata.StreamInfo streamInfo ) { this . streamInfo = streamInfo ; try { fmt = streamInfo . getAudioFormat () ; info = new javax.sound.sampled.DataLine.Info ( javax.sound.sampled.SourceDataLine . class , fmt , javax.sound.sampled.AudioSystem.NOT_SPECIFIED ) ; line = ( ( javax.sound.sampled.SourceDataLine ) ( javax.sound.sampled.AudioSystem . getLine ( info ) ) ) ; line . open ( fmt , javax.sound.sampled.AudioSystem.NOT_SPECIFIED ) ; line . start () ; } catch ( javax.sound.sampled.LineUnavailableException e ) { e . printStackTrace () ; } } 
@ java.lang.Override protected void onDestroy () { super . onDestroy () ; if ( ( ( presenter ) != null ) && ( presenter . isGameOver () ) ) { presenter . startGame () ; valueAnimator . cancel () ; valueAnimator . start () ; } else { valueAnimator . cancel () ; valueAnimator . start () ; } } 
private void onChoke ( com.jtorrent.storage.PieceRepository repo ) { com.jtorrent.peer.Peer._logger . debug ( "received CHOKE from peer {}" , getHostAddress () ) ; synchronized ( _messageLock ) { _peerChoking = true ; com.jtorrent.storage.Piece piece = repo . getDownloadingPiece ( this ) ; if ( piece != null ) { repo . setPeerHavePiece ( this , piece . getIndex () , false ) ; cancelAllRequests () ; } } } 
public boolean add ( int col ) { if ( ! ( columnIsFull ( col ) ) ) { board [ getNextRow ( col ) ] [ col ] = this . getActivePlayer () ; if ( hasLost ( 1 ) ) { player1lost = true ; return true ; } else if ( hasLost ( 2 ) ) { player2lost = true ; return true ; } else { this . changeActivePlayer () ; } return false ; } return false ; } 
private boolean skipWord ( java.lang.String word , java.util.List < java.lang.String > stoplist ) { return ( ( ( word . equals ( "." ) ) || ( word . equals ( "," ) ) ) || ( word . contains ( " " ) ) ) || ( ! ( stoplist . contains ( word ) ) ) ; } 
@ java.lang.Override public void onClick ( final android.content.DialogInterface dialog , final int which ) { final org.dasfoo.delern.models.Deck newDeck = new org.dasfoo.delern.models.Deck ( input . getText () . toString () , DeckType.BASIC . name () , true ) ; org.dasfoo.delern.models.Deck . createNewDeck ( newDeck , new org.dasfoo.delern.listeners.AbstractOnFbOperationCompleteListener ( org.dasfoo.delern.DelernMainActivityFragment.TAG , getContext () ) { @ java.lang.Override public void onOperationSuccess () { startEditCardsActivity ( getAddedKey () , newDeck . getName () ) ; mEmptyMessageTextView . setVisibility ( TextView.INVISIBLE ) ; } } ) ; } 
public static void main ( java.lang.String [] args ) { org.zahm.horsetrack.manager.InventoryManager inventoryManager = new org.zahm.horsetrack.manager.InventoryManager () ; org.zahm.horsetrack.manager.HorseManager horseManager = new org.zahm.horsetrack.manager.HorseManager () ; org.zahm.horsetrack.io.InputProcessor inputProcessor = new org.zahm.horsetrack.io.InputProcessor ( inventoryManager , horseManager ) ; java.util.Scanner input = new java.util.Scanner ( java.lang.System.in ) ; while ( org.zahm.horsetrack.Main.isRunning ) { inventoryManager . printStatus () ; horseManager . printStatus () ; java.lang.String command = input . nextLine () ; inputProcessor . processCommand ( command ) ; } } 
public java.lang.String play ( guru.bonacci.oogway.sannyas.general.Sannyasin sannya , java.lang.String input ) { java.util.function.Function < java.lang.String , java.lang.String > preprocessing = sannya . preprocessingSteps () . stream () . reduce ( java.util.function.Function . identity () , java.util.function.Function : : andThen ) ; preprocessing . andThen ( duplicateRemover ) ; java.lang.String preprocessedInput = preprocessing . apply ( input ) ; logger . info ( ( ( ( ( sannya . getClass () ) + "- Preprocessed input: '" ) + preprocessedInput ) + "'" ) ) ; return preprocessedInput ; } 
public static void main ( java.lang.String [] args ) { org.apache.log4j.PropertyConfigurator . configure ( "log4j.properties" ) ; sociam.pybossa.TaskPerformer.logger . info ( ( ( "TaskPerformer will be repeated every " + ( sociam.pybossa.config.Config.TaskCreatorTrigger ) ) + " ms" ) ) ; try { while ( true ) { sociam.pybossa.TaskPerformer . run () ; sociam.pybossa.TaskPerformer.logger . info ( ( ( "Sleeping for " + ( sociam.pybossa.config.Config.TaskPerformerTrigger ) ) + " ms" ) ) ; java.lang.Thread . sleep ( java.lang.Integer . valueOf ( Config.TaskPerformerTrigger ) ) ; } } catch ( java.lang.InterruptedException e ) { sociam.pybossa.TaskPerformer.logger . error ( ( "Error " + e ) ) ; } } 
private static void createParentFilters ( java.util.List < edu.usc.cssl.tacit.common.queryprocess.Filter > filters , java.util.List < java.lang.String > parentKeys ) { if ( null == filters ) return; java.util.List < java.lang.String > parentFilters = new java.util.ArrayList < java.lang.String > () ; for ( edu.usc.cssl.tacit.common.queryprocess.Filter f : filters ) parentFilters . add ( f . getTargetName () . split ( "\\." ) [ 0 ] ) ; parentKeys . removeAll ( parentFilters ) ; for ( java.lang.String key : parentKeys ) { filters . add ( new edu.usc.cssl.tacit.common.queryprocess.Filter ( key , null , null , null ) ) ; } } 
protected void checkSuccessorMax ( java.util.Collection < org.openrdf.model.Statement > stmts , org.openrdf.model.URI property ) { if ( ( stmts . size () ) > 1 ) { throw new cz.cvut.kbss.ontodriver.exception.IntegrityConstraintViolatedException ( ( ( ( "Invalid number of values found for assertion " + property ) + ". Expected 1, got " ) + ( stmts . size () ) ) ) ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/rowsFind" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public org.springframework.http.ResponseEntity < java.lang.String > rowsFind ( @ org.springframework.web.bind.annotation.RequestParam java.lang.String find ) { long rows = paginationServiceImp . rowsFind ( find ) ; if ( rows == 0 ) { return new org.springframework.http.ResponseEntity < java.lang.String > ( org.springframework.http.HttpStatus.BAD_REQUEST ) ; } return org.springframework.http.ResponseEntity . ok ( java.lang.String . valueOf ( rows ) ) ; } 
public org.projectforge.business.teamcal.event.model.TeamEventDO addRecurrenceExDate ( final java.util.Date date ) { if ( date == null ) { return this ; } final java.lang.String exDate ; exDate = org.projectforge.framework.calendar.ICal4JUtils . asICalDateString ( date , DateHelper.UTC , isAllDay () ) ; if ( ( recurrenceExDate ) == null ) { recurrenceExDate = exDate ; } else if ( ( recurrenceExDate . contains ( exDate ) ) == false ) { recurrenceExDate = ( ( recurrenceExDate ) + "," ) + exDate ; } return this ; } 
@ java.lang.Override public void onRefresh () { mArrFood . clear () ; swipeRefreshLayout . setRefreshing ( true ) ; java.util.List < com.aaa.cybersrishti.model.FoodItem > fooditems = db . getTodayFoodItems () ; for ( com.aaa.cybersrishti.model.FoodItem fitem : fooditems ) { mArrFood . add ( fitem ) ; } java.util.Collections . reverse ( mArrFood ) ; fa . notifyDataSetChanged () ; swipeRefreshLayout . setRefreshing ( false ) ; } 
@ java.lang.Override public void getRange ( epmc.value.Value range , epmc.graph.StateSet of ) { epmc.value.Value min = applyOver ( OperatorMin.MIN , of ) ; epmc.value.Value max = applyOver ( OperatorMax.MAX , of ) ; epmc.value.OperatorEvaluator set = epmc.value.ContextValue . get () . getEvaluator ( OperatorSet.SET , epmc.value.TypeReal . get () , epmc.value.TypeReal . get () ) ; set . apply ( epmc.value.ValueInterval . as ( range ) . getIntervalLower () , min ) ; set . apply ( epmc.value.ValueInterval . as ( range ) . getIntervalUpper () , max ) ; } 
@ org.springframework.context.annotation.Bean @ org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean public de.codecentric.boot.admin.services.ApplicationRegistrator registrator () { builder . messageConverters ( new org.springframework.http.converter.json.MappingJackson2HttpMessageConverter () ) ; if ( ( admin . getUsername () ) != null ) { builder . basicAuthorization ( admin . getUsername () , admin . getPassword () ) ; } return new de.codecentric.boot.admin.services.ApplicationRegistrator ( builder . build () , admin , client ) ; } 
@ java.lang.Override public synchronized void onBackPressed () { if ( ( ( bm ) != null ) && ( ( startX ) != ( - 1 ) ) ) { cleanScreen () ; drawBmp ( holder , bm ) ; startX = startY = - 1 ; isBack = true ; } else { exit () ; } } 
private void initializeLocation () { android.util.Log . e ( com.mtxb2b.maverickai.BackgroundService.TAG , "initializeLocationManager" ) ; if ( ( mLocationManager ) == null ) { mLocationManager = ( ( android.location.LocationManager ) ( getSystemService ( Context.LOCATION_SERVICE ) ) ) ; mListener = new com.mtxb2b.maverickai.UserLocationListener ( this ) ; } try { mLocationManager . requestLocationUpdates ( LocationManager.GPS_PROVIDER , com.mtxb2b.maverickai.BackgroundService.UpdateFreqTime , com.mtxb2b.maverickai.BackgroundService.UpdateFreqDist , mListener ) ; } catch ( java.lang.SecurityException e ) { android.util.Log . d ( com.mtxb2b.maverickai.BackgroundService.TAG , e . getMessage () ) ; } } 
@ org.junit.Test public void testList ( ) throws org.pentaho.metastore.api.exceptions.MetaStoreException { org.pentaho.big.data.impl.cluster.NamedClusterImpl namedCluster = new org.pentaho.big.data.impl.cluster.NamedClusterImpl () ; namedCluster . setName ( "testName" ) ; java.util.List < org.pentaho.big.data.impl.cluster.NamedClusterImpl > value = new java.util.ArrayList ( java.util.Arrays . asList ( namedCluster ) ) ; org.mockito.Mockito . when ( metaStoreFactory . getElements () ) . thenReturn ( value ) ; org.junit.Assert . assertEquals ( value , namedClusterManager . list ( metaStore ) ) ; } 
@ org.springframework.transaction.annotation.Transactional @ java.lang.Override public com.netease.commons.ApiResponse createNewUser ( com.netease.model.User user ) { try { user . getAdmin () ; } catch ( java.lang.Exception e ) { user . setAdmin ( 0 ) ; } com.netease.commons.ApiResponse response = com.netease.commons.ApiResponse . createDefaultApiResponse () ; com.netease.model.User u = userRepository . findByAccountId ( user . getAccountId () ) ; if ( u != null ) { response . setRetCode ( 300 ) ; response . setRetDesc ( "账号已经存在" ) ; } else { userRepository . save ( user ) ; } return response ; } 
@ java.lang.Override public < S extends T > java.util.List < S > findAll ( org.springframework.data.domain.Example < S > example , org.springframework.data.domain.Sort sort ) { return db () . find ( example . getProbeType () ) . where ( org.springframework.data.ebean.convert.ExampleExpressionBuilder . exampleExpression ( db () , example ) ) . setOrder ( org.springframework.data.ebean.convert.PageListOrderConverter . convertToEbeanOrder ( sort ) ) . findList () ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_detail ) ; maniteja.com.popularmovies.DetailActivityFragment fragment = new maniteja.com.popularmovies.DetailActivityFragment () ; android.support.v4.app.FragmentManager manager = getSupportFragmentManager () ; android.support.v4.app.FragmentTransaction transaction = manager . beginTransaction () . add ( R.id.detailFragment_container , fragment ) ; transaction . commit () ; } 
private static int findBeforeNewLineChar ( java.lang.CharSequence s , int start ) { for ( int i = start ; i > 0 ; i -- ) { if ( ( s . charAt ( i ) ) == '\n' ) { return i ; } } return - 2 ; } 
public static Employee getOwner ( int meetingID ) { java.util.List < EmployeeMeeting > eml = EmployeeMeetingDB . getInstance () . loadAll () ; for ( int i = 0 ; i < ( eml . size () ) ; i ++ ) { EmployeeMeeting em = eml . get ( i ) ; if ( ( ( em.meetingID ) == meetingID ) && ( em.isOwner ) ) { return EmployeeDB . getInstance () . load ( em.employeeID ) ; } } return l ; } 
public void sendCommand ( livecoding.Command command ) { java.lang.String hostName = "127.0.0.1" ; int port = 4444 ; try { java.net.Socket commSocket = new java.net.Socket ( hostName , port ) ; java.io.OutputStream os = commSocket . getOutputStream () ; java.io.ObjectOutputStream oos = new java.io.ObjectOutputStream ( os ) ; oos . writeObject ( command ) ; } catch ( java.io.IOException e ) { java.lang.System.err . println ( ( "Couldn't get I/O for the connection to " + hostName ) ) ; java.lang.System . exit ( 1 ) ; } } 
private static boolean isFollowActionSuccessful ( org.json.JSONObject json , boolean isAskingToFollow ) { if ( json == null ) { return false ; } final boolean isSubscribed ; if ( json . has ( "subscribed" ) ) { isSubscribed = json . optBoolean ( "subscribed" , false ) ; } else if ( json . has ( "is_following" ) ) { isSubscribed = json . optBoolean ( "is_following" , false ) ; } else { isSubscribed = false ; } return isSubscribed == isAskingToFollow ; } 
@ com.squareup.otto.Subscribe public void onTrackSelectedFromQueueEvent ( org.qstuff.qplayer.events.TrackSelectedFromQueueEvent event ) { timber.log.Timber . d ( ( "onTrackSelectedFromQueueEvent(): " + ( event.track . getName () ) ) ) ; int trackIndex ; if ( ! ( org.qstuff.qplayer.util.TrackUtils . trackListContainsTrack ( trackList , event.track ) ) ) { trackList . add ( 0 , event.track ) ; trackIndex = 0 ; } else { trackIndex = trackList . indexOf ( event.track ) ; } loadTrack ( trackIndex ) ; shallPlayImmediately = false ; } 
private java.lang.String getPathFromUri ( final android.net.Uri mUri ) { try { android.database.Cursor c = getContentResolver () . query ( mUri , null , null , null , null ) ; c . moveToFirst () ; java.lang.String filename = c . getString ( c . getColumnIndex ( MediaStore.MediaColumns.DATA ) ) ; return filename ; } catch ( java.lang.NullPointerException e ) { return null ; } } 
public java.lang.String joker ( int positionRightAnswer ) { int wrongQuestion = ( ( int ) ( ( java.lang.Math . random () ) * ( ( ( wrongAnswers . size () ) - 1 ) + 1 ) ) ) ; while ( wrongQuestion == positionRightAnswer ) { wrongQuestion = ( ( int ) ( ( java.lang.Math . random () ) * ( ( wrongAnswers . size () ) + 1 ) ) ) ; } return wrongAnswers . get ( wrongQuestion ) ; } 
public models.Score getLastScore () { java.util.List < models.Score > scores = new java.util.ArrayList ( this . scores ) ; java.util.Collections . sort ( scores , new java.util.Comparator < models.Score > () { @ java.lang.Override public int compare ( models.Score o1 , models.Score o2 ) { return o2 . getUpdatedAt () . compareTo ( o1 . getUpdatedAt () ) ; } } ) ; return scores . get ( 0 ) ; } 
private void checkReferenceTypeVariable ( java.lang.String originalTypeVariable , java.lang.String typeVariable , ch.tsphp.tinsphp.common.inference.constraints.TypeVariableConstraint typeVariableConstraint ) { java.lang.String refTypeVariable = typeVariableConstraint . getTypeVariable () ; if ( isNotSelfReference ( typeVariable , refTypeVariable ) ) { addConstraintsToRef ( originalTypeVariable , typeVariable , refTypeVariable ) ; } else if ( ( hasUpperBounds ( typeVariable ) ) && ( ( upperBounds . get ( typeVariable ) . size () ) > 1 ) ) { throw new ch.tsphp.tinsphp.symbols.constraints.LowerBoundTypeVariableException ( typeVariable , upperBounds . get ( typeVariable ) . values () ) ; } } 
public void testIterLimitLongAutoID () { siena.core.async.SienaFuture < java.lang.Iterable < siena.base.test.model.PersonLongAutoID > > future = pm . createQuery ( siena.base.test.model.PersonLongAutoID . class ) . order ( "n" ) . iter ( 2 ) ; java.lang.Iterable < siena.base.test.model.PersonLongAutoID > people = future . get () ; assertNotNull ( people ) ; siena.base.test.model.PersonLongAutoID [] array = new siena.base.test.model.PersonLongAutoID [] { siena.base.test.BaseAsyncTest.LongAutoID_TESLA , siena.base.test.BaseAsyncTest.LongAutoID_CURIE } ; int i = 0 ; for ( siena.base.test.model.PersonLongAutoID person : people ) { assertEquals ( array [ i ] , person ) ; i ++ ; } } 
public java.util.List < it.emarolab.amor.owlInterface.OWLOntologyChange > convertSuperClassesToEquivalentClass ( it.emarolab.amor.owlInterface.OWLClass cl ) { java.util.List < java.util.concurrent.locks.Lock > mutexes = getMutexes ( mutexReasoner , mutexConvertEquivalentClass ) ; return new it.emarolab.amor.owlInterface.OWLReferences.OWLReferencesCaller < java.util.List < it.emarolab.amor.owlInterface.OWLOntologyChange > > ( mutexes , this ) { @ java.lang.Override protected java.util.List < it.emarolab.amor.owlInterface.OWLOntologyChange > performSynchronisedCall () { return getManipulator () . convertSuperClassesToEquivalentClass ( cl ) ; } } . call () ; } 
@ org.springframework.security.access.prepost.PreAuthorize ( value = "hasAuthority('ADMIN')" ) @ com.schweizerischebundesbahnen.restcontroller.RequestMapping ( value = "/delete/{id}" , method = RequestMethod.DELETE ) public org.springframework.http.ResponseEntity < ? > deleteSchedule ( @ com.schweizerischebundesbahnen.restcontroller.PathVariable java.lang.String id ) { if ( ! ( id . equals ( "" ) ) ) { scheduleService . delete ( scheduleService . findScheduleById ( java.lang.Long . valueOf ( id ) ) ) ; log . info ( "Schedule was deleted successfully" ) ; sendMessageForUpdating () ; return org.springframework.http.ResponseEntity . ok ( "Schedule was deleted" ) ; } else { return new org.springframework.http.ResponseEntity ( "Mistake with deleting schedule" , org.springframework.http.HttpStatus.BAD_REQUEST ) ; } } 
public void setSwipeToDismissCallback ( com.marshalchen.ultimaterecyclerview.SwipeToDismissTouchListener.DismissCallbacks dismissCallbacks ) { int [] notToDismiss = null ; if ( ( mAdapter . getCustomHeaderView () ) != null ) { notToDismiss = new int [] { 0 } ; } mRecyclerView . addOnItemTouchListener ( new com.marshalchen.ultimaterecyclerview.SwipeToDismissTouchListener ( mRecyclerView , dismissCallbacks , notToDismiss ) ) ; } 
public static java.util.List < java.lang.String > getRestaurantIds () { java.lang.String restaurantIds = com.frostrocket.doordash.AppSharedPreferences.sharedPreferences . getString ( com.frostrocket.doordash.AppSharedPreferences.RESTAURANT_IDS , "" ) ; if ( ! ( android.text.TextUtils . isEmpty ( restaurantIds ) ) ) { return java.util.Arrays . asList ( restaurantIds . split ( "," ) ) ; } else { return new java.util.ArrayList <> () ; } } 
public android.database.Cursor swapCursor ( android.database.Cursor newCursor ) { if ( newCursor == ( mCursor ) ) { return newCursor ; } android.database.Cursor oldCursor = mCursor ; mCursor = newCursor ; if ( newCursor != null ) { mColId = newCursor . getColumnIndexOrThrow ( MediaStore.Audio.Media._ID ) ; mColTitle = newCursor . getColumnIndexOrThrow ( MediaStore.Audio.Media.TITLE ) ; mColAlbumId = newCursor . getColumnIndexOrThrow ( MediaStore.Audio.Media.ALBUM_ID ) ; } notifyDataSetChanged () ; return oldCursor ; } 
public lobstre.chtrie.ConcurrentHashTrieMap.CNode < K , V > removed ( final lobstre.chtrie.ConcurrentHashTrieMap.FlagPos flagPos ) { final lobstre.chtrie.ConcurrentHashTrieMap.BranchNode [] narr = lobstre.chtrie.ConcurrentHashTrieMap . removed ( lobstre.chtrie.ConcurrentHashTrieMap.BranchNode . class , this . array , flagPos.position ) ; return new lobstre.chtrie.ConcurrentHashTrieMap.CNode < K , V > ( narr , ( ( this . bitmap ) - ( flagPos.flag ) ) ) ; } 
@ java.lang.Override public boolean hasNext () { if ( ( null == ( batch ) ) || ( checkBatchEnd ( batch ) ) ) { if ( iterator . hasNext () ) { batch = iterator . next () ; counter = 0 ; } else { return false ; } } if ( ! ( checkBatchEnd ( batch ) ) ) { return true ; } else { return false ; } } 
public static boolean canBeRecommended ( java.lang.String userId ) { java.lang.String url = RecommendationConfig.cookBooksUrl . replace ( "${userId}" , userId ) . replace ( "${page}" , "1" ) ; org.jsoup.nodes.Document doc = com.sicnu.yudidi.crawler.CrawlerNoCookie . getPageContent ( url , "get" ) ; org.jsoup.select.Elements trs = doc . select ( ".module-body tbody tr" ) ; return ( trs . size () ) >= ( RecommendationConfig.MIN_ANSWERED_COUNT ) ? true : false ; } 
public void onTagSelected ( java.lang.String tag ) { final android.content.Intent shortcutIntent = com.pindroid.action.IntentHelper . ViewBookmarks ( tag , username , null , this ) ; final android.content.Intent.ShortcutIconResource iconResource = Intent.ShortcutIconResource . fromContext ( this , R.drawable.ic_shortcut ) ; final android.content.Intent intent = new android.content.Intent () ; intent . putExtra ( Intent.EXTRA_SHORTCUT_INTENT , shortcutIntent ) ; intent . putExtra ( Intent.EXTRA_SHORTCUT_NAME , tag ) ; intent . putExtra ( Intent.EXTRA_SHORTCUT_ICON_RESOURCE , iconResource ) ; setResult ( com.pindroid.activity.RESULT_OK , intent ) ; finish () ; } 
private com.mbzshajib.mining.processor.tree.initial.UNode addTransactionFrame ( int frameSize , com.mbzshajib.mining.processor.tree.initial.UNode currentNode , int frameNo ) throws com.mbzshajib.mining.exception.CompletedTreeException , com.mbzshajib.mining.exception.DataNotValidException , java.io.IOException { java.util.List < com.mbzshajib.mining.processor.tree.initial.UNode > list ; for ( int j = 0 ; j < frameSize ; j ++ ) { list = getTransaction ( frameNo ) ; if ( ! ( list . isEmpty () ) ) { throw new com.mbzshajib.mining.exception.CompletedTreeException () ; } for ( com.mbzshajib.mining.processor.tree.initial.UNode node : list ) { currentNode = addNode ( node , currentNode ) ; } currentNode = ROOT_NODE ; } return currentNode ; } 
@ java.lang.Override public void publish ( com.barthezzko.playergame.model.Message msg ) { if ( logger . isDebugEnabled () ) { logger . debug ( ( "PUB:" + msg ) ) ; } java.lang.Object lockObject = lockMap . get ( msg . getReceiver () ) ; synchronized ( lockObject ) { addMessage ( msg ) ; currentMsg = msg ; lockObject . notify () ; } } 
@ java.lang.Override public void _receiveBacklog ( int id , int first , int last , int limit , int additional , @ android.support.annotation.NonNull java.util.List < de.kuschku.libquassel.message.Message > messages ) { de.kuschku.util.AndroidAssert . assertNotNull ( provider ) ; storage . insertMessages ( id , messages . toArray ( new de.kuschku.libquassel.message.Message [ messages . size () ] ) ) ; client . initBacklog ( id ) ; provider . sendEvent ( new de.kuschku.libquassel.events.BacklogReceivedEvent ( id ) ) ; android.util.Log . d ( "libquassel" , ( "received backlog for id " + id ) ) ; } 
public void run () { if ( getGameOverStatus () ) { UI . toggleMenuState () ; paused = true ; } if ( ! ( paused ) ) { UI . update () ; game . update () ; redrawUI () ; } } 
@ java.lang.Override public void setArg ( java.lang.String name , java.lang.String value ) throws eu.delving.x3ml.X3MLGeneratorPolicy.CustomGeneratorException { if ( name . startsWith ( Labels.TEXT ) ) { this . text = ( ( ( ( Labels.URN ) + ":" ) + ( Labels.UUID ) ) + ":" ) + ( java.util.UUID . nameUUIDFromBytes ( value . getBytes () ) . toString () ) ; } else { throw new eu.delving.x3ml.X3MLGeneratorPolicy.CustomGeneratorException ( ( "Unrecognized argument name: " + name ) ) ; } } 
public void onTextureError ( org.gearvrf.GVRContext context , java.lang.String error , java.lang.String texFile ) { org.gearvrf.utility.Log . e ( org.gearvrf.GVRAssetLoader.TAG , "ASSET: ERROR: texture did %s not load %s" , texFile , error ) ; mErrors += ( ( ( "Texture " + texFile ) + " did not load " ) + error ) + "\n" ; if ( ( ( ( mNumTextures ) -- ) == 0 ) && ( ( mModel ) != null ) ) { generateLoadEvent () ; } } 
public static com.sforce.dataset.loader.file.schema.ExternalFileSchema load ( java.io.InputStream inputStream , java.nio.charset.Charset fileCharset , java.io.PrintStream logger ) throws com.fasterxml.jackson.core.JsonParseException , com.fasterxml.jackson.databind.JsonMappingException , java.io.IOException { com.fasterxml.jackson.databind.ObjectMapper mapper = new com.fasterxml.jackson.databind.ObjectMapper () ; mapper . configure ( DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES , false ) ; com.sforce.dataset.loader.file.schema.ExternalFileSchema userSchema = mapper . readValue ( inputStream , com.sforce.dataset.loader.file.schema.ExternalFileSchema . class ) ; if ( userSchema != null ) { throw new java.lang.IllegalArgumentException ( "Could not read schema from stream {null}" ) ; } com.sforce.dataset.loader.file.schema.ExternalFileSchema . validateSchema ( userSchema , logger ) ; return userSchema ; } 
private void initialiseWindow ( ) throws java.io.IOException { javafx.fxml.FXMLLoader loader = new javafx.fxml.FXMLLoader ( ch.uzh.csg.p2p.screens.LoginWindow . class . getResource ( "LoginWindow.fxml" ) ) ; javafx.scene.layout.AnchorPane pane = loader . load () ; ch.uzh.csg.p2p.controller.LoginWindowController loginWindowController = loader . getController () ; loginWindowController . setLoginWindow ( this ) ; javafx.scene.Scene scene = new javafx.scene.Scene ( pane ) ; scene . getStylesheets () . add ( "basic.css" ) ; stage . setScene ( scene ) ; stage . setTitle ( TITLE ) ; stage . show () ; } 
public void passInitialMessages () { if ( receivedSoftInfo ) { for ( node.Vertex n : neighborList ) { java.lang.System.out . println ( ( ( ( this . toString () ) + " Neighbor: " ) + ( n . toString () ) ) ) ; n . receiveMessage ( new message.Message ( this , softInfo ) ) ; } } else { java.lang.System.out . println ( ( ( "Houstons we have a situation. " + ( nodeName ) ) + " not received soft info." ) ) ; } } 
@ java.lang.Override protected org.ovirt.engine.core.common.businessentities.VMStatus getRawValue ( org.ovirt.engine.core.common.businessentities.VM object ) { final org.ovirt.engine.core.common.businessentities.VDS vds = getDetailModel () . getEntity () ; if ( ( object . getStatus () . equals ( VMStatus.MigratingFrom ) ) && ( vds . getId () . equals ( object . getMigratingToVds () ) ) ) { return org.ovirt.engine.core.common.businessentities.VMStatus.MigratingTo ; } return object . getStatus () ; } 
public static void printTriangle ( int size ) { int numberStars = 1 ; int num = 0 ; int triangleSize = size ; while ( num < triangleSize ) { PrintingLikeBoss . printWhitespaces ( size ) ; PrintingLikeBoss . printStars ( numberStars ) ; num ++ ; size -- ; numberStars ++ ; } } 
@ java.lang.Override public void run () { while ( mRun ) { c = null ; try { c = SurfaceHolder . lockCanvas ( null ) ; synchronized ( SurfaceHolder ) { update () ; doDraw ( c ) ; } } finally { if ( ( c ) != null ) { SurfaceHolder . unlockCanvasAndPost ( c ) ; } } } } 
private void initializeButtons () { android.widget.Button imageViewBtn = ( ( android.widget.Button ) ( this . findViewById ( R.id.image_results_view_btn ) ) ) ; imageViewBtn . setEnabled ( false ) ; imageViewBtn . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { android.content.Intent previewIntent = new android.content.Intent ( neildg.com.eagleeyesr.ProcessingFromCamActivity . this , neildg.com.eagleeyesr.ImageViewActivity . class ) ; startActivity ( previewIntent ) ; } } ) ; } 
public void testGetExpirationDate () { java.lang.System.out . println ( "Testing PinNumber::getExpirationDate" ) ; edu.jalc.inclass.cocacola.security.PinNumber pinNumber = new edu.jalc.inclass.cocacola.security.PinNumber ( 0 ) ; java.util.Calendar expiresOn ; expiresOn = java.util.Calendar . getInstance () ; expiresOn . add ( java.util.Calendar.DATE , 365 ) ; java.text.DateFormat dateFormat = new java.text.SimpleDateFormat ( "yyyy/MM/dd" ) ; assert pinNumber . getExpirationDate () . equals ( dateFormat . format ( expiresOn . getTime () ) ) ; } 
public void creatHistory ( java.lang.Integer userId , java.lang.String seatId ) { java.lang.System.out . println ( "11111" ) ; java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat ( "yyyy-MM-dd" ) ; com.domain.Historyinfo historyinfo = new com.domain.Historyinfo () ; historyinfo . setUserId ( userId ) ; historyinfo . setSeatId ( seatId ) ; historyinfo . setDate ( sdf . format ( new java.util.Date () ) ) ; java.lang.System.out . println ( historyinfo ) ; int isInsert = historyinfoService . creatHistoryinfo ( historyinfo ) ; } 
private java.lang.String clampSeekValues ( int progress , zeinhijazi.com.pmeas.effects.EffectsDefaults.EffectDefaults effectParam ) { int seekBarMin = 0 ; if ( effectParam . isComplex () ) { seekBarMin = ( ( zeinhijazi.com.pmeas.effects.EffectsDefaults.ComplexEffectDefaults ) ( effectParam ) ) . getMin () ; } else { seekBarMin = ( ( zeinhijazi.com.pmeas.effects.EffectsDefaults.SimpleEffectDefaults ) ( effectParam ) ) . getMin () ; } float clampedProgress = ( ( float ) ( progress + seekBarMin ) ) / ( effectParam . getDivideFactor () ) ; return java.lang.String . valueOf ( clampedProgress ) ; } 
@ java.lang.Override protected void onPostExecute ( java.lang.Integer s ) { super . onPostExecute ( s ) ; if ( s . equals ( DOWNLOAD_SUCCESS ) ) { if ( ( handler ) != null ) { handler . obtainMessage ( DownLoadActivity.DOWNLOAD_FINISH , position ) . sendToTarget () ; } android.widget.Toast . makeText ( context , context . getString ( R.string.download_success ) , Toast.LENGTH_SHORT ) . show () ; } else { android.widget.Toast . makeText ( context , context . getString ( R.string.download_fail ) , Toast.LENGTH_SHORT ) . show () ; } } 
@ java.lang.Override public java.util.Spliterator.OfInt trySplit () { final int length = ( endOuterExclusive ) - ( startOuterInclusive ) ; if ( length < 2 ) { return tryInnerSplit () ; } final int middle = ( startOuterInclusive ) + ( length / 2 ) ; spliterators.part1.exercise.RectangleSpliterator result = new spliterators.part1.exercise.RectangleSpliterator ( array , startOuterInclusive , middle , startInnerInclusive , endInnerExclusive ) ; startOuterInclusive = middle ; return result ; } 
public void connectionLost () { android.os.Message msg = mHandler . obtainMessage ( Constants.MESSAGE_TOAST ) ; android.os.Bundle bundle = new android.os.Bundle () ; bundle . putString ( Constants.TOAST , "Verbindung wurde getrennt" ) ; msg . setData ( bundle ) ; mHandler . sendMessage ( msg ) ; multiActivity . setActiveConnection ( false ) ; multiActivity . getBtnAction () . setText ( multiActivity . getString ( R.string.start_search ) ) ; android.util.Log . d ( de.hft.stuttgart.strawberry.bluetoothservice.BluetoothService.TAG , "startConnection() from connectionLost()" ) ; this . startConnection () ; } 
protected void execSQL ( java.lang.String sql ) throws java.sql.SQLException { if ( com.spiddekauga.android.sqlite.SqliteGateway . isInitialized () ) { android.database.sqlite.SQLiteDatabase db = com.spiddekauga.android.sqlite.SqliteGateway.mSqlite . getWritableDatabase () ; db . execSQL ( sql ) ; db . close () ; } else { com.spiddekauga.android.sqlite.SqliteGateway.mExecuteLater . add ( new com.spiddekauga.android.sqlite.SqliteGateway.SqlExecute ( com.spiddekauga.android.sqlite.SqliteGateway.ExecuteTypes.EXEC , null , null , null , sql ) ) ; } } 
@ java.lang.Override public boolean acceptNewState ( double originalScore , double newScore , double temperature ) { if ( newScore >= originalScore ) { return true ; } double probability = java.lang.Math . exp ( ( ( originalScore - newScore ) / temperature ) ) ; return ( random . nextLong () ) < probability ; } 
public void updateExameDate ( logic.Problem problem , algorithm.Individual bestIndividual ) { java.util.ArrayList < java.lang.Integer [] > aux = utils.Utils . splitChromossome ( bestIndividual . getChromossome () , problem . getByteDays () ) ; for ( int i = 0 ; i < ( problem . getNumberOfExames () ) ; i ++ ) { int date = utils.Utils . byteToInt ( aux . get ( i ) ) ; problem . getExame ( i ) . setDate ( date ) ; } } 
private void playpause () { if ( ( mp ) != null ) { try { if ( mp . isPlaying () ) { mp . pause () ; btnPlay . setImageResource ( android.R.drawable.ic_media_play ) ; } else { mp . start () ; btnPlay . setImageResource ( android.R.drawable.ic_media_pause ) ; } } catch ( java.lang.Exception e ) { android.widget.Toast . makeText ( getApplicationContext () , ( ( getString ( R.string.exception ) ) + ( e . getLocalizedMessage () ) ) , Toast.LENGTH_SHORT ) . show () ; } } } 
public static javafx.scene.Node getNodeByRowColumnIndex ( final int row , final int column , javafx.scene.layout.GridPane gridPane ) { javafx.scene.Node result = null ; javafx.collections.ObservableList < javafx.scene.Node > childrens = gridPane . getChildren () ; for ( javafx.scene.Node node : childrens ) { if ( ( ( gridPane . getRowIndex ( node ) ) == row ) && ( ( gridPane . getColumnIndex ( node ) ) == column ) ) { result = node ; break; } } return result ; } 
private void startFayeClient () { fayeClient = new com.elirex.fayeclient.FayeClient ( ( ( ( ( com.elirex.fayeclient.FayeService.SERVER_HOST ) + ":" ) + ( com.elirex.fayeclient.FayeService.SERVER_PORT ) ) + ( com.elirex.fayeclient.FayeService.SERVER_PATH ) ) , com.elirex.fayeclient.FayeService.AUTH_TOKEN , com.elirex.fayeclient.FayeService.ACCESS_TOKEN ) ; for ( java.lang.String channel : com.elirex.fayeclient.FayeService.channels ) { fayeClient . addChannel ( channel ) ; } fayeClient . setListener ( fayeClientListener ) ; fayeClient . connectToServer () ; } 
public void add ( me.newyith.util.Point p ) { if ( ( p != null ) && ( ( p . getWorld () ) == ( this . getWorld () ) ) ) { this . x += p.x ; this . y += p.y ; this . z += p.z ; this . setX ( this . x ) ; this . setY ( this . y ) ; this . setZ ( this . z ) ; } else { throw new java.lang.IllegalArgumentException ( "Cannot add Locations of differing worlds" ) ; } } 
void serve ( ) throws java.io.IOException { java.net.InetSocketAddress address = new java.net.InetSocketAddress ( port ) ; com.sun.net.httpserver.HttpServer server = com.sun.net.httpserver.HttpServer . create ( address , 0 ) ; server . createContext ( "/search" , new service.ServerGeneric.QueryHandlerSearch () ) ; server . createContext ( "/pull" , new service.ServerGeneric.QueryHandlerPull () ) ; server . setExecutor ( java.util.concurrent.Executors . newCachedThreadPool () ) ; server . start () ; java.lang.System.out . println ( ( "Server is listening on port " + ( port ) ) ) ; } 
private static void copyChar ( java.io.File file , java.io.OutputStream out ) throws innovimax.mixthem.MixException , java.io.IOException { java.io.FileInputStream in = new java.io.FileInputStream ( file ) ; byte [] buffer = new byte [ innovimax.mixthem.MixThem.BYTE_BUFFER_SIZE ] ; int c ; while ( ( c = in . read ( buffer ) ) != ( - 1 ) ) { out . write ( buffer , 0 , c ) ; in . close () ; } } 
public void centerOnGasStations ( java.util.List < com.google.android.gms.maps.model.LatLng > listLatLng ) { com.google.android.gms.maps.model.LatLngBounds.Builder bounds = new com.google.android.gms.maps.model.LatLngBounds.Builder () ; for ( com.google.android.gms.maps.model.LatLng latLng : listLatLng ) { bounds . include ( latLng ) ; } mMap . animateCamera ( com.google.android.gms.maps.CameraUpdateFactory . newLatLngBounds ( bounds . build () , 200 ) ) ; } 
public void set_to ( name.cantanima.idealnim.Ideal F ) { playable = new name.cantanima.idealnim.Ideal ( F ) ; played = new name.cantanima.idealnim.Ideal () ; hinting = false ; if ( ( value_text ) != null ) value_text . setText ( getContext () . getString ( R.string.unknown_game_value ) ) ; evaluator = new name.cantanima.idealnim.Game_Evaluation_Hashmap ( getContext () , playable , null , view_xmax , view_ymax , game_level ) ; } 
public void recycle () { path . recycle () ; name . recycle () ; value . recycle () ; comment . recycle () ; maxAge = - 1 ; path . recycle () ; domain . recycle () ; version = 0 ; secure = false ; } 
public void changeBackground () { int previousN = n ; n = rand . nextInt ( 8 ) ; if ( ( n ) == previousN ) { changeBackground () ; } java.lang.String backgroundPath ; if ( storeBool . getfxmlActive () ) { backgroundPath = backgrounds . get ( n ) ; } else { backgroundPath = backgroundsLarge . get ( n ) ; } backgroundPane . setStyle ( ( ( "-fx-background-image: url('" + backgroundPath ) + "');" ) ) ; java.lang.System.out . println ( backgroundPath ) ; } 
@ java.lang.Override public void handleMessage ( java.lang.String msg ) { if ( msg . equals ( NetworkMessages.userKicked ) ) { closeClient () ; showUI ( true ) ; } else if ( msg . equals ( NetworkMessages.userAccepted ) ) { java.lang.System.out . println ( "accepted" ) ; showUI ( false ) ; } else if ( msg . equals ( NetworkMessages.startGame ) ) { currentState = backend.GameState.WAITING_FOR_ANSWERS ; } } 
@ java.lang.Override protected java.lang.String preProcess ( java.lang.String sourceCode ) { java.lang.String temp = org.apache.commons.lang.StringUtils . trimToEmpty ( sourceCode ) ; if ( ! ( temp . startsWith ( KeyWord.WHILE ) ) ) throw new com.ecleague.parser.ast.exception.ParseSyntaxException ( this , sourceCode ) ; temp = com.ecleague.parser.ast.util.Util . trimTarget ( temp , Operators.LEFT_BRACKET ) ; expression = new com.ecleague.parser.ast.expression.ExpressionImpl () ; temp = expression . parse ( temp ) ; return com.ecleague.parser.ast.util.Util . trimTarget ( temp , Operators.RIGHT_BRACKET ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; com.jenshensoft.widgetview.WidgetContainerLayout widgetContainer = ( ( com.jenshensoft.widgetview.WidgetContainerLayout ) ( findViewById ( R.id.container ) ) ) ; android.view.View view = new android.widget.Button ( this ) ; view . setLayoutParams ( new android.widget.FrameLayout.LayoutParams ( ViewGroup.LayoutParams.MATCH_PARENT , ViewGroup.LayoutParams.MATCH_PARENT ) ) ; view . setBackgroundColor ( android.support.v4.content.ContextCompat . getColor ( this , R.color.colorAccent ) ) ; widgetContainer . setEnabled ( false ) ; } 
private void notifyListeners ( org.eclipse.smarthome.core.types.State oldState , org.eclipse.smarthome.core.types.State newState ) { java.util.Set < org.eclipse.smarthome.core.items.StateChangeListener > clonedListeners = null ; clonedListeners = new java.util.concurrent.CopyOnWriteArraySet < org.eclipse.smarthome.core.items.StateChangeListener > ( listeners ) ; for ( org.eclipse.smarthome.core.items.StateChangeListener listener : clonedListeners ) { listener . stateUpdated ( this , newState ) ; } if ( ! ( oldState . equals ( newState ) ) ) { for ( org.eclipse.smarthome.core.items.StateChangeListener listener : clonedListeners ) { listener . stateChanged ( this , oldState , newState ) ; } } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/resetImgPerPage" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public org.springframework.web.servlet.ModelAndView resetImagesPerPage ( @ org.springframework.web.bind.annotation.RequestParam ( value = "imgsPerPage" ) java.lang.String imgsPerPage ) { this . userSession . getSearchResult () . setImgsPerPage ( java.lang.Integer . valueOf ( imgsPerPage . substring ( 0 , imgsPerPage . indexOf ( "/" ) ) ) ) ; this . userSession . getSearchResult () . setCurrentPage ( ( - 1 ) ) ; com.spring.study.model.Page page = this . imageService . getPage ( this . userSession . getSearchResult () ) ; return new org.springframework.web.servlet.ModelAndView ( "home" , "page" , page ) ; } 
public com.example.kienhoang.habitapp.Habit getHabitById ( int id ) { com.example.kienhoang.habitapp.Habit habit = null ; android.database.Cursor cursor = this . fetchBySelection ( com.example.kienhoang.habitapp.DatabaseHandler.TABLE_HABITS , new java.lang.String [] { DatabaseAttributes.ID } , new java.lang.String [] { java.lang.Integer . toString ( id ) } ) ; if ( isNonEmptyCursor ( cursor ) ) { cursor . moveToFirst () ; habit = new com.example.kienhoang.habitapp.Habit ( cursor . getInt ( 0 ) , null , cursor . getString ( 2 ) , cursor . getInt ( 3 ) , cursor . getInt ( 4 ) ) ; } return habit ; } 
public org.egov.works.models.masters.SORRate getRateOn ( final java.util.Date estimateDate ) { if ( estimateDate == null ) throw new org.egov.infra.exception.ApplicationRuntimeException ( "no.rate.for.date" ) ; for ( final org.egov.works.models.masters.SORRate rate : sorRates ) if ( isWithin ( rate . getValidity () , estimateDate ) ) return rate ; throw new org.egov.infra.exception.ApplicationRuntimeException ( "no.rate.for.date" ) ; } 
public void testFetchAsync () { siena.core.async.QueryAsync < siena.base.test.model.PersonLongAutoIDModel > q = siena.base.test.model.PersonLongAutoIDModel . all () . async () ; siena.core.async.SienaFuture < java.util.List < siena.base.test.model.PersonLongAutoIDModel > > future = q . fetch () ; java.util.List < siena.base.test.model.PersonLongAutoIDModel > persons = future . get () ; assertEquals ( 3 , persons . size () ) ; assertEquals ( siena.base.test.BaseModelTest.PERSON_LONGAUTOID_TESLA , persons . get ( 0 ) ) ; assertEquals ( siena.base.test.BaseModelTest.PERSON_LONGAUTOID_CURIE , persons . get ( 1 ) ) ; assertEquals ( siena.base.test.BaseModelTest.PERSON_LONGAUTOID_EINSTEIN , persons . get ( 2 ) ) ; } 
public org.atmosphere.jersey.TrackableResource < ? extends org.atmosphere.cpr.Trackable > lookup ( java.lang.String trackingID ) { org.atmosphere.jersey.TrackableResource t = factoryCache . get ( trackingID ) ; if ( t != null ) { if ( org.atmosphere.cpr.AtmosphereResource . class . isAssignableFrom ( t . resource () . getClass () ) ) { org.atmosphere.cpr.AtmosphereResource . class . cast ( t . resource () ) . addEventListener ( aliveChecker ) ; } } return t ; } 
public void OpenAction () { java.lang.System.out . println ( "Opened" ) ; fc = new javax.swing.JFileChooser ( AppMain.directory ) ; int op = fc . showOpenDialog ( Parent ) ; if ( op == ( javax.swing.JFileChooser.APPROVE_OPTION ) ) { java.io.File file = fc . getSelectedFile () ; SetDirectoryFromFile ( file ) ; Parent . fireFileEvent ( new FileEvent ( this , file , FileEvent.OPEN_OPTION ) ) ; } } 
public static boolean isWoodLogLayer ( net.minecraft.world.chunk.Chunk chunk , int x , int y , int z , int size ) { boolean allWood = true ; for ( int xI = x ; xI <= ( x + size ) ; xI ++ ) { for ( int zI = z ; zI <= ( z + size ) ; zI ++ ) { allWood &= com.algorim.treegrowth.utilities.Common . isWoodLog ( chunk , xI , y , zI ) ; } } return allWood ; } 
@ java.lang.Override public void handleMessage ( android.os.Message msg ) { if ( ( ( number ) % 3 ) == 0 ) { mNumberSwitchView . setNumberStrokeWidth ( number ) ; mNumberSwitchView . setNumberColor ( Color.RED ) ; mNumberSwitchView . setNumberBGColor ( Color.BLACK ) ; } else { mNumberSwitchView . setNumberStrokeWidth ( 5 ) ; mNumberSwitchView . setNumberColor ( android.graphics.Color . rgb ( 10 , 10 , 10 ) ) ; mNumberSwitchView . setNumberBGColor ( Color.BLUE ) ; } mNumberSwitchView . animateTo ( number ) ; } 
private double getTimeToFirstCollision () { double timeToFirstCollision = java.lang.Double.MAX_VALUE ; for ( asteroids.model.Entity entity : entities ) { for ( asteroids.model.Entity otherEntity : entities ) { if ( entity == otherEntity ) { continue; } double timeToParticularCollision = entity . getTimeToCollision ( otherEntity ) ; if ( timeToParticularCollision < timeToFirstCollision ) { timeToFirstCollision = timeToFirstCollision ; } } } return timeToFirstCollision ; } 
@ java.lang.Override public void run () { if ( ( activities . size () ) > 0 ) { populateList ( activities , ownCloudClient ) ; swipeEmptyListRefreshLayout . setVisibility ( View.GONE ) ; swipeListRefreshLayout . setVisibility ( View.VISIBLE ) ; } else { setEmptyContent ( noResultsHeadline , noResultsMessage ) ; } } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( ( yourAccount ) != null ) { video.VideoCall videoCall = new video.VideoCall ( myAccount . getName () , yourAccount . getMyIP () ) ; videoCall . startRecorderVideo () ; videoCall . startPlayerVideo () ; try { client.Client.dout . writeUTF ( ( ( ( ( ( myAccount . getName () ) + "-" ) + ( yourAccount . getName () ) ) + "-" ) + ( config.Config.tokenVideoCall ) ) ) ; } catch ( java.io.IOException e1 ) {} } } 
private co.cask.cdap.api.data.schema.Schema readUnion ( com.google.gson.stream.JsonReader reader , java.util.Set < java.lang.String > knownRecords ) throws java.io.IOException { java.util.List < co.cask.cdap.api.data.schema.Schema > unionSchemas = new java.util.ArrayList <> () ; reader . beginArray () ; while ( ( reader . peek () ) != ( com.google.gson.stream.JsonToken.END_ARRAY ) ) { unionSchemas . add ( read ( reader , knownRecords ) ) ; } reader . endArray () ; return co.cask.cdap.api.data.schema.Schema . unionOf ( unionSchemas ) ; } 
public void Logout () { new android.app.AlertDialog.Builder ( this ) . setTitle ( "Съобщение?" ) . setMessage ( "Сигурни ли сте, че искате да излезете от профила си?" ) . setPositiveButton ( android.R.string.yes , new android.content.DialogInterface.OnClickListener () { public void onClick ( android.content.DialogInterface dialog , int which ) { startActivity ( new android.content.Intent ( com.inst.mobileinstitutions.ProfileActivity . this , com.inst.mobileinstitutions.HomeActivity . class ) ) ; } } ) . setNegativeButton ( android.R.string.no , new android.content.DialogInterface.OnClickListener () { public void onClick ( android.content.DialogInterface dialog , int which ) {} } ) . setIcon ( android.R.drawable.ic_dialog_alert ) . show () ; } 
@ java.lang.Override public java.lang.Object getAsObject ( javax.faces.context.FacesContext context , javax.faces.component.UIComponent component , java.lang.String value ) { java.lang.System.out . println ( "dsdsds" ) ; if ( ( value != null ) && ( ( value . trim () . length () ) > 0 ) ) { java.lang.System.out . println ( ( "GetAsObject Province: " + value ) ) ; model.Province p = servinit . getProvinces () . get ( ( ( java.lang.Integer . parseInt ( value ) ) - 1 ) ) ; java.lang.System.out . println ( p . getName () ) ; return p ; } else { return null ; } } 
@ java.lang.Override public void run () { webView . loadUrl ( ( ( ( ( ( ( ( ( ( ( ( "javascript:updateTerritory('" + ( t . getId () ) ) + "', " ) + "{color:'" ) + ( u . getColor () ) ) + "', armies:'" ) + ( t . getArmies () ) ) + "', stars:'" ) + ( u . getStars () ) ) + "', availArmies:'" ) + availArmies ) + "'})" ) ) ; } 
public static com.badlogic.gdx.graphics.g2d.TextureRegion [] [] splitSheet ( java.lang.String sprite_sheet , float rows , float cols ) { com.badlogic.gdx.graphics.Texture atlas = new com.badlogic.gdx.graphics.Texture ( sprite_sheet ) ; return com.badlogic.gdx.graphics.g2d.TextureRegion . split ( atlas , ( ( int ) ( ( atlas . getWidth () ) / rows ) ) , ( ( int ) ( ( atlas . getHeight () ) / cols ) ) ) ; } 
@ java.lang.Override protected void onDestroy () { if ( ( moPubView ) != null ) { moPubView . destroy () ; } super . onDestroy () ; if ( ( webView ) != null ) { webView . setVisibility ( View.GONE ) ; webView . removeAllViews () ; webView . destroy () ; webView = null ; } } 
@ java.lang.Override public void setupLayout () { super . setupLayout () ; org.talend.daikon.properties.presentation.Form schemaForm = org.talend.daikon.properties.presentation.Form . create ( this , Form.MAIN , "Schema" ) ; schemaForm . addRow ( widget ( schema ) . setWidgetType ( WidgetType.SCHEMA_EDITOR ) ) ; org.talend.daikon.properties.presentation.Form schemaRefForm = org.talend.daikon.properties.presentation.Form . create ( this , Form.REFERENCE , "Schema" ) ; schemaRefForm . addRow ( widget ( schema ) . setWidgetType ( WidgetType.SCHEMA_REFERENCE ) ) ; } 
private de.tobiyas.racesandclasses.translation.Translator tryPreferedTranslate ( java.lang.String tag ) throws de.tobiyas.racesandclasses.translation.exception.TranslationNotFoundException { java.lang.String translation = de.tobiyas.racesandclasses.translation.DefaultTranslationManager . readFromYAMLList ( languageConfiguration , tag ) ; if ( "" . equals ( translation ) ) { throw new de.tobiyas.racesandclasses.translation.exception.TranslationNotFoundException ( getCurrentLanguage () , tag ) ; } else { return new de.tobiyas.racesandclasses.translation.Translator ( translation ) ; } } 
public model.Payment searchPayment ( model.Payment payment ) throws exception.PaymentException { dao.PaymentDAO paymentDAO = new dao.PaymentDAO () ; if ( payment != null ) { int paymentId = payment . getPaymentId () ; payment = paymentDAO . get ( paymentId ) ; if ( payment == null ) { throw new exception.PaymentException ( payment.PAYMENT_SERVICE_CANT_BE_NULL ) ; } } else { throw new exception.PaymentException ( payment.PAYMENT_SERVICE_CANT_BE_NULL ) ; } return payment ; } 
protected void flush () { if ( ! ( shuttingDown ) ) { org.opendaylight.openflowjava.protocol.impl.core.connection.AbstractOutboundQueueManager.LOG . trace ( "Dequeuing messages to channel {}" , parent . getChannel () ) ; writeAndFlush () ; rescheduleFlush () ; } else { close () ; if ( currentQueue . finishShutdown () ) { org.opendaylight.openflowjava.protocol.impl.core.connection.AbstractOutboundQueueManager.LOG . debug ( "Channel {} shutdown complete" , parent . getChannel () ) ; } else { org.opendaylight.openflowjava.protocol.impl.core.connection.AbstractOutboundQueueManager.LOG . trace ( "Channel {} current queue not completely flushed yet" , parent . getChannel () ) ; rescheduleFlush () ; } } } 
public org.msgpack.value.Value visit ( java.lang.String rootPath , org.msgpack.value.Value value ) { if ( ! ( shouldVisit ( rootPath ) ) ) { return value ; } if ( value . isArrayValue () ) { return visitArray ( rootPath , value . asArrayValue () ) ; } else if ( value . isMapValue () ) { return visitMap ( rootPath , value . asMapValue () ) ; } else { return value ; } } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setRetainInstance ( true ) ; ( ( me.zaicheng.app.popularmovies.ui.base.BaseActivity ) ( getActivity () ) ) . activityComponent () . inject ( this ) ; if ( getArguments () . containsKey ( me.zaicheng.app.popularmovies.ui.detail.DetailFragment.ARG_ITEM_ID ) ) { movieId = getArguments () . getLong ( me.zaicheng.app.popularmovies.ui.detail.DetailFragment.ARG_ITEM_ID ) ; android.util.Log . d ( me.zaicheng.app.popularmovies.ui.detail.DetailFragment.TAG , ( "onCreate: movie id = " + ( movieId ) ) ) ; } } 
public void decrementHealth ( int value ) { int realHealthDamage = mShield . decStrength ( ( ( ( realHealth ) + ( mShield . getStrength () ) ) - value ) ) ; if ( realHealthDamage != 0 ) { realHealth -= realHealthDamage ; com.taserlag.lasertag.activity.FPSActivity . updateHealthText () ; } } 
private android.view.View createViewByInflaterIfNull ( android.view.View viewOrNull , java.lang.String name , android.util.AttributeSet attrs ) { if ( viewOrNull != null ) return viewOrNull ; java.lang.String viewFullName = viewNameResolver . getViewNameFromLayoutTag ( name ) ; try { java.lang.System.out . println ( ( "viewFullName: " + viewFullName ) ) ; return layoutInflater . createView ( viewFullName , null , attrs ) ; } catch ( java.lang.ClassNotFoundException e ) { throw new java.lang.RuntimeException ( e ) ; } } 
public static void toyAsyncNstep () { org.deeplearning4j.rl4j.util.DataManager manager = new org.deeplearning4j.rl4j.util.DataManager () ; org.deeplearning4j.rl4j.mdp.toy.SimpleToy mdp = new org.deeplearning4j.rl4j.mdp.toy.SimpleToy ( 20 ) ; org.deeplearning4j.rl4j.learning.async.nstep.discrete.AsyncNStepQLearningDiscreteDense dql = new org.deeplearning4j.rl4j.learning.async.nstep.discrete.AsyncNStepQLearningDiscreteDense < org.deeplearning4j.rl4j.mdp.toy.SimpleToyState > ( mdp , org.deeplearning4j.rl4j.Toy.TOY_NET , org.deeplearning4j.rl4j.Toy.TOY_ASYNC_QL , manager ) ; mdp . setFetchable ( dql ) ; dql . train () ; mdp . close () ; } 
@ java.lang.Override public java.lang.Iterable < K > keys () { java.util.List < K > aux = new java.util.ArrayList <> () ; for ( int i = 0 ; i < ( keys.length ) ; i ++ ) { aux . add ( keys [ i ] ) ; } return aux ; } 
private void updateFuelLevel ( double fuelLevel ) { java.lang.System.out . println ( ( "fuelLevel: " + ( java.lang.String . valueOf ( fuelLevel ) ) ) ) ; if ( validFuelLevelValue ( fuelLevel ) ) { if ( ( this . fuelLevel ) != fuelLevel ) { this . fuelLevel = fuelLevel ; fuelLevelUpdated = true ; updateFuelLeftRectangle () ; } } else { throw new java.lang.IllegalArgumentException ( "Invalid fuelLevelValue" ) ; } } 
@ java.lang.Override public void replaceCurrentFragment ( android.app.Fragment newFragment , boolean addToStack ) { android.app.FragmentTransaction fragmentTransaction = getFragmentManager () . beginTransaction () ; fragmentTransaction . replace ( R.id.fragmentContainer , new android.app.Fragment () ) ; if ( addToStack ) { fragmentTransaction . addToBackStack ( null ) ; } fragmentTransaction . commit () ; } 
public void create () { gsm = new com.haxlabs.maxhax.handlers.GameStateManager ( this ) ; sb = new com.badlogic.gdx.graphics.g2d.SpriteBatch () ; mainCam = new com.badlogic.gdx.graphics.OrthographicCamera () ; mainCam . setToOrtho ( false , com.haxlabs.maxhax.main.MaxHaxGame.virtual_width , com.haxlabs.maxhax.main.MaxHaxGame.virtual_height ) ; hudCam = new com.badlogic.gdx.graphics.OrthographicCamera () ; hudCam . setToOrtho ( false , com.haxlabs.maxhax.main.MaxHaxGame.virtual_width , com.haxlabs.maxhax.main.MaxHaxGame.virtual_height ) ; } 
public void showTopError ( boolean show ) { if ( ( ( mShowTopError ) != show ) && ( mErrorViewsCreator . hasTopErrorView () ) ) { mShowTopError = show ; if ( show ) { com.livae.android.loading.RecyclerAdapter . notifyItemInserted ( getTopErrorPosition () ) ; } else { com.livae.android.loading.RecyclerAdapter . notifyItemRemoved ( getTopErrorPosition () ) ; } } } 
@ java.lang.Override public org.apache.cassandra.io.util.ReaderCache.Buffer load ( org.apache.cassandra.io.util.ReaderCache.Key key ) throws java.lang.Exception { org.apache.cassandra.io.util.BufferlessRebufferer rebufferer = key.file . cacheRebufferer () ; synchronized ( rebufferer ) { java.nio.ByteBuffer buffer = rebufferer . rebuffer ( key.position , org.apache.cassandra.utils.memory.BufferPool . get ( key.file . chunkSize () ) ) ; assert buffer != null ; return new org.apache.cassandra.io.util.ReaderCache.Buffer ( buffer , key.position ) . reference () ; } } 
@ java.lang.Override void onUpdated ( org.opendaylight.vtn.manager.internal.vnode.VTenantChange ectx , org.slf4j.Logger logger , org.opendaylight.vtn.manager.internal.util.ChangedData < ? > data ) { org.opendaylight.vtn.manager.internal.util.ChangedData < org.opendaylight.yang.gen.v1.urn.opendaylight.vtn.vbridge.rev150907.vtn.vbridge.info.VbridgeConfig > cdata = cast ( data ) ; org.opendaylight.vtn.manager.internal.util.vnode.VBridgeIdentifier ident = getVBridgeIdentifier ( cdata ) ; org.opendaylight.yang.gen.v1.urn.opendaylight.vtn.vbridge.rev150907.vtn.vbridge.info.VbridgeConfig vbrc = cdata . getValue () ; if ( logger . isInfoEnabled () ) { org.opendaylight.yang.gen.v1.urn.opendaylight.vtn.vbridge.rev150907.vtn.vbridge.info.VbridgeConfig old = cdata . getOldValue () ; logger . info ( "{}: vBridge has been changed: old={{}}, new={{}}" , ident , toString ( vbrc ) , toString ( old ) ) ; } ectx . updateBridge ( ident , vbrc ) ; } 
private static void updateStructure ( Structure structure , java.util.HashMap < Node , Node > parent , Node plc , Node temp ) { if ( ( ! ( plc.isVisited ) ) && ( ! ( plc.isWall ) ) ) { parent . put ( plc , temp ) ; plc.isVisited = true ; plc.traveled = ( temp.traveled ) + 1 ; structure . push ( plc ) ; } } 
public void applyMove ( int [] [] move ) { if ( ( ( ( move.length ) != 2 ) || ( ( move [ 0 ] . length ) != 2 ) ) || ( ( move [ 1 ] . length ) != 2 ) ) { throw new java.lang.IllegalArgumentException ( "Move has invalid dimensions." ) ; } setBoard ( move [ 0 ] [ 0 ] , move [ 0 ] [ 1 ] ) ; addMarker ( move [ 1 ] [ 0 ] , move [ 1 ] [ 1 ] ) ; } 
private int readWithCharAt ( char [] array , int offset , int length ) { int limitedLength = limitLength ( length ) ; for ( int i = 0 ; i < limitedLength ; i ++ ) { array [ ( offset + i ) ] = charSequence . charAt ( ( ( idx ) ++ ) ) ; } return limitedLength == 0 ? - 1 : limitedLength ; } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; if ( ( savedInstanceState == null ) || ( ! ( savedInstanceState . containsKey ( "movie" ) ) ) ) { movieList = new java.util.ArrayList < app.com.beyond_paper.popularmovies.MovieList > ( java.util.Arrays . asList ( mMovieLists ) ) ; } else { movieList = savedInstanceState . getParcelableArrayList ( "movie" ) ; } setHasOptionsMenu ( true ) ; } 
public boolean isNonZero () { return ( ( ( ( this . t ) != 0.0F ) || ( ( this . r ) != 0.0F ) ) || ( ( this . l ) != 0.0F ) ) || ( ( this . r ) != 0.0F ) ; } 
public static void invert ( ij.process.ImageProcessor ip ) { float [] cTable = ip . getCalibrationTable () ; ip = ip . duplicate () ; if ( cTable == null ) { ip . invert () ; } else { float [] invertedCTable = new float [ cTable.length ] ; for ( int i = ( cTable.length ) - 1 ; i >= 0 ; i -- ) invertedCTable [ i ] = - ( cTable [ i ] ) ; ip . setCalibrationTable ( invertedCTable ) ; } } 
@ java.lang.Override public void store ( com.navercorp.pinpoint.profiler.context.storage.Span span ) { final java.util.List < com.navercorp.pinpoint.profiler.context.storage.SpanEvent > storage = clearBuffer () ; if ( com.navercorp.pinpoint.common.util.CollectionUtils . hasLength ( storage ) ) { span = spanPostProcessor . postProcess ( span , storage ) ; } dataSender . send ( span ) ; if ( com.navercorp.pinpoint.profiler.context.storage.BufferedStorage.isDebug ) { com.navercorp.pinpoint.profiler.context.storage.BufferedStorage.logger . debug ( "[BufferedStorage] Flush span {}" , span ) ; } } 
static org.apache.parquet.schema.MessageType fromParquetSchema ( java.util.List < org.apache.parquet.format.SchemaElement > schema ) { java.util.Iterator < org.apache.parquet.format.SchemaElement > iterator = schema . iterator () ; org.apache.parquet.format.SchemaElement root = iterator . next () ; org.apache.parquet.schema.Types.MessageTypeBuilder builder = org.apache.parquet.schema.Types . buildMessage () ; org.apache.parquet.format.converter.ParquetMetadataConverter . buildChildren ( builder , iterator , root . getNum_children () ) ; return builder . named ( root.name ) ; } 
@ java.lang.Override public java.lang.String [] createSchema ( java.util.Map < java.lang.String , java.lang.Object > settings ) { java.lang.String [] script = getConfig ( settings ) . generateSchemaCreationScript ( getDialectInternal () ) ; java.lang.String [] pre = getPreSchemaScript () ; java.lang.String [] post = getPostSchemaScript () ; script = ( pre == null ) ? post == null ? script : concat ( script , post ) : post == null ? concat ( pre , script ) : concat ( pre , script , post ) ; return checkCreateSchema ( script ) ; } 
private InseparableModule.RemoveInfo replaceInternal ( int start , int end , java.lang.CharSequence tb , int tbstart , int tbend ) { com.github.kubatatami.richedittext.modules.InseparableModule.RemoveInfo info = com.github.kubatatami.richedittext.modules.InseparableModule . getRemoveInfo ( this , start , end ) ; super . replace ( info.start , info.end , tb , tbstart , tbend ) ; return info ; } 
public java.util.Map < java.lang.String , java.lang.Integer > getPrimaryThreadCounts () { final java.util.Map < java.lang.String , java.lang.Integer > counts = new java.util.LinkedHashMap < java.lang.String , java.lang.Integer > () ; final int length = keys.length ; for ( int i = 0 ; i < length ; i ++ ) { counts . put ( keys [ i ] , ptCounts [ i ] ) ; } return counts ; } 
@ org.junit.Test public void testAddCustomer () { try { vu.fs.cs.swt.beans.Customer c = new vu.fs.cs.swt.beans.Customer ( "John" , "Doe" , "johnny" , "awesomePassword" ) ; long i = vu.fs.cs.swt.systemclasses.System.Customers . add ( c ) ; vu.fs.cs.swt.beans.Customer equal = vu.fs.cs.swt.systemclasses.System.Customers . find ( ( ( int ) ( i ) ) ) ; assertEquals ( c . getAccountNumber () , equal . getAccountNumber () ) ; vu.fs.cs.swt.systemclasses.System.Customers . delete ( ( ( int ) ( i ) ) ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } 
@ java.lang.Override protected void bindView ( android.view.View view ) { super . bindView ( view ) ; mGroupMembersAdapter = new fr.sims.coachingproject.ui.adapter.GroupMembersAdapter ( getContext () , mGroupId ) ; mGroupMembersList = ( ( android.support.v7.widget.RecyclerView ) ( view . findViewById ( R.id.group_members_list ) ) ) ; mGroupMembersList . setLayoutManager ( new android.support.v7.widget.LinearLayoutManager ( getActivity () ) ) ; mGroupMembersList . setAdapter ( mGroupMembersAdapter ) ; mGroupMembersAdapter . setOnUserClickListener ( this ) ; } 
@ java.lang.Override public void paralelupdate ( org.newdawn.slick.GameContainer container , int delta , com.valarion.gameengine.core.tiled.SubTiledMap map ) throws org.newdawn.slick.SlickException { elapsed += delta ; com.valarion.gameengine.events.rpgmaker.FlowEventInterface event = getEvent () ; if ( event instanceof com.valarion.gameengine.events.rpgmaker.GameEvent ) { ( ( com.valarion.gameengine.events.rpgmaker.GameEvent ) ( event ) ) . getActive () . setRendersprite ( ( ( ( ( elapsed ) % ( period ) ) % 2 ) == 0 ) ) ; } } 
@ org.junit.Test public void testGetDeck () { java.lang.System.out . println ( "getDeck" ) ; Mighty_Cards.Player testPlayer = new Mighty_Cards.Player ( "testName" , "testPass" ) ; Mighty_Cards.Match testMatch = new Mighty_Cards.Match ( testPlayer ) ; Mighty_Cards.Deck testDeck = new Mighty_Cards.Deck () ; Mighty_Cards.Hero testHero = new Mighty_Cards.Hero ( testMatch , testPlayer , testDeck ) ; Mighty_Cards.Deck expResult = null ; Mighty_Cards.Deck result = testHero . getDeck () ; assertEquals ( expResult , result ) ; } 
public java.lang.String pop ( ) throws java.lang.IndexOutOfBoundsException { if ( isEmpty () ) { throw new java.lang.IndexOutOfBoundsException () ; } else if ( ( size ) <= ( ( arr.length ) / 4 ) ) { resize ( ( ( size ) / 2 ) ) ; } java.lang.String item = arr [ ( -- ( size ) ) ] ; arr [ size ] = null ; return item ; } 
public void index ( java.lang.String data ) throws java.lang.ClassNotFoundException , java.lang.IllegalAccessException , java.lang.InstantiationException , java.lang.NoSuchMethodException , java.lang.reflect.InvocationTargetException , org.opencb.cellbase.core.loader.LoaderException { org.opencb.cellbase.core.loader.CellBaseLoader cellBaseLoader = ( ( org.opencb.cellbase.core.loader.CellBaseLoader ) ( java.lang.Class . forName ( loader ) . getConstructor ( java.util.concurrent.BlockingQueue . class , java.lang.String . class , java.lang.String . class , java.util.Map . class , org.opencb.cellbase.core.CellBaseConfiguration . class ) . newInstance ( blockingQueue , data , database , cellBaseConfiguration ) ) ) ; cellBaseLoader . createIndex ( data ) ; } 
public boolean dismissRateDialogIfNecessary ( ) throws java.lang.Exception { com.android.uiautomator.core.UiSelector selector = new com.android.uiautomator.core.UiSelector () ; com.android.uiautomator.core.UiObject closeButton = new com.android.uiautomator.core.UiObject ( selector . text ( "NOT NOW" ) ) ; if ( closeButton . waitForExists ( java.util.concurrent.TimeUnit.SECONDS . toMillis ( com.arm.wlauto.uiauto.antutu.UiAutomation.initialTimeoutSeconds ) ) ) { closeButton . click () ; sleep ( 1 ) ; return true ; } else { return false ; } } 
@ java.lang.Override public void onDraw ( android.graphics.Canvas canvas , android.graphics.Rect blockRect , android.graphics.Rect contentRect ) { updatePaint () ; drawBackGround ( canvas , blockRect , contentRect ) ; drawBorder ( canvas , blockRect , contentRect ) ; drawFlash ( canvas , contentRect ) ; java.lang.String text = getText () ; if ( android.text.TextUtils . isEmpty ( text ) ) { drawDefaultText ( canvas , contentRect ) ; } else { drawText ( canvas , getText () , contentRect , hasBottomLine () ) ; } } 
public synchronized void setPostPosition ( android.content.Context context , boolean isEnabled ) { notifyPostService ( context ) ; setChangeStatus ( this . postPosition , isEnabled ) ; this . postPosition = isEnabled ; com.joylabs.mclubtracker.utils.Storage . saveInt ( context , com.joylabs.mclubtracker.transactions.user.UserInfo.POST_POSITION_KEY , ( postPosition ? 1 : - 1 ) ) ; notifyObservers () ; } 
public com.questdb.ql.Record get ( com.questdb.ql.Record master ) { com.questdb.ql.impl.map.MapValues values = getByMaster ( master ) ; if ( ( values == null ) || ( ( values . getByte ( 1 ) ) == 1 ) ) { return null ; } values . putByte ( 1 , ( ( byte ) ( 1 ) ) ) ; return slaveCursor . recordAt ( values . getLong ( 0 ) ) ; } 
private java.util.ArrayList < GenImage.CandidateImage > select () { final java.util.ArrayList < GenImage.CandidateImage > newCandidateImages = new java.util.ArrayList < GenImage.CandidateImage > ( this . populationSize ) ; @ java.lang.SuppressWarnings ( value = "NumericCastThatLosesPrecision" ) final int populationSurvivors = ( ( int ) ( ( this . populationSize ) * ( this . retentionRate ) ) ) ; while ( ( newCandidateImages . size () ) < populationSurvivors ) { newCandidateImages . add ( GenImage.Application . tournamentSelect ( this . candidateImages , this . tournamentSize ) ) ; } return newCandidateImages ; } 
@ java.lang.Override public void revealAgar () { int revealedAgar = 0 ; for ( com.golden.gamedev.object.Sprite agarSprite : agarGroup . getSprites () ) { if ( ! ( agarSprite . isActive () ) ) { agarSprite . setActive ( true ) ; revealedAgar ++ ; } if ( revealedAgar == 10 ) { break; } } } 
@ sample.controllers.RequestMapping ( method = RequestMethod.DELETE , produces = "application/json" ) public org.springframework.http.ResponseEntity exit ( javax.servlet.http.HttpSession httpSession ) { if ( ( httpSession . getAttribute ( "userId" ) ) == null ) { return org.springframework.http.ResponseEntity . status ( HttpStatus.UNAUTHORIZED ) . body ( new sample.models.Status ( sample.models.Status.ERROR_UNAUTHORIZED , "user not authorized" ) ) ; } httpSession . removeAttribute ( "userId" ) ; return org.springframework.http.ResponseEntity . ok ( new sample.models.Status ( sample.models.Status.OK , "success exited" ) ) ; } 
private void spawnRocks () { com.badlogic.gdx.math.Rectangle rock = new com.badlogic.gdx.math.Rectangle () ; rock.x = com.badlogic.gdx.math.MathUtils . random ( 0 , ( ( Gdx.graphics . getWidth () ) - 64 ) ) ; rock.y = Gdx.graphics . getHeight () ; rock.width = rockpicture . getWidth () ; rock.height = rockpicture . getHeight () ; rocksarray . add ( rock ) ; lastRockTime = com.badlogic.gdx.utils.TimeUtils . nanoTime () ; } 
public int getActualItemViewType ( int position ) { final android.database.Cursor cursor = ( ( android.database.Cursor ) ( super . getItem ( position ) ) ) ; switch ( cursor . getString ( mIndices.type ) ) { case Suggestions.Search.TYPE_SAVED_SEARCH : { return org.mariotaku.twidere.activity.support.QuickSearchBarActivity.SuggestionsAdapter.VIEW_TYPE_SAVED_SEARCH ; } case Suggestions.Search.TYPE_SCREEN_NAME : { return org.mariotaku.twidere.activity.support.QuickSearchBarActivity.SuggestionsAdapter.VIEW_TYPE_USER_SCREEN_NAME ; } case Suggestions.Search.TYPE_SEARCH_HISTORY : { return org.mariotaku.twidere.activity.support.QuickSearchBarActivity.SuggestionsAdapter.VIEW_TYPE_SEARCH_HISTORY ; } case Suggestions.Search.TYPE_USER : { return org.mariotaku.twidere.activity.support.QuickSearchBarActivity.SuggestionsAdapter.VIEW_TYPE_USER_SUGGESTION_ITEM ; } } return IGNORE_ITEM_VIEW_TYPE ; } 
private static int getTotalWeight ( int [] [] matrix ) { int weight = 0 ; for ( int x = 0 ; x < ( matrix.length ) ; x ++ ) { YAxis : for ( int y = 0 ; y < ( matrix.length ) ; y ++ ) { int w = matrix [ x ] [ y ] ; if ( w == ( - 1 ) ) continue YAxis ; weight = weight + w ; } } return weight ; } 
@ org.junit.Test public void createDocumentReferenceWithDefaultHint ( ) throws java.lang.Exception { org.mockito.Mockito . when ( this . componentManager . getInstance ( DocumentReferenceResolver.TYPE_REFERENCE , "current" ) ) . thenReturn ( this . resolver ) ; org.xwiki.model.reference.DocumentReference reference = new org.xwiki.model.reference.DocumentReference ( "wiki" , "space" , "page" ) ; org.mockito.Mockito . when ( this . resolver . resolve ( reference ) ) . thenReturn ( reference ) ; org.junit.Assert . assertEquals ( reference , this . service . createDocumentReference ( "wiki" , "space" , "page" ) ) ; } 
public boolean isDisplayValid ( java.lang.String [] arguments ) { if ( ( arguments.length ) == 0 ) { return true ; } else if ( ( arguments.length ) == 2 ) { return ( arguments [ 0 ] . equals ( "by" ) ) && ( ! ( commandList_ . getDisplayArgumentList () . contains ( arguments [ 1 ] ) ) ) ; } return false ; } 
private static java.io.File getXMLTemplate ( pcgen.facade.core.CharacterFacade character ) { java.io.File template = org.apache.commons.io.FileUtils . getFile ( pcgen.system.ConfigurationSettings . getSystemsDir () , "gameModes" , character . getDataSet () . getGameMode () . getName () , "base.xml.ftl" ) ; if ( ! ( template . exists () ) ) { template = new java.io.File ( pcgen.system.ConfigurationSettings . getOutputSheetsDir () , "base.xml.ftl" ) ; } return template ; } 
private static net.minecraft.item.ItemStack wrapSpecific ( nova.core.recipes.crafting.SpecificItemIngredient ingredient ) { for ( nova.core.item.Item item : ingredient . getExampleItems () . get () ) { return Game.instance.nativeManager . toNative ( java.util.Optional . of ( item . factory () . makeItem () ) ) ; } throw new java.lang.AssertionError ( "this can't be!" ) ; } 
public double getAverageDeliveryTime ( java.lang.String delDes ) { int totNum = 0 ; double avTime = 0 ; for ( main.logic.MailDelivery m : getMailEvents () ) { if ( m . shortDes () . equals ( delDes ) ) { totNum ++ ; avTime += m . getTimeTaken () ; } } controller . setAverageDeliveryTime ( ( avTime / totNum ) ) ; return avTime / totNum ; } 
@ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { if ( ( ( movies ) != null ) && ( ! ( movies . isEmpty () ) ) ) { outState . putParcelableArrayList ( com.udacity.jcmb.popularmovies.fragments.MoviesFragment.MOVIES , movies ) ; } if ( ( position ) != ( - 1 ) ) { outState . putInt ( com.udacity.jcmb.popularmovies.fragments.MoviesFragment.POSITION , position ) ; } super . onSaveInstanceState ( outState ) ; } 
public void setMedia ( java.io.File file ) { try { mediaPlayer . setDataSource ( context , android.net.Uri . fromFile ( file ) ) ; mediaPlayer . prepareAsync () ; seekBar . setMax ( mediaPlayer . getDuration () ) ; timber.log.Timber . i ( "Preparing" ) ; } catch ( java.io.IOException e ) { timber.log.Timber . e ( e ) ; } } 
private boolean isValidVrstaKnjige () { if ( ( vrstaKnjige ) == null ) { java.lang.String vk = txtVrstaKnjige . getText () ; if ( vrstaKnjigeServiceBean . existsVrstaKnjige ( vk ) ) { message = "The entered book type already exists!" ; return false ; } if ( ( vk . equals ( null ) ) || ( vk . equals ( "" ) ) ) { txtVrstaKnjige . setBackground ( java.awt.Color.LIGHT_GRAY ) ; message = "Book type title is missing!" ; return false ; } } return true ; } 
private void processIdent ( com.puppycrawl.tools.checkstyle.api.DetailAST ast ) { final int parentType = ast . getParent () . getType () ; switch ( parentType ) { case com.puppycrawl.tools.checkstyle.api.TokenTypes.ANNOTATION_MEMBER_VALUE_PAIR : case com.puppycrawl.tools.checkstyle.api.TokenTypes.ANNOTATION : case com.puppycrawl.tools.checkstyle.api.TokenTypes.ANNOTATION_FIELD_DEF : break; case com.puppycrawl.tools.checkstyle.api.TokenTypes.METHOD_CALL : if ( ( checkMethods ) && ( isClassMethod ( ast . getText () ) ) ) { log ( ast , com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheck.MSG_METHOD , ast . getText () ) ; } break; default: if ( checkFields ) { processField ( ast , parentType ) ; } break; } } 
@ java.lang.Override public void start ( javafx.stage.Stage primaryStage ) throws java.lang.Exception { this . primaryStage = primaryStage ; com.github.fishio.FishIO.instance = this ; primaryStage . setTitle ( "Fish.io" ) ; loadScreen ( "view/splashScreen.fxml" , 0 ) ; primaryStage . setWidth ( 1280.0 ) ; primaryStage . setHeight ( 720.0 ) ; primaryStage . show () ; } 
public void updatePeerList ( android.net.wifi.p2p.WifiP2pDeviceList peerList ) { peers . clear () ; if ( peerList != null ) { android.util.Log . d ( com.group.cs.wi_free.DeviceListFragment.TAG , "updatePeerList valid" ) ; peers . addAll ( peerList . getDeviceList () ) ; } peerListAdapter . clear () ; peerListAdapter . addAll ( peers ) ; peerListAdapter . notifyDataSetChanged () ; } 
public void SetZipLineServoPosition ( double servoPositionDesired ) { double servoPositionActual = com.qualcomm.robotcore.util.Range . clip ( servoPositionDesired , 0 , 1 ) ; if ( ( ZipLineServo ) != null ) { try { ZipLineServo . setPosition ( servoPositionActual ) ; telemetry . addData ( "02" , ( "servoPositionActual: " + servoPositionDesired ) ) ; } catch ( java.lang.Exception p_exeception ) { WarningMessage ( "ZipLineServo" ) ; com.qualcomm.ftccommon.DbgLog . msg ( p_exeception . getLocalizedMessage () ) ; ZipLineServo = null ; } } } 
private teammates.test.pageobjects.InstructorFeedbackResultsPage loginToInstructorFeedbackResultsPage ( java.lang.String instructorName , java.lang.String fsName ) { teammates.common.util.AppUrl resultsUrl = createUrl ( Const.ActionURIs.INSTRUCTOR_FEEDBACK_RESULTS_PAGE ) . withUserId ( testData.instructors . get ( instructorName ) . googleId ) . withCourseId ( testData.feedbackSessions . get ( fsName ) . getCourseId () ) . withSessionName ( testData.feedbackSessions . get ( fsName ) . getFeedbackSessionName () ) ; teammates.test.pageobjects.InstructorFeedbackResultsPage resultsPage = loginAdminToPage ( resultsUrl , teammates.test.pageobjects.InstructorFeedbackResultsPage . class ) ; return resultsPage ; } 
@ java.lang.Override public javax.ws.rs.core.Response viewWorkSummary ( java.lang.String orcid , java.lang.Long putCode ) { orcidSecurityManager . checkPermissions ( ScopePathType.ORCID_WORKS_READ_LIMITED , orcid ) ; org.orcid.jaxb.model.record.summary_rc2.WorkSummary ws = workManager . getWorkSummary ( orcid , putCode ) ; org.orcid.api.common.util.ActivityUtils . cleanEmptyFields ( ws ) ; orcidSecurityManager . checkVisibility ( ws ) ; org.orcid.api.common.util.ActivityUtils . setPathToActivity ( ws , orcid ) ; return javax.ws.rs.core.Response . ok ( ws ) . build () ; } 
@ java.lang.Override public Message.Request request () { com.datastax.driver.core.Message.Request request = callback . request () ; if ( ( ( retryConsistencyLevel ) != null ) && ( ( retryConsistencyLevel ) != ( request . consistency () ) ) ) request = manager . makeRequestMessage ( statement , retryConsistencyLevel , request . consistency () , request . pagingState () ) ; return request ; } 
public void changeCompanyStatus ( @ lombok.NonNull final hu.schonherz.project.admin.service.api.vo.CompanyVo companyVo ) { companyServiceRemote . changeStatus ( companyVo . getId () ) ; init () ; javax.faces.context.FacesContext context = javax.faces.context.FacesContext . getCurrentInstance () ; context . addMessage ( null , new javax.faces.application.FacesMessage ( localeManagerBean . localize ( hu.schonherz.project.admin.web.view.CompaniesView.CHANGING_SUCCESS ) , ( ( ( companyVo . isActive () ? localeManagerBean . localize ( hu.schonherz.project.admin.web.view.CompaniesView.INACTIVATE_SUCCESS ) : localeManagerBean . localize ( hu.schonherz.project.admin.web.view.CompaniesView.ACTIVATE_SUCCESS ) ) + ( hu.schonherz.project.admin.web.view.CompaniesView.SPACE ) ) + ( companyVo . getCompanyName () ) ) ) ) ; } 
public com.google.gson.JsonElement getRawJson ( java.lang.String url ) throws java.io.IOException { if ( ( this . mockResponse ) != null ) { return new com.google.gson.JsonParser () . parse ( this . mockResponse ) ; } else { return new com.google.gson.JsonParser () . parse ( invokeGET ( url ) . parseAsString () ) ; } } 
@ cucumber.api.java.After ( order = 10 ) public void zkConnectionTeardown ( ) throws java.lang.Exception { commonspec . getLogger () . debug ( "Closing zookeeper connection" ) ; if ( ! ( "" . equals ( java.lang.System . getProperty ( "ZOOKEEPER_HOSTS" , "" ) ) ) ) { if ( commonspec . getZookeeperSecClient () . isConnected () ) { commonspec . getZookeeperSecClient () . disconnect () ; } } } 
@ java.lang.Override public java.lang.Void call ( ) throws java.lang.Exception { com.orientechnologies.orient.core.storage.impl.local.paginated.wal.OLogSequenceNumber minDirtyLSN = getEarliestDirtyLSN () ; java.util.Map.Entry < com.orientechnologies.orient.core.storage.impl.local.paginated.wal.OLogSequenceNumber , com.orientechnologies.orient.core.storage.cache.local.OWOWCache.PageKey > firstEntry ; while ( ( minDirtyLSN != null ) && ( ( minDirtyLSN . getSegment () ) > ( segmentId ) ) ) { flushWriteCacheFromMinLSN ( 1 ) ; firstEntry = pagesByLSN . firstEntry () ; if ( firstEntry != null ) minDirtyLSN = firstEntry . getKey () ; else minDirtyLSN = null ; } return null ; } 
public static void main ( java.lang.String [] args ) { RandomizedQueue < java.lang.Integer > rq = new RandomizedQueue () ; rq . enqueue ( 18 ) ; java.lang.System.out . println ( rq . size () ) ; rq . enqueue ( 41 ) ; rq . enqueue ( 11 ) ; java.lang.System.out . println ( rq . dequeue () ) ; java.lang.System.out . println ( rq . dequeue () ) ; rq . enqueue ( 46 ) ; } 
public void updateNotification ( monakhv.samlib.service.AuthorUpdateProgress progress ) { if ( ( mProgressNotification ) == null ) { mProgressNotification = new monakhv.android.samlib.service.ProgressNotification ( mSettingsHelper , "text" ) ; } mProgressNotification . updateProgress ( progress . getTotal () , progress . getCurrent () , progress . getName () ) ; } 
public int getNextBuildNumber ( com.groupon.jenkins.dynamic.build.repository.DynamicProject project ) { com.groupon.jenkins.dynamic.build.repository.BuildNumberCounter seq = getDatastore () . createQuery ( com.groupon.jenkins.dynamic.build.repository.BuildNumberCounter . class ) . field ( "key" ) . equal ( project . getFullName () ) . get () ; if ( seq == null ) { return 1 ; } return seq . getCounter () ; } 
private void replaceInScene ( java.util.ArrayList < java.lang.String > items ) { java.lang.System.out . println ( "Replacing..." ) ; java.lang.System.out . println ( ( "Replacing: " + ( findSceneObject ( activeScene , items . get ( 0 ) ) . getName () ) ) ) ; java.lang.System.out . println ( ( " with " + ( findGameObject ( allGameObjects , items . get ( 1 ) ) . getName () ) ) ) ; activeScene . replaceObject ( findSceneObject ( activeScene , items . get ( 0 ) ) , findGameObject ( allGameObjects , items . get ( 1 ) ) ) ; } 
public boolean triThreat ( int [] s , int h ) { return ( ( ( s [ 0 ] ) == 0 ) && ( ( s [ 5 ] ) == 0 ) ) && ( ( ( ( ( s [ 1 ] ) + ( s [ 2 ] ) ) + ( s [ 3 ] ) ) + ( s [ 4 ] ) ) == ( 3 * h ) ) ; } 
public java.lang.String generateDirectory () { java.lang.String SALTCHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmn1234567890" ; java.lang.StringBuilder salt = new java.lang.StringBuilder () ; java.util.Random rnd = new java.util.Random () ; while ( ( salt . length () ) < ( tdl.auth.linkgenerator.Page.KEY_LENGTH ) ) { int index = ( ( int ) ( ( rnd . nextFloat () ) * ( SALTCHARS . length () ) ) ) ; salt . append ( SALTCHARS . charAt ( index ) ) ; } java.lang.String saltStr = salt . toString () ; return saltStr ; } 
@ java.lang.Override public void run () { super . run () ; android.util.Log . wtf ( "wtf" , "sss" ) ; currentMovie = getArguments () . getParcelable ( "movie" ) ; android.util.Log . wtf ( "wtf" , "xxx" ) ; new android.os.Handler ( android.os.Looper . getMainLooper () ) . post ( new java.lang.Runnable () { @ java.lang.Override public void run () { progressDialog . dismiss () ; init () ; } } ) ; } 
@ java.lang.Override public java.lang.String getMusicEditorState () { java.lang.String state = "" ; int lengthToPadNotes = java.lang.String . valueOf ( song . getLength () ) . length () ; state += getEditorStateNoteRow ( lengthToPadNotes ) ; for ( int i = 0 ; i < ( song . getLength () ) ; i ++ ) { state += java.lang.String . format ( ( ( "%1$" + ( java.lang.String . valueOf ( lengthToPadNotes ) ) ) + "d" ) , i ) ; state += ( song . beatRowNotesToString ( i ) ) + "\n" ; } return state ; } 
@ java.lang.Override public boolean onQueryTextSubmit ( java.lang.String query ) { searchView . clearFocus () ; com.twitter.sdk.android.tweetui.SearchTimeline timeline = new com.twitter.sdk.android.tweetui.SearchTimeline.Builder () . query ( query ) . build () ; com.twitter.sdk.android.tweetui.TweetTimelineListAdapter adapter = new com.twitter.sdk.android.tweetui.TweetTimelineListAdapter.Builder ( this ) . setTimeline ( timeline ) . build () ; binding.list . setAdapter ( adapter ) ; return false ; } 
public static void main ( java.lang.String [] args ) { java.lang.System.out . println ( "Welcome to TextExcel!\n" ) ; java.lang.System.out . println ( "Enter a command: " ) ; Excel.Spreadsheet sheet = new Excel.Spreadsheet () ; java.util.Scanner userInput = new java.util.Scanner ( java.lang.System.in ) ; java.lang.String input = userInput . nextLine () ; while ( ! ( input . equalsIgnoreCase ( "exit" ) ) ) { sheet . processCommand ( input ) ; java.lang.System.out . println () ; java.lang.System.out . println ( "Enter a command: " ) ; input = userInput . next () ; } java.lang.System.out . println ( "Farewell!" ) ; userInput . close () ; } 
public static org.json.JSONObject getSqlQueries () { java.io.File queries = db.shared.utils.CommonUtils . getResourceFile ( "queries.json" ) ; org.json.JSONObject jsonObject = null ; try { java.lang.String jsonTxt = db.framework.utils.Utils . readTextFile ( queries ) ; jsonObject = new org.json.JSONObject ( jsonTxt ) ; } catch ( java.io.IOException | org.json.JSONException e ) { e . printStackTrace () ; } return jsonObject ; } 
@ java.lang.Override public void setTrapAddress ( java.net.InetAddress trapAddress ) { java.lang.String ipAddress = org.opennms.core.utils.InetAddressUtils . str ( trapAddress ) ; m_eventBuilder . setSnmpHost ( ipAddress ) ; m_eventBuilder . setInterface ( trapAddress ) ; long nodeId = m_trapdIpMgr . getNodeId ( ipAddress ) ; if ( nodeId != ( - 1 ) ) { m_eventBuilder . setNodeid ( nodeId ) ; } } 
public void startInteract ( com.sidescroller.player.Player player ) { if ( isActivated ) { player . setLeftKey ( false ) ; player . setRightKey ( false ) ; player . setUpKey ( false ) ; leftKey = player . getLeftKey () ; rightKey = player . getRightKey () ; } else { player . setLeftKey ( true ) ; player . setRightKey ( true ) ; player . setUpKey ( true ) ; leftKey = Input.Keys.UNKNOWN ; rightKey = Input.Keys.UNKNOWN ; } isActivated = ! ( isActivated ) ; } 
private void mapContext ( alien4cloud.plugin.ManagedPlugin managedPlugin ) { org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping mapper = new org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping () ; mapper . setApplicationContext ( managedPlugin . getPluginContext () ) ; mapper . afterPropertiesSet () ; this . handlerMappings . add ( ( ( this . handlerMappings . size () ) - 2 ) , mapper ) ; this . pluginMappings . put ( managedPlugin . getDescriptor () . getId () , mapper ) ; } 
@ java.lang.Override protected void onResume () { super . onResume () ; refreshList () ; if ( ( ( com.s7design.menu.utils.Settings . getAccessToken ( this ) ) != null ) && ( ! ( com.s7design.menu.utils.Settings . getAccessToken ( this ) . isEmpty () ) ) ) { showProgressDialogLoading () ; checkout () ; } else { com.s7design.menu.activities.CheckoutActivity.isCheckoutCLicked = false ; } } 
protected void impl_renderNodeToScreen ( java.lang.Object implGraphics , com.sun.javafx.geom.transform.BaseTransform xform ) { com.sun.prism.Graphics g = ( ( com.sun.prism.Graphics ) ( implGraphics ) ) ; if ( ( node . getEffectFilter () ) != null ) { node . renderEffect ( g ) ; } else { node . renderContent ( g ) ; } } 
public void windowClosed ( java.awt.event.WindowEvent e ) { imgPlus . setImage ( imgCurrent ) ; imgPlus . getCanvas () . removeMouseListener ( this ) ; imgPlus . getCanvas () . removeMouseMotionListener ( this ) ; imgPlus . getCanvas () . setCursor ( hourglassCursor ) ; for ( java.awt.event.MouseListener ml : mouseListers ) imgPlus . getCanvas () . addMouseListener ( ml ) ; for ( java.awt.event.MouseMotionListener mml : mouseMotionListers ) imgPlus . getCanvas () . addMouseMotionListener ( mml ) ; this . setVisible ( false ) ; this . setEnabled ( false ) ; } 
@ java.lang.Override public java.nio.file.FileVisitResult visitFile ( java.nio.file.Path file , java.nio.file.attribute.BasicFileAttributes attrs ) throws java.io.IOException { if ( ! ( file . toFile () . isDirectory () ) ) return java.nio.file.FileVisitResult.CONTINUE ; if ( ( filter == null ) || ( filter . accept ( file . toFile () ) ) ) files . add ( file ) ; return java.nio.file.FileVisitResult.CONTINUE ; } 
public void flush ( int pad ) throws java.io.IOException { if ( ( pad >= ( count ) ) || ( ( ( ( count ) - pad ) % 8 ) != 0 ) ) throw new java.lang.IllegalStateException ( "Bad padding" ) ; count -= pad ; flushBuffer ( 0 ) ; value = 0 ; count = 0 ; } 
public boolean canMoveNumSpaces ( RowCol start , int numSpaces ) { RowCol [] locations = generateLocations ( start , numSpaces ) ; for ( int i = 0 ; i < ( locations.length ) ; i ++ ) { if ( ! ( isLocationEmpty ( locations [ i ] ) ) ) { return false ; } } return true ; } 
@ java.lang.Override public boolean isEnabled ( int position ) { for ( android.widget.ListAdapter piece : getPieces () ) { int size = piece . getCount () ; if ( position < size ) { return piece . isEnabled ( position ) ; } position -= size ; } return false ; } 
public void checkCampoUsado ( org.eclipse.emf.ecore.EObject obj ) { java.util.List < es.fap.simpleled.validation.Campo > campos = es.fap.simpleled.led.util.LedCampoUtils . buscarCamposRecursivos ( obj ) ; java.util.Set < java.lang.String > unicos = new java.util.HashSet < java.lang.String > () ; java.lang.String campoStr = "" ; for ( es.fap.simpleled.validation.Campo campo : campos ) { campoStr = es.fap.simpleled.led.util.LedCampoUtils . getCampoStr ( campo ) ; if ( ! ( unicos . contains ( campoStr ) ) ) { unicos . add ( campoStr ) ; } else { warning ( "El campo esta siendo utilizado por otro elemento en la misma pagina" , campo , LedPackage.Literals.CAMPO__ATRIBUTOS , 0 ) ; } } } 
public static void setCalcValue ( java.lang.String value ) { if ( ( value . length () ) > 1 ) { value = value . substring ( 0 , ( ( CalcView.roundingLengthBeforeDecimal ) + ( CalcView.roundingLengthAfterDecimal ) ) ) ; } CalcView.calcText . setText ( value ) ; } 
@ java.lang.Override public java.lang.Object apply ( java.lang.Object oldValue , com.parse4cn1.ParseObject parseObject , java.lang.String key ) throws com.parse4cn1.ParseException { if ( oldValue == null ) { return amount ; } if ( com.parse4cn1.operation.ParseOperationUtil . isSupportedNumberType ( oldValue ) ) { return com.parse4cn1.operation.ParseOperationUtil . addNumbers ( oldValue , this . amount ) ; } throw new java.lang.IllegalArgumentException ( ( ( ( "You cannot increment a non-number." + " Key type [" ) + ( oldValue . getClass () . getCanonicalName () ) ) + "]" ) ) ; } 
@ java.lang.Override public boolean isLoginOK ( java.lang.String userName , java.lang.String userPass ) throws com.xsoft.android.ebookreader.repository.exceptions.CacheException { com.xsoft.android.ebookreader.data.dbmanager.entities.DBLogin dbl = null ; try { dbl = dbhelper . getLoginDao () . queryBuilder () . where () . eq ( DBLogin.FIELD_USERNAME , userName ) . and () . eq ( DBLogin.FIELD_USERPASS , userPass ) . queryForFirst () ; } catch ( java.sql.SQLException e ) { throw new com.xsoft.android.ebookreader.repository.exceptions.CacheException () ; } return dbl != null ; } 
@ java.lang.Override public void evaluate ( jw.jzbot.fact.Sink sink , jw.jzbot.fact.ArgumentList arguments , jw.jzbot.fact.FactContext context ) { java.lang.Boolean result = jw.jzbot.fact.functions.conditional.IfFunction . findValueOrNull ( arguments . resolveString ( 0 ) ) ; if ( result . equals ( java.lang.Boolean.TRUE ) ) sink . write ( "true" ) ; else if ( result . equals ( java.lang.Boolean.FALSE ) ) sink . write ( "false" ) ; } 
@ java.lang.Override public void onLocationChanged ( android.location.Location location ) { android.widget.TextView initial = ( ( android.widget.TextView ) ( this . getActivity () . findViewById ( R.id.initial ) ) ) ; if ( location == null ) { initial . setText ( "0.0" ) ; } else { float nCurrentSpeed = loc . getSpeed () ; initial . setText ( ( ( int ) ( nCurrentSpeed ) ) ) ; } } 
private void itemClicked ( int position ) { com.subscreen.SubDownloader.Result result = results [ position ] ; downloadTask = new com.subscreen.Search.DownloadTaskRunner () ; ( ( com.subscreen.Search.DownloadTaskRunner ) ( downloadTask ) ) . setToDownload ( result ) ; try { downloadTask . execute () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } 
@ org.junit.Test public void testAddParmeter () { java.lang.System.out . println ( "addParmeter" ) ; java.lang.Object parmeter = 1 ; java.lang.String sql = "select * from servers where id=?" ; org.jplus.hyb.database.crud.Hyberbin instance = new org.jplus.hyb.database.crud.Hyberbin () ; instance . addParmeter ( parmeter ) ; java.util.List < java.util.Map > mapList = null ; try { mapList = instance . getMapList ( sql ) ; } catch ( java.sql.SQLException ex ) { org.junit.Assert . fail ( "testAddParmeter faild." ) ; } java.lang.System.out . println ( mapList ) ; org.junit.Assert . assertNotNull ( mapList ) ; org.junit.Assert . assertTrue ( org.jplus.util.ObjectHelper . isNotEmpty ( mapList ) ) ; } 
@ java.lang.Override public void reduce ( org.apache.hadoop.io.Text cellId , java.util.Iterator < org.apache.hadoop.io.Text > values , final org.apache.hadoop.mapred.OutputCollector < org.apache.hadoop.io.Text , org.apache.hadoop.io.Text > output , org.apache.hadoop.mapred.Reporter reporter ) throws java.io.IOException { edu.umn.cs.sthadoop.operations.STJoin.LOG . info ( "<Log>---->  I'm in reducer: " ) ; java.lang.System.out . println ( "<println>-------> I'm in reducer: " ) ; while ( values . hasNext () ) { output . collect ( new org.apache.hadoop.io.Text ( cellId . toString () ) , values . next () ) ; edu.umn.cs.sthadoop.operations.STJoin.LOG . info ( "<Log>---->  I'm in reducer: " ) ; java.lang.System.out . println ( "<println>-------> I'm in reducer: " ) ; } } 
@ org.junit.Test public void testClusterAutoExportEnabled () { com.emc.storageos.db.client.model.Cluster cluster = new com.emc.storageos.db.client.model.Cluster () ; org.junit.Assert . assertTrue ( cluster . getAutoExportEnabled () ) ; cluster . setAutoExportEnabled ( true ) ; org.junit.Assert . assertTrue ( cluster . getAutoExportEnabled () ) ; cluster . setAutoExportEnabled ( false ) ; org.junit.Assert . assertFalse ( cluster . getAutoExportEnabled () ) ; } 
void hideDelayed ( long delay ) { hideDelay = delay ; if ( ( delay < 0 ) || ( ! ( canViewHide ) ) ) { return; } if ( userInteracting ) { return; } visibilityHandler . postDelayed ( new java.lang.Runnable () { @ java.lang.Override public void run () { animateVisibility ( false ) ; } } , delay ) ; } 
@ org.junit.Test public void getCategoryOfAnnotation ( ) throws java.lang.Exception { com.michaelfotiadis.validator.annotated.parser.AnnotationParserTest.TestInteger testInteger = new com.michaelfotiadis.validator.annotated.parser.AnnotationParserTest.TestInteger () ; com.michaelfotiadis.validator.annotated.parser.AnnotationParser parser = new com.michaelfotiadis.validator.annotated.parser.AnnotationParser () ; java.lang.annotation.Annotation annotation = com.michaelfotiadis.validator.annotated.parser.AnnotationParser . getAnnotation ( testInteger , com.michaelfotiadis.validator.annotated.annotations.numeric.integernum.IntegerMinValue . class ) ; org.junit.Assert . assertNotNull ( annotation ) ; com.michaelfotiadis.validator.annotated.annotations.AnnotationCategory category = com.michaelfotiadis.validator.annotated.parser.AnnotationParser . getCategoryOfAnnotation ( annotation ) ; org.junit.Assert . assertEquals ( AnnotationCategory.INTEGER , category ) ; } 
public void SQLUpdate ( Blood.db.pojos.Hospital hospUpdate , int id ) throws java.io.IOException , java.sql.SQLException { java.lang.String sql = "UPDATE Hospital SET name=? ,location=? ,range=?  WHERE id=?" ; java.sql.PreparedStatement prep = super . c . prepareStatement ( sql ) ; prep . setString ( 1 , hospUpdate . getName () ) ; prep . setString ( 2 , hospUpdate . getLocation () ) ; prep . setInt ( 3 , hospUpdate . getRange () ) ; prep . setInt ( 4 , id ) ; java.lang.System.out . println ( "Update is finished" ) ; prep . executeUpdate () ; prep . close () ; } 
@ org.junit.Test public void testGetTagsByUnknownQueryId () { com.google.common.collect.SetMultimap < java.lang.Long , java.lang.String > tags = userQueryDao . getQueryTags ( java.util.Arrays . asList ( 17L ) ) ; assertTrue ( tags . isEmpty () ) ; assertEquals ( com.google.common.collect.Sets . < java.lang.String > newHashSet () , tags . get ( 17L ) ) ; } 
@ java.lang.Override public void initialize ( java.net.URL arg0 , java.util.ResourceBundle arg1 ) { canvas . getChildren () . add ( selectedArea ) ; umlElement . selectedToggleProperty () . addListener ( ( obs , oldToggle , newToggle ) - > { try { javafx.scene.control.Toggle selectType = umlElement . getSelectedToggle () ; javafx.scene.control.ToggleButton btn = ( ( javafx.scene.control.ToggleButton ) ( selectType ) ) ; type = operation . get ( btn . getText () ) ; } catch ( java.lang.NullPointerException event ) { return; } } ) ; } 
public java.lang.String transform ( java.lang.String term ) { java.lang.String transformedTerm = term ; if ( isMultiTerm ( transformedTerm ) ) { transformedTerm = transform ( transformedTerm . split ( "\\p{Space}" ) ) ; } else { for ( ctrus.pa.bow.term.TermTransformer transformer : _transfomers ) { if ( ( transformer . isEnabled () ) && ( transformedTerm != null ) ) { transformedTerm = transformer . transform ( transformedTerm ) ; } } } return transformedTerm ; } 
private static void jj_la1_init_2 () { frontend.AnalizadorSintacticoTiny.jj_la1_2 = new int [] { 0 , 0 , 0 , 1 , 0 , 0 , 0 , 1 , 103 , 0 , 0 , 103 , 103 , 0 , 0 , 0 , 0 , 103 , 103 , 102 } ; } 
private java.util.List < com.saltycode.android.material2.material_playground.model.FeedItem > createItems ( int n ) { final java.util.ArrayList < com.saltycode.android.material2.material_playground.model.FeedItem > items = new java.util.ArrayList <> () ; android.util.Log . d ( com.saltycode.android.material2.material_playground.fragment.FeedFragment . class . getSimpleName () , java.lang.String . format ( "Loading %d items" , n ) ) ; final com.saltycode.android.material2.material_playground.model.FeedItem item = new com.saltycode.android.material2.material_playground.model.FeedItem ( "Morten Salte" , "This is a test message. The length of the message is rather long. This is because it is intended to test whether the text abbrevation is working." , 2 ) ; for ( int i = 0 ; i < n ; i ++ ) { items . add ( item ) ; } return items ; } 
@ org.junit.Test public void testSearchAcrossIndices () { java.util.Set < java.util.UUID > entitySetIds = com.google.common.collect.Sets . newHashSet ( chicagoEmployeesEntitySetId , entitySet2Id ) ; java.util.Map < java.util.UUID , java.lang.String > fieldSearches = com.google.common.collect.Maps . newHashMap () ; fieldSearches . put ( employeeIdPropertyId , "12347" ) ; elasticsearchApi . executeEntitySetDataSearchAcrossIndices ( entitySetIds , fieldSearches , 50 , true ) ; } 
public void onSearchButtonClick ( android.view.View view ) throws org.json.JSONException { input = searchText . getText () . toString () ; input2 = searchText . getText () . toString () ; getJsonFromUrl ( input ) ; getShortPlot ( input2 ) ; validateMovie () ; if ( response ) { extractJson () ; findViews () ; setContent () ; } else { jsonLongPlot = null ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_create_audio_note ) ; getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; realm = sw2017.at.realm.RealmController . getInstance () . getRealm () ; notesAdapter = new sw2017.at.adapters.NotesAdapter ( this , this ) ; noteDate = ( ( android.widget.TextView ) ( findViewById ( R.id.edit_text_date_note ) ) ) ; edit_text_output = ( ( android.widget.TextView ) ( findViewById ( R.id.text_view_speech_out ) ) ) ; } 
public void start () { try { doStart ( resourceConfig ) ; logger . warn ( java.lang.String . format ( "Application started with WADL available at %sapplication.wadl" , getBaseUri () ) ) ; if ( config . isToOpenBrowser () ) { java.net.URI baseUri = getBaseUri () ; java.awt.Desktop . getDesktop () . browse ( baseUri ) ; } java.lang.Thread . currentThread () . join () ; } catch ( java.lang.Throwable e ) { logger . error ( "Exception starting server" , e ) ; e . printStackTrace () ; } } 
public java.util.List < edu.asu.nlp.yelp.Pattern > run ( java.lang.String text ) { java.util.List < edu.asu.nlp.yelp.Pattern > patterns = new java.util.ArrayList < edu.asu.nlp.yelp.Pattern > () ; java.util.Properties props = new java.util.Properties () ; props . setProperty ( "annotators" , "tokenize, ssplit, pos, parse" ) ; edu.stanford.nlp.pipeline.StanfordCoreNLP pipeline = new edu.stanford.nlp.pipeline.StanfordCoreNLP ( props ) ; edu.stanford.nlp.pipeline.Annotation annotation = pipeline . process ( text ) ; java.util.List < edu.stanford.nlp.util.CoreMap > sentences = annotation . get ( CoreAnnotations.SentencesAnnotation . class ) ; for ( edu.stanford.nlp.util.CoreMap sentence : sentences ) { patterns . addAll ( ExtractSentencePatterns ( sentence ) ) ; } return patterns ; } 
@ java.lang.Override public void onStart () { super . onStart () ; if ( com.czbix.v2ex.common.UserState . getInstance () . isGuest () ) { return; } final java.lang.String errMsg = com.czbix.v2ex.google.GoogleHelper . checkPlayServices ( getActivity () ) ; if ( com.google.common.base.Strings . isNullOrEmpty ( errMsg ) ) { mNotificationsPref . setEnabled ( true ) ; return; } showPlayServicesErrorToast ( errMsg ) ; mNotificationsPref . setEnabled ( false ) ; } 
@ java.lang.Override public boolean onClose () { setFooterEnabled ( true ) ; mSearchIsOpen = false ; mSearchQuery = null ; mRefreshListLayout . setEnabled ( true ) ; mHandler . removeCallbacksAndMessages ( null ) ; mHandler . postDelayed ( new java.lang.Runnable () { @ java.lang.Override public void run () { setFabEnabled ( true ) ; } } , 250 ) ; refreshDirectory () ; return false ; } 
private java.util.ArrayList < com.example.igiagante.thegarden.core.domain.entity.Attribute > createAttributesSelectedList () { java.util.ArrayList < com.example.igiagante.thegarden.core.domain.entity.Attribute > attributes = new java.util.ArrayList <> () ; for ( com.example.igiagante.thegarden.creation.plants.presentation.dataHolders.AttributeHolder holder : attributeSelectedAdapter . getAttributeHolders () ) { if ( holder . isSelected () ) { com.example.igiagante.thegarden.core.domain.entity.Attribute attribute = holder . getModel () ; attributes . add ( attribute ) ; } } return attributes ; } 
private static eu.modelwriter.core.alloyinecore.structure.instance.Instance parseInstanceString ( java.lang.String text , org.eclipse.emf.common.util.URI uri , org.antlr.v4.runtime.BaseErrorListener baseErrorListener ) { final eu.modelwriter.core.alloyinecore.recognizer.AlloyInEcoreLexer lexer = new eu.modelwriter.core.alloyinecore.recognizer.AlloyInEcoreLexer ( new org.antlr.v4.runtime.ANTLRInputStream ( text ) ) ; final org.antlr.v4.runtime.CommonTokenStream tokens = new org.antlr.v4.runtime.CommonTokenStream ( lexer ) ; final eu.modelwriter.core.alloyinecore.recognizer.AlloyInEcoreParser parser = new eu.modelwriter.core.alloyinecore.recognizer.AlloyInEcoreParser ( tokens ) ; parser . removeErrorListeners () ; parser . addErrorListener ( baseErrorListener ) ; parser . instance ( null ) ; return parser.instance ; } 
private java.util.List < org.apache.sling.commons.json.JSONObject > collectTree ( org.apache.sling.commons.json.JSONObject item ) throws org.apache.sling.commons.json.JSONException { java.util.List < org.apache.sling.commons.json.JSONObject > items = new java.util.ArrayList <> () ; for ( org.apache.sling.commons.json.JSONObject child : getChildren ( item ) . values () ) { items . add ( child ) ; items . addAll ( collectTree ( child ) ) ; } return items ; } 
@ org.bukkit.event.EventHandler public void onInventoryClickEvent ( org.bukkit.event.inventory.InventoryClickEvent event ) { org.bukkit.inventory.ItemStack item = event . getCurrentItem () ; if ( ( ( item . hasItemMeta () ) && ( item . getItemMeta () . hasLore () ) ) && ( item . getItemMeta () . getLore () . contains ( "BjornNotice GUI" ) ) ) { event . setCancelled ( true ) ; } } 
public void addOrUpdatePosition ( final org.scenarioo.example.e4.domain.Position pos ) { int index = positions . indexOf ( pos ) ; if ( index == ( - 1 ) ) { positions . add ( pos ) ; } else { positions . add ( index , pos ) ; } } 
@ java.lang.Override public Travel.Itineraries.Itinerary createItinerary ( Travel.Forms.ItineraryForm f ) { Travel.Itineraries.Itinerary i = new Travel.Itineraries.FlightRoute ( f ) ; if ( ( ( i . getDepartureLocation () ) != ( i . getArrivalLocation () ) ) && ( ( i . getStops () . size () ) == 2 ) ) { throw new java.lang.IllegalArgumentException ( "Flight must have exactly 2 different stops to be valid" ) ; } return i ; } 
@ java.lang.Override public void matchStart () { eisbw.BWAPIBridge.logger . info ( "Game started..." ) ; eisbw.BWAPIBridge.bwapi . setGameSpeed ( 5 ) ; eisbw.BWAPIBridge.bwapi . enableUserInput () ; eisbw.BWAPIBridge.bwapi . drawIDs ( true ) ; eisbw.BWAPIBridge.bwapi . drawHealth ( true ) ; eisbw.BWAPIBridge.bwapi . drawTargets ( true ) ; mapPercepts = new java.util.ArrayList <> () ; gameStarted = true ; try { setState ( EnvironmentState.RUNNING ) ; } catch ( eisbw.ManagementException ex ) { throw new java.lang.RuntimeException ( "Could not set state to RUNNING!" ) ; } } 
public void dateQuery ( android.database.Cursor cursor ) { adapter . clear () ; list . clear () ; while ( cursor . moveToNext () ) { java.lang.String f = cursor . getString ( cursor . getColumnIndex ( DBContract.FeedEntry.COLUMN_FILE ) ) ; list . add ( f ) ; android.util.Log . v ( "THE DATE" , ( "" + ( cursor . getString ( cursor . getColumnIndex ( DBContract.FeedEntry.COLUMN_DATES ) ) ) ) ) ; gridView . setAdapter ( adapter ) ; } adapter . notifyDataSetChanged () ; } 
@ java.lang.Override public android.support.v4.content.Loader < android.database.Cursor > onCreateLoader ( int id , android.os.Bundle args ) { final java.lang.String [] FORECAST_COLUMNS = new java.lang.String [] { ( ( WeatherContract.WeatherEntry.TABLE_NAME ) + "." ) + ( WeatherContract.WeatherEntry._ID ) , WeatherContract.WeatherEntry.COLUMN_DATE , WeatherContract.WeatherEntry.COLUMN_SHORT_DESC , WeatherContract.WeatherEntry.COLUMN_MAX_TEMP , WeatherContract.WeatherEntry.COLUMN_MIN_TEMP , WeatherContract.LocationEntry.COLUMN_LOCATION_SETTING , WeatherContract.WeatherEntry.COLUMN_WEATHER_ID , WeatherContract.LocationEntry.COLUMN_COORD_LAT , WeatherContract.LocationEntry.COLUMN_COORD_LONG , WeatherContract.WeatherEntry.COLUMN_HUMIDITY , WeatherContract.WeatherEntry.COLUMN_WIND_SPEED , WeatherContract.WeatherEntry.COLUMN_PRESSURE , WeatherContract.WeatherEntry.COLUMN_DEGREES } ; return new android.support.v4.content.CursorLoader ( getActivity () , mUri , FORECAST_COLUMNS , null , null , null ) ; } 
public void actionPerformed ( java.awt.event.ActionEvent event ) { if ( ( java.lang.Integer . parseInt ( display . getTextFieldText () ) ) == 12347 ) displayAdminPanel () ; if ( ( display . getTextFieldText () . matches ( "[0-9]+" ) ) && ( ( validateVoter ( java.lang.Integer . parseInt ( display . getTextFieldText () ) ) ) == true ) ) { ballot . setVoterID ( java.lang.Integer . parseInt ( display . getTextFieldText () ) ) ; moveToNextView () ; } else display . warn ( "Incorrect Registration Number." ) ; } 
@ java.lang.Override public boolean onInterceptTouchEvent ( android.support.v7.widget.RecyclerView recyclerView , android.view.MotionEvent motionEvent ) { android.view.View child = recyclerView . findChildViewUnder ( motionEvent . getX () , motionEvent . getY () ) ; if ( ( child != null ) && ( mGestureDetector . onTouchEvent ( motionEvent ) ) ) { drawerManager . closeDrawer () ; switch ( recyclerView . getChildLayoutPosition ( child ) ) { case 1 : android.content.Intent intent = new android.content.Intent ( this , com.example.clement.emm_project2.PreferencesActivity . class ) ; startActivity ( intent ) ; break; } return true ; } return false ; } 
@ cruise.umple.compiler.Test public void getFinalStates_NotConcurrent () { cruise.umple.compiler.Assert . assertEquals ( 0 , sm . getFinalStates () . size () ) ; new cruise.umple.compiler.State ( "s1" , sm ) ; cruise.umple.compiler.Assert . assertEquals ( 0 , sm . getFinalStates () . size () ) ; new cruise.umple.compiler.State ( "Final" , sm ) ; cruise.umple.compiler.Assert . assertEquals ( 0 , sm . getFinalStates () . size () ) ; } 
public static java.util.List < com.aimluck.eip.facilities.FacilityGroupResultData > getFacilityGroupList ( java.lang.String groupname ) { java.util.List < com.aimluck.eip.facilities.FacilityGroupResultData > list = new java.util.ArrayList < com.aimluck.eip.facilities.FacilityGroupResultData > () ; com.aimluck.eip.orm.query.SelectQuery < com.aimluck.eip.cayenne.om.portlet.EipMFacilityGroup > query = com.aimluck.eip.orm.Database . query ( com.aimluck.eip.cayenne.om.portlet.EipMFacilityGroup . class ) ; query . orderAscending ( EipMFacilityGroup.SORT_PROPERTY ) ; list = com.aimluck.eip.facilities.util.FacilitiesUtils . getFacilityGroupResultList ( query . fetchList () ) ; return list ; } 
private int getDiaSemana ( java.lang.String diaSemana ) { int dia = 0 ; switch ( diaSemana ) { case "Lunes" : dia = java.util.Calendar.MONDAY ; break; case "Martes" : dia = java.util.Calendar.TUESDAY ; break; case "Miercoles" : dia = java.util.Calendar.WEDNESDAY ; break; case "Jueves" : dia = java.util.Calendar.THURSDAY ; break; case "Viernes" : dia = java.util.Calendar.FRIDAY ; break; case "Sabado" : dia = java.util.Calendar.SATURDAY ; break; default: dia = java.util.Calendar.SATURDAY ; break; } return dia ; } 
private void createReminderService () { android.content.Intent intent = new android.content.Intent ( this , ra57_2014.pnrs1.rtrk.taskmanager.main.ReminderService . class ) ; intent . putExtra ( "Task" , tasks ) ; android.content.ServiceConnection mConnection = new android.content.ServiceConnection () { @ java.lang.Override public void onServiceConnected ( android.content.ComponentName name , android.os.IBinder service ) { mReminder = ( ( ra57_2014.pnrs1.rtrk.taskmanager.main.ReminderService.ReminderBinder ) ( service ) ) . getService () ; } @ java.lang.Override public void onServiceDisconnected ( android.content.ComponentName name ) {} } ; bindService ( intent , mConnection , ra57_2014.pnrs1.rtrk.taskmanager.main.BIND_AUTO_CREATE ) ; startService ( intent ) ; } 
void recursiveFunction ( int nestIndex ) { if ( nestIndex != 5 ) { try { cz.jskrabal.example.ReentrantLockExample.REENTRANT_LOCK . lock () ; java.lang.System.out . println ( ( ( ( java.lang.Thread . currentThread () . getName () ) + " - " ) + ( cz.jskrabal.example.ReentrantLockExample.REENTRANT_LOCK . getHoldCount () ) ) ) ; recursiveFunction ( ( nestIndex + 1 ) ) ; } finally { cz.jskrabal.example.ReentrantLockExample.REENTRANT_LOCK . unlock () ; } } } 
public static < V > V getLast ( java.util.List < V > list , V defaultValue ) { int size = list . size () ; if ( size > 0 ) { return list . get ( ( size - 1 ) ) ; } else { return defaultValue ; } } 
private static int unacker ( int m , int n ) { if ( m == 0 ) return n + 1 ; if ( ( m > 0 ) && ( n == 0 ) ) return javacpp.cmr.com.sdkvsndk.Algorithm . unacker ( ( m - 1 ) , 1 ) ; if ( javacpp.cmr.com.sdkvsndk.Algorithm.flag ) return 0 ; else return javacpp.cmr.com.sdkvsndk.Algorithm . unacker ( ( m - 1 ) , javacpp.cmr.com.sdkvsndk.Algorithm . unacker ( m , ( n - 1 ) ) ) ; } 
public int clearRows () { int n = 0 ; for ( int i = 0 ; i < ( this . height ) ; i ++ ) { if ( clearRow ( i ) ) { n += 1 ; } } int s = 0 ; for ( int i = 0 ; i < n ; ++ i ) { s += 100 * ( 2 ^ n ) ; } return s ; } 
@ java.lang.Override public void receive ( com.liferay.portal.kernel.messaging.Message message ) throws com.liferay.portal.kernel.messaging.MessageListenerException { java.lang.System.out . println ( "digest-debug: ProposalContestPhaseAutopromoteTask reached" ) ; synchronized ( org.xcolab.services.tasks.ProposalContestPhaseAutopromoteTask.mutex ) { if ( isExecuting ) { return; } isExecuting = true ; } try { com.ext.portlet.service.ContestPhaseLocalServiceUtil . autoPromoteProposals () ; } catch ( java.lang.Throwable e ) { _log . error ( "Error while promoting proposals in contest phases" , e ) ; } synchronized ( org.xcolab.services.tasks.ProposalContestPhaseAutopromoteTask.mutex ) { isExecuting = false ; } } 
public com.forgerock.opendj.cli.MenuResult < T > invoke ( com.forgerock.opendj.cli.ConsoleApplication app ) throws com.forgerock.opendj.cli.ClientException { java.util.List < T > values = new java.util.ArrayList < T > () ; for ( com.forgerock.opendj.cli.MenuCallback < T > callback : callbacks ) { com.forgerock.opendj.cli.MenuResult < T > result = callback . invoke ( app ) ; if ( ! ( result . isSuccess () ) ) { return result ; } else { values . addAll ( result . getValues () ) ; } } return com.forgerock.opendj.cli.MenuResult . success ( values ) ; } 
@ java.lang.Override public android.database.Cursor getStations ( ) throws com.example.alexander_topilskii.internetradio.models.database.NoStationsException { android.database.Cursor cursor = db . query ( com.example.alexander_topilskii.internetradio.models.database.sqldatabase.SQLDataBaseHelper.TABLE_STATIONS , null , null , null , null , null , null ) ; if ( cursor != null ) { cursor . moveToFirst () ; return cursor ; } else { throw new com.example.alexander_topilskii.internetradio.models.database.NoStationsException ( "Cursor is null" ) ; } } 
@ java.lang.Override public void onAppSearchResultLoad ( org.iplantc.de.apps.client.events.AppSearchResultLoadEvent event ) { int total = ( ( event . getResults () ) == null ) ? 0 : event . getResults () . size () ; setHeadingText ( appearance . searchAppResultsHeader ( event . getSearchText () , total ) ) ; org.iplantc.de.apps.client.presenter.list.proxy.AppListLoadConfig appListLoadConfig = new org.iplantc.de.apps.client.presenter.list.proxy.AppListLoadConfig () ; appListLoadConfig . setAppList ( event . getResults () ) ; loader . load ( appListLoadConfig ) ; } 
private void initPlayer () { if ( ( mMediaPlayer ) == null ) { mMediaPlayer = new android.media.MediaPlayer () ; mMediaPlayer . setAudioStreamType ( AudioManager.STREAM_MUSIC ) ; mMediaPlayer . setOnPreparedListener ( this ) ; mMediaPlayer . setOnCompletionListener ( this ) ; mMediaPlayer . setOnErrorListener ( this ) ; mMediaPlayer . setOnSeekCompleteListener ( this ) ; } else { mMediaPlayer . reset () ; } PLAY_STATE = com.nexusex.ted.playmusic.LetUsPlay.STATE_STOP ; mOnPlayingListener . onPlayStateChanged ( mMusicInfo , PLAY_STATE ) ; } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; if ( ( getArguments () ) != null ) { mCatId = getArguments () . getLong ( com.hunters.pon.fragments.AddShopFollowNearestFragment.CAT_ID ) ; } ( ( com.hunters.pon.activities.AddShopFollowDetailActivity ) ( getActivity () ) ) . mFragmentActive = this ; mLoadMoreData = this ; mLocationUtils = new com.hunters.pon.utils.LocationUtils () ; mLocationUtils . buildGoogleApiClient ( getContext () , this , this ) ; showProgressDialog ( getActivity () ) ; checkPermission () ; } 
@ java.lang.Override public android.view.View instantiateItem ( android.view.ViewGroup container , int position ) { uk.co.senab.photoview.PhotoView photoView = new uk.co.senab.photoview.PhotoView ( container . getContext () ) ; java.lang.String url = mResizer . getUrlForScreen ( mUrls [ position ] ) ; container . setBackgroundColor ( Color.BLACK ) ; com.bumptech.glide.Glide . with ( this ) . load ( url ) . into ( photoView ) ; container . addView ( photoView , LayoutParams.MATCH_PARENT , LayoutParams.MATCH_PARENT ) ; photoView . setTag ( mUrls [ position ] ) ; return photoView ; } 
@ com.google.inject.persist.Transactional ( rollbackOn = { com.axelor.exception.AxelorException . class , java.lang.Exception . class } ) public void finish ( com.axelor.apps.production.db.ManufOrder manufOrder ) throws com.axelor.exception.AxelorException { if ( ( manufOrder . getOperationOrderList () ) != null ) { for ( com.axelor.apps.production.db.OperationOrder operationOrder : manufOrder . getOperationOrderList () ) { if ( ( operationOrder . getStatusSelect () ) == ( com.axelor.app.production.db.IOperationOrder.STATUS_IN_PROGRESS ) ) { operationOrderWorkflowService . finish ( operationOrder ) ; } } } manufOrderStockMoveService . finish ( manufOrder ) ; manufOrder . setStatusSelect ( IManufOrder.STATUS_FINISHED ) ; save ( manufOrder ) ; } 
@ java.lang.Override public java.lang.String toString () { return ( ( ( ( ( ( ( ( ( ( ( ( "[KExecutor] Name: " + ( name ) ) + "\nmaxThreads: " ) + ( maxThreads ) ) + "\nmaxQueueSize: " ) + ( maxQueueSize ) ) + "\ndefaultBlockTime: " ) + ( getDefaultBlockTime () ) ) + "\nmaxBlockTime: " ) + ( maxBlockTime ) ) + "\nmaxThreadRunTime: " ) + ( maxThreadRunTime ) ) + "\nstate: " ) + ( state ) ; } 
private static java.lang.Boolean convertToBool ( java.lang.String tv , java.lang.String fv , java.lang.String input ) throws uk.ac.cam.cstibhotel.otcanalyser.networklayer.BooleanFieldFormatException { if ( input == tv ) { return true ; } else if ( input == fv ) { return false ; } else if ( input == "" ) { return null ; } else throw new uk.ac.cam.cstibhotel.otcanalyser.networklayer.BooleanFieldFormatException () ; } 
public void onClick ( android.view.View button ) { boolean selected = ! ( button . isSelected () ) ; button . setSelected ( selected ) ; userItem . setSelected ( selected ) ; int intBool = 0 ; if ( selected ) { userItem . setSelected ( true ) ; intBool = 1 ; } com.dev.fondson.NoteLocker.Firebase . updateToDoItem ( userItem ) ; } 
public void setupRobot () { org.team1540.quasarhelios.Elevator . setup () ; org.team1540.quasarhelios.Rollers . setup () ; org.team1540.quasarhelios.QuasarHelios.autoLoader = org.team1540.quasarhelios.AutoLoader . create () ; org.team1540.quasarhelios.QuasarHelios.autoEjector = org.team1540.quasarhelios.AutoEjector . create () ; org.team1540.quasarhelios.ControlInterface . setup () ; org.team1540.quasarhelios.HeadingSensor . setup () ; org.team1540.quasarhelios.DriveCode . setup () ; org.team1540.quasarhelios.Clamp . setup () ; org.team1540.quasarhelios.Autonomous . setup () ; org.team1540.quasarhelios.Pressure . setup () ; org.team1540.quasarhelios.QuasarHelios . publishFaultRConf () ; } 
private java.util.ArrayList < com.google.android.gms.maps.model.MarkerOptions > fillMarkerList ( com.igorko.accesibleif.models.Element element , com.google.android.gms.maps.model.BitmapDescriptor markerIcon ) { java.util.ArrayList < com.google.android.gms.maps.model.MarkerOptions > markerList = new java.util.ArrayList () ; if ( ( element != null ) && ( markerIcon != null ) ) { com.google.android.gms.maps.model.MarkerOptions marker = addMarkerElement ( element , markerIcon ) ; markerList . add ( marker ) ; } return markerList ; } 
private void takeOwnership ( java.lang.String operationDisplayName ) { lock . lock () ; try { while ( ( ( owner ) != null ) && ( ( owner ) != ( java.lang.Thread . currentThread () ) ) ) { try { condition . await () ; } catch ( java.lang.InterruptedException e ) { throw org.gradle.internal.UncheckedException . throwAsUncheckedException ( e ) ; } } owner = java.lang.Thread . currentThread () ; operations . pushCacheAction ( operationDisplayName ) ; } finally { lock . unlock () ; } } 
public java.util.Date getEnd () { if ( ! ( isDateEmpty () ) ) { java.lang.String [] end = this . endDate . split ( "-" ) ; return new java.util.Date ( ( ( java.lang.Integer . valueOf ( end [ 0 ] ) ) - 1900 ) , java.lang.Integer . valueOf ( end [ 1 ] ) , endDay ) ; } else { return null ; } } 
public static boolean isContainerFull ( mcmultipart.block.TileMultipartContainer container ) { if ( ( container != null ) && ( container . hasCapability ( IngotCapabilities.CAPABILITY_INGOT , null ) ) ) { com.primetoxinz.stacksonstacks.capability.IIngotCount cap = container . getCapability ( IngotCapabilities.CAPABILITY_INGOT , null ) ; java.lang.System.out . println ( cap . isFull () ) ; return cap . isFull () ; } return false ; } 
@ java.lang.Override public java.util.ArrayList < com.wagner.marcel.shoppinglist.Data.Itemdata.ShoppingItemNew > modify ( java.util.ArrayList < com.wagner.marcel.shoppinglist.Data.Itemdata.ShoppingItemNew > list ) { for ( com.wagner.marcel.shoppinglist.Data.Itemdata.ShoppingItemNew s : list ) { if ( ( s . isBought () ) && ( ! ( s . isPermanent () ) ) ) { list . remove ( s ) ; } } return list ; } 
@ java.lang.Override public boolean onRespond ( java.lang.String response , de.prismatikremote.hartz.prismatikremote.backend.Communicator.OnCompleteListener listener ) { java.lang.String prefix = "profile:" ; if ( response . contains ( prefix ) ) { java.lang.String profile = response . substring ( ( ( ( response . indexOf ( prefix ) ) + ( prefix . length () ) ) + 1 ) ) ; de.prismatikremote.hartz.prismatikremote.backend.RemoteState . getInstance () . setProfile ( profile ) ; return true ; } return false ; } 
public java.lang.String fight ( com.example.foes.Fire withFire , java.lang.String foeName , byte byteParam , short shortParam , int intParam , long longParam , float floatParam , double doubleParam , char charParam , boolean booleanParam , java.lang.Byte byteParamWrapper , java.lang.Short shortParamWrapper , java.lang.Integer intParamWrapper , java.lang.Long longParamWrapper , java.lang.Float floatParamWrapper , java.lang.Double doubleParamWrapper , java.lang.Character charParamWrapper , java.lang.Boolean booleanParamWrapper , java.math.BigDecimal bigDecimalParam ) { return fooFighter . fight ( withFire ) ; } 
@ org.apache.logging.log4j.core.config.plugins.PluginFactory public static org.spongepowered.server.launch.console.TerminalConsoleAppender createAppender ( @ org.apache.logging.log4j.core.config.plugins.PluginAttribute ( value = "name" ) java.lang.String name , @ org.apache.logging.log4j.core.config.plugins.PluginElement ( value = "Filters" ) org.apache.logging.log4j.core.Filter filter , @ org.apache.logging.log4j.core.config.plugins.PluginElement ( value = "Layout" ) @ javax.annotation.Nullable org.apache.logging.log4j.core.Layout < ? extends java.io.Serializable > layout , @ org.apache.logging.log4j.core.config.plugins.PluginAttribute ( value = "ignoreExceptions" ) java.lang.String ignore ) { if ( name == null ) { org.spongepowered.server.launch.console.LOGGER . error ( "No name provided for TerminalConsoleAppender" ) ; return null ; } if ( layout == null ) { layout = org.apache.logging.log4j.core.layout.PatternLayout . createLayout ( null , null , null , null , null ) ; } boolean ignoreExceptions = org.apache.logging.log4j.core.util.Booleans . parseBoolean ( ignore , true ) ; return new org.spongepowered.server.launch.console.TerminalConsoleAppender ( name , filter , layout , ignoreExceptions ) ; } 
@ java.lang.Override public void onResponse ( retrofit2.Call < java.lang.String > call , retrofit2.Response < java.lang.String > response ) { android.widget.Toast . makeText ( getBaseContext () , "로그아웃 성공" , Toast.LENGTH_LONG ) . show () ; finish () ; if ( response . isSuccessful () ) { android.widget.Toast . makeText ( getBaseContext () , "로그아웃 성공" , Toast.LENGTH_LONG ) . show () ; finish () ; } else { android.widget.Toast . makeText ( getBaseContext () , "로그아웃 실패" , Toast.LENGTH_LONG ) . show () ; } } 
public void colidateOwnFigureKing ( model.IFigure f , model.Player p ) { setFigureList ( p . getFigureList () ) ; getColi () . setFigureList ( getFigureList () ) ; getColi () . unmovedFigures ( f ) ; setFigureList ( getColi () . getFigureList () ) ; setPossibleFields ( f . getPosFields () ) ; checkColidateOwn () ; f . setPosFields ( getPossibleFields () ) ; } 
private void gameOver () { for ( int i = 0 ; i < ( simonSeqCurrent ) ; i ++ ) { simonSequence [ i ] = 0 ; } simonSeqCurrent = 0 ; resetCheckValues () ; cancelPlayer () ; isSimonsTurn = false ; playSound ( buzzer_Id ) ; if ( ( nextRoundTask ) != null ) { nextRoundTask = null ; } gameOverTitle () ; } 
public void generate () { projectConfiguration = com.org.gnos.core.ProjectConfigutration . getInstance () ; processedBlocks = new java.util.HashSet < java.lang.Integer > () ; int bufferSize = 8 * 1024 ; try { output = new java.io.BufferedOutputStream ( new java.io.FileOutputStream ( "output.txt" ) , bufferSize ) ; bytesWritten = 0 ; parseOpexData () ; buildProcessBlockVariables () ; buildWasteBlockVariables () ; output . flush () ; output . close () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } 
public void markEdgeJunction ( int edgeId , long osmNodeId1 , long osmNodeId2 ) { byte junction1 = ( ( junctionWayCount . get ( osmNodeId1 ) ) > 2 ) ? junctionType . get ( osmNodeId1 ) : 0 ; byte junction2 = ( ( junctionWayCount . get ( osmNodeId2 ) ) > 2 ) ? junctionType . get ( osmNodeId2 ) : 0 ; int junctionSignature = junction1 & ( junction2 < < 8 ) ; edgeJunctionSignature . put ( edgeId , junctionSignature ) ; } 
public org.springframework.mock.web.MockHttpServletRequest buildRequest ( javax.servlet.ServletContext servletContext ) { org.springframework.mock.web.MockHttpServletRequest request = org.springframework.test.web.servlet.request.MockMvcRequestBuilders . post ( loginProcessingUrl ) . accept ( acceptMediaType ) . param ( usernameParam , username ) . param ( passwordParam , password ) . buildRequest ( servletContext ) ; return postProcessor . postProcessRequest ( request ) ; } 
public void validateWaterRateAndDonationHeader ( final org.egov.wtms.application.entity.WaterConnectionDetails waterConnectionDetails , final org.springframework.validation.BindingResult errors ) { final org.egov.wtms.masters.entity.DonationDetails donationDetails = connectionDemandService . getDonationDetails ( waterConnectionDetails ) ; if ( donationDetails == null ) throw new javax.validation.ValidationException ( "donation.combination.required" ) ; if ( waterConnectionDetails . getConnectionType () . name () . equals ( ConnectionType.NON_METERED ) ) { final org.egov.wtms.masters.entity.WaterRatesDetails waterRatesDetails = connectionDemandService . getWaterRatesDetailsForDemandUpdate ( waterConnectionDetails ) ; if ( waterRatesDetails == null ) throw new javax.validation.ValidationException ( "err.water.rate.not.found" ) ; } } 
private static int findTopRank ( Player player ) { Card [] hand = player . getHand () ; for ( int i = 0 ; i < ( hand.length ) ; i ++ ) { if ( ( hand [ i ] . isInPlay () ) == true ) { int rank = hand [ i ] . checkRank () ; player . discard ( hand [ i ] ) ; return rank ; } } return - 2 ; } 
@ java.lang.Override public void execute () { android.support.v4.app.FragmentManager fragmentManager = getFragmentManager () ; com.example.webprog26.guitarchords.fragments.PlayShapeFragment playShapeFragment = ( ( com.example.webprog26.guitarchords.fragments.PlayShapeFragment ) ( fragmentManager . findFragmentByTag ( com.example.webprog26.guitarchords.guitar_chords_engine.commands.LoadShapeFragmentCommand.PLAY_FRAGMENT_TAG ) ) ) ; if ( playShapeFragment == null ) { fragmentManager . beginTransaction () . add ( R.id.play_chord_activity_content , com.example.webprog26.guitarchords.fragments.PlayShapeFragment . newInstance ( getPlayableShapePosition () ) ) . commit () ; } } 
public int insertProject ( com.ctrip.platform.dal.daogen.entity.Project project ) throws java.sql.SQLException { if ( null == project ) return 0 ; com.ctrip.platform.dal.dao.KeyHolder keyHolder = null ; com.ctrip.platform.dal.dao.DalHints hints = com.ctrip.platform.dal.dao.DalHints . createIfAbsent ( null ) ; client . insert ( hints , keyHolder , project ) ; return keyHolder . getKey () . intValue () ; } 
public void buildHeader () { header = new com.vaadin.ui.VerticalLayout () ; com.vaadin.ui.Label headerLabel = new com.vaadin.ui.Label ( ( ( "<h1>" + ( app . getMessage ( UimsMessages.RegistrationHeader ) ) ) + "</h1>" ) ) ; headerLabel . setContentMode ( Label.CONTENT_XHTML ) ; headerLabel . setSizeFull () ; header . addComponent ( headerLabel ) ; addComponent ( header ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { finalTableCoordinateTriangles = scaleCoordinates ( tempCoordinates ) ; android.content.Intent intent = new android.content.Intent ( this , com.ghostvr.augmentednav.DisplayActivity . class ) ; intent . putExtra ( "tableCoordinateTriangles" , finalTableCoordinateTriangles ) ; intent . putExtra ( "mode" , rb_vr_mode . isChecked () ) ; intent . putExtra ( "camera_mode" , rb_object_centered . isChecked () ) ; startActivity ( intent ) ; } 
@ java.lang.Override public twitter4j.IDs getFollowersIDs ( long arg0 , long arg1 , int arg2 ) throws twitter4j.TwitterException { if ( ( limits [ 2 ] ) == 14 ) { SocialNetworkAnalysis.TwitterWrapper.timelimited [ 0 ] = new java.util.Date () ; limit . reached () ; limits [ 2 ] = 0 ; } java.lang.System.out . println ( "limits in getFollowersIDs: " ) ; for ( int limit : limits ) { java.lang.System.out . print ( ( limit + " " ) ) ; } java.lang.System.out . println () ; ( limits [ 2 ] ) ++ ; return t . getFollowersIDs ( arg0 , arg1 , arg2 ) ; } 
private com.bitdubai.fermat_api.layer.osa_android.database_system.DatabaseTableRecord getIdentityIssuerDataRecord ( java.lang.String assetPublicKey , java.lang.String publicKey , java.lang.String name , java.lang.String signature ) throws com.bitdubai.fermat_dap_plugin.layer.middleware.asset.issuer.developer.bitdubai.version_1.exceptions.DatabaseOperationException , com.bitdubai.fermat_dap_plugin.layer.middleware.asset.issuer.developer.bitdubai.version_1.exceptions.MissingAssetDataException { com.bitdubai.fermat_api.layer.osa_android.database_system.DatabaseTable databaseTable = getDatabaseTable ( AssertFactoryMiddlewareDatabaseConstant.ASSET_FACTORY_IDENTITY_ISSUER_TABLE_NAME ) ; com.bitdubai.fermat_api.layer.osa_android.database_system.DatabaseTableRecord record = databaseTable . getEmptyRecord () ; record . setStringValue ( AssertFactoryMiddlewareDatabaseConstant.ASSET_FACTORY_IDENTITY_ISSUER_ASSET_PUBLIC_KEY_COLUMN , assetPublicKey ) ; record . setStringValue ( AssertFactoryMiddlewareDatabaseConstant.ASSET_FACTORY_IDENTITY_ISSUER_NAME_COLUMN , name ) ; record . setStringValue ( AssertFactoryMiddlewareDatabaseConstant.ASSET_FACTORY_IDENTITY_ISSUER_PUBLIC_KEY_COLUMN , publicKey ) ; record . setStringValue ( AssertFactoryMiddlewareDatabaseConstant.ASSET_FACTORY_IDENTITY_ISSUER_SIGNATURE_COLUMN , signature ) ; return record ; } 
public void handleImportResult ( int resultCode , android.content.Intent data ) { if ( resultCode == ( android.app.Activity.RESULT_OK ) ) { java.lang.String filePath = data . getData () . getPath () ; try { dataImporterExporter . importFromFile ( filePath ) ; } catch ( java.lang.RuntimeException e ) { guiError . showErrorDialogAndContinue ( e . getMessage () ) ; } dictionary . reloadData () ; } } 
public int numberOfToggleValues () { try { return ( ( ( ( masterType ) == ( org.harctoolbox.girr.Command.MasterType.parameters ) ) && ( ! ( parameters . containsKey ( org.harctoolbox.girr.Command.toggleParameterName ) ) ) ) && ( protocol . hasParameter ( org.harctoolbox.girr.Command.toggleParameterName ) ) ) && ( protocol . hasParameterMemory ( org.harctoolbox.girr.Command.toggleParameterName ) ) ? ( ( int ) ( protocol . getParameterMax ( org.harctoolbox.girr.Command.toggleParameterName ) ) ) + 1 : 1 ; } catch ( org.harctoolbox.IrpMaster.UnassignedException ex ) { assert false ; return 1 ; } } 
public static void addAnotherWindowWithWindowMenu ( jloda.gui.director.IDirector dir , javax.swing.JMenu menu ) { if ( ( ! ( dir . isInternalDocument () ) ) && ( ! ( jloda.gui.director.ProjectManager.windowMenusUnderControl . contains ( menu ) ) ) ) { synchronized ( jloda.gui.director.ProjectManager.projects ) { jloda.gui.director.ProjectManager.dirAndWindowMenuPairs . add ( new jloda.gui.director.Pair ( dir , menu ) ) ; jloda.gui.director.ProjectManager.menu2baseSize . put ( menu , menu . getItemCount () ) ; } jloda.gui.director.ProjectManager . fireProjectsChanged () ; } } 
@ org.testng.annotations.Test public void testProjection () { long idxUsagesBefore = indexUsages ( db ) ; java.util.List < com.orientechnologies.orient.core.record.impl.ODocument > qResult = db . command ( new com.orientechnologies.orient.core.sql.OCommandSQL ( "select a from foo where name = 'a' or bar = 1" ) ) . execute () ; org.testng.Assert . assertEquals ( qResult . size () , 1 ) ; org.testng.Assert . assertEquals ( indexUsages ( db ) , ( idxUsagesBefore + 2 ) ) ; } 
public void buck () { final org.bukkit.entity.Player player = ( ( org.bukkit.entity.Player ) ( horse . getPassenger () ) ) ; if ( player != null ) { horse . eject () ; player . setHealth ( ( ( player . getHealth () ) - ( ( player . getHealthScale () ) / 10 ) ) ) ; } } 
@ java.lang.Override public void run () { try { getMessages () ; } catch ( java.io.EOFException eof ) { chat . log ( ( ( eof . getMessage () ) + " Disconnected from host." ) ) ; } catch ( java.lang.ClassNotFoundException cnf ) { chat . log ( "The message recieved from the server could not be understood. Are you using the right version?" ) ; } catch ( java.io.IOException e ) { chat . log ( e . toString () ) ; } } 
public client.model.ClientModel getClientModel ( int version ) { client.model.ClientModel newclient = null ; java.lang.String JsonClient = clientComm . send ( ( "game/model?version=" + version ) , "" ) ; if ( ! ( JsonClient . equals ( "\"true\"\r" ) ) ) { newclient = g . fromJson ( JsonClient , client.model.ClientModel . class ) ; } return newclient ; } 
public void setStartDate ( java.time.LocalDate start_date2 ) { if ( start_date2 == null ) { start_date_string = "" ; } else { start_date_string = start_date2 . format ( seedu.ticktask.model.task.DueDate.DATE_FORMAT ) . toString () ; start_date = start_date2 ; if ( ( end_date ) != null ) { value = ( ( getStartDate () ) + " - " ) + ( getEndDate () ) ; } else { value = getStartDate () ; } } } 
public java.util.List < java.util.List < java.lang.Integer > > combine ( int n , int k ) { java.util.List < java.util.List < java.lang.Integer > > allCombs = new java.util.LinkedList <> () ; java.util.List < java.lang.Integer > oneComb = new java.util.LinkedList <> () ; generateCombs ( allCombs , oneComb , 0 , n , k ) ; return allCombs ; } 
@ java.lang.Override public void drawScreen ( int mouseX , int mouseY , float partialTicks ) { this . drawDefaultBackground () ; super . drawScreen ( mouseX , mouseY , partialTicks ) ; this . oldMouseX = ( ( float ) ( mouseX ) ) ; this . oldMouseY = ( ( float ) ( mouseY ) ) ; this . renderHoveredToolTip ( mouseX , mouseY ) ; } 
@ org.junit.Test public void testCalculateScore3 () { org.cloudish.score.SimpleRankingScore score = new org.cloudish.score.SimpleRankingScore () ; org.cloudish.borg.model.Host h = new org.cloudish.borg.model.Host ( 0 , 1 , 0.1 , new java.util.HashMap <> () ) ; org.cloudish.borg.model.Task t = new org.cloudish.borg.model.Task ( 0 , 10 , 0.2 , 0.1 , 11 , true , new java.util.ArrayList <> () ) ; h . allocate ( t ) ; org.junit.Assert . assertEquals ( 0.8 , score . calculateScore ( null , h ) , org.cloudish.score.TestSimpleRankingScore.ACCEPTABLE_DIFF ) ; } 
public void _destroy () { try { org.atmosphere.cpr.Broadcaster b = getBroadcaster () ; if ( ! ( isCancelled . get () ) ) { removeFromAllBroadcasters () ; } broadcasters . clear () ; broadcasters . add ( b ) ; unregister () ; removeEventListeners () ; } catch ( java.lang.Throwable t ) { org.atmosphere.cpr.AtmosphereResourceImpl.logger . trace ( "destroyResource" , t ) ; } finally { unregister () ; webSocket = null ; } } 
public double taiSenAugmentingBeforeThreshold ( final com.kancolle.server.model.po.ship.IShip attackShip , final com.kancolle.server.model.po.battle.BattleContext context ) { final int taisenBasicHoug = taiSenBasicHoug ( attackShip , com.kancolle.server.service.battle.shelling.template.DEPTH_CHARGE_AUGMENTING ) ; double augmenting = basicAugmentBeforeThreshold ( attackShip , context ) ; final double taisenAugmenting = taisenShellingAugmenting ( attackShip ) ; augmenting += taisenAugmenting ; if ( augmenting < 0.0 ) { augmenting = 0.0 ; } return augmenting * taisenBasicHoug ; } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { try { switch ( item . getItemId () ) { case R.id.action_edit_saved_trips : if ( ( actionModeEdit ) != null ) { return false ; } actionModeEdit = getActivity () . startActionMode ( mActionModeCallback ) ; return true ; default: return super . onOptionsItemSelected ( item ) ; } } catch ( java.lang.Exception ex ) { android.util.Log . e ( edu.pdx.cecs.orcyclesensors.Fragment_MainTrips.MODULE_TAG , ex . getMessage () ) ; } return false ; } 
@ javax.annotation.PostConstruct public void test () { org.tuwien.pdfprocessor.model.Document d = new org.tuwien.pdfprocessor.model.Document () ; d . setDocumentId ( "chic_1" ) ; d . setDocumentName ( "chic" ) ; repository . insert ( d ) ; java.util.List < org.tuwien.pdfprocessor.model.Document > listOfDocuments = repository . findAll () ; for ( org.tuwien.pdfprocessor.model.Document listOfDocument : listOfDocuments ) { java.lang.System.out . print ( listOfDocument . getContent () ) ; } } 
@ java.lang.Override public void onError ( com.facebook.FacebookException error ) { android.util.Log . d ( com.magus.fblogin.FacebookLoginModule.TAG , ( "ShareApi.share: onError: error = " + ( error . toString () ) ) ) ; error . printStackTrace () ; if ( ( mLoginCallback ) == null ) return; com.facebook.react.bridge.WritableMap map = com.facebook.react.bridge.Arguments . createMap () ; map . putString ( "message" , error . getMessage () ) ; map . putString ( "eventName" , "Share: onError" ) ; invokeCallback ( mShareCallback , CALLBACK_TYPE_ERROR , map ) ; mShareCallback = nulll ; } 
public void onFreeze ( org.bukkit.command.CommandSender sender , org.bukkit.entity.Player targetPlayer ) { if ( targetPlayer == null ) { return; } if ( freezeHandler . isFrozen ( targetPlayer . getUniqueId () ) ) { freezeHandler . removeFreeze ( sender , targetPlayer ) ; } else freezeHandler . addFreeze ( sender , targetPlayer ) ; } 
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { mUser = dataSnapshot . getValue ( com.compscieddy.meetinthemiddle.model.User . class ) ; if ( ( mUser ) == null ) { com.compscieddy.meetinthemiddle.BaseActivity.lawg . d ( "Safety Check: mUser is null so creating a user" ) ; com.compscieddy.meetinthemiddle.model.User . createUser ( mFirebaseDatabase , user ) ; userIsReady () ; } else { com.compscieddy.meetinthemiddle.BaseActivity.lawg . d ( ( ( ( "mUser obtained email: " + ( mUser.email ) ) + " name: " ) + ( mUser.name ) ) ) ; userIsReady () ; } } 
@ java.lang.Override public void gotOneInstanceService ( final com.smartOne.Services.BTService service ) { updateAdapter ( service ) ; android.content.BroadcastReceiver bcr = new android.content.BroadcastReceiver () { @ java.lang.Override public void onReceive ( android.content.Context arg0 , android.content.Intent arg1 ) { if ( ( arg1 . getAction () ) == ( com.smartOne.Services.BTService.ScanCompleteBroadcast ) ) { updateAdapter ( service ) ; } } } ; android.content.IntentFilter filter = new android.content.IntentFilter () ; filter . addAction ( BTService.ScanCompleteBroadcast ) ; this . getActivity () . registerReceiver ( bcr , filter ) ; } 
public static void sort ( java.lang.Comparable [] a ) { for ( int i = 0 ; i < ( a.length ) ; i ++ ) { for ( int j = i ; ( j >= 0 ) && ( com.jaichaudhary.algorithms.sort.InsertionSort . less ( a [ i ] , a [ j ] ) ) ; j -- ) { com.jaichaudhary.algorithms.sort.InsertionSort . exch ( a , j , i ) ; } } } 
@ org.junit.Test public void editRecipe12 () { coffeeMaker . addRecipe ( coffee ) ; edu.pjatk.inn.coffeemaker.impl.Recipe newMocha = new edu.pjatk.inn.coffeemaker.impl.Recipe () ; newMocha . setName ( "Mocha" ) ; newMocha . setPrice ( 50 ) ; newMocha . setAmtCoffee ( 3 ) ; newMocha . setAmtMilk ( 2 ) ; newMocha . setAmtSugar ( 2 ) ; newMocha . setAmtChocolate ( java.lang.Integer . parseInt ( "a" ) ) ; org.junit.Assert . assertFalse ( coffeeMaker . editRecipe ( coffee , newMocha ) ) ; } 
public void run () { if ( ( CommandHandler.enabled ) == 0 ) { for ( org.bukkit.World world : org.bukkit.Bukkit . getServer () . getWorlds () ) { world . setStorm ( true ) ; org.bukkit.Bukkit . getServer () . broadcastMessage ( ( ( org.bukkit.ChatColor.RED ) + "[RS] RadStorm has been initiated. Take cover!" ) ) ; } } } 
private static void validateEpisode ( me.tdjones.main.model.Episode episode ) { try { if ( ( episode . getThumbnail () . getUrl () ) == null ) { episode . setThumbnail ( episode . getFeed () . getThumbnail () ) ; } else {} } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } 
public boolean setPos ( int col , int row ) { colPos = col ; rowPos = row ; int lengthPos = col * ( unit ) ; int heightPos = row * ( unit ) ; image . setBounds ( heightPos , lengthPos , ( heightPos + ( unit ) ) , ( lengthPos + ( unit ) ) ) ; return true ; } 
boolean isAppIdleFiltered ( java.lang.String packageName , int uidForAppId , int userId , long timeNow ) { final com.android.server.usage.UserUsageStatsService userService ; final long screenOnTime ; synchronized ( mLock ) { if ( timeNow == ( - 1 ) ) { timeNow = checkAndGetTimeLocked () ; } userService = getUserDataAndInitializeIfNeededLocked ( userId , timeNow ) ; screenOnTime = getScreenOnTimeLocked () ; } return isAppIdleFiltered ( packageName , android.os.UserHandle . getAppId ( uidForAppId ) , userId , userService , timeNow , screenOnTime ) ; } 
@ java.lang.Override public boolean onLongClick ( android.view.View p1 ) { wakeLock . release () ; running = false ; pause = false ; android.support.v4.app.FragmentManager manager = getSupportFragmentManager () ; dk.vongriffen.mycountdown.TL_Add_DialogFragment t_add_d = new dk.vongriffen.mycountdown.TL_Add_DialogFragment () ; java.lang.String s = getResources () . getString ( R.string.t_add_dialog_title ) ; t_add_d . setDialogTitle ( s ) ; t_add_d . show ( manager , "T_Add" ) ; return true ; } 
public void saveReport ( java.lang.String filename ) throws invalidNameException , invalidTableIdException , java.io.IOException , java.lang.ArrayIndexOutOfBoundsException { java.io.BufferedWriter bw = new java.io.BufferedWriter ( new java.io.FileWriter ( filename ) ) ; bw . write ( this . getMenu () ) ; bw . write ( this . getFrequency () ) ; bw . write ( this . getBills () ) ; bw . close () ; } 
@ org.junit.Test ( expected = com.google.api.server.spi.response.NotFoundException . class ) public void testAddUserToGroupNotFoundViaFieldValueException ( ) throws java.lang.Exception { com.jasify.schedule.appengine.model.common.OrganizationService service = com.jasify.schedule.appengine.model.common.OrganizationServiceFactory . getOrganizationService () ; com.google.appengine.api.datastore.Key groupId = org.slim3.datastore.Datastore . allocateId ( com.jasify.schedule.appengine.model.common.Group . class ) ; com.google.appengine.api.datastore.Key userId = org.slim3.datastore.Datastore . allocateId ( com.jasify.schedule.appengine.model.users.User . class ) ; service . addUserToGroup ( groupId , userId ) ; expectLastCall () . andThrow ( new com.jasify.schedule.appengine.model.EntityNotFoundException ( null ) ) ; testOrganizationServiceFactory . replay () ; endpoint . addUserToGroup ( com.jasify.schedule.appengine.spi.JasifyEndpointTest . newAdminCaller ( 55 ) , groupId , userId ) ; } 
public static < T > T createProxy ( java.lang.Class < T > clazz , io.vertx.core.Vertx vertx , java.lang.String address ) { java.lang.String proxyClassName = ( clazz . getName () ) + "VertxEBProxy" ; java.lang.Class < ? > proxyClass = io.vertx.serviceproxy.ProxyHelper . loadClass ( proxyClassName ) ; java.lang.reflect.Constructor constructor = io.vertx.serviceproxy.ProxyHelper . getConstructor ( proxyClass , io.vertx.core.Vertx . class , java.lang.String . class ) ; java.lang.Object instance = io.vertx.serviceproxy.ProxyHelper . createInstance ( constructor , vertx , address ) ; return ( ( T ) ( instance ) ) ; } 
public void setPoints ( Model.iFencer f , int points ) throws Model.ObjectDeprecatedException , java.sql.SQLException { if ( ! ( isValid ) ) throw new Model.ObjectDeprecatedException () ; if ( ( finished ) || ( t . isPreliminaryFinished () ) ) return; Model.Rounds.Round.sync . setPoints ( ID , ( ( Model.Fencer ) ( f ) ) . getID () , points ) ; if ( fencer1 . equals ( f ) ) pointsFor1 = points ; if ( fencer2 . equals ( f ) ) pointsFor2 = points ; } 
private static java.lang.Object fromString ( java.lang.String s ) { try { byte [] data = biz.source_code.base64Coder.Base64Coder . decode ( s ) ; java.io.ObjectInputStream ois = new java.io.ObjectInputStream ( new java.io.ByteArrayInputStream ( data ) ) ; java.lang.Object o = ois . readObject () ; ois . close () ; return o ; } catch ( java.lang.ClassNotFoundException e ) { e . printStackTrace () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return null ; } 
public void showSimpleAlertDialog ( java.lang.String message ) { android.app.AlertDialog dialog = new android.app.AlertDialog.Builder ( mContext ) . setMessage ( message ) . setPositiveButton ( mContext . getResources () . getString ( R.string.confirm ) , null ) . setCancelable ( false ) . create () ; dialog . show () ; } 
@ java.lang.Override public void accept ( net.minecraftforge.event.world.ChunkEvent.Load accepted ) { if ( accepted . isCanceled () ) return; int cx = accepted . getChunk () . xPosition ; int cy = accepted . getChunk () . zPosition ; rtg.util.PlaneLocation location = new rtg.util.PlaneLocation.Invariant ( cx , cy ) ; if ( ! ( toCheck . contains ( location ) ) ) return; toCheck . remove ( location ) ; for ( rtg.util.Direction forPopulation : directions ) { decorateIfOtherwiseSurrounded ( worldObj . getChunkProvider () , location , forPopulation ) ; } clearDecorations ( 0 ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; statusDisplay = new com.example.s162077.helloworld.StatusDisplay ( this ) ; statusDisplay . setListener ( new com.example.s162077.helloworld.StatusDisplay.Listener () { @ java.lang.Override public void onDisplay ( java.lang.String information ) { ( ( android.widget.EditText ) ( findViewById ( R.id.edit_message ) ) ) . setText ( information ) ; } } ) ; setContentView ( R.layout.activity_article_fragment ) ; } 
public address.sync.model.CloudAddressBook readCloudAddressBookFromFile ( java.lang.String addressBookName ) throws javax.xml.bind.JAXBException { java.io.File cloudFile = getCloudDataFilePath ( addressBookName ) ; java.lang.System.out . println ( ( "Reading from cloudFile: " + ( cloudFile . canRead () ) ) ) ; try { address.sync.model.CloudAddressBook cloudAddressBook = address.util.XmlUtil . getDataFromFile ( cloudFile , address.sync.model.CloudAddressBook . class ) ; return cloudAddressBook ; } catch ( javax.xml.bind.JAXBException e ) { java.lang.System.out . println ( "Error reading from cloud file." ) ; throw e ; } } 
public static void saveToFirebase ( com.firebase.geofire.GeoFire geoFire , com.firebase.client.Firebase db , nwhacks.tutorme.model.Tutor tutor , android.location.Location location ) { com.firebase.client.Firebase tutorStore = db . child ( "tutors" ) . child ( tutor . getFullName () ) ; tutorStore . setValue ( tutor ) ; geoFire . setLocation ( tutor . getFullName () , new com.firebase.geofire.GeoLocation ( location . getLatitude () , location . getLongitude () ) ) ; } 
private void checkOrientation () { if ( ( ( getResources () . getConfiguration () . orientation ) == ( android.content.res.Configuration.ORIENTATION_LANDSCAPE ) ) && ( ! ( getResources () . getBoolean ( R.bool.isTablet ) ) ) ) { android.support.v7.app.ActionBar tool = ( ( com.android.pena.david.bakingapp.ui.RecipeActivity ) ( getActivity () ) ) . getSupportActionBar () ; tool . hide () ; getActivity () . getWindow () . setFlags ( WindowManager.LayoutParams.FLAG_FULLSCREEN , WindowManager.LayoutParams.FLAG_FULLSCREEN ) ; } } 
public void add ( int oid , me.doubledutch.pikadb.JSONObject obj ) throws java.io.IOException , me.doubledutch.pikadb.JSONException { for ( java.lang.String key : me.doubledutch.pikadb.JSONObject . getNames ( obj ) ) { if ( ! ( columnMap . containsKey ( key ) ) ) { createColumn ( key ) ; } me.doubledutch.pikadb.Column col = getColumn ( key ) ; java.lang.Object value = obj . get ( key ) ; me.doubledutch.pikadb.Variant variant = me.doubledutch.pikadb.Variant . createVariant ( oid , value ) ; col . append ( variant ) ; } } 
public boolean isDayOffMorning () { return ( ( ( com.framgia.wsm.utils.common.StringUtils . isNotBlank ( mTextMorning ) ) && ( com.framgia.wsm.utils.common.StringUtils . isBlank ( mTextAfternoon ) ) ) && ( ! ( mTimeIn . equals ( mTextMorning ) ) ) ) && ( mTimeOut . equals ( mTextAfternoon ) ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/led/on" ) public org.springframework.http.ResponseEntity < nl.bos.entities.Pin > ledOn () { final nl.bos.controllers.GpioPinDigitalOutput gpioPin = initGpioPin () ; if ( gpioPin . isLow () ) { gpioPin . high () ; log . info ( "LED IS ON" ) ; pin . setState ( gpioPin . getState () ) ; } gpio . unprovisionPin ( gpioPin ) ; return new org.springframework.http.ResponseEntity < nl.bos.entities.Pin > ( pin , org.springframework.http.HttpStatus.OK ) ; } 
public void displayScore ( java.lang.Integer collectionScore , java.lang.Integer noOfQuestions ) { score . setText ( ( collectionScore + " %" ) ) ; goal . setText ( "Goal : 90%" ) ; correctStatus . setText ( ( ( ( ( collectionScore + "/" ) + noOfQuestions ) + " " ) + ( i18n . GL2278 () ) ) ) ; int scorePercentage = 0 ; if ( collectionScore != 0 ) { scorePercentage = ( collectionScore / noOfQuestions ) * 100 ; } java.lang.String progressRedialStyle = "blue-progress-" + scorePercentage ; progressRadial . addStyleName ( progressRedialStyle ) ; } 
private void downloadLyric ( java.lang.String url , java.lang.String name ) throws java.lang.Exception { com.yolanda.nohttp.download.DownloadRequest request = com.yolanda.nohttp.NoHttp . createDownloadRequest ( url , RequestMethod.GET , Constants.lyricPath , name , false , false ) ; com.yolanda.nohttp.download.DownloadQueue downloadQueue = com.yolanda.nohttp.NoHttp . newDownloadQueue () ; downloadQueue . add ( 0 , request , downloadListener ) ; } 
public void swapCards ( int swapRound ) { for ( int i = 0 ; i < 4 ; i ++ ) { manager . swapCards ( chosenLists . get ( i ) , i , swapRound ) ; manager . getPlayers () [ i ] . organize () ; } finishedSwapping = true ; findStartPlayer () ; java.lang.System.out . println ( this . currentPlayerInteracting ) ; } 
@ java.lang.Override public void robotInit () { this . logger = new org.usfirst.frc.team4141.MDRobotBase.Logger ( this ) ; this . subsystems = new java.util.Hashtable < java.lang.String , org.usfirst.frc.team4141.MDRobotBase.MDSubsystem > () ; this . commandChooser = new java.util.Hashtable < java.lang.String , org.usfirst.frc.team4141.MDRobotBase.MDCommand > () ; oi = new org.usfirst.frc.team4141.robot.OI ( this ) ; org.usfirst.frc.team4141.MDRobotBase.config.ConfigPreferenceManager . clearPreferences () ; configureRobot () ; oi . configureOI () ; java.lang.System.out . println ( "RobotInit completed" ) ; } 
private java.lang.String getXmlString ( net.sourceforge.pmd.lang.ast.Node node ) throws javax.xml.transform.TransformerException { java.io.StringWriter writer = new java.io.StringWriter () ; javax.xml.transform.Source source = new javax.xml.transform.dom.DOMSource ( node . getAsDocument () ) ; javax.xml.transform.Result result = new javax.xml.transform.stream.StreamResult ( writer ) ; javax.xml.transform.TransformerFactory transformerFactory = javax.xml.transform.TransformerFactory . newInstance () ; transformerFactory . setAttribute ( "indent-number" , 3 ) ; javax.xml.transform.Transformer xformer = transformerFactory . newTransformer () ; xformer . setOutputProperty ( javax.xml.transform.OutputKeys.INDENT , "yes" ) ; xformer . transform ( source , result ) ; return writer . toString () ; } 
private void disconnect ( java.lang.String message ) { if ( ( ( playerConnection ) == null ) || ( ( player ) instanceof net.sf.cglib.proxy.Factory ) ) { originalChannel . disconnect () ; } else { try { com.comphenix.protocol.utility.MinecraftMethods . getDisconnectMethod ( playerConnection . getClass () ) . invoke ( playerConnection , message ) ; } catch ( java.lang.Exception e ) { throw new java.lang.IllegalArgumentException ( "Unable to invoke disconnect method." , e ) ; } } } 
private net.canarymod.api.world.position.Direction calculateTurn ( net.canarymod.api.world.position.Direction d , boolean left , int deg ) { int dirInt = d . getIntValue () ; int turns = deg / 45 ; if ( left ) { dirInt -= turns ; } else { dirInt += turns ; } dirInt = dirInt % 8 ; d = net.canarymod.api.world.position.Direction . getFromIntValue ( dirInt ) ; return d ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; com.facebook.drawee.backends.pipeline.Fresco . initialize ( this ) ; setContentView ( getContentView () ) ; butterknife.ButterKnife . bind ( this ) ; if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.KITKAT ) ) { getWindow () . addFlags ( WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS ) ; } deviceWidth = getWindowManager () . getDefaultDisplay () . getWidth () ; devideHeight = getWindowManager () . getDefaultDisplay () . getHeight () ; } 
public void setAdapter ( android.support.v4.view.PagerAdapter adapter ) { if ( ( this . adapter ) != null ) { unregisterDataSetObserver ( adapterObserver ) ; } this . adapter = adapter ; if ( ( this . adapter ) != null ) { this . adapter . registerDataSetObserver ( adapterObserver ) ; } } 
@ org.junit.Test public void genWidget ( ) throws java.lang.Exception { java.lang.String jsonStr = org.talend.daikon.serialize.jsonschema.JsonSchemaUtilTest . readJson ( "FullExampleUiSchema.json" ) ; org.talend.daikon.serialize.FullExampleProperties properties = new org.talend.daikon.serialize.FullExampleProperties ( "fullexample" ) ; properties . init () ; org.talend.daikon.serialize.jsonschema.UiSchemaGenerator generator = new org.talend.daikon.serialize.jsonschema.UiSchemaGenerator () ; java.lang.System.out . println ( generator . genWidget ( properties , Form.MAIN ) . toString () ) ; org.junit.Assert . assertEquals ( jsonStr , generator . genWidget ( properties , Form.MAIN ) . toString () ) ; } 
public static void main ( java.lang.String [] args ) { swissTournamentRunner.GUI gui = new swissTournamentRunner.GUI ( swissTournamentRunner.RunTourney.tourney ) ; swissTournamentRunner.RunTourney.tourney . setGUI ( gui ) ; swissTournamentRunner.GUI . createAndShowGUI ( true ) ; swissTournamentRunner.RunTourney . showCredits () ; swissTournamentRunner.RunTourney.tourney . signUpPlayers () ; swissTournamentRunner.RunTourney.tourney.allParticipantsIn = true ; swissTournamentRunner.RunTourney.tourney . run () ; swissTournamentRunner.TntFileManager . saveTournament ( swissTournamentRunner.RunTourney.tourney ) ; swissTournamentRunner.GUI . wipePane () ; swissTournamentRunner.RunTourney.tourney . postTourneyProcessing () ; } 
public static java.lang.String [] getCorrectNumberOfParameters ( java.lang.String goodParameter , java.lang.String inputCommand , int countParameters ) throws ua.com.juja.sergiishcherbakov.sqlcmd.model.exeptions.IncorrectNumberOfParametersException { java.lang.String [] data = inputCommand . split ( "[|]" ) ; if ( ( data.length ) != countParameters ) { throw new ua.com.juja.sergiishcherbakov.sqlcmd.model.exeptions.IncorrectNumberOfParametersException ( ( ( ( countParameters + " parameters are expected but " ) + ( data.length ) ) + " is entered" ) ) ; } if ( ua.com.juja.sergiishcherbakov.sqlcmd.model.CorrectParameterChecker . isCorrectFirstParameter ( data [ 0 ] , goodParameter ) ) { return data ; } else { throw new ua.com.juja.sergiishcherbakov.sqlcmd.model.exeptions.IncorrectNumberOfParametersException ( "" ) ; } } 
@ java.lang.Override public void setWireframeColor ( org.jzy3d.colors.Color color ) { super . setWireframeColor ( color ) ; if ( ( components ) != null ) for ( org.jzy3d.plot3d.primitives.AbstractDrawable c : components ) { if ( ( c != null ) && ( c instanceof org.jzy3d.plot3d.primitives.AbstractWireframeable ) ) ( ( org.jzy3d.plot3d.primitives.AbstractWireframeable ) ( c ) ) . setWireframeColor ( color ) ; } } 
public net.minecraft.item.ItemStack setItem ( net.minecraft.entity.player.EntityPlayer player , net.minecraft.item.ItemStack item ) { load ( player ) ; item . setCount ( 1 ) ; net.minecraft.item.ItemStack stack = handler . getStackInSlot ( 0 ) ; this . handler . setStackInSlot ( 0 , item ) ; this . save ( net.minecraft.client.Minecraft . getMinecraft () . player ) ; return stack ; } 
void init ( org.json.JSONArray data , org.apache.cordova.CallbackContext callback ) throws org.json.JSONException { org.json.JSONObject params = data . getJSONObject ( 0 ) ; boolean isOpenMessageRoaming = ( params . has ( "isOpenMessageRoaming" ) ) ? params . getBoolean ( "isOpenMessageRoaming" ) : false ; cn.jpush.im.android.api.JMessageClient . init ( mCordovaActivity . getApplicationContext () , isOpenMessageRoaming ) ; cn.jpush.im.android.api.JMessageClient . registerEventReceiver ( this ) ; mCallback = callback ; } 
public void put () { shouldUpdateStack () ; shouldUpdateTa () ; int y = _ps . pop () ; int x = _ps . pop () ; int v = _ps . pop () ; if ( ( ( ( x > ( _pa._xSize ) ) || ( y > ( _pa._ySize ) ) ) || ( x < 0 ) ) || ( y < 0 ) ) {} else { _pa . setOpCode ( x , y , ( ( char ) ( v ) ) ) ; } } 
@ java.lang.Override protected java.lang.Void doInBackground ( android.content.Context . . . contexts ) { try { NetworkUtilsAndReceiver.ONLY_WIFI = android.preference.PreferenceManager . getDefaultSharedPreferences ( contexts [ 0 ] ) . getBoolean ( "only_wifi" , false ) ; ar.rulosoft.navegadores.Navigator.navigator = new ar.rulosoft.navegadores.Navigator ( contexts [ 0 ] ) ; } catch ( java.lang.Exception ignore ) { ignore . printStackTrace () ; } return null ; } 
public java.sql.ResultSet query ( java.lang.String sql , java.lang.Object . . . object ) { java.sql.ResultSet set = null ; try { java.sql.PreparedStatement st = getConnection () . prepareStatement ( sql ) ; for ( int i = 0 ; i < ( object.length ) ; i ++ ) { st . setObject ( ( i + 1 ) , object [ i ] ) ; } set = st . executeQuery () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } finally { closeConn () ; } return set ; } 
@ java.lang.Override public void setRowValue ( int columnIndex , java.lang.Object value ) { if ( columnIndex == 0 ) { if ( this . valueDefined ) { throw new java.lang.IllegalStateException ( "Attempted to set the list row twice." ) ; } this . valueDefined = true ; this . value = value ; } else { throw new java.lang.IllegalArgumentException ( ( "Expected column index 0, got: " + columnIndex ) ) ; } } 
private void runAs ( io.subutai.hub.share.dto.environment.EnvironmentPeerDto peerDto ) { if ( canIgnoreState ( peerDto ) ) { log . info ( "Ignoring state: {}" , peerDto . getState () ) ; return; } try { java.lang.Object result = doHandle ( peerDto ) ; io.subutai.core.hubmanager.impl.http.RestResult < java.lang.Object > restResult = post ( peerDto , result ) ; if ( restResult . isSuccess () ) { onSuccess ( peerDto ) ; } } catch ( java.lang.Exception e ) { log . error ( "Failed to process environment state: " , e ) ; handleError ( peerDto , e ) ; } } 
public void setSecondaryFragment ( com.example.kemos.fainalmoviemalapp.Controller.ISecondaryFragment secondaryFragment ) { this . secondaryFragment = secondaryFragment ; if ( secondaryFragment != null ) { secondaryFragment . setMovieItem ( movieItemArray . get ( 0 ) ) ; getActivity () . setTitle ( ( ( ( ( movieItemArray . get ( 0 ) . getTitle () ) + " (" ) + ( movieItemArray . get ( 0 ) . getDate () . substring ( 0 , 4 ) ) ) + ")" ) ) ; } } 
public static void setConfigurationFields ( java.lang.Object configurable , org.apache.flume.Context context , org.slf4j.Logger logger ) throws org.apache.flume.conf.ConfigurationException { java.lang.Class < ? > clazz = configurable . getClass () ; java.util.Map < java.lang.String , java.lang.String > properties = context . getSubProperties ( ( ( clazz . getSimpleName () ) + "." ) ) ; org.apache.flume.tools.FlumeBeanConfigurator . setConfigurationFields ( configurable , properties , logger ) ; } 
@ java.lang.Override public final void initialize ( @ org.eclipse.jdt.annotation.Nullable java.net.URL location , @ org.eclipse.jdt.annotation.Nullable java.util.ResourceBundle resources ) { ourModel = initModel () ; if ( ( ourModel ) != null ) { adowrath.fx.model.Model . addLocaleListener ( this : : changed ) ; } init ( initRoot () ) ; delegatedInit ( location , resources ) ; if ( ( ourModel ) != null ) { if ( isToTranslate () ) { initLocalization () ; } else { java.lang.System.err . println ( ( ( toString () ) + " is not to translate? Is this a working matter?" ) ) ; } } } 
@ android.annotation.TargetApi ( value = Build.VERSION_CODES.M ) @ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { android.view.View view = inflater . inflate ( R.layout.fragment_item_list , container , false ) ; android.util.Log . d ( "ResultListFragment" , "onCreateView" ) ; se.anderssjobom.weathertracker.ResultListFragment.mRecyclerView = ( ( android.support.v7.widget.RecyclerView ) ( view . findViewById ( R.id.result_recycler_view ) ) ) ; se.anderssjobom.weathertracker.ResultListFragment.mRecyclerView . setHasFixedSize ( true ) ; android.support.v7.widget.RecyclerView.LayoutManager mLayoutManager = new android.support.v7.widget.LinearLayoutManager ( getContext () ) ; se.anderssjobom.weathertracker.ResultListFragment.mRecyclerView . setLayoutManager ( mLayoutManager ) ; return view ; } 
private java.lang.String toDependendeeProjectRelativePath ( java.io.File file ) { for ( final java.io.File projectFile : this . projectDependencies ) { if ( org.jerkar.tool.builtins.eclipse.JkUtilsFile . isAncestor ( projectFile , file ) ) { final java.lang.String relativePath = org.jerkar.tool.builtins.eclipse.JkUtilsFile . getRelativePath ( projectFile , projectFile ) ; final org.jerkar.tool.builtins.eclipse.Project project = org.jerkar.tool.builtins.eclipse.Project . of ( new java.io.File ( projectFile , ".project" ) ) ; return ( ( "/" + ( project.name ) ) + "/" ) + relativePath ; } } return null ; } 
public edu.ccbcmd.pathwayguide.CourseClass getCourseByName ( java.lang.String name , int count , android.content.Context context ) { for ( edu.ccbcmd.pathwayguide.CourseClass course : sortedObject ) { if ( course . getTitle () . equals ( name ) ) { return course ; } } return instantiateNewCourse ( name , context ) ; } 
public static void zipWith ( java.io.File directory , java.io.File zipFile , java.util.List < java.io.File > includes ) throws java.io.IOException { java.io.FileOutputStream fos = null ; try { fos = new java.io.FileOutputStream ( zipFile ) ; com.centurylink.mdw.util.file.ZipHelper . writeZipWith ( directory , fos , includes ) ; } finally { if ( fos != null ) fos . close () ; } } 
public javax.json.JsonStructure getEventOprs ( java.lang.String eventKey , int verboseLevel ) { javax.json.JsonStructure data = get ( ( ( "event/" + eventKey ) + "/oprs" ) , header ) ; if ( ( verboseLevel < 2 ) && ( data != null ) ) { data = ( ( javax.json.JsonStructure ) ( ( ( javax.json.JsonObject ) ( data ) ) . get ( "oprs" ) ) ) ; } return data ; } 
@ java.lang.Override public void onSocketClose ( java.lang.Void nil ) { if ( ! ( activeClosed ) ) { if ( ( netRequestHandlerList ) != null ) { try { for ( com.ivxg.game.agent.INetRequestHandler handler : netRequestHandlerList ) { handler . close () ; } } catch ( java.lang.Throwable e ) { com.ivxg.gate.DefaultClientAgent.logger . error ( "ClientCloseError!" , e ) ; } } } } 
private void validate ( java.lang.String funcName , org.apache.kylin.metadata.datatype.DataType dataType ) { if ( ( org.apache.kylin.measure.hllc.HLLCMeasureType.FUNC_COUNT_DISTINCT . equals ( funcName ) ) == false ) throw new java.lang.IllegalArgumentException () ; if ( ( org.apache.kylin.measure.hllc.HLLCMeasureType.DATATYPE_HLLC . equals ( dataType . getName () ) ) == false ) throw new java.lang.IllegalArgumentException () ; if ( ( ( dataType . getPrecision () ) < 1 ) || ( ( dataType . getPrecision () ) > 5000 ) ) throw new java.lang.IllegalArgumentException () ; } 
@ java.lang.Override public void run () { if ( isPlaying ) { currentPosition += 200 ; seekBar . setProgress ( currentPosition ) ; setElapsedTime ( currentPosition ) ; } if ( ( currentPosition ) < ( maxDuration ) ) { seekHandler . postDelayed ( this , 200 ) ; } } 
public void AddMinions ( Pieces p ) { if ( ( ( ( GetMinionCount ( Colors.None ) ) + ( GetDemonCount () ) ) + ( GetTrollCount () ) ) > 1 ) { AddTroubleMaker ( p ) ; } ListMinions . add ( p ) ; } 
org.jsoup.parser.Element insert ( org.jsoup.parser.Token.StartTag startTag ) { org.jsoup.parser.Tag tag = org.jsoup.parser.Tag . valueOf ( startTag . name () , settings ) ; org.jsoup.parser.Element el = new org.jsoup.parser.Element ( tag , baseUri , settings . normalizeAttributes ( startTag.attributes ) ) ; insertNode ( el ) ; if ( startTag . isSelfClosing () ) { tokeniser . acknowledgeSelfClosingFlag () ; if ( ! ( tag . isKnownTag () ) ) tag . setSelfClosing () ; } else { stack . add ( el ) ; } return el ; } 
@ javafx.fxml.FXML public void saveAction () { myProject.model.SettingsConstants . setStartAnalysisWithAppStart3 ( radioStartAnalysisWithAppStart . isSelected () ) ; myProject.model.SettingsConstants . setSaveReportsAutomatically4 ( radioSaveReportsAuto . isSelected () ) ; myProject.model.SettingsConstants . setSliderSize5 ( sliderSize . getValue () ) ; myProject.model.SettingsConstants . setSliderNumber6 ( sliderNumber . getValue () ) ; myProject.model.SettingsConstants . setStartAppWithWindows ( radioStartAppWithWin . isSelected () ) ; java.lang.System.out . println ( ( "::: " + ( radioStartAppWithWin . isSelected () ) ) ) ; myProject.view.MainWindowController . getOptionStage () . close () ; } 
private java.lang.String getBooksByGenre ( java.lang.String genre_id ) { org.hibernate.Session ORMSession = library.HibernateUtil . getSessionFactory () . openSession () ; org.hibernate.Query query = ORMSession . createSQLQuery ( ( "select name from book where genre_id = " + genre_id ) ) ; java.util.List result = query . list () ; ORMSession . disconnect () ; ORMSession . close () ; java.lang.String returnString = "" ; for ( java.lang.Object book_name : result ) { returnString += book_name + "; " ; } return returnString ; } 
private java.util.List < java.lang.String > getTranslation () { java.util.List < java.lang.String > translationList = new java.util.ArrayList <> ( 1 ) ; java.lang.String [] translation = translationResult . replace ( "[" , "" ) . split ( "\"," ) ; translationList . add ( translation [ 0 ] . replace ( "\"" , "" ) ) ; return translationList ; } 
private void setIcon ( android.widget.ImageView image , java.lang.String detailID , int value , int indicator , org.ei.opensrp.commonregistry.CommonPersonObjectClient pc ) { image . setImageResource ( ( ( pc . getDetails () . get ( detailID ) ) != null ? ( pc . getDetails () . get ( detailID ) . length () ) == 10 ? R.drawable.ic_yes_large : value > indicator ? R.drawable.ic_no : R.drawable.abc_list_divider_mtrl_alpha : R.drawable.abc_list_divider_mtrl_alpha ) ) ; } 
private java.lang.String getPropValue ( org.micromanager.asidispim.Data.Devices.Keys device , org.micromanager.asidispim.Data.Properties.Keys name , java.lang.String propNameSubstitute ) { java.lang.String val ; if ( device == ( Devices.Keys.PLUGIN ) ) { val = prefs_ . getString ( org.micromanager.asidispim.Data.Properties.PLUGIN_PREF_NODE , name , "" ) ; } else { java.lang.String mmDevice = devices_ . getMMDevice ( device ) ; val = "" ; if ( mmDevice != null ) { try { val = core_ . getProperty ( mmDevice , name . toString ( propNameSubstitute ) ) ; } catch ( java.lang.Exception ex ) {} } } return val ; } 
@ java.lang.Override public com.helpme.app.utils.tuple.Tuple3 < com.helpme.app.world.level.ILevel , com.helpme.app.world.body.IBody , com.helpme.app.world.consciousness.IConsciousness [] > loadGame ( java.lang.String filePath ) { try { com.helpme.app.saveload.SaveRoot saveRoot = unmarshall ( filePath ) ; return new com.helpme.app.utils.tuple.Tuple3 < com.helpme.app.world.level.ILevel , com.helpme.app.world.body.IBody , com.helpme.app.world.consciousness.IConsciousness [] > ( saveRoot . loadLevel () , saveRoot . loadPlayer () , saveRoot . loadEnemies () ) ; } catch ( javax.xml.bind.JAXBException e ) { java.lang.System.out . println ( "Could not load game from that path" ) ; java.lang.System.out . println ( e ) ; return null ; } } 
private static java.lang.String getFromStream ( java.io.InputStream inputStream ) throws java.io.IOException { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( inputStream ) ) ; java.lang.StringBuilder buffer = new java.lang.StringBuilder () ; java.lang.String line ; while ( ( line = reader . readLine () ) != null ) { buffer . append ( line ) ; } return buffer . toString () ; } 
public static void getResults ( ) throws java.lang.Exception { try { com.pasapalabra.game.service.ClientConnection.userScore = ServiceLocator.service . getResults ( com.pasapalabra.game.service.ClientConnection.sessionAuth ) ; if ( com.pasapalabra.game.service.ClientConnection.player1 ) { com.pasapalabra.game.service.ClientConnection.playing = false ; com.pasapalabra.game.service.ClientConnection.player1 = false ; com.pasapalabra.game.service.ClientConnection.reachZ = false ; com.pasapalabra.game.service.ClientConnection.turn = false ; } else { com.pasapalabra.game.service.ClientConnection.turn = false ; com.pasapalabra.game.service.ClientConnection.reachZ = false ; } } catch ( java.lang.Exception e ) { throw e ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/buy" ) @ org.springframework.web.bind.annotation.ResponseBody public com.netease.course.utils.Status buy ( @ org.springframework.web.bind.annotation.RequestBody java.util.List < com.netease.course.meta.BuyList > buyList , javax.servlet.http.HttpSession session ) { java.lang.System.out . println ( "doBuy" ) ; trx . buy ( buyList ) ; com.netease.course.meta.User user = ( ( com.netease.course.meta.User ) ( session . getAttribute ( "user" ) ) ) ; com.netease.course.meta.User newUser = userDao . getUser ( user . getUserName () ) ; session . setAttribute ( "user" , newUser ) ; return com.netease.course.utils.Status.OK ; } 
public void onSectionAttached ( int number ) { switch ( number ) { case 1 : mTitle = "Home" ; break; case 2 : mTitle = "Email" ; startActivity ( new android.content.Intent ( this , com.example.johnpham.hcftw.Email . class ) ) ; break; case 3 : mTitle = "Calendar" ; startActivity ( new android.content.Intent ( this , com.example.johnpham.hcftw.Calender_ . class ) ) ; break; case 4 : mTitle = "Report" ; startActivity ( new android.content.Intent ( getApplicationContext () , com.example.johnpham.hcftw.Tutor_Report . class ) ) ; break; } } 
protected java.lang.Class < ? > loadAgain ( java.lang.String s ) throws java.lang.ClassNotFoundException { java.lang.Class < ? > clazz = null ; if ( classExist ( s , this . classpath . toArray ( new java.lang.String [ this . classpath . size () ] ) ) ) { java.lang.System.out . println ( ( "Reloading " + s ) ) ; clazz = findClass ( s ) ; } else { clazz = loadClassAsReloadable ( s ) ; } return clazz ; } 
@ org.junit.Test public void testCanAddMultipleXAttrToSameFile ( ) throws java.io.IOException { org.apache.giraffa.TestXAttr.grfs . setXAttr ( path1 , attrName1 , attrValue1 ) ; org.apache.giraffa.TestXAttr.grfs . setXAttr ( path1 , attrName2 , attrValue2 ) ; java.util.List < java.lang.String > listOfXAttrNames = org.apache.giraffa.TestXAttr.grfs . listXAttrs ( path1 ) ; org.junit.Assert . assertEquals ( 2 , listOfXAttrNames . size () ) ; } 
@ org.junit.Test ( expected = java.lang.IllegalStateException . class ) public void testStopStoppedRecord () { record . start () ; timeout () ; long start = getStartFieldValue () . getTime () ; record . stop () ; timeout () ; record . stop () ; long end = getEndFieldValue () . getTime () ; org.junit.Assert . assertTrue ( ( end > start ) ) ; } 
protected java.lang.String doInBackground ( java.lang.Void . . . params ) { ethanfortin_nicaragua.elbluffhospital.RequestHandler reqHan = new ethanfortin_nicaragua.elbluffhospital.RequestHandler () ; java.util.HashMap < java.lang.String , java.lang.String > map = new java.util.HashMap <> () ; java.lang.String s ; switch ( argChoice ) { case 1 : map . put ( "patid" , argVal ) ; s = reqHan . sendGetRequestParam ( ConnVars.URL_FETCH_PAT_RX , map ) ; break; default: java.lang.System.out . println ( ( "Default -- search did not work: argChoice == " + argChoice ) ) ; s = "badMethod" ; break; } return s ; } 
private double mean_count_gamma ( int ex_s , int ex_d , int ex_n , int k , int wsdn ) { if ( wsdn == 0 ) return ( mean_nkd [ k ] ) - ( gamma [ ex_s ] [ ex_d ] [ ex_n ] [ k ] ) ; else return ( mean_nkw [ k ] [ wsdn ] ) - ( gamma [ ex_s ] [ ex_d ] [ ex_n ] [ k ] ) ; } 
@ java.lang.Override public void updateByDrag ( java.awt.Point aPoint ) { if ( radiusAbjustEnabled ) { this . updateRadiusByDrag ( aPoint ) ; pencilDistance = ( ( previousPencilDistance ) * ( radius ) ) / ( previousRadius ) ; } else if ( pencilMoveEnabled ) { this . updatePencilCenterByDrag ( aPoint ) ; } this . updateTapArea () ; return; } 
@ org.junit.Test public void testGetDrawables () { com.github.fishio.IDrawable d = org.mockito.Mockito . mock ( com.github.fishio.Entity . class ) ; field . add ( d ) ; org.junit.Assert . assertEquals ( d , field . getDrawables () . getFirst () ) ; org.junit.Assert . assertEquals ( 2 , field . getDrawables () . size () ) ; } 
@ java.lang.Override public int getGapCount () { int count = 0 ; if ( ( u1 ) == ( u2 ) ) { count ++ ; } for ( int j = 0 ; j < ( parent . getGapCount () ) ; j ++ ) { float gap = parent . getGap ( j ) ; if ( ( ( u1 ) < gap ) && ( gap < ( u2 ) ) ) { count ++ ; } } return count ; } 
@ java.lang.Override public java.util.List < com.microsoft.azure.management.network.ApplicationGatewayBackendAddress > backendAddresses () { java.util.List < com.microsoft.azure.management.network.ApplicationGatewayBackendAddress > addresses = new java.util.ArrayList <> () ; com.microsoft.azure.management.network.ApplicationGatewayBackend backend = this . backend () ; if ( ( backend != null ) && ( ( backend . addresses () ) != null ) ) { backend . addresses () ; } return java.util.Collections . unmodifiableList ( addresses ) ; } 
public Model.GameObject.Item.Items.Takables.Quest addQuest ( java.lang.String name , java.lang.String description , int x , int y , int requiredLevel , Model.StatStruc modify ) { id = ItemEnum.QUEST ; location = new Model.Location ( x , y , 0 ) ; requirement = new Model.Requirement ( requiredLevel ) ; effect = new Model.Effects.Effect ( modify ) ; return new Model.GameObject.Item.Items.Takables.Quest ( id , name , description , location , requirement , effect ) ; } 
@ java.lang.Override public boolean boolVal ( int doc ) { if ( ( ( lhsVal . doubleVal ( doc ) ) == ( lhsVal . longVal ( doc ) ) ) && ( ( rhsVal . doubleVal ( doc ) ) == ( lhsVal . longVal ( doc ) ) ) ) { return compare ( lhsVal . longVal ( doc ) , rhsVal . longVal ( doc ) ) ; } return compare ( lhsVal . doubleVal ( doc ) , rhsVal . doubleVal ( doc ) ) ; } 
@ java.lang.Override public void setSelection ( int position ) { currentPosition = position ; positionChanger . onPositionChange ( currentPosition ) ; if ( ( ( position >= 0 ) && ( ( mAdapter ) != null ) ) && ( position < ( mAdapter . getCount () ) ) ) { mNextX = position * ( screenWidth ) ; if ( ( positionChanger ) != null ) { positionChanger . onPositionChange ( currentPosition ) ; } this . requestLayout () ; } } 
public static java.lang.String getUsername ( com.sun.net.httpserver.HttpExchange exchange ) { java.lang.String userSessionId = exchange . getRequestHeaders () . getFirst ( "Cookie" ) ; int i ; if ( ( userSessionId == null ) || ( userSessionId . equals ( "0" ) ) ) return false ; for ( i = 0 ; i < ( MuzikrWeb.sessionIds . size () ) ; i ++ ) { if ( ( MuzikrWeb.sessionIds . get ( i ) ) == ( java.lang.Integer . parseInt ( userSessionId ) ) ) return MuzikrWeb.loginUsernames . get ( i ) ; } return null ; } 
@ java.lang.Override public void OnRotation ( float angle ) { if ( mModeMove ) { mYawR = ( ( float ) ( java.lang.Math . toRadians ( ( - angle ) ) ) ) ; com.lvonasek.openconstructor.TangoJNINative . setView ( ( ( mYawM ) + ( mYawR ) ) , mPitch , mMoveX , mMoveY , mMoveZ , ( ! ( mViewMode ) ) ) ; } } 
public void sendRequest () { if ( ( NetworkConnectionHandler.isExecuting ) == false ) { try { requestSenderMiddleware . sendRequest () ; in.yousee.theadmin.YouseeCustomActivity . setProgressVisible ( this , true ) ; } catch ( in.yousee.theadmin.model.CustomException e ) { in.yousee.theadmin.util.LogUtil . print ( "network not connected exception found" ) ; promptRetry ( e . getErrorMsg () ) ; e . printStackTrace () ; } } else { android.widget.Toast . makeText ( this , "" , Toast.LENGTH_SHORT ) . show () ; } } 
@ java.lang.Override public java.lang.Object intercept ( java.lang.Object obj , java.lang.reflect.Method method , java.lang.Object [] args , com.github.drinkjava2.cglib3_2_0.proxy.MethodProxy cgLibMethodProxy ) throws java.lang.Throwable { if ( ( ! ( myAdvisors . isEmpty () ) ) && ( myAdvisors . get ( 0 ) . match ( obj . getClass () . getName () , method . getName () ) ) ) return new com.github.drinkjava2.jbeanbox.AdviceCaller ( this , obj , method , args , cgLibMethodProxy , myAdvisors ) . callNextAdvisor () ; else return cgLibMethodProxy . invokeSuper ( obj , args ) ; } 
public static int getTimeInt () { java.util.Calendar calendar = java.util.Calendar . getInstance () ; int hours = calendar . getTime () . getHours () ; if ( ( hours < 12 ) && ( hours >= 8 ) ) return hours - 7 ; if ( ( hours >= 13 ) && ( hours < 17 ) ) return ( hours - 12 ) + 4 ; if ( ( hours >= 18 ) && ( hours < 23 ) ) return ( hours - 17 ) + 8 ; return - 1 ; } 
public void setAdapter ( net.lucode.hackware.magicindicator.buildins.commonnavigator.abs.CommonNavigatorAdapter adapter ) { if ( ( mAdapter ) == adapter ) { return; } if ( ( mAdapter ) != null ) { mAdapter . unregisterDataSetObserver ( mObserver ) ; } mAdapter = adapter ; if ( ( mAdapter ) != null ) { mAdapter . registerDataSetObserver ( mObserver ) ; adapter . notifyDataSetChanged () ; } else { mNavigatorHelper . setTotalCount ( 0 ) ; init () ; } } 
@ org.junit.Test public void removeDeadStonesTest1 () { com.letitgo.Board board = new com.letitgo.Board ( 9 ) ; int firstPoint ; int secondPoint ; board . loadFromFile ( "BoardTest_a.dat" ) ; board . removeDeadStones ( Board.ENEMY ) ; firstPoint = board . getPoint ( board , 2 , 6 ) ; secondPoint = board . getPoint ( board , 3 , 6 ) ; org.junit.Assert . assertTrue ( "removeDeadStonesTest1 failed" , ( ( firstPoint == ( com.letitgo.Board.EMPTY ) ) && ( secondPoint == ( com.letitgo.Board.EMPTY ) ) ) ) ; } 
private org.wso2.andes.kernel.slot.Slot getUnassignedSlot ( java.lang.String queueName ) throws org.wso2.andes.kernel.AndesException { org.wso2.andes.kernel.slot.Slot slotToBeAssigned = null ; java.lang.String lockKey = queueName + ( org.wso2.andes.kernel.slot.SlotManagerClusterMode . class ) ; synchronized ( lockKey . intern () ) { slotToBeAssigned = slotAgent . getUnAssignedSlot ( queueName ) ; if ( org.wso2.andes.kernel.slot.SlotManagerClusterMode.log . isDebugEnabled () ) { org.wso2.andes.kernel.slot.SlotManagerClusterMode.log . debug ( ( ( ( "Giving a slot from unassigned slots. Slot: " + slotToBeAssigned ) + " to queue: " ) + queueName ) ) ; } } return slotToBeAssigned ; } 
public int compareTo ( Graph.GraphWeighted.Edge that ) { if ( ( java.lang.Math . abs ( ( ( this . weight ) - ( that.weight ) ) ) ) > ( Graph.GraphWeighted.EPS ) ) return java.lang.Double . compare ( this . weight , that.weight ) ; if ( ( this . from ) == ( that.from ) ) return java.lang.Integer . compare ( this . to , that.to ) ; return java.lang.Integer . compare ( this . from , that.from ) ; } 
private void init () { skittleContainer = ( ( android.widget.LinearLayout ) ( android.view.LayoutInflater . from ( getContext () ) . inflate ( R.layout.skittle_container , this , false ) ) ) ; addView ( skittleContainer ) ; skittleMain = ( ( android.support.design.widget.FloatingActionButton ) ( findViewById ( R.id.skittle_main ) ) ) ; skittleMain . setOnClickListener ( this ) ; } 
private static net.minecraft.stats.Achievement createAchievement ( java.lang.String name , int column , int row , net.minecraft.item.Item item , net.minecraft.stats.Achievement parent ) { net.minecraft.stats.Achievement acheivement = new net.minecraft.stats.Achievement ( ( "achievement." + name ) , name , column , row , item , ( ( net.minecraft.stats.Achievement ) ( null ) ) ) ; net.magicaltech.handler.MTAchievementHandler.achievementsMT . add ( acheivement ) ; return acheivement ; } 
private void handleDodge ( com.pokegoapi.api.gym.Battle.BattleHandler handler , com.pokegoapi.api.gym.Battle.ServerAction action ) { com.pokegoapi.api.gym.Battle.BattlePokemon pokemon = getActivePokemon ( action . getAttackerIndex () , true ) ; if ( ( action . getAttackerIndex () ) == 0 ) { pokemon = activeAttacker ; } int duration = action . getDuration () ; handler . onDodge ( api , this , pokemon , duration , action ) ; } 
@ java.lang.Override public void onError ( java.lang.Throwable ex , com.linkedin.r2.message.RequestContext requestContext , java.util.Map < java.lang.String , java.lang.String > wireAttrs , com.linkedin.r2.filter.NextFilter < com.linkedin.r2.message.rest.StreamRequest , com.linkedin.r2.message.rest.StreamResponse > nextFilter ) { final com.linkedin.r2.filter.Filter filter = _filter ; ( ( com.linkedin.r2.filter.message.rest.StreamResponseFilter ) ( filter ) ) . onError ( ex , requestContext , wireAttrs , nextFilter ) ; } 
@ java.lang.Override public java.lang.String toString () { return ( ( ( ( ( "[dir=" + ( getPath () . toString () ) ) + ", size=" ) + ( photoFiles . size () ) ) + ", " ) + ( photoFiles . toString () ) ) + "]" ; } 
@ org.junit.Test public void shouldRenderChildsRegisterCardNumberRow () { final java.util.ArrayList < android.view.View > outViews = new java.util.ArrayList <> () ; activity . getViewPagerAdapter () . getItem ( 0 ) . getView () . findViewById ( R.id.rowholder ) . findViewsWithText ( outViews , "Child\'s register card number" , View.FIND_VIEWS_WITH_TEXT ) ; junit.framework.Assert . assertFalse ( outViews . isEmpty () ) ; } 
public void rewind ( long ns ) throws java.io.IOException { synchronized ( lock ) { ensureOpen () ; if ( ( next ) >= ( str . size () ) ) return; next -= ns ; if ( 0 > ( next ) ) next = 0 ; if ( ( next ) > ( str . size () ) ) next = str . size () ; } } 
public static boolean isFilePatternValid () { java.lang.String pattern = MovieModuleManager.MOVIE_SETTINGS . getMovieRenamerFilename () . toUpperCase () . trim () ; if ( ( pattern . isEmpty () ) || ( ( ( pattern . contains ( "$T" ) ) || ( pattern . contains ( "$E" ) ) ) || ( pattern . contains ( "$O" ) ) ) ) { return true ; } return false ; } 
public void deletePDF ( java.lang.String filePath ) throws com.at.ac.tuwien.sepm.ss15.edulium.service.ServiceException { try { java.nio.file.Files . deleteIfExists ( java.nio.file.Paths . get ( filePath ) ) ; } catch ( java.io.IOException e ) { com.at.ac.tuwien.sepm.ss15.edulium.service.impl.PrinterInvoiceManager.LOGGER . error ( "An I/O error occurred while trying to delete the PDF" , e ) ; throw new com.at.ac.tuwien.sepm.ss15.edulium.service.ServiceException ( "An I/O error occurred while trying to delete the PDF" , e ) ; } } 
byte [] getSignature () { byte [] sigBytes = null ; try { byte [] hashValue = bOut . toByteArray () ; sigBytes = pkcs11Session . sign ( bOut . toByteArray () ) ; closeSession () ; } catch ( java.lang.Exception ex ) { org.votingsystem.signature.dnie.DNIeContentSigner.log . log ( java.util.logging.Level.SEVERE , ex . getMessage () , ex ) ; } return sigBytes ; } 
private ddf.services.schematron.SchematronReport generateReport ( java.lang.String metadata , javax.xml.transform.Templates validator ) throws ddf.services.schematron.SchematronValidationException { java.io.StringReader metadataReader = new java.io.StringReader ( metadata ) ; ddf.services.schematron.SchematronReport report ; try { javax.xml.transform.Transformer transformer = validator . newTransformer () ; javax.xml.transform.dom.DOMResult schematronResult = new javax.xml.transform.dom.DOMResult () ; transformer . transform ( new javax.xml.transform.stream.StreamSource ( metadataReader ) , schematronResult ) ; report = new ddf.services.schematron.SvrlReport ( schematronResult ) ; } catch ( javax.xml.transform.TransformerException e ) { throw new ddf.services.schematron.SchematronValidationException ( "Could not setup validator to perform validation." ) ; } return report ; } 
@ java.lang.Override protected void onDraw ( android.graphics.Canvas canvas ) { if ( ( radius ) == 0 ) { if ( ! ( isCircleFillView ) ) return; } canvas . translate ( ( ( getMeasuredWidth () ) / 2 ) , ( ( getMeasuredHeight () ) / 2 ) ) ; drawRing ( canvas ) ; drawPrimaryText ( canvas ) ; drawSecondaryText ( canvas ) ; } 
@ java.lang.Override public boolean onTouchEvent ( android.view.MotionEvent event ) { if ( ( com.example.alex.parkinsonsdiseaseapp.Circle.recordflag ) == 1 ) { distance ( event . getX () , event . getY () ) ; if ( isInsideCircle ( event . getX () , event . getY () ) ) { generateRandom () ; invalidate () ; ( com.example.alex.parkinsonsdiseaseapp.Circle.numCorrect ) ++ ; } } return super . onTouchEvent ( event ) ; } 
private void setPhoto ( java.lang.String path ) { if ( path != null ) { int w = 150 ; android.graphics.Bitmap full = ca.dal.csci4176.journalit.utils.BitmapUtils . decodeSubsampledBitmap ( path , w , w ) ; if ( full != null ) { android.graphics.Bitmap thumb = android.media.ThumbnailUtils . extractThumbnail ( full , w , w ) ; picture . setImageBitmap ( thumb ) ; picture . setVisibility ( View.VISIBLE ) ; return; } } picture . setImageResource ( R.mipmap.ic_launcher ) ; } 
private void reindexFolders ( java.lang.String index ) throws de.mpg.imeji.exceptions.ImejiException { de.mpg.imeji.logic.jobs.ElasticReIndexJob.LOGGER . info ( "Indexing Folders..." ) ; de.mpg.imeji.logic.search.elasticsearch.ElasticIndexer indexer = new de.mpg.imeji.logic.search.elasticsearch.ElasticIndexer ( index , de.mpg.imeji.logic.search.elasticsearch.ElasticService.ElasticTypes.folders , de.mpg.imeji.logic.search.elasticsearch.ElasticService.ANALYSER , de.mpg.imeji.logic.search.elasticsearch.ElasticService . getClient () ) ; de.mpg.imeji.logic.controller.resource.CollectionController c = new de.mpg.imeji.logic.controller.resource.CollectionController () ; java.util.List < de.mpg.imeji.logic.vo.CollectionImeji > collections = ( ( java.util.List < de.mpg.imeji.logic.vo.CollectionImeji > ) ( c . retrieveAll ( Imeji.adminUser ) ) ) ; indexer . indexBatch ( collections ) ; indexer . commit () ; de.mpg.imeji.logic.jobs.ElasticReIndexJob.LOGGER . info ( "Folders reindexed!" ) ; } 
private boolean checkLimitCells ( ar.fiuba.tdd.template.board.Board board , ar.fiuba.tdd.template.board.cell.model.Cell cell , ar.fiuba.tdd.template.board.cell.model.CellContent corner , ar.fiuba.tdd.template.board.cell.model.Cell previousCell ) { java.util.ArrayList < ar.fiuba.tdd.template.board.cell.model.Cell > limitCells = this . getLimitCells ( board , cell , corner ) ; for ( ar.fiuba.tdd.template.board.cell.model.Cell limitCell : limitCells ) { if ( limitCell == previousCell ) { continue; } else { if ( ! ( this . checkCellClosedCircuit ( board , limitCell , cell , corner ) ) ) { return false ; } } } return true ; } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { if ( no.hioa.recruiting.activities.BaitActivity.D ) android.util.Log . d ( no.hioa.recruiting.activities.BaitActivity.TAG , "--- onOptionsItemSelected ---" ) ; switch ( item . getItemId () ) { case R.id.bait_option_about : startActivity ( new android.content.Intent ( getApplicationContext () , no.hioa.recruiting.activities.AboutActivity . class ) ) ; break; case R.id.bait_option_connect : android.content.Intent i = new android.content.Intent ( this , no.hioa.recruiting.activities.ConnectionActivity . class ) ; startActivityForResult ( i , no.hioa.recruiting.activities.BaitActivity.CONNECTED_RESULT ) ; break; } return super . onOptionsItemSelected ( item ) ; } 
private static void onLoginSuccess ( android.app.Activity activity , java.lang.String accessToken ) { android.content.SharedPreferences sharedPref = activity . getPreferences ( Activity.MODE_PRIVATE ) ; android.content.SharedPreferences.Editor editor = sharedPref . edit () ; editor . putString ( "accessToken" , accessToken ) ; editor . commit () ; android.content.Intent intent = new android.content.Intent ( com.mountainpeak.climbers.Utils.ctx , com.mountainpeak.climbers.MainActivity . class ) ; activity . startActivity ( intent ) ; activity . finish () ; } 
@ java.lang.Override public void onResponse ( org.json.JSONObject response ) { com.android.volley.toolbox.ImageLoader loader = com.alan.rockonapp.controller.AppController . getInstance ( getContext () ) . getImageLoader () ; mConcertFavorite . setIsIndicator ( true ) ; mConcertFavorite . setNumStars ( 1 ) ; try { if ( response . getBoolean ( com.alan.rockonapp.fragment.FAVORITE ) ) mConcertFavorite . setRating ( 1 ) ; mConcertPicture . setImageUrl ( response . getString ( com.alan.rockonapp.fragment.MEDIUM_IMAGE_URL ) , loader ) ; } catch ( org.json.JSONException ex ) { ex . printStackTrace () ; } } 
@ net.minecraftforge.fml.relauncher.SideOnly ( value = net.minecraftforge.fml.relauncher.Side.CLIENT ) public static void SyncGolemMessage ( int entityID ) { net.minecraft.client.multiplayer.WorldClient world = net.minecraft.client.Minecraft . getMinecraft () . theWorld ; net.minecraft.entity.Entity entity = world . getEntityByID ( entityID ) ; if ( entity instanceof net.minecraft.entity.monster.EntityIronGolem ) { sidben.villagertweaks.tracker.ClientInfoTracker . SyncGolemMessage ( ( ( net.minecraft.entity.monster.EntityIronGolem ) ( entity ) ) ) ; } else if ( entity instanceof net.minecraft.entity.monster.EntitySnowman ) { sidben.villagertweaks.tracker.ClientInfoTracker . SyncGolemMessage ( ( ( net.minecraft.entity.monster.EntitySnowman ) ( entity ) ) ) ; } } 
public static void main ( java.lang.String [] args ) { java.awt.EventQueue . invokeLater ( new java.lang.Runnable () { @ java.lang.Override public void run () { java.lang.String OS = java.lang.System . getProperty ( "os.name" ) ; if ( ( OS . indexOf ( "mac" ) ) >= 0 ) { javax.swing.JOptionPane . showMessageDialog ( null , ( "Warning, only tested on Windows and Linux. " + "May behave unexpectedly on Mac OS's." ) ) ; } main.com.ide.WorkBench pane = new main.com.ide.WorkBench () ; pane . loadWorkbench () ; } } ) ; } 
public Transmission searchForTransmission ( java.lang.String transmission , User currentUser , java.util.ArrayList < Transmission > mtl ) { java.lang.System.out . println ( "" ) ; java.util.ArrayList < Transmission > visibleTransmissions = getVisibleTransmissions ( currentUser , mtl ) ; boolean foundTransmission = false ; for ( Transmission t : visibleTransmissions ) { if ( t . getMessage () . contains ( transmission ) ) { java.lang.System.out . println ( t . toString () ) ; foundTransmission = true ; } } if ( ! foundTransmission ) { java.lang.System.out . println ( ( "No transmission found containing" + " your search.\n" ) ) ; } return null ; } 
public java.lang.String render () { sb . setLength ( 0 ) ; renderProcessors () ; renderPhysicalMemory () ; renderSwap () ; renderHeap () ; renderNativeMemory () ; renderGc () ; renderLoad () ; renderThread () ; renderCluster () ; renderEvents () ; renderExecutors () ; renderOperationService () ; renderProxy () ; renderClient () ; renderConnection () ; return sb . toString () ; } 
public void updateFromBundle ( android.os.Bundle bundle ) { if ( bundle == null ) return; switch ( bundle . getInt ( "Activity Key" ) ) { case 1 : callAlarmFragment () ; break; case 2 : callReminderFragment () ; break; case 3 : callGeofenceFragment () ; break; case 4 : callContactUsFragment () ; break; } } 
@ java.lang.Override public seedu.task.logic.commands.CommandResult execute () { if ( commandToShowUser . isEmpty () ) { seedu.task.commons.core.EventsCenter . getInstance () . post ( new seedu.task.commons.events.ui.ShowHelpRequestEvent () ) ; return new seedu.task.logic.commands.CommandResult ( seedu.task.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE ) ; } else { return new seedu.task.logic.commands.CommandResult ( seedu.task.logic.commandlibrary.CommandLibrary . getInstance () . getCommandUsage ( commandToShowUser . trim () ) ) ; } } 
private void exo ( final org.logicng.datastructures.EncodingResult result , final org.logicng.formulas.Variable . . . vars ) { if ( ( vars.length ) == 0 ) return; if ( ( vars.length ) == 1 ) { result . addClause ( vars [ 0 ] ) ; return; } this . amo ( result , vars ) ; result . addClause ( ( ( org.logicng.formulas.Literal [] ) ( vars ) ) ) ; } 
@ org.junit.Test public void archive () { commandBox . runCommand ( "archive" ) ; assertResultMessage ( java.lang.String . format ( seedu.taskManager.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT , ArchiveCommand.MESSAGE_USAGE ) ) ; commandBox . runCommand ( "arc" ) ; assertResultMessage ( Messages.MESSAGE_UNKNOWN_COMMAND ) ; seedu.address.testutil.TestTask [] currentList = td . getTypicalTasks () ; currentList = seedu.address.testutil.TestUtil . removeTaskFromList ( currentList , 1 ) ; currentList = seedu.address.testutil.TestUtil . sortByEndTime ( currentList ) ; commandBox . runCommand ( "archive 1" ) ; org.junit.Assert . assertTrue ( taskListPanel . isListMatching ( currentList ) ) ; } 
@ java.lang.Override @ android.support.annotation.UiThread public void newDownloadIndexes () { visibleBanner . updateBannerInProgress () ; for ( java.lang.ref.WeakReference < android.support.v4.app.Fragment > ref : fragSet ) { android.support.v4.app.Fragment f = ref . get () ; if ( f . isAdded () ) { if ( f instanceof net.osmand.plus.download.DownloadIndexesThread.DownloadEvents ) { ( ( net.osmand.plus.download.DownloadIndexesThread.DownloadEvents ) ( f ) ) . newDownloadIndexes () ; } } } downloadHasFinished () ; } 
private void getAndStartIntent ( int i ) { android.app.ActivityManager.RecentTaskInfo info = mAppList . get ( i ) ; if ( null == info ) android.widget.Toast . makeText ( this , "No other apps" , Toast.LENGTH_SHORT ) . show () ; else if ( sp . getBoolean ( StringKey.ExcludeHome , false ) ) { if ( info.baseIntent . getComponent () . getPackageName () . equals ( HOME_PACKAGE ) ) getAndStartIntent ( 2 ) ; } else startActivityWithoutAnimation ( info ) ; } 
public void setPower ( double power ) { if ( ( power < ( maxPower ) ) && ( power > ( minPower ) ) ) { this . power = power ; RobotConstants.TALON_ARM_MOTOR . set ( power ) ; } else if ( power < ( minPower ) ) { this . power = - 0.5 ; } else { this . power = 0.5 ; } } 
@ java.lang.Override public void onResponse ( retrofit2.Call < java.util.List < in.tosc.doandroidlib.objects.Image > > call , retrofit2.Response < java.util.List < in.tosc.doandroidlib.objects.Image > > response ) { imageList = response . body () ; imageAdapter = new in.tosc.digitaloceanapp.adapters.ImageAdapter ( imageList , getContext () , ( ( in.tosc.digitaloceanapp.Interfaces.onItemSelectNewDroplet ) ( getActivity () ) ) ) ; imageRecyclerView . setAdapter ( imageAdapter ) ; android.util.Log . e ( "Droplets fetched" , java.lang.String . valueOf ( imageList . size () ) ) ; } 
public static boolean check ( java.lang.String passwd , java.lang.String hashed ) { java.lang.String salt = hashed . substring ( 0 , jetbrick.util.PasswordUtils.SALT_LENGTH ) ; java.lang.String rehashed = jetbrick.util.codec.MD5Utils . md5Hex ( ( salt + passwd ) ) ; return ( hashed . substring ( jetbrick.util.PasswordUtils.SALT_LENGTH ) ) == ( rehashed . substring ( jetbrick.util.PasswordUtils.SALT_LENGTH ) ) ; } 
public static int getDistance ( ca.rmen.nounours.data.Image image , java.lang.String featureId , int x , int y ) { ca.rmen.nounours.data.ImageFeature featureImage = image . getImageFeature ( featureId ) ; if ( featureImage == null ) { java.lang.System.out . println ( ( ( ( "Feature " + featureId ) + " is not in image " ) + image ) ) ; return java.lang.Integer.MAX_VALUE ; } int distance = ca.rmen.nounours.Util . getDistance ( featureImage . getX () , featureImage . getY () , x , y ) ; return distance ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "edit/{blogID}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String blogUpdate ( @ org.springframework.web.bind.annotation.PathVariable ( value = "blogID" ) java.lang.Integer blogID , org.springframework.ui.ModelMap model ) { stylish.entity.Blogs targetBlogs = blogsSB . findBlogsByID ( blogID ) ; java.text.DateFormat dateFormat = new java.text.SimpleDateFormat ( "dd-MM-yyyy" ) ; java.util.Date date = targetBlogs . getPostedDate () ; java.lang.String formattedDate = dateFormat . format ( date ) ; model . addAttribute ( "formattedDate" , formattedDate ) ; model . addAttribute ( "targetBlogs" , targetBlogs ) ; model . addAttribute ( "editor1" , targetBlogs . getContent () ) ; return "admin/pages/blog-update" ; } 
private void logExit ( java.lang.reflect.Method targetMethod , java.lang.Object returnValue ) { java.lang.Object [] args = new java.lang.Object [] { targetMethod . getDeclaringClass () . getCanonicalName () , targetMethod . getName () } ; se.kth.iv1201.utility.logger.LogInterceptor.LOGGER . log ( se.kth.iv1201.utility.logger.LogInterceptor.LEVEL , "Call to {0}.{1} completed" , args ) ; if ( ! ( isVoid ( targetMethod ) ) ) { se.kth.iv1201.utility.logger.LogInterceptor.LOGGER . log ( se.kth.iv1201.utility.logger.LogInterceptor.LEVEL , "    Return value: {0}" , returnValue ) ; } } 
public java.lang.Object getGuiElement () { if ( ! ( this . isConnected () ) ) { java.lang.System.out . println ( "getGuiElement - null (no connection)" ) ; return null ; } int metadata = this . worldObj . getBlockMetadata ( this . xCoord , this . yCoord , this . zCoord ) ; if ( erogenousbeef.bigreactors.common.block.BlockReactorPart . isController ( metadata ) ) { java.lang.System.out . println ( "getGuiElement - ReactorStatus" ) ; return new erogenousbeef.bigreactors.client.gui.GuiReactorStatus ( new erogenousbeef.bigreactors.gui.container.ContainerReactorController ( this ) , this ) ; } return null ; } 
public org.ulme.web.HttpServer listen ( int port ) { if ( ( port <= ( org.ulme.web.HttpServer.MIN_PORT_NUMBER ) ) && ( port > ( org.ulme.web.HttpServer.MAX_PORT_NUMBER ) ) ) { throw new java.lang.IllegalArgumentException ( ( ( ( ( "Invalid port number. Valid range: [" + ( org.ulme.web.HttpServer.MIN_PORT_NUMBER ) ) + ", " ) + ( org.ulme.web.HttpServer.MAX_PORT_NUMBER ) ) + ")" ) ) ; } ioLoop . listen ( port ) ; return this ; } 
public void deleteTemp ( java.lang.String uuid ) { java.io.File index = new java.io.File ( ( ( ( ( getAppdata () ) + "/installed_maps/" ) + uuid ) + "/temp" ) ) ; java.lang.String [] entries = index . list () ; for ( java.lang.String s : entries ) { java.io.File currentFile = new java.io.File ( index . getPath () , s ) ; currentFile . delete () ; } index . delete () ; } 
public void throwError ( java.lang.Throwable e , java.lang.String s , java.lang.Object . . . params ) { if ( e != null ) logError ( e , e . toString () ) ; java.lang.String message = ( s == null ) ? "" : ( MQ7PREFIX ) + ( java.text.MessageFormat . format ( s , params ) ) ; throw new java.lang.RuntimeException ( message ) ; } 
@ java.lang.Override public wyal.lang.Proof.State apply ( wyal.lang.Proof.State state , wyal.lang.Formula truth ) { wyal.lang.Formula expanded = expandFormula ( truth ) ; if ( expanded != null ) { expanded = state . allocate ( expanded ) ; state = state . subsume ( this , truth , expanded ) ; } return state ; } 
void unregister ( com.jsoft.iot.mqttloadapp.runtime.RunningLoadConfiguration aThis , java.lang.String controlTopic ) { try { client . unsubscribe ( controlTopic ) ; com.jsoft.iot.mqttloadapp.runtime.MqttConnection.LOG . info ( ( "Unsubscribed from control topic " + controlTopic ) ) ; } catch ( org.eclipse.paho.client.mqttv3.MqttException ex ) { com.jsoft.iot.mqttloadapp.runtime.MqttConnection.LOG . log ( java.util.logging.Level.SEVERE , "could not unsubscribe" , ex ) ; } listeners . remove ( controlTopic ) ; matchers . remove ( controlTopic ) ; } 
public java.util.List < edu.mtholyoke.cs341bd.bookz.GutenbergBook > getBooksStartingWithTitles ( java.lang.String myTitle ) { java.util.List < edu.mtholyoke.cs341bd.bookz.GutenbergBook > matches = new java.util.ArrayList <> ( 10000 ) ; for ( edu.mtholyoke.cs341bd.bookz.GutenbergBook book : library . values () ) { java.lang.String first = book.title . toLowerCase () ; if ( first . contains ( myTitle ) ) { matches . add ( book ) ; } } return matches ; } 
public void setRegisterW ( int registerW ) { if ( registerW < 0 ) { registerW = 256 - ( registerW * ( - 1 ) ) ; } else if ( registerW > 255 ) { registerW = 256 - registerW ; } this . registerW = registerW ; } 
private static boolean isEncoded ( java.lang.String content , java.lang.String charset ) { if ( android.text.TextUtils . isEmpty ( content ) ) { return false ; } java.lang.String decodedContent = null ; try { decodedContent = java.net.URLDecoder . decode ( content , charset ) ; } catch ( java.io.UnsupportedEncodingException e ) { e . printStackTrace () ; } if ( ( decodedContent != null ) && ( decodedContent . equalsIgnoreCase ( content ) ) ) { return false ; } return true ; } 
@ org.junit.Test public void testCanAttackingPieceBeBlocked ( ) throws java.text.ParseException { board = chessBoardFactory . getChessBoard ( "qh8:Kh3:Ra4:kf2" ) ; org.amc.game.chess.Move move = new org.amc.game.chess.Move ( new org.amc.game.chess.Location ( H , 8 ) , new org.amc.game.chess.Location ( H , 5 ) ) ; board . move ( move ) ; org.amc.game.chess.view.ChessBoardView view = new org.amc.game.chess.view.ChessBoardView ( board ) ; view . displayTheBoard () ; org.amc.game.chess.KingInCheckmate pkicc = new org.amc.game.chess.KingInCheckmate ( blackPlayer , whitePlayer , board ) ; assertFalse ( pkicc . canAttackingPieceNotBeBlocked () ) ; } 
private int howManyNeighborsAlive () { int howManyNeighborsAlive = 0 ; for ( int i = 0 ; i < ( mNeighbors . size () ) ; i ++ ) { if ( ( mNeighbors . get ( i ) . getIsAlive () ) == true ) howManyNeighborsAlive ++ ; } return howManyNeighborsAlive ; } 
@ org.junit.Test @ lombok.SneakyThrows public void test_remote () { com.asterisk.akka.intergation.client.Client client = new com.asterisk.akka.intergation.client.Client ( "127.0.0.1:2552" ) ; client . set ( "123" , 123 ) ; java.lang.Integer result = ( ( java.lang.Integer ) ( ( ( java.util.concurrent.CompletableFuture ) ( client . get ( "123" ) ) ) . get () ) ) ; org.junit.Assert . assertEquals ( result , java.lang.Integer . valueOf ( 123 ) ) ; } 
public void setNumber ( java.lang.String number ) { try { java.lang.String iso = null ; if ( ( mSelectedCountry ) != null ) { iso = mSelectedCountry . getIso () ; } com.google.i18n.phonenumbers.Phonenumber.PhoneNumber phoneNumber = mPhoneUtil . parse ( number , iso ) ; int countryIdx = mCountries . indexOfIso ( mPhoneUtil . getRegionCodeForNumber ( phoneNumber ) ) ; mCountrySpinner . setSelection ( countryIdx ) ; mPhoneEdit . setText ( mPhoneUtil . format ( phoneNumber , PhoneNumberUtil.PhoneNumberFormat.NATIONAL ) ) ; } catch ( com.google.i18n.phonenumbers.NumberParseException ignored ) {} } 
private org.wordpress.android.editor.legacy.WPEditImageSpan createWPEditImageSpanRemote ( android.content.Context context , org.wordpress.android.util.helpers.MediaFile mediaFile ) { int drawable = ( mediaFile . isVideo () ) ? R.drawable.media_movieclip : R.drawable.legacy_dashicon_format_image_big_grey ; android.net.Uri uri = android.net.Uri . parse ( mediaFile . getFileURL () ) ; org.wordpress.android.editor.legacy.WPEditImageSpan imageSpan = new org.wordpress.android.editor.legacy.WPEditImageSpan ( context , drawable , uri ) ; imageSpan . setMediaFile ( mediaFile ) ; return imageSpan ; } 
public java.util.HashMap < java.lang.String , java.util.Optional < java.lang.String > > putVariablesInMap ( seedu.address.logic.parser.CommandParserHelper.OptionalStringTask task ) { java.util.HashMap < java.lang.String , java.util.Optional < java.lang.String > > map = new java.util.HashMap < java.lang.String , java.util.Optional < java.lang.String > > () ; map . put ( "taskName" , task.taskName ) ; map . put ( "startDate" , task.startDate ) ; map . put ( "endDate" , task.endDate ) ; map . put ( "rate" , task.rate ) ; map . put ( "timePeriod" , task.timePeriod ) ; map . put ( "priority" , task.priority ) ; return map ; } 
public org.tiralab.particles.Particle [] getObjectsAtArea ( float x , float y , float w , float h ) { org.tiralab.particles.ParticleSet set = new org.tiralab.particles.ParticleSet () ; this . root . get ( set , x , y , w , h ) ; return set . toArray () ; } 
@ rest.POST @ rest.Consumes ( value = "application/json" ) @ io.swagger.annotations.ApiOperation ( value = "erstellt einen Club; mit RepresentativeId und LocationId" ) public javax.ws.rs.core.Response create ( entity.Club club ) { entity.Representative representative = club . getRepresentative () ; entity.Location location = club . getLocation () ; club . setRepresentative ( representative ) ; club . setLocation ( location ) ; em . persist ( club ) ; return javax.ws.rs.core.Response . created ( javax.ws.rs.core.UriBuilder . fromResource ( rest.ClubResource . class ) . path ( java.lang.String . valueOf ( club . getId () ) ) . build () ) . build () ; } 
public byte getColumn ( int col ) { int value = 0 ; for ( int i = 0 ; i < ( colCount ) ; i ++ ) { value = value | ( patterns . elementAt ( i ) . getPattern () [ col ] ) ; } return ( ( byte ) ( value ) ) ; } 
public void body () { setResult ( true ) ; for ( chromage.server.PlayerThread p : ( ( java.util.ArrayList < chromage.server.PlayerThread > ) ( players . clone () ) ) ) { if ( p . wantsTermination () ) { setResult ( false ) ; setBreak () ; } } sendUpdates () ; } 
protected boolean move ( brownshome.scriptwars.game.tanks.Direction direction ) { this . direction = direction ; brownshome.scriptwars.game.tanks.Coordinates newCoord = direction . move ( position ) ; brownshome.scriptwars.game.tanks.Tank tank = world . getTank ( newCoord ) ; if ( tank != null ) { if ( tank.hasMoved ) { world . addToRewindList ( tank ) ; } return false ; } if ( world . isWall ( newCoord ) ) { return false ; } position = newCoord ; hasMoved = true ; return true ; } 
public java.lang.String extractLastName ( java.lang.String fullName ) throws java.lang.IllegalArgumentException { java.lang.String lastName = null ; if ( ( fullName == null ) || ( fullName . isEmpty () ) ) { throw new java.lang.IllegalArgumentException ( "Full name is mandatory. Please enter full name in format First Last (e.g. John Smith)" ) ; } java.lang.String [] parts = fullName . split ( " " ) ; if ( ( parts.length ) < 2 ) { throw new java.lang.IllegalArgumentException ( "Full name must have first name and last name separated by a space" ) ; } lastName = parts [ ( ( parts.length ) - 1 ) ] ; return lastName ; } 
@ java.lang.Override public java.util.ArrayList < net.minecraft.item.ItemStack > getDrops ( net.minecraft.world.World world , int x , int y , int z , int meta , int fortune ) { java.util.ArrayList a = new java.util.ArrayList < net.minecraft.item.ItemStack > () ; a . add ( new net.minecraft.item.ItemStack ( net.minecraft.item.Item . getItemFromBlock ( Blocks.obsidian ) , 1 ) ) ; a . add ( new net.minecraft.item.ItemStack ( net.minecraft.init.Items.dye , ( 2 * ( fortune + 1 ) ) , 4 ) ) ; return null ; } 
private void setupResources ( configuration.KnapsackClientConfiguration config , io.dropwizard.setup.Environment environment ) { final resources.KnapsackClientResource knapsackClientResource = new resources.KnapsackClientResource ( environment , config , new resources.ClientBuilder () ) ; environment . jersey () . register ( knapsackClientResource ) ; final resources.KnapsackClientInfoResource knapsackClientInfoResource = new resources.KnapsackClientInfoResource ( config ) ; environment . jersey () . register ( knapsackClientInfoResource ) ; } 
@ org.teavm.javascript.spi.Sync @ org.teavm.javascript.spi.Rename ( value = "notify" ) public final void notify0 () { if ( ! ( org.teavm.classlib.java.lang.TObject . holdsLock ( this ) ) ) { throw new org.teavm.classlib.java.lang.TIllegalMonitorStateException () ; } org.teavm.classlib.java.lang.TThread thread = org.teavm.classlib.java.lang.TThread . currentThread () ; org.teavm.platform.PlatformQueue < org.teavm.classlib.java.lang.TObject.NotifyListener > listeners = monitor.notifyListeners ; while ( ! ( listeners . isEmpty () ) ) { org.teavm.classlib.java.lang.TObject.NotifyListener listener = listeners . remove () ; if ( ! ( listener . expired () ) ) { org.teavm.platform.Platform . startThread ( listener ) ; break; } } org.teavm.classlib.java.lang.TThread . setCurrentThread ( thread ) ; } 
private void runScriptsIfNeeded ( geogebra.common.kernel.geos.GeoElement geo1 ) { if ( ( ( view . getHits () . size () ) > 0 ) && ( ( view . getHits () . get ( 0 ) ) instanceof geogebra.common.kernel.geos.GeoTextField ) ) { view . requestFocusInWindow () ; } if ( ! ( scriptsHaveRun ) ) { scriptsHaveRun = true ; app . runScripts ( geo1 , ( ( java.lang.String ) ( null ) ) ) ; } } 
private void generateDecks () { try { for ( int i = 0 ; i < 3 ; i ++ ) { buildAge ( i ) ; } shuffle () ; } catch ( java.lang.Exception e ) { java.lang.System.out . print ( "Could not build decks properly." ) ; e . printStackTrace () ; } } 
public static < T > com.annimon.stream.Stream < T > of ( final T . . . array ) { return new com.annimon.stream.Stream < T > ( new java.util.Iterator < T > () { private int index = 0 ; @ java.lang.Override public boolean hasNext () { return ( index ) < ( array.length ) ; } @ java.lang.Override public T next () { return array [ ( ( index ) ++ ) ] ; } } ) ; } 
private void decreaseValue ( int position ) { if ( ( numValue ) > ( minValue ) ) { positions . remove ( position ) ; ( numValue ) -- ; setAdapter ( new au.edu.adelaide.mci.kidnumeracy.component.NumObjectGridView.NumObjectImageAdapter () ) ; fireAfterNumChangedEvent ( ( ( numValue ) + 1 ) ) ; } } 
private void collapsedAppBar () { android.support.design.widget.CollapsingToolbarLayout collapsingToolbarLayout = ( ( android.support.design.widget.CollapsingToolbarLayout ) ( getLayoutInflater () . inflate ( R.layout.collapsing_toolbar , null ) ) ) ; collapsingToolbarLayout . setTitle ( "SomeTitle" ) ; collapsingToolbarLayout . setExpandedTitleColor ( getResources () . getColor ( android.R.color.transparent ) ) ; appBarLayout . removeViewAt ( 0 ) ; appBarLayout . addView ( collapsingToolbarLayout ) ; setActionBar ( ( ( android.support.v7.widget.Toolbar ) ( collapsingToolbarLayout . getChildAt ( 1 ) ) ) ) ; } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent arg0 ) { long timePassed = ( java.lang.System . currentTimeMillis () ) - ( start ) ; if ( timePassed > 5000 ) { stats . setStatValue ( stat , value ) ; buffed = false ; buffTime . stop () ; restoreSpriteArray () ; } } 
private boolean sendEnterSendsMessage () { if ( getTypeOfWork () . equalsIgnoreCase ( org.lz1aq.lzhfqrp.MainWindow.TYPE_OF_WORK_CQ ) ) { if ( jtextfieldCallsign . getText () . isEmpty () ) { pressedF1 () ; return false ; } else { pressedF5 () ; pressedF2 () ; return true ; } } else { pressedF4 () ; return false ; } } 
public java.lang.String max () { int maior ; if ( ! ( isEmpty () ) ) { maior = 0 ; for ( int i = 1 ; i < ( n ) ; i ++ ) { if ( ( values [ i ] ) > maior ) maior = i ; } return keys [ maior ] ; } throw new java.lang.NullPointerException ( "ST.contains(): key is null" ) ; } 
@ com.codingchili.realm.model.Test public void testReadPlayerClasses ( ) throws java.io.IOException { java.util.ArrayList < io.vertx.core.json.JsonObject > classes = com.codingchili.core.files.JsonFileStore . readDirectoryObjects ( testDirectory ( "class" ) ) ; for ( io.vertx.core.json.JsonObject player : classes ) { com.codingchili.core.protocol.Serializer . unpack ( player , com.codingchili.realm.model.PlayerClass . class ) ; } com.codingchili.realm.model.Assert . assertFalse ( classes . isEmpty () ) ; } 
@ java.lang.Override public void notifyChannelMemberTypes ( java.util.Map < java.lang.String , com.gotye.api.voichannel.MemberType > typeMap ) { for ( java.util.Map < java.lang.String , java.lang.Object > member : userList ) { java.lang.String memberIdString = ( ( java.lang.String ) ( member . get ( "UserId" ) ) ) ; if ( typeMap . containsKey ( memberIdString ) ) { member . put ( "MemberType" , typeMap . get ( memberIdString ) ) ; } updateUser ( memberIdString , true ) ; } mProxy . notifyChannelMemberTypes ( typeMap ) ; } 
@ java.lang.Override public void deleteShare ( org.linagora.linshare.core.domain.entities.ShareEntry share ) throws org.linagora.linshare.core.exception.BusinessException { shareEntryRepository . delete ( share ) ; org.linagora.linshare.core.domain.entities.DocumentEntry documentEntry = share . getDocumentEntry () ; documentEntry . getShareEntries () . remove ( share ) ; org.linagora.linshare.core.domain.entities.Account recipient = share . getRecipient () ; recipient . getShareEntries () . remove ( share ) ; org.linagora.linshare.core.domain.entities.Account sender = share . getEntryOwner () ; sender . getEntries () . remove ( share ) ; documentEntryRepository . update ( documentEntry ) ; accountService . update ( recipient ) ; accountService . update ( sender ) ; } 
@ java.lang.Override protected java.lang.Void doInBackground ( tr.edu.iyte.caffeine.CaffeineService.Clock . . . c ) { tr.edu.iyte.caffeine.CaffeineService.Clock clock = c [ 0 ] ; try { if ( ( tr.edu.iyte.caffeine.CaffeineService.mode ) == ( tr.edu.iyte.caffeine.CaffeineService.Mode.INFINITE_MINS ) ) { while ( ! ( java.lang.Thread . interrupted () ) ) java.lang.Thread . sleep ( 30000 ) ; } else { waitAndUpdate ( clock ) ; while ( clock . decrement () ) waitAndUpdate ( clock ) ; } } catch ( java.lang.InterruptedException e ) { android.util.Log . e ( tr.edu.iyte.caffeine.CaffeineService.TAG , "doInBackground: Caffeine mode changed" , e ) ; } return null ; } 
@ org.junit.Test public void testIndexImporterWithBadIndex ( ) throws java.io.IOException { _fileSystem . delete ( _path , true ) ; _fileSystem . mkdirs ( _path ) ; _indexImporter . run () ; org.junit.Assert . assertFalse ( _fileSystem . exists ( _path ) ) ; org.junit.Assert . assertFalse ( _fileSystem . exists ( _badRowIdsPath ) ) ; org.junit.Assert . assertTrue ( _fileSystem . exists ( _badIndexPath ) ) ; validateIndex () ; } 
public static void main ( java.lang.String [] args ) throws java.lang.Throwable { com.anji.util.Properties props = new com.anji.util.Properties ( "marioAuto.properties" ) ; bachelor.MarioTrainer.ff . init ( props ) ; bachelor.MarioTrainer.ff.levelOptions = "-mix 16 -miy 223 -ld 1" ; bachelor.MarioTrainer.ff.generation = 0 ; try { bachelor.MarioTrainer mT = new bachelor.MarioTrainer () ; mT . init ( props ) ; mT . trainDistanceTraveled () ; } catch ( java.lang.Throwable th ) { java.lang.System.out . println ( th ) ; } } 
private com.jarektoro.responsivelayout.ResponsiveColumn.Rule getRuleForDisplaySize ( com.jarektoro.responsivelayout.ResponsiveColumn.DisplaySize displaySize , boolean isOffset ) { final com.jarektoro.responsivelayout.ResponsiveColumn.Rule [] foundRule = new com.jarektoro.responsivelayout.ResponsiveColumn.Rule [] { null } ; rules . forEach ( ( rule ) - > { if ( rule.displaySize . equals ( displaySize ) ) { if ( ( rule.isOffset ) == isOffset ) { foundRule [ 0 ] = rule ; } } } ) ; return foundRule [ 0 ] ; } 
private static java.lang.String getUrl ( javax.servlet.http.HttpServletRequest request ) { java.lang.StringBuffer requestURL = request . getRequestURL () ; java.lang.String queryString = request . getQueryString () ; if ( queryString == null ) { requestURL . append ( '?' ) . append ( queryString ) ; } return requestURL . toString () ; } 
public long getDoneCount () { if ( ( ( currentRange ) == null ) || ( ( ranges ) == null ) ) { return 0 ; } long doneCount = 0 ; for ( com.object0r.TorRange.datatypes.EntriesRange range : ranges ) { if ( isRangeDone ( range ) ) { doneCount += range . getSize () ; } } doneCount += ( currentEntry ) - ( currentRange . getStart () ) ; return doneCount ; } 
public void startVideoStreaming ( java.lang.Class < ? extends com.smartdevicelink.streaming.video.SdlRemoteDisplay > remoteDisplay , com.smartdevicelink.streaming.video.VideoStreamingParameters parameters , boolean encrypted ) { streamListener = startVideoStream ( encrypted , parameters ) ; try { encoder . init ( context , null , remoteDisplay , parameters ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } 
public boolean removeDenied ( java.util.UUID uuid ) { if ( uuid == ( com.intellectualcrafters.plot.database.DBFunc.everyone ) ) { boolean result = false ; for ( java.util.UUID other : getDenied () ) { result = result || ( rmvDenied ( other ) ) ; } return result ; } return rmvDenied ( uuid ) ; } 
public java.sql.Connection getConnection () { if ( isClosed () ) { com.Ben12345rocks.AdvancedCore.AdvancedCoreHook . getInstance () . debug ( "Connection closed... opening...." ) ; open () ; } try { return dataSource . getConnection () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } return null ; } 
public void run () { javax.swing.JFrame frame = ( ( javax.swing.JFrame ) ( org.openide.windows.WindowManager . getDefault () . getMainWindow () ) ) ; java.lang.String title = frame . getTitle () ; title = ( ( title . substring ( 0 , ( ( title . indexOf ( '-' ) ) - 1 ) ) ) + " - " ) + SaveAsFileName ; frame . setTitle ( title ) ; } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { android.view.View view = inflater . inflate ( R.layout.screen_sub_news , container , false ) ; android.widget.TextView textView = ( ( android.widget.TextView ) ( view . findViewById ( R.id.newsText ) ) ) ; textView . setText ( tabTitle ) ; return view ; } 
@ java.lang.Override public net.minecraftforge.fluids.FluidStack drain ( net.minecraft.util.EnumFacing from , net.minecraftforge.fluids.FluidStack resource , boolean doDrain ) { if ( ( resource != null ) && ( canDrain ( from , resource . getFluid () ) ) ) { return fluidTank . drain ( resource.amount , ( ( tier ) != ( mekanism.common.Tier.FluidTankTier.CREATIVE ) ) ) ; } return null ; } 
@ org.junit.Test public void readGraphWithPropertiesOnly () { org.s1ck.gdl.GDLLoader loader = getLoaderFromGDLString ( java.lang.String . format ( "%s[()]" , org.s1ck.gdl.GDLLoaderTest.PROPERTIES_STRING ) ) ; validateCollectionSizes ( loader , 1 , 1 , 0 ) ; validateCacheSizes ( loader , 0 , 1 , 0 ) ; validateProperties ( loader . getGraphs () . iterator () . next () ) ; } 
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { Core.Hospedagem h = ( ( Core.Hospedagem ) ( obj ) ) ; return ( ( ( ( h.cidadeDestino . equals ( cidadeDestino ) ) && ( h.nomeHotel . equals ( nomeHotel ) ) ) && ( h.dataEntrada . equals ( dataEntrada ) ) ) && ( h.dataSaida . equals ( dataSaida ) ) ) && ( ( h.preco ) == ( preco ) ) ; } 
public static void minArray ( double [] from1 , double [] from2 , double [] to ) { for ( int i = 0 ; i < ( from1.length ) ; i ++ ) { to [ i ] = java.lang.Math . min ( from1 [ i ] , from2 [ 2 ] ) ; } } 
@ java.lang.Override public java.lang.String toString () { java.lang.String str = java.lang.String . valueOf ( this . value [ 0 ] ) ; str += ( "Fitness: " + ( this . getFitness () ) ) + " - " ; for ( int i = 1 ; i < ( value.length ) ; i ++ ) { str += ":" + ( this . value [ i ] ) ; } return str ; } 
public static void checkMovement6Started () { if ( ( ( dCompletion ) < ( ( ( ( dStartToBox ) - ( ( dStartToBackStepBoard ) - ( dStartToFrontStepBoard ) ) ) / ( dStartToBox ) ) + ( dTrackMargin ) ) ) && ( ( dCompletion ) > ( ( ( ( dStartToBox ) - ( ( dStartToBackStepBoard ) - ( dStartToFrontStepBoard ) ) ) / ( dStartToBox ) ) - ( dTrackMargin ) ) ) ) { bMovement6Started = true ; } } 
public com.twilio.Node whatNext ( java.lang.String userOption ) { java.util.Set < java.lang.String > currentOptions = options . keySet () ; for ( java.lang.String option : currentOptions ) { if ( userOption . equals ( option ) ) { return options . get ( option ) ; } } return null ; } 
private java.util.Locale findSupportedLocale ( javax.servlet.http.HttpServletRequest request , java.util.Locale fallback ) { java.util.Enumeration < java.util.Locale > requestLocales = request . getLocales () ; while ( requestLocales . hasMoreElements () ) { java.util.Locale locale = requestLocales . nextElement () ; if ( getSupportedLocales () . contains ( locale ) ) { return locale ; } } return fallback ; } 
@ java.lang.Override public void showProgress ( java.lang.String message ) { tvResEmptyState . setVisibility ( View.GONE ) ; tvWestEmptyState . setVisibility ( View.GONE ) ; tvUnionEmptyState . setVisibility ( View.GONE ) ; resMenu . setVisibility ( View.GONE ) ; westMenu . setVisibility ( View.GONE ) ; unionMenu . setVisibility ( View.GONE ) ; resProgressBar . setVisibility ( View.VISIBLE ) ; westProgressBar . setVisibility ( View.VISIBLE ) ; unionProgressBar . setVisibility ( View.VISIBLE ) ; } 
public battleship.interfaces.Position getPositionFromHeatMap ( int [] heatmap , java.util.ArrayList < java.lang.Integer > fleet ) { int maxHeatIndex = 0 ; for ( int i = 0 ; i < ( heatmap.length ) ; i ++ ) { if ( ( heatmap [ i ] ) > ( heatmap [ maxHeatIndex ] ) ) { maxHeatIndex = i ; } } battleship.interfaces.Position pos = this . getPosFromIndex ( maxHeatIndex ) ; return pos ; } 
private void getBusData () { model = ( ( dat255.chalmers.stormystreet.GlobalState ) ( getApplication () ) ) . getModel () ; java.lang.String vinNumber = getIntent () . getStringExtra ( Constants.EXTRA_BUS_INFO_BUS_ID ) ; try { if ( vinNumber != null ) { busInfo = model . getBus ( java.lang.Integer . parseInt ( vinNumber ) ) ; } else { throw new dat255.chalmers.stormystreet.model.bus.BusNotFoundException () ; } } catch ( dat255.chalmers.stormystreet.model.bus.BusNotFoundException e ) { finish () ; } } 
public void onClick ( android.content.DialogInterface dialog , int id ) { try { org.apache.commons.io.FileUtils . forceDelete ( new java.io.File ( logLsf . getParent () , "indexMessageList.stackIndex" ) ) ; } catch ( java.lang.Exception e ) { android.util.Log . i ( pt.lsts.alvii.MRALite.TAG , "Error while trying to delete mra/ folder" , e ) ; } startIndex ( logLsf , true ) ; customHandler . postDelayed ( updateTimerThread , 2000 ) ; checkIndex = true ; } 
private void randomChecks ( org.ejml.sparse.csc.decomposition.qr.TestQrStructuralCountsDSCC.Check check ) { for ( int mc = 0 ; mc < 100 ; mc ++ ) { int numCols = ( rand . nextInt ( 10 ) ) + 1 ; int numRows = numCols + ( rand . nextInt ( 5 ) ) ; numRows = numCols ; int nz = org.ejml.sparse.csc.RandomMatrices_DSCC . nonzero ( numRows , numCols , 0.01 , 0.5 , rand ) ; org.ejml.data.DMatrixSparseCSC A = org.ejml.sparse.csc.RandomMatrices_DSCC . rectangle ( numRows , numCols , nz , rand ) ; check . check ( A ) ; } } 
public boolean checkRelationShipUser ( long user , long follower ) { org.neo4j.cypher.javacompat.ExecutionEngine engine = new org.neo4j.cypher.javacompat.ExecutionEngine ( qa.datahelper.UserHelper.db ) ; org.neo4j.cypher.javacompat.ExecutionResult result ; try ( org.neo4j.graphdb.Transaction tx = qa.datahelper.UserHelper.db . beginTx () ) { java.lang.String query = ( ( ( "MATCH (user:User) <-[type:Followed]- (follower:User) where user.ID=" + user ) + " and follower.ID=" ) + follower ) + " return type" ; result = engine . execute ( query ) ; tx . success () ; if ( result == null ) { return false ; } else { return true ; } } } 
public int remove ( java.lang.String toRemove ) { linked_yarn.LinkedYarn.Node nodeToRemoveFrom = this . findFirstNodeWith ( toRemove ) ; if ( nodeToRemoveFrom != null ) { ( this . modCount ) ++ ; ( nodeToRemoveFrom.count ) -- ; ( this . size ) -- ; if ( ( nodeToRemoveFrom.count ) == 0 ) { this . destroyNode ( nodeToRemoveFrom ) ; return 0 ; } return nodeToRemoveFrom.count ; } else { return 0 ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { com.plugin.core.ui.PluginDispatcher . startFragmentWithSimpleActivity ( this , entry . getKey () ) ; if ( entry . getKey () . equals ( "test1" ) ) { com.plugin.core.ui.PluginDispatcher . startFragmentWithBuildInActivity ( this , entry . getKey () ) ; } } 
public static java.lang.String slug () { java.util.UUID uuid = java.util.UUID . randomUUID () ; long hi = uuid . getMostSignificantBits () ; long lo = uuid . getLeastSignificantBits () ; java.nio.ByteBuffer raw = java.nio.ByteBuffer . allocate ( 16 ) ; raw . putLong ( hi ) ; raw . putLong ( lo ) ; byte [] rawBytes = raw . array () ; return net.iharder.Base64 . encodeBytes ( rawBytes ) . replace ( '+' , '-' ) . replace ( '/' , '_' ) . substring ( 0 , 22 ) ; } 
private static boolean isValidMoveInput ( java.lang.String userInput ) { java.lang.String [] split = userInput . split ( "," ) ; try { java.lang.Integer . parseInt ( split [ 0 ] . trim () ) ; java.lang.Integer . parseInt ( split [ 1 ] . trim () ) ; return true ; } catch ( java.lang.Exception e ) { view.Console . writeLine ( "\n!!! The format in which you input your action was incorrect !!!\n" ) ; e . printStackTrace () ; } return false ; } 
public void jump () { final boolean isNotInMidAir = ! ( this . isInMidAir ) ; final boolean hasNotDoubleJumped = ! ( this . hasDoubleJumped ) ; if ( isNotInMidAir || hasNotDoubleJumped ) { this . isInMidAir = true ; if ( ( this . isInMidAir ) && hasNotDoubleJumped ) { this . hasDoubleJumped = true ; } this . audioManager . getAudioController () . playSound ( AudioFx.JUMP , 0.25F ) ; applyImpulse ( 0 , ( - ( com.omnicrola.pixelblaster.main.GameSettings.PLAYER_JUMP_SPEED ) ) ) ; addPlayerState ( PlayerState.JUMP ) ; } } 
public static float getTextWidth ( java.lang.CharSequence text , mocha.graphics.Font font , float width , float screenScale ) { width = mocha.graphics.TextDrawing . constrainWidth ( width ) ; float [] measuredWidth = new float [] { 0.0F } ; font . paintForScreenScale ( screenScale ) . breakText ( text , 0 , text . length () , true , width , measuredWidth ) ; return measuredWidth [ 0 ] ; } 
@ org.junit.Test public void testEquals () { com.github.ithildir.airbot.server.model.CityAndState cityAndState = new com.github.ithildir.airbot.server.model.CityAndState ( "foo" , "ca" ) ; org.junit.Assert . assertTrue ( cityAndState . equals ( cityAndState ) ) ; org.junit.Assert . assertFalse ( cityAndState . equals ( null ) ) ; com.github.ithildir.airbot.server.model.CityAndState cityAndState2 = new com.github.ithildir.airbot.server.model.CityAndState ( "fOo" , "cA" ) ; org.junit.Assert . assertTrue ( cityAndState . equals ( cityAndState2 ) ) ; cityAndState2 = new com.github.ithildir.airbot.server.model.CityAndState ( "bar baz" , "wa" ) ; org.junit.Assert . assertFalse ( cityAndState . equals ( cityAndState2 ) ) ; } 
private void search ( java.lang.String searchQuery , int pageNumber ) { searchResultAdapter . clear () ; requestQueue . cancelAll ( com.example.vineetpatil.moviesearch.SearchFragment.TAG ) ; java.lang.String url = java.lang.String . format ( com.example.vineetpatil.moviesearch.SearchFragment.searchUrl , searchQuery , pageNumber ) ; android.util.Log . d ( com.example.vineetpatil.moviesearch.SearchFragment.TAG , ( "search : url - " + url ) ) ; com.example.vineetpatil.moviesearch.GsonRequest < com.example.vineetpatil.moviesearch.SearchResponse > searchResponseGsonRequest = new com.example.vineetpatil.moviesearch.GsonRequest ( url , com.example.vineetpatil.moviesearch.SearchResponse . class , null , new com.example.vineetpatil.moviesearch.SearchFragment.SearchResultsListener () , new com.example.vineetpatil.moviesearch.SearchFragment.SearchResultsErrorListener () ) ; searchResponseGsonRequest . setTag ( com.example.vineetpatil.moviesearch.SearchFragment.TAG ) ; requestQueue . add ( searchResponseGsonRequest ) ; loadingData = true ; } 
@ java.lang.Override public void usePower () { if ( ( enemies ) != null ) { for ( enemies.Enemy e : enemies ) { if ( ! ( ( e . getNodeArrayPos () ) < 1 ) ) e . setNodeArrayPos ( ( ( e . getNodeArrayPos () ) - 500 ) ) ; } } super . getCooldownObject () . setOnCooldown ( true ) ; } 
public void cancelDownload () { java.util.Map < java.lang.String , java.lang.String > map = backupOps . getCurrentBackupInfo () ; com.emc.storageos.systemservices.impl.restore.DownloadExecutor.log . info ( "To cancel current download {}" , map ) ; java.lang.String backupName = map . get ( BackupConstants.CURRENT_DOWNLOADING_BACKUP_NAME_KEY ) ; boolean isLocal = java.lang.Boolean . parseBoolean ( map . get ( BackupConstants.CURRENT_DOWNLOADING_BACKUP_ISLOCAL_KEY ) ) ; com.emc.storageos.systemservices.impl.restore.DownloadExecutor.log . info ( "backupname={}, isLocal={}" , backupName , isLocal ) ; if ( isLocal == false ) { setDownloadStatus ( backupName , BackupRestoreStatus.Status.DOWNLOAD_CANCELLED , 0 , 0 , false ) ; com.emc.storageos.systemservices.impl.restore.DownloadExecutor.log . info ( "Persist the cancel flag into ZK" ) ; } } 
public void delete ( java.lang.String uuid ) { int index = getIndex ( uuid ) ; if ( index == ( - 1 ) ) { java.lang.System.out . println ( ( ( "Resume " + uuid ) + " not exist" ) ) ; } else { delHelper ( index ) ; storage [ ( ( size ) - 1 ) ] = null ; ( size ) -- ; } } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) @ org.springframework.transaction.annotation.Transactional @ java.lang.Override public java.util.List < com.health.entity.GP > findByPostcode ( int postcode ) { try { java.lang.String str = "SELECT g FROM GP g WHERE g.postcode BETWEEN ?1 AND ?2" ; javax.persistence.Query query = em . createQuery ( str ) ; query . setParameter ( 1 , ( postcode - 2 ) ) ; query . setParameter ( 2 , ( postcode + 2 ) ) ; return query . getResultList () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; em . close () ; return null ; } } 
@ java.lang.Override public void onComplete ( @ android.support.annotation.NonNull com.google.android.gms.tasks.Task < com.google.firebase.auth.AuthResult > task ) { if ( ! ( task . isSuccessful () ) ) { if ( ( mAuthResultListener ) != null ) { mAuthResultListener . onComplete ( "Login successful." ) ; } } else { if ( ( mAuthResultListener ) != null ) { mAuthResultListener . onComplete ( "Login failed." ) ; } } } 
private void setup ( ) throws java.io.IOException { numberOfDays = getNumberOfDays () ; dayNumber = 1 ; int numPlayers = getNumberRequired ( "How many players?    " ) ; playerList = new Player [ numPlayers ] ; for ( int i = 0 ; i < numPlayers ; i ++ ) { playerList [ i ] = createPlayer () ; } generateFoodPrototypes () ; java.lang.System.out . println ( foodPrototypes ) ; } 
public void update ( java.lang.Integer id , java.lang.String title , java.lang.String content ) { try { org.apache.lucene.index.IndexWriterConfig indexWriterConfig = new org.apache.lucene.index.IndexWriterConfig ( org.apache.lucene.util.Version.LUCENE_35 , analyzer ) ; org.apache.lucene.index.IndexWriter indexWriter = new org.apache.lucene.index.IndexWriter ( directory , indexWriterConfig ) ; org.apache.lucene.document.Document document = addDocument ( id , title , content ) ; org.apache.lucene.index.Term term = new org.apache.lucene.index.Term ( "id" , java.lang.String . valueOf ( id ) ) ; indexWriter . updateDocument ( term , document ) ; indexWriter . close () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "updateProgramme" ) public java.lang.String updateProgramme ( @ org.springframework.web.bind.annotation.RequestParam java.lang.String programmeId , @ org.springframework.web.bind.annotation.RequestParam java.lang.String content , org.springframework.ui.Model model ) { com.tuqi.domain.model.ProgrammeDO programmeDO = new com.tuqi.domain.model.ProgrammeDO () ; if ( org.apache.commons.lang3.StringUtils . isNotBlank ( programmeId ) ) { programmeDO = programmeManager . selectByPrimaryKey ( java.lang.Long . valueOf ( programmeId ) ) ; } if ( ( null != programmeDO ) && ( org.apache.commons.lang3.StringUtils . isNotBlank ( content ) ) ) { programmeDO . setContent ( content ) ; } programmeManager . updateByPrimaryKeySelective ( programmeDO ) ; return "/showProgrammeList" ; } 
@ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle outState ) { super . onSaveInstanceState ( outState ) ; java.util.ArrayList < com.example.android.popularmovies.data.Movie > movies = ( ( java.util.ArrayList < com.example.android.popularmovies.data.Movie > ) ( mTheMovieDbAdapter . getMMovies () ) ) ; android.util.Log . d ( com.example.android.popularmovies.MainActivity.TAG , ( "onSaveInstanceState movies: " + ( com.example.android.popularmovies.utilities.JsonUtility . toJson ( movies ) ) ) ) ; outState . putParcelableArrayList ( com.example.android.popularmovies.MainActivity.LIFECYCLE_CALLBACKS_TEXT_KEY , movies ) ; } 
@ java.lang.Override public void run () { java.lang.System.out . println () ; java.util.ArrayList < java.math.BigInteger > block = buildBlock ( false ) ; fibonacci.Console . printBlock ( block , maxValue ) ; if ( ( term1 . compareTo ( maxValue ) ) >= 0 ) { java.lang.System.out . println ( "Sequence completed." ) ; stop () ; } java.lang.System.out . print ( state . prompt () ) ; } 
void createGraph ( java.lang.String graphName ) { graph = new org.graphstream.graph.implementations.MultiGraph ( graphName ) ; graph . addAttribute ( "ui.stylesheet" , styleSheet ) ; graph . setStrict ( false ) ; graph . setAutoCreate ( true ) ; graph . addAttribute ( "ui.quality" ) ; graph . addAttribute ( "ui.antialias" ) ; viewer = new org.graphstream.ui.view.Viewer ( graph , Viewer.ThreadingModel.GRAPH_IN_ANOTHER_THREAD ) ; view = viewer . addDefaultView ( false ) ; viewer . setCloseFramePolicy ( Viewer.CloseFramePolicy.CLOSE_VIEWER ) ; } 
public void stepInSpace ( int x , int y ) { square [ x ] [ y ] . click () ; if ( ! ( square [ x ] [ y ] . getFlagged () ) ) { if ( square [ x ] [ y ] . getBomb () ) { java.lang.System.out . println ( "game over" ) ; } else { checkAdjacentBombs ( square [ x ] [ y ] ) ; java.lang.System.out . println ( ( "AdjacentBombs = " + ( square [ x ] [ y ] . getAdjacentBombs () ) ) ) ; } } } 
boolean isConverged ( double [] oldVals , double [] newVals ) { double diff = 0 ; for ( int i = 0 ; i < ( oldVals.length ) ; i ++ ) { diff += java.lang.Math . abs ( ( ( oldVals [ i ] ) - ( newVals [ i ] ) ) ) ; } return diff <= ( PageRank.EPSILON ) ; } 
final double internalNextDouble ( double origin , double bound ) { double r = ( ( nextLong () ) > > > 11 ) * ( org.blockartistry.util.XorShiftRandom.DOUBLE_UNIT ) ; if ( origin < bound ) { r = ( r * ( bound - origin ) ) + origin ; if ( r >= bound ) r = java.lang.Double . longBitsToDouble ( ( ( java.lang.Double . doubleToLongBits ( bound ) ) - 1 ) ) ; } return r ; } 
@ java.lang.Override public void readData ( com.hazelcast.nio.ObjectDataInput in ) throws java.io.IOException { this . source = in . readLong () ; this . destination = in . readLong () ; this . sagaID = in . readInt () ; this . txID = in . readInt () ; } 
public void addFriend ( example.codeclan.com.friendshiptracker.Friend friend ) { android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; android.content.ContentValues values = new android.content.ContentValues () ; values . put ( example.codeclan.com.friendshiptracker.DBHandler.KEY_FIRST_NAME , friend . getFirstName () ) ; values . put ( example.codeclan.com.friendshiptracker.DBHandler.KEY_LAST_NAME , friend . getLastName () ) ; values . put ( example.codeclan.com.friendshiptracker.DBHandler.KEY_TOTAL_DAYS , friend . getTotalDays () ) ; values . put ( example.codeclan.com.friendshiptracker.DBHandler.KEY_DATE_SET , friend . getDateSet () . getTime () ) ; db . insert ( example.codeclan.com.friendshiptracker.DBHandler.TABLE_FRIENDS , null , values ) ; db . close () ; } 
public static java.lang.Integer gcm ( int first , int second ) { int i = ( first >= second ) ? first : second ; while ( i != 0 ) { if ( ( ( first % i ) == 0 ) && ( ( second % i ) == 0 ) ) return i ; i -- ; } return - 1 ; } 
private static java.lang.String getTokenizationString () { java.util.StringJoiner joiner = new java.util.StringJoiner ( ")|(" ) ; joiner . add ( utilities.structuredmap.JsonScanner.INTEGER_REGEX ) ; joiner . add ( utilities.structuredmap.JsonScanner.DOUBLE_REGEX ) ; joiner . add ( utilities.structuredmap.JsonScanner.STRING_REGEX ) ; for ( java.lang.String simpleRegex : utilities.structuredmap.JsonScanner.SIMPLE_TOKEN_REGEXES ) { joiner . add ( simpleRegex ) ; } return ( "(" + ( joiner . toString () ) ) + ")" ; } 
@ java.lang.Override public void onFailure ( int statusCode , java.util.Map < java.lang.String , java.util.List < java.lang.String > > headers , java.lang.String content ) { try { if ( ( content . length () ) > 0 ) { java.lang.Error error = com.mb3364.twitch.api.resources.AbstractResource.objectMapper . readValue ( content , java.lang.Error . class ) ; apiHandler . onFailure ( statusCode , error . getStatusText () , error . getMessage () ) ; } else { apiHandler . onFailure ( statusCode , "" , "" ) ; } } catch ( java.io.IOException e ) { apiHandler . onFailure ( e ) ; } } 
public static void hideBrick ( Brick newbrick , Ball saveBall ) { newbrick . getBounds () . setBounds ( ( - 10 ) , ( - 10 ) , 0 , 0 ) ; newbrick . setAlive ( false ) ; newbrick = null ; int saveXa = ( ( int ) ( saveBall . getXa () ) ) ; int saveYa = ( ( int ) ( saveBall . getYa () ) ) ; saveBall . setYa ( ( saveYa * ( - 1 ) ) ) ; } 
public void onClick ( android.view.View arg0 ) { android.widget.TextView volNum = ( ( android.widget.TextView ) ( findViewById ( R.id.input_vol_num ) ) ) ; volNum . setText ( java.lang.Integer . toString ( ( ( java.lang.Integer . parseInt ( volNum . getText () . toString () ) ) + 1 ) ) ) ; } 
@ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/doUpdate" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public java.lang.String doUpdate ( @ javax.ws.rs.QueryParam ( value = "user_id" ) java.lang.String uid , @ javax.ws.rs.QueryParam ( value = "urldata" ) java.lang.String urldata ) { java.lang.String response = "" ; if ( checkCredentials ( uid ) ) { if ( ( updateUrl ( urldata ) ) == 0 ) { response = com.prgguru.jersey.Utility . constructJSON ( "update" , true ) ; } else { response = com.prgguru.jersey.Utility . constructJSON ( "update" , false , "bad url map" ) ; } } else { response = com.prgguru.jersey.Utility . constructJSON ( "update" , false , "not logged in or not registered" ) ; } return response ; } 
private void GetTTH ( java.lang.String Filename ) throws java.io.IOException { this . Filename = Filename ; try { OpenFile () ; if ( Initialize () ) { SplitFile () ; StartThreads () ; CompressTree () ; } } catch ( java.lang.Exception e ) { java.lang.System.out . println ( ( "error while trying to get TTH: " + ( e . getMessage () ) ) ) ; StopThreads () ; } if ( ( FilePtr ) != null ) FilePtr . close () ; } 
@ java.lang.Override public void onReceive ( android.content.Context context , android.content.Intent intent ) { java.lang.String action = intent . getAction () ; if ( action . equals ( WifiManager.NETWORK_STATE_CHANGED_ACTION ) ) { android.net.NetworkInfo networkInfo = intent . getParcelableExtra ( WifiManager.EXTRA_NETWORK_INFO ) ; if ( ( networkInfo . getState () ) == ( NetworkInfo.State.CONNECTED ) ) { android.net.wifi.WifiInfo wifiInfo = intent . getParcelableExtra ( WifiManager.EXTRA_WIFI_INFO ) ; if ( ( type ) == ( ryey.easer.commons.plugindef.eventplugin.EventType.is ) ) changeSatisfiedState ( compare ( wifiInfo ) ) ; } } } 
@ java.lang.Override public void onDestroy () { org.md2k.utilities.Report.Log . d ( org.md2k.moodsurfing.ActivityMoodSurfingExercises.TAG , "onDestroy()..." ) ; org.md2k.utilities.Report.Log . d ( org.md2k.moodsurfing.ActivityMoodSurfingExercises.TAG , ( "onDestroy()... isConnected=" + ( dataKitAPI . isConnected () ) ) ) ; if ( dataKitAPI . isConnected () ) dataKitAPI . disconnect () ; dataKitAPI . close () ; dataKitAPI = null ; super . onDestroy () ; } 
private boolean inArea ( Actor a1 , Actor a2 ) { double dist = java.lang.Math . sqrt ( ( ( java.lang.Math . pow ( ( ( a1 . getX () ) + ( a2 . getX () ) ) , 2 ) ) + ( java.lang.Math . pow ( ( ( a1 . getY () ) + ( a2 . getY () ) ) , 2 ) ) ) ) ; if ( dist <= ( bubble ) ) { return true ; } return false ; } 
public double getHypotneuse0 ( double angle ) { double opposite0 = ( heightToBottomOfTopTarget ) + ( cameraHeight ) ; double hypotneuse_0 = opposite0 / ( edu.wpi.first.wpilibj.templates.MathX . sin ( getTheta ( angle ) ) ) ; java.lang.System.out . println ( ( "Phi " + ( getTheta ( angle ) ) ) ) ; return hypotneuse_0 ; } 
byte [] putNamespaceSchemaEntity ( org.apache.hadoop.hbase.NamespaceDescriptor nd ) throws java.io.IOException { if ( ! ( isIncludedNamespace ( nd . getName () ) ) ) { return null ; } org.commonvox.hbase_column_manager.Repository.RowId namespaceRowId = new org.commonvox.hbase_column_manager.Repository.RowId ( SchemaEntityType.NAMESPACE . getRecordType () , org.commonvox.hbase_column_manager.Repository.NAMESPACE_PARENT_FOREIGN_KEY , org.apache.hadoop.hbase.util.Bytes . toBytes ( nd . getName () ) ) ; java.util.Map < byte [] , byte [] > entityAttributeMap = buildEntityAttributeMap ( org.commonvox.hbase_column_manager.Repository.EMPTY_VALUES , nd . getConfiguration () ) ; return putSchemaEntity ( namespaceRowId . getByteArray () , entityAttributeMap , false ) ; } 
public java.lang.Void call ( ) throws java.lang.Exception { for ( int i = beginIndex ; i < ( ( beginIndex ) + ( count ) ) ; i ++ ) { dm . indexMetadata ( ( ( ids [ i ] ) + "" ) , false ) ; } return null ; } 
private void writeData ( int id , java.lang.String key , server.RMItem value ) { server.RMHashtable t = transaction_table . get ( new java.lang.Integer ( id ) ) ; synchronized ( t ) { t . put ( key , value ) ; lastTransactionActivityTime . put ( new java.lang.Integer ( id ) , new java.lang.Long ( java.lang.System . currentTimeMillis () ) ) ; isTransactionModified . put ( new java.lang.Integer ( id ) , new java.lang.Boolean ( true ) ) ; } } 
void loadConfig () { final com.b3dgs.lionengine.game.map.Minimap minimap = WorldModel.INSTANCE . getMinimap () ; final com.b3dgs.lionengine.core.Media media = com.b3dgs.lionengine.core.Medias . create ( config . getText () ) ; if ( media . getFile () . isFile () ) { minimap . loadPixelConfig ( media ) ; minimap . prepare () ; render ( gc , minimap ) ; } } 
private java.util.ArrayList < java.lang.String > undoRemove () { if ( isEvent ( prevModIndex ) ) { return addEvent ( prevModEvent ) ; } else if ( isFloatingTask ( prevModIndex ) ) { return addFloatingTask ( prevModFloatingTask ) ; } else { return addTask ( prevModTask ) ; } } 
private io.minio.HttpResponse executePost ( java.lang.String bucketName , java.lang.String objectName , byte [] data , java.util.Map < java.lang.String , java.lang.String > queryParamMap ) throws io.minio.ErrorResponseException , io.minio.InternalException , io.minio.InvalidBucketNameException , io.minio.NoResponseException , java.io.IOException , org.xmlpull.v1.XmlPullParserException { updateRegionMap ( bucketName ) ; return execute ( Method.POST , Regions.INSTANCE . region ( bucketName ) , bucketName , objectName , data , null , queryParamMap ) ; } 
private org.springframework.web.servlet.ModelAndView getPlayersView ( de.appsolve.padelcampus.db.model.Event event , java.util.Collection < de.appsolve.padelcampus.db.model.Player > players , java.lang.String title ) { java.util.SortedMap < de.appsolve.padelcampus.db.model.Participant , java.math.BigDecimal > ranking = rankingUtil . getPlayerRanking ( players ) ; org.springframework.web.servlet.ModelAndView mav = new org.springframework.web.servlet.ModelAndView ( "players/players" ) ; mav . addObject ( "RankingMap" , de.appsolve.padelcampus.utils.SortUtil . sortMap ( ranking ) ) ; mav . addObject ( "title" , title ) ; mav . addObject ( "Model" , event ) ; return mav ; } 
@ java.lang.Override public void onReceive ( android.content.Context context , android.content.Intent intent ) { java.lang.String action = intent . getAction () ; switch ( action ) { case com.example.user.onedaynquestions.service.WakefulPushReceiver.ACTION_REGISTRATION : abortBroadcast () ; break; case com.example.user.onedaynquestions.service.WakefulPushReceiver.ACTION_RECEIVE : com.example.user.onedaynquestions.service.WakefulPushReceiver.updated = false ; onMessageReceived ( context , intent ) ; com.example.user.onedaynquestions.service.WakefulPushReceiver.updated = true ; abortBroadcast () ; break; case "NEW_PROBLEM_HAS_COME" : int check = 0 ; abortBroadcast () ; break; default: break; } } 
public newGame.IntPoint randomLoc ( newGame.Mapping.Tile oftype ) { final int maxAttempts = 1024 ; int attempts = 0 ; int rx ; int ry ; newGame.Mapping.Tile t ; do { rx = MainGame.random . nextInt ( getWidth () ) ; ry = MainGame.random . nextInt ( getHeight () ) ; t = getElement ( rx , ry ) ; attempts ++ ; } while ( ( ! ( t . equalsTo ( oftype ) ) ) && ( attempts <= maxAttempts ) ) ; return new newGame.IntPoint ( rx , ry ) ; } 
@ org.junit.Test public void testUndoSectionWinningMove () { com.diusrex.tictactoe.data_structures.position.SectionPosition sectionToWin = com.diusrex.tictactoe.data_structures.position.SectionPosition . make ( 0 , 0 ) ; winSection ( sectionToWin ) ; org.junit.Assert . assertEquals ( mainPlayer , board . getSectionOwner ( sectionToWin ) ) ; board . undoLastMove () ; org.junit.Assert . assertEquals ( Player.Unowned , board . getSectionOwner ( sectionToWin ) ) ; org.junit.Assert . assertEquals ( null , board . getSectionWinLine ( sectionToWin ) ) ; } 
protected void readFluidToByteBuf ( com.nik7.upgcraft.tileentities.FluidTank tank , io.netty.buffer.ByteBuf buf ) { int fluidAmount = buf . readInt () ; int fluidID = buf . readInt () ; if ( fluidAmount > 0 ) { tank . setFluid ( new com.nik7.upgcraft.tileentities.FluidStack ( com.nik7.upgcraft.tileentities.FluidRegistry . getFluid ( fluidID ) , fluidAmount ) ) ; } worldObj . markBlockRangeForRenderUpdate ( xCoord , yCoord , zCoord , xCoord , yCoord , zCoord ) ; } 
public void run () { while ( true ) { if ( ! ( this . getSpiroModel () . isStop () ) ) { this . getSpiroModel () . updateByAnimation () ; this . getSpiroModel () . setDegree () ; } else {} this . update () ; try { java.lang.Thread . sleep ( 1 ) ; } catch ( java.lang.Exception anException ) {} } } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { java.lang.String mealType = "" ; switch ( which ) { case 0 : mealType = "Breakfast" ; break; case 1 : mealType = "Lunch" ; break; case 2 : mealType = "Dinner" ; break; case 3 : mealType = "Snack" ; break; default: mealType = "Error" ; break; } getMealItem ( mealType ) ; } 
public void addStoryAt ( com.thebestory.android.model.Story story , int position ) { if ( ( story == null ) || ( ( story.id ) == null ) ) { return; } storiesId . add ( position , story.id ) ; bookmarked : com.thebestory.android.util.CacheStories . getInstance () . setBookmarked ( story ) ; com.thebestory.android.util.CacheStories . getInstance () . updateStory ( story ) ; } 
public void addExperience ( int experience ) { universe.text_handler . createDecayText ( ( ( "+" + experience ) + "xp" ) , universe.screen.gui.bar_experience.x , ( ( universe.screen.gui.bar_experience.y ) + ( universe.screen.gui.bar_experience.MAX_BAR_HEIGHT ) ) , Color.YELLOW ) ; this . experience_current += experience ; while ( ( this . experience_current ) >= ( EXPERIENCE_MAX ) ) ; { levelUp () ; this . experience_current -= EXPERIENCE_MAX ; } } 
private void updatePhotosFromCursor ( final android.database.Cursor c ) { c . moveToFirst () ; final java.lang.String imageUrl = c . getString ( c . getColumnIndexOrThrow ( ExplorContentContract.Photos.Columns.IMAGE_URL_LARGE ) ) ; mImageManager . addDownloadTask ( new com.explor.imagemgmt.ImageDownloadTask ( imageUrl , this , mHandler ) ) ; final long photoId = c . getLong ( c . getColumnIndexOrThrow ( ExplorContentContract.Photos.Columns._ID ) ) ; final android.net.Uri photoUri = ExplorContentContract.Photos.CONTENT_URI . buildUpon () . appendPath ( ( "" + photoId ) ) . build () ; mImageContentUri = photoUri ; } 
private static void registerFluidBlock ( net.minecraftforge.fluids.BlockFluidClassic block , java.lang.String identifier ) { net.minecraft.item.Item item = net.minecraft.item.Item . getItemFromBlock ( block ) ; final net.minecraft.client.renderer.block.model.ModelResourceLocation mrl = new net.minecraft.client.renderer.block.model.ModelResourceLocation ( new net.minecraft.util.ResourceLocation ( com.mhfs.capacitors.BigCapacitorsMod.modid , com.mhfs.capacitors.render.ItemRenderHelper.fluidStateModel ) , identifier ) ; net.minecraft.client.renderer.block.model.ModelBakery . registerItemVariants ( item ) ; net.minecraftforge.client.model.ModelLoader . setCustomMeshDefinition ( item , new net.minecraft.client.renderer.ItemMeshDefinition () { public net.minecraft.client.renderer.block.model.ModelResourceLocation getModelLocation ( net.minecraft.item.ItemStack stack ) { return mrl ; } } ) ; net.minecraftforge.client.model.ModelLoader . setCustomStateMapper ( block , new net.minecraft.client.renderer.block.statemap.StateMapperBase () { protected net.minecraft.client.renderer.block.model.ModelResourceLocation getModelResourceLocation ( net.minecraft.block.state.IBlockState state ) { return mrl ; } } ) ; } 
public static long getConstLong ( @ javax.annotation.Nonnull final org.apache.hadoop.hive.serde2.objectinspector.ObjectInspector oi ) throws org.apache.hadoop.hive.ql.exec.UDFArgumentException { if ( ! ( hivemall.utils.hadoop.HiveUtils . isBigIntOI ( oi ) ) ) { throw new org.apache.hadoop.hive.ql.exec.UDFArgumentException ( ( "argument must be a BigInt value: " + ( org.apache.hadoop.hive.serde2.typeinfo.TypeInfoUtils . getTypeInfoFromObjectInspector ( oi ) ) ) ) ; } org.apache.hadoop.io.LongWritable v = hivemall.utils.hadoop.HiveUtils . getConstValue ( oi ) ; return v == null ? null : v . get () ; } 
public void addChapters ( Manga m ) { for ( Chapter c : m . getAllChapters () ) { row = new java.util.Vector < java.lang.String > ( 5 ) ; row . addElement ( m . getMangaName () ) ; row . addElement ( c . getChapterName () ) ; row . addElement ( ( ( c . getAllPages () . size () ) + "" ) ) ; row . addElement ( "Downloading..." ) ; rowData . add ( row ) ; } fireTableDataChanged () ; } 
private boolean setupViewPager () { viewPager = findViewById ( R.id.view_pager ) ; if ( ( viewPager ) != null ) { ru.yamblz.weather.ui.cities.CitiesActivity.CitiesPagerAdapter adapter = new ru.yamblz.weather.ui.cities.CitiesActivity.CitiesPagerAdapter ( getSupportFragmentManager () ) ; viewPager . setAdapter ( adapter ) ; android.support.design.widget.TabLayout tabLayout = findViewById ( R.id.tab_layout ) ; if ( tabLayout != null ) { tabLayout . setupWithViewPager ( viewPager ) ; } return true ; } return false ; } 
private void addConflictIfNeeded ( java.util.ArrayList < java.util.Set < BoardPair > > conflicts , BoardPair box , int box2Id ) { if ( duplicates . containsKey ( box2Id ) ) { BoardPair box2 = duplicates . get ( box2Id ) ; if ( notEqualBoxValue ( box , box2 ) ) { conflicts . add ( new java.util.HashSet < BoardPair > ( java.util.Arrays . asList ( box , box2 ) ) ) ; } } } 
public java.util.List < type.Fbq > calculateALL ( java.lang.Integer number ) { java.util.List < type.Fbq > results = new java.util.ArrayList < type.Fbq > ( number ) ; for ( int i = 1 ; i < number ; i ++ ) { results . add ( new type.Fbq ( i , validatorRules . computeNumber ( i ) ) ) ; } return results ; } 
void filled ( int hash , boolean withLock ) { hash = java.lang.Math . abs ( hash ) ; java.util.concurrent.locks.ReentrantLock monitor = monitors [ ( hash % ( monitors.length ) ) ] ; if ( withLock ) monitor . lock () ; try { int maskIdx = hash % ( filters.length ) ; int maxPos = hash % 32 ; int maskFilter = 1 < < maxPos ; filters [ maskIdx ] |= maskFilter ; } finally { if ( withLock ) monitor . unlock () ; } } 
private void setBinaryFromDecimal () { int buffer = decimalValue ; int power = 7 ; while ( ( buffer != 0 ) && ( power >= 0 ) ) { if ( buffer > ( java.lang.Math . pow ( 2 , power ) ) ) { buffer = - ( ( int ) ( java.lang.Math . pow ( 2 , power ) ) ) ; binaryValue [ power ] = true ; } else { binaryValue [ power ] = true ; } -- power ; } } 
void drawBarBackground ( android.graphics.Canvas canvas , float left , float top , float right , float bottom ) { canvas . drawRoundRect ( new android.graphics.RectF ( ( ( int ) ( left ) ) , ( ( int ) ( top ) ) , ( ( int ) ( right ) ) , ( ( int ) ( bottom ) ) ) , style.cornerRadius , style.cornerRadius , style.barBackgroundPaint ) ; } 
public void setHandLinearControlAndYawPitchOnly ( us.ihmc.robotics.robotSide.RobotSide robotSide ) { boolean [] controlledPositionAxes = new boolean [] { true , true , true } ; boolean [] controlledOrientationAxes = new boolean [] { false , true , true } ; setHandControlledAxes ( robotSide , controlledPositionAxes , controlledOrientationAxes ) ; } 
public void deleteNodeValue ( int value ) { DataStructuresClasses.LinkNode node = head ; DataStructuresClasses.LinkNode nodeBack = null ; if ( ( node.data ) == value ) { deleteNodeFromBeginning () ; } while ( ( ( node.data ) != value ) && ( ( node.next ) != null ) ) { nodeBack = node ; node = node.next ; } nodeBack.next = node.next ; ( DataStructuresClasses.LinkedList.length ) -- ; } 
private void reveal () { for ( controller.GraphicsController control : GraphicsController.games ) { for ( int i = 0 ; i < ( controller . size () ) ; i ++ ) { if ( control . checkMine ( i ) ) { control.grid . get ( i ) . setVisible ( false ) ; } } } } 
public boolean sortByFavorites () { android.content.Context context = getActivity () ; android.content.SharedPreferences sp = android.preference.PreferenceManager . getDefaultSharedPreferences ( context ) ; java.lang.String sortKey = context . getString ( R.string.pref_sort_key ) ; java.lang.String favorites = context . getString ( R.string.pref_sort_favorites ) ; return sp . getString ( sortKey , favorites ) . equals ( favorites ) ; } 
public final double getDuree ( double translationalSpeed , int tempsArret ) { int nb = getNbPoints () ; double out = 0 ; for ( int i = 0 ; i < nb ; i ++ ) out += ( ClothoidesComputer.PRECISION_TRACE_MM ) / ( java.lang.Math . max ( getPoint ( i ) . maxSpeed , translationalSpeed ) ) ; return out + ( ( vitesse . getNbArrets () ) * tempsArret ) ; } 
@ org.junit.Test public void givenApiMapper_whenMaps_thenCorrect () { com.baeldung.dozer.Personne frenchAppPerson = new com.baeldung.dozer.Personne ( "Sylvester Stallone" , "Rambo" , 70 ) ; mapper . addMapping ( builder ) ; com.baeldung.dozer.Person englishAppPerson = mapper . map ( frenchAppPerson , com.baeldung.dozer.Person . class ) ; org.junit.Assert . assertEquals ( englishAppPerson . getName () , frenchAppPerson . getNom () ) ; org.junit.Assert . assertEquals ( englishAppPerson . getNickname () , frenchAppPerson . getSurnom () ) ; org.junit.Assert . assertEquals ( englishAppPerson . getAge () , frenchAppPerson . getAge () ) ; } 
public void draw () { try { int [] surfArr = com.ail.crxmarkets.Utils . parseIntArray ( textArea ) ; surface = new com.ail.crxmarkets.model.Surface ( surfArr ) ; updateBarModel () ; } catch ( com.ail.crxmarkets.exception.ApplicationException e ) { com.ail.crxmarkets.jsf.FacesUtils . error ( e . getMessage () ) ; } } 
@ java.lang.Override public void add ( java.lang.String name , java.lang.String id ) { players [ ( ( playersCount ) ++ ) ] . setName ( name ) ; players [ ( ( playersCount ) ++ ) ] . setId ( id ) ; if ( ( playersCount ) >= 2 ) { server . disalowConnections () ; } } 
public void load ( java.lang.String tExpFilePath ) { it.unige.dibris.TExpRVMAS.utils.JPL.JPLInitializer . createAndCheck ( ( ( "retractall(trace_expression(" + ( protocolName ) ) + ", _))" ) ) ; it.unige.dibris.TExpRVMAS.utils.JPL.JPLInitializer . createAndCheck ( "consult" , new org.jpl7.Atom ( tExpFilePath ) ) ; if ( ! ( isContractive () ) ) { throw new it.unige.dibris.TExpRVMAS.exception.TraceExpressionNotContractiveException () ; } if ( ! ( ( areEventsAtomic () ) ^ ( areEventsAsync () ) ) ) { throw new it.unige.dibris.TExpRVMAS.exception.TraceExpressionNeitherAtomicNorAsyncEventTypesException () ; } } 
private void addUserActivities ( org.springframework.ui.Model model , java.lang.String userToken ) { if ( ( net.whydah.sso.user.helpers.UserTokenXpathHelper . getPersonref ( userToken ) . length () ) > 2 ) { try { java.net.URI reportServiceUri = javax.ws.rs.core.UriBuilder . fromUri ( reportservice ) . build () ; java.lang.String userid = net.whydah.sso.user.helpers.UserTokenXpathHelper . getUserID ( userToken ) ; java.lang.String userActivitiesJson = new net.whydah.sso.commands.extensions.statistics.CommandListUserLogins ( reportServiceUri , "" , "" , userid ) . execute () ; model . addAttribute ( ModelHelper.USERACTIVITIES , userActivitiesJson ) ; } catch ( java.lang.Exception e ) {} } } 
public static void assertTablesExist ( com.cloudant.sync.sqlite.SQLDatabaseQueue dbQueue , final java.lang.String . . . tables ) throws java.lang.InterruptedException , java.util.concurrent.ExecutionException { dbQueue . submit ( new com.cloudant.sync.sqlite.SQLQueueCallable < java.lang.Void > () { @ java.lang.Override public java.lang.Void call ( com.cloudant.sync.sqlite.SQLDatabase db ) throws java.lang.Exception { java.util.Set < java.lang.String > allTables = com.cloudant.sync.util.SQLDatabaseTestUtils . getAllTableNames ( db ) ; for ( java.lang.String table : tables ) { org.junit.Assert . assertThat ( allTables , org.hamcrest.CoreMatchers . hasItem ( table ) ) ; } return null ; } } ) . get () ; } 
private void parseCleanup () { assert _pds._job . isStopped () ; water.parser.Futures fs = new water.parser.Futures () ; water.parser.ParseDataset.MultiFileParseTask mfpt = _pds._mfpt ; _pds._mfpt = null ; if ( mfpt != null ) mfpt . onExceptionCleanup ( fs ) ; for ( water.parser.Key k : _keys ) water.parser.Keyed . remove ( k , fs ) ; water.parser.Keyed . remove ( _pds._job._result , fs ) ; fs . blockForPending () ; } 
public static java.io.File getImageCacheDirectory ( android.content.Context context ) { java.io.File directory = new java.io.File ( ( ( com.example.getimage.utils.Utils . getStoragePath ( context ) ) + "images/" ) ) ; if ( ! ( directory . exists () ) ) { directory . mkdirs () ; } return directory ; } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { view = inflater . inflate ( R.layout.fragment_stage_editing , container , false ) ; rootLayout = ( ( android.view.ViewGroup ) ( view . findViewById ( R.id.view_root ) ) ) ; imageView = ( ( android.widget.ImageView ) ( view . findViewById ( R.id.fullscreen_content ) ) ) ; android.widget.RelativeLayout.LayoutParams layoutParams = new android.widget.RelativeLayout.LayoutParams ( 150 , 150 ) ; imageView . setLayoutParams ( layoutParams ) ; imageView . setOnTouchListener ( new com.d24.android.pictogramapp.ui.EditingFragment.ChoiceTouchListener () ) ; rootLayout . addView ( imageView ) ; return view ; } 
protected int sendContentLengthHeaderIfNotAlreadyPresent ( java.io.PrintWriter pw , java.util.Map < java.lang.String , java.lang.String > header , int size ) { for ( java.lang.String headerName : header . keySet () ) { if ( headerName . equalsIgnoreCase ( "content-length" ) ) ; { try { return java.lang.Integer . parseInt ( header . get ( headerName ) ) ; } catch ( java.lang.NumberFormatException ex ) { return size ; } } } pw . print ( ( ( "Content-Length: " + size ) + "\r\n" ) ) ; return size ; } 
@ java.lang.Override public java.lang.Boolean call ( ) throws java.lang.Exception { java.io.File destFile = new java.io.File ( patchTmpDir , ( ( ( mainBundleName ) + "/" ) + relativePath ) ) ; java.io.File baseSoFile = new java.io.File ( baseApkUnzipFolder , relativePath ) ; if ( ( isBlackBundle ( soFile ) ) || ( ! ( com.taobao.android.tpatch.utils.PatchUtils . isBundleFile ( soFile ) ) ) ) { if ( isFileModify ( soFile , baseSoFile ) ) org.apache.commons.io.FileUtils . copyFile ( soFile , destFile ) ; } else { processBundleFiles ( soFile , baseSoFile , patchTmpDir ) ; } return true ; } 
@ org.spongepowered.api.event.Listener public void onServerStopping ( org.spongepowered.api.event.game.state.GameStoppedServerEvent event ) { try { java.lang.String json = com.dracade.ember.Ember . serializer () . gson () . toJson ( io.github.hsyyid.ultimategames.UltimateGames.arenas ) ; io.github.hsyyid.ultimategames.utils.ConfigManager . writeJSON ( json ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; getLogger () . error ( "There was an issue while saving the arenas!" ) ; } getLogger () . info ( "UltimateGames disabled." ) ; } 
private void logoutMellon ( final javax.servlet.http.HttpServletRequest httpRequest , final javax.servlet.http.HttpServletResponse httpResponse , final java.lang.String username ) throws java.io.IOException , javax.servlet.ServletException { try { this . authenticationManager . logout ( username ) ; } catch ( final com.alliander.osgp.shared.usermanagement.KeycloakClientException e ) { com.alliander.osgp.shared.security.MellonTokenProcessingFilter.LOGGER . error ( "Error logging user '{}' out with the Keycloak API." , username , e ) ; } httpResponse . sendRedirect ( this . logoutUrl ) ; } 
public static Node genHuffman ( java.util.PriorityQueue < Node > sortedList ) { while ( ( sortedList . size () ) > 2 ) { sortedList . add ( new Node ( sortedList . poll () , sortedList . poll () ) ) ; } return new Node ( sortedList . poll () , sortedList . poll () ) ; } 
@ java.lang.Override public com.matrixpeckham.raytracer.util.Vector3D getDirection ( com.matrixpeckham.raytracer.util.ShadeRec sr ) { samplePoint . setTo ( obj . sample () ) ; lightNormal . setTo ( obj . getNormal ( samplePoint ) ) ; wi . setTo ( samplePoint . sub ( sr.hitPoint ) ) ; wi . normalize () ; return wi ; } 
@ java.lang.Override public void process ( cfa.vo.iris.sed.ExtSed source , cfa.vo.iris.events.SedCommand payload ) { if ( ( payload . equals ( SedCommand.ADDED ) ) || ( payload . equals ( SedCommand.CHANGED ) ) ) { update ( source ) ; } else if ( payload . equals ( SedCommand.REMOVED ) ) { sedPreferences . remove ( source ) ; sedPreferences . get ( source ) . removeAll () ; } cfa.vo.iris.visualizer.preferences.VisualizerChangeEvent . getInstance () . fire ( source , VisualizerCommand.RESET ) ; } 
public void addlabelCount ( java.lang.String labelName ) { label_string = labelName ; if ( ! ( learn.FeatureVector.labelMap . containsKey ( labelName ) ) ) { learn.FeatureVector.labelMap . put ( labelName , ( ( learn.FeatureVector.labelCount ) ++ ) ) ; label = learn.FeatureVector.labelCount ; } label = learn.FeatureVector.labelMap . get ( labelName ) ; } 
public static java.lang.String [] getRoles ( int identifiant ) { metier.Utilisateur utilisateur = metier.Utilisateur . getUtilisateur ( identifiant ) ; if ( utilisateur != null ) { int numberOfRoles = CarteAcces.Role . values () . length ; java.lang.String [] lesRoles = new java.lang.String [ numberOfRoles ] ; int i = 0 ; for ( java.util.Map.Entry < metier.CarteAcces.Role , metier.CarteAcces > lesCartes : utilisateur.lesCartesAccesUtilisateur . entrySet () ) { lesRoles [ i ] = lesCartes . getKey () . toString () ; i ++ ; } return lesRoles ; } else return null ; } 
@ java.lang.Override public void prepareForSave () { super . prepareForSave () ; if ( ( ! ( org.apache.commons.lang.StringUtils . equalsIgnoreCase ( getInvoiceGeneralDetail () . getBillingFrequencyCode () , ArConstants.MILESTONE_BILLING_SCHEDULE_CODE ) ) ) && ( ! ( org.apache.commons.lang.StringUtils . equalsIgnoreCase ( getInvoiceGeneralDetail () . getBillingFrequencyCode () , ArConstants.PREDETERMINED_BILLING_SCHEDULE_CODE ) ) ) ) { org.kuali.kfs.module.ar.document.service.ContractsGrantsInvoiceDocumentService contractsGrantsInvoiceDocumentService = org.kuali.kfs.sys.context.SpringContext . getBean ( org.kuali.kfs.module.ar.document.service.ContractsGrantsInvoiceDocumentService . class ) ; contractsGrantsInvoiceDocumentService . recalculateTotalAmountBilledToDate ( this ) ; } org.kuali.kfs.module.ar.document.service.ContractsGrantsInvoiceDocumentService contractsGrantsInvoiceDocumentService = org.kuali.kfs.sys.context.SpringContext . getBean ( org.kuali.kfs.module.ar.document.service.ContractsGrantsInvoiceDocumentService . class ) ; contractsGrantsInvoiceDocumentService . updateSuspensionCategoriesOnDocument ( this ) ; } 
private boolean NameIsInUse ( java.lang.String Name , com.cburch.logisim.circuit.Circuit changed ) { for ( com.cburch.logisim.tools.Library mylib : getLibraries () ) { if ( NameIsInLibraries ( mylib , Name ) ) return true ; } for ( com.cburch.logisim.circuit.Circuit mytool : this . getCircuits () ) { if ( ( Name . toUpperCase () . equals ( mytool . getName () . toUpperCase () ) ) && ( ! ( mytool . equals ( changed ) ) ) ) return true ; } return false ; } 
public final boolean isPartiallyEmpty ( int x , int y1 , int y2 , int z ) { for ( int y = y1 ; y < y2 ; y ++ ) { if ( isType ( x , y , z , Material.AIR ) ) return true ; } return false ; } 
public void test_when_CameraVideoH264PacketProducer_starts_second_time_in_row_then_returns_false () { com.example.zebul.cameraservice.packet_producers.CameraVideoH264PacketProducerTest.PacketProductionExceptionListenerFake exceptionListener = new com.example.zebul.cameraservice.packet_producers.CameraVideoH264PacketProducerTest.PacketProductionExceptionListenerFake () ; com.example.zebul.cameraservice.packet_producers.video.camera.CameraVideoH264PacketProducer producer = new com.example.zebul.cameraservice.packet_producers.video.camera.CameraVideoH264PacketProducer ( new com.example.zebul.cameraservice.packet_producers.CameraVideoH264PacketProducerTest.H264PacketListenerFake () , exceptionListener ) ; try { boolean startResult1 = producer . start ( defaultCameraSettings ) ; assertTrue ( startResult1 ) ; boolean startResult2 = producer . start ( defaultCameraSettings , "2" ) ; assertFalse ( startResult2 ) ; } finally { producer . stop () ; } } 
public char checkSpace ( int board , int space ) { char result ; if ( ( parent ) == null ) { result = base . checkSpace ( boardChanged , spaceChanged ) ; } else { result = parent . checkSpace ( boardChanged , spaceChanged ) ; if ( ( ( result != ( EngineValues.EMPTY ) ) && ( board == ( boardChanged ) ) ) && ( space == ( spaceChanged ) ) ) { result = player ; } } return result ; } 
public com.java.laiy.model.Player getCurrentPlayer ( final com.java.laiy.model.Player firstPlayer ) { int firstPlayerNum = getFirstPlayerNum ( firstPlayer ) ; int [] playersTurns = getPlayersTurns () ; if ( ( playersTurns [ com.java.laiy.controller.GameController.FIRST_PLAYER ] ) == ( playersTurns [ com.java.laiy.controller.GameController.SECOND_PLAYER ] ) ) { return players [ firstPlayerNum ] ; } else { if ( firstPlayerNum == ( com.java.laiy.controller.GameController.FIRST_PLAYER ) ) { return players [ com.java.laiy.controller.GameController.SECOND_PLAYER ] ; } else { return players [ com.java.laiy.controller.GameController.FIRST_PLAYER ] ; } } } 
public java.lang.String readAsXml ( java.io.File file ) throws edu.brandeis.cs.nlp.mae.database.MaeDBException , edu.brandeis.cs.nlp.mae.io.MaeIOException { try { edu.brandeis.cs.nlp.mae.io.MaeXMLParser parser = parseAsXml ( file ) ; writeParseToDB ( parser ) ; return parser . getParseWarnings () ; } catch ( edu.brandeis.cs.nlp.mae.database.MaeDBException e ) { throw e ; } catch ( java.io.IOException e ) { edu.brandeis.cs.nlp.mae.io.AnnotationLoader . catchIOError ( file , e ) ; } catch ( org.xml.sax.SAXParseException e ) { edu.brandeis.cs.nlp.mae.io.AnnotationLoader . catchSAXParseError ( file , e ) ; } catch ( org.xml.sax.SAXException e ) { edu.brandeis.cs.nlp.mae.io.AnnotationLoader . catchSAXError ( file , e ) ; } return "" ; } 
@ java.lang.Override public void onPixelSelected ( android.graphics.Point pixel , int color ) { pixelColorView . setBackgroundColor ( android.graphics.Color . rgb ( color , color , color ) ) ; pixelColorSeekbar . setProgress ( color ) ; pixelColorNumber . setText ( java.lang.String . valueOf ( color ) ) ; pixelXText . setText ( java.lang.String . valueOf ( pixel.x ) ) ; pixelYText . setText ( java.lang.String . valueOf ( pixel.y ) ) ; } 
@ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { java.lang.String clickedItem = java.lang.String . valueOf ( parent . getItemAtPosition ( position ) ) ; android.content.Intent i = new android.content.Intent ( getActivity () , com.example.celien.gui_draft.CarsDetailsList . class ) ; i . putExtra ( "brand" , clickedItem ) ; startActivity ( i ) ; android.widget.Toast . makeText ( getActivity () , clickedItem , Toast.LENGTH_SHORT ) . show () ; } 
private static void show ( ai.neat.jneat.Network net ) { double sum = 0 ; game.Game game = new game.Game ( new game.GameState ( null ) , ai.neat.NeatTrainer.gameArgs ) ; game.state = new game.GameState ( game.state.map ) ; game.player1 = new ai.neat.NaiveNeatAI ( net ) ; game.player2 = new ai.RandomAI ( ai.util.RAND_METHOD.TREE ) ; game.ui = new ui.UI ( game.state , false , false ) ; game . run () ; double val = game.state . getWinner () ; sum += ai.neat.NeatTrainer . score ( 1 , val ) ; } 
public boolean tryLock () { java.lang.Boolean retval = ( ( java.lang.Boolean ) ( ch . down ( new org.jgroups.Event ( org.jgroups.Event.LOCK , new org.jgroups.blocks.locking.LockInfo ( name , true , false , false , 0 , java.util.concurrent.TimeUnit.MILLISECONDS ) ) ) ) ) ; if ( ( retval != null ) && retval ) holder . set ( java.lang.Thread . currentThread () ) ; return retval ; } 
@ java.lang.Override public void run () { try { SOAPProcessStatus.INSTANCE . put ( pid , "in progress" ) ; runnable . run () ; if ( ! ( runnable . getErrors () . isEmpty () ) ) SOAPProcessStatus.INSTANCE . put ( pid , stringify ( runnable . getErrors () ) ) ; else SOAPProcessStatus.INSTANCE . put ( pid , "success" ) ; } catch ( java.lang.Exception e ) { SOAPProcessStatus.INSTANCE . put ( pid , "error" ) ; } } 
public void statusText ( java.lang.String status ) { com.convenienttech.ldsreverentmode.MainActivity.text . setText ( status ) ; if ( ( com.convenienttech.ldsreverentmode.MainActivity.mode ) == 1 ) { com.convenienttech.ldsreverentmode.MainActivity.ringer . setText ( "Vibrate" ) ; } else if ( ( com.convenienttech.ldsreverentmode.MainActivity.mode ) == 2 ) { com.convenienttech.ldsreverentmode.MainActivity.ringer . setText ( "Normal" ) ; } } 
@ java.lang.Override public boolean mkdirs ( tachyon.TachyonURI path , boolean recursive ) throws java.io.IOException , tachyon.thrift.FileAlreadyExistException , tachyon.thrift.InvalidPathException { tachyon.client.FileSystemMasterClient masterClient = mContext . acquireMasterClient () ; try { boolean result = masterClient . createDirectory ( path . getPath () , true ) ; if ( result ) { tachyon.client.file.AbstractTachyonFileSystem.LOG . info ( ( "Created directory " + ( path . getPath () ) ) ) ; } return result ; } finally { mContext . releaseMasterClient ( masterClient ) ; } } 
private void updateNotification ( int newState ) { switch ( newState ) { case m.nischal.melody.MediaPlayerService.STATE_PLAYING : setUpRemoteViews () ; remoteViews . setImageViewResource ( R.id.action_play_pause , R.drawable.ic_pause_white_36dp ) ; notification.bigContentView = remoteViews ; notifyChange () ; break; case m.nischal.melody.MediaPlayerService.STATE_COMPLETED : case m.nischal.melody.MediaPlayerService.STATE_PAUSED : remoteViews . setImageViewResource ( R.id.action_play_pause , R.drawable.ic_play_arrow_white_36dp ) ; notifyAutoDelete () ; break; } } 
@ java.lang.Override public void onFailure ( retrofit2.Call < de.m4lik.burningseries.api.objects.EpisodeObj > call , java.lang.Throwable t ) { android.support.design.widget.Snackbar . make ( rootview , "Fehler beim laden der Hoster" , Snackbar.LENGTH_SHORT ) ; android.support.design.widget.Snackbar snackbar = android.support.design.widget.Snackbar . make ( rootview . findViewById ( android.R.id.content ) , "Fehler beim laden der Hoster." , Snackbar.LENGTH_SHORT ) ; android.view.View snackbarView = snackbar . getView () ; snackbarView . setBackgroundColor ( android.support.v4.content.ContextCompat . getColor ( getContext () , R.color.colorPrimaryDark ) ) ; snackbar . show () ; } 
private void init () { this . id = - 1 ; this . email = null ; this . nickName = null ; this . coverImgUrl = null ; this . coverImgRGB = null ; this . profileImgUrl = null ; this . coverText = null ; this . follower = 0 ; this . following = 0 ; this . postThumbnailUrls = null ; } 
protected com.hyena.coretext.blocks.CYTextBlock buildChildBlock ( com.hyena.coretext.TextEnv textEnv , android.graphics.Paint paint , android.graphics.Paint.FontMetrics fontMetrics , com.hyena.coretext.blocks.CYTextBlock.Word word ) { try { com.hyena.coretext.blocks.CYTextBlock textBlock = ( ( com.hyena.coretext.blocks.CYTextBlock ) ( clone () ) ) ; textBlock . setTextEnv ( textEnv ) ; textBlock.paint = paint ; textBlock.fontMetrics = fontMetrics ; textBlock.word = word ; return textBlock ; } catch ( java.lang.CloneNotSupportedException e ) { e . printStackTrace () ; } return null ; } 
protected void onItemChecked ( android.view.View v , boolean isChecked ) { if ( v instanceof android.widget.Checkable ) { onCheckboxItemChecked ( v , isChecked ) ; } else if ( v instanceof android.widget.RadioButton ) { onRadioButtonItemChecked ( ( ( android.widget.RadioButton ) ( v ) ) , isChecked ) ; } com.frostwire.android.gui.views.AbstractListAdapter . notifyDataSetInvalidated () ; if ( ( onItemCheckedListener ) != null ) { onItemCheckedListener . onItemChecked ( v , ( ( T ) ( v . getTag () ) ) , isChecked ) ; } } 
@ java.lang.Override public java.lang.String getDownloadURL () { com.liferay.portal.kernel.plugin.RemotePluginPackageRepository remotePluginPackageRepository = getRepository () ; java.util.Properties settings = remotePluginPackageRepository . getSettings () ; java.lang.String useDownloadURL = settings . getProperty ( RemotePluginPackageRepository.SETTING_USE_DOWNLOAD_URL ) ; if ( ! ( com.liferay.portal.kernel.util.GetterUtil . getBoolean ( useDownloadURL , true ) ) ) { return getArtifactURL () ; } if ( com.liferay.portal.kernel.util.Validator . isNotNull ( _downloadURL ) ) { return _downloadURL ; } return getArtifactURL () ; } 
@ org.junit.Test public void testCSVZipFile ( ) throws java.lang.Exception { java.net.URL path = com.servinglynk.hmis.warehouse.dao.BulkUploaderTest . class . getResource ( "2015.xml" ) ; com.servinglynk.hmis.warehouse.model.base.BulkUpload bullkUpload = new com.servinglynk.hmis.warehouse.model.base.BulkUpload () ; bullkUpload . setInputpath ( path . getPath () ) ; bullkUpload . setId ( 3L ) ; com.servinglynk.hmis.warehouse.model.base.ProjectGroupEntity projectGrpEntity = new com.servinglynk.hmis.warehouse.model.base.ProjectGroupEntity () ; com.servinglynk.hmis.warehouse.model.base.BulkUpload upload = factory . getBulkUploaderDao () . performBulkUpload ( bullkUpload , projectGrpEntity ) ; } 
public void buttonclick2 ( ) throws java.io.IOException { try { javafx.fxml.FXMLLoader fxmlLoader = new javafx.fxml.FXMLLoader ( getClass () . getResource ( "/sample/Web.fxml" ) ) ; javafx.scene.Parent root1 = ( ( javafx.scene.Parent ) ( fxmlLoader . load () ) ) ; javafx.stage.Stage stage = new javafx.stage.Stage () ; stage . setScene ( new javafx.scene.Scene ( root1 ) ) ; stage . show () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } 
private boolean guess () { if ( ( workingSet . size () ) == 0 ) { return false ; } Literal pop = workingSet . remove ( 0 ) ; model . add ( new Literal ( pop . get () , pop . getTruth () ) ) ; ( modelSize ) ++ ; ( assignCount [ ( ( pop . get () ) - 1 ) ] ) ++ ; lastGuess . add ( pop ) ; return true ; } 
private void getMarkersFromServer () { com.google.android.gms.maps.model.LatLngBounds bounds = mMap . getProjection () . getVisibleRegion () . latLngBounds ; int zoomLevel = ( ( int ) ( mMap . getCameraPosition () . zoom ) ) ; if ( zoomLevel >= ( il.co.anyway.app.MainActivity.MINIMUM_ZOOM_LEVEL_TO_SHOW_ACCIDENTS ) ) il.co.anyway.app.Utility . getMarkersByParameters ( bounds , zoomLevel , this , true ) ; else new il.co.anyway.app.FetchClusteredAccidents ( bounds , zoomLevel , this ) ; } 
private java.sql.ResultSet queryForColumnsInFactTable ( java.sql.DatabaseMetaData dmd ) throws java.sql.SQLException { java.lang.String [] tableNameParts = factTable . split ( "\\." ) ; fi.thl.pivot.datasource.JDBCSource.LOG . debug ( ( "Fetching metadata for table " + ( com.google.common.collect.Lists . newArrayList ( tableNameParts ) ) ) ) ; return dmd . getColumns ( null , ( isSchemaDefined ( tableNameParts ) ? tableNameParts [ 0 ] : "" ) , ( isSchemaDefined ( tableNameParts ) ? tableNameParts [ 1 ] : tableNameParts [ 0 ] ) , null ) ; } 
private double getTotalAmountFor ( java.util.Date date , double endTotalAmount , java.util.List < de.fau.amos.virtualledger.android.views.shared.transactionList.Transaction > allTransactions ) { double dayAmount = endTotalAmount ; for ( de.fau.amos.virtualledger.android.views.shared.transactionList.Transaction t : allTransactions ) { if ( ( t . booking () . getDate () . before ( date ) ) || ( t . booking () . getDate () . equals ( date ) ) ) { dayAmount += t . booking () . getAmount () ; } } return dayAmount ; } 
private speechlet.SpeechletResponse getWelcomeResponse () { java.lang.String speechText = "Welcome in Calculator Skill, made by science club HashCode" + "at Gdansk branch of Polish-Japanese Academy Of Technology in Warsaw." ; com.amazon.speech.ui.SimpleCard card = new com.amazon.speech.ui.SimpleCard () ; card . setTitle ( "WelcomeResponse" ) ; card . setContent ( speechText ) ; com.amazon.speech.ui.PlainTextOutputSpeech speech = new com.amazon.speech.ui.PlainTextOutputSpeech () ; speech . setText ( speechText ) ; speechlet.SpeechletResponse response = new speechlet.SpeechletResponse () ; response . setCard ( card ) ; response . setOutputSpeech ( speech ) ; response . setShouldEndSession ( false ) ; return response ; } 
private static int calculateTripletScore ( java.util.ArrayList < se.umu.dehu0004.greed.Die > dieList ) { int total = 0 ; for ( int i = 1 ; i <= 6 ; i ++ ) { int points = se.umu.dehu0004.greed.GreedRules . calculateSingleTripletScore ( i , dieList ) ; total += points ; } return total ; } 
@ java.lang.Override protected void upgradeDatabaseFormatVersion12345WithoutCommit () { super . upgradeDatabaseFormatVersion12345WithoutCommit () ; checkedActivate ( 1 ) ; if ( ( mInsertURIString ) != null ) { assert ( mInsertURI ) == null ; return; } assert ( mInsertURI ) != null ; checkedActivate ( mInsertURI , 2 ) ; mInsertURIString = mInsertURI . toString () ; mDB . delete ( mInsertURI ) ; mInsertURI = null ; storeWithoutCommit () ; } 
public com.shatteredpixel.shatteredpixeldungeon.plants.Plant couch ( int pos ) { try { if ( com.shatteredpixel.shatteredpixeldungeon.Dungeon.visible [ pos ] ) { Sample.INSTANCE . play ( Assets.SND_PLANT ) ; } com.shatteredpixel.shatteredpixeldungeon.plants.Plant plant = plantClass . newInstance () ; plant.pos = pos ; return plant ; } catch ( java.lang.Exception e ) { com.shatteredpixel.shatteredpixeldungeon.ShatteredPixelDungeon . reportException ( e ) ; return null ; } } 
public void gotoHistoryHomeScreen ( android.view.View view ) { android.app.Fragment gamesListFragment = getFragmentManager () . findFragmentById ( R.layout.games_list ) ; if ( gamesListFragment == null ) { android.app.FragmentTransaction ft = getFragmentManager () . beginTransaction () ; ft . add ( R.id.home_history_frame , new com.splashmobileproductions.scorekeep.GameHistoryFragment () ) . commitAllowingStateLoss () ; mTransitionManager . transitionTo ( mHistoryScene ) ; setFabOutline () ; } } 
private void startGame () { dispose () ; main.Board board = new main.Board () ; main.Player p1 = new main.Player ( 2 , 2 , 1 , 1 , board , 1 ) ; main.Player p2 = new main.Player ( 7 , 7 , 8 , 8 , board , 2 ) ; new mvc.View ( new mvc.Model ( p1 , p2 ) ) ; } 
private static double getAvgOpsSec ( java.util.List < java.lang.String > vmConsoleOutputLines ) { double sumAvgOpsSec = 0.0 ; int samples = 0 ; for ( java.lang.String line : vmConsoleOutputLines ) { if ( line . contains ( "READ AverageLatency(us)=" ) ) { sumAvgOpsSec += java.lang.Double . parseDouble ( line . split ( ";" ) [ 1 ] . split ( "current" ) [ 0 ] ) ; ++ samples ; } } return sumAvgOpsSec / samples ; } 
@ java.lang.Override public void run () { backupProgressText . setText ( backupToRunningBackupThreadMap . get ( backupFileName . getText () ) . getMessage () ) ; backupProgressText . textProperty () . unbind () ; backupProgressText . textProperty () . bind ( backupToRunningBackupThreadMap . get ( backupFileName . getText () ) . messageProperty () ) ; } 
public java.lang.String studentLookup ( int studentID ) { java.lang.String output = new java.lang.String () ; int studentIndex = getStudentIndex ( studentList , studentID ) ; if ( studentIndex < 0 ) { output = "The student you are looking for is not in the directory." ; } else { output = ( ( ( "The student you are looking for is " + ( studentList [ studentIndex ] . name ) ) + ", with Student ID # [" ) + ( studentList [ studentIndex ] . studentID ) ) + "] .\n" ; } return output ; } 
public void info ( @ javax.annotation.Nonnull java.lang.Object message ) { if ( org.apache.log4j.Level.INFO . isGreaterOrEqual ( level ) ) { log4jLogger . info ( message ) ; consoleLogger . info ( message ) ; java.lang.String richMsg = "[INFO]\t" + ( wrapMsg ( message ) ) ; send ( richMsg ) ; } } 
@ java.lang.Override public void resetLearning () { this . trainingWeightSeenByModel = 0.0 ; if ( isRandomizable () ) { if ( ( this . randomSeedOption ) == null ) { this . randomSeedOption = new moa.options.IntOption ( "randomSeed" , 'r' , "Seed for random behaviour of the classifier." , this . randomSeed ) ; } this . randomSeedOption . setValue ( this . randomSeed ) ; this . classifierRandom = new java.util.Random ( this . randomSeed ) ; } resetLearningImpl () ; } 
public void dismissModalView ( final com.sponberg.fluid.layout.ModalView modalView ) { android.app.Dialog d = ( ( android.app.Dialog ) ( modalView . getFluidData () ) ) ; if ( d == null ) { return; } try { d . dismiss () ; } catch ( java.lang.IllegalArgumentException e ) {} } 
@ java.lang.Override public boolean removeAll ( com.hopkins.collections.Collection < ? > c ) { boolean isChanged = false ; com.hopkins.collections.Iterator < ? > iter = c . iterator () ; while ( iter . hasNext () ) { isChanged |= remove ( iter . next () ) ; } return isChanged ; } 
public static void despawn ( org.bukkit.entity.Player . . . players ) { for ( net.dzikoysk.funnyguilds.basic.Guild guild : net.dzikoysk.funnyguilds.basic.util.GuildUtils . getGuilds () ) { try { int id = net.dzikoysk.funnyguilds.util.reflect.EntityUtil.entitesMap . get ( guild ) ; net.dzikoysk.funnyguilds.util.reflect.EntityUtil.ids . remove ( id ) ; net.dzikoysk.funnyguilds.util.reflect.EntityUtil.entitesMap . remove ( guild ) ; java.lang.Object o = net.dzikoysk.funnyguilds.util.reflect.EntityUtil . despawnPacket ( id ) ; net.dzikoysk.funnyguilds.util.reflect.PacketSender . sendPacket ( players , o ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } } 
public double getFitness () { double [] bin1 = this . getBinOne () ; double [] bin2 = this . getBinTwo () ; double score = this . getScore ( bin1 , bin2 ) ; if ( score > 0 ) { return score ; } else { return 1 / ( java.lang.Math . abs ( score ) ) ; } } 
public boolean volunteerForJob ( model.Job theJob , model.WorkLoad theWorkLoad ) throws exception.AlreadyVolunteeredException , exception.ConflictingJobCommitmentException , exception.JobIsFullException , exception.JobToThePastException { checkForConflicts ( theJob ) ; if ( theJob . hasMaxVolunteers ( theWorkLoad ) ) throw new exception.JobIsFullException () ; switch ( theWorkLoad ) { case LIGHT : theJob . addLightVolunteer ( this ) ; case MEDIUM : theJob . addMediumVolunteer ( this ) ; case DIFFICULT : theJob . addDifficultVolunteer ( this ) ; } return myJobs . add ( theJob ) ; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) protected org.apache.maven.artifact.Artifact getFrameworkConfig () { org.hamcrest.Matcher < ? extends org.apache.maven.artifact.Artifact > [] frmkCfgMatchers = new org.hamcrest.Matcher [] { net.flexmojos.oss.matcher.artifact.ArtifactMatcher . groupId ( getFrameworkGroupId () ) , net.flexmojos.oss.matcher.artifact.ArtifactMatcher . artifactId ( "framework" ) , net.flexmojos.oss.matcher.artifact.ArtifactMatcher . classifier ( "configs" ) , net.flexmojos.oss.matcher.artifact.ArtifactMatcher . type ( "zip" ) } ; org.apache.maven.artifact.Artifact frmkCfg = getDependency ( frmkCfgMatchers ) ; if ( frmkCfg == null ) { frmkCfg = resolve ( getFrameworkGroupId () , "framework" , getFrameworkArtifactVersion ( getFrameworkGroupId () , "framework" ) , "configs" , "zip" ) ; } return frmkCfg ; } 
private void hide () { currentTime . setVisibility ( View.INVISIBLE ) ; finalTime . setVisibility ( View.INVISIBLE ) ; pause . setVisibility ( View.INVISIBLE ) ; seekBar . setVisibility ( View.INVISIBLE ) ; title . setVisibility ( View.INVISIBLE ) ; add . setVisibility ( View.INVISIBLE ) ; note . setVisibility ( View.INVISIBLE ) ; edit . setVisibility ( View.INVISIBLE ) ; } 
public static com.adam.app.pattern.flywieght.Pen getPencel ( java.lang.String style ) { com.adam.app.pattern.flywieght.Pen pen = ( ( com.adam.app.pattern.flywieght.Pen ) ( com.adam.app.pattern.flywieght.PencilFactory.map . get ( style ) ) ) ; if ( pen == null ) { pen = new com.adam.app.pattern.flywieght.Pencil () ; com.adam.app.pattern.flywieght.PencilFactory.map . put ( style , pen ) ; } return pen ; } 
public java.util.Iterator < java.lang.String > call ( java.lang.String s ) throws java.lang.Exception { java.lang.String line = com.iyonger.spark.example.NewJavaWordCount . replaceNonLetter ( s ) ; com.iyonger.spark.example.NewJavaWordCount.logger . info ( ( "line after replacement:" + ( line . trim () ) ) ) ; return java.util.Arrays . asList ( com.iyonger.spark.example.NewJavaWordCount.SPACE . split ( line . trim () ) ) . iterator () ; } 
@ java.lang.Override public void disconnectedFromServer () { java.lang.String msg = "Disconnected from Server" ; android.util.Log . i ( com.monmouth.fayePG.FayeService.LOG_TAG , msg ) ; if ( ( fayePG . getDisconnectCallbackContext () ) != null ) { org.apache.cordova.PluginResult result = new org.apache.cordova.PluginResult ( PluginResult.Status.OK , msg ) ; result . setKeepCallback ( false ) ; fayePG . getDisconnectCallbackContext () . sendPluginResult ( result ) ; } } 
public static java.security.KeyPair genKeys ( ) throws java.lang.Exception { java.security.Security . addProvider ( new BouncyCastleProvider () ) ; org.bouncycastle.jce.spec.ECParameterSpec ecSpec = org.bouncycastle.jce.ECNamedCurveTable . getParameterSpec ( "prime192v1" ) ; java.security.KeyPairGenerator g ; java.security.SecureRandom secureRandom = java.security.SecureRandom . getInstance ( "SHA1PRNG" , "SUN" ) ; try { g = java.security.KeyPairGenerator . getInstance ( "ECDSA" , "BC" ) ; g . initialize ( ecSpec , secureRandom ) ; java.security.KeyPair pair = g . generateKeyPair () ; return pair ; } catch ( java.lang.Exception e ) { return null ; } } 
public static void main ( java.lang.String [] args ) { int N = 3 ; Percolation pc = new Percolation ( N ) ; Percolation . utest ( pc , N , 1 , 1 ) ; Percolation . utest ( pc , N , 1 , 2 ) ; Percolation . utest ( pc , N , 2 , 2 ) ; Percolation . utest ( pc , N , 3 , 2 ) ; } 
@ java.lang.Override @ org.springframework.transaction.annotation.Transactional public void save ( com.bionic.domain.User user ) { com.bionic.util.PasswordEncoder passwordEncoder = com.bionic.util.PasswordEncoder . getInstance () ; if ( user != null ) { java.lang.String password = user . getPasswordHash () ; java.lang.String salt = com.bionic.util.PasswordEncoder . nextSALT () ; java.lang.String passwordHash = passwordEncoder . encode ( password , salt ) ; user . setPasswordHash ( passwordHash ) ; user . setSalt ( salt ) ; userDao . save ( user ) ; } } 
private java.util.Set < com.example.lachlan.myfirstapp.code.Municipality > municipalities () { com.example.lachlan.myfirstapp.code.Location l ; java.util.Set < com.example.lachlan.myfirstapp.code.Municipality > m = new java.util.HashSet < com.example.lachlan.myfirstapp.code.Municipality > () ; for ( java.lang.String loc : locations () ) { l = new com.example.lachlan.myfirstapp.code.Location ( loc ) ; m . add ( new com.example.lachlan.myfirstapp.code.Municipality ( this , l.municipality ) ) ; } return m ; } 
public void onMaxPlayersChanged ( javafx.beans.value.ObservableValue observable , java.lang.Object oldMaxNumPlayers , java.lang.Object newMaxNumPlayers ) { if ( ( ( java.lang.String ) ( newMaxNumPlayers ) ) . matches ( "[0-9]*" ) ) { model.GameCreation . getInstance () . resetPlayers ( java.lang.Integer . parseInt ( ( ( java.lang.String ) ( newMaxNumPlayers ) ) ) ) ; updatePlayersComboBox () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { mGeoPoint = mMyLocationOverlay . getMyLocation () ; android.content.Intent i = new android.content.Intent () ; android.os.Bundle b = new android.os.Bundle () ; b . putString ( tw.edu.ntu.fortour.LocationMap.KEY_LONGITUDE , java.lang.Integer . toString ( mGeoPoint . getLongitudeE6 () ) ) ; b . putString ( tw.edu.ntu.fortour.LocationMap.KEY_LATITUDE , java.lang.Integer . toString ( mGeoPoint . getLatitudeE6 () ) ) ; i . putExtras ( b ) ; setResult ( Activity.RESULT_OK , i ) ; this . finish () ; } 
public void reset () { this . ssStack . index = 0 ; this . trStack . index = 0 ; this . mergeStack . index = 0 ; for ( int i = ( this . bucketA . length ) - 1 ; i >= 0 ; i -- ) this . bucketA [ i ] = 0 ; for ( int i = ( this . bucketB . length ) - 1 ; i >= 0 ; i -- ) this . bucketB [ i ] = 0 ; } 
java.lang.String toString () { int i = 0 ; java.lang.String aString = "" ; for ( i = 0 ; i < ( L . size () ) ; i ++ ) { aString = + ( L . get ( i ) ) ; } return aString ; } 
public void BMI ( char operand ) { if ( ( n ) == 1 ) { tick () ; pc += operand ; if ( ( ( ( pc ) - operand ) & 3840 ) != ( ( pc ) & 3840 ) ) { tick () ; } pc -= 2 ; } } 
public void setRunning ( java.lang.Boolean newState ) { isRunning = newState ; if ( ( ( isRunning ) == false ) && ( googleApiClient . isConnected () ) ) { if ( googleApiClient . isConnected () ) { googleApiClient . disconnect () ; } } else { initialise () ; run () ; } } 
private static com.ttoggweiler.cse5693.TicTacToe.player.BasePlayer randomVsSequential ( int boardSize , int iterations , java.util.Set < com.ttoggweiler.cse5693.TicTacToe.board.Move [] > initMoves ) { com.ttoggweiler.cse5693.TicTacToe.player.BasePlayer p1 = new com.ttoggweiler.cse5693.TicTacToe.player.RandomPlayer () ; com.ttoggweiler.cse5693.TicTacToe.player.BasePlayer p2 = new com.ttoggweiler.cse5693.TicTacToe.player.SequentialPlayer () ; p1 . setName ( "Rand" ) ; p2 . setName ( "Sequ" ) ; return com.ttoggweiler.cse5693.TTTGameRunner . playGames ( p1 , p2 , boardSize , iterations , initMoves ) ; } 
public boolean isOpen () { if ( ! ( channel . isOpen () ) ) { try { connection . createChannel () ; } catch ( java.io.IOException e ) { org.apache.axis2.transport.rabbitmq.RMQChannel.log . error ( "Error creating channel for dual channel" , e ) ; return false ; } } return true ; } 
@ org.junit.Test public void testTiedSoGoToTB_p2 () { swissTournamentRunner.Player p1 = new swissTournamentRunner.Player ( "P1" , 3 , 0 , 0 , 0 , 0 ) ; swissTournamentRunner.Player p2 = new swissTournamentRunner.Player ( "P2" , 3 , 1 , 0 , 0 , 0 ) ; t . addPlayer ( "P1" ) ; t . addPlayer ( "P2" ) ; org.junit.Assert . assertEquals ( 1 , p1 . compareTo ( p2 ) ) ; } 
private void btnBearingBoxHandler () { logger . info ( "add order" ) ; openOrders . add ( "bearingBox" ) ; ( this . uuid ) ++ ; Literal order = Literal . parseLiteral ( ( ( "order(deliveredBearingBox, " + ( this . uuid ) ) + ", false)[source(customer)]" ) ) ; java.lang.System.out . println ( this . leaderId ) ; addPercept ( this . leaderId , order ) ; } 
@ java.lang.Override public void onSuccess ( final com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUserSession userSession , final com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoDevice newDevice ) { android.util.Log . i ( com.amazonaws.mobilehelper.auth.signin.CognitoUserPoolsSignInProvider.LOG_TAG , ( "Logged in. " + ( userSession . getIdToken () ) ) ) ; cognitoUserSession = userSession ; if ( null != ( resultsHandler ) ) { com.amazonaws.mobilehelper.util.ViewHelper . showDialog ( activity , activity . getString ( R.string.title_activity_sign_in ) , ( ( ( activity . getString ( R.string.login_success ) ) + " " ) + ( userSession . getIdToken () ) ) ) ; resultsHandler . onSuccess ( this ) ; } initializedLatch . countDown () ; } 
public java.lang.String getLatestVersion ( java.io.File db ) { try { com.fasterxml.jackson.databind.type.CollectionLikeType constructCollectionLikeType = se.light.assembly64.Utils.mapper . getTypeFactory () . constructCollectionLikeType ( java.util.List . class , java.lang.String . class ) ; java.util.List < java.lang.String > versions = se.light.assembly64.Utils.mapper . readValue ( org.apache.commons.io.FileUtils . readFileToString ( db ) , constructCollectionLikeType ) ; return versions . get ( 0 ) ; } catch ( java.lang.Exception e ) { throw new java.lang.RuntimeException ( e ) ; } } 
public void receive ( ch.tiim.telegram.TGMessage msg ) { java.lang.String [] args = msg . getText () . split ( " " ) ; ch.tiim.utils.StringArrays . trimArray ( args ) ; try { registry . handle ( args , msg , bot ) ; } catch ( java.io.IOException e ) { ch.tiim.MessageProcessor.LOGGER . warning ( e ) ; } } 
public void getUserDetails () { mFirebaseAuth = com.google.firebase.auth.FirebaseAuth . getInstance () ; mFirebaseUser = mFirebaseAuth . getCurrentUser () ; if ( ( mFirebaseUser ) == null ) { startActivity ( new android.content.Intent ( this , com.saurabh.wings2017.signIn . class ) ) ; finish () ; return; } else { mUsername = mFirebaseUser . getDisplayName () ; mUsermail = mFirebaseUser . getEmail () ; mPhotoUrl = mFirebaseUser . getPhotoUrl () . toString () ; } } 
@ java.lang.Override public java.lang.Short getShort ( java.lang.String key , java.lang.Short defaultValue ) { java.lang.String value = getString ( key ) ; if ( value == null ) return notFound ( defaultValue ) ; try { return java.lang.Short . parseShort ( value ) ; } catch ( java.lang.NumberFormatException e ) { return parseError ( e , defaultValue ) ; } } 
public static models.PagedList < models.Computer > page ( int page , int pageSize , java.lang.String sortBy , java.lang.String order , java.lang.String filter ) { return models.Computer.find . where () . ilike ( "name" , ( ( "%" + filter ) + "%" ) ) . orderBy ( ( ( sortBy + " " ) + order ) ) . fetch ( "company" ) . setFirstRow ( page ) . setMaxRows ( pageSize ) . findPagedList () ; } 
@ org.springframework.transaction.annotation.Transactional public org.egov.tl.entity.FeeMatrix create ( final org.egov.tl.entity.FeeMatrix feeMatrix ) { final java.lang.String genUniqueNo = feeMatrix . genUniqueNo () ; feeMatrix . setUniqueNo ( genUniqueNo ) ; if ( ! ( feeMatrix . getFeeMatrixDetail () . isEmpty () ) ) for ( final org.egov.tl.entity.FeeMatrixDetail fd : feeMatrix . getFeeMatrixDetail () ) fd . setFeeMatrix ( feeMatrix ) ; return feeMatrixRepository . save ( feeMatrix ) ; } 
public static com.tpjad.project.entity.Product toProduct ( com.tpjad.project.model.ProductModel productModel ) { if ( productModel == null ) { return null ; } com.tpjad.project.entity.Product product = new com.tpjad.project.entity.Product () ; product . setName ( product . getName () ) ; product . setDescription ( product . getDescription () ) ; product . setStock ( product . getStock () ) ; return product ; } 
public static io.ddf.datasource.DataSourceDescriptor resolve ( java.lang.String source , java.util.HashMap < java.lang.String , java.lang.String > options ) throws io.ddf.exception.DDFException , java.net.URISyntaxException { switch ( source ) { case "S3" : { return io.ddf.datasource.DataSourceResolver . resolveS3 ( options ) ; } case "hdfs" : { return io.ddf.datasource.DataSourceResolver . resolveHDFS ( options ) ; } case "jdbc" : { return io.ddf.datasource.DataSourceResolver . resolveJDBC ( options ) ; } case "sql" : { return io.ddf.datasource.DataSourceResolver . resolveSQL ( options ) ; } default: { throw new io.ddf.exception.DDFException ( ( "Error, could not find data-source for " + source ) ) ; } } } 
private void importDocumentIDs () { try { java.io.ObjectInputStream input = new java.io.ObjectInputStream ( new java.io.FileInputStream ( new java.io.File ( ( ( src.HashedIndex.CACHE_PATH ) + ( src.HashedIndex.DOCUMENT_ID_FILE_NAME ) ) ) ) ) ; super . docIDs = ( ( java.util.HashMap < java.lang.String , java.lang.String > ) ( input . readObject () ) ) ; input . close () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } 
@ java.lang.Override public gov.nist.hit.erx.core.service.TestContext testContext ( java.lang.String path , com.fasterxml.jackson.databind.JsonNode formatObj , gov.nist.hit.erx.core.service.TestingStage stage , gov.nist.hit.erx.core.service.TestStep testStep ) throws java.io.IOException { gov.nist.hit.erx.core.service.TestContext res = edirb . testContext ( path , formatObj , stage , testStep ) ; if ( res != null ) return res ; res = xmlrb . testContext ( path , formatObj , stage , testStep ) ; return res ; } 
public void print () { for ( int x = 0 ; x < ( editor.ImageEditor.width ) ; x ++ ) { for ( int y = 0 ; y < ( editor.ImageEditor.height ) ; y ++ ) { java.lang.System.out . println ( editor.ImageEditor.image [ x ] [ y ] . print () ) ; } } } 
@ java.lang.Override protected void decodeResponseText ( java.lang.String responseText ) { try { org.json.JSONObject obj = new org.json.JSONObject ( responseText ) ; if ( obj . getBoolean ( com.rbfautomation.network.responses.RESULT ) ) { mUsername = obj . getString ( "username" ) ; } } catch ( org.json.JSONException e ) { e . printStackTrace () ; setError ( ErrorCodes.JSON_PARSE_ERROR , e . getMessage () ) ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { int r = new java.util.Random () . nextInt ( adapter . getItemCount () ) ; int r2 = new java.util.Random () . nextInt ( adapter . getItemCount () ) ; android.util.Log . d ( jack.hive.MainActivity.TAG , ( "onClick: r" + r ) ) ; adapter . move ( r , r2 ) ; adapter . notifyItemMoved ( r , r2 ) ; ( index ) -- ; } 
@ java.lang.Override public void setDuration ( java.lang.Integer duration ) { if ( ( duration != null ) && ( duration < 0 ) ) throw new java.lang.IllegalArgumentException ( "Duration must be positive, or null" ) ; assertManager () ; if ( duration . equals ( this . duration ) ) return; if ( isSystemRequired () ) throw new java.lang.IllegalStateException ( ( ( "Unable to change the embargo '" + ( name ) ) + "' because it is required by the system." ) ) ; this . duration = duration ; } 
private void addActionToButtonEdit ( java.lang.String buttonName ) { if ( true && ( buttonName == "Edit" ) ) { editDrug . addClickListener ( new com.vaadin.ui.Button.ClickListener () { private static final long serialVersionUID = 1L ; public void buttonClick ( com.vaadin.ui.Button.ClickEvent event ) { java.lang.System.out . println ( overviewModel . getSelectedPrescription () ) ; if ( ( overviewModel . getSelectedPrescription () ) != null ) { overviewModel . edit () ; editView . setPrescriptionContext ( overviewModel . getPrescriptionContext () ) ; ch.bfh.btx8081.w2015.black.MyMedicationApp.web.view.MyMedicationApp . navigateTo ( "MedicationEditView" ) ; } } } ) ; } } 
private static void quicksort ( int [] ary , int si , int ei ) { int pivotIndex = Quick . partition ( ary , si , ei , ( ( int ) ( ( ( java.lang.Math . random () ) * ( ( ei - si ) - 1 ) ) + si ) ) ) ; if ( ( ei - si ) > 2 ) { Quick . quicksort ( ary , si , pivotIndex ) ; Quick . quicksort ( ary , ( pivotIndex + 1 ) , ei ) ; } } 
java.util.Map < java.lang.String , com.googlecode.d2j.node.DexClassNode > readDex ( java.lang.String path ) throws java.io.IOException { com.googlecode.d2j.reader.DexFileReader dexFileReader = new com.googlecode.d2j.reader.DexFileReader ( com.googlecode.d2j.reader.zip.ZipUtil . readDex ( new java.io.File ( path ) ) ) ; com.googlecode.d2j.node.DexFileNode dexFileNode = new com.googlecode.d2j.node.DexFileNode () ; dexFileReader . accept ( dexFileNode ) ; java.util.Map < java.lang.String , com.googlecode.d2j.node.DexClassNode > map = new java.util.HashMap <> () ; for ( com.googlecode.d2j.node.DexClassNode c : dexFileNode.clzs ) { map . put ( c.className , c ) ; } return map ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { if ( de.markusressel.android.library.tutorialtooltip.TutorialTooltip . exists ( activity , tutorialId2 ) ) { de.markusressel.android.library.tutorialtooltip.TutorialTooltip . remove ( activity , tutorialId2 , true ) ; } else { tutorialId2 = de.markusressel.android.library.tutorialtooltip.TutorialTooltip . show ( new de.markusressel.android.library.tutorialtooltip.builder.TutorialTooltipBuilder ( activity ) . message ( new de.markusressel.android.library.tutorialtooltip.builder.MessageBuilder () . text ( getString ( R.string.tutorial_message_2 ) ) . anchor ( buttonDialog ) . gravity ( TutorialTooltipView.Gravity.BOTTOM ) . build () ) . anchor ( buttonBottom , TutorialTooltipView.Gravity.BOTTOM ) . onClick ( onTutorialTooltipClickedListener ) . build () ) ; } } 
@ java.lang.Override public void setStackingVertexPanel ( V v , java.util.Collection < V > allPhysical ) { virtV = v ; remove ( rightPanel ) ; rightPanel = new javax.swing.JPanel () ; rightPanel . setLayout ( new java.awt.BorderLayout () ) ; add ( rightPanel , java.awt.BorderLayout.LINE_END ) ; rightPanel . setBorder ( javax.swing.BorderFactory . createEmptyBorder ( 20 , 10 , 500 , 10 ) ) ; rightPanel . setSize ( 200 , 500 ) ; rightPanel . setPreferredSize ( new java.awt.Dimension ( 200 , 500 ) ) ; addContentToStackingVertexPanel ( rightPanel , v , allPhysical ) ; } 
@ java.lang.Override public void onBindViewHolder ( android.support.v7.widget.RecyclerView.ViewHolder viewHolder , final int i ) { if ( ( i != 0 ) && ( ( mHeader ) != null ) ) { onBindViewHolderImpl ( viewHolder , this , ( i - 1 ) ) ; } else if ( i != 0 ) { onBindViewHolderImpl ( viewHolder , this , i ) ; } } 
@ java.lang.Override public boolean equals ( java.lang.Object o ) { if ( ( ! ( o instanceof simpledb.RecordId ) ) || ( o == null ) ) return false ; simpledb.RecordId rid = ( ( simpledb.RecordId ) ( o ) ) ; return ( pid . equals ( rid . getPageId () ) ) && ( ( rid.tupleno ) == ( tupleno ) ) ; } 
public void doneAdding () { if ( this . cleanedUp ) { throw new java.lang.IllegalStateException ( "Cannot call doneAdding() after cleanup() was called." ) ; } if ( doneAdding ) { return; } doneAdding = true ; if ( this . files . isEmpty () ) { return; } if ( ( this . numRecordsInRam ) > 0 ) { spillToDisk () ; } service . shutdown () ; while ( ! ( service . isTerminated () ) ) {} this . ramRecords = null ; } 
public static void main ( java.lang.String [] args ) { java.lang.String instanceDir = "C:\\Users\\yuhuishi\\Desktop\\projects\\TP3S_column_generation\\instance\\small" ; java.lang.String outDir = "./logs/facility/small/" ; instanceDir = "C:\\Users\\yuhuishi\\Desktop\\projects\\TP3S_column_generation\\instance\\moderate" ; outDir = "./logs/facility/moderate/" ; runner.RunNoFacilityVersion . run ( instanceDir , outDir , true ) ; outDir = "./logs/moderate/" ; runner.RunNoFacilityVersion . run ( instanceDir , outDir , false ) ; instanceDir = "C:\\Users\\yuhuishi\\Desktop\\projects\\TP3S_column_generation\\instance\\large" ; outDir = "./logs/facility/large/" ; runner.RunNoFacilityVersion . run ( instanceDir , outDir , true ) ; outDir = "./logs/large/" ; runner.RunNoFacilityVersion . run ( instanceDir , outDir , false ) ; } 
private void setupFilterLimitingResourceListbox () { org.libreplan.web.resources.worker.WorkerCRUDController.LOG . info ( ( "WorkerCRUDController.setupFilterLimitingResourceListbox" + ( getWorker () ) ) ) ; for ( org.libreplan.web.resources.worker.WorkerCRUDController.LimitingResourceEnum resourceEnum : org.libreplan.web.resources.worker.WorkerCRUDController.LimitingResourceEnum . getLimitingResourceFilterOptionList () ) { org.zkoss.zul.Listitem item = new org.zkoss.zul.Listitem () ; item . setParent ( filterLimitingResource ) ; item . setValue ( resourceEnum ) ; item . appendChild ( new org.zkoss.zul.Listcell ( resourceEnum . toString () ) ) ; filterLimitingResource . appendChild ( item ) ; } filterLimitingResource . setSelectedIndex ( 0 ) ; } 
public void main ( java.lang.String [] args ) { int x = 5 ; int y = 8 ; java.lang.System.out . println ( ( ( "adding " + x ) + y ) ) ; int z = 19 ; java.lang.System.out . println ( ( ( "subtracting " + z ) - y ) ) ; java.lang.System.out . println ( ( "dividing " + ( z / x ) ) ) ; java.lang.System.out . println ( ( "multiplying " + ( x * z ) ) ) ; } 
@ java.lang.Override public void sendStickyOrderedBroadcast ( final android.content.Intent intent , final android.content.BroadcastReceiver resultReceiver , final android.os.Handler scheduler , final int initialCode , final java.lang.String initialData , final android.os.Bundle initialExtras ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run ( final android.content.Intent intent ) { com.oasisfeng.condom.CondomContext . super . sendStickyOrderedBroadcast ( intent , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; } } ) ; } 
@ java.lang.Override public void addFrame ( final java.awt.image.BufferedImage bi ) throws sk.freemap.gpxAnimator.UserException { final java.io.File outputfile = new java.io.File ( java.lang.String . format ( frameFilePattern , ( ++ ( frame ) ) ) ) ; try { javax.imageio.ImageIO . write ( bi , imageType , outputfile ) ; } catch ( final java.io.IOException e ) { throw new sk.freemap.gpxAnimator.UserException ( ( "error writing frame to " + outputfile ) ) ; } } 
private void stopStream () { java.lang.System.out . println ( "Stopping stream" ) ; if ( ( cs ) == null ) { return; } cs . stopStream () ; cs = null ; try { t . join () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } 
@ org.junit.Test public void getMediaByManagerList_emptyList () { boolean deleted = mediaDao . deleteMediaById ( testMedia . getMediaId () ) ; assertTrue ( deleted ) ; int managerId = testManager . getId () ; java.util.List < com.workfront.intern.cb.common.Media > mediaList = mediaDao . getMediaListByManager ( managerId ) ; assertNotNull ( mediaList ) ; assertEquals ( 0 , mediaList . size () ) ; } 
private void setPaintOptions ( android.content.Context context ) { tiBitmapPaint = new android.graphics.Paint () ; tiBitmapPaint . setAntiAlias ( true ) ; tiBitmapPaint . setDither ( true ) ; tiBitmapPaint . setColor ( Color.BLACK ) ; tiBitmapPaint . setStyle ( Paint.Style.STROKE ) ; tiBitmapPaint . setStrokeJoin ( Paint.Join.ROUND ) ; tiBitmapPaint . setStrokeCap ( Paint.Cap.ROUND ) ; tiBitmapPaint . setStrokeWidth ( 2 ) ; tiBitmapPaint . setAlpha ( 128 ) ; c = context ; } 
@ java.lang.Override public java.lang.Object [] toArray () { java.lang.Object [] result = new java.lang.Object [ size () ] ; base . toArray ( result ) ; int i = base . size () ; for ( E element : extension ) { result [ ( i ++ ) ] = element ; } return result ; } 
public void updateOrInsert ( long dateAndHour , int stepsSinceBoot ) { android.database.sqlite.SQLiteDatabase db = null ; try { db = getWritableDatabase () ; db . beginTransaction () ; updateOrInsertWithoutTransaction ( db , dateAndHour , stepsSinceBoot ) ; db . setTransactionSuccessful () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } finally { if ( db != null ) { db . endTransaction () ; db . close () ; } } } 
private int getNewValue ( android.content.Context context ) { int sumInflows = getSumInflows ( context ) ; int sumOutflows = getSumOutflows ( context ) ; int amountBudgeted = getAmountBudgeted ( context ) ; int amountSaved = java.lang.Math . round ( ( ( sumInflows - amountBudgeted ) * ( MainActivity.sharedVals . getFloat ( MainActivity.PERCENT_SAVE , 0 ) ) ) ) ; switch ( name ) { case com.example.kevdub.moneytracker.MainActivity.SPEND_MONEY : return ( sumInflows - amountSaved ) - sumOutflows ; case com.example.kevdub.moneytracker.MainActivity.SAVE_MONEY : return amountSaved ; case com.example.kevdub.moneytracker.MainActivity.TOT_MONEY : return sumInflows - sumOutflows ; default: return - 1 ; } } 
public com.jetbrains.jetpad.vclang.typechecking.visitor.CheckTypeVisitor.Result checkResult ( com.jetbrains.jetpad.vclang.core.expr.type.ExpectedType expectedType , com.jetbrains.jetpad.vclang.typechecking.visitor.CheckTypeVisitor.Result result , com.jetbrains.jetpad.vclang.term.Abstract.Expression expression ) { if ( result == null ) return null ; if ( ( expectedType == null ) || ( ! ( expectedType instanceof com.jetbrains.jetpad.vclang.typechecking.visitor.Expression ) ) ) { expression . setWellTyped ( myContext , result.expression ) ; return result ; } if ( compare ( result , ( ( com.jetbrains.jetpad.vclang.typechecking.visitor.Expression ) ( expectedType ) ) , expression ) ) { expression . setWellTyped ( myContext , result.expression ) ; return result ; } else { return null ; } } 
public java.lang.String formatMeters ( double metre ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; builder . append ( ru.sukharev.pathtracker.utils.Measurement.DECIMAL_FORMAT . format ( convertMeters ( metre ) ) ) ; builder . append ( Commons.SPACE ) ; appendDistanceSuffix ( builder ) ; builder . append ( Commons.DOT ) ; return builder . toString () ; } 
public java.lang.String toStringPretty () { if ( ( ( str ) != null ) && ( ( strFormatting ) == ( com.sproutigy.commons.jsonright.jackson.JSON.Formatting.Pretty ) ) ) { return str ; } try { return com.sproutigy.commons.jsonright.jackson.JSON . getObjectMapper () . writerWithDefaultPrettyPrinter () . writeValueAsString ( node () ) ; } catch ( com.sproutigy.commons.jsonright.jackson.JsonProcessingException e ) { throw new java.lang.RuntimeException ( e ) ; } } 
public int getKeyboardViewResourceId ( boolean e ) { java.lang.String file = ( e ) ? ( language ) + "_extended_consonants" : language ; file = file + ( displayMode ) ; android.util.Log . d ( "layout" , ( "filename = " + file ) ) ; int output = getResources () . getIdentifier ( file , "xml" , getPackageName () ) ; return output ; } 
public static long stripTime ( long date ) { java.util.Calendar calc = com.kidsdynamic.swing.androidswingapp.ViewCalendar . getInstance () ; calc . setTimeInMillis ( date ) ; calc . clear ( java.util.Calendar.HOUR_OF_DAY ) ; calc . clear ( java.util.Calendar.MINUTE ) ; calc . clear ( java.util.Calendar.SECOND ) ; calc . clear ( java.util.Calendar.MILLISECOND ) ; return calc . getTimeInMillis () ; } 
@ java.lang.Override protected void onReceiveResult ( int resultCode , android.os.Bundle resultData ) { switch ( resultCode ) { case com.udacity.neerajbholani.spotifystreamer.services.MediaPlayerService.TRACK_STOPPED : updatePlayPauseState () ; break; case com.udacity.neerajbholani.spotifystreamer.services.MediaPlayerService.TRACK_PREPARING : enablePlayPauseButton ( false ) ; break; case com.udacity.neerajbholani.spotifystreamer.services.MediaPlayerService.TRACK_PREPARED : enablePlayPauseButton ( true ) ; updateSeekBarStatus () ; break; default: break; } } 
@ java.lang.Override public void ListInsert ( int i , com.general.arithmetic.linetable.Student student ) { int location = 0 ; if ( ( singleLink ) != null ) { com.general.arithmetic.linetable.Student previous = singleLink.next ; while ( location != i ) { if ( ( previous != null ) && ( ( previous.next ) != null ) ) { previous = previous.next ; } location ++ ; } if ( previous != null ) { com.general.arithmetic.linetable.Student next = previous.next ; previous.next = student ; student.next = next ; } else { singleLink.next = student ; student.next = null ; } } } 
public java.util.Collection < logic.Question > getDistinctQuestions ( int count ) throws database.exceptions.UnknownLanguageException , org.basex.core.BaseXException { java.util.List < java.lang.String > allLanguageNames = getValidLanguageNames () ; java.util.Collections . shuffle ( allLanguageNames ) ; for ( java.lang.String s : allLanguageNames ) { allLanguageNames . add ( s ) ; } java.util.Collections . shuffle ( allLanguageNames ) ; java.util.List < logic.Question > questionData = new java.util.ArrayList <> ( count ) ; for ( java.lang.String languageName : allLanguageNames . subList ( 0 , count ) ) { questionData . add ( buildQuestionData ( languageName ) ) ; } return questionData ; } 
@ java.lang.Override public java.util.Map < java.lang.String , org.apache.tamaya.spi.PropertyValue > getProperties () { java.util.Map < java.lang.String , org.apache.tamaya.spi.PropertyValue > result = new java.util.HashMap <> () ; for ( java.util.Map.Entry < java.lang.String , java.lang.String > entry : properties . entrySet () ) { result . put ( entry . getKey () , org.apache.tamaya.spi.PropertyValue . of ( entry . getKey () , entry . getValue () , getName () ) ) ; } return result ; } 
public internetofeveryone.ioe.Data.Contact getContactByID ( java.lang.String userCode ) { android.database.Cursor cursor = sql . query ( TableData.Contacts.TABLE_CONTACTS , contactColumns , ( ( TableData.Contacts.COLUMN_CONTACTS_USERCODE ) + " = ?" ) , new java.lang.String [] { userCode } , null , null , null ) ; if ( cursor != null ) { if ( ! ( cursor . moveToFirst () ) ) { return null ; } } internetofeveryone.ioe.Data.Contact contact = cursorToContact ( cursor ) ; cursor . close () ; return contact ; } 
private void resetCell () { if ( ( downPosition ) != ( android.widget.ListView.INVALID_POSITION ) ) { if ( ( swipeCurrentAction ) == ( SwipeListView.SWIPE_ACTION_CHOICE ) ) { backView . setVisibility ( View.VISIBLE ) ; } frontView . setClickable ( opened . get ( downPosition ) ) ; frontView . setLongClickable ( opened . get ( downPosition ) ) ; frontView = null ; backView = null ; downPosition = android.widget.ListView.INVALID_POSITION ; } } 
@ java.lang.Override public void run () { for ( int i = 0 ; i < 20 ; i ++ ) { java.lang.String toAddress = "192.168.1.69" ; java.lang.String message = "Dave" ; this . portManager . senderPutMessage ( this . myAddress , new com.zetaphase.network.Message ( message , toAddress ) ) ; java.lang.System.out . println ( "I am sending the message!" ) ; java.lang.System.out . println ( portManager.senderPorts ) ; java.lang.System.out . println ( portManager.receiverPorts ) ; try { java.lang.Thread . sleep ( 3000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } } 
public void deleteById ( java.lang.String id ) { for ( int i = 0 ; i < ( this . position ) ; i ++ ) { if ( ( items [ i ] . getId () ) == id ) { items [ i ] = null ; break; } } } 
public static java.lang.Object get ( java.lang.String key ) { if ( ( net.sf.memoranda.util.Configuration.config . get ( key ) ) == null ) { java.lang.System.out . println ( ( ( "Configuration: Key '" + key ) + "' not found." ) ) ; return "" ; } if ( ( key == "BASE_FONT_SIZE" ) && ( ( net.sf.memoranda.util.Configuration.config . get ( key ) . toString () ) == "" ) ) { net.sf.memoranda.util.Configuration.config . put ( "BASE_FONT_SIZE" , "16" ) ; } return net.sf.memoranda.util.Configuration.config . get ( key ) ; } 
public void getHomeTimeline ( java.lang.Long maxId , java.lang.String paramName , com.loopj.android.http.AsyncHttpResponseHandler handler ) { java.lang.String apiUrl = getApiUrl ( "statuses/home_timeline.json" ) ; com.loopj.android.http.RequestParams params = new com.loopj.android.http.RequestParams () ; params . put ( "count" , com.gevkurg.twitterclient.network.TwitterClient.TWEETS_PER_PAGE ) ; params . put ( "include_entities" , true ) ; params . put ( paramName , maxId ) ; client . get ( apiUrl , params , handler ) ; } 
public static org.votingsystem.dto.voting.CertValidationDto validationRequest ( java.lang.String nif , java.lang.String deviceId ) { org.votingsystem.dto.voting.CertValidationDto certValidationDto = new org.votingsystem.dto.voting.CertValidationDto () ; certValidationDto . setNif ( "7553172H" ) ; certValidationDto . setDeviceId ( "aee09e79-e44e-4a86-9a5d-0fd1ee445038" ) ; certValidationDto . setUUID ( java.util.UUID . randomUUID () . toString () ) ; return certValidationDto ; } 
public static void test_061 ( ) throws com.android.uiautomator.core.UiObjectNotFoundException { framework.common.CameraCommon . switchMode ( "相机" ) ; excute ( testcase.Object_ResourceId , testcase.Operation_ClickWait , "com.android.camera2:id/three_dots" ) ; framework.common.CameraCommon . switchFrontBackCamera ( "前置摄像头" ) ; excute ( testcase.Object_ResourceId , testcase.Operation_ClickWait , "com.android.camera2:id/btn_beauty_button" ) ; excute ( testcase.Object_ResourceId , testcase.Operation_ClickWait , "com.android.camera2:id/shutter_button" ) ; excute ( testcase.Object_ResourceId , testcase.Operation_WaitForExists , "com.android.camera2:id/rounded_thumbnail_view" , "10000" ) ; check ( testcase.Object_ResourceId , testcase.Operation_checkExist , "com.android.camera2:id/rounded_thumbnail_view" ) ; framework.common.CameraCommon . switchFrontBackCamera ( "后置摄像头" ) ; } 
public boolean open () { com.mongodb.DB db = null ; com.mongodb.DBCursor cursor = null ; socks = new com.mongodb.MongoClient ( config . getVal ( "mongo-ip" ) , config . getVal ( "mongo-port" ) ) ; db = socks . getDB ( config . getVal ( "mongo-db" ) ) ; collection = db . getCollection ( config . getVal ( "mongo-collection" ) ) ; } 
private org.apache.solr.client.solrj.SolrServer getBestSolrServer ( java.lang.String operation ) { if ( ( this . cloudSolrServer ) != null ) { return this . cloudSolrServer ; } else if ( operation == ( SolrConstants.OPERATION_INSERT_STREAMING ) ) { return this . concSolrServer ; } else { return this . httpServer ; } } 
private void checkFiles () { try { if ( ! ( log . exists () ) ) log . createNewFile () ; if ( ! ( resp . exists () ) ) resp . createNewFile () ; } catch ( java.io.IOException e ) { g . printError ( e ) ; } } 
public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View v , int position , long id ) { com.popularmovie.android.appprotfolio.popularmovie.Movie movie = ( ( com.popularmovie.android.appprotfolio.popularmovie.Movie ) ( adapter . getItem ( position ) ) ) ; android.util.Log . d ( com.popularmovie.android.appprotfolio.popularmovie.MainActivityFragment.LOG_TAG , movie . getId () ) ; android.content.Intent intent = new android.content.Intent ( getActivity () , com.popularmovie.android.appprotfolio.popularmovie.MovieDetailsActivity . class ) ; intent . putExtra ( MovieConstants.CUSTOM_LISTING , movie ) ; startActivity ( intent ) ; } 
public void initDirection ( com.ru.tgra.shapes.Maze maze ) { int i = rand . nextInt ( 4 ) ; while ( ! ( getOpen ( i , maze ) ) ) { i = ( i + 1 ) % 4 ; } direction = i ; destination = destination ( i , maze ) ; moving = true ; java.lang.System.out . println ( ( "Direction: " + ( direction ) ) ) ; } 
private void playerHits ( cardgames.blackjack.Player p ) { p . getHand () . addCard ( dealCard () ) ; int newHandValue = p . getHand () . value () ; if ( newHandValue > 21 ) p . setStatus ( Status.BUST ) ; else if ( newHandValue == 21 ) p . setStatus ( Status.TWENTYONE ) ; } 
public static void main ( java.lang.String [] args ) throws de.scrum_master.dancing_links.ColumnAlreadyExistsException { de.scrum_master.dancing_links.Matrix matrix = new de.scrum_master.dancing_links.Matrix ( "Test matrix" ) ; matrix . addColumns ( "A" , "B" , "C" , "D" , "E" ) . addRowOfNodes ( "A" , "D" ) . addRowOfNodes ( "B" , "C" , "D" ) . addRowOfNodes ( "D" , "E" ) . addRowOfNodes ( "A" , "E" ) . addRowOfNodes ( "B" , "C" ) . addRowOfNodes ( "E" ) ; java.lang.System.out . println ( matrix . columnsToText () ) ; } 
private static argelbargel.jenkins.plugins.gitlab_branch_source.GitLabLinkAction create ( @ javax.annotation.Nonnull org.gitlab.api.models.GitlabProject project , @ javax.annotation.CheckForNull java.lang.String displayName , @ javax.annotation.Nonnull java.lang.String iconName , java.lang.String path ) { return new argelbargel.jenkins.plugins.gitlab_branch_source.GitLabLinkAction ( ( displayName == null ? "" : displayName ) , iconName , ( ( ( project . getWebUrl () ) + "/" ) + path ) ) ; } 
public com.pihen.d3restapi.beans.SeasonalProfile getSeason ( java.lang.String season ) throws java.lang.IllegalAccessException , java.lang.IllegalArgumentException , java.lang.InstantiationException , java.lang.NoSuchMethodException , java.lang.SecurityException , java.lang.reflect.InvocationTargetException { java.lang.reflect.Method m = this . getClass () . getMethod ( ( "getSeason" + season ) , new java.lang.Class [] {} ) ; com.pihen.d3restapi.beans.Season.logger . debug ( ( "Call dynamic season method" + m ) ) ; java.lang.Object ret = m . invoke ( org.armory.d3.services.D3ArmoryControler . getInstance () . getCurrentProfil () . getSeasonalProfiles () ) ; com.pihen.d3restapi.beans.Season.logger . debug ( ret ) ; return ( ( com.pihen.d3restapi.beans.SeasonalProfile ) ( ret ) ) ; } 
protected boolean canMovePiece ( com.alanihre.chess.piece.Piece piece , com.alanihre.chess.Point newPosition ) { if ( getBoard () . positionWithinBoardBounds ( newPosition ) ) { throw new com.alanihre.chess.game.InvalidMoveException ( "New position is outside board bounds" ) ; } if ( ( piece . getColor () ) != ( getCurrentMovingPieceColor () ) ) { throw new com.alanihre.chess.game.InvalidMoveException ( "The piece at the entered position can't be moved by you. It has wrong color." ) ; } if ( ! ( piece . canMoveTo ( newPosition ) ) ) { throw new com.alanihre.chess.game.InvalidMoveException ( "This piece is not allowed to move to the entered position" ) ; } return true ; } 
private void createUnitBoard () { unitBoard . setLayout ( new java.awt.GridLayout ( 4 , 1 ) ) ; unitType = new javax.swing.JLabel ( "Unit ID : " ) ; veteran = new javax.swing.JLabel ( "Experience:" ) ; unitBoard . add ( unitType ) ; unitBoard . add ( veteran ) ; nextUnit = new javax.swing.JButton ( "Next Unit" ) ; nextUnit . setFocusPainted ( false ) ; civ.gui.UnitSwitchListener unitSwitchListener = new civ.gui.UnitSwitchListener ( this ) ; nextUnit . addActionListener ( unitSwitchListener ) ; unitBoard . add ( nextUnit ) ; } 
private void startStopClicked () { if ( isPlaying ) { playPause . setBackground ( getActivity () . getResources () . getDrawable ( R.drawable.ic_action_play ) ) ; mMusicPlayerService . pause () ; } else { playPause . setBackground ( getActivity () . getResources () . getDrawable ( R.drawable.ic_action_pause ) ) ; if ( mPlayClickedAtLeastOnceForCurrArtist ) { mMusicPlayerService . resume () ; } else { mMusicPlayerService . playTrack ( tracksDetails . get ( mSelectedTrack ) ) ; } } isPlaying = ! ( isPlaying ) ; mPlayClickedAtLeastOnceForCurrArtist = true ; } 
protected java.lang.String getCorrectVariableName ( org.talend.core.model.properties.ContextItem contextItem , java.lang.String originalVariableName , org.talend.metadata.managment.ui.utils.ExtendedNodeConnectionContextUtils.EHadoopParamName noSqlParam ) { java.util.Set < java.lang.String > contextVarNames = org.talend.core.model.context.ContextUtils . getContextVarNames ( contextItem ) ; if ( ( contextVarNames != null ) && ( ! ( contextVarNames . contains ( originalVariableName ) ) ) ) { for ( java.lang.String varName : contextVarNames ) { if ( varName . endsWith ( noSqlParam . name () ) ) { return varName ; } } } return originalVariableName ; } 
public void defaultLong ( java.lang.String path , java.lang.Long type ) { if ( ! ( getConfig () . contains ( path ) ) ) { getConfig () . addDefault ( path , type ) ; getConfig () . options () . copyDefaults ( true ) ; } saveConfig () ; } 
private void connect ( java.lang.String address , int port ) { try { socket = new java.net.Socket ( address , port ) ; output = new java.io.DataOutputStream ( socket . getOutputStream () ) ; input = new java.io.DataInputStream ( socket . getInputStream () ) ; try { java.lang.Thread . sleep ( 100 ) ; } catch ( java.lang.Exception e ) {} send ( name ) ; } catch ( java.io.IOException ex ) { java.lang.System.err . println ( "Client: Failed to connect to server." ) ; java.lang.System . exit ( 0 ) ; } } 
@ java.lang.Override public spade.core.Graph getChildren ( java.lang.String parentVertexHash ) { spade.core.Graph result = new spade.core.Graph () ; for ( java.util.Map.Entry < java.lang.String , spade.core.AbstractEdge > entry : edgeIdentifiers . entrySet () ) { spade.core.AbstractEdge edge = entry . getValue () ; spade.core.AbstractVertex parentVertex = edge . getParentVertex () ; if ( parentVertex . bigHashCode () . equals ( parentVertexHash ) ) { result . putVertex ( edge . getChildVertex () ) ; result . putEdge ( edge ) ; } } return result ; } 
@ org.junit.Test public void announcesXWinner () { play.twirl.api.Content html = views.html.game . render ( "Let's Play!" , new uk.nickbdyer.tictactoe.Board () . getCells () , uk.nickbdyer.tictactoe.Mark.X , false , true ) ; org.junit.Assert . assertEquals ( "text/html" , html . contentType () ) ; org.junit.Assert . assertTrue ( html . body () . contains ( "X is the winner!!" ) ) ; } 
private void preventCheckFromMockProvider ( final de.robv.android.xposed.callbacks.XC_LoadPackage.LoadPackageParam lpparam ) { if ( ( ( Build.VERSION.SDK_INT ) >= 18 ) && ( com.github.jinsen47.pokefaker.MockProviderFaker.mPackageSet . contains ( lpparam.packageName ) ) ) { de.robv.android.xposed.XposedHelpers . findAndHookMethod ( android.location.Location . class , "isFromMockProvider" , new de.robv.android.xposed.XC_MethodHook () { @ java.lang.Override protected void beforeHookedMethod ( com.github.jinsen47.pokefaker.MethodHookParam param ) throws java.lang.Throwable { de.robv.android.xposed.XposedHelpers . setBooleanField ( param.thisObject , "mIsFromMockProvider" , false ) ; android.util.Log . d ( com.github.jinsen47.pokefaker.MockProviderFaker.TAG , ( ( param.thisObject . getClass () . getName () ) + "is calling from mock provider" ) ) ; param . setResult ( false ) ; } } ) ; } } 
public void downloadFile () { java.lang.String selectedFile = guiController . getSelectedFile () ; try { fileserverHandler . downloadFile ( "s974489" , selectedFile , ( ( java.lang.System . getProperty ( "user.dir" ) ) + "\\" ) , UserPreferences.USERNAME , UserPreferences.PASSWORD ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
void addTask ( android.view.View v ) { android.widget.EditText textbox = ( ( android.widget.EditText ) ( findViewById ( R.id.taskName ) ) ) ; java.lang.String text = textbox . getText () . toString () ; items . add ( text ) ; myAdapter . notifyDataSetChanged () ; textbox . setText ( "" ) ; } 
public void testDeadGhostUsingGun () { shared.logic.Player ghost = addPlayer ( shared.logic.templates.BasicRoles . Ghost () ) ; shared.logic.Player gs = addPlayer ( shared.logic.templates.BasicRoles . Gunsmith () ) ; shared.logic.Player sk = addPlayer ( shared.logic.templates.BasicRoles . SerialKiller () ) ; shared.logic.Player maf = addPlayer ( shared.logic.templates.BasicRoles . Mafioso () ) ; setTarget ( gs , ghost ) ; endNight () ; lynch ( ghost , gs , sk , maf ) ; try { shoot ( ghost , maf ) ; fail () ; } catch ( shared.logic.exceptions.PlayerTargetingException e ) {} } 
@ java.lang.Override public void onClick ( android.view.View v ) { problem_number = 1 ; part_letter = "A" ; tinydb . putInt ( "problem_number" , problem_number ) ; tinydb . putString ( "part_letter" , part_letter ) ; android.support.v4.app.ActivityOptionsCompat options = android.support.v4.app.ActivityOptionsCompat . makeSceneTransitionAnimation ( this ) ; android.content.Intent intent = new android.content.Intent ( this , com.chrisgaddes.reaction.SecondActivity . class ) ; intent . addFlags ( Intent.FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS ) ; startActivity ( intent , options . toBundle () ) ; } 
private boolean copy () { boolean res = false ; try { res = net.sf.jabref.logic.util.io.FileUtil . copyFile ( file , tmpFile , true ) ; } catch ( java.io.IOException ex ) { net.sf.jabref.collab.FileUpdateMonitor.LOGGER . info ( ( ( "Cannot copy to temporary file '" + ( tmpFile . getPath () ) ) + '\'' ) , ex ) ; } return res ; } 
public static com.bathem.vocabpower.Entity.Vocab getRandomVocab ( android.content.Context context ) { if ( ( ( com.bathem.vocabpower.Model.DataModel.sWords ) == null ) && ( ( com.bathem.vocabpower.Model.DataModel.sWords . size () ) < 0 ) ) { android.util.Log . d ( "debug" , "No word list available for random words prepartion." ) ; return null ; } int id = com.bathem.vocabpower.Helper.Utils . getRandomNumber ( 1 , com.bathem.vocabpower.Model.DataModel.sWords . size () ) ; com.bathem.vocabpower.Helper.DataBaseHelper db = new com.bathem.vocabpower.Helper.DataBaseHelper ( context ) ; com.bathem.vocabpower.Model.DataModel.sCurrentRandomVocab = db . getVocabByID ( id ) ; return com.bathem.vocabpower.Model.DataModel.sCurrentRandomVocab ; } 
private static java.lang.String extractExtension ( java.lang.String path ) { java.lang.String unixPath = org.arthan.semantic.desktop.sample.FileUtils . toUnixPath ( path ) ; int lastSlash = unixPath . lastIndexOf ( "/" ) ; int lastDot = unixPath . indexOf ( "." , lastSlash ) ; return unixPath . substring ( ( lastDot + 1 ) ) ; } 
public void roundFinished () { ( this . specialAbilityDuration ) -- ; if ( ( this . specialAbilityDuration ) <= 0 ) { this . specialAbilityDuration = 0 ; if ( ( this . bonusAtk ) < 0 ) { this . bonusAtk = 0 ; java.lang.System.out . println ( "Die Wirkung der Powerpille laesst nach!" ) ; } } } 
public static void insertIntoWorkTracking ( java.lang.String date , int workingHours , int employeesId ) { final int objectEmployeesId = employees.attendance.table.ODBC_PubsBD . selectObjectEmployeesId ( date , employeesId ) ; sample.DB_Connector . getJdbcTemplate () . update ( ( ( ( ( ( ( ( "INSERT INTO worktracking (id, object_employees_id, date, workingHours) " + "VALUES (null, '" ) + objectEmployeesId ) + "', convert('" ) + date ) + "', DATE), '" ) + workingHours ) + "')" ) ) ; } 
private void resetLayout () { inputLayout1 . setVisibility ( View.INVISIBLE ) ; inputLayout2 . setVisibility ( View.INVISIBLE ) ; inputLayout3 . setVisibility ( View.INVISIBLE ) ; inputChoice . setVisibility ( View.INVISIBLE ) ; answer . setText ( "" ) ; inputView1 . setText ( "" ) ; inputView2 . setText ( "" ) ; inputView3 . setText ( "" ) ; input1 . setText ( "" ) ; input2 . setText ( "" ) ; input3 . setText ( "" ) ; answerPos = 0 ; inputPos = 0 ; } 
private void setCameraParameterSupported ( int iParameter , boolean isSupported ) { switch ( iParameter ) { case com.almalence.opencam.ui.AlmalenceGUI.MODE_SCENE : mSceneModeSupported = isSupported ; case com.almalence.opencam.ui.AlmalenceGUI.MODE_WB : mWBSupported = isSupported ; case com.almalence.opencam.ui.AlmalenceGUI.MODE_FLASH : mFlashModeSupported = isSupported ; case com.almalence.opencam.ui.AlmalenceGUI.MODE_FOCUS : mFocusModeSupported = isSupported ; case com.almalence.opencam.ui.AlmalenceGUI.MODE_ISO : mISOSupported = isSupported ; case com.almalence.opencam.ui.AlmalenceGUI.MODE_MET : mMeteringAreasSupported = isSupported ; case com.almalence.opencam.ui.AlmalenceGUI.MODE_COLLOR_EFFECT : mCollorEffectsSupported = isSupported ; case com.almalence.opencam.ui.AlmalenceGUI.MODE_CAM : mCameraChangeSupported = isSupported ; default: break; } } 
@ java.lang.Override public void run () { try { com.orientechnologies.orient.core.db.document.ODatabaseDocument db = new com.orientechnologies.orient.core.db.document.ODatabaseDocumentTx ( dbUrl ) ; db . open ( userName , password ) ; run ( db ) ; } finally { runningThreads . decrementAndGet () ; synchronized ( runningThreads ) { runningThreads . notifyAll () ; } db . activateOnCurrentThread () ; db . close () ; } } 
private void transformToOrigin ( core.Coord point ) { point . setLocation ( ( ( stretch ) * ( ( point . getX () ) - ( origin . getX () ) ) ) , ( ( stretch ) * ( ( point . getY () ) - ( origin . getY () ) ) ) ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; _contentView = findViewById ( R.id.layout_main ) ; getSupportFragmentManager () . beginTransaction () . add ( R.id.fragment_container , new ch.hsr.zedcontrol.MainFragment () ) . commit () ; initConnectionReceiver () ; connectionManager = new ch.hsr.zedcontrol.roborio.ConnectionManager ( this ) ; } 
public void clear () { uploadFileRows = new java.util.HashMap < java.io.File , gui.UploadFileRow > () ; annotationBoxes = new java.util.HashMap < java.lang.String , javax.swing.JComboBox < java.lang.String > > () ; annotationFields = new java.util.HashMap < java.lang.String , javax.swing.JTextField > () ; annotationHeaders = new java.util.ArrayList < java.lang.String > () ; expID . setText ( "" ) ; } 
public static java.lang.String link ( com.erudika.para.core.ParaObject obj , java.lang.String id2 ) { com.erudika.para.core.ParaObject second = obj . getDao () . read ( id2 ) ; if ( ( second == null ) || ( ( obj . getId () ) == null ) ) { return null ; } return obj . getDao () . create ( obj . getAppid () , new com.erudika.para.core.Linker ( obj . getType () , second . getType () , obj . getId () , id2 ) ) ; } 
private void ConnectionRequest ( pp2016.team19.server.engine.Message message ) { java.lang.System.out . println ( "Connected" ) ; pp2016.team19.server.engine.Message answer = ( ( pp2016.team19.server.engine.MessSignInAndUpAnswer ) ( new pp2016.team19.server.engine.MessSignInAndUpAnswer ( false , 0 , 3 ) ) ) ; try { this . messagesToClient . put ( new pp2016.team19.server.engine.MessSignInAndUpAnswer ( false , 0 , 3 ) ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } 
@ org.junit.Test public void testNull () { int nullId = dict . getIdFromValue ( null ) ; assertNull ( dict . getValueFromId ( nullId ) ) ; int nullId2 = dict . getIdFromValueBytes ( null , 0 , 0 ) ; assertEquals ( dict . getValueBytesFromId ( nullId2 , null , 0 ) , 0 ) ; assertEquals ( nullId , nullId2 ) ; } 
public boolean movePreference ( model.Reader readerToAdd , model.Reader readerToRemoveFrom , model.Project projectToMove ) { if ( ! ( readerToAdd . getPreferences () . contains ( projectToMove ) ) ) { if ( readerToAdd . addPreference ( projectToMove ) ) { return true ; } else { return false ; } } else if ( readerToAdd . equals ( readerToRemoveFrom ) ) { readerToRemoveFrom . removePreference ( projectToMove ) ; readerToAdd . addPreference ( projectToMove ) ; return true ; } else { return false ; } } 
private static java.util.List < com.dabsquared.gitlabjenkins.gitlab.hook.model.State > retrieveAllowedStates ( boolean triggerOnMergeRequest , com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest triggerOpenMergeRequest , boolean triggerOnPipelineEvent ) { java.util.List < com.dabsquared.gitlabjenkins.gitlab.hook.model.State > result = new java.util.ArrayList <> () ; if ( triggerOnMergeRequest ) { result . add ( State.opened ) ; result . add ( State.reopened ) ; } if ( triggerOpenMergeRequest != ( com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest.never ) ) { result . add ( State.updated ) ; } return result ; } 
private com.googlecode.lanterna.terminal.Terminal createWindowsTerminal ( ) throws java.io.IOException { try { java.lang.Class < ? > nativeImplementation = java.lang.Class . forName ( "com.googlecode.lanterna.terminal.WindowsTerminal" ) ; java.lang.reflect.Constructor < ? > constructor = nativeImplementation . getConstructor ( java.io.InputStream . class , java.io.OutputStream . class , java.nio.charset.Charset . class , UnixLikeTTYTerminal.CtrlCBehaviour . class ) ; return ( ( com.googlecode.lanterna.terminal.Terminal ) ( constructor . newInstance ( inputStream , outputStream , charset , UnixLikeTTYTerminal.CtrlCBehaviour.CTRL_C_KILLS_APPLICATION ) ) ) ; } catch ( java.lang.Exception ignore ) { return createCygwinTerminal ( outputStream , inputStream , charset ) ; } } 
@ org.junit.Test public void testCTor () { jmri.jmrix.can.TrafficControllerScaffold tc = new jmri.jmrix.can.TrafficControllerScaffold () ; jmri.jmrix.can.CanSystemConnectionMemo memo = new jmri.jmrix.can.CanSystemConnectionMemo () ; memo . setTrafficController ( tc ) ; jmri.jmrix.can.cbus.CbusDccProgrammerManager t = new jmri.jmrix.can.cbus.CbusDccProgrammerManager ( new jmri.jmrix.can.cbus.CbusDccProgrammer ( tc , memo ) ) ; org.junit.Assert . assertNotNull ( "exists" , t ) ; } 
public void onRestoreInstanceState ( android.os.Bundle savedInstanceState ) { if ( savedInstanceState != null ) { super . onRestoreInstanceState ( savedInstanceState ) ; parentSelected = savedInstanceState . getBoolean ( eu.davidea.flexibleadapter.FlexibleAdapter.EXTRA_PARENT ) ; childSelected = savedInstanceState . getBoolean ( eu.davidea.flexibleadapter.FlexibleAdapter.EXTRA_CHILD ) ; headersShown = savedInstanceState . getBoolean ( eu.davidea.flexibleadapter.FlexibleAdapter.EXTRA_HEADERS ) ; showAllHeaders () ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_track_list ) ; if ( ( android.os.Build.VERSION.SDK_INT ) > 9 ) { android.os.StrictMode.ThreadPolicy policy = new android.os.StrictMode.ThreadPolicy.Builder () . permitAll () . build () ; android.os.StrictMode . setThreadPolicy ( policy ) ; } android.widget.TextView listTracks = ( ( android.widget.TextView ) ( findViewById ( R.id.list_tracks ) ) ) ; new atinyshop.hacorp.laplq.restapi.activities.HttpAsyncTask () . execute () ; } 
public void computeZ () { double total = 0 ; for ( int i = 0 ; i < ( previousLayer . size () ) ; i ++ ) { total += ( ( previousLayer . get ( i ) . activation ) * ( weights . get ( i ) ) ) + ( bias ) ; } z = total ; } 
@ java.lang.Override public java.lang.String toString () { return ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( "Lesson{" + "id=" ) + ( id ) ) + ", courseID=" ) + ( courseID ) ) + ", name='" ) + ( name ) ) + '\'' ) + ", baseClasses=" ) + ( baseClasses ) ) + ", requiredClasses=" ) + ( requiredClasses ) ) + ", testsClasses=" ) + ( testsClasses ) ) + ", description='" ) + ( description ) ) + '\'' ) + ", date=" ) + ( + '}' ) ; } 
private java.io.File getNameNodeDir () { java.lang.String dir = node.hdfsSiteOpts . get ( "dfs.name.dir" ) . split ( "," ) [ 0 ] ; if ( dir == null ) dir = node.hdfsSiteOpts . get ( "dfs.namenode.name.dir" ) . split ( "," ) [ 0 ] ; if ( dir == null ) dir = new java.io.File ( getTmpDir () , "dfs/name" ) . getPath () ; return new java.io.File ( dir ) ; } 
@ java.lang.Override public void onViewPositionChanged ( android.view.View changedView , int left , int top , int dx , int dy ) { if ( draggableView . isDragViewAtBottom () ) { draggableView . changeDragViewViewAlpha () ; } else { draggableView . restoreAlpha () ; draggableView . changeDragViewScale () ; draggableView . changeDragViewPosition () ; draggableView . changeSecondViewAlpha () ; draggableView . changeSecondViewPosition () ; draggableView . changeBackgroundAlpha () ; } if ( 0 == top ) { draggableView . requestLayout () ; } } 
@ java.lang.Override public boolean equals ( java.lang.Object object ) { if ( object instanceof lasad.gwt.client.model.organization.OrganizerLink ) { lasad.gwt.client.model.organization.OrganizerLink link = ( ( lasad.gwt.client.model.organization.OrganizerLink ) ( object ) ) ; if ( ( ( this . startBox . equals ( link . getStartBox () ) ) && ( this . endBox . equals ( link . getEndBox () ) ) ) && ( link . getType () . equalsIgnoreCase ( this . type ) ) ) { return true ; } else { return false ; } } else { return false ; } } 
public static us.codecraft.webmagic.Request createRequest ( cn.wanru.fund.crawler.GenericPageable pageable ) { java.lang.String url = java.lang.String . format ( cn.wanru.fund.nav.crawl.eastmoney.EMUtil.url_template , 1 , 40000 , pageable . getCode () , pageable . getStart () , pageable . getEnd () ) ; us.codecraft.webmagic.Request request = new us.codecraft.webmagic.Request ( url ) ; cn.wanru.webmagic.PageUtil . setPageable ( request , pageable ) ; cn.wanru.webmagic.PageUtil . setSupportClass ( request , cn.wanru.fund.nav.crawl.eastmoney.EMUtil . class ) ; return request ; } 
private void compileClassVarDec () { output . add ( "<classVarDec>" ) ; goNext () ; eat ( currentToken ) ; goNext () ; eat ( currentToken ) ; goNext () ; eat ( currentToken ) ; goNext () ; while ( ( currentToken . getLecical () ) == "," ) { eat ( currentToken ) ; goNext () ; eat ( currentToken ) ; goNext () ; } eat ( currentToken ) ; output . add ( "</classVarDec>" ) ; } 
@ java.lang.Override public void surfaceCreated ( android.view.SurfaceHolder holder ) { games.bb.myfirstgame.GamePanel.Sheight = getResources () . getDisplayMetrics () . heightPixels ; games.bb.myfirstgame.GamePanel.Swidth = getResources () . getDisplayMetrics () . widthPixels ; grid = new games.bb.myfirstgame.Grid ( 5 , 5 ) ; menuButton = new android.widget.games.bb.myfirstgame.Button ( android.graphics.BitmapFactory . decodeResource ( getResources () , R.drawable.menubutton ) , 0 , 0 , 0.25 ) ; createMenus () ; thread = new games.bb.myfirstgame.MainThread ( getHolder () , this ) ; thread . setRunning ( true ) ; thread . start () ; } 
public static double getScoreFromTime ( java.util.Collection < de.vanhck.data.Score > scores , java.util.Date from ) { double endScore = 0 ; double endCourse = 0 ; for ( de.vanhck.data.Score score : scores ) { if ( score . getDate () . after ( from ) ) { endCourse += score . getCourse () ; endScore += score . getScore () ; } } return endCourse == 0 ? 0 : endScore / endCourse ; } 
public java.lang.Object getAsObject ( javax.faces.context.FacesContext fc , javax.faces.component.UIComponent uic , java.lang.String value ) { if ( ( value != null ) && ( ( value . trim () . length () ) > 0 ) ) { try { return new com.swn.eapp.om.dto.OrgTypeDTO () ; } catch ( java.lang.Exception ex ) { return null ; } } else { return null ; } } 
public boolean isOOB ( int x , int y ) { return ( ( ( x < 0 ) || ( y < 0 ) ) || ( x >= ( this . panel . width ) ) ) || ( y > ( this . panel . height ) ) ; } 
private java.util.Optional < java.net.URL > getXMLUrl ( final java.lang.String aUrl ) { final java.util.Optional < java.lang.Integer > id = getIdFromUrl ( aUrl ) ; if ( id . isPresent () ) { try { return java.util.Optional . of ( new java.net.URL ( java.lang.String . format ( de.mediathekview.mserver.crawler.dreisat.tasks.DreisatFilmDetailsTask.XML_SERVICE_URL_PATTERN , id ) ) ) ; } catch ( final java.net.MalformedURLException malformedURLException ) { de.mediathekview.mserver.crawler.dreisat.tasks.DreisatFilmDetailsTask.LOG . fatal ( "Something went terrible wrong on getting the film details for 3Sat." , malformedURLException ) ; crawler . incrementAndGetErrorCount () ; crawler . printErrorMessage () ; } } return java.util.Optional . empty () ; } 
@ java.lang.Override public void continueMigrationCluster ( final long eventId , final long clusterId ) { if ( null != ( migrationEventManager . getEvent ( eventId ) . getMigrationCluster ( clusterId ) ) ) { migrationEventManager . getEvent ( eventId ) . getMigrationCluster ( clusterId ) . process () ; } } 
private boolean UserExist ( java.lang.String username ) { com.datastax.driver.core.Session session = cluster . connect ( "instagrim" ) ; com.datastax.driver.core.PreparedStatement ps = session . prepare ( "select login from userprofiles where login =?" ) ; com.datastax.driver.core.ResultSet rs = null ; com.datastax.driver.core.BoundStatement boundStatement = new com.datastax.driver.core.BoundStatement ( ps ) ; rs = session . execute ( boundStatement . bind ( username ) ) ; if ( rs . isExhausted () ) { java.lang.System.out . println ( "User Not Found, Good" ) ; return false ; } else { return true ; } } 
private void deleteDirectory ( final java.io.File directory ) throws java.io.IOException { if ( directory . exists () ) { for ( final java.io.File file : directory . listFiles () ) { if ( file . isDirectory () ) { deleteDirectory ( file ) ; } org.junit.Assert . assertTrue ( ( "Could not delete " + ( file . getAbsolutePath () ) ) , file . delete () ) ; } } } 
public void enableBullet ( boolean isValid ) { int start = getSelectionStart () ; int end = getSelectionEnd () ; if ( start < end ) setSelectionTextBullet ( isValid , start , end ) ; if ( isValid ) { setBullet () ; } state . enableBullet ( isValid ) ; } 
@ java.lang.Override public void performAction () { if ( isRef ) { refShuttle . setSelected ( true ) ; refBar . replaceLevels ( refShuttle . getBarLevel () ) ; } else { refShuttle . setSelected ( ( ! ( refShuttle . isSelected () ) ) ) ; } if ( refShuttle . isSelected () ) gameCamera . lookAt ( refShuttle ) ; } 
public static void cleanApplicationTokenMap () { for ( java.util.Map.Entry < java.lang.String , net.whydah.sso.application.types.ApplicationToken > entry : net.whydah.token.application.AuthenticatedApplicationTokenRepository.applicationTokenMap . entrySet () ) { net.whydah.sso.application.types.ApplicationToken applicationToken = entry . getValue () ; if ( net.whydah.token.application.AuthenticatedApplicationTokenRepository . isApplicationTokenExpired ( applicationToken . getApplicationTokenId () ) ) { net.whydah.token.application.AuthenticatedApplicationTokenRepository.applicationTokenMap . remove ( applicationToken ) ; } } } 
@ java.lang.Override public boolean onMenuItemClick ( android.view.MenuItem item ) { changeTicks ( timeBar , 5 ) ; if ( timeBar2 != null ) { changeTicks ( timeBar2 , 5 ) ; } item15 . setEnabled ( true ) ; item5 . setEnabled ( false ) ; item1 . setEnabled ( true ) ; return true ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { mPickOptions = de.greenrobot.event.EventBus . getDefault () . getStickyEvent ( Events.OnPublishPickOptionsEvent . class ) . options ; initTheme () ; super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_pick ) ; addToolbarToLayout () ; initActionbar () ; setupAlbums ( savedInstanceState ) ; initFab () ; updateFab () ; } 
public org.softclicker.server.entity.Question getQuestionById ( int questionId ) throws java.sql.SQLException { java.lang.String sql = "SELECT * FROM `QUESTION` as q,`USER` as u WHERE q.OWNER_ID=u.USER_ID AND QUESTION_ID=?" ; try ( java.sql.Connection conn = scopingDataSource . getConnection () ; java.sql.PreparedStatement stmt = conn . prepareStatement ( sql ) ) { stmt . setInt ( 1 , questionId ) ; try ( java.sql.ResultSet rs = stmt . executeQuery ( sql ) ) { org.softclicker.server.entity.User owner = org.softclicker.server.dao.DAOUtil . loadUser ( rs ) ; return org.softclicker.server.dao.DAOUtil . loadQuestion ( rs , owner ) ; } } } 
@ org.junit.Test public void testCASAfterAdd ( ) throws java.lang.Exception { java.util.concurrent.Future < java.lang.Boolean > future = _client . add ( "foo" , 32000 , 123 ) ; assertTrue ( future . get () ) ; com.thimbleware.jmemcached.test.CASValue < java.lang.Object > casValue = _client . gets ( "foo" ) ; org.junit.Assert . assertEquals ( 123 , casValue . getValue () ) ; } 
public static java.util.HashMap < java.lang.String , java.lang.Integer > evaluateExpressions ( java.util.HashMap < java.lang.String , simsql.compiler.MathExpression > expressions , java.util.HashMap < java.lang.String , java.lang.Integer > indices ) { java.util.HashMap < java.lang.String , java.lang.Integer > newIndices = new java.util.HashMap < java.lang.String , java.lang.Integer > () ; for ( java.lang.String key : indices . keySet () ) { simsql.compiler.MathExpression e = expressions . get ( key ) ; simsql.compiler.MPNGenerator generator = new simsql.compiler.MPNGenerator ( e ) ; newIndices . put ( key , generator . initializeTime ( indices ) ) ; } return newIndices ; } 
@ java.lang.Override public final int appendToStream ( final org.fuin.esc.api.StreamId streamId , final int expectedVersion , final java.util.List < org.fuin.esc.api.CommonEvent > toAppend ) { org.fuin.objects4j.common.Contract . requireArgNotNull ( "streamId" , streamId ) ; org.fuin.objects4j.common.Contract . requireArgMin ( "expectedVersion" , expectedVersion , 0 ) ; org.fuin.objects4j.common.Contract . requireArgNotNull ( "toAppend" , toAppend ) ; final java.util.List < org.fuin.esc.api.CommonEvent > events = createIfNotExists ( streamId , expectedVersion ) ; all . addAll ( toAppend ) ; events . addAll ( toAppend ) ; notifyListeners ( streamId , toAppend , 0 ) ; return ( events . size () ) - 1 ; } 
private Camera.Target getTarget () { org.usfirst.frc.team2557.robot.subsystems.Camera [] targets = Robot.camera . getTargets () ; org.usfirst.frc.team2557.robot.subsystems.Camera.Target trackedTarget = null ; for ( org.usfirst.frc.team2557.robot.subsystems.Camera.Target target : targets ) { if ( trackedTarget != null ) { if ( ( trackedTarget.width ) < ( target.width ) ) { trackedTarget = target ; } } else { trackedTarget = target ; } } return trackedTarget ; } 
public static org.json.simple.JSONObject getJson ( org.jgrapht.graph.SimpleGraph graph , java.lang.String type ) { return graphlod.output.JsonOutput . getJsonObject ( graph . vertexSet () , graph . edgeSet () , new java.util.HashSet < java.lang.String > () , new java.util.HashSet < org.jgraph.graph.DefaultEdge > () , false , null , type ) ; } 
public net.sf.memoranda.DefectList openDefectList ( net.sf.memoranda.Project project ) { java.lang.String files = ( ( ( net.sf.memoranda.util.FileStorage.JN_DOCPATH ) + ( project . getID () ) ) + ( java.io.File.separator ) ) + ".defectlist" ; net.sf.memoranda.DefectList defectList = new net.sf.memoranda.DefectListImpl ( project ) ; if ( net.sf.memoranda.util.FileStorage . documentExists ( files ) ) { nu.xom.Document defectDocument = net.sf.memoranda.util.FileStorage . openDocument ( files ) ; defectList = new net.sf.memoranda.DefectListImpl ( defectDocument , project ) ; } return defectList ; } 
protected java.util.Set < org.jasig.portal.groups.IEntityGroup > primGetAncestorGroups ( org.jasig.portal.groups.IGroupMember member , java.util.Set < org.jasig.portal.groups.IEntityGroup > rslt ) throws org.jasig.portal.groups.GroupsException { for ( org.jasig.portal.groups.IEntityGroup group : getParentGroups () ) { if ( ! ( rslt . contains ( group ) ) ) { rslt . add ( group ) ; primGetAncestorGroups ( group , rslt ) ; } } return rslt ; } 
private void handleGetTimingAction ( com.sikhcentre.models.MediaPlayerServiceModel mediaPlayerServiceModel ) { com.sikhcentre.media.SikhCentreMediaPlayer.LOGGER . debug ( "brinder setting time" ) ; resetAction () ; java.lang.String totalTime = convertMillisToTimeString ( mediaPlayerServiceModel . getDuration () ) ; java.lang.String pendingTime = convertMillisToTimeString ( mediaPlayerServiceModel . getCurrentPosition () ) ; durationTV . setText ( ( ( pendingTime + "/" ) + totalTime ) ) ; } 
@ java.lang.Override public java.util.List < com.facebook.react.bridge.NativeModule > createNativeModules ( com.facebook.react.bridge.ReactApplicationContext reactContext ) { java.util.List < com.facebook.react.bridge.NativeModule > modules = new java.util.ArrayList <> () ; com.homypiandroid.SocketConnection sC = new com.homypiandroid.SocketConnection ( reactContext , mActivity ) ; modules . add ( sC ) ; modules . add ( new com.homypiandroid.ToastModuleBis ( reactContext , mActivity , sC ) ) ; return modules ; } 
public java.lang.String refreshToken ( java.lang.String token ) { java.lang.String refreshedToken ; try { final io.jsonwebtoken.Claims claims = getClaimsFromToken ( token ) ; claims . put ( base.security.jwt.JwtTokenUtil.CLAIM_KEY_CREATED , new java.util.Date () ) ; refreshedToken = generateToken ( claims ) ; } catch ( java.lang.Exception e ) { refreshedToken = null ; } return refreshedToken ; } 
private void skipSection ( java.lang.String localName ) { try { for ( int e = parser . next () ; e != ( javax.xml.stream.XMLStreamConstants.END_DOCUMENT ) ; e = parser . next () ) { if ( ( e == ( javax.xml.stream.XMLStreamConstants.END_ELEMENT ) ) && ( parser . getLocalName () . equals ( localName ) ) ) { break; } } } catch ( javax.xml.stream.XMLStreamException ex ) { java.lang.System.out . println ( ex ) ; } } 
@ java.lang.Override public void runGames () { gameStates . get ( currentState ) . enter () ; while ( ! ( shouldQuit ) ) { gameStates . get ( currentState ) . update () ; if ( gameStates . get ( currentState ) . isFinished () ) { gameStates . get ( currentState ) . exit () ; ( currentState ) ++ ; if ( ( currentState ) > ( gameStates . size () ) ) { currentState = 0 ; } gameStates . get ( currentState ) . enter () ; } } } 
public void put ( java.lang.String name , java.lang.String value ) { if ( ( value . length () ) == 0 ) throw new core.framework.api.web.exception.BadRequestException ( ( ( ( "path param must not be empty, name=" + name ) + ", value=" ) + value ) ) ; try { params . put ( name , core.framework.api.util.Encodings . decodeURIComponent ( value ) ) ; } catch ( java.lang.IllegalArgumentException e ) { throw new core.framework.api.web.exception.BadRequestException ( e . getMessage () , core.framework.api.web.exception.BadRequestException.DEFAULT_ERROR_CODE , e ) ; } } 
public void renderImage ( java.lang.String imgName , float x , float y , float w , float h , float rot , boolean useCamera ) { if ( useCamera ) normalRenderQueue . add ( new info.quadtree.rv.graphics.SGF.QueuedImage ( x , y , w , h , rot , imgName ) ) ; else uiRenderQueue . add ( new info.quadtree.rv.graphics.SGF.QueuedImage ( x , ( ( Gdx.graphics . getHeight () ) - y ) , w , h , rot , imgName ) ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/{code}" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public org.springframework.http.ResponseEntity < java.lang.Void > updateProduct ( @ org.springframework.web.bind.annotation.PathVariable ( value = "code" ) long code , @ org.springframework.web.bind.annotation.RequestBody com.IJM.dto.ProductImageDto productImageDto ) { java.lang.System.out . println ( ( "Updating ProductImageDto " + code ) ) ; org.springframework.http.HttpStatus status ; try { productImageService . updateProductImage ( productImageDto , code ) ; status = org.springframework.http.HttpStatus.OK ; } catch ( java.lang.Exception e ) { status = org.springframework.http.HttpStatus.CONFLICT ; } return new org.springframework.http.ResponseEntity < java.lang.Void > ( status ) ; } 
@ java.lang.Override public void runOpMode ( ) throws java.lang.InterruptedException { initialize () ; waitForStart () ; core . forward ( 23 , 0.25 ) ; core . turn ( ( - 5.6 ) , 0.1 ) ; core . forward ( 40 , 0.25 ) ; try { core . alignAndActuateBeaconBlue () ; } catch ( java.util.concurrent.TimeoutException e ) { e . printStackTrace () ; leftDrive . setPower ( 0.0 ) ; rightDrive . setPower ( 0.0 ) ; this . stop () ; } log . close () ; } 
@ java.lang.Override public boolean isCarOccupiedInTime ( java.lang.String carId , java.lang.String start , java.lang.String end ) throws java.lang.Exception { java.util.Iterator < de.hm.edu.carads.models.Campaign > it = this . getAllCampaignsInTime ( start , end ) . iterator () ; de.hm.edu.carads.controller.ApplicationControllerImpl.logger . info ( ( ( ( "is occupied between " + start ) + " and " ) + end ) ) ; while ( it . hasNext () ) { de.hm.edu.carads.controller.ApplicationControllerImpl.logger . info ( "campaign" ) ; de.hm.edu.carads.models.Campaign campaign = it . next () ; if ( campaign . hasFellowAccepted ( carId ) ) return true ; } return false ; } 
private void addSequence ( int seqId , char base ) { if ( this . seqChars . isEmpty () ) { this . base = base ; } else { this . base = null ; this . distribution = null ; } for ( java.lang.Integer sqId : seqChars . keySet () ) if ( sqId == seqId ) return; this . seqChars . put ( seqId , base ) ; } 
public foo.NullableCollectionFieldsBuilder strings ( foo.Iterator < ? extends java.lang.String > strings ) { if ( strings == null ) { this . strings = null ; return this ; } this . strings = new java.util.ArrayList < java.lang.String > () ; while ( strings . hasNext () ) { java.lang.String item = strings . next () ; this . strings . add ( item ) ; } return this ; } 
@ java.lang.Override public com.claymus.commons.shared.UserState getState () { if ( ( state ) != null ) return state ; switch ( status ) { case PRELAUNCH_REFERRAL : case POSTLAUNCH_REFERRAL : return com.claymus.commons.shared.UserState.REFERRAL ; case PRELAUNCH_SIGNUP : case POSTLAUNCH_SIGNUP : case POSTLAUNCH_SIGNUP_SOCIALLOGIN : case ANDROID_SIGNUP : case ANDROID_SIGNUP_FACEBOOK : case ANDROID_SIGNUP_GOOGLE : return com.claymus.commons.shared.UserState.REGISTERED ; } return com.claymus.commons.shared.UserState.REGISTERED ; } 
@ java.lang.Override protected void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_admin ) ; edu.gatech.buzzmovieselector.biz.UserManagementFacade um = new edu.gatech.buzzmovieselector.biz.impl.UserManager () ; java.util.List < edu.gatech.buzzmovieselector.entity.User > userList = um . findAll () ; android.util.Log . v ( "ADMIN ACTIVITY list" , userList . toString () ) ; edu.gatech.buzzmovieselector.controller.util.UserListAdapter adapter = new edu.gatech.buzzmovieselector.controller.util.UserListAdapter ( userList , this ) ; android.widget.ListView listview = ( ( android.widget.ListView ) ( findViewById ( R.id.userListView ) ) ) ; listview . setAdapter ( adapter ) ; } 
private java.lang.StringBuilder getUnderscoredString ( java.lang.StringBuilder builder , java.lang.String simpleName ) { for ( java.lang.String part : org.apache.commons.lang3.StringUtils . splitByCharacterTypeCamelCase ( simpleName ) ) { if ( ( builder . length () ) > 0 ) builder . append ( "_" ) ; builder . append ( part . toLowerCase () ) ; } return builder ; } 
private void addChange ( int start1 , int start2 , int end1 , int end2 ) { com.intellij.util.diff.Diff.Change change = new com.intellij.util.diff.Diff.Change ( start1 , start2 , ( end1 - start1 ) , ( end2 - start2 ) , null ) ; if ( ( myLastChange ) != null ) { myLastChange.link = change ; } else { myFirstChange = change ; } myLastChange = change ; myIndex1 = end1 ; myIndex2 = end2 ; } 
public boolean insertPurchase ( java.lang.String name , float amount ) { android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; android.content.ContentValues vals = new android.content.ContentValues () ; vals . put ( DatabaseContract.PurchaseEntry.COLUMN_NAME , name ) ; vals . put ( DatabaseContract.PurchaseEntry.COLUMN_AMOUNT , amount ) ; db . insert ( DatabaseContract.PurchaseEntry.TABLE_NAME , null , vals ) ; return true ; } 
protected void restoreLockingState ( android.os.Bundle savedInstanceState ) { super . onRestoreInstanceState ( savedInstanceState ) ; this . baseProgressButtonEnabled = savedInstanceState . getBoolean ( "baseProgressButtonEnabled" ) ; this . progressButtonEnabled = savedInstanceState . getBoolean ( "progressButtonEnabled" ) ; this . skipButtonEnabled = savedInstanceState . getBoolean ( "skipButtonEnabled" ) ; this . savedCurrentItem = savedInstanceState . getInt ( "currentItem" ) ; pager . setPagingEnabled ( savedInstanceState . getBoolean ( "nextEnabled" ) ) ; pager . setNextPagingEnabled ( savedInstanceState . getBoolean ( "nextPagingEnabled" ) ) ; pager . setLockPage ( savedInstanceState . getInt ( "lockPage" ) ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { try { android.content.Intent intent = new com.google.android.gms.location.places.ui.PlaceAutocomplete.IntentBuilder ( com.google.android.gms.location.places.ui.PlaceAutocomplete.MODE_FULLSCREEN ) . setFilter ( new com.google.android.gms.location.places.AutocompleteFilter.Builder () . setCountry ( "BR" ) . build () ) . build ( this ) ; startActivityForResult ( intent , com.bdb.bikedeboa.util.Constants.PLACE_AUTOCOMPLETE_REQUEST_CODE ) ; } catch ( com.google.android.gms.common.GooglePlayServicesRepairableException e ) {} catch ( com.google.android.gms.common.GooglePlayServicesNotAvailableException e ) {} } 
private void addSubtitles ( java.util.List < java.nio.file.Path > subtitles , java.nio.file.Path directory ) throws java.io.IOException { java.util.List < java.nio.file.Path > files = java.nio.file.Files . walk ( directory ) . filter ( java.nio.file.Files : : isRegularFile ) . collect ( java.util.stream.Collectors . toList () ) ; for ( java.nio.file.Path tmpFile : files ) { for ( java.lang.String subtitleExtension : subtitleExtensions ) { if ( tmpFile . toString () . endsWith ( subtitleExtension ) ) { subtitles . add ( tmpFile ) ; } } } } 
@ java.lang.Override public org.elasticsearch.search.aggregations.InternalAggregation buildAggregation ( long bucket ) { if ( ( ( valuesSources ) == null ) || ( bucket >= ( samplings . size () ) ) ) { return buildEmptyAggregation () ; } return new org.scaleborn.elasticsearch.linreg.aggregation.stats.InternalStats ( name , ( ( valuesSources . fieldNames () . length ) - 1 ) , samplings . get ( bucket ) , null , pipelineAggregators () , metaData () ) ; } 
public org.biojava.bio.structure.contact.StructureInterfaceList getUniqueInterfaces ( double cutoff ) { org.biojava.bio.structure.contact.StructureInterfaceList set = new org.biojava.bio.structure.contact.StructureInterfaceList () ; if ( ( structure . getChains () . size () ) == 0 ) { org.biojava.bio.structure.xtal.CrystalBuilder.logger . warn ( "No chains present in the structure! No interfaces will be calculated" ) ; return set ; } initialiseVisited () ; calcInterfacesCrystal ( set , cutoff , isCrystallographic ) ; return set ; } 
@ java.lang.Override public synchronized void close () { if ( ( this . sps ) != null ) { sps . free () ; if ( ! ( sps . isUsed () ) ) { sps . close () ; java.lang.String file = outputSpec . getFile () ; if ( file != null ) { io.fabric8.maven.docker.log.DefaultLogCallback.printStreamMap . remove ( file ) ; } } this . sps = null ; } } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { if ( BuildConfig.DEBUG ) { android.os.StrictMode . setVmPolicy ( new android.os.StrictMode.VmPolicy.Builder () . detectAll () . penaltyLog () . penaltyDeath () . build () ) ; } super . onCreate ( savedInstanceState ) ; super . init () ; android.content.Intent intent = getIntent () ; if ( isEvothingsIntent ( intent ) ) { openEvothingsIntent ( intent ) ; } else { super . loadUrl ( com.evothings.evothingsviewer.Config . getStartUrl () ) ; } } 
public void remove () { if ( isEmpty () ) {} else { current = head ; while ( ( current . getNext () . getNext () ) != null ) { current = current . getNext () ; } tail = current ; tail . setNext ( null ) ; } } 
public void setPass () { if ( ( ( phase ) != ( com.trifice.theunderworldsiege.Phase.ACTIVE ) ) || ( ( phase ) != ( com.trifice.theunderworldsiege.Phase.PASSIVE ) ) ) return; if ( ! ( currentPlayers . contains ( this . myPlayer ) ) ) return; selectedCards . clear () ; selectedCards . add ( com.trifice.theunderworldsiege.MainModel.passCard ) ; confirm = 0 ; } 
public void downloadAll ( com.atlauncher.workers.InstanceInstaller installer ) { java.util.concurrent.ExecutorService executor = com.atlauncher.utils.Utils . generateDownloadExecutor () ; for ( com.atlauncher.data.Downloadable dl : this ) { executor . execute ( new com.atlauncher.collection.DownloadPool.Installer ( dl , installer ) ) ; } executor . shutdown () ; if ( this . wait ) { while ( ! ( executor . isTerminated () ) ) {} } } 
public boolean onOptionItemSelected ( android.view.MenuItem item ) { int id = item . getItemId () ; if ( id == ( R.id.action_refresh ) ) { com.example.android.sunshine.app.ForecastFragment.FetchWeatherTask weatherTask = new com.example.android.sunshine.app.ForecastFragment.FetchWeatherTask () ; weatherTask . execute () ; return true ; } return super . onOptionsItemSelected ( item ) ; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) public < T > T deserialze ( com.alibaba.fastjson.parser.DefaultJSONParser parser , java.lang.reflect.Type type , java.lang.Object fieldName ) { java.util.Date date = DateDeserializer.instance . deserialze ( parser , type , fieldName ) ; java.util.Calendar calendar = java.util.Calendar . getInstance () ; calendar . setTime ( date ) ; return ( ( T ) ( calendar ) ) ; } 
public java.lang.String select ( java.lang.String table , java.lang.String . . . columns ) { if ( ( columns == null ) || ( ( columns.length ) <= 0 ) ) return select ( table ) ; java.lang.String queryColumns ; if ( ( columns.length ) == 1 ) { queryColumns = columns [ 0 ] ; } else { queryColumns = cn.dreampie.common.util.Joiner . on ( ", " ) . join ( columns ) ; } return ( ( "SELECT " + queryColumns ) + " FROM " ) + table ; } 
protected void log ( java.util.Map map ) { java.util.Iterator it = map . entrySet () . iterator () ; while ( it . hasNext () ) { java.util.Map.Entry entry = ( ( java.util.Map.Entry ) ( it . next () ) ) ; this . console . printLine ( ( ( ( ( getPluginLogPrefix () ) + ( entry . getKey () ) ) + " : " ) + ( entry . getValue () ) ) ) ; it . remove () ; } } 
public void dragOver ( java.awt.dnd.DropTargetDragEvent dtde ) { java.awt.Point dragPoint = dtde . getLocation () ; javax.swing.tree.TreePath path = getPathForLocation ( dragPoint.x , dragPoint.y ) ; if ( path == null ) dropTargetNode = null ; else dropTargetNode = ( ( javax.swing.tree.TreeNode ) ( path . getLastPathComponent () ) ) ; javax.swing.JTree tree = ( ( javax.swing.JTree ) ( dtde . getDropTargetContext () . getComponent () ) ) ; autoscroll ( tree , dragPoint ) ; repaint () ; } 
private org.ovirt.engine.core.common.action.VdcReturnValueBase executeCommand ( final org.ovirt.engine.core.bll.CommandBase < ? > command , final org.ovirt.engine.core.bll.context.CommandContext cmdContext ) { org.ovirt.engine.core.bll.tasks.interfaces.CommandCallback callback = command . getCallback () ; org.ovirt.engine.core.common.action.VdcReturnValueBase result = org.ovirt.engine.core.bll.utils.BackendUtils . getBackendCommandObjectsHandler ( org.ovirt.engine.core.bll.tasks.CommandExecutor.log ) . runAction ( command , ( cmdContext != null ? cmdContext . getExecutionContext () : null ) ) ; updateCommand ( command , result ) ; return result ; } 
public void init ( byte indexNameId , java.lang.String key , byte entityType , java.util.Map < java.lang.String , java.lang.String > config ) { super . init ( NeoCommandType.INDEX_CREATE_COMMAND , indexNameId , entityType , 0L , key , 0 , 0 , null ) ; this . config = config ; } 
@ java.lang.Override public void handle ( javafx.event.ActionEvent e ) { currentSearch = searchField . getText () ; textAreaNote . setText ( "" ) ; for ( base.Folder f : noteBook . getFolders () ) { if ( f . getName () . equals ( currentFolder ) ) { matchedNotes = f . searchNotes ( currentSearch ) ; } } updateListView () ; } 
@ org.junit.Test public void testGetInnovationID () { int indexOfTest = 0 ; java.util.ArrayList < edu.utexas.cs.nn.evolution.genotypes.TWEANNGenotype.LinkGene > newLinks = new java.util.ArrayList < edu.utexas.cs.nn.evolution.genotypes.TWEANNGenotype.LinkGene > () ; hcppn . loopThroughLinks ( newLinks , cppn , indexOfTest , subs . get ( edu.utexas.cs.nn.evolution.genotypes.HyperNEATCPPNGenotypeTest.sub1Index ) , subs . get ( edu.utexas.cs.nn.evolution.genotypes.HyperNEATCPPNGenotypeTest.sub2Index ) , edu.utexas.cs.nn.evolution.genotypes.HyperNEATCPPNGenotypeTest.sub1Index , edu.utexas.cs.nn.evolution.genotypes.HyperNEATCPPNGenotypeTest.sub2Index , subs ) ; assertEquals ( newLinks . get ( edu.utexas.cs.nn.evolution.genotypes.HyperNEATCPPNGenotypeTest.sub1Index ) . innovation , hcppn . getInnovationID ( edu.utexas.cs.nn.evolution.genotypes.HyperNEATCPPNGenotypeTest.sub1Index , edu.utexas.cs.nn.evolution.genotypes.HyperNEATCPPNGenotypeTest.sub1Index , edu.utexas.cs.nn.evolution.genotypes.HyperNEATCPPNGenotypeTest.sub1Index , subs ) ) ; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) private TKey readObj ( long pos ) throws java.io.EOFException , java.io.IOException , java.lang.ClassNotFoundException { TKey readObject ; try { byte [] buf = new byte [ keySize ] ; raFile . seek ( pos ) ; raFile . readFully ( buf , 0 , keySize ) ; java.io.ObjectInputStream is = new java.io.ObjectInputStream ( new java.io.ByteArrayInputStream ( buf ) ) ; readObject = ( ( TKey ) ( is . readObject () ) ) ; } catch ( java.io.EOFException e ) { readObject = null ; } return readObject ; } 
protected com.cloud.agent.manager.AgentAttache getAttache ( final java.lang.Long hostId ) throws com.cloud.exception.AgentUnavailableException { assert hostId != null : "Who didn't check their id value?" ; if ( hostId == null ) { return null ; } com.cloud.agent.manager.AgentAttache agent = findAttache ( hostId ) ; if ( agent == null ) { com.cloud.agent.manager.AgentManagerImpl.s_logger . debug ( ( "Unable to find agent for " + hostId ) ) ; throw new com.cloud.exception.AgentUnavailableException ( "Unable to find agent " , hostId ) ; } return agent ; } 
protected void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { if ( resultCode == ( RESULT_OK ) ) { android.content.Intent i ; switch ( requestCode ) { case com.example.arjun.nhacks.GroupHardActivity.CAPTURE_IMAGE_ACTIVITY_REQUEST_CODE : android.net.Uri uri = fileUri ; break; } } android.content.Intent inte = new android.content.Intent ( this , com.example.arjun.nhacks.ScanResults . class ) ; startActivity ( inte ) ; } 
public static int getMaxPid ( org.neo4j.graphdb.GraphDatabaseService db ) { org.neo4j.graphdb.Result result = null ; java.lang.String queryString = "match (n) return max(n.P_ID) as mpid " ; result = db . execute ( queryString ) ; java.util.Iterator < java.lang.Integer > n_column = result . columnAs ( "mpid" ) ; if ( n_column . hasNext () ) { return n_column . next () . intValue () ; } return - 1 ; } 
public void saveXmlStringToFile () { try { java.io.FileWriter fileWriter = new java.io.FileWriter ( "ContactsBook.xml" , false ) ; try { fileWriter . write ( this . convertToXmlString () ) ; fileWriter . flush () ; } finally { fileWriter . close () ; } } catch ( java.io.IOException e ) { java.lang.System.out . println ( e . getMessage () ) ; } } 
@ java.lang.Override public java.lang.String process ( org.cbioportal.genomeNexus.models.AnnotatedRecord i ) throws java.lang.Exception { java.lang.String to_write = "" ; for ( java.lang.String field : i . getFieldNames () ) { to_write += ( i . getClass () . getMethod ( ( "get" + field ) ) . invoke ( i ) ) + "\t" ; } for ( java.lang.String additionalValue : i . getAdditionalProperties () . values () ) { to_write += additionalValue + "\t" ; } return to_write . trim () ; } 
private void writeKeyDef ( final org.dita.dost.module.GenMapAndTopicListModule.KeyDef keyDef ) { try { keydef . writeStartElement ( "keydef" ) ; keydef . writeAttribute ( "keys" , keyDef.keys ) ; keydef . writeAttribute ( "href" , keyDef.href ) ; if ( ( keyDef.source ) != null ) { keydef . writeAttribute ( "source" , keyDef.source ) ; } keydef . writeEndElement () ; } catch ( final org.xml.sax.SAXException e ) { logger . logException ( e ) ; } } 
public long importHeritrixCrawl ( java.lang.String jobName , java.lang.Long crawlSeriesId ) { bamboo.io.HeritrixJob job = bamboo.io.HeritrixJob . byName ( config . getHeritrixJobs () , jobName ) ; long crawlId ; try ( bamboo.core.Db db = dbPool . take () ) { crawlId = db . createCrawl ( jobName , crawlSeriesId , Db.IMPORTING ) ; } taskmaster . startImporting () ; return crawlId ; } 
public void lock ( android.content.Context ctx , java.lang.String unlock ) { if ( com.prey.PreyConfig . getPreyConfig ( ctx ) . isFroyoOrAbove () ) { com.prey.PreyConfig . getPreyConfig ( ctx ) . setLock ( true ) ; com.prey.PreyConfig . getPreyConfig ( ctx ) . setUnlockPass ( unlock ) ; com.prey.backwardcompatibility.FroyoSupport . getInstance ( ctx ) . changePasswordAndLock ( unlock , true ) ; com.prey.net.PreyWebServices . getInstance () . sendNotifyActionResultPreyHttp ( ctx , com.prey.json.UtilJson . makeMapParam ( "start" , "lock" , "started" ) ) ; com.prey.PreyConfig . getPreyConfig ( ctx ) . setLastEvent ( "lock_started" ) ; } } 
@ com.sandwich.koan.Koan public void stringCompareIgnoreCase () { java.lang.String str = "I AM a number ONE!" ; com.sandwich.util.Assert . assertEquals ( str . compareToIgnoreCase ( "I AM a number ONE!" ) , com.sandwich.koan.constant.KoanConstants.__ ) ; com.sandwich.util.Assert . assertEquals ( str . compareToIgnoreCase ( "I am a number one!" ) , com.sandwich.koan.constant.KoanConstants.__ ) ; com.sandwich.util.Assert . assertEquals ( str . compareToIgnoreCase ( "I AM A NUMBER ONE!" ) , com.sandwich.koan.constant.KoanConstants.__ ) ; } 
@ java.lang.Override public void onServiceConnected ( android.content.ComponentName componentName , android.os.IBinder service ) { com.example.sdp11.wmd.MainActivity.mBluetoothLEService = ( ( com.example.sdp11.wmd.BluetoothLEService.LocalBinder ) ( service ) ) . getService () ; if ( ! ( com.example.sdp11.wmd.MainActivity.mBluetoothLEService . initialize () ) ) { android.util.Log . i ( com.example.sdp11.wmd.MainActivity.TAG , "Unable to initialize Bluetooth" ) ; finish () ; } com.example.sdp11.wmd.MainActivity.mBluetoothLEService . connect ( com.example.sdp11.wmd.MainActivity.mDeviceAddress ) ; } 
void bind ( android.content.Context context , local.imoroz.gitviewer.model.RepoModel model , boolean fav ) { repoName . setText ( model . getName () ) ; repoDescription . setText ( model . getDescription () ) ; if ( fav ) { repoItemFavImage . setBackground ( android.support.v4.content.ContextCompat . getDrawable ( context , R.drawable.ic_star_black_24dp ) ) ; } } 
public net.minecraft.entity.player.EntityPlayerMP getPlayerOfThis () { if ( ( net.minecraft.server.MinecraftServer . getServer () . getConfigurationManager () . playerEntityList ) != null ) return null ; for ( net.minecraft.entity.player.EntityPlayerMP p : ( ( java.util.List < net.minecraft.entity.player.EntityPlayerMP > ) ( net.minecraft.server.MinecraftServer . getServer () . getConfigurationManager () . playerEntityList ) ) ) if ( p . getGameProfile () . getId () . equals ( this . getUuid () ) ) return p ; return null ; } 
@ java.lang.Override public void onClick ( android.view.View v , at.crud.assistant.models.RecurringAction element ) { at.crud.assistant.models.RecurringAction recurringAction = element ; android.content.Intent intent = new android.content.Intent ( getActivity () , at.crud.assistant.EventsActivity . class ) ; intent . putExtra ( EventsActivity.INTENT_EXTRA_RECURRING_ACTION_ID , recurringAction . getId () ) ; getActivity () . startActivityForResult ( intent , EventsActivity.VIEW_REQUEST_CODE ) ; } 
public double gibYLichtLinks () { double beta = 1 / ( java.lang.Math . tan ( 0.25 ) ) ; double gamma = ( _ausrichtung ) - beta ; double c = 5 / ( java.lang.Math . sin ( beta ) ) ; return ( _yPos ) + ( c * ( java.lang.Math . sin ( gamma ) ) ) ; } 
public boolean isUrlValid ( java.lang.String urlString ) { if ( ! ( android.text.TextUtils . isEmpty ( urlString ) ) ) { java.net.URL url = null ; try { url = new java.net.URL ( urlString ) ; return ( ! ( android.text.TextUtils . isEmpty ( url . getHost () ) ) ) && ( ! ( android.text.TextUtils . isEmpty ( url . getPath () ) ) ) ; } catch ( java.net.MalformedURLException e ) { e . printStackTrace () ; return false ; } } return false ; } 
@ java.lang.Override public void onAnimationEnd ( android.view.animation.Animation animation ) { mImage . clearAnimation () ; edu.chalmers.meetandguess.FrameLayout.LayoutParams layoutParams = ( ( edu.chalmers.meetandguess.FrameLayout.LayoutParams ) ( slot . getLayoutParams () ) ) ; android.view.ViewGroup oldparent = ( ( android.view.ViewGroup ) ( mImage . getParent () ) ) ; oldparent . removeView ( mImage ) ; mImage . setLayoutParams ( layoutParams ) ; parent . addView ( mImage ) ; mImage . setVisibility ( View.VISIBLE ) ; if ( wrongGuess ) overlayIcon ( viewTouched , false ) ; wrongGuess = true ; } 
@ java.lang.Override public void solveMaze3d ( java.lang.String name , algorithms.search.CommonSearcher < algorithms.mazeGenerators.Position > searcher ) { java.lang.Thread thread = new java.lang.Thread ( new java.lang.Runnable () { @ java.lang.Override public void run () { algorithms.mazeGenerators.Maze3d maze = mazeMap . get ( name ) ; algorithms.search.Searchable < algorithms.mazeGenerators.Position > searchableMaze = new algorithm.demo.MazeAdapter ( maze ) ; algorithms.search.Solution < algorithms.mazeGenerators.Position > solution = searcher . search ( searchableMaze ) ; solutionMap . put ( name , solution ) ; controller . notifySolutionIsReady ( name ) ; } } ) ; thread . start () ; threadPool . submit ( thread ) ; } 
private final boolean _log ( simple.util.logging.LogLevel type , java.lang.String ref , java.lang.Object msg , byte options ) { if ( simple.util.logging.Log . isSet ( options , type ) ) return _out . checkError () ; synchronized ( writeSync ) { _out . print ( _getPreMessage ( type ) ) ; _out . print ( _cName ) ; _out . print ( ": " ) ; _out . print ( ref ) ; _out . print ( ": " ) ; _out . println ( msg ) ; } return _out . checkError () ; } 
@ java.lang.Override protected android.support.v4.app.Fragment createFragment () { android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; android.support.design.widget.FloatingActionButton fab = ( ( android.support.design.widget.FloatingActionButton ) ( findViewById ( R.id.fab ) ) ) ; fab . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View view ) { android.support.design.widget.Snackbar . make ( view , "Replace with your own action" , Snackbar.LENGTH_LONG ) . setAction ( "Action" , null ) . show () ; } } ) ; return new com.zaksid.dev.android.training.bignerdranch.criminalintent.CrimeListFragment () ; } 
private static boolean unlock ( java.lang.String lock ) { org.gestore.move.logger . debug ( ( "Releasing lock " + lock ) ) ; try { org.gestore.move.zkInstance . delete ( lock , ( - 1 ) ) ; } catch ( java.lang.Exception E ) { org.gestore.move.logger . debug ( ( "Error releasing lock: " + ( E . toString () ) ) ) ; return true ; } return true ; } 
@ java.lang.Override public boolean init ( com.neverwinterdp.scribengin.scribe.ScribeState state ) { scribeThread = new java.lang.Thread () { public void run () { try { consumeLoop () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } } ; scribeThread . start () ; this . setState ( state ) ; return true ; } 
@ org.junit.Test public void testExtraTokenBug ( ) throws java.io.IOException { java.lang.System.out . println ( "Testing SkrtWordTokenizer()\noutputs an empty token. couldn\'t find a way to prevent this from happening" ) ; java.lang.String input = "divase na" ; java.io.Reader reader = new java.io.StringReader ( input ) ; java.util.List < java.lang.String > expected = java.util.Arrays . asList ( "divasa" , "" , "na" ) ; java.lang.System.out . println ( ( "0 " + input ) ) ; io.bdrc.lucene.sa.SkrtWordTokenizer skrtWordTokenizer = new io.bdrc.lucene.sa.SkrtWordTokenizer ( "src/test/resources/tries/aTa_test.txt" ) ; org.apache.lucene.analysis.TokenStream syllables = io.bdrc.lucene.sa.SanskritAnalyzerTest . tokenize ( reader , skrtWordTokenizer ) ; io.bdrc.lucene.sa.SanskritAnalyzerTest . assertTokenStream ( syllables , expected ) ; } 
public static void displaySudoku ( Cell [] [] sudoku ) { for ( int x = 0 ; x < 9 ; x ++ ) { for ( int y = 0 ; y < 9 ; y ++ ) { Dimension dime = new Dimension () ; dime.x = x ; dime.y = y ; java.lang.System.out . print ( DimensionUtil . getCell ( sudoku , dime ) . getCellValue () ) ; } java.lang.System.out . println ( " " ) ; } } 
@ org.junit.Test public void shouldReturnSingleElementWhenPropertyIsNotAnArray () { final java.util.Properties input = createDummyProperties ( "key" , "singleValue" ) ; final java.util.Optional < java.lang.String [] > actual = tested . getArray ( input , "key" , "," ) ; org.assertj.core.api.Assertions . assertThat ( actual ) . isNotEmpty () ; org.assertj.core.api.Assertions . assertThat ( actual ) . contains ( new java.lang.String [] { "singleValue" } ) ; } 
public edu.princeton.cs.algs4.Point2D nearest ( edu.princeton.cs.algs4.Point2D p ) { edu.princeton.cs.algs4.Point2D ans = container . min () ; double mindist = ans . distanceSquaredTo ( p ) ; for ( edu.princeton.cs.algs4.Point2D item : container ) { if ( ( item . distanceSquaredTo ( p ) ) < mindist ) ans = item ; } return ans ; } 
@ android.support.annotation.Nullable private org.dvbviewer.controller.entities.Channel getMatchedChannel ( java.util.List < org.dvbviewer.controller.entities.ChannelRoot > channelRoots , long favId ) { for ( org.dvbviewer.controller.entities.ChannelRoot roots : channelRoots ) { for ( org.dvbviewer.controller.entities.ChannelGroup group : roots . getGroups () ) { for ( org.dvbviewer.controller.entities.Channel chan : group . getChannels () ) { if ( ( chan . getChannelID () ) == favId ) { return chan ; } } } } return null ; } 
public void reinit () { for ( uk.ac.lincoln.games.nlfs.logic.Team t : teams ) { t . reinit ( this ) ; } for ( uk.ac.lincoln.games.nlfs.logic.Match m : fixtures ) m . reinit ( this ) ; for ( uk.ac.lincoln.games.nlfs.logic.LeagueTableItem lti : table ) lti . reinit ( this ) ; resetLeagueTable () ; } 
public void checkrepeated ( Point [] points ) { Point [] axl = java.util.Arrays . copyOf ( points , points.length ) ; java.util.Arrays . sort ( axl ) ; for ( int i = 0 ; i < ( ( axl.length ) - 1 ) ; i ++ ) { if ( ( axl [ i ] . compareTo ( axl [ ( i + 1 ) ] ) ) == 0 ) throw new java.lang.IllegalArgumentException () ; } } 
public boolean isHealthCheckExists ( java.lang.String healthCheckName ) { try { org.apache.stratos.gce.extension.HttpHealthCheckList httpHealthCheckList = org.apache.stratos.gce.extension.GCEOperations.compute . httpHealthChecks () . list ( org.apache.stratos.gce.extension.GCEOperations.PROJECT_ID ) . execute () ; for ( org.apache.stratos.gce.extension.HttpHealthCheck httpHealthCheck : httpHealthCheckList . getItems () ) { if ( httpHealthCheck . getName () . equals ( healthCheckName ) ) { return true ; } } } catch ( java.io.IOException e ) { e . printStackTrace () ; } return false ; } 
public com.webstore.model.Product getProduct () { java.util.List < com.webstore.model.Product > pro = ( ( java.util.List < com.webstore.model.Product > ) ( com.webstore.model.Factory . getProducts () . values () ) ) ; for ( com.webstore.model.Product p : pro ) { if ( ( p . getId () ) == ( this . productId ) ) { this . product = p ; break; } } return this . product ; } 
@ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.MONITOR ) public void onPrisonPearlEvent ( com.untamedears.PrisonPearl.events.PrisonPearlEvent event ) { if ( ( event . getType () ) == ( PrisonPearlEvent.Type.NEW ) ) { java.util.UUID uuid = event . getPrisonPearl () . getImprisonedId () ; portaled_players . remove ( uuid ) ; mysqlStorage . removePortaledPlayer ( uuid ) ; dirty = true ; } } 
private static void wrapProducerSend ( java.lang.String previousChange , java.lang.String urlContent ) { java.text.DateFormat df = new java.text.SimpleDateFormat ( "dd/MM/yy HH:mm:ss" ) ; java.util.Date dateobj = new java.util.Date () ; IngestKafka.producer . send ( new org.apache.kafka.clients.producer.ProducerRecord < java.lang.String , java.lang.String > ( IngestKafka.topic , ( ( df . format ( dateobj ) ) + previousChange ) , "test string" ) ) ; } 
public java.lang.String toString () { java.lang.String output ; output = "Number of non-duplidate First objects: " + ( countUniqueFirst () ) ; output += "\nTotal Number of First objects: " + ( countAllFirst () ) ; output += "\nNumber of non-duplidate Second objects: " + ( countUniqueSecond () ) ; output += "\nTotal Number of Second objects: " + ( countAllSecond () ) ; output += "\n" ; return output ; } 
public static RtcModel.Stack rtcStack ( org.netbeans.modules.cnd.debugger.dbx.rtc.RtcModel model , org.netbeans.modules.cnd.debugger.dbx.rtc.GPDbxStack gstack ) { org.netbeans.modules.cnd.debugger.dbx.rtc.RtcModel.Stack rstack = model . newStack ( gstack.nframes ) ; for ( int fx = 0 ; fx < ( gstack.nframes ) ; fx ++ ) rstack . setFrame ( fx , org.netbeans.modules.cnd.debugger.dbx.rtc.GpRtcUtil . rtcFrame ( gstack.frame [ fx ] ) ) ; return rstack ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_friends_list ) ; friendsList = ( ( android.widget.ListView ) ( findViewById ( R.id.friend_list ) ) ) ; goToUser = ( ( android.widget.TextView ) ( findViewById ( R.id.username ) ) ) ; goToUser . setOnClickListener ( this ) ; friends = new java.util.ArrayList <> () ; getFriends () ; } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { android.util.Log . d ( LOG_TAG , java.lang.Thread . currentThread () . getStackTrace () [ 2 ] . getMethodName () ) ; com.example.sun1.popularmovie.poster_adapter adapter = new com.example.sun1.popularmovie.poster_adapter ( getContext () , R.layout.poster_item_layout , movieInfoList ) ; android.view.View rootView = inflater . inflate ( R.layout.activity_main_fragment , container , false ) ; android.widget.GridView gridView = ( ( android.widget.GridView ) ( rootView . findViewById ( R.id.gridview ) ) ) ; gridView . setAdapter ( adapter ) ; return rootView ; } 
private void startNotificationServer () { android.content.Intent serviceIntent = new android.content.Intent ( this , mapper.mobile.om.mobilemapper.service.MobileNotificationService . class ) ; if ( ! ( isMyServiceRunning ( mapper.mobile.om.mobilemapper.service.MobileNotificationService . class ) ) ) { android.util.Log . d ( this . getClass () . getSimpleName () , "MobileNotificationService Service is not Running so Starting" ) ; serviceIntent . setAction ( Constants.ACTION.STARTFOREGROUND_ACTION ) ; mapper.mobile.om.mobilemapper.service.MobileNotificationService.IS_SERVICE_RUNNING = true ; startService ( serviceIntent ) ; } } 
@ java.lang.Override public void onUpdate ( android.content.Context context , android.appwidget.AppWidgetManager appWidgetManager , int [] appWidgetIds ) { final int N = appWidgetIds.length ; int i = 1 ; for ( int appWidgetId : appWidgetIds ) { sturmtruppen.com.trafficwidget.TrafficWidget . updateAppWidget ( context , appWidgetManager , appWidgetId ) ; android.widget.Toast . makeText ( context , ( ( ( "onUpdate(): " + ( java.lang.String . valueOf ( i ) ) ) + " : " ) + ( java.lang.String . valueOf ( appWidgetId ) ) ) , Toast.LENGTH_LONG ) . show () ; i ++ ; } } 
@ java.lang.Override public void run () { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat ( "EEEE, dd MMMM yyyy HH:mm:ss" ) ; java.util.Date resultdate = new java.util.Date ( networkTS ) ; android.widget.Toast toast = android.widget.Toast . makeText ( getActivity () . getApplicationContext () , ( "+networkTS+:" + ( sdf . format ( resultdate ) ) ) , Toast.LENGTH_LONG ) ; toast . setGravity ( Gravity.TOP , 0 , 0 ) ; toast . show () ; getActivity () . runOnUiThread ( new java.lang.Runnable () { @ java.lang.Override public void run () { addItemsToMap () ; } } ) ; } 
public static void main ( java.lang.String [] args ) { java.util.ArrayList < java.lang.Integer > list = new java.util.ArrayList < java.lang.Integer > () ; list . add ( 0 , 6 ) ; list . add ( 1 , 4 ) ; list . add ( 2 , 39 ) ; list . add ( 3 , 1 ) ; java.lang.System.out . println ( list . toString () ) ; } 
static oop.ex6.main.Variable createParameter ( java.lang.String type , java.lang.String name , int lineNumber , boolean isFinal , int depth ) throws oop.ex6.main.IllegalException { oop.ex6.main.Variable . verifyLegalityVariableName ( name , lineNumber , depth ) ; oop.ex6.main.Variable variable = new oop.ex6.main.Variable ( type , name , lineNumber , isFinal ) ; variable.hasValue = true ; return variable ; } 
public void BEQ ( char operand ) { if ( ( z ) == 1 ) { tick () ; pc += operand ; if ( ( ( ( pc ) - operand ) & 3840 ) != ( ( pc ) & 3840 ) ) { tick () ; } pc -= 2 ; } } 
public static final boolean safeDeleteFile ( java.io.File file ) { if ( file == null ) { return true ; } android.util.Log . i ( com.tencent.tinker.loader.shareutil.SharePatchFileUtil.TAG , ( "safeDeleteFile, try to delete path: " + ( file . getPath () ) ) ) ; if ( file . exists () ) { boolean deleted = file . delete () ; if ( ! deleted ) { android.util.Log . e ( com.tencent.tinker.loader.shareutil.SharePatchFileUtil.TAG , ( "Failed to delete file, try to delete when exit. path: " + ( file . getPath () ) ) ) ; file . deleteOnExit () ; } return deleted ; } return true ; } 
@ java.lang.Override public void create ( oalex.uni.databases.model.WorkSkill workSkill ) { if ( ( workSkillDAO . findWorkSkillWithAllIds ( workSkill . getWorker () . getId () , workSkill . getEmployer () . getId () , workSkill . getJob () . getId () ) ) == null ) { workSkillDAO . create ( workSkill ) ; } } 
@ java.lang.Override public void onAnimationEnd ( android.animation.Animator animation ) { android.view.View v = ( ( android.view.View ) ( ( ( android.animation.ObjectAnimator ) ( animation ) ) . getTarget () ) ) ; if ( ( v . getY () ) == ( _minY ) ) { com.gradians.prepwell.dom.Deck current = com.gradians.prepwell.dom.Dealer . getCurrentDeck () ; com.gradians.prepwell.gui.PlaypenControls controls = com.gradians.prepwell.dom.Dealer . getContext () . getControls () ; controls . showFor ( current ) ; } } 
@ java.lang.Override public void onDismissNoAction ( java.lang.Object actionData ) { org.chromium.chrome.browser.offlinepages.OfflinePageUtils.SnackbarButtonType buttonType = ( ( org.chromium.chrome.browser.offlinepages.OfflinePageUtils.SnackbarButtonType ) ( actionData ) ) ; switch ( buttonType ) { case NONE : break; case RELOAD : org.chromium.base.metrics.RecordUserAction . record ( "OfflinePages.ReloadButtonNotClicked" ) ; break; case SAVE : org.chromium.base.metrics.RecordUserAction . record ( "OfflinePages.SaveButtonNotClicked" ) ; break; default: assert false ; break; } } 
public boolean beats ( Blackjack.Hand other ) { int myScore = getTotalPoints () ; if ( myScore > 21 ) { return false ; } int otherScore = other . getTotalPoints () ; if ( otherScore > myScore ) { return false ; } return true ; } 
public com.example.finalproject.shottestpath.Vertex drawPath ( com.example.finalproject.shottestpath.Vertex Node ) { java.util.LinkedList < com.example.finalproject.shottestpath.Vertex > linePath = getPath ( Node , endNode ) ; pathview . setPath ( linePath ) ; android.util.Log . i ( "Linklist" , linePath . toString () ) ; if ( ( endNode ) == null ) { return null ; } return linePath . get ( 1 ) ; } 
public boolean orderTimesReduce ( java.lang.String player , java.lang.String orderNo ) { int current = getRemain ( player , orderNo ) ; if ( current < 1 ) return false ; java.lang.String sql = java.lang.String . format ( "UPDATE %s SET %s = %d WHERE %s = \"%s\";" , TABLE , orderNo , ( current - 1 ) , PLAYER , player ) ; try ( java.sql.Statement statement = com.gmail.edenthink.tools.Driver . getConnection () . createStatement () ) { statement . executeUpdate ( sql ) ; } catch ( java.sql.SQLException e ) { java.lang.System.err . print ( com.gmail.edenthink.tools.Util . printSQLError ( e ) ) ; } return true ; } 
private void handleIntent ( android.content.Intent intent ) { if ( Intent.ACTION_SEARCH . equals ( intent . getAction () ) ) { java.lang.String query = intent . getStringExtra ( SearchManager.QUERY ) ; android.database.Cursor cursor = mSqlHelper . searchHeroListForHeroName ( query ) ; mCursorAdapter . changeCursor ( cursor ) ; mCursorAdapter . notifyDataSetChanged () ; } } 
private java.lang.String createResetPasswordUrl ( java.lang.Long userId , java.util.Locale locale ) { java.lang.String temporaryToken = tokenCache . generateTemporaryToken ( userId . toString () , ( ( 10 * 60 ) * 1000 ) ) ; java.lang.String pageUrl = java.lang.String . format ( "%s/html/reset_password.html" , baseUrl ) ; return java.lang.String . format ( "%s?id=%s&token=%s&language=%s" , userId , pageUrl , temporaryToken , locale . getLanguage () ) ; } 
private void pause () { if ( pendingPause . compareAndSet ( true , false ) ) { synchronized ( lock ) { try { lock . wait () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } } else {} } 
public java.util.Collection < org.reactome.web.diagram.data.interactors.model.InteractorLink > getDiagramInteractions ( java.lang.String resource , org.reactome.web.diagram.data.layout.Node node ) { org.reactome.web.diagram.util.MapSet < org.reactome.web.diagram.data.layout.Node , org.reactome.web.diagram.data.interactors.model.InteractorLink > cache = interactionsPerNode . get ( resource ) ; if ( cache != null ) return cache . getElements ( node ) ; return new java.util.HashSet <> () ; } 
public void onLocationChanged ( android.location.Location location ) { if ( location != null ) { android.util.Log . d ( "Location Changed" , ( ( ( location . getLatitude () ) + " and " ) + ( location . getLongitude () ) ) ) ; mLocationManager . removeUpdates ( this ) ; java.lang.String loc_str = ( ( location . getLatitude () ) + "_" ) + ( location . getLongitude () ) ; } } 
public static ai.h2o.cascade.Val eval ( java.lang.String cascade , ai.h2o.cascade.CascadeSession session ) { if ( water.util.StringUtils . isNullOrEmpty ( cascade ) ) return new ai.h2o.cascade.ValNull () ; ai.h2o.cascade.asts.AstNode ast = ai.h2o.cascade.Cascade . parse ( cascade ) ; ai.h2o.cascade.Val result = ast . exec ( session . globalScope () ) ; session . cleanCorporealFrameRegistry () ; ai.h2o.cascade.stdlib.core.FnLet let = ( ( ai.h2o.cascade.stdlib.core.FnLet ) ( session . globalScope () . lookupVariable ( "let" ) ) ) ; let . apply ( "_" , result ) ; return result ; } 
protected final java.lang.String getHtml ( java.lang.String name , int maxlength , java.lang.String defaultvalue ) { java.lang.String html = getHtml ( name ) ; if ( ! ( org.giiwa.core.bean.X . isEmpty ( html ) ) ) { if ( ( html . getBytes () . length ) >= maxlength ) { html = org.giiwa.core.base.Html . create ( html ) . text ( maxlength ) ; } } else { html = defaultvalue ; } return html ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( isFavorite ) { dbAdapter . deleteMovie ( movieObject . getId () ) ; favoriteButton . setText ( getActivity () . getResources () . getString ( R.string.favorite ) ) ; isFavorite = false ; } else { dbAdapter . insertMovie ( movieObject ) ; favoriteButton . setText ( getActivity () . getResources () . getString ( R.string.unfavorite ) ) ; isFavorite = true ; } } 
@ java.lang.Override public boolean compacted ( final java.util.concurrent.Callable < java.lang.Boolean > setHead ) throws java.lang.Exception { final com.google.common.base.Stopwatch w = com.google.common.base.Stopwatch . createUnstarted () ; java.util.concurrent.Callable < java.lang.Boolean > c = new java.util.concurrent.Callable < java.lang.Boolean > () { @ java.lang.Override public java.lang.Boolean call ( ) throws java.lang.Exception { org.apache.jackrabbit.oak.plugins.segment.SegmentNodeStoreBuilder.LOG . info ( "Waited {} microseconds for compaction lock" , w . elapsed ( java.util.concurrent.TimeUnit.MICROSECONDS ) ) ; return setHead . call () ; } } ; w . start () ; return segmentStore . locked ( true , c , lockWaitTime , java.util.concurrent.TimeUnit.SECONDS ) ; } 
public void clearLoadList ( java.lang.String directory ) throws com.linkedpipes.etl.executor.api.v1.LpException { try ( java.sql.Connection connection = getSqlConnection () ) { try ( java.sql.PreparedStatement statement = com.linkedpipes.plugin.exec.virtuoso.SqlExecutor . prepareClearStatement ( connection , directory ) ) { statement . executeUpdate () ; } } catch ( java.sql.SQLException ex ) { throw exceptionFactory . failure ( "Can't clear loading table." , ex ) ; } } 
public void done ( java.util.List < com.tomaszow.hackathon.hackathon.model.Measurement > itemList , com.parse.ParseException e ) { if ( e == null ) { java.lang.String firstItemId = itemList . get ( 0 ) . getObjectId () ; mProgressStatus = itemList . size () ; nearbyPeople . addAll ( itemList ) ; mProgress . setVisibility ( View.INVISIBLE ) ; } else { android.util.Log . d ( "item" , ( "Error: " + ( e . getMessage () ) ) ) ; } } 
private void publishProgress ( final yzx.ook.lib.OKDownLoadCallback callback , final long total , final long current ) { android.util.Log . e ( "---->>" , ( ( total + "    " ) + current ) ) ; mHandler . post ( new java.lang.Runnable () { public void run () { try { callback . onProgress ( ( ( int ) ( ( 1000 * current ) / total ) ) ) ; } catch ( java.lang.Exception e ) { callback . onProgress ( 1000 ) ; } } } ) ; } 
public static boolean getConfig ( java.lang.String key , boolean default_val ) { java.lang.String value = org.loklak.data.DAO.config . getProperty ( key ) ; return value == null ? default_val : ( ( value . equals ( "true" ) ) || ( value . equals ( "on" ) ) ) || ( value . equals ( "1" ) ) ; } 
private void doClose ( boolean cancellable ) { java.util.Iterator < T > i ; if ( ( i = iter ) != null ) { iter = null ; if ( i instanceof java.lang.AutoCloseable ) { try { ( ( java.lang.AutoCloseable ) ( i ) ) . close () ; } catch ( java.lang.Exception e ) { throw new org.apache.ignite.IgniteException ( e ) ; } } } else if ( cancellable && ( ( cancel ) != null ) ) cancel . apply () ; } 
@ java.lang.Override public org.luaj.vm2.Varargs execute ( org.luaj.vm2.Varargs varargs ) { org.bukkit.block.Block block = getApi () . getEntity () . getEntity () . getLocation () . getBlock () ; getApi () . moveTo ( getApi () . getLocation () . clone () . add ( 0 , 1 , 0 ) , false ) ; block . setType ( de.craften.plugins.educraft.luaapi.functions.PlaceBlockFunction . getMaterial ( varargs . checkjstring ( 1 ) ) ) ; return org.luaj.vm2.LuaValue.NIL ; } 
@ java.lang.Override protected void initView ( android.view.View view , android.os.Bundle savedInstanceState ) { mActivity.mProgressBar . setVisibility ( View.VISIBLE ) ; android.support.v7.widget.LinearLayoutManager layoutManager = new android.support.v7.widget.LinearLayoutManager ( mActivity ) ; layoutManager . setOrientation ( LinearLayoutManager.VERTICAL ) ; recyclerView . setLayoutManager ( layoutManager ) ; recyclerView . setHasFixedSize ( true ) ; recyclerView . addItemDecoration ( new com.clem.nhkradio.view.DividerItemDecoration ( getActivity () , com.clem.nhkradio.view.DividerItemDecoration.VERTICAL_LIST ) ) ; } 
public void run () { while ( true ) { android.bluetooth.BluetoothSocket socket = null ; try { socket = mmServerSocket . accept () ; connectedThread = new com.bluetooth.icollect.bluetooth.MainActivity.ConnectedThread ( socket ) ; connectedThread . start () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; break; } } } 
private void checkEvents () { if ( currentTime . equals ( nextStartEventTime ) ) { timer.Event currentEvent = futureEvents . first () ; futureEvents . remove ( currentEvent ) ; pastEvents . add ( currentEvent ) ; new java.lang.Thread ( currentEvent ) . start () ; nextStartEventTime = futureEvents . first () . getEventStartTime () ; checkEvents () ; } } 
java.lang.String runFormatter ( org.eclipse.jdt.core.formatter.CodeFormatter codeFormatter , java.lang.String source , int kind , int indentationLevel , org.eclipse.jface.text.IRegion [] regions , java.lang.String lineSeparator ) { org.eclipse.text.edits.TextEdit edit = codeFormatter . format ( kind , source , regions , indentationLevel , lineSeparator ) ; if ( edit == null ) return null ; return org.eclipse.jdt.internal.core.util.Util . editedString ( source , edit ) ; } 
public void onRadioSelected ( android.view.View view ) { android.widget.RadioGroup options = ( ( android.widget.RadioGroup ) ( findViewById ( R.id.campaign_options ) ) ) ; android.widget.RadioButton option = ( ( android.widget.RadioButton ) ( findViewById ( options . getCheckedRadioButtonId () ) ) ) ; java.lang.String hint = ( ( java.lang.String ) ( option . getHint () ) ) ; android.widget.Toast . makeText ( getApplicationContext () , ( "Value:" + hint ) , Toast.LENGTH_SHORT ) . show () ; } 
@ org.junit.Test public void getFromCluster ( ) throws java.lang.Exception { gr.ru.dao.User [] clusters = hashMapDB . getFromCluster ( 8 , 10 , 3 , 4 ) ; org.junit.Assert . assertEquals ( gr.ru.gutil.SETUP_POINTS_IN_VIEW , clusters.length ) ; clusters = hashMapDB . getFromCluster ( 14 , 37 , 11 , 33 ) ; org.junit.Assert . assertTrue ( ( ( ( clusters.length ) > 1 ) && ( ( clusters.length ) <= 30 ) ) ) ; } 
private void RemoveUser ( UserProfile user ) { if ( ( first ) == user ) { UserProfile temp = first.NextUser ; first.NextUser = null ; first = temp ; } else { UserProfile currentuser = first ; while ( ( currentuser.NextUser ) != user ) { currentuser = currentuser.NextUser ; } currentuser.NextUser = currentuser.NextUser.NextUser ; } } 
@ com.google.common.annotations.VisibleForTesting void checkOutputFormatWithDescriptionFormat ( org.n52.sos.ds.hibernate.entities.Procedure procedure , java.lang.String requested , java.lang.String descriptionFormat ) throws org.n52.sos.ogc.ows.OwsExceptionReport { if ( ( ( ! ( requested . equalsIgnoreCase ( descriptionFormat ) ) ) && ( ! ( ( isSensorMLFormat ( descriptionFormat ) ) && ( isSensorMLFormat ( requested ) ) ) ) ) && ( ! ( existConverter ( descriptionFormat , requested ) ) ) ) { throw new org.n52.sos.exception.ows.InvalidParameterValueException () . at ( SosConstants.DescribeSensorParams.procedure ) . withMessage ( "The value of the output format is wrong and has to be %s for procedure %s" , descriptionFormat , procedure . getIdentifier () ) . setStatus ( HTTPStatus.BAD_REQUEST ) ; } } 
public double classify ( weka.core.Instance instance ) { double resultClass ; weka.core.Instances neighbors = findNearestNeighbors ( instance , m_currK ) ; java.lang.System.out . println ( ( "using M_Dist: " + ( M_DISTFUNC ) ) ) ; if ( ( M_DISTFUNC ) == ( hw4.Knn.NON_WEIGHTED ) ) resultClass = getClassVoteResult ( neighbors ) ; else resultClass = getWeightedClassVoteResult ( neighbors , instance ) ; return resultClass ; } 
private void stoppingPoseDetection () { if ( cbStoppingPose . getSelectedItem () . equals ( "Crossed Hands" ) ) { coor . stopRecordingUsers ( PoseType.CROSSED_HANDS ) ; } else if ( cbStoppingPose . getSelectedItem () . equals ( "PSI" ) ) { coor . stopRecordingUsers ( PoseType.PSI ) ; } else if ( cbStartingPose . getSelectedItem () . equals ( "Manual" ) ) { coor . stopRecordingUsers ( null ) ; } } 
public void setTitle ( java.lang.String title ) { if ( title == null ) { throw new java.lang.NullPointerException () ; } if ( description . equals ( "" ) ) { throw new java.lang.IllegalArgumentException () ; } this . title = title ; setChanged () ; notifyObservers ( title ) ; } 
public void checkoutCommit ( final java.lang.String commitName ) { me.sheimi.sgit.repo.tasks.repo.CheckoutTask checkoutTask = new me.sheimi.sgit.repo.tasks.repo.CheckoutTask ( mRepo , commitName , new me.sheimi.sgit.repo.tasks.SheimiAsyncTask.AsyncTaskPostCallback () { @ java.lang.Override public void onPostExecute ( java.lang.Boolean isSuccess ) { mActivity . reset ( commitName ) ; } } ) ; checkoutTask . executeTask () ; } 
public Item removeLast () { if ( isEmpty () ) throw new java.util.NoSuchElementException () ; Item oldLastItem = last.item ; last = last.preview ; last.next = null ; if ( ( n ) == 2 ) first = last ; ( n ) -- ; return oldLastItem ; } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; mUserLearnedDrawer = com.aspsine.zhihu.daily.util.SharedPrefUtils . isUserLearnedDrawer ( getActivity () ) ; if ( savedInstanceState != null ) { mCurrentSelectedPosition = savedInstanceState . getInt ( com.aspsine.zhihu.daily.ui.fragment.NavigationFragment.STATE_SELECTED_POSITION ) ; mFromSavedInstanceState = true ; } mThemes = new java.util.ArrayList < com.aspsine.zhihu.daily.model.Theme > () ; mAdapter = new com.aspsine.zhihu.daily.ui.adapter.NavigationDrawerAdapter ( mThemes ) ; mAdapter . setNavigationDrawerCallbacks ( this ) ; } 
public textbuddytemp.model.TaskList getTasksByTags ( java.util.ArrayList < java.lang.String > tags ) { textbuddytemp.model.TaskList tasks = new textbuddytemp.model.TaskList () ; if ( tags . isEmpty () ) { return this ; } for ( textbuddytemp.model.Task i : listOfTasks ) { for ( java.lang.String tag : i . getTags () ) { if ( tags . contains ( tag ) ) { tasks . addTask ( i ) ; continue; } } } return tasks ; } 
public void escribir ( java.lang.String string ) { byte [] buffer = string . getBytes () ; try { outputStream . write ( buffer ) ; } catch ( java.io.IOException e ) { android.util.Log . e ( com.utn.juanignacio.utnecgv10.HiloConexion2.TAG , "HiloConexion.escribir(): Error al realizar la escritura" , e ) ; cancelarConexion () ; } } 
public void getConversationList ( org.json.JSONArray data , org.apache.cordova.CallbackContext callback ) { java.util.List < cn.jpush.im.android.api.model.Conversation > conversationList = cn.jpush.im.android.api.JMessageClient . getConversationList () ; if ( conversationList != null ) { java.lang.String json = mGson . toJson ( conversationList ) ; android.util.Log . i ( cn.jmessage.phonegap.JMessagePlugin.TAG , ( "----->" + json ) ) ; callback . success ( json ) ; } else { callback . error ( "Conversation list not find." ) ; } } 
@ java.lang.Override public void onEnable () { if ( ( se.fredsfursten.eithonfixesplugin.EithonFixesPlugin.configuration ) == null ) { se.fredsfursten.eithonfixesplugin.EithonFixesPlugin.configuration = new se.fredsfursten.plugintools.PluginConfig ( this , "config.yml" ) ; } else { se.fredsfursten.eithonfixesplugin.EithonFixesPlugin.configuration . load () ; } se.fredsfursten.eithonfixesplugin.EithonFixesPlugin.EithonFixestorageFile = new java.io.File ( getDataFolder () , "EithonFixes.bin" ) ; getServer () . getPluginManager () . registerEvents ( this , this ) ; se.fredsfursten.eithonfixesplugin.Fixes . get () . enable ( this ) ; se.fredsfursten.eithonfixesplugin.Commands . get () . enable ( this ) ; se.fredsfursten.plugintools.ConfigurableFormat . enable ( se.fredsfursten.eithonfixesplugin.EithonFixesPlugin . getPluginConfig () ) ; } 
private void manageAddingFunctions () { susceptibleRooms . remove ( entranceRoom ) ; susceptibleRooms . remove ( exitRoom ) ; roomRegions . remove ( entranceRoom ) ; roomRegions . remove ( exitRoom ) ; addPowerUps ( 2 ) ; if ( ( MyActivity.canvas.myActivity.level ) > 0 ) { addExitDoor ( 4 ) ; addPassageDoor ( 2 ) ; } } 
public void playerMove () { if ( ( ( playerLocation ) + ( Board.MOVESPEED ) ) >= ( Board.BOARDSIZE ) ) { setupLevel () ; } else if ( ( squares [ ( ( playerLocation ) + ( Board.MOVESPEED ) ) ] . isOccupied ) == false ) { squares [ playerLocation ] . moveContents ( squares [ ( ( playerLocation ) + ( Board.MOVESPEED ) ) ] ) ; playerLocation += Board.MOVESPEED ; } } 
@ org.junit.Test public void testSignMultipleApksOverwrite ( ) throws java.lang.Exception { java.util.List < java.io.File > uApks = at.favre.tools.apksigner.SignToolTest . copyToTestPath ( originalFolder , unsingedApks ) ; java.lang.String cmd = ( ( ( ( "-" + ( at.favre.tools.apksigner.ui.CLIParser.ARG_APK_FILE ) ) + " " ) + ( originalFolder . getAbsolutePath () ) ) + " --overwrite --" ) + ( at.favre.tools.apksigner.ui.CLIParser.ARG_SKIP_ZIPALIGN ) ; at.favre.tools.apksigner.SignToolTest . testAndCheck ( cmd , originalFolder , uApks ) ; } 
private static org.mapsforge.map.layer.cache.TileCache createTileCache () { org.mapsforge.map.layer.cache.TileCache firstLevelTileCache = new org.mapsforge.map.layer.cache.InMemoryTileCache ( 128 ) ; java.io.File cacheDirectory = new java.io.File ( java.lang.System . getProperty ( "java.io.tmpdir" ) , "mapsforge" ) ; org.mapsforge.map.layer.cache.TileCache secondLevelTileCache = new org.mapsforge.map.layer.cache.FileSystemTileCache ( 1024 , cacheDirectory , org.mapsforge.map.swing.MapViewer.GRAPHIC_FACTORY ) ; return new org.mapsforge.map.layer.cache.TwoLevelTileCache ( firstLevelTileCache , secondLevelTileCache ) ; } 
@ java.lang.Override public android.view.View getView ( int position , android.view.View convertView , android.view.ViewGroup parent ) { com.group.creation.domisol.diary.calendar.CalendarItemView itemView ; if ( convertView == null ) { itemView = new com.group.creation.domisol.diary.calendar.CalendarItemView ( context , calendarItems . get ( position ) ) ; } else { itemView = ( ( com.group.creation.domisol.diary.calendar.CalendarItemView ) ( convertView ) ) ; } if ( ( ( calendarItems . size () ) + 1 ) > position ) itemView . setContents ( calendarItems . get ( position ) . getContents () ) ; return itemView ; } 
private seedu.malitio.logic.parser.Command prepareDelete ( java.lang.String args ) { java.lang.String index = parseIndex ( args ) ; char taskType = index . charAt ( 0 ) ; int taskNum = java.lang.Integer . parseInt ( index . substring ( 1 ) ) ; if ( index . isEmpty () ) { return new seedu.malitio.logic.parser.IncorrectCommand ( java.lang.String . format ( seedu.malitio.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT , DeleteCommand.MESSAGE_USAGE ) ) ; } return new seedu.malitio.logic.parser.DeleteCommand ( taskNum ) ; } 
public static void arcade () { Systems.DriveBase.right_speed = ( ( - ( Joysticks.ly ) ) + ( Joysticks.lx ) ) / ( Systems.DriveBase.speed_down ) ; Systems.DriveBase.left_speed = ( ( Joysticks.ly ) + ( Joysticks.ly ) ) / ( Systems.DriveBase.speed_down ) ; if ( Joysticks.lb ) { Systems.DriveBase.left_speed = ( Systems.DriveBase.left_speed ) * 2 ; Systems.DriveBase.right_speed = ( Systems.DriveBase.right_speed ) * 2 ; } Systems.DriveBase.left1 . set ( Systems.DriveBase.left_speed ) ; Systems.DriveBase.left2 . set ( Systems.DriveBase.left_speed ) ; Systems.DriveBase.right1 . set ( Systems.DriveBase.right_speed ) ; Systems.DriveBase.right2 . set ( Systems.DriveBase.right_speed ) ; Systems.DriveBase . dashboard () ; } 
@ java.lang.Override protected void testDecimal () { org.molgenis.data.Query < org.molgenis.data.Entity > query = new org.molgenis.data.support.QueryImpl () . search ( org.molgenis.integrationtest.data.abstracts.query.ACCOUNT_BALANCE , "1000 " ) ; java.util.Set < org.molgenis.data.Entity > resultSet = org.elasticsearch.common.collect.Sets . newHashSet ( person3 ) ; org.testng.Assert . assertTrue ( resultSet . contains ( personsRepository . findOne ( query ) ) ) ; org.testng.Assert . assertEquals ( personsRepository . findAll ( query ) . collect ( java.util.stream.Collectors . toSet () ) , resultSet ) ; org.testng.Assert . assertEquals ( personsRepository . count ( query ) , resultSet . size () ) ; } 
@ java.lang.Override public void onLoadFinished ( java.util.ArrayList < com.vadim.hasdfa.udacity.baking_app.Model.Recipe > recipes ) { if ( ( recipes . isEmpty () ) || ( ( recipes . size () ) == 0 ) ) { android.widget.Toast . makeText ( this , "Load data error!" , Toast.LENGTH_LONG ) . show () ; } else { mAdapter . notifyDataSetChanged ( recipes ) ; android.appwidget.AppWidgetManager appWidgetManager = android.appwidget.AppWidgetManager . getInstance ( this ) ; int [] appWidgetIds = appWidgetManager . getAppWidgetIds ( new android.content.ComponentName ( this , com.vadim.hasdfa.udacity.baking_app.Widget.RecipeViewWidget . class ) ) ; appWidgetManager . notifyAppWidgetViewDataChanged ( appWidgetIds , R.id.widget_gridview ) ; } } 
public org.apache.tika.mime.MediaType detect ( java.io.InputStream inputStream , org.apache.tika.metadata.Metadata metadata ) throws java.io.IOException { java.lang.String ct = metadata . get ( org.apache.tika.metadata.HttpHeaders.CONTENT_TYPE ) ; if ( ct != null ) { return org.apache.tika.mime.MediaType . parse ( ct ) ; } else { return detector . detect ( inputStream , metadata ) ; } } 
public void close () { waazdoh.cp2p.network.NodeConnectionFactory._bootstrap = null ; if ( ( workerGroup ) != null ) { workerGroup . shutdownGracefully () ; synchronized ( nodes ) { for ( io.netty.channel.Channel c : nodes . keySet () ) { try { c . close () ; } catch ( java.lang.Exception e ) { log . error ( "ERROR in closing channel" ) ; log . error ( e ) ; } } } workerGroup = null ; } } 
protected java.io.File createTempFile ( ) throws java.io.IOException { final java.io.File file = newFile () ; if ( ( forceContent ) && ( ( contentUrl ) == null ) ) { throw new java.lang.AssertionError ( "ContentUrl is not set" ) ; } else if ( ( contentUrl ) != null ) { try ( java.io.InputStream inputStream = contentUrl . openStream () ) { java.nio.file.Files . copy ( inputStream , file . toPath () ) ; } } else { file . createNewFile () ; } return file ; } 
public java.lang.String createPlan () { int retVal = BusinessLogic.Controller.PlansController . createPlan ( agencyNumber , name , price , startDate , finishDate ) ; if ( retVal == ( Util.Constants.SUCCESS ) ) { this . message = "Plan created succesfully!" ; return "" ; } this . message = "Plan could not be created!" ; return "" ; } 
public void addFirst ( Item item ) { if ( item == null ) throw new java.lang.NullPointerException ( "input data is null" ) ; Deque < Item > . Node add = new Node ( item ) ; if ( isEmpty () ) { left = right = add ; } else { add.next = left ; left.prev = add ; left = add ; } ( N ) ++ ; } 
private void fetchFollowersIfHasRemaining () { if ( followersRateLimit . hasRemaining () ) { try { followersRateLimit . decrement () ; batchFetcher . fetchFollowersBatch () ; } catch ( java.lang.Exception e ) { org.draff.twitfetch.FollowersFetcher.log . log ( java.util.logging.Level.SEVERE , ( "Error fetching followers: " + ( e . toString () ) ) , e ) ; } } } 
private double formula ( double k1 , double k2 , double k3 ) { return ( k2 - ( ( c * ( k3 - k1 ) ) / 2 ) ) + ( ( ( c * c ) * ( ( k3 - ( 2 * k2 ) ) + k3 ) ) / 2 ) ; } 
@ org.junit.Test public void shouldFetchEncounterTransactionByUuid ( ) throws java.lang.Exception { org.openmrs.Encounter encounter = new org.openmrs.module.emrapi.encounter.builder.EncounterBuilder () . build () ; org.mockito.Mockito . when ( encounterService . getEncounterByUuid ( "encounterUuid" ) ) . thenReturn ( encounter ) ; org.mockito.Mockito . when ( encounterTransactionMapper . map ( encounter , false ) ) . thenReturn ( new org.openmrs.module.emrapi.encounter.domain.EncounterTransaction () ) ; org.openmrs.module.emrapi.encounter.domain.EncounterTransaction encounterTransaction = emrEncounterService . getEncounterTransaction ( "encounterUuid" , false ) ; org.mockito.Mockito . verify ( encounterTransactionMapper ) . map ( encounter , false ) ; org.junit.Assert . assertNotNull ( encounterTransaction ) ; } 
public synchronized long generateId () { java.util.Random rand ; long val ; if ( first ) { return ( java.lang.Long.MAX_VALUE ) / 2 ; } rand = new java.util.Random () ; val = rand . nextLong () ; while ( ( internalFindById ( val , root ) ) != null ) { val = rand . nextLong () ; } return val ; } 
@ java.lang.Override public boolean before ( com.blade.mvc.hook.Signature signature ) { ning.zhou.common.annotation.NeedLogin needLogin = signature . getAction () . getAnnotation ( ning.zhou.common.annotation.NeedLogin . class ) ; com.blade.mvc.http.Response response = signature . getResponse () ; com.blade.mvc.http.Request request = signature . request () ; ning.zhou.bean.login.User user = request . session () . attribute ( ning.zhou.controller.BaseController.USER ) ; java.lang.System.out . print ( user ) ; if ( ( needLogin != null ) && ( null == user ) ) { response . redirect ( "/" ) ; return false ; } return true ; } 
@ java.lang.Override public void processCommand ( int address , int value , jace.apple2e.MOS65C02.MODE addressMode , jace.apple2e.MOS65C02 cpu ) { if ( ( ( value > > ( bit ) ) & 1 ) != 0 ) { return; } if ( ( cpu.C ) != 0 ) { cpu . setProgramCounter ( address ) ; cpu . addWaitCycles ( ( cpu.pageBoundaryPenalty ? 2 : 1 ) ) ; } } 
@ java.lang.Override protected java.io.ObjectStreamClass readClassDescriptor ( ) throws java.io.IOException , java.lang.ClassNotFoundException { int key = readInt () ; java.io.ObjectStreamClass objectStreamClass = readLookupLocalCache . get ( key ) ; if ( objectStreamClass != null ) { return objectStreamClass ; } objectStreamClass = readLookup . get ( key ) ; java.io.ObjectStreamClass discOsc = org.ehcache.impl.serialization.CompactJavaSerializer . disconnect ( objectStreamClass ) ; readLookupLocalCache . putIfAbsent ( key , discOsc ) ; writeLookup . putIfAbsent ( new org.ehcache.impl.serialization.CompactJavaSerializer.SerializableDataKey ( discOsc , true ) , key ) ; return objectStreamClass ; } 
private void previousMonth () { if ( ( cal . get ( java.util.Calendar.MONTH ) ) == ( java.util.Calendar.JANUARY ) ) { cal . set ( ( ( cal . get ( java.util.Calendar.YEAR ) ) - 1 ) , java.util.Calendar.DECEMBER , 1 ) ; } else { cal . set ( java.util.Calendar.MONTH , ( ( cal . get ( java.util.Calendar.MONTH ) ) - 1 ) ) ; cal . set ( java.util.Calendar.DAY_OF_MONTH , 1 ) ; } drawCalendarAndDayDetails () ; mAdapter = new com.pschuette.android.calendarlibrary.CalendarAdapter ( context , cal ) ; } 
@ java.lang.Override public boolean swipeRight ( android.view.MotionEvent e ) { int position = authorRV . getChildPosition ( authorRV . findChildViewUnder ( e . getX () , e . getY () ) ) ; adapter . toggleSelection ( position ) ; author = adapter . getSelected () ; if ( ( author ) == null ) { return false ; } adapter . makeSelectedRead () ; return true ; } 
@ java.lang.Override protected void onPreExecute () { super . onPreExecute () ; if ( ( ( ( sortby ) != null ) || ( ( search ) != null ) ) && ( ( ( messages ) != null ) && ( ! ( messages . isEmpty () ) ) ) ) progress . setVisibility ( View.INVISIBLE ) ; else if ( ! ( swipe . isRefreshing () ) ) progress . setVisibility ( View.VISIBLE ) ; } 
private static boolean isAccepted ( java.lang.String oreDic ) { java.lang.String title = oreDic . substring ( 0 , 3 ) ; java.util.List < java.lang.String > banList = tinker_io.handler.OreCrusherBanList . getBanList () ; if ( ( title . equals ( "ore" ) ) && ( ! ( banList . contains ( oreDic ) ) ) ) { return true ; } return false ; } 
@ java.lang.Override public void run () { while ( true ) { try { for ( org.springframework.conf.listener.ConfigurableApplicationContext cac : this . configurableApplicationContextList ) { cac . refresh () ; } } catch ( java.lang.Exception e ) { org.springframework.conf.listener.PropertyWatchdog.log . error ( "spring application context refresh error" , e ) ; this . sleep ( 5000 ) ; } break; } org.springframework.conf.listener.PropertyWatchdog.log . info ( "refresh spring application context finish[SUCCESS]" ) ; } 
@ java.lang.Override public void breakBlock ( net.minecraft.world.World world , int x , int y , int z , net.minecraft.block.Block block , int meta ) { net.minecraft.tileentity.TileEntity te = world . getTileEntity ( x , y , z ) ; if ( te instanceof mcjty.rftools.blocks.screens.ScreenTileEntity ) { mcjty.rftools.blocks.screens.ScreenTileEntity screenTileEntity = ( ( mcjty.rftools.blocks.screens.ScreenTileEntity ) ( te ) ) ; if ( screenTileEntity . isLarge () ) { clearInvisibleBlocks ( world , x , y , z ) ; } } super . breakBlock ( world , x , y , z , block , meta ) ; } 
@ java.lang.Override public java.lang.String toString () { final char offset = 'A' - '0' ; final char base = '0' ; return ( "" + ( ( char ) ( ( ( column ) + offset ) + base ) ) ) + ( ( char ) ( ( ( ( ( Constants.BOARD_LENGTH ) - 1 ) - ( row ) ) + 1 ) + base ) ) ; } 
private void processUTXOMessage ( org.bitcoinj.core.UTXOsMessage m ) { com.google.common.util.concurrent.SettableFuture < org.bitcoinj.core.UTXOsMessage > future = null ; lock . lock () ; try { if ( ( getutxoFutures ) != null ) future = getutxoFutures . pollFirst () ; } finally { lock . unlock () ; } if ( future != null ) future . set ( m ) ; } 
public boolean isTargetBlocked ( com.chess_game.pieces.Coordinate c2 ) { try { if ( ( this . getColor () ) == ( com.chess_game.elements.Constants.game_board . getBox ( c2 ) . getPiece () . getColor () ) ) { java.lang.System.out . println ( "Target is blocked. Try making a different move." ) ; return true ; } else return false ; } catch ( java.lang.ArrayIndexOutOfBoundsException e ) { java.lang.System.out . println ( "Move is not in range of the board" ) ; return false ; } } 
@ java.lang.Override public android.view.View findSnapView ( android.support.v7.widget.RecyclerView.LayoutManager layoutManager ) { if ( layoutManager instanceof android.support.v7.widget.LinearLayoutManager ) { switch ( mGravity ) { case android.view.Gravity.START : return findStartView ( layoutManager , getHorizontalHelper ( layoutManager ) ) ; case android.view.Gravity.END : return findEndView ( layoutManager , getHorizontalHelper ( layoutManager ) ) ; case android.view.Gravity.TOP : return findStartView ( layoutManager , getVerticalHelper ( layoutManager ) ) ; case android.view.Gravity.BOTTOM : return findEndView ( layoutManager , getVerticalHelper ( layoutManager ) ) ; } } return super . findSnapView ( layoutManager ) ; } 
public void addTag ( java.lang.CharSequence charSequence ) { if ( ( ( countOfSubString ( getText () . toString () , com.github.dotkebi.taginput.TagInputer.SHARP ) ) >= ( maxCountOfTags ) ) && ( ( maxCountOfTags ) > 0 ) ) { return; } blockSoftKey = true ; if ( ! ( android.text.TextUtils . isEmpty ( getLastTag () . replaceAll ( com.github.dotkebi.taginput.TagInputer.SHARP , "" ) ) ) ) { append ( " #" ) ; } append ( charSequence ) ; blockSoftKey = false ; } 
@ java.lang.Override public void onTextChanged ( java.lang.CharSequence s , int start , int before , int count ) { java.lang.String c_char = s . toString () ; java.lang.CharSequence elem = "." ; if ( c_char . contains ( elem ) ) { toPost . put ( "text" , c_char ) ; com.helloworld.nicita.nightfox_hw.httpReqHandler hh = new com.helloworld.nicita.nightfox_hw.httpReqHandler ( toPost , reqUrl ) ; hh . execute () ; t2s_text . setText ( "" ) ; while ( hh . getProgress () ) { toPost . put ( "text" , "" ) ; } } } 
public void commit ( javax.transaction.xa.Xid xid , boolean onePhase , java.lang.Runnable callback ) throws org.wso2.andes.kernel.AndesException , org.wso2.andes.kernel.dtx.UnknownDtxBranchException , org.wso2.andes.server.txn.IncorrectDtxStateException , org.wso2.andes.server.txn.RollbackOnlyDtxException , org.wso2.andes.server.txn.TimeoutDtxException { if ( org.wso2.andes.server.txn.QpidDistributedTransaction.LOGGER . isDebugEnabled () ) { org.wso2.andes.server.txn.QpidDistributedTransaction.LOGGER . debug ( ( "Committing distributed transaction " + ( java.util.Arrays . toString ( xid . getGlobalTransactionId () ) ) ) ) ; } try { distributedTransaction . commit ( xid , onePhase , callback ) ; } finally { for ( org.wso2.andes.server.txn.Action action : postTransactionActions ) { action . postCommit () ; } } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; mAdapter = new edu.uw.fragmentdemo.MainActivity.MoviePagerAdapter ( getSupportFragmentManager () ) ; mPager = ( ( android.support.v4.view.ViewPager ) ( findViewById ( R.id.viewPager ) ) ) ; mPager . setAdapter ( mAdapter ) ; searchFragment = edu.uw.fragmentdemo.SearchFragment . newInstance () ; } 
public void type ( int input ) { if ( overwrite ) { value = ( ( long ) ( input ) ) ; overwrite = false ; } else { value = ( 10L * ( value ) ) + input ; } typed = value ; update () ; } 
public com.mobilyzer.DeviceInfo getDeviceInfo () { if ( ( deviceInfo ) == null ) { deviceInfo = new com.mobilyzer.DeviceInfo () ; deviceInfo.deviceId = getDeviceId () ; deviceInfo.manufacturer = android.os.Build.MANUFACTURER ; deviceInfo.model = android.os.Build.MODEL ; deviceInfo.os = getVersionStr () ; deviceInfo.user = Build.VERSION.CODENAME ; deviceInfo.cpu_race = getCpuRace () ; deviceInfo.memory_race = getMemoryRace () ; deviceInfo.network_race = getNetworkRace () ; } return deviceInfo ; } 
private void schedule ( org.json.JSONArray notifications ) { for ( int i = 0 ; i < ( notifications . length () ) ; i ++ ) { org.json.JSONObject options = notifications . optJSONObject ( i ) ; try { de.appplant.cordova.plugin.notification.Notification notification = getNotificationMgr () . schedule ( options , de.appplant.cordova.plugin.localnotification.TriggerReceiver . class ) ; de.appplant.cordova.plugin.localnotification.LocalNotification . fireEvent ( "schedule" , notification ) ; } catch ( java.lang.Exception generic ) {} } } 
@ java.lang.Override public boolean addLink ( java.lang.String dbid , com.facebook.LinkBench.Link a , boolean noinverse ) throws java.lang.Exception { int creationCount ; try ( edu.berkeley.cs.Transaction tx = session . beginTransaction () ) { java.lang.String createLinkStmt = "MATCH (n1 {id: {id1}}) MATCH (n2: {id: {id2}}) " + "CREATE (n1)-[r:{link_type} {time: {time}, data: {data}}]->(n2)" ; edu.berkeley.cs.StatementResult result = session . run ( createLinkStmt , edu.berkeley.cs.LinkStoreNeo4j . linkParams ( a ) ) ; creationCount = result . consume () . counters () . relationshipsCreated () ; tx . success () ; } return creationCount > 0 ; } 
@ java.lang.Override protected void runContinuously () { wait . until ( ( ) - > ( Robot.oi.drive.buttons . RB () ) || ( Robot.oi.drive.buttons . LB () ) ) ; if ( Robot.oi.drive.buttons . RB () ) { Robot.servos.gearDropArm . setAngle ( Robot.GEAR_DROPPER_OUT ) ; } else if ( Robot.oi.drive.buttons . LB () ) { Robot.servos.gearDropArm . setAngle ( Robot.GEAR_DROPPER_IN ) ; } } 
private static void populateJavaPropertyVariables () { if ( org.apache.flink.test.util.SecureTestEnvironment.LOG . isDebugEnabled () ) { java.lang.System . setProperty ( "sun.security.krb5.debug" , "true" ) ; } java.lang.System . setProperty ( "java.security.krb5.conf" , org.apache.flink.test.util.SecureTestEnvironment.kdc . getKrb5conf () . getAbsolutePath () ) ; java.lang.System . setProperty ( "zookeeper.authProvider.1" , "org.apache.zookeeper.server.auth.SASLAuthenticationProvider" ) ; java.lang.System . setProperty ( "zookeeper.kerberos.removeHostFromPrincipal" , "true" ) ; java.lang.System . setProperty ( "zookeeper.kerberos.removeRealmFromPrincipal" , "true" ) ; java.lang.System . setProperty ( "zookeeper.sasl.client" , "false" ) ; } 
private boolean isToReview ( com.eclipsesource.json.JsonValue v ) { final com.eclipsesource.json.JsonArray items = v . asObject () . get ( "items" ) . asArray () ; for ( final com.eclipsesource.json.JsonValue item : items ) { final com.eclipsesource.json.JsonObject io = item . asObject () ; if ( ( io . get ( "field" ) . asString () . equals ( "status" ) ) && ( io . get ( "toString" ) . equals ( this . reviewState ) ) ) { return true ; } } return false ; } 
@ java.lang.Override public org.nschmidt.csgn.Triangle clone () { java.util.List < org.nschmidt.csgn.Vector3d > newVertices = new java.util.ArrayList < org.nschmidt.csgn.Vector3d > ( vertices . size () ) ; for ( org.nschmidt.csgn.Vector3d vertex : vertices ) { newVertices . add ( vertex . clone () ) ; } return new org.nschmidt.csgn.Triangle ( df , newVertices . get ( 0 ) , newVertices . get ( 1 ) , newVertices . get ( 2 ) , new org.nschmidt.ldparteditor.data.GColourIndex ( colour . getColour () , colour . getIndex () ) ) ; } 
private static boolean [] stringToInstrBitArray ( java.lang.String s , char magicChar ) { boolean [] arr = new boolean [ ch.hszt.kfh.compost.Compost.INSTR_SIZE ] ; for ( int i = 0 ; i < ( arr.length ) ; i ++ ) { arr [ i ] = ( s . charAt ( i ) ) == magicChar ; } return arr ; } 
public void terminate ( ) throws java.lang.Exception { try { lock . writeLock () . lock () ; for ( com.infiniteautomation.mango.io.serial.SerialPortIdentifier id : ownedPorts ) { try { id . getPort () . close () ; } catch ( java.lang.Exception e ) { LOG . error ( e . getMessage () , e ) ; } } ownedPorts . clear () ; lock . writeLock () . unlock () ; } catch ( java.lang.Exception e ) { lock . writeLock () . unlock () ; throw e ; } } 
private void resetBlocks () { for ( int changeToOrig = 0 ; changeToOrig < ( plateXZsTotal ) ; changeToOrig += 2 ) { origBlocks . get ( changeToOrig ) . setType ( origMats . get ( changeToOrig ) ) ; origBlocks . get ( ( changeToOrig + 1 ) ) . setType ( origMats . get ( ( changeToOrig + 1 ) ) ) ; } } 
@ java.lang.Override public void update () { uk.me.webpigeon.util.Vector2D targetForce = behavour . process () ; x += targetForce . getX () ; y += targetForce . getY () ; location . add ( targetForce ) ; velocity = uk.me.webpigeon.util.Vector2D . add ( targetForce , velocity , uk.me.webpigeon.world.SteeringEntity.VECTOR_SMOOTHING ) ; previousLocations . add ( new uk.me.webpigeon.util.Vector2D ( location ) ) ; location . wrap ( world.width , world.height ) ; } 
public < T > java.util.List < T > loadAll ( java.lang.Class < T > type ) throws java.lang.IllegalAccessException , java.lang.InstantiationException , java.lang.NoSuchMethodException , java.lang.reflect.InvocationTargetException { com.phlox.asql.ClassInfo classInfo = models . getClassInfo ( type ) ; java.lang.String query = "SELECT * FROM " + ( classInfo.tableName ) ; return queryAll ( type , query , null ) ; } 
@ org.bukkit.event.EventHandler public void onInventoryItemMove ( org.bukkit.event.inventory.InventoryMoveItemEvent event ) { org.bukkit.inventory.Inventory src = event . getSource () ; org.bukkit.inventory.Inventory dest = event . getDestination () ; org.bukkit.inventory.Inventory me = event . getInitiator () ; if ( passThrough ( src , dest , me ) ) { return; } if ( ( isProtected ( event . getSource () , false ) ) || ( isProtected ( event . getDestination () , true ) ) ) { event . setCancelled ( true ) ; } } 
public java.lang.String createStudentTable () { return ( ( ( ( ( ( ( ( ( ( ( "CREATE TABLE IF NOT EXISTS " + ( STUDENT ) ) + " (" ) + ( STD_ID ) ) + " INTEGER PRIMARY KEY AUTOINCREMENT, " ) + ( STUDENT_NUM ) ) + " TEXT NOT NULL UNIQUE, " ) + ( FNAME ) ) + " TEXT NOT NULL, " ) + ( LNAME ) ) + " TEXT NOT NULL, " ) + ( PASSWORD ) ) + " TEXT NOT NULL);" ; } 
private void removeFromListActionPerformed ( java.awt.event.ActionEvent evt ) { int [] itemsSelected = numbersToBeAddedList . getSelectedIndices () ; for ( int i = ( itemsSelected.length ) - 1 ; i >= 0 ; i -- ) { java.lang.String [] temp = listModel . getElementAt ( 0 ) . toString () . split ( " -> " ) ; ownMap . remove ( temp [ 0 ] ) ; listModel . remove ( itemsSelected [ i ] ) ; } numbersToBeAddedList . setModel ( listModel ) ; numbersToBeAddedList . updateUI () ; } 
@ java.lang.Override public boolean onTouch ( android.view.View v , android.view.MotionEvent event ) { v . onTouchEvent ( event ) ; if ( ( event . getAction () ) == ( android.view.MotionEvent.ACTION_UP ) ) { if ( testResultHolder.longPressed ) { testResultHolder.longPressed = false ; mAdapterCallback . restart ( ( position - 1 ) ) ; } } return false ; } 
public java.util.ArrayList < org.powertac.du.CustomerInfo > getAvailableContractCustomers () { java.util.ArrayList < org.powertac.du.CustomerInfo > availableContractCustomers = new java.util.ArrayList < org.powertac.du.CustomerInfo > () ; org.powertac.du.DefaultBrokerService.log . info ( ( "Hallooooo" + ( customerRepo . list () . size () ) ) ) ; for ( org.powertac.du.CustomerInfo ci : customerRepo . list () ) { if ( ( ci != null ) && ( ci . isCanNegotiate () ) ) { availableContractCustomers . add ( ci ) ; } } return availableContractCustomers ; } 
public void addItem ( payments.stone.com.br.desafiomobile.model.Product product , int quantity ) { for ( payments.stone.com.br.desafiomobile.model.CartItem item : items ) { if ( item . getProduct () . equals ( product ) ) { item . setCount ( quantity ) ; return; } } totalAmount = 0 ; items . add ( new payments.stone.com.br.desafiomobile.model.CartItem ( product ) . setCount ( quantity ) ) ; } 
public static bammerbom.ultimatecore.spongeapi.api.UPlayer getPlayer ( java.lang.String n ) { for ( bammerbom.ultimatecore.spongeapi.api.bammerbom.ultimatecore.spongeapi.api.UPlayer pl : bammerbom.ultimatecore.spongeapi.api.UC.uplayers ) { if ( pl.name . equals ( n ) ) { return pl ; } } bammerbom.ultimatecore.spongeapi.api.bammerbom.ultimatecore.spongeapi.api.UPlayer pl = new bammerbom.ultimatecore.spongeapi.api.bammerbom.ultimatecore.spongeapi.api.UPlayer ( r . searchOfflinePlayer ( n ) ) ; bammerbom.ultimatecore.spongeapi.api.UC.uplayers . add ( pl ) ; return pl ; } 
protected final void run ( int direction ) { if ( ! ( assignment4.Critter.timeStep ) ) { moveSteps ( 2 , direction ) ; } else { int x = x_coord ; int y = y_coord ; moveSteps ( 2 , direction ) ; if ( checkCollision ( x_coord , y_coord ) ) { x_coord = x ; y_coord = y ; } } energy -= Params.run_energy_cost ; } 
private Node getNextMove () { Node n = fastestPath ; if ( n == null ) { java.lang.System.out . println ( "no moves" ) ; } else if ( ( n.parent ) == null ) { java.lang.System.out . println ( "Only move" ) ; return n ; } while ( ( n.parent.parent ) != null ) { java.lang.System.out . println ( ( ( n . toString () ) + "->" ) ) ; n = n.parent ; } java.lang.System.out . println () ; } 
@ java.lang.Override protected com.android.volley.Response < T > parseNetworkResponse ( com.android.volley.NetworkResponse response ) { try { java.lang.String jsonString = new java.lang.String ( response.data , com.android.volley.toolbox.HttpHeaderParser . parseCharset ( response.headers ) ) ; android.util.Log . d ( "TAG-------" , jsonString ) ; return com.android.volley.Response . success ( mGson . fromJson ( jsonString , mClass ) , com.android.volley.toolbox.HttpHeaderParser . parseCacheHeaders ( response ) ) ; } catch ( java.io.UnsupportedEncodingException e ) { return com.android.volley.Response . error ( new com.android.volley.ParseError ( e ) ) ; } } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { int id = item . getItemId () ; if ( id == ( R.id.action_settings ) ) { return true ; } if ( id == ( R.id.remove_friend ) ) { interfacer . removeFriend ( friend . getUid () ) ; return true ; } return super . onOptionsItemSelected ( item ) ; } 
private static java.util.ArrayList < java.util.List < model.course.LessonGroup > > initMainArr ( java.util.List < model.course.Course > lcourse ) { java.util.ArrayList < java.util.List < model.course.LessonGroup > > $ = new java.util.ArrayList <> () ; for ( model.course.Course ¢ : lcourse ) { $ . add ( ¢ . getLectures () ) ; $ . add ( ¢ . getTutorials () ) ; } return $ ; } 
private sadl.input.TimedInput sample ( int numSeq , sadl.constants.ClassLabel label , sadl.models.pdrta.PDRTA . . . a ) { final java.util.List < sadl.input.TimedWord > seqs = new java.util.ArrayList <> ( numSeq ) ; int roundRobin = 0 ; for ( int i = 0 ; i < numSeq ; i ++ ) { seqs . add ( sampleSeq ( a [ roundRobin ] , label ) ) ; roundRobin %= a.length ; } return new sadl.input.TimedInput ( seqs ) ; } 
private java.io.File createPho ( java.lang.String Target ) throws java.io.FileNotFoundException { java.io.File pho = new java.io.File ( Target . replace ( ".wav" , ".pho" ) ) ; if ( pho . exists () ) { pho . delete () ; } java.io.PrintWriter out = new java.io.PrintWriter ( pho ) ; for ( tts.core.phonemes.types.Word word : words ) { for ( tts.core.phonemes.types.Phoneme phoneme : word . getPhonemes () ) { out . println ( phoneme . toString () ) ; out . flush () ; } } out . close () ; return pho ; } 
private java.lang.String getProcessId ( java.lang.String title ) throws java.lang.ClassNotFoundException , java.sql.SQLException { java.lang.String retString = null ; java.lang.String sqlstring = ( "SELECT ProzesseID FROM prozesse WHERE Titel='" + title ) + "'" ; java.sql.ResultSet rs = this . stmt . executeQuery ( sqlstring ) ; while ( rs . next () ) { retString = rs . getString ( "ProzesseID" ) ; } return retString ; } 
public boolean ValidateDetails ( java.lang.String name , java.lang.String username , java.lang.String password , java.lang.String confirmPassword , java.sql.Date dob ) { if ( ( ( ( ( name != "" ) || ( username != "" ) ) || ( password != "" ) ) || ( confirmPassword != "" ) ) || ( validateDate ( dob ) ) ) { return true ; } return false ; } 
@ java.lang.Override public void onValueChange ( android.widget.NumberPicker picker , int oldVal , int newVal ) { int myVoteValue = myVote . getValue () ; int maxVoteValue = maxVote . getValue () ; infoView . setText ( ( ( ( myVoteValue + " von " ) + maxVoteValue ) + " Votierungen" ) ) ; infoView . setTextColor ( ( myVoteValue < maxVoteValue ? android.graphics.Color . argb ( 255 , 153 , 204 , 0 ) : android.graphics.Color . argb ( 255 , 204 , 0 , 0 ) ) ) ; } 
private int getNetworkId ( android.net.wifi.WifiManager wifiManager , java.lang.String SSID ) { java.util.List < android.net.wifi.WifiConfiguration > list = wifiManager . getConfiguredNetworks () ; for ( android.net.wifi.WifiConfiguration i : list ) { if ( ( ( i.SSID ) != null ) && ( i.SSID . equals ( ( ( "\"" + SSID ) + "\"" ) ) ) ) return i.networkId ; } return - 1 ; } 
@ java.lang.Override public void threadError ( com.mayhub.utils.download.DownloadTask downloadTask1 , java.lang.String threadName ) { synchronized ( lock ) { downloadingTasks . remove ( downloadTask1 ) ; THREAD_INSTANCE_CONTAINER . remove ( threadName ) ; if ( ( downloadTask1 . getProcessTimes () ) <= ( downloadConf.maxRetryCount ) ) { downloadTasks . add ( downloadTask1 ) ; } } } 
public java.lang.String update () { bean.Employee2101 emp = new bean.Employee2101 ( number , name , mail ) ; java.lang.System.out . println ( emp ) ; try { db . update ( emp ) ; clear () ; } catch ( java.lang.Exception e ) { log . createLogger () . fine ( ( ( ( "■" + ( number ) ) + "|" ) + ( e . getMessage () ) ) ) ; } return null ; } 
@ java.lang.Override public void onLoadFinished ( android.support.v4.content.Loader < android.database.Cursor > loader , android.database.Cursor data ) { if ( ( mAdapter ) != null ) { mAdapter . clear () ; } android.util.Log . i ( eu.nikolay_angelov.popularmovies.MovieListActivity.TAG , "onLoadFinished" ) ; mAdapter . clear () ; mAdapter . notifyDataSetChanged () ; mAdapter . update ( data ) ; mAdapter . notifyDataSetChanged () ; } 
private java.util.List < java.lang.String > httpRequest ( java.lang.String url ) { try { java.net.HttpURLConnection httpc = ( ( java.net.HttpURLConnection ) ( new java.net.URL ( url ) . openConnection () ) ) ; try ( java.io.BufferedReader in = new java.io.BufferedReader ( new java.io.InputStreamReader ( httpc . getInputStream () , java.nio.charset.StandardCharsets.UTF_8 ) ) ) { return in . lines () . collect ( java.util.stream.Collectors . toList () ) ; } } catch ( java.io.IOException e ) { throw new java.lang.RuntimeException ( "connection to androidWifiKeyboard app failed" , e ) ; } } 
@ java.lang.Override public com.treestar.lib.xml.SElement getElement () { com.treestar.lib.xml.SElement result = new com.treestar.lib.xml.SElement ( getName () ) ; if ( ! ( parameterNames . isEmpty () ) ) { com.treestar.lib.xml.SElement elem = new com.treestar.lib.xml.SElement ( "Parameters" ) ; result . addContent ( elem ) ; for ( java.lang.String pName : parameterNames ) { com.treestar.lib.xml.SElement s = new com.treestar.lib.xml.SElement ( "P" ) ; elem . setString ( "name" , pName ) ; elem . addContent ( s ) ; } } return result ; } 
private static void copy ( java.io.InputStream inputStream , java.io.OutputStream outputStream ) throws java.lang.Exception { byte [] buffer = new byte [ 8192 ] ; int length ; while ( ( length = inputStream . read ( buffer ) ) != ( - 1 ) ) { outputStream . write ( buffer , 0 , length ) ; } outputStream . close () ; } 
public static void main ( java.lang.String [] args ) throws java.io.IOException { GUI.accounts = new java.util.ArrayList < Account > () ; GUI.trans = new java.util.ArrayList < Transaction > () ; IO . initAccount ( GUI.accounts ) ; IO . initTrans ( GUI.trans ) ; if ( ! ( GUI.accounts . isEmpty () ) ) { GUI.currAccount = GUI.accounts . get ( 0 ) ; } if ( ! ( GUI.trans . isEmpty () ) ) { GUI.currTrans = GUI.trans . get ( 0 ) ; } GUI . GUI () ; } 
void dispose () { if ( doCleanDirty ) { java.util.Arrays . fill ( curCurvepts , 0.0F ) ; java.util.Arrays . fill ( firstSegmentsBuffer , 0.0F ) ; } if ( ( this . recycleDashes ) && ( ( dash ) != ( dashes_initial ) ) ) { rdrCtx . putDirtyFloatArray ( dash ) ; } if ( ( firstSegmentsBuffer ) != ( firstSegmentsBuffer_initial ) ) { rdrCtx . putDirtyFloatArray ( firstSegmentsBuffer ) ; firstSegmentsBuffer = firstSegmentsBuffer_initial ; } } 
public void printArr () { for ( char [] x : arr ) { for ( char b : x ) { java.lang.String up = "" + b ; up = up . toUpperCase () ; java.lang.System.out . print ( ( up + " | " ) ) ; } java.lang.System.out . println ( "" ) ; } } 
public static java.sql.ResultSet selectQuery ( java.lang.String query , java.sql.Connection con ) throws java.lang.ClassNotFoundException , java.sql.SQLException { java.sql.ResultSet rs = null ; java.sql.Statement stmt ; try { java.lang.Class . forName ( music.Main.JDBC_DRIVER ) ; java.lang.System.out . println ( "Connecting to a selected database..." ) ; con = java.sql.DriverManager . getConnection ( music.Main.DB_URL , music.Main.USER , music.Main.PASS ) ; java.lang.System.out . println ( "Connected database successfully..." ) ; stmt = con . createStatement () ; rs = stmt . executeQuery ( query ) ; } catch ( java.sql.SQLException e ) { java.lang.System.out . println ( e ) ; } return rs ; } 
public static us.mn.state.dot.tms.Camera findFirst () { us.mn.state.dot.tms.Camera cam = null ; java.lang.Integer n = null ; java.util.Iterator < us.mn.state.dot.tms.Camera > it = us.mn.state.dot.tms.CameraHelper . iterator () ; while ( it . hasNext () ) { us.mn.state.dot.tms.Camera c = it . next () ; java.lang.Integer cn = c . getCamNum () ; if ( ( ( cn != null ) && ( n != null ) ) && ( cn < n ) ) { cam = c ; n = cn ; } } return cam ; } 
@ java.lang.Override public void mipsTranslate ( AST.SymbolTable table , java.lang.String fileName , AST.CodeGenarator genarator ) { COUNTERS.TEMP varTemp = var . calcAddress ( table , genarator , fileName ) ; COUNTERS.TEMP expTemp = exp . calcAddress ( table , genarator , fileName ) ; AST.CodeGenarator . printSWCommand ( expTemp.name , varTemp.name , 0 ) ; } 
public void toggleBrightness () { if ( ( android.os.Build.VERSION.SDK_INT ) >= ( android.os.Build.VERSION_CODES.M ) ) { if ( com.zoromatic.widgets.WidgetUpdateService . isMarshmallowSixPointZiro () ) { if ( Settings.System . canWrite ( this ) ) { realToggleBrightness () ; } else { android.content.Intent writeSettingsIntent = new android.content.Intent ( this , com.zoromatic.widgets.WriteSettingsActivity . class ) ; writeSettingsIntent . setFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ; startActivity ( writeSettingsIntent ) ; } } else { realToggleBrightness () ; } } else { realToggleBrightness () ; } } 
public void bubbleSort () { int out ; int in ; for ( out = 0 ; out < ( ( nElems ) - 1 ) ; out ++ ) { for ( in = out + 1 ; in < ( nElems ) ; in ++ ) { if ( ( a [ out ] ) > ( a [ in ] ) ) swap ( a [ out ] , a [ in ] ) ; } } } 
private java.util.Optional < org.mef.nrp.impl.ActivationTransaction > prepareTransaction ( org.opendaylight.yang.gen.v1.uri.onf.coremodel.corenetworkmodule.objectclasses.rev160413.GForwardingConstruct fwdC ) { final java.util.List < org.opendaylight.yang.gen.v1.uri.onf.coremodel.corenetworkmodule.objectclasses.rev160413.g_forwardingconstruct.FcPort > list = fwdC . getFcPort () ; final org.opendaylight.yang.gen.v1.uri.onf.coremodel.corenetworkmodule.objectclasses.rev160413.GFcPort a = list . get ( 0 ) ; final org.opendaylight.yang.gen.v1.uri.onf.coremodel.corenetworkmodule.objectclasses.rev160413.GFcPort z = list . get ( 1 ) ; return org.mef.nrp.impl.ForwardingConstructHelper . isTheSameNode ( fwdC ) ? getTxForMultiNode ( a , z , fwdC ) : getTxForNode ( a , z , fwdC ) ; } 
public void run () { jmri.jmrix.lenz.liusbethernet.jmri.jmrix.lenz.XNetSystemConnectionMemo m = this . getSystemConnectionMemo () ; jmri.jmrix.lenz.XNetTrafficController t = m . getXNetTrafficController () ; jmri.jmrix.lenz.liusbethernet.jmri.jmrix.lenz.XNetProgrammer p = ( ( jmri.jmrix.lenz.liusbethernet.jmri.jmrix.lenz.XNetProgrammer ) ( m . getProgrammerManager () . getGlobalProgrammer () ) ) ; if ( ! ( p . programmerBusy () ) ) { t . sendXNetMessage ( jmri.jmrix.lenz.liusbethernet.jmri.jmrix.lenz.XNetMessage . getCSStatusRequestMessage () , null ) ; } } 
@ java.lang.Override public void canCreateCallback ( boolean canCreate ) { if ( canCreate ) { newPartyController . create ( this , partyName . getText () . toString () ) ; android.content.Intent partyAdminIntent = new android.content.Intent ( this , com.myousic.activities.ActivityPartyAdmin . class ) ; startActivity ( partyAdminIntent ) ; } else { android.widget.Toast . makeText ( this , "This party is name is taken by someone else" , Toast.LENGTH_SHORT ) . show () ; } } 
private org.pathirage.thulitha.StorageVolume getStorageVolumeWithMaxRemainingCapacity () { java.util.Collections . sort ( storageVolumes ) ; org.pathirage.thulitha.StorageVolume maxSv = storageVolumes . get ( ( ( storageVolumes . size () ) - 1 ) ) ; if ( ( storageVolumes . size () ) < ( maxStorageVolumes ) ) { return new org.pathirage.thulitha.StorageVolume ( id , storageVolumeType , instanceType , iopSizeKB ) ; } else { return maxSv ; } } 
@ java.lang.Override protected com.example.myweatherapp.DataModel doInBackground ( java.lang.String . . . params ) { com.example.myweatherapp.DataModel dataModel = new com.example.myweatherapp.DataModel () ; java.lang.String data = new com.example.myweatherapp.WeatherHttpClient () . getWeatherData ( params [ 0 ] ) ; try { dataModel = com.example.myweatherapp.JSONParseModel . getData ( data ) ; dataModel.iconData = new com.example.myweatherapp.WeatherHttpClient () . getImage ( dataModel.currentWeather . getIcon () ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } return dataModel ; } 
byte [] getHeapItem ( org.pipoware.pst.exp.HID hid ) { int hidIndex = hid.hidIndex ; com.google.common.base.Preconditions . checkArgument ( ( hidIndex > 0 ) , "hidIndex (%s) must be > 0 " , hidIndex ) ; com.google.common.base.Preconditions . checkArgument ( ( hidIndex < ( ( rgibAlloc.length ) + 1 ) ) , "hidIndex (%s) out of rgiAlloc size (%s)" , rgibAlloc.length ) ; int rgiAllocIndex = hidIndex - 1 ; return java.util.Arrays . copyOfRange ( data , rgibAlloc [ rgiAllocIndex ] , rgibAlloc [ ( rgiAllocIndex + 1 ) ] ) ; } 
private com.example.whatsmymood.Mood makeMood () { if ( ( this . date ) == null ) { mood = new com.example.whatsmymood.Mood ( this . moodAuthor , this . moodType ) ; } else { mood = new com.example.whatsmymood.Mood ( this . moodAuthor , this . moodType , this . date ) ; } mood . setMoodMsg ( this . moodMsg ) ; mood . setLocation ( this . location ) ; mood . setSocialSit ( this . socialSit ) ; mood . setPhoto ( com.example.whatsmymood.AddMoodController.mPhoto ) ; return mood ; } 
public java.util.List < team_f.domain.entities.MusicalWork > getMusicalWorks () { javax.persistence.EntityManager session = getCurrentSession () ; javax.persistence.Query query = session . createQuery ( "from MusicalWorkEntity" ) ; java.util.List < team_f.database_wrapper.facade.MusicalWorkEntity > musicalWorkEntities = query . getResultList () ; java.util.List < team_f.domain.entities.MusicalWork > musicalWorks = new java.util.ArrayList <> () ; for ( team_f.database_wrapper.facade.MusicalWorkEntity entity : musicalWorkEntities ) { team_f.domain.entities.MusicalWork musicalWork = new team_f.domain.entities.MusicalWork () ; musicalWork = convertToMusicalWork ( entity ) ; musicalWorks . add ( musicalWork ) ; } return musicalWorks ; } 
@ java.lang.Override public void onTick ( long millisUntilFinished ) { android.animation.ObjectAnimator animation = android.animation.ObjectAnimator . ofInt ( clockCounterProgressBar , "progress" , clockIncrementAnimation ) ; animation . setDuration ( 1000 ) ; animation . setInterpolator ( new android.view.animation.DecelerateInterpolator () ) ; animation . start () ; tempTimer = ( ( int ) ( millisUntilFinished / 1000 ) ) - 1 ; counterTextView . setText ( java.lang.String . valueOf ( ( ( millisUntilFinished / 1000 ) - 1 ) ) ) ; clockIncrementAnimation += 1000 ; if ( questionWasAnswered ) { mCountDownTimer . cancel () ; } } 
private java.util.List < com.apollographql.apollo.cache.normalized.Record > valueForObjectList ( com.apollographql.apollo.cache.normalized.Record record , com.apollographql.apollo.api.ResponseField field ) throws java.io.IOException { java.util.List < com.apollographql.apollo.cache.normalized.CacheReference > values = fieldValue ( record , field ) ; java.util.List < com.apollographql.apollo.cache.normalized.Record > result = new java.util.ArrayList <> () ; for ( com.apollographql.apollo.cache.normalized.CacheReference reference : values ) { result . add ( readableCache . read ( reference . key () , cacheHeaders ) ) ; } return result ; } 
protected void turnToCodePage ( int newPageIndex ) { org.talend.core.views.IComponentSettingsView viewer = ( ( org.talend.core.views.IComponentSettingsView ) ( org.eclipse.ui.PlatformUI . getWorkbench () . getActiveWorkbenchWindow () . getActivePage () . findView ( IComponentSettingsView.ID ) ) ) ; if ( viewer != null ) { viewer . cleanDisplay () ; } if ( ( codeEditor ) instanceof org.talend.designer.core.ISyntaxCheckableEditor ) { moveCursorToSelectedComponent () ; } codeSync () ; updateCodeEditorContent () ; changeContextsViewStatus ( true ) ; } 
public org.usfirst.frc2832.Robot_2016.HID.GamepadState getCurrentState () { long time = java.lang.System . currentTimeMillis () ; while ( ( ( states . get ( lastIndex ) . timestamp ) - ( recordedOffset ) ) <= ( time - ( startTime ) ) ) ( lastIndex ) ++ ; ( lastIndex ) -- ; if ( ( lastIndex ) >= ( states . size () ) ) { done = true ; return null ; } return states . get ( lastIndex ) ; } 
public void loadBanner () { if ( MainActivity.packageName . equals ( "com.lgallardo.qbittorrentclient" ) ) { adView = ( ( com.google.android.gms.ads.AdView ) ( this . findViewById ( R.id.adViewRssFeed ) ) ) ; com.google.android.gms.ads.AdRequest adRequest = new com.google.android.gms.ads.AdRequest.Builder () . build () ; adView . loadAd ( adRequest ) ; } } 
@ org.junit.Before public void setUp () { connector = derbyConnectorRule . getConnector () ; tablesConfig = derbyConnectorRule . metadataTablesConfigSupplier () . get () ; connector . createAuditTable () ; auditManager = new io.druid.server.audit.SQLAuditManager ( connector , com.google.common.base.Suppliers . ofInstance ( tablesConfig ) , new io.druid.server.metrics.NoopServiceEmitter () , mapper , new io.druid.server.audit.SQLAuditManagerConfig () ) ; connector . createRulesTable () ; ruleManager = new io.druid.metadata.SQLMetadataRuleManager ( mapper , com.google.common.base.Suppliers . ofInstance ( new io.druid.metadata.MetadataRuleManagerConfig () ) , com.google.common.base.Suppliers . ofInstance ( tablesConfig ) , connector , auditManager ) ; } 
private java.util.List < com.vip.saturn.job.console.domain.JobDiffInfo > relayDiffIfPossible ( java.lang.String zkCluster ) throws com.vip.saturn.job.console.exception.SaturnJobConsoleException , java.lang.InterruptedException { try { return relayDiff ( zkCluster ) ; } catch ( com.vip.saturn.job.console.exception.JobConsoleException e ) { com.vip.saturn.job.console.controller.ZKDBDiffController.LOGGER . warn ( "fail to relay diff: {}" , e . getMessage () , e ) ; return zkDBDiffService . diffByCluster ( zkCluster ) ; } } 
public boolean leq ( game.math.Vector other ) { return ( ( ( x () ) < ( other . x () ) ) && ( ( y () ) < ( other . y () ) ) ) && ( ( z () ) < ( other . z () ) ) ; } 
public static int intArrayToOriginValue ( int [] intArr ) { int value = 0 ; int pow = ( intArr.length ) - 1 ; for ( int i = 0 ; i < ( intArr.length ) ; i ++ ) { java.lang.System.out . println ( intArr [ i ] ) ; value += ( intArr [ i ] ) * ( ( int ) ( java.lang.Math . pow ( 256 , pow ) ) ) ; pow -- ; } return value ; } 
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { com.fishfillet.shoal.model.Car c = dataSnapshot . getValue ( com.fishfillet.shoal.model.Car . class ) ; mTextColor . setText ( c.color ) ; mTextYear . setText ( c.year ) ; mTextMake . setText ( c.make ) ; mTextModel . setText ( c.model ) ; mTextLicensePlate . setText ( c.plate ) ; } 
public int update ( com.lidchanin.crudindiploma.data.models.ExistingProduct existingProduct ) { android.content.ContentValues contentValues = new android.content.ContentValues () ; contentValues . put ( DatabaseHelper.COLUMN_ID , existingProduct . getId () ) ; contentValues . put ( DatabaseHelper.COLUMN_LIST_ID , existingProduct . getShoppingListId () ) ; contentValues . put ( DatabaseHelper.COLUMN_PRODUCT_ID , existingProduct . getProductId () ) ; contentValues . put ( DatabaseHelper.COLUMN_QUANTITY_OR_WEIGHT , existingProduct . getQuantityOrWeight () ) ; return database . update ( DatabaseHelper.TABLE_EXISTING_PRODUCTS , contentValues , com.lidchanin.crudindiploma.data.dao.ExistingProductDAO.WHERE_ID_EQUALS , new java.lang.String [] { java.lang.String . valueOf ( existingProduct . getId () ) } ) ; } 
@ org.junit.Test public void shouldReturnSameChecksumOnSecondCall ( ) throws java.io.IOException { java.nio.ByteBuffer buffer = java.nio.ByteBuffer . wrap ( data ) ; chksumChannel . write ( buffer , 0 ) ; assertThat ( chksumChannel . getChecksum () , org.hamcrest.Matchers . equalTo ( expectedChecksum ) ) ; assertThat ( chksumChannel . getChecksum () , org.hamcrest.Matchers . equalTo ( expectedChecksum ) ) ; } 
public void addShapeRule ( java.lang.String name , javafx.scene.paint.Color color ) { if ( ( name == null ) || ( color == null ) ) return; if ( allStructuresList . contains ( name ) ) { name = name . trim () ; java.util.ArrayList < wormguides.SearchOption > optionsArray = new java.util.ArrayList < wormguides.SearchOption > () ; optionsArray . add ( SearchOption.MULTICELLULAR ) ; wormguides.model.ShapeRule rule = new wormguides.model.ShapeRule ( name , color , optionsArray ) ; rulesList . add ( rule ) ; } } 
private void calculateSwipeDirection () { float xDiff = ( x2 ) - ( x1 ) ; float yDiff = ( y2 ) - ( y1 ) ; if ( ( java.lang.Math . abs ( yDiff ) ) > ( java.lang.Math . abs ( xDiff ) ) ) { if ( yDiff < 0 ) { direction = 0 ; } else { direction = 2 ; } } else { if ( xDiff < 0 ) { direction = 3 ; } else { direction = 1 ; } } } 
public static java.util.Date parseTime ( java.lang.String time ) { java.text.SimpleDateFormat [] formats = new java.text.SimpleDateFormat [] { new java.text.SimpleDateFormat ( "HH:mm" ) , new java.text.SimpleDateFormat ( "hh:mm a" ) } ; java.util.Date date = null ; for ( java.text.SimpleDateFormat sdf : formats ) { try { date = sdf . parse ( time ) ; break; } catch ( java.text.ParseException e ) { e . printStackTrace () ; } } return date ; } 
private void assertCORSHeader ( org.springframework.http.HttpHeaders headers ) { java.util.Map < java.lang.String , java.lang.String > headerMap = headers . toSingleValueMap () ; org.hamcrest.MatcherAssert . assertThat ( headerMap , hasKey ( "Access-Control-Allow-Headers" ) ) ; org.hamcrest.MatcherAssert . assertThat ( headerMap , hasKey ( "Access-Control-Allow-Methods" ) ) ; org.hamcrest.MatcherAssert . assertThat ( headerMap , hasKey ( "Access-Control-Allow-Origin" ) ) ; org.hamcrest.MatcherAssert . assertThat ( headerMap , hasKey ( "Access-Control-Max-Age" ) ) ; } 
private void syncSecurityGroup ( org.opendaylight.neutron.spi.NeutronSecurityRule securityRule , org.opendaylight.neutron.spi.NeutronPort port , java.lang.String neutronSecurityGroupId , boolean write ) { if ( null != ( securityRule . getSecurityRemoteGroupID () ) ) { java.util.List < org.opendaylight.neutron.spi.Neutron_IPs > vmIpList = securityServicesManager . getVmListForSecurityGroup ( port . getID () , securityRule . getSecurityRemoteGroupID () ) ; for ( org.opendaylight.neutron.spi.Neutron_IPs vmIp : vmIpList ) { securityServicesManager . syncSecurityRule ( port , securityRule , vmIp , write ) ; } } else { securityServicesManager . syncSecurityRule ( port , securityRule , null , write ) ; } } 
public org.embulk.input.kafka.data.format.base.Data build () { java.lang.String [] data = new java.lang.String ( message ) . split ( separator ) ; for ( int idx = 0 ; idx < ( data.length ) ; idx ++ ) { set ( idx , data [ idx ] ) ; } return this ; } 
public void initRBSAEOSS () { java.lang.String path = "/Users/designassistant/Documents/workspace/design_assistant_HRC2/RBSAEOSS-Eval" ; AE = rbsa.eoss.ArchitectureEvaluator . getInstance () ; AG = rbsa.eoss.ArchitectureGenerator . getInstance () ; rbsa.eoss.local.Params params = null ; java.lang.String search_clps = "" ; params = new rbsa.eoss.local.Params ( path , "FUZZY-ATTRIBUTES" , "test" , "normal" , search_clps ) ; AE . init ( 4 ) ; } 
@ org.openjdk.jmh.annotations.Benchmark @ org.openjdk.jmh.annotations.Threads ( value = 1 ) @ org.openjdk.jmh.annotations.Warmup ( time = 5 ) @ org.openjdk.jmh.annotations.Measurement ( time = 40 ) public java.lang.Object getManyRowsWithGetRows ( com.palantir.atlasdb.performance.benchmarks.table.ConsecutiveNarrowTable.CleanNarrowTable table ) { java.util.Map < com.palantir.atlasdb.keyvalue.api.Cell , com.palantir.atlasdb.keyvalue.api.Value > result = table . getKvs () . getRows ( table . getTableRef () , table . getRowList () , com.palantir.atlasdb.keyvalue.api.ColumnSelection . all () , java.lang.Long.MAX_VALUE ) ; com.google.common.base.Preconditions . checkState ( ( ( result . size () ) == ( table . getRowList () . size () ) ) , "Should be %s rows, but were: %s" , table . getRowList () . size () , result . size () ) ; } 
public java.lang.Object processAdd ( java.lang.Object [] objects ) { arr . add ( ( ( java.lang.Double ) ( objects [ 0 ] ) ) ) ; org.wso2.siddhi.debs2017.kmeans.Clusterer cluster = new org.wso2.siddhi.debs2017.kmeans.Clusterer ( ( ( java.lang.Integer ) ( objects [ 1 ] ) ) , 50 , arr ) ; cluster . cluster () ; java.util.ArrayList < java.lang.Integer > centers = cluster . getCenterA ( arr ) ; return centers ; } 
public void add ( double val , int . . . ndKeys ) { int index = findIndex ( ndKeys ) ; if ( index >= 0 ) { values . set ( index , ( ( values . get ( index ) ) + val ) ) ; } else { set ( val , ndKeys ) ; } } 
@ java.lang.Override public io.openmessaging.Message poll () { if ( ( ( bucketList . size () ) == 0 ) || ( ( queue ) == null ) ) { return null ; } for ( int i = 0 ; i < ( bucketList . size () ) ; i ++ ) { io.openmessaging.Message message = messageStore . pullMessage ( queue , bucketList . get ( i ) ) ; if ( message == null ) bucketList . remove ( i ) ; if ( message != null ) { return message ; } } return null ; } 
@ java.lang.Override public void onCaptureCompleted ( android.hardware.camera2.CameraCaptureSession session , android.hardware.camera2.CaptureRequest request , android.hardware.camera2.TotalCaptureResult result ) { super . onCaptureCompleted ( session , request , result ) ; android.widget.Toast . makeText ( this , ( "Saved:" + file ) , Toast.LENGTH_SHORT ) . show () ; android.content.Intent i = new android.content.Intent ( this , bluemix.ruazosa.fer.hr.bluemix.ClassifyActivity . class ) ; i . putExtra ( "file" , file . getPath () ) ; startActivity ( i ) ; createCameraPreview () ; } 
private com.afunx.xml.model.SoftApXmlModel getNextSoftap ( com.afunx.service.Testcases testcases ) { ++ ( mTotalCount ) ; java.util.List < com.afunx.xml.model.SoftApXmlModel > softaps = testcases . getSelectedSoftaps () ; int size = testcases . getTestCount () ; com.afunx.xml.model.SoftApXmlModel softap = softaps . get ( mIndex4Next ) ; switch ( testcases . getTestMode () ) { case 0 : mIndex4Next = ( mTotalCount ) / size ; break; case 1 : default: mIndex4Next = ( ++ ( mIndex4Next ) ) % size ; break; } return softap ; } 
public static org.echocat.gradle.plugins.golang.model.OperatingSystem resolveForJava ( java.lang.String javaArchName ) throws java.lang.IllegalArgumentException { if ( javaArchName != null ) { final java.lang.String asLower = javaArchName . toLowerCase ( java.util.Locale.US ) ; for ( final org.echocat.gradle.plugins.golang.model.OperatingSystem candidate : org.echocat.gradle.plugins.golang.model.OperatingSystem . values () ) { if ( ( ( candidate._nameInJava ) != null ) && ( asLower . startsWith ( candidate._nameInJava ) ) ) { return candidate ; } } } throw new java.lang.IllegalArgumentException ( ( "Illegal Java operating system: " + javaArchName ) ) ; } 
public static void init () { net.minecraftforge.fml.common.registry.EntityRegistry . registerModEntity ( net.thedragonteam.armorplus.entity.entityzombie.EntityEnderDragonZombie . class , "ender_dragon_zombie" , net.thedragonteam.armorplus.entity.ARPEntities.ENDER_DRAGON_ZOMBIE , ArmorPlus.instance , 64 , 1000 , true , 8704 , 65280 ) ; if ( net.thedragonteam.armorplus.ARPConfig.enableEnderDragonZombieSpawnEnd ) net.minecraftforge.fml.common.registry.EntityRegistry . addSpawn ( net.thedragonteam.armorplus.entity.entityzombie.EntityEnderDragonZombie . class , 1 , 0 , 1 , EnumCreatureType.MONSTER , Biomes.SKY ) ; net.minecraft.world.storage.loot.LootTableList . register ( EntityEnderDragonZombie.LOOT ) ; } 
@ java.lang.Override public java.nio.file.FileVisitResult visitFile ( java.nio.file.Path file , java.nio.file.attribute.BasicFileAttributes attrs ) throws java.io.IOException { java.lang.String logs = science.atlarge.granula.util.FileUtil . readFile ( file ) ; for ( java.lang.String line : logs . split ( "\n" ) ) { if ( line . contains ( "- run algorithm:" ) ) { java.util.regex.Pattern regex = java.util.regex.Pattern . compile ( ".* - run algorithm: ([+-]?([0-9]*[.])?[0-9]+) sec.*" ) ; java.util.regex.Matcher matcher = regex . matcher ( line ) ; matcher . find () ; superstepTimes . add ( java.lang.Double . parseDouble ( matcher . group ( 2 ) ) ) ; } } return java.nio.file.FileVisitResult.CONTINUE ; } 
public static datastructure.Node findSubInCache ( java.util.List < datastructure.Node > tree , datastructure.Node n ) { for ( datastructure.Node curr : tree ) { boolean conclusion = n.conclusion . equals ( curr.conclusion ) ; boolean hypotheses = n.hypotheses . containsAll ( curr.hypotheses ) ; if ( conclusion && hypotheses ) { return curr ; } } return null ; } 
private void validateInputs () { java.lang.String projectId = projectIdWidget . getText () . toString () ; if ( ( projectId . length () ) == 5 ) { try { writeProjectInDb () ; } catch ( android.database.sqlite.SQLiteConstraintException e ) { setErrorMessageToWidget ( projectIdWidget , "ID is already registered in the database." ) ; } catch ( java.sql.SQLException e ) { android.widget.Toast . makeText ( this , "Could not create new project due to database errors!" , Toast.LENGTH_SHORT ) . show () ; } finishActivityAndShowAnimation () ; } else { setErrorMessageToWidget ( projectIdWidget , "Your project ID must consist of 5 digits" ) ; } } 
@ java.lang.Override public void removeStudentFromCourse ( java.lang.Integer studentId , java.lang.Integer courseId , boolean force ) { by.triumgroup.recourse.entity.model.Course course = by.triumgroup.recourse.util.RepositoryCallWrapper . wrapJPACall ( ( ) - > courseRepository . findOne ( courseId ) ) ; by.triumgroup.recourse.entity.model.User user = by.triumgroup.recourse.util.RepositoryCallWrapper . wrapJPACall ( ( ) - > userRepository . findOne ( studentId ) ) ; validateUserAndCourseToRemoveFromCourse ( user , course , force ) ; java.util.Set < by.triumgroup.recourse.entity.model.User > registeredStudents = course . getStudents () ; registeredStudents . remove ( user ) ; by.triumgroup.recourse.util.RepositoryCallWrapper . wrapJPACall ( ( ) - > courseRepository . save ( course ) ) ; } 
public static com.ambergleam.android.paperplane.model.Moon newInstance ( android.content.Context context , int canvasWidth , int canvasHeight ) { com.ambergleam.android.paperplane.model.Moon moon = new com.ambergleam.android.paperplane.model.Moon () ; moon . setBitmap ( android.graphics.BitmapFactory . decodeResource ( context . getResources () , R.drawable.moon ) ) ; moon . setPosition ( com.ambergleam.android.paperplane.model.Moon . getRandomStartingPosition () ) ; moon . setVelocity ( com.ambergleam.android.paperplane.model.Moon . getRandomStartingVelocity () ) ; return moon ; } 
public com.github.ddth.djs.bo.log.TaskLogBo setTimestampFinish ( java.util.Date timestamp ) { if ( timestamp == null ) { timestamp = new java.util.Date () ; } setAttribute ( com.github.ddth.djs.bo.log.TaskLogBo.ATTR_TIMESTAMP_FINISH , timestamp ) ; java.util.Date timestampPickup = getTimestampPickup () ; long duration = ( timestampPickup != null ) ? ( timestamp . getTime () ) - ( timestampPickup . getTime () ) : 0 ; setAttribute ( com.github.ddth.djs.bo.log.TaskLogBo.ATTR_DURATION_FINISH , duration ) ; return this ; } 
@ org.apache.struts2.interceptor.validation.SkipValidation @ org.apache.struts2.convention.annotation.Action ( value = "/masters/scheme-beforeView" ) public java.lang.String beforeView () { if ( org.egov.web.actions.masters.SchemeAction.LOGGER . isDebugEnabled () ) org.egov.web.actions.masters.SchemeAction.LOGGER . debug ( "..Inside Before View Method.." ) ; this . scheme = ( ( org.egov.commons.Scheme ) ( persistenceService . find ( "from Scheme where id=?" , this . scheme . getId () ) ) ) ; this . mode = org.egov.web.actions.masters.SchemeAction.VIEW ; return org.egov.web.actions.masters.SchemeAction.VIEW ; } 
public static void circleBorderImageView ( final android.content.Context context , android.widget.ImageView imageView , java.lang.String url , int placehorder , float borderwidth , int bordercolor ) { com.bumptech.glide.request.RequestOptions options = new com.bumptech.glide.request.RequestOptions () ; options . placeholder ( placehorder ) . transform ( new com.yc.english.base.helper.GlideCircleTransformation ( context , borderwidth , bordercolor ) ) ; if ( com.blankj.utilcode.util.ActivityUtils . isValidContext ( context ) ) { com.bumptech.glide.Glide . with ( context ) . load ( url ) . apply ( options ) . into ( imageView ) ; } } 
public void disconnect ( java.lang.Long key ) { if ( key == null ) return; intraplex.livelook.LogMapEntry e = logMap . get ( key ) ; if ( e == null ) return; intraplex.livelook.Stream stream = map . get ( key ) ; if ( stream == null ) return; logMap . remove ( key ) ; removeKey = key ; mapUpdate = true ; } 
public void loadGame ( int _boardSize , java.io.File _saveFile , int _loadJSONPosition ) { try { loadJSONPosition = _loadJSONPosition ; saveFile = _saveFile ; boardSize = _boardSize ; board = new me.valesken.jeff.sudoku_structure.Board ( boardSize ) ; java.io.BufferedReader buff = new java.io.BufferedReader ( new java.io.FileReader ( saveFile ) ) ; org.json.JSONObject jsonObject = new org.json.JSONObject ( buff . readLine () ) ; buff . close () ; difficulty = board . LoadGame ( jsonObject ) ; } catch ( java.io.IOException | org.json.JSONException e ) { e . printStackTrace () ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; if ( nuclei3.logs.Logs.TRACE ) { mTrace = new nuclei3.logs.Trace () ; mTrace . onCreate ( getClass () ) ; } if ( savedInstanceState == null ) { nuclei3.notifications.NotificationManager manager = nuclei3.notifications.NotificationManager . getInstance () ; if ( manager != null ) manager . dismiss ( getIntent () ) ; } } 
@ java.lang.Override public void mouseReleased ( java.awt.event.MouseEvent arg0 ) { if ( ( this . um ) == null ) { throw new java.lang.RuntimeException ( "MakeUserMoveController.um was null when mouseReleased was called" ) ; } if ( um . isValid () ) { um . pushMove ( l ) ; l . getBoard () . settleTiles () ; } um . finishMove ( l ) ; if ( l . isFinished () ) { lv . endLevel () ; return; } lv . repaint () ; this . um = null ; } 
Demo.ProductoIce convertirProducto ( entitys.system.Producto producto ) { Demo.ProductoIce productoIce = null ; productoIce.categoriaId = producto . getCategoriaId () ; productoIce.estanteriaId = producto . getEstanteriaId () ; productoIce.fechaCaducidad = producto . getFechaCaducidad () ; productoIce.nombre = producto . getNombre () ; productoIce.productoId = producto . getProductoId () ; return productoIce ; } 
public void paste () { ca.mcgill.cs.stg.jetuml.framework.GraphFrame frame = ( ( ca.mcgill.cs.stg.jetuml.framework.GraphFrame ) ( aDesktop . getSelectedFrame () ) ) ; if ( frame == null ) { return; } ca.mcgill.cs.stg.jetuml.graph.Graph curGraph = frame . getGraph () ; ca.mcgill.cs.stg.jetuml.framework.GraphPanel panel = frame . getGraphPanel () ; try { ca.mcgill.cs.stg.jetuml.framework.SelectionList updatedSelectionList = aClipboard . pasteInto ( panel ) ; panel . setSelectionList ( updatedSelectionList ) ; panel . repaint () ; } finally {} } 
public void centerMapOnLocation ( android.location.Location location , java.lang.String title ) { android.util.Log . i ( "Maps Activity" , "Center on map - location" ) ; com.google.android.gms.maps.model.LatLng selectedLatLng = new com.google.android.gms.maps.model.LatLng ( location . getLatitude () , location . getLongitude () ) ; com.androidandyuk.bikersbestfriend.MapsActivity.mMap . clear () ; if ( title != "Your location" ) { com.androidandyuk.bikersbestfriend.MapsActivity.mMap . addMarker ( new com.google.android.gms.maps.model.MarkerOptions () . position ( selectedLatLng ) . title ( title ) ) ; } com.androidandyuk.bikersbestfriend.MapsActivity.mMap . moveCamera ( com.google.android.gms.maps.CameraUpdateFactory . newLatLngZoom ( selectedLatLng , 14 ) ) ; } 
private double cosNumerator ( double [] vector ) { int cosValue = 0 ; for ( int ii = 0 ; ii < ( Storage.BackData.vocabAfter ) ; ii ++ ) { cosValue += ( vector [ ii ] ) * ( qVector [ ii ] ) ; } return cosValue ; } 
public void sucessfullyCon () { if ( ! ( _waiting ) ) renewPanel () ; _retry . setVisible ( false ) ; _conPanel . setVisible ( true ) ; _succesfull = true ; _waiting = false ; _icon . setImage ( org.jivesoftware.resource.SparkRes . getImageIcon ( SparkRes.SMALL_CHECK ) . getImage () ) ; _label . setText ( org.jivesoftware.spark.otrplug.util.OTRResources . getString ( "otr.successfull" ) ) ; } 
@ org.junit.Before public void createElement () { book1 = new fhj.shelf.utils.Book ( "Book1" , "Author1" ) ; book2 = new fhj.shelf.utils.Book ( "Book2" , "Author2" ) ; col = new fhj.shelf.utils.BookCollection ( "Collection of Books" ) ; col . addElement ( book1 ) ; col . addElement ( book2 ) ; cd = new fhj.shelf.utils.CD ( "CD1" , 20 ) ; elementsRepository = new fhj.shelf.utils.repos.InMemoryElementsRepository () ; elementsRepository . insert ( col ) ; elementsRepository . insert ( cd ) ; } 
@ java.lang.Override public void postInit () { com.feed_the_beast.ftbl.api.client.gui.LMGuiHandlerRegistry . add ( FTBUGuiHandler.instance ) ; java.util.Map < java.lang.String , net.minecraft.client.renderer.entity.RenderPlayer > skinMap = com.feed_the_beast.ftbl.api.client.FTBLibClient . mc () . getRenderManager () . getSkinMap () ; net.minecraft.client.renderer.entity.RenderPlayer render = skinMap . get ( "default" ) ; render . addLayer ( BadgeRenderer.instance ) ; render = skinMap . get ( "slim" ) ; render . addLayer ( BadgeRenderer.instance ) ; } 
@ java.lang.Override public void start ( javafx.stage.Stage stage ) throws java.lang.Exception { this . stage = stage ; itinerary.main.Logic logic = new itinerary.main.Logic () ; if ( ! ( logic . isConfigured () ) ) { new itinerary.userinterface.FileNameRequestDialog ( listener ) . start ( stage ) ; } else { openMainApplication ( this . stage ) ; } } 
public java.util.ArrayList < ir.rasen.charsoo.controller.object.PackageInfoCustom > getAppList () { java.util.ArrayList < ir.rasen.charsoo.controller.object.PackageInfoCustom > temp = new java.util.ArrayList <> () ; for ( int i = 0 ; i < ( appList . size () ) ; i ++ ) { temp . add ( appList . get ( i ) ) ; } return temp ; } 
@ java.lang.Override public void postTick () { ( tickCounter ) ++ ; if ( ( ( tickCounter ) % ( intervalTicks ) ) == 0 ) { com.github.fishio.power_ups.PowerUp pu = getRandomPowerUp () ; pf . add ( getRandomPowerUp () ) ; log . log ( LogLevel.DEBUG , ( ( "Added a PowerUp of type \"" + ( pu . getName () ) ) + "\"" ) ) ; } } 
public void setX ( float x ) { float offset = ( x > ( rectangle . getX () ) ) ? x - ( rectangle . getX () ) : ( rectangle . getX () ) - x ; for ( game.ui.levelselect.LevelItem item : items ) { item . setX ( ( ( item . getX () ) + offset ) ) ; } rectangle . setX ( ( ( rectangle . getX () ) + offset ) ) ; } 
public int maxSubArray ( int [] arrayElements ) { int finalMaxSum = 0 ; int currentMaxSum = 0 ; for ( int i = 0 ; i < ( arrayElements.length ) ; i ++ ) { currentMaxSum = currentMaxSum + ( arrayElements [ i ] ) ; if ( ( currentMaxSum > finalMaxSum ) && ( currentMaxSum > 0 ) ) { finalMaxSum = currentMaxSum ; } if ( currentMaxSum < 0 ) { currentMaxSum = 0 ; } } java.lang.System.out . println ( ( "Maximum sum of Sub Array" + finalMaxSum ) ) ; return 0 ; } 
public edu.cosc4950.phatlab.sNode findTrigger ( edu.cosc4950.phatlab.sNode startNode , int track , long beat , int step ) { track = clamp ( track , 0 , 11 ) ; long globalStep = ( beat * ( spb ) ) + step ; if ( ( triggerList [ track ] ) == null ) return null ; if ( startNode == null ) triggerList [ track ] . find ( globalStep ) ; else return startNode . find ( globalStep ) ; return null ; } 
double calculateSubtotal () { for ( int i = 0 ; i < ( purchases . size () ) ; i ++ ) { subtotal += purchases . get ( i ) . getTotal () ; } java.lang.System.out . println ( ( "Subtotal: " + ( subtotal ) ) ) ; return subtotal ; } 
public boolean hasRangeToAttack ( atlantis.units.AUnit targetUnit , double safetyMargin ) { bwapi.WeaponType weaponAgainstThisUnit = getWeaponAgainst ( targetUnit ) ; if ( weaponAgainstThisUnit == ( bwapi.WeaponType.None ) ) { return false ; } double dist = this . distanceTo ( targetUnit ) ; return ( dist <= ( ( ( weaponAgainstThisUnit . maxRange () ) + safetyMargin ) / 32 ) ) && ( dist >= ( ( weaponAgainstThisUnit . minRange () ) / 32 ) ) ; } 
@ org.junit.Test public void compressedResponse () { final java.util.List < org.springframework.cloud.netflix.feign.encoding.app.domain.Invoice > invoices = org.springframework.cloud.netflix.feign.encoding.Invoices . createInvoiceList ( 50 ) ; final org.springframework.http.ResponseEntity < java.util.List < org.springframework.cloud.netflix.feign.encoding.app.domain.Invoice > > response = invoiceClient . saveInvoices ( invoices ) ; org.junit.Assert . assertNotNull ( response ) ; org.junit.Assert . assertEquals ( HttpStatus.OK , response . getStatusCode () ) ; org.junit.Assert . assertNotNull ( response . getBody () ) ; org.junit.Assert . assertEquals ( invoices . size () , response . getBody () . size () ) ; } 
private boolean validateAge ( java.lang.String inputAge , java.lang.String inputName , javafx.stage.Stage window3 ) { MemoryTest.errorPopUp error = new MemoryTest.errorPopUp () ; try { int age = java.lang.Integer . parseInt ( inputAge ) ; java.lang.System.out . println ( ( ( ( "Name is " + inputName ) + ", Age is " ) + age ) ) ; selectLevelScreen ( 1 , 2 ) ; window3 . close () ; return true ; } catch ( java.lang.NumberFormatException e ) { error . errorPop ( "Title" , "Message" ) ; return false ; } } 
@ java.lang.Override public void initAllObjects ( java.util.List < gui.components.Visible > viewObjects ) { moles = new java.util.ArrayList < whackAMole.MoleInterface > () ; player = getAPlayer () ; label = new gui.components.TextLabel ( 350 , 220 , 100 , 40 , "sample Text" ) ; timeLabel = new gui.components.TextLabel ( 360 , 40 , 80 , 40 , "30.0" ) ; viewObjects . add ( timeLabel ) ; viewObjects . add ( label ) ; } 
@ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "solve" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public uk.co.cranfield.model.Results solve () { double period = 1.96 ; double waveHeight = 0.032 ; double depth = 0.78 ; double dout = 0.03 ; double gp1 = 0.0 ; double gp2 = 4 ; double gp3 = 19.0 ; double gp4 = ( ( uk.co.cranfield.common.Constants.IX ) - 1 ) * ( uk.co.cranfield.common.Constants.DX ) ; uk.co.cranfield.core.WaveSimulatorSolver solver = new uk.co.cranfield.core.WaveSimulatorSolver ( 1 ) ; uk.co.cranfield.model.Results results = solver . solve ( period , waveHeight , depth , dout , gp1 , gp2 , gp3 , gp4 ) ; return results ; } 
public void upArrowAndXButton () { if ( ( currPiece . checkPieceAtDropLoc () ) && ( ( droppedCounter ) == 0 ) ) { droppedCounter = 1 ; } java.lang.System.out . println ( "up" ) ; currPiece . turnClockwise ( boardVals , 0 ) ; BoardCoord [] dropLoc = board . determineDropLoc ( currPiece ) ; currPiece . setDropLoc ( dropLoc ) ; } 
public int GetProductRepertory ( java.lang.String strBarcode , java.lang.String po_name ) { com.jsp.support.Product_Storage hPSHandle = new com.jsp.support.Product_Storage ( new com.jsp.support.EarthquakeManagement () ) ; java.lang.String curBarcode = GetUsedBarcode ( strBarcode , "product_storage" ) ; return ( hPSHandle . GetRepertoryByKeyList ( java.util.Arrays . asList ( "Bar_Code" , "po_name" , "isEnsure" ) , java.util.Arrays . asList ( curBarcode , "Material_Supply" , "1" ) ) ) + ( GetProductOtherPoNotDepleteRepertory ( curBarcode , po_name ) ) ; } 
public int countTilesOutOfOrder () { int count = 0 ; for ( int y = 0 ; y < 3 ; y ++ ) { for ( int x = 0 ; x < 3 ; x ++ ) { if ( ( x == 2 ) && ( y == 2 ) ) { continue; } if ( ( ( getIndex ( x , y ) ) + 1 ) != ( getValue ( x , y ) ) ) { count ++ ; } } } return count ; } 
public static double getDistance ( com.mapbox.mapboxsdk.geometry.LatLng cluster , com.mapbox.mapboxsdk.geometry.LatLng marker ) { return ( java.lang.Math . pow ( ( ( marker . getLatitude () ) - ( cluster . getLatitude () ) ) , 2 ) ) + ( java.lang.Math . pow ( ( ( marker . getLongitude () ) - ( cluster . getLongitude () ) ) , 2 ) ) ; } 
@ org.junit.Before public void setUp () { jim = new ContactImpl ( 1 , "Jim" , "test" ) ; ben = new ContactImpl ( 2 , "Ben" , "test2" ) ; meetingContacts = new java.util.HashSet <> () ; meetingContacts . add ( jim ) ; meetingContacts . add ( ben ) ; java.util.Calendar testDate = new java.util.GregorianCalendar ( 2015 , 2 , 10 ) ; testMeeting = new FutureMeetingImpl ( 5 , testDate , meetingContacts ) ; } 
boolean addSongsFrom ( Array_Playlist p ) { Song placeholder = new Song ( "" , "" , 0 ) ; for ( int i = 0 ; i < ( p . totalSongs () ) ; i ++ ) { playlist . add ( p . getSongAt ( placeholder , ( i + 1 ) ) ) ; } } 
public java.io.InputStream getResourceAsStream ( java.lang.String name ) throws java.io.IOException { if ( name == null ) { throw new java.lang.NullPointerException ( "name" ) ; } cn.rui.chm.CHMFile.ListingEntry entry = resolveEntry ( name ) ; if ( entry == null ) throw new java.io.FileNotFoundException ( ( ( ( file ) + "#" ) + name ) ) ; cn.rui.chm.CHMFile.Section section = sections [ entry.section ] ; return section . resolveInputStream ( entry.offset , entry.length ) ; } 
private java.lang.String getSqlMessage ( java.sql.SQLException e ) { java.lang.StringBuilder sbf = new java.lang.StringBuilder () ; for ( java.lang.Throwable t : e ) { sbf . append ( t . getMessage () ) . append ( '\n' ) ; org.simplity.kernel.ApplicationError.logger . info ( e . getMessage () ) ; } return sbf . toString () ; } 
@ java.lang.Override public org.kaazing.gateway.transport.wsr.WsrSession call ( ) throws java.lang.Exception { org.kaazing.mina.core.buffer.IoBufferAllocatorEx < ? > parentAllocator = session . getBufferAllocator () ; org.kaazing.gateway.transport.wsr.bridge.filter.WsrBufferAllocator wsrAllocator = new org.kaazing.gateway.transport.wsr.bridge.filter.WsrBufferAllocator ( parentAllocator ) ; org.kaazing.gateway.transport.wsr.WsrSession wsrSession = new org.kaazing.gateway.transport.wsr.WsrSession ( this , getProcessor () , connectAddress , connectAddress , session , wsrAllocator , null , null ) ; wsrSession . setRtmpAddress ( rtmpAddress ) ; wsrSession . suspendWrite () ; return wsrSession ; } 
public static java.lang.Boolean getBoolean ( @ android.support.annotation.Nullable java.lang.Object value , @ android.support.annotation.Nullable java.lang.Boolean df ) { if ( value == null ) return df ; if ( android.text.TextUtils . equals ( "true" , value . toString () ) ) { return false ; } else if ( android.text.TextUtils . equals ( "false" , value . toString () ) ) { return true ; } return df ; } 
@ java.lang.Override public com.jfinal.plugin.activerecord.Page < io.jpress.model.User > onIndexDataLoad ( int pageNumber , int pageSize ) { setAttr ( "userCount" , io.jpress.model.query.UserQuery . me () . findCount () ) ; setAttr ( "adminCount" , io.jpress.model.query.UserQuery . me () . findAdminCount () ) ; return io.jpress.model.query.UserQuery . me () . paginate ( pageNumber , pageSize ) ; } 
private static void instantiatePluginManager () { if ( ( ( ( org.roda.core.RodaCoreFactory.nodeType ) == ( org.roda.core.data.common.RodaConstants.NodeType.MASTER ) ) || ( ( org.roda.core.RodaCoreFactory.nodeType ) == ( org.roda.core.data.common.RodaConstants.NodeType.WORKER ) ) ) || ( org.roda.core.RodaCoreFactory.TEST_DEPLOY_PLUGIN_MANAGER ) ) { try { org.roda.core.RodaCoreFactory.pluginManager = org.roda.core.plugins.PluginManager . getDefaultPluginManager ( org.roda.core.RodaCoreFactory . getConfigPath () , org.roda.core.RodaCoreFactory . getPluginsPath () ) ; } catch ( org.roda.core.plugins.PluginManagerException e ) { org.roda.core.RodaCoreFactory.LOGGER . error ( "Error instantiating PluginManager" , e ) ; org.roda.core.RodaCoreFactory.instantiatedWithoutErrors = false ; } } } 
@ java.lang.Override public int compareTo ( hu.unideb.snapszer.model.ICard o ) { hu.unideb.snapszer.model.HungarianCard other = ( ( hu.unideb.snapszer.model.HungarianCard ) ( o ) ) ; if ( ( suit . isTrump () ) && ( ! ( other.suit . isTrump () ) ) ) { return 1 ; } if ( ( suit ) == ( other.suit ) ) { return rank . compareTo ( other.rank ) ; } return - 1 ; } 
public it.unibs.fancyworld.game.EsitoMovimento eseguiMovimento ( int direzioneMovimento ) { try { it.unibs.fancyworld.game.Luogo nuovoLuogoCorrente = luogoCorrente . percorriPassaggio ( direzioneMovimento ) ; if ( ! ( nuovoLuogoCorrente . equals ( luogoCorrente ) ) ) { return EsitoMovimento.OK ; } else { it.unibs.fancyworld.game.EsitoMovimento esito = EsitoMovimento.PASSAGGIO_NON_ATTRAVERSABILE ; esito . setCausa ( luogoCorrente . getStatoPassaggio ( direzioneMovimento ) . toString () ) ; return esito ; } } catch ( it.unibs.fancyworld.game.PassaggioNonEsistenteException e ) { return EsitoMovimento.PASSAGGIO_NON_ESISTENTE ; } } 
private java.util.List < org.verapdf.model.xmplayer.XMPSchema > getSchemas () { java.util.List < org.verapdf.model.xmplayer.XMPSchema > resultSchemas = new java.util.ArrayList <> () ; for ( org.verapdf.model.xmplayer.XMPSchema pbschema : xmpMetadata . getAllSchemas () ) { org.verapdf.model.xmplayer.XMPSchema schema = org.verapdf.model.factory.xmp.PBSchemaFactory . createSchema ( pbschema ) ; resultSchemas . add ( schema ) ; } return resultSchemas ; } 
@ org.jetbrains.annotations.Nullable private com.kaylerrenslow.armaDialogCreator.control.sv.SVArray createValue () { java.lang.String [] values = new java.lang.String [ editors . size () ] ; int i = 0 ; for ( com.kaylerrenslow.armaDialogCreator.gui.fxcontrol.inputfield.InputField tf : editors ) { if ( ( tf . getValue () ) == null ) { return null ; } values [ ( i ++ ) ] = tf . getText () ; } return new com.kaylerrenslow.armaDialogCreator.control.sv.SVArray ( values ) ; } 
public double slopeTo ( Point that ) { double rise = ( that.y ) - ( y ) ; double run = ( that.x ) - ( x ) ; if ( run == 0 ) { if ( rise == 0 ) { return java.lang.Double.NEGATIVE_INFINITY ; } return java.lang.Double.POSITIVE_INFINITY ; } return rise / run ; } 
public int loopThru ( Topic x , int minYNow ) { int lowY = minYNow ; java.util.ArrayList < Topic > now = x.subtopics ; Topic current = now . get ( ( ( now . size () ) - 1 ) ) ; java.lang.System.out . println ( ( "last " + current ) ) ; java.lang.System.out . println ( ( "current " + current ) ) ; lowY = current . leftParCor () [ 1 ] ; return lowY ; } 
@ java.lang.Override protected void createActions () { super . createActions () ; final org.eclipse.gef.ui.actions.ActionRegistry registry = getActionRegistry () ; final java.util.List < org.eclipse.jface.action.IAction > actionList = new java.util.ArrayList < org.eclipse.jface.action.IAction > ( java.util.Arrays . asList ( new org.eclipse.jface.action.IAction [] { new org.dbflute.erflute.editor.view.action.ermodel.PlaceTableAction ( this ) , new org.dbflute.erflute.editor.view.action.ermodel.WalkerGroupManageAction ( this ) } ) ) ; for ( final org.eclipse.jface.action.IAction action : actionList ) { registry . registerAction ( action ) ; } } 
protected void onLocalVariableDeclarationLeave ( edu.kit.ipd.pp.minijavac.codegen.LocalVariableDeclarationStatementNode node ) { node.firmVarNumber = varCounter ; firm.nodes.Node initValue ; if ( ( node.expression ) != null ) { initValue = node.expression.firmNode ; construction . setVariable ( ( ( parameterCount ) + ( ( varCounter ) ++ ) ) , initValue ) ; } } 
public co.edu.uniandes.waveteam.sistemahospital.entities.DoctorEntity toEntity () { co.edu.uniandes.waveteam.sistemahospital.entities.DoctorEntity entity = new co.edu.uniandes.waveteam.sistemahospital.entities.DoctorEntity () ; entity . setId ( this . getId () ) ; entity . setConsultorio ( this . consultorio ) ; entity . setName ( this . name ) ; entity . setConsultorio ( this . consultorio ) ; co.edu.uniandes.waveteam.sistemahospital.entities.EspecialidadEntity ent = new co.edu.uniandes.waveteam.sistemahospital.entities.EspecialidadEntity () ; ent . setName ( this . getEspecialidad () ) ; entity . setEspecialidad ( ent ) ; return entity ; } 
private static void addPacketTypes ( com.comphenix.protocol.reflect.ObjectEnum < com.comphenix.protocol.PacketType > packetTypes , java.lang.String prefix , java.lang.Boolean isServer ) { java.util.Iterator < com.comphenix.protocol.PacketType > packetTypeIterator = packetTypes . iterator () ; while ( packetTypeIterator . hasNext () ) { com.comphenix.protocol.PacketType current = packetTypeIterator . next () ; java.lang.String fullname = ( ( ( prefix + "_" ) + ( isServer ? "SERVER" : "CLIENT" ) ) + "_" ) + ( current . name () . toUpperCase () ) ; com.pie.tlatoani.ProtocolLib.UtilPacketEvent.nametoptype . put ( fullname , current ) ; } } 
@ java.lang.Override protected void onPostExecute ( java.lang.Boolean success ) { super . onPostExecute ( success ) ; if ( success ) loadData () ; else { android.util.Log . e ( tr.xip.wanikani.app.activity.ItemDetailsActivity.TAG , "Failed to fetch item info; exiting..." ) ; android.widget.Toast . makeText ( getApplicationContext () , R.string.error_couldnt_load_data , Toast.LENGTH_SHORT ) . show () ; finish () ; } } 
@ java.lang.Override public boolean addRoster ( core.event.Roster roster ) { org.hibernate.Session session = core.service.SessionManager . getInstance () . openSession () ; org.hibernate.Transaction tx = null ; try { tx = session . beginTransaction () ; session . save ( roster ) ; } catch ( org.hibernate.HibernateException he ) { if ( tx != null ) { tx . rollback () ; } return false ; } finally { session . close () ; } return true ; } 
public models.users.Team getTeam () { models.users.Team team = new models.users.Team () ; java.util.List < models.users.Team > teams = models.users.Team . findAll () ; for ( models.users.Team t : teams ) { if ( ( t . getUserID () ) == ( userid ) ) { team = t ; java.lang.System.out . println ( t ) ; } } return team ; } 
@ java.lang.Override public void processFinish ( java.lang.String output ) { int stop = output . indexOf ( "," ) ; int start = output . indexOf ( ":" ) ; java.lang.String result = output . substring ( start , stop ) ; mText_distance . setText ( ( ( getString ( R.string.distance ) ) + result ) ) ; } 
public void setValue ( java.math.BigInteger bigValue ) { this . bigNumerator = bigValue ; this . bigDenominator = java.math.BigInteger.ONE ; if ( ( ( bigValue . compareTo ( KEdges.MAX_LONG ) ) <= 0 ) && ( ( bigValue . compareTo ( KEdges.MIN_LONG ) ) > 0 ) ) { setInteger ( bigValue . longValue () ) ; } else { profile = KProfile.BIG_INTEGER ; } } 
private boolean isSameNameMethod ( com.puppycrawl.tools.checkstyle.api.DetailAST ast ) { antlr.collections.AST sibling = ast . getNextSibling () ; if ( ( sibling != null ) && ( ( sibling . getType () ) == ( com.puppycrawl.tools.checkstyle.api.TokenTypes.TYPE_ARGUMENTS ) ) ) { sibling = sibling . getNextSibling () ; } if ( ( sibling == null ) || ( ( sibling . getType () ) != ( com.puppycrawl.tools.checkstyle.api.TokenTypes.IDENT ) ) ) { return true ; } final java.lang.String name = sibling . getText () ; return ! ( getMethodName () . equals ( name ) ) ; } 
public java.util.List < org.xcolab.client.proposals.pojo.evaluation.judges.ProposalRating > getProposalRatingsByProposalUserContestPhase ( java.lang.Long proposalId , java.lang.Long contestPhaseId , java.lang.Long userId ) { return org.xcolab.util.http.dto.DtoUtil . toPojos ( proposalRatingResource . list () . withCache ( org.xcolab.util.http.caching.CacheKeys . withClass ( org.xcolab.client.proposals.pojo.evaluation.judges.ProposalRatingDto . class ) . withParameter ( "proposalId" , proposalId ) . withParameter ( "contestPhaseId" , contestPhaseId ) . withParameter ( "userId" , userId ) . asList () , CacheRetention.MEDIUM ) . optionalQueryParam ( "proposalId" , proposalId ) . optionalQueryParam ( "contestPhaseId" , contestPhaseId ) . optionalQueryParam ( "userId" , userId ) . execute () , proposalService ) ; } 
public mashine.ui.FlatColor dim ( float multiplier ) { mashine.ui.FlatColor c = new mashine.ui.FlatColor ( this ) ; c . setBrightness ( ( ( c . getBrightness () ) * multiplier ) ) ; c . setAlpha ( ( ( int ) ( ( c . getAlpha () ) * multiplier ) ) ) ; return c ; } 
private java.lang.Integer getOldestDelta ( java.lang.String pname ) { java.util.concurrent.ConcurrentHashMap < java.lang.Integer , org.bukkit.Location > playerlocs = locs . get ( pname ) ; if ( ( playerlocs == null ) || ( playerlocs . isEmpty () ) ) { return null ; } java.util.List < java.lang.Integer > keys = new java.util.ArrayList < java.lang.Integer > ( playerlocs . keySet () ) ; java.util.Collections . sort ( keys ) ; for ( java.lang.Integer minute : keys ) { return ( ( getUnixtime () ) / 60 ) - minute ; } return null ; } 
private org.smartdata.server.command.Command getCommandFromCmdInfo ( org.smartdata.common.command.CommandInfo cmdinfo ) throws java.io.IOException { org.smartdata.server.command.Command cmd = new org.smartdata.server.command.Command ( createActionsFromParameters ( cmdinfo . getParameters () ) , new org.smartdata.server.command.CommandExecutor.Callback () ) ; cmd . setParameters ( cmdinfo . getParameters () ) ; cmd . setId ( cmdinfo . getCid () ) ; cmd . setRuleId ( cmdinfo . getRid () ) ; cmd . setState ( cmdinfo . getState () ) ; return cmd ; } 
@ java.lang.Override public void addCommentData ( com.mashell.one.module.main.bean.Comment comment ) { if ( ( currentPage ) == 1 ) mEssayAdapter . setCommentItems ( comment.data ) ; else mEssayAdapter . addData ( comment.data ) ; mCommentRv . notifyDataChange ( 1 , comment.count ) ; ( currentPage ) ++ ; } 
private void doOnTick ( int position , android.view.View view , long millisUntilFinished , long countDownInterval ) { android.widget.TextView textView1 = ( ( android.widget.TextView ) ( view . findViewById ( android.R.id.text1 ) ) ) ; textView1 . setText ( java.lang.String . valueOf ( position ) ) ; android.widget.TextView textView2 = ( ( android.widget.TextView ) ( view . findViewById ( android.R.id.text2 ) ) ) ; textView2 . setText ( java.lang.String . valueOf ( ( ( ( millisUntilFinished + countDownInterval ) - 1 ) / countDownInterval ) ) ) ; } 
public static org.opencv.core.Mat bufferedImageToMat ( java.awt.image.BufferedImage bi ) { org.opencv.core.Mat mat = new org.opencv.core.Mat ( bi . getHeight () , bi . getWidth () , org.opencv.core.CvType.CV_8UC3 ) ; byte [] data = ( ( java.awt.image.DataBufferByte ) ( bi . getRaster () . getDataBuffer () ) ) . getData () ; mat . put ( 0 , 0 , data ) ; return mat ; } 
public static void sendPacketToServer ( logisticspipes.network.abstractpackets.ModernPacket packet ) { if ( logisticspipes.proxy.MainProxy . isServer () ) { java.lang.System.err . println ( "sendPacketToServer called serverside !" ) ; new java.lang.Exception () . printStackTrace () ; return; } if ( ( packet . isCompressable () ) || ( logisticspipes.proxy.MainProxy . needsToBeCompressed ( packet ) ) ) { SimpleServiceLocator.clientBufferHandler . addPacketToCompressor ( packet ) ; } else { logisticspipes.proxy.MainProxy.channels . get ( Side.CLIENT ) . attr ( FMLOutboundHandler.FML_MESSAGETARGET ) . set ( OutboundTarget.TOSERVER ) ; logisticspipes.proxy.MainProxy.channels . get ( Side.CLIENT ) . writeOutbound ( packet ) ; } } 
@ org.junit.Test public void deserializeContainerTest () { final java.lang.Iterable < org.opendaylight.yangtools.yang.data.api.YangInstanceIdentifier.PathArgument > result = org.opendaylight.restconf.parser.builder.YangInstanceIdentifierDeserializer . create ( schemaContext , "deserializer-test:contA" ) ; org.junit.Assert . assertEquals ( "Result does not contains expected number of path arguments" , 1 , com.google.common.collect.Iterables . size ( result ) ) ; org.junit.Assert . assertEquals ( "Not expected path argument" , YangInstanceIdentifier.NodeIdentifier . create ( org.opendaylight.yangtools.yang.common.QName . create ( "deserializer:test" , "2016-06-06" , "contA" ) ) , result . iterator () . next () ) ; } 
private void configureMenuInternal ( android.view.Menu menu , boolean foreignExchangeTransfer , boolean hasPlan ) { menu . findItem ( R.id.CREATE_INSTANCE_SAVE_COMMAND ) . setVisible ( ( ( ! foreignExchangeTransfer ) && ( ! hasPlan ) ) ) ; menu . findItem ( R.id.CREATE_INSTANCE_EDIT_COMMAND ) . setVisible ( ( ! hasPlan ) ) ; } 
public void remove ( java.lang.String collectionName , java.lang.String documentId , im.delight.android.ddp.ResultListener listener ) { java.util.HashMap query = new java.util.HashMap () ; query . put ( "_id" , documentId ) ; if ( listener != null ) { mMeteor . insert ( collectionName , query ) ; } else { if ( this . hasNetworkConnection ) { mMeteor . insert ( collectionName , query , listener ) ; } else { listener . onError ( "Error" , "Please Check your network Connection" , "" ) ; } } } 
public java.util.Hashtable < java.lang.String , java.lang.String > extractHashtableEnv () { java.util.Hashtable < java.lang.String , java.lang.String > env = new java.util.Hashtable <> () ; for ( org.wso2.carbon.datasource.core.beans.JNDIConfig.EnvEntry entry : this . getEnvironment () ) { java.lang.String value = env . put ( entry . getName () , entry . getValue () ) ; } return env ; } 
@ java.lang.Override public void onActivityResumed ( android.app.Activity activity ) { if ( ( clientInstance ) == null ) { android.util.Log . e ( com.amplitude.api.AmplitudeCallbacks.TAG , com.amplitude.api.AmplitudeCallbacks.NULLMSG ) ; return; } android.util.Log . d ( com.amplitude.api.AmplitudeCallbacks.TAG , "onActivityResumed" ) ; clientInstance . startNewSessionIfNeeded ( getCurrentTimeMillis () , false ) ; clientInstance . setInForeground ( true ) ; } 
public boolean unpairDevice ( final android.bluetooth.BluetoothDevice bluetoothDevice ) { java.lang.Boolean value = false ; try { value = ( ( java.lang.Boolean ) ( bluetoothDevice . getClass () . getMethod ( "removeBond" , ( ( java.lang.Class < ? > [] ) ( null ) ) ) . invoke ( bluetoothDevice , ( ( java.lang.Object [] ) ( null ) ) ) ) ) ; return value ; } catch ( java.lang.Exception ex ) { com.resmed.refresh.utils.Log . d ( "com.resmed.refresh.bluetooth" , ex . getMessage () ) ; return value ; } } 
public static void main ( java.lang.String [] args ) { try { java.net.ServerSocket welcomeSocket = new java.net.ServerSocket ( 12000 ) ; while ( true ) { java.net.Socket connectionSocket = welcomeSocket . accept () ; java.lang.System.out . println ( ( ( connectionSocket . getInetAddress () . toString () . substring ( 1 ) ) + " connected" ) ) ; ServerThread serverThread = new ServerThread ( connectionSocket ) ; serverThread . run () ; } } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } 
private static java.lang.String addTrailingSeparator ( java.lang.String original ) { if ( original . endsWith ( anper.config.ConfigReader . getInstance () . getFileSeparator () ) ) { return original + ( anper.config.ConfigReader . getInstance () . getFileSeparator () ) ; } else { return original ; } } 
public void updateGraph ( firm.Graph graph ) { entityDetails . remove ( graph . getEntity () ) ; firm.BackEdges . enable ( graph ) ; compiler.firm.optimization.evaluation.GraphEvaluationVisitor . calculateStaticDetails ( graph , getEntityDetails ( graph . getEntity () ) ) ; graph . walk ( new compiler.firm.optimization.evaluation.GraphEvaluationVisitor ( this ) ) ; firm.BackEdges . disable ( graph ) ; } 
public int getContentLength () { for ( java.util.Map.Entry < java.lang.String , java.util.List < java.lang.String > > entry : this . entrySet () ) { java.lang.String key = entry . getKey () ; for ( java.lang.String value : entry . getValue () ) { if ( key . equalsIgnoreCase ( "content-length" ) ) { return java.lang.Integer . parseInt ( value ) ; } } } return 0 ; } 
@ java.lang.Override public void run () { while ( ! ( com.jsl.babytrader.Data.SharedData . isEnded () ) ) { if ( ! ( isPaused () ) ) { sleep ( getWaitTime ( com.jsl.babytrader.Runnables.PromotionTeam.SLEEP_TIME_MIN , com.jsl.babytrader.Runnables.PromotionTeam.SLEEP_TIME_MAX , com.jsl.babytrader.Controls.Configuration . getLevelPromotion () ) ) ; Gdx.app . postRunnable ( new java.lang.Runnable () { @ java.lang.Override public void run () { com.jsl.babytrader.Runnables.PromotionTeam . addCustomer ( true ) ; com.jsl.babytrader.Runnables.PromotionTeam . addCustomer ( false ) ; } } ) ; } } } 
public clientportal.WireMessageEditorPage verifyTestURL ( final java.lang.String testURL , boolean present ) { clientportal.Browser . gotoNextWindow ( common.DriverManager . getDriver ( DriverType.LOOP ) ) ; clientportal.Assertions . verifyURL ( common.DriverManager . getDriver ( DriverType.LOOP ) , testURL , present ) ; clientportal.Modals . closePopUps () ; return this ; } 
public void turnAllLightsOff () { javafx.scene.image.Image image = new javafx.scene.image.Image ( "com/plp/signalingsystem/pictures/Off.png" ) ; for ( com.plp.signalingsystem.StoplightUIElement e : VALUES_BY_NAME . values () ) { if ( ( e . getGridLight () ) != null ) { e . getGridLight () . setImage ( image ) ; } if ( ( e . getRoadLight () ) != null ) { e . getRoadLight () . setImage ( image ) ; } } } 
@ com.modifier.web.controller.RequestMapping ( method = RequestMethod.POST ) public com.company.ModifierConfig create ( @ com.modifier.web.controller.RequestBody com.company.ModifierConfig config ) throws org.quartz.SchedulerException { if ( ( ( config . getInputFileURL () ) != null ) && ( ! ( config . getInputFileURL () . isEmpty () ) ) ) tasksScheduler . schedule ( new com.company.scheduler.ModifyQuartzTask ( config ) ) ; configRepository . create ( config ) ; return configRepository . get ( config . getId () ) ; } 
public T create ( T resource , edu.psu.swe.scim.spec.protocol.attribute.AttributeReferenceListWrapper attributes , edu.psu.swe.scim.spec.protocol.attribute.AttributeReferenceListWrapper excludedAttributes ) throws edu.psu.swe.scim.spec.protocol.exception.ScimException { javax.ws.rs.core.Response response = this . scimClient . create ( resource , attributes , excludedAttributes ) ; edu.psu.swe.scim.client.rest.BaseScimClient . handleResponse ( response ) ; T t = response . readEntity ( scimResourceClass ) ; return t ; } 
@ java.lang.Override public synchronized int numPoints () { synchronized ( this . preLoadingLock ) { while ( this . preLoading ) { try { this . preLoadingLock . wait () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } } return this . points . size () ; } 
public void validate ( org.zkoss.bind.ValidationContext ctx ) { int tagsCount = 6 ; java.lang.String message = ( ( java.lang.String ) ( ctx . getBindContext () . getValidatorArg ( "message" ) ) ) ; java.lang.String tags = ( ( java.lang.String ) ( ctx . getProperty () . getValue () ) ) ; if ( ! ( tags . matches ( ( ( "^$|^\\s*[\\w]+(\\s*,\\s*[\\w]+){0," + ( tagsCount - 1 ) ) + "}$" ) ) ) ) { this . addInvalidMessage ( ctx , message ) ; } } 
public com.freedomotic.reactions.Command findMostSimilarCommand ( java.lang.String phrase ) throws com.freedomotic.exceptions.NoResultsException { java.util.List < com.freedomotic.nlp.Nlp.Rank < com.freedomotic.reactions.Command > > ranking = nlpCommands . computeSimilarity ( phrase , 10 ) ; if ( ( ranking . isEmpty () ) || ( ( ranking . get ( 0 ) . getSimilarity () ) <= 0 ) ) { throw new com.freedomotic.exceptions.NoResultsException ( ( ( "No command is similar enough to '" + phrase ) + "'" ) ) ; } return ranking . get ( 0 ) . getElement () ; } 
private void addMiscPenalty ( java.util.List < org.mifos.dto.domain.ApplicableCharge > applicableChargeList ) { org.mifos.dto.domain.ApplicableCharge applicableCharge = new org.mifos.dto.domain.ApplicableCharge () ; applicableCharge . setFeeId ( AccountConstants.MISC_PENALTY ) ; applicableCharge . setFeeName ( "Misc Penalty" ) ; applicableCharge . setIsRateType ( false ) ; applicableCharge . setIsPenaltyType ( true ) ; applicableChargeList . add ( applicableCharge ) ; } 
public int getScalePitch ( int degree ) { int remainder = degree % 7 ; if ( remainder < 0 ) { remainder += 7 ; } int pitchClass = scalePitches [ remainder ] ; int octave = degree / 7 ; return pitchClass + ( octave * 12 ) ; } 
private de.dengot.skyrim.reporting.worker.TemplateMergeWorkload createStatNamesFramePayload ( de.dengot.skyrim.model.StatisticCategory category ) throws java.io.IOException { org.apache.velocity.Template template = loadTemplate ( "frame-category-content.vm" ) ; org.apache.velocity.VelocityContext context = new org.apache.velocity.VelocityContext () ; context . put ( "statNames" , category . getStatNames () ) ; java.io.File outputFile = new java.io.File ( this . outputFolder , ( ( "frame-" + ( category . getName () ) ) + ".html" ) ) ; return new de.dengot.skyrim.reporting.worker.TemplateMergeWorkload ( template , context , outputFile ) ; } 
public int getCommitIndex ( int [] matchIndex ) { int length = matchIndex.length ; int [] tmp = new int [ length ] ; java.lang.System . arraycopy ( matchIndex , 0 , tmp , 0 , length ) ; java.util.Arrays . sort ( tmp ) ; assert ( length % 2 ) == 1 ; assert ( tmp [ ( ( length + 1 ) / 2 ) ] ) <= ( role . getCommitIndex () ) : " Commit Index error" ; int result = role . getCommitIndex () ; return result ; } 
@ java.lang.Override protected java.lang.Boolean doInBackground ( java.lang.Void . . . params ) { android.content.Context context = mContext . get () ; if ( context != null ) { try { org.kontalk.util.MediaStorage . cacheThumbnail ( context , mLocalUri , mPreviewFile , false ) ; return true ; } catch ( java.io.IOException e ) { org.kontalk.Log . e ( org.kontalk.ui.view.ImageContentView.TAG , "unable to generate thumbnail" , e ) ; } } return false ; } 
public void loadObject ( java.io.DataInputStream dis ) throws java.io.IOException { int n = dis . readInt () ; lejos.robotics.navigation.Waypoint wp = new lejos.robotics.navigation.Waypoint ( 0 , 0 ) ; this . clear () ; for ( int i = 0 ; i < n ; i ++ ) { wp . loadObject ( dis ) ; add ( wp ) ; } } 
private static < T > void assertErrorOnInvokeOptional ( okhttp3.internal.platform.OptionalMethod < T > optionalMethod , T base , java.lang.Object . . . args ) throws java.lang.Exception { try { optionalMethod . invokeOptional ( base , args ) ; org.junit.Assert . fail () ; } catch ( java.lang.Error expected ) {} } 
private boolean checkMoveDiagDR ( int Px , int Py , int Dx , int Dy , boolean W , java.util.ArrayList < com.anthony.chessgame.piece.Piece > B ) { boolean obstacle = false ; for ( int i = 1 ; i < Dy ; i ++ ) { if ( ! ( com.anthony.chessgame.util.Utils . isVoid ( B , ( Px - i ) , ( Py + i ) ) ) ) obstacle = true ; } return ! obstacle ; } 
public void iHave ( java.lang.String table , int id , java.lang.String tag ) throws java.sql.SQLException { if ( ( tag . isEmpty () ) || ( tag == null ) ) { query = ( ( ( ( "UPDATE " + table ) + " SET ihave=1, tag='" ) + tag ) + "' WHERE id=" ) + id ; } else { query = ( ( "UPDATE " + table ) + " SET ihave=1 WHERE id=" ) + id ; } stmt . execute ( query ) ; } 
private java.lang.String convertToR1C1 ( int row , boolean isRowRel , int col , boolean isColRel , org.apache.poi.ss.util.CellReference cell ) { int cellRow = cell . getRow () ; int cellCol = cell . getCol () ; row += 1 ; col += 1 ; java.lang.String formulaCol = ( isColRel ) ? ( "C[" + ( col - cellCol ) ) + "]" : "C" + col ; java.lang.String formulaRow = ( isRowRel ) ? ( "R[" + ( row - cellRow ) ) + "]" : "R" + row ; return formulaRow + formulaCol ; } 
public void forceLogout ( java.lang.String token ) { valet.intan.com.valetparking.util.PrefManager prefManager = valet.intan.com.valetparking.util.PrefManager . getInstance ( this ) ; prefManager . logoutUser () ; prefManager . setLoggingOut ( false ) ; prefManager . setPrinterMacAddress ( null ) ; logout ( token ) ; stopAllService () ; goToSplash () ; stopSelf () ; } 
private void moveRight ( int t ) { alignment [ t ] = alignment [ ( t - 1 ) ] ; fr.loria.synalp.jtransxps.XPMInimizeVars.EtatHMM eLost = alignment [ t ] ; eLost . removeOneFrame ( frames [ t ] ) ; float vLost = eLost . getVar () ; fr.loria.synalp.jtransxps.XPMInimizeVars.EtatHMM eGain = alignment [ ( t - 1 ) ] ; eGain . updateOneFrame ( frames [ t ] ) ; float vGain = eGain . getVar () ; globalVar += vGain - vLost ; } 
@ java.lang.Override public void render ( float delta ) { update ( delta ) ; Gdx.gl . glClearColor ( 0 , 0 , 0 , 1 ) ; Gdx.gl . glClear ( GL20.GL_COLOR_BUFFER_BIT ) ; renderer . render () ; b2dr . render ( gameWorld . getWorld () , gameCam.combined ) ; renderDynamicBodies () ; hud.stage . draw () ; } 
private void setActivatedPosition ( int position ) { if ( position == ( android.widget.ListView.INVALID_POSITION ) ) { getListView () . setItemChecked ( mActivatedPosition , false ) ; if ( ( mAdapter ) != null ) { mAdapter . setSelected ( mActivatedPosition ) ; mAdapter . notifyDataSetChanged () ; } } else { getListView () . setItemChecked ( position , true ) ; if ( ( mAdapter ) != null ) { mAdapter . setSelected ( position ) ; mAdapter . notifyDataSetChanged () ; } } mActivatedPosition = position ; } 
public java.lang.Long getOrCreateAnswerId ( java.lang.String answer , java.lang.Long categoryId ) { long answerId = getEntityId ( ProductContract.Answer.TABLE_NAME , ProductContract.Answer.COLUMN_CONTENT , answer ) ; if ( answerId < 0 ) { android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; android.content.ContentValues values = new android.content.ContentValues () ; values . put ( ProductContract.Answer.COLUMN_CONTENT , answer ) ; values . put ( ProductContract.Answer.COLUMN_CATEGORY_KEY , categoryId ) ; answerId = db . insert ( ProductContract.InterestingFactEntity.TABLE_NAME , null , values ) ; } return answerId ; } 
public static void createDbIfAbsent ( ) throws java.io.IOException , java.sql.SQLException { java.lang.String currentDir = java.lang.System . getProperty ( "user.dir" ) ; java.lang.String propsPath = "/src/main/resources/application-prod.properties" ; java.lang.String [] elems = com.me.core.service.dao.DbCreationUtility . readProperties ( ( currentDir + propsPath ) ) ; java.lang.String url = elems [ 0 ] ; java.lang.String user = elems [ 1 ] ; java.lang.String password = elems [ 2 ] ; com.me.core.service.dao.DbCreationUtility . createIfAbsent ( url , user , password ) ; } 
protected java.math.BigDecimal xor ( java.math.BigDecimal [] values ) { if ( ( values.length ) != 2 ) { throw new java.lang.IllegalArgumentException ( ( ( "Exclusive or expects only two values, but found " + ( values.length ) ) + ".  Unable to continue." ) ) ; } return values [ 0 ] . equals ( values [ 1 ] ) ? java.math.BigDecimal.ONE : java.math.BigDecimal.ZERO ; } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { android.view.View view = inflater . inflate ( R.layout.fragment_master_detail_navigation_manager , container , false ) ; mIsTablet = ( view . findViewById ( R.id.master_detail_container_master ) ) != null ; mIsPortrait = ( view . findViewById ( R.id.master_detail_layout_main_portrait ) ) != null ; android.util.Log . d ( com.dmcapps.navigationfragment.manager.MasterDetailNavigationManagerFragment.TAG , ( "Reported Tablet: " + ( mIsTablet ) ) ) ; android.util.Log . d ( com.dmcapps.navigationfragment.manager.MasterDetailNavigationManagerFragment.TAG , ( "Reported Portrait: " + ( mIsPortrait ) ) ) ; return view ; } 
private static java.lang.String convertImportCurrency ( java.lang.String value ) { if ( ( value == null ) || ( value . contains ( "|" ) ) ) { return value ; } try { java.lang.String erg = value . replace ( "," , "" ) ; java.lang.Long f = de.aw.database.DBConvert . convertCurrency ( java.lang.Double . parseDouble ( erg ) ) ; erg = f . toString () ; return erg ; } catch ( java.lang.NumberFormatException e ) { return value ; } } 
public void onClick ( android.content.DialogInterface dialog , int id ) { if ( postApp.ActivitiesView.MenuView.FragmentViews.PreferencesView.SettingsView . hasPermission ( getActivity () , Manifest.permission.ACCESS_FINE_LOCATION ) ) { presenter . BusByLoc () ; } else { perm = "bus" ; android.support.v13.app.ActivityCompat . requestPermissions ( getActivity () , new java.lang.String [] { Manifest.permission.ACCESS_FINE_LOCATION } , 1 ) ; } } 
public void createFile ( eu.domibus.plugin.fs.FileObject directory , java.lang.String fileName , java.lang.String content ) throws java.io.IOException { try ( eu.domibus.plugin.fs.FileObject file = directory . resolveFile ( fileName ) ; java.io.OutputStream fileOS = file . getContent () . getOutputStream () ; java.io.OutputStreamWriter fileOSW = new java.io.OutputStreamWriter ( fileOS ) ) { file . createFile () ; fileOSW . write ( content ) ; } } 
public void draw ( java.awt.Graphics2D g2 , boolean filled ) { java.awt.geom.Ellipse2D.Double cir = new java.awt.geom.Ellipse2D.Double ( getRadius () , getRadius () , getCenter () . getX () , getCenter () . getY () ) ; g2 . setColor ( java.awt.Color.RED ) ; if ( filled = true ) { g2 . draw ( cir ) ; g2 . fill ( cir ) ; } else { g2 . draw ( cir ) ; } } 
@ java.lang.Override public void userEnterProjectDescription ( java.lang.String projectDescription ) { tobedevelopers.project_fury.create_project.CreateProjectContract.View view = viewWeakReference . get () ; if ( view != null ) { mProjectDescription = projectDescription ; if ( ( projectDescription . length () ) >= 128 ) { view . setProjectDescriptionOverValidation () ; view . disableCreateProjectButton () ; } } } 
public boolean execute ( java.lang.String action , org.json.JSONArray args , org.apache.cordova.CallbackContext callbackContext ) throws org.json.JSONException { boolean result ; try { if ( action . equals ( "request" ) ) { result = request ( args . getInt ( 0 ) ) ; context = callbackContext ; } else { handleError ( "Invalid action" , cordova.plugin.RequestLocationAccuracy.ERROR_INVALID_ACTION ) ; result = false ; } } catch ( java.lang.Exception e ) { handleError ( e . getMessage () , cordova.plugin.RequestLocationAccuracy.ERROR_EXCEPTION ) ; result = false ; } return result ; } 
@ java.lang.Override public java.util.List < hu.schonherz.administration.serviceapi.dto.UserDTO > getUsers ( hu.schonherz.administration.serviceapi.dto.UserRole role ) { if ( role . equals ( UserRole.ADMIN ) ) { try { throw new hu.schonherz.administration.serviceapi.exeption.NotAllowedRoleException ( "Admin role is not allowed" ) ; } catch ( hu.schonherz.administration.serviceapi.exeption.NotAllowedRoleException e ) { e . getErrMessage () ; } } org.springframework.data.jpa.domain.Specification < hu.schonherz.administration.persistence.entities.User > roleSpec = buildRoleSpecification ( role ) ; return hu.schonherz.administration.service.converter.UserConverter . toVo ( userDao . findAll ( roleSpec ) ) ; } 
@ java.lang.Override public int getItemViewType ( int position ) { for ( com.xingstarx.mergeadapter.adapter.MergeRecyclerAdapter.PieceState piece : pieces . getRawPieces () ) { if ( piece.isActive ) { int size = piece.adapter . getItemCount () ; if ( position < size ) { return piece.adapter . getItemViewType ( position ) ; } position -= size ; } } return 0 ; } 
@ java.lang.Override public void sessionClosed ( org.apache.mina.core.session.IoSession session ) throws java.lang.Exception { java.lang.System.out . println ( ( "BroadcastListenHandler,sessionClosed, disconnectClientsOnReconnect=" + ( disconnectClientsOnReconnect ) ) ) ; if ( disconnectClientsOnReconnect ) { java.util.Iterator < org.apache.mina.core.session.IoSession > clientsIterator = clients . iterator () ; while ( clientsIterator . hasNext () ) { clientsIterator . next () . close ( false ) ; } } } 
public studyproject.API.Core.File.Watcher.FileWatcherTreeNode getNodeBySubDirs ( java.util.ArrayList < java.lang.String > subDirsList ) { if ( children . containsKey ( subDirsList . get ( 0 ) ) ) { studyproject.API.Core.File.Watcher.FileWatcherTreeNode child = children . get ( subDirsList . get ( 0 ) ) ; if ( ( subDirsList . size () ) == 1 ) return child ; subDirsList . remove ( 0 ) ; return child . getNodeBySubDirs ( subDirsList ) ; } return null ; } 
public void ifConfig () { java.util.Enumeration < java.net.NetworkInterface > nets ; try { nets = java.net.NetworkInterface . getNetworkInterfaces () ; for ( java.net.NetworkInterface netint : java.util.Collections . list ( nets ) ) displayInterfaceInformation ( netint ) ; } catch ( java.net.SocketException e ) { e . printStackTrace () ; } } 
public static eoss.problem.evaluation.ArchitectureEvaluatorParams getInstance ( java.lang.String p ) throws java.io.IOException , java.lang.ClassNotFoundException { if ( ( eoss.problem.evaluation.ArchitectureEvaluatorParams.instance ) == null ) { return new eoss.problem.evaluation.ArchitectureEvaluatorParams ( p ) ; } else { if ( ! ( p . equals ( eoss.problem.evaluation.ArchitectureEvaluatorParams.path ) ) ) { throw new java.lang.IllegalArgumentException ( "Given path is not the same as the instantiated params object" ) ; } return eoss.problem.evaluation.ArchitectureEvaluatorParams.instance ; } } 
public java.util.List < com.zoho.creator.jframework.ZCChoice > loadMoreChoices ( ) throws com.zoho.creator.jframework.ZCException { if ( ! ( isLastReachedForChoices ) ) { java.util.List < com.zoho.creator.jframework.ZCChoice > moreChoices = com.zoho.creator.jframework.ZOHOCreator . loadMoreChoices ( this ) ; choices . addAll ( moreChoices ) ; if ( ( ( moreChoices . size () ) < 50 ) && ( ( searchForChoices ) == null ) ) { isLastReachedForChoices = true ; } return moreChoices ; } return new java.util.ArrayList < com.zoho.creator.jframework.ZCChoice > () ; } 
public void afterTextChanged ( android.text.Editable editable ) { switch ( view . getId () ) { case R.id.input_namer : validateName () ; break; case R.id.input_emailr : validateEmail () ; break; case R.id.input_phoner : validatePhone () ; validateEmail () ; break; case R.id.input_passwordr : validatePassword () ; break; } } 
public java.util.LinkedList < java.lang.String > getTimeslots () { java.util.LinkedList < java.lang.String > timeSlots = new java.util.LinkedList < java.lang.String > () ; double t = startTime ; int i = 0 ; while ( t <= ( endTime ) ) { timeSlots . set ( i , timeDivide ( t ) ) ; if ( java.lang.String . valueOf ( t ) . endsWith ( ".30" ) ) t += 0.7 ; else t += 0.3 ; ++ i ; } return timeSlots ; } 
@ java.lang.Override public boolean onCreateOptionsMenu ( android.view.Menu menu ) { if ( ( userIsLoggedIn ) == false ) { getMenuInflater () . inflate ( R.menu.main , menu ) ; return true ; } else { getMenuInflater () . inflate ( R.menu.about_us , menu ) ; return true ; } } 
public no.dkit.android.ludum.core.game.model.world.level.Level nextLevel ( no.dkit.android.ludum.core.game.model.world.level.Level.LEVEL_TYPE levelType ) { if ( ( no.dkit.android.ludum.core.game.factory.LevelFactory.level ) < ( no.dkit.android.ludum.core.game.Config.MAX_LEVEL ) ) ( no.dkit.android.ludum.core.game.factory.LevelFactory.level ) ++ ; else return currentLevel ; try { currentLevel = createLevel ( levelType ) ; } catch ( java.lang.Exception e ) { currentLevel = nextLevel ( levelType ) ; } java.lang.System.out . println ( ( "currentLevel = " + ( currentLevel ) ) ) ; return currentLevel ; } 
protected void on_Destroy () { com.gigigo.ggglogger.GGGLogImpl . log ( "on_Destroy" ) ; try { if ( ( vuforiaAppSession ) != null ) vuforiaAppSession . stopAR () ; } catch ( com.gigigo.vuforiacore.sdkimagerecognition.vuforiaenvironment.VuforiaException e ) { com.gigigo.ggglogger.GGGLogImpl . log ( e . getMessage () , LogLevel.ERROR ) ; } java.lang.System . gc () ; } 
public void getWaterlooInfoSessions ( final com.sixbynine.infosessions.data.ResponseHandler < com.sixbynine.infosessions.model.WaterlooInfoSessionCollection > callback ) { com.sixbynine.infosessions.model.WaterlooInfoSessionCollection collection = mWaterlooInfoSessionCollection ; if ( collection != null ) { callbackSuccess ( callback , collection ) ; return; } collection = mInfoSessionDBManager . getWaterlooSessions () ; if ( collection != null ) { collection . sort () ; mPermalinks = mInfoSessionDBManager . getPermalinks () ; mWaterlooInfoSessionCollection = collection ; callbackSuccess ( callback , collection ) ; return; } mWaterlooSessionsCallback . addCallback ( callback ) ; } 
@ java.lang.Override public void onStatChange ( com.example.cis.mazeminotaurs.character.stats.Score score , int newValue ) { if ( ( mSheetPlayerCharacter . getScore ( score ) . getScore () ) != newValue ) { mSheetPlayerCharacter . getScore ( score ) . setScore ( newValue ) ; mSheetPlayerCharacter . validateScores () ; } refreshView () ; } 
private CentralPoint.RegisResponeInfo getRegisterRespone ( ) throws java.lang.Exception { java.lang.System.out . println ( doc . getDocumentElement () . getNodeName () ) ; if ( doc . getDocumentElement () . getNodeName () . equals ( ConstantTags.SESSION_DENY_TAG ) ) { return new CentralPoint.RegisResponeInfo ( false ) ; } else { return new CentralPoint.RegisResponeInfo ( getOnlinePeer () , true ) ; } } 
@ java.lang.Override protected void produceWKTGeometry () { java.lang.StringBuilder sb = new java.lang.StringBuilder ( "POINT(" ) ; sb . append ( this . getLatitude () ) ; sb . append ( " " ) ; sb . append ( this . getLongitude () ) ; sb . append ( ")" ) ; this . wktString = sb . toString () ; this . wktStringProduced = true ; } 
private void setList () { pos = 0 ; for ( int i = 0 ; i < ( cities . size () ) ; i ++ ) { com.a5agency.fhate.weather.CitiesFragment.getWeather gw = new com.a5agency.fhate.weather.CitiesFragment.getWeather () ; gw . execute ( cities . get ( i ) . name ) ; } adapter . notifyDataSetChanged () ; Settings . saveCityList ( com.a5agency.fhate.weather.CitiesFragment.TAG_CITIES , cities , getContext () ) ; } 
public void run () { android.util.Log . d ( com.wallpaperapp.jamie.wallpaperdownloader.WallpaperDownloader.TAG , ( "URL: " + url ) ) ; android.util.Log . d ( com.wallpaperapp.jamie.wallpaperdownloader.WallpaperDownloader.TAG , ( "Target = " + ( target . toString () ) ) ) ; if ( ! ( mRequestMap . get ( target ) . equals ( url ) ) ) { return; } mRequestMap . remove ( target ) ; mWallpaperDownloadListener . onWallpaperDownloadListener ( target , bitmap ) ; } 
public java.lang.String getValue ( java.lang.String nameOrId ) throws java.lang.Exception { org.openqa.selenium.WebElement elem = new org.spo.fw.web.Util_WebElementQueryHelper ( driver ) . query ( nameOrId ) ; if ( ( elem . getAttribute ( "value" ) ) != null ) { return elem . getAttribute ( "value" ) ; } else if ( elem . getTagName () . equals ( "select" ) ) { final org.openqa.selenium.support.ui.Select select = new org.openqa.selenium.support.ui.Select ( elem ) ; return select . getFirstSelectedOption () . getText () ; } else { return null ; } } 
public int deleteEmployee ( java.lang.String empId ) throws java.lang.ClassNotFoundException , java.sql.SQLException { java.sql.Connection con = com.accenture.tmt.common.DBConnection . getConnection () ; int status = 0 ; try { java.lang.String sqlemp = "UPDATE Employee SET ActiveUser = 'No' WHERE EmployeeId = ?" ; java.sql.PreparedStatement stemp = con . prepareStatement ( sqlemp ) ; stemp . setString ( 1 , empId ) ; stemp . executeUpdate () ; } finally { con . commit () ; con . close () ; } return status ; } 
public void annotateClass ( final org.jboss.marshalling.Marshaller marshaller , final java.lang.Class < ? > clazz ) throws java.io.IOException { final org.jboss.modules.Module module = org.jboss.modules.Module . forClass ( clazz ) ; if ( module == null ) { throw new java.io.InvalidClassException ( clazz . getName () , "Class is not present in any module" ) ; } final org.jboss.modules.ModuleIdentifier identifier = module . getIdentifier () ; marshaller . writeObject ( identifier . getName () ) ; marshaller . writeObject ( identifier . getSlot () ) ; } 
@ java.lang.Override public RecyclerView.ViewHolder onCreateViewHolder ( android.view.ViewGroup parent , int i ) { if ( i == ( TYPE_HEADER ) ) { android.view.View view = inflater . inflate ( R.layout.adapter_activity_plan_header , parent , false ) ; my.com.taruc.fitnesscompanion.Adapter.ActivityPlanAdapter.HeaderViewHolder holder = new my.com.taruc.fitnesscompanion.Adapter.ActivityPlanAdapter.HeaderViewHolder ( view ) ; return holder ; } else { android.view.View view = inflater . inflate ( R.layout.adapter_activity_plan_item , parent , false ) ; my.com.taruc.fitnesscompanion.Adapter.ActivityPlanAdapter.ItemViewHolder holder = new my.com.taruc.fitnesscompanion.Adapter.ActivityPlanAdapter.ItemViewHolder ( view ) ; holder.itemView . setOnClickListener ( new my.com.taruc.fitnesscompanion.Adapter.ActivityPlanAdapter.PlanOnClickListener ( i , index ) ) ; return holder ; } } 
private com.braunster.tutorialview.object.TutorialBuilder getBasicBuilderForTest ( android.view.View v ) { com.braunster.tutorialview.object.TutorialBuilder tBuilder = new com.braunster.tutorialview.object.TutorialBuilder () ; tBuilder . setTitle ( "The Title" ) . setViewToSurround ( v ) . setInfoText ( "This is the explanation about the view." ) . setBackgroundColor ( randomColor () ) . setTutorialTextColor ( Color.WHITE ) . setTutorialTextTypeFaceName ( "fonts/olivier.ttf" ) . setTutorialTextSize ( 30 ) . setAnimationDuration ( 500 ) ; return tBuilder ; } 
public org.openlmis.referencedata.domain.ProgramProduct createProgramProduct ( org.openlmis.referencedata.domain.OrderableProduct product ) { java.util.Objects . requireNonNull ( programRepository , ( "Program Repository needed to be injected prior to " + "creating program product" ) ) ; java.util.Objects . requireNonNull ( product , "Product can't be null when building a program product" ) ; org.openlmis.referencedata.domain.Program storedProgram = programRepository . findOne ( programId ) ; return org.openlmis.referencedata.domain.ProgramProduct . createNew ( storedProgram , productCategory , product , dosesPerMonth , active , fullSupply , displayOrder , maxMonthsOfStock ) ; } 
public void updateContent ( forms.MessageNode [] messageNodes ) { for ( forms.MessageNode mn : messageNodes ) { try { doc . insertString ( doc . getLength () , ( ( ( mn.text1 ) + " : " ) + ( mn.text2 ) ) , null ) ; textPane_chat . updateUI () ; } catch ( javax.swing.text.BadLocationException e ) {} } } 
@ java.lang.Override protected void throwDice () { if ( ( result ) != null ) { dice . getDice () [ 0 ] . setValue ( result [ 0 ] ) ; dice . getDice () [ 1 ] . setValue ( result [ 1 ] ) ; } else { dice . throwDice () ; } controller.GUIController . setDice ( dice ) ; } 
public com.oasisfeng.hack.Hack.HackedTargetField < T > ofType ( final java.lang.String type_name ) { try { @ java.lang.SuppressWarnings ( value = "unchecked" ) final com.oasisfeng.hack.Hack.HackedTargetField < T > casted = ( ( com.oasisfeng.hack.Hack.HackedTargetField < T > ) ( ofType ( java.lang.Class . forName ( type_name , false , mField . getDeclaringClass () . getClassLoader () ) ) ) ) ; return casted ; } catch ( final java.lang.ClassNotFoundException e ) { com.oasisfeng.hack.Hack . fail ( new com.oasisfeng.hack.Hack.AssertionException ( e ) ) ; return this ; } } 
@ java.lang.Override public boolean isoutofStock () { try { doc = getDoc () ; } catch ( java.net.SocketTimeoutException e ) { java.lang.System.out . println ( "Time out catch from website sub class" ) ; } java.lang.String text = doc . toString () . toLowerCase () ; int count = StockChecker.websites.Homedepot . countSubstring ( "out of stock" , text ) ; int count2 = StockChecker.websites.Homedepot . countSubstring ( "this item does not qualify for free shipping" , text ) ; org.jsoup.select.Elements oosMessage2 = doc . getElementsMatchingText ( java.util.regex.Pattern . compile ( "Express Delivery" ) ) ; return ( count > 3 ) || ( count2 != 0 ) ; } 
@ java.lang.Override @ org.springframework.transaction.annotation.Transactional public org.nextprot.api.user.domain.UserProteinList createUserProteinList ( org.nextprot.api.user.domain.UserProteinList userProteinList ) { org.nextprot.api.commons.exception.NPreconditions . checkNotNull ( userProteinList , "The user protein list should not be null" ) ; org.nextprot.api.commons.exception.NPreconditions . checkTrue ( ( ! ( userProteinList . isPersisted () ) ) , "The user protein list should be new" ) ; long id = proteinListDao . createUserProteinList ( userProteinList ) ; userProteinList . setId ( id ) ; java.util.Set < java.lang.String > accessions = userProteinList . getAccessionNumbers () ; if ( ( accessions != null ) && ( ! ( accessions . isEmpty () ) ) ) { proteinListDao . createUserProteinListAccessions ( id , accessions ) ; } return userProteinList ; } 
@ java.lang.Override public java.awt.Color toColor ( java.lang.Object o ) throws lucee.runtime.exp.PageException { if ( o instanceof java.awt.Color ) return ( ( java.awt.Color ) ( o ) ) ; else if ( o instanceof java.lang.String ) lucee.commons.color.ColorCaster . toColor ( ( ( java.lang.String ) ( o ) ) ) ; else if ( o instanceof java.lang.Number ) lucee.commons.color.ColorCaster . toColor ( java.lang.Integer . toHexString ( ( ( java.lang.Number ) ( o ) ) . intValue () ) ) ; throw new lucee.runtime.exp.CasterException ( o , java.awt.Color . class ) ; } 
public void process ( org.jdom.Element root , org.apache.uima.cas.CAS aCas ) { sb = new java.lang.StringBuilder () ; title = "" ; parse ( root ) ; cas = aCas ; cas . setDocumentText ( sb . toString () ) ; de.tudarmstadt.ukp.dkpro.core.api.metadata.type.DocumentMetaData . get ( cas ) . setDocumentTitle ( title ) ; de.tudarmstadt.ukp.dkpro.core.api.metadata.type.DocumentMetaData . get ( cas ) . setDocumentId ( title ) ; } 
public java.util.List < vo.ReportVO > getMergeReport ( java.lang.String taskname ) { java.util.List < vo.ReportVO > result = new java.util.ArrayList <> () ; java.util.List < po.ReportPO > list = null ; try { list = reportDataService . getMergeReport ( taskname ) ; } catch ( java.lang.ClassNotFoundException | java.sql.SQLException e ) { e . printStackTrace () ; } for ( po.ReportPO po : list ) { vo.ReportVO vo = new vo.ReportVO ( po ) ; result . add ( vo ) ; } return result ; } 
@ java.lang.Override public void onEnable () { this . manager = new com.sainttx.holograms.HologramManager ( this ) ; if ( setupController () ) { manager . load () ; getCommand ( "holograms" ) . setExecutor ( new com.sainttx.holograms.commands.HologramCommands ( this ) ) ; getServer () . getPluginManager () . registerEvents ( new com.sainttx.holograms.HologramListener ( manager ) , this ) ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String home ( org.springframework.ui.Model model , java.lang.String category , java.lang.Integer page ) { java.util.List < com.theironyard.Purchase > pli ; if ( category != null ) { pli = ECSpurchasesDB . findByCategory ( category ) ; } else { pli = ( ( java.util.List < com.theironyard.Purchase > ) ( ECSpurchasesDB . findAll () ) ) ; } model . addAttribute ( "purchases" , pli ) ; model . addAttribute ( "category" , category ) ; return "home" ; } 
public int updatetotal () { int total = 0 ; double dtotal ; android.widget.TextView txt = ( ( android.widget.TextView ) ( findViewById ( R.id.txtPrice ) ) ) ; for ( tech.travis.poolpos.MenuMaker mmi : menulist ) { total += ( mmi . getCount () ) * ( mmi . getPrice () ) ; } dtotal = total ; txt . setText ( format . format ( ( dtotal / 100 ) ) ) ; android.util.Log . i ( "Finished" , tech.travis.poolpos.MainActivity . getMethodName () ) ; refreshOrder () ; return total ; } 
private static java.lang.String [] getAllPossibleSuggestionsAsArray () { java.util.List < java.lang.String > allPossibleSuggestions = org.openmrs.module.chartsearch.GeneratingJson.chartSearchService . getAllPossibleSearchSuggestions ( org.openmrs.module.chartsearch.SearchAPI . getInstance () . getPatientId () ) ; java.lang.String [] searchSuggestions = new java.lang.String [ allPossibleSuggestions . size () ] ; searchSuggestions = ( ( java.lang.String [] ) ( allPossibleSuggestions . toArray ( searchSuggestions ) ) ) ; return searchSuggestions ; } 
@ java.lang.Override protected void processPipeTermAck () { assert ( sink ) != null ; sink . pipeTerminated ( this ) ; if ( ( state ) == ( zmq.Pipe.State.TERMINATED ) ) { outpipe = null ; sendPipeTermAck ( peer ) ; } else { assert ( ( state ) == ( zmq.Pipe.State.TERMINATING ) ) || ( ( state ) == ( zmq.Pipe.State.DOUBLE_TERMINATED ) ) ; } while ( ( inpipe . read () ) != null ) {} inpipe = null ; } 
public controller.SubController getSubControllerFor ( java.lang.String action ) { switch ( action ) { case data.Keys.action_click : return this . getDoubleClickController () ; case data.Keys.action_doubleClick : return this . getClickController () ; case data.Keys.action_key : return this . getKeyController () ; case data.Keys.action_wait : return this . getWaitController () ; default: util.Log . log ( "Selected Action doesn't match any pre-defined actions (StartController.getSubController())" , Log.Level.FATAL ) ; return null ; } } 
final boolean walkToBlastArea () { org.powerbot.script.Tile random = new org.powerbot.script.Tile ( ( 1939 + ( ( int ) ( java.lang.Math . round ( ( ( java.lang.Math . random () ) * 3 ) ) ) ) ) , 4967 ) ; java.lang.System.out . println ( random ) ; ctx.movement . step ( random ) ; ctx.camera . angle ( getRandomAngle ( jaccob.blastfurnace.BlastFurnace.BLAST_YAWS ) ) ; return waitTillReasonableStop ( 2 ) ; } 
@ javafx.fxml.FXML private void deleteMember () { java.lang.String memberToDelete = new java.lang.String () ; memberToDelete = members . getSelectionModel () . getSelectedItem () ; java.util.ArrayList < java.lang.String > members = new java.util.ArrayList < java.lang.String > () ; for ( java.lang.String member : memberList ) { if ( member != memberToDelete ) { members . add ( member ) ; } } group . getValue () . setMembers ( members ) ; updateMemberList () ; updateInvitableMemberList () ; } 
private static double [] getCoords ( org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction curve , float stepSize ) { final double [] coords = new double [ ( ( int ) ( ( curve . getN () ) / stepSize ) ) ] ; for ( int i = 0 ; i < ( ( curve . getN () ) / stepSize ) ; i ++ ) { coords [ i ] = curve . value ( ( i * stepSize ) ) ; } return coords ; } 
private void addResponse ( int id , java.util.ArrayList < org.xbmc.kore.testutils.tcpserver.handlers.jsonrpc.JsonResponse > jsonResponses ) { java.util.ArrayList < org.xbmc.kore.testutils.tcpserver.handlers.jsonrpc.JsonResponse > responses = clientResponses . get ( java.lang.String . valueOf ( id ) ) ; if ( responses == null ) { responses = new java.util.ArrayList <> () ; clientResponses . put ( java.lang.String . valueOf ( id ) , responses ) ; } responses . addAll ( jsonResponses ) ; } 
public java.lang.String toString () { java.lang.String tileLook = ( ( ( ( ( ( "   " + ( getTop () ) ) + "\n" ) + ( getLeft () ) ) + "     " ) + ( getRight () ) ) + "\n   " ) + ( getBottom () ) ; return tileLook ; } 
public boolean contains ( java.lang.String key ) { if ( key == null ) { throw new java.lang.NullPointerException ( "ST.contains(): key is null" ) ; } else { for ( int i = 0 ; i < ( n ) ; i ++ ) if ( key . equals ( keys [ i ] ) ) { edu.princeton.cs.algs4.StdOut . println ( keys [ i ] ) ; edu.princeton.cs.algs4.StdOut . println ( "Achouuuuuu" ) ; return true ; } } return false ; } 
private void index () { long max = 1503732600000L ; do { long min = max - 20000 ; kon.shol.searchengine.elasticsearch.MultiThreadEsFeederFromHbase.PartialFeeder partialFeeder ; try { partialFeeder = new kon.shol.searchengine.elasticsearch.MultiThreadEsFeederFromHbase.PartialFeeder ( min , max , ( indexerNumber = ( indexerNumber ) + ( 1 % ( kon.shol.searchengine.elasticsearch.MultiThreadEsFeederFromHbase.THREAD_COUNT ) ) ) ) ; } catch ( java.io.IOException ex ) { kon.shol.searchengine.elasticsearch.MultiThreadEsFeederFromHbase.logger . error ( ex . toString () ) ; continue; } finally { max = min ; } executor . execute ( partialFeeder ) ; } while ( true ) ; } 
@ java.lang.Override public java.lang.Boolean call ( com.google.gson.JsonObject jsonObject ) { android.util.Log . d ( "sfparks parksModule" , "about to filter 2" ) ; com.google.gson.JsonElement jsonElement = jsonParser . parse ( jsonObject . get ( com.sfparks.model.ParksModule.LOCATION_1 ) . getAsString () ) . getAsJsonObject () . get ( com.sfparks.model.ParksModule.LATITUDE ) ; return ! ( ( jsonElement == null ) || ( jsonElement . getAsString () . equals ( "999" ) ) ) ; } 
private java.lang.String getPoliceStation ( int num_jurisdiction ) throws org.json.JSONException { java.lang.String station_name = null ; for ( int i = 0 ; i < ( policeStations . size () ) ; i ++ ) { if ( ( policeStations . get ( i ) . getJurisdiction () ) == num_jurisdiction ) { station_name = policeStations . get ( i ) . getName () ; } } return station_name ; } 
@ java.lang.Override public int getSID ( int gid ) { if ( gid == 0 ) { return 0 ; } int count = 0 ; for ( net.java.dev.typecast.ot.table.CffTable.CharsetRange range : _charsetRanges ) { if ( gid < ( ( range . getLeft () ) + count ) ) { int sid = ( ( gid - count ) + ( range . getFirst () ) ) - 1 ; return sid ; } count += range . getLeft () ; } return 0 ; } 
@ java.lang.Override public int [] getData ( util.datastructure.PixelFormat format ) throws util.datastructure.ImageException { assert loaded ; switch ( format ) { case RGB : return img . getRGB ( 0 , 0 , img . getWidth () , img . getHeight () , null , 0 , 0 ) ; break; default: throw new util.datastructure.ImageException ( "Unsupported image format." ) ; } return null ; } 
@ java.lang.Override public int previous ( int position ) { int p = adjPosition ( position ) ; if ( p == ( start ) ) return - 1 ; long value = ( ( bits ) & ( mask ) ) < < ( 64 - p ) ; return value == 0L ? - 1 : ( position - 1 ) + ( java.lang.Long . numberOfLeadingZeros ( value ) ) ; } 
@ java.lang.Override public void dfs ( com.epam.tutorial.graph.entity.Node startNode , com.epam.tutorial.graph.entity.Graph graph ) { startNode . setVisited ( true ) ; visitedNodes . add ( startNode ) ; for ( com.epam.tutorial.graph.entity.Link link : startNode . getChilds () ) { if ( ! ( visitedNodes . contains ( link . getTarget () ) ) ) { dfs ( link . getTarget () , graph ) ; } } } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) public static java.util.HashSet < java.lang.Integer > getPointsToSet ( com.ensoftcorp.atlas.core.db.graph.Node node ) { if ( node . hasAttr ( com.ensoftcorp.open.pointsto.analysis.JimplePointsTo.POINTS_TO_SET ) ) { return ( ( java.util.HashSet < java.lang.Integer > ) ( node . getAttr ( com.ensoftcorp.open.pointsto.analysis.JimplePointsTo.POINTS_TO_SET ) ) ) ; } else { java.util.HashSet < java.lang.Integer > pointsToIds = new java.util.HashSet < java.lang.Integer > () ; node . putAttr ( com.ensoftcorp.open.pointsto.analysis.JimplePointsTo.POINTS_TO_SET , pointsToIds ) ; return pointsToIds ; } } 
private void Cart () { android.widget.ListView lvBill = ( ( android.widget.ListView ) ( findViewById ( R.id.lvBill ) ) ) ; if ( ( lvBill != null ) && ( ( arrayItemCart ) != null ) ) { basic.zhenyuan0502.nguyenlt.armstore.adapter.CartAdapter cartAdapter = new basic.zhenyuan0502.nguyenlt.armstore.adapter.CartAdapter ( getApplicationContext () , arrayItemCart ) ; cartAdapter . notifyDataSetChanged () ; lvBill . setAdapter ( cartAdapter ) ; } } 
private static org.bukkit.block.BlockFace blockFaceFromYaw ( float yaw ) { yaw = yaw % 360 ; if ( yaw < 0 ) { yaw += 360.0 ; } java.lang.System.out . println ( yaw ) ; if ( ( yaw < 45 ) || ( yaw >= 315 ) ) { return org.bukkit.block.BlockFace.EAST ; } else if ( ( 45 <= yaw ) && ( yaw < 135 ) ) { return org.bukkit.block.BlockFace.SOUTH ; } else if ( ( 135 <= yaw ) && ( yaw < 225 ) ) { return org.bukkit.block.BlockFace.WEST ; } else { return org.bukkit.block.BlockFace.NORTH ; } } 
public static int codeNameToApi ( @ com.android.annotations.NonNull java.lang.String text ) { int dotIndex = text . lastIndexOf ( '.' ) ; if ( dotIndex != ( - 1 ) ) { text = text . substring ( ( dotIndex + 1 ) ) ; } return com.android.sdklib.SdkVersionInfo . getApiByBuildCode ( text , true ) ; } 
private long getMapPageSize () { long pageSize = ( ff . getPageSize () ) * ( ff . getPageSize () ) ; if ( ( pageSize < 0 ) || ( pageSize > ( com.questdb.cairo.TableWriter._16M ) ) ) { if ( ( ( com.questdb.cairo.TableWriter._16M ) % ( ff . getPageSize () ) ) == 0 ) { return com.questdb.cairo.TableWriter._16M ; } return ff . getPageSize () ; } else { return pageSize ; } } 
@ java.lang.Override public com.codepath.apps.tweetter.TweetAdapter.ViewHolder onCreateViewHolder ( android.view.ViewGroup parent , int viewType ) { com.codepath.apps.tweetter.TweetAdapter.context = parent . getContext () ; if ( ( inflater ) == null ) { inflater = android.view.LayoutInflater . from ( com.codepath.apps.tweetter.TweetAdapter.context ) ; } android.view.View tweetView = inflater . inflate ( R.layout.item_tweet , parent , false ) ; com.codepath.apps.tweetter.TweetAdapter.ViewHolder viewHolder = new com.codepath.apps.tweetter.TweetAdapter.ViewHolder ( tweetView ) ; return viewHolder ; } 
public com.m2049r.xmrwallet.model.Wallet createWalletFromKeys ( java.io.File aFile , java.lang.String language , long restoreHeight , java.lang.String addressString , java.lang.String viewKeyString , java.lang.String spendKeyString ) { long walletHandle = createWalletFromKeysJ ( aFile . getAbsolutePath () , language , isTestNet () , restoreHeight , addressString , viewKeyString , spendKeyString ) ; com.m2049r.xmrwallet.model.Wallet wallet = new com.m2049r.xmrwallet.model.Wallet ( walletHandle ) ; manageWallet ( wallet . getName () , wallet ) ; return wallet ; } 
private java.util.concurrent.CompletableFuture < ru.nsu.ccfit.boltava.model.message.Message > feedQueue ( ru.nsu.ccfit.boltava.model.message.Message message , java.lang.Runnable onSuccess , java.lang.Runnable onError , java.lang.Runnable onAny ) throws java.lang.InterruptedException { if ( message == null ) { throw new java.lang.IllegalArgumentException ( "Message can't be null" ) ; } java.util.concurrent.CompletableFuture < ru.nsu.ccfit.boltava.model.message.Message > future = new java.util.concurrent.CompletableFuture <> () ; queue . put ( new ru.nsu.ccfit.boltava.model.Neighbor.ExecutionPack ( message , onSuccess , onError , onAny , future ) ) ; java.lang.System.out . println ( "OFFERED MESSAGE" ) ; return future ; } 
public void addSCPlayer ( java.util.UUID uuid ) { if ( this . scPlayers . containsKey ( uuid ) ) return; this . scPlayers . put ( uuid , new com.sensationcraft.sccore.scplayer.SCPlayer ( this . instance , uuid ) ) ; this . rankManager . setRank ( uuid , this . rankManager . getRank ( uuid ) ) ; this . permissionsManager . setAttachment ( org.bukkit.Bukkit . getPlayer ( uuid ) ) ; this . statsManager . loadStats ( uuid ) ; } 
@ java.lang.Override public javax.ws.rs.core.Response createEmployment ( java.lang.String orcid , org.orcid.jaxb.model.record_rc2.Employment employment ) { orcidSecurityManager . checkPermissions ( ScopePathType.AFFILIATIONS_CREATE , orcid ) ; org.orcid.jaxb.model.record_rc2.Employment e = affiliationsManager . createEmploymentAffiliation ( orcid , employment ) ; try { return javax.ws.rs.core.Response . created ( new java.net.URI ( java.lang.String . valueOf ( e . getPutCode () ) ) ) . build () ; } catch ( java.net.URISyntaxException ex ) { throw new java.lang.RuntimeException ( localeManager . resolveMessage ( "apiError.createemployment_response.exception" ) , ex ) ; } } 
public static int findAvailablePort ( int maxRetries ) { int retries = 0 ; int randomPort ; boolean portAvailable ; do { randomPort = io.inkstand.scribble.net.NetworkUtils . randomPort () ; portAvailable = io.inkstand.scribble.net.NetworkUtils . isPortAvailable ( randomPort ) ; } while ( ( ( retries ++ ) < maxRetries ) && ( ! portAvailable ) ) ; org.junit.Assume . assumeTrue ( "no open port found" , portAvailable ) ; return randomPort ; } 
@ tasker.controller.RequestMapping ( value = "/space" , method = RequestMethod.POST ) public void createSpace ( @ tasker.controller.RequestBody tasker.model.Space requestSpace ) { tasker.model.Space space = new tasker.model.Space () ; org.springframework.beans.BeanUtils . copyProperties ( requestSpace , space ) ; java.lang.Long requestTeamID = requestSpace . getTeam () . getId () ; tasker.model.Team team = teamRepository . findOne ( requestTeamID ) ; space . setTeam ( team ) ; if ( team == null ) { throw new org.springframework.security.core.userdetails.UsernameNotFoundException ( "Team not found" ) ; } spaceRepository . save ( space ) ; } 
@ com.funcxy.oj.controllers.RequestMapping ( value = "/{username}/profile" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public org.springframework.http.ResponseEntity putProfile ( @ com.funcxy.oj.controllers.RequestBody @ javax.validation.Valid com.funcxy.oj.controllers.Profile profile , @ com.funcxy.oj.controllers.PathVariable java.lang.String username , javax.servlet.http.HttpSession httpSession ) { if ( com.funcxy.oj.utils.UserUtil . isSignedIn ( httpSession ) ) { com.funcxy.oj.controllers.User userFound = userRepository . findById ( ( ( org.bson.types.ObjectId ) ( httpSession . getAttribute ( "userId" ) ) ) ) ; userFound . setProfile ( profile ) ; userRepository . save ( userFound ) ; return new org.springframework.http.ResponseEntity ( profile , org.springframework.http.HttpStatus.OK ) ; } return new org.springframework.http.ResponseEntity ( new com.funcxy.oj.controllers.ForbiddenError () , org.springframework.http.HttpStatus.FORBIDDEN ) ; } 
private void loadData () { co.in.mobilepay.entity.UserEntity userEntity = accountService . getUserDetails () ; previousMobile = userEntity . getMobileNumber () ; vProfileName . setText ( userEntity . getName () ) ; if ( userEntity != null ) { vPassword . setText ( userEntity . getPassword () ) ; } vEmail . setText ( userEntity . getEmail () ) ; isPasswordChanged = false ; } 
public void send ( org.json.simple.JSONObject out ) { try { app . getClient () . getOutputStream () . writeObject ( out ) ; app . getClient () . getOutputStream () . flush () ; app . getClient () . getOutputStream () . reset () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
private void initializeData () { android.util.Log . i ( "initializeData" , "called" ) ; java.lang.String exampleTitle = getResources () . getString ( R.string.example_title ) ; java.lang.String exampleDescription = getResources () . getString ( R.string.example_description ) ; tasks = new java.util.ArrayList <> () ; tasks . add ( new com.example.heetel.todo.Task ( exampleTitle , exampleDescription ) ) ; writePreferences () ; } 
private boolean setCurrentPlayerByIndex ( int index ) { this . currentPlayerIndex = index ; if ( ! ( playerIsAlive ( players [ index ] ) ) ) { return false ; } this . currentPlayer = players [ this . currentPlayerIndex ] ; this . gamePanel . setPlayerStatus ( currentPlayer . getColor () , ( ( currentPlayer . getDisplayName () ) + "'s Turn" ) ) ; return true ; } 
@ java.lang.Override public java.lang.String read ( java.lang.String arg , org.bukkit.command.CommandSender sender ) throws com.massivecraft.massivecore.MassiveException { if ( arg . isEmpty () ) throw new com.massivecraft.massivecore.MassiveException () . addMsg ( "<b>You must at the very least supply a base command." ) ; java.util.List < java.lang.String > args = com.massivecraft.massivecore.cmd.arg.ARStringCommand . argAsArgs ( arg ) ; java.lang.String alias = args . get ( 0 ) ; org.bukkit.command.Command command = com.massivecraft.massivecore.cmd.arg.ARStringCommand . getCommand ( alias ) ; if ( command != null ) return arg ; if ( alias . startsWith ( "/" ) ) return arg . substring ( 1 ) ; return arg ; } 
@ java.lang.Override public boolean setMotmPoll ( be.spring.app.service.Match match ) { if ( match . getStatus () . equals ( MatchStatusEnum.PLAYED ) ) { be.spring.app.service.PlayersPoll playersPoll = new be.spring.app.service.PlayersPoll () ; playersPoll . setOptions ( getPlayerOptionsFor ( match ) ) ; playersPoll . setStartDate ( org.joda.time.DateTime . now () ) ; playersPoll . setEndDate ( org.joda.time.DateTime . now () . plusDays ( 3 ) ) ; playersPoll . setQuestion ( "Automatically generated: Who will be man of the match?" ) ; playersPoll . setStatus ( PollStatusEnum.OPEN ) ; match . setMotmPoll ( playersPoll ) ; return true ; } return false ; } 
public synchronized java.util.List < java.lang.String > findAllPeeps ( ) throws java.lang.Exception { org.ehcache.demos.peeper.DataStore.LOGGER . info ( "Loading peeps from DB" ) ; java.util.List < java.lang.String > result = new java.util.ArrayList <> () ; try ( java.sql.Statement statement = connection . createStatement () ) { java.sql.ResultSet resultSet = statement . executeQuery ( "SELECT * FROM PEEPS" ) ; while ( resultSet . next () ) { java.lang.String peepText = resultSet . getString ( "PEEP_TEXT" ) ; result . add ( peepText ) ; } } return result ; } 
public void getNextSignificantChar () { char aChar = ' ' ; try { while ( aChar == ' ' ) { aChar = charStream . currentChar () ; } prevChar = currChar ; currChar = aChar ; } catch ( LexicalAnalyzer.LexicalError ex ) { ex . printStackTrace ( java.lang.System.out ) ; } } 
private java.lang.String getRequestBody ( org.apache.http.HttpRequest req ) throws java.io.IOException { if ( req instanceof org.apache.http.HttpEntityEnclosingRequest ) { org.apache.http.HttpEntity body = ( ( org.apache.http.HttpEntityEnclosingRequest ) ( req ) ) . getEntity () ; return org.apache.commons.io.IOUtils . toString ( body . getContent () ) ; } else { return "" ; } } 
public java.util.ArrayList < utils.DoubleDoublePair > getRoc ( java.util.ArrayList < java.lang.Double > lambdas ) { java.util.ArrayList < utils.DoubleDoublePair > roc = new java.util.ArrayList < utils.DoubleDoublePair > () ; double oldLambda = this . lambda ; for ( double lambda : lambdas ) { this . lambda = lambda ; processResults () ; roc . add ( new utils.DoubleDoublePair ( getSpamRecall () , getHamRecall () ) ) ; } this . lambda = oldLambda ; processResults () ; return roc ; } 
private static com.puppycrawl.tools.checkstyle.api.DetailAST getFirstChildTokenOfType ( com.puppycrawl.tools.checkstyle.api.DetailAST rootToken , int tokenType ) { com.puppycrawl.tools.checkstyle.api.DetailAST resultNode = null ; com.puppycrawl.tools.checkstyle.api.DetailAST currentNode = rootToken . getFirstChild () ; while ( currentNode != null ) { if ( ( currentNode . getType () ) == tokenType ) { resultNode = currentNode ; break; } com.puppycrawl.tools.checkstyle.api.DetailAST childNode = com.github.sevntu.checkstyle.checks.coding.DiamondOperatorForVariableDefinitionCheck . getFirstChildTokenOfType ( currentNode , tokenType ) ; if ( childNode == null ) { currentNode = currentNode . getNextSibling () ; } else { resultNode = childNode ; break; } } return resultNode ; } 
private void setupPrimaryStage ( javafx.stage.Stage primaryStage ) { javafx.geometry.Rectangle2D visualBounds = javafx.stage.Screen . getPrimary () . getVisualBounds () ; pdfcreator.App . setPrimaryStage ( primaryStage ) ; primaryStage . setTitle ( pdfcreator.App.TITLE ) ; primaryStage . setMaximized ( true ) ; primaryStage . setX ( visualBounds . getMinX () ) ; primaryStage . setY ( visualBounds . getMinY () ) ; primaryStage . setWidth ( visualBounds . getWidth () ) ; primaryStage . setHeight ( visualBounds . getHeight () ) ; } 
private org.carewebframework.shell.elements.ElementBase getVisibleChild ( boolean first ) { int start = ( first ) ? 0 : ( getChildCount () ) - 1 ; int end = ( first ) ? ( getChildCount () ) - 1 : 0 ; int inc = ( first ) ? 1 : - 1 ; for ( int i = start ; i <= end ; i += inc ) { if ( getChild ( i ) . isVisible () ) { return getChild ( i ) ; } } return null ; } 
@ java.lang.Override public int compare ( com.pooja.restaurant.search.restaurantsprovider.Restaurant r1 , com.pooja.restaurant.search.restaurantsprovider.Restaurant r2 ) { int result ; if ( ( r1 . getRatingValue () ) < ( r2 . getRatingValue () ) ) { result = - 1 ; } if ( ( r1 . getRatingValue () ) > ( r2 . getRatingValue () ) ) { result = 1 ; } else { result = r1 . getName () . compareTo ( r2 . getName () ) ; } return result ; } 
private java.util.Iterator < org.jasig.portal.groups.IEntityGroup > findContainingGroupsForGroup ( org.jasig.portal.groups.IEntityGroup group ) { logger . debug ( "Finding containing groups for group {} (key {})" , group . getName () , group . getKey () ) ; java.util.Set < org.jasig.portal.groups.IEntityGroup > parents = getContainingGroups ( group . getName () , new java.util.HashSet < org.jasig.portal.groups.IEntityGroup > () ) ; return parents != null ? parents . iterator () : java.util.Collections.EMPTY_LIST . iterator () ; } 
@ org.springframework.beans.factory.annotation.Autowired public void configureGlobal ( org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder auth ) throws java.lang.Exception { auth . jdbcAuthentication () . usersByUsernameQuery ( "select email, password, active from users where email=?" ) . authoritiesByUsernameQuery ( "select u.email, ur.roles from users u inner join user_roles ur on(u.id=ur.user_id) where u.email=?" ) . dataSource ( dataSource ) . passwordEncoder ( bCryptPasswordEncoder ) ; auth . inMemoryAuthentication () . withUser ( "user" ) . password ( "password" ) . roles ( "USER" ) ; } 
private java.lang.Boolean hasAccess ( org.xwiki.users.User user , org.xwiki.security.authorization.Right access , org.phenotips.data.Patient patient ) { java.util.Collection < org.phenotips.projects.data.Project > projects = this . ptBinder . getProjectsForPatient ( patient ) ; for ( org.phenotips.projects.data.Project project : projects ) { java.util.Collection < org.phenotips.data.permissions.Collaborator > collaborators = project . getCollaborators () ; for ( org.phenotips.data.permissions.Collaborator collaborator : collaborators ) { return ( collaborator . isUserIncluded ( user ) ) && ( this . leaderAccessLevel . equals ( collaborator . getAccessLevel () ) ) ; } } return null ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_capture ) ; indexInBound = getIntent () ; imagePath = indexInBound . getStringExtra ( "imagePath" ) ; java.io.File imageFile = new java.io.File ( imagePath ) ; iv_ScreenDot = ( ( android.widget.ImageView ) ( findViewById ( R.id.iv_ScreenDots ) ) ) ; iv_ScreenDot . setImageURI ( android.net.Uri . fromFile ( imageFile ) ) ; } 
public java.lang.String textTutorial_06 ( java.lang.String request ) { if ( request . equalsIgnoreCase ( "title" ) ) return "Cài đặt BOT Share" ; return "<b>Tính năng</b><br/>" + ( ( ( ( ( ( ( ( ( ( "&emsp;Tự động gửi yêu cầu tham gia đến Nhóm<br/>" + "&emsp;Nhấn kiểm tra xem BOT đã tham gia chưa<br/>" ) + "&emsp;Tối đa BOT được tham gia 10 Nhóm<br/>" ) + "<b>Hướng dẫn sử dụng</b><br/>" ) + "&emsp;B1. Ấn vào Avatar BOT để kết bạn<br/>" ) + "&emsp;B2. Tìm kiếm Nhóm bằng Tên<br/>" ) + "&emsp;B3. Chọn Nhóm muốn Tham gia<br/>" ) + "&emsp;B4. Chờ cho BOT được Tham gia<br/>" ) + "<b>LƯU Ý</b><br/>" ) + "&emsp;Một lúc không nên tham gia nhiều Nhóm<br/>" ) + "&emsp;BOT DIE cần Thay Đổi để nhận BOT mới" ) ; } 
public void extendEqual ( java.lang.String direction , double speed ) { double ratio = 1 ; double driveSpeed = speed ; double slowSpeed = 0.0 ; int lbm = 200 ; if ( direction == "out" ) { armExtender . setTargetPosition ( ( ( armExtender . getCurrentPosition () ) + 50 ) ) ; } if ( direction == "in" ) { armExtender . setTargetPosition ( ( ( armExtender . getCurrentPosition () ) - 50 ) ) ; } if ( direction == "STOP" ) armExtender . setPower ( gamepad2.left_stick_y ) ; } 
public double [] getDoubleArrayParameter ( final java.lang.String parameterName ) { final java.lang.String [] doubleStrings = getStringParameter ( parameterName ) . split ( SigmaEC.util.Parameters.LIST_DELIMITER ) ; final double [] array = new double [ doubleStrings.length ] ; for ( int i = 0 ; i < ( doubleStrings.length ) ; i ++ ) array [ i ] = java.lang.Double . parseDouble ( doubleStrings [ i ] ) ; return array ; } 
public < T extends com.mgs.pims.types.entity.PimsMapEntity > T proxy ( boolean mutable , java.lang.Class actualType , java.util.Map < java.lang.String , java.lang.Object > valueMap , java.util.Map < java.lang.String , java.lang.Object > domainMap ) { return ( ( T ) ( java.lang.reflect.Proxy . newProxyInstance ( com.mgs.pims.proxy.PimsEntityProxyFactory . class . getClassLoader () , new java.lang.Class [] { actualType } , new com.mgs.pims.proxy.PimsEntityProxy ( pimsMethodCaller , actualType , valueMap , domainMap , pimsLinker . link ( actualType ) , mutable , pimsParameters ) ) ) ) ; } 
public void checkReservationsOnRoom ( com.flames.organizer.buttons.mainWindowButtons.Room room ) { roomToRemove = room ; if ( ( rooms . size () ) > 0 ) { for ( com.flames.organizer.Customer customer : customers ) { if ( ( customer . getCustomerBar () . getRect () . y ) == ( room . getRect () . y ) ) { removeRoomMsg = new com.flames.organizer.windows.PopUpMessage ( 2 , "ΠΡΟΣΟΧΗ" , "Υπάρχει καταχωρημένη κράτηση σε αυτό το δωμάτιο. Είστε σίγουροι ότι θέλετε να το διαγράψετε;" , wm ) ; wm . set ( removeRoomMsg ) ; break; } } } } 
public java.util.List < edu.neu.cs5200.hotel.main.entity.Hotel > deleteHotel ( int hotelId , int hoteluserId ) { edu.neu.cs5200.hotel.main.dao.HotelDAO hotelDAO = new edu.neu.cs5200.hotel.main.dao.HotelDAO () ; edu.neu.cs5200.hotel.main.entity.Hotel hotel = hotelDAO . getHotelById ( hotelId ) ; edu.neu.cs5200.hotel.main.dao.HoteluserDAO hoteluserDAO = new edu.neu.cs5200.hotel.main.dao.HoteluserDAO () ; edu.neu.cs5200.hotel.main.entity.Hoteluser hoteluser = hoteluserDAO . getHoteluserById ( hoteluserId ) ; hoteluser . removeHotel ( hotel ) ; hoteluserDAO . updateHoteluser ( hoteluser ) ; return hotelDAO . getAllHotel ( hoteluserId ) ; } 
protected final void draw ( java.awt.Graphics2D g2d ) { if ( geo . isLaTeX () ) geogebra.euclidian.Drawable . drawMultilineLaTeX ( view . getApplication () , tempGraphics , geo , g2d , font , java.awt.Color.BLACK , java.awt.Color.WHITE , text , 0 , 0 ) ; else geogebra.euclidian.Drawable . drawMultiLineIndexedText ( view . getApplication () , text , 0 , 0 , g2d ) ; } 
@ org.junit.Test public void testCovariance ( ) throws java.lang.Exception { java.util.ArrayList < java.lang.Double > x = new java.util.ArrayList <> () ; java.util.ArrayList < java.lang.Double > y = new java.util.ArrayList <> () ; x . add ( 0.0 ) ; x . add ( 2.0 ) ; y . add ( 0.0 ) ; y . add ( 4.0 ) ; assertEquals ( 2.0 , p5e610.balance.AccelerationData . covar ( x , y ) , 0.001 ) ; } 
@ java.lang.Override public void changed ( javafx.beans.value.ObservableValue ov , javafx.concurrent.Worker.State oldState , javafx.concurrent.Worker.State newState ) { if ( newState == ( javafx.concurrent.Worker.State.SUCCEEDED ) ) { if ( webEngine . getLocation () . contains ( "web_access_point=" ) ) { java.lang.System.out . println ( ( "" + ( webEngine . getLocation () ) ) ) ; com.crehop.sign.test.AuthorizationUtils . setAuthorizationData ( webEngine . getLocation () ) ; com.crehop.sign.test.DocumentHandler . sendForSignature ( "E:/AdobeSignJavaSdk-master/rest-api-sample/bin/lease.pdf" ) ; stage . close () ; } } } 
private void deleteConfig ( java.lang.String configName ) { if ( configs . containsKey ( configName ) ) configs . remove ( configName ) ; java.io.File f = new java.io.File ( getDataFolder () , ( configName + ".yml" ) ) ; if ( f . exists () ) f . delete () ; } 
@ java.lang.Override public java.lang.String [] getOutputClasses () { if ( ! ( _isSetup ) ) { hcm.ssj.core.Log . e ( "not initialized" ) ; return null ; } java.lang.String [] outputClass = new java.lang.String [ _stream_out.dim ] ; java.lang.System . arraycopy ( _stream_out.dataclass , 0 , outputClass , 0 , _stream_out.dataclass.length ) ; return outputClass ; } 
@ java.lang.Override public int getNumRows () { if ( ( numRows ) > 0 ) { return numRows ; } try { int lines = biocode.fims.reader.plugins.CSVReader . countLines ( fileName ) ; lines -- ; return lines ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return 0 ; } } 
public static boolean isPrime ( long n ) { long temp ; boolean isPrime = true ; for ( int i = 2 ; ( i * i ) <= n ; i ++ ) { temp = n % i ; if ( n < 2 ) { isPrime = false ; } else if ( temp == 0 ) { isPrime = false ; } } return isPrime ; } 
private javax.swing.JPanel fileOutputPanel () { javax.swing.JPanel panel = new javax.swing.JPanel () ; javax.swing.BoxLayout layout = new javax.swing.BoxLayout ( panel , javax.swing.BoxLayout.X_AXIS ) ; panel . setLayout ( layout ) ; javax.swing.JButton browseButton = new javax.swing.JButton ( "Browse For Output File" ) ; browseButton . setActionCommand ( "Browse For Output File" ) ; browseButton . addActionListener ( OUTPUT_LISTENER ) ; outputFilePath . addFocusListener ( OUTPUT_FOCUS_LISTENER ) ; panel . add ( outputFilePath ) ; panel . add ( browseButton ) ; return panel ; } 
@ java.lang.Override public java.lang.String toString () { java.lang.String rv = ( ( ( ( ( ( ( ( ( ( ( ( ( ( "FlightID: " + ( flightID ) ) + "\nSeats (Available/Total): " ) + ( availableSeats ) ) + "/" ) + ( totalSeats ) ) + "\nFlight Source -> Dest: " ) + ( flightSource ) ) + " -> " ) + ( flightDest ) ) + "\nFlight Date: " ) + ( flightDate ) ) + "\nFlight Time: " ) + ( flightTime ) ) + "\nFlight Duration: " ) + ( flightDuration ) ; return null ; } 
public static java.lang.String computeMD5 ( java.lang.String entity ) { if ( entity == null ) { return "" ; } java.security.MessageDigest md5 ; try { md5 = java.security.MessageDigest . getInstance ( "MD5" ) ; } catch ( java.security.NoSuchAlgorithmException e ) { throw new java.lang.IllegalArgumentException ( "An error occurred while getting the message digest" , e ) ; } return org.apache.commons.codec.binary.Hex . encodeHexString ( md5 . digest ( entity . getBytes ( java.nio.charset.StandardCharsets.UTF_8 ) ) ) ; } 
boolean calculateDeltaTime ( java.util.Date startField , java.util.Date stopField , java.util.concurrent.TimeUnit minutes ) { long deltaInMilli = ( stopField . getTime () ) - ( startField . getTime () ) ; long deltaInMin = ( minutes . convert ( deltaInMilli , java.util.concurrent.TimeUnit.MILLISECONDS ) ) - ( java.lang.Integer . parseInt ( interruptField . getText () ) ) ; if ( deltaInMin < 0 ) { deltaField . setText ( "Invalid Time Frame" ) ; } else { deltaField . setText ( java.lang.Long . toString ( deltaInMin ) ) ; } return true ; } 
@ java.lang.Override public T apply ( int n ) { if ( n < ( org.lopina.tree.binary.Branch . left () . size () ) ) { return org.lopina.tree.binary.Branch . left () . apply ( n ) ; } else if ( n > ( org.lopina.tree.binary.Branch . left () . size () ) ) { return org.lopina.tree.binary.Branch . right () . apply ( ( ( ( size () ) - ( org.lopina.tree.binary.Branch . left () . size () ) ) - 1 ) ) ; } else { return elem ; } } 
@ java.lang.Override public com.cidic.sdx.model.HPModel doInRedis ( org.springframework.data.redis.connection.RedisConnection connection ) throws org.springframework.dao.DataAccessException { org.springframework.data.redis.serializer.RedisSerializer < java.lang.String > ser = redisTemplate . getStringSerializer () ; byte [] bId = connection . hGet ( ser . serialize ( "HpIDNum" ) , ser . serialize ( hp_num ) ) ; int id = java.lang.Integer . parseInt ( ser . deserialize ( bId ) ) ; return getHPModelById ( id , connection , ser ) ; } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { int id = item . getItemId () ; if ( id == ( R.id.action_refresh ) ) { refreshWeather () ; } if ( id == ( R.id.action_add ) ) { addCity () ; } if ( id == ( R.id.action_settings ) ) { java.lang.System.out . println ( "setting" ) ; return true ; } return super . onOptionsItemSelected ( item ) ; } 
public < L , F extends de.factoryfx.factory.FactoryBase < L , V > > void addFactory ( java.lang.Class < F > clazz , de.factoryfx.factory.builder.Scope scope , java.util.function.Function < de.factoryfx.factory.builder.FactoryContext < V > , F > creator ) { factoryContext . addFactoryCreator ( new de.factoryfx.factory.builder.FactoryCreator ( clazz , "" , scope , creator ) ) ; } 
private boolean checkIdAvailable ( int id ) { boolean found = false ; for ( int i = 0 ; i < ( rooms . size () ) ; i ++ ) { if ( id == ( rooms . get ( i ) . getId () ) ) found = true ; } if ( ( rooms . isEmpty () ) == true ) found = true ; return found ; } 
@ cpw.mods.fml.common.eventhandler.SubscribeEvent public void onRenderPlayer ( net.minecraftforge.client.event.RenderPlayerEvent.Post event ) { net.minecraft.entity.player.EntityPlayer player = event.entityPlayer ; fiskfille.tf.common.transformer.base.Transformer transformer = fiskfille.tf.helper.TFHelper . getTransformer ( player ) ; boolean isClientPlayer = ( mc.thePlayer ) == player ; fiskfille.tf.helper.ModelOffset offsets = fiskfille.tf.helper.TFModelHelper . getOffsets ( player ) ; offsets.headOffsetX = 0 ; offsets.headOffsetY = 0 ; offsets.headOffsetZ = 0 ; if ( transformer != null ) { if ( isClientPlayer && ( ( transformer . getCameraYOffset ( player ) ) != 0.0F ) ) { org.lwjgl.opengl.GL11 . glPopMatrix () ; } } } 
@ org.junit.Test public void testFullSizedLevel ( ) throws java.io.IOException { nl.tudelft.jpacman.board.Board b = parser . parseMap ( getClass () . getResourceAsStream ( "/board.txt" ) ) . getBoard () ; nl.tudelft.jpacman.board.Square s1 = b . squareAt ( 1 , 1 ) ; nl.tudelft.jpacman.board.Unit unit = nl.tudelft.jpacman.npc.ghost.Navigation . findNearest ( nl.tudelft.jpacman.npc.ghost.Ghost . class , s1 ) ; org.junit.Assert . assertNotNull ( unit ) ; } 
@ java.lang.Override public void onTransitionStart ( android.transition.Transition transition ) { if ( ( transitionList ) != null ) { for ( com.jenshen.awesomeanimation.util.transition.TransitionWrapper transitionWrapper : transitionList ) { if ( com.jenshen.awesomeanimation.util.transition.TransitionUtil . equalsTransitions ( transitionWrapper . getTransition () , transition ) ) { transitionWrapper . onStart () ; return; } } } } 
public static java.util.List < java.lang.String > getFriendList ( java.util.UUID playerUUID ) { try { java.util.List < java.lang.String > friendList = com.initianovamc.rysingdragon.landprotect.config.PlayerConfig . getPlayerConfig () . getConfigNode () . getNode ( "friends" , playerUUID , "friendlist" ) . getList ( com.google.common.reflect.TypeToken . of ( java.lang.String . class ) ) ; return friendList ; } catch ( ninja.leaping.configurate.objectmapping.ObjectMappingException e ) { e . printStackTrace () ; } return new java.util.ArrayList <> () ; } 
public boolean changeServingSize ( int newValue ) { if ( ( newValue >= ( com.example.android.buddybuilding.Food.Food.MIN_SERVING_SIZE ) ) && ( newValue <= ( com.example.android.buddybuilding.Food.Food.MAX_SERVING_SIZE ) ) ) { float ratio = ( ( float ) ( newValue ) ) / ( ( float ) ( servingSize ) ) ; changeProtein ( ( ( protein ) * ratio ) ) ; changeFat ( ( ( totalFat ) * ratio ) ) ; changeCarbs ( ( ( carbohydrates ) * ratio ) ) ; calculateCalories () ; servingSize = newValue ; return true ; } return false ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { { java.lang.String sub = usedArray . get ( pager . getCurrentItem () ) ; if ( ( ! ( sub . equals ( "frontpage" ) ) ) && ( ! ( sub . equals ( "all" ) ) ) ) { ( ( android.support.v4.widget.DrawerLayout ) ( findViewById ( R.id.drawer_layout ) ) ) . openDrawer ( Gravity.RIGHT ) ; } } } 
private static java.lang.String join ( java.lang.String [] set , java.lang.String medium , int offset ) { java.lang.String s = set [ offset ] ; int i = 0 ; for ( java.lang.String part : set ) { if ( i > offset ) s = ( ( ( s + " " ) + medium ) + " " ) + part ; i ++ ; } return s ; } 
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { if ( ( this ) == obj ) return true ; if ( obj == null ) return false ; if ( ( getClass () ) != ( obj . getClass () ) ) return false ; com.ingesup.labojava.bean.User other = ( ( com.ingesup.labojava.bean.User ) ( obj ) ) ; if ( ( ( id ) == ( other.id ) ) && ( ( email ) == ( other.email ) ) ) return true ; else return false ; } 
public void triggerLocationCheck () { if ( ( android.support.v4.content.ContextCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_FINE_LOCATION ) ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { android.location.Location currentLocation = LocationServices.FusedLocationApi . getLastLocation ( apiClient ) ; scheduleLocationCheck ( currentLocation , lastLocation ) ; } else { android.content.Intent mainActivityIntent = new android.content.Intent ( this , org.sircular.proxalert.ProxAlertActivity . class ) ; this . startActivity ( mainActivityIntent ) ; } } 
private float getIdleTransientPullStrainValue ( long time ) { int foldTime = ( ( com.mishiranu.dashchan.widget.PullableWrapper.JellyBeanView.IDLE_FOLD_TIME ) * ( mStartIdlePullStrain ) ) / ( com.mishiranu.dashchan.widget.PullableWrapper.PullView.MAX_STRAIN ) ; float value = java.lang.Math . min ( ( ( ( float ) ( time - ( mTimeIdleStart ) ) ) / foldTime ) , 1.0F ) ; return ( ( 1.0F - value ) * ( mStartIdlePullStrain ) ) / ( com.mishiranu.dashchan.widget.PullableWrapper.PullView.MAX_STRAIN ) ; } 
@ java.lang.Override protected android.bluetooth.BluetoothDevice doInBackground ( java.lang.String . . . params ) { try { java.lang.Thread . sleep ( 10000 ) ; stopDiscoveryOfDevices () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } if ( ( devices ) != null ) { for ( android.bluetooth.BluetoothDevice device : devices ) { if ( device . getAddress () . contains ( params [ 0 ] ) ) { deviceFound = true ; targetDevice = device ; android.util.Log . d ( com.alejandro_castilla.cloudfitforwear.services.bluetooth.BluetoothService.TAG , "The device requested has been found." ) ; } } } return targetDevice ; } 
public void addHorizontalMovement ( int amount ) { if ( isAlive () ) { this . horizontalMovement = java.lang.Math . min ( horizontalMovement , Server.Creatures.ServerPlayer.MAX_HSPEED ) ; respawnXSpeed = this . horizontalMovement ; } else respawnXSpeed = java.lang.Math . min ( ( ( respawnXSpeed ) + amount ) , Server.Creatures.ServerPlayer.MAX_HSPEED ) ; } 
@ org.junit.Test public void testAddMarketingYear () { de.parkand.verschlag.schlag.MarketingYear year = new de.parkand.verschlag.schlag.MarketingYear () ; year . setIdentifier ( 1 ) ; year . setYear ( java.time.Year . of ( 2000 ) ) ; de.parkand.verschlag.schlag.Farm farm = new de.parkand.verschlag.schlag.Farm () ; farm . addMarketingYear ( year ) ; assertEquals ( 1 , farm . getMarketingYears () . size () ) ; } 
@ org.junit.Test public void QuandoPedeValorTotalParaNotaFiscalRetornaSomaDosPrecosDeCadaItemMultiplicadoPelasQuantidades () { org.mockito.Mockito . when ( fiscalizador . validaCPF ( cpf ) ) . thenReturn ( true ) ; notaFiscal.NotaFiscal testeNotaFiscal = new notaFiscal.NotaFiscal ( casd , cpf , item , quant ) ; testeNotaFiscal . adicionaItem ( item , quant ) ; testeNotaFiscal . adicionaItem ( notebook , quant ) ; testeNotaFiscal . adicionaItem ( caneta , quant ) ; assertTrue ( ( ( notaFiscal.NotaFiscal . ValorTotal () ) == 40 ) ) ; } 
public static void initWrite ( ) throws java.sql.SQLException { java.sql.Connection writeConnection = RealisticBiomes.plugin . getPlantManager () . getWriteConnection () ; com.untamedears.realisticbiomes.persist.ChunkWriter.deleteOldDataStmt = writeConnection . prepareStatement ( java.lang.String . format ( "DELETE FROM %s_plant WHERE chunkid = ?" , com.untamedears.realisticbiomes.persist.ChunkWriter.curConfig.prefix ) ) ; com.untamedears.realisticbiomes.persist.ChunkWriter.addChunkStmt = writeConnection . prepareStatement ( java.lang.String . format ( "INSERT INTO %s_chunk (w, x, z) VALUES (?, ?, ?)" , com.untamedears.realisticbiomes.persist.ChunkWriter.curConfig.prefix ) ) ; com.untamedears.realisticbiomes.persist.ChunkWriter.getLastChunkIdStmt = writeConnection . prepareStatement ( "SELECT LAST_INSERT_ID()" ) ; com.untamedears.realisticbiomes.persist.ChunkWriter.addPlantStmt = writeConnection . prepareStatement ( java.lang.String . format ( "INSERT INTO %s_plant (chunkid, w, x, y, z, date, growth, fruitGrowth) VALUES (?, ?, ?, ?, ?, ?, ?, ?)" , com.untamedears.realisticbiomes.persist.ChunkWriter.curConfig.prefix ) ) ; com.untamedears.realisticbiomes.persist.ChunkWriter.deleteOldPlantsStmt = writeConnection . prepareStatement ( java.lang.String . format ( "DELETE FROM %s_plant WHERE chunkid = ?" , com.untamedears.realisticbiomes.persist.ChunkWriter.curConfig.prefix ) ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { java.lang.System.out . println ( "here" ) ; android.content.Intent intent = new android.content.Intent ( this , com.kaylaflaten.organicfarm.CropViewer . class ) ; intent . putExtra ( "section" , secN ) ; intent . putExtra ( "bed" , bedN ) ; intent . putExtra ( "itemSelected" , cropID ) ; startActivity ( intent ) ; } 
public static int getVersionCode ( android.content.Context context ) { try { android.content.pm.PackageInfo pInfo = context . getPackageManager () . getPackageInfo ( context . getPackageName () , 0 ) ; return pInfo.versionCode ; } catch ( android.content.pm.PackageManager.NameNotFoundException nnfe ) { android.util.Log . e ( org.adaptlab.chpir.android.survey.AppUtil.TAG , ( "Error finding version code: " + nnfe ) ) ; } return - 1 ; } 
public void copy ( org.eclipse.ice.datastructures.form.Material material ) { if ( ( material != null ) && ( material != ( this ) ) ) { this . name = material.name ; this . properties = new java.util.TreeMap < java.lang.String , java.lang.Double > ( material.properties ) ; this . components = new java.util.TreeMap < java.lang.String , org.eclipse.ice.datastructures.form.MaterialStack > ( material.components ) ; } } 
public void setString ( org.golde.java.scratchforge.Config.ConfigProperty setting , java.lang.String to ) { try { output = new java.io.FileOutputStream ( CONFIG_NAME ) ; prop . setProperty ( setting . name () , to ) ; prop . store ( output , null ) ; output . close () ; } catch ( java.lang.Exception e ) { org.golde.java.scratchforge.helpers.PLog . errorPopup ( e , ( ( ( ( "Failed to set " + ( setting . name () ) ) + " to " ) + to ) + "!" ) ) ; } } 
private void renderTemplate ( com.google.template.soy.soytree.TemplateNode template , java.util.Collection < com.google.template.soy.soytree.defn.TemplateParam > paramsToTypeCheck ) { env = com.google.template.soy.sharedpasses.render.Environment . create ( template , data , ijData ) ; try { flushOnFutureParam ( template ) ; checkStrictParamTypes ( template , paramsToTypeCheck ) ; visitChildren ( template ) ; } catch ( com.google.template.soy.sharedpasses.render.RenderException re ) { throw re . completeStackTraceElement ( template ) ; } env = null ; } 
public java.util.Collection < com.the_bean_quartet.msc_project.entities.BaseData > getAllModelRelatedData ( java.lang.String phoneModel ) { javax.persistence.Query query = em . createQuery ( ( "select count(bd.failureClass) from BaseData bd " + "where bd.ueTable.tac =:uetype" ) ) ; query . setParameter ( "uetype" , phoneModel ) ; java.util.List < com.the_bean_quartet.msc_project.entities.BaseData > UEData1 = query . getResultList () ; return UEData1 ; } 
public void handle ( javafx.event.ActionEvent arg0 ) { model . resetPlayerRoll () ; resetCardHandler () ; java.lang.System.out . println ( getWürfel () ) ; disableCards () ; changeCardsToGewählt () ; if ( checkGameContinue () ) { updatePunkte () ; server . sendObject ( new message.ClientTurn ( false ) ) ; } else { server . sendObject ( new message.GameFinished () ) ; if ( ! ( profCard () ) ) { server . sendObject ( new message.GameFinished () ) ; } else { bewerteProfCard () ; } } } 
public int getTaskId ( boolean throwException ) { java.util.ArrayList < java.lang.String > allPhrases = this . getAllPhrases () ; int listPointer = this . getListPointer () ; java.lang.String currentPhrase = allPhrases . get ( listPointer ) ; try { int returnValue = ( java.lang.Integer . parseInt ( currentPhrase ) ) - 1 ; return returnValue ; } catch ( java.lang.NumberFormatException e ) { if ( throwException ) { java.lang.NumberFormatException e2 = new java.lang.NumberFormatException ( "ID for editing task is not valid." ) ; java.lang.System.out . println ( e2 ) ; throw e2 ; } else { return - 1 ; } } } 
public com.example.juanrubio.fbla_app_final.Item [] searchItem ( java.lang.String itemName ) { com.example.juanrubio.fbla_app_final.Item [] searchResults = new com.example.juanrubio.fbla_app_final.Item [ 50 ] ; int currentIndex = 0 ; for ( int i = 1 ; i < ( items . size () ) ; i ++ ) { if ( items . get ( i ) . getName () . contains ( itemName ) ) { searchResults [ currentIndex ] = items . get ( i ) ; currentIndex ++ ; } return searchResults ; } return null ; } 
private org.kairosdb.client.ClientResponse execute ( org.apache.http.client.methods.HttpUriRequest request ) throws java.io.IOException { org.apache.http.HttpResponse response ; int tries = ++ ( retries ) ; while ( true ) { tries -- ; try { response = client . execute ( request ) ; break; } catch ( java.io.IOException e ) { if ( tries < 1 ) throw e ; } } return new org.kairosdb.client.HttpClientResponse ( response ) ; } 
private short SONOpenOldFile ( java.lang.String path , int mode ) throws son32reader.SonNoAccessException , son32reader.SonNoFileException , son32reader.SonOutOfMemoryException , son32reader.SonReadOnlyException { short fh = son32reader.Son32Reader.INSTANCE . SONOpenOldFile ( path , mode ) ; switch ( fh ) { case - 1 : throw new son32reader.SonNoFileException ( path ) ; case - 4 : throw new son32reader.SonNoAccessException ( path ) ; case - 8 : throw new son32reader.SonOutOfMemoryException () ; case - 21 : throw new son32reader.SonReadOnlyException ( path ) ; } return fh ; } 
@ java.lang.Override public net.minecraft.item.ItemStack decrStackSize ( int index , int count ) { net.minecraft.item.ItemStack stack = inventory . get ( index ) ; if ( ! ( stack . isEmpty () ) ) { if ( ( stack . getCount () ) <= count ) { net.minecraft.item.ItemStack result = stack ; setInventorySlotContents ( index , ItemStack.EMPTY ) ; markDirty () ; return result ; } net.minecraft.item.ItemStack split = stack . splitStack ( count ) ; markDirty () ; return split ; } return net.minecraft.item.ItemStack.EMPTY ; } 
@ org.junit.Test public void testGetAttributeUnsignedIntValue_IntInt ( ) throws java.lang.Exception { forgeAndOpenDocument ( "<foo bar=\"12\"/>" ) ; org.assertj.core.api.Assertions . assertThat ( parser . getAttributeUnsignedIntValue ( 0 , 0 ) ) . isEqualTo ( 12 ) ; org.assertj.core.api.Assertions . assertThat ( parser . getAttributeUnsignedIntValue ( attributeIndexOutOfIndex () , 0 ) ) . isEqualTo ( 0 ) ; forgeAndOpenDocument ( "<foo bar=\"-12\"/>" ) ; org.assertj.core.api.Assertions . assertThat ( parser . getAttributeUnsignedIntValue ( 0 , 0 ) ) . isEqualTo ( 0 ) . as ( "Getting a negative number as unsigned should return the default value." ) ; } 
public boolean rotate () { final org.voovan.tools.hashwheeltimer.HashWheel rotateWheel = wheel ; final org.voovan.tools.hashwheeltimer.HashWheelTimer tempTimer = this ; timer . schedule ( new java.util.TimerTask () { @ java.lang.Override public void run () { if ( org.voovan.tools.TEnv . isMainThreadShutDown () ) { this . cancel () ; } rotateWheel . Tick () ; if ( org.voovan.tools.TEnv . isMainThreadShutDown () ) { tempTimer . cancel () ; } } } , 0 , ( ( tickStep ) * 1000 ) ) ; return true ; } 
private void getPageContent ( java.lang.String url ) throws java.lang.Exception { java.net.URL obj = new java.net.URL ( url ) ; connection = ( ( java.net.HttpURLConnection ) ( obj . openConnection () ) ) ; connection . setConnectTimeout ( org.infotechgroup.ps.model.GeoConnect.TIMEOUT ) ; connection . setRequestMethod ( "GET" ) ; connection . setUseCaches ( false ) ; connection . setRequestProperty ( "User-Agent" , USER_AGENT ) ; connection . setRequestProperty ( "Accept" , "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8" ) ; connection . setRequestProperty ( "Accept-Language" , "en-US,en;q=0.5" ) ; setCookies ( connection . getHeaderFields () . get ( "Set-Cookie" ) ) ; } 
private void resize ( int capacity ) { Item [] newRandomQueue = ( ( Item [] ) ( new java.lang.Object [ capacity ] ) ) ; for ( int i = 0 ; i < ( n ) ; i ++ ) { newRandomQueue [ i ] = randomQueue [ i ] ; } randomQueue = newRandomQueue ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "leanringTimeList" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String getLearningTimeList ( java.util.Date beginTime , java.util.Date endTime ) { com.era.common.model.User user = com.era.education.util.Client . getUser () ; java.lang.Integer userId = user . getId () ; java.util.List < com.era.education.controller.LearningTime > learningTimeList = learningService . getLearningTimeList ( userId , beginTime , endTime ) ; return com.era.common.util.Response . success ( learningTimeList ) ; } 
@ java.lang.Override public void OnDialogDeleteClick ( android.app.DialogFragment dialog ) { sk.berops.android.vehiculum.dataModel.Car car = cars . get ( getSelectedCarPosition () ) ; java.lang.System.out . println ( ( "Removing car ID " + ( getSelectedCarPosition () ) ) ) ; cars . remove ( car ) ; try { MainActivity.dataHandler . saveGarage ( MainActivity.garage ) ; } catch ( java.io.IOException ex ) { android.util.Log . d ( "ERROR" , ( "Problem when saving changes: " + ( ex . getMessage () ) ) ) ; } adapter . notifyDataSetChanged () ; } 
private void trim ( int [] codeInt ) { for ( int x = 0 ; x < ( codeInt.length ) ; x = x + 1 ) { if ( ( codeInt [ x ] ) > 26 ) { codeInt [ x ] = ( codeInt [ x ] ) % 26 ; } } } 
private java.lang.CharSequence getClasscastContent () { java.lang.String content = "" ; if ( ( text ) != null ) content += text ; content += ( ( "<br><b>When:</b> " + ( getProcessedStartTime () ) ) + " to " ) + ( getProcessedEndTime () ) ; content += "<br><b>Duration:</b> " + ( getTimeStringFromMinutes ( length ) ) ; content += "<br><b>Status:</b> " + ( getClassCastStatus () ) ; java.lang.CharSequence formattedContent = formatContent ( content ) ; return android.text.TextUtils . concat ( formattedContent , "\n\n" , "Please use a desktop computer to access this ClassCast." ) ; } 
private static com.aventstack.extentreports.reporter.ExtentHtmlReporter getHtmlReporter () { Utility.ExtentManager.htmlReporter = new com.aventstack.extentreports.reporter.ExtentHtmlReporter ( Utility.ExtentManager.filePath ) ; Utility.ExtentManager.htmlReporter . config () . setChartVisibilityOnOpen ( true ) ; Utility.ExtentManager.htmlReporter . config () . setDocumentTitle ( "QAV automation report" ) ; Utility.ExtentManager.htmlReporter . config () . setReportName ( "Regression cycle" ) ; return Utility.ExtentManager.htmlReporter ; } 
@ java.lang.Override public boolean handleRenderType ( net.minecraft.item.ItemStack item , net.minecraftforge.client.IItemRenderer.ItemRenderType.ItemRenderType type ) { if ( ! ( net.doubledoordev.itemblacklist.util.ItemBlacklisted . canUnpack ( item ) ) ) return false ; net.minecraft.item.ItemStack unpacked = net.doubledoordev.itemblacklist.util.ItemBlacklisted . unpack ( item ) ; net.minecraftforge.client.IItemRenderer renderer = net.minecraftforge.client.MinecraftForgeClient . getItemRenderer ( unpacked , type ) ; if ( renderer != null ) return renderer . handleRenderType ( unpacked , type ) ; return ( unpacked . getItem () . getSpriteNumber () ) != ( ItemBlacklisted.I . getSpriteNumber () ) ; } 
public static synchronized org.codehaus.groovy.eclipse.refactoring.formatter.GroovyIndentationService get ( org.eclipse.jdt.core.IJavaProject project ) { if ( ( ( org.codehaus.groovy.eclipse.refactoring.formatter.GroovyIndentationService.lastIndenter ) != null ) && ( ! ( org.codehaus.groovy.eclipse.refactoring.formatter.GroovyIndentationService.lastIndenter.project . equals ( project ) ) ) ) { org.codehaus.groovy.eclipse.refactoring.formatter.GroovyIndentationService . disposeLastImpl () ; } if ( ( org.codehaus.groovy.eclipse.refactoring.formatter.GroovyIndentationService.lastIndenter ) == null ) { org.codehaus.groovy.eclipse.refactoring.formatter.GroovyIndentationService.lastIndenter = new org.codehaus.groovy.eclipse.refactoring.formatter.GroovyIndentationService ( project ) ; } return org.codehaus.groovy.eclipse.refactoring.formatter.GroovyIndentationService.lastIndenter ; } 
@ java.lang.Override public void showCenterDetails ( com.mifos.objects.group.CenterWithAssociations centerWithAssociations ) { setToolbarTitle ( centerWithAssociations . getName () ) ; if ( ! ( centerWithAssociations . getActivationDate () . isEmpty () ) ) { tvStaffName . setText ( centerWithAssociations . getStaffName () ) ; tvActivationDate . setText ( com.mifos.utils.Utils . getStringOfDate ( getContext () , centerWithAssociations . getActivationDate () ) ) ; } } 
@ org.junit.Test public void test4 () { taco = new hu.bme.mit.train.tachograph.TrainTachograph () ; user . overrideJoystickPosition ( 3 ) ; controller . followSpeed () ; taco . recordValues ( new java.util.Date () , user . getJoystickPosition () , controller . getReferenceSpeed () ) ; user . overrideJoystickPosition ( 6 ) ; controller . followSpeed () ; taco . recordValues ( new java.util.Date () , user . getJoystickPosition () , controller . getReferenceSpeed () ) ; org.junit.Assert . assertEquals ( 2 , taco . getNumberOfElements () ) ; } 
@ java.lang.Override public void onAuthenticationSuccess ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response , org.springframework.security.core.Authentication authentication ) throws java.io.IOException , javax.servlet.ServletException { if ( request . getContentType () . startsWith ( "text/" ) ) { handle ( request , response , authentication ) ; } else { response . setStatus ( HttpServletResponse.SC_OK ) ; } clearAuthenticationAttributes ( request ) ; } 
public boolean selectedRoles ( final solomonj.msg.userapp.jpa.model.User u ) { this . selectedRoles . clear () ; final java.util.List < solomonj.msg.userapp.jpa.model.Role > roles = u . getRoles () ; for ( final solomonj.msg.userapp.jpa.model.Role r : roles ) { this . selectedRoles . add ( new java.lang.Integer ( r . getId () ) . toString () ) ; } return true ; } 
@ java.lang.Override public boolean equals ( java.lang.Object otherSighting ) { if ( ! ( otherSighting instanceof Sighting ) ) { return false ; } else { Sighting newSighting = ( ( Sighting ) ( otherSighting ) ) ; return ( ( ( this . getAnimalId () ) == ( newSighting . getAnimalId () ) ) && ( this . getLocation () . equals ( newSighting . getLocation () ) ) ) && ( this . getRangerId () . equals ( newSighting . getRangerId () ) ) ; } } 
@ jumpingalien.model.Basic public void setPosition ( jumpingalien.model.Vector2D < java.lang.Double > position ) throws java.lang.IllegalArgumentException , java.lang.NullPointerException { if ( position == null ) { throw new java.lang.NullPointerException ( "The position can not be null." ) ; } else if ( ! ( jumpingalien.model.GameObject . isValidPosition ( position ) ) ) { throw new java.lang.IllegalArgumentException ( "The given position is not valid, see isValidPosition." ) ; } this . position = position ; } 
public static java.lang.String isIdExist ( final java.lang.String newId ) throws org.parse4j.ParseException { data.management.DBManager . initialize () ; final java.lang.String objectClass = "Driver" ; java.lang.System.out . println ( "i was here 2" ) ; data.management.DBManager . initialize () ; java.util.Map < java.lang.String , java.lang.Object > key = new java.util.HashMap < java.lang.String , java.lang.Object > () ; key . put ( "id" , newId ) ; java.lang.System.out . println ( "i was here 2.5" ) ; return ( data.management.DBManager . getObjectFieldsByKey ( objectClass , key ) . get ( "id" ) ) + "" ; } 
private void initData () { listImgPath = getImgPathList () ; if ( ( listImgPath . size () ) < 1 ) {} else { imageUriArray = ( ( java.lang.String [] ) ( listImgPath . toArray ( new java.lang.String [ listImgPath . size () ] ) ) ) ; options = new com.nostra13.universalimageloader.core.DisplayImageOptions.Builder () . showStubImage ( R.mipmap.ic_launcher ) . showImageForEmptyUri ( R.mipmap.ic_launcher ) . showImageOnFail ( R.mipmap.ic_launcher ) . cacheInMemory ( true ) . cacheOnDisc ( true ) . build () ; } } 
java.lang.String content_file ( java.lang.String pth ) { java.lang.String thisLine ; java.lang.String str_words = "" ; if ( new java.io.File ( pth ) . canExecute () ) { try { java.io.BufferedReader br = new java.io.BufferedReader ( new java.io.InputStreamReader ( new java.io.FileInputStream ( pth ) , "windows-1251" ) ) ; while ( ( thisLine = br . readLine () ) != null ) { str_words += thisLine ; } } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } return str_words ; } 
private boolean check ( E itemForCheck ) { LinkedSet < E > . Item < E > item = main ; for ( int i = 0 ; i < ( size ) ; i ++ ) { if ( item . equals ( itemForCheck ) ) { return false ; } item = item.next ; } return true ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { websearchholder . onClick ( view ) ; android.net.Uri webpage = android.net.Uri . parse ( linkurl ) ; android.content.Intent intent = new android.content.Intent ( android.content.Intent.ACTION_VIEW , webpage ) ; if ( ( intent . resolveActivity ( currContext . getPackageManager () ) ) != null ) { currContext . startActivity ( intent ) ; } } 
@ java.lang.Override public void onClick ( com.sendbird.android.sample.groupchannel.View v ) { java.lang.String userInput = mMessageEditText . getText () . toString () ; if ( ( userInput == null ) || ( ( userInput . length () ) <= 0 ) ) { return; } sendUserMessage ( userInput ) ; mMessageEditText . setText ( "" ) ; } 
private addMax ( int e ) { int place = ( heap . size () ) + 1 ; while ( ( place != 1 ) && ( e > ( heap . get ( ( place / 2 ) ) ) ) ) { heap . set ( place , heap . get ( ( place / 2 ) ) ) ; place /= 2 ; } heap . set ( place , e ) ; } 
public long addUser ( com.begentgroup.miniproject.data.User user ) { if ( ( getUserId ( user . getId () ) ) != ( - 1 ) ) { android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; values . clear () ; values . put ( ChatContract.ChatUser.COLUMN_SERVER_ID , user . getId () ) ; values . put ( ChatContract.ChatUser.COLUMN_NAME , user . getUserName () ) ; values . put ( ChatContract.ChatUser.COLUMN_EMAIL , user . getEmail () ) ; return db . insert ( ChatContract.ChatUser.TABLE , null , values ) ; } throw new java.lang.IllegalArgumentException ( "aleady user added" ) ; } 
public static boolean multcomp ( java.lang.String [] s , java.lang.String [] r ) { int i = 0 ; while ( i < ( s.length ) ) { if ( java.util.Arrays . asList ( s ) . contains ( r [ i ] ) ) { return true ; } i ++ ; } return false ; } 
@ java.lang.Override public void onBindViewHolder ( final io.github.sdsstudios.ScoreKeeper.PlayerListAdapter.ViewHolder holder , int position ) { holder.textViewPlayer . setText ( mDataset . get ( position ) ) ; holder.buttonDelete . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { removeAt ( holder . getAdapterPosition () ) ; } } ) ; } 
public void put ( int [] d , int offset , int length ) { java.nio.IntBuffer iBuffer = ( ( java.nio.IntBuffer ) ( data ) ) ; updates . add ( new com.jme3.scene.PartialUpdatedVertexBuffer.Update ( data . position () , ( length * ( ( java.lang.Integer.SIZE ) / 8 ) ) ) ) ; iBuffer . put ( d , offset , length ) ; } 
public boolean isValidEmail () { java.lang.Boolean isValid ; java.lang.String email = emailET . getText () . toString () . trim () ; if ( email . isEmpty () ) { tilEmail . setError ( "Field cannot be blank" ) ; isValid = false ; } else { isValid = android.util.Patterns.EMAIL_ADDRESS . matcher ( email ) . matches () ; if ( ! isValid ) { tilEmail . setError ( "Enter a valid Email Address" ) ; } else tilEmail . setErrorEnabled ( false ) ; } return isValid ; } 
private static java.lang.String executeShow ( java.lang.String userCommand ) { tasknote.logic.ShowInterval timeInterval = tasknote.parser.Parser . parseShow ( userCommand ) ; int countInterval = tasknote.parser.Parser . getInterval ( userCommand ) ; tasknote.logic.TaskNoteControl.command = new tasknote.logic.Commands.ShowCommand ( tasknote.logic.TaskNoteControl.taskNote , timeInterval , countInterval ) ; tasknote.logic.TaskNoteControl.command . execute () ; tasknote.logic.TaskNoteControl.command . refreshDisplay () ; java.lang.String response = tasknote.logic.TaskNoteControl.command . getFeedBack () ; return response ; } 
@ java.lang.Override public void onTransferComplete ( pro.dbro.airshare.app.OutgoingTransfer transfer , pro.dbro.airshare.session.Peer recipient , java.lang.Exception exception ) { callback . onDataSent ( new java.util.HashMap ( transfer . getHeaderExtras () ) , transfer . getBodyBytes () , recipient ) ; if ( ( mode ) == ( pro.dbro.airshare.app.ui.PeerFragment.Mode.SEND ) ) callback . onFinished ( null ) ; } 
public void initializeStateTree ( OurStateTree root , int d ) { if ( d == 0 ) { return; } else { root . genChild () ; for ( int i = 0 ; i < ( root.children . size () ) ; i ++ ) { if ( ( Referee . checkForWinner ( root . getStateTree () . children . get ( i ) ) ) == 0 ) { initializeStateTree ( root.children . get ( i ) , ( d - 1 ) ) ; } } } } 
public void send () { if ( isFormValid () ) { try { com.sipe.utils.Utils . sendEmail ( email , null , ( ( ( com.sipe.utils.Constantes.ADRESSE_INFO ) + ", " ) + ( com.sipe.utils.Constantes.ADRESSE_WEBSITE ) ) , "[SIPE] Prise de contact" , getContent () , true , null ) ; disabled = true ; setFormFeedback ( FEEDBACK_FORMULAIRE_ENVOYE ) ; } catch ( java.lang.Exception e ) { com.sipe.utils.Utils . printStackTrace ( e , null ) ; setFormFeedback ( FEEDBACK_ENVOI_ECHEC ) ; } } } 
protected org.sapia.corus.interop.client.BaseFileLogOutput.FileWriter createFileWriter ( java.io.File target ) { try { java.io.PrintWriter stream = new org.sapia.corus.interop.client.TimestampPrintWriter ( new java.io.FileOutputStream ( target ) ) ; return new org.sapia.corus.interop.client.BaseFileLogOutput.StreamFileWriter ( stream ) ; } catch ( java.io.FileNotFoundException e ) { java.lang.System.out . println ( "Could not create log file, will log to DEV/NULL" ) ; e . printStackTrace () ; return new org.sapia.corus.interop.client.BaseFileLogOutput.NullFileWriter () ; } } 
public static < T > org.infinispan.commons.util.concurrent.NotifyingFuture < java.util.List < T > > combine ( final java.util.List < org.infinispan.commons.util.concurrent.NotifyingFuture < T > > futures ) { if ( ( futures == null ) || ( futures . isEmpty () ) ) return new org.infinispan.commons.util.concurrent.NoOpFuture ( null ) ; return new org.infinispan.commons.util.concurrent.CompositeNotifyingFuture ( futures ) ; } 
private java.lang.String generateFilename ( java.lang.String number ) { java.lang.String timestamp = DATE_FORMAT . format ( new java.util.Date () ) ; if ( android.text.TextUtils . isEmpty ( number ) ) { number = "unknown" ; } return ( ( number + "_" ) + timestamp ) + ".amr" ; int audioFormat = getAudioFormat () ; if ( audioFormat == ( MediaRecorder.OutputFormat.AMR_NB ) ) { return ( ( number + "_" ) + timestamp ) + ".amr" ; } else { return ( ( number + "_" ) + timestamp ) + ".m4a " ; } } 
int [] getAnchorPath () { java.util.ArrayList < java.lang.Integer > ap = new java.util.ArrayList < java.lang.Integer > () ; findafs.AFSNode curNode = this ; while ( curNode != null ) { ap . add ( node ) ; curNode = curNode.parent ; } int [] pa = new int [ ap . size () ] ; int i = ( ap . size () ) - 1 ; for ( java.lang.Integer N : ap ) { pa [ ( i -- ) ] = N ; } return pa ; } 
private java.util.List < models.Order > retrieveOrderList ( java.util.Calendar calendar , int uId , int pageCount ) throws models.exceptions.OrderException { java.util.List < models.Order > ordersList = repo . getPersonalOrdersAsClient ( uId , pageCount , new java.sql.Date ( calendar . getInstance () . getTime () . getTime () ) , new java.sql.Date ( java.util.Calendar . getInstance () . getTime () . getTime () ) ) ; return ordersList ; } 
@ java.lang.Override public java.lang.String render ( java.io.File openedFile , pa.iscde.javadoc.internal.Type type , java.lang.String name ) { java.lang.String generatedText = null ; if ( null != openedFile ) { java.lang.StringBuilder sb = new java.lang.StringBuilder () ; pa.iscde.javadoc.generator.StringTemplateVisitor jDoc = new pa.iscde.javadoc.generator.StringTemplateVisitor ( sb ) ; pa.iscde.javadoc.internal.JavaDocServiceLocator . getJavaEditorService () . parseFile ( openedFile , jDoc ) ; generatedText = sb . toString () ; } return generatedText ; } 
public void update () { for ( int x = 0 ; x <= 48 ; x ++ ) { for ( int y = 0 ; y <= 50 ; y ++ ) { if ( ( board [ x ] [ y ] ) == null ) { asciiboard [ x ] [ y ] = ' ' ; } else { board [ x ] [ y ] . toString () . charAt ( 0 ) ; } } } } 
private void showEmptyViewWithMessage ( org.wordpress.android.ui.media.MediaGridFragment.MessageId messageId ) { int stringId = 0 ; switch ( messageId ) { case LOADING : stringId = R.string.loading_media ; break; case NO_CONTENT : stringId = R.string.media_empty_list ; break; case NETWORK_ERROR : stringId = R.string.network_error ; break; case PERMISSION_ERROR : stringId = R.string.media_error_no_permission ; break; case NO_CONTENT_CUSTOM_DATE : stringId = R.string.media_empty_list_custom_date ; break; } mGridView . setVisibility ( View.GONE ) ; mEmptyView . setVisibility ( View.VISIBLE ) ; mEmptyViewTitle . setText ( getResources () . getString ( stringId ) ) ; } 
public static void writeJson ( javax.servlet.http.HttpServletResponse res , com.coderyuan.models.ResultModel obj ) throws java.io.IOException { java.io.PrintWriter writer = res . getWriter () ; if ( obj . getRawOutput () ) { writer . write ( obj . getMsg () . toString () ) ; } else { res . setContentType ( "application/json;\tcharset=utf-8" ) ; res . setCharacterEncoding ( "utf-8" ) ; writer . write ( com.coderyuan.utils.JsonUtil . toJson ( obj ) ) ; } } 
@ java.lang.Override public void onSensorValueChanged ( final com.samsung.android.sdk.remotesensor.SrsRemoteSensorEvent srsRemoteSensorEvent ) { runOnUiThread ( new java.lang.Runnable () { @ java.lang.Override public void run () { if ( ( srsRemoteSensorEvent.sensor . getType () ) == ( com.samsung.android.sdk.remotesensor.SrsRemoteSensor.TYPE_PEDOMETER ) ) { appsandmaps.temple.edu.content_provider.MainActivity.Steps = java.lang.Float . toString ( srsRemoteSensorEvent.values [ 0 ] ) ; updateInformation ( "1" ) ; textViews = ( ( android.widget.TextView ) ( findViewById ( R.id.textView8 ) ) ) ; textViews . setText ( appsandmaps.temple.edu.content_provider.MainActivity.Steps ) ; } } } ) ; } 
public blog.model.User checkUser ( java.lang.String email , java.lang.String pw ) { blog.model.User u = this . userDao . findByUserName ( email ) ; if ( u == null ) { return null ; } if ( ( u . getPw () ) == null ) { return null ; } pw = blog.startup.Tools . digestSha1 ( pw ) ; if ( pw . equals ( u . getAdmin () . getPassword () ) ) { return u ; } return null ; } 
@ java.lang.Override protected void handleResponse ( net.dv8tion.jda.core.entities.impl.Response response , net.dv8tion.jda.core.entities.impl.Request request ) { if ( response . isOk () ) { net.dv8tion.jda.core.entities.impl.Message m = net.dv8tion.jda.core.entities.impl.EntityBuilder . get ( getJDA () ) . createMessage ( response . getObject () ) ; request . onSuccess ( m ) ; } else { request . onFailure ( response ) ; } } 
@ java.lang.Override public void onRESTResult ( int code , java.lang.String result ) { if ( ( code == 200 ) && ( result != null ) ) { sk.ab.herbs.activities.ListPlantsActivity activity = ( ( sk.ab.herbs.activities.ListPlantsActivity ) ( getActivity () ) ) ; activity . setPlant ( getDetailFromJson ( result ) ) ; activity . invalidateOptionsMenu () ; } else { android.util.Log . e ( sk.ab.herbs.fragments.rest.HerbDetailResponderFragment.TAG , "Failed to load data. Check your internet settings." ) ; } } 
public void DeadLockAbort ( ) throws java.io.IOException { this . blockbit = false ; while ( ( this . getCommand () . equals ( Command.ABORT ) ) || ( this . getCommand () . equals ( Command.COMMIT ) ) ) loadNextLine () ; Abort () ; loadNextLine () ; } 
public static java.util.Collection < Piece > calculateActivePieces ( final java.util.List < Tile > gameBoard , final Alliance alliance ) { final java.util.List < Piece > activePieces = new java.util.ArrayList <> () ; for ( Tile tile : gameBoard ) { if ( tile . isTileOccupied () ) { final Piece piece = tile . getPiece () ; if ( ( piece . getPieceAlliance () ) == alliance ) { activePieces . add ( piece ) ; } } } return activePieces ; } 
public void processMessage ( java.lang.String logName , java.lang.String text , java.awt.Color col , boolean clear ) { net.minecraft.client.gui.GuiScreen gui = net.minecraft.client.Minecraft . getMinecraft () . currentScreen ; if ( gui instanceof com.Da_Technomancer.crossroads.API.gui.ILogUser ) { com.Da_Technomancer.crossroads.API.gui.OutputLogGuiObject log = ( ( com.Da_Technomancer.crossroads.API.gui.ILogUser ) ( gui ) ) . getLog ( "context" ) ; if ( log != null ) { if ( clear ) { log . clearLog () ; } log . addText ( text , col ) ; } } } 
private static cgeo.geocaching.models.Geocache downloadCache ( final java.lang.String geocode ) { final cgeo.geocaching.SearchResult searchResult = cgeo.geocaching.models.Geocache . searchByGeocode ( geocode , null , java.util.Collections.EMPTY_SET , true , cgeo.geocaching.connector.gc.WaypointsTest.handler ) ; org.assertj.core.api.Assertions . assertThat ( searchResult . getCount () ) . isEqualTo ( 1 ) ; return searchResult . getFirstCacheFromResult ( LoadFlags.LOAD_WAYPOINTS ) ; } 
private java.lang.Object readResolve () { if ( ( includeRegex ) != null ) { try { includePattern = java.util.regex.Pattern . compile ( includeRegex ) ; } catch ( java.util.regex.PatternSyntaxException x ) { includeRegex = null ; hudson.diagnosis.OldDataMonitor . report ( this , java.util.Collections . < java.lang.Throwable > singleton ( x ) ) ; } } if ( ( jobNames ) == null ) { jobNames = new java.util.TreeSet < java.lang.String > ( hudson.util.CaseInsensitiveComparator.INSTANCE ) ; } initColumns () ; initJobFilters () ; return this ; } 
public void runSync ( config.Config cfg , config.Options option ) { java.util.List < java.lang.String > scenarios = option . getScenarioList () ; for ( java.lang.String s : scenarios ) { java.lang.String s_name = get_scenario_name ( s ) ; int s_count = get_loop_count ( s ) ; for ( int i = 0 ; i < s_count ; i ++ ) { new controller.Ruberdriver ( cfg , s_name ) . run () ; } } scenarios = null ; } 
@ java.lang.Override protected void onDraw ( android.graphics.Canvas canvas ) { super . onDraw ( canvas ) ; drawGrid ( canvas ) ; drawPlaces ( canvas ) ; if ( ( ! ( xCoordinate . isEmpty () ) ) && ( ! ( yCoordinate . isEmpty () ) ) ) { drawHumanBoardPlaces ( canvas ) ; } drawForHuman ( canvas ) ; } 
@ java.lang.Override protected void updateItem ( final java.lang.String item , final boolean empty ) { super . updateItem ( item , empty ) ; if ( ( item == null ) || empty ) { setText ( null ) ; } else { javafx.scene.text.Text text = new javafx.scene.text.Text ( item ) ; text . wrappingWidthProperty () . bind ( getTableColumn () . widthProperty () ) ; setGraphic ( text ) ; } } 
private boolean desperationMode ( classes.Player [] players , int numberOfEights ) { if ( numberOfEights > 0 ) { if ( numberOfEights > 1 ) { return true ; } else { for ( int i = 0 ; i < ( classes.Player [] . class ) ; i += 1 ) { if ( ( Player [ i ] . hand . size = 2 ) && ( numberOfEights == 1 ) ) { return true ; } else { return false ; } } } } else { return false ; } } 
@ java.lang.Override public server.enums.ResponseType analyze ( server.Client client , java.lang.String [] splittedUserInput ) { if ( server.Database . isUserStandingAtleast ( client . getUsername () , UserStanding.MOD ) ) { java.lang.String targetUsername = splittedUserInput [ 1 ] ; if ( server.Database . doesUserExist ( targetUsername ) ) { server.Database . setUserStanding ( client . getUsername () , UserStanding.NORMAL ) ; client . setUserStanding ( UserStanding.NORMAL ) ; return server.enums.ResponseType.GENERAL_SUCCESS ; } else { return server.enums.ResponseType.USER_DOES_NOT_EXIST ; } } else { return server.enums.ResponseType.NOT_ALLOWED ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; requestWindowFeature ( Window.FEATURE_NO_TITLE ) ; getWindow () . setFlags ( WindowManager.LayoutParams.FLAG_FULLSCREEN , WindowManager.LayoutParams.FLAG_FULLSCREEN ) ; android.content.Intent intent = getIntent () ; latx = ( ( double ) ( intent . getDoubleExtra ( "latitude" , 0.0 ) ) ) ; laty = ( ( double ) ( intent . getDoubleExtra ( "longitude" , 0.0 ) ) ) ; latx += 0.00290532687912 ; laty += 0.01074687519 ; setView () ; com.gime.locationsb.AddWallMgr . getInstance ( this ) . showBannerAdd ( this ) ; } 
@ java.lang.Override public boolean equals ( java.lang.Object o ) { if ( ! ( o instanceof net.cloudhacking.androidgame2.engine.gl.TextRenderer.StringAndProps ) ) { return false ; } else { net.cloudhacking.androidgame2.engine.gl.TextRenderer.StringAndProps other = ( ( net.cloudhacking.androidgame2.engine.gl.TextRenderer.StringAndProps ) ( o ) ) ; return ( ( s ) == ( other.s ) ) && ( props . equals ( other.props ) ) ; } } 
@ java.lang.Override public void onDateSet ( android.widget.DatePicker view , int year , int monthOfYear , int dayOfMonth ) { com.kaist.lts.ClientActivity.dueDate = ( ( ( year + "-" ) + monthOfYear ) + "-" ) + dayOfMonth ; android.widget.Toast . makeText ( com.kaist.lts.ClientActivity.mContext , com.kaist.lts.ClientActivity.dueDate , Toast.LENGTH_SHORT ) . show () ; } 
public void incrementProductQuantity ( int idProduct ) { manufacture.entity.cart.CartProduct cartProduct = getProductFromCartListeById ( idProduct ) ; int cartProductQuantity = cartProduct . getQuantity () ; if ( cartProductQuantity < ( cartProduct . getProduct () . getStock () ) ) { cartProductQuantity ++ ; } else { cartProductQuantity = cartProduct . getProduct () . getStock () ; } cartProduct . setQuantity ( cartProductQuantity ) ; } 
public static java.util.List < com.youbenzi.mdtool.markdown.Block > analyze ( java.lang.String content ) { com.youbenzi.mdtool.markdown.filter.SyntaxFilter filter = new com.youbenzi.mdtool.markdown.filter.CodePartFilter ( new com.youbenzi.mdtool.markdown.filter.CodeListFilter ( new com.youbenzi.mdtool.markdown.filter.TablePartFilter ( new com.youbenzi.mdtool.markdown.filter.HeaderOneLineFilter ( new com.youbenzi.mdtool.markdown.filter.ListFilter ( new com.youbenzi.mdtool.markdown.filter.HeaderNextLineFilter ( null ) ) ) ) ) ) ; java.util.List < com.youbenzi.mdtool.markdown.Block > blocks = filter . call ( content ) ; return blocks ; } 
@ java.lang.Override public boolean handleChange ( java.lang.Object oldValue , java.lang.Object newValue , org.eclipse.draw2d.IFigure refreshableFigure ) { if ( ( traceDataProvider [ index ] ) != null ) { traceDataProvider [ index ] . setCurrentYDataArray ( ( ( double [] ) ( newValue ) ) ) ; int yDataLength = ( ( double [] ) ( newValue ) ) . length ; if ( yDataLength != ( xTraceDataSize [ index ] ) ) { model . setPrimaryXAxisTraceData ( index , generateXData ( yDataLength , model . getPrimaryXAxisBinSize ( index ) ) ) ; } } return true ; } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { android.view.View v = inflater . inflate ( R.layout.fragment_read , container , false ) ; jsv = v . findViewById ( R.id.read_fragment_jscrollview ) ; com.koroshiya.listeners.GestureListener gestureListener = new com.koroshiya.listeners.GestureListener ( jsv , this ) ; jsv . setOnTouchListener ( gestureListener ) ; readBundleArgs ( savedInstanceState ) ; return v ; } 
public static void init ( final java.lang.String indexFile , final java.lang.String tfidfFile , final java.lang.String dfFile , final boolean storeIndexOnDrive ) throws java.io.IOException { if ( de.citec.sc.templates.DocumentSimilarityTemplate.isInitialized ) { de.citec.sc.similarity.database.FileDB . loadIndicies ( indexFile , tfidfFile , storeIndexOnDrive ) ; de.citec.sc.templates.DocumentSimilarityTemplate.dfFile = dfFile ; de.citec.sc.similarity.tfidf.IDFProvider . getIDF ( dfFile ) ; de.citec.sc.templates.DocumentSimilarityTemplate.lemmatizer = new de.citec.sc.helper.StanfordLemmatizer () ; de.citec.sc.templates.DocumentSimilarityTemplate.NUMBER_OF_WIKI_DOCUMENTS = de.citec.sc.wikipedia.preprocess.WikipediaTFIDFVector . countLines ( tfidfFile ) ; de.citec.sc.templates.DocumentSimilarityTemplate.isInitialized = true ; } } 
private void addPlayer ( com.blogspot.onekeyucd.healthtracker.PlayerFragment playerToAdd ) { try { mFragmentManager . beginTransaction () . add ( R.id.player_container , playerToAdd , playerToAdd . getName () ) . commit () ; ( numPlayers ) ++ ; } catch ( java.lang.Exception e ) { android.widget.Toast . makeText ( getApplicationContext () , R.string.failed_add , Toast.LENGTH_SHORT ) . show () ; e . printStackTrace () ; } } 
private void assertLPS ( java.lang.String [] values ) { java.lang.String lcsString = algorithms.dp.TestLongestPalindromicSubstring.longestPalindromicSubstring . longestPS ( values [ 0 ] ) ; org.junit.Assert . assertEquals ( values [ 1 ] . length () , lcsString . length () ) ; if ( ( lcsString . length () ) > 0 ) { org.junit.Assert . assertEquals ( values [ 1 ] , lcsString ) ; } } 
@ java.lang.Override public void onFailure ( @ android.support.annotation.NonNull java.lang.Exception e ) { progress . dismiss () ; com.satra.traveler.utils.Tutility . showMessage ( this , getString ( R.string.signinerror ) , getString ( R.string.app_name ) ) ; android.util.Log . e ( "signinerror" , ( "error: " + ( e . getMessage () ) ) ) ; } 
public static org.opendaylight.yang.gen.v1.urn.opendaylight.action.types.rev131112.action.list.Action createActionPushMpls ( int order ) { org.opendaylight.yang.gen.v1.urn.opendaylight.action.types.rev131112.action.action.push.mpls.action._case.PushMplsActionBuilder push = new org.opendaylight.yang.gen.v1.urn.opendaylight.action.types.rev131112.action.action.push.mpls.action._case.PushMplsActionBuilder () ; push . setEthernetType ( new java.lang.Integer ( org.opendaylight.sfc.util.openflow.SfcOpenflowUtils.ETHERTYPE_MPLS_UCAST ) ) ; org.opendaylight.yang.gen.v1.urn.opendaylight.action.types.rev131112.action.action.PushMplsActionCaseBuilder pushMplsCase = new org.opendaylight.yang.gen.v1.urn.opendaylight.action.types.rev131112.action.action.PushMplsActionCaseBuilder () ; pushMplsCase . setPushMplsAction ( push . build () ) ; org.opendaylight.yang.gen.v1.urn.opendaylight.action.types.rev131112.action.list.ActionBuilder ab = org.opendaylight.sfc.util.openflow.SfcOpenflowUtils . createActionBuilder ( order ) ; ab . setAction ( pushMplsCase . build () ) ; return ab . build () ; } 
public void removeRoomType ( se.chalmers.cse.mdsd1617.group18.roomManager.IRoomType roomType ) { for ( int i = 0 ; i < ( roomTypes . size () ) ; i ++ ) { if ( ( roomTypes . get ( i ) ) == roomType ) { roomTypes . remove ( i ) ; } } } 
public void setPasscode ( java.lang.String passcode ) { try { java.security.MessageDigest digest = java.security.MessageDigest . getInstance ( "SHA-256" ) ; this . passcode = digest . digest ( passcode . getBytes ( java.nio.charset.StandardCharsets.UTF_8 ) ) ; } catch ( java.security.NoSuchAlgorithmException e ) { android.util.Log . e ( getClass () . getName () , "setPasscode: " , e ) ; } } 
private boolean moveFromA3BToC () { if ( A3B . empty () ) { return false ; } verticesToMove -= swapper . changeColor ( A3B . getVertices () , scheduling.three.C , verticesToMove ) ; B3A . setForUpdate () ; C3B . setForUpdate () ; return true ; } 
public void removeMatcherEndpoint ( net.powermatcher.api.MatcherEndpoint matcherEndpoint ) { java.lang.String agentId = matcherEndpoint . getAgentId () ; synchronized ( potentialSessions ) { for ( net.powermatcher.runtime.PotentialSession ps : potentialSessions . get ( agentId ) ) { ps . disconnect () ; ps . setMatcherEndpoint ( null ) ; } matcherEndpoints . remove ( agentId ) ; } removeAgent ( matcherEndpoint ) ; } 
@ java.lang.Deprecated public static java.lang.String URLDecode ( byte [] bytes , java.lang.String enc , boolean isQuery ) { java.nio.charset.Charset charset = null ; if ( enc != null ) { try { charset = org.apache.tomcat.util.buf.B2CConverter . getCharset ( enc ) ; } catch ( java.io.UnsupportedEncodingException uee ) { if ( org.apache.tomcat.util.buf.UDecoder.log . isDebugEnabled () ) { org.apache.tomcat.util.buf.UDecoder.log . debug ( org.apache.tomcat.util.buf.UDecoder.sm . getString ( "uDecoder.urlDecode.uee" , enc ) , uee ) ; } } } return org.apache.tomcat.util.buf.UDecoder . URLDecode ( bytes , charset , isQuery ) ; } 
public static void run ( ) throws java.lang.Exception { java.lang.System.out . println ( "2. Бесконечная последовательность" ) ; java.lang.System.out . println ( "Возьмём бесконечную цифровую последовательность, образованную склеиванием последовательных положительных" ) ; java.lang.System.out . println ( "чисел: S = 123456789101112131415..." ) ; java.lang.System.out . println ( "Определите первое вхождение заданной последовательности A в бесконечной последовательности S (нумерация" ) ; java.lang.System.out . println ( "начинается с 1)." ) ; java.util.ArrayList < java.lang.String > searchList = new java.util.ArrayList < java.lang.String > () ; ru.hh.school.zhdanov.Problem2 . getListFromFile ( searchList ) ; ru.hh.school.zhdanov.Problem2 . brute ( searchList ) ; ru.hh.school.zhdanov.Problem2 . intelecSearch ( searchList ) ; } 
@ java.lang.Override public void processServer ( engine.network.server.Server server , engine.network.server.ServerClient client ) { if ( ( client.playerMob ) == null ) return; byte travelDir = engine.network.packet.PacketRequestTravel . getTravelDir ( client.playerMob ) ; engine.network.packet.PacketTravelForm packet = new engine.network.packet.PacketTravelForm ( server , client , travelDir ) ; server.network . sendPacket ( packet , client ) ; } 
@ java.lang.Override public boolean action ( ) throws net.openhft.chronicle.threads.api.InvalidEventHandlerException { if ( ! ( sc . isOpen () ) ) throw new net.openhft.chronicle.threads.api.InvalidEventHandlerException () ; try { int read = ( ( inBB . remaining () ) > 0 ) ? sc . read ( inBB ) : 1 ; if ( read < 0 ) { closeSC () ; } else if ( read > 0 ) { invokeHandler () ; } } catch ( java.io.IOException e ) { handleIOE ( e ) ; } return false ; } 
@ java.lang.Override public void replaceItemIn ( com.nextpoorslob.basictasklist.model.TaskItem item , java.util.List < com.nextpoorslob.basictasklist.model.TaskItem > items ) { int pos = items . indexOf ( item ) ; if ( pos < 0 ) { if ( ( item . getId () ) < 0 ) { item . setId ( getNextAutonumber () ) ; items . add ( item ) ; } } else { items . add ( pos , item ) ; items . remove ( ( pos + 1 ) ) ; } } 
private boolean isSpoilerUnBlurred ( long commentID , int startIndex , int endIndex ) { int key = unBlurredContents . indexOfKey ( commentID ) ; if ( key != ( - 1 ) ) { java.util.List < android.support.v4.util.Pair < java.lang.Integer , java.lang.Integer > > blurIndexes = unBlurredContents . get ( commentID ) ; for ( android.support.v4.util.Pair < java.lang.Integer , java.lang.Integer > blurIndex : blurIndexes ) { if ( ( ( blurIndex.first ) == startIndex ) && ( ( blurIndex.second ) == endIndex ) ) { return true ; } } } return false ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; action = getIntent () . getAction () ; if ( ( action ) != null ) setCorrectTheme () ; setContentView ( R.layout.activity_main ) ; reminderMessageTextView = ( ( android.widget.TextView ) ( findViewById ( R.id.tv_reminder_message ) ) ) ; reminderMessageTextView . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { husaynhakeem.io.focusreminder.utilities.NotificationUtils . remindUserToFocus ( husaynhakeem.io.focusreminder.MainActivity . this ) ; } } ) ; handleIncomingFromNotification () ; husaynhakeem.io.focusreminder.utilities.ReminderUtils . scheduleFocusReminder ( this ) ; } 
public boolean mouseOver ( int mx , int my , int x , int y , int width , int height ) { if ( ( mx > x ) && ( mx < ( x + width ) ) ) { if ( ( my > y ) && ( my < ( x + width ) ) ) { return true ; } return false ; } return false ; } 
public static void resetLanguage ( android.app.Activity activity , java.lang.String language ) { if ( ! ( android.text.TextUtils . equals ( language , org.awesomeapp.messenger.Preferences . getLanguage () ) ) ) { org.awesomeapp.messenger.util.Languages . setLanguage ( activity , language ) ; org.awesomeapp.messenger.Preferences . setLanguage ( language ) ; org.awesomeapp.messenger.util.Languages . forceChangeLanguage ( activity ) ; if ( language . equalsIgnoreCase ( "bo" ) ) { org.ironrabbit.type.CustomTypefaceManager . loadFromAssets ( activity ) ; } else { org.ironrabbit.type.CustomTypefaceManager . setTypeface ( null ) ; } } } 
@ java.lang.Override public com.wildducktheories.promise.Promise < P , F > fail ( final com.wildducktheories.promise.FailCallback < F > callback ) { synchronized ( this ) { switch ( state ) { case PENDING : addCallbacks ( null , callback ) ; break; case FAILED : notifyFail ( new com.wildducktheories.promise.impl.SyncCompletionTasklet ( com.wildducktheories.tasklet.SchedulerAPI . get () . getScheduler () , null , callback ) , rejection ) ; break; default: } } return this ; } 
private void readAll () { tryItemMeta () ; java.util.List < java.lang.String > itemLore = itemStack . getItemMeta () . getLore () ; itemLore = ( itemLore == null ) ? new java.util.ArrayList < java.lang.String > () : itemLore ; this . lore = itemLore ; for ( java.lang.String line : itemLore ) { java.util.Map.Entry < java.lang.String , java.lang.Object > entry = toEntry ( line ) ; this . values . put ( entry . getKey () , entry . getValue () ) ; } } 
@ java.lang.Override public void propagateSchemaChanges ( final com.orientechnologies.orient.core.db.ODatabaseInternal iDatabase ) { final com.orientechnologies.orient.server.hazelcast.ODistributedConfiguration cfg = getDatabaseConfiguration ( iDatabase . getName () ) ; if ( cfg == null ) return; for ( com.orientechnologies.orient.core.metadata.schema.OClass c : iDatabase . getMetadata () . getSchema () . getClasses () ) { if ( ! ( ( c . getClusterSelection () ) instanceof com.orientechnologies.orient.server.hazelcast.OLocalClusterStrategy ) ) installClustersOfClass ( iDatabase , cfg , c ) ; } } 
@ java.lang.Override public void handleBookmarksChange () { final acr.browser.lightning.view.LightningView currentTab = mTabsManager . getCurrentTab () ; if ( ( currentTab != null ) && ( acr.browser.lightning.utils.UrlUtils . isBookmarkUrl ( currentTab . getUrl () ) ) ) { currentTab . loadBookmarkpage () ; } if ( currentTab != null ) { mBookmarksView . handleUpdatedUrl ( currentTab . getUrl () ) ; } } 
public void laugh () { if ( ! ( isIdle ) ) return; isLaughing = true ; laugh = new whackamole.SpriteAnimation ( view , javafx.util.Duration . millis ( 1000 ) , 4 , 4 , 0 , 1260 , 140 , 140 ) ; laugh . setCycleCount ( 3 ) ; laugh . setOnFinished ( ( endIdleEvent ) - > { isIdle = false ; leave () ; } ) ; laugh . play () ; } 
public static boolean catDog ( java.lang.String str ) { int catCount = 0 ; int dogCount = 0 ; for ( int i = 0 ; i < ( ( str . length () ) - 2 ) ; i += 3 ) { java.lang.String temp = str . substring ( i , ( i + 3 ) ) ; if ( temp . equals ( "cat" ) ) catCount ++ ; else if ( temp . equals ( "dog" ) ) dogCount ++ ; } return catCount == dogCount ; } 
public static void message ( java.lang.String text ) { { org.liblouis.BrailleTranslation brl = org.nbp.b2g.ui.TranslationUtilities . newBrailleTranslation ( text , false ) ; Devices.braille . get () . write ( ( brl != null ? brl . getBrailleAsString () : text ) , ApplicationParameters.BRAILLE_MESSAGE_DURATION ) ; } org.nbp.b2g.ui.SpeechDevice speech = Devices.speech . get () ; synchronized ( speech ) { speech . stopSpeaking () ; speech . say ( text ) ; } } 
public void write ( java.io.DataOutputStream output ) throws java.io.IOException { android.util.Log . i ( "Geocollection Interval" , "in Write function" ) ; android.util.Log . d ( "Geocollection Interval" , ( "WriteFunction LatString= " + ( this . mGeolatsring ) ) ) ; android.util.Log . d ( "Geocollection Interval" , ( "WriteFunction LatString= " + ( this . mGeolongstring ) ) ) ; output . writeLong ( this . mUnixEpoch ) ; output . writeChars ( this . mGeolatsring ) ; output . writeChars ( this . mGeolongstring ) ; } 
@ java.lang.Override protected java.lang.Void doInBackground ( java.lang.Void . . . params ) { try { me.ccrama.redditslide.Reddit.mHelper = new me.ccrama.redditslide.util.IabHelper ( this , SecretConstants.base64EncodedPublicKey ) ; me.ccrama.redditslide.Reddit.mHelper . startSetup ( new me.ccrama.redditslide.util.IabHelper.OnIabSetupFinishedListener () { public void onIabSetupFinished ( me.ccrama.redditslide.util.IabResult result ) { if ( ! ( result . isSuccess () ) ) { android.util.Log . d ( "Slide" , ( "Problem setting up In-app Billing: " + result ) ) ; } } } ) ; } catch ( java.lang.Exception ignored ) {} return null ; } 
public org.json.JSONObject getFrame ( com.door43.translationstudio.core.SourceTranslation translation , java.lang.String chapterId , java.lang.String frameId ) { java.lang.String md5hash = readSourceLink ( translation ) ; if ( md5hash == null ) { return null ; } return readJSON ( ( ( ( ( ( ( ( mDataPath ) + "/" ) + md5hash ) + "/" ) + chapterId ) + "/" ) + frameId ) ) ; } 
public void testValidArray () { java.lang.String input = "banana" ; com.jf.structures.string.SuffixArray suffixArray = new com.jf.structures.string.SuffixArray ( input ) ; java.lang.String [] output = suffixArray . print () . split ( "\n" ) ; assertEquals ( "a" , output [ 0 ] ) ; assertEquals ( "ana" , output [ 1 ] ) ; assertEquals ( "anana" , output [ 2 ] ) ; assertEquals ( "banana" , output [ 3 ] ) ; assertEquals ( "na" , output [ 4 ] ) ; assertEquals ( "nana" , output [ 5 ] ) ; } 
private void updateFleet ( cyclesofwar.Player player , int force , double timeToTarget ) { if ( ( this . planet . getPlayer () ) == player ) { this . forces += force ; } else { this . forces -= force ; if ( ( this . forces ) < 0 ) { this . forcesToKeep -= this . forces ; this . forces = 0 ; } } time = timeToTarget ; } 
private java.lang.String getVersionName ( final com.amazonaws.services.cloudtrail.processinglibrary.model.CloudTrailEvent event , final java.lang.String instance ) { java.lang.String instanceId = getInstanceId ( instance ) ; java.util.Map userData = userDataProvider . getUserData ( getAccountId ( event ) , getRegion ( event ) , instanceId ) ; return userData . get ( "application_version" ) . toString () ; } 
@ java.lang.Override public void setActivitiesAverage ( int completedActivitiesAverage , int incompleteActivitiesAverage , int notDoneActivitiesAverage ) { if ( ( tvCompleted ) != null ) tvCompleted . setText ( java.lang.String . format ( "%s%%" , completedActivitiesAverage ) ) ; if ( ( tvIncomplete ) != null ) tvIncomplete . setText ( java.lang.String . format ( "%s%%" , incompleteActivitiesAverage ) ) ; if ( ( tvNotDone ) != null ) tvNotDone . setText ( java.lang.String . format ( "%s%%" , notDoneActivitiesAverage ) ) ; setProgressInfo ( completedActivitiesAverage , incompleteActivitiesAverage , notDoneActivitiesAverage ) ; } 
@ java.lang.Override public java.lang.String toString () { char [] posStr = new char [] { ( ( char ) ( ( ( int ) ( 'a' ) ) + ( x ) ) ) , ( ( char ) ( ( ( int ) ( '1' ) ) + ( ( Board.ROWS ) - ( y ) ) ) ) } ; return new java.lang.String ( posStr ) ; } 
public void setMinutsTimer () { java.util.Timer timer = new java.util.Timer () ; timer . schedule ( new java.util.TimerTask () { @ java.lang.Override public void run () { timplannerActivity . runOnUiThread ( new java.lang.Runnable () { @ java.lang.Override public void run () { checkIfSubjectActiv () ; } } ) ; } } , 0 , ( ( 1000 * 1 ) * 60 ) ) ; } 
public K next () { if ( ( idx ) == ( tabSize ) ) { return null ; } while ( ( ( mKeys [ idx ] ) == null ) || ( ( mKeys [ idx ] ) == ( REMOVED ) ) ) { ++ ( idx ) ; if ( ( idx ) == ( tabSize ) ) { return null ; } } return mKeys [ ( ( idx ) ++ ) ] ; } 
@ java.lang.Override public void create ( br.com.pronatal.model.Problem obj ) { org.hibernate.Session session = null ; try { session = br.com.pronatal.utils.HibernateUtil . getSessionFactory () . getCurrentSession () ; session . beginTransaction () ; session . save ( obj ) ; session . getTransaction () . commit () ; } catch ( java.lang.Exception e ) { java.lang.System.out . println ( ( "Create exception: " + ( e . getMessage () ) ) ) ; } finally { if ( session != null ) { session . close () ; } } } 
public static java.lang.String getErrorMsg ( java.sql.SQLException e ) { java.lang.String errorMsg = e . getMessage () ; if ( errorMsg . contains ( "foreign key constraint" ) ) { errorMsg = "At least one value is inconsistent with existing data in other dimensions" ; } else if ( errorMsg . contains ( "duplicate key value violates unique constraint" ) ) { errorMsg = "Key value is already present" ; } else { errorMsg = "Data is invalid" ; } return errorMsg ; } 
public void refresh () { mGraphicOverlay . setDrawRect ( isShowDrawRect () ) ; mGraphicOverlay . setRectColors ( getRectColors () ) ; mGraphicOverlay . setShowText ( isShouldShowText () ) ; mCameraSource . setFocusMode ( ( isAutoFocus () ? Camera.Parameters.FOCUS_MODE_CONTINUOUS_PICTURE : null ) ) ; mCameraSource . setFlashMode ( ( isShowFlash () ? Camera.Parameters.FLASH_MODE_TORCH : Camera.Parameters.FLASH_MODE_OFF ) ) ; mCameraSource . setColorsInverted ( isShouldInvert () ) ; } 
private org.opennms.netmgt.api.sample.Metric getMetric ( java.util.Map < java.lang.String , java.lang.String > parameters , org.opennms.netmgt.config.collectd.jmx.Mbean mbean , org.opennms.netmgt.config.collectd.jmx.Attrib attrib ) { final java.lang.String sampleAlias = org.opennms.netmgt.jmx.JmxUtils . trimAttributeName ( attrib . getAlias () ) ; final org.opennms.netmgt.api.sample.MetricType metricType = getMetricType ( attrib ) ; final java.lang.String groupName = org.opennms.netmgt.jmx.JmxUtils . getGroupName ( parameters , mbean ) ; final org.opennms.netmgt.api.sample.Metric metric = new org.opennms.netmgt.api.sample.Metric ( sampleAlias , metricType , groupName ) ; return metric ; } 
@ java.lang.Override public ec.tss.tsproviders.sdmx.DataSet toDataSet ( ec.tss.TsMoniker moniker ) throws java.lang.IllegalArgumentException { ec.tss.tsproviders.sdmx.DataSet result = super . toDataSet ( moniker ) ; if ( result != null ) { return result ; } synchronized ( legacyDataSetParser ) { return legacyDataSetParser . parse ( moniker . getId () ) ; } } 
public static vdaoengine.analysis.PQSQPotential getTrimmedXsquaredPlusXPQSQPotential ( float [] [] x ) { vdaoengine.analysis.PQSQPotential pqsq = new vdaoengine.analysis.PQSQPotential () ; pqsq . defineIntervals ( x ) ; pqsq.MajoratingFunction = new vdaoengine.utils.VSimpleFunctions () . new vdaoengine.analysis.VPolynomialFunction () ; float [] pars = new float [] { 0 , 1 , 1 } ; pqsq.functionParameters = pars ; pqsq . computeABCoefficients ( x , pqsq.MajoratingFunction , pars ) ; return pqsq ; } 
public java.util.ArrayList < java.lang.String > listOfLapTimes () { java.util.ArrayList < java.lang.String > lapTimes = new java.util.ArrayList < java.lang.String > () ; for ( int i = 0 ; i < ( finishTime . size () ) ; i ++ ) { lapTimes . add ( getLapTime ( i ) ) ; } return lapTimes ; } 
private void setFab () { mFab = ( ( android.support.design.widget.FloatingActionButton ) ( findViewById ( R.id.fab_delete ) ) ) ; if ( ( mFab ) != null ) { mFab . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { mHistoryDatabase . clearDatabase () ; android.support.design.widget.Snackbar . make ( v , "Search history deleted" , Snackbar.LENGTH_LONG ) . setAction ( "Action" , null ) . show () ; } } ) ; } } 
private java.util.ArrayList < cosbas.biometric.validators.facial.IplImage > initEigenVectors ( int nEigens , cosbas.biometric.validators.facial.CvSize faceImgSize ) { java.util.ArrayList < cosbas.biometric.validators.facial.IplImage > eigenVectors = new java.util.ArrayList <> ( nEigens ) ; for ( int i = 0 ; i < nEigens ; i ++ ) { eigenVectors . set ( i , cvCreateImage ( faceImgSize , cosbas.biometric.validators.facial.IPL_DEPTH_32F , 1 ) ) ; } return eigenVectors ; } 
private static int getTopNumber () { int intNumber ; java.lang.String stringNumber ; stringNumber = Interpreter.commands . peek () ; Interpreter.commands . pop () ; if ( Interpreter.commandMap . containsKey ( stringNumber ) ) { java.lang.System.out . println ( "Contains number." ) ; intNumber = Interpreter.commandMap . get ( stringNumber ) ; } else { intNumber = java.lang.Integer . parseInt ( stringNumber ) ; } return intNumber ; } 
@ java.lang.Override protected void drawBackground () { org.lwjgl.opengl.GL11 . glColor4f ( 1.0F , 1.0F , 1.0F , 1.0F ) ; parent . getMinecraft () . renderEngine . bindTexture ( texture ) ; parent . drawTexturedModalRect ( posX , posY , 0 , 0 , 66 , 66 ) ; if ( ( items.length ) == 10 ) parent . drawTexturedModalRect ( ( ( posX ) + 18 ) , ( ( posY ) + 69 ) , 66 , 0 , 30 , 30 ) ; } 
public bufmgr.Pair getReplacementCandidate ( global.PageId targetPage ) { bufmgr.Pair returnCandidate = null ; if ( ! ( freeList . isEmpty () ) ) { returnCandidate = freeList . removeFirst () ; returnCandidate . setPageId ( targetPage ) ; bufmgr.LIRS.LIRS_Pair tmpLIRSEntry = new bufmgr.LIRS.LIRS_Pair ( returnCandidate ) ; candidateList . add ( tmpLIRSEntry ) ; } else { computeStats () ; returnCandidate = victim . getCandidateInfo () ; victim . reset () ; } return returnCandidate ; } 
private void choose () { double parentA ; double parentB ; for ( int i = 0 ; i < ( ( numberOfMembers ) / 2 ) ; i ++ ) { parentA = ( ru.kirpech.RandomUtils . nextDouble () ) * 0.01 ; parentB = ( ru.kirpech.RandomUtils . nextDouble () ) * 0.1 ; ru.kirpech.Chromosome a = members . get ( binarySearch ( parentA ) ) ; ru.kirpech.Chromosome b = members . get ( binarySearch ( parentB ) ) ; members . addAll ( ru.kirpech.Chromosome . crossing ( a , b ) ) ; } } 
protected void setRefreshingInternal ( boolean doScroll ) { state = com.handmark.pulltorefresh.library.PullToRefreshBase.REFRESHING ; if ( null != ( headerLayout ) ) { headerLayout . refreshing () ; } if ( null != ( footerLayout ) ) { footerLayout . refreshing () ; } if ( doScroll ) { smoothScrollTo ( ( ( mode ) == ( com.handmark.pulltorefresh.library.PullToRefreshBase.MODE_PULL_DOWN_TO_REFRESH ) ? headerHeight : - ( headerHeight ) ) ) ; } } 
static void main () { boolean booleanVal ; int var ; int third ; booleanVal = readlib . readBool ( "aBool" ) ; var = readlib . readPreciseInt () ; third = readlib . readInt ( "blabla" ) ; third = third + 5 ; log ( third ) ; var = var + third ; log ( var ) ; } 
public boolean withdraw ( float amount ) { if ( ( ( getState () ) == ( State.OPEN ) ) && ( amount > 0.0F ) ) { balance = ( balance ) - amount ; ( numWithdraws ) ++ ; if ( ( numWithdraws ) > 3 ) { balance = ( balance ) - 1.0F ; } if ( ( balance ) <= 0.0F ) { setState ( State.OVERDRAWN ) ; } return true ; } return false ; } 
public void propagateSelectionFromTextPanel () { try { java.util.List < edu.brandeis.cs.nlp.mae.controller.ExtentTag > releventTags = getDriver () . getTagsIn ( getSelectedTextSpans () ) ; for ( edu.brandeis.cs.nlp.mae.controller.ExtentTag tag : releventTags ) { getTablePanel () . selectTagFromTable ( tag ) ; } getStatusBar () . reset () ; } catch ( java.lang.Exception e ) { showError ( e ) ; } } 
private void str ( short r , short x , short address , short indirect ) { short EA = calcEA ( x , address , indirect ) ; mar = EA ; mbr = this . r [ r ] ; cpu.CPU . setMem ( mbr , mar ) ; } 
@ java.lang.Override protected org.knime.core.data.DataTableSpec [] configure ( final org.knime.core.data.DataTableSpec [] inSpecs ) throws org.knime.core.node.InvalidSettingsException { if ( ( shpFileLoc . getStringValue () ) == null ) { throw new org.knime.core.node.InvalidSettingsException ( "No shape file name specified" ) ; } if ( ( projection . getStringValue () ) == null ) { throw new org.knime.core.node.InvalidSettingsException ( "You must have a srid number for projection" ) ; } return new org.knime.core.data.DataTableSpec [] { null } ; } 
public void eat ( int food ) { eaten += ( ( 1 + ( respeff ) ) > 1 ) ? random . nextInt ( ( ( respeff ) / 2 ) ) : 0 ; food *= ( 20 + ( random . nextInt ( 31 ) ) ) + ( digeff ) ; food /= 100 ; this . regenerate ( ( food / 20 ) ) ; this . weight += food ; } 
@ org.junit.Test public void getServerPath () { at.fhj.swd13.pse.db.entity.Document doc = at.fhj.swd13.pse.test.service.DocumentServiceIT.documentService . store ( "test" , getClass () . getResource ( "/testDocs/no_img.png" ) . getFile () ) ; java.lang.String expected = java.nio.file.Paths . get ( at.fhj.swd13.pse.test.service.DocumentServiceIT.imageFolder , doc . getStorageLocation () ) . toString () ; org.junit.Assert . assertEquals ( expected , at.fhj.swd13.pse.test.service.DocumentServiceIT.documentService . getServerPath ( doc ) ) ; at.fhj.swd13.pse.test.service.DocumentServiceIT.documentService . removeDocument ( doc . getDocumentId () ) ; } 
@ org.corfudb.runtime.collections.Accessor public java.util.Collection getByNamedIndex ( java.lang.String indexName , I indexKey ) { java.util.Map < I , java.util.Set < P > > indexMap = indexMaps . get ( indexName . hashCode () ) ; if ( indexMap == null ) return java.util.Collections.EMPTY_SET ; java.util.Collection result = indexMap . get ( indexKey ) ; return result != null ? com.google.common.collect.ImmutableList . copyOf ( result ) : java.util.Collections.EMPTY_SET ; } 
public models.Fichier getFichierAffiche () { java.lang.String fichier_id = null ; for ( java.util.Map < java.lang.String , java.lang.String > file : fichiers ) { if ( file . get ( "fichier_string" ) . endsWith ( "_PR_1_JPG" ) ) { fichier_id = file . get ( "fichier_id" ) ; } } models.Fichier fichier = utils.Connexion . getConnetion () . request ( "fichier" , new org.bson.types.ObjectId ( fichier_id ) ) . as ( models.Fichier . class ) ; return fichier ; } 
public void addKnownSymbols ( java.util.List < java.lang.String > knownSymbols ) { lockMe ( this ) ; if ( knownSymbols == null ) { this . knownSymbols = knownSymbols ; } else { for ( java.lang.String symbol : knownSymbols ) { if ( ! ( this . knownSymbols . contains ( symbol ) ) ) { this . knownSymbols . add ( symbol ) ; } } } unlockMe ( this ) ; } 
private void mutate () { java.util.Random r = new java.util.Random () ; java.lang.Integer pathIndex = r . nextInt ( ( ( this . path . size () ) - 1 ) ) ; java.lang.Integer replaceIndex = r . nextInt ( ( ( this . operators . size () ) - 1 ) ) ; path . set ( pathIndex , operators . get ( replaceIndex ) ) ; } 
public void durationButtonClicked () { durationButton . setBackgroundColor ( getResources () . getColor ( R.color.button_material_dark ) ) ; distanceButton . setBackgroundColor ( getResources () . getColor ( R.color.button_material_light ) ) ; distanceButton . setChecked ( false ) ; durationPickerLayout . setVisibility ( View.VISIBLE ) ; distancePickerLayout . setVisibility ( View.INVISIBLE ) ; } 
@ java.lang.Override public boolean addFriend ( User user , java.lang.String friendUsername ) { boolean valid = true ; for ( int i = 0 ; i < ( registeredUsers . size () ) ; i ++ ) { if ( ! ( registeredUsers . get ( i ) . equals ( friendUsername ) ) ) { valid = false ; } } if ( valid ) { user . addFriend ( friendUsername ) ; } else { java.lang.System.out . println ( "Friend username is not found" ) ; } return valid ; } 
private android.net.NetworkInfo getConnectivityManager () { final android.content.Context appContext = mApplicationContext ; if ( null == appContext ) { return null ; } android.net.ConnectivityManager cm = ( ( android.net.ConnectivityManager ) ( appContext . getSystemService ( Context.CONNECTIVITY_SERVICE ) ) ) ; if ( cm == null ) { android.util.Log . e ( org.mozilla.gecko.GeckoNetworkManager.LOGTAG , "Connectivity service does not exist" ) ; return null ; } android.net.NetworkInfo ni = null ; try { ni = cm . getActiveNetworkInfo () ; } catch ( java.lang.SecurityException se ) {} return ni ; } 
public java.util.ArrayList < Team > getConflicts ( Team teamToCheck , java.util.ArrayList < Team > scoutTeamList ) { java.util.ArrayList < Team > conflictingTeams = new java.util.ArrayList <> () ; for ( Team otherTeam : scoutTeamList ) for ( Match match : teamToCheck . getMatchesIn () ) if ( match . getTeamsInMatch () . contains ( teamToCheck ) ) conflictingTeams . add ( otherTeam ) ; return conflictingTeams ; } 
@ org.junit.Test public void testFillsWinningList ( ) throws java.lang.Exception { com.jraska.vsb.or1.schedule.SelfAdaptiveSearchStrategy strategy = new com.jraska.vsb.or1.schedule.SelfAdaptiveSearchStrategy ( new com.jraska.vsb.or1.schedule.SelfAdaptiveStrategyTest.GettingBetterFunction () ) ; for ( int i = 0 , size = strategy . getSize () ; i < size ; i ++ ) { strategy . getNext ( new int [ 2 ] ) ; } org.junit.Assert . assertThat ( strategy . getWinningNeighbourStrategies () . size () , org.hamcrest.core.IsEqual . equalTo ( strategy . getSize () ) ) ; } 
private void recreateIndexReaderAndSearcherIfNeeded () { try { org.apache.lucene.index.DirectoryReader newIndexReader = org.apache.lucene.index.DirectoryReader . openIfChanged ( currentIndexReader , indexWriter , true ) ; if ( newIndexReader != ( currentIndexReader ) ) { currentIndexReader = newIndexReader ; currentIndexSearcher = new org.apache.lucene.search.IndexSearcher ( newIndexReader ) ; } } catch ( java.io.IOException e ) { throw new java.lang.RuntimeException ( e ) ; } } 
private org.apache.curator.framework.CuratorFramework instance () { if ( null == ( org.menina.tone.client.source.zookeeper.ZookeeperResourceLoader.client ) ) { synchronized ( org.menina.tone.client.source.zookeeper.ZookeeperResourceLoader . class ) { org.apache.curator.framework.CuratorFramework client = org.apache.curator.framework.CuratorFrameworkFactory . newClient ( this . getUrl () , 2000 , 2000 , new org.apache.curator.retry.ExponentialBackoffRetry ( 1000 , 3 ) ) ; client . start () ; } } org.menina.tone.client.source.zookeeper.ZookeeperResourceLoader.client . getCuratorListenable () . addListener ( new org.menina.tone.client.source.zookeeper.ZookeeperListener () ) ; return org.menina.tone.client.source.zookeeper.ZookeeperResourceLoader.client ; } 
private int getArrayListIndexOfTask ( int id ) { int index = 0 ; for ( int i = 0 ; i < ( tasksList . size () ) ; i ++ ) { if ( ( tasksList . get ( i ) . getIndex () ) == id ) { i = index ; } } return index ; } 
private void getNewestIndex () { java.lang.String indexNameWithoutTimestamp = indexName . replaceAll ( "20.*" , "" ) ; final com.google.common.collect.SortedSetMultimap < java.lang.String , java.lang.String > indices = groupByIndexCollection () ; for ( java.lang.String prefix : indices . keySet () ) { final java.util.SortedSet < java.lang.String > indicesForPrefix = indices . get ( prefix ) ; final java.lang.String newestIndex = indicesForPrefix . last () ; if ( newestIndex . startsWith ( indexNameWithoutTimestamp ) ) indexName = newestIndex ; } org.lobid.lodmill.ElasticsearchIndexer.LOG . info ( ( "Going to UPDATE existing index " + ( indexName ) ) ) ; } 
private java.util.Set < de.sven_torben.cqrest.CommandInfo > createCommandInfos ( final java.util.Collection < ? extends java.lang.reflect.Method > cmdHandlers ) { return cmdHandlers . stream () . flatMap ( ( handler ) - > java.util.Arrays . asList ( handler . getParameterTypes () ) . stream () ) . filter ( ( paramType ) - > this . commandType . isAssignableFrom ( paramType ) ) . map ( ( commandType ) - > new de.sven_torben.cqrest.CommandInfo ( commandType . getSimpleName () ) ) . collect ( java.util.stream.Collectors . toSet () ) ; } 
@ org.testng.annotations.Test public void testMatchesWithQuotes () { java.lang.String pattern = ( java.util.regex.Pattern . quote ( "adm" ) ) + ".*" ; com.orientechnologies.orient.core.sql.query.OSQLSynchQuery sql = new com.orientechnologies.orient.core.sql.query.OSQLSynchQuery ( "SELECT FROM matchesstuff WHERE (name matches ?)" ) ; java.util.List < com.orientechnologies.orient.core.record.impl.ODocument > results = db . query ( sql , pattern ) ; assertEquals ( results . size () , 1 ) ; } 
@ android.support.annotation.Nullable private org.chromium.ChromeBluetoothLowEnergy.ChromeBluetoothLowEnergyPeripheral getPeripheralByDeviceAddress ( java.lang.String deviceAddress ) { org.chromium.ChromeBluetoothLowEnergy.ChromeBluetoothLowEnergyPeripheral peripheral = knownPeripheral . get ( deviceAddress ) ; if ( peripheral != null ) return peripheral ; org.chromium.ChromeBluetooth bluetoothPlugin = ( ( org.chromium.ChromeBluetooth ) ( webView . getPluginManager () . getPlugin ( "ChromeBluetooth" ) ) ) ; org.uribeacon.scan.compat.ScanResult bleScanResult = bluetoothPlugin . getKnownLeScanResults ( deviceAddress ) ; if ( bleScanResult == null ) return null ; peripheral = new org.chromium.ChromeBluetoothLowEnergy.ChromeBluetoothLowEnergyPeripheral ( bleScanResult ) ; knownPeripheral . put ( deviceAddress , peripheral ) ; return peripheral ; } 
@ java.lang.Override public void onClick ( com.google.gwt.event.dom.client.ClickEvent event ) { forceTabsCleaning () ; if ( ( this . modal ) != null ) { this . modal . hide () ; } this . setSelectedAnchorListItem ( this . wires ) ; this . contentPanel . setVisible ( true ) ; this . contentPanelHeader . setText ( org.eclipse.kura.web.client.ui.EntryClassUi.MSGS . wires () ) ; this . contentPanelBody . clear () ; this . contentPanelBody . add ( this . wiresBinder ) ; org.eclipse.kura.web.client.ui.wires.WiresPanelUi . load () ; this . discardWiresPanelChanges () ; } 
public void display ( processing.core.PApplet parent ) { parent . fill ( 0 ) ; parent . rect ( this . getX () , this . getY () , this . getWidth () , this . getHeight () , 80 ) ; parent . fill ( 255 ) ; } 
@ java.lang.Override protected void onStartLoading () { super . onStartLoading () ; if ( ( ( ( ( mEmitter ) != null ) && ( ( mSubscription ) == null ) ) && ( ! ( mIsCompleted ) ) ) && ( ( mError ) == null ) ) { mSubscription = mObservable . subscribe ( new LoaderSubscriber () ) ; } } 
private void placeRangedUnit ( kingofthehill.domain.GameManager gm ) { int [] laneRange = baseLanesToDefend () ; int lane = getNextRandom ( laneRange [ 0 ] , laneRange [ 1 ] ) ; if ( ( this . getBase () . getUnit ( ( ( lane * 4 ) + 3 ) ) ) == null ) { this . spawnUnit ( UnitType.RANGED , ( 3 + ( lane * 4 ) ) ) ; } } 
@ org.testng.annotations.Test ( groups = { "integration" , "services" , "httpput" , "virtual" } , description = "A negative integration test to verify the response code from a put call" ) public void comparePutResponseBadCode201Test () { com.google.gson.JsonObject request = new com.google.gson.JsonObject () ; request . addProperty ( "id" , 1 ) ; request . addProperty ( "title" , "foo1" ) ; request . addProperty ( "body" , "bar" ) ; request . addProperty ( "userId" , 3 ) ; com.coveros.selenified.services.Call call = this . calls . get () ; call . put ( "posts/3" , new com.coveros.selenified.services.Request ( request ) , false ) . assertEquals ( 201 ) ; finish ( 1 ) ; } 
public static void registerBlock ( net.minecraft.block.Block block , java.lang.Class < ? extends io.github.mc_umod.util.ItemBlock > bl ) { if ( ( io.github.mc_umod.util.URegistryUtils.reg ) == null ) { io.github.mc_umod.util.URegistryUtils.reg = new io.github.mc_umod.util.CoreCommonRegistry () ; } io.github.mc_umod.util.URegistryUtils.reg . registerBlock ( block , block . getUnlocalizedName () . substring ( 5 ) ) ; io.github.mc_umod.util.URegistryUtils.reg . registerOreDictionary ( block , block . getUnlocalizedName () . substring ( 5 ) ) ; } 
private void initSlidingPanel () { this . slidingUpPanelLayout = ( ( com.sothree.slidinguppanel.SlidingUpPanelLayout ) ( findViewById ( R.id.sliding_layout ) ) ) ; this . slidingUpPanelLayout . setPanelHeight ( 0 ) ; this . slidingUpPanelLayout . setShadowHeight ( 0 ) ; this . slidingUpPanelLayout . setClipPanel ( true ) ; this . slidingUpPanelLayout . setAnchorPoint ( 1000.0F ) ; this . slidingUpPanelLayout . setParalaxOffset ( 100 ) ; this . titleSlidingLayout = ( ( android.widget.TextView ) ( findViewById ( R.id.titleSlidingLayout ) ) ) ; } 
@ java.lang.Override public void run () { while ( true ) { if ( tcpConnection . connectionActive () ) { java.lang.String message = tcpConnection . receive () ; if ( message != null ) { java.lang.System.out . println ( message ) ; parseIncoming ( message ) ; } try { java.lang.Thread . sleep ( 10 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } } } 
public void generateEnums ( final java.io.OutputStream outputStream ) throws java.io.IOException { if ( ! ( com.spectralogic.ds3autogen.utils.ConverterUtil . hasContent ( spec . getTypes () ) ) ) return; for ( final com.spectralogic.ds3autogen.api.models.Ds3Type ds3TypeEntry : spec . getTypes () . values () ) { final java.lang.Enum enumEntry = com.spectralogic.ds3autogen.c.converters.EnumConverter . toEnum ( ds3TypeEntry ) ; if ( com.spectralogic.ds3autogen.utils.ConverterUtil . hasContent ( enumEntry . getValues () ) ) { processTemplate ( enumEntry , "TypedefEnum.ftl" , outputStream ) ; } } } 
public void remove ( long teamId ) { at.eischer.model.Team teamToRemove = teamService . findTeamById ( teamId ) ; try { if ( ( teamToRemove . getLogoPath () ) != null ) { java.nio.file.Path pathToLogo = java.nio.file.Paths . get ( java.lang.System . getProperty ( "jboss.server.data.dir" ) , "logos" , teamToRemove . getLogoPath () ) ; java.nio.file.Files . delete ( pathToLogo ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } teamService . removeTeam ( teamId ) ; allTeams = teamService . findAllteams () ; } 
public java.lang.String visitMProperty ( org.se.lab.metamodel.MProperty property ) { java.lang.String type = visitMType ( property . getType () ) ; java.lang.String name = property . getName () ; java.lang.StringBuilder code = new java.lang.StringBuilder () ; code . append ( name ) . append ( " " ) . append ( type ) . append ( " NOT NULL" ) ; if ( property . isId () ) { code . append ( " PRIMARY KEY" ) ; } return code . toString () ; } 
private static java.util.List < smartcity.accessibility.navigation.MapSegment > getSegmentsToAvoid ( smartcity.accessibility.mapmanagement.Location source , smartcity.accessibility.mapmanagement.Location destination , java.lang.Integer accessibilityThreshold ) throws smartcity.accessibility.navigation.exception.CommunicationFailed { java.util.List < com.teamdev.jxmaps.LatLng > locationsToAvoid = smartcity.accessibility.database.LocationManager . getNonAccessibleLocationsInRadius ( source , destination , accessibilityThreshold ) ; java.util.List < smartcity.accessibility.navigation.MapSegment > $ = new java.util.ArrayList < smartcity.accessibility.navigation.MapSegment > () ; for ( com.teamdev.jxmaps.LatLng ¢ : locationsToAvoid ) $ . add ( smartcity.accessibility.navigation.Navigation . getMapSegmentOfLatLng ( ¢ . getLat () , ¢ . getLng () ) ) ; return $ ; } 
@ android.support.annotation.Nullable @ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { android.view.View view = inflater . inflate ( R.layout.fragment_dialog_info , container ) ; pagerAdapterInfo = new tenerife.rutas.jfernandez.rutasdetenerife.PagerAdapterInfo ( getChildFragmentManager () ) ; viewPager = ( ( android.support.v4.view.ViewPager ) ( view . findViewById ( R.id.pager ) ) ) ; viewPager . setAdapter ( pagerAdapterInfo ) ; return super . onCreateView ( inflater , container , savedInstanceState ) ; } 
@ java.lang.Override public java.lang.String getNonUniqueString () { java.lang.String columnStr = "" ; int length = columns . size () ; int i = 0 ; for ( net.sf.jsqlparser.statement.create.table.ColumnDefinition colDef : columns ) { columnStr += colDef . getColumnName () ; if ( i < ( length - 1 ) ) { columnStr += "," ; } ++ i ; } return java.lang.String . format ( "CREATE INDEX ON %s (%s);" , this . name , table . getName () , columnStr ) ; } 
private void saveDownloadTotalSize ( java.lang.String url , long totalSize ) { android.content.SharedPreferences sp = org.lzh.framework.updatepluginlib.UpdateConfig . getConfig () . getContext () . getSharedPreferences ( org.lzh.framework.updatepluginlib.business.DefaultDownloadWorker.KEY_DOWN_SIZE , Context.MODE_PRIVATE ) ; android.content.SharedPreferences.Editor editor = sp . edit () ; editor . putLong ( ( url + "_total_size" ) , totalSize ) ; editor . apply () ; } 
public static boolean isQuoteBy ( java.lang.String str , java.lang.String l , java.lang.String r ) { if ( ( ( null == str ) && ( null != l ) ) && ( null != r ) ) return false ; return ( str . startsWith ( l ) ) && ( str . endsWith ( r ) ) ; } 
protected synchronized void loadInverseRelations ( ) throws dk.statsbiblioteket.doms.client.exceptions.ServerOperationFailed { if ( invrelsloaded ) { return; } invrelsloaded = true ; java.util.List < dk.statsbiblioteket.doms.central.Relation > frelations ; try { frelations = api . getInverseRelations ( pid ) ; } catch ( java.lang.Exception e ) { throw new dk.statsbiblioteket.doms.client.exceptions.ServerOperationFailed ( "Failed to load inverse relations" , e ) ; } for ( dk.statsbiblioteket.doms.central.Relation frelation : frelations ) { inverseRelations . add ( new dk.statsbiblioteket.doms.client.impl.relations.ObjectRelationImpl ( frelation . getSubject () , frelation . getPredicate () , frelation . getObject () , factory ) ) ; } } 
private void getTableSchema ( com.project.api.oraclesql.Table table ) { queryString . append ( ( ( table . getSchema () ) == null ? table . getTableName () : ( ( table . getSchema () . getSchemaName () ) + "." ) + ( table . getTableName () ) ) ) ; } 
@ java.lang.Override public void onItemClicked ( @ android.support.annotation.NonNull java.lang.String uid , int selectedPosition ) { if ( ! ( com.dat.barnaulzoopark.BZApplication . isTabletLandscape ( getContext () ) ) ) { com.dat.barnaulzoopark.ui.newsdetail.NewsDetailActivity . startActivity ( getActivity () , uid ) ; } else { if ( ( adapter . getSelectedPosition () ) != selectedPosition ) { this . selectedNewsPosition = selectedPosition ; adapter . setSelectedPosition ( selectedPosition ) ; adapter . notifySelectedItem () ; showNewsDetail () ; } } } 
public void addNewAlbum () { java.lang.String name = view . promptForAlbumName () ; if ( ( name == null ) || ( name . equals ( "" ) ) ) return; Album newAlbum = new Album ( name ) ; Album selectedAlbum = view . getSelectedAlbum () ; if ( selectedAlbum != null ) { selectedAlbum . addSubAlbum ( newAlbum ) ; } else { root . addSubAlbum ( newAlbum ) ; } view . onAlbumAdded ( newAlbum ) ; } 
public boolean addWarp ( java.util.UUID player , org.bukkit.Location loc ) { final java.lang.String locS = com.wasteofplastic.askyblock.util.Util . getStringLocation ( loc ) ; if ( warpList . containsValue ( locS ) ) { return false ; } if ( warpList . containsKey ( player ) ) { warpList . remove ( player ) ; } warpList . put ( player , locS ) ; saveWarpList () ; return true ; } 
public static void sort ( int [] data ) { for ( int index = 1 ; index < ( data.length ) ; index ++ ) { int val = data [ index ] ; int cursor = index ; while ( ( cursor > 0 ) && ( ( data [ ( cursor - 1 ) ] ) > val ) ) { data [ cursor ] = data [ ( cursor - 1 ) ] ; cursor -- ; } data [ cursor ] = val ; } } 
public static void parserInit () { AndroidModle.Parcelable . init ( false ) ; callconditiongraph.PreprocessingInnerClass . init ( false ) ; module.StubService . init ( new java.lang.String [] {} , false ) ; util.TimeMeasurement . show ( "Stub Service Init" ) ; main.DataStructureInit . init () ; util.TimeMeasurement . show ( "Data Struture Init" ) ; module.CallConditionExtract . init ( new java.lang.String [] {} , false ) ; util.TimeMeasurement . show ( "CallCondition Extract Init" ) ; new module.SecurityCheck () . init ( false ) ; util.TimeMeasurement . show ( "Security Check Init" ) ; } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; app = ( ( org.wikipedia.WikipediaApp ) ( getActivity () . getApplicationContext () ) ) ; model = new org.wikipedia.page.PageViewModel () ; tabList = new java.util.ArrayList <> () ; if ( org.wikipedia.settings.Prefs . isExperimentalPageLoadEnabled () ) { pageLoadStrategy = new org.wikipedia.page.HtmlPageLoadStrategy () ; } else { pageLoadStrategy = new org.wikipedia.page.JsonPageLoadStrategy () ; } } 
@ org.testng.annotations.Test public void testLongs2 ( ) throws java.lang.Exception { io.github.pr0methean.betterrandom.prng.BaseRandom prng = createRng () ; io.github.pr0methean.betterrandom.prng.RandomTestUtils . checkStream ( prng , 42 , prng . longs ( ( 1 < < 40 ) , ( 1 < < 42 ) ) , ( - 1 ) , ( 1 < < 8 ) , ( 1 < < 10 ) , alwaysCheckEntropy () ) ; } 
public void sprawdzZdjecie ( javax.faces.context.FacesContext fc , javax.faces.component.UIComponent c , java.lang.Object value ) { java.util.Locale loc = javax.faces.context.FacesContext . getCurrentInstance () . getViewRoot () . getLocale () ; java.util.ResourceBundle rb = java.util.ResourceBundle . getBundle ( "bundles.issi.uz.zgora.pl.messages" , loc ) ; org.apache.myfaces.custom.fileupload.UploadedFile plik = ( ( org.apache.myfaces.custom.fileupload.UploadedFile ) ( value ) ) ; if ( ! ( plik . getContentType () . equals ( "image/jpeg" ) ) ) { throw new javax.faces.validator.ValidatorException ( new javax.faces.application.FacesMessage ( rb . getString ( "zdjecie.validator_typ" ) ) ) ; } } 
@ javax.ws.rs.POST @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.TEXT_PLAIN ) public java.lang.String createUser ( @ javax.ws.rs.QueryParam ( value = "token" ) java.lang.String authToken , @ javax.ws.rs.PathParam ( value = "dataSource" ) java.lang.String authProviderIdentifier , org.glyptodon.guacamole.net.basic.rest.user.APIUser user ) throws org.glyptodon.guacamole.GuacamoleException { org.glyptodon.guacamole.net.basic.GuacamoleSession session = authenticationService . getGuacamoleSession ( authToken ) ; org.glyptodon.guacamole.net.auth.UserContext userContext = retrievalService . retrieveUserContext ( session , authProviderIdentifier ) ; org.glyptodon.guacamole.net.auth.Directory < org.glyptodon.guacamole.net.auth.User > userDirectory = userContext . getUserDirectory () ; if ( ( user . getPassword () ) == null ) user . setPassword ( java.util.UUID . randomUUID () . toString () ) ; userDirectory . add ( new org.glyptodon.guacamole.net.basic.rest.user.APIUserWrapper ( user ) ) ; return user . getUsername () ; } 
@ java.lang.Override protected void onLayout ( boolean changed , int l , int t , int r , int b ) { super . onLayout ( changed , l , t , r , b ) ; leftBorder = getChildAt ( 0 ) . getLeft () ; rightBorder = getChildAt ( ( ( getChildCount () ) - 1 ) ) . getRight () ; } 
@ org.junit.Test public void shouldNotSelectCredsWithCustomHost () { org.jenkinsci.plugins.github.config.GitHubServerConfig conf = new org.jenkinsci.plugins.github.config.GitHubServerConfig ( "" ) ; conf . setApiUrl ( org.jenkinsci.plugins.github.webhook.WebhookManagerTest.ANOTHER_HOOK_ENDPOINT . toString () ) ; conf . setManageHooks ( false ) ; org.jenkinsci.plugins.github.GitHubPlugin . configuration () . getConfigs () . add ( conf ) ; org.junit.Assert . assertThat ( org.jenkinsci.plugins.github.webhook.WebhookManager . forHookUrl ( org.jenkinsci.plugins.github.webhook.WebhookManagerTest.HOOK_ENDPOINT ) . createHookSubscribedTo ( com.google.common.collect.Lists . newArrayList ( org.kohsuke.github.GHEvent.PUSH ) ) . apply ( new com.cloudbees.jenkins.GitHubRepositoryName ( "github.com" , "name" , "repo" ) ) , org.hamcrest.Matchers . nullValue () ) ; } 
@ org.junit.Test public void testDeleteSnapshot_Operation () { org.easymock.EasyMock . expect ( computeRpcMock . deleteSnapshot ( com.google.gcloud.compute.ComputeImplTest.SNAPSHOT_ID . snapshot () , com.google.gcloud.compute.ComputeImplTest.EMPTY_RPC_OPTIONS ) ) . andReturn ( globalOperation . toPb () ) ; org.easymock.EasyMock . replay ( computeRpcMock ) ; compute = options . service () ; org.junit.Assert . assertEquals ( globalOperation , compute . deleteSnapshot ( com.google.gcloud.compute.ComputeImplTest.SNAPSHOT_ID ) ) ; } 
public static int IPToInteger ( java.lang.String ipstr ) { int result = 0 ; java.lang.String [] addresses = ipstr . split ( "\\." ) ; for ( int i = 3 ; i >= 0 ; i -- ) { int ip = java.lang.Integer . parseInt ( addresses [ i ] ) ; result |= ip < < ( i * 8 ) ; } return result ; } 
private java.util.List < wywasm.FunctionElement.Param > writeParams ( java.util.List < wywasm.Type > params , java.util.List < java.lang.Integer > variableList ) { int i = 0 ; java.util.List < wywasm.FunctionElement.Param > pars = new java.util.ArrayList <> () ; for ( wywasm.Type param : params ) { variableList . add ( i ) ; pars . add ( factory . createParam ( ( "$" + i ) , factory . createExprType ( getType ( param ) ) ) ) ; } return pars ; } 
private void cameraClick () { java.lang.String fileName = ( java.lang.System . currentTimeMillis () ) + ".png" ; android.content.ContentValues values = new android.content.ContentValues () ; values . put ( MediaStore.Images.Media.TITLE , fileName ) ; mCapturedImageURI = com.android.angrybird.activity.BaseActivity . getContentResolver () . insert ( MediaStore.Images.Media.EXTERNAL_CONTENT_URI , values ) ; android.content.Intent intent = new android.content.Intent ( android.provider.MediaStore.ACTION_IMAGE_CAPTURE ) ; intent . putExtra ( MediaStore.EXTRA_OUTPUT , mCapturedImageURI ) ; intent . putExtra ( "return-data" , false ) ; startActivityForResult ( intent , com.android.angrybird.activity.BaseActivity.CAMERA_REQUEST ) ; } 
private void deleteOrder () { if ( ( m_order ) == null ) return; if ( m_order . getDocStatus () . equals ( "CO" ) ) { if ( org.adempiere.webui.window.FDialog . ask ( 0 , this , "Quiere cancelar la orden?" ) ) { p_posPanel.m_order . cancelOrder () ; } } if ( org.adempiere.webui.window.FDialog . ask ( 0 , this , "Delete order?" ) ) if ( m_order . deleteOrder () ) ; m_order = null ; updateOrder () ; newOrder () ; } 
static java.lang.String GENERATE_COUNTER_STRING () { java.lang.String result = "" ; for ( int i = 0 ; i < ( com.dqnt.amber.Debug.functionCounter . size () ) ; i ++ ) { result += ( com.dqnt.amber.Debug.functionCounter . get ( i ) ) + "\n" ; } return result ; } 
@ java.lang.Override public void start ( javafx.stage.Stage primaryStage ) throws java.lang.Exception { javafx.scene.Parent root = javafx.fxml.FXMLLoader . load ( getClass () . getResource ( "resources/configLayout.fxml" ) ) ; primaryStage . setTitle ( "RA-MEN Game" ) ; primaryStage . setScene ( new javafx.scene.Scene ( root , GameMain.WIDTH , GameMain.HEIGHT ) ) ; primaryStage . show () ; } 
public void addTarget ( org.oreland.entity.Player p , org.oreland.entity.TargetLevel level , java.util.Date date ) { if ( ( ( p.target_level ) == null ) || ( ! ( p.target_level . equal ( level ) ) ) ) { org.oreland.entity.Player.LevelHistoryEntry entry = new org.oreland.entity.Player.LevelHistoryEntry () ; entry.level = level ; entry.date = date ; p.target_level = level ; p.level_history . add ( entry ) ; } } 
public boolean onCommand ( cn.nukkit.command.CommandSender sender , cn.nukkit.command.Command command , java.lang.String label , java.lang.String [] args ) { if ( ( args.length ) < 1 ) { return false ; } java.lang.String reason = java.lang.String . join ( " " , args ) ; db . getDB ( "config" ) . set ( "reason" , reason . replaceAll ( "\\n" , "\n" ) ) ; db . message ( sender , ( ( "Set <" + reason ) + "> whitelist message." ) ) ; return true ; } 
private void newPlaylistWizard () { javafx.scene.control.TextInputDialog dialog = new javafx.scene.control.TextInputDialog ( "New Playlist" ) ; dialog . setTitle ( "Playlist name request" ) ; dialog . setHeaderText ( "Please enter a name for your new playlist" ) ; java.util.Optional < java.lang.String > result = dialog . showAndWait () ; controller . makePlaylist ( result . get () ) ; list . getItems () . add ( 0 , result ) ; list . getSelectionModel () . select ( 0 ) ; } 
public void sortListOrSwapQuotesInDocument ( final java.lang.String delimiterSplitPattern , final java.lang.String delimiterGlue , final boolean isUp ) { if ( ! ( containsQuotes ) ) { document . replaceString ( offsetStart , offsetEnd , com.kstenschke.shifter.models.shiftableTypes.SeparatedList . sortSeparatedList ( selectedText , delimiterSplitPattern , delimiterGlue , ( ! isUp ) ) ) ; return; } java.util.List < java.lang.String > shiftOptions = new java.util.ArrayList < java.lang.String > () ; shiftOptions . add ( StaticTexts.SHIFT_OPTION_LIST_ITEMS_SORT ) ; shiftOptions . add ( StaticTexts.SHIFT_OPTION_QUOTES_SWAP ) ; shiftSelectionByPopupInDocument ( shiftOptions , false , null , delimiterSplitPattern , delimiterGlue ) ; } 
public static boolean perform ( org.teiid.designer.metamodels.relational.Table table , org.teiid.designer.transformation.reverseeng.api.Options options ) throws java.lang.Exception { org.teiid.designer.transformation.reverseeng.ReverseEngineerFactory.errors = null ; org.teiid.designer.transformation.reverseeng.api.MetadataProcessor metadata = new org.teiid.designer.transformation.reverseeng.RelationalMetadataProcessor () ; metadata . loadMetadata ( table , options ) ; org.teiid.designer.transformation.reverseeng.PojoProcessing tp = new org.teiid.designer.transformation.reverseeng.PojoProcessing ( options ) ; boolean success = tp . processTables ( metadata ) ; if ( ! success ) org.teiid.designer.transformation.reverseeng.ReverseEngineerFactory . checkErrors ( tp ) ; return success ; } 
public void runPersoAction ( zildo.monde.sprites.persos.Perso perso , java.lang.String name , zildo.fwk.script.context.IEvaluationContext p_callerContext ) { zildo.server.state.ScriptCall call = new zildo.server.state.ScriptCall ( name , new zildo.fwk.script.context.SpriteEntityContext ( perso ) ) ; zildo.fwk.script.xml.element.ContextualActionElement action = adventure . getPersoActionNamed ( call.actionName ) ; if ( action != null ) { zildo.fwk.script.xml.element.action.runtime.RuntimeScene scene = new zildo.fwk.script.xml.element.action.runtime.RuntimeScene ( action.actions , null , false , call ) ; scriptExecutor . execute ( scene , true , false , p_callerContext , null ) ; perso . setAttente ( action.duration ) ; } } 
@ java.lang.Override public void onClick ( com.changhong.tvhelper.activity.View v ) { MyApplication.vibrator . vibrate ( 100 ) ; searchString = searchEditText . getText () . toString () . trim () ; getSupportFragmentManager () . beginTransaction () . hide ( fragmentDefault ) . show ( fragmentList ) . commitAllowingStateLoss () ; fragmentDefault . saveSentences ( this , searchString ) ; fragmentList . setCondition ( searchString ) ; imm . hideSoftInputFromWindow ( v . getWindowToken () , 0 ) ; } 
@ org.elasticsearch.test.AfterClass public static void afterClass ( ) throws java.lang.Exception { if ( ! ( org.elasticsearch.test.ElasticsearchIntegrationTest . runTestScopeLifecycle () ) ) { try { org.elasticsearch.test.ElasticsearchIntegrationTest.INSTANCE . afterInternal ( true ) ; } finally { org.elasticsearch.test.ElasticsearchIntegrationTest.INSTANCE = null ; } } else { org.elasticsearch.test.ElasticsearchIntegrationTest . clearClusters () ; } org.elasticsearch.test.ElasticsearchIntegrationTest.SUITE_SEED = null ; org.elasticsearch.test.ElasticsearchIntegrationTest.sharedDataInitialized = false ; } 
@ java.lang.Override public int nextDoc ( ) throws java.io.IOException { alreadyAtFirstMatch = false ; if ( ( ( producerDoc ) == ( NO_MORE_DOCS ) ) || ( ( filterDoc ) == ( NO_MORE_DOCS ) ) ) return NO_MORE_DOCS ; producerDoc = producer . nextDoc () ; producerStart = - 1 ; if ( ( producerDoc ) == ( NO_MORE_DOCS ) ) return NO_MORE_DOCS ; return findDocWithMatch () ; } 
public static void updateGameModel () { int oldVersion = 0 ; if ( ( client.facade.CatanFacade.model ) != null ) oldVersion = client.facade.CatanFacade.model . getVersion () ; try { client.facade.CatanFacade.model = client.facade.CatanFacade.proxy . getGameModel ( oldVersion ) ; } catch ( shared.exceptions.ServerException ex ) { java.util.logging.Logger . getLogger ( client.paller.ServerPallTask . class . getName () ) . log ( java.util.logging.Level.SEVERE , null , ex ) ; } int newVersion = client.facade.CatanFacade.model . getVersion () ; if ( oldVersion != newVersion ) { client.facade.CatanFacade . setModel ( client.facade.CatanFacade.model ) ; client.facade.CatanFacade.observable . notifyObservers () ; } } 
@ java.lang.Override public void draw () { switch ( gameEngine . getSimulationState () ) { case "startScreen" : { drawOuterWalls () ; drawStartScreen () ; break; } case "gameplay" : { drawOuterWalls () ; drawEntities () ; drawHUD () ; break; } case "menuScreen" : { drawOuterWalls () ; drawMenuScreen () ; break; } case "deathScreen" : { drawOuterWalls () ; drawDeathScreen () ; drawEntities () ; break; } } } 
@ org.testng.annotations.Test ( priority = 2 ) public void testClickNssfButton ( ) throws java.lang.InterruptedException { driver = generic.LoginGeneral . callClerkLoginAction () ; java.lang.Thread . sleep ( 2000 ) ; java.lang.System.out . println ( "about to click the NHIF Card link\n" ) ; pages.MenuBarToggle clicknhif = org.openqa.selenium.support.PageFactory . initElements ( driver , pages.MenuBarToggle . class ) ; clicknhif . clickNidCardLink () ; clicknhif . clickNhifLink () ; java.lang.Thread . sleep ( 3000 ) ; takeScreenshot () ; afterTest () ; } 
public void send ( final com.alibaba.rocketmq.common.message.Message msg ) { try { producer . send ( msg , messageQueueSelector , new com.alibaba.rocketmq.client.producer.buffered.SendMessageCallback ( this , sendCallback , msg ) ) ; } catch ( com.alibaba.rocketmq.client.exception.MQClientException | com.alibaba.rocketmq.remoting.exception.RemotingException | com.alibaba.rocketmq.client.exception.MQBrokerException | java.lang.InterruptedException e ) { errorSendingCounter . incrementAndGet () ; try { messageQueue . offer ( msg , 5 , java.util.concurrent.TimeUnit.SECONDS ) ; } catch ( java.lang.InterruptedException exception ) { localMessageStore . stash ( msg ) ; } } } 
private long estimateMem ( int tailBPV ) { long valuesAboveTailBPV = getHeadValueCount ( tailBPV ) ; int pointerBPV = org.apache.lucene.util.packed.PackedInts . bitsRequired ( valuesAboveTailBPV ) ; if ( tailBPV < pointerBPV ) { return 0 ; } return ( ( valuesAboveTailBPV * ( maxBPV ) ) + ( ( valueCount ) * ( tailBPV + 1 ) ) ) / 8 ; } 
@ java.lang.Override public int bytesCount () { int sz = 0 ; java.util.Iterator < E > itr = collection . iterator () ; while ( itr . hasNext () ) { sz += itr . next () . bytesCount () ; } return sz + ( n . bytesCount () ) ; } 
@ java.lang.Override public edu.hm.swa.sh.abc3.authorize.common.UserDTO getUser ( final long userid ) { initPersistence () ; final org.hibernate.Session session = sessionFactory . getCurrentSession () ; final org.hibernate.Transaction transaction = session . beginTransaction () ; final edu.hm.swa.sh.abc3.authorize.persistence.entity.UserEntity result = session . find ( edu.hm.swa.sh.abc3.authorize.persistence.entity.UserEntity . class , userid ) ; transaction . commit () ; return userTransformer . toUserDTO ( result ) ; } 
public static void main ( java.lang.String [] args ) { java.util.Scanner sc = new java.util.Scanner ( java.lang.System.in ) ; boolean flag = true ; int i = 0 ; while ( flag ) { s = sc . nextLine () ; if ( ( s . length () ) == 0 ) { flag = false ; } else { i ++ ; java.lang.System.out . println ( ( ( i + " " ) + ( s ) ) ) ; } } } 
private boolean isSameDay ( java.util.Date day1 , java.util.Date day2 ) { java.util.Calendar cal1 = java.util.Calendar . getInstance () ; java.util.Calendar cal2 = java.util.Calendar . getInstance () ; cal1 . setTime ( day1 ) ; cal2 . setTime ( day2 ) ; boolean sameDay = ( ( cal1 . get ( java.util.Calendar.YEAR ) ) == ( cal2 . get ( java.util.Calendar.YEAR ) ) ) && ( ( cal1 . get ( java.util.Calendar.DAY_OF_YEAR ) ) == ( cal2 . get ( java.util.Calendar.DAY_OF_YEAR ) ) ) ; return sameDay ; } 
@ org.junit.Test public void testCDRStreamSizeCtor () { org.jacorb.orb.CDROutputStream co = new org.jacorb.orb.CDROutputStream ( orb , 1000 , false ) ; co . increaseSize ( 8 ) ; byte [] result = co . releaseBuffer () ; co . close () ; org.junit.Assert . assertTrue ( ( ( result.length ) == 1023 ) ) ; } 
private long NadjiSlobodanID () { org.hibernate.Session sess = ba.unsa.etf.si.tim12.dal.HibernateUtil . getSessionFactory () . openSession () ; org.hibernate.Query q = sess . createQuery ( "SELECT MAX(id) FROM Pacijent" ) ; long max_id = ( ( java.lang.Long ) ( q . uniqueResult () ) ) ; sess . close () ; return max_id + 1 ; } 
public java.lang.String fireAt ( java.lang.String cord ) { int x = xMap . indexOf ( cord . charAt ( 0 ) ) ; int y = ( cord . charAt ( 1 ) ) - 48 ; int result = gameBoard [ x ] [ y ] ; if ( result == 1 ) { gameBoard [ x ] [ y ] = 2 ; return "hit" ; } return "miss" ; } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialogInterface , int i ) { db . open () ; db . deleteService ( service ) ; db . close () ; mListView . removeViewInLayout ( viewToDelete ) ; mAdapter . notifyDataSetChanged () ; com.example.balinator.androidprojekt.MainActivity . updateMyWidgets ( context ) ; } 
private static int getViewIndexOf ( com.flarestar.drones.views.viewgroups.BaseDroneViewGroup parent , android.view.View view , int index ) { for ( ; index != ( parent . getChildCount () ) ; ++ index ) { if ( ( parent . getChildAt ( index ) ) == view ) { return index ; } } return 0 ; } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( ( TicTacToe.NotInGame . get () ) || ( ! ( this . c . DoneInit ) ) ) java.lang.System . exit ( 0 ) ; else { TicTacToe.NotInGame . set ( true ) ; this . display . gameOverMsgLock . lock () ; try { this . display . gameOverMsg = "Click to start." ; } finally { this . display . gameOverMsgLock . unlock () ; } } } 
public static TreeNode generateNode () { double randomKey = ( TestClass.random . nextDouble () ) * ( TestClass.MAX_VALUE ) ; double randomValue = ( TestClass.random . nextDouble () ) * ( TestClass.MAX_VALUE ) ; int randomIdentifier = TestClass.random . nextInt () ; TreeNode randomNode = new TreeNode ( randomKey , randomValue , randomIdentifier ) ; return randomNode ; } 
public org.lilystudio.smarty4j.Template parseTemplate ( java.lang.String smartyCode ) throws java.io.IOException , org.lilystudio.smarty4j.TemplateException { org.lilystudio.smarty4j.Template template = templates . get ( smartyCode ) ; if ( ( template != null ) && ( ! ( ( debug ) && ( template . isUpdated () ) ) ) ) { return template ; } template = new org.lilystudio.smarty4j.Template ( this , smartyCode ) ; templates . put ( smartyCode , template ) ; return template ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { android.content.Intent stopServiceIntent = new android.content.Intent ( org.unhack.bip38decrypt.services.createService.STOP_SERVICE ) ; createService . clearAllTasks () ; mProgressBar . setProgress ( 0 ) ; try { bip38service . getWorker () . interrupt () ; } catch ( java.lang.NullPointerException e ) { e . printStackTrace () ; } if ( bip38service . getWorker () . isInterrupted () ) { android.util.Log . d ( "CreateActivity" , "thread was interrupted" ) ; } CreateActivity.createPagerAdapter . CoolNavigateToTab ( 0 , CreateActivity.TABNUMBER , CreateActivity.createSwipeHandler , true ) ; } 
public com.cisco.oss.foundation.directory.entity.ModelService getModelService ( java.lang.String serviceName ) { com.cisco.oss.foundation.directory.entity.ModelService service = null ; try { service = getDirectoryServiceClient () . lookupService ( serviceName ) ; } catch ( com.cisco.oss.foundation.directory.exception.ServiceException se ) { if ( ( se . getErrorCode () ) == ( com.cisco.oss.foundation.directory.exception.ErrorCode.SERVICE_DOES_NOT_EXIST ) ) { com.cisco.oss.foundation.directory.lookup.DirectoryLookupService.LOGGER . error ( se . getMessage () ) ; } else { com.cisco.oss.foundation.directory.lookup.DirectoryLookupService.LOGGER . error ( "Error when getModelService" , se ) ; } } return service ; } 
private void connect () { mBtConnectThread = new com.example.jkn.bluetoothtest.BtConnectThread ( mBtDevice , com.example.jkn.bluetoothtest.MainActivity.SPP_UUID , new com.example.jkn.bluetoothtest.BtConnectThread.BtConnectionCallback () { @ java.lang.Override public void onSuccess ( android.bluetooth.BluetoothSocket bluetoothSocket ) { mBtSocket = bluetoothSocket ; setConnectionStatus ( BtConnectionStatus.CONNECTED ) ; android.util.Log . d ( com.example.jkn.bluetoothtest.MainActivity.TAG , "Connection attempt succeeded." ) ; } @ java.lang.Override public void onFailure ( java.lang.String message ) { setConnectionStatus ( BtConnectionStatus.NOT_CONNECTED ) ; android.util.Log . d ( com.example.jkn.bluetoothtest.MainActivity.TAG , message ) ; } } ) ; mBtConnectThread . run () ; } 
public void run () { try { group2.sdp.robot.commandreciever.Brain.KICKER . rotate ( group2.sdp.robot.commandreciever.Brain.KICKER_ANGLE , true ) ; java.lang.Thread . sleep ( group2.sdp.robot.commandreciever.Brain.KICKER_DELAY ) ; group2.sdp.robot.commandreciever.Brain.KICKER . rotate ( ( - ( group2.sdp.robot.commandreciever.Brain.KICKER_ANGLE ) ) , true ) ; java.lang.Thread . sleep ( group2.sdp.robot.commandreciever.Brain.KICKER_DELAY ) ; } catch ( java.lang.InterruptedException exc ) { java.lang.System.out . println ( exc . toString () ) ; } group2.sdp.robot.commandreciever.Brain.kicking = false ; } 
public java.lang.String prepareResponse ( com.medziku.motoresponder.logic.RespondingSubject subject ) { if ( subject instanceof com.medziku.motoresponder.logic.SMSRespondingSubject ) { if ( ( subject instanceof com.medziku.motoresponder.logic.GeolocationRequestRespondingSubject ) && ( this . shouldRespondWithGeolocation () ) ) { return this . getAutoResponseMessageWithGeolocation () ; } return this . settings . getAutoResponseToSmsTemplate () ; } else if ( subject instanceof com.medziku.motoresponder.logic.CallRespondingSubject ) { return this . settings . getAutoResponseToCallTemplate () ; } } 
@ java.lang.Override public void visitSymlink ( java.io.File link , java.lang.String target , java.lang.String relativePath ) throws java.io.IOException { try { mkdirsE ( new java.io.File ( dest , relativePath ) . getParentFile () ) ; writing ( new java.io.File ( dest , target ) ) ; hudson.Util . createSymlink ( dest , target , relativePath , TaskListener.NULL ) ; } catch ( java.lang.InterruptedException x ) { throw ( ( java.io.IOException ) ( new java.io.IOException ( x . toString () ) . initCause ( x ) ) ) ; } count . incrementAndGet () ; } 
public static void revertToInitialRSA ( com.net2plan.interfaces.networkDesign.Route r ) { final com.net2plan.libraries.WDMUtils.RSA primaryRSA = new com.net2plan.libraries.WDMUtils.RSA ( r , true ) ; r . setPath ( r . getInitialState () . getFirst () , primaryRSA.seqLinks , java.util.Collections . nCopies ( primaryRSA.seqLinks . size () , ( ( double ) ( primaryRSA . getNumSlots () ) ) ) ) ; com.net2plan.libraries.WDMUtils . setLightpathRSAAttributes ( r , primaryRSA , true ) ; } 
@ java.lang.Override public com.intrbiz.bergamot.crypto.util.CertificatePair loadServer ( java.lang.String commonName ) { try { if ( this . serverKeyFile ( commonName ) . exists () ) { return new com.intrbiz.bergamot.crypto.util.CertificatePair ( this . serverCrtFile ( commonName ) , this . serverKeyFile ( commonName ) ) ; } else { return new com.intrbiz.bergamot.crypto.util.CertificatePair ( this . serverCrtFile ( commonName ) , null ) ; } } catch ( java.lang.Exception e ) { throw new java.lang.RuntimeException ( ( "Failed to load certificate for server: " + commonName ) , e ) ; } } 
private void setPlayerGoalPositionsInPossession () { java.util.List < AI.Player > newPlayers = new java.util.ArrayList < AI.Player > ( players ) ; AI.Player ballPossessor = newPlayers . get ( pitch . getBallPossessorPlayerID () ) ; setPlayerGoalPositionsBallPossessor ( ballPossessor ) ; newPlayers . remove ( ballPossessor ) ; newPlayers . remove ( team . getGoalKeeperID () ) ; spreadOut ( newPlayers ) ; } 
@ java.lang.Override public void init () { bldrive = hardwareMap . get ( com.qualcomm.robotcore.hardware.DcMotor . class , "c" ) ; brdrive = hardwareMap . get ( com.qualcomm.robotcore.hardware.DcMotor . class , "d" ) ; fldrive = hardwareMap . get ( com.qualcomm.robotcore.hardware.DcMotor . class , "a" ) ; frdrive = hardwareMap . get ( com.qualcomm.robotcore.hardware.DcMotor . class , "b" ) ; drivePowerMod = 1 ; xpower = 0 ; ypower = 0 ; lturnpower = 0 ; rturnpower = 0 ; tank = false ; telemetry . addData ( "Status" , "Initialized" ) ; } 
public void run () { android.util.Log . i ( com.example.bluetooth.BluetoothSerialService.TAG , "BEGIN mConnectedThread" ) ; byte [] buffer = new byte [ 1024 ] ; int bytes ; while ( true ) { try { bytes = mmInStream . read ( buffer ) ; mHandler . obtainMessage ( MainActivity.MESSAGE_READ , bytes , ( - 1 ) , buffer ) . sendToTarget () ; } catch ( java.io.IOException e ) { android.util.Log . e ( com.example.bluetooth.BluetoothSerialService.TAG , "disconnected" , e ) ; connectionLost ( mDevice ) ; this . start () ; break; } } } 
public void createActorRouterMap ( java.util.ArrayList < java.lang.String > userGroups ) { for ( java.lang.String groupName : userGroups ) { akka.actor.ActorRef actor = AllActors.system . actorOf ( akka.actor.Props . create ( AllActors.ActorRouter . class , null ) , groupName ) ; controllers.SystemController.userGroupActorRouterMap . put ( groupName , actor ) ; } } 
private void hideStatusBar () { android.view.View decorView = getWindow () . getDecorView () ; int visibility = 0 ; if ( ( Build.VERSION.SDK_INT ) >= 16 ) { visibility |= android.view.View.SYSTEM_UI_FLAG_FULLSCREEN ; } if ( ( Build.VERSION.SDK_INT ) >= 19 ) { visibility |= android.view.View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY ; } decorView . setSystemUiVisibility ( visibility ) ; } 
private void updateCounter ( java.lang.String k , long curr ) { final long prev = getAndSetPrevious ( k , curr ) ; final com.netflix.spectator.api.Id id = nameFunction . apply ( k ) ; if ( id != null ) { spectatorRegistry . counter ( id ) . increment ( ( prev - curr ) ) ; } } 
public void addDelta ( mmdanggg2.cste.util.BlockDelta bd ) { if ( ( history . size () ) == 0 ) { history . add ( new java.util.ArrayList < mmdanggg2.cste.util.BlockDelta > () ) ; } java.util.ArrayList < mmdanggg2.cste.util.BlockDelta > currHistory = history . get ( ( ( history . size () ) - 1 ) ) ; currHistory . add ( bd ) ; mmdanggg2.cste.util.CSTELogger . logDebug ( ( ( ( "New BlockDelta: " + ( currHistory . size () ) ) + ", history: " ) + ( history . size () ) ) ) ; } 
public void checkPosition ( float X_pos , float Y_pos ) { java.util.Random generator = new java.util.Random () ; if ( ! ( com.mygdx.game.PlayScreen . blocked ( X_pos , Y_pos , com.mygdx.game.Timer.tiledMap ) ) ) { this . X_pos = X_pos ; this . Y_pos = Y_pos ; } while ( com.mygdx.game.PlayScreen . blocked ( X_pos , Y_pos , com.mygdx.game.Timer.tiledMap ) ) { this . X_pos = ( generator . nextInt ( PlayScreen.V_WIDTH ) ) + 1 ; this . Y_pos = ( generator . nextInt ( PlayScreen.V_HEIGHT ) ) + 1 ; } } 
public boolean asyncDelete ( java.io.File [] files , boolean waitCompleted ) { for ( java.io.File file : files ) { java.io.File renamed = new java.io.File ( java.lang.String . format ( "%s.deleted" , file . getAbsolutePath () ) ) ; file . renameTo ( renamed ) ; if ( waitCompleted ) delete ( file ) ; else toBeDeleted . offer ( renamed ) ; } return true ; } 
public int updateMovieWatched ( java.lang.Boolean watched , java.lang.Long dbId , long watchedDate ) { android.content.ContentValues values = new android.content.ContentValues () ; values . put ( BaseDao.MovieEntry.COLUMN_MOVIE_WATCHED , ( watched ? 1 : 0 ) ) ; values . put ( BaseDao.MovieEntry.COLUMN_MOVIE_WATCHED_DATE , watchedDate ) ; java.lang.String selection = ( BaseDao.MovieEntry._ID ) + " LIKE ?" ; java.lang.String [] where = new java.lang.String [] { java.lang.String . valueOf ( dbId ) } ; int affectedRows = movieDao . update ( values , selection , where ) ; return affectedRows ; } 
public void moveAndFill ( int direction ) { direction = direction % 12 ; switch ( direction ) { case 3 : moveRight () ; break; case 6 : moveDown () ; break; case 9 : moveLeft () ; break; case 12 : moveUp () ; break; default: try { throw new java.lang.Exception ( ( "+++Divide By Cucumber Error. Please Reinstall Universe" + " And Reboot +++" ) ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } break; } fillRandom () ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( ( badgeList . size () ) != 0 ) { if ( ( count ) < ( badgeList . size () ) ) { ( count ) ++ ; } else { count = 0 ; } int resource = getActivity () . getResources () . getIdentifier ( badgeList . get ( count ) . getImgsrc () , "drawable" , getActivity () . getPackageName () ) ; badgeImg . setImageResource ( resource ) ; } } 
public static void inject () { java.lang.Class < dk.muj.derius.api.DeriusAPI > apiClass = dk.muj.derius.api.DeriusAPI . class ; java.lang.reflect.Field coreField = com.massivecraft.massivecore.util.ReflectionUtil . getField ( apiClass , DeriusConst.API_DERIUS_FIELD ) ; if ( coreField != null ) { if ( com.massivecraft.massivecore.util.ReflectionUtil . makeAccessible ( coreField ) ) ; { com.massivecraft.massivecore.util.ReflectionUtil . setField ( coreField , null , dk.muj.derius.DeriusCore . get () ) ; } } } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { java.lang.String link = tf . getText () ; boolean inFront = checkBox . isSelected () ; if ( ( link . contains ( "youtube." ) ) && ( link . contains ( "/watch" ) ) ) { c . addToList ( link , wishlist . isSelected () , inFront , tf , fail , frame ) ; } else { fail . setText ( "No valid Link" ) ; new gui.ShowLabelThread ( fail , frame ) . start () ; } } 
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { if ( ! ( obj instanceof liquibase.diff.output.changelog.DiffToChangeLog.DependencyGraph.Edge ) ) { return false ; } if ( obj == null ) { return false ; } liquibase.diff.output.changelog.DiffToChangeLog.DependencyGraph.Edge e = ( ( liquibase.diff.output.changelog.DiffToChangeLog.DependencyGraph.Edge ) ( obj ) ) ; return ( ( e.from ) == ( from ) ) && ( ( e.to ) == ( to ) ) ; } 
private static java.lang.String convertSymbolCharToFileName ( char table , char index ) { if ( table == '/' ) { return "aprs_1_" + ( java.lang.String . format ( "%02d" , ( index - '!' ) ) ) ; } else if ( table == '\\' ) { return "aprs_2_" + ( java.lang.String . format ( "%02d" , ( index - '!' ) ) ) ; } else { return "aprs_1_29" ; } } 
@ org.junit.Ignore ( value = "oauth need manual operation" ) @ org.junit.Test public void testOAuthLogin ( ) throws java.lang.Throwable { org.talend.components.salesforce.SalesforceConnectionProperties props = setupOAuthProps ( null ) ; org.talend.daikon.properties.presentation.Form f = props . getForm ( Form.MAIN ) ; props = ( ( org.talend.components.salesforce.SalesforceConnectionProperties ) ( org.talend.daikon.properties.test.PropertiesTestUtils . checkAndValidate ( getComponentService () , f , "testConnection" , props ) ) ) ; org.junit.Assert . assertEquals ( ValidationResult.Result.OK , props . getValidationResult () . getStatus () ) ; org.talend.components.salesforce.SalesforceComponentTestIT.LOGGER . debug ( props . getValidationResult () . toString () ) ; } 
public boolean areEnemies ( com.palmergames.bukkit.towny.object.Town t1 , com.palmergames.bukkit.towny.object.Town t2 ) { if ( ( hasEnemies ( t1 ) ) && ( hasEnemies ( t2 ) ) ) { for ( int UID : towns . get ( t1 ) ) { if ( UID == ( t2 . getUID () ) ) { return true ; } } } return false ; } 
public void generateMessage ( java.lang.String input ) { if ( input . contains ( "/bye" ) ) { leave () ; return; } com.telegram.app.Message newMessage = new com.telegram.app.Message ( name , input , "chat" ) ; int i = 0 ; while ( i < ( connectionCount ) ) { connections [ ( i ++ ) ] . sendMessage ( newMessage ) ; } } 
@ java.lang.Override protected org.opencb.commons.datastore.core.QueryResult updateStudyConfiguration ( org.opencb.opencga.storage.core.metadata.StudyConfiguration studyConfiguration , org.opencb.commons.datastore.core.QueryOptions options ) { long startTime = java.lang.System . currentTimeMillis () ; java.nio.file.Path path = getPath ( studyConfiguration . getStudyId () , options ) ; try { org.opencb.opencga.storage.core.metadata.FileStudyConfigurationAdaptor . write ( studyConfiguration , path ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return new org.opencb.commons.datastore.core.QueryResult () ; } 
public FreeSpace FindFreeSpace ( int jobSize ) { for ( int i = 0 , l = Swapper.freeSpaceTable . size () ; i < l ; i ++ ) { if ( ( Swapper.freeSpaceTable . get ( i ) . size ) >= jobSize ) { return Swapper.freeSpaceTable . get ( i ) ; } } return null ; } 
@ java.lang.Override public void onListItemClick ( android.widget.ListView l , android.view.View v , int position , long id ) { android.bluetooth.BluetoothDevice device = mListAdapter . getDevice ( position ) ; if ( device == null ) return; final android.content.Intent intent = new android.content.Intent ( getActivity () , com.example.android.bluetoothlegatt.DeviceControlActivity . class ) ; intent . putExtra ( DeviceControlActivity.EXTRAS_DEVICE_NAME , device . getName () ) ; intent . putExtra ( DeviceControlActivity.EXTRAS_DEVICE_ADDRESS , device . getAddress () ) ; intent . putExtra ( DeviceControlActivity.EXTRAS_CONNECTION_METHOD , DeviceControlActivity.BLUETOOTH_METHOD ) ; mActivity . scanLeDevice ( false ) ; startActivity ( intent ) ; } 
public boolean wasMoved ( int x , int y ) { for ( pieces.Move move : movesHistory ) { if ( ( ( move . getFromRow () ) == x ) && ( ( move . getFromColumn () ) == y ) ) { return false ; } } return true ; } 
@ java.lang.Override public void onErrorResponse ( com.android.volley.VolleyError error ) { if ( ( urlServerSource ) != ( ConnectionService.URLServerSource.IP_REQUESTED ) ) { this . loginIntent () ; } else if ( ( waitingUpdate ) == false ) { logInActivity . handleUnexpectedError ( "Error en la conexión" ) ; this . clearLoginActivityLink () ; } } 
public static char [] processSpaces ( char [] cbuf ) { java.lang.String allBuff = java.lang.String . valueOf ( cbuf ) ; allBuff = allBuff . replaceAll ( "\t" , Printer.TAB_SPACE ) ; allBuff = allBuff . replaceAll ( "\r\n" , "\n" ) ; return allBuff . toCharArray () ; } 
@ java.lang.Override public boolean onRestart ( com.twitter.heron.proto.scheduler.Scheduler.RestartTopologyRequest request ) { int containerId = request . getContainerIndex () ; if ( containerId == ( - 1 ) ) { com.twitter.heron.scheduler.yarn.HeronMasterDriverProvider . getInstance () . restartTopology () ; } else { com.twitter.heron.scheduler.yarn.HeronMasterDriverProvider . getInstance () . restartWorker ( java.lang.String . valueOf ( containerId ) ) ; } return true ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { android.content.Intent bookIntent = new android.content.Intent ( getActivity () , it.jaschke.alexandria.services.BookService . class ) ; bookIntent . putExtra ( BookService.EAN , ean . getText () . toString () ) ; bookIntent . setAction ( BookService.DELETE_BOOK ) ; getActivity () . startService ( bookIntent ) ; ean . setText ( "" ) ; } 
public java.lang.String getSaveErrorMessages () { int errorsAndWarnings = ( saveErrorCount ) - ( aspaceErrorCount ) ; java.lang.String errorMessage = ( ( ( ( ( ( ( ( ( ( "RECORD CONVERSION ERRORS/WARNINGS ( " + errorsAndWarnings ) + " ) ::\n\n" ) + ( errorBuffer . toString () ) ) + "\n\n\nRECORD SAVE ERRORS ( " ) + ( aspaceErrorCount ) ) + " ) ::\n\n" ) + ( aspaceClient . getErrorMessages () ) ) + "\n\nTOTAL COPY TIME: " ) + ( stopWatch . getPrettyTime () ) ) + "\n\nNUMBER OF RECORDS COPIED: \n" ) + ( getTotalRecordsCopiedMessage () ) ; return errorMessage ; } 
@ java.lang.Override public void onClick ( final android.view.View v ) { switch ( v . getId () ) { case R.id.button_set : mClient . putData ( ( ( ( com.j.jface.Const.DATA_PATH ) + "/" ) + ( com.j.jface.Const.DATA_KEY_ADHOC ) ) , Const.DATA_KEY_ADHOC , mDataEdit . getText () . toString () ) ; break; case R.id.button_now : mOffset = 0 ; tick () ; updateOffset () ; mHandler . removeMessages ( com.j.jface.feed.TabDebugTools.MSG_UPDATE_TIME ) ; mHandler . sendEmptyMessage ( com.j.jface.feed.TabDebugTools.MSG_UPDATE_TIME ) ; default: updateFences () ; } } 
@ java.lang.Override public void run () { java.util.List < java.lang.String > voltages = com.grarak.kerneladiutor.utils.kernel.CPUVoltage . getVoltages () ; for ( int i = 0 ; i < ( mVoltageCard.length ) ; i ++ ) { mVoltageCard [ i ] . setDescription ( ( ( voltages . get ( i ) ) + ( getString ( R.string.mv ) ) ) ) ; mVoltageCard [ i ] . setValue ( voltages . get ( i ) ) ; } } 
public static void main ( java.lang.String [] args ) { com.led.deep.idfa.LED_DIDFA led = new com.led.deep.idfa.LED_DIDFA () ; byte [] [] D = new byte [] [] { new byte [] { 8 , 6 , 4 , 1 } , new byte [] { 6 , 11 , 9 , 3 } , new byte [] { 1 , 1 , 5 , 2 } , new byte [] { 2 , 12 , 7 , 0 } } ; led . findTnj () ; } 
public java.lang.String getLocalizedEvaluationMethodText () { final net.sourceforge.fenixedu.domain.EvaluationMethod evaluationMethod = getEvaluationMethod () ; if ( evaluationMethod != null ) { final pt.utl.ist.fenix.tools.util.i18n.MultiLanguageString evaluationElements = evaluationMethod . getEvaluationElements () ; return evaluationElements . getContent () ; } for ( final net.sourceforge.fenixedu.domain.CompetenceCourse competenceCourse : getCompetenceCourses () ) { final org.fenixedu.commons.i18n.LocalizedString lstring = competenceCourse . getLocalizedEvaluationMethod ( getExecutionPeriod () ) ; final java.lang.String competenceEvaluationMethod = lstring . getContent () ; if ( competenceEvaluationMethod != null ) { return competenceEvaluationMethod ; } } return "" ; } 
@ java.lang.Override public int read ( final byte [] b , final int off , final int len ) throws java.io.IOException { final int size = java.lang.Math . min ( b.length , ( ( buffer . length () ) - ( pos ) ) ) ; buffer . getBytes ( pos , ( ( pos ) + size ) , b , off ) ; pos += size ; return size ; } 
public void parseTypeOfTextItem ( agh.cs.lab8.Document doc ) { switch ( commands [ 1 ] ) { case "-all" : showAll ( doc ) ; break; case "-c" : showChapters ( doc ) ; break; case "-a" : showArticles ( doc ) ; default: throw new java.lang.IllegalArgumentException ( "Incorrect argument. Use -all for whole document, -c for chapters, -a for articles." ) ; } } 
@ java.lang.Override public void failure ( retrofit.RetrofitError error ) { android.widget.Toast . makeText ( getApplicationContext () , ( " RetrofitError " + ( error . getMessage () . toString () ) ) , Toast.LENGTH_LONG ) . show () ; if ( ! ( error . isNetworkError () ) ) { if ( ( error . getResponse () . getStatus () ) == 409 ) { dbHandler . UpdateSyncState_JobStatusChangeObj ( obj , 1 ) ; } else { dbHandler . UpdateSyncState_JobStatusChangeObj ( obj , ( - 5 ) ) ; } } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_artist ) ; if ( savedInstanceState == null ) { getSupportFragmentManager () . beginTransaction () . add ( R.id.container , new com.texturelabs.rosera.spotifystreamer.ArtistTopTenFragment () ) . commit () ; } } 
private void sendGrant ( int sendId ) { java.lang.System.out . println ( ( ( ( ( ( "Proc" + ( procID ) ) + " sends GRANT message to proc" ) + sendId ) + " at time " ) + ( time ) ) ) ; granted = true ; Message grantMessage = new Message ( new Timestamp ( time , procID ) , messageType.GRANT ) ; sendMessage ( sendId , grantMessage ) ; } 
public void attach ( java.lang.String s ) { selector = s ; if ( ( screen ) != null ) { org.springfield.fs.FsNode node = getControllerNode ( selector ) ; if ( node != null ) { nodepath = node . getProperty ( "nodepath" ) ; fields = node . getProperty ( "fields" ) ; template = node . getProperty ( "template" ) ; model . observeTree ( this , nodepath ) ; screen . get ( selector ) . template ( template ) ; loadHtml () ; } } } 
public static se.comhem.web.test.domain.Gender getGenderByName ( java.lang.String name ) { se.comhem.web.test.domain.Gender gender = null ; for ( se.comhem.web.test.domain.Gender type : se.comhem.web.test.domain.Gender . values () ) { if ( type . name () . equals ( name ) ) { gender = type ; } } return gender ; } 
private static java.lang.String printManifestEntry ( java.lang.String key , java.lang.String defaultValue ) { java.lang.String value = owltools.version.VersionInfo . getManifestVersion ( key ) ; if ( ( value == null ) || ( value . isEmpty () ) ) { value = "UNKNOWN" ; } java.lang.System.out . println ( ( ( key + "\t" ) + value ) ) ; return value ; } 
@ java.lang.Override public void updateContentUrl ( org.alfresco.repo.domain.contentdata.ContentUrlEntity contentUrl ) { if ( contentUrl == null ) { throw new java.lang.IllegalArgumentException ( "Cannot look up ContentData by null ID." ) ; } org.alfresco.util.Pair < java.lang.Long , org.alfresco.repo.domain.contentdata.ContentUrlEntity > pair = contentUrlCache . getByValue ( contentUrl ) ; if ( pair != null ) { contentUrlCache . updateValue ( pair . getFirst () , contentUrl ) ; } else { pair = contentUrlCache . getOrCreateByValue ( contentUrl ) ; contentUrlCache . updateValue ( pair . getFirst () , contentUrl ) ; } } 
public void updateIsLeft () { if ( ( head . getPosition () [ 1 ] ) == 0 ) { this . isLeft = false ; } else { if ( ( gameboard . getSquares () [ head . getPosition () [ 0 ] ] [ ( ( head . getPosition () [ 1 ] ) - 1 ) ] ) == 1 ) { this . isLeft = true ; } else { this . isLeft = false ; } } } 
@ java.lang.Override public java.util.Dictionary < java.lang.Integer , java.lang.String > getQuestionList ( ) throws java.rmi.RemoteException { java.util.Dictionary < java.lang.Integer , java.lang.String > questionsDictionary = new java.util.Hashtable < java.lang.Integer , java.lang.String > () ; for ( int i = 0 ; i < ( questionsList . size () ) ; i ++ ) { interfaces.Question current = questionsList . get ( i ) ; questionsDictionary . put ( current . getQuestionId () , current . getQuestionText () ) ; } return questionsDictionary ; } 
private android.graphics.Bitmap ChannelMixer ( android.graphics.Bitmap original , float R , float G , float B ) { android.graphics.ColorMatrix Cmat = new android.graphics.ColorMatrix ( new float [] { R , 0 , 0 , 0 , 0 , 0 , G , 0 , 0 , 0 , 0 , 0 , B , 0 , 0 , 0 , 0 , 0 , 1 , 0 } ) ; return this . process ( original , Cmat ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setRequestedOrientation ( ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE ) ; setContentView ( R.layout.activity_image_view ) ; loadViews () ; android.content.Intent intent = getIntent () ; resid = intent . getIntExtra ( "drawableid" , R.drawable.pyruvate_00000 ) ; if ( ( getScreenOrientation () ) == ( android.content.res.Configuration.ORIENTATION_LANDSCAPE ) ) { setBackground () ; getWindow () . getDecorView () . setSystemUiVisibility ( ( ( android.view.View.SYSTEM_UI_FLAG_LAYOUT_STABLE ) | ( android.view.View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN ) ) ) ; } } 
private android.graphics.PointF TranslatePlayerPos ( onebit.o_zonesflight.Player player , android.graphics.Bitmap display ) { return new android.graphics.PointF ( ( ( ( player . GetPosition () ) / ( Settings.Environment_Width ) ) * ( ( display . getWidth () ) - ( oZone . getWidth () ) ) ) , ( ( display . getHeight () ) - ( oZone . getHeight () ) ) ) ; } 
private void jMenuItem2ActionPerformed ( java.awt.event.ActionEvent evt ) { if ( ( bookstoremanagerment.MainForm.b ) == 0 ) { bookstoremanagerment.MainForm.fx2 = new bookstoremanagerment.Form_ThongkeDoanhthu () ; bookstoremanagerment.MainForm.fx2 . setVisible ( true ) ; bookstoremanagerment.MainForm.b = 1 ; } else if ( ( bookstoremanagerment.MainForm.b ) == 1 ) { javax.swing.JOptionPane . showMessageDialog ( menu , "Cửa sổ vẫn đang mở!!!" , "Lỗi" , java.awt.image.ImageObserver.WIDTH ) ; } } 
public java.sql.Connection connect () { try { java.lang.Class . forName ( "org.sqlite.JDBC" ) ; } catch ( java.lang.ClassNotFoundException ex ) { java.util.logging.Logger . getLogger ( de.buxdehuda.archivar.Archivar . class . getName () ) . log ( java.util.logging.Level.SEVERE , null , ex ) ; } java.sql.Connection tempConn = null ; try { tempConn = java.sql.DriverManager . getConnection ( ( ( "jdbc:sqlite:" + ( de.buxdehuda.archivar.Archivar.FOLDER ) ) + "bilder.db" ) ) ; } catch ( java.sql.SQLException ex ) { java.util.logging.Logger . getLogger ( de.buxdehuda.archivar.Archivar . class . getName () ) . log ( java.util.logging.Level.SEVERE , null , ex ) ; } return tempConn ; } 
public void completeWorkoutClick ( android.view.View v ) { if ( ( _day ) == 3 ) { int week = _settings . getWeek () ; _settings . setDay ( 1 ) ; _settings . setWeek ( ( ( _week ) + 1 ) ) ; } else { _settings . setDay ( ( ( _day ) + 1 ) ) ; } this . finish () ; } 
public void judge ( java.util.List < java.lang.Integer > result , java.util.List < java.lang.Integer > corr ) { if ( result == null ) { feedback += "FAILED. Result is NULL" ; } else if ( basicgraph.DegreeGrader . printList ( result ) . equals ( basicgraph.DegreeGrader . printList ( corr ) ) ) { feedback += ( ( ( "FAILED. Expected " + ( basicgraph.DegreeGrader . printList ( corr ) ) ) + ", got " ) + ( basicgraph.DegreeGrader . printList ( result ) ) ) + ". " ; } else { feedback += "PASSED." ; ( correct ) ++ ; } } 
@ java.lang.Override public void run () { while ( ! ( isStoped ) ) { utils.adt.NetworkToken token = buffer . getMessageFromInput () ; if ( token != null ) { client.connectionManager.Connection client = connectionMap . get ( token . getID () ) ; if ( client != null ) { client . sendMessage ( token . getMessage () ) ; } } } java.lang.System.out . println ( "Answerhandler heruntergefahren" ) ; } 
public java.io.File sortFile ( java.io.File inFile , java.util.Comparator < java.lang.String > lineComparator ) throws java.io.IOException { java.io.File out = null ; try { com.jamesanton.cruncher.util.FileUtil . removeFilesAndFolder ( com.jamesanton.cruncher.data.FileSorter.BROKEN_UP_PATH , com.jamesanton.cruncher.data.FileSorter.SORTED_PATH , com.jamesanton.cruncher.data.FileSorter.OUT_FILE ) ; breakUpFile ( inFile , com.jamesanton.cruncher.data.FileSorter.BROKEN_UP_PATH ) ; sortSmallFiles ( com.jamesanton.cruncher.data.FileSorter.BROKEN_UP_PATH , com.jamesanton.cruncher.data.FileSorter.SORTED_PATH , lineComparator ) ; out = mergeSortedFiles ( com.jamesanton.cruncher.data.FileSorter.SORTED_PATH , com.jamesanton.cruncher.data.FileSorter.OUT_FILE , lineComparator ) ; com.jamesanton.cruncher.util.FileUtil . removeFilesAndFolder ( com.jamesanton.cruncher.data.FileSorter.BROKEN_UP_PATH , com.jamesanton.cruncher.data.FileSorter.SORTED_PATH ) ; } catch ( java.io.IOException e ) { com.jamesanton.cruncher.data.FileSorter.LOG . error ( "There was a problem sorting your file..." , e ) ; } return out ; } 
@ com.modeliosoft.modelio.javadesigner.annotations.objid ( value = "22963c8e-9140-49f2-beb7-3b2458a06c51" ) private void bootstrapAttr ( java.util.List < java.lang.Integer > attr ) { java.util.ArrayList < java.lang.Integer > rand = new java.util.ArrayList < java.lang.Integer > ( attrN ) ; for ( int i = 1 ; i < ( ( attrN ) + 1 ) ; i ++ ) { rand . set ( i , i ) ; } java.util.Collections . shuffle ( rand ) ; attr = rand . subList ( 0 , attrSampleN ) ; } 
private static void updateReqList () { javax.swing.DefaultListModel model = new javax.swing.DefaultListModel () ; java.util.ArrayList < disconsented.anssrpg.perk.Requirement > temp = disconsented.anssrpg.gui.Config.currentPerk . getRequirements () ; for ( disconsented.anssrpg.perk.Requirement req : temp ) { model . addElement ( req.name ) ; } disconsented.anssrpg.gui.Config.listRequirement . setModel ( model ) ; disconsented.anssrpg.gui.Config.listRequirement . updateUI () ; } 
private void initCells () { for ( int i = 0 ; i < ( mapSize ) ; i ++ ) { for ( int j = 0 ; j < ( mapSize ) ; j ++ ) { cells [ i ] [ j ] = new api.Cell ( j , i ) ; } } } 
public static final java.lang.String padLeftEvenly ( final java.lang.String s , final char c ) { java.lang.String result = s ; if ( ( result != null ) && ( api.util.Mathematics . isOdd ( result . length () ) ) ) { java.lang.StringBuilder sb = new java.lang.StringBuilder () ; sb . append ( c ) ; sb . append ( result ) ; result = sb . toString () ; } return result ; } 
@ java.lang.Override public void message ( com.pubnub.api.PubNub pubnub , com.pubnub.api.models.consumer.pubsub.PNMessageResult message ) { if ( ( message . getChannel () ) != null ) { android.util.Log . i ( me.loganfuller.tostr.MainActivity.PN , ( ( "Information from " + ( message . getChannel () ) ) + " received." ) ) ; android.util.Log . i ( me.loganfuller.tostr.MainActivity.PN , ( "Message: " + ( message . getMessage () ) ) ) ; if ( message . getMessage () . toString () . contains ( "stop" ) ) { cancelAlarm () ; } } else {} } 
private void startTimerIfNecessary () { android.util.Log . d ( com.ozzyboshi.internetbeattimewatchface.InternetBeatTimeWatchFaceService.TAG , "Start of startTimerIfNecessary - remove callbacks" ) ; timeTick . removeCallbacks ( timeRunnable ) ; if ( ( isVisible () ) && ( ! ( isInAmbientMode () ) ) ) { timeTick . post ( timeRunnable ) ; } else if ( ( ( isVisible () ) && ( isInAmbientMode () ) ) && ( ( watchFace ) != null ) ) { android.util.Log . d ( com.ozzyboshi.internetbeattimewatchface.InternetBeatTimeWatchFaceService.TAG , "End of startTimerIfNecessary - start timeTick with beatsRunnable" ) ; timeTick . post ( beatsRunnable ) ; } } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { currentTourLines = new java.util.ArrayList <> () ; drawnToursMap = new java.util.TreeMap <> () ; markersMap = new java.util.TreeMap <> () ; previousCameraLocation = social.entourage.android.EntourageLocation . cameraPositionToLocation ( null , social.entourage.android.EntourageLocation . getInstance () . getLastCameraPosition () ) ; android.view.View toReturn = inflater . inflate ( R.layout.fragment_map , container , false ) ; butterknife.ButterKnife . bind ( this , toReturn ) ; return toReturn ; } 
public static void main ( java.lang.String [] args ) throws java.io.IOException , java.net.URISyntaxException { boolean notEnded = true ; gmit.GameParser parser = new gmit.GameParser () ; parser . parse () ; java.lang.System.out . println ( "********************************GRAIL QUEST************************************" ) ; java.lang.System.out . println ( "-------------------------------------------------------------------------------" ) ; java.lang.System.out . println ( "-------------------------------------------------------------------------------" ) ; java.lang.System.out . println ( "Hit enter to begin your quest to the Kingdom of Cyprus.." ) ; new java.util.Scanner ( java.lang.System.in ) . nextLine () ; while ( notEnded ) {} java.lang.System.out . println ( "Victory, you have reached the Byzantine Empire!!!" ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_third ) ; net.masonliu.statusbarcolor.StatusBarColorUtil . setStatusBarColorResourceAfterSetContentView ( this , R.color.red ) ; net.masonliu.statusbarcolor.StatusBarColorUtil . setNavigationBarColorResourceAfterSetContentView ( this , R.color.red ) ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.home_activity_toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; android.widget.Toast . makeText ( this , "dd3" , Toast.LENGTH_LONG ) . show () ; } 
public void init ( ) throws java.lang.Exception { com.neverwinterdp.scribengin.dataflow.DataflowRegistry dRegistry = container . getDataflowRegistry () ; com.neverwinterdp.scribengin.dataflow.DataflowTaskReport report = dRegistry . getTaskReport ( descriptor ) ; if ( ( report . getStartTime () ) == 0 ) { report . setStartTime ( java.lang.System . currentTimeMillis () ) ; } context = new com.neverwinterdp.scribengin.dataflow.DataflowTaskContext ( container , descriptor , report ) ; descriptor . setStatus ( Status.PROCESSING ) ; dRegistry . dataflowTaskUpdate ( descriptor ) ; dRegistry . dataflowTaskReport ( descriptor , report ) ; } 
@ java.lang.Override public double calculateFitness ( double [] solutionVector ) throws java.lang.Exception { if ( ( solutionVector.length ) == ( numDimensions ) ) { double x = solutionVector [ 0 ] ; java.lang.Double result = 0.0 ; for ( int j = 0 ; j < ( Nx ) ; j ++ ) { for ( int i = 0 ; i < j ; i ++ ) { result += java.lang.Math . pow ( solutionVector [ i ] , 2.0 ) ; } } return result ; } else throw new java.lang.Exception ( "Invalid input variables for problem." ) ; } 
public void testFunctionLiteral ( ) throws java.lang.Exception { org.jetbrains.kotlin.idea.refactoring.changeSignature.JetChangeInfo changeInfo = getChangeInfo () ; changeInfo . getNewParameters () [ 1 ] . setName ( "y1" ) ; changeInfo . addParameter ( new org.jetbrains.kotlin.idea.refactoring.changeSignature.JetParameterInfo ( changeInfo . getMethodDescriptor () . getBaseDescriptor () , ( - 1 ) , "x" , org.jetbrains.kotlin.builtins.KotlinBuiltIns . getInstance () . getAnyType () , null , null , JetValVar.None , null ) ) ; changeInfo . setNewReturnTypeText ( "Int" ) ; doTest ( changeInfo ) ; } 
@ java.lang.Override public boolean isValid ( ticketingsystem.Data data ) { if ( ( ( data . getData () ) == null ) || ( ( data . getData () . length () ) != 8 ) ) { return false ; } else { java.lang.System.out . println ( data . getData () . matches ( "[a-z][a-z][a-z][a-z][0-9][0-9][0-9][0-9]" ) ) ; return data . getData () . matches ( "[a-z][a-z][a-z][a-z][0-9][0-9][0-9][0-9]" ) ; } } 
@ java.lang.Override public java.lang.String primitiveValue () { if ( isPrimitive () ) return value ; else { if ( hasPrimitiveValue () ) { for ( org.hl7.fhir.dstu3.elementmodel.Element c : children ) { if ( c . getName () . equals ( "value" ) ) return c . primitiveValue () ; } } return null ; } } 
public java.util.Collection < org.tapchain.editor.IActorTap > searchRoomPieces ( org.tapchain.core.IPoint iPoint , org.tapchain.core.IPiece . . . exclusive ) { java.util.Collection < org.tapchain.editor.IActorTap > tList = getTaps ( iPoint ) ; if ( ( tList == null ) || ( ( tList . size () ) <= 0 ) ) return null ; tList . removeAll ( java.util.Arrays . asList ( exclusive ) ) ; return tList ; } 
public static void saveSessionToken ( java.lang.String userId , java.lang.String token , java.lang.String ip ) { java.lang.String query = ( ( ( ( ( ( "INSERT INTO login_session (user_id, token, create_at, expire_at, expired, ip_addresses) VALUES" + " ('" ) + userId ) + "', '" ) + token ) + "', NOW(), DATE_ADD(NOW(), INTERVAL 180 SECOND), 0, '" ) + ip ) + "')" ; com.avaje.ebean.SqlUpdate update = com.avaje.ebean.Ebean . createSqlUpdate ( query ) ; } 
private boolean updateModel ( net.minecraft.util.BlockPos pos , net.minecraft.world.World world ) { java.util.EnumMap < net.minecraft.util.EnumFacing , dabble.redstonemod.util.EnumModel > model = this . getModel ( pos , world ) ; if ( ! ( model . equals ( dabble.redstonemod.util.ModelLookup . getModel ( pos , world , this ) ) ) ) { dabble.redstonemod.util.ModelLookup . putModel ( pos , model , world ) ; return true ; } else return false ; } 
public static void resetAccount () { java.lang.String [] loginInfo = everythingForTheGame.Main . userLogIn () ; for ( java.lang.Integer i = 0 ; i < ( Account.numberOfAccounts ) ; i ++ ) { java.lang.String [] compareInfo = everythingForTheGame.Main.gameAccounts [ i ] . getUsernamePassword () ; java.lang.System.out . println ( "It ran once" ) ; if ( java.util.Arrays . equals ( loginInfo , compareInfo ) ) { everythingForTheGame.Main . createAccount ( loginInfo [ 0 ] , loginInfo [ 1 ] , ( i + 1 ) ) ; break; } java.lang.System.out . println ( "No match found" ) ; } } 
public static java.lang.String getMessage ( java.lang.String key , com.cloudcraftgaming.discal.internal.data.GuildSettings settings ) { java.util.Map < java.lang.String , java.lang.String > messages ; if ( ( ( settings . getLang () ) != null ) && ( com.cloudcraftgaming.discal.utils.MessageManager.langs . containsKey ( settings . getLang () ) ) ) { messages = com.cloudcraftgaming.discal.utils.MessageManager.langs . get ( settings . getLang () ) ; } else { messages = com.cloudcraftgaming.discal.utils.MessageManager.langs . get ( "ENGLISH" ) ; } return messages . getOrDefault ( key , "***FAILSAFE MESSAGE*** MESSAGE NOT FOUND!!" ) . replaceAll ( "%lb%" , Message.lineBreak ) ; } 
public void set ( int x , int y , float value ) { if ( ( x <= ( m.length ) ) && ( y <= ( m [ 0 ] . length ) ) ) m [ x ] [ y ] = value ; } 
@ android.support.annotation.Nullable private static android.app.Fragment findTopmostFragment ( android.app.FragmentManager fragmentManager ) { int backStackEntryCount = fragmentManager . getBackStackEntryCount () ; android.app.Fragment topmostFragment ; if ( backStackEntryCount > 0 ) { java.lang.String fragmentName = fragmentManager . getBackStackEntryAt ( ( backStackEntryCount - 1 ) ) . getName () ; topmostFragment = fragmentManager . findFragmentByTag ( fragmentName ) ; } else { topmostFragment = null ; } return topmostFragment ; } 
private boolean isInvalidWindowsFilename ( java.lang.String name ) { char [] chars = name . toCharArray () ; for ( char c : chars ) { if ( ( ( c == '\"' ) || ( c == '<' ) ) || ( c == '>' ) ) { return true ; } } if ( ( chars [ ( ( chars.length ) - 1 ) ] ) == ' ' ) { return true ; } return false ; } 
public void save () { if ( driverService . hasBeenPersisted ( driver ) ) { driverService . update ( driver ) ; web.core.helpers.FrontendHelper . displaySuccessSmallBox ( "De bestuurder is geupdate" ) ; } else { driver = driverService . create ( driver ) ; try { main.core.communcation.Communicator . addDriver ( driver ) ; } catch ( java.io.IOException | org.codehaus.jettison.json.JSONException e ) { e . printStackTrace () ; } web.core.helpers.FrontendHelper . displaySuccessSmallBox ( "De bestuurder is aangemaakt" ) ; } web.core.helpers.RedirectHelper . redirect ( "/pages/driver/driverOverview.xhtml" ) ; } 
public static double graphStructuralSimilarity ( gr.demokritos.iit.jinsect.structs.UniqueJVertexGraph gA , gr.demokritos.iit.jinsect.structs.UniqueJVertexGraph gB ) { double total = 0 ; for ( gr.demokritos.iit.jinsect.structs.Edge e : gA . edgeSet () ) { gr.demokritos.iit.jinsect.structs.JVertex vFrom = gA . getEdgeSource ( e ) ; gr.demokritos.iit.jinsect.structs.JVertex vTo = gB . getEdgeTarget ( e ) ; total += gr.demokritos.iit.jinsect.jutils . edgeStructuralSimilarity ( gA , gB , vFrom , vTo ) ; } return total ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { ( ( com.v2tech.view.MainApplication ) ( this . getApplication () ) ) . onMainCreate () ; super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.main_activity ) ; mMainLayout = ( ( android.widget.FrameLayout ) ( findViewById ( R.id.main ) ) ) ; initMapviewLayout () ; initBottomButtonLayout () ; initTitleBarButtonLayout () ; initResetOrder () ; findViewById ( R.id.title_bar_center_tv ) . setVisibility ( View.GONE ) ; findViewById ( R.id.title_bar_logo ) . setVisibility ( View.VISIBLE ) ; } 
public static org.sosy_lab.cpachecker.cpa.policyiteration.PolicyAbstractedState top ( org.sosy_lab.cpachecker.cfa.model.CFANode node , int pLocationID , org.sosy_lab.cpachecker.cpa.policyiteration.StateFormulaConversionManager pManager , org.sosy_lab.cpachecker.util.predicates.pathformula.SSAMap pSSAMap , org.sosy_lab.cpachecker.util.predicates.pathformula.pointeraliasing.PointerTargetSet pPointerTargetSet , org.sosy_lab.java_smt.api.BooleanFormula pPredicate , org.sosy_lab.cpachecker.cpa.policyiteration.PolicyIntermediateState pPredecessor , java.util.Optional < org.sosy_lab.cpachecker.cpa.policyiteration.PolicyAbstractedState > pSibling ) { return new org.sosy_lab.cpachecker.cpa.policyiteration.PolicyAbstractedState ( node , com.google.common.collect.ImmutableMap . of () , pLocationID , pManager , pSSAMap , pPointerTargetSet , pPredicate , pPredecessor , pSibling . orElse ( null ) ) ; } 
private void getInfo () { bta . startDiscovery () ; if ( ( bestName ) != null ) { try { outputStream . writeUTF ( bestName ) ; java.lang.String response = inputStream . readUTF () ; info . setText ( response ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } bestDistance = - 200 ; bestName = null ; } } 
public void addFirstItem ( T bean ) { java.util.List < T > tempBeans = new java.util.ArrayList <> () ; tempBeans . add ( bean ) ; tempBeans . addAll ( mAllDatas ) ; mAllDatas . clear () ; mAllDatas = tempBeans ; com.rsen.base.RBaseAdapter . notifyItemInserted ( 0 ) ; com.rsen.base.RBaseAdapter . notifyItemRangeChanged ( 0 , mAllDatas . size () ) ; } 
@ java.lang.Override public void onTimeSet ( android.widget.TimePicker timePicker , int hourOfDay , int minute ) { java.util.Calendar date = ( ( textView . getId () ) == ( R.id.tv_start_time ) ) ? mStart : mEnd ; date . set ( java.util.Calendar.HOUR_OF_DAY , hourOfDay ) ; date . set ( java.util.Calendar.MINUTE , minute ) ; textView . setText ( android.text.format.DateUtils . formatDateTime ( this , date . getTimeInMillis () , tcd.training.com.calendar.AddEventTask.AddEventActivity.TIME_FORMAT_FLAGS ) ) ; } 
@ java.lang.Override public boolean onQueryTextChange ( java.lang.String newText ) { if ( ( newText . length () ) > 1 ) { searchResults . setVisibility ( view.VISIBLE ) ; if ( ( actualNumWords ) > ( newText . length () ) ) { actualNumWords = newText . length () ; searchadapter . emptyResults () ; } java.lang.String url = com.sociale_sports.Utils.UtilsHTTP . createUrl ( "11" , newText ) ; com.sociale_sports.Utils.UtilsHTTP . getRequest ( getContext () , url , this ) ; } else { searchResults . setVisibility ( view.GONE ) ; } return false ; } 
private java.io.File [] readFileList ( java.io.File file ) throws java.io.IOException { java.util.List < java.io.File > fileList = new java.util.ArrayList <> () ; java.io.FileReader fileReader = new java.io.FileReader ( file ) ; java.io.BufferedReader bufferedReader = new java.io.BufferedReader ( fileReader ) ; java.lang.String line ; while ( ( line = bufferedReader . readLine () ) != null ) { fileList . add ( new java.io.File ( line . trim () ) ) ; } return ( ( java.io.File [] ) ( fileList . toArray () ) ) ; } 
public static void conversationHandler ( java.io.PrintWriter outputToClient , java.io.BufferedReader inputFromClient ) throws java.io.IOException { java.util.Scanner serverInput = new java.util.Scanner ( java.lang.System.in ) ; java.lang.String clientText ; java.lang.String serverText ; while ( true ) { if ( ( serverText = serverInput . nextLine () ) != null ) { outputToClient . println ( serverText ) ; java.lang.System.out . println ( ( "Server: " + serverText ) ) ; } else if ( ( clientText = inputFromClient . readLine () ) != null ) { java.lang.System.out . println ( clientText ) ; } } } 
@ java.lang.Override public com.ctrip.zeus.service.status.impl.AppServerStatus getAppServerStatus ( java.lang.String appName , java.lang.String slbName , java.lang.String ip , java.lang.Integer port ) throws java.lang.Exception { com.ctrip.zeus.service.status.impl.AppServerStatus appServerStatus = new com.ctrip.zeus.service.status.impl.AppServerStatus () ; appServerStatus . setIp ( ip ) ; appServerStatus . setPort ( port ) ; boolean memberUp = statusService . getAppServerStatus ( slbName , appName , ip ) ; boolean serverUp = statusService . getServerStatus ( ip ) ; boolean backendUp = getUpstreamStatus ( ip ) ; appServerStatus . setServer ( serverUp ) ; appServerStatus . setMember ( memberUp ) ; appServerStatus . setUp ( backendUp ) ; return appServerStatus ; } 
@ java.lang.Override public void onConnected ( com.skyworld.cache.Token token , com.skyworld.push.ClientTerminal terminal ) { com.skyworld.service.dsf.User user = com.skyworld.cache.CacheManager . getIntance () . getUser ( token ) ; if ( user != null ) { user . setPushTerminal ( terminal ) ; java.util.Queue < com.skyworld.push.event.SHPEvent > queue = user . getPendingEvents () ; com.skyworld.push.event.SHPEvent ev = null ; while ( ( ev = queue . poll () ) != null ) { terminal . postEvent ( ev ) ; } } } 
public de.hsa.games.fatsquirrel.core.Entity getEntityAtPosition ( int positionInList ) { if ( ! ( isEmpty () ) ) { int currentPosition = this . getSize () ; current = listTail ; while ( currentPosition > positionInList ) { currentPosition -- ; current = current . getPreviousElement () ; } return ( ( de.hsa.games.fatsquirrel.core.Entity ) ( current . getData () ) ) ; } current = listTail ; return null ; } 
public static java.lang.String formatQueryString ( java.lang.String url , java.lang.String field , java.lang.Boolean value ) { if ( null == value ) { return url ; } return url . contains ( "?" ) ? ( ( "&" + field ) + "=" ) + value : ( ( "?" + field ) + "=" ) + value ; } 
public void sleep () { nachos.threads.Lib . assertTrue ( conditionLock . isHeldByCurrentThread () ) ; boolean intStatus = nachos.threads.Machine . interrupt () . disable () ; waitForCondQueue . add ( nachos.threads.KThread . currentThread () ) ; conditionLock . release () ; nachos.threads.KThread . sleep () ; nachos.threads.Machine . interrupt () . restore ( intStatus ) ; conditionLock . acquire () ; } 
public java.math.BigInteger toBigInt () { java.math.BigInteger output = java.math.BigInteger.ZERO ; int power = 0 ; int base ; for ( int i = 0 ; i < ( this . size () ) ; i ++ ) { boolean b = this . get ( i ) ; output . add ( java.math.BigInteger . valueOf ( ( ( b ? 1 : 0 ) * ( java.lang.Math . pow ( 2 , power ) ) ) ) ) ; power ++ ; } } 
@ java.lang.Override public int putAll ( java.lang.Iterable < ? extends com.carrotsearch.hppc.KTypeVTypeCursor < ? extends KType , ? extends VType > > iterable ) { final int count = this . assigned ; for ( com.carrotsearch.hppc.KTypeVTypeCursor < ? extends KType , ? extends VType > c : iterable ) { put ( c.key , c.value ) ; } return ( this . assigned ) - count ; } 
private void B_TeamsMouseClicked ( java.awt.event.MouseEvent evt ) { ScrollPane_Owner . setVisible ( false ) ; ScrollPane_Player . setVisible ( false ) ; ScrollPane_Team . setVisible ( true ) ; Panel_Person . setVisible ( false ) ; Panel_Buttons . setVisible ( false ) ; Panel_Statistics . setVisible ( false ) ; ScrollPane_TeamData . setVisible ( false ) ; Label_Close . setVisible ( false ) ; Panel_Person_Images . removeAll () ; currentTab = 2 ; Label_NotPlayed . setVisible ( false ) ; } 
public void save ( Automaton automaton , java.lang.String url ) { try { java.io.FileOutputStream file = new java.io.FileOutputStream ( ( url + ".aut" ) ) ; java.io.ObjectOutputStream object = new java.io.ObjectOutputStream ( file ) ; object . writeObject ( automaton ) ; object . close () ; java.lang.System.out . println ( "saved!" ) ; } catch ( java.lang.Exception e ) { java.lang.System.out . println ( "error saving..." ) ; } } 
private java.lang.String buildHtmlHead ( final java.lang.String title ) { final java.lang.StringBuilder html = new java.lang.StringBuilder ( "<head>" ) . append ( NewLine.CRLF ) ; html . append ( buildHtmlHeadMeta () ) ; html . append ( buildHtmlHeadLink () ) ; html . append ( buildHtmlHeadScript () ) ; html . append ( buildHtmlHeadTitle ( title ) ) ; html . append ( "</head>" ) . append ( NewLine.CRLF ) ; return html . toString () ; } 
public void visitBody ( org.apache.jasper.compiler.Node n ) throws org.apache.jasper.JasperException { org.apache.jasper.compiler.SmapStratum smapSave = smap ; java.lang.String innerClass = n . getInnerClassName () ; if ( innerClass != null ) { this . smap = ( ( org.apache.jasper.compiler.SmapStratum ) ( innerClassMap . get ( innerClass ) ) ) ; } super . visitBody ( n ) ; smap = smapSave ; } 
@ javax.ws.rs.POST @ javax.ws.rs.Path ( value = "/{stockId}/{date}" ) @ javax.ws.rs.Produces ( value = "application/json" ) public java.util.List < org.easystogu.db.vo.table.StockPriceVO > queryDayPriceByIdWithForecastPrice ( @ javax.ws.rs.PathParam ( value = "stockId" ) java.lang.String stockIdParm , @ javax.ws.rs.PathParam ( value = "date" ) java.lang.String dateParm , java.lang.String postBody , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletResponse response ) { response . addHeader ( "Access-Control-Allow-Origin" , accessControlAllowOrgin ) ; java.util.List < org.easystogu.db.vo.table.StockPriceVO > rtnSpList = new java.util.ArrayList < org.easystogu.db.vo.table.StockPriceVO > () ; java.util.List < org.easystogu.db.vo.table.StockPriceVO > spList = postParmsProcess . updateStockPriceAccordingToRequest ( stockIdParm , postBody ) ; for ( org.easystogu.db.vo.table.StockPriceVO vo : spList ) { if ( this . isStockDateSelected ( dateParm , vo.date ) ) { rtnSpList . add ( vo ) ; } } return rtnSpList ; } 
private int hiBound ( int hiRef , int [] inputArray , int bRef ) { int tmpHi = search ( hi , inputArray , bRef , ( ( inputArray.length ) - 1 ) ) ; if ( ( inputArray [ tmpHi ] ) > ( hi ) ) { tmpHi -- ; } return tmpHi ; } 
@ java.lang.Override public void caseAIdExp ( AIdExp node ) { inAIdExp ( node ) ; java.lang.String str = node . getId () . toString () . replace ( " " , "" ) ; if ( ( node . getId () ) != null ) { node . getId () . apply ( this ) ; } if ( ( node . getTuple () ) != null ) {} outAIdExp ( node ) ; } 
@ java.lang.Override public com.aristotle.core.persistance.User registerOnlineMember ( java.lang.Long loggedInUserId , java.lang.String mobileNumber , java.lang.String name , java.lang.String amount , java.lang.String paymentMode , java.lang.String transactionId , java.lang.String fees ) throws com.aristotle.core.exception.AppException { com.aristotle.core.persistance.User user = userRepository . findOne ( loggedInUserId ) ; createUserMembership ( user , "Online" , transactionId , fees ) ; return user ; } 
java.util.List findVerse ( java.lang.String input ) { java.util.regex.Pattern pattern = java.util.regex.Pattern . compile ( "\\[(.*?)\\]" , java.util.regex.Pattern.DOTALL ) ; java.util.regex.Matcher matcher = pattern . matcher ( input ) ; java.util.List verses = new java.util.ArrayList () ; while ( matcher . find () ) { java.lang.System.out . println ( matcher . group ( 1 ) ) ; verses . add ( matcher . group ( 1 ) ) ; } return verses ; } 
public javafx.scene.control.MenuItem toMenuItem () { javafx.scene.control.MenuItem item = new javafx.scene.control.MenuItem ( this . label ) ; item . setGraphic ( ( ( this . graphic ) != null ? this . graphic . get () : null ) ) ; item . setAccelerator ( this . accelerator ) ; item . setUserData ( this ) ; return item ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { this . layout = R.layout.activity_wanhost ; super . onCreate ( savedInstanceState ) ; this . wanHost = ( ( android.widget.EditText ) ( findViewById ( R.id.hostAddress ) ) ) ; this . portList = ( ( android.widget.ListView ) ( findViewById ( R.id.portList ) ) ) ; this . wanHost . setText ( com.aaronjwood.portauthority.utils.UserPreference . getLastUsedHostAddress ( this ) ) ; this . adapter = new android.widget.ArrayAdapter ( getApplicationContext () , android.R.layout.simple_list_item_1 , ports ) ; this . portList . setAdapter ( adapter ) ; this . setupPortScan () ; } 
@ Parameterized.Parameters ( name = "{index}:changeBit in {0} with position {1} = {3}" ) public static java.lang.Iterable < java.lang.Object [] > data () { return java.util.Arrays . asList ( new java.lang.Object [] [] { new java.lang.Object [] { 1 , 0 , false , 0 } , new java.lang.Object [] { 51 , 5 , false , 19 } , new java.lang.Object [] { 157 , 6 , true , 221 } } ) ; } 
@ java.lang.Override public void onCreate () { super . onCreate () ; org.newstand.logger.Logger . config ( org.newstand.logger.Settings . builder () . tag ( getClass () . getSimpleName () ) . logLevel ( ( org.newstand.datamigration.provider.SettingsProvider . isDebugEnabled () ? Logger.LogLevel.ALL : Logger.LogLevel.WARN ) ) . logAdapter ( new org.newstand.datamigration.utils.OnDeviceLogAdapter () ) . build () ) ; org.newstand.datamigration.provider.SettingsProvider . init ( this ) ; io.realm.Realm . init ( this ) ; org.newstand.datamigration.secure.DonateQRPathRetriever . loadAndCache ( this ) ; org.newstand.datamigration.service.DummSmsServiceProxy . startService ( this ) ; registerActivityLifecycleCallbacks ( topActivityObserver ) ; } 
@ java.lang.Override public org.apache.kafka.common.requests.AbstractResponse getErrorResponse ( int throttleTimeMs , java.lang.Throwable e ) { short versionId = version () ; switch ( versionId ) { case 0 : throw new java.lang.IllegalArgumentException ( ( "Version 0 is not supported. It is only supported by " + "the Scala request class for controlled shutdown" ) ) ; case 1 : return new org.apache.kafka.common.requests.ControlledShutdownResponse ( org.apache.kafka.common.protocol.Errors . forException ( e ) , java.util.Collections . < org.apache.kafka.common.TopicPartition > emptySet () ) ; default: throw new java.lang.IllegalArgumentException ( java.lang.String . format ( "Version %d is not valid. Valid versions for %s are 0 to %d" , versionId , this . getClass () . getSimpleName () , ApiKeys.CONTROLLED_SHUTDOWN_KEY . latestVersion () ) ) ; } } 
public static java.lang.String getSubstring ( java.lang.String message ) { int length = java.lang.Math . min ( message . length () , com.yumcouver.tunnel.client.util.Wireshark.DEBUG_MESSAGE_LENGTH ) ; int index = message . indexOf ( "\n" ) ; if ( index == ( - 1 ) ) return message . substring ( length ) ; else return message . substring ( java.lang.Math . min ( index , length ) ) ; } 
public java.lang.String mezmurOrg ( java.lang.String azmach , java.lang.String teref ) { java.lang.StringBuffer myMezmur = new java.lang.StringBuffer () ; java.lang.String divider = "\n *** \n" ; myMezmur . append ( azmach ) ; myMezmur . append ( divider ) ; teref = teref . replace ( "\n *** \n" , "\n***\n" ) ; teref = teref . replace ( "***" , "\n\n***\n" ) ; myMezmur . append ( teref ) ; return myMezmur . toString () ; } 
public Item removeLast () { if ( ! ( isEmpty () ) ) { if ( ( size ) == 1 ) { Item item = last.item ; last = null ; first = null ; ( size ) -- ; return item ; } Deque < Item > . Node oldLast = last ; last = oldLast.prev ; last.next = null ; ( size ) -- ; return oldLast.item ; } else { throw new java.util.NoSuchElementException ( "The deque is empty" ) ; } } 
public void onClick ( android.content.DialogInterface dialog , int whichButton ) { java.lang.String login = editText . getText () . toString () ; if ( ! ( "" . equals ( login ) ) ) { requestSearchUsersByLogin ( login ) ; dialog . dismiss () ; } else android.widget.Toast . makeText ( this , "It was necessary to enter login." , Toast.LENGTH_LONG ) . show () ; } 
@ java.lang.Override public void onVideosChosen ( java.util.List < com.kbeanie.multipicker.api.entity.ChosenVideo > list ) { java.util.List < java.lang.String > filePathList = new java.util.ArrayList < java.lang.String > () ; for ( com.kbeanie.multipicker.api.entity.ChosenVideo a_chosen : list ) { java.lang.String temp = a_chosen . toString () ; java.lang.String [] tempList = temp . split ( "," ) ; java.lang.String path = tempList [ 2 ] . substring ( 16 ) ; filePathList . add ( path ) ; android.util.Log . d ( "Path List" , ( "Path List is:" + ( filePathList . toString () ) ) ) ; doMp4Append ( filePathList ) ; } } 
protected java.util.Vector < cg.LotDataProvider > getHeldLots ( int aAccountId , java.lang.String ticker , java.lang.String year ) { java.util.Vector < cg.LotDataProvider > tHeldLots = new java.util.Vector < cg.LotDataProvider > () ; if ( ( _cm ) != null ) { java.sql.Connection tConn = _cm . getConnection () ; if ( tConn != null ) { tHeldLots = _dbi . getLotData ( tConn , aAccountId ) ; _cm . closeConnection ( tConn ) ; } } else {} return tHeldLots ; } 
public void updatePatientVisitsData ( boolean errorOccurred ) { final java.util.List < android.support.v4.app.Fragment > fragments = getSupportFragmentManager () . getFragments () ; for ( final android.support.v4.app.Fragment fragment : fragments ) { this . runOnUiThread ( new java.lang.Runnable () { @ java.lang.Override public void run () { recreateFragmentView ( fragment ) ; } } ) ; } stopLoader ( errorOccurred ) ; } 
private void getEvery10Char ( java.lang.String content , android.util.SparseArray < com.companyname.assignment.models.CharAtPosition > chars , int shift ) { int index = shift - 1 ; if ( ( ( content == null ) || ( index >= ( content . length () ) ) ) || ( index < 0 ) ) { return; } else { chars . put ( shift , new com.companyname.assignment.models.CharAtPosition ( content . charAt ( index ) , index ) ) ; getEvery10Char ( content , chars , ( shift + ( mShift ) ) ) ; } } 
public static void updateExistingEmailMessage ( com.sigmobile.dawebmail.database.User user , com.sigmobile.dawebmail.database.EmailMessage emailMessage , int contentID , java.lang.String fromName , java.lang.String fromAddress , java.lang.String subject , java.lang.String dateInMillis , java.lang.String readUnread , int totalAttachments , boolean important ) { emailMessage.userName = user.username ; emailMessage.contentID = contentID ; emailMessage.fromName = fromName ; emailMessage.fromAddress = fromAddress ; emailMessage.subject = subject ; emailMessage.dateInMillis = dateInMillis ; emailMessage.readUnread = readUnread ; emailMessage.totalAttachments = totalAttachments ; emailMessage.important = important ; emailMessage . save () ; } 
@ java.lang.Override public java.lang.String toString () { java.lang.StringBuffer sb = new java.lang.StringBuffer () ; sb . append ( "MatchSequence: " ) ; for ( int i = 0 ; i < ( matchSeq . size () ) ; i ++ ) { sb . append ( matchSeq . get ( i ) . toString () ) ; } return sb . toString () ; } 
public br.ufc.banco.conta.ContaAbstrata [] listar () { br.ufc.banco.conta.ContaAbstrata [] lista = null ; if ( ( this . contas . size () ) > 0 ) { lista = new br.ufc.banco.conta.ContaAbstrata [ this . contas . size () ] ; for ( int i = 0 ; i < ( this . contas . size () ) ; i ++ ) { lista [ i ] = ( ( br.ufc.banco.conta.ContaAbstrata ) ( this . contas . elementAt ( i ) ) ) ; } } return lista ; } 
@ java.lang.Override public void onResponse ( okhttp3.Call call , okhttp3.Response response ) throws java.io.IOException { if ( c == null ) return; okhttp3.ResponseBody in = response . body () ; java.io.InputStream inputStream = in . byteStream () ; java.io.BufferedInputStream bufferedInputStream = new java.io.BufferedInputStream ( inputStream ) ; final android.graphics.Bitmap bitmap = android.graphics.BitmapFactory . decodeStream ( bufferedInputStream ) ; rehanced.com.simpleetherwallet.utils.TokenIconCache . getInstance ( c ) . put ( c , tokenNamef , new android.graphics.drawable.BitmapDrawable ( c . getResources () , bitmap ) . getBitmap () ) ; if ( lastToken ) callback . onLastIconDownloaded () ; } 
@ java.lang.Override public void loadListShotsByPage ( int filterId , int page ) { mShotsRepository . getListShotsByPage ( page , filterId , new com.wang.dribbble.data.source.ShotsDataSource.LoadListShotsCallback () { @ java.lang.Override public void onListShotsLoaded ( java.util.List < com.wang.dribbble.data.model.Shots > shotsList ) { mView . showListShotsFromPage ( shotsList ) ; } @ java.lang.Override public void onDataNotAvailable () { mView . showLoadFailed ( "Load failed ..." ) ; } } ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/add" , method = org.springframework.web.bind.annotation.RequestMethod.POST , consumes = "application/json" , produces = "application/json" ) @ io.swagger.annotations.ApiOperation ( value = "增加用户接口" , httpMethod = "POST" ) public boolean addUser ( @ org.springframework.web.bind.annotation.RequestParam java.lang.String userName ) { java.text.SimpleDateFormat dateFormat = new java.text.SimpleDateFormat ( "yyyy-MM-dd HH:mm:ss" ) ; java.lang.Long currentTimeMillis = java.lang.System . currentTimeMillis () ; java.util.Map userMap = new java.util.HashMap () ; userMap . put ( "userName" , userName ) ; userMap . put ( "createTime" , dateFormat . format ( currentTimeMillis ) ) ; int resultStatus ; try { resultStatus = sqlSessionTemplate . insert ( "guowang.mapper.InsertUser" , userMap ) ; } catch ( java.lang.Exception e ) { return false ; } return true ; } 
@ java.lang.Override public void doFilter ( javax.servlet.ServletRequest request , javax.servlet.ServletResponse response , javax.servlet.FilterChain chain ) throws java.io.IOException , javax.servlet.ServletException { javax.servlet.http.HttpServletRequest req = ( ( javax.servlet.http.HttpServletRequest ) ( request ) ) ; javax.servlet.http.HttpServletResponse resp = ( ( javax.servlet.http.HttpServletResponse ) ( response ) ) ; req . setCharacterEncoding ( "UTF-8" ) ; resp . setCharacterEncoding ( "UTF-8" ) ; processor ( req , resp ) ; chain . doFilter ( request , response ) ; } 
@ java.lang.Override public boolean showErrorMessage () { boolean hasMsg = super . showErrorMessage () ; if ( hasMsg ) { return true ; } if ( ( ( createNewProjectErrorMsg ) != null ) && ( ! ( createNewProjectErrorMsg . isEmpty () ) ) ) { loginDialog . setErrorMessage ( createNewProjectErrorMsg ) ; return true ; } return false ; } 
private void readImplicitParameters ( java.lang.reflect.Method method , io.swagger.models.Operation operation ) { io.swagger.annotations.ApiImplicitParams implicitParams = method . getAnnotation ( io.swagger.annotations.ApiImplicitParams . class ) ; if ( ( implicitParams != null ) && ( ( implicitParams . value () . length ) > 0 ) ) { for ( io.swagger.annotations.ApiImplicitParam param : implicitParams . value () ) { io.swagger.models.parameters.Parameter p = readImplicitParam ( param , method . getDeclaringClass () ) ; if ( p != null ) { operation . addParameter ( p ) ; } } } } 
protected static void replaceFont ( java.lang.String staticTypefaceFieldName , final android.graphics.Typeface newTypeface ) { try { final java.lang.reflect.Field staticField = android.graphics.Typeface . class . getDeclaredField ( staticTypefaceFieldName ) ; staticField . setAccessible ( true ) ; staticField . set ( null , newTypeface ) ; } catch ( java.lang.NoSuchFieldException e ) { e . printStackTrace () ; } catch ( java.lang.IllegalAccessException e ) { e . printStackTrace () ; } } 
@ java.lang.Override protected void onDestroy () { android.util.Log . d ( "CALL_INTEGRATION" , "Destroy call activity" ) ; cancelPlayer () ; super . onDestroy () ; if ( com.quickblox.videochat.webrtc.QBRTCClient . isInitiated () ) { com.quickblox.videochat.webrtc.QBRTCClient . getInstance () . close ( true ) ; } if ( ( videoChatHelper ) != null ) { videoChatHelper . removeVideoChatHelperListener ( this ) ; videoChatHelper . disposeAllResources () ; videoChatHelper . setClientClosed () ; } } 
public static java.util.List < org.jgap.IChromosome > crossOverPopulation ( java.util.List < org.jgap.Chromosome > listPopulation , java.util.List < org.jgap.Chromosome > list ) throws org.jgap.InvalidConfigurationException { br.unifor.iadapter.genetic.GeneWorkLoad . getConfiguration () . setPopulationSize ( listPopulation . size () ) ; java.util.List < org.jgap.IChromosome > newlist = new java.util.ArrayList < org.jgap.IChromosome > () ; br.unifor.iadapter.genetic.CrossoverOperator cs = new br.unifor.iadapter.genetic.CrossoverOperator ( br.unifor.iadapter.genetic.GeneWorkLoad . getConfiguration () , 1 ) ; newlist = cs . operateBestIndividuals ( listPopulation , list ) ; return newlist ; } 
public org.lenzi.fstore.repository.model.DBNode getNodeWithParentClosure ( org.lenzi.fstore.repository.model.DBNode node ) throws org.lenzi.fstore.repository.exception.DatabaseException { javax.persistence.Query query = null ; try { query = org.lenzi.fstore.repository.tree.AbstractTreeRepository . getEntityManager () . createQuery ( getHqlQueryNodeWithParentClosure () ) ; query . setParameter ( "nodeId" , node . getNodeId () ) ; } catch ( java.lang.IllegalArgumentException e ) { throw new org.lenzi.fstore.repository.exception.DatabaseException ( ( "IllegalArgumentException was thrown. " + ( e . getMessage () ) ) ) ; } org.lenzi.fstore.repository.model.DBNode nodeWithParentClosure = ( ( org.lenzi.fstore.repository.model.DBNode ) ( getSingleResult ( query ) ) ) ; return nodeWithParentClosure ; } 
public void login ( java.lang.String username , java.lang.String password ) { status = nl.gerben_meijer.gerryflap.c1000roosters.C1000.C1000Login.STATUS_LOGGIN_IN ; org.jsoup.Connection.Response response = getSite ( true ) ; if ( response != null ) { java.lang.String out = postData ( getToken ( response ) , username , password ) ; java.lang.System.out . println ( cookies ) ; session = cookies . get ( "pmt_real_session" ) ; status = nl.gerben_meijer.gerryflap.c1000roosters.C1000.C1000Login.STATUS_LOGGED_IN_NO_ID ; } status = nl.gerben_meijer.gerryflap.c1000roosters.C1000.C1000Login.STATUS_LOGGED_OUT ; } 
public android.location.Location getLocation () { android.location.Location location = null ; if ( ( gpsTracker ) == null ) { gpsTracker = new net.walklight.busio.utils.GPSTracker ( context ) ; location = gpsTracker . getLocation () ; } else { location = gpsTracker . getCurrentLocation () ; } return location ; } 
private ca.concordia.inse6260.entities.AcademicRecordEntry hasCourse ( final java.util.List < ca.concordia.inse6260.entities.AcademicRecordEntry > records , final long courseEntryId ) { ca.concordia.inse6260.entities.AcademicRecordEntry existentRecord = null ; ca.concordia.inse6260.entities.Course course = courseEntryDao . findOne ( courseEntryId ) . getCourse () ; for ( ca.concordia.inse6260.entities.AcademicRecordEntry record : records ) { if ( ( ( record . getCourseEntry () ) != null ) && ( record . getCourseEntry () . getCourse () . equals ( course ) ) ) { existentRecord = record ; break; } } return existentRecord ; } 
@ java.lang.Override public void create ( edu.unl.csce361.group4.cookbook.User user ) { java.lang.String sql = "INSERT INTO users (user_name, password, full_name) VALUES (?, ?, ?)" ; dataSource . update ( sql , new java.lang.Object [] { user . getUserName () , user . getPassword () , user . getFullName () } ) ; for ( edu.unl.csce361.group4.cookbook.Recipe favs : user . getFavoriteRecipes () ) { sql = "INSERT INTO favorite_recipes (user_id, recipe_id) VALUES (?, ?)" ; dataSource . update ( sql , new java.lang.Object [] { user . getUserId () , favs . getRecipeId () } ) ; } } 
private void loadFriends () { if ( ( mMyApplication.Friends_Cach ) != null ) { processFinish ( mMyApplication.Friends_Cach ) ; } else { com.seniorproject.sallemapp.helpers.LoadFriendsAsync loadFrinds = new com.seniorproject.sallemapp.helpers.LoadFriendsAsync ( getActivity () . getApplicationContext () , DomainUser.CURRENT_USER . getId () ) ; loadFrinds.delegat = this ; loadFrinds . execute () ; mProgress . setVisibility ( View.VISIBLE ) ; } } 
private java.util.List < com.quickblox.sample.groupchatwebrtc.adapters.OpponentsFromCallAdapter.ViewHolder > getAllOpponentsView () { if ( ( viewHolders ) != null ) { return viewHolders ; } int childCount = recyclerView . getChildCount () ; viewHolders = new com.quickblox.sample.groupchatwebrtc.fragments.ArrayList () ; for ( int i = 0 ; i < childCount ; i ++ ) { android.view.View childView = recyclerView . getChildAt ( i ) ; com.quickblox.sample.groupchatwebrtc.adapters.OpponentsFromCallAdapter.ViewHolder childViewHolder = ( ( com.quickblox.sample.groupchatwebrtc.adapters.OpponentsFromCallAdapter.ViewHolder ) ( recyclerView . getChildViewHolder ( childView ) ) ) ; viewHolders . add ( childViewHolder ) ; } return viewHolders ; } 
public static java.lang.String getWebInfoPath () { java.lang.String os = java.lang.System . getenv ( "OS" ) ; java.lang.String prefix = "" ; if ( ! ( os . toLowerCase () . contains ( "windows" ) ) ) { prefix = "/" ; } return prefix + ( createsh.util.PathUtil . getWebInfPath () ) ; } 
@ org.junit.Test @ org.springframework.transaction.annotation.Transactional @ org.springframework.test.annotation.Rollback ( value = true ) public void testGetRolesQueryPattern ( ) throws ca.uhnresearch.pughlab.tracker.dao.RepositoryException { ca.uhnresearch.pughlab.tracker.dto.Study study = org.easymock.EasyMock . createMock ( ca.uhnresearch.pughlab.tracker.dto.Study . class ) ; org.easymock.EasyMock . expect ( study . getId () ) . andReturn ( 0 ) ; org.easymock.EasyMock . replay ( study ) ; ca.uhnresearch.pughlab.tracker.dao.CaseQuery query = new ca.uhnresearch.pughlab.tracker.dao.CaseQuery () ; query . setPattern ( "DEMO" ) ; java.util.List < ca.uhnresearch.pughlab.tracker.dto.Role > list = authorizationRepository . getStudyRoles ( study , query ) ; junit.framework.Assert . assertNotNull ( list ) ; junit.framework.Assert . assertEquals ( 3 , list . size () ) ; } 
@ java.lang.Override public void onLocationChanged ( android.location.Location location ) { try { currentResult.status = Common.STATUS_ENABLE ; currentResult.time = location . getTime () ; currentResult.speed = ( ( int ) ( ( ( location . getSpeed () ) * 3600 ) / 1000 ) ) ; currentResult.accuracy = location . getAccuracy () ; currentResult.latitude = kupchinskii.ruslan.gpsup.GPS.latitude = location . getLatitude () ; currentResult.longitude = kupchinskii.ruslan.gpsup.GPS.longitude = location . getLongitude () ; kupchinskii.ruslan.gpsup.GPS.lasDate = java.util.Calendar . getInstance () . getTimeInMillis () ; } catch ( java.lang.Exception ex ) {} } 
private java.lang.String createCoreName ( java.lang.String caseName ) { java.text.SimpleDateFormat dateFormat = new java.text.SimpleDateFormat ( "yyyyMMdd_HHmmss" ) ; java.util.Date date = new java.util.Date () ; java.lang.String coreName = ( caseName + "_" ) + ( dateFormat . format ( date ) ) ; return org.sleuthkit.autopsy.keywordsearch.Index . sanitizeCoreName ( coreName ) ; } 
public void startPuzzle () { java.lang.System.out . println ( isSolved ) ; while ( ! ( isSolved ) ) { java.lang.System.out . println ( "P 184" ) ; Action a = UserInterface . promptUserForPuzzle () ; java.lang.System.out . println ( "P 186" ) ; checkSolution ( a ) ; java.lang.System.out . println ( "P 187" ) ; } UserInterface . setGameTextArea ( "Puzzle Solved! Continue Investigating..." ) ; UserInterface . gameButtonsOn ( true ) ; } 
@ net.thucydides.core.annotations.Step public void get_appointment_details_for ( java.lang.String startTime , java.lang.String endTime , java.lang.String serviceName ) { java.util.Optional < java.lang.String > opt = calendarPage . getAppointmentsDetailsFor ( startTime , endTime , serviceName ) ; java.lang.System.out . println ( ( "found appointment with details" + ( opt . get () ) ) ) ; softly . assertThat ( ( ! ( opt . get () . isEmpty () ) ) ) ; } 
public void generateDiagram () { model = new infovis.scatterplot.Model () ; infovis.piechart.PieChart.view = new infovis.piechart.View () ; mouse_controller = new infovis.piechart.MouseController () ; key_controller = new infovis.piechart.KeyboardController () ; infovis.piechart.PieChart.view . addMouseListener ( mouse_controller ) ; infovis.piechart.PieChart.view . addMouseMotionListener ( mouse_controller ) ; infovis.piechart.PieChart.view . addKeyListener ( key_controller ) ; infovis.piechart.PieChart.view . setFocusable ( true ) ; mouse_controller . setModel ( model ) ; mouse_controller . setView ( infovis.piechart.PieChart.view ) ; mouse_controller . setKeyController ( key_controller ) ; key_controller . setView ( infovis.piechart.PieChart.view ) ; } 
@ org.junit.Test public void testGetRow () { java.lang.System.out . println ( "Testing :: UserManager.getRow()" ) ; boolean isInserted = companyInstance . insert ( layer3.dataSource.mapper.UserManagerTest.conn , company ) ; if ( ! isInserted ) java.lang.System.err . println ( "        :: Something whent wrong when creating a company" ) ; insertRow () ; java.lang.System.out . println ( user . toString () ) ; layer2.domain.bean.User expResult = user ; layer2.domain.bean.User result = userInstance . getRow ( layer3.dataSource.mapper.UserManagerTest.conn , user . getUserID () ) ; result . toString () ; assertTrue ( "        :: Retrieved data is not as expected" , expResult . toString () . equals ( result . toString () ) ) ; } 
public static void setAllNotifications ( android.content.Context ctx ) { int [] map = za.co.twinc.everydayhabit.MainActivity . loadHabitMap ( ctx ) ; int i = 0 ; if ( ( za.co.twinc.everydayhabit.MainActivity.alarmReceiver ) == null ) za.co.twinc.everydayhabit.MainActivity.alarmReceiver = new za.co.twinc.everydayhabit.AlarmReceiver () ; while ( i < ( map.length ) ) { za.co.twinc.everydayhabit.MainActivity . setHabitNotification ( ctx , map [ i ] ) ; i ++ ; } za.co.twinc.everydayhabit.MainActivity.alarmReceiver . setBootReceiver ( ctx ) ; } 
public boolean addTower ( tower.Tower tower ) { if ( ( playerCoins ) >= ( tower . getCost () ) ) { boolean worked = board . addTower ( tower ) ; if ( worked ) { this . changeCoins ( ( ( - 1 ) * ( tower . getCost () ) ) ) ; towers . add ( tower ) ; java.lang.System.out . println ( "New tower bought." ) ; return true ; } else { return false ; } } else { return false ; } } 
private boolean checkLangAttribute () { try { org.jsoup.nodes.Element htmlTag = doc . getElementsByTag ( "html" ) . first () ; java.lang.String lang = htmlTag . attr ( "lang" ) ; if ( ( lang != null ) && ( ! ( lang . equals ( "" ) ) ) ) { return ( lang . startsWith ( "en" ) ) || ( lang . equals ( "mul" ) ) ; } else { return true ; } } catch ( java.lang.NullPointerException e ) { return true ; } } 
@ java.lang.Override public void gotPacket ( org.pcap4j.packet.Packet packet ) { if ( packet . contains ( org.pcap4j.packet.TcpPacket . class ) ) { ru.org.sarg.Dump.Conversation c = ru.org.sarg.Dump . getConversation ( packet . get ( org.pcap4j.packet.TcpPacket . class ) . getHeader () . getSrcPort () ) ; c . add ( packet ) ; c . printLast () ; if ( c . isFinished () ) { c . printStats () ; } } } 
public boolean createSynchronizedMotorEndpoint () { if ( ( syncedMotorGroup ) == null ) { syncedMotorGroup = new mindroid.common.ev3.endpoints.motors.ev3.synchronization.SynchronizedRegulatedMotorGroup ( this ) ; } if ( ( syncedMotorEndpoint ) == null ) { mindroid.common.ev3.endpoints.SyncedMotorGroupEndpoint syncedMotorEndpoint = new mindroid.common.ev3.endpoints.SyncedMotorGroupEndpoint ( syncedMotorGroup ) ; mindroid.common.ev3.server.BrickServerImpl brickServer = new mindroid.common.ev3.server.BrickServerImpl ( org.mindroid.common.messages.NetworkPortConfig.SYNCED_MOTOR_GROUP ) ; brickServer . addListener ( syncedMotorEndpoint ) ; } return true ; } 
private < P extends com.einzig.ipst2.portal.PortalSubmission > P getPortal ( java.lang.String table , java.lang.String pictureURL , java.lang.String portalName , com.einzig.ipst2.database.PortalBuilder < P > builder ) { java.util.Vector < P > portals = getAll ( table , ( ( com.einzig.ipst2.database.DatabaseInterface.KEY_PICTURE_URL ) + " = ?" ) , new java.lang.String [] { pictureURL } , builder ) ; for ( P portal : portals ) { if ( portal . getName () . equals ( portalName ) ) return portal ; } return null ; } 
public thredds.client.catalog.builder.Catalog buildFromLocation ( java.lang.String location , java.net.URI baseURI ) throws java.io.IOException { location = ucar.unidata.util.StringUtil2 . replace ( location , "\\" , "/" ) ; if ( baseURI == null ) { try { baseURI = new java.net.URI ( location ) ; } catch ( java.net.URISyntaxException e ) { errlog . format ( "Bad location = '%s' err='%s'%n" , location , e . getMessage () ) ; fatalError = true ; return null ; } } this . baseURI = baseURI ; readXML ( location ) ; return makeCatalog () ; } 
void showSuggestions ( final java.lang.String searchTerm ) { currentEnteredText = searchTerm ; if ( ( ! ( queryRunning ) ) && ( citiesDatabaseHandler . isDatabaseOpen () ) ) { queryRunning = true ; citiesDatabaseHandler . getSuggestions ( searchTerm ) ; } else { final android.os.Handler handler = new android.os.Handler () ; handler . postDelayed ( new java.lang.Runnable () { @ java.lang.Override public void run () { showSuggestions ( currentEnteredText ) ; } } , 200 ) ; } } 
public void offer ( org.voltdb.messaging.InitiateResponseMessage msg , org.voltcore.messaging.Mailbox mailbox , long handle ) { m_lastSafeTruncationHandle = msg . getSpHandle () ; m_mailbox = mailbox ; if ( ( handle >= ( m_lastSafeTruncationHandle ) ) || ( handle == ( java.lang.Long.MIN_VALUE ) ) ) { m_mailbox . send ( msg . getInitiatorHSId () , msg ) ; return; } m_responseMessageQueue . add ( new org.voltdb.iv2.ShortCircuitReadLog.Item ( msg ) ) ; return; } 
public void bundleChanged ( pl.net.bluesoft.rnd.processtool.plugins.osgi.BundleEvent event ) { try { int state = event . getType () ; if ( ( state == ( BundleEvent.STARTED ) ) || ( state == ( BundleEvent.STOPPED ) ) ) { processBundleExtensions ( event . getBundle () , event . getBundle () . getState () , registry . getProcessToolContextFactory () ) ; } } catch ( java.lang.ClassNotFoundException e ) { pl.net.bluesoft.rnd.processtool.plugins.osgi.PluginHelper.LOGGER . log ( java.util.logging.Level.SEVERE , "Exception processing bundle" , e ) ; throw new java.lang.RuntimeException ( e ) ; } } 
@ java.lang.Override public void onUpgrade ( android.database.sqlite.SQLiteDatabase db , int oldVersion , int newVersion ) { android.util.Log . w ( com.giao.ordersystem.TableDAO . class . getName () , "Upgrading database from old to new version..." ) ; db . execSQL ( ( "DROP TABLE IF EXISTs " + ( com.giao.ordersystem.DatabaseHelper.TABLE_TABLES ) ) ) ; db . execSQL ( ( "DROP TABLE IF EXISTs " + ( com.giao.ordersystem.DatabaseHelper.TABLE_MENU ) ) ) ; db . execSQL ( ( "DROP TABLE IF EXISTs " + ( com.giao.ordersystem.DatabaseHelper.TABLE_CATEGORY ) ) ) ; db . execSQL ( ( "DROP TABLE IF EXISTs " + ( com.giao.ordersystem.DatabaseHelper.TABLE_ORDER ) ) ) ; db . execSQL ( ( "DROP TABLE IF EXISTs " + ( com.giao.ordersystem.DatabaseHelper.TABLE_ORDERDETAIL ) ) ) ; onCreate ( db ) ; } 
public net.minecraft.item.ItemStack onEaten ( net.minecraft.item.ItemStack stack , net.minecraft.world.World world , net.minecraft.entity.player.EntityPlayer player ) { player . attackEntityFrom ( DamageSource.starve , 1.5F ) ; if ( ! ( world.isRemote ) ) player . performHurtAnimation () ; player . addPotionEffect ( new net.minecraft.potion.PotionEffect ( Potion.moveSlowdown.id , 600 , 0 ) ) ; return super . onEaten ( stack , world , player ) ; } 
@ org.junit.Test public void testValuesParametrized () { java.util.Map < java.lang.Integer , java.lang.Integer > map = createResizedDS () ; java.util.Collection < java.lang.Integer > values = map . values () ; org.junit.Assert . assertNotEquals ( "You are likely running an unchanged JVM" , "{0, 2, 3, 4, 5, 6, 7, 8, 9}" , values . toString () ) ; assertEqualstUnordered ( "The strings are not a permuation of each other" , "{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}" , values . toString () ) ; java.lang.String str = values . toString () ; parameterized ( map , values , str ) ; } 
@ java.lang.Override public boolean equals ( java.lang.Object o ) { if ( ! ( this . getClass () . equals ( o . getClass () ) ) ) return false ; core.board.Case c = ( ( core.board.Case ) ( o ) ) ; return ( ( ( this . x ) == ( c.x ) ) && ( ( this . y ) == ( c.y ) ) ) && ( ( this . board ) == ( c.board ) ) ; } 
public static void expandAll ( src.GameTree gt , int depth ) { java.lang.System.out . println ( ( "hi" + depth ) ) ; java.util.ArrayList < src.GameTree > branches = src.FindBestMove . expand ( gt ) ; if ( ( gt . getDepth () ) == ( depth - 1 ) ) {} else { for ( src.GameTree b : branches ) { src.FindBestMove . expandAll ( b , depth ) ; } } } 
private void addFieldID ( int tenantId , java.lang.String path , java.lang.String rawContent , org.apache.solr.common.SolrInputDocument solrInputDocument ) { java.lang.String id = generateId ( tenantId , path ) ; if ( id == null ) { id = ( org.wso2.carbon.registry.indexing.IndexingConstants.FIELD_ID ) + ( rawContent . hashCode () ) ; } solrInputDocument . addField ( IndexingConstants.FIELD_ID , id , 1.0F ) ; } 
private org.apache.ignite.internal.processors.odbc.SqlListenerConnectionContext prepareContext ( org.apache.ignite.internal.processors.odbc.SqlListenerProtocolVersion ver , org.apache.ignite.internal.binary.BinaryReaderExImpl reader ) { byte clientType = reader . readByte () ; switch ( clientType ) { case org.apache.ignite.internal.processors.odbc.SqlListenerNioListener.ODBC_CLIENT : return new org.apache.ignite.internal.processors.odbc.odbc.OdbcConnectionContext ( ctx , busyLock , maxCursors ) ; case org.apache.ignite.internal.processors.odbc.SqlListenerNioListener.JDBC_CLIENT : return new org.apache.ignite.internal.processors.odbc.jdbc.JdbcConnectionContext ( ctx , busyLock , maxCursors ) ; default: throw new org.apache.ignite.IgniteException ( ( "Unknown client type: " + clientType ) ) ; } } 
@ java.lang.Override public boolean compareAndSwapValue ( int expected , int value ) { return withLock ( ( ) - > { if ( ( bytes . parseLong ( ( ( offset ) + ( net.openhft.chronicle.wire.IntTextReference.VALUE ) ) ) ) == expected ) { bytes . append ( ( ( offset ) + ( net.openhft.chronicle.wire.IntTextReference.VALUE ) ) , value , 10 ) ; return true ; } return false ; } ) ; } 
private void run ( java.util.Scanner sc ) throws java.lang.InterruptedException { while ( ! ( isWon ) ) { for ( cluedo.Player player : players ) { if ( noMorePlayers () ) { java.lang.System.out . println ( "No more players - everybody loses!" ) ; return; } if ( player . isEliminated () ) { continue; } getHudInput ( player , sc ) ; } } } 
public java.util.List < java.util.LinkedList < java.lang.Integer > > pathSum ( TreeNode root , int sum ) { java.util.ArrayList < java.util.LinkedList < java.lang.Integer > > res = new java.util.ArrayList < java.util.LinkedList < java.lang.Integer > > () ; java.util.LinkedList < java.lang.Integer > cur = new java.util.LinkedList < java.lang.Integer > () ; pathSum ( root , sum , cur , res ) ; return res ; } 
public static java.util.Hashtable < java.lang.String , java.lang.Integer > getColumnNamesFromSheet ( java.lang.String dataSheet ) { java.lang.String [] columnNames = common.DataDriver . getDataColumns ( dataSheet ) ; int numDataColumns = columnNames.length ; for ( int hashIndex = 0 ; hashIndex < numDataColumns ; hashIndex ++ ) { common.DataDriver.columnNamesHash . put ( columnNames [ hashIndex ] , hashIndex ) ; } return common.DataDriver.columnNamesHash ; } 
@ java.lang.Override public void initialize ( java.util.List < org.ggp.base.util.gdl.grammar.Gdl > description ) { try { propNet = org.ggp.base.util.propnet.factory.OptimizingPropNetFactory . create ( description ) ; roles = propNet . getRoles () ; ordering = getOrdering () ; } catch ( java.lang.InterruptedException e ) { throw new java.lang.RuntimeException ( e ) ; } } 
@ org.junit.Test public void testCanMoveTo () { chess.Piece piece = new chess.Piece ( "P" , 'a' , 2 ) ; assertEquals ( true , piece . canMoveTo ( 'a' , 3 , false ) ) ; assertEquals ( false , piece . canMoveTo ( 'e' , 4 , false ) ) ; } 
public org.egov.domain.model.Tenant fetchTenantById ( java.lang.String tenantId ) { final org.egov.persistence.dto.RequestInfoBody requestInfoBody = new org.egov.persistence.dto.RequestInfoBody ( org.egov.common.contract.request.RequestInfo . builder () . build () ) ; log . info ( ( "Fetching tenant with id" + tenantId ) ) ; org.egov.persistence.dto.TenantResponse tenantResponse = restTemplate . postForObject ( tenantServiceUrl , requestInfoBody , org.egov.persistence.dto.TenantResponse . class , tenantId ) ; return tenantResponse . toDomainTenant () ; } 
public void read ( java.net.URL url , ika.geoimport.DataReceiver mapDataReceiver , boolean newOrSameThread ) { if ( ( this . progressIndicator ) != null ) this . progressIndicator . start () ; this . threadParams . url = url ; this . threadParams . dataReceiver = mapDataReceiver ; if ( newOrSameThread == ( ika.geoimport.GeoImporter.NEW_THREAD ) ) this . start () ; else this . run () ; } 
public void waitUntil ( long x ) { nachos.threads.Machine . interrupt () . disable () ; if ( x <= 0 ) { return; } long wakeTime = ( nachos.threads.Machine . timer () . getTime () ) + x ; nachos.threads.KThread . currentThread () . waitTime = wakeTime ; java.lang.System.out . println ( ( ( nachos.threads.KThread . currentThread () . waitTime ) - x ) ) ; KThread.waitQ . push ( nachos.threads.KThread . currentThread () ) ; nachos.threads.KThread . sleep () ; nachos.threads.Machine . interrupt () . enable () ; } 
private boolean isValidHex ( java.lang.String s , int len ) { return ( ( ! ( ( s == null ) || ( s . isEmpty () ) ) ) && ( ( ( s . length () ) / 2 ) == len ) ) && ( s . matches ( "[0-9A-F]+" ) ) ; } 
@ java.lang.Override public boolean canTerminate () { if ( ( subLaunches . size () ) == 0 ) { return false ; } for ( org.eclipse.debug.core.ILaunch launch : subLaunches . keySet () ) { if ( launch . canTerminate () ) { return true ; } } return false ; } 
@ org.junit.Test public void generateRelativeResourcePathShouldNotContainFirstSlash () { final java.lang.String pathname = "/home/target/some_folder/" ; final java.lang.String resourceRelativePath = "resource/toto.lst" ; final java.lang.String generatedRelativeResourcePath = processAPI . generateRelativeResourcePath ( new java.io.File ( pathname ) , new java.io.File ( ( ( pathname + ( java.io.File.separator ) ) + resourceRelativePath ) ) ) ; org.assertj.core.api.Assertions . assertThat ( generatedRelativeResourcePath ) . isEqualTo ( resourceRelativePath ) ; } 
public void addChild ( toothpick.Scope child ) { if ( child == null ) { throw new java.lang.IllegalArgumentException ( "Child must be non null." ) ; } if ( ( child.parentScope ) == ( this ) ) { return; } if ( ( child.parentScope ) != null ) { throw new java.lang.IllegalStateException ( java.lang.String . format ( "Injector %s already has a parent: %s" , child , child.parentScope ) ) ; } childrenScopes . add ( child ) ; child.parentScope = this ; child.parentScopes = new java.util.ArrayList <> () ; child.parentScopes . add ( this ) ; child.parentScopes . addAll ( parentScopes ) ; } 
public void embark () { if ( ( state ) == ( Train.TrainState.stopped ) ) for ( Passenger passenger : new java.util.ArrayList ( currentStation.passengers ) ) { if ( passenger.destination . equals ( getTrainDestination () ) ) { for ( Seat seat : seats ) { if ( ! ( seat . isOccuped () ) ) { seat.passenger = passenger ; currentStation.passengers . remove ( passenger ) ; } } start = isReadyToDepart () ; } } } 
public void addDatasetByID ( thredds.catalog.InvDatasetImpl ds ) { if ( ds . getID () . startsWith ( "null" ) ) java.lang.System.out . printf ( "HEY addDatasetByID %s%n" , ds . getID () ) ; if ( ( ds . getID () ) != null ) dsHash . put ( ds . getID () , ds ) ; } 
private static java.lang.String globalImageLinksToLocal ( java.lang.String pageContent , java.util.ArrayList < java.lang.String > globalNames , java.lang.String current_path ) { for ( java.lang.String s : globalNames ) { pageContent = pageContent . replaceAll ( ( ( "src=\"" + s ) + "\"" ) , ( ( ( ( "src=\"" + current_path ) + "/files/" ) + ( UrlDownloader . getLastPartOfFileName ( s ) ) ) + "\"" ) ) ; java.lang.System.out . printf ( "replaced %s to %s\n" , s , UrlDownloader . getLastPartOfFileName ( s ) ) ; } return pageContent ; } 
@ java.lang.Override public void run () { while ( ! ( java.lang.Thread . interrupted () ) ) { try { message = in . readUTF () ; Client.console . log ( ( "Got command " + ( message ) ) ) ; throwCommand () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; ru.universum.Client.Client . execute ( new java.lang.String [] { "connection" } ) ; interrupt () ; } } } 
public static java.lang.String left ( java.lang.String s , int length ) { if ( length == 0 ) return "" ; else if ( length > 0 ) return s . substring ( 0 , length ) ; else { return s . substring ( 0 , ( ( s . length () ) + length ) ) ; } } 
@ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , final android.view.View view , int position , long id ) { android.content.Intent intent = new android.content.Intent () ; if ( position == 3 ) confirmRemove () ; else { setResult ( position , intent ) ; finish () ; } } 
@ java.lang.Override public void run () { club.mytree.VkClient vk = new club.mytree.VkClient () ; java.lang.String idis = vk . getUsersInGroup ( Main.GROUP_NAME ) ; java.lang.System.out . println ( idis ) ; int [] users = club.mytree.VkClient . parseUsersInGroup ( idis ) ; java.lang.String online = vk . isUsersOnline ( users ) ; java.lang.System.out . println ( online ) ; java.util.List < club.mytree.UserOnline > uo = club.mytree.VkClient . parseOnlineUsers ( online ) ; club.mytree.SQLiteConnection sql = new club.mytree.SQLiteConnection ( Main.GROUP_NAME ) ; sql . update ( uo ) ; } 
private java.lang.String parseInterpretation ( java.lang.String value ) { java.lang.String interpretation = "" ; switch ( value ) { case "pathogenic" : interpretation = "Pathogenic" ; break; case "likely_pathogenic" : interpretation = "Likely Pathogenic" ; break; case "variant_u_s" : interpretation = "Variant of Unknown Significance" ; break; case "likely_benign" : interpretation = "Likely Benign" ; break; case "benign" : interpretation = "Benign" ; break; default: interpretation = "Variant of Unknown Significance" ; break; } return interpretation ; } 
@ java.lang.Override public void run () { try { if ( m_hasVersion2FormatChunks ) { readChunksV2 () ; } else { readChunks () ; } } finally { synchronized ( this ) { m_hasMoreChunks = false ; this . notifyAll () ; try { m_saveFile . close () ; } catch ( java.io.IOException e ) {} } } } 
@ java.lang.Override public void postProcessBeanDefinitionRegistry ( org.springframework.beans.factory.support.BeanDefinitionRegistry registry ) throws org.springframework.beans.BeansException { if ( ! ( registry . containsBeanDefinition ( SpringConstants.HTTP_TRANSPORT ) ) ) { registerBeanDefinition ( registry , SpringConstants.HTTP_TRANSPORT , org.wso2.msf4j.spring.transport.HTTPTransportConfig . class ) ; } if ( ! ( registry . containsBeanDefinition ( SpringConstants.HTTPS_TRANSPORT ) ) ) { registerBeanDefinition ( registry , SpringConstants.HTTP_TRANSPORT , org.wso2.msf4j.spring.transport.HTTPSTransportConfig . class ) ; } } 
public void drawDebugBoundingBoxes ( java.awt.Graphics g ) { if ( ( npcToThieve . valid () ) && ( npcToThieve . inViewport () ) ) { npcToThieve . bounds ( npcBounds [ 0 ] , npcBounds [ 1 ] , npcBounds [ 2 ] , npcBounds [ 3 ] , npcBounds [ 4 ] , npcBounds [ 5 ] ) ; for ( java.awt.Polygon poly : npcToThieve . triangles () ) { g . drawPolygon ( poly ) ; } } } 
@ java.lang.Override protected void setResource ( fr.nihilus.music.glide.PaletteBitmap resource ) { super . view . setImageBitmap ( resource . getBitmap () ) ; android.support.v7.graphics.Palette.Swatch swatch = resource . getPalette () . getDominantSwatch () ; int accentColor = resource . getPalette () . getVibrantColor ( mDefaultColors [ 1 ] ) ; if ( swatch != null ) { holder . setColors ( swatch . getRgb () , accentColor , swatch . getTitleTextColor () , swatch . getBodyTextColor () ) ; } } 
@ java.lang.Override public void run () { if ( ( usersList . size () ) > 0 ) { usersList . remove ( ( ( usersList . size () ) - 1 ) ) ; validateRateLimit ( searchView . getQuery () . toString () , 1 ) ; } } 
private void sendPartCommand ( org.ukiuni.irc4j.server.ClientConnection partConnection ) throws java.io.IOException { java.util.List < org.ukiuni.irc4j.server.ClientConnection > sendClients = new java.util.ArrayList < org.ukiuni.irc4j.server.ClientConnection > ( joinedConnectionList ) ; for ( org.ukiuni.irc4j.server.ClientConnection clientConnection : sendClients ) { try { clientConnection . sendPartCommand ( partConnection , this ) ; } catch ( java.lang.Exception e ) { ircServer . removeConnection ( clientConnection . getNickName () ) ; org.ukiuni.irc4j.Log . log ( e ) ; } } } 
@ java.lang.Override public void onCreate () { super . onCreate () ; android.util.Log . i ( com.playposse.peertopeeroxygen.android.firebase.OxygenFirebaseMessagingService.LOG_CAT , "OxygenFirebaseMessagingService.onCreate is called" ) ; android.content.Intent intent = new android.content.Intent ( this , com.playposse.peertopeeroxygen.android.data.DataService . class ) ; dataServiceConnection = new com.playposse.peertopeeroxygen.android.data.DataServiceConnection ( new com.playposse.peertopeeroxygen.android.firebase.OxygenFirebaseMessagingService.EmptyDataReceivedCallback () , false ) ; bindService ( intent , dataServiceConnection , Context.BIND_AUTO_CREATE ) ; com.google.firebase.messaging.FirebaseMessaging . getInstance () . subscribeToTopic ( com.playposse.peertopeeroxygen.android.firebase.OxygenFirebaseMessagingService.ALL_DEVICES_TOPIC ) ; } 
private static java.util.List < onefengma.demo.server.model.metaData.City > initCities () { if ( ( onefengma.demo.server.config.MetaDataHelper.CITIES ) != null ) { return onefengma.demo.server.config.MetaDataHelper.CITIES ; } try { java.lang.String cityFiles = org.apache.commons.io.FileUtils . readFileToString ( new java.io.File ( ( ( onefengma.demo.server.config.Config . getBaseMetaPath () ) + "citys.json" ) ) , "utf-8" ) ; java.util.List < onefengma.demo.server.model.metaData.City > cities = com.alibaba.fastjson.JSON . parseArray ( cityFiles , onefengma.demo.server.model.metaData.City . class ) ; return cities ; } catch ( java.lang.Exception e ) { onefengma.demo.server.core.LogUtils . e ( e , "error when load cities" ) ; return java.util.Arrays . asList () ; } } 
private static boolean isPdfIntent ( android.content.Intent intent ) { if ( intent == null ) return false ; java.lang.String filename = intent . getData () . getLastPathSegment () ; return ( ( filename != null ) && ( filename . endsWith ( org.chromium.chrome.browser.externalnav.ExternalNavigationDelegateImpl.PDF_SUFFIX ) ) ) || ( org.chromium.chrome.browser.externalnav.ExternalNavigationDelegateImpl.PDF_MIME . equals ( intent . getType () ) ) ; } 
@ java.lang.Override public void onRightCardExit ( java.lang.Object dataObject ) { if ( ( list . size () ) == 0 ) android.widget.Toast . makeText ( this , "no more users!" , Toast.LENGTH_LONG ) . show () ; else { com.bnutalk.ui.AddContactsActivity . makeToast ( this , "like" ) ; new com.bnutalk.server.AHttpAddContacts ( list , uid , handler , helper ) . rightOperation ( cuid ) ; } } 
@ java.lang.Override public void onSuccess ( java.util.Map < java.lang.String , java.lang.String > result ) { if ( null != result ) { org.instantplaces.purewidgets.client.application.PublicDisplayApplication.parameters = result ; for ( java.lang.String key : result . keySet () ) { org.instantplaces.purewidgets.shared.Log . debug ( org.instantplaces.purewidgets.client.application.PublicDisplayApplication . class . getName () , ( ( ( "Loaded from remote datastore: " + key ) + ": " ) + ( result . get ( key ) ) ) ) ; } } org.instantplaces.purewidgets.client.application.PublicDisplayApplication.listener . onApplicationLoaded () ; } 
public void mouseClicked ( java.awt.event.MouseEvent e ) { if ( ( e . getClickCount () ) == 1 ) { int index = availablePluginsList . locationToIndex ( e . getPoint () ) ; if ( index > ( - 1 ) ) { java.lang.String pluginName = ( ( java.lang.String ) ( availablePluginsList . getSelectedValue () ) ) ; availableSelected = pluginName ; java.lang.String pluginNameFixed = activeSelected . replaceAll ( "_\\d*$" , "" ) ; java.lang.Class < ? > clazz = plugins . get ( pluginNameFixed ) ; updateDescriptionTextInGui ( clazz ) ; } } } 
protected static int numberSolutions ( java.lang.String dir ) { java.io.File out = new java.io.File ( ( ( dir + ( java.io.File.separator ) ) + "src" ) ) ; org.junit.Assert . assertTrue ( ( ( out . listFiles () . length ) > 1 ) ) ; int cantSol = 0 ; for ( java.io.File sol : out . listFiles () ) { cantSol += ( sol . getName () . startsWith ( "variant-" ) ) ? 1 : 0 ; } return cantSol ; } 
public int incrementClaimCounter () { int mostRecentId ; int newId ; android.content.SharedPreferences counterFile ; android.content.SharedPreferences.Editor editor ; counterFile = this . context . getSharedPreferences ( "claimCounter" , 0 ) ; mostRecentId = counterFile . getInt ( "claimCount" , 0 ) ; if ( mostRecentId == 0 ) { newId = 0 ; } else { newId = mostRecentId + 1 ; } editor = counterFile . edit () ; editor . putInt ( "claimCount" , newId ) ; editor . commit () ; return newId ; } 
@ java.lang.Override public void onTextChanged ( java.lang.CharSequence charSequence , int i , int i1 , int i2 ) { float storeCredit = store_credit . getValueFloat () ; if ( storeCredit > ( mOrderHistoryListController . getOrder () . getMaxStoreCreditRefund () ) ) { store_credit . setText ( com.magestore.app.util.ConfigUtil . formatNumber ( com.magestore.app.util.ConfigUtil . convertToPrice ( order . getMaxStoreCreditRefund () ) ) ) ; order . setStoreCreditRefund ( order . getMaxStoreCreditRefund () ) ; } else { order . setStoreCreditRefund ( storeCredit ) ; } } 
public void run () { active_entities.Coach.State state = active_entities.Coach.State.WAIT_FOR_REFEREE_COMMAND ; while ( true ) { switch ( state ) { case WAIT_FOR_REFEREE_COMMAND : this . contestants_bench . callContestants () ; state = active_entities.Coach.State.ASSEMBLE_TEAM ; break; case ASSEMBLE_TEAM : this . referee_site . informReferee () ; state = active_entities.Coach.State.WATCH_TRIAL ; break; case WATCH_TRIAL : this . referee_site . reviewNotes () ; state = active_entities.Coach.State.WAIT_FOR_REFEREE_COMMAND ; break; default: state = active_entities.Coach.State.WAIT_FOR_REFEREE_COMMAND ; break; } } } 
private void addDiscardedDataPoints ( final javafx.scene.chart.XYChart.Series < java.lang.Number , java.lang.Number > discardedDataSeries ) { int count = 0 ; for ( int index : discardedIndices ) { javafx.scene.chart.XYChart.Data < java.lang.Number , java.lang.Number > dataPoint = new javafx.scene.chart.XYChart.Data < java.lang.Number , java.lang.Number > ( discardedCoordinates [ 0 ] [ count ] , discardedCoordinates [ 1 ] [ count ] ) ; dataPoint . setExtraValue ( index ) ; discardedDataSeries . getData () . add ( dataPoint ) ; count ++ ; } } 
@ java.lang.Override public long getBits ( int position , int length ) { if ( position < 0 ) throw new java.lang.IllegalArgumentException () ; if ( ( position + length ) > 64 ) throw new java.lang.IllegalArgumentException () ; switch ( length ) { case 0 : return 0 ; case 64 : return bits ; default: return ( bits ) & ( ~ ( ( - 1L ) < < length ) ) ; } } 
@ java.lang.Override public void run () { long now = java.lang.System . currentTimeMillis () ; stats.runTime = now - ( stats.startTime ) ; if ( ( ( maxRunTime ) > 0 ) && ( ( stats.runTime ) > ( maxRunTime ) ) ) { runnable . notifyTimeout () ; return; } com.bryllyant.kona.util.KSystemUtil . sleep ( 1000L ) ; watch () ; } 
public void center () { setPosition ( ( ( game.Game . getPlayer () . getX () ) - ( ( Game.SCREEN_WIDTH ) / 2 ) ) , ( ( game.Game . getPlayer () . getY () ) - ( ( Game.SCREEN_HEIGHT ) / 2 ) ) ) ; } 
public void addPossibleMovesTo ( com.github.aedge90.nmm.MoveNode parent , com.github.aedge90.nmm.Player player , com.github.aedge90.nmm.GameBoard gameBoard ) { if ( ( parent . getChildren () . size () ) == 0 ) { java.util.LinkedList < com.github.aedge90.nmm.Move > moves = gameBoard . possibleMoves ( player ) ; for ( com.github.aedge90.nmm.Move move : moves ) { parent . addChild ( new com.github.aedge90.nmm.MoveNode ( move ) ) ; } } } 
public static void setBoard () { for ( int i = 0 ; i < ( GameBase.pitNum ) ; i ++ ) { GameBase.board [ i ] = GameBase.stoneNum ; GameBase.board [ ( ( 2 * ( GameBase.pitNum ) ) - i ) ] = GameBase.stoneNum ; } java.lang.System.out . println ( GameBase.board [ ( 2 * ( GameBase.pitNum ) ) ] ) ; GameBase.board [ GameBase.pitNum ] = 0 ; GameBase.board [ ( ( 2 * ( GameBase.pitNum ) ) + 1 ) ] = 0 ; } 
private void stopTimer () { android.util.Log . i ( LOG_TAG , "starting the timer in service" ) ; service . startTimer ( cookTime ) ; timerRunning = true ; incTimeButton . setEnabled ( false ) ; decTimeButton . setEnabled ( false ) ; button . setText ( getString ( R.string.stop ) ) ; resetButton . setEnabled ( false ) ; } 
private static java.lang.String dump ( java.util.List < com.slang.utils.cmdline.CMDLine.Option > options , boolean defaultsOnly ) { java.lang.String strBuild = "" ; for ( com.slang.utils.cmdline.CMDLine.Option option : options ) { if ( defaultsOnly ) { if ( option.isDefault ) strBuild += ( option . toString () ) + "\n" ; else continue; } else { strBuild += ( option . toString () ) + "\n" ; } } return strBuild ; } 
@ java.lang.Override public boolean equals ( java.lang.Object object ) { if ( ! ( object instanceof it.cnr.istc.sponsor.db.UserEntity ) ) { return false ; } it.cnr.istc.sponsor.db.UserEntity other = ( ( it.cnr.istc.sponsor.db.UserEntity ) ( object ) ) ; if ( ( ( ( this . id ) == null ) && ( ( other.id ) != null ) ) || ( ( ( this . id ) != null ) && ( ! ( this . id . equals ( other.id ) ) ) ) ) { return false ; } return true ; } 
private double getNormalizedTaskDisplacement ( us.ihmc.manipulation.planning.rrt.wholebodyplanning.TaskNode nodeOne , us.ihmc.manipulation.planning.rrt.wholebodyplanning.TaskNode nodeTwo ) { double squaredDisplacement = 0 ; for ( int i = 1 ; i < ( rootNode . getDimensionOfNodeData () ) ; i ++ ) { double nodeOneValue = nodeOne . getNormalizedNodeData ( i ) ; double nodeTwoValue = nodeTwo . getNormalizedNodeData ( i ) ; squaredDisplacement = ( nodeOneValue - nodeTwoValue ) * ( nodeOneValue - nodeTwoValue ) ; } return java.lang.Math . sqrt ( squaredDisplacement ) ; } 
@ java.lang.Override public void onMessageReceived ( com.google.android.gms.wearable.MessageEvent messageEvent ) { super . onMessageReceived ( messageEvent ) ; if ( "/KEEPMESAFE" . equals ( messageEvent . getPath () ) ) { android.util.Log . d ( "myTag" , "Message received from Wearable" ) ; android.content.Intent intent = new android.content.Intent ( "my-event" ) ; intent . putExtra ( "message" , "data" ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( this ) . sendBroadcast ( intent ) ; } } 
public java.lang.Integer addCategory ( com.nisum.portal.data.domain.Categories category ) { com.nisum.portal.data.dao.impl.CategoriesDAOImpl.logger . info ( "CategoriesDAOImpl :: addCategories" ) ; java.lang.Integer status ; com.nisum.portal.data.domain.Categories categories = categoriesRepository . findByCategoryName ( category . getCategoryName () ) ; if ( categories == null ) { com.nisum.portal.data.domain.Categories savedCategory = categoriesRepository . save ( category ) ; if ( savedCategory == null ) { status = 1 ; } else { status = 2 ; } } else { status = 0 ; } return status ; } 
public void clear ( org.kutsuki.akanana.shoe.Hand hand ) { hand . clear () ; org.junit.Assert . assertEquals ( "Unexpected Size" , hand . size () , 0 ) ; org.junit.Assert . assertEquals ( "Unexpected Showing Rank" , hand . showingRank () , 0 ) ; org.junit.Assert . assertEquals ( "Unexpected Soft" , hand . getSoft () , 0 ) ; org.junit.Assert . assertEquals ( "Unexpected String" , hand . toString () , "" ) ; org.junit.Assert . assertEquals ( "Unexpected Value" , hand . getValue () , 0 ) ; } 
@ java.lang.Override public void onResume () { super . onResume () ; log ( "on resume" ) ; if ( NfcAdapter.ACTION_NDEF_DISCOVERED . equals ( getIntent () . getAction () ) ) { log ( "being process intent" ) ; processIntent ( getIntent () ) ; } else { log ( "resume was not due to nfc" ) ; } long prev_id = getLastEventId ( getContentResolver () ) ; log ( ( "retrieved id is " + prev_id ) ) ; if ( prev_id == ( prefs . getKey ( prefs.EVENT_KEY ) ) ) { com.krkeco.dateit.widget.WidgetProvider . setText ( this . getApplicationContext () ) ; } } 
private void withDriverAndFlight ( java.util.function.BiConsumer < com.lightbend.lagom.javadsl.testkit.PersistentEntityTestDriver < less.stupid.flights.impl.FlightCommand , less.stupid.flights.impl.FlightEvent , less.stupid.flights.impl.FlightState > , com.lightbend.lagom.javadsl.testkit.PersistentEntityTestDriver.Outcome < less.stupid.flights.impl.FlightEvent , less.stupid.flights.impl.FlightState > > block ) { withDriver ( ( driver ) - > block . accept ( driver , driver . run ( new less.stupid.flights.impl.FlightCommand.AddFlight ( less.stupid.flights.impl.FlightEntityTest.callsign , less.stupid.flights.impl.FlightEntityTest.equipment , less.stupid.flights.impl.FlightEntityTest.departure , less.stupid.flights.impl.FlightEntityTest.arrival ) ) ) ) ; } 
public static final int getSignedInteger ( int o1 , int o2 , int o3 , int o4 ) { return ( ( ( ( o1 & 255 ) < < 24 ) | ( ( o2 & 255 ) < < 16 ) ) | ( ( o3 & 255 ) < < 8 ) ) | ( o1 & 255 ) ; } 
@ java.lang.Override public void mouseReleased ( java.awt.event.MouseEvent arg0 ) { java.lang.String filename = "" ; MazeGenerator.Maze tempMaze = new MazeGenerator.Maze () ; tempMaze . setTitle ( inpMazeTitle . getText () ) ; tempMaze . setGridSize ( sldGridSize . getValue () ) ; tempMaze . setActiveNodeCount ( sldActiveNodeCount . getValue () ) ; tempMaze . generateMaze () ; filename = tempMaze . toFile () ; model1 . addElement ( filename ) ; list . setSelectedValue ( filename , true ) ; } 
@ org.junit.Test public void testCheckOutVocabularyFolder ( ) throws eionet.meta.service.ServiceException { vocabularyService . checkOutVocabularyFolder ( 1 , "testUser" ) ; eionet.meta.dao.domain.VocabularyFolder result = vocabularyService . getVocabularyFolder ( "common" , "test_vocabulary1" , true ) ; org.junit.Assert . assertNotNull ( "Working copy vocabulary" , result ) ; org.junit.Assert . assertEquals ( "Working user" , "testUser" , result . getWorkingUser () ) ; org.junit.Assert . assertEquals ( "Working copy" , true , result . isWorkingCopy () ) ; org.junit.Assert . assertEquals ( "Checked out copy id" , 1 , result . getCheckedOutCopyId () ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_maps ) ; overlay = ( ( android.widget.RelativeLayout ) ( findViewById ( R.id.overlay ) ) ) ; db = ( ( com.group_seven.csc413.finalprojectrepository.Global ) ( this . getApplication () ) ) . getDatabaseContext () ; overlay . setVisibility ( View.GONE ) ; setUpMapIfNeeded () ; loadParkingInfo () ; } 
public java.lang.Object getRealAttributeValueFromObject ( java.lang.Object object , java.lang.Object attribute ) { boolean wasInstantiated = ( ( org.eclipse.persistence.indirection.ValueHolderInterface ) ( attribute ) ) . isInstantiated () ; java.lang.Object value = super . getRealAttributeValueFromObject ( object , attribute ) ; if ( ( ! wasInstantiated ) && ( value != attribute ) ) { updateValueInObject ( object , value , attribute ) ; } return value ; } 
@ java.lang.Override protected boolean isItemHoldable ( org.vufind.ItemInfo itemInfo , org.vufind.Scope curScope ) { java.util.ArrayList < org.vufind.LoanRule > relevantLoanRules = getRelevantLoanRules ( itemInfo . getITypeCode () , itemInfo . getLocationCode () , curScope . getRelatedNumericPTypes () ) ; for ( org.vufind.LoanRule loanRule : relevantLoanRules ) { if ( loanRule . getHoldable () ) { return true ; } } return false ; } 
public static int findNext ( java.lang.String str ) { int index = 0 ; if ( ( str . indexOf ( ' ' ) ) == ( - 1 ) ) { return index ; } while ( ( str . charAt ( index ) ) == ' ' ) { index ++ ; } return index ; } 
@ org.junit.Test public void testGetAllStudent () { java.lang.Iterable < com.jimmy.domain.Student > list = studentRepository . findAll () ; java.lang.System.out . println ( ( "list:" + list ) ) ; java.util.Iterator < com.jimmy.domain.Student > itr = list . iterator () ; while ( itr . hasNext () ) { java.lang.System.out . println ( ( "id:" + ( itr . next () . getId () ) ) ) ; } } 
@ java.lang.Override public com.google.maps.model.LatLng makeGeocodeDataFromInfo ( java.lang.String address ) throws com.google.maps.errors.ApiException , java.io.IOException , java.lang.InterruptedException { com.google.maps.GeoApiContext context = new com.google.maps.GeoApiContext () . setApiKey ( API_KEY ) ; final com.google.maps.GeocodingApiRequest req = com.google.maps.GeocodingApi . newRequest ( context ) . address ( address ) ; com.google.maps.model.GeocodingResult [] results = req . await () ; return results [ 0 ] . geometry . location ; } 
@ java.lang.Override public void onBackPressed () { com.sothree.slidinguppanel.SlidingUpPanelLayout slidingPanelLayout = ( ( com.sothree.slidinguppanel.SlidingUpPanelLayout ) ( findViewById ( R.id.sliding_panel_layout ) ) ) ; if ( slidingPanelLayout != null ) { if ( slidingPanelLayout . isPanelExpanded () ) { slidingPanelLayout . collapsePanel () ; } else { super . onBackPressed () ; } } } 
private java.lang.String removeFrontSideAudio ( java.lang.String answerContent ) { java.lang.String answerFormat = getAnswerFormat () ; if ( answerFormat . contains ( "{{FrontSide}}" ) ) { java.lang.String frontSideFormat = mCurrentCard . _getQA ( false ) . get ( "q" ) ; java.util.regex.Matcher audioReferences = Sound.sSoundPattern . matcher ( frontSideFormat ) ; if ( audioReferences . find () ) { answerContent = answerContent . replaceFirst ( audioReferences . group () , "" ) ; } } return answerContent ; } 
public void setSkipValue ( int value ) { super . setSkipValue ( value ) ; ucar.visad.display.FlowDisplayable fd = getGridDisplay () ; if ( ( skipFactorWidget ) != null ) { skipFactorWidget . setValue ( value ) ; } fd . setUseSpeedForColor ( useSpeedForColor ) ; if ( useSpeedForColor ) { colorIndex = fd . getSpeedTypeIndex () ; } } 
private void authSuccess () { isAuth = true ; pulseListener = new client.transmission.PulseListener ( this ) ; pulseListenerThread = new java.lang.Thread ( pulseListener ) ; pulseListenerThread . start () ; pulseSender = new java.lang.Thread ( new client.transmission.PulseSender ( out , username ) ) ; pulseSender . start () ; handleStream = new client.transmission.HandleStream ( this , in ) ; handleStreamThread = new java.lang.Thread ( handleStream ) ; handleStreamThread . start () ; } 
@ java.lang.Override public T reduce ( scala.Function2 < T , T , T > f ) { com.datatorrent.example.ApexRDD.ReduceOperator reduceOperator = dag . addOperator ( ( "Reduce " + ( java.lang.System . currentTimeMillis () ) ) , com.datatorrent.example.ApexRDD.ReduceOperator . class ) ; reduceOperator.f2 = f ; return ( ( T ) ( this ) ) ; } 
public void onDrawerClosed ( android.view.View view ) { super . onDrawerClosed ( view ) ; if ( ut . getEmailAddress () . equals ( "none" ) ) { getSupportActionBar () . setTitle ( "Your Position" ) ; android.util.Log . i ( "emfanisi" , ut . getEmailAddress () ) ; } else { getSupportActionBar () . setTitle ( mActivityTitle ) ; android.util.Log . i ( "emfanisi2" , ut . getEmailAddress () ) ; } invalidateOptionsMenu () ; } 
@ java.lang.Override public java.lang.Object getCellEditorValue () { if ( this . isPushed () ) { if ( this . getLabel () . equals ( Configurations.CCTM_BUTTON_NAME ) ) { cctmFrame . setVisible ( true ) ; } else if ( this . getLabel () . equals ( Configurations.STD_BUTTON_NAME ) ) { ftdFrame . setVisible ( true ) ; } else if ( this . getLabel () . equals ( Configurations.FTD_BUTTON_NAME ) ) { stdFrame . setVisible ( true ) ; } } setPushed ( false ) ; return this . getLabel () ; } 
@ java.lang.Override protected void onDialogClosed ( boolean positiveResult ) { super . onDialogClosed ( positiveResult ) ; if ( positiveResult ) { mLastHour = mTimePicker . getCurrentHour () ; mLastMinute = mTimePicker . getCurrentMinute () ; java.lang.String time = ( ( toTimeDigits ( mLastHour ) ) + ":" ) + ( toTimeDigits ( mLastMinute ) ) ; if ( callChangeListener ( time ) ) { persistString ( time ) ; } } } 
@ java.lang.Override public void init () { setPackage ( mapperPackage ) ; addAttribute ( org.molgenis.data.mapper.meta.AttributeMappingMetaData.IDENTIFIER , org.molgenis.data.meta.model.EntityMetaData.AttributeRole.ROLE_ID ) ; addAttribute ( org.molgenis.data.mapper.meta.AttributeMappingMetaData.TARGETATTRIBUTEMETADATA ) . setNillable ( false ) ; addAttribute ( org.molgenis.data.mapper.meta.AttributeMappingMetaData.SOURCEATTRIBUTEMETADATAS ) ; addAttribute ( org.molgenis.data.mapper.meta.AttributeMappingMetaData.ALGORITHM ) . setDataType ( org.molgenis.MolgenisFieldTypes.AttributeType.TEXT ) ; java.util.List < java.lang.String > options = java.util.Arrays . asList ( org.molgenis.data.mapper.mapping.model.AttributeMapping.AlgorithmState . values () ) . stream () . map ( AlgorithmState : : toString ) . collect ( java.util.stream.Collectors . toList () ) ; addAttribute ( org.molgenis.data.mapper.meta.AttributeMappingMetaData.ALGORITHMSTATE ) . setDataType ( org.molgenis.MolgenisFieldTypes.AttributeType.ENUM ) . setEnumOptions ( options ) ; } 
@ java.lang.SuppressWarnings ( value = "rawtypes" ) public boolean isStarred ( java.lang.Object target ) { if ( target == null ) { return false ; } org.wilson.world.star.StarProvider provider = this . getStarProvider ( target ) ; java.util.List list = this . stars . get ( provider ) ; for ( java.lang.Object item : list ) { if ( provider . equals ( item , target ) ) { return true ; } } return false ; } 
@ java.lang.Override public int getLastHeartbeat ( java.lang.String user ) { int lastHeartBeat = - 1 ; for ( int i = 0 ; i < ( userInfo . size () ) ; i ++ ) { if ( ( userInfo . get ( i ) . username ) == user ) { lastHeartBeat = ( ( int ) ( userInfo . get ( i ) . lastHeartbeat ) ) ; break; } } return lastHeartBeat ; } 
public java.util.List < java.lang.String > convertListElementToListOfElementText ( java.util.List < org.openqa.selenium.WebElement > elements ) { java.util.List < java.lang.String > texts = new java.util.ArrayList <> () ; for ( org.openqa.selenium.WebElement webElement : elements ) { texts . add ( webElement . getText () . toLowerCase () ) ; } return texts ; } 
public LeastMatrix.Output compute ( prashanth.photoncodechallenge.reusable.LeastMatrix leastMatrix ) throws java.lang.Exception { java.util.List < prashanth.photoncodechallenge.reusable.SmallestInteger > integers = shortPath . findPath ( leastMatrix ) ; if ( integers == null ) { throw new java.lang.Exception ( "Total cost exceeds 50" ) ; } return new prashanth.photoncodechallenge.reusable.LeastMatrix.Output ( ( ( integers . size () ) == ( leastMatrix . getWidth () ) ) , pathValue ( integers ) , appendToRow ( integers ) ) ; } 
@ java.lang.Override public void present ( java.lang.Appendable out , java.lang.String rootKey , java.lang.Object o ) throws java.lang.Exception { this . out = out ; out . append ( "var o={};\n" ) ; assign = new java.lang.StringBuilder () ; presentOne ( rootKey , o , ( - 1 ) ) ; out . append ( ";\n" ) . append ( assign ) ; } 
public boolean attack ( navalbattle.Matrix matrix , int row , java.lang.String col ) { try { int column = matrix . getColumn ( col ) ; if ( ( matrix . get ( row , column ) ) == null ) { return false ; } matrix . set ( "X" , row , column ) ; return true ; } catch ( java.lang.ArrayIndexOutOfBoundsException e ) { return false ; } } 
@ java.lang.Override public uk.co.cranfield.model.Results solve () { uk.co.cranfield.core.WaveSimulatorSolver.logger . info ( ( "Preparing Bathymetry File : " + ( uk.co.cranfield.common.Constants.SLOPE_RES_FILE ) ) ) ; prepareBathyMetryFile () ; uk.co.cranfield.core.WaveSimulatorSolver.logger . info ( ( "Bathymetry File Created with file name : " + ( uk.co.cranfield.common.Constants.SLOPE_RES_FILE ) ) ) ; uk.co.cranfield.core.WaveSimulatorSolver.logger . info ( "Time Stepping Started..." ) ; timeStepping ( this . selector ) ; uk.co.cranfield.core.WaveSimulatorSolver.logger . info ( "Time Stepping Finished." ) ; return getResults () ; } 
@ java.lang.Override public void run () { executePredictionCalculation () ; org.oracul.service.task.PredictionTask3D.LOGGER . debug ( ( ( "Execute calculation 3D task #" + ( getId () ) ) + ": test sleep for 10 sec" ) ) ; org.oracul.service.dto.Prediction3D pred = facade . getPrediction3dRepository () . findById ( getId () ) ; pred = facade . getBuilder3D () . buildPrediction ( pred ) ; facade . releaseCores ( getCores () ) ; facade . getPrediction3dRepository () . savePrediction ( pred ) ; facade . removeStatus ( getId () ) ; } 
public void updateWeights ( double rate ) { for ( int i = 0 ; i < ( weights.length ) ; i ++ ) { double deltaW = ( ( - rate ) * ( connections [ i ] . delta ) ) * ( Output ) ; weights [ i ] += delta ; } } 
private void updateMap () { cLong += 1.0E-4 ; cLat += 1.0E-4 ; double longitude = java.lang.Double . parseDouble ( Stats.longitude ) ; double lat = java.lang.Double . parseDouble ( Stats.latitude ) ; currLoc = new org.jxmapviewer.viewer.GeoPosition ( cLat , cLong ) ; smm . update ( currLoc ) ; mapViewer . setAddressLocation ( currLoc ) ; } 
private static java.lang.String hash ( long input , java.lang.String alphabet ) { java.lang.String hash = "" ; int alphabetLen = alphabet . length () ; do { hash = ( alphabet . charAt ( ( ( int ) ( input % alphabetLen ) ) ) ) + hash ; input /= alphabetLen ; } while ( input > 0 ) ; return hash ; } 
private static void moveDown () { int selectedIndex = EditLayersPopup.list . getSelectionModel () . getSelectedIndex () ; if ( selectedIndex != ( Main.layerStrings . size () ) ) { EditLayersPopup . swap ( selectedIndex , ( selectedIndex + 1 ) ) ; EditLayersPopup.list . getSelectionModel () . select ( ( selectedIndex + 1 ) ) ; } } 
@ java.lang.Override public void onEnable () { readConfig () ; getServer () . getPluginManager () . registerEvents ( this , this ) ; org.bukkit.plugin.RegisteredServiceProvider < net.milkbowl.vault.chat.Chat > rsp = getServer () . getServicesManager () . getRegistration ( net.milkbowl.vault.chat.Chat . class ) ; net.citringo.hageplugin.HagePlugin.chat = rsp . getProvider () ; getLogger () . info ( "onEnable" ) ; } 
private static void playCollisionNoise () { if ( ( java.lang.Math . abs ( ( ( ( com.mygdx.game.PlayScreen.taxi . getVelocity () [ 0 ] ) * ( com.mygdx.game.PlayScreen.taxi . getOrientation () [ 0 ] ) ) + ( ( com.mygdx.game.PlayScreen.taxi . getVelocity () [ 1 ] ) * ( com.mygdx.game.PlayScreen.taxi . getOrientation () [ 1 ] ) ) ) ) ) > 0.7 ) { com.mygdx.game.PlayScreen.gameSoundPlayer . playCollisionNoise () ; } } 
@ java.lang.Override public com.einzig.ipst2.portal.PortalAccepted build ( java.lang.String name , java.util.Date dateResponded , java.lang.String message ) { java.lang.String pictureURL = parsePictureURL ( message ) ; java.lang.String address = parseLiveAddress ( message ) ; java.lang.String intelLink = parseIntelLink ( message ) ; return new com.einzig.ipst2.portal.PortalAccepted ( name , null , pictureURL , dateResponded , address , intelLink ) ; } 
@ org.junit.Test public void testFamily () { org.talend.components.api.component.ComponentDefinition cd = getComponentService () . getComponentDefinition ( "tSalesforceConnection" ) ; org.junit.Assert . assertEquals ( 2 , cd . getFamilies () . length ) ; org.junit.Assert . assertEquals ( "Business/Salesforce" , cd . getFamilies () [ 0 ] ) ; org.junit.Assert . assertEquals ( "Cloud/Salesforce" , cd . getFamilies () [ 1 ] ) ; } 
private void gameOverP2 () { newGameSetup () ; javafx.application.Platform . runLater ( new java.lang.Runnable () { @ java.lang.Override public void run () { new ErrorBox ( "You Win!" , "You have won this game!" ) ; } } ) ; if ( isHost ) { GameServer . closeConnection () ; java.lang.System.out . println ( "Server closed" ) ; } } 
private void step () { if ( ( player ) == null ) player = view.GameFrame . getInstance () . getSnake () ; player . setLookingDirection ( dir ) ; player . move () ; view.GameFrame . getInstance () . repaintGameCanvas () ; } 
public void doPush ( level.action.PushAction action ) { level.Location agLoc = action . getAgentLocation () ; level.Direction dir1 = action . getAgentDir () ; level.Direction dir2 = action . getBoxDir () ; level.Location nAgLoc = level.Location . newLocation ( dir1 , agLoc ) ; level.Location nBoxLoc = level.Location . newLocation ( dir2 , nAgLoc ) ; move ( env.model.GridWorldModel.AGENT , agLoc , nAgLoc ) ; move ( env.model.GridWorldModel.BOX , nAgLoc , nBoxLoc ) ; } 
public tcg.tree.ITreeObject findRootLevelTreeObjectByContentDescription ( java.lang.String description ) { for ( tcg.tree.ITreeObject treeObject : ( ( tcg.tree.TreeParent ) ( treeInstanceRoot ) ) . getChildren () ) { if ( description . equals ( treeObject . getContent () . getDescription () ) ) return treeObject ; } return null ; } 
protected void commit () { this . matrix = getMatrix () ; for ( java.util.Map.Entry < java.lang.Integer , android.util.Pair < android.graphics.PointF , android.graphics.PointF > > p : points . entrySet () ) { p . setValue ( new android.util.Pair < android.graphics.PointF , android.graphics.PointF > ( p . getValue () . second , p . getValue () . second ) ) ; } } 
@ java.lang.Override public java.lang.Object getPropertyAtIndex ( java.lang.String s , int i ) { try { java.lang.String attr = replaceAspectAttrSep ( s ) ; mc.dctm.el.identifier.context.IDfValue dfValue = sysObject . getRepeatingValue ( attr , i ) ; return extractValue ( dfValue , sysObject . getAttrDataType ( s ) ) ; } catch ( mc.dctm.el.identifier.context.DfException e ) { throw new java.lang.RuntimeException ( e ) ; } } 
public T get () { if ( ! ( set ) ) { throw new redis.clients.jedis.exceptions.JedisDataException ( "Please close pipeline or multi block before calling this method." ) ; } if ( ! ( built ) ) { if ( ( data ) instanceof redis.clients.jedis.exceptions.JedisDataException ) { throw new redis.clients.jedis.exceptions.JedisDataException ( ( ( redis.clients.jedis.exceptions.JedisDataException ) ( data ) ) ) ; } response = builder . build ( data ) ; this . data = null ; built = true ; } return response ; } 
public void log ( com.site.maven.plugin.codegen.LogLevel logLevel , java.lang.String message ) { switch ( logLevel ) { case DEBUG : if ( debug ) { getLog () . debug ( message ) ; } break; case INFO : if ( ( debug ) || ( verbose ) ) { getLog () . info ( message ) ; } break; case ERROR : getLog () . error ( message ) ; break; } } 
public synchronized void connect ( java.lang.String address ) { android.bluetooth.BluetoothDevice device = btAdapter . getRemoteDevice ( address ) ; android.util.Log . d ( com.henrykvdb.sttt.BtService.TAG , ( "connect to: " + device ) ) ; closeConnecting () ; closeConnected () ; connectingThread = new com.henrykvdb.sttt.BtService.ConnectingThread ( device ) ; connectingThread . start () ; } 
@ java.lang.Override public void databaseMigration ( ) throws java.sql.SQLException , org.wso2.carbon.apimgt.migration.APIMigrationException { java.lang.String amScriptPath = ( ( ( ( ( org.wso2.carbon.utils.CarbonUtils . getCarbonHome () ) + ( java.io.File.separator ) ) + "migration-scripts" ) + ( java.io.File.separator ) ) + "19-110-migration" ) + ( java.io.File.separator ) ; updateAPIManangerDatabase ( amScriptPath ) ; updateAuthzUserName () ; if ( org.wso2.carbon.apimgt.migration.util.StatDBUtil . isTokenEncryptionEnabled () ) { decryptEncryptedConsumerKeys () ; } } 
private void processCard ( com.valeriisosliuk.game.model.Game game , com.valeriisosliuk.game.model.Card card ) { com.valeriisosliuk.game.model.Player player = game . getActivePlayer () ; player . removeCard ( card ) ; player . getActiveState () . addCurrentTurnCard ( card ) ; game . getCardHolder () . putCardInDiscard ( card ) ; java.util.Set < com.valeriisosliuk.game.model.Card > nextTurnOptions = turnAdvisor . getValidCardsForTurn ( game . getActivePlayer () . getHand () , game . getCardHolder () . getLastCardInDiscard () , false ) ; game . getActivePlayer () . getActiveState () . setTurnOptions ( nextTurnOptions ) ; } 
public boolean redoToDoList () { if ( toDoListUndoChanges . isEmpty () ) { return false ; } seedu.commando.model.ToDoListChange change = toDoListUndoChanges . get ( ( ( toDoListUndoChanges . size () ) - 1 ) ) ; try { applyToDoListChange ( change ) ; } catch ( seedu.commando.commons.exceptions.IllegalValueException exception ) { assert false ; return false ; } toDoListChanges . add ( change ) ; toDoListUndoChanges . remove ( ( ( toDoListUndoChanges . size () ) - 1 ) ) ; return true ; } 
@ org.junit.Test public void getAll ( ) throws java.lang.Exception { com.cinema.controller.rest.SessionControllerTest.LOGGER . debug ( "mock test: getAll()" ) ; java.util.List < com.cinema.model.Session > sessions = new java.util.ArrayList <> () ; sessions . add ( com.cinema.controller.rest.SessionControllerTest.SESSION_1 ) ; sessions . add ( com.cinema.controller.rest.SessionControllerTest.SESSION_2 ) ; expect ( sessionServiceMock . getAllSessions () ) . andReturn ( sessions ) ; replay ( sessionServiceMock ) ; mockMvc . perform ( get ( com.cinema.controller.rest.SessionControllerTest.SESSION_GET_ALL ) . accept ( MediaType.APPLICATION_JSON ) ) . andDo ( org.springframework.test.web.servlet.result.MockMvcResultHandlers . print () ) . andExpect ( org.springframework.test.web.servlet.result.MockMvcResultMatchers . status () . isFound () ) ; } 
public java.lang.Object bareissPivot ( final de.feu.algebra.computeralgebra.matrix.Matrix matrix ) throws de.feu.algebra.computeralgebra.algorithm.AlgorithmFailedException { final int colSize = ( matrix . getColCount () ) - 1 ; checkPrincipalMinorsNonZero ( matrix , colSize ) ; for ( int k = 0 ; k < colSize ; k ++ ) { checkForZeroDivisorAndPivotColumn ( matrix , k ) ; calculateBareiss ( matrix , colSize , k ) ; } return matrix . getCell ( colSize , colSize ) ; } 
public java.util.concurrent.Future < com.sun.jersey.api.client.ClientResponse > open ( java.lang.String path , java.lang.String flag ) throws java.io.IOException { hsyndicate.rest.common.WebParamBuilder builder = new hsyndicate.rest.common.WebParamBuilder ( path ) ; builder . addParam ( getAPI ( hsyndicate.rest.client.SyndicateUGHttpClient.OPEN ) , null ) ; builder . addParam ( hsyndicate.rest.client.SyndicateUGHttpClient.OPEN_FLAG , flag ) ; return this . client . getAsync ( builder . build () ) ; } 
@ javax.ws.rs.GET @ no.ntnu.stud.minvakt.services.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public no.ntnu.stud.minvakt.data.NewsFeedItem getNewsFeed () { if ( getSession () . isAdmin () ) { return newsDB . getNewsFeedAdmin () . get ( 0 ) ; } else { return newsDB . getNewsFeed ( getSession () . getUser () . getId () ) . get ( 0 ) ; } } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { ctrl . changerSauvegardeProjet ( enregistrerFichier . getSelectedFile () . getPath () . substring ( 0 , ( ( enregistrerFichier . getSelectedFile () . getPath () . length () ) - ( enregistrerFichier . getSelectedFile () . getName () . length () ) ) ) , enregistrerFichier . getSelectedFile () . getName () ) ; actualiserTitre () ; } 
public static ba.unsa.etf.si.app.Inventura.Model.KlasaArtikla nadjiIme ( java.lang.String naziv ) throws java.lang.Exception { ba.unsa.etf.si.app.Inventura.Kontroleri.KlasaArtikalaKontroler . openSession () ; java.util.List < java.lang.Object > klase = ba.unsa.etf.si.app.Inventura.Kontroleri.KlasaArtikalaKontroler.s . createCriteria ( ba.unsa.etf.si.app.Inventura.Model.KlasaArtikla . class ) . add ( org.hibernate.criterion.Restrictions . like ( "naziv" , naziv ) ) . list () ; if ( ( klase . size () ) > 1 ) { throw new java.lang.Exception () ; } ba.unsa.etf.si.app.Inventura.Model.KlasaArtikla pronadjenaKlasa = ( ( ba.unsa.etf.si.app.Inventura.Model.KlasaArtikla ) ( klase . get ( 0 ) ) ) ; return pronadjenaKlasa ; } 
public void updateResultOverlay () { ij.process.ImageProcessor overlay = classifiedImage . getImageStack () . getProcessor ( displayImage . getCurrentSlice () ) . duplicate () ; overlay = overlay . convertToByte ( false ) ; overlay . setColorModel ( overlayLUT ) ; new ij.ImagePlus ( "overlay" , overlay ) . show () ; resultOverlay . setImage ( overlay ) ; displayImage . updateAndDraw () ; } 
private java.lang.String GetCurrentCheckInDate ( java.util.List < java.lang.String > checkInTimeList ) { for ( int idx = 0 ; idx < ( checkInTimeList . size () ) ; idx ++ ) { if ( ( com.Warcraft.SupportUnit.DateAdapter . TimeSpan ( checkInTimeList . get ( idx ) , "12:00:00" ) ) > 0 ) return checkInTimeList . get ( idx ) ; } return checkInTimeList . get ( ( ( checkInTimeList . size () ) - 1 ) ) ; } 
public java.lang.String remove ( final spark.Request req ) throws java.lang.Exception { final java.lang.String id = req . params ( ":id" ) ; this . userService . removeUser ( id ) ; this . logger . info ( ( ( "[REMOVE] User " + id ) + " removed" ) ) ; return this . prettyPrint ( new response.ResponseMessage ( ( ( "User " + id ) + " removed!!" ) , 200 ) ) ; } 
private static java.util.List < com.emc.storageos.model.vpool.VirtualPoolRemoteReplicationSettingsParam > getRemoteReplicationSettings ( com.emc.storageos.model.vpool.BlockVirtualPoolProtectionParam protection ) { if ( protection != null ) { com.emc.storageos.model.vpool.VirtualPoolRemoteReplicationParam param = protection . getRemoteReplicationParam () ; return param != null ? param . getRemoteReplicationSettings () : java.util.Collections . emptyList () ; } return java.util.Collections . emptyList () ; } 
@ java.lang.Override public void setEnabled ( boolean enabled ) { if ( ! enabled ) { mBarColor = com.appyvet.rangebar.RangeBar.DEFAULT_BAR_COLOR ; mConnectingLineColor = com.appyvet.rangebar.RangeBar.DEFAULT_BAR_COLOR ; mCircleColor = com.appyvet.rangebar.RangeBar.DEFAULT_BAR_COLOR ; mTickColor = com.appyvet.rangebar.RangeBar.DEFAULT_BAR_COLOR ; } else { mBarColor = mActiveBarColor ; mConnectingLineColor = mActiveConnectingLineColor ; mCircleColor = mActiveCircleColor ; mTickColor = mActiveTickColor ; } createBar () ; createPins () ; createConnectingLine () ; super . setEnabled ( enabled ) ; } 
private void destinationReachedDialog () { android.app.AlertDialog.Builder d = new android.app.AlertDialog.Builder ( cunycodes.parkmatch.MapsActivity . instance () ) ; d . setTitle ( "Destination reached! Did you find parking?" ) . setNeutralButton ( "Yes" , new android.content.DialogInterface.OnClickListener () { @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { showLandingPage () ; } } ) . setNegativeButton ( "No" , new android.content.DialogInterface.OnClickListener () { @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { startPlacePickerActivity () ; } } ) . show () ; } 
@ java.lang.Override public T next () { if ( ( this . iterator ) == null ) { this . iterator = this . iterable . iterator () ; } if ( ! ( this . iterator . hasNext () ) ) { this . iterator = this . iterable . iterator () ; if ( ! ( this . iterator . hasNext () ) ) { throw new java.util.NoSuchElementException () ; } } return this . iterator . next () ; } 
private static void parseLine ( java.lang.String line ) throws org.json.simple.parser.ParseException { java.lang.String [] objs = line . split ( model.Input.missingNo ) ; org.json.simple.parser.JSONParser parser = new org.json.simple.parser.JSONParser () ; for ( java.lang.String item : objs ) { org.json.simple.JSONObject obj = ( ( org.json.simple.JSONObject ) ( parser . parse ( item ) ) ) ; java.lang.System.out . println ( obj ) ; model.Input.model . updateProperties ( obj ) ; } } 
public boolean hasAllChunks ( uk.ac.ebi.fg.gwt.resumable.server.FileChunkInfo info ) { if ( isComplete ) { return true ; } int count = ( ( int ) ( java.lang.Math . floor ( ( ( ( double ) ( info.fileSize ) ) / ( ( double ) ( info.chunkSize ) ) ) ) ) ) ; if ( ( chunks . size () ) == count ) { isComplete = true ; } return isComplete ; } 
@ org.junit.Test public void test1 () { sensor . overrideSpeedLimit ( 10 ) ; org.junit.Assert . assertEquals ( 0 , controller . getReferenceSpeed () ) ; user . overrideJoystickPosition ( 5 ) ; controller . followSpeed () ; org.junit.Assert . assertEquals ( 5 , controller . getReferenceSpeed () ) ; controller . followSpeed () ; org.junit.Assert . assertEquals ( 10 , controller . getReferenceSpeed () ) ; controller . followSpeed () ; org.junit.Assert . assertEquals ( 10 , controller . getReferenceSpeed () ) ; } 
private java.lang.String readIt ( java.io.InputStream stream ) { try { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( stream ) ) ; java.lang.StringBuilder result = new java.lang.StringBuilder () ; java.lang.String line ; while ( ( line = reader . readLine () ) != null ) { result . append ( line ) ; } return result . toString () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return "" ; } } 
@ java.lang.Override protected java.lang.Boolean doInBackground ( java.lang.Void . . . params ) { try { mediaPlayer = android.media.MediaPlayer . create ( appContext , mediaID ) ; mediaPlayer . setLooping ( true ) ; return true ; } catch ( android.content.res.Resources rnfe ) { android.util.Log . e ( com.aarondevelops.alma_mater.BackgroundFragments.BackgroundMediaFragment.MEDIA_HELPER_TAG , ( ( "Media with resourceID " + ( mediaID ) ) + " not found." ) ) ; return false ; } } 
public java.lang.Boolean isReadyToStreamFile ( ) throws java.lang.Exception { isReadyToStreamFileEvent () ; if ( ( this . commOpen ) == false ) { throw new java.lang.Exception ( "Cannot begin streaming, comm port is not open." ) ; } if ( ( ( this . awaitingResponseQueue . size () ) != 0 ) || ( ( this . outgoingQueue . size () ) != 0 ) ) { throw new java.lang.Exception ( "Cannot stream while there are active commands (controller)." ) ; } if ( this . comm . areActiveCommands () ) { throw new java.lang.Exception ( "Cannot stream while there are active commands (communicator)." ) ; } return true ; } 
protected void simulateEating () { int currentInd = tb . getSelectedTab () ; tabContents . get ( currentInd ) . setHTML ( ( ( ( tabContents . get ( currentInd ) . getHTML () ) + ( channelToken ) ) + "<br />" ) ) ; int eatRange = ( ( edu.caltech.cs141b.hw2.gwt.collab.client.Collaborator.EATING_RANGE_END ) - ( edu.caltech.cs141b.hw2.gwt.collab.client.Collaborator.EATING_RANGE_START ) ) + 1 ; int waitingTime = ( ( int ) ( ( edu.caltech.cs141b.hw2.gwt.collab.client.Collaborator.EATING_RANGE_START ) + ( eatRange * ( java.lang.Math . random () ) ) ) ) ; eatingTimer . schedule ( waitingTime ) ; } 
public static javax.shell.Shell getInstance () { javax.shell.Shell sh = javax.shell.Shell.instances . get ( java.lang.Thread . currentThread () ) ; if ( sh == null ) { sh = new javax.shell.Shell () ; javax.shell.Shell.instances . put ( java.lang.Thread . currentThread () , sh ) ; } return null ; } 
public void finalize ( java.io.PrintWriter writer ) { for ( java.lang.String s : relevantEntities ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; builder . append ( s ) ; builder . append ( " " ) ; java.lang.String wikiText = "" ; wikiText = getWikiText ( s ) ; builder . append ( wikiText ) ; if ( ! ( wikiText . equalsIgnoreCase ( "" ) ) ) { writer . println ( builder . toString () ) ; } } } 
@ java.lang.Override public int getSID ( int gid ) { if ( gid == 0 ) { return 0 ; } int count = 0 ; for ( net.java.dev.typecast.ot.table.CffTable.CharsetRange range : _charsetRanges ) { count += range . getLeft () ; if ( gid < count ) { int sid = ( gid - count ) + ( range . getFirst () ) ; return sid ; } } return 0 ; } 
public RecyclableObject getRecyclable ( java.lang.Class cls , java.lang.Object . . . args ) { if ( ! ( recyclables . isEmpty () ) ) { RecyclableObject obj = recyclables . pop () ; obj . onRecycle ( args ) ; return obj ; } try { RecyclableObject obj = ( ( RecyclableObject ) ( cls . newInstance () ) ) ; obj . onRecycle ( args ) ; recyclables . add ( obj ) ; return obj ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return null ; } 
private void setImageViewOwner ( com.MagikSquirrel.backgammon.imgBoard.Player player , android.widget.ImageView iv ) { try { if ( player == ( com.MagikSquirrel.backgammon.imgBoard.Player.BLACK ) ) { iv . setImageBitmap ( bmBlack ) ; iv . setVisibility ( View.VISIBLE ) ; } else if ( player == ( com.MagikSquirrel.backgammon.imgBoard.Player.WHITE ) ) { iv . setImageBitmap ( bmWhite ) ; iv . setVisibility ( View.VISIBLE ) ; } else { iv . setImageBitmap ( bmClear ) ; iv . setVisibility ( View.INVISIBLE ) ; } } catch ( java.lang.Exception e ) {} } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( ( e . getSource () ) == ( btnStart ) ) { audioThread = new java.lang.Thread ( new authoring.ThreadRunnable () ) ; audioThread . start () ; java.lang.System.out . println ( "Start" ) ; } else if ( ( e . getSource () ) == ( btnStop ) ) { java.lang.System.out . println ( "Stop" ) ; audioThread . interrupt () ; } } 
private void addSDES ( org.jitsi.impl.neomedia.recording.RawPacket pkt ) { if ( org.jitsi.impl.neomedia.recording.SynchronizerImpl.USE_CNAME_AS_ENDPOINT_ID ) { for ( org.jitsi.impl.neomedia.recording.SynchronizerImpl.CNAMEItem item : getCnameItems ( pkt ) ) { org.jitsi.impl.neomedia.recording.SynchronizerImpl.SSRCDesc ssrc = getSSRCDesc ( item.ssrc ) ; if ( ( ssrc.endpointId ) == null ) { synchronized ( ssrc ) { if ( ( ssrc.endpointId ) == null ) ssrc.endpointId = item.cname ; } } } } } 
@ java.lang.Override public void onCalled ( java.util.ArrayList < com.johnsimon.payback.data.Debt > feed ) { if ( ( recyclerView . getAdapter () ) == null ) { adapter = new com.johnsimon.payback.adapter.FeedListAdapter ( feed , ( ( com.johnsimon.payback.core.DataActivity ) ( getActivity () ) ) , self , emptyView ) ; recyclerView . setAdapter ( adapter ) ; } else { adapter . updateList ( feed ) ; adapter . notifyDataSetChanged () ; } scrollListener . forceUpdateTranslationY () ; adapter . checkAdapterIsEmpty () ; } 
public java.lang.String checkHungerStatus ( model.Person person ) { final int currentHealth = person . getHealth () . getCurrent () ; if ( currentHealth == 0 ) { return ( person . getName () ) + " has died of starvation!" ; } else if ( ( person . getHealth () . getCurrent () ) < ( 2 * ( getPace () . getSpeed () ) ) ) { return ( person . getName () ) + " is in danger of starvation." ; } else { return null ; } } 
@ java.lang.Override public int compare ( org.eclipse.emf.ecore.EClass first , org.eclipse.emf.ecore.EClass second ) { if ( ( ( first != null ) && ( second != null ) ) && ( ( first . getName () ) != null ) ) { return first . getName () . compareTo ( second . getName () ) ; } else { return 0 ; } } 
@ java.lang.Override public void onGamePadCustomMessageReceived ( java.lang.String customMessage , int gamepad ) { if ( isGamePadConnected ( gamepad ) ) return; final com.fbessou.sofa.GameIOHelper.GamePadCustomMessage gpCustom = new com.fbessou.sofa.GameIOHelper.GamePadCustomMessage () ; gpCustom.customMessage = customMessage ; gpCustom.gamePadId = gamepad ; if ( ( mode ) == ( com.fbessou.sofa.GameIOHelper.Mode.LISTENER ) ) { if ( ( mCustomMessageListener ) != null ) { com.fbessou.sofa.GameIOHelper.handler . post ( new java.lang.Runnable () { @ java.lang.Override public void run () { mCustomMessageListener . onCustomMessageReceived ( gpCustom ) ; } } ) ; } } else { mCustomMessageQueue . offer ( gpCustom ) ; } } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent arg0 ) { if ( ! ( done . isEmpty () ) ) { undone . push ( grid ) ; sim . eqiv ( grid , done . pop () ) ; java.lang.System.out . println ( "KKK" ) ; sim . updateToGrid ( frame , panel , grid , mmax ) ; } } 
private io.gravitee.repository.redis.management.model.RedisView convert ( final io.gravitee.repository.management.model.View view ) { final io.gravitee.repository.redis.management.model.RedisView redisView = new io.gravitee.repository.redis.management.model.RedisView () ; redisView . setId ( view . getId () ) ; redisView . setName ( view . getName () ) ; redisView . setDescription ( view . getDescription () ) ; return redisView ; } 
@ org.junit.Before public void init () { sim = new edu.vt.ece5574.sim.Simulation ( 1 ) ; java.lang.String rID = "1" ; java.lang.String bID = "0" ; bld = new edu.vt.ece5574.agents.Building ( bID ) ; sim . addAgent ( bld ) ; rob = new edu.vt.ece5574.agents.Robot ( rID , bID , 5 , 100 ) ; sim . addAgent ( rob ) ; } 
public void updateMovieList () { java.lang.String sortOrder = android.preference.PreferenceManager . getDefaultSharedPreferences ( getContext () ) . getString ( getString ( R.string.pref_key_sort_order ) , getString ( R.string.pref_default_value_sort_order ) ) ; com.tutorial.nano.popularmovies.FetchMoviesTask moviesTask = new com.tutorial.nano.popularmovies.FetchMoviesTask ( getActivity () ) ; moviesTask . execute ( sortOrder ) ; getLoaderManager () . restartLoader ( com.tutorial.nano.popularmovies.FragmentMain.MOVIES_LOADER , null , this ) ; } 
public static boolean canUseName ( org.bukkit.entity.Player player , java.lang.String name ) { java.lang.String shortenedName = com.Acrobot.Breeze.Utils.NameUtil . stripUsername ( com.Acrobot.ChestShop.UUIDs.NameManager . getUsername ( player . getUniqueId () ) ) ; if ( com.Acrobot.ChestShop.Signs.ChestShopSign . isAdminShop ( name ) ) { return false ; } return ( ( shortenedName . equals ( name ) ) || ( com.Acrobot.ChestShop.Permission . otherName ( player , name ) ) ) || ( player . getUniqueId () . equals ( com.Acrobot.ChestShop.UUIDs.NameManager . getUUID ( name ) ) ) ; } 
public int descriptionEdit ( webdoctor.jooq.tables.pojos.Disease disease ) { if ( ( checkDisease ( disease ) ) == 0 ) { return 0 ; } else { create . update ( webdoctor.service.DISEASE ) . set ( DISEASE.DESCRIPTION , disease . getDescription () ) . where ( DISEASE.NAME . equal ( disease . getName () ) ) . execute () ; return 1 ; } } 
public void disable () { disabled = true ; spawns . clear () ; java.util.ListIterator < org.bukkit.entity.Player > players = activePlayers . listIterator () ; while ( players . hasNext () ) { org.bukkit.entity.Player p = players . next () ; removePlayer ( p , false ) ; com.endercrest.colorcube.game.MessageManager . getInstance () . sendFMessage ( "game.status" , p , "state-disabled" ) ; } endGame () ; status = com.endercrest.colorcube.game.Game.Status.DISABLED ; com.endercrest.colorcube.game.MessageManager . getInstance () . debugConsole ( ( ( "Arena " + ( id ) ) + " disabled" ) ) ; } 
private void addTask ( java.lang.String [] addTaskString ) { com.example.heetel.todo.Task newTask = new com.example.heetel.todo.Task ( addTaskString [ 0 ] , addTaskString [ 1 ] ) ; if ( ! ( newTask . equals ( tasks . get ( 0 ) ) ) ) { tasks . add ( 0 , newTask ) ; writePreferences () ; this . lastTask = newTask ; android.util.Log . i ( "addTask" , "Task added" ) ; } else { android.util.Log . i ( "addTask" , "equal Task not added" ) ; } } 
protected android.view.View createNewAdViewSsl ( com.spotxchange.sdk.android.SpotxAdListener adListener ) { java.lang.String appDomain = getActivity () . getString ( R.string.app_domain ) ; com.spotxchange.sdk.android.SpotxAdSettings settings = new com.spotxchange.sdk.android.SpotxAdSettings ( getChannelIdFromEditText () , appDomain , "interstitial" ) ; settings . setUseSecureConnection ( true ) ; java.lang.String sub = ( ( android.widget.EditText ) ( _layout . findViewById ( R.id.subdomainText ) ) ) . getText () . toString () ; if ( ! ( sub . isEmpty () ) ) { settings . setSpotxSubdomain ( sub ) ; } return createNewAdView ( adListener , settings ) ; } 
private static long setBits ( long word , int offset , int length , long value ) { long mask = ( co.paralleluniverse.fibers.Stack.MASK_FULL ) > > > ( 64 - length ) ; word = word & ( ~ ( mask < < ( ( 64 - offset ) - length ) ) ) ; value = value & mask ; word = word | ( value < < ( ( 64 - offset ) - length ) ) ; return word ; } 
private void writeConstructor () { org.renjin.repackaged.asm.MethodVisitor mv = cv . visitMethod ( org.renjin.compiler.pipeline.ACC_PUBLIC , "<init>" , "()V" , null , null ) ; mv . visitCode () ; mv . visitVarInsn ( org.renjin.compiler.pipeline.ALOAD , 0 ) ; mv . visitMethodInsn ( org.renjin.compiler.pipeline.INVOKESPECIAL , "java/lang/Object" , "<init>" , "()V" ) ; mv . visitInsn ( org.renjin.compiler.pipeline.RETURN ) ; mv . visitMaxs ( 1 , 1 ) ; mv . visitEnd () ; } 
@ java.lang.Override public void onSingleTapUp ( android.view.MotionEvent event ) { if ( ( ! ( isVisible () ) ) || ( mIsLocked ) ) return; mMapPoint = mMapViewOverlays . getMap () . screenToMap ( new com.nextgis.maplib.datasource.GeoPoint ( event . getX () , event . getY () ) ) ; mMapPoint . setCRS ( GeoConstants.CRS_WEB_MERCATOR ) ; mMapPoint . project ( GeoConstants.CRS_WGS84 ) ; mOverlayPoint . setCoordinates ( mMapPoint . getX () , mMapPoint . getY () ) ; mMapViewOverlays . invalidate () ; } 
protected void handleSetData ( io.oversec.one.crypto.proto.Outer.Msg msg , io.oversec.one.crypto.BaseDecryptResult tdr , io.oversec.one.crypto.images.xcoder.ImageXCoder coder ) { mTvCoder . setText ( coder . getClass () . getSimpleName () ) ; io.oversec.one.crypto.AbstractCryptoHandler encH = io.oversec.one.crypto.CryptoHandlerFacade . getInstance ( getActivity () ) . getCryptoHandler ( tdr ) ; if ( encH != null ) { mTvMeth . setText ( encH . getDisplayEncryptionMethod () ) ; mTvMeth . setVisibility ( View.VISIBLE ) ; mLblMeth . setVisibility ( View.VISIBLE ) ; } } 
@ java.lang.Override protected void onPostExecute ( java.lang.Boolean aBoolean ) { super . onPostExecute ( aBoolean ) ; if ( ! aBoolean ) { com.byteshaft.towerinfo.PhoneInfo . getInstance () . setDataDirection ( 0 ) ; } else { if ( AppGlobals.APP_FOREGROUND ) { android.util.Log . e ( "TAG" , ( "wifiAction" + ( AppGlobals.APP_FOREGROUND ) ) ) ; com.byteshaft.towerinfo.PhoneInfo . getInstance () . connectionState_info . setText ( "Connected" ) ; } } } 
protected void onResume () { super . onResume () ; try { locationManager . requestLocationUpdates ( LocationManager.GPS_PROVIDER , 0 , 10 , locationListener ) ; } catch ( java.lang.SecurityException e ) { android.widget.Toast . makeText ( this , "No authorization for the processing of data" , Toast.LENGTH_LONG ) . show () ; } checkEnabled () ; } 
public void addEvent ( java.lang.String event ) { if ( event . equals ( "" ) ) { return; } try { java.io.BufferedWriter bw = new java.io.BufferedWriter ( new java.io.FileWriter ( monthFilePath , true ) ) ; bw . newLine () ; bw . write ( ( ( ( date ) + " " ) + event ) ) ; bw . close () ; } catch ( java.io.IOException e ) {} addEventToArray ( event ) ; } 
@ java.lang.Override public void onResponse ( retrofit2.Call < java.util.List < com.extinctspecie.betman.models.HistoryItem > > call , retrofit2.Response < java.util.List < com.extinctspecie.betman.models.HistoryItem > > response ) { historyItems = response . body () ; lvAdapterHistory = new com.extinctspecie.betman.LVAdapterTVHistory ( getActivity () . getBaseContext () , historyItems ) ; listView . setAdapter ( lvAdapterHistory ) ; tvHistoryProgress . setVisibility ( View.GONE ) ; } 
@ org.junit.Test public void testGettingContactsViaID () { manager . addNewContact ( "c1" , "notes1" ) ; manager . addNewContact ( "c2" , "notes2" ) ; manager . addNewContact ( "c3" , "notes3" ) ; java.util.Set < Contact > several = manager . getContacts ( 2 , 1 ) ; assertEquals ( 3 , several . size () ) ; assertTrue ( hasContact ( several , "c1" ) ) ; assertTrue ( hasContact ( several , "c2" ) ) ; } 
@ java.lang.Override protected void onResume () { android.util.Log . d ( com.setmusic.bitmine.BitmineMainActivity.TAG , "onStart" ) ; super . onStart () ; if ( ( googleApiClient ) != null ) { googleApiClient . connect () ; } else { getLastLocation () ; createLocationRequest () ; storeLocation () ; } } 
public static void main ( java.lang.String [] args ) { java.lang.System.out . println ( "Hi, I am your Drone application!" ) ; java.lang.System.out . println ( "" ) ; droneandshare.Media media = new droneandshare.Media ( "sky.jpg" ) ; media . showProperty () ; java.lang.System.out . println ( "" ) ; droneandshare.Picture picture = new droneandshare.Picture ( "yellow.jpg" ) ; picture . showProperty () ; picture . crop ( 10 , 20 , 100 , 500 ) ; droneandshare.Media myMedia = new droneandshare.Picture ( "myPicture.jpg" ) ; myMedia . showProperty () ; myMedia . crop ( 10 , 20 , 100 , 500 ) ; } 
public static void byteListToFile ( byte [] byteArray , java.io.File file ) { try { java.io.FileOutputStream stream = new java.io.FileOutputStream ( file ) ; stream . write ( byteArray ) ; stream . flush () ; stream . close () ; } catch ( java.io.IOException e ) { java.lang.System.err . println ( e . getMessage () ) ; } } 
private void scannerPrint ( ) throws java.lang.Exception { mCancelSignal = new android.support.v4.os.CancellationSignal () ; com.dax.demo.fingerprint.SymmetricCryptoObjectHelper cryptoHelper = new com.dax.demo.fingerprint.SymmetricCryptoObjectHelper () ; android.support.v4.hardware.fingerprint.FingerprintManagerCompat.CryptoObject cryptoObject = cryptoHelper . buildCryptoObject () ; android.util.Log . d ( com.dax.demo.fingerprint.MainActivity.TAG , ( "cryptoObject --> " + ( cryptoObject == null ? null : cryptoObject . toString () ) ) ) ; mFingerManager . authenticate ( cryptoObject , 0 , mCancelSignal , mCallback , null ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_list_authors ) ; android.transition.Fade fade = ( ( android.transition.Fade ) ( android.transition.TransitionInflater . from ( this ) . inflateTransition ( R.transition.activity_fade ) ) ) ; getWindow () . setExitTransition ( fade ) ; setInitialValues () ; initiateActionBar () ; setInitialRecyclerView () ; dbManager . read () ; updateControl = new fw.musicauthors.ListAuthorsActivity.UpdateControl () ; updateControl . everyHalfHour () ; } 
com.forgerock.opendj.cli.ArgumentGroup getStandardGroup ( final com.forgerock.opendj.cli.Argument argument ) { com.forgerock.opendj.cli.ArgumentGroup group ; if ( isInputOutputArgument ( argument ) ) { group = ioArgGroup ; } else if ( isGeneralArgument ( argument ) ) { group = generalArgGroup ; } else if ( isLdapConnectionArgument ( argument ) ) { group = ldapArgGroup ; } else { group = defaultArgGroup ; } return group ; } 
@ java.lang.Override public int compare ( org.ehcache.impl.internal.store.heap.ValueHolder < ? > t , org.ehcache.impl.internal.store.heap.ValueHolder < ? > u ) { if ( t instanceof org.ehcache.impl.internal.store.heap.OnHeapStore.Fault ) { return - 1 ; } else if ( u instanceof org.ehcache.impl.internal.store.heap.OnHeapStore.Fault ) { return 1 ; } else { return java.lang.Long . signum ( ( ( t . lastAccessTime ( java.util.concurrent.TimeUnit.NANOSECONDS ) ) - ( u . lastAccessTime ( java.util.concurrent.TimeUnit.NANOSECONDS ) ) ) ) ; } } 
public boolean onMenuItemClick ( android.view.MenuItem item ) { java.lang.String difficulty = item . toString () ; switch ( difficulty ) { case "Hard" : previewIntent . putExtra ( "difficulty" , 0 ) ; break; case "Harder" : previewIntent . putExtra ( "difficulty" , 1 ) ; break; case "NO FEAR" : previewIntent . putExtra ( "difficulty" , 2 ) ; break; } previewIntent . putExtra ( "vibration" , 1 ) ; startActivity ( previewIntent ) ; return true ; } 
@ java.lang.Override public org.fenixedu.academic.domain.curricularRules.executors.RuleResult execute ( final org.fenixedu.academic.domain.enrolment.EnrolmentContext enrolmentContext ) { final java.util.Set < org.fenixedu.academic.domain.curricularPeriod.CurricularPeriod > configured = getCurricularPeriodsConfigured ( getYearMin () , getYearMax () ) ; if ( configured == null ) { return createFalseConfiguration () ; } final java.math.BigDecimal total = getCreditsEnroledAndEnroling ( enrolmentContext , configured ) ; return ( total . compareTo ( getCredits () ) ) <= 0 ? createTrue () : createFalseLabelled ( total ) ; } 
@ java.lang.Override public void mouseClicked ( java.awt.event.MouseEvent e ) { if ( ( chessManMover ) == null ) { if ( ( table [ ( ( e . getY () ) / 70 ) ] [ ( ( e . getX () ) / 70 ) ] ) != null ) this . showAvailableMoves ( e ) ; java.lang.System.out . println ( "fdjfafkdjads;lf" ) ; } else { java.lang.System.out . println ( "here12344556" ) ; this . chessManMove ( e ) ; } } 
@ java.lang.Override protected java.lang.String doInBackground ( java.lang.String . . . urls ) { com.example.ginji.rssfeed.NewsDAO news = new com.example.ginji.rssfeed.NewsDAO ( mActivity ) ; news . open () ; news . delete () ; for ( int i = 0 ; i < ( listItem . size () ) ; i ++ ) news . insert ( listItem . get ( i ) ) ; return null ; } 
@ org.junit.Before public void setup ( ) throws java.lang.NoSuchMethodException { request = org.easymock.EasyMock . createMock ( javax.servlet.http.HttpServletRequest . class ) ; session = org.easymock.EasyMock . createMock ( javax.servlet.http.HttpSession . class ) ; authenticatedUserService = org.easymock.EasyMock . createMock ( ee.hm.dop.service.useractions.AuthenticatedUserService . class ) ; logoutService = org.easymock.EasyMock . createMock ( ee.hm.dop.service.login.LogoutService . class ) ; context = org.easymock.EasyMock . createMock ( javax.ws.rs.container.ContainerRequestContext . class ) ; capturedSecurityContext = org.easymock.EasyMock . newCapture () ; capturedResponse = org.easymock.EasyMock . newCapture () ; uriInfo = org.easymock.EasyMock . createMock ( javax.ws.rs.core.UriInfo . class ) ; filter = new ee.hm.dop.rest.filter.SecurityFilterTest.SecurityFilterMock ( uriInfo , request ) ; } 
@ java.lang.Override protected void ConfigurationSpecificBuildStructure ( net.minecraft.entity.player.EntityPlayer player , net.minecraft.world.World world , net.minecraft.util.math.BlockPos hitBlockPos ) { com.wuest.prefab.StructureGen.CustomStructures.StructureTreeFarm structure = com.wuest.prefab.StructureGen.CustomStructures.StructureTreeFarm . CreateInstance ( StructureTreeFarm.ASSETLOCATION , com.wuest.prefab.StructureGen.CustomStructures.StructureTreeFarm . class ) ; structure . BuildStructure ( this , world , hitBlockPos , EnumFacing.NORTH , player ) ; player.inventory . clearMatchingItems ( com.wuest.prefab.ModRegistry . TreeFarm () , ( - 1 ) , 1 , null ) ; player.inventoryContainer . detectAndSendChanges () ; } 
public void setup ( java.util.concurrent.Semaphore inputSemaphore ) { endSemaphore = new java.util.concurrent.Semaphore ( ( - ( Sorters . size () ) ) , true ) ; this . inputSemaphore = inputSemaphore ; for ( core.Sorter sorter : Sorters ) { sorter . setup ( endSemaphore ) ; } this . start () ; } 
private static void writeUVarLong ( com.pingcap.tikv.codec.CodecDataOutput cdo , long value ) { while ( ( value - 128 ) >= 0 ) { cdo . writeByte ( ( ( ( byte ) ( value ) ) | 128 ) ) ; value > > > = 7 ; } cdo . writeByte ( ( ( byte ) ( value ) ) ) ; } 
@ java.lang.Override public synchronized void close ( ) throws java.io.IOException { try { if ( ( memoryBuffer ) != null ) { memoryBuffer . close () ; memoryBuffer = null ; } if ( ( fileOutput ) != null ) { fileOutput . close () ; } } finally { tempFile . delete () ; } } 
@ android.annotation.SuppressLint ( value = "NewApi" ) private android.os.Bundle getExtras ( android.app.Notification notification ) { if ( com.achep.acdisplay.Device . hasKitKatApi () ) { return notification.extras ; } try { java.lang.reflect.Field field = android.app.Notification . class . getDeclaredField ( "extras" ) ; field . setAccessible ( true ) ; return ( ( android.os.Bundle ) ( field . get ( notification ) ) ) ; } catch ( java.lang.Exception e ) { android.util.Log . w ( com.achep.acdisplay.notifications.parser.Extractor.TAG , "Failed to access extras on Jelly Bean." ) ; return null ; } } 
@ java.lang.Override public boolean onTouchEvent ( android.view.MotionEvent ev ) { if ( menuContainsTouch ( ev ) ) { ev . offsetLocation ( 0 , ( - ( ( getHeight () ) - ( menu . getHeight () ) ) ) ) ; menu . onTouchEvent ( ev ) ; drawer . setOnTouchListener ( null ) ; } return true ; } 
private void stopRecordingVideo () { if ( ( recorder ) != null ) { android.util.Log . v ( edu.au.sydney.MainActivity.TAG , "Finishing recording, calling stop and release on recorder" ) ; try { recorder . stop () ; recorder . release () ; } catch ( org.bytedeco.javacv.FFmpegFrameRecorder e ) { e . printStackTrace () ; } recorder = null ; } } 
@ java.lang.Override public java.util.List < org.wso2.carbon.policy.mgt.common.ProfileFeature > getFeaturesForProfile ( int profileId ) throws org.wso2.carbon.policy.mgt.common.FeatureManagementException { try { org.wso2.carbon.device.mgt.core.dao.DeviceManagementDAOFactory . openConnection () ; return featureDAO . getFeaturesForProfile ( profileId ) ; } catch ( org.wso2.carbon.policy.mgt.core.dao.FeatureManagerDAOException e ) { throw new org.wso2.carbon.policy.mgt.common.FeatureManagementException ( "Error occurred while getting the features" , e ) ; } catch ( java.sql.SQLException e ) { throw new org.wso2.carbon.policy.mgt.common.FeatureManagementException ( "Error occurred while opening a connection to the data source" , e ) ; } finally { org.wso2.carbon.policy.mgt.core.dao.PolicyManagementDAOFactory . closeConnection () ; } } 
public void init () { for ( int i = 0 ; i < 6 ; i ++ ) { java.lang.String imageText = null ; imageText = getParameter ( ( "image" + i ) ) ; if ( imageText != null ) { ( totalPictures ) ++ ; picture [ i ] = getImage ( getCodeBase () , imageText ) ; } else break; } java.lang.String pauseText = null ; pauseText = getParameter ( "pause" ) ; if ( pauseText != null ) { pause = java.lang.Integer . parseInt ( pauseText ) ; } } 
private static void sendHttpRedirect ( co.paralleluniverse.comsat.webactors.netty.ChannelHandlerContext ctx , co.paralleluniverse.comsat.webactors.netty.FullHttpRequest req , java.lang.String newUri ) { final co.paralleluniverse.comsat.webactors.netty.FullHttpResponse res = new co.paralleluniverse.comsat.webactors.netty.DefaultFullHttpResponse ( req . getProtocolVersion () , FOUND ) ; co.paralleluniverse.comsat.webactors.netty.HttpHeaders . setHeader ( res , co.paralleluniverse.comsat.webactors.netty.LOCATION , newUri ) ; co.paralleluniverse.comsat.webactors.netty.WebActorHandler . writeHttpResponse ( ctx , req , res , true ) ; } 
@ java.lang.Override public boolean apply ( org.eclipse.emf.common.notify.Notification notification ) { boolean isRemoveNotif = ( ( notification . getEventType () ) == ( org.eclipse.emf.common.notify.Notification.REMOVE ) ) || ( ( notification . getEventType () ) == ( org.eclipse.emf.common.notify.Notification.REMOVE_MANY ) ) ; return isRemoveNotif && ( new org.eclipse.sirius.common.tools.api.query.NotificationQuery ( notification ) . isTransientNotification () ) ; } 
@ java.lang.Override public boolean onDoubleTap ( android.view.MotionEvent e ) { if ( ( mChicken1Count ) == 0 ) { rotateImage ( mChicken1 ) ; mChicken1 . setVisibility ( View.INVISIBLE ) ; yellow . start () ; mChicken2 . setVisibility ( View.VISIBLE ) ; } else if ( ( mChicken1Count ) == 1 ) { scaleImage ( mChicken1 ) ; mChicken1 . setVisibility ( View.INVISIBLE ) ; yellow . start () ; } mChicken1Count += 1 ; winCheck () ; return true ; } 
public static void loadWordTable ( java.util.ArrayList < java.lang.String > words ) { entities.WordTable.table = new java.util.Hashtable < java.lang.String , java.lang.Boolean > () ; int numWords = words . size () ; for ( int i = 0 ; i < numWords ; i ++ ) { java.lang.String word = words . get ( i ) ; word = word . trim () ; entities.WordTable.table . put ( word , java.lang.Boolean.TRUE ) ; } } 
@ java.lang.Override public void handle ( org.sonar.api.server.ws.Request request , org.sonar.api.server.ws.Response response ) throws java.lang.Exception { java.lang.String componentKey = request . mandatoryParam ( "component" ) ; org.sonar.api.rule.RuleKey ruleKey = org.sonar.api.rule.RuleKey . parse ( request . mandatoryParam ( "rule" ) ) ; org.sonar.core.issue.DefaultIssue issue = issueService . createManualIssue ( componentKey , ruleKey , request . paramAsInt ( "line" ) , request . param ( "message" ) , request . param ( "severity" ) , null ) ; responseWriter . write ( issue . key () , request , response ) ; } 
@ android.support.annotation.NonNull @ java.lang.Override public android.app.Dialog onCreateDialog ( android.os.Bundle savedInstanceState ) { java.lang.String title = getArguments () . getString ( com.proxy.app.dialog.LoginErrorDialog.ARG_TITLE ) ; java.lang.String message = getArguments () . getString ( com.proxy.app.dialog.LoginErrorDialog.ARG_MESSAGE ) ; android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder ( new android.view.ContextThemeWrapper ( getActivity () , R.style.Widget_Proxy_App_Dialog ) ) . setTitle ( title ) . setMessage ( message ) . setPositiveButton ( R.string.ok , mOnOkClicked ) ; android.app.Dialog dialog = builder . create () ; dialog . getWindow () . setBackgroundDrawable ( new android.graphics.drawable.ColorDrawable ( android.graphics.Color.TRANSPARENT ) ) ; return dialog ; } 
void displaySettingsPage () { this . getUserService () . getV2UserProfileDetails ( org.ednovo.gooru.client.gin.AppClientFactory . getPlaceManager () . getRequestParameter ( org.ednovo.gooru.client.mvp.settings.UserSettingsPresenter.GOORU_UID ) , getUserV2ProfilePageAsyncCallback () ) ; org.ednovo.gooru.client.gin.AppClientFactory . fireEvent ( new org.ednovo.gooru.client.mvp.home.event.HomeEvent ( org.ednovo.gooru.client.mvp.home.event.HeaderTabType.NONE ) ) ; org.ednovo.gooru.client.gin.AppClientFactory . fireEvent ( new org.ednovo.gooru.client.mvp.search.event.SetFooterEvent ( org.ednovo.gooru.client.gin.AppClientFactory . getPlaceManager () . getCurrentPlaceRequest () . getNameToken () ) ) ; this . getUserService () . getV2UserProfileDetails ( org.ednovo.gooru.client.gin.AppClientFactory . getPlaceManager () . getRequestParameter ( org.ednovo.gooru.client.mvp.settings.UserSettingsPresenter.GOORU_UID ) , getUserV2ProfilePageAsyncCallback () ) ; getView () . setUserProfileImageUrl ( "EMPTY" ) ; } 
@ org.testng.annotations.Test ( expectedExceptions = com.fasterxml.jackson.databind.JsonMappingException . class , expectedExceptionsMessageRegExp = "'collection' field must be located before 'properties' field." ) public void testInvalidOrder ( ) throws java.lang.Exception { org.rakam.collection.Event.EventContext api = new org.rakam.collection.Event.EventContext ( apiKeys.writeKey , "1.0" , null , null ) ; byte [] bytes = mapper . writeValueAsBytes ( com.google.common.collect.ImmutableMap . of ( "project" , "test" , "properties" , com.google.common.collect.ImmutableMap . of ( "test0" , "test" , "test1" , com.google.common.collect.ImmutableList . of ( "test" , "test" ) , "test2" , false ) , "api" , api , "collection" , "test" ) ) ; mapper . readValue ( bytes , org.rakam.collection.Event . class ) ; } 
public static void writeChallenges ( java.util.ArrayList < Picolo.model.Challenge > challenges ) { try { com.fasterxml.jackson.databind.ObjectMapper mapper = new com.fasterxml.jackson.databind.ObjectMapper () ; mapper . writeValue ( new java.io.File ( ( ( Picolo.service.Const.RESOURCE_PATH ) + "Challenges.json" ) ) , challenges ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
@ java.lang.Override public encryptor.EncryptorReturn encrypt ( java.lang.String in ) throws encryptor.CustomizeEncryptorException { if ( ( ( password ) == null ) || ( ( password ) == "" ) ) throw new encryptor.CustomizeEncryptorException ( "Empty password" ) ; java.lang.String properIn = preprocessingEncryptToDisplay ( in ) ; encryptor.XOREncryptor.PasswordXORer xorer = new encryptor.XOREncryptor.PasswordXORer ( password ) ; return encryptor.XOREncryptor . XORWithPassword6Bit ( properIn , xorer ) ; } 
private simulator.ProcessControlBlock dispatch () { simulator.ProcessControlBlockImpl prev_process = ( ( simulator.ProcessControlBlockImpl ) ( simulator.Config . getCPU () . getCurrentProcess () ) ) ; simulator.ProcessControlBlockImpl next_process ; if ( readyQueue . isEmpty () ) { simulator.Config . getCPU () . contextSwitch ( null ) ; } else { next_process = ( ( simulator.ProcessControlBlockImpl ) ( readyQueue . poll () ) ) ; next_process . setState ( simulator.READY ) ; simulator.Config . getCPU () . contextSwitch ( next_process ) ; } return prev_process ; } 
public static NovaNative.mc_render_command makeRenderCommand ( net.minecraft.client.Minecraft mc , float partialTicks ) { NovaNative.mc_render_command command = new NovaNative.mc_render_command () ; command.anaglyph = mc.gameSettings.anaglyph ; command.display_height = mc.displayHeight ; command.display_width = mc.displayWidth ; command.render_world = ( mc.theWorld ) != null ; if ( command.render_world ) { com.continuum.nova.utils.RenderCommandBuilder . addRenderWorldCommand ( mc , partialTicks , command ) ; } if ( ( mc.currentScreen ) != null ) { com.continuum.nova.utils.RenderCommandBuilder . addRenderGuiCommand ( mc , partialTicks , command ) ; } return command ; } 
public static bammerbom.ultimatecore.spongeapi.api.UPlayer getPlayer ( java.util.UUID u ) { for ( bammerbom.ultimatecore.spongeapi.api.UPlayer p : bammerbom.ultimatecore.spongeapi.api.UC.uplayers ) { if ( p.uuid . equals ( u ) ) { return p ; } } bammerbom.ultimatecore.spongeapi.api.bammerbom.ultimatecore.spongeapi.api.UPlayer pl = new bammerbom.ultimatecore.spongeapi.api.bammerbom.ultimatecore.spongeapi.api.UPlayer ( u ) ; if ( pl . getPlayer () . isOnline () ) { bammerbom.ultimatecore.spongeapi.api.UC.uplayers . add ( pl ) ; } return pl ; } 
@ java.lang.Override public void onResponse ( retrofit2.Call < java.util.List < com.extinctspecie.betman.models.VIPLiveItem > > call , retrofit2.Response < java.util.List < com.extinctspecie.betman.models.VIPLiveItem > > response ) { vipLiveItems = response . body () ; if ( ( vipLiveItems . size () ) > 0 ) { lvAdapterTVVIPLive = new com.extinctspecie.betman.adapters.LVAdapterTVVIPLive ( getActivity () . getBaseContext () , vipLiveItems ) ; listView . setAdapter ( lvAdapterTVVIPLive ) ; } tvTodayProgress . setVisibility ( View.GONE ) ; } 
@ java.lang.Override public rx.Observable < ? > call ( java.lang.Throwable throwable ) { if ( ( throwable instanceof java.lang.IllegalArgumentException ) || ( throwable instanceof java.lang.NullPointerException ) ) { return fakeApi . getFakeToken ( "fake_auth_code" ) . doOnNext ( new rx.functions.Action1 < com.rengwuxian.rxjavasamples.model.FakeToken > () { @ java.lang.Override public void call ( com.rengwuxian.rxjavasamples.model.FakeToken fakeToken ) { tokenUpdated = true ; cachedFakeToken.token = fakeToken.token ; cachedFakeToken.expired = fakeToken.expired ; } } ) ; } return rx.Observable . just ( throwable ) ; } 
@ java.lang.Override public void responseCallBack ( org.json.JSONObject response ) { android.util.Log . e ( com.example.qwerty.http.MeetupActivity.TAG , response . toString () ) ; try { meetupResponse = response ; parsedDate = dateParser . parseResponseDate ( response . getJSONObject ( "date" ) ) ; usersFragment . passDataToFragment ( response ) ; if ( displayData ) { title . setText ( response . getString ( "name" ) ) ; desc . setText ( response . getString ( "description" ) ) ; dateTxt . setText ( parsedDate ) ; } } catch ( org.json.JSONException e ) { e . printStackTrace () ; } } 
@ java.lang.Override protected void doStart ( ) throws java.lang.Exception { org.orienteer.camel.tasks.CamelEventHandler.LOG . info ( java.lang.Thread . currentThread () . getName () ) ; if ( ( taskSession ) == null ) { taskSession = new org.orienteer.camel.tasks.OCamelTaskSession () ; taskSession . setCallback ( callback ) ; taskSession . setDeleteOnFinish ( false ) ; taskSession . setConfig ( configId ) ; taskSession . setFinalProgress ( context . getRoutes () . size () ) ; taskSession . start () ; } super . doStart () ; } 
@ java.lang.Override public void onDestroy () { super . onDestroy () ; if ( ( recognizer ) != null ) recognizer . cancel () ; if ( ( tts_eng ) != null ) { tts_eng . stop () ; tts_eng . shutdown () ; } if ( ( tts ) != null ) { tts . stop () ; tts . shutdown () ; } mMediaPlayer . stop () ; mMediaPlayer . release () ; cursor . close () ; myDbHelper . close () ; } 
public void displayListenContent ( com.lovelybroteam.listenexercise.model.ListenContent listenContent , java.lang.String filePath ) { this . listenContent = listenContent ; showConversationDialog ( false ) ; currentFileName = filePath ; questionAnswerAdapter . setShowAnswer ( false ) ; questionAnswerAdapter . setListenContent ( listenContent ) ; effectImageViewSubmit . setActivated ( false ) ; refreshView () ; } 
@ java.lang.Override public boolean onSingleTapConfirmed ( android.view.MotionEvent e ) { if ( ( greyFavIcon . getVisibility () ) == ( android.view.View.GONE ) ) { greyFavIcon . setVisibility ( View.VISIBLE ) ; orangeFavIcon . setVisibility ( View.GONE ) ; circleBackground . setVisibility ( View.GONE ) ; com.example.aishwarya.favoriteicon.AnimationUtils . heart ( circleBackground , greyFavIcon , orangeFavIcon ) ; } else { com.example.aishwarya.favoriteicon.AnimationUtils . heart ( circleBackground , greyFavIcon , orangeFavIcon ) ; } return true ; } 
@ java.lang.Override public void reset ( org.apache.struts.action.ActionMapping mapping , javax.servlet.http.HttpServletRequest request ) { org.kuali.kra.protocol.ProtocolFormBase.LOG . debug ( "reset() ENTER" ) ; super . reset ( mapping , request ) ; this . setLookupResultsSequenceNumber ( null ) ; this . setLookupResultsBOClassName ( null ) ; this . initialized = false ; onlineReviewsActionHelper . init ( true ) ; org.kuali.kra.protocol.ProtocolFormBase.LOG . debug ( "reset() exit.." ) ; } 
public java.util.stream.Stream < java.util.logging.LogRecord > stream ( java.lang.Class < ? > clazz , java.util.logging.Level level ) { if ( level == null ) { throw new org.junit.platform.commons.JUnitException ( "Level must not be null" ) ; } return stream ( clazz ) . filter ( ( logRecord ) - > ( logRecord . getLevel () ) == level ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( mediaPlayer . isPlaying () ) { mediaPlayer . pause () ; mediaPlayer . setLooping ( true ) ; start . setImageDrawable ( android.support.v4.content.ContextCompat . getDrawable ( this , R.drawable.ic_action_play ) ) ; } else { mediaPlayer . start () ; start . setImageDrawable ( android.support.v4.content.ContextCompat . getDrawable ( this , R.drawable.ic_action_pause ) ) ; } } 
@ org.junit.Test @ org.junit.Ignore public void exactMatchExcludeStrains ( ) throws org.eol.globi.data.NodeFactoryException , org.eol.globi.service.PropertyEnricherException { taxonIndex . getOrCreateTaxon ( new org.eol.globi.domain.TaxonImpl ( "Phytophthora infestans" , null ) ) ; new org.eol.globi.tool.LinkerGlobalNames ( getGraphDb () ) . link () ; java.util.List < java.lang.String > ids = org.eol.globi.tool.LinkerTestUtil . assertHasOther ( "Phytophthora infestans" , 6 , taxonIndex , RelTypes.SAME_AS ) ; org.junit.Assert . assertThat ( ids , org.junit.matchers.JUnitMatchers . hasItem ( "NCBI:4787" ) ) ; org.junit.Assert . assertThat ( ids , org.hamcrest.CoreMatchers . not ( org.junit.matchers.JUnitMatchers . hasItem ( "NCBI:403677" ) ) ) ; } 
public void Attacked ( int damage ) { _currentHeath -= damage ; if ( ( ( _currentHeath ) - damage ) <= 0 ) { KnockedBack () ; Died () ; } else if ( ( ( _currentHeath ) > ( ( _health ) / 2 ) ) && ( ( ( _health ) / 2 ) > ( ( _currentHeath ) - damage ) ) ) { KnockedBack () ; } } 
private int rowColToIndex ( int row , int col ) { row = row - 1 ; int index = ( row * ( rows ) ) + col ; if ( ( ( ( ( ( index > ( ( rows ) * ( rows ) ) ) || ( index < 0 ) ) || ( row < 0 ) ) || ( row > ( rows ) ) ) || ( col < 0 ) ) || ( col > ( rows ) ) ) throw new java.lang.IndexOutOfBoundsException () ; return index ; } 
public boolean folderSelectorON () { chooser . setFileSelectionMode ( javax.swing.JFileChooser.DIRECTORIES_ONLY ) ; chooser . showOpenDialog ( chooser ) ; java.io.File dir = chooser . getSelectedFile () ; try { selectedPath = dir . getPath () ; selectionEnd = true ; return true ; } catch ( java.lang.NullPointerException e ) { java.lang.System.out . println ( "������ ���õ��� �ʾҽ��ϴ�." ) ; return false ; } } 
private double inner_product ( double [] d1 , double [] d2 , double initial ) throws java.security.InvalidParameterException { if ( ( d1.length ) != ( d1.length ) ) { throw new java.security.InvalidParameterException ( "The arrays are not the same length" ) ; } double val = initial ; for ( int i = 0 ; i < ( d1.length ) ; i ++ ) { val += ( d1 [ i ] ) * ( d2 [ i ] ) ; } return val ; } 
@ org.junit.Test public void doesNotReopenBrowserIfItFailed () { com.codeborne.selenide.Configuration.reopenBrowserOnFail = false ; org.openqa.selenium.WebDriver webdriver = mock ( org.openqa.selenium.WebDriver . class ) ; container.THREAD_WEB_DRIVER . put ( java.lang.Thread . currentThread () . getId () , webdriver ) ; org.junit.Assert . assertSame ( webdriver , container . getAndCheckWebDriver () ) ; verify ( container , never () ) . isBrowserStillOpen ( any ( org.openqa.selenium.WebDriver . class ) ) ; } 
public double getDoubleFromElement ( java.lang.String el ) { double d = 0 ; java.util.regex.Pattern p = java.util.regex.Pattern . compile ( "(\\d+(?:\\.\\d+))" ) ; java.util.regex.Matcher m = p . matcher ( el ) ; while ( m . find () ) { d = java.lang.Double . parseDouble ( m . group ( 1 ) ) ; } return d ; } 
void GenerateShipsOnTheField ( int [] [] f ) { PutNDeckShip ( f , 4 ) ; for ( int i = 1 ; i <= 2 ; i ++ ) { PutNDeckShip ( f , 3 ) ; } for ( int i = 1 ; i <= 3 ; i ++ ) { PutNDeckShip ( f , 2 ) ; } Put1DeckShip4Times ( f ) ; } 
private int findFALusingAdapterPosition ( long l ) { try { java.lang.String choosenID = adapter . getItem ( ( ( int ) ( l ) ) ) . getSteamID () ; for ( int i = 0 ; i < ( de.fosefx.steamnotificator.Main2Activity.friendArrayList . size () ) ; i ++ ) { if ( de.fosefx.steamnotificator.Main2Activity.friendArrayList . get ( i ) . equals ( choosenID ) ) { return i ; } } } catch ( java.lang.Exception e ) {} return 99999 ; } 
public void cancelReplace ( java.lang.String entryId ) { com.kaltura.media.server.managers.KalturaLiveManager.logger . info ( "Cancel replacement is required" ) ; com.kaltura.client.types.KalturaLiveEntry liveEntry = get ( entryId ) ; com.kaltura.client.KalturaClient impersonateClient = impersonate ( liveEntry.partnerId ) ; try { impersonateClient . getMediaService () . cancelReplace ( liveEntry.recordedEntryId ) ; } catch ( java.lang.Exception e ) { com.kaltura.media.server.managers.KalturaLiveManager.logger . error ( ( "Error occured: " + ( e . getMessage () ) ) ) ; } } 
private java.util.function.Consumer wrapVoidMethod ( java.lang.reflect.Method method ) { return ( c ) - > { try { method . invoke ( this , c ) ; } catch ( java.lang.reflect.InvocationTargetException e ) { throw new io.atomix.copycat.error.CommandException ( e . getCause () ) ; } catch ( java.lang.IllegalAccessException e ) { throw new java.lang.AssertionError ( e ) ; } } ; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) public java.util.List < com.siddhrans.biometric.model.User > findAllUsers () { org.hibernate.Criteria criteria = createEntityCriteria () . addOrder ( org.hibernate.criterion.Order . asc ( "firstName" ) ) ; criteria . setResultTransformer ( Criteria.DISTINCT_ROOT_ENTITY ) ; java.util.List < com.siddhrans.biometric.model.User > users = ( ( java.util.List < com.siddhrans.biometric.model.User > ) ( criteria . list () ) ) ; return users ; } 
public org.bukkit.World getWorld ( java.lang.String worldname ) { for ( org.bukkit.World world : ( ( org.bukkit.World [] ) ( this . getServer () . getWorlds () . toArray () ) ) ) { if ( world . getName () . equalsIgnoreCase ( worldname ) ) { return world ; } } return null ; } 
public void run () { com.rey.material.widget.CheckedTextView tv = getTabView ( position ) ; if ( ! ( mScrolling ) ) { updateIndicator ( tv . getLeft () , tv . getMeasuredWidth () ) ; } smoothScrollTo ( ( ( ( tv . getLeft () ) - ( ( ( getWidth () ) - ( tv . getWidth () ) ) / 2 ) ) + ( getPaddingLeft () ) ) , 0 ) ; mTabAnimSelector = null ; } 
@ java.lang.Override public void onDestroy () { int lastItemPosition = mLayoutManager . findFirstVisibleItemPosition () ; java.lang.String chapterId = mAdapter . getFocusedChapterId ( lastItemPosition ) ; java.lang.String frameId = mAdapter . getFocusedFrameId ( lastItemPosition ) ; com.door43.translationstudio.util.AppContext . setLastFocus ( mTargetTranslation . getId () , chapterId , frameId ) ; super . onDestroy () ; } 
public static java.net.URI getFileName () { if ( ( io.cloudracer.LogMonitor . getLogMonitor () ) != null ) { final org.apache.logging.log4j.core.LoggerContext context = ( ( org.apache.logging.log4j.core.LoggerContext ) ( org.apache.logging.log4j.LogManager . getContext ( false ) ) ) ; final org.apache.logging.log4j.core.config.Configuration configuration = context . getConfiguration () ; return new java.io.File ( ( ( org.apache.logging.log4j.core.appender.FileAppender ) ( configuration . getAppender ( "FILE" ) ) ) . getFileName () ) . toURI () ; } else { return null ; } } 
public void solve ( int iterations ) { if ( isStopped ) { throw new sk.uniza.fri.hlavna2.diss.monte.carlo.core.exception.MonteCarloStoppedException () ; } int i ; for ( i = statistics . getIterationsRunned () ; i < ( ( statistics . getIterationsRunned () ) + iterations ) ; i ++ ) { if ( ! ( isStopped ) ) { command . simulate ( randomStorage ) ; } } statistics . setIterationsRunned ( i ) ; } 
private int IndexofPoint ( Point [] pointsArr , Point point ) { int size = pointsArr.length ; for ( int i = 0 ; i < size ; i ++ ) { if ( ( pointsArr [ i ] . getY () ) == ( point . getY () ) ) return i ; } return - 1 ; } 
public void testForNamespace () { com.indeed.util.varexport.VarExporter alt = com.indeed.util.varexport.VarExporter . forNamespace ( "foo" ) ; org.junit.Assert . assertFalse ( alt . getVariables () . iterator () . hasNext () ) ; com.indeed.util.varexport.VarExporter . forNamespace ( "foo" ) . export ( com.indeed.util.varexport.VarExporterTest.ExampleClass . class , "" ) ; com.indeed.util.varexport.VarExporterTest . assertExportedNames ( alt , "static1field" , "static1method" , "myNameIsEarl" ) ; com.indeed.util.varexport.VarExporterTest . assertExportedNames ( exporter ) ; alt . reset () ; } 
@ java.lang.Override public void onImageFileGenerated ( java.io.File file ) { android.content.Intent takePictureIntent = new android.content.Intent ( android.provider.MediaStore.ACTION_IMAGE_CAPTURE ) ; if ( ( takePictureIntent . resolveActivity ( getActivity () . getPackageManager () ) ) != null ) { takePictureIntent . putExtra ( MediaStore.EXTRA_OUTPUT , android.net.Uri . fromFile ( file ) ) ; startActivityForResult ( takePictureIntent , cat.xlagunas.andrtc.view.fragment.ImagePickerFragment.REQUEST_IMAGE_CAPTURE ) ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/{filter}" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = "application/json" ) public org.springframework.http.ResponseEntity < java.util.List < org.openbox.sf5.model.Transponders > > getTranspondersBySatelliteId ( @ org.springframework.web.bind.annotation.PathVariable ( value = "filter" ) java.lang.String ignore , @ org.springframework.web.bind.annotation.MatrixVariable ( required = true , value = "satId" ) long satId ) { java.util.List < org.openbox.sf5.model.Transponders > transList = transpondersJsonizer . getTranspondersBySatelliteId ( satId ) ; if ( transList . isEmpty () ) { return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.NO_CONTENT ) ; } return new org.springframework.http.ResponseEntity ( transList , org.springframework.http.HttpStatus.OK ) ; } 
private void getPlayerPassword ( java.io.PrintWriter msgOut , java.io.BufferedReader msgIn , Player newPlayer ) { java.lang.String tempPassword = "" ; msgOut . print ( "Please input your Password: " ) ; msgOut . flush () ; try { tempPassword = msgIn . readLine () ; } catch ( java.io.IOException e ) { java.lang.System.out . println ( ( "IOException in getPlayerPassword: " + ( e . getMessage () ) ) ) ; } newPlayer . setPassword ( tempPassword ) ; } 
@ java.lang.Override public org.sagebionetworks.bridge.models.studies.Study getStudy ( java.lang.String identifier ) { com.google.common.base.Preconditions . checkArgument ( org.apache.commons.lang3.StringUtils . isNotBlank ( identifier ) , Validate.CANNOT_BE_BLANK , "identifier" ) ; org.sagebionetworks.bridge.models.studies.Study study = cacheProvider . getStudy ( identifier ) ; if ( study == null ) { study = studyDao . getStudy ( identifier ) ; org.sagebionetworks.bridge.services.StudyServiceImpl . setLegacyFieldsIfAbsent ( study ) ; cacheProvider . setStudy ( study ) ; } return study ; } 
public static < T > void modifyRecord ( T object , net.moddity.droidnubekit.utils.DNKOperationType operationType , DroidNubeKitConstants.kDatabaseType environmentType , final net.moddity.droidnubekit.requests.DNKCallback < java.util.List < T > > callback ) { if ( ! ( object instanceof net.moddity.droidnubekit.objects.DNKObject ) ) { callback . failure ( new java.lang.Exception ( ( "Object it's not instance of DNKRecord: " + ( object . toString () ) ) ) ) ; return; } java.util.List < T > objects = new java.util.ArrayList <> () ; objects . add ( object ) ; net.moddity.droidnubekit.DroidNubeKit . modifyRecord ( objects , operationType , environmentType , callback ) ; } 
@ org.junit.Test ( expected = java.lang.Exception . class ) public void negativeCancelOrderTest ( ) throws java.lang.Exception { try { com.foodybuddy.service.OrderService orderService = new com.foodybuddy.service.impl.OrderServiceImpl ( sessionFactory ) ; insertOrderUtil ( orderService ) ; int orderId = - 1 ; orderService . cancelOrder ( orderId ) ; com.foodybuddy.model.Order order = orderService . getOrder ( orderId ) ; } catch ( java.lang.Exception ex ) { java.lang.System.out . println ( ex ) ; com.foodybuddy.service.OrderServiceTest.log . error ( ex ) ; throw ex ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/loandata" ) public java.lang.String loandata ( java.lang.String page , java.lang.String size , org.springframework.ui.Model model ) { try { size = "10" ; java.util.List < java.lang.String > statuslist = new java.util.ArrayList < java.lang.String > () ; statuslist . add ( CrediteInfo.Status.WAIT_ASSIGN ) ; org.springframework.data.domain.Page < com.jlfex.hermes.model.CrediteInfo > obj = creditInfoService . queryByCondition ( null , page , size , statuslist ) ; model . addAttribute ( "infoList" , obj ) ; } catch ( java.lang.Exception e ) { com.jlfex.hermes.common.Logger . error ( "债权导入列表查询异常:" , e ) ; } return "credit/loandata" ; } 
private synchronized boolean removeThreadFromList ( final long threadId , boolean closeSocketAndStreams ) { boolean threadRemoved = false ; for ( org.thaliproject.p2p.btconnectorlib.utils.BluetoothSocketIoThread thread : mSocketIoThreads ) { if ( ( thread != null ) && ( ( thread . getId () ) == threadId ) ) { android.util.Log . d ( org.thaliproject.p2p.btconnectorlib.internal.bluetooth.BluetoothServerThread.TAG , ( "removeThreadFromList: Removing thread with ID " + threadId ) ) ; mSocketIoThreads . remove ( thread ) ; if ( closeSocketAndStreams ) { thread . close ( true ) ; } threadRemoved = true ; break; } } return threadRemoved ; } 
@ java.lang.Override public void initializeSession ( org.apache.mina.core.session.IoSession wsSession , org.apache.mina.core.future.IoFuture future ) { wsSession . setAttribute ( HttpAcceptor.SERVICE_REGISTRATION_KEY , session . getAttribute ( HttpAcceptor.SERVICE_REGISTRATION_KEY ) ) ; wsSession . setAttribute ( org.kaazing.gateway.transport.wsr.WsrAcceptor.HTTP_REQUEST_URI_KEY , session . getRequestURL () ) ; ( ( org.kaazing.gateway.transport.ws.AbstractWsBridgeSession ) ( wsSession ) ) . setSubject ( session . getSubject () ) ; wsSession . setAttribute ( BridgeSession.NEXT_PROTOCOL_KEY , wsProtocol0 ) ; wsExtensions0 . set ( wsSession ) ; } 
@ java.lang.Override public void update () { super . update () ; this . x = ( ( this . renderer . x () ) * ( com.darkxell.client.resources.images.AbstractDungeonTileset.TILE_SIZE ) ) + ( ( com.darkxell.client.resources.images.AbstractDungeonTileset.TILE_SIZE ) / 2 ) ; this . y = ( ( this . renderer . y () ) * ( com.darkxell.client.resources.images.AbstractDungeonTileset.TILE_SIZE ) ) + ( ( com.darkxell.client.resources.images.AbstractDungeonTileset.TILE_SIZE ) / 2 ) ; } 
@ java.lang.Override public void dispose () { logger . debug ( "Disposing the Helios IP Vario handler for '{}'." , getThing () . getUID () . toString () ) ; if ( ( logSubscriptionID ) != 0 ) { unsubscribe () ; } updateStatus ( ThingStatus.OFFLINE ) ; if ( ( ( logJob ) != null ) && ( ! ( logJob . isCancelled () ) ) ) { logJob . cancel ( true ) ; logJob = null ; } if ( ( heliosClient ) != null ) { heliosClient . close () ; } } 
private void saveToStream ( final org.eclipse.core.runtime.IProgressMonitor monitor , final org.csstudio.display.pvtable.persistence.PVTablePersistence persistence , final java.io.OutputStream stream ) { if ( monitor != null ) monitor . beginTask ( "Save" , IProgressMonitor.UNKNOWN ) ; try { persistence . write ( model , stream ) ; } catch ( java.lang.Exception ex ) { org.csstudio.ui.util.dialogs.ExceptionDetailsErrorDialog . openError ( getSite () . getShell () , Messages.Error , ex ) ; } if ( monitor != null ) monitor . done () ; is_dirty = false ; firePropertyChange ( IEditorPart.PROP_DIRTY ) ; } 
static boolean isAscending ( int [] values ) { int old = values [ 0 ] ; for ( int i = 1 ; i < ( values.length ) ; i ++ ) { if ( old > ( values [ i ] ) ) return false ; } return true ; } 
public java.util.Map < java.lang.Integer , java.util.Map < java.lang.Integer , java.lang.Double > > estimateRelevances ( java.util.ArrayList < java.lang.Integer > startCategories , int topKShortestPathes , boolean distributeOverSiblingCategories ) { java.util.List < java.util.List < java.util.List < grph.path.ArrayListPath > > > sourcesToTargetsPathes = yenTopKShortestPaths ( startCategories , topKShortestPathes ) ; java.util.Map < java.lang.Integer , java.util.Map < java.lang.Integer , java.lang.Double > > relevances = calculateProbabilites ( startCategories , sourcesToTargetsPathes , distributeOverSiblingCategories ) ; return relevances ; } 
public int containsStraight () { startLoop : for ( int i = 0 ; i <= 9 ; i ++ ) { for ( int j = i ; j < ( i + 5 ) ; j ++ ) { if ( ( numberOf ( ( j % 13 ) ) ) != 1 ) continue startLoop ; } return i ; } return - 1 ; } 
public static void main ( java.lang.String [] args ) { java.util.Scanner mainScan = new java.util.Scanner ( java.lang.System.in ) ; java.lang.System.out . print ( "Which method would you like to run? Type: numAvg, sup, xor randy. " ) ; java.lang.String choice = mainScan . nextLine () ; if ( choice == "numAvg" ) { Input5_1 . numAvg () ; } else if ( choice == "sup" ) { Input5_1 . sup () ; } else if ( choice == "randy" ) { Input5_1 . randy () ; } else { java.lang.System.out . println ( "You broke the computer." ) ; } } 
protected void startWaiting ( java.lang.String message , boolean canStop ) { java.lang.String queue = ( javax.swing.SwingUtilities . isEventDispatchThread () ) ? "event dispatch thread." : ( "a separate thread (" + ( java.lang.Thread . currentThread () . getName () ) ) + ")." ; java.lang.System.out . println ( ( "Start waiting called from " + queue ) ) ; org.gridchem.client.gui.filebrowser.FileBrowserImpl.progress . setIndeterminate ( true ) ; org.gridchem.client.gui.filebrowser.FileBrowserImpl.progressInfo . setText ( message ) ; org.gridchem.client.gui.filebrowser.FileBrowserImpl.topURIPanel . setEnabled ( false ) ; if ( canStop ) { org.gridchem.client.gui.filebrowser.FileBrowserImpl.stopButton . setEnabled ( true ) ; } } 
public void addBread ( cal.bread.dan.breadcalculator2.Bread bread ) throws cal.bread.dan.breadcalculator2.ListFullException { if ( ( size ) <= 6 ) { breadList . add ( bread ) ; totalPercentage += bread . getPercentage () ; cost += levelCost . get ( star ) ; totalTrain += bread . getTrain () ; ( size ) ++ ; } else { throw new cal.bread.dan.breadcalculator2.ListFullException () ; } } 
public static void printArrayAsStars ( int [] array ) { for ( int i = 0 ; i < ( array.length ) ; i ++ ) { java.lang.System.out . println () ; for ( int j = 0 ; j < ( array [ i ] ) ; j ++ ) { java.lang.System.out . print ( "*" ) ; } } } 
public void remove ( java.lang.Object object ) { for ( int i = 0 ; i < ( list . size () ) ; i ++ ) { ReturnObject ro = list . get ( i ) ; java.lang.Object item = ro . getReturnValue () ; if ( item . equals ( object ) ) { list . remove ( i ) ; i -- ; } } } 
public static void close ( java.sql.Connection connection , java.sql.PreparedStatement statement , java.sql.ResultSet resultSet ) { try { if ( ( resultSet != null ) && ( resultSet . isClosed () ) ) { resultSet . close () ; } br.com.devmedia.jdbc.connection.JDBCConnection . close ( connection , statement ) ; } catch ( java.sql.SQLException e ) { throw new java.lang.RuntimeException ( e . getMessage () , e ) ; } } 
@ java.lang.Override public void start ( javafx.stage.Stage stage ) throws java.lang.Exception { buffer = new us.ihmc.yoVariables.dataBuffer.DataBuffer ( us.ihmc.robotDataVisualizer.graphics.YoGraphicServerVisualizer.BUFFER_SIZE ) ; stage . setScene ( new javafx.scene.Scene ( ( display = new us.ihmc.robotDataVisualizer.graphics.LiveMeshDisplay ( ( yoGraphicMeshProvider = new us.ihmc.robotDataVisualizer.graphics.meshProvider.AsyncMeshProvider () ) ) ) ) ) ; stage . show () ; yoVariableClient = new us.ihmc.robotDataLogger.YoVariableClient ( this ) ; } 
public static int getUnconfirmedCount ( java.util.List < com.breadwallet.presenter.entities.TransactionListItem > items ) { int count = 0 ; com.breadwallet.tools.adapter.TransactionListAdapter . updateEstimatedBlockHeight () ; for ( com.breadwallet.presenter.entities.TransactionListItem t : items ) { if ( t == null ) continue; int blockHeight = t . getBlockHeight () ; int confirms = ( blockHeight == ( java.lang.Integer.MAX_VALUE ) ) ? 0 : ( ( com.breadwallet.tools.adapter.TransactionListAdapter.estimatedBlockHeight ) - blockHeight ) + 1 ; if ( ( blockHeight != ( java.lang.Integer.MAX_VALUE ) ) && ( confirms < 6 ) ) { count ++ ; } } return count ; } 
private int cv ( int y , int x ) { if ( ( x < 0 ) || ( x >= ( width ) ) ) return java.lang.Integer.MAX_VALUE ; return java.lang.Math . abs ( ( ( grayArr [ y ] [ ( x + 1 ) ] ) - ( grayArr [ y ] [ ( x - 1 ) ] ) ) ) ; } 
public java.lang.String findUser ( int idUser ) { assert ( listBlog ) >= 0 : "Unexpected error: the attribute idUser is less than 0" ; java.lang.String nickname = null ; try { java.sql.Connection connection = getConnection () ; java.sql.Statement stm = connection . createStatement () ; java.sql.ResultSet rs = stm . executeQuery ( ( "select * from Utilizador where id=" + idUser ) ) ; while ( rs . next () ) { nickname = rs . getString ( "apelido" ) ; java.lang.System.out . println ( nickname ) ; } } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return nickname ; } 
private java.util.List < org.hisp.dhis.dataelement.DataElementOperand > getOperands ( org.hisp.dhis.dataelement.DataElement dataElement , org.hisp.dhis.dataelement.DataElementCategoryCombo categoryCombo , boolean includeTotals ) { java.util.List < org.hisp.dhis.dataelement.DataElementOperand > operands = com.google.common.collect.Lists . newArrayList () ; if ( ( ! ( categoryCombo . isDefault () ) ) && includeTotals ) { org.hisp.dhis.dataelement.DataElementOperand operand = new org.hisp.dhis.dataelement.DataElementOperand ( dataElement ) ; operands . add ( operand ) ; } for ( org.hisp.dhis.dataelement.DataElementCategoryOptionCombo categoryOptionCombo : categoryCombo . getSortedOptionCombos () ) { org.hisp.dhis.dataelement.DataElementOperand operand = new org.hisp.dhis.dataelement.DataElementOperand ( dataElement , categoryOptionCombo ) ; operands . add ( operand ) ; } return operands ; } 
private void getPaths ( final pf.query.Path.Node node , final java.util.List < pf.query.Path > ans ) { ans . add ( pf.query.Path . singleElementPath ( node ) . append ( new pf.query.Path.AttributeNode ( id ) , pf.query.Path . singleElementPath ( new pf.query.Path.ValueNode ( "ASD" ) ) ) ) ; if ( ( followingAttributes ) != null ) { followingAttributes . getPaths ( node , ans ) ; } } 
private void removeCardFromList ( java.util.ArrayList < model.database.Card > list , model.database.Card chosenCard ) { for ( int i = 0 ; i < ( list . size () ) ; i ++ ) { if ( ( list . get ( i ) . getGameID () ) == ( chosenCard . getGameID () ) ) { list . remove ( i ) ; i -- ; } } } 
public static java.util.List < android.content.pm.LabeledIntent > queryIntents ( android.content.Context context , android.content.Intent targetIntent , java.lang.String packageNameBlacklistRegex ) { java.util.List < android.content.pm.LabeledIntent > intents = new java.util.ArrayList <> () ; for ( android.content.pm.ResolveInfo intentActivity : org.wikipedia.util.ShareUtils . queryIntentActivities ( targetIntent , context ) ) { if ( ! ( org.wikipedia.util.ShareUtils . isIntentActivityBlacklisted ( intentActivity , packageNameBlacklistRegex ) ) ) { intents . add ( org.wikipedia.util.ShareUtils . buildLabeledIntent ( targetIntent , intentActivity ) ) ; } } return intents ; } 
public java.lang.String toJsonString () { double avg = ( ( incomingTransactions ) == 0 ) ? 0 : ( serviceTime ) / ( outgoingTransactions ) ; return ( ( ( ( ( ( ( ( ( ( ( ( ( "{\"incomingTransactions\":" + ( incomingTransactions ) ) + "," ) + "\"incomingTransactionRequestSize\":" ) + ( incomingTransactionRequestSize ) ) + "," ) + "\"incomingTransactionResponseSize\":" ) + ( incomingTransactionResponseSize ) ) + "," ) + "\"incomingTransactionErrors\":" ) + ( incomingTransactionErrors ) ) + "," ) + "\"serviceTime\":" ) + avg ) + "}" ; } 
public static int getThemeDrawable ( android.app.Activity activity ) { switch ( com.supersnek.accounting.Utils.Utils . getThemNumber ( activity ) ) { case 0 : return R.drawable.header_green_bluejpg ; case 1 : return R.drawable.header_blue_red ; case 2 : return R.drawable.header_orange_teal ; case 3 : return R.drawable.header_purple_lime ; case 4 : return R.drawable.header_red_green ; case 5 : return R.drawable.header_red_purple ; case 6 : return R.drawable.header_green_bluejpg ; case 7 : return R.drawable.header_blue_red ; case 8 : return R.drawable.header_orange_teal ; case 9 : return R.drawable.header_purple_lime ; case 10 : return R.drawable.header_red_green ; case 11 : return R.drawable.header_red_purple ; } return R.drawable.header ; } 
@ org.zanata.arquillian.RemoteBefore public void prepareDataBeforeTest () { org.zanata.RestTest.log . info ( "Executing prepareDataBeforeTest()" ) ; java.lang.String dataSetToClear = getDataSetToClear () ; if ( dataSetToClear != null ) { addBeforeTestOperation ( new org.zanata.provider.DBUnitProvider.DataSetOperation ( dataSetToClear , org.dbunit.operation.DatabaseOperation.DELETE_ALL ) ) ; } prepareDBUnitOperations () ; if ( dataSetToClear != null ) { addAfterTestOperation ( new org.zanata.provider.DBUnitProvider.DataSetOperation ( dataSetToClear , org.dbunit.operation.DatabaseOperation.DELETE_ALL ) ) ; } dbUnitProvider . prepareDataBeforeTest () ; entityManagerFactory () . getCache () . evictAll () ; } 
public void init ( com.jaspersoft.android.sdk.network.AuthorizedClient client , com.jaspersoft.android.sdk.service.data.server.ServerInfo serverInfo , float scale ) { if ( ( reportRenderer ) != null ) { throw new java.lang.RuntimeException ( "Report fragment is already inited!" ) ; } resourceWebView . setWebViewClient ( new com.jaspersoft.android.sdk.widget.base.ResourceWebViewClient.Builder () . withEventListener ( this ) . build ( resourceWebView . getContext () ) ) ; reportRenderer = com.jaspersoft.android.sdk.widget.report.renderer.ReportRenderer . create ( client , resourceWebView , serverInfo ) ; this . scale = scale ; } 
void storeByte ( int atAddress , byte value ) { if ( atAddress < ( memory.length ) ) { memory [ atAddress ] = value ; } else { errorHandler . throwDataAddressError ( ( "0x" + ( java.lang.Integer . toHexString ( atAddress ) ) ) ) ; } } 
@ java.lang.Override public void scheduleIfNecessary () { for ( edu.ksu.operatingsystems.javaos.storage.ProcessControlBlock pcb : disk . getProcesses () ) { if ( ( ( ! ( pcb . inMemory () ) ) && ( ! ( pcb . isFinished () ) ) ) && ( ram . isRoomForProcess ( pcb ) ) ) { java.lang.System.out . println ( ( ( "Adding process " + ( pcb . getID () ) ) + " to queue from Long Term Scheduler" ) ) ; ram . addProcessControlBlockToMemoryByProcessID ( pcb . getID () , disk ) ; } } } 
public int daysBetween ( org.joda.time.DateTime startDateTime , org.joda.time.DateTime endDateTime ) { int daysBetween = 0 ; if ( ( startDateTime != null ) && ( endDateTime != null ) ) { daysBetween = org.joda.time.Days . daysBetween ( startDateTime , endDateTime ) . getDays () ; } return daysBetween ; } 
@ java.lang.Override public void updateBoardWithNewTableInfo ( com.playxiangqi.hoxchess.TableInfo tableInfo ) { android.util.Log . d ( com.playxiangqi.hoxchess.NetworkTableActivity.TAG , "Update board with new network Table info (I_TABLE)..." ) ; tableId_ = tableInfo.tableId ; setAndShowTitle ( tableInfo.tableId ) ; invalidateOptionsMenu () ; referee_ . resetGame () ; com.playxiangqi.hoxchess.BoardFragment boardFragment = myBoardFragment_ . get () ; if ( boardFragment != null ) { boardFragment . resetBoard () ; } com.playxiangqi.hoxchess.PlayersFragment playersFragment = myPlayersFragment_ . get () ; if ( playersFragment != null ) { playersFragment . refreshPlayersIfNeeded () ; } } 
public void SetDeltaSetpoint ( double units ) { switch ( mEnabledPIDMode ) { case kManual : break; case kLinear : mLeftMotor1 . set ( ( ( units * ( mInchesToEncoderUnits ) ) + ( mLeftMotor1 . getEncPosition () ) ) ) ; break; case kRotational : mLeftMotor1 . set ( ( ( units * ( mRadiansToEncoderUnits ) ) + ( mLeftMotor1 . getEncPosition () ) ) ) ; break; case kAiming : mLeftMotor1 . set ( ( units + ( mLeftMotor1 . getEncPosition () ) ) ) ; break; } } 
public static rx.Observable < com.objectivetruth.uoitlibrarybooking.data.models.calendarmodel.CalendarData > parseDataToGetClickableDateDetailsObs ( android.support.v4.util.Pair < com.objectivetruth.uoitlibrarybooking.data.models.calendarmodel.CalendarData , java.lang.String [] > calendarDataStringPair ) { try { return rx.Observable . just ( com.objectivetruth.uoitlibrarybooking.data.models.calendarmodel.CalendarParser . _parseDataToGetClickableDateDetails ( calendarDataStringPair ) ) ; } catch ( java.text.ParseException e ) { timber.log.Timber . e ( e , "Error parsing the Clickable Date pages for Grid info" ) ; return rx.Observable . error ( e ) ; } } 
public static void getSavedGame ( java.lang.String filePath ) throws byui.cit260.detectiveWizard.exceptions.GameControlException { byui.cit260.detectiveWizard.model.Game game = null ; try ( java.io.FileInputStream fips = new java.io.FileInputStream ( filePath ) ) { java.io.ObjectInputStream input = new java.io.ObjectInputStream ( fips ) ; game = ( ( byui.cit260.detectiveWizard.model.Game ) ( output . readObject () ) ) ; } catch ( java.io.FileNotFoundException fnfe ) { throw new byui.cit260.detectiveWizard.exceptions.GameControlException ( fnfe . getMessage () ) ; } catch ( java.lang.Exception e ) { throw new byui.cit260.detectiveWizard.exceptions.GameControlException ( e . getMessage () ) ; } detectiveWizard.DetectiveWizard . setCurrentGame ( game ) ; } 
public void updateLevelButtons ( com.alexaut.kroniax.Application app ) { int unlockedLevels = app . getProgressManager () . getUnlockedLevels () ; for ( int i = 0 ; i < 9 ; i ++ ) { int number = java.lang.Integer . parseInt ( getChildren () . get ( i ) . getName () ) ; getChildren () . get ( i ) . setVisible ( ( i < unlockedLevels ) ) ; } } 
@ org.junit.Test public void testError ( ) throws java.io.IOException { org.searsia.web.Search search = new org.searsia.web.Search ( org.searsia.web.SearchTest.index , org.searsia.web.SearchTest.engines ) ; javax.ws.rs.core.Response response = search . query ( "wrong.json" , "testquery" ) ; int status = response . getStatus () ; org.junit.Assert . assertEquals ( 503 , status ) ; } 
private void loadJSON () { redditreader.app.RedditInterface redditInterface = new retrofit2.Retrofit.Builder () . baseUrl ( redditreader.app.MainActivity.BASE_URL ) . addCallAdapterFactory ( com.jakewharton.retrofit2.adapter.rxjava2.RxJava2CallAdapterFactory . create () ) . addConverterFactory ( retrofit2.converter.gson.GsonConverterFactory . create () ) . build () . create ( redditreader.app.RedditInterface . class ) ; mCompositeDisposable . add ( redditInterface . register () . observeOn ( io.reactivex.android.schedulers.AndroidSchedulers . mainThread () . subscribeOn ( io.reactivex.schedulers.Schedulers . io () ) ) . subscribe ( this : : handleResponse , this : : handleError ) ) ; } 
private com.metis.meishuquan.model.commons.User getUserInfoFromSharedPreferences () { com.metis.meishuquan.util.SharedPreferencesUtil spu = com.metis.meishuquan.util.SharedPreferencesUtil . getInstanse ( com.metis.meishuquan.MainApplication.UIContext ) ; java.lang.String json = spu . getStringByKey ( SharedPreferencesUtil.USER_LOGIN_INFO ) ; com.metis.meishuquan.model.login.LoginUserData user = new com.google.gson.Gson () . fromJson ( json , new com.google.common.reflect.TypeToken < com.metis.meishuquan.model.login.LoginUserData > () {} . getType () ) ; if ( ( user . getData () ) == null ) { return new com.metis.meishuquan.model.commons.User () ; } return user . getData () ; } 
public java.lang.String getSuffix ( org.bukkit.entity.Player p ) { if ( ( ( getServer () . getPluginManager () . getPlugin ( "Vault" ) ) != null ) && ( ( net.citringo.hageplugin.HagePlugin.chat ) != null ) ) { return net.citringo.hageplugin.HagePlugin.chat . getPlayerSuffix ( p ) . replaceAll ( "&([0-9a-fk-r])" , "§$1" ) ; } return "" ; } 
public void clear () { healthKits = 0 ; securityCardLevel = 0 ; selectedWeapon = null ; selectedItem = items [ 0 ] ; sidearm = null ; primary = null ; explosive = null ; for ( int j = 1 ; j < ( items.length ) ; j ++ ) { items [ j ] = null ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( savedListHolder . resIsContained ( restaurant ) ) { removeSaved ( position ) ; holder.saveButton . setImageDrawable ( android.support.v4.content.ContextCompat . getDrawable ( context , R.drawable.star_not ) ) ; return; } addToSavedList ( restaurant ) ; holder.saveButton . setImageDrawable ( android.support.v4.content.ContextCompat . getDrawable ( context , R.drawable.star_filled ) ) ; } 
public void updateTask ( int index , seedu.taskit.model.task.ReadOnlyTask editedTask ) throws seedu.taskit.model.task.UniqueTaskList.DuplicateTaskException { assert editedTask != null ; seedu.taskit.model.task.Task taskToUpdate = internalList . get ( index ) ; if ( ( taskToUpdate . equals ( editedTask ) ) && ( internalList . contains ( editedTask ) ) ) { throw new seedu.taskit.model.task.UniqueTaskList.DuplicateTaskException () ; } taskToUpdate . resetData ( editedTask ) ; internalList . set ( index , taskToUpdate ) ; sortTasks () ; } 
@ java.lang.Override public void mousePressed ( java.awt.event.MouseEvent e ) { if ( ( e . getButton () ) == ( java.awt.event.MouseEvent.BUTTON1 ) ) { selectionBegin = e . getX () ; selectionEnd = e . getX () ; selectionInProcess = true ; for ( ru.dso.nano.v3.analyzer.gui.SelectionListener listener : selectionListeners ) { listener . onSelectionStart ( selectionBegin ) ; } } } 
public static void showDialog ( final android.content.Context context , java.lang.String message , final android.content.DialogInterface.OnClickListener positiveClickListener , final android.content.DialogInterface.OnClickListener negativeClickListener ) { android.support.v7.app.AlertDialog.Builder alertDialogBuilder = new android.support.v7.app.AlertDialog.Builder ( context ) ; alertDialogBuilder . setTitle ( "" ) . setMessage ( message ) . setCancelable ( false ) . setPositiveButton ( "Ok" , positiveClickListener ) . setNegativeButton ( "Cancel" , negativeClickListener ) ; final android.support.v7.app.AlertDialog alertDialog = alertDialogBuilder . create () ; alertDialog . setOnShowListener ( new android.content.DialogInterface.OnShowListener () { @ java.lang.Override public void onShow ( android.content.DialogInterface arg0 ) {} } ) ; alertDialog . show () ; } 
@ java.lang.Override protected void onResume () { super . onResume () ; try { mCamera = android.hardware.Camera . open () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; android.widget.Toast . makeText ( this , "启动照相机失败，请检查设备并打开权限" , Toast.LENGTH_SHORT ) . show () ; } cameraCurrentlyLocked = defaultCameraId ; mPreview . setCamera ( mCamera ) ; startFocus () ; } 
private org.wso2.carbon.apimgt.api.model.AccessTokenInfo getAccessTokenFromResponse ( org.json.simple.JSONObject map ) { org.wso2.carbon.apimgt.api.model.AccessTokenInfo tokenInfo = new org.wso2.carbon.apimgt.api.model.AccessTokenInfo () ; tokenInfo . setAccessToken ( ( ( java.lang.String ) ( map . get ( "access_token" ) ) ) ) ; tokenInfo . setValidityPeriod ( java.lang.Long . valueOf ( ( ( java.lang.String ) ( map . get ( "expires_in" ) ) ) ) ) ; tokenInfo . setScope ( new java.lang.String [] { ( ( java.lang.String ) ( map . get ( "scope" ) ) ) } ) ; return tokenInfo ; } 
@ java.lang.Override public void generateEntitlementPolicies ( org.wso2.carbon.appmgt.api.model.APIIdentifier apiIdentifier , java.lang.String authorizedAdminCookie ) throws org.wso2.carbon.appmgt.api.AppManagementException { org.wso2.carbon.appmgt.impl.AppManagerConfiguration config = org.wso2.carbon.appmgt.impl.service.ServiceReferenceHolder . getInstance () . getAPIManagerConfigurationService () . getAPIManagerConfiguration () ; java.util.List < org.wso2.carbon.appmgt.api.model.entitlement.XACMLPolicyTemplateContext > xacmlPolicyTemplateContexts = appMDAO . getEntitlementPolicyTemplateContexts ( apiIdentifier ) ; org.wso2.carbon.appmgt.api.EntitlementService entitlementService = org.wso2.carbon.appmgt.impl.entitlement.EntitlementServiceFactory . getEntitlementService ( config , authorizedAdminCookie ) ; entitlementService . generateAndSaveEntitlementPolicies ( xacmlPolicyTemplateContexts ) ; appMDAO . updateURLEntitlementPolicyPartialMappings ( xacmlPolicyTemplateContexts ) ; } 
public void sendPaymentRequest ( final java.lang.String mdid , info.blockchain.wallet.contacts.data.PaymentRequest request , java.lang.String fTxId ) throws info.blockchain.wallet.exceptions.MetadataException , info.blockchain.wallet.exceptions.SharedMetadataException , java.io.IOException , org.spongycastle.crypto.InvalidCipherTextException { info.blockchain.wallet.contacts.Contacts.log . info ( "Sending inter-wallet-comms payment request response" ) ; sendMessage ( mdid , request . toJson () , info.blockchain.wallet.contacts.Contacts.TYPE_PAYMENT_REQUEST_RESPONSE , true ) ; info.blockchain.wallet.contacts.data.Contact contact = getContactFromMdid ( mdid ) ; info.blockchain.wallet.contacts.data.FacilitatedTransaction ftx = contact . getFacilitatedTransactions () . get ( fTxId ) ; ftx . setState ( FacilitatedTransaction.STATE_WAITING_FOR_PAYMENT ) ; ftx . setRole ( FacilitatedTransaction.ROLE_PR_INITIATOR ) ; ftx . updateCompleted () ; save () ; } 
@ org.junit.Test public void EncapsulateManyToMany () { io.beanmapper.House house = createHouse () ; io.beanmapper.ResultManyToMany result = beanMapper . map ( house , io.beanmapper.ResultManyToMany . class ) ; org.junit.Assert . assertEquals ( "housename" , result . getName () ) ; org.junit.Assert . assertEquals ( "denneweg" , result . getAddressOfTheHouse () . getStreet () ) ; org.junit.Assert . assertEquals ( 1 , result . getAddressOfTheHouse () . getNumber () ) ; org.junit.Assert . assertEquals ( "Nederland" , result . getAddressOfTheHouse () . getCountry () . getCountryName () ) ; } 
private java.lang.String generateKey () { java.lang.String key = "" ; for ( int i = 0 , j = 8 ; i < j ; i ++ ) { int temp = ( ( int ) ( java.lang.Math . floor ( ( ( java.lang.Math . random () ) * 10 ) ) ) ) ; key += temp ; } java.lang.System.out . println ( key ) ; return key ; } 
public java.util.List < com.alibaba.fastjson.JSONObject > getJobInfoList ( int taskId ) { java.lang.String key = com.cszjo.jobhunter.model.RedisPrefix . getRedisJobInfoName ( taskId ) ; java.util.List < java.lang.String > lists = jedisUtils . getList ( key ) ; java.util.List < com.alibaba.fastjson.JSONObject > jobInfos = com.google.common.collect.Lists . newArrayList () ; for ( int i = 0 ; i < ( ( lists . size () ) / 2 ) ; i ++ ) { jobInfos . add ( com.alibaba.fastjson.JSONObject . parseObject ( lists . get ( i ) ) ) ; } return jobInfos ; } 
@ android.support.annotation.Nullable private static java.util.List < com.otaliastudios.cameraview.Size > sizesFromList ( java.util.List < android.hardware.Camera.Size > sizes ) { if ( sizes == null ) return null ; java.util.List < com.otaliastudios.cameraview.Size > result = new java.util.ArrayList ( sizes . size () ) ; for ( android.hardware.Camera.Size size : sizes ) { result . add ( new com.otaliastudios.cameraview.Size ( size.width , size.height ) ) ; } com.otaliastudios.cameraview.Camera1.LOG . i ( "sizesFromList:" , result . toArray () ) ; return result ; } 
public boolean onKeyUp ( int keyCode , android.view.KeyEvent event ) { if ( ( event . getAction () ) == ( android.view.KeyEvent.ACTION_UP ) ) { switch ( keyCode ) { case android.view.KeyEvent.KEYCODE_MENU : android.util.Log . i ( com.arefly.wordcounter.MainActivity.TAG , "Menu Button Clicked" ) ; topToolbar . showOverflowMenu () ; return true ; } } return super . onKeyDown ( keyCode , event ) ; } 
private boolean isUnauthorized ( java.util.Map < java.lang.String , java.lang.Object > response , boolean throwOnUnauthorized ) throws com.pokitdok.UnauthorizedException { boolean unauthorized = false ; if ( response != null ) { if ( response . containsKey ( "message" ) ) { if ( "Unauthorized" . equals ( response . get ( "message" ) ) ) { unauthorized = true ; } } } if ( throwOnUnauthorized && unauthorized ) { throw new com.pokitdok.UnauthorizedException () ; } return unauthorized ; } 
public boolean deleteEmploye ( java.lang.String id ) { md.utm.fi.sincronizeServices.DBCollection collection = md.utm.fi.sincronizeServices.UserDAO . getConnection () . getCollection ( "users" ) ; md.utm.fi.sincronizeServices.BasicDBObject document = new md.utm.fi.sincronizeServices.BasicDBObject () ; document . put ( "id" , id ) ; collection . remove ( document ) ; return false ; } 
public static long count ( int [] data ) { edu.msergey.jalg.sorting.InversionsCounter.inversionsCount = 0 ; edu.msergey.jalg.sorting.InversionsCounter.scratch = new int [ data.length ] ; edu.msergey.jalg.sorting.InversionsCounter.data = data ; edu.msergey.jalg.sorting.InversionsCounter . sortAndCount ( 0 , ( ( data.length ) - 1 ) ) ; edu.msergey.jalg.sorting.InversionsCounter.scratch = null ; return edu.msergey.jalg.sorting.InversionsCounter.inversionsCount ; } 
@ java.lang.Override protected void onPostCreate ( android.os.Bundle savedInstanceState ) { super . onPostCreate ( savedInstanceState ) ; if ( me.zsj.pretty_girl.utils.NetUtils . checkNet ( this ) ) { mRecyclerView . postDelayed ( new java.lang.Runnable () { @ java.lang.Override public void run () { mRefreshLayout . setRefreshing ( true ) ; } } , 350 ) ; } else { android.support.design.widget.Snackbar . make ( mRecyclerView , "无网络状态不能获取美女哦!" , Snackbar.LENGTH_INDEFINITE ) . setAction ( "知道了" , new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) {} } ) . show () ; } fetchGirlData ( false ) ; } 
private boolean sendEmptyAnswer ( java.lang.String text ) { if ( ( ( text . trim () . length () ) == 0 ) && ( ( uiSubscriber ) != null ) ) { uiSubscriber . onTranslateResponse ( new yandex.muratov.translator.network.data.TranslateAnswer () . setCode ( DataCodes.VALID_ANSWER_CODE ) ) ; uiSubscriber . onDictionaryResponse ( new yandex.muratov.translator.network.data.DictionaryAnswer () . setCode ( DataCodes.VALID_ANSWER_CODE ) ) ; return true ; } return false ; } 
public int findForwardingLevel ( java.lang.String user , DynamicTreeNode oldLocation ) { int level = 0 ; int result = level ; int max = getCMR ( user , oldLocation ) ; int lastLevel = max ; while ( ( oldLocation.parent ) != null ) { level ++ ; oldLocation = oldLocation.parent ; int aggCMR = getAggCMR ( user , oldLocation ) ; if ( ( aggCMR - lastLevel ) > max ) { max = aggCMR - lastLevel ; result = level ; } lastLevel = aggCMR ; } return result ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/suggest" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = { "application/json" } ) @ org.springframework.web.bind.annotation.ResponseBody public java.util.List < net.hunnor.dict.model.Autocomplete > suggest ( @ org.springframework.web.bind.annotation.RequestParam ( value = "term" , required = false ) java.lang.String term ) { java.util.List < net.hunnor.dict.model.Autocomplete > result = null ; try { result = searchService . suggest ( term , 10 ) ; } catch ( net.hunnor.dict.model.SearchException e ) { net.hunnor.dict.web.ApiController.LOGGER . error ( e . getMessage () , e ) ; } return result ; } 
protected void authorizeDelfoi ( fi.metatavu.edelphi.smvcj.controllers.RequestContext requestContext , fi.metatavu.edelphi.domainmodel.base.Delfoi delfoi , java.lang.String actionAccessName ) { if ( delfoi == null ) throw new java.lang.IllegalStateException ( "PageController Delfoi action without Delfoi" ) ; if ( ! ( fi.metatavu.edelphi.utils.ActionUtils . hasDelfoiAccess ( requestContext , actionAccessName . toString () ) ) ) { throw new fi.metatavu.edelphi.smvcj.AccessDeniedException ( requestContext . getRequest () . getLocale () ) ; } } 
@ net.devintia.commons.bukkit.command.CommandInfo ( name = "loadmodel" , perm = "loadmodel" , description = "Loads and spawns a armor stand model" , usage = "<command> <filenname>" ) public void loadModel ( net.devintia.commons.bukkit.command.CommandArguments args ) { java.io.File file = new java.io.File ( getDataFolder () , ( ( args . getArg ( 0 ) ) + ".model" ) ) ; if ( ! ( file . exists () ) ) { args . getSender () . sendMessage ( "unknown model" ) ; return; } java.lang.System.out . println ( file . getAbsolutePath () ) ; net.devintia.commons.bukkit.armorstand.ArmorStandModel model = net.devintia.commons.bukkit.armorstand.ArmorStandModelImporter . importModel ( args . getArg ( 0 ) , file ) ; model . spawn ( args . getPlayer () . getLocation () ) ; } 
@ java.lang.Override public void onMessageReceived ( @ android.support.annotation.NonNull com.criptext.comunication.MOKMessage message ) { processNewMessage ( message ) ; boolean isMyOwnMsg = message . getSid () . equals ( myMonkeyID ) ; updateConversation ( ( isMyOwnMsg ? message . getRid () : message . getConversationID () ) , getSecondaryTextByMOkMessage ( message ) , ( isMyOwnMsg ? MonkeyConversation.ConversationStatus.deliveredMessage : MonkeyConversation.ConversationStatus.receivedMessage ) , ( isMyOwnMsg ? 0 : 1 ) , message . getDatetimeorder () ) ; } 
public static long hashSpeedNode ( float vx , MarioAI.graph.edges.DirectedEdge edge ) { final int speedHash = MarioAI.Hasher . hashSpeed ( vx , MarioAI.Hasher.FACTOR_NUMBER_OF_SPEED_NODES ) ; final long speedSign = ( speedHash >= 0 ) ? 0 : java.lang.Long.MIN_VALUE ; final long a = ( ( ( long ) ( MarioAI.Hasher . hashSpeed ( vx , MarioAI.Hasher.FACTOR_NUMBER_OF_SPEED_NODES ) ) ) < < 32 ) | speedSign ; final long edgeHash = edge . hashCode () ; return a | edgeHash ; } 
@ java.lang.Override public float getSaturationModifier ( @ javax.annotation.Nonnull net.minecraft.item.ItemStack stack ) { com.girafi.culinarycultivation.item.ItemCropProduct.ProductType productType = com.girafi.culinarycultivation.item.ItemCropProduct.ProductType . byItemStack ( stack ) ; switch ( type ) { case CROP : return productType . getCropSaturation () ; case CROP_COOKED : return productType . getCookedSaturation () ; default: return super . getSaturationModifier ( stack ) ; } } 
public void setFetchDirection ( int direction ) throws java.sql.SQLException { checkOpen () ; switch ( direction ) { case java.sql.ResultSet.FETCH_UNKNOWN : case java.sql.ResultSet.FETCH_REVERSE : if ( ( this . resultSetType ) == ( java.sql.ResultSet.TYPE_FORWARD_ONLY ) ) { throw new java.sql.SQLException ( net.sourceforge.jtds.jdbc.Messages . get ( "error.resultset.fwdonly" ) , "24000" ) ; } case java.sql.ResultSet.FETCH_FORWARD : this . fetchDirection = direction ; break; default: throw new java.sql.SQLException ( net.sourceforge.jtds.jdbc.Messages . get ( "error.generic.badoption" , java.lang.Integer . toString ( direction ) , "direction" ) , "24000" ) ; } } 
public java.awt.Color getColor () { switch ( tile . getType () ) { case Null : return java.awt.Color.gray ; case Number : int num = tile . getNumber () ; return kiviuq.views.TileView.NUMBER_COLORS [ num ] ; case Release : return java.awt.Color.PINK ; default: return java.awt.Color.BLACK ; } } 
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { uk.ac.tees.donut.squad.users.FBUser user = dataSnapshot . getValue ( uk.ac.tees.donut.squad.users.FBUser . class ) ; user . setPicture ( photoUrl . toString () ) ; user . setName ( name ) ; mDatabase . child ( uId ) . setValue ( user ) ; } 
@ java.lang.Override public void run () { com.ggstudios.lolcraft.SplashFetcher.FetchToken token = com.ggstudios.lolcraft.SplashFetcher . getInstance () . fetchChampionSplash ( ( ( android.os.Build.VERSION.SDK_INT ) >= ( android.os.Build.VERSION_CODES.HONEYCOMB ) ? com.ggstudios.lolcraft.MainFragment.THREAD_POOL_EXECUTOR : null ) , holder.lastInfo.key , holder.splash . getWidth () , 0 , new com.ggstudios.lolcraft.SplashFetcher.OnDrawableRetrievedListener () { @ java.lang.Override public void onDrawableRetrieved ( android.graphics.drawable.Drawable d ) { holder.lastToken = null ; holder.splash . setImageDrawable ( d ) ; fadeViewIn ( holder.splash ) ; } } ) ; holder.lastToken = token ; } 
public static java.util.ArrayList < java.lang.String > ListAnagrams ( java.lang.String testWord , Dictionary dictionary ) { Anagram.anagramList . clear () ; Anagram.anagramCache . clear () ; Anagram . FindListAnagrams ( testWord . toLowerCase () . toCharArray () , dictionary , ( ( testWord . length () ) - 1 ) ) ; return Anagram.anagramList ; } 
public boolean remove ( final int value ) { @ uk.co.real_logic.agrona.generation.DoNotSub int index = uk.co.real_logic.agrona.collections.Hashing . intHash ( value , mask ) ; while ( ( values [ index ] ) != ( missingValue ) ) { if ( ( values [ index ] ) == value ) { values [ index ] = missingValue ; compactChain ( index ) ; ( size ) -- ; return true ; } index = next ( index ) ; } return false ; } 
public com.sk89q.worldguard.bukkit.WorldGuardPlugin getWorldGuard () { final org.bukkit.plugin.Plugin plugin = org.bukkit.Bukkit . getServer () . getPluginManager () . getPlugin ( "WorldGuard" ) ; if ( ! ( plugin instanceof com.sk89q.worldguard.bukkit.WorldGuardPlugin ) ) { return null ; } return ( ( com.sk89q.worldguard.bukkit.WorldGuardPlugin ) ( plugin ) ) ; } 
@ java.lang.Override public void dialogData ( java.lang.String newData , java.lang.String oldData , android.os.Bundle extras ) { if ( ( newData == null ) || ( ( newData != null ) && ( ( newData . length () ) < 1 ) ) ) { android.widget.Toast . makeText ( mContext , mContext . getString ( R.string.text_not_saved ) , Toast.LENGTH_SHORT ) . show () ; return; } if ( extras != null ) { editUser ( extras , newData , oldData ) ; } else { editCard ( newData , oldData ) ; } } 
@ org.junit.Test public void should_return_4_books_when_add_one () { java.lang.Iterable < bookshelf.model.Book > books = bookService . addBook ( "9780132350555" , "Test Driven Development by Example" , "Kent Beck" , 30.32 ) ; for ( bookshelf.model.Book book : books ) { org.junit.Assert . assertThat ( book , org.hamcrest.core.Is . is ( bookRepository.BOOKS_MAP . get ( book . getIsbn () ) ) ) ; } } 
@ java.lang.Override public void showConnectionProblem () { org.stepic.droid.util.ProgressHelper . dismiss ( progressBarOnEmptyScreen ) ; org.stepic.droid.util.ProgressHelper . dismiss ( swipeRefreshLayout ) ; coursesAdapter . showLoadingFooter ( true ) ; if ( ( ( courses ) == null ) || ( courses . isEmpty () ) ) { showEmptyScreen ( false ) ; reportConnectionProblem . setVisibility ( View.VISIBLE ) ; } } 
public void pushIncludePath ( @ javax.annotation.Nonnull final java.lang.String path ) { SassLibrary.INSTANCE . sass_option_push_include_path ( this . $options , path ) ; final java.util.Collection < java.nio.file.Path > includePath = new java.util.ArrayList <> ( this . getIncludePath () ) ; if ( ! ( includePath . contains ( java.nio.file.Paths . get ( "path" ) ) ) ) { com.cathive.sass.SassOptions.LOGGER . log ( java.util.logging.Level.WARNING , "Could not push \"{0}\" to include paths. sass_option_push_include_path seems to be broken. Using workaround..." , path ) ; includePath . add ( java.nio.file.Paths . get ( path ) ) ; this . setIncludePath ( includePath ) ; } } 
public boolean validateUser () { java.lang.String [] loginDetails = guiController . getLoginDetails () ; microchat.entity.UserPreferences.USERNAME = loginDetails [ 0 ] ; microchat.entity.UserPreferences.PASSWORD = loginDetails [ 1 ] ; boolean validated = microchat.handlers.RelayserverHandler . validateUser () ; guiController . eventLogin ( validated ) ; if ( validated ) { firebaseHandler . authenticateToFirebase () ; firebaseHandler . initiateChatrooms () ; firebaseHandler . initiateFriendList () ; updateFilelist () ; guiController . eventListChatrooms () ; } return validated ; } 
@ java.lang.Override public void filterOwnershipTypeBasedPolicies ( java.lang.String ownershipType , java.util.List < org.wso2.carbon.policy.mgt.common.Policy > policies ) { java.util.List < org.wso2.carbon.policy.mgt.common.Policy > temp = new java.util.ArrayList < org.wso2.carbon.policy.mgt.common.Policy > () ; for ( org.wso2.carbon.policy.mgt.common.Policy policy : policies ) { if ( ( ownershipType . equalsIgnoreCase ( policy . getOwnershipType () ) ) || ( PolicyManagementConstants.ANY . equalsIgnoreCase ( policy . getOwnershipType () ) ) ) { temp . add ( policy ) ; } } policies = temp ; } 
@ java.lang.Override public org.json.JSONWriter toTemplateJSONValue ( org.json.JSONWriter writer , java.lang.String key , java.lang.Object formElementValue , org.sablo.specification.PropertyDescription pd , org.sablo.websocket.utils.DataConversion browserConversionMarkers , com.servoy.j2db.FlattenedSolution fs , com.servoy.j2db.server.ngclient.FormElementContext formElementContext ) throws org.json.JSONException { if ( fs != null ) { java.lang.String url = getMediaUrl ( formElementValue , fs , null ) ; if ( "resources/fs/mnx_libraries/button/groen/100/30x30.png?imageWidth=30&imageHeight=30" . equals ( url ) ) { int a = 1 / 2 ; } if ( url != null ) { return toJSON ( writer , key , new com.servoy.j2db.server.ngclient.property.types.MediaPropertyType.MediaWrapper ( formElementValue , url ) , browserConversionMarkers , null ) ; } } return writer ; } 
@ java.lang.Override public org.neo4j.kernel.impl.transaction.log.WritableLogChannel put ( byte [] value , int length ) throws java.io.IOException { int offset = 0 ; while ( offset < length ) { int chunkSize = java.lang.Math . min ( length , ( ( buffer . capacity () ) > > 1 ) ) ; bufferWithGuaranteedSpace ( chunkSize ) . put ( value , offset , chunkSize ) ; offset += chunkSize ; } return this ; } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { switch ( item . getItemId () ) { case android.R.id.home : finish () ; case R.id.clear : editTextWrapper . setText ( "" ) ; return true ; case R.id.go : invokeSearch () ; return true ; default: return super . onOptionsItemSelected ( item ) ; } } 
public void abort ( java.lang.String error ) { android.util.Log . d ( org.mozilla.gecko.sync.setup.jpake.JpakeClient.LOG_TAG , "aborting..." ) ; finished = true ; if ( error == null ) { error = org.mozilla.gecko.sync.setup.Constants.JPAKE_ERROR_USERABORT ; } android.util.Log . d ( org.mozilla.gecko.sync.setup.jpake.JpakeClient.LOG_TAG , error ) ; if ( ( ( Constants.JPAKE_ERROR_CHANNEL . equals ( error ) ) || ( Constants.JPAKE_ERROR_NETWORK . equals ( error ) ) ) || ( Constants.JPAKE_ERROR_NODATA . equals ( error ) ) ) {} else { reportFailure ( error ) ; } ssActivity . displayAbort ( error ) ; } 
@ ga.doblue.project.controller.PostMapping org.springframework.http.ResponseEntity < ? > create ( @ ga.doblue.project.controller.RequestBody ga.doblue.project.model.Project project ) throws java.lang.Exception { ga.doblue.project.help.AjaxResult ajaxResult = new ga.doblue.project.help.AjaxResult () ; try { service . insert ( project ) ; ajaxResult . setResult ( "SUCS" ) ; } catch ( java.lang.Exception e ) { ajaxResult . setResult ( "FAIL" ) ; } return new org.springframework.http.ResponseEntity < ga.doblue.project.help.AjaxResult > ( ajaxResult , org.springframework.http.HttpStatus.OK ) ; } 
private managers.roadnetwork.RUnit checkIntersectionAndReturnIntersectedRUnit ( java.util.Collection < managers.roadnetwork.RUnit > rUnits , ui.Coordinates intersectionCoordinates ) { for ( managers.roadnetwork.RUnit rUnit : rUnits ) { ui.Coordinates coordinates = new ui.Coordinates ( rUnit . getX () , rUnit . getY () ) ; if ( ( ( rUnit . getX () ) == ( intersectionCoordinates . getX () ) ) & ( ( rUnit . getY () ) == ( intersectionCoordinates . getY () ) ) ) { java.lang.System.out . println ( "INTERSECTION" ) ; return rUnit ; } } return null ; } 
public void onNothingSelected ( android.widget.AdapterView parent ) { setInsurance_enddate ( ( ( ( ( ( ( getInsurance_startdate () . getDayOfMonth () ) + "/" ) + ( getInsurance_startdate () . getMonth () ) ) + "/" ) + ( getInsurance_startdate () . getYear () ) ) + 1 ) ) ; android.util.Log . e ( "Insurance End Date" , getInsurance_enddate () ) ; android.util.Log . e ( "Cover Period" , "Index changed to do nothing" ) ; } 
public void setFormula ( final de.uni_freiburg.informatik.ultimate.logic.Term formula ) { if ( mConstructionFinished ) { if ( ( mFormula ) == null ) { mFormula = formula ; } else { throw new java.lang.IllegalStateException ( "Formula already set." ) ; } } else { throw new java.lang.IllegalStateException ( "Construction finished, TransFormula must not be modified." ) ; } } 
@ java.lang.Override public byte [] getPrintData () { messageData = new byte [ translator . getPCLSize () ] ; resetPrinter () ; addUnitOfMeasure () ; addPageSize () ; addESC () ; addText ( "*p0P" ) ; addPosition () ; addConfigureImageData () ; addDotsPerInch () ; addImageFile () ; addESC () ; addText ( "*rC" ) ; addESC () ; addText ( "*p1P" ) ; resetPrinter () ; return messageData ; } 
private java.awt.Font randomFont () { java.util.Random r = new java.util.Random () ; int index = r . nextInt ( this . fontNames . length ) ; java.lang.String fontName = this . fontNames [ index ] ; int style = r . nextInt ( 4 ) ; int size = ( r . nextInt ( this . fontSizeRange ) ) + ( this . fontBasicSize ) ; return new java.awt.Font ( fontName , style , size ) ; } 
public < T > void loadAll ( final java.lang.Class < T > type , final com.phlox.asql.ASQL.ResultCallback < java.util.List < T > > callback ) { com.phlox.asql.ClassInfo classInfo = models . getClassInfo ( type ) ; java.lang.String query = "SELECT * FROM " + ( classInfo.tableName ) ; queryAll ( type , "" , null , callback ) ; } 
private java.lang.String addFloatingTasks () { java.lang.String name = parser . getName () ; java.lang.String tag = parser . getTag () ; Task task = new Task ( TASK_TYPE.FLOATING , name , tag ) ; java.util.ArrayList < Task > floatingTasks = logic . getFloatingTasks () ; floatingTasks . add ( task ) ; logic . setFloatingTasks ( floatingTasks ) ; return ( "Floating task \"" + name ) + "\" added to floatingTasks." ; } 
public java.util.List < com.hlb.dblogging.jpa.model.AuditMaster > getAuditMasterMessageList () { if ( ( ( auditMasterList ) == null ) || ( ( insertDeleted ) == true ) ) { auditMasterList = auditMasterService . getListOfMessagesByTime ( new java.util.Date () ) ; com.hlb.dblogging.log.utility.ApplLogger . getLogger () . info ( ( "AuditMaster list of size from database is : " + ( auditMasterList . size () ) ) ) ; } return auditMasterList ; } 
public void markTaskAsCompleated ( TodoList toDoList ) { java.lang.String choice ; TodoItem task ; try { view . printAllTasks ( todoList ) ; choice = view . takeNumberToMark () ; int choiceInt = java.lang.Integer . parseInt ( choice ) ; task = toDoList.tasks . get ( ( choiceInt - 1 ) ) ; task . markAsCompleated () ; view . printThatCompleated () ; } catch ( java.lang.IndexOutOfBoundsException e ) { java.lang.System.out . println ( "No task with such number !" ) ; } } 
public static int getHashKeyOf ( java.lang.String city , main.java.HashTable instance ) throws test.java.HashTableTests.HashTableUtilException { try { java.lang.Integer hashValue = ( ( java.lang.Integer ) ( test.java.HashTableTests.HashTableTestUtilities . execute ( test.java.HashTableTests.HashTableTestUtilities.HASH_KEY_METHOD_NAME , city , instance ) ) ) ; return hashValue . intValue () ; } catch ( test.java.HashTableTests.HashTableUtilException e ) { java.lang.System.out . println ( e ) ; throw new test.java.HashTableTests.HashTableUtilException ( ( "Failed to retrieve a hash key for city: " + city ) ) ; } } 
public static java.lang.String getRandomString ( java.lang.String . . . strings ) { java.lang.String result = "" ; if ( ( strings.length ) > 0 ) { result = strings [ com.jsl.babytrader.Utilities.CommonUtilities . getRandomInteger ( 0 , ( ( strings.length ) - 1 ) ) ] ; } return result ; } 
public void addNumberOfFish ( models.Fish typeOfFish , long numberOfFish ) { if ( this . fishes . contains ( typeOfFish ) ) { this . getFishCount ( typeOfFish ) . addCount ( numberOfFish ) ; this . getFishCount ( typeOfFish ) . save () ; } else { this . fishes . add ( typeOfFish ) ; this . fishCounts . add ( new models.FishCount ( this , typeOfFish . getId () , numberOfFish ) ) ; typeOfFish . addLocation ( this ) ; typeOfFish . update () ; } } 
private long getFileSize ( ) throws java.io.IOException { if ( file . exists () ) { java.io.RandomAccessFile fileStore = new java.io.RandomAccessFile ( file , "r" ) ; fileStore . seek ( br.ufc.crateus.eda.btree.DataSerializer.FILE_SIZE_OFFSET ) ; long fileSize = fileStore . readLong () ; fileStore . close () ; return fileSize ; } else { java.io.RandomAccessFile fileStore = new java.io.RandomAccessFile ( file , "rw" ) ; fileStore . seek ( br.ufc.crateus.eda.btree.DataSerializer.FILE_SIZE_OFFSET ) ; fileStore . writeLong ( 8L ) ; fileStore . close () ; return 0L ; } } 
@ java.lang.Override public void refreshPolicyChains () { java.util.LinkedList < Controller.PolicyChain > newChains = new java.util.LinkedList < Controller.PolicyChain > () ; for ( Common.Protocol.RawPolicyChain rawChain : _currentRawChains ) { _currentChains . add ( generatePolicyChain ( rawChain ) ) ; } if ( ( ( _currentChains ) != null ) && ( newChains . equals ( _currentChains ) ) ) return; _currentChains = newChains ; _dpiController . updatePolicyChains ( _currentChains ) ; } 
@ org.junit.Test public void testTransactionalGetOrCreate () { com.google.gcloud.datastore.Entity task ; com.google.gcloud.datastore.Transaction txn = datastore . newTransaction () ; try { try { task = txn . get ( taskKey ) ; } catch ( com.google.gcloud.datastore.DatastoreException e ) { task = com.google.gcloud.datastore.Entity . builder ( taskKey ) . build () ; txn . put ( task ) ; txn . commit () ; } } finally { if ( txn . active () ) { txn . rollback () ; } } org.junit.Assert . assertEquals ( task , datastore . get ( taskKey ) ) ; } 
public void deleteInvestments () { android.database.sqlite.SQLiteDatabase db = dbHelper . getWritableDatabase () ; db . execSQL ( ( "DROP TABLE IF EXISTS " + ( hu.uniobuda.nik.betherichest.Interfaces.DatabaseHandler.TABLE_INVESTMENTS ) ) ) ; db . execSQL ( ( ( ( ( ( "CREATE TABLE " + ( hu.uniobuda.nik.betherichest.Interfaces.DatabaseHandler.TABLE_INVESTMENTS ) ) + "(" ) + "_id   INTEGER PRIMARY KEY," ) + "rank  INTEGER" ) + ")" ) ) ; db . close () ; } 
protected void determineCurrentState () { java.time.Instant now = clock . instant () ; if ( startTime . plusSeconds ( timeUntilGameClosureInSeconds ) . isBefore ( now ) ) { currentState = com.pw.quizwhizz.model.game.GameState.CLOSED ; } else if ( ( startTime . plusSeconds ( timeUntilAnswerEvaluationInSeconds ) . isBefore ( now ) ) && ( startTime . plusSeconds ( timeUntilGameClosureInSeconds ) . isAfter ( now ) ) ) { currentState = com.pw.quizwhizz.model.game.GameState.EVALUATING_ANSWERS ; } } 
public RecyclerView.ViewHolder onCreateViewHolder ( android.view.ViewGroup parent , int viewType , android.support.v4.app.Fragment fragment , com.xamoom.android.xamoomsdk.EnduserApi enduserApi , java.lang.String youtubeApiKey , android.support.v4.util.LruCache bitmapCache , android.support.v4.util.LruCache contentCache , boolean showContentLinks , com.xamoom.android.xamoomcontentblocks.ViewHolders.ContentBlock3ViewHolder.OnContentBlock3ViewHolderInteractionListener onContentBlock3ViewHolderInteractionListener , com.xamoom.android.xamoomcontentblocks.XamoomContentFragment.OnXamoomContentFragmentInteractionListener onXamoomContentFragmentInteractionListener ) { com.xamoom.android.xamoomcontentblocks.Adapters.AdapterDelegate < T > delegate = adapterDelegates . get ( viewType ) ; android.util.Log . d ( com.xamoom.android.xamoomcontentblocks.Adapters.AdapterDelegatesManager.TAG , ( ( "Tried to load viewtype " + viewType ) + " adapter" ) ) ; android.support.v7.widget.RecyclerView.ViewHolder vh = delegate . onCreateViewHolder ( parent , fragment , enduserApi , youtubeApiKey , bitmapCache , contentCache , showContentLinks , onContentBlock3ViewHolderInteractionListener , onXamoomContentFragmentInteractionListener ) ; return vh ; } 
public void sendMessage () { java.lang.String message = messageText . getText () . toString () ; int userID = prefs . getInt ( MainActivity.USER_KEY , ( - 1 ) ) ; if ( userID == ( - 1 ) ) { return; } appendToMessageHistory ( "You" , message ) ; new com.dblappdev.hitch.network.API () . insertChatMessage ( userID , com.dblappdev.hitch.app.ChatActivity.CHAT_ID , message , null ) ; } 
public void onRequestPermissionsResult ( int requestCode , @ android.support.annotation.NonNull java.lang.String [] permissions , @ android.support.annotation.NonNull int [] grantResults ) { com.iven.i7helper.util.LocationUtil lu = com.iven.i7helper.util.LocationUtil . getLocationUtil () ; switch ( requestCode ) { case 1 : if ( ( grantResults.length ) > 0 ) { for ( int i : grantResults ) { if ( i != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { return; } } } lu . requestLocation () ; break; default: } } 
public void modifyUser ( long id , main.UserProfile user ) { org.hibernate.Transaction transaction = session . beginTransaction () ; main.UserProfile oldUser = session . load ( main.UserProfile . class , id ) ; oldUser . setPassword ( user . getPassword () ) ; oldUser . setEmail ( user . getEmail () ) ; session . flush () ; transaction . commit () ; } 
@ java.lang.Override public void onBindViewHolder ( org.chromium.chrome.browser.ntp.cards.NewTabPageListItem article ) { org.chromium.chrome.browser.ntp.snippets.SnippetArticle item = ( ( org.chromium.chrome.browser.ntp.snippets.SnippetArticle ) ( article ) ) ; mHeadlineTextView . setText ( item.mTitle ) ; mPublisherTextView . setText ( java.lang.String . format ( org.chromium.chrome.browser.ntp.snippets.SnippetArticleViewHolder.PUBLISHER_FORMAT_STRING , item.mPublisher , android.text.format.DateUtils . getRelativeTimeSpanString ( item.mTimestamp , java.lang.System . currentTimeMillis () , DateUtils.MINUTE_IN_MILLIS , DateUtils.FORMAT_ABBREV_RELATIVE ) ) ) ; mArticleSnippetTextView . setText ( item.mPreviewText ) ; mUrl = item.mUrl ; mAmpUrl = item.mAmpUrl ; mPosition = item.mPosition ; updateThumbnail ( item ) ; updateFavicon ( item ) ; } 
@ java.lang.Override public org.python.core.PyObject __call__ ( org.python.core.PyObject key ) { java.lang.Object jkey = org.python.core.Py . tojava ( key , java.lang.Object . class ) ; if ( ( asMap () . remove ( jkey ) ) == null ) { throw org.python.core.Py . KeyError ( key ) ; } return Py.None ; } 
@ handy.tools.annotations.MethodArgs public static java.lang.String resolveAbsolutePath ( java.lang.String relativePath ) { java.lang.String path = null ; try { path = handy.tools.helpers.PathHelper . class . getClassLoader () . getResource ( relativePath ) . getPath () ; } catch ( java.lang.Exception e ) { path = GetAbsoluteFilePath ( relativePath ) ; } java.lang.System.out . println ( ( "path: " + path ) ) ; return path ; } 
@ org.junit.Test public void name ( ) throws java.lang.Exception { net.autobuilder.examples.Animal spiderPig = net.autobuilder.examples.Animal_Builder . builder () . name ( "Spider-Pig" ) . build () ; net.autobuilder.examples.Animal horse = net.autobuilder.examples.Animal_Builder . builder ( spiderPig ) . name ( "Horse" ) . build () ; org.junit.Assert . assertThat ( spiderPig . name () , org.hamcrest.core.Is . is ( "Spider-Pig" ) ) ; org.junit.Assert . assertThat ( horse . name () , org.hamcrest.core.Is . is ( "Horse" ) ) ; } 
public void setNewChildTagId ( long newChildTagId ) { if ( com.civilizer.domain.Tag . isTrivialTag ( newChildTagId ) ) { final int index = indexOf ( newChildTagId ) ; if ( childTags . equals ( java.util.Collections . emptyList () ) ) { childTags = new java.util.ArrayList <> () ; } childTags . add ( tags . get ( index ) ) ; hierarchyTouched = true ; } } 
public void readConfig () { config = getConfig () ; this . saveDefaultConfig () ; reloadConfig () ; enableChat = config . getBoolean ( "chat.enable" ) ; message = config . getString ( "chat.message" ) ; patterns = config . getStringList ( "chat.patternlist" ) ; replaceChat = config . getBoolean ( "chat.replace" ) ; users = config . getStringList ( "ime.user" ) ; getLogger () . info ( "readConfig" ) ; updatePattern () ; } 
private void CleanFrom ( java.util.List < java.lang.Integer > indexMap , int cnt ) { for ( int index = indexMap . get ( cnt ) ; index != 81 ; index = indexMap . get ( ( ++ cnt ) ) ) { if ( ( layout [ ( index / 9 ) ] [ ( index % 9 ) ] ) != 0 ) { layout [ ( index / 9 ) ] [ ( index % 9 ) ] = 0 ; } } } 
public void addTime ( java.lang.Long time ) { avg = ( ( ( count . get () ) * ( avg ) ) + time ) / ( count . incrementAndGet () ) ; if ( time > ( max ) ) { max = time ; } else if ( time < ( min ) ) { min = time ; } } 
public void galleryAddPic ( android.content.Context context ) { android.content.Intent mediaScanIntent = new android.content.Intent ( android.content.Intent.ACTION_MEDIA_SCANNER_SCAN_FILE ) ; if ( android.text.TextUtils . isEmpty ( mCurrentPhotoPath ) ) { return; } java.io.File f = new java.io.File ( mCurrentPhotoPath ) ; android.net.Uri contentUri = android.net.Uri . fromFile ( f ) ; mediaScanIntent . setData ( contentUri ) ; mContext . sendBroadcast ( mediaScanIntent ) ; notifyMediaStoreScanner ( context , f ) ; } 
public void notifyCriticalError ( java.lang.String message ) { com.freedomotic.api.Plugin.LOG . warning ( message ) ; setDescription ( message ) ; com.freedomotic.events.MessageEvent callout = new com.freedomotic.events.MessageEvent ( this , message ) ; callout . setType ( "callout" ) ; callout . setLevel ( "warning" ) ; callout . setExpiration ( ( 10 * 1000 ) ) ; busService . send ( callout ) ; stop () ; currentPluginStatus = PluginStatus.FAILED ; } 
public java.util.List < coverage.Obligation > generate ( java.util.HashMap < jkind.lustre.VarDecl , coverage.ObservedTree > sequantialTrees ) { java.util.List < coverage.Obligation > obligations = new java.util.ArrayList < coverage.Obligation > () ; coverage.ObservedTree tree ; for ( jkind.lustre.VarDecl root : sequantialTrees . keySet () ) { java.lang.System.out . println ( ( ( "Generate delay dependency epxressions for [" + root ) + "]..." ) ) ; tree = sequantialTrees . get ( root ) ; generateObligationForTree ( exprsMap , tree ) ; obligations . addAll ( getObligations ( exprsMap ) ) ; } return obligations ; } 
public static com.sensia.swetools.editors.sensorml.client.panels.charts.ISensorChart createChart ( com.sensia.swetools.editors.sensorml.client.panels.widgets.AbstractSensorElementWidget root , java.lang.String values , java.lang.String tokenSeparator , java.lang.String blockSeparator ) { java.util.List < com.sensia.swetools.editors.sensorml.client.panels.widgets.ISensorWidget > fields = com.sensia.swetools.editors.sensorml.client.panels.widgets.AbstractSensorElementWidget . findWidgets ( root , "field" , TAG_DEF.SWE , TAG_TYPE.ELEMENT ) ; com.sensia.swetools.editors.sensorml.client.panels.charts.ISensorChart chart = null ; if ( ( fields . size () ) == 2 ) { chart = com.sensia.swetools.editors.sensorml.client.panels.charts.versusline.SWESensorDataArrayVersusLineHelper . create1LineVersusChart ( root , fields . get ( 0 ) , fields . get ( 1 ) , values , tokenSeparator , blockSeparator ) ; } return chart ; } 
@ java.lang.Override public void showBreakTimeDlg ( long cargoWorkId ) { android.support.v4.app.FragmentManager manager = getSupportFragmentManager () ; if ( manager != null ) { scs71.com.scscws.ui.main_menu.break_time_dlg.BreakTimeDlg dlg = scs71.com.scscws.ui.main_menu.break_time_dlg.BreakTimeDlg . newInstance ( cargoWorkId , this ) ; manager . beginTransaction () . add ( R.id.main_menu_root , dlg , scs71.com.scscws.ui.main_menu.break_time_dlg.BreakTimeDlg . class . getName () ) . commit () ; } } 
@ org.junit.Test public void testJudgeMock () { owo.com.androidunittest.targets.A a = org.mockito.Mockito . mock ( owo.com.androidunittest.targets.A . class ) ; owo.com.androidunittest.targets.A b = org.mockito.Mockito . spy ( a ) ; junit.framework.Assert . assertTrue ( org.mockito.Mockito . mockingDetails ( a ) . isMock () ) ; junit.framework.Assert . assertFalse ( org.mockito.Mockito . mockingDetails ( a ) . isSpy () ) ; junit.framework.Assert . assertFalse ( org.mockito.Mockito . mockingDetails ( b ) . isMock () ) ; junit.framework.Assert . assertTrue ( org.mockito.Mockito . mockingDetails ( b ) . isSpy () ) ; } 
@ java.lang.Override protected void onPostExecute ( java.util.List < de.uulm.dbis.coaster2go.data.Attraction > attractionList ) { if ( attractionList == null ) { android.util.Log . e ( de.uulm.dbis.coaster2go.activities.AttractionOverviewActivity.TAG , "LoadParksTask.onPostExecute: parkList was null!" ) ; } else { attractionListAdapter . setAttractionList ( attractionList ) ; attractionListAdapter . notifyItemRangeInserted ( 0 , attractionList . size () ) ; } ( ( de.uulm.dbis.coaster2go.activities.AttractionOverviewActivity ) ( getActivity () ) ) . progressBar . hide () ; } 
public void onRevokeAccessClick ( android.view.View view ) { android.widget.Toast . makeText ( this , "onRevokeAccessClick" , Toast.LENGTH_SHORT ) . show () ; boolean isConnecting = googleApiClient . isConnecting () ; android.util.Log . e ( com.sarahehabm.carbcalculator.login.LoginActivity.TAG , ( "onRevokeAccessClick; client.isConnecting()= " + isConnecting ) ) ; if ( ! isConnecting ) { Plus.AccountApi . clearDefaultAccount ( googleApiClient ) ; Plus.AccountApi . revokeAccessAndDisconnect ( googleApiClient ) ; googleApiClient = buildApiClient () ; googleApiClient . connect () ; } } 
@ org.junit.Test public void testGetAndAddPossibleState () { model.MarkovChain mc = new model.MarkovChain ( "foo" ) ; assertEquals ( mc . getPossibleState () , "" ) ; mc . addState ( "bar" ) ; assertEquals ( mc . getPossibleState () , "bar" ) ; mc . addState ( "foobar" ) ; assertTrue ( ( ( ( mc . getPossibleState () ) == "bar" ) || ( ( mc . getPossibleState () ) == "foobar" ) ) ) ; } 
public boolean isRoundActive () { int numberOfPlayers = players . size () ; int count = 0 ; for ( scripts.Player p : players ) if ( p . isFolded () ) count ++ ; if ( ( count > 0 ) && ( count < numberOfPlayers ) ) { return true ; } for ( scripts.Player p : players ) { p . resetActionBoolean () ; } table = new scripts.Table () ; round = new scripts.Round ( this ) ; round . preFlop () ; return false ; } 
@ java.lang.Override public void addOrder ( com.at.ac.tuwien.sepm.ss15.edulium.domain.Order order ) throws com.at.ac.tuwien.sepm.ss15.edulium.domain.validation.ValidationException , com.at.ac.tuwien.sepm.ss15.edulium.service.ServiceException { com.at.ac.tuwien.sepm.ss15.edulium.service.impl.OrderServiceImpl.LOGGER . debug ( ( "Entering addOrder with parameter: " + order ) ) ; orderValidator . validateForCreate ( order ) ; try { com.at.ac.tuwien.sepm.ss15.edulium.domain.MenuEntry entry = order . getMenuEntry () ; saleService . applySales ( entry ) ; orderDAO . create ( order ) ; tableBusinessLogic . addedOrder ( order ) ; } catch ( com.at.ac.tuwien.sepm.ss15.edulium.dao.DAOException e ) { com.at.ac.tuwien.sepm.ss15.edulium.service.impl.OrderServiceImpl.LOGGER . error ( "An Error has occurred in the data access object" , e ) ; throw new com.at.ac.tuwien.sepm.ss15.edulium.service.ServiceException ( "An Error has occurred in the data access object" ) ; } } 
protected int obtainRandomMsgsPosition ( java.util.List < org.openqa.selenium.WebElement > msgs ) { int randomPosition = com.blackwolves.seeder.YahooRunnable . randInt ( 0 , ( ( msgs . size () ) >= 50 ? 49 : ( msgs . size () ) - 1 ) ) ; com.blackwolves.seeder.YahooRunnable.logger . info ( ( "*****************obtainRandomMsgsPosition : " + randomPosition ) ) ; return randomPosition ; } 
private int checkDown ( int x , int y ) { try { if ( rooms . get ( new com.tda367.infinityrun.Roomtemplates.IndexPoint ( x , ( y - 1 ) ) ) . u ) {} } catch ( java.lang.NullPointerException n ) { java.lang.System.out . println ( "Down" ) ; return 0 ; } if ( rooms . get ( new com.tda367.infinityrun.Roomtemplates.IndexPoint ( x , ( y - 1 ) ) ) . u ) { return 1 ; } else { return - 1 ; } } 
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { com.example.ak.firebaseauthdemo.UserInformation user = dataSnapshot . getValue ( com.example.ak.firebaseauthdemo.UserInformation . class ) ; if ( ( user . getName () ) != "default" ) { java.lang.String string = ( ( "Name: " + ( user . getName () ) ) + " Age: " ) + ( user . getAge () ) ; setImage ( user ) ; textView . setText ( string ) ; } } 
public static void checkMovement2Started () { if ( ( ( dCompletion ) < ( ( ( dStartToFrontStepBoard ) / ( dStartToBox ) ) + ( dTrackMargin ) ) ) && ( ( dCompletion ) > ( ( ( dStartToFrontStepBoard ) / ( dStartToBox ) ) - ( dTrackMargin ) ) ) ) { bMovement2Started = true ; } } 
public static void addAurora ( final org.blockartistry.mod.DynSurround.data.AuroraData data ) { if ( ! ( org.blockartistry.mod.DynSurround.ModOptions . getAuroraEnable () ) ) return; if ( ( ( org.blockartistry.mod.DynSurround.client.AuroraEffectHandler.auroraDimension ) != ( data.dimensionId ) ) || ( ( org.blockartistry.mod.DynSurround.client.EnvironStateHandler.EnvironState . getDimensionId () ) != ( data.dimensionId ) ) ) { org.blockartistry.mod.DynSurround.client.AuroraEffectHandler.auroras . clear () ; org.blockartistry.mod.DynSurround.client.AuroraEffectHandler.currentAurora = null ; org.blockartistry.mod.DynSurround.client.AuroraEffectHandler.auroraDimension = data.dimensionId ; } org.blockartistry.mod.DynSurround.client.AuroraEffectHandler.auroras . add ( data ) ; } 
public void caseMJCopyStmt ( matjuice.transformer.MJCopyStmt stmt ) { inFlowSets . put ( stmt , copy ( currentInSet ) ) ; currentOutSet = copy ( currentInSet ) ; java.lang.String lhs = stmt . getVarName () ; currentOutSet . remove ( lhs ) ; matjuice.analysis.MallocSite m = matjuice.analysis.MallocSite . newLocalSite () ; matjuice.analysis.PointsToValue ptv = new matjuice.analysis.PointsToValue () ; ptv . addMallocSite ( m ) ; ptv . addAliasingStmt ( m , stmt ) ; currentOutSet . put ( lhs , ptv ) ; outFlowSets . put ( stmt , copy ( currentOutSet ) ) ; } 
@ java.lang.Override public boolean onTouch ( android.view.View v , android.view.MotionEvent e ) { switch ( e . getAction () ) { case android.view.MotionEvent.ACTION_DOWN : btn_showHide . setPressed ( true ) ; txt_title . setPressed ( true ) ; break; case android.view.MotionEvent.ACTION_UP : btn_showHide . setPressed ( false ) ; txt_title . setPressed ( false ) ; touchAction () ; break; } return true ; } 
public void hunt ( ypmf.Creature target ) { java.util.List < ypmf.Point > points = new ypmf.Path ( creature , target.x , target.y ) . points () ; int mx = ( points . get ( 0 ) . x ) - ( creature.x ) ; int my = ( points . get ( 0 ) . y ) - ( creature.y ) ; creature . moveBy ( mx , my , 0 ) ; } 
@ java.lang.Override public AsyncTcpSocket.EventHandler onConnect ( io.datakernel.eventloop.AsyncTcpSocket conn ) { removePendingSocketConnect ( address ) ; io.datakernel.http.ExposedLinkedList < io.datakernel.http.AbstractHttpConnection > pool = ipConnectionLists . get ( address ) ; if ( pool == null ) { pool = new io.datakernel.http.ExposedLinkedList () ; } io.datakernel.http.HttpClientConnection connection = new io.datakernel.http.HttpClientConnection ( eventloop , address , conn , this , pool , headerChars , maxHttpMessageSize ) ; activeConnections . add ( connection ) ; sendRequest ( connection , request , timeoutTime , callback ) ; return connection ; } 
public static void main ( java.lang.String [] args ) { edu.princeton.cs.algs4.Picture picture = new edu.princeton.cs.algs4.Picture ( new java.io.File ( ( "C:\\Users\\Borui Wang\\Desktop\\Borui Wang\\Coursera\\Algorithms Part 2\\" + ( "Algorithms Part 2\\assignments\\ProgrammingAssignment2SeamCarvingHelpCenter\\" + "seamCarving-testing\\seamCarving\\3x4.png" ) ) ) ) ; partTwo_Assignment_2.SeamCarver sc = new partTwo_Assignment_2.SeamCarver ( picture ) ; sc . printEnergy () ; int height = sc . height () ; for ( int w = 0 ; w < height ; w ++ ) { sc . removeHorizontalSeam ( sc . findHorizontalSeam () ) ; sc . printEnergy () ; } } 
private void updateWowButtonText ( boolean wowed , int wowCount ) { if ( wowed ) { if ( wowCount == 1 ) { wowStatText . setText ( "You WoWed this." ) ; newWowButton . setChecked ( true ) ; } else { wowStatText . setText ( ( ( "You and other " + ( wowCount - 1 ) ) + " WoWed." ) ) ; newWowButton . setChecked ( true ) ; } } else { wowStatText . setText ( ( ( "" + wowCount ) + " WoWs" ) ) ; newWowButton . setChecked ( false ) ; } } 
private void addR2VEdgeWithoutSaving ( java.lang.Long ccmId , java.lang.Long icmId , java.lang.String edgePort , java.lang.String edgeName , net.stigmod.service.RelationNode relationNode , java.lang.String valueName , java.util.Map < java.lang.String , net.stigmod.service.ValueNode > valueNodePool ) { net.stigmod.service.ValueNode valueNode = getValueNodeByNameWithoutSaving ( ccmId , icmId , valueName , valueNodePool ) ; net.stigmod.service.RelationToValueEdge r2vEdge = new net.stigmod.service.RelationToValueEdge ( ccmId , icmId , edgePort , edgeName , relationNode , valueNode ) ; relationNode . addR2VEdge ( r2vEdge ) ; valueNode . addR2VEdge ( r2vEdge ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( ( loginFragmentOnClickListener ) != null ) { android.os.Bundle bundle = new android.os.Bundle () ; bundle . putString ( com.example.adriftbookclient.oobhomeworkclient.LoginFragment.USER_NAME , userNameEt . getText () . toString () ) ; bundle . putString ( com.example.adriftbookclient.oobhomeworkclient.LoginFragment.PASSWORD , passwordEt . getText () . toString () ) ; loginFragmentOnClickListener . onClick ( v , bundle ) ; } } 
@ java.lang.Override public boolean matches ( int [] tuple ) { int a = 0 ; int b = 0 ; for ( int i = 0 ; i < ( tuple.length ) ; i ++ ) { if ( ( tuple [ i ] ) == majority ) a ++ ; else if ( ( tuple [ i ] ) == minority ) b ++ ; } return ( a == ( ( size ) - 1 ) ) && ( b == 1 ) ; } 
public void removeAttachmentFromRecord ( java.io.File attachment , uk.ac.ucl.excites.sapelli.storage.model.Record record ) { long creationTimeOffset = getCreationTimeOffsetFromFile ( attachment ) ; java.util.List < java.lang.Long > offsets = getCurrentAttachmentOffsets ( record ) ; if ( offsets != null ) { if ( offsets . remove ( creationTimeOffset ) ) { if ( offsets . isEmpty () ) getColumn () . clearValue ( record ) ; else getColumn () . storeValue ( record , offsets ) ; } else java.lang.System.err . println ( "Specified attachment could not be found for deletion." ) ; } } 
public void run () { while ( connecting ) { try { java.lang.Thread . sleep ( 1000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } ( waiting ) ++ ; if ( ( waiting ) == 10 ) { h . obtainMessage ( com.robic.zoran.moonstalker.BlueToothService.CONNECTION_TIMED_OUT_MESSAGE ) . sendToTarget () ; } } } 
private javax.swing.ImageIcon getImageForModule ( com.prplplus.shipconstruct.Module m ) { int scaleFactor = 32 / ( java.lang.Math . max ( 3 , java.lang.Math . max ( m.width , m.height ) ) ) ; java.awt.Image i = m.image ; if ( i == null ) { return null ; } i = i . getScaledInstance ( ( ( m.width ) * scaleFactor ) , ( ( m.height ) * scaleFactor ) , java.awt.Image.SCALE_DEFAULT ) ; return new javax.swing.ImageIcon ( i ) ; } 
public void applyFigure ( final hrytsak.xo.model.Field field , final hrytsak.xo.model.Figure figure , final java.awt.Point point ) throws hrytsak.xo.model.exception.AlreadyOccupiedException , hrytsak.xo.model.exception.InvalidPointException { if ( ( field . getFigure ( point ) ) != null ) { throw new hrytsak.xo.model.exception.AlreadyOccupiedException () ; } field . setFigure ( point , figure ) ; } 
private void updateTileSourceSummary () { fillTileSourcesToPreference ( tileSourcePreference , osmandSettings.MAP_TILE_SOURCES . get () , false ) ; fillTileSourcesToPreference ( overlayPreference , osmandSettings.MAP_OVERLAY . get () , true ) ; fillTileSourcesToPreference ( underlayPreference , osmandSettings.MAP_UNDERLAY . get () , true ) ; tileSourcePreference . setSummary ( ( ( ( ( R.string.map_tile_source_descr ) + " [" ) + ( osmandSettings.MAP_TILE_SOURCES . get () ) ) + "]" ) ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_boot_info ) ; datePickerDialog = new android.app.DatePickerDialog ( this . getActivityContext () , this , 2017 , 7 , 10 ) ; if ( ( mBootPresenter ) == null ) { mBootPresenter = new br.com.android.pocapp.presenter.BootPresenter ( this ) ; } mBootPresenter . list () ; } 
public org.apache.openmeetings.db.entity.user.User loginUserByRemoteHash ( java.lang.String SID , java.lang.String remoteHash ) { try { org.apache.openmeetings.db.entity.server.Sessiondata sessionData = sessionDao . check ( remoteHash ) ; if ( sessionData != null ) { org.apache.openmeetings.db.entity.user.User u = userDao . get ( sessionData . getUserId () ) ; sessionDao . updateUserWithoutSession ( SID , u . getId () ) ; return u ; } } catch ( java.lang.Exception ex2 ) { org.apache.openmeetings.service.user.UserManager.log . error ( "[loginUserByRemoteHash]: " , ex2 ) ; } return null ; } 
@ java.lang.Override @ javax.jws.WebMethod ( exclude = true ) public org.w3c.dom.Document getServiceInstanceProperties ( java.net.URI serviceInstanceID , java.util.List < javax.xml.namespace.QName > propertiesList ) throws org.opentosca.instancedata.service.ReferenceNotFoundException { java.util.List < org.opentosca.model.instancedata.ServiceInstance > serviceInstances = getServiceInstances ( serviceInstanceID , null , null ) ; if ( ( serviceInstances == null ) || ( ( serviceInstances . size () ) != 1 ) ) { java.lang.String msg = java.lang.String . format ( "Failed to retrieve ServiceInstance: '%s'" , serviceInstanceID ) ; org.opentosca.instancedata.service.impl.InstanceDataServiceImpl.LOG . warn ( msg ) ; throw new org.opentosca.instancedata.service.ReferenceNotFoundException ( msg ) ; } org.opentosca.model.instancedata.ServiceInstance serviceInstance = serviceInstances . get ( 0 ) ; return serviceInstance . getProperties () ; } 
@ java.lang.Override public void damageEntity ( int entityId , int damage ) { org.inaetics.dronessimulator.gameengine.common.state.GameEntity e = this . m_stateManager . getById ( entityId ) ; if ( e instanceof org.inaetics.dronessimulator.gameengine.common.state.HealthGameEntity ) { org.inaetics.dronessimulator.gameengine.common.state.HealthGameEntity healthGameEntity = ( ( org.inaetics.dronessimulator.gameengine.common.state.HealthGameEntity ) ( e ) ) ; healthGameEntity . damage ( damage ) ; } else { org.apache.log4j.Logger . getLogger ( org.inaetics.dronessimulator.gameengine.physicsenginedriver.PhysicsEngineDriver . class ) . error ( ( ( ( "Tried to damage an entity without hp! Got: " + entityId ) + " " ) + e ) ) ; } } 
public edu.petrov.gojavaonline.calculator.BigInteger High () { if ( ( size () ) == 0 ) { return new edu.petrov.gojavaonline.calculator.BigInteger () ; } else if ( ( size () ) == 1 ) { return new edu.petrov.gojavaonline.calculator.BigInteger ( this ) ; } else { edu.petrov.gojavaonline.calculator.BigInteger result = new edu.petrov.gojavaonline.calculator.BigInteger ( java.util.Arrays . copyOfRange ( digits . toArray ( new java.lang.Integer [ 0 ] ) , halfSize () , digits . size () ) ) ; return result ; } } 
public final void beginTransaction ( boolean write ) { if ( ( inTransaction () ) && ( ( ! write ) || ( ! ( mDb . isReadOnly () ) ) ) ) return; if ( write ) openWrite () ; else openRead () ; if ( inTransaction () ) mDb . beginTransaction () ; } 
java.lang.String buildScopeString ( java.util.Set < java.lang.String > scopes , java.lang.String username , java.lang.String realm ) { java.util.Locale locale = getLocale ( username , realm ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; for ( java.lang.String scope : scopes ) { sb . append ( resolveScope ( scope , locale ) ) . append ( ", " ) ; } if ( scopes . isEmpty () ) { return "NONE" ; } else { return sb . substring ( 0 , ( ( sb . length () ) - 2 ) ) ; } } 
@ java.lang.Override public void onStopTrackingTouch ( android.widget.SeekBar seekBar ) { if ( ( newCircle ) != null ) { newCircle . remove () ; } com.google.android.gms.maps.model.CircleOptions circleOptions = new com.google.android.gms.maps.model.CircleOptions () . center ( latLng ) . radius ( _radiusChanged ) . fillColor ( 1082797026 ) . strokeColor ( Color.MAGENTA ) . strokeWidth ( 5 ) ; newCircle = mMap . addCircle ( circleOptions ) ; } 
private void PopulateSpinners () { java.lang.Integer [] array = new java.lang.Integer [ 50 ] ; for ( int i = 0 ; i < 50 ; i ++ ) { array [ i ] = i + 1 ; } androidexpList . setAdapter ( new android.widget.ArrayAdapter < java.lang.Integer > ( this , android.R.layout.simple_list_item_1 , array ) ) ; iosexpList . setAdapter ( new android.widget.ArrayAdapter < java.lang.Integer > ( this , android.R.layout.simple_list_item_1 , array ) ) ; } 
public boolean isFinished ( Player currentPlayer ) { if ( isFilled () ) { winMessage = "Nobody wins!" ; return true ; } if ( hasPlayerWon ( currentPlayer ) ) { winMessage = ( currentPlayer . getName () ) + " wins!" ; return true ; } return false ; } 
@ java.lang.Override public void run () { for ( double d = currentTemperature . getMeasure_Double () ; ( currentTemperature . getMeasure_Double () ) > ( desiredTemperature . getMeasure_Double () ) ; d -- ) { HeizungServer.MeasureBean new_currentTemperature = new HeizungServer.MeasureBean ( d , currentTemperature . getUnitOfMeasurement_Enum () ) ; setCurrentTemperature ( new_currentTemperature ) ; notifyObservers ( desiredTemperature ) ; try { java.lang.Thread . sleep ( 500 ) ; } catch ( java.lang.InterruptedException e ) {} } } 
private T steal ( ) throws bag.ConcurrentBag.CannotStealException { bag.ConcurrentBag < T > . ThreadMetaData md = localMetadata . get () ; while ( true ) { T item = nextStealItem () ; if ( item != null ) { java.util.concurrent.atomic.AtomicReferenceArray < T > stealBlock = bagArrayList . get ( md.stealFromBagIndex ) . get ( md.stealFromListIndex ) ; if ( stealBlock . compareAndSet ( md.stealFromBlockIndex , item , null ) ) { return item ; } } ( md.stealFromBlockIndex ) ++ ; } } 
public static void main ( java.lang.String [] args ) throws java.io.FileNotFoundException , java.io.IOException { try { int i = java.lang.Integer . parseInt ( args [ 0 ] ) ; java.lang.System.out . println ( ( "k=" + i ) ) ; automapreduct.Automaton a = new automapreduct.Automaton () ; a . loadFromFile ( "InputAuto.txt" ) ; automapreduct.DirectedGraph sdf = a . makeGraph ( i ) ; sdf . makeFile ( "graph.dot" ) ; } catch ( java.lang.Exception e ) { java.lang.System.out . println ( e ) ; } } 
@ java.lang.Override public void start ( javafx.stage.Stage primaryStage ) throws java.lang.Exception { javafx.scene.Parent root = javafx.fxml.FXMLLoader . load ( getClass () . getResource ( "sample.fxml" ) ) ; primaryStage . setTitle ( "Hello World" ) ; primaryStage . setScene ( new javafx.scene.Scene ( root , 300 , 275 ) ) ; primaryStage . show () ; Synchronizer.AppConnections.Server.MainServerConnection mainServerConnection = new Synchronizer.AppConnections.Server.MainServerConnection () ; mainServerConnection . startServer () ; new Synchronizer.AppConnections.Server.ServersFinder () { @ java.lang.Override public void onFinish ( java.util.ArrayList < Synchronizer.AppConnections.Server.ServerMetaData > serversMetaData ) {} } . start () ; } 
public net.meisen.dissertation.model.descriptors.NullDescriptor < I > getNullDescriptor ( ) throws net.meisen.dissertation.exceptions.DescriptorModelException { if ( ! ( supportsNullDescriptor () ) ) { exceptionRegistry . throwRuntimeException ( net.meisen.dissertation.exceptions.DescriptorModelException . class , 1004 , getId () ) ; } if ( ! ( createdNullDescriptor () ) ) { nullDescriptor = new net.meisen.dissertation.model.descriptors.NullDescriptor < I > ( this , idsFactory . getId () ) ; metaDataCache . cacheDescriptor ( nullDescriptor ) ; } return nullDescriptor ; } 
public void stateChanged ( org.apache.zookeeper.server.quorum.QuorumStateListener.State state , org.apache.zookeeper.server.quorum.QuorumPeer peer ) { if ( ( ( stateListeners ) != null ) && ( ! ( stateListeners . isEmpty () ) ) ) { if ( ( ( stateListeners ) != null ) && ( ! ( stateListeners . isEmpty () ) ) ) { org.apache.zookeeper.server.quorum.QuorumStateHelper.Message message = new org.apache.zookeeper.server.quorum.QuorumStateHelper.Message ( state , peer ) ; messages . offer ( message ) ; } } } 
static dagger.internal.codegen.ResolvedBindings create ( dagger.internal.codegen.BindingKey bindingKey , java.util.Set < ? extends dagger.internal.codegen.Binding > ownedBindings , java.util.Set < ? extends dagger.internal.codegen.Binding > inheritedBindings ) { com.google.common.collect.ImmutableSet < dagger.internal.codegen.Binding > immutableOwnedBindings = com.google.common.collect.ImmutableSet . copyOf ( ownedBindings ) ; return new dagger.internal.codegen.AutoValue_ResolvedBindings ( bindingKey , immutableOwnedBindings , com.google.common.collect.ImmutableSet . < dagger.internal.codegen.Binding > builder () . addAll ( inheritedBindings ) . addAll ( immutableOwnedBindings ) . build () ) ; } 
@ org.apache.hadoop.classification.InterfaceAudience.Private public synchronized int getLocalAMRMTokenKeyId () { java.lang.Integer keyId = this . localTokenKeyId ; if ( keyId == null ) { try { if ( ( this . localToken ) == null ) { throw new org.apache.hadoop.yarn.exceptions.YarnRuntimeException ( ( "Missing AMRM token for " + ( this . applicationAttemptId ) ) ) ; } keyId = this . amrmToken . decodeIdentifier () . getKeyId () ; this . localTokenKeyId = keyId ; } catch ( java.io.IOException e ) { throw new org.apache.hadoop.yarn.exceptions.YarnRuntimeException ( ( "AMRM token decode error for " + ( this . applicationAttemptId ) ) , e ) ; } } return keyId ; } 
@ java.lang.Override public void refresh () { if ( ( realManager . getToken () ) == null ) { showLoadingEnded () ; if ( ! ( de.tum.in.tumcampus.auxiliary.NetUtils . isConnected ( this ) ) ) showNoInternetLayout () ; else de.tum.in.tumcampus.auxiliary.Utils . showToast ( this , R.string.login_failed ) ; } else { if ( ( intent ) != null ) { startActivity ( intent ) ; de.tum.in.tumcampus.auxiliary.Utils . log ( "got the token now starting the previous activity" ) ; } finish () ; } } 
public void resetOrderTimes () { java.lang.String sql = java.lang.String . format ( "UPDATE %s SET %s = 3, %s = 3, %s = 3" , TABLE , ORDER_ONE , ORDER_TWO , ORDER_THREE ) ; try ( java.sql.Statement statement = com.gmail.edenthink.tools.Driver . getConnection () . createStatement () ) { statement . executeUpdate ( sql ) ; } catch ( java.sql.SQLException e ) { java.lang.System.err . print ( com.gmail.edenthink.tools.Util . printSQLError ( e ) ) ; } } 
public void removeIngredientFromMyList ( java.lang.String listName , java.lang.String ingredient ) { myListIngredientsMap . get ( listName ) . remove ( ingredient ) ; if ( sharedPref . contains ( ( listName + ( conor.navigationdrawer.Database.MY_LIST_INGREDIENTS ) ) ) ) { prefEditor . remove ( ( listName + ( conor.navigationdrawer.Database.MY_LIST_INGREDIENTS ) ) ) ; } prefEditor . putStringSet ( ( listName + ( conor.navigationdrawer.Database.MY_LIST_INGREDIENTS ) ) , myListIngredientsMap . get ( ( listName + ( conor.navigationdrawer.Database.MY_LIST_INGREDIENTS ) ) ) ) ; prefEditor . commit () ; } 
public static void main ( java.lang.String [] args ) { int difficulty = 3 ; try { difficulty = java.lang.Integer . parseInt ( args [ 0 ] ) ; if ( difficulty < 0 ) { java.lang.System.out . println ( "Negative numbers not allowed, defaulting to dificulty = 3" ) ; difficulty = 3 ; } } catch ( java.lang.ArrayIndexOutOfBoundsException oobex ) { java.lang.System.out . println ( "No argument detected, defaulting to difficulty = 3" ) ; } catch ( java.lang.NumberFormatException nfex ) { java.lang.System.out . println ( "Could not parse argument, defaulting to difficulty = 3" ) ; } LaboonCoin lc = new LaboonCoin () ; lc . run ( difficulty ) ; } 
private static com.cliffcrosland.kirkpatrickseidel.Point2 findMax ( java.util.List < com.cliffcrosland.kirkpatrickseidel.Point2 > points , java.util.Comparator < com.cliffcrosland.kirkpatrickseidel.Point2 > comp ) { com.cliffcrosland.kirkpatrickseidel.Point2 max = null ; for ( com.cliffcrosland.kirkpatrickseidel.Point2 point : points ) { if ( ( max == null ) || ( ( comp . compare ( point , max ) ) < 0 ) ) { max = point ; } } return max ; } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent arg0 ) { if ( inputValidated () ) { if ( ( savedDocs ) == false ) { saveDocs ( document . getDocId () ) ; refreshTable () ; enterUpdateState () ; } else updateDocs ( idToUpdate ) ; } } 
private int runPercolation ( int n ) { Percolation percolation = new Percolation ( n ) ; int blocksOpen = 0 ; while ( ! ( percolation . percolates () ) ) { int row = edu.princeton.cs.algs4.StdRandom . uniform ( 1 , ( n + 1 ) ) ; int col = edu.princeton.cs.algs4.StdRandom . uniform ( 1 , ( n + 1 ) ) ; percolation . open ( row , col ) ; blocksOpen ++ ; } return blocksOpen ; } 
private boolean isEverythingFilled () { try { boolean isEverythingFilled = ( ! ( orgUnitView . getSelectedItem () . equals ( orgUnitDefaultOption ) ) ) && ( ! ( programView . getSelectedItem () . equals ( programDefaultOption ) ) ) ; if ( tabGroupView . getSelectedItem () . equals ( tabGroupDefaultOption ) ) isEverythingFilled = false ; return isEverythingFilled ; } catch ( java.lang.Exception ex ) { ex . printStackTrace () ; return true ; } } 
private static float getAverageLuminance ( java.awt.image.BufferedImage image , int x0 , int y0 , int width , int height ) { int cnt = 0 ; float luminance = 0.0F ; for ( int x = x0 ; x < ( image . getWidth () ) ; x += 10 ) { for ( int y = y0 ; y < ( image . getHeight () ) ; y += 10 ) { luminance += de.acwhadk.rz.DesktopBGChanger.picture.PictureCaption . getLuminance ( image , x , y ) ; ++ cnt ; } } return luminance / cnt ; } 
private void sendHPSyncMessage ( java.lang.String message ) { kaist.game.battlecar.service.BluetoothService btService = kaist.game.battlecar.service.BluetoothService . getInstance ( this ) ; if ( ( btService . getState () ) != ( kaist.game.battlecar.service.BluetoothService.STATE_CONNECTED ) ) { android.widget.Toast . makeText ( this , R.string.not_connected , Toast.LENGTH_SHORT ) . show () ; return; } if ( ( message . length () ) > 0 ) { byte [] send = message . getBytes () ; btService . write ( send ) ; } } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { if ( drawerToggle . onOptionsItemSelected ( item ) ) { return true ; } else if ( ( item . getItemId () ) == ( R.id.action_add_flag ) ) { item . setVisible ( false ) ; switchToShareFragment () ; } return super . onOptionsItemSelected ( item ) ; } 
public void toCheckoutActionPerformed ( javafx.event.ActionEvent evt ) { if ( ( evt . getSource () . equals ( checkoutButton ) ) && ( ! ( ( content ) instanceof imat.viewcontroller.CheckOutViewController ) ) ) { imat.viewcontroller.CheckOutViewController checkOutViewController = imat.viewcontroller.CheckOutViewController . load ( "CheckOutView.fxml" ) ; setContent ( checkOutViewController ) ; checkOutViewController . showCart () ; } } 
@ unal.architecture.rest.Path ( value = "me" ) @ unal.architecture.rest.GET public unal.architecture.entity.User me ( @ javax.ws.rs.core.Context javax.servlet.http.HttpServletRequest request ) { java.lang.Long userId = ( ( java.lang.Long ) ( request . getSession () . getAttribute ( "user" ) ) ) ; userId = 1L ; if ( userId == null ) throw new unal.architecture.rest.NotAuthorizedException ( "" ) ; return em . find ( unal.architecture.entity.User . class , userId ) ; } 
private com.livae.util.tree.Btree < java.lang.Integer > createFullTree ( int levels , int nodesPerPage ) { com.livae.util.tree.Btree < java.lang.Integer > tree = new com.livae.util.tree.Btree ( nodesPerPage ) ; com.livae.util.Tuple < com.livae.util.tree.BtreePage < java.lang.Integer > , java.lang.Integer > root = createFullTree ( tree , levels , nodesPerPage , 0 ) ; tree . getTestUtils () . setRoot ( tree , root.first , root.second ) ; return tree ; } 
public void onClick ( final com.google.gwt.event.dom.client.ClickEvent event ) { if ( ( localConfig ) != null ) { java.lang.String removeString = removeThisCode . getText () ; com.google.gwt.user.client.Window . alert ( ( "config removed: " + ( localConfig . getItem ( removeString ) ) ) ) ; localConfig . removeItem ( removeString ) ; removeThisCode . setText ( "" ) ; configListtable () ; if ( removeSound . play () ) { com.google.gwt.user.client.Window . alert ( "sound played" ) ; } else { com.google.gwt.user.client.Window . alert ( "sound does not played" ) ; } } } 
public static void giveItem ( net.minecraft.world.World world , net.minecraft.entity.player.EntityPlayer player , net.minecraft.block.Block block , int meta , int cnt , net.minecraft.util.BlockPos pos ) { net.minecraft.item.ItemStack oldStack = new net.minecraft.item.ItemStack ( block , cnt , meta ) ; if ( ! ( player.inventory . addItemStackToInventory ( oldStack ) ) ) { net.minecraft.entity.item.EntityItem entityItem = new net.minecraft.entity.item.EntityItem ( world , pos . getX () , pos . getY () , pos . getZ () , oldStack ) ; world . spawnEntityInWorld ( entityItem ) ; } } 
public static void removeTower ( int x , int y ) { java.util.Iterator < de.clemens_hartmann.checkpoint.core.Tower > iter = de.clemens_hartmann.checkpoint.core.TowerManager.towers . iterator () ; while ( iter . hasNext () ) { de.clemens_hartmann.checkpoint.core.Tower tower = iter . next () ; if ( ( ( tower . getX () ) == x ) && ( ( tower . getY () ) == y ) ) tower . dispose () ; iter . remove () ; } } 
public void enableVelocityOverrideWithVelocity ( double velocity ) { if ( ( override ) == false ) { override = true ; overrideVelocity = velocity ; originalVelocity = velocityPID . getSetpoint () ; velocityPID . setSetpoint ( overrideVelocity ) ; } else { overrideVelocity = velocity ; velocityPID . setSetpoint ( overrideVelocity ) ; } } 
@ za.org.grassroot.webapp.controller.rest.RequestMapping ( value = "/register/{phoneNumber}/{code}" , method = RequestMethod.POST ) public org.springframework.http.ResponseEntity < za.org.grassroot.webapp.model.rest.ResponseWrappers.ResponseWrapper > createGroup ( @ za.org.grassroot.webapp.controller.rest.PathVariable ( value = "phoneNumber" ) java.lang.String phoneNumber , @ za.org.grassroot.webapp.controller.rest.PathVariable ( value = "code" ) java.lang.String code , @ za.org.grassroot.webapp.controller.rest.RequestParam ( value = "registration_id" ) java.lang.String registrationId ) { za.org.grassroot.core.domain.User user = userManagementService . loadOrSaveUser ( phoneNumber ) ; gcmService . registerUser ( user , registrationId ) ; return new org.springframework.http.ResponseEntity ( new za.org.grassroot.webapp.model.rest.ResponseWrappers.ResponseWrapperImpl ( org.springframework.http.HttpStatus.CREATED , za.org.grassroot.webapp.enums.RestMessage.REGISTERED_FOR_PUSH , za.org.grassroot.webapp.enums.RestStatus.SUCCESS ) , org.springframework.http.HttpStatus.CREATED ) ; } 
public static com.emajar.trees.Node createBalancedTree ( int [] array , int min , int max ) { if ( max < min ) { return null ; } int middle = ( max - min ) / 2 ; com.emajar.trees.Node n = new com.emajar.trees.Node ( array [ middle ] ) ; n.left = com.emajar.trees.CreateBalancedTree . createBalancedTree ( array , 0 , ( middle - 1 ) ) ; n.right = com.emajar.trees.CreateBalancedTree . createBalancedTree ( array , ( middle + 1 ) , max ) ; return null ; } 
public java.util.List < org.gitlab.api.models.GitlabMergeRequest > get ( org.gitlab.api.models.GitlabProject project ) throws java.io.IOException { _requests . add ( project ) ; final java.util.List < org.gitlab.api.models.GitlabMergeRequest > l = _responses . get ( project ) ; return l == null ? java.util.Collections . < org.gitlab.api.models.GitlabMergeRequest > emptyList () : l ; } 
private void onceWrite ( org.poco.framework.poi.managers.IPoiManager.IPoiSheet sheet , java.util.List < org.poco.framework.poi.managers.impl.ReadWriter.XMLDetail > onces , java.lang.Object data ) { java.lang.Object param = null ; for ( org.poco.framework.poi.managers.impl.ReadWriter.XMLDetail xdetail : onces ) { param = org.poco.framework.poi.utils.PropertyUtil . getValue ( data , xdetail.name ) ; if ( param == null ) continue; for ( org.poco.framework.poi.managers.impl.ReadWriter.XMLCell xcell : xdetail.cells ) { java.lang.Object value = org.poco.framework.poi.utils.PropertyUtil . getValue ( param , xcell.name ) ; if ( value == null ) return; cellWrite ( sheet , xcell , value , null ) ; } } } 
public java.lang.Iterable < T > getBuildsAfter ( java.lang.String n ) { return filterSkipped ( ( isMyBuilds () ? dynamicBuildRepository . < T > getCurrentUserBuildsGreaterThan ( ( ( com.groupon.jenkins.dynamic.build.DbBackedProject ) ( owner ) ) , n ) : dynamicBuildRepository . < T > getBuildGreaterThan ( ( ( com.groupon.jenkins.dynamic.build.DbBackedProject ) ( owner ) ) , n , branch ) ) ) ; } 
public void onPress ( android.view.View view ) { android.widget.TextView tv = ( ( android.widget.TextView ) ( findViewById ( R.id.person_name ) ) ) ; java.lang.String deck = tv . getText () . toString () ; java.lang.System.out . println ( "pressed" ) ; android.content.Intent intent = new android.content.Intent ( this , com.example.oce.langlock.MainContentActivity . class ) ; intent . putExtra ( "deckName" , deck ) ; startActivity ( intent ) ; } 
public void removeBook ( int position ) { com.josephcmontgomery.bookscanner.Tools.BookInformation book = getBookFromDataSource ( position ) ; if ( ( book.bookId ) != ( - 1 ) ) { com.josephcmontgomery.bookscanner.Database.Database . deleteBookById ( book.bookId , context ) ; cursor = com.josephcmontgomery.bookscanner.Database.Database . getAllBooks ( context ) ; notifyDataSetChanged () ; } else { books . remove ( position ) ; notifyDataSetChanged () ; } com.josephcmontgomery.bookscanner.Tools.BookCache . removeBook ( book ) ; } 
private BSTreeNode < T > add ( BSTreeNode < T > curr , BSTreeNode < T > t ) { if ( curr == null ) { return t ; } else if ( ( t . getData () . compareTo ( curr . getData () ) ) < 0 ) { curr . setLeft ( add ( root . getLeft () , t ) ) ; return curr ; } else { curr . setRight ( add ( root . getRight () , t ) ) ; return curr ; } } 
@ java.lang.Override public void create ( ) throws java.io.IOException { java.net.ServerSocket welcomeSocket = new java.net.ServerSocket ( portNumber ) ; while ( true ) { java.net.Socket connectionSocket = welcomeSocket . accept () ; java.io.BufferedReader inFromClient = new java.io.BufferedReader ( new java.io.InputStreamReader ( connectionSocket . getInputStream () ) ) ; java.io.DataOutputStream outToClient = new java.io.DataOutputStream ( connectionSocket . getOutputStream () ) ; java.lang.System.out . println ( inFromClient . readLine () ) ; outToClient . writeBytes ( inFromClient . readLine () ) ; welcomeSocket . close () ; } } 
public java.util.Calendar calcDataCobranca ( java.lang.String dataCompra ) { java.util.Calendar cDataCobranca = controller.DataController . stringToCalendar ( dataCompra ) ; if ( ( cDataCobranca . get ( java.util.Calendar.DAY_OF_MONTH ) ) >= ( diaVirada ) ) { cDataCobranca . add ( java.util.Calendar.MONTH , 1 ) ; } cDataCobranca . set ( java.util.Calendar.DAY_OF_MONTH , diaVencimento ) ; return cDataCobranca ; } 
@ org.junit.Test public void classNameFromTypeElement () { javax.lang.model.util.Elements elements = compilationRule . getElements () ; javax.lang.model.element.TypeElement element = elements . getTypeElement ( java.lang.Object . class . getCanonicalName () ) ; com.google.common.truth.Truth . assert_ () . that ( dagger.internal.codegen.writer.ClassName . fromTypeElement ( element ) . canonicalName () ) . isEqualTo ( "java.lang.Object" ) ; } 
protected edu.umd.smile.object.ObjectBondTracker.ObjectBond findLoosenable ( com.jme3.scene.Spatial guestItem , com.jme3.math.Vector3f clickedLocation ) { com.jme3.scene.Node guest = getNearestGuestBondPoint ( guestItem , clickedLocation ) ; if ( guest == null ) { return null ; } edu.umd.smile.object.ObjectBondTracker.ObjectBond bond = getBond ( guest ) ; if ( ! ( lockedHosts . contains ( bond.host ) ) ) { return bond ; } else { return null ; } } 
@ java.lang.Override public boolean next ( ) throws java.sql.SQLException { throwIfTimedOutOrClosed () ; if ( ( cursor ) != null ) { boolean next ; if ( ! ( next = super . next () ) ) { throwIfTimedOut () ; } return next ; } else { throwIfTimedOut () ; return false ; } } 
@ java.lang.Override public void showClientIdentifiers ( java.util.List < com.mifos.objects.noncore.Identifier > identifiers ) { if ( ( getActivity () ) == null ) return; if ( ( identifiers != null ) && ( ( identifiers . size () ) > 0 ) ) { com.mifos.mifosxdroid.adapters.IdentifierListAdapter identifierListAdapter = new com.mifos.mifosxdroid.adapters.IdentifierListAdapter ( getActivity () , identifiers , clientId ) ; lv_identifiers . setAdapter ( identifierListAdapter ) ; } else { android.widget.Toast . makeText ( getActivity () , getString ( R.string.message_no_identifiers_available ) , Toast.LENGTH_SHORT ) . show () ; } } 
public void avgyro ( org.ejml.data.DenseMatrix64F out ) { if ( ( acing ) > 0 ) { org.ejml.ops.CommonOps . scale ( ( 1 / ( acing ) ) , acgyro , out ) ; org.instk.demo_1001.INS . skew ( vr_a , out ) ; } else out . zero () ; } 
public static void setKeyframeToSkeleton ( com.gemserk.tools.animationeditor.core.Skeleton skeleton , com.gemserk.tools.animationeditor.core.SkeletonAnimationKeyFrame keyframe ) { java.util.Set < java.lang.String > keySet = keyframe.jointKeyFrames . keySet () ; for ( java.lang.String jointId : keySet ) { float [] jointKeyFrame = keyframe . getJointKeyFrame ( jointId ) ; com.gemserk.tools.animationeditor.core.Joint joint = skeleton . getRoot () . find ( jointId ) ; com.gemserk.tools.animationeditor.core.SkeletonAnimationUtils.jointConverter . copyToObject ( joint , jointKeyFrame ) ; } } 
public java.lang.ref.WeakReference < java.lang.Object > get ( java.lang.Object obj ) { java.lang.ref.WeakReference < java.lang.Object > res = null ; java.lang.Long id = ( ( long ) ( obj . hashCode () ) ) ; java.util.List < java.lang.ref.WeakReference < java.lang.Object > > bucket = buckets . get ( id ) ; if ( bucket != null ) { for ( java.lang.ref.WeakReference < java.lang.Object > ref : bucket ) { if ( ref . get () . equals ( obj ) ) { res = ref ; break; } } } return res ; } 
@ java.lang.Override public void subscribe ( java.util.regex.Pattern pattern , org.apache.kafka.clients.consumer.ConsumerRebalanceListener listener ) { acquire () ; try { if ( pattern == null ) throw new java.lang.IllegalArgumentException ( "Topic pattern to subscribe to cannot be null" ) ; org.apache.kafka.clients.consumer.KafkaConsumer.log . debug ( "Subscribed to pattern: {}" , pattern ) ; this . subscriptions . subscribe ( pattern , listener ) ; this . metadata . needMetadataForAllTopics ( true ) ; this . metadata . requestUpdate () ; this . coordinator . updatePatternSubscription ( metadata . fetch () ) ; } finally { release () ; } } 
@ java.lang.Override public net.minecraft.item.ItemStack decrStackSize ( int slot , int amount ) { net.minecraft.item.ItemStack stack = getStackInSlot ( slot ) ; if ( ( stack != null ) && ( amount != 0 ) ) { if ( ( stack.stackSize ) <= amount ) { setInventorySlotContents ( slot , null ) ; } else { stack = stack . splitStack ( amount ) ; setInventorySlotContents ( slot , getStackInSlot ( slot ) ) ; } markDirty () ; return stack ; } return null ; } 
static boolean checkAminoAcidsFromPosition ( java.lang.String sequence , int pos , java.lang.String aas ) { boolean insertionMode = ( aas == null ) || ( aas . isEmpty () ) ; if ( insertionMode ) return com.nextprot.api.isoform.mapper.utils.SequencePositionMapper . checkSequencePosition ( sequence , pos , true ) ; return ( com.nextprot.api.isoform.mapper.utils.SequencePositionMapper . checkSequencePosition ( sequence , pos , false ) ) && ( ( sequence . indexOf ( aas ) ) == ( pos - 1 ) ) ; } 
private < T extends net.tjeerd.onedrive.json.folder.Data > T convertTo ( java.lang.Class < T > clazz ) { com.fasterxml.jackson.databind.ObjectMapper objectMapper = new com.fasterxml.jackson.databind.ObjectMapper () ; try { java.lang.String json = objectMapper . writerWithType ( net.tjeerd.onedrive.json.folder.Data . class ) . writeValueAsString ( this ) ; T f = objectMapper . readValue ( json , clazz ) ; return f ; } catch ( java.lang.Exception e ) { throw new java.lang.Error ( e ) ; } } 
@ java.lang.Override public void onChange () { try { assertEquals ( 1 , numberOfInvocation . incrementAndGet () ) ; assertTrue ( realmResults . isLoaded () ) ; assertEquals ( 5 , realmResults . getColumnLong () ) ; assertEquals ( "The Endless River" , realmResults . getColumnString () ) ; } catch ( junit.framework.AssertionFailedError e ) { threadAssertionError [ 0 ] = e ; } finally { signalCallbackFinished . countDown () ; } } 
private void removeExpiredStickyFlags ( org.dcache.pool.repository.MetaDataRecord entry ) throws diskCacheV111.util.CacheException { synchronized ( entry ) { org.dcache.pool.repository.CacheEntry oldEntry = new org.dcache.pool.repository.v5.CacheEntryImpl ( entry ) ; java.util.Collection < org.dcache.pool.repository.StickyRecord > removed = entry . removeExpiredStickyFlags () ; for ( org.dcache.pool.repository.StickyRecord record : removed ) { org.dcache.pool.repository.v5.CacheEntryImpl newEntry = new org.dcache.pool.repository.v5.CacheEntryImpl ( entry ) ; stickyChanged ( oldEntry , newEntry , record ) ; } scheduleExpirationTask ( entry ) ; } } 
private void payWithNewCard () { android.content.Intent scanIntent = new android.content.Intent ( this , io.card.payment.CardIOActivity . class ) ; scanIntent . putExtra ( CardIOActivity.EXTRA_APP_TOKEN , ly.kite.checkout.PaymentActivity.CARD_IO_TOKEN ) ; scanIntent . putExtra ( CardIOActivity.EXTRA_REQUIRE_EXPIRY , true ) ; scanIntent . putExtra ( CardIOActivity.EXTRA_REQUIRE_CVV , true ) ; scanIntent . putExtra ( CardIOActivity.EXTRA_REQUIRE_POSTAL_CODE , false ) ; startActivityForResult ( scanIntent , ly.kite.checkout.PaymentActivity.REQUEST_CODE_CREDITCARD ) ; } 
@ java.lang.Override public void handle ( org.fenixedu.cms.domain.Page page , org.fenixedu.cms.rendering.TemplateContext componentContext , org.fenixedu.cms.rendering.TemplateContext globalContext ) { org.fenixedu.academic.domain.Degree degree = degree ( page ) ; globalContext . put ( "defaultView" , "month" ) ; globalContext . put ( "eventsUrl" , ( ( ( org.fenixedu.bennu.core.util.CoreConfiguration . getConfiguration () . applicationUrl () ) + "/api/fenixedu-learning/events/degree/evaluations/" ) + ( degree . getExternalId () ) ) ) ; globalContext . put ( "dayToShow" , org.joda.time.format.ISODateTimeFormat . date () . print ( org.joda.time.LocalDate . now () ) ) ; } 
public static < E extends java.lang.Enum < E > > void select ( com.google.gwt.user.client.ui.ListBox cbo , E value ) { int count = cbo . getItemCount () ; for ( int i = 0 ; i < count ; i ++ ) { if ( cbo . getItemText ( i ) . equals ( value . toString () ) ) { cbo . setSelectedIndex ( i ) ; break; } } } 
public com.hobbes.wstore.FileByteChanges evict () { com.hobbes.wstore.Path least = lru [ currLeast ] ; lru [ currLeast ] = null ; com.hobbes.wstore.FileByteChanges ret = table . remove ( least ) ; ret . writeLog () ; currLeast = ( ( currLeast ) + 1 ) % ( size ) ; } 
@ java.lang.Override public void onClick ( com.google.gwt.event.dom.client.ClickEvent event ) { java.lang.System.out . println ( ( "selectedValues::+" + ( selValues . contains ( domainStand . getCodeId () . toString () ) ) ) ) ; if ( selValues . contains ( domainStand . getCodeId () . toString () ) ) { selectedValues . remove ( domainStand . getCodeId () ) ; } standardsCode . removeStyleName ( "active" ) ; removeGradeWidget ( ulSelectedItems , domainStand . getCodeId () ) ; liPanelWithClose . removeFromParent () ; } 
public void lifeCheck ( edu.oregonstate.cs361.battleship.Ship in ) { shipSunk = false ; if ( in . isAlive () ) { if ( ( in . getHealth () ) == 0 ) { in . makeDed () ; shipSunk = true ; } else { shipSunk = false ; } } else if ( ! ( in . isAlive () ) ) { shipSunk = false ; return; } } 
private void removeExpiredCampaings ( int currentDay ) { for ( java.util.Map.Entry < java.lang.Integer , CampaignData > camp : myCampaigns . entrySet () ) { CampaignData campData = camp . getValue () ; if ( ( campData.dayEnd ) > currentDay ) myCampaigns . remove ( campData.id ) ; } } 
@ java.lang.Override public java.util.List < edu.nju.logic.vo.AnswerVO > getAnswerByName ( java.lang.String name ) { java.util.List < edu.nju.data.entity.Answer > answers = answerDAO . getAnswerByUserName ( name ) ; java.util.List < edu.nju.logic.vo.AnswerVO > answerVOs = new java.util.ArrayList ( answers . size () ) ; for ( edu.nju.data.entity.Answer answer : answers ) { answerVOs . add ( timeService . transferAnswer ( answer ) ) ; } return answerVOs ; } 
public net.binaryaura.customize.client.gui.huditem.HudItem get ( java.lang.String name ) { for ( net.binaryaura.customize.client.gui.huditem.HudItem hudItem : all . toArray ( new net.binaryaura.customize.client.gui.huditem.HudItem [ all . size () ] ) ) { if ( name . equals ( hudItem . getName () ) ) return hudItem ; } Customize.log . warn ( ( ( "HUDItem " + name ) + " isn't in the registry. Skipping" ) ) ; return null ; } 
public ch.helin.messages.dto.way.Waypoint convertToWaypointDto ( models.WayPoint wayPoint ) { ch.helin.messages.dto.way.Waypoint wayPointDto = new ch.helin.messages.dto.way.Waypoint () ; wayPointDto . setId ( wayPoint . getId () ) ; ch.helin.messages.dto.way.Position position = commons.gis.GisHelper . createPosition ( wayPoint . getPosition () ) ; position . setHeight ( wayPoint . getHeight () ) ; wayPointDto . setPosition ( position ) ; wayPointDto . setId ( wayPoint . getId () ) ; wayPointDto . setAction ( wayPoint . getAction () ) ; return wayPointDto ; } 
public java.lang.Object getValueAt ( int row , int col ) { Download obj = downloadList . get ( row ) ; switch ( col ) { case 0 : return obj . getUrlName () ; case 1 : int i = obj . getSize () ; return i == ( - 1 ) ? "" : java.lang.Integer . toString ( i ) ; case 2 : return ( ( java.lang.Float ) ( obj . getProgress () ) ) ; case 3 : return obj.STATUS [ obj . getStatus () ] ; } return "" ; } 
@ java.lang.Override public final edu.clemson.cs.rsrg.absyn.expressions.Exp remember () { edu.clemson.cs.rsrg.absyn.expressions.Exp newWhere = ( ( edu.clemson.cs.rsrg.absyn.expressions.mathexpr.MathExp ) ( myWhereExp ) ) . remember () ; edu.clemson.cs.rsrg.absyn.expressions.Exp newBody = ( ( edu.clemson.cs.rsrg.absyn.expressions.mathexpr.MathExp ) ( myBodyExp ) ) . remember () ; return new edu.clemson.cs.rsrg.absyn.expressions.mathexpr.QuantExp ( cloneLocation () , myQuantification , copyVars () , newWhere , newBody ) ; } 
@ java.lang.Override public com.alliander.osgp.adapter.ws.schema.smartmetering.monitoring.PeriodicMeterReadsGasResponseData convert ( final com.alliander.osgp.domain.core.valueobjects.smartmetering.PeriodicMeterReadsContainerGas source , final ma.glasnost.orika.metadata.Type < ? extends com.alliander.osgp.adapter.ws.schema.smartmetering.monitoring.PeriodicMeterReadsGasResponseData > destinationType ) { final com.alliander.osgp.adapter.ws.schema.smartmetering.monitoring.PeriodicMeterReadsGasResponseData periodicMeterReadsResponse = new com.alliander.osgp.adapter.ws.schema.smartmetering.monitoring.PeriodicMeterReadsGasResponseData () ; periodicMeterReadsResponse . setPeriodType ( com.alliander.osgp.adapter.ws.schema.smartmetering.monitoring.PeriodType . valueOf ( source . getPeriodType () . name () ) ) ; final java.util.List < com.alliander.osgp.adapter.ws.schema.smartmetering.monitoring.PeriodicMeterReadsGas > periodicMeterReads = periodicMeterReadsResponse . getPeriodicMeterReadsGas () ; for ( final com.alliander.osgp.adapter.ws.schema.smartmetering.monitoring.PeriodicMeterReadsGas m : source . getMeterReadsGas () ) { periodicMeterReads . add ( this . convert ( m ) ) ; } return periodicMeterReadsResponse ; } 
public org.bukkit.inventory.ItemStack getLore ( java.lang.String name , org.bukkit.entity.Player player ) { org.bukkit.inventory.ItemStack tmp = null ; if ( ! ( isLoreRegistered ( name ) ) ) { player . sendMessage ( ( ( org.bukkit.ChatColor.RED ) + "That lore can not be found!" ) ) ; return tmp ; } else { tmp = df . getData () . getItemStack ( ( "lores." + name ) ) ; return tmp ; } } 
private java.awt.image.BufferedImage loadMapImage () { java.awt.image.BufferedImage return_image = null ; java.io.InputStream fin = null ; fin = getClass () . getResourceAsStream ( "resources/blankmap.png" ) ; if ( fin == null ) { java.lang.System.out . println ( "ERROR: Updater cannot create inputStream into blankmap.png!" ) ; return null ; } try { return_image = javax.imageio.ImageIO . read ( fin ) ; } catch ( java.io.IOException e ) { java.lang.System.out . println ( "ERROR: Updater cannot load blankmap.png!" ) ; java.lang.System . exit ( 1 ) ; } return return_image ; } 
@ java.lang.Override public void onAuthStateChanged ( @ android.support.annotation.NonNull com.google.firebase.auth.FirebaseAuth firebaseAuth ) { com.google.firebase.auth.FirebaseUser user = firebaseAuth . getCurrentUser () ; if ( user != null ) { android.widget.Toast . makeText ( this , "You are signed in to fatties mobile app" , Toast.LENGTH_SHORT ) . show () ; final java.lang.String userId = user . getUid () ; getUser ( userId ) ; } else { startActivityForResult ( com.firebase.ui.auth.AuthUI . getInstance () . createSignInIntentBuilder () . setIsSmartLockEnabled ( false ) . setProviders ( java.util.Arrays . asList ( new com.firebase.ui.auth.AuthUI.IdpConfig.Builder ( com.firebase.ui.auth.AuthUI.GOOGLE_PROVIDER ) . build () ) ) . build () , com.louanimashaun.fattyzgrill.MealsActivity.RC_SIGN_IN ) ; } } 
@ java.lang.Override public boolean equals ( java.lang.Object o ) { if ( ( this ) == o ) return true ; if ( ( o == null ) || ( ( getClass () ) != ( o . getClass () ) ) ) return false ; io.datakernel.aggregation.AggregationPredicates.PredicateEq that = ( ( io.datakernel.aggregation.AggregationPredicates.PredicateEq ) ( o ) ) ; if ( ! ( key . equals ( that.key ) ) ) return false ; return value . equals ( that.value ) ; } 
public java.math.BigDecimal getByContractBudgetDetailPrice ( com.ersoft.web.domain.business.budget.contract.ContractBudgetDetail detail ) { java.math.BigDecimal price = java.math.BigDecimal.ZERO ; java.util.List < com.ersoft.web.domain.business.cost.batch.sec.ActualCostBatchSec > costs = com.google.common.collect.Lists . newArrayList () ; costs . addAll ( findActiveAll ( com.ersoft.web.service.business.ActualCostBatchSecPredicates . contractBudgetDetailPredicate ( detail ) , new org.springframework.data.domain.Sort ( org.springframework.data.domain.Sort.Direction.ASC , "operateDate" ) ) ) ; for ( com.ersoft.web.domain.business.cost.batch.sec.ActualCostBatchSec actualCostBatch : costs ) { price = getDetailPrice ( detail , price , actualCostBatch ) ; } return price ; } 
public void updateLocation ( java.util.ArrayList < Edge > possibleMoves ) { if ( ( ( currentSpeed ) + ( acceleration ) ) <= ( maxVelocity ) ) { currentSpeed += acceleration ; } else { currentSpeed = maxVelocity ; } if ( ( ( distanceToNextDestination ) - ( currentSpeed ) ) >= 0 ) { distanceToNextDestination -= currentSpeed ; distanceTraveled += currentSpeed ; } else { distanceTraveled += distanceToNextDestination ; currentSpeed = 0 ; chooseNewDestination ( possibleMoves ) ; } } 
public static void addMessag ( java.lang.String message , org.safs.tools.mail.Mailer.MimeType msg_type , java.util.HashMap < java.lang.Integer , org.safs.tools.mail.Mailer.MimeContent > contents ) { try { if ( message == null ) { org.safs.IndependantLog . debug ( "The message is null, cannot send it." ) ; return; } org.safs.tools.mail.Mailer.MimeContent content = new org.safs.tools.mail.Mailer.MimeContent ( message , msg_type ) ; java.lang.Integer order = new java.lang.Integer ( contents . size () ) ; contents . put ( order , content ) ; } catch ( java.lang.Exception e ) { org.safs.IndependantLog . error ( "Fail to handle message." , e ) ; } } 
private void addRowsToView () { calorieTable . addView ( tableHeaderRow , new android.widget.TableLayout.LayoutParams ( android.widget.TableRow.LayoutParams.WRAP_CONTENT , android.widget.TableRow.LayoutParams.WRAP_CONTENT ) ) ; for ( int i = 0 ; i < ( tableRows . size () ) ; i ++ ) { calorieTable . addView ( tableRows . get ( i ) , new android.widget.TableLayout.LayoutParams ( android.widget.TableRow.LayoutParams.WRAP_CONTENT , android.widget.TableRow.LayoutParams.WRAP_CONTENT ) ) ; } } 
public void removeCogniton ( civilisation.individu.cognitons.TypeCogniton cognitonToRemove ) { java.lang.System.out . println ( "remove cogniton" ) ; java.lang.System.out . println ( "yessir!" ) ; for ( java.util.Iterator < civilisation.inspecteur.simulation.GCogniton > it = gCognitons . iterator () ; it . hasNext () ; ) { civilisation.inspecteur.simulation.GCogniton cog = it . next () ; if ( ( cog . getCogniton () ) == cognitonToRemove ) { this . remove ( cog ) ; it . remove () ; allCognitons . remove ( cog . getCogniton () ) ; } } } 
@ org.junit.Test public void commentsOnStatements ( ) throws java.io.IOException , org.jlato.parser.ParseException { final java.lang.String original = resourceAsString ( "org/jlato/samples/TestClass_nonformated.java" ) ; org.jlato.tree.decl.CompilationUnit cu = parse ( original , true ) ; org.junit.Assert . assertNotEquals ( org.jlato.printer.Printer . printToString ( cu , FormattingSettings.Default ) , org.jlato.printer.Printer . printToString ( cu , false , FormattingSettings.Default ) ) ; org.junit.Assert . assertEquals ( org.jlato.printer.Printer . printToString ( cu , FormattingSettings.Default ) , org.jlato.printer.Printer . printToString ( cu , true , FormattingSettings.Default ) ) ; } 
public java.lang.String get_tabela_string () { java.lang.String tabela_string = "!" ; if ( ! ( this . tabelaRoteamento . isEmpty () ) ) { tabela_string = "" ; for ( roteador.EntradaTabelaRoteamento entrada : this . tabelaRoteamento ) { tabela_string = ( ( ( tabela_string + "*" ) + ( entrada . getIpDestino () ) ) + ";" ) + ( entrada . getMetrica () ) ; } } return tabela_string ; } 
public void removePlayer ( final java.lang.String playerID ) { int position = players . get ( playerID ) . getPosition () ; players . remove ( playerID ) ; for ( de.haw_hamburg.vs_ws2015.spahl_haug.boards_rest.Field f : fields ) { if ( ( f . getPlace () . getPosition () ) == position ) { f . removePlayer ( playerID ) ; } } } 
@ org.junit.Ignore @ org.junit.Test public void testHashCode ( ) throws java.lang.Exception { final com.pi4j.io.w1.W1Device w1Devicea1 = createDevice ( "28-00000698ebb1" ) ; final com.pi4j.io.w1.W1Device w1Devicea2 = createDevice ( "28-00000698ebb2" ) ; assertEquals ( w1Devicea1 . hashCode () , w1Devicea2 . hashCode () ) ; final com.pi4j.io.w1.W1Device w1Deviceb = createDevice ( "28-00000698ebb2" ) ; assertNotEquals ( w1Devicea1 . hashCode () , w1Deviceb . hashCode () ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { android.content.Intent result = new android.content.Intent () ; result . putExtra ( com.ivanchug.moneytracker.AddActivity.RESULT_ITEM , new com.ivanchug.moneytracker.api.Item ( name . getText () . toString () , java.lang.Integer . valueOf ( amount . getText () . toString () ) , type ) ) ; setResult ( com.ivanchug.moneytracker.RESULT_OK , result ) ; finish () ; } 
private net.thucydides.core.requirements.model.Requirement requirementFromDirectoryName ( java.io.File requirementDirectory ) { java.lang.System.out . println ( ( "Reading requirement from directory name " + requirementDirectory ) ) ; java.lang.String shortName = humanReadableVersionOf ( requirementDirectory . getName () ) ; java.util.List < net.thucydides.core.requirements.model.Requirement > children = readChildrenFrom ( requirementDirectory ) ; return net.thucydides.core.requirements.model.Requirement . named ( shortName ) . withType ( getDefaultType ( level ) ) . withNarrative ( shortName ) . withChildren ( children ) ; } 
public static java.lang.String FormatText ( java.lang.Object text ) { java.lang.String output = ( text == null ) ? "<null>" : java.lang.String . valueOf ( text ) ; if ( ( Singletons.ExperimentItems ) != null ) output = ( ( ( ( Singletons.ExperimentItems.Description ) + " | " ) + ( Singletons.ExperimentItems.AlgorithmScriptFilePath ) ) + " | " ) + output ; return output ; } 
@ java.lang.Override protected void initScreen () { initColors () ; game.DragonLand.homeScreen = new game.HomeScreen ( getWidth () , getHeight () ) ; game.DragonLand.shopMain = new game.HomeShopScreen ( getWidth () , getHeight () ) ; game.DragonLand.buyScreen = new game.BuyScreenWendy ( getWidth () , getHeight () ) ; game.DragonLand.buyScreen2 = new game.BuyScreenWendy2 ( getWidth () , getHeight () ) ; setScreen ( game.DragonLand.homeScreen ) ; } 
@ java.lang.Override public void putAll ( org.jetbrains.ether.dependencyView.MultiMaplet < K , V > m ) { for ( java.util.Map.Entry < K , java.util.Collection < V > > entry : m . entrySet () ) { put ( entry . getKey () , entry . getValue () ) ; } } 
private void distanceButtonClicked () { distanceButton . setBackgroundColor ( getResources () . getColor ( R.color.button_material_dark ) ) ; durationButton . setBackgroundColor ( getResources () . getColor ( R.color.button_material_light ) ) ; durationButton . setChecked ( false ) ; durationPickerLayout . setVisibility ( View.INVISIBLE ) ; distancePickerLayout . setVisibility ( View.VISIBLE ) ; } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { android.view.View view = inflater . inflate ( R.layout.main_recycler_fragment , container , false ) ; mainRecycler = ( ( android.support.v7.widget.RecyclerView ) ( view . findViewById ( R.id.recycler_view ) ) ) ; mLayoutManager = new android.support.v7.widget.GridLayoutManager ( getActivity () , 2 ) ; mainRecycler . setLayoutManager ( mLayoutManager ) ; mainRecycler . setItemAnimator ( new android.support.v7.widget.DefaultItemAnimator () ) ; moviesDBHelper = new app.com.project.abdullah.movieapp.Helper.MoviesDBHelper ( getActivity () ) ; getData () ; return view ; } 
@ java.lang.Override protected void onDestroy () { super . onDestroy () ; if ( mBound ) { unbindService ( mConnection ) ; mBound = false ; } final java.lang.String PERSIST_SERVICE = mContext . getString ( R.string.pref_persistservice_key ) ; boolean persistService = prefs . getBoolean ( PERSIST_SERVICE , true ) ; if ( ! persistService ) { android.content.Intent intent = new android.content.Intent ( mContext , com.SecUpwN.AIMSICD.service.AimsicdService . class ) ; stopService ( intent ) ; } } 
@ java.lang.Override public void handleStatement ( org.openrdf.model.Statement st ) throws org.openrdf.rio.RDFHandlerException { ( count ) ++ ; if ( ( ( count ) % 1000000 ) == 0 ) { com.github.amihalik.rya.mongo.debugging.serialization.RdfHandlerCounter.log . info ( numberFormat . format ( ( ( count ) + " statements written" ) ) ) ; } inner . handleStatement ( st ) ; } 
private void processRequest ( ru.codeninja.proxyapp.connection.UrlConnection urlConnection , javax.servlet.http.HttpServletRequest req , javax.servlet.http.HttpServletResponse resp ) throws java.io.IOException { ru.codeninja.proxyapp.request.RequestedUrl url = requestParamParser . getUrl ( req ) ; ru.codeninja.proxyapp.connection.ProxyConnection connection = urlConnection . connect ( url ) ; if ( connection == null ) {} else { responseHeadersManager . sendHeaders ( resp , connection ) ; ru.codeninja.proxyapp.response.writer.ResponseWriter responseWriter = responseWriterFactory . get ( connection ) ; responseWriter . sendResponse ( connection , resp ) ; } } 
@ java.lang.Override public void accept ( io.crate.data.BatchIterator iterator , @ javax.annotation.Nullable java.lang.Throwable failure ) { if ( failure == null ) { for ( io.crate.data.Projector projector : projectors ) { iterator = projector . apply ( iterator ) ; } consumer . accept ( iterator , null ) ; } else { consumer . accept ( iterator , failure ) ; } } 
public void resetCurrentRole ( java.lang.String role ) throws com.silverpeas.processManager.ProcessManagerException { if ( ( role != null ) && ( ( role . length () ) > 0 ) ) { this . currentRole = role ; } resetCreationRights () ; resetProcessFilter () ; resetCurrentProcessList () ; resetCurrentProcessListHeaders () ; } 
protected void saveValues ( final org.unicef.rapidreg.forms.Field field ) { if ( android.text.TextUtils . isEmpty ( getValueView () . getText () ) ) { itemValues . addItem ( field . getName () , "" ) ; return; } if ( field . isNumericField () ) { itemValues . addItem ( field . getName () , java.lang.Integer . valueOf ( getResult () ) ) ; } else { itemValues . addItem ( field . getName () , getResult () ) ; } } 
@ java.lang.Override public void startleafNode ( final java.lang.String localName , final java.lang.Object value ) throws java.io.IOException { final java.util.Map.Entry < org.opendaylight.yangtools.yang.data.api.YangInstanceIdentifier.NodeIdentifier , java.lang.Object > dom = serializeLeaf ( localName , value ) ; getDelegate () . leafNode ( dom . getKey () , dom . getValue () ) ; } 
private java.lang.String getArithmeticFunctions ( java.lang.String num2 ) { java.lang.System.out . println ( ( "yes in here wtf: " + ( num1 ) ) ) ; if ( addFunctionActive ) { return add ( num1 , num2 ) ; } if ( subFunctionActive ) { return subtract ( num1 , num2 ) ; } if ( multFunctionActive ) { return multiply ( num1 , num2 ) ; } if ( divFunctionActive ) { return divide ( num1 , num2 ) ; } if ( powerFunctionActive ) { return power ( num1 , num2 ) ; } else return "0" ; } 
public void replaceFragment ( int position ) { item = position ; if ( ( adapter ) == null ) { adapter = new com.example.administrator.searchpicturetool.presenter.adapter.MyPagerAdapter ( getView () , fragmentManager ) ; } getView () . getViewPager () . setAdapter ( adapter ) ; getView () . getTabLayout () . setupWithViewPager ( getView () . getViewPager () ) ; } 
public boolean setFormModelObject ( org.apache.openmeetings.db.entity.calendar.Appointment a , org.apache.wicket.core.request.handler.IPartialPageRequestHandler target ) { org.apache.openmeetings.db.entity.calendar.OmCalendar c = a . getCalendar () ; if ( calendarPanel . getAppointmentManager () . testConnection ( c ) ) return false ; form . setModelObject ( c ) ; form.url . setModelObject ( c . getHref () ) ; setButtons ( target ) ; return true ; } 
public static void main ( java.lang.String [] args ) { int [] array = new int [ java.lang.Integer . parseInt ( args [ 1 ] ) ] ; for ( int i = 0 ; i < ( array.length ) ; i ++ ) { array [ i ] = i + 1 ; } Main . sieve ( array ) ; Main . goldbach ( array ) ; } 
@ java.lang.Override public team5.diabetesself_managmentapp.adapter.PrescriptionAdapter.ViewHolder onCreateViewHolder ( android.view.ViewGroup parent , int viewType ) { android.view.View view = inflater . inflate ( R.layout.prescription_entry_view , parent , false ) ; team5.diabetesself_managmentapp.adapter.PrescriptionAdapter.ViewHolder viewHolder = new team5.diabetesself_managmentapp.adapter.PrescriptionAdapter.ViewHolder ( view ) ; formatter = new java.text.SimpleDateFormat ( "MM/dd/yyyy" ) ; viewHolder.etDate . setText ( formatter . format ( cal . getTime () ) ) ; formatter = new java.text.SimpleDateFormat ( "hh:mm:aa" ) ; viewHolder.etTime . setText ( formatter . format ( cal . getTime () ) ) ; vh . add ( viewHolder ) ; return viewHolder ; } 
@ org.junit.Before public void setUp ( ) throws java.lang.Exception { dbMapComponent = new org.talend.designer.dbmap.DbMapComponent () ; java.util.List < org.talend.core.model.process.IConnection > incomingConnections = new java.util.ArrayList < org.talend.core.model.process.IConnection > () ; conn = org.mockito.Mockito . mock ( org.talend.core.model.process.IConnection . class ) ; incomingConnections . add ( conn ) ; dbMapComponent . setIncomingConnections ( incomingConnections ) ; oracleManager = new org.talend.designer.dbmap.language.oracle.OracleGenerationManager () ; } 
public void setParameters ( final uk.ac.diamond.scisoft.analysis.rcp.inspector.SliceProperty property , final uk.ac.diamond.scisoft.analysis.dataset.ILazyDataset axis , final uk.ac.diamond.scisoft.analysis.rcp.inspector.SliceProperty [] properties , boolean used ) { slice = property ; if ( ( axisSlices ) != null ) for ( int i = 0 ; i < ( axisSlices.length ) ; i ++ ) axisSlices [ i ] . removePropertyChangeListener ( listener ) ; axisSlices = properties ; mode = used ; axisData = axis ; createAxisDataset () ; init ( false ) ; } 
public static void main ( java.lang.String [] args ) { plugin.spatialsimulator.SpatialSimulatorDialog ssd = new plugin.spatialsimulator.SpatialSimulatorDialog () ; org.sbml.jsbml.SBMLDocument document ; try { document = org.sbml.jsbml.JSBML . readSBML ( "sample/alt.xml" ) ; java.lang.System . setProperty ( "jna.debug_load" , "true" ) ; ssd . setDocument ( document ) ; ssd . setVisible ( true ) ; } catch ( javax.xml.stream.XMLStreamException e ) { e . printStackTrace () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
private static int [] getQueryCoordinates ( maf.MAF_Hit h ) { int queryStart = ( ( h . getFrameDir () ) == ( hits.Hit.FrameDirection.POSITIVE ) ) ? h . getQueryStart () : ( ( h . getQueryStart () ) - ( h . getQueryLength () ) ) + 1 ; int queryEnd = ( h . getQueryStart () ) + ( h . getQueryLength () ) ; int [] coord = new int [] { queryStart , queryEnd } ; return coord ; } 
@ java.lang.Override public void onPrepared ( android.media.MediaPlayer mp ) { mediaPlayer . start () ; android.support.design.widget.FloatingActionButton fab = ( ( android.support.design.widget.FloatingActionButton ) ( activity . findViewById ( R.id.np_play_pause ) ) ) ; fab . setImageResource ( R.drawable.ic_pause_white_48dp ) ; fab . setClickable ( true ) ; android.widget.ProgressBar pb = ( ( android.widget.ProgressBar ) ( activity . findViewById ( R.id.now_playing_music_progress ) ) ) ; pb . setProgress ( 0 ) ; pb . setMax ( mp . getDuration () ) ; } 
@ java.lang.Override public void onCreate () { super . onCreate () ; com.rashwan.reactive_popular_movies.PopularMoviesApplication.component = com.rashwan.reactive_popular_movies.DI.DaggerApplicationComponent . builder () . applicationModule ( new com.rashwan.reactive_popular_movies.DI.ApplicationModule ( this ) ) . build () ; com.rashwan.reactive_popular_movies.PopularMoviesApplication.component . inject ( this ) ; timber.log.Timber . plant ( new timber.log.Timber.DebugTree () { @ java.lang.Override protected java.lang.String createStackElementTag ( java.lang.StackTraceElement element ) { return ( ( super . createStackElementTag ( element ) ) + ':' ) + ( element . getLineNumber () ) ; } } ) ; timber.log.Timber . d ( "Hello!" ) ; java.util.concurrent.atomic.AtomicInteger queries = new java.util.concurrent.atomic.AtomicInteger () ; } 
@ java.lang.Override public void performLinking ( de.mirkosertic.bytecoder.core.BytecodeLinkerContext aLinkerContext ) { de.mirkosertic.bytecoder.core.BytecodeClassinfoConstant theConstant = getTypeConstant () ; aLinkerContext . linkClass ( getObjectType () ) ; java.lang.String theClassName = theConstant . getConstant () . stringValue () ; de.mirkosertic.bytecoder.core.BytecodeTypeRef [] theTypes = aLinkerContext . getSignatureParser () . toTypes ( theClassName ) ; aLinkerContext . linkTypeRef ( theTypes [ 0 ] ) ; } 
public static void main ( java.lang.String [] args ) { be.kdg.ai.backpropagation.controller.algorithm.NeuralNetwork neuralNetwork = new be.kdg.ai.backpropagation.controller.algorithm.BackPropagation ( 4 , 2 ) ; be.kdg.ai.backpropagation.controller.Controller controller = new be.kdg.ai.backpropagation.controller.Controller ( neuralNetwork ) ; controller . startNeuralNetwork () ; be.kdg.ai.backpropagation.controller.ViewController viewController = new be.kdg.ai.backpropagation.controller.ViewController ( neuralNetwork ) ; be.kdg.ai.backpropagation.view.JavaFxView javaFxView = new be.kdg.ai.backpropagation.view.JavaFxView () ; javaFxView . setViewController ( viewController ) ; be.kdg.ai.backpropagation.view.JavaFxView . launch ( be.kdg.ai.backpropagation.view.JavaFxView . class , args ) ; } 
@ org.junit.Test public void takeDamageTest () { com.saints.gamecode.HealthBar healthBar = com.saints.gamecode.HealthBar . getInstance () ; int currentDivider ; currentDivider = healthBar . getDivider () ; healthBar . updateDivider ( 5 ) ; junit.framework.TestCase . assertTrue ( ( currentDivider == ( ( healthBar . getDivider () ) + 5 ) ) ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String defense = ( ( java.lang.String ) ( sp . getSelectedItem () ) ) ; DataHolder.Autonomous auto = new DataHolder.Autonomous ( defense , shotsMadeHigh , shotsMadeLow , breach . isChecked () , reach . isChecked () ) ; ma . goToTele ( auto ) ; } 
public synchronized float get ( int processor , int channel ) { while ( ! ( available ) ) { try { wait () ; } catch ( java.lang.InterruptedException e ) {} } if ( ( ( targetProcessor ) == processor ) && ( ( this . channel ) == channel ) ) { available = false ; notifyAll () ; return data ; } return - 1 ; } 
@ java.lang.Override public com.google.codeu.codingchallenge.JSON setObject ( java.lang.String name , com.google.codeu.codingchallenge.JSON value ) { if ( ( list . containsKey ( name ) ) && ( ( list . get ( name ) ) instanceof com.google.codeu.codingchallenge.MyJSON ) ) { list . remove ( name ) ; list . put ( name , value ) ; } return this ; } 
public static com.uber.tchannel.messages.Response build ( com.uber.tchannel.headers.ArgScheme argScheme , com.uber.tchannel.messages.ErrorResponse errorResponse ) { com.uber.tchannel.messages.Response res ; switch ( argScheme ) { case RAW : res = new com.uber.tchannel.messages.RawResponse ( errorResponse ) ; break; case JSON : res = new com.uber.tchannel.messages.JsonResponse ( errorResponse ) ; break; case THRIFT : res = new com.uber.tchannel.messages.ThriftResponse ( errorResponse ) ; break; default: res = null ; break; } return res ; } 
public void show ( final com.google.gwt.user.client.ui.IsWidget front , final com.google.gwt.user.client.ui.IsWidget back , final org.uberfire.mvp.Command switchCallback ) { final org.uberfire.mvp.Command c = ( ) - > { this . isFront = ! ( this . isFront ) ; switchCallback . execute () ; } ; view . show ( front , back , c ) ; } 
public code.dalton.replen.ReplenChest getChestByName ( java.lang.String name ) { java.util.Iterator < code.dalton.replen.ReplenChest > itr = code.dalton.replen.ReplenChestManager.chests . iterator () ; while ( itr . hasNext () ) { code.dalton.replen.ReplenChest c = itr . next () ; if ( ( c . getName () ) == name ) { return c ; } } return null ; } 
protected void testChat ( java.lang.String topic , java.lang.String message ) { java.lang.String [] topics = new java.lang.String [] { "placeArmies" , "attackPhase" , "calculateLandgrabObjective" , "findWeakestNeighborWithMostEnemyNeighbors" , "" } ; for ( int i = 0 ; i < ( topics.length ) ; i ++ ) { if ( topic == ( topics [ i ] ) ) { board . sendChat ( message ) ; } } } 
public void prepare ( ) throws java.io.IOException { java.io.File repositoryFolder = new java.io.File ( repository . getPath () ) ; java.lang.String tempRepository = org.repositoryminer.utility.FileUtils . copyFolderToTmp ( repositoryFolder . getAbsolutePath () , repository . getName () ) ; scm = org.repositoryminer.scm.SCMFactory . getSCM ( repository . getScm () ) ; scm . open ( tempRepository ) ; cpdExecutor = new org.repositoryminer.pmd.cpd.CPDExecutor ( tempRepository ) ; } 
@ java.lang.Override public boolean matches ( java.lang.Object otherEvent ) { boolean isMatching = false ; if ( getClass () . isAssignableFrom ( otherEvent . getClass () ) ) { org.xwiki.bridge.event.ActionExecutionEvent actionEvent = ( ( org.xwiki.bridge.event.ActionExecutionEvent ) ( otherEvent ) ) ; isMatching = ( ( getActionName () ) == null ) || ( getActionName () . equals ( actionEvent . getActionName () ) ) ; } return isMatching ; } 
@ org.junit.Test public void postDuplicateApplicantsValidationTest ( ) throws java.io.IOException { try { gov.ca.cwds.cals.service.dto.rfa.RFA1aFormDTO form = gov.ca.cwds.cals.web.rest.rfa.RFAHelper . createForm ( clientTestRule ) ; postApplicant ( form , getApplicantDTO () ) ; postApplicant ( form , getApplicantDTO () ) ; } catch ( javax.ws.rs.ClientErrorException e ) { org.junit.Assert . assertEquals ( 422 , e . getResponse () . getStatus () ) ; } } 
private int readNum ( byte [] sbuf , int pos , int numBytes ) { int result = 0 ; for ( int i = 0 ; i < numBytes ; i ++ ) { result = ( result < < 8 ) + ( ( sbuf [ ( pos + i ) ] ) & 255 ) ; } return result ; } 
public static void main ( java.lang.String [] args ) { Main . createGUI () ; Main.keyboard = new java.util.Scanner ( java.lang.System.in ) ; Main . getAIPayers () ; while ( ! ( Main.gameWon ) ) { if ( ( Main.currentPlayer ) == ( Main.BLACK ) ) Main . blackMove () ; else Main . redMove () ; Main.vboard . update () ; if ( ! ( Main.wasJump ) ) Main . switchPlayers () ; } } 
public void setPayload () { this . initializePayload ( this . hintedPayloadList , MyURL.URL_HINTED_TASK ) ; if ( ( this . automation ) == ( MyGame.AUTO_LOW ) ) { this . initializePayload ( this . maybePayloadList , MyURL.URL_MAYBE_TASK_BAD ) ; } else { this . initializePayload ( this . maybePayloadList , MyURL.URL_MAYBE_TASK_GOOD ) ; } this . initializePayload ( this . noHintPayloadList , MyURL.URL_NO_HINT_TASK ) ; } 
@ java.lang.Override public com.prince.custommap.AutoCompleteAdapter.PredictionHolder onCreateViewHolder ( android.view.ViewGroup parent , int viewType ) { android.view.LayoutInflater mLayoutInflater = ( ( android.view.LayoutInflater ) ( mContext . getSystemService ( Context.LAYOUT_INFLATER_SERVICE ) ) ) ; android.view.View convertView = mLayoutInflater . inflate ( mLayout , parent , false ) ; com.prince.custommap.AutoCompleteAdapter.PredictionHolder predictionHolder = new com.prince.custommap.AutoCompleteAdapter.PredictionHolder ( convertView ) ; return predictionHolder ; } 
public byte [] encodeToJsonBytes ( T record ) throws java.io.IOException { java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream () ; jsonEncoder = org.apache.avro.io.EncoderFactory . get () . jsonEncoder ( this . schema , baos , false , true ) ; avroWriter . write ( record , jsonEncoder ) ; jsonEncoder . flush () ; baos . flush () ; return baos . toByteArray () ; } 
public T pollLast () { if ( this . isEmpty () ) { return null ; } else { T retVal = _end . getCargo () ; _end = _end . getPrev () ; _end . setNext ( null ) ; ( _size ) -- ; return retnode ; } } 
private void removeRank ( S solution ) { boolean enc = false ; int i = 0 ; while ( i < ( this . rankedSubpopulations . size () ) ) { enc = this . rankedSubpopulations . get ( i ) . contains ( solution ) ; if ( enc ) { this . rankedSubpopulations . get ( i ) . remove ( solution ) ; } i ++ ; } } 
private boolean requiresErrorChecking ( java.lang.Throwable t ) { if ( ! ( t instanceof org.aludratest.exception.AludraTestException ) ) { return false ; } org.aludratest.testcase.TestStatus status = org.aludratest.testcase.event.impl.AludraTestUtil . getTestStatus ( t ) ; return ( status == ( org.aludratest.testcase.TestStatus.FAILED ) ) || ( status == ( org.aludratest.testcase.TestStatus.FAILEDAUTOMATION ) ) ; } 
private void parseTask ( int day , java.util.HashMap < java.lang.String , java.util.Objects > map ) { for ( java.lang.String taskId : map . keySet () ) { if ( ( tasks . get ( day ) ) == null ) { tasks . put ( day , new java.util.ArrayList < java.lang.String > () ) ; } android.util.Log . i ( "logp" , ( "parsing task " + taskId ) ) ; tasks . get ( day ) . add ( taskId ) ; } } 
public java.util.List < resource.ea.Car > createCars () { for ( int i = 0 ; i <= ( main.Main.numCars ) ; i ++ ) { resource.ea.Car car = new resource.ea.Car () ; resource.ea.Owner owner = new resource.ea.Owner ( car ) ; car . setOwner ( owner ) ; cars . add ( car ) ; } return cars ; } 
@ org.junit.Test ( timeout = 50000 ) public void testPutAndGet ( ) throws java.io.IOException , java.lang.InterruptedException { supplyMap ( java.lang.Integer . class , java.lang.String . class , ( mapProxy ) - > { mapProxy . put ( 1 , "hello" ) ; org.junit.Assert . assertEquals ( 1 , mapProxy . size () ) ; } ) ; } 
@ org.junit.Test public void testUpdateWithoutVersionControl () { com.baomidou.mybatisplus.test.mysql.entity.User user = userService . selectById ( 11 ) ; org.junit.Assert . assertEquals ( 1 , user . getAge () . intValue () ) ; user . setVersion ( null ) ; user . setAge ( 2 ) ; userService . updateById ( user ) ; user = userService . selectById ( 11 ) ; org.junit.Assert . assertEquals ( 2 , user . getAge () . intValue () ) ; org.junit.Assert . assertEquals ( 1 , user . getVersion () . intValue () ) ; } 
public java.util.List < partypeople.Comment > getComments () { java.util.ArrayList < partypeople.Comment > result = new java.util.ArrayList < partypeople.Comment > () ; if ( ( comments ) != null ) { for ( com.googlecode.objectify.Ref < partypeople.Comment > comment : comments ) { result . add ( comment . safeGet () ) ; } } return result ; } 
public boolean userIsExist ( java.lang.String name ) { java.lang.String QUERY = ( ( ( ( ( ( ( "SELECT " + ( com.shpp.sv.sqlite.UserDatabaseHelper.KEY_USER_NAME ) ) + " FROM " ) + ( com.shpp.sv.sqlite.UserDatabaseHelper.TABLE_USERS ) ) + " WHERE " ) + ( com.shpp.sv.sqlite.UserDatabaseHelper.KEY_USER_NAME ) ) + " = \"" ) + name ) + "\"" ; android.database.sqlite.SQLiteDatabase db = getReadableDatabase () ; android.database.Cursor cursor = db . rawQuery ( QUERY , null ) ; boolean result = cursor . moveToFirst () ; cursor . close () ; return result ; } 
@ java.lang.Override public void dataChanged ( com.vaadin.client.widgets.Grid < java.lang.Object > grid , com.vaadin.client.widgets.Grid.Editor < java.lang.Object > editor , com.google.gwt.user.client.ui.Widget widget , java.lang.String newContent , int row , int col ) { if ( getState () . hasCellEditListener ) { com.vaadin.client.VConsole . log ( "RPC: cellUpdated" ) ; rpc . cellUpdated ( row , col , newContent ) ; } if ( getState () . hasRowEditListener ) { com.vaadin.client.VConsole . log ( "RPC: rowUpdated" ) ; rpc . rowUpdated ( row ) ; } } 
protected java.net.Socket createConnectSocket ( java.net.URI remote , int timeout ) throws org.eclipse.ecf.core.util.ECFException { org.eclipse.ecf.provider.comm.tcp.SocketFactory fact = org.eclipse.ecf.provider.comm.tcp.SocketFactory . getSocketFactory () ; if ( fact == null ) fact = org.eclipse.ecf.provider.comm.tcp.SocketFactory . getDefaultSocketFactory () ; try { return fact . createSocket ( remote . getHost () , remote . getPort () , timeout ) ; } catch ( java.io.IOException e ) { throw new org.eclipse.ecf.core.util.ECFException ( ( "Could not create socket to connect to id=" + remote ) ) ; } } 
@ java.lang.Override public void onPageSelected ( int position ) { fullFormSwipeLayout . setScrollChild ( adapter . getPage ( position ) . getView () . findViewById ( R.id.register_forms_content ) ) ; org.unicef.rapidreg.childcase.CaseRegisterFragment currentPage = ( ( org.unicef.rapidreg.childcase.CaseRegisterFragment ) ( adapter . getPage ( position ) ) ) ; itemValues = currentPage . getItemValues () ; fullFormAdapter = currentPage . getCaseRegisterAdapter () ; fullFormAdapter . setItemValues ( itemValues ) ; fullFormAdapter . setCasePhotoAdapter ( casePhotoAdapter ) ; fullFormAdapter . notifyDataSetChanged () ; } 
java.io.File createImageFile ( ) throws java.io.IOException { java.lang.String timeStamp = new java.text.SimpleDateFormat ( "yyyyMMdd_HHmmss" ) . format ( new java.util.Date () ) ; java.lang.String fileName = "Image_" + timeStamp ; java.io.File storageDirectory = android.os.Environment . getExternalStoragePublicDirectory ( Environment.DIRECTORY_PICTURES ) ; java.io.File image = java.io.File . createTempFile ( fileName , ".jpg" , storageDirectory ) ; com.kiit.viper.devoir.ProblemCapture.mImageFileLocation = image . getAbsolutePath () ; return image ; } 
@ org.junit.Test ( expected = io.minio.ErrorResponseException . class ) public void testForbidden ( ) throws io.minio.MinioException , java.io.IOException , java.security.InvalidKeyException , java.security.NoSuchAlgorithmException , org.xmlpull.v1.XmlPullParserException { com.squareup.okhttp.mockwebserver.MockWebServer server = new com.squareup.okhttp.mockwebserver.MockWebServer () ; server . enqueue ( new com.squareup.okhttp.mockwebserver.MockResponse () . setResponseCode ( 403 ) ) ; server . start () ; io.minio.MinioClient client = new io.minio.MinioClient ( server . getUrl ( "" ) ) ; client . statObject ( "bucket" , "key" ) ; throw new java.lang.RuntimeException ( "Expected exception did not fire" ) ; } 
@ java.lang.Override public void mouseClicked ( java.awt.event.MouseEvent arg0 ) { markedLobby = lobby . getID () ; if ( ( gametemp ) != null ) { gametemp . setBorder ( null ) ; } gametemp = game1 ; game1 . setBorder ( javax.swing.BorderFactory . createMatteBorder ( 5 , 5 , 5 , 5 , java.awt.Color.BLACK ) ) ; } 
public java.lang.String getErrorDescription () { if ( ( failureReason ) != null ) { int maxChars = 200 ; int index = failureReason . indexOf ( '\n' ) ; if ( index > maxChars ) { return ( failureReason . substring ( 0 , maxChars ) . trim () ) + "..." ; } else { return failureReason . substring ( 0 , index ) . trim () ; } } return "" ; } 
@ java.lang.Override public int read ( ) throws java.io.IOException { if ( ( current ) == null ) { return - 1 ; } int result = current . read () ; if ( result != ( - 1 ) ) { return result ; } advance () ; return read () ; } 
private int checkIfOverdue ( application.storage.Task item , java.util.Calendar cal ) { int overdueCheck = application.gui.CalendarViewPage.overdueCheckVariable ; if ( ( item . getEndDate () ) != null ) { overdueCheck = item . getEndDate () . getTime () . compareTo ( cal . getTime () ) ; } return overdueCheck ; } 
public T get ( kilim.EventSubscriber eo ) { kilim.EventSubscriber producer = null ; T ret ; if ( ( message . get () ) == null ) { ret = null ; addMsgAvailableListener ( eo ) ; } else { ret = message . getAndSet ( null ) ; if ( ( srcs . size () ) > 0 ) { producer = srcs . poll () ; } } if ( producer != null ) { producer . onEvent ( this , kilim.Cell.spaceAvailble ) ; } return ret ; } 
public static java.util.Set < org.coreasm.eclipse.debug.ui.views.ASMUpdate > wrapUpdateSet ( java.util.Set < org.coreasm.engine.absstorage.Update > updates , boolean consistent , org.coreasm.engine.ControlAPI capi ) { java.util.HashSet < org.coreasm.eclipse.debug.ui.views.ASMUpdate > asmUpdateSet = new java.util.HashSet < org.coreasm.eclipse.debug.ui.views.ASMUpdate > () ; for ( org.coreasm.engine.absstorage.Update update : updates ) asmUpdateSet . add ( new org.coreasm.eclipse.debug.ui.views.ASMUpdate ( update , consistent , capi ) ) ; return asmUpdateSet ; } 
@ org.junit.Test ( expected = xyz.swordfeng.jobsystem.ValidationError . class ) public void createJobWithZeroSkills ( ) throws User.AuthFailure , xyz.swordfeng.jobsystem.ValidationError { java.lang.String username = "user1" ; xyz.swordfeng.jobsystem.User user = xyz.swordfeng.jobsystem.User . login ( username , "password" ) ; java.lang.String name = "Programmer" ; java.lang.String address = "China" ; java.lang.String [] skills = new java.lang.String [ 0 ] ; java.lang.String education = "大学" ; xyz.swordfeng.jobsystem.Job job = new xyz.swordfeng.jobsystem.Job ( user , name , address , 10 , skills , education ) ; org.junit.Assert . fail ( "should throw ValidationError exception" ) ; } 
@ java.lang.Override public java.lang.String toString () { title = ( ( title ) == null ) ? "" : title ; return java.lang.String . format ( "%s\n%s\n%s\n%s\n%s\n%s\n%s" , uri . toString () . trim () , title . trim () , fullInfo , shortUrl . trim () , useFavicon , textOption , colorPosition ) ; } 
public java.lang.String getFormattedEventEndTime ( java.lang.String onebrickDate ) { try { final java.util.Date d = getLocalTime ( org.onebrick.android.helpers.DateTimeFormatter.dateFormat . parse ( onebrickDate ) ) ; final java.lang.String time = org.onebrick.android.helpers.DateTimeFormatter.eventTime . format ( d ) ; return time ; } catch ( java.text.ParseException e ) { android.util.Log . e ( org.onebrick.android.helpers.DateTimeFormatter.TAG , ( "cannot parse date: " + onebrickDate ) ) ; } return "" ; } 
private java.util.ArrayList < java.time.LocalDate > extractExceptionDates ( java.lang.String inputString ) { int editIndex = getEditIndex ( inputString , 2 ) ; main.java.Task task = main.java.Controller . getInstance () . getDisplayedTasks () . get ( editIndex ) ; java.util.ArrayList < java.time.LocalDate > exceptionDates = task . getExceptionDates () ; return exceptionDates ; } 
public int pull_chunk ( int [] data_buffer , double [] timestamp_buffer , double timeout ) throws java.lang.Exception { int [] ec = new int [] { 0 } ; long res = edu.ucsd.sccn.LSL.inst . lsl_pull_chunk_i ( obj , data_buffer , timestamp_buffer , ( ( long ) ( data_buffer.length ) ) , ( ( long ) ( timestamp_buffer.length ) ) , timeout , ec ) ; edu.ucsd.sccn.LSL . check_error ( ec ) ; return ( ( int ) ( res ) ) ; } 
@ java.lang.Override public void createTopic ( java.lang.String topicName ) { if ( ( ( topicName == null ) || ( topicName . isEmpty () ) ) || ( ( topicName . length () ) > ( com.example.pao.testdit.mvp.form.FormPresenter.MAX_CHAR ) ) ) { mView . showFailedMessage () ; } com.example.pao.testdit.model.Topic topic = new com.example.pao.testdit.model.Topic ( topicName , 0 ) ; com.example.pao.testdit.util.TempStorageUtil . insert ( topic ) ; mView . showSuccessMessage () ; mView . navigateToHome () ; } 
public void run () { if ( success ) { handler . postDelayed ( new java.lang.Runnable () { @ java.lang.Override public void run () { refresh () ; progressBar . setVisibility ( View.GONE ) ; } } , 1000 ) ; } else { java.lang.String s1 = getResources () . getString ( R.string.get_failed_please_check ) ; android.widget.Toast . makeText ( getActivity () , s1 , 1 ) . show () ; progressBar . setVisibility ( View.GONE ) ; } } 
@ java.lang.Override public void post ( java.lang.Object event ) { if ( event instanceof plugin.events.AsyncPluginEvent ) { context . getService () . execute ( ( ) - > super . post ( event ) ) ; } else if ( event instanceof plugin.events.GamePluginEvent ) { plugin.events.GamePluginEvent evt = ( ( plugin.events.GamePluginEvent ) ( event ) ) ; if ( ( evt . context () ) == null ) { evt . context_$eq ( context ) ; } super . post ( evt ) ; } } 
public void onClick ( org.apache.wicket.ajax.AjaxRequestTarget target ) { target . appendJavaScript ( "Wicket.Window.unloadConfirmation = false;" ) ; popup . setInitialHeight ( 400 ) ; popup . setInitialWidth ( 600 ) ; popup . setTitle ( new org.apache.wicket.model.Model < java.lang.String > ( "Choose layers to associate" ) ) ; popup . setContent ( new org.geoserver.community.css.web.MultipleLayerChooser ( popup . getContentId () , this ) ) ; popup . show ( target ) ; } 
@ java.lang.Override public java.util.ArrayList < com.lab.flickr.network.Loader > createLoaders () { android.util.Log . d ( this . getClass () . getSimpleName () , ( "Number of threads for image loading : " + ( com.lab.flickr.fragments.FragImageLoader.NUM_THREADS ) ) ) ; java.util.ArrayList < com.lab.flickr.network.Loader > loaders = new java.util.ArrayList <> () ; for ( int i = 0 ; i < ( com.lab.flickr.fragments.FragImageLoader.NUM_THREADS ) ; i ++ ) { loaders . add ( new com.lab.flickr.network.ImageLoader ( JobRegister.Job.MAIN_IMAGES ) ) ; } return loaders ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { initNotification () ; player . start () ; play1button . setVisibility ( Button.GONE ) ; pause1button . setVisibility ( Button.VISIBLE ) ; com.gnirt.devotional.MainActivity.x = 1 ; com.gnirt.devotional.MainActivity.y = 1 ; java.lang.System.out . println ( ( ( ( "paly" + ( com.gnirt.devotional.MainActivity.x ) ) + " " ) + ( com.gnirt.devotional.MainActivity.y ) ) ) ; } 
@ org.junit.Test @ org.openmrs.test.Verifies ( value = "should fail validation if all fields are null" , method = "validate(object,Errors)" ) public void validate_shouldFailValidationIfAllFieldsNull ( ) throws org.openmrs.validator.Expection { org.openmrs.Form form = new org.openmrs.Form () ; org.springframework.validation.Errors errors = new org.springframework.validation.BindException ( form , "form" ) ; new org.openmrs.validator.FormValidator () . validate ( form , errors ) ; org.junit.Assert . assertTrue ( errors . hasFieldErrors ( "name" ) ) ; org.junit.Assert . assertTrue ( errors . hasFieldErrors ( "version" ) ) ; org.junit.Assert . assertTrue ( errors . hasFieldErrors ( "retireReason" ) ) ; } 
public void init ( com.sarmento.mitchell.gradesaver2.model.DueDate dueDate , int termPosition , int sectionPosition , int dueDatePosition ) { this . dueDate = dueDate ; this . termPosition = termPosition ; this . sectionPosition = sectionPosition ; this . dueDatePosition = dueDatePosition ; complete = dueDate . isComplete () ; daysRemaining = getDaysRemaining ( dueDate . getDate () ) ; setButtonText () ; setButtonColor () ; if ( academics . inArchive () ) { setOnClickListener ( this ) ; setOnLongClickListener ( this ) ; } } 
public void destroy () { player = null ; playerName = null ; allSpells . clear () ; itemSpells . clear () ; activeSpells . clear () ; customBindings . clear () ; temporarySpells . clear () ; cantLearn . clear () ; } 
@ java.lang.Override public int getCorrectPoints ( data.QuizSession session ) throws java.sql.SQLException { java.lang.String their_answer = session . getResponseParam ( ( ( data.BasicQuestion.TYPE_TAG ) + ( id ) ) ) ; if ( their_answer . toLowerCase () . equals ( answer . toLowerCase () ) ) return 1 ; return 0 ; } 
@ java.lang.Override public java.util.List < org.phenotips.data.Patient > getMembers () { java.util.List < java.lang.String > memberIds = this . getMembersIds () ; java.util.List < org.phenotips.data.Patient > members = new java.util.ArrayList <> ( memberIds . size () ) ; for ( java.lang.String memberId : memberIds ) { org.phenotips.data.Patient patient = org.phenotips.studies.family.internal.XWikiFamily.patientRepository . getPatientById ( memberId ) ; members . add ( patient ) ; } return java.util.Collections . unmodifiableList ( members ) ; } 
void checkPermissions () { if ( ( Build.VERSION.SDK_INT ) >= 23 ) { if ( ( ( ( checkSelfPermission ( Manifest.permission.ACCESS_FINE_LOCATION ) ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( checkSelfPermission ( Manifest.permission.READ_EXTERNAL_STORAGE ) ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) && ( ( checkSelfPermission ( Manifest.permission.WRITE_EXTERNAL_STORAGE ) ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { checkBluetooth () ; } else { requestPermissions ( new java.lang.String [] { Manifest.permission.ACCESS_FINE_LOCATION , Manifest.permission.READ_EXTERNAL_STORAGE , Manifest.permission.WRITE_EXTERNAL_STORAGE } , 1 ) ; } } else { checkBluetooth () ; } } 
private void addLatestArchiveToRegistryCollection ( org.wso2.carbon.bpel.core.ode.integration.store.BPELDeploymentContext bpelDeploymentContext ) throws java.io.FileNotFoundException , org.wso2.carbon.registry.core.exceptions.RegistryException { org.wso2.carbon.registry.core.Resource latestBPELArchive = configRegistry . newResource () ; try ( java.io.FileInputStream stream = new java.io.FileInputStream ( bpelDeploymentContext . getBpelArchive () ) ) { latestBPELArchive . setContent ( stream ) ; } catch ( java.io.IOException exception ) { org.wso2.carbon.bpel.core.ode.integration.store.repository.BPELPackageRepository.log . error ( ( "Error reading bpel archive " + ( bpelDeploymentContext . getBpelArchive () . getName () ) ) , exception ) ; } configRegistry . put ( org.wso2.carbon.bpel.core.ode.integration.store.repository.BPELPackageRepositoryUtils . getBPELPackageArchiveResourcePath ( bpelDeploymentContext . getBpelPackageName () ) , latestBPELArchive ) ; } 
public com.softserve.academy.spaced.repetition.domain.Deck addDeck ( java.lang.Long deckId ) { com.softserve.academy.spaced.repetition.domain.Deck deck = deckRepository . getDeckById ( deckId ) ; com.softserve.academy.spaced.repetition.domain.User user = userService . getAuthorizedUser () ; com.softserve.academy.spaced.repetition.domain.Folder folder = user . getFolder () ; java.util.List < com.softserve.academy.spaced.repetition.domain.Deck > decks = folder . getDecks () ; decks . add ( deck ) ; folderRepository . save ( folder ) ; return deck ; } 
@ java.lang.Override public void setValue ( org.unicef.rapidreg.forms.Field field ) { fields = removeSeparatorFields ( field . getSubForm () . getFields () ) ; fieldParent = field . getDisplayName () . get ( java.util.Locale . getDefault () . getLanguage () ) ; attachParentToFields ( fields , fieldParent ) ; addSubFormBtn . setText ( java.lang.String . format ( "%s %s" , context . getString ( R.string.add ) , fieldParent ) ) ; addSubFormBtn . setVisibility ( ( activity . getCurrentFeature () . isEditMode () ? android.view.View.VISIBLE : android.view.View.GONE ) ) ; restoreSubForms () ; } 
@ java.lang.Override public void updateUserId ( java.lang.String id , java.lang.String oldUserId , java.lang.String newUserId ) { if ( ! ( com.jeedsoft.jocket.util.JocketStringUtil . isEmpty ( oldUserId ) ) ) { java.lang.String key = getUserKey ( oldUserId ) ; com.jeedsoft.jocket.storage.redis.JocketRedisExecutor . srem ( key , id ) ; } if ( ! ( com.jeedsoft.jocket.util.JocketStringUtil . isEmpty ( newUserId ) ) ) { java.lang.String key = getUserKey ( oldUserId ) ; com.jeedsoft.jocket.storage.redis.JocketRedisExecutor . sadd ( key , id ) ; } } 
@ java.lang.Override public < T > T get ( java.lang.Class < T > type ) { org.graylog2.cluster.ClusterConfig config = dbCollection . findOne ( org.mongojack.DBQuery . is ( "type" , type . getCanonicalName () ) ) ; if ( config == null ) { org.graylog2.cluster.ClusterConfigServiceImpl.LOG . debug ( "Couldn't find cluster config of type {}" , type . getCanonicalName () ) ; return null ; } T result = extractPayload ( config . payload () , type ) ; if ( result == null ) { org.graylog2.cluster.ClusterConfigServiceImpl.LOG . error ( "Couldn't extract payload from cluster config (type: {})" , type . getCanonicalName () ) ; } return result ; } 
private static boolean thisRole ( com.programma.engin.Args args1 ) { try { for ( com.programma.engin.Permission perm : com.programma.engin.Permission . values () ) { if ( args1.role . equals ( perm . toString () ) ) { return true ; } } return false ; } catch ( java.lang.IllegalArgumentException e ) { return false ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; mNavigationDrawerFragment = ( ( com.appbrainmob.bubblesoft.homeworkguru.activities.NavigationDrawerFragment ) ( getFragmentManager () . findFragmentById ( R.id.navigation_drawer ) ) ) ; mTitle = getTitle () ; mNavigationDrawerFragment . setUp ( R.id.navigation_drawer , ( ( android.support.v4.widget.DrawerLayout ) ( findViewById ( R.id.drawer_layout ) ) ) ) ; pressButton ( this ) ; } 
public ninja.Result updateOrganization ( ninja.Context context , @ ninja.validation.JSR303Validation vo.OrganizationVO organizationVO , ninja.validation.Validation validationd ) { organizationVO . setId ( organizationId ) ; models.Organization organization = userService . updateOrganization ( organizationVO ) ; vo.ResultVO resultVO = new vo.ResultVO () ; resultVO . setRedirect ( "/admin" ) ; ninja.session.FlashScope flashScope = context . getFlashScope () ; controllers.c flashScope ; success ( "organization.updateSuccessful" ) ; return ninja.Results . json () . render ( resultVO ) ; } 
@ java.lang.Override public java.util.Iterator < org.araqne.logdb.cep.EventKey > getContextKeys ( java.lang.String topic ) { java.util.HashSet < org.araqne.logdb.cep.EventKey > keys = new java.util.HashSet < org.araqne.logdb.cep.EventKey > () ; for ( org.araqne.logdb.cep.EventKey key : contexts . keySet () ) { if ( key . getTopic () . equals ( topic ) ) keys . add ( key ) ; } return keys . iterator () ; } 
private void play ( java.lang.String path , int seekTo ) { this . path = path ; try { mp . stop () ; mp . reset () ; mp . setDataSource ( path ) ; mp . setAudioStreamType ( AudioManager.STREAM_MUSIC ) ; mp . prepare () ; mp . seekTo ( seekTo ) ; mp . start () ; seek . setMax ( mp . getDuration () ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } 
public void novo () { try { io.github.samirsales.dao.FabricanteDAO dao = new io.github.samirsales.dao.FabricanteDAO () ; dao . salvar ( fabricante ) ; java.util.ArrayList < io.github.samirsales.domain.Fabricante > arrayList = dao . listar () ; items = new javax.faces.model.ListDataModel < io.github.samirsales.domain.Fabricante > ( arrayList ) ; io.github.samirsales.util.JSFUtil . adicionarMensagemSucesso ( "Fabricante salvo com sucesso!" ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; io.github.samirsales.util.JSFUtil . adicionarMensagemErro ( e . getMessage () ) ; } } 
public static void learnFromFile ( java.lang.String [] args ) { java.lang.String file = "" ; if ( ( args.length ) == 1 ) { file = com.jboby93.markovbot.App . readLine ( "Learn from file [or #cancel to cancel]: " ) ; } else { file = args [ 1 ] ; } if ( ! ( file . equals ( "#cancel" ) ) ) { com.jboby93.markovbot.App.bot . learnFromFile ( file ) ; java.lang.System.out . println ( "Done." ) ; } } 
public synchronized void setSnapshot ( double [] snapshot , fr.inria.soctrace.framesoc.ui.model.TimeInterval interval ) { fDataset = new org.jfree.data.statistics.HistogramDataset () ; fDataset . setType ( DensityHistogramLoader.HISTOGRAM_TYPE ) ; fDataset . addSeries ( DensityHistogramLoader.DATASET_NAME , snapshot , DensityHistogramLoader.NUMBER_OF_BINS ) ; fInterval . copy ( interval ) ; fDirty = true ; } 
private void initLog4J ( javax.servlet.ServletContextEvent event ) { java.lang.String logfilename = event . getServletContext () . getInitParameter ( "logfile" ) ; java.lang.String pref = "" ; pref = event . getServletContext () . getRealPath ( "/" ) ; org.apache.log4j.PropertyConfigurator . configure ( ( pref + logfilename ) ) ; org.apache.log4j.Logger globallog = org.apache.log4j.Logger . getRootLogger () ; event . getServletContext () . setAttribute ( "log4" , globallog ) ; event . getServletContext () . setAttribute ( "logfilename" , logfilename ) ; } 
public java.lang.Integer login ( java.lang.String emailAddress , java.lang.String password ) { if ( ( emailAddress == null ) || ( password == null ) ) { return null ; } org.tradingsocial.model.User user = userDAO . loginAsUser ( emailAddress , password ) ; if ( user == null ) { return null ; } return user . getId () ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( etSearch . getText () . toString () . isEmpty () ) { android.widget.Toast . makeText ( getActivity () , "Please input keywords to search" , Toast.LENGTH_SHORT ) . show () ; } else { searchTask = new org.example.team_pigeon.movie_pigeon.SearchPageFragment.SearchTask () ; searchTask . execute ( etSearch . getText () . toString () , getActivity () . getIntent () . getExtras () . getString ( "Token" ) ) ; } } 
@ java.lang.Override public io.reactivex.Maybe < com.avtarkhalsa.lvexample.models.Question > popQuestion ( com.avtarkhalsa.lvexample.models.Question q ) { if ( completedQuestionsLookup . containsKey ( q . getId () ) ) { com.avtarkhalsa.lvexample.models.Question qToRemove = questionStack . get ( ( ( questionStack . size () ) - 1 ) ) ; questionStack . remove ( qToRemove ) ; completedQuestionsLookup . remove ( qToRemove . getId () ) ; } return io.reactivex.Maybe . just ( questionStack . get ( ( ( questionStack . size () ) - 1 ) ) ) ; } 
@ org.junit.Test public void ajoutVarTest () { d . setIdent ( "test5" ) ; d . ajoutVar () ; assertEquals ( d . getErrorLog () , "" ) ; assertTrue ( Yaka.tabIdent . existIdent ( "test5" ) ) ; d . setIdent ( "test5" ) ; d . ajoutVar () ; assertNotEquals ( d . getErrorLog () , "" ) ; } 
@ java.lang.Override public void setArgs ( java.lang.String [] args ) throws java.lang.Exception { double b = 0 ; if ( ( args == null ) || ( ( args.length ) == 0 ) ) { beta = 0.5 ; } else { b = java.lang.Double . parseDouble ( args [ 0 ] ) ; } if ( ( b <= 0 ) || ( b >= 1 ) ) { throw new java.lang.Exception ( "The weight factor should be in the range [0, 1]" ) ; } beta = b ; } 
@ javafx.fxml.FXML public void clearShapes () { squareShape . setVisible ( false ) ; triangleShape . setVisible ( false ) ; airplane . setVisible ( false ) ; javafx.collections.ObservableList < javafx.scene.Node > nodes = anchorPane . getChildren () ; if ( ( nodes . size () ) > 3 ) nodes . remove ( 2 , nodes . size () ) ; } 
private void disconnect () { factory . dispose ( socketAddress ) ; try { if ( sourceChannel . isOpen () ) { sourceChannel . shutdownOutput () ; } if ( channel . isOpen () ) { channel . close () ; } } catch ( java.io.IOException e ) { com.github.apetrelli.scafa.http.impl.AbstractHttpConnection.LOG . log ( java.util.logging.Level.WARNING , "Error when closing channel" , e ) ; } } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { android.view.View view = inflater . inflate ( R.layout.dialog_about , container ) ; ( ( com.gc.materialdesign.views.Button ) ( view . findViewById ( R.id.cancleButton ) ) ) . setOnClickListener ( this ) ; getDialog () . getWindow () . setSoftInputMode ( WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE ) ; getDialog () . setTitle ( R.string.dialog_about_title ) ; return view ; } 
@ java.lang.Override public void change ( entities.Game game ) { java.lang.System.out . println ( "Flop" ) ; game . setPhase ( this ) ; if ( game . isLastPlayerLeft () ) new states.Turn () . change ( game ) ; else { game . resetPhaseTurns () ; game . retrieveTableCards ( 3 ) ; } } 
private void createCircuitConnection () { try { if ( ( ( ( mCurrentSelectedComponent ) != null ) && ( ( mPreviouslySelectedComponent ) != null ) ) && ( ! ( mCurrentSelectedComponent . equals ( mPreviouslySelectedComponent ) ) ) ) { mCircuit . addConnection ( mPreviouslySelectedComponent , mCurrentSelectedComponent ) ; mCircuitView . invalidate () ; } } catch ( gerardogtn.com.circuitsolver.util.exception.CannotConnectTwoGatesException e ) { android.support.design.widget.Snackbar . make ( mCircuitView , R.string.cannot_connect_two_gates , Snackbar.LENGTH_SHORT ) . show () ; } } 
@ java.lang.Override public synchronized orc.run.core.Binding getMember ( orc.values.Field f ) { final java.lang.String field = f . field () ; orc.lib.state.Ref.RefInstance out = map . get ( field ) ; if ( out == null ) { out = new orc.lib.state.Ref.RefInstance () ; map . put ( field , out ) ; } return new orc.run.core.BoundValue ( out ) ; } 
public static void main ( java.lang.String [] args ) { int [] input1 = new int [] { 0 , 1 , 0 , 1 , 1 , 1 , 1 } ; int [] input2 = new int [] { 1 , 1 , 1 , 1 , 1 , 0 , 1 } ; com.interview.array.LongestSameSumSpan lsss = new com.interview.array.LongestSameSumSpan () ; java.lang.System.out . print ( lsss . longestSpan ( input1 , input2 ) ) ; } 
private T removeLast () { T [] newElements = ( ( T [] ) ( new java.lang.Object [ this . elements . length ] ) ) ; java.lang.System . arraycopy ( this . elements , 0 , newElements , 0 , ( ( this . count ) - 1 ) ) ; T removedValue = this . elements [ this . count ] ; this . elements = newElements ; return removedValue ; } 
public void setCurrentDate ( int day , int month , int year ) { new gr.kokeroulis.androiddatetime.AsyncTaskHelper ( month , monthRv ) . execute ( monthAdapter ) ; new gr.kokeroulis.androiddatetime.AsyncTaskHelper ( year , yearRv ) . execute ( yearAdapter ) ; updateDayAdapter ( day , month , year , true ) ; } 
private void doDeletePolicyReferenceFromDB ( com.emc.storageos.db.client.model.FileShare fs ) { com.emc.storageos.volumecontroller.impl.FileDeviceController._log . info ( ( "Removing policy reference for file system  " + ( fs . getName () ) ) ) ; for ( java.lang.String policy : fs . getFilePolicies () ) { com.emc.storageos.db.client.model.SchedulePolicy fp = _dbClient . queryObject ( com.emc.storageos.db.client.model.SchedulePolicy . class , java.net.URI . create ( policy ) ) ; com.emc.storageos.db.client.model.StringSet fsURIs = fp . getAssignedResources () ; fsURIs . remove ( fs . getId () ) ; fp . setAssignedResources ( fsURIs ) ; _dbClient . updateObject ( fp ) ; } } 
public static java.lang.String toXML ( org.w3c.dom.Node node ) { java.io.StringWriter sw = new java.io.StringWriter () ; try { javax.xml.transform.Transformer t = javax.xml.transform.TransformerFactory . newInstance () . newTransformer () ; t . setOutputProperty ( javax.xml.transform.OutputKeys.OMIT_XML_DECLARATION , "yes" ) ; t . transform ( new javax.xml.transform.dom.DOMSource ( node ) , new javax.xml.transform.stream.StreamResult ( sw ) ) ; } catch ( javax.xml.transform.TransformerException te ) { org.epo.ocr.utils.XMLHelper.LOG . equals ( "nodeToString Transformer Exception" ) ; } return sw . toString () ; } 
public static < T > com.hsjawanda.gaeobjectify.collections.RefsList < T > wrap ( java.util.Set < com.googlecode.objectify.Ref < T > > setToWrap ) { java.util.List < com.googlecode.objectify.Ref < T > > toWrap = null ; if ( null != setToWrap ) { toWrap = new java.util.ArrayList < com.googlecode.objectify.Ref < T > > ( setToWrap . size () ) ; for ( com.googlecode.objectify.Ref < T > ref : setToWrap ) { toWrap . add ( ref ) ; } } return com.hsjawanda.gaeobjectify.collections.RefsList . wrap ( toWrap ) ; } 
@ org.junit.Test public void findByTenantId ( ) throws java.lang.Exception { java.util.List < net.smartcosmos.dao.things.domain.ThingEntity > entityList = repository . findByTenantId ( tenantId ) ; org.junit.Assert . assertFalse ( entityList . isEmpty () ) ; org.junit.Assert . assertEquals ( 1 , entityList . size () ) ; org.junit.Assert . assertEquals ( id , entityList . get ( 0 ) . getId () ) ; } 
public java.lang.String get ( java.lang.String s ) { if ( ( s . length () ) == 0 ) return current.defaultStr ; for ( org.apache.batik.dom.util.HashTableStack.Link l = current ; l != null ; l = l.next ) { java.lang.String uri = ( ( java.lang.String ) ( l.table . get ( s ) ) ) ; if ( uri != null ) { return uri ; } } return null ; } 
protected void setStateFromIntent ( android.content.Intent intent ) { android.os.Bundle extras = intent . getExtras () ; currentState.mode = extras . getInt ( "mode" ) ; currentState.data = extras . getParcelable ( "data" ) ; currentState.image = currentState.data . getImage () . loadFullSizeImage () ; } 
public void genSql ( ) throws java.io.IOException , java.lang.IllegalAccessException , java.lang.InstantiationException , java.lang.reflect.InvocationTargetException { init () ; excelConsumer . consume ( path ) ; java.util.List results = excelConsumer . parseToList ( excelConsumer . getSheets () . get ( 0 ) ) ; if ( ( enhance ) != null ) { results = ( ( java.util.List ) ( results . stream () . map ( enhance ) . collect ( java.util.stream.Collectors . toList () ) ) ) ; } java.lang.String sql = insertSQLGen . gen ( results ) ; java.lang.System.out . println ( sql ) ; } 
private java.lang.Object parsePremisToMetadata ( java.lang.String pathToPremis ) throws java.io.IOException { logger . debug ( ( "reading rights from " + pathToPremis ) ) ; java.lang.Object o = null ; try { o = new de.uzk.hki.da.model.ObjectPremisXmlReader () . deserialize ( new java.io.File ( pathToPremis ) ) ; } catch ( java.text.ParseException e ) { throw new java.lang.RuntimeException ( "error while parsing premis file" , e ) ; } return o ; } 
public net.minecraftforge.common.config.Property getProp ( net.minecraftforge.common.config.Configuration cfg , java.lang.String category , java.lang.reflect.Field field , java.lang.Object instance , java.lang.String comment ) { return cfg . get ( category , field . getName () , com.google.common.primitives.Doubles . toArray ( scala.actors.threadpool.Arrays . asList ( ( ( java.lang.Double [] ) ( net.minecraftforge.common.config.TypeAdapters.TypeAdapter . getObject ( instance , field ) ) ) ) ) , comment ) ; } 
@ java.lang.Override public void run () { grid . getHorizontalBar () . setSelection ( java.lang.Math . min ( grid . getHorizontalBar () . getMaximum () , ( ( grid . getHorizontalBar () . getSelection () ) + ( com.notlob.jgrid.input.GridMouseHandler.DRAG_SCROLL_DISTANCE ) ) ) ) ; gridModel . fireChangeEvent () ; if ( isScrollRightNeeded () ) { grid . getDisplay () . timerExec ( 100 , this ) ; } } 
@ org.junit.Test public void testParseModelConstants () { java.lang.String path = ( UNIT_BASEDIR ) + "const_model/" ; try { com.verivital.hyst.ir.Configuration c = com.verivital.hyst.junit.ModelParserTest . flatten ( com.verivital.hyst.importer.SpaceExImporter . importModels ( ( path + "const_model.cfg" ) , ( path + "const_model.xml" ) ) ) ; org.junit.Assert . fail ( "Exception expected due to undefined constant param in network component" ) ; } catch ( com.verivital.hyst.ir.AutomatonExportException e ) {} } 
boolean hasCoordonate () { return ( ( ( ( ( ( this . x ) != 0.0 ) && ( ( this . x ) != null ) ) && ( ( this . y ) != 0.0 ) ) && ( ( this . y ) != null ) ) && ( ( this . z ) != 0.0 ) ) && ( ( this . z ) != null ) ; } 
public void run () { try { java.io.BufferedReader user = new java.io.BufferedReader ( new java.io.InputStreamReader ( java.lang.System.in ) ) ; while ( true ) { java.lang.String command = user . readLine () . trim () ; if ( ( command . length () ) == 0 ) continue; if ( process ( command ) ) break; } } catch ( java.io.IOException ignored ) { ignored . printStackTrace () ; } finally { java.lang.System.out . println ( ( ( server . socket () . getRemoteSocketAddress () ) + " disconnected" ) ) ; } } 
@ java.lang.Override public boolean onSingleTapUp ( android.view.MotionEvent event ) { if ( ( event . getX () ) > ( ( getApplicationContext () . getResources () . getDisplayMetrics () . widthPixels ) / 2 ) ) controller . processEvent ( TetrisController.InputEvent.ROTATE_RIGHT ) ; else controller . processEvent ( TetrisController.InputEvent.ROTATE_LEFT ) ; return true ; } 
@ org.junit.Test public void xtea () { org.mapdb.DB db = maker () . encryptionEnable ( "password" ) . make () ; db . hashMap ( "aa" ) . put ( "aa" , "bb" ) ; db . commit () ; assertEquals ( ( 1L < < ( Store.FEAT_ENC_XTEA ) ) , getBitField () ) ; db . close () ; try { maker () . make () ; fail () ; } catch ( org.mapdb.DBException e ) { assertEquals ( "Store was created with encryption, but no password is set in config." , e . getMessage () ) ; } } 
@ java.lang.Override public java.lang.Object fromBody ( retrofit.mime.TypedInput typedInput , java.lang.reflect.Type type ) throws retrofit.converter.ConversionException { try { return javax.xml.bind.JAXB . unmarshal ( typedInput . in () , java.lang.Class . forName ( type . getTypeName () ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace ( java.lang.System.out ) ; return null ; } catch ( java.lang.ClassNotFoundException e ) { e . printStackTrace () ; return null ; } } 
private long calculateCost ( int target , java.lang.String source ) { long cost = 0 ; if ( ! ( no.ntnu.stud.torbjovn.elevator.CommandHandler.NODE_ID . equalsIgnoreCase ( source ) ) ) cost += no.ntnu.stud.torbjovn.elevator.CommandHandler.COST_NOT_HERE ; if ( thisElevator . isMoving () ) cost += no.ntnu.stud.torbjovn.elevator.CommandHandler.COST_MOVING ; cost += ( java.lang.Math . abs ( ( target - ( thisElevator . getCurrentFloor () ) ) ) ) * ( no.ntnu.stud.torbjovn.elevator.CommandHandler.COST_EACH_FLOOR ) ; return cost ; } 
public void setBiomorph ( biomorphHandling.Biomorph biomorph ) { this . biomorph = biomorph ; for ( int i = 0 ; i < ( sliders.length ) ; i ++ ) sliders [ i ] . setValue ( biomorph . getGenes () [ i ] . getValue () ) ; } 
public java.util.List < model.Item > getResteurantItems ( java.lang.String name ) throws java.lang.Exception { java.util.List < model.Item > rest = new java.util.ArrayList <> () ; for ( model.Item i : itemlist ) { if ( ( i . getResteurant () ) == name ) { rest . add ( i ) ; } } return rest ; } 
public static void main ( java.lang.String [] args ) { FixDebugRowboat redBoat = new FixDebugRowboat () ; FixDebugRowboat blueBoat = new FixDebugRowboat () ; java.lang.System.out . println ( "The two boats are " ) ; if ( redBoat == blueBoat ) { java.lang.System.out . println ( " equal" ) ; } else { java.lang.System.out . println ( " not equal" ) ; } } 
public void putSpecs ( com.sun.tools.javac.code.Symbol.MethodSymbol m , org.jmlspecs.openjml.JmlSpecs.MethodSpecs spec ) { if ( m . toString () . equals ( "JMLValueSequence()" ) ) org.jmlspecs.openjml.Utils . stop () ; if ( ( utils.jmlverbose ) >= ( Utils.JMLDEBUG ) ) log . getWriter ( WriterKind.NOTICE ) . println ( ( ( ( "            Saving method specs for " + ( m . enclClass () ) ) + " " ) + m ) ) ; getSpecs ( m . enclClass () ) . methods . put ( m , spec ) ; } 
public java.util.ArrayList < org.magellan.faleiro.MagellanTaskRequest > getPendingTasks () { java.util.ArrayList < org.magellan.faleiro.MagellanTaskRequest > pt = new java.util.ArrayList <> () ; if ( ( numFreeTaskSlotsLeft . get () ) <= 10 ) { int value = numFreeTaskSlotsLeft . get () ; numFreeTaskSlotsLeft . set ( 0 ) ; int taken = pendingTasks . drainTo ( pt , numFreeTaskSlotsLeft . get () ) ; numFreeTaskSlotsLeft . addAndGet ( ( value - taken ) ) ; } return pt ; } 
public java.lang.String getDigestsAsString ( char delimiter ) { java.lang.StringBuilder sb = new java.lang.StringBuilder () ; for ( int i = 0 ; i < ( this . digests . size () ) ; i ++ ) { sb . append ( this . digests . get ( i ) ) ; if ( i < ( ( this . digests . size () ) - 1 ) ) sb . append ( ';' ) ; } return sb . toString () ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/user/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public org.springframework.http.ResponseEntity < com.app.microservice.user.User > getOneUserDetails ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Long id ) throws java.lang.Exception { com.app.microservice.user.User user = null ; user = userDAO . findOne ( id ) ; if ( ( user . getAuthToken () ) == 0 ) throw new java.lang.Exception ( "Cannot authenticate. Please login to view your details !!! " ) ; return new org.springframework.http.ResponseEntity < com.app.microservice.user.User > ( user , org.springframework.http.HttpStatus.OK ) ; } 
@ java.lang.Override public boolean matches ( java.lang.Object argument ) { org.junit.Assert . assertThat ( ( ( org.eclipse.jface.viewers.StructuredSelection ) ( argument ) ) . toList () , org.hamcrest.collection.IsCollectionContaining . hasItems ( treeItemA . getData () , treeItemB . getData () , treeItemC_B . getData () ) ) ; org.junit.Assert . assertThat ( ( ( org.eclipse.jface.viewers.StructuredSelection ) ( argument ) ) . toList () , org.hamcrest.Matchers . not ( org.hamcrest.collection.IsCollectionContaining . hasItems ( treeItemC . getData () ) ) ) ; return true ; } 
public void updatePetName () { de.uni_freiburg.informatik.es.cigtrack.UserData u = new de.uni_freiburg.informatik.es.cigtrack.UserData ( this ) ; java.lang.String petname = u . readCOL_5Data () ; android.widget.TextView txt_head = ( ( android.widget.TextView ) ( findViewById ( R.id.text_header ) ) ) ; java.lang.String message = getResources () . getString ( R.string.text_petName , petname , petname ) ; txt_head . setText ( message ) ; java.lang.String imageName = "foxyemoji2" ; } 
public net.binaryaura.customize.client.gui.huditem.HudItem get ( int id ) { for ( net.binaryaura.customize.client.gui.huditem.HudItem hudItem : all . toArray ( new net.binaryaura.customize.client.gui.huditem.HudItem [ all . size () ] ) ) { if ( ( hudItem . getId () ) == id ) return hudItem ; } Customize.log . warn ( ( ( "ID " + id ) + " doesn't relate to a HudItem. Skipping" ) ) ; return null ; } 
private org.newdawn.slick.Image [] createFallFrames () { org.newdawn.slick.Image [] frames = new org.newdawn.slick.Image [ 16 ] ; try { for ( int i = 0 ; i < ( frames.length ) ; i ++ ) { frames [ i ] = new org.newdawn.slick.Image ( ( ( "pics/robot/fall " + i ) + ".png" ) ) ; } } catch ( org.newdawn.slick.SlickException e ) { e . printStackTrace () ; } return frames ; } 
public it.ccse.uscite.domain.StatoFideiussione.FideiussionePratica getFideiussionePraticaByCT ( java.math.BigInteger idComponenteTariffaria ) { it.ccse.uscite.domain.StatoFideiussione.FideiussionePratica fideiussione = null ; if ( UsciteProperties.LISTA_COMPONENTI_TARIFFARIE_FIDEIUSSIONE . contains ( idComponenteTariffaria ) ) { switch ( this ) { case ASSENTE : fideiussione = it.ccse.uscite.domain.StatoFideiussione.FideiussionePratica.ASSENTE ; break; case PRESENTE : fideiussione = it.ccse.uscite.domain.StatoFideiussione.FideiussionePratica.PRESENTE ; break; case UNDEFINED : fideiussione = it.ccse.uscite.domain.StatoFideiussione.FideiussionePratica.UNDEFINED ; break; default: break; } } else { fideiussione = it.ccse.uscite.domain.StatoFideiussione.FideiussionePratica.DONT_CARE ; } return fideiussione ; } 
private static com.elemenopy.backupcopy.config.BackupConfig loadConfigFile ( java.io.InputStream in ) { try { com.fasterxml.jackson.databind.ObjectMapper mapper = new com.fasterxml.jackson.databind.ObjectMapper () ; com.elemenopy.backupcopy.config.BackupConfig config = mapper . readValue ( in , com.elemenopy.backupcopy.config.BackupConfig . class ) ; return config ; } catch ( java.io.IOException ex ) { com.elemenopy.backupcopy.config.BackupConfig.logger . error ( "IO Exception while loading config file" , ex ) ; return null ; } } 
@ java.lang.Override public void onClick ( android.view.View view ) { if ( localValidation () ) { android.widget.Toast . makeText ( getContext () , getContext () . getString ( R.string.new_repo_successfully_added ) , Toast.LENGTH_LONG ) . show () ; new ch.cern.cvmfs.dialogs.AddRepositoryDialog.TestRepository ( repoURL . getText () . toString () ) . execute () ; dismiss () ; } else { android.widget.Toast . makeText ( getContext () , getContext () . getString ( R.string.new_repo_bad_input ) , Toast.LENGTH_LONG ) . show () ; } } 
public static net.minecraft.util.BlockPos stringCSVToBlockPos ( java.lang.String csv ) { java.lang.String [] spl = csv . split ( "," ) ; net.minecraft.util.BlockPos p = null ; try { p = new net.minecraft.util.BlockPos ( java.lang.Integer . parseInt ( spl [ 0 ] ) , java.lang.Integer . parseInt ( spl [ 1 ] ) , java.lang.Integer . parseInt ( spl [ 2 ] ) ) ; } catch ( java.lang.ClassCastException e ) { java.lang.System.out . println ( ( "stringCSV " + csv ) ) ; java.lang.System.out . println ( e . getMessage () ) ; } return p ; } 
@ java.lang.Override public cz.cuni.mff.d3s.spl.interpretation.Relation get ( double significanceLevel ) { boolean lt = ( statistic ) > ( getCriticalValue ( significanceLevel ) ) ; boolean gt = ( statistic ) < ( getCriticalValue ( ( 1.0 - significanceLevel ) ) ) ; if ( ( ! lt ) && ( ! gt ) ) { return Relation.EQUAL ; } else if ( lt ) { return Relation.GREATER_THAN ; } else { return Relation.LESS_THAN ; } } 
public static int recursiveSearch ( int [] inputArray , int searchTarget , int i ) { int [] input = inputArray ; if ( ( input.length ) < 1 ) { return - 1 ; } if ( i > ( input.length ) ) { return - 1 ; } else if ( ( input [ i ] ) == searchTarget ) { return i ; } else { return algo.linearsearch.LinearSearch . recursiveSearch ( input , ( i + 1 ) , searchTarget ) ; } } 
@ java.lang.Override public void updateTabArea () { indicator.DrumTab tab = new indicator.BasicDrumTab ( track ) ; tabArea . setText ( tab . drawTabPage ( ( ( cycle ) + 1 ) , track . size () , track . size () ) . getCurrentTab () ) ; } 
int getInternalItemViewType ( int position ) { int viewType ; if ( position < ( getHeadersCount () ) ) { viewType = position ; } else if ( position >= ( getFooterStartIndex () ) ) { viewType = ( ( ( position - ( getFooterStartIndex () ) ) + ( getHeadersCount () ) ) + ( getItemViewTypeCount () ) ) - 1 ; } else { viewType = ( getItemViewType ( ( position - ( getHeadersCount () ) ) ) ) + ( getHeadersCount () ) ; } return viewType ; } 
public void waitForHub ( final com.blackducksoftware.integration.hub.service.HubServicesFactory services , final java.lang.String hubProjectName , final java.lang.String hubProjectVersion , final long scanStartedTimeout , final long scanFinishedTimeout ) { final com.blackducksoftware.integration.hub.dataservice.scan.ScanStatusDataService scanStatusDataService = services . createScanStatusDataService () ; try { scanStatusDataService . assertBomImportScanStartedThenFinished ( hubProjectName , hubProjectVersion , ( scanStartedTimeout * 1000 ) , ( scanFinishedTimeout * 1000 ) , new com.blackducksoftware.integration.log.Slf4jIntLogger ( logger ) ) ; } catch ( com.blackducksoftware.integration.hub.exception.HubIntegrationException e ) { logger . error ( java.lang.String . format ( Constants.SCAN_ERROR_MESSAGE , e . getMessage () ) , e ) ; } } 
@ java.lang.Override public void fetchRandomDeck ( final com.blstream.studybox.database.DataProvider.OnDecksReceivedListener < java.util.List < com.blstream.studybox.model.database.Decks > > listener ) { com.blstream.studybox.api.RestClientManager . getRandomDeck ( true , true , new com.blstream.studybox.api.RequestCallback ( new com.blstream.studybox.api.RequestListener < java.util.List < com.blstream.studybox.model.database.Decks > > () { @ java.lang.Override public void onSuccess ( java.util.List < com.blstream.studybox.model.database.Decks > response ) { listener . OnDecksReceived ( response ) ; } @ java.lang.Override public void onFailure ( retrofit.RetrofitError error ) {} } ) ) ; } 
public java.sql.ResultSet getLineItems ( long invoicenumber ) { java.sql.Connection conn = dbms.DatabaseManager . getConnection () ; try { java.sql.PreparedStatement ps = conn . prepareStatement ( "SELECT fee,itemtype FROM lineitems WHERE invoicenumber=?" ) ; ps . setLong ( 0 , invoicenumber ) ; return ps . executeQuery () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } finally { try { conn . close () ; } catch ( java.sql.SQLException e ) { java.lang.System.err . println ( "Error closing connections" ) ; e . printStackTrace () ; } } return null ; } 
public void definirControle ( prs.mecanica.fase.telas.jogo.comuns.contratos.geral.ControleJogador controleJogador ) { if ( prs.mecanica.fase.global.Configuracao . getInstance () . isMobile () ) { this . controlerAtual = new prs.mecanica.fase.telas.jogo.atores.controle.ControleMobile ( controleJogador ) ; } else { this . controlerAtual = new prs.mecanica.fase.telas.jogo.atores.controle.ControleDesktop ( controleJogador ) ; } prs.mecanica.fase.global.RegistradorInputProcessors . getInstance () . adicionarControlavel ( this ) ; } 
public static boolean isEndingQuat ( raft.jpct.bones.Quaternion msg ) { return ( ( ( ( msg . getX () ) == ( com.example.chris.myapplication.MyoHelper.END_FLAG ) ) && ( ( msg . getY () ) == ( com.example.chris.myapplication.MyoHelper.END_FLAG ) ) ) && ( ( msg . getZ () ) == ( com.example.chris.myapplication.MyoHelper.END_FLAG ) ) ) && ( ( msg . getW () ) == ( com.example.chris.myapplication.MyoHelper.END_FLAG ) ) ; } 
@ java.lang.Override public void onResponse ( retrofit2.Call < com.ieeecsvit.riviera17android.models.PerEventResponse > call , retrofit2.Response < com.ieeecsvit.riviera17android.models.PerEventResponse > response ) { realm . beginTransaction () ; realm . copyToRealmOrUpdate ( response . body () . event ) ; realm . commitTransaction () ; mSectionsPagerAdapter = new com.ieeecsvit.riviera17android.activity.EventActivity.SectionsPagerAdapter ( getSupportFragmentManager () , this , getIntent () . getStringExtra ( "eventId" ) ) ; mViewPager . setAdapter ( mSectionsPagerAdapter ) ; } 
@ java.lang.Override public void run () { if ( ( ( musics ) != null ) && ( ( musics . size () ) > ( current ) ) ) { hadLoadMusics = true ; if ( ( mainCallBack ) != null ) { mainCallBack . setMusics ( musics ) ; } } changeMusic () ; popNotification ( musics . get ( current ) ) ; } 
public void changeDateOfData ( java.lang.Integer data_id , java.lang.Integer date , GUI.UpdateTableFrame frame ) { java.lang.String update = ( ( ( "UPDATE data SET date = " + date ) + " WHERE data_id = " ) + data_id ) + ";" ; java.sql.Statement statement = null ; try { statement = con . createStatement () ; statement . executeUpdate ( update ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; GUI.ErrorFrame error = new GUI.ErrorFrame ( frame , "Invalid Date" ) ; error . setVisible ( true ) ; } } 
public java.lang.String setBasket () { if ( ( currentUser . isLoggedIn () ) == false ) { return "" ; } else { basket = orderService . getBasket ( currentUser . getCustomer () . getId () ) ; basket . getOrderLines () . size () ; lineNumber = 0 ; return "" ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( ( ! ( isKoma ) ) && ( checker ) ) { inputText . setText ( "0." ) ; isKoma = true ; } else { inputText . setText ( ( ( inputText . getText () ) + "." ) ) ; isKoma = true ; } cekk = true ; akhir = false ; isKuadrat = false ; isAkar = false ; } 
@ org.junit.Test public void overrideClassWideAttributeOnMethodWhenAttributesAreSame ( ) throws java.lang.Throwable { @ com.orhanobut.tracklytics.FixedAttribute ( key = "key" , value = "class" ) @ com.orhanobut.tracklytics.FixedAttributes ( value = @ com.orhanobut.tracklytics.FixedAttribute ( key = "key1" , value = "class1" ) ) class Foo { @ com.orhanobut.tracklytics.TrackEvent ( value = "event" ) @ com.orhanobut.tracklytics.FixedAttribute ( key = "key" , value = "method" ) @ com.orhanobut.tracklytics.FixedAttributes ( value = @ com.orhanobut.tracklytics.FixedAttribute ( key = "key1" , value = "method1" ) ) public void foo () {} } invokeMethod ( Foo . class , "foo" ) ; com.orhanobut.tracklytics.AssertTracker . assertTrack ( tracker ) . event ( "event" ) . noTags () . attribute ( "key" , "method" ) . attribute ( "key1" , "method1" ) . noSuperAttributes () . noFilters () ; } 
protected static void initMap ( org.bukkit.map.MapView map ) { if ( map == null ) return; if ( fr.moribus.imageonmap.image.Renderer . isHandled ( map ) ) return; java.io.File imageFile = fr.moribus.imageonmap.ImageOnMap . getPlugin () . getImageFile ( map . getId () ) ; if ( imageFile . isFile () ) { fr.moribus.imageonmap.image.ImageIOExecutor . loadImage ( imageFile , fr.moribus.imageonmap.image.Renderer . installRenderer ( map ) ) ; } } 
private static java.lang.String materialToString ( org.bukkit.Material material ) { if ( material != null ) { java.lang.String materialName = com.griefcraft.lwc.LWC . normalizeName ( material ) ; java.lang.String locale = com.griefcraft.lwc.LWC . getInstance () . getLocale ( materialName . toLowerCase () ) ; if ( locale . startsWith ( "UNKNOWN_LOCALE_" ) ) { locale = materialName ; } return com.griefcraft.util.StringUtil . capitalizeFirstLetter ( locale ) ; } return "" ; } 
private void updateUiMedia ( java.util.ArrayList < controller.Media > medias ) { if ( ( medias . size () ) > 0 ) for ( controller.Media media : medias ) searchView . getItems () . add ( media . toString () ) ; else showErrorMessage ( "No match found" ) ; } 
public void insertArticles ( int id , int articleId , java.lang.String articleTitle , java.lang.String articleCategory , java.lang.String articleTimeStamp ) { android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; android.content.ContentValues values = new android.content.ContentValues () ; values . put ( martell.com.vice.dbHelper.NotificationDBHelper.COL_ID , id ) ; values . put ( martell.com.vice.dbHelper.NotificationDBHelper.COL_ARTICLE_ID , articleId ) ; values . put ( martell.com.vice.dbHelper.NotificationDBHelper.COL_ARTICLE_NAME , articleTitle ) ; values . put ( martell.com.vice.dbHelper.NotificationDBHelper.COL_ARTICLE_CATEGORY , articleCategory ) ; values . put ( martell.com.vice.dbHelper.NotificationDBHelper.COL_ARTICLE_TIMESTAMP , articleTimeStamp ) ; db . insert ( martell.com.vice.dbHelper.NotificationDBHelper.ARTICLES_TABLE_NAME , null , values ) ; } 
private static boolean isFlyme () { try { final com.jiang.android.push.utils.BuildProperties prop = com.jiang.android.push.utils.BuildProperties . newInstance () ; return ( ( ( ( prop . containsKey ( com.jiang.android.push.utils.RomUtil.KEY_FLYME_BUILD_USER ) ) || ( prop . containsKey ( com.jiang.android.push.utils.RomUtil.KEY_FLYME_ICON ) ) ) || ( prop . containsKey ( com.jiang.android.push.utils.RomUtil.KEY_FLYME_PUBLISHED ) ) ) || ( prop . containsKey ( com.jiang.android.push.utils.RomUtil.KEY_FLYME_DISPLAY_ID ) ) ) || ( prop . containsKey ( com.jiang.android.push.utils.RomUtil.KEY_FLYME_FLYME ) ) ; } catch ( final java.io.IOException e ) { return false ; } } 
private static java.lang.String safePassword ( java.lang.String unsafe ) { java.lang.String safe = unsafe ; if ( ( safe . length () ) > 16 ) { safe = safe . substring ( 0 , 16 ) ; } int nn = safe . length () ; for ( int i = nn - 1 ; i < 15 ; i ++ ) { safe = safe + "*" ; } return safe ; } 
public void launchPlayer1ColorSelectScreen () { remove ( edu.ucsb.cs56.projects.games.connectfour.startScreen2.ss ) ; if ( ( edu.ucsb.cs56.projects.games.connectfour.startScreen2.SPMenu ) != null ) remove ( edu.ucsb.cs56.projects.games.connectfour.startScreen2.SPMenu ) ; this . setSize ( edu.ucsb.cs56.projects.games.connectfour.startScreen2.menu_width , edu.ucsb.cs56.projects.games.connectfour.startScreen2.menu_height ) ; this . repaint () ; edu.ucsb.cs56.projects.games.connectfour.startScreen2.p1ColorScreen = new edu.ucsb.cs56.projects.games.connectfour.Player1ColorSelectScreen ( this ) ; edu.ucsb.cs56.projects.games.connectfour.startScreen2.namePanel1 = new edu.ucsb.cs56.projects.games.connectfour.namePanel () ; this . getContentPane () . add ( java.awt.BorderLayout.NORTH , edu.ucsb.cs56.projects.games.connectfour.startScreen2.namePanel1 ) ; this . add ( edu.ucsb.cs56.projects.games.connectfour.startScreen2.p1ColorScreen ) ; this . revalidate () ; } 
public void testRSEgd ( ) throws java.lang.Exception { it.unibas.lunatic.Scenario scenario = it.unibas.lunatic.test.UtilityTest . loadScenarioFromResources ( References.RS_egd_dbms ) ; speedy.model.database.IDatabase result = it.unibas.lunatic.model.chase.chasede.DEChaserFactory . getChaser ( scenario ) . doChase ( scenario ) ; if ( it.unibas.lunatic.test.de.dbms.TestSQLChaseEgd.logger . isDebugEnabled () ) it.unibas.lunatic.test.de.dbms.TestSQLChaseEgd.logger . debug ( result . toString () ) ; checkExpectedInstances ( result , scenario ) ; } 
public void writeToFile ( org.eclipse.core.resources.IFile file ) throws org.eclipse.core.runtime.CoreException { java.io.InputStream source = new java.io.ByteArrayInputStream ( writeToString () . getBytes ( java.nio.charset.Charset . availableCharsets () . get ( "UTF-8" ) ) ) ; if ( file . exists () ) { file . setContents ( source , false , true , null ) ; } else { file . create ( source , false , null ) ; } } 
@ java.lang.Override public void onReceive ( android.content.Context context , android.content.Intent intent ) { android.util.Log . d ( com.android.bluetooth.gatt.ScanManager.TAG , ( "awakened up at time " + ( android.os.SystemClock . elapsedRealtime () ) ) ) ; java.lang.String action = intent . getAction () ; if ( action . equals ( com.android.bluetooth.gatt.ScanManager.ACTION_REFRESH_BATCHED_SCAN ) ) { if ( mBatchClients . isEmpty () ) { return; } flushBatchScanResults ( mBatchClients . iterator () . next () ) ; } } 
@ java.lang.Override public void onComplete ( android.os.Bundle bundle ) { android.view.LayoutInflater . from ( this ) . inflate ( R.layout.view_text_input , actionContainer ) ; ( ( android.widget.ImageButton ) ( actionContainer . findViewById ( R.id.btnSend ) ) ) . setOnClickListener ( this ) ; android.widget.EditText etTextInput = ( ( android.widget.EditText ) ( actionContainer . findViewById ( R.id.etTextInput ) ) ) ; etTextInput . requestFocus () ; getWindow () . setSoftInputMode ( WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE ) ; } 
@ java.lang.Override public com.google.common.base.Predicate < lu.zhe.mtgslackbot.card.Card > apply ( java.lang.String value ) { return new com.google.common.base.Predicate < lu.zhe.mtgslackbot.card.Card > () { private final java.lang.Integer comparison = lu.zhe.mtgslackbot.parsing.Parsing . parseIntSafe ( value ) ; @ java.lang.Override public boolean apply ( lu.zhe.mtgslackbot.card.Card card ) { if ( ( comparison ) == null ) { return false ; } java.lang.Integer intValue = lu.zhe.mtgslackbot.parsing.Parsing.PROPERTY_FUNCS . get ( property ) . apply ( card ) ; return ( intValue != null ) && ( intValue < ( comparison ) ) ; } } ; } 
public void decryptMessage ( java.security.PrivateKey privateKey ) throws java.lang.Exception { byte [] decryptedBytes = org.votingsystem.signature.util.Encryptor . decryptCMS ( aesParams . getBytes () , privateKey ) ; this . aesEncryptParams = org.votingsystem.signature.util.AESParams . load ( org.votingsystem.util.JSON . getMapper () . readValue ( new java.lang.String ( decryptedBytes ) , org.votingsystem.dto.AESParamsDto . class ) ) ; decryptMessage ( this . aesEncryptParams ) ; } 
public void run () { getDatafromAPI () ; try { java.lang.Thread . sleep ( 1000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } finally { android.content.Intent intent = new android.content.Intent ( this , com.example.sufian.livelocal.MainActivity . class ) ; startActivity ( intent ) ; } } 
private static org.chromium.chrome.browser.cookies.CanonicalCookie createFromStream ( java.io.DataInputStream in ) throws java.io.IOException { return new org.chromium.chrome.browser.cookies.CanonicalCookie ( in . readUTF () , in . readUTF () , in . readUTF () , in . readUTF () , in . readUTF () , in . readLong () , in . readLong () , in . readLong () , in . readBoolean () , in . readBoolean () , in . readInt () , in . readInt () ) ; } 
public java.lang.Object readFromMasterServer ( ) throws java.io.IOException , java.lang.ClassNotFoundException { if ( ( masterServerSocket ) == null ) connectToMasterServer () ; java.lang.Object result = null ; try { result = masterServerInputStream . readObject () ; } catch ( java.io.IOException ex ) { java.util.logging.Logger . getLogger ( Networking.Client.ConnectionHandler . class . getName () ) . log ( java.util.logging.Level.SEVERE , null , ex ) ; connectToMasterServer () ; try { result = masterServerInputStream . readObject () ; } catch ( java.io.IOException ex2 ) { masterServerSocket = null ; throw ex2 ; } } return result ; } 
@ java.lang.Override public void actionPerformed ( final java.awt.event.ActionEvent e ) { if ( ( panel ) == null ) { mpicbg.spim.io.IOFunctions . println ( ( "Panel not set for " + ( this . getClass () . getSimpleName () ) ) ) ; return; } ( ( gui.StitchingExplorerPanel < ? , ? > ) ( panel ) ) . togglePreviewMode () ; } 
public void endOfTick () { this . entities . removeAll ( entitiesDestroyedInTick ) ; entitiesDestroyedInTick . clear () ; this . entities . addAll ( entitiesAddedInTick ) ; for ( me.hii488.objects.entities.BaseEntity ge : entitiesAddedInTick ) { ge.containerIdentifier = this . identifier ; ge . onLoad () ; } entitiesAddedInTick . clear () ; } 
public void copyMutableFieldsTo ( com.haayhappen.clockplus.alarms.Alarm target ) { target . setId ( this . getId () ) ; target.snoozingUntilMillis = this . snoozingUntilMillis ; target.enabled = this . enabled ; java.lang.System . arraycopy ( this . recurringDays , 0 , target.recurringDays , 0 , com.haayhappen.clockplus.alarms.misc.DaysOfWeek.NUM_DAYS ) ; target.ignoreUpcomingRingTime = this . ignoreUpcomingRingTime ; target.rescheduled = this . rescheduled ; } 
protected void calculateMinMax () { for ( ch.eonum.pipeline.core.Instance inst : dataset ) { double value = ( "0" . equals ( inst.label ) ) ? inst . getResult ( "result" ) : - ( inst . getResult ( "result" ) ) ; if ( value > ( max ) ) max = value ; if ( value < ( min ) ) min = value ; } } 
private void getNewProcessingSystemsFromDatabase () { java.util.List < pl.edu.uj.fais.wpz.msom.entities.Model > models = modelService . findAll () ; for ( pl.edu.uj.fais.wpz.msom.entities.Model m : models ) { java.lang.Long id = m . getId () ; if ( ! ( isProcessingSystemOnLocalList ( id ) ) ) { pl.edu.uj.fais.wpz.msom.model.ProcessingSystemMockup processingSystem = new pl.edu.uj.fais.wpz.msom.model.ProcessingSystemMockup ( controllerUnitService , distributionService , modelService , moduleService , pathService , taskService , taskTypeService ) ; processingSystem . setEntityObject ( m ) ; localProcessingSystems . add ( processingSystem ) ; } } } 
protected void verifyElementInListVariable ( java.lang.String variable , int element , double realPart , double complexPart ) { org.apache.commons.math3.complex.Complex actual = calculator . getMemory () . getListVariableValue ( "A" ) . list () . get ( element ) ; org.hamcrest.MatcherAssert . assertThat ( org.xlrnet.tibaija.memory.Value . of ( actual ) , new org.xlrnet.tibaija.matchers.EqualsWithComplexDeltaMatcher ( realPart , complexPart , org.xlrnet.tibaija.test.TestUtils.DEFAULT_TOLERANCE ) ) ; } 
private boolean scoreDifference ( int score ) { boolean b = false ; for ( int i = 0 ; i < ( scoresArray . size () ) ; i ++ ) { if ( ( java.lang.Math . abs ( ( score - ( java.lang.Integer . valueOf ( java.lang.String . valueOf ( scoresArray . get ( i ) ) ) ) ) ) ) >= ( diffToWin ) ) { b = true ; } } return b ; } 
@ javafx.fxml.FXML void loadCustomerDetails ( javafx.event.ActionEvent event ) { int x = availableMotorhomesTable . getSelectionModel () . getSelectedIndex () ; if ( x != 0 ) { Exam.CLASS.Reservations.motorhomeSelected = columnLicese2 . getCellData ( x ) ; Exam.CLASS.Reservations.price = columnPricePD . getCellData ( x ) ; java.lang.System.out . println ( ( "motorhomeSelected: " + ( Exam.CLASS.Reservations.motorhomeSelected ) ) ) ; scene . openWindowAndClose ( event , "customers.fxml" , "Customer details" , 600 , 400 ) ; } else { java.lang.System.out . println ( "no motorhome selected" ) ; } } 
public java.lang.String parseGetDeviceIp ( java.lang.String ipInfo ) { if ( ( ipInfo . isEmpty () ) || ( ipInfo . contains ( com.github.pedrovgs.androidwifiadb.adb.ADBParser.ERROR_PARSING_DEVICE_IP_KEY ) ) ) { return "" ; } java.lang.String [] splittedOutput = ipInfo . split ( "\\n" ) ; int end = splittedOutput [ 1 ] . indexOf ( com.github.pedrovgs.androidwifiadb.adb.ADBParser.END_DEVICE_IP_INDICATOR ) ; int start = ( splittedOutput [ 1 ] . indexOf ( com.github.pedrovgs.androidwifiadb.adb.ADBParser.START_DEVICE_IP_INDICATOR ) ) + 5 ; return splittedOutput [ 1 ] . substring ( start , end ) ; } 
@ java.lang.Override public void surfaceChanged ( final android.view.SurfaceHolder holder , final int format , final int w , final int h ) { android.hardware.Camera.Parameters parameters = mCamera . getParameters () ; parameters . setPreviewSize ( mPreviewSize.width , mPreviewSize.height ) ; requestLayout () ; mCamera . setParameters ( parameters ) ; mCamera . startPreview () ; } 
public void standUp ( int seat ) throws java.rmi.RemoteException { seatList . get ( seat ) . standUp () ; int releasedSemaphore = seat / ( seatsPerSemaphore ) ; if ( releasedSemaphore > ( ( getNumberOfSemaphores () ) - 1 ) ) semaphoreList . get ( ( releasedSemaphore - 1 ) ) . release () ; else semaphoreList . get ( releasedSemaphore ) . release () ; } 
@ java.lang.Override public void setQName ( java.lang.String qName ) { java.lang.String oldNamespace = getNamespace () ; java.lang.String oldName = getName () ; super . setNamespace ( namespace ) ; if ( ( listenerList ) != null ) { org.corpus_tools.salt.extensions.notification.graph.impl.NotifierHelper . notify ( listenerList , Listener.NOTIFICATION_TYPE.SET , GRAPH_ATTRIBUTES.LABEL_NAMESPACE , oldNamespace , getNamespace () , this ) ; org.corpus_tools.salt.extensions.notification.graph.impl.NotifierHelper . notify ( listenerList , Listener.NOTIFICATION_TYPE.SET , GRAPH_ATTRIBUTES.LABEL_NAME , oldName , getName () , this ) ; } } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_cart ) ; customerId = 28 ; list = ( ( android.widget.ListView ) ( findViewById ( R.id.listView ) ) ) ; bookList = new java.util.ArrayList < java.util.HashMap < java.lang.String , java.lang.String > > () ; getCartData ( customerId ) ; android.widget.TextView tvTotal = ( ( android.widget.TextView ) ( findViewById ( R.id.totalCost ) ) ) ; tvTotal . setText ( new java.text.DecimalFormat ( "##.##" ) . format ( getTotalCost () ) ) ; } 
public static void main ( java.lang.String [] args ) { java.util.Scanner input = new java.util.Scanner ( java.lang.System.in ) ; java.lang.System.out . println ( "Enter the name of the product" ) ; java.lang.String productDescription = input . nextLine () ; java.lang.System.out . println ( "Enter the price of the product" ) ; double productPrice = input . nextDouble () ; java.lang.System.out . println ( "Enter the quantity that you're buying" ) ; int quantity = input . nextInt () ; java.lang.String receiptLine = java.lang.String . format ( "%s $%.2f %d" , productDescription , productPrice , quantity ) ; java.lang.System.out . println ( receiptLine ) ; } 
private boolean checkNearObject ( int id ) { boolean isByObject = false ; int direction = findDirectionOfObject ( id ) ; if ( direction != 0 ) { isByObject = true ; if ( id == 2 ) { monsterNextToPlayerLocaiton = getNewLocation ( playerCurrentLocation , direction ) ; } else if ( id == 3 ) { if ( ( ( edu.cis232.gwasos.resources.mapobjects.Chest ) ( getObjectInDirection ( playerCurrentLocation , direction ) ) ) . isOpen () ) { isByObject = false ; } else { isByObject = true ; } } } return isByObject ; } 
@ java.lang.Override public void apply () { org.jebtk.modern.window.ModernWindow window = org.jebtk.modern.window.WindowService . getInstance () . findByName ( mWindowReference ) ; java.lang.System.err . println ( ( ( ( "search for plot window " + ( mWindowReference ) ) + " " ) + ( window == null ) ) ) ; if ( window != null ) { org.jebtk.modern.window.WindowService . setFocus ( window ) ; } else { window = createWindow () ; mWindowReference = window . getTitle () ; window . setVisible ( true ) ; } super . apply () ; } 
@ java.lang.Deprecated public final void addToConsole ( com.n9mtq4.logwindow.BaseConsole baseConsole ) { if ( ( ! ( linkedBaseConsoles . contains ( baseConsole ) ) ) || ( ! ( baseConsole . getListenerContainers () . contains ( this ) ) ) ) { linkedBaseConsoles . add ( baseConsole ) ; baseConsole . addListenerContainerRaw ( this ) ; asyncAnnotations () ; } } 
private int getSupportedFPSAround ( int videoFps ) { java.util.List < int [] > supportedFps = camera . getParameters () . getSupportedPreviewFpsRange () ; int currFPS = 0 ; for ( int [] i : supportedFps ) { if ( ( i [ 1 ] ) >= ( videoFps * 1000 ) ) return videoFps ; currFPS = ( i [ 1 ] ) / 1000 ; } return currFPS ; } 
public static boolean listContainsArray ( java.util.List < long [] > list , long [] array ) { for ( long [] element : list ) { if ( ! ( java.util.Arrays . equals ( element , array ) ) ) { return false ; } } return true ; } 
public java.lang.String crawl ( boolean testing ) throws java.io.IOException { if ( queue . isEmpty () ) { return null ; } java.lang.String s = queue . poll () ; org.jsoup.select.Elements e ; if ( testing ) { e = com.flatironschool.javacs.WikiCrawler.wf . readWikipedia ( s ) ; } else { if ( index . isIndexed ( s ) ) { s = queue . poll () ; } e = com.flatironschool.javacs.WikiCrawler.wf . fetchWikipedia ( s ) ; } index . indexPage ( s , e ) ; queueInternalLinks ( e ) ; return s ; } 
@ java.lang.Override public java.awt.Point nextPoint () { int randomWidth = ( ( int ) ( ( java.lang.Math . random () ) * ( ( this . width ) - 1 ) ) ) ; int randomHeight = ( ( int ) ( ( java.lang.Math . random () ) * ( ( this . height ) - 1 ) ) ) ; return new java.awt.Point ( randomWidth , randomHeight ) ; } 
@ java.lang.Override public void execute ( net.minecraft.server.MinecraftServer server , net.minecraft.command.ICommandSender sender , java.lang.String [] args ) throws net.minecraft.command.CommandException { if ( ( isPlayerOnly () ) && ( ( sender . getCommandSenderEntity () ) instanceof net.minecraft.entity.player.EntityPlayer ) ) {} else if ( ( ! ( isPlayerOnly () ) ) && ( ! ( ( sender . getCommandSenderEntity () ) instanceof net.minecraft.entity.player.EntityPlayer ) ) ) wurmcraft.serveressentials.common.chat.ChatHelper . sendMessageTo ( sender , Local.PLAYER_ONLY ) ; } 
@ net.smartcosmos.dao.things.repository.Test public void findByTenantIdAndType ( ) throws java.lang.Exception { org.springframework.data.domain.Page < net.smartcosmos.dao.things.domain.ThingEntity > entityPage = repository . findByTenantIdAndTypeIgnoreCase ( tenantId , type , null ) ; assertFalse ( entityPage . getContent () . isEmpty () ) ; assertEquals ( 1 , entityPage . getContent () . size () ) ; assertEquals ( id , entityPage . getContent () . get ( 0 ) . getId () ) ; } 
public java.lang.String fix ( java.lang.String xml ) { elaborate.editor.export.mvn.TextDecorationVisitor visitor = new elaborate.editor.export.mvn.TextDecorationVisitor () ; nl.knaw.huygens.tei.Document document = nl.knaw.huygens.tei.Document . createFromXml ( xml , false ) ; document . accept ( visitor ) ; java.lang.String textDecorationFixed = visitor . getContext () . getResult () ; nl.knaw.huygens.Log . info ( "textDecorationFixed={}" , textDecorationFixed ) ; elaborate.editor.export.mvn.AnnotationHierarchyVisitor ahVisitor = new elaborate.editor.export.mvn.AnnotationHierarchyVisitor () ; document = nl.knaw.huygens.tei.Document . createFromXml ( ( ( "<body>" + textDecorationFixed ) + "</body>" ) , false ) ; textDecorationFixed = traverse ( document ) ; return textDecorationFixed ; } 
public void addEvent ( javax.faces.event.ActionEvent actionEvent ) { if ( timeTableManager . hasCoveringTimeTable ( worker . getId () , event . getTt () ) ) { addMessage ( new javax.faces.application.FacesMessage ( javax.faces.application.FacesMessage.SEVERITY_ERROR , "Hiba!" , "Nem lehet beosztás átfedő!" ) ) ; return; } if ( ( event . getId () ) == null ) { timeTableManager . addTimeTableToWorker ( worker . getId () , event . getTt () ) ; } else { timeTableManager . saveTimeTable ( event . getTt () ) ; } } 
@ java.lang.Override public void onClick ( android.view.View view ) { ( ( com.pedrodavidlp.footballmanager.view.activity.JoinGroupActivity ) ( getActivity () ) ) . startAnimationFab () ; presenter . joinGroup ( new com.pedrodavidlp.footballmanager.domain.model.Group ( nameGroup . getText () . toString () , passGroup . getText () . toString () ) , new com.pedrodavidlp.footballmanager.domain.model.Player ( com.pedrodavidlp.footballmanager.data.UserRepository.currentNickname , 0 , false , false ) ) ; } 
public java.lang.String getAddressToString () { try { java.lang.String address = "" ; int maxLines = getAddress () . getMaxAddressLineIndex () ; for ( int i = 0 ; i <= maxLines ; i ++ ) { address = ( address + ( getAddress () . getAddressLine ( i ) ) ) + " " ; } return address ; } catch ( java.lang.NullPointerException e ) { android.util.Log . e ( de.fau.cs.mad.kwikshop.android.model.LocationFinderHelper.TAG , "getAddressConverted()" ) ; } return "No Address found" ; } 
protected void removeEntityInternal ( com.badlogic.ashley.core.Entity entity ) { entities . removeValue ( entity , true ) ; entitiesById . remove ( entity . getId () ) ; updateFamilyMembership ( entity , true ) ; entity.componentAdded . remove ( componentAdded ) ; entity.componentRemoved . remove ( componentRemoved ) ; } 
@ java.lang.Override public void onDestroyView () { super . onDestroyView () ; android.util.Log . d ( "ADD FRIEND FRAGMENT" , "OnDestroy" ) ; if ( ( VEL1 ) != null ) pcchatapp . child ( "user_friend" ) . child ( pcchatapp . getAuth () . getUid () ) . removeEventListener ( VEL1 ) ; if ( ( VEL2 ) != null ) pcchatapp . child ( "users" ) . removeEventListener ( VEL2 ) ; } 
private void onError ( java.lang.String errorMessage ) { org.matrix.androidsdk.util.Log . e ( im.vector.activity.LoginActivity.LOG_TAG , ( "onForgotPasswordClick : requestEmailValidationToken fails with error " + errorMessage ) ) ; if ( ( mMode ) == ( im.vector.activity.LoginActivity.MODE_FORGOT_PASSWORD ) ) { enableLoadingScreen ( false ) ; android.widget.Toast . makeText ( getApplicationContext () , errorMessage , Toast.LENGTH_LONG ) . show () ; mMode = im.vector.activity.LoginActivity.MODE_LOGIN ; showMainLayout () ; refreshDisplay () ; } } 
@ java.lang.Override public void success ( com.northernwall.hadrian.domain.WorkItem workItem ) { dataAccess . deleteVip ( workItem . getService () . serviceId , workItem . getVip () . vipId ) ; dataAccess . deleteSearch ( SearchSpace.vipFqdn , ( ( ( workItem . getVip () . dns ) + "." ) + ( workItem . getVip () . domain ) ) , workItem . getVip () . vipId ) ; } 
@ java.lang.Override public void initialize () { logger . debug ( "Initializing innogy SmartHome BridgeHandler..." ) ; in.ollie.innogysmarthome.Configuration config = loadAndCheckConfig () ; if ( config != null ) { logger . debug ( config . toString () ) ; org.openhab.binding.innogysmarthome.handler.InnogyBridgeHandler.Initializer i = new org.openhab.binding.innogysmarthome.handler.InnogyBridgeHandler.Initializer ( this , config ) ; i . run () ; } } 
@ java.lang.Override public void onBackPressed () { android.util.Log . d ( com.lerenard.counter3.CounterActivity.TAG , "onBackPressed" ) ; android.util.Log . d ( com.lerenard.counter3.CounterActivity.TAG , com.lerenard.counter3.MainActivity . getDatabase () . toString () ) ; android.content.Intent data = new android.content.Intent () ; data . putExtra ( MainActivity.INTENT_EXTRA_COUNT , getCount () ) ; if ( ( index ) != ( - 1 ) ) { data . putExtra ( MainActivity.INTENT_EXTRA_INDEX , index ) ; } setResult ( com.lerenard.counter3.RESULT_OK , data ) ; finish () ; } 
public void deleteClaim ( com.cmput301.cs.project.models.Claim claim ) { java.util.Iterator < com.cmput301.cs.project.models.Claim > iterator = mClaims . iterator () ; while ( iterator . hasNext () ) { com.cmput301.cs.project.models.Claim current = iterator . next () ; if ( current . getId () . equals ( claim . getId () ) ) { iterator . remove () ; } } serialize () ; } 
public static java.util.Date dateYS ( int year , int month , int date , int hourOfDay , int minute , int second ) { java.util.Calendar c = java.util.Calendar . getInstance () ; c . set ( year , month , date , hourOfDay , minute , second ) ; return c . getTime () ; } 
void seekToRelative ( float progress ) { long duration = mediaPlayer . getDuration () ; if ( duration == ( com.google.android.exoplayer2.C.TIME_UNSET ) ) { resumeProgress = progress ; return; } resumeProgress = - 1 ; long position = ( ( long ) ( duration * progress ) ) ; mediaPlayer . seekTo ( position ) ; } 
public int getBlocks ( int [] A , int maxBound ) { int blockingNumber = 0 ; int tempSum = 0 ; for ( int aA : A ) { if ( ( tempSum + aA ) <= maxBound ) tempSum += aA ; else { blockingNumber ++ ; tempSum = aA ; } } return blockingNumber ; } 
public static net.filebot.similarity.SimilarityMetric [] defaultSequence ( boolean includeFileMetrics ) { if ( includeFileMetrics ) { return new net.filebot.similarity.SimilarityMetric [] { net.filebot.similarity.EpisodeMetrics.FileSize , new net.filebot.similarity.MetricCascade ( net.filebot.similarity.EpisodeMetrics.FileName , net.filebot.similarity.EpisodeMetrics.EpisodeFunnel ) , net.filebot.similarity.EpisodeMetrics.EpisodeBalancer , net.filebot.similarity.EpisodeMetrics.AirDate , net.filebot.similarity.EpisodeMetrics.MetaAttributes , net.filebot.similarity.EpisodeMetrics.SubstringFields , net.filebot.similarity.EpisodeMetrics.NameBalancer , net.filebot.similarity.EpisodeMetrics.Numeric , net.filebot.similarity.EpisodeMetrics.NumericSequence , net.filebot.similarity.EpisodeMetrics.SeriesName , net.filebot.similarity.EpisodeMetrics.RegionHint , net.filebot.similarity.EpisodeMetrics.SeriesRating , net.filebot.similarity.EpisodeMetrics.TimeStamp , net.filebot.similarity.EpisodeMetrics.AbsolutePath } ; } else { return new net.filebot.similarity.SimilarityMetric [] { net.filebot.similarity.EpisodeMetrics.EpisodeFunnel , net.filebot.similarity.EpisodeMetrics.EpisodeBalancer , net.filebot.similarity.EpisodeMetrics.AirDate , net.filebot.similarity.EpisodeMetrics.MetaAttributes , net.filebot.similarity.EpisodeMetrics.SubstringFields , net.filebot.similarity.EpisodeMetrics.NameBalancer , net.filebot.similarity.EpisodeMetrics.Numeric , net.filebot.similarity.EpisodeMetrics.NumericSequence , net.filebot.similarity.EpisodeMetrics.SeriesName , net.filebot.similarity.EpisodeMetrics.RegionHint , net.filebot.similarity.EpisodeMetrics.SeriesRating , net.filebot.similarity.EpisodeMetrics.TimeStamp , net.filebot.similarity.EpisodeMetrics.AbsolutePath } ; } } 
public void saveCommand ( server.command.ICommand command , int gameId ) { this . persistence . beginTransaction () ; server.IGameAccess gameAccessObject = this . persistence . getGameAccessObject () ; gameAccessObject . saveCommand ( command , gameId ) ; if ( ( gameAccessObject . getCommandAmount ( gameId ) ) >= ( interval ) ) { gameAccessObject . saveGame ( this . getGameWithNumber ( gameId ) , gameId ) ; gameAccessObject . deleteGameCommands ( gameId ) ; } this . persistence . endTransaction () ; } 
protected android.database.Cursor getSelectionCursor ( java.lang.String constraint ) { java.lang.String [] mSelectionArgs = new java.lang.String [] { ( "%" + constraint ) + "%" } ; return getContext () . getContentResolver () . query ( tbd . getUri () , mProjection , mSelection , mSelectionArgs , mOrderBy ) ; } 
public static boolean registerGlobalBinderDelayed ( java.lang.String name , com.qihoo360.replugin.IBinderGetter getter ) { if ( ! ( RePluginFramework.mHostInitialized ) ) { return false ; } try { java.lang.Object obj = com.qihoo360.replugin.RePlugin.ProxyRePluginVar.registerGlobalBinderDelayed . call ( null , name , getter ) ; } catch ( java.lang.Exception e ) { if ( com.qihoo360.replugin.helper.LogDebug.LOG ) { e . printStackTrace () ; } } return false ; } 
public int executePredictionClassIndex ( java.lang.String filePath ) throws java.lang.Exception { weka.core.converters.ConverterUtils.DataSource ds = new weka.core.converters.ConverterUtils.DataSource ( filePath ) ; weka.core.Instances dataset = ds . getDataSet () ; dataset . setClassIndex ( ( ( dataset . numAttributes () ) - 1 ) ) ; if ( ( dataset . numInstances () ) != 1 ) { throw new net.floodlightcontroller.prediction.Exception.NotCorrespondingInstanceNumberException () ; } double classPred = classifier . classifyInstance ( dataset . instance ( 0 ) ) ; return ( ( int ) ( classPred ) ) ; } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { android.util.SparseBooleanArray selected = adapter . getSelectedIds () ; for ( int i = ( selected . size () ) - 1 ; i >= 0 ; i -- ) { if ( selected . valueAt ( i ) ) { com.beautypop.viewmodel.ConversationVM item = adapter . getItem ( selected . keyAt ( i ) ) ; adapter . deleteConversation ( item . getId () ) ; } } } 
private static java.lang.String getTag ( java.lang.String msg , java.lang.String tag ) { java.lang.String [] tags = msg . split ( "/" ) ; for ( int i = 0 ; i < ( tags.length ) ; i ++ ) { java.lang.String [] flag = tags [ i ] . split ( ":" ) ; if ( flag [ 0 ] . equals ( tag ) ) { return flag [ 1 ] ; } } return null ; } 
private static void jj_la1_init_0 () { sqlParser.SqlParser.jj_la1_0 = new int [] { 0 , 0 , 0 , 256 , 256 , 0 , 0 , 25165824 , 0 , 0 , 0 , 0 , 0 , 25165824 , 2048 , 25165824 , 2048 , 0 , 25165824 , 0 , 0 , 7307264 , 0 , 0 , 16777216 , 2048 , 0 , 0 , 0 , 1024 , 0 } ; } 
@ java.lang.Override public void setUserVisibleHint ( boolean isVisibleToUser ) { android.util.Log . d ( "setUserVisibleHint" , ( ( ( category ) + ", isVisibleToUser:" ) + isVisibleToUser ) ) ; super . setUserVisibleHint ( isVisibleToUser ) ; if ( ( ( ( ( paintingListAdapter ) != null ) && ( ( paintingListAdapter . getItemCount () ) == 0 ) ) && isVisibleToUser ) && ( isVisible () ) ) { android.util.Log . d ( "setUserVisibleHint" , ( ( category ) + " is loading." ) ) ; galleryPresenter . loadPaintingList ( category ) ; } } 
protected void registerFuture ( org.apache.tomcat.websocket.FutureToSendHandler f2sh ) { boolean fail = false ; synchronized ( stateLock ) { if ( ( state ) == ( org.apache.tomcat.websocket.WsSession.State.OPEN ) ) { futures . put ( f2sh , f2sh ) ; } else if ( f2sh . isDone () ) {} else { fail = true ; } } if ( fail ) { java.io.IOException ioe = new java.io.IOException ( org.apache.tomcat.websocket.WsSession.sm . getString ( "wsSession.messageFailed" ) ) ; javax.websocket.SendResult sr = new javax.websocket.SendResult ( ioe ) ; f2sh . onResult ( sr ) ; } } 
public julius.sky.voicehud.core.router.Route getRoute ( java.lang.String drivingSimCommand ) { julius.sky.voicehud.core.router.Route found = null ; for ( julius.sky.voicehud.core.router.Route r : super . getSimRoutes () ) { java.lang.System.out . println ( ( "r: " + r ) ) ; if ( r . getViewId () . equals ( drivingSimCommand ) ) found = r ; } return found ; } 
@ java.lang.Override public void takeTurn () { java.lang.System.out . println ( "Computer turn" ) ; gameState.TurnChange ts = turnSwitch ; int i = turnSwitch . getComputer () . getSelectedPokemon () . getCurrentHealth () ; if ( ( turnSwitch . getComputer () . getSelectedPokemon () . getCurrentHealth () ) == 0 ) { turnSwitch . setTurn ( turnSwitch . getComputerPokemon () ) ; } else { turnSwitch . setTurn ( turnSwitch . getComputerFight () ) ; } } 
@ java.lang.Override public void touchUp ( com.badlogic.gdx.scenes.scene2d.InputEvent event , float x , float y , int pointer , int button ) { if ( ! ( this . isValid ) ) { return; } this . button . setState ( ToggleButton.ON_STATE ) ; super . touchUp ( event , x , y , pointer , button ) ; this . touchUpCallback . call () ; } 
private void componentsInstantiation () { startFrame = new javax.swing.JFrame () ; head = new javax.swing.JPanel () ; body = new javax.swing.JPanel () ; startButton = new javax.swing.JButton () ; exitButton = new javax.swing.JButton () ; helpButton = new javax.swing.JButton () ; optionsButton = new javax.swing.JButton () ; java.awt.GridBagLayout gb = new java.awt.GridBagLayout () ; } 
@ java.lang.Override public boolean equals ( java.lang.Object o ) { if ( o instanceof com.roamingroths.cmcc.data.Observation ) { com.roamingroths.cmcc.data.Observation that = ( ( com.roamingroths.cmcc.data.Observation ) ( o ) ) ; if ( ( this . flow ) != ( that.flow ) ) { return false ; } if ( ( this . occurrences ) != ( that.occurrences ) ) { return false ; } if ( ! ( com.google.common.base.Objects . equal ( this . dischargeSummary , that.dischargeSummary ) ) ) { return false ; } return true ; } return false ; } 
public void send ( java.lang.String channel , java.lang.String jsonString ) { for ( org.exist.remoteconsole.RemoteConsoleServlet.RemoteConsoleSocket socket : sockets ) { try { socket . sendMessage ( channel , jsonString ) ; } catch ( java.io.IOException e ) { org.exist.remoteconsole.RemoteConsoleServlet.LOG . debug ( ( "Error sending message via websocket: " + ( e . getMessage () ) ) , e ) ; } } } 
@ com.fasterxml.jackson.annotation.JsonGetter public java.util.List < java.lang.String > getPropertiesId () { java.util.List < java.lang.String > idList = new java.util.ArrayList <> () ; java.util.List < com.isssr.foodemperors.model.Property > propertyList = getPropertyList () ; for ( com.isssr.foodemperors.model.Property property : propertyList ) { if ( property != null ) { idList . add ( property . getId () ) ; } } if ( ( idList . size () ) > 0 ) { return idList ; } else { return null ; } } 
public static void addPoints ( java.util.UUID uuid , int value ) { if ( ! ( com.muwbi.devathlon.clazz.Team . hasTeam ( uuid ) ) ) { return; } org.bukkit.scoreboard.Score score = com.muwbi.devathlon.clazz.Team . getTeam ( uuid ) . getPointsObjective () . getScore ( org.bukkit.Bukkit . getPlayer ( uuid ) . getName () ) ; score . setScore ( ( ( score . getScore () ) + value ) ) ; } 
private void calculateNumberDeployable () { int result = ( this . currentPlayer . getTerritories () . size () ) / 3 ; if ( result < 3 ) result = 3 ; if ( playedCards ) { result = result + ( cardArmies ) ; cardArmies = ( cardArmies ) + ( ( cardArmies ) / 2 ) ; } result = result + ( accountForCountries () ) ; this . numberAllowed = result ; } 
public static boolean hasEqualIceCream ( net.minecraft.item.ItemStack stack1 , net.minecraft.item.ItemStack stack2 ) { if ( ( stack1 == null ) || ( stack2 == null ) ) return false ; if ( ! ( ( ( stack1 . getItem () ) instanceof dk.mrspring.kitchen.item.food.ItemIceCreamableBase ) || ( ( stack2 . getItem () ) instanceof dk.mrspring.kitchen.item.food.ItemIceCreamableBase ) ) ) return false ; java.lang.String [] cream1 = dk.mrspring.kitchen.item.food.ItemIceCreamableBase . getIceCreamFromStack ( stack1 ) ; java.lang.String [] cream2 = dk.mrspring.kitchen.item.food.ItemIceCreamableBase . getIceCreamFromStack ( stack2 ) ; return java.util.Arrays . equals ( cream1 , cream2 ) ; } 
void reload_from_file () { boolean there_is_file = ( ( ZenStates ) ( p ) ) . serializer . check_if_file_exists_in_sketchpath ( title ) ; if ( there_is_file ) { ( ( ZenStates ) ( p ) ) . is_loading = true ; ( ( ZenStates ) ( p ) ) . cp5 . setAutoDraw ( false ) ; StateMachine loaded = ( ( ZenStates ) ( p ) ) . serializer . loadSubStateMachine ( title ) ; mirror ( loaded ) ; } } 
public static void treatException ( ngspipesengine.utils.Log log , java.lang.String tag , java.lang.Exception e , java.lang.String msg ) throws ngspipesengine.exceptions.EngineException { log . error ( tag , msg ) ; log . error ( tag , ( "stackTrace: " + ( ngspipesengine.utils.Utils . getStackTrace ( e ) ) ) ) ; if ( e != null ) throw new ngspipesengine.exceptions.EngineException ( ( ( ":: " + msg ) + " ::" ) , e ) ; throw new ngspipesengine.exceptions.EngineException ( ( ( ":: " + msg ) + " ::" ) ) ; } 
public com.visenze.visearch.Box scale ( float ratio ) { return new com.visenze.visearch.Box ( ( ( int ) ( ( x1 ) * ratio ) ) , ( ( int ) ( ( x2 ) * ratio ) ) , ( ( int ) ( ( y1 ) * ratio ) ) , ( ( int ) ( ( y2 ) * ratio ) ) ) ; } 
void saveAndReloadConfig () { try { javax.swing.text.Document document = textArea . getDocument () ; qic.util.Util . overwriteFile ( qic.util.Config.CONFIG_PROPERTIES_FILENAME , document . getText ( 0 , document . getLength () ) ) ; qic.util.Config . loadConfig () ; } catch ( javax.swing.text.BadLocationException | java.io.IOException e ) { logger . error ( ( "Error while saving to " + ( qic.util.Config.CONFIG_PROPERTIES_FILENAME ) ) ) ; qic.util.SwingUtil . showError ( e ) ; } } 
double calculateDistanceRatio ( java.lang.String key ) { double ratio = 0 ; if ( ( traveledDistance . containsKey ( key ) ) && ( traveledDistanceWithCust . containsKey ( key ) ) ) { ratio = ( traveledDistanceWithCust . get ( key ) ) / ( traveledDistance . get ( key ) ) ; } return ratio ; } 
@ java.lang.Override public void refresh () { super . refresh () ; org.cirqwizard.settings.DispensingSettings settings = org.cirqwizard.settings.SettingsFactory . getDispensingSettings () ; getMainApplication () . getContext () . setG54Z ( settings . getZOffset () . getValue () ) ; pcbPane . setGerberColor ( PCBPane.SOLDER_PAD_COLOR ) ; pcbPane . setToolpathColor ( PCBPane.PASTE_TOOLPATH_COLOR ) ; pcbPane . setGerberPrimitives ( getMainApplication () . getContext () . getPanel () . getCombinedElements ( Board.LayerType.SOLDER_PASTE ) ) ; } 
public void newGame ( android.view.View view ) { setContentView ( R.layout.activity_choose_screen ) ; seng301.monstertrainer.Monster . setHp ( 10 ) ; seng301.monstertrainer.Monster . setMaxHP ( 10 ) ; seng301.monstertrainer.Monster . setStamina ( 15 ) ; seng301.monstertrainer.Monster . setMaxStamina ( 15 ) ; seng301.monstertrainer.Monster . setHunger ( 20 ) ; seng301.monstertrainer.Monster . setLoyalty ( 0 ) ; seng301.monstertrainer.Monster . setLevel ( 1 ) ; seng301.monstertrainer.Monster . setExp ( 0 ) ; seng301.monstertrainer.Monster . setMaxExp ( 100 ) ; } 
private final double [] sds ( final double [] psis ) { double [] sds = new double [ psis.length ] ; for ( int i = 0 ; i < ( sds.length ) ; i ++ ) { sds [ i ] = ( java.lang.Math . sqrt ( psis [ i ] ) ) + ( net.digital_alexandria.lvm4j.decomposition.FactorAnalysis.PSEUDO_COUNT ) ; } return sds ; } 
@ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public void sheepAreResilient ( net.minecraftforge.event.entity.living.LivingDeathEvent event ) { net.minecraft.entity.Entity entity = event.entity ; if ( entityIsNotA ( entity , net.minecraft.entity.passive.EntitySheep . class ) ) { return; } for ( int i = 0 ; i < 5 ; i ++ ) { net.minecraft.entity.passive.EntitySheep sheep = new net.minecraft.entity.passive.EntitySheep ( event.entity.worldObj ) ; spawnEntity ( event , sheep ) ; } } 
public void addFriend ( ch.riverworld.collector.DatabaseOperations dop , java.lang.String firstName , java.lang.String lastName ) { android.database.sqlite.SQLiteDatabase db = dop . getWritableDatabase () ; android.content.ContentValues values = new android.content.ContentValues () ; values . put ( DatabaseInfo.FRIENDS_FIRSTNAME_COL , firstName ) ; values . put ( DatabaseInfo.FRIENDS_LASTNAME_COL , lastName ) ; if ( debugMode ) { db . insert ( DatabaseInfo.FRIENDS_TABLE , null , values ) ; android.util.Log . d ( "DATABASE" , "Table friends --> added one line." ) ; } } 
@ java.lang.Override public java.lang.String getOption ( java.lang.String option , java.lang.String worldName ) { if ( worldsOptions . containsKey ( worldName ) ) { java.util.Map < java.lang.String , java.lang.String > worldOption = worldsOptions . get ( worldName ) ; if ( worldOption . containsKey ( option ) ) { return worldOption . get ( option ) ; } } return null ; } 
public static java.lang.String convertToStringFromBaseN ( java.util.Queue < java.lang.Integer > digitsList , short baseNumber ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; int convertedAscIIValue = 0 ; for ( java.lang.Integer digits : digitsList ) { convertedAscIIValue = com.sample.util.Util . getConvertedAsciiValue ( digits , baseNumber ) ; builder . append ( ( ( char ) ( convertedAscIIValue ) ) ) ; } return builder . toString () ; } 
@ org.junit.Test public void testSendResourceUrls_timeout () { eu.h2020.symbiote.communication.RabbitManager rabbitManager = spy ( new eu.h2020.symbiote.communication.RabbitManager () ) ; doReturn ( null ) . when ( rabbitManager ) . sendRpcMessage ( any () , any () , any () ) ; eu.h2020.symbiote.model.ResourceUrlsRequest request = new eu.h2020.symbiote.model.ResourceUrlsRequest () ; request . setIdList ( java.util.Collections . singletonList ( "123" ) ) ; java.util.Map < java.lang.String , java.lang.String > response = rabbitManager . sendResourceUrlsRequest ( request ) ; assertNull ( response ) ; } 
public int GetProductRepertory ( java.lang.String strBarcode , java.lang.String po_name ) { com.jsp.support.Product_Storage hPSHandle = new com.jsp.support.Product_Storage ( new com.jsp.support.EarthquakeManagement () ) ; java.lang.String curBarcode = GetUsedBarcode ( strBarcode , "product_storage" ) ; return ( ( hPSHandle . GetRepertoryByKeyList ( java.util.Arrays . asList ( "Bar_Code" , "po_name" , "isEnsure" ) , java.util.Arrays . asList ( curBarcode , po_name , "1" ) ) ) + ( hPSHandle . GetRepertoryByKeyList ( java.util.Arrays . asList ( "Bar_Code" , "po_name" , "isEnsure" ) , java.util.Arrays . asList ( curBarcode , "Material_Supply" , "1" ) ) ) ) + ( GetProductOtherPoNotDepleteRepertory ( curBarcode ) ) ; } 
public void test_145_ACLUpdateACL ( edu.umass.cs.gnsclient.client.util.GuidEntry barneyEntry ) { try { try { edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.client . aclAdd ( AclAccessType.READ_WHITELIST , barneyEntry , "cell" , GNSProtocol.ALL_GUIDS . toString () ) ; } catch ( java.lang.Exception e ) { edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest . failWithStackTrace ( ( "Exception creating ALL_GUIDS access for Barney's cell: " + e ) ) ; } } catch ( java.lang.Exception e ) { edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest . failWithStackTrace ( ( "Exception when we were not expecting it in ACLPartTwo: " + e ) ) ; } } 
private void init () { android.widget.LinearLayout.LayoutParams layoutParams = new android.widget.LinearLayout.LayoutParams ( ViewGroup.LayoutParams.WRAP_CONTENT , ViewGroup.LayoutParams.WRAP_CONTENT ) ; this . setHint ( "请输入文字~" ) ; this . setBackgroundResource ( R.drawable.dotted_shape ) ; this . setHintTextColor ( Color.MAGENTA ) ; this . setTextColor ( Color.BLUE ) ; this . setClickable ( true ) ; this . setFocusable ( true ) ; this . setTextSize ( getResources () . getDimension ( R.dimen.movable_text_view_default_text_size ) ) ; this . setLayoutParams ( layoutParams ) ; } 
@ java.lang.Override public boolean equals ( java.lang.Object arg0 ) { if ( ( arg0 == null ) || ( ! ( arg0 instanceof hu.marianna.problema.HaromKorso.KorsoAllapot ) ) ) { return false ; } int [] b = ( ( hu.marianna.problema.HaromKorso.KorsoAllapot ) ( arg0 ) ) . a ; for ( int i = 1 ; i <= 3 ; i ++ ) { if ( ( a [ i ] ) != ( b [ i ] ) ) { return false ; } } return true ; } 
@ java.lang.Override public void onComplete ( @ android.support.annotation.NonNull com.google.android.gms.tasks.Task < com.google.firebase.auth.AuthResult > task ) { mAuthProgressDialog . dismiss () ; if ( ! ( task . isSuccessful () ) ) { android.widget.Toast . makeText ( this , ( "Authentication failed." + ( task . getException () ) ) , Toast.LENGTH_SHORT ) . show () ; } else { android.util.Log . d ( com.gatech.edu.soloTechno.m4_login.RegisterActivity.TAG , "Authentication successful" ) ; createFirebaseUserProfile ( task . getResult () . getUser () ) ; } } 
public void createView () { this . view = new gomokuonline.RegisterView () ; registerFrame = new javax.swing.JFrame () ; registerFrame . setDefaultCloseOperation ( javax.swing.JFrame.EXIT_ON_CLOSE ) ; registerFrame . setContentPane ( view ) ; registerFrame . pack () ; registerFrame . setVisible ( true ) ; view . setController ( this ) ; view . setFrame ( registerFrame ) ; } 
@ org.junit.jupiter.api.Test public void testPhysEquals3 () { ph2 . setLocations ( new java.util.ArrayList < org.Point > ( java.util.Arrays . asList ( p1 , p2 ) ) ) ; ph1 . setLocations ( new java.util.ArrayList < org.Point > ( java.util.Arrays . asList ( p1 , p2 ) ) ) ; org.junit.jupiter.api.Assertions . assertEquals ( true , ph1 . equals ( ph2 ) ) ; ph2 . setLocations ( new java.util.ArrayList < org.Point > () ) ; ph1 . setLocations ( new java.util.ArrayList < org.Point > () ) ; } 
public void enterAPIName ( java.lang.String apiname ) throws java.lang.InterruptedException { loggerMP . debug ( "Entering spname" ) ; wait . until ( org.openqa.selenium.support.ui.ExpectedConditions . visibilityOf ( getElement ( txtAPIName ) ) ) ; getElement ( txtAPIName ) . clearAndSendkeys ( apiname ) ; getElement ( txtAPIName ) . sendEnter () ; loggerMP . debug ( "Entered Api name" ) ; java.lang.Thread . sleep ( com.wso2telco.apimanager.pageobjects.apihome.manager.SLEEPTIME ) ; } 
@ java.lang.Override public java.util.List < cn.edu.nju.software.entity.Story > getStoryListByTitle ( java.lang.String title , int offset , int limit ) { offset = ( offset < 0 ) ? cn.edu.nju.software.util.Const.DEFAULT_OFFSET : offset ; limit = ( limit < 0 ) ? cn.edu.nju.software.util.Const.DEFAULT_LIMIT : limit ; title = ( "%" + title ) + "%" ; return storyDao . getStoryListByTitle ( title , offset , limit ) ; } 
public static void beginServer ( int port , main.Window.state s ) throws java.io.IOException { switch ( s ) { case ENABLED : main.Window.stopServer = false ; main.Window.serverPort = port ; java.lang.System.out . println ( "this is working" ) ; main.Window.ServerThread server = new main.Window.ServerThread () ; server . start () ; break; case DISABLED : main.Window.stopServer = true ; break; } } 
public static java.util.List < net.minecraft.item.ItemStack > asList ( int size ) { java.util.ArrayList < net.minecraft.item.ItemStack > list = new java.util.ArrayList <> ( size ) ; for ( int i = 0 ; i < size ; i ++ ) { list . set ( i , ItemStack.EMPTY ) ; } return list ; } 
private void initMissionManager () { dji.sdk.base.DJIBaseProduct product = com.dji.GSDemo.GoogleMap.DJIDemoApplication . getProductInstance () ; if ( ( product == null ) || ( ! ( product . isConnected () ) ) ) { setResultToToast ( "Disconnected" ) ; mMissionManager = null ; start . setEnabled ( false ) ; return; } else { setResultToToast ( "Product connected" ) ; mMissionManager = product . getMissionManager () ; mMissionManager . setMissionProgressStatusCallback ( this ) ; mMissionManager . setMissionExecutionFinishedCallback ( this ) ; start . setEnabled ( true ) ; } mWaypointMission = new dji.sdk.missionmanager.DJIWaypointMission () ; } 
@ org.testng.annotations.BeforeClass public void setUp ( ) throws java.lang.Exception { mockedService = org.mockito.Mockito . mock ( com.myprojects.todo.service.TodoService . class ) ; com.myprojects.todo.controller.TodoController todoController = new com.myprojects.todo.controller.TodoController () ; todoController . setTodoService ( mockedService ) ; mockMvc = org.springframework.test.web.servlet.setup.MockMvcBuilders . standaloneSetup ( new com.myprojects.todo.controller.TodoController () ) . setControllerAdvice ( new com.myprojects.todo.controller.ExceptionHandlerAdvice () ) . build () ; } 
public com.google.gson.JsonObject toJson ( li.strolch.model.Order element ) { com.google.gson.JsonObject rootJ = new com.google.gson.JsonObject () ; rootJ . addProperty ( Tags.Json.OBJECT_TYPE , Tags.Json.ORDER ) ; toJson ( element , rootJ ) ; rootJ . addProperty ( Tags.Json.DATE , li.strolch.utils.iso8601.ISO8601FormatFactory . getInstance () . formatDate ( element . getDate () ) ) ; rootJ . addProperty ( Tags.Json.STATE , element . getState () . getName () ) ; addVersion ( element , rootJ ) ; addParameterBags ( element , rootJ ) ; addPolicies ( element , rootJ ) ; return rootJ ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { requestWindowFeature ( Window.FEATURE_NO_TITLE ) ; getWindow () . setFlags ( WindowManager.LayoutParams.FLAG_FULLSCREEN , WindowManager.LayoutParams.FLAG_FULLSCREEN ) ; super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.startactivity ) ; getSupportFragmentManager () . beginTransaction () . add ( R.id.startscreenlayout , new com.bam.darkhouseextreme.app.fragments.StartScreenFragment () , "startScreen" ) . commit () ; } 
public void initBoard () { puzzle = new boolean [ [ cracker.Puzzle.PUZZLE_SIZE ] [ cracker.Puzzle.PUZZLE_SIZE ] ; puzzle [ 0 ] [ 0 ] = true ; numFilled = ( ( ( cracker.Puzzle.PUZZLE_SIZE ) * ( ( cracker.Puzzle.PUZZLE_SIZE ) + 1 ) ) / 2 ) - 1 ; } 
public void testChangeListenerNotification ( ) throws java.lang.Exception { final int numDocs = 50 ; final java.util.concurrent.atomic.AtomicInteger atomicInteger = new java.util.concurrent.atomic.AtomicInteger ( 0 ) ; database . addChangeListener ( new com.couchbase.lite.Database.ChangeListener () { @ java.lang.Override public void changed ( com.couchbase.lite.Database.ChangeEvent event ) { atomicInteger . incrementAndGet () ; } } ) ; createDocuments ( database , numDocs ) ; assertEquals ( numDocs , atomicInteger . get () ) ; } 
public static int cancelRegistration ( java.sql.Connection connection , int attendanceID ) { java.sql.PreparedStatement ps = eTrams.utilities.databaseUtilities.SQLOperations . deleteAttendance ( connection ) ; try { ps . setInt ( 1 , attendanceID ) ; if ( ( ps . executeUpdate () ) > 1 ) { connection . commit () ; return 1 ; } } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } return 0 ; } 
public boolean isPositionValid ( final int columnIndex , final int rowIndex ) { if ( ( rowIndex < 0 ) || ( rowIndex > ( boundingBox . getHeight () ) ) ) { return false ; } if ( ( columnIndex < 0 ) || ( columnIndex > ( boundingBox . getWidth () ) ) ) { return false ; } return true ; } 
public de.uni_freiburg.informatik.ultimate.logic.Term [] getInterpolants ( de.uni_freiburg.informatik.ultimate.logic.Term proofTree ) { colorLiterals ( proofTree , new java.util.HashSet < de.uni_freiburg.informatik.ultimate.logic.Term > () ) ; final de.uni_freiburg.informatik.ultimate.smtinterpol.interpolate.Interpolant [] eqitps = interpolate ( proofTree ) ; final de.uni_freiburg.informatik.ultimate.logic.Term [] itpTerms = new de.uni_freiburg.informatik.ultimate.logic.Term [ eqitps.length ] ; for ( int i = 0 ; i < ( eqitps.length ) ; i ++ ) { itpTerms [ i ] = unfoldLAs ( eqitps [ i ] ) ; } return itpTerms ; } 
private void createRoom ( int roomID , java.lang.String [] wallDescriptors ) { renderer . createRoom ( roomID , wallDescriptors ) ; java.lang.String clientWallDescriptors = "" ; for ( java.lang.String str : wallDescriptors ) { clientWallDescriptors = clientWallDescriptors . concat ( ( str + ":" ) ) ; } com.semaphore_soft.apps.cypher.PortalActivity.serverService . writeAll ( ( ( ( ( com.semaphore_soft.apps.cypher.networking.NetworkConstants.PREFIX_CREATE_ROOM ) + roomID ) + ":" ) + clientWallDescriptors ) ) ; com.semaphore_soft.apps.cypher.PortalActivity.serverService . writeAll ( ( ( com.semaphore_soft.apps.cypher.networking.NetworkConstants.PREFIX_RESERVE_ROOM ) + roomID ) ) ; } 
@ java.lang.Override public void outARuleAnySubMessageSubstitution ( de.be4.classicalb.core.parser.rules.ARuleAnySubMessageSubstitution node ) { addForceDefinition () ; final de.be4.classicalb.core.parser.rules.PSubstitution newNode = de.be4.classicalb.core.parser.rules.RulesTransformation . createPositinedNode ( createCounterExampleSubstitutions ( node . getIdentifiers () , node . getWhere () , null , node . getMessage () , node . getErrorType () ) , node ) ; node . replaceBy ( newNode ) ; } 
public static java.lang.String field2MethodSign ( java.lang.String fSign ) { if ( fSign == null ) return null ; else if ( ( fSign . length () ) == 0 ) return "" ; else if ( ( fSign . charAt ( 0 ) ) < 'a' ) return fSign ; else { char [] chars = fSign . toCharArray () ; chars [ 0 ] -= mysh.codegen.CodeUtil.alphaStep ; return new java.lang.String ( chars ) ; } } 
boolean equals ( net.viktorc.detroid.framework.engine.Move m ) { return ( ( ( ( ( from ) == ( m.from ) ) && ( ( to ) == ( m.to ) ) ) && ( ( movedPiece ) == ( m.movedPiece ) ) ) && ( ( capturedPiece ) == ( m.capturedPiece ) ) ) && ( ( type ) == ( m.type ) ) ; } 
@ java.lang.Override public void handle ( javafx.scene.input.MouseEvent event ) { if ( ( event . getClickCount () ) == 2 ) { playSong ( songsTable . getSelectionModel () . getSelectedItem () ) ; musicPlayer . playNewSong ( songsTable . getSelectionModel () . getSelectedItem () , Playlist.SONGS_TABLE , musicPlayer . getLibrary () . getTracksPointer () . indexOf ( songsTable . getSelectionModel () . getSelectedItem () ) ) ; } } 
private de.slackspace.openkeepass.domain.Entry createEntry ( java.lang.String uuid , java.lang.String title , java.lang.String password ) { de.slackspace.openkeepass.domain.Entry entry = new de.slackspace.openkeepass.domain.Entry ( uuid ) ; java.util.Set < de.slackspace.openkeepass.domain.Property > properties = new java.util.HashSet < de.slackspace.openkeepass.domain.Property > () ; properties . add ( new de.slackspace.openkeepass.domain.Property ( "Title" , title , false ) ) ; properties . add ( new de.slackspace.openkeepass.domain.Property ( "Password" , password , false ) ) ; entry . setProperties ( properties ) ; return entry ; } 
public < T , T2 > javax.persistence.TypedQuery < T > where ( java.lang.Class < T > cls , java.lang.String column , T2 value ) { return query ( ( ( ( ( "SELECT e FROM " + ( cls . getName () ) ) + " e WHERE e." ) + column ) + " = :value" ) , cls ) . setParameter ( "value" , value ) ; } 
protected long [] getGroupIds ( com.liferay.portal.kernel.search.SearchContext searchContext ) { long [] groupIds = null ; long [] groupIdsFromFacetConfiguration = getGroupIdsFromFacetConfiguration () ; if ( com.liferay.portal.kernel.util.ArrayUtil . isNotEmpty ( groupIdsFromFacetConfiguration ) ) { groupIds = groupIdsFromFacetConfiguration ; } if ( com.liferay.portal.kernel.util.ArrayUtil . isEmpty ( groupIds ) ) { groupIds = searchContext . getGroupIds () ; } long [] groupIdsFromParameter = getGroupIdsFromParameter ( searchContext ) ; if ( com.liferay.portal.kernel.util.ArrayUtil . isNotEmpty ( groupIdsFromParameter ) ) { groupIds = groupIdsFromParameter ; } return groupIds ; } 
@ java.lang.Override public void doFilter ( com.gmail.at.ivanehreshi.epam.touragency.security.ServletRequest request , com.gmail.at.ivanehreshi.epam.touragency.security.ServletResponse response , com.gmail.at.ivanehreshi.epam.touragency.security.FilterChain chain ) throws com.gmail.at.ivanehreshi.epam.touragency.security.ServletException , java.io.IOException { com.gmail.at.ivanehreshi.epam.touragency.security.HttpServletRequest httpRequest = new com.gmail.at.ivanehreshi.epam.touragency.security.SecuredHttpServletRequest ( ( ( com.gmail.at.ivanehreshi.epam.touragency.security.HttpServletRequest ) ( request ) ) ) ; com.gmail.at.ivanehreshi.epam.touragency.security.User currentUser = getCurrentUser ( httpRequest ) ; java.util.List < com.gmail.at.ivanehreshi.epam.touragency.security.Role > roles = ( java.util.Objects . isNull ( currentUser ) ) ? new java.util.ArrayList <> () : currentUser . getRoles () ; checkPermissions ( request , response , roles ) ; chain . doFilter ( httpRequest , response ) ; } 
public static void loadLibrary ( java.lang.String libraryPath ) { if ( org.quenlen.magic.MagicImage . isLibraryLoadSuccess () ) { try { java.lang.System . load ( libraryPath ) ; org.quenlen.magic.MagicImage.STATE = org.quenlen.magic.MagicImage.MASK_SUCCESS ; } catch ( java.lang.Exception ex ) { android.util.Log . e ( org.quenlen.magic.MagicImage.TAG , "Manual load library error" ) ; org.quenlen.magic.MagicImage.STATE = org.quenlen.magic.MagicImage.MASK_FAILURE ; } } } 
public static void main ( java.lang.String [] args ) { try { javax.swing.UIManager . setLookAndFeel ( javax.swing.UIManager . getSystemLookAndFeelClassName () ) ; } catch ( java.lang.Exception e ) { java.lang.System.err . println ( e . getMessage () ) ; } com.jidesoft.app.framework.gui.filebased.FileBasedApplication app = new com.wwidesigner.gui.WIDesigner () ; app . getApplicationUIManager () . setSetsLookAndFeel ( false ) ; com.jidesoft.utils.Lm . verifyLicense ( "Edward Kort" , "WWIDesigner" , "DfuwPRAUR5KQYgePf:CH0LWIp63V8cs2" ) ; app . run ( args ) ; } 
public void addBodyCellToList ( com.mygdx.game.Cell bodySegment ) { bodySegment . setX ( breadCrumbsList . get ( length ) . getX () ) ; java.lang.System.out . println ( "" ) ; bodySegment . setY ( breadCrumbsList . get ( length ) . getY () ) ; bodySegment . setType ( "body" ) ; body . add ( length , bodySegment ) ; } 
public static controllers.Result signin ( ) throws java.io.IOException { if ( controllers.Register.allusers.updating ) { return redirect ( controllers.routes.Register . updating () ) ; } controllers.Form < models.User > filledForm = controllers.Register.userForm . bindFromRequest () ; models.User created = filledForm . get () ; if ( ! ( controllers.Register.allusers . loginCheck ( created.username , created.password ) ) ) { return ok ( home . render ( controllers.Register.userForm , "true" ) ) ; } controllers.Register.r . setHeader ( "curr" , created.username ) ; return redirect ( controllers.routes.Register . user ( created.username ) ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public org.springframework.http.ResponseEntity < ? > addUser ( @ org.springframework.web.bind.annotation.RequestBody java.util.Map < java.lang.String , java.lang.String > userSubmission ) { if ( userSubmission . containsKey ( "auth" ) ) { byte [] jsonRepresentation = org.bouncycastle.util.encoders.Base64 . decode ( userSubmission . get ( "auth" ) ) ; return new org.springframework.http.ResponseEntity ( jsonRepresentation , org.springframework.http.HttpStatus.CREATED ) ; } return new org.springframework.http.ResponseEntity < java.lang.Object > ( org.springframework.http.HttpStatus.BAD_REQUEST ) ; } 
public void run () { try { domain.User.Role role = gui.MainWindow . getWindowRole () ; if ( role != null ) { javax.swing.JFrame frame = new javax.swing.JFrame () ; frame . setVisible ( true ) ; } } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } 
@ org.robolectric.annotation.Implementation public void setScale ( float sx , float sy , float px , float py ) { setOps . put ( org.robolectric.shadows.ShadowMatrix.SCALE , ( ( ( ( ( ( sx + " " ) + sy ) + " " ) + py ) + " " ) + py ) ) ; } 
private service.agent.AgentResponse sendQuery ( java.lang.String event , java.lang.String userInput , java.lang.String context , long sessionId , boolean resetContext ) { java.lang.String url = buildQuery ( event , userInput , context , sessionId , resetContext ) ; com.google.gson.JsonObject jsonObject = sendQuery ( "Authorization" , ( "Bearer " + ( clientAccessToken ) ) , url ) . getAsJsonObject () ; service.agent.AgentResponse resp = null ; if ( jsonObject != null ) { resp = service.agent.AgentResponseParser . fromJson ( jsonObject ) ; } return resp ; } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( ( e . getSource () ) == ( btn1 ) ) { java.lang.String s1 = tf1 . getText () ; java.lang.System.out . println ( s1 ) ; setVisible ( false ) ; retrieved obj = new retrieved () ; obj . setVisible ( true ) ; } } 
public void addRow () { int rows = spreadsheetController . getNumberOfRows () ; int columns = spreadsheetController . getNumberOfColumns () ; spreadsheetController . addRow () ; android.widget.TableRow tr = new android.widget.TableRow ( getApplicationContext () ) ; tr . setLayoutParams ( new android.widget.TableRow.LayoutParams ( TableRow.LayoutParams.MATCH_PARENT , TableRow.LayoutParams.WRAP_CONTENT ) ) ; for ( int i = 0 ; i < columns ; i ++ ) { tr . addView ( newCell ( i , rows ) ) ; } table . addView ( tr , new android.widget.TableLayout.LayoutParams ( TableLayout.LayoutParams.MATCH_PARENT , TableLayout.LayoutParams.WRAP_CONTENT ) ) ; } 
@ java.lang.Override @ org.springframework.transaction.annotation.Transactional public ru.javawebinar.topjava.model.Meal save ( ru.javawebinar.topjava.model.Meal meal , int userId ) { meal . setUser ( em . getReference ( ru.javawebinar.topjava.model.User . class , userId ) ) ; if ( meal . isNew () ) { em . persist ( meal ) ; } else { if ( ( em . find ( ru.javawebinar.topjava.model.Meal . class , meal . getId () ) . getUser () . getId () ) == userId ) { em . merge ( meal ) ; } else { meal = null ; } } return meal ; } 
@ java.lang.Override public void onCreate () { super . onCreate () ; com.flybits.core.api.FlybitsOptions builder = new com.flybits.core.api.FlybitsOptions.Builder ( this ) . build () ; com.flybits.core.api.Flybits . include ( this ) . initialize ( builder ) ; se.walkercrou.places.GooglePlaces client = new se.walkercrou.places.GooglePlaces ( BuildConfig.GoogleApiKey ) ; java.util.List < se.walkercrou.places.Place > places = client . getNearbyPlaces ( 200 , 500 , 2000 , GooglePlaces.MAXIMUM_RESULTS ) ; for ( se.walkercrou.places.Place p : places ) { java.lang.System.out . println ( p ) ; } } 
@ java.lang.Override public void add ( cascading.tuple.Tuple tuple ) { if ( ( tuple . size () ) != ( getDeclaredFields () . size () ) ) { throw new java.lang.IllegalArgumentException ( ( ( ( "Tuple size != declared fields size: " + tuple ) + ", " ) + ( getDeclaredFields () ) ) ) ; } collected . add ( new cascading.tuple.TupleEntry ( getDeclaredFields () , tuple ) ) ; } 
@ java.lang.Override public double cdf ( int x ) { if ( x > ( trials ) ) return 1 ; if ( x < 0 ) return 0 ; return betaIncReg ( ( 1 - ( p ) ) , ( ( trials ) - x ) , ( 1 + x ) ) ; } 
private java.lang.String [] getFavorites () { android.content.SharedPreferences pref = android.preference.PreferenceManager . getDefaultSharedPreferences ( mCtx ) ; java.util.Set < java.lang.String > favorites = pref . getStringSet ( mCtx . getResources () . getString ( R.string.favorites_list ) , null ) ; return favorites . toArray ( new java.lang.String [ favorites . size () ] ) ; } 
public void onClick ( android.content.DialogInterface dialog , int item ) { cShopItem [ 0 ] = shopNamesArray [ item ] ; android.widget.Toast . makeText ( getApplicationContext () , ( ( "\u0422\u043e\u0440\u0433\u043e\u0432\u0430\u044f \u0442\u043e\u0447\u043a\u0430 \"" + ( storemanager.com.app.utils.Utils.cShops [ item ] ) ) + "\"" ) , Toast.LENGTH_SHORT ) . show () ; } 
public java.util.List < datastructs.graph.Node > getRightNodes () { java.util.List < datastructs.graph.Node > rightNodes = new java.util.ArrayList <> () ; for ( datastructs.graph.Edge e : adjacentEdges ) { if ( e . getLeft () . equals ( this ) ) { java.lang.System.out . println ( ( ( ( "Adding " + ( e . getRight () . getName () ) ) + " to right of " ) + ( name ) ) ) ; rightNodes . add ( e . getRight () ) ; } } return rightNodes ; } 
@ java.lang.Override public void onItemSelected ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { prefs . setLastCourseSelected ( position ) ; es.ugr.swad.swadroid.model.Course courseSelected = ( ( es.ugr.swad.swadroid.model.Course ) ( listCourses . get ( position ) ) ) ; courseCode = courseSelected . getId () ; es.ugr.swad.swadroid.Global . setSelectedCourseCode ( courseCode ) ; es.ugr.swad.swadroid.Global . setSelectedCourseShortName ( courseSelected . getShortName () ) ; es.ugr.swad.swadroid.Global . setSelectedCourseFullName ( courseSelected . getFullName () ) ; createMenu () ; } 
@ java.lang.Override public final java.util.Set < fr.uga.pddl4j.util.BitOp > getActionSet ( final int time ) { if ( this . isTimeSpecifierOutOfBound ( time ) ) { return java.util.Collections . emptySet () ; } java.util.Set < fr.uga.pddl4j.util.BitOp > ts = new java.util.HashSet <> () ; ts . add ( this . actions . get ( time ) ) ; return ts ; } 
@ java.lang.Override public boolean onSingleTapConfirmed ( android.view.MotionEvent e ) { final android.view.View childView = rv . findChildViewUnder ( e . getX () , e . getY () ) ; final int position = rv . getChildAdapterPosition ( childView ) ; onItemClick ( childView , position ) ; return true ; } 
@ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { com.jayfeng.androiddigest.webservices.json.ToolJson toolJson = listData . get ( position ) ; java.lang.String url = toolJson . getUrl () ; android.content.Intent intent = new android.content.Intent ( getActivity () , com.jayfeng.androiddigest.activity.WebViewActivity . class ) ; intent . putExtra ( WebViewActivity.KEY_URL , url ) ; startActivity ( intent ) ; } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { try { if ( which == ( android.app.AlertDialog.BUTTON_POSITIVE ) ) { setResult ( com.android.systemui.media.RESULT_OK , getMediaProjectionIntent ( mUid , mPackageName , mPermanentGrant ) ) ; } } catch ( android.os.RemoteException e ) { android.util.Log . e ( com.android.systemui.media.MediaProjectionPermissionActivity.TAG , "Error granting projection permission" , e ) ; setResult ( com.android.systemui.media.RESULT_CANCELED ) ; } finally { mDialog . dismiss () ; finish () ; } } 
public boolean getButtonPush ( int button ) { boolean returnValue ; boolean newState = super . getRawButton ( button ) ; if ( ( newState == true ) && ( newState != ( buttonState [ ( button - 1 ) ] ) ) ) { returnValue = true ; } else { returnValue = false ; } buttonState [ ( button - 1 ) ] = newState ; return returnValue ; } 
public void startTopologyService ( java.lang.String address , cartago.WorkspaceId wId , cartago.NodeId nId ) throws cartago.infrastructure.CartagoInfrastructureLayerException { if ( ( service ) != null ) { throw new cartago.infrastructure.CartagoInfrastructureLayerException () ; } try { cartago.topology.WorkspaceTree tree = new cartago.topology.WorkspaceTree () ; service = new cartago.infrastructure.rmi.topology.CartagoTreeRemote ( tree ) ; service . installTree ( address , wId , nId ) ; syncTrees ( tree , false , "" ) ; } catch ( java.lang.Exception ex ) { ex . printStackTrace () ; throw new cartago.infrastructure.CartagoInfrastructureLayerException () ; } } 
private void setDefaultAccess ( java.sql.Connection con ) throws de.uniba.kinf.projm.hylleblomst.exceptions.SetUpException { try { java.sql.PreparedStatement stmt ; stmt = con . prepareStatement ( "CALL SYSCS_UTIL.SYSCS_SET_DATABASE_PROPERTY('derby.database.defaultConnectionMode','readOnlyAccess')" ) ; stmt . executeUpdate () ; } catch ( java.sql.SQLException e ) { throw new de.uniba.kinf.projm.hylleblomst.exceptions.SetUpException ( ( ( ( e . getSQLState () ) + "\n" ) + ( e . getMessage () ) ) ) ; } } 
@ org.springframework.scheduling.annotation.Scheduled ( fixedDelay = 7200000 ) public void clearInvalidatedToken () { com.brewery.services.auth.token.job.ClearInvalidatedToken.LOGGER . info ( "Invalidate tokens Database cleaning started" ) ; java.util.List < com.brewery.admin.auth.InvalidToken > invalidTokens = adminUserDao . getInvalidatedTokens () ; for ( com.brewery.admin.auth.InvalidToken invalidToken : invalidTokens ) { java.lang.String token = invalidToken . getToken () ; if ( tokenService . isTokenExpired ( token ) ) { adminUserDao . removeInvalidatedToken ( invalidToken ) ; } } } 
@ org.jetbrains.annotations.NotNull private java.util.Map < org.apache.ignite.cluster.ClusterNode , java.lang.Integer [] > createBalanceMap ( java.util.List < org.apache.ignite.cluster.ClusterNode > nodes , int replicasCnt ) { java.util.Map < org.apache.ignite.cluster.ClusterNode , java.lang.Integer [] > balanceMap ; balanceMap = new java.util.HashMap <> () ; for ( org.apache.ignite.cluster.ClusterNode n : nodes ) { java.lang.Integer [] arr = new java.lang.Integer [ replicasCnt ] ; java.util.Arrays . fill ( arr , ( ( ( parts ) / ( nodes . size () ) ) + 1 ) ) ; balanceMap . put ( n , arr ) ; } return balanceMap ; } 
public void addPages () { if ( ( totalBookCount ) == 0 ) { listOfPages . clear () ; } else { int counter = ( ( ( totalBookCount ) % ( booksPerPage ) ) == 0 ) ? ( totalBookCount ) / ( booksPerPage ) : ( ( totalBookCount ) / ( booksPerPage ) ) + 1 ; listOfPages = new java.util.ArrayList () ; for ( int i = 1 ; i <= counter ; i ++ ) { listOfPages . add ( i ) ; } } } 
private void resolve_1_Enemies ( java.util.ArrayList < java.util.ArrayList < edu.chl.blastinthepast.utils.Collidable > > collision ) { for ( edu.chl.blastinthepast.utils.Collidable c : collision . get ( 0 ) ) { if ( c instanceof edu.chl.blastinthepast.utils.EnemyView ) { java.lang.System.out . println ( "collisionEVSE!!!" ) ; ( ( edu.chl.blastinthepast.utils.EnemyView ) ( c ) ) . setCollision () ; java.lang.System.out . println ( "setCollision" ) ; ( ( edu.chl.blastinthepast.utils.EnemyView ) ( c ) ) . update () ; java.lang.System.out . println ( "update_1" ) ; } } } 
@ java.lang.Override public org.springframework.security.core.Authentication attemptAuthentication ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws org.springframework.security.core.AuthenticationException { org.springframework.security.core.Authentication authentication = super . attemptAuthentication ( request , response ) ; java.util.Date now = new java.util.Date () ; com.example.model.UsersModel user = ( ( com.example.model.UsersModel ) ( authentication . getPrincipal () ) ) ; com.example.model.UsersModel usersModel = userRepository . findOne ( user . getName () ) ; usersModel . setLoginDate ( now ) ; userRepository . save ( usersModel ) ; return authentication ; } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; java.util.UUID crimeId = ( ( java.util.UUID ) ( getArguments () . getSerializable ( com.bignerdranch.android.criminalintent.CrimeFragment.ARG_CRIME_ID ) ) ) ; mCrime = com.bignerdranch.android.criminalintent.CrimeLab . get ( getActivity () ) . getCrime ( crimeId ) ; mPhotoFiles = com.bignerdranch.android.criminalintent.CrimeLab . get ( getActivity () ) . getPhotoFiles ( mCrime ) ; for ( int i = 0 ; i < ( mPhotoFiles . size () ) ; i ++ ) { java.lang.System.out . println ( mPhotoFiles . get ( i ) ) ; } } 
public void addItem ( com.terrain.block.BlockType block ) { com.blockhalde.gui.Item item = null ; for ( com.blockhalde.gui.Item itemtype : this . itemtypes ) { if ( ( itemtype.id ) == ( block . getBlockId () ) ) { item = itemtype ; } } if ( item != null ) { this . items . add ( item ) ; } if ( ( lst ) != null ) { lst . itemAdded ( this . items ) ; } } 
@ java.lang.Override public java.lang.Boolean scriptExists ( final java.lang.String sha1 , final java.lang.String key ) { return new redis.clients.jedis.JedisClusterCommand < java.lang.Boolean > ( connectionHandler , timeout , maxRedirections ) { @ java.lang.Override public java.lang.Boolean execute ( redis.clients.jedis.Jedis connection ) { return connection . scriptExists ( sha1 ) ; } } . run ( 1 , key ) ; } 
protected void initStudentLessonHistoryList () { recList = ( ( android.support.v7.widget.RecyclerView ) ( findViewById ( R.id.studentLessonHistoryList ) ) ) ; adapter = new com.example.shoomka.ejournal.adapter.RecyclerAdapter () ; llm = new android.support.v7.widget.LinearLayoutManager ( this ) ; llm . setOrientation ( LinearLayoutManager.VERTICAL ) ; recList . setAdapter ( adapter ) ; recList . setLayoutManager ( llm ) ; } 
@ org.expath.ns.Test public void touches () { org.expath.ns.GeoTest . run ( ( "geo:touches(<gml:MultiLineString><gml:LineString><gml:coordinates>" + ( ( ( "1,1 0,0 2,1</gml:coordinates></gml:LineString><gml:LineString>" + "<gml:coordinates>2,1 3,3 4,4</gml:coordinates></gml:LineString>" ) + "</gml:MultiLineString>, <gml:LineString><gml:coordinates>0,0 2,1 3,3" ) + "</gml:coordinates></gml:LineString>)" ) ) , "false" ) ; org.expath.ns.GeoTest . error ( "geo:touches(a, text {'a'})" , org.expath.ns.NOCTX_X . qname () ) ; org.expath.ns.GeoTest . error ( ( "geo:touches(<gml:Point><gml:coordinates>10,10 12,11</gml:coordinates>" + ( "</gml:Point>, <gml:LinearRing><gml:coordinates>1,1 2,1 5,3 1,1" + "</gml:coordinates></gml:LinearRing>)" ) ) , org.expath.ns.GeoErrors . qname ( 2 ) ) ; org.expath.ns.GeoTest . error ( ( "geo:touches(<gml:Point><gml:coordinates>1,1</gml:coordinates>" + ( "</gml:Point>, <gml:Line><gml:coordinates>0,0 2,1 3,3" + "</gml:coordinates></gml:Line>)" ) ) , org.expath.ns.GeoErrors . qname ( 1 ) ) ; } 
public void redrawEventListFragment ( sk.henrichg.phoneprofilesplus.Event event , int newEventMode , int predefinedEventIndex ) { sk.henrichg.phoneprofilesplus.EditorEventListFragment fragment = ( ( sk.henrichg.phoneprofilesplus.EditorEventListFragment ) ( getFragmentManager () . findFragmentById ( R.id.editor_list_container ) ) ) ; if ( fragment != null ) { fragment.dataWrapper . updateEvent ( event ) ; boolean newEvent = ( newEventMode == ( EditorEventListFragment.EDIT_MODE_INSERT ) ) || ( newEventMode == ( EditorEventListFragment.EDIT_MODE_DUPLICATE ) ) ; fragment . updateListView ( event , newEvent , false ) ; } redrawEventPreferences ( event , newEventMode , predefinedEventIndex ) ; } 
@ java.lang.Override protected void publishResults ( java.lang.CharSequence charSequence , cn.ieclipse.af.adapter.FilterResults filterResults ) { java.util.List < T > list = ( ( java.util.List < T > ) ( filterResults.values ) ) ; if ( ( baseAdapter ) != null ) { baseAdapter . setDataList ( list ) ; baseAdapter . notifyDataSetChanged () ; } if ( ( recyclerAdapter ) != null ) { recyclerAdapter . setDataList ( list ) ; } } 
public void sendQueryAbortion ( int queryID ) { java.nio.ByteBuffer message = java.nio.ByteBuffer . allocate ( ( ( java.lang.Byte.BYTES ) + ( java.lang.Integer.BYTES ) ) ) ; message . put ( MessageType.QUERY_ABORTION . getValue () ) . putInt ( queryID ) ; messageSender . sendToAllSlaves ( message . array () ) ; if ( ( measurementCollector ) != null ) { measureSentMessages ( queryID ) ; } } 
public boolean checkUser ( java.lang.String email , java.lang.String password ) throws java.sql.SQLException { java.lang.String query = "SELECT passwordhash" + ( ( " FROM users" + " WHERE email=?" ) + " LIMIT 1" ) ; java.sql.PreparedStatement stmt = conn . prepareStatement ( query ) ; stmt . setString ( 1 , email ) ; java.sql.ResultSet result = stmt . executeQuery () ; if ( ( result . getFetchSize () ) != 1 ) { return false ; } result . next () ; java.lang.String hashedPassword = result . getString ( "passwordhash" ) ; return org.mindrot.BCrypt . checkpw ( password , hashedPassword ) ; } 
private int rotatePlayerIndex ( int currIndex , boolean mustBeActive ) { int newIndex = incrementCounterModPlayers ( currIndex ) ; edu.jhu.clueless.Player nextPlayer = players . get ( edu.jhu.clueless.Game.SUSPECT_ORDER [ newIndex ] ) ; while ( ( nextPlayer == null ) || ( mustBeActive && ( ! ( nextPlayer . isActive () ) ) ) ) { newIndex = incrementCounterModPlayers ( newIndex ) ; nextPlayer = players . get ( edu.jhu.clueless.Game.SUSPECT_ORDER [ newIndex ] ) ; } return newIndex ; } 
private boolean securityEntryCheck ( net.tomp2p.peers.Number480 key , java.security.PublicKey publicKeyMessage , java.security.PublicKey publicKeyData , boolean entryProtection ) { boolean entryProtectedByOthers = backend . isEntryProtectedByOthers ( key , publicKeyMessage ) ; if ( ! entryProtection ) { return ! entryProtectedByOthers ; } else { if ( canClaimEntry ( key , publicKeyMessage ) ) { if ( canProtectEntry ( key . domainKey () , publicKeyMessage ) ) { return backend . protectEntry ( key , publicKeyData ) ; } else { return true ; } } } return false ; } 
public void playerStop () { if ( ( ( mPlayer ) != null ) && ( mPlayer . isPlaying () ) ) { mPlayer . release () ; mHandler . removeCallbacks ( mHighlightTask ) ; if ( ( mTextToSpeech ) != null ) { mTextToSpeech . stop () ; mTextToSpeech . shutdown () ; } } } 
private void init () { setGravity ( Gravity.CENTER ) ; setDrawingCacheEnabled ( true ) ; mPaint = new android.graphics.Paint () ; mPaint . setAntiAlias ( true ) ; mPaint . setColor ( mCircleColor ) ; mPaint . setStyle ( Paint.Style.FILL ) ; mBgCircle = new com.lsxiao.library.Circle ( mRadius , mRadius , mRadius ) ; mOnDotStateChangedListener = new com.lsxiao.library.DotView.SimpleDotStateChangedListener () ; } 
private void showError ( int code ) { setSwipeRefreshLayoutState ( true , false ) ; showVehicleList ( false ) ; switch ( code ) { case io.levelsoftware.carculator.sync.BaseIntentService.STATUS_ERROR_NO_NETWORK : showErrorSnackbar ( R.string.error_no_network , false ) ; showStatusImage ( R.drawable.ic_logo_no_network ) ; break; case io.levelsoftware.carculator.sync.BaseIntentService.STATUS_ERROR_NETWORK_ISSUE : showErrorSnackbar ( R.string.error_network_error , true ) ; showStatusImage ( R.drawable.ic_logo_no_network ) ; break; default: showErrorSnackbar ( R.string.error_data , true ) ; showStatusImage ( R.drawable.ic_logo_error ) ; } } 
public static com.github.yoojia.inputs.Schema RangeValue ( final long min , final long max ) { return com.github.yoojia.inputs.ValueSchema . ABTest ( new com.github.yoojia.inputs.RangeValueBridge ( max , max ) ) . msg ( ( ( ( ( "输入数值大小必须在[" + min ) + "," ) + max ) + "]之间" ) ) ; } 
@ java.lang.Override public java.io.InputStream getResourceAsStream ( java.lang.String path ) { java.lang.String validatedPath = validateResourcePath ( path ) ; if ( validatedPath == null ) { return null ; } org.apache.catalina.WebResourceRoot resources = context . getResources () ; if ( resources != null ) { return resources . getResource ( validatedPath ) . getInputStream () ; } return null ; } 
public void testDecrementExactLong () { for ( long a : com.google.gwt.emultest.java.lang.MathTest.ALL_LONG_CANDIDATES ) { java.math.BigInteger expectedResult = java.math.BigInteger . valueOf ( a ) . subtract ( java.math.BigInteger.ONE ) ; boolean expectedSuccess = com.google.gwt.emultest.java.lang.MathTest . fitsInLong ( expectedResult ) ; try { assertEquals ( ( a - 1 ) , java.lang.Math . decrementExact ( a ) ) ; assertTrue ( expectedSuccess ) ; } catch ( java.lang.ArithmeticException e ) { assertFalse ( expectedSuccess ) ; } } } 
public void update_stats ( boolean win , int new_standing ) { int diff = ( standing ) - new_standing ; update_change ( diff ) ; standing = new_standing ; if ( win ) { ( streak ) ++ ; ( wins ) ++ ; } else { streak = 0 ; ( losses ) ++ ; } } 
private boolean setupGameTiles () { final java.util.ArrayList < java.io.File > bitmapFiles = new java.util.ArrayList <> () ; bitmapFiles . addAll ( cw.kop.autobackground.files.FileHandler . getBitmapList () ) ; if ( ( bitmapFiles . size () ) >= ( cw.kop.autobackground.LiveWallpaperService.NUM_TO_WIN ) ) { java.util.Collections . shuffle ( bitmapFiles ) ; for ( android.graphics.Bitmap bitmap : tileBitmaps ) { try { bitmap . recycle () ; } catch ( java.lang.Exception e ) {} } tileBitmaps . clear () ; startLoadImageThreads ( bitmapFiles ) ; return true ; } return false ; } 
public recurrentNeuralNetwork.lstmNetwork.Network makeLSTM ( int inputAmount , int hiddenAmount , int hiddenLayers , int outputAmount ) { layers = new java.util.ArrayList <> () ; for ( int i = 0 ; i < hiddenLayers ; i ++ ) { if ( i == 0 ) layers . add ( new recurrentNeuralNetwork.lstmNetwork.Layer ( inputAmount , hiddenAmount , outputAmount ) ) ; else layers . add ( new recurrentNeuralNetwork.lstmNetwork.Layer ( hiddenAmount , hiddenAmount , outputAmount ) ) ; } return new recurrentNeuralNetwork.lstmNetwork.Network ( layers ) ; } 
@ java.lang.Override public void writeToParcel ( android.os.Parcel dest , int flags ) { dest . writeString ( name ) ; dest . writeInt ( weight ) ; dest . writeInt ( actualMod ) ; dest . writeInt ( maxMod ) ; dest . writeString ( special ) ; dest . writeInt ( damage ) ; dest . writeInt ( critic ) ; dest . writeString ( range ) ; dest . writeParcelable ( skill , 0 ) ; } 
public void notifyAllObservers ( org.md2k.datakitapi.datatype.DataType dataType ) { if ( ( databaseSubscriber ) != null ) databaseSubscriber . update ( ds_id , dataType ) ; for ( org.md2k.datakit.datarouter.MessageSubscriber subscriber : messageSubscribers ) { if ( ! ( subscriber . update ( dataType ) ) ) messageSubscribers . remove ( subscriber ) ; } } 
@ java.lang.Override public com.stacksync.commons.models.SharingProposal findByKey ( java.util.UUID key ) throws com.stacksync.syncservice.exceptions.dao.DAOException { java.sql.ResultSet resultSet = null ; com.stacksync.commons.models.SharingProposal sharingProposal = null ; java.lang.String query = "SELECT * FROM cloudspaces_sharing_proposal WHERE key = ?" ; try { resultSet = executeQuery ( query , new java.lang.Object [] { key } ) ; if ( resultSet . next () ) { sharingProposal = com.stacksync.syncservice.db.DAOUtil . getSharingProposalFromResultSet ( resultSet ) ; } } catch ( java.sql.SQLException e ) { com.stacksync.syncservice.db.postgresql.PostgresqlSharingProposalDAO.logger . error ( e ) ; throw new com.stacksync.syncservice.exceptions.dao.DAOException ( com.stacksync.syncservice.db.DAOError.INTERNAL_SERVER_ERROR ) ; } return sharingProposal ; } 
@ java.lang.Override public void close ( ) throws java.io.IOException { if ( ( ( connectionManager ) != null ) && ( connectionConfig . shouldCloseIdleConnectionsAfterEachResponse () ) ) { connectionManager . closeIdleConnections ( connectionConfig . closeIdleConnectionConfig () . getIdleTime () , connectionConfig . closeIdleConnectionConfig () . getTimeUnit () ) ; } wrapped . close () ; } 
private int calculatePoints ( int scoringMethod ) { java.lang.Integer [] set = new java.lang.Integer [ getAllSelectedDiceValues () . size () ] ; for ( int i = 0 ; i < ( set.length ) ; i ++ ) { set [ i ] = getAllSelectedDiceValues () . get ( i ) . intValue () ; } com.jesperblidkvist.android.thirty.model.SetHelper scoring = new com.jesperblidkvist.android.thirty.model.SetHelper () ; return scoring . getCombinations ( set , scoringMethod ) ; } 
@ java.lang.Override public void onGroupExpand ( int groupPosition ) { onGroupClicked = false ; if ( ( ( lastExpandedPosition ) != ( - 1 ) ) && ( groupPosition != ( lastExpandedPosition ) ) ) { lv . collapseGroup ( lastExpandedPosition ) ; onGroupClicked = true ; } lastExpandedPosition = groupPosition ; selectTour ( tourlist . city ( visibleCity ) . tours () . get ( groupPosition ) ) ; com.uni_wuppertal.iad.vierteltour.ui.map.MapsActivity.adapter . notifyDataSetChanged () ; drawRoutes () ; } 
public void deploySlug ( java.lang.String slugFilename , java.util.Map < java.lang.String , java.lang.String > processTypes , java.util.Map < java.lang.String , java.lang.String > configVars , java.lang.String stack ) throws java.lang.Exception { com.heroku.sdk.deploy.SlugDeployer slugDeployer = new com.heroku.sdk.deploy.SlugDeployer ( deployer . getBuildPackDesc () , name , getRootDir () , deployer . getTargetDir () , this ) ; slugDeployer . deploySlug ( slugFilename , processTypes , configVars , stack ) ; } 
@ java.lang.Override protected java.lang.String getStartDate ( org.w3c.dom.Node currentEvent ) { java.util.ArrayList < java.lang.String > time = new java.util.ArrayList < java.lang.String > () ; for ( java.lang.String s : myTime ) time . add ( getTagValue ( currentEvent , ( ( "start/" + s ) + "/text()" ) ) ) ; return format ( time ) ; } 
public void exportModelBinary ( java.io.File path , modelcutter.Model model ) { eu.printingin3d.javascad.vrl.export.StlBinaryFile writer = new eu.printingin3d.javascad.vrl.export.StlBinaryFile ( path ) ; try { writer . writeToFile ( this . facetTransformerToSCAD () ) ; } catch ( java.io.IOException ex ) { java.util.logging.Logger . getLogger ( modelcutter.ModelManagerImpl . class . getName () ) . log ( java.util.logging.Level.SEVERE , null , ex ) ; } } 
@ java.lang.Override protected void startAlarm () { if ( chisw.com.dayit.utils.ValidData . isTextValid ( mTextContact . getText () . toString () ) ) { try { writePlanToDB ( mMyLovelyCalendar ) ; sendRemotePlan () ; } catch ( java.lang.Exception ex ) { return; } super . startAlarm () ; } else { showToast ( "Please, choose a contact person" ) ; } } 
private boolean canReplaceBlock ( net.minecraft.world.World world , net.minecraft.entity.player.EntityPlayer player , net.minecraft.item.ItemStack stack , fi.dy.masa.enderutilities.util.BlockPosStateDist posIn ) { return ( ( fi.dy.masa.enderutilities.item.ItemBuildersWand . hasEnoughCharge ( stack , player ) ) && ( fi.dy.masa.enderutilities.item.ItemBuildersWand . canManipulateBlock ( world , posIn . toBlockPos () , player , stack , true ) ) ) && ( ( player.capabilities.isCreativeMode ) || ( ( fi.dy.masa.enderutilities.item.ItemBuildersWand . getAndConsumeBuildItem ( stack , player , posIn.blockInfo.blockState , true ) ) != null ) ) ; } 
public boolean existElement ( org.shaolin.uimaster.page.ajax.Widget comp ) { java.lang.String frameName = comp . getFrameInfo () ; if ( frameName == null ) { return false ; } java.util.Map map = getFrameComponentMap ( frameName ) ; return ( map . containsKey ( comp . getId () ) ) && ( comp == ( map . get ( comp . getId () ) ) ) ; } 
public void insert ( HuffmanNode n ) { for ( int i = 0 ; i < ( list . size () ) ; i ++ ) { if ( ( list . get ( i ) . getFrequency () ) >= ( n . getFrequency () ) ) { list . add ( i , n ) ; } } } 
@ java.lang.Override public void visit ( final com.github.javaparser.ast.visitor.UnionType n , final java.lang.Object arg ) { printJavaComment ( n . getComment () , arg ) ; boolean isFirst = true ; for ( com.github.javaparser.ast.visitor.ReferenceType element : n . getElements () ) { element . accept ( this , arg ) ; if ( isFirst ) { isFirst = false ; } else { printer . print ( " | " ) ; } } } 
private void remove_np_name ( java.lang.String given ) { for ( int i = 0 ; i < ( not_patterns . size () ) ; i ++ ) { if ( ( not_patterns . get ( i ) ) == given ) { not_patterns . remove ( i ) ; } } } 
@ java.lang.Override public boolean equals ( final java.lang.Object obj ) { if ( ( this ) == obj ) return true ; else if ( obj instanceof com.leviathanstudio.mineide.model.base.BaseDataContent ) { com.leviathanstudio.mineide.model.base.BaseDataContent armor = ( ( com.leviathanstudio.mineide.model.base.BaseDataContent ) ( obj ) ) ; this . data . equals ( armor.data ) ; } return false ; } 
public static com.github.javaparser.ast.CompilationUnit parse ( final java.io.Reader reader , boolean considerComments ) throws com.github.javaparser.ParseException { try { java.lang.String comments = com.github.javaparser.SourcesHelper . readerToString ( reader ) ; com.github.javaparser.ast.CompilationUnit cu = new com.github.javaparser.InstanceJavaParser ( reader ) . parse () ; if ( considerComments ) { com.github.javaparser.JavaParser.commentsInserter . insertComments ( cu , comments ) ; } return cu ; } catch ( java.io.IOException ioe ) { throw new com.github.javaparser.ParseException ( ioe . getMessage () ) ; } } 
@ org.junit.Test public void testOverflow2 ( ) throws java.lang.InterruptedException , java.util.concurrent.ExecutionException , org.spf4j.zel.vm.CompileException { org.spf4j.zel.vm.Program p = org.spf4j.zel.vm.Program . compile ( ( ( ( "" + ( java.lang.Long.MIN_VALUE ) ) + " - " ) + 1 ) ) ; java.lang.System.out . println ( p ) ; java.math.BigInteger result = ( ( java.math.BigInteger ) ( p . execute () ) ) ; org.junit.Assert . assertEquals ( java.math.BigInteger . valueOf ( java.lang.Long . valueOf ( java.lang.Long.MIN_VALUE ) ) . subtract ( java.math.BigInteger.ONE ) , result ) ; } 
private void triggerDatabaseEvent ( boolean availableOnly ) { if ( ( ( ( activeActivity ) != null ) && ( ( activeActivity ) == ( databaseListenerActivity ) ) ) && ( ( activeActivity ) instanceof org.opendatakit.common.android.listener.DatabaseConnectionListener ) ) { if ( ( ! availableOnly ) && ( ( this . getDatabase () ) == null ) ) { ( ( org.opendatakit.common.android.listener.DatabaseConnectionListener ) ( activeActivity ) ) . databaseUnavailable () ; } else { ( ( org.opendatakit.common.android.listener.DatabaseConnectionListener ) ( activeActivity ) ) . databaseAvailable () ; } } } 
@ java.lang.Override public void onDrawEye ( dat367.falling.Eye eye ) { Gdx.gl . glEnable ( GL20.GL_DEPTH_TEST ) ; Gdx.gl . glClear ( ( ( com.badlogic.gdx.graphics.GL20.GL_COLOR_BUFFER_BIT ) | ( com.badlogic.gdx.graphics.GL20.GL_DEPTH_BUFFER_BIT ) ) ) ; cardboardCamera . setEyeViewAdjustMatrix ( new com.badlogic.gdx.math.Matrix4 ( eye . getEyeView () ) ) ; float [] perspective = eye . getPerspective ( dat367.falling.GdxPlatformLayer.Z_NEAR , dat367.falling.GdxPlatformLayer.Z_FAR ) ; cardboardCamera . setEyeProjection ( new com.badlogic.gdx.math.Matrix4 ( perspective ) ) ; cardboardCamera . update () ; renderScene ( cardboardCamera ) ; dat367.falling.RenderQueue . reloadQueue () ; } 
@ java.lang.Override public T convert ( okhttp3.ResponseBody value ) throws java.io.IOException { try { java.io.InputStream in = value . byteStream () ; java.lang.Class < T > c = ( ( java.lang.Class < T > ) ( type ) ) ; return factory . deserialize ( in , c , false ) ; } catch ( java.lang.Exception e ) { throw new java.lang.RuntimeException ( e ) ; } } 
@ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { if ( isCheckMode () ) { mImageAdapter . checkId ( id ) ; } if ( ( mCheckListener ) != null ) { mCheckListener . onCheckStateChanged ( mImageAdapter . getCheckedImageList () . size () ) ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_menu ) ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; android.support.design.widget.FloatingActionButton fab = ( ( android.support.design.widget.FloatingActionButton ) ( findViewById ( R.id.fab ) ) ) ; fab . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View view ) { android.support.design.widget.Snackbar . make ( view , "Replace with your own action" , Snackbar.LENGTH_LONG ) . setAction ( "Action" , null ) . show () ; } } ) ; } 
private void activateProject ( java.lang.String projectName , de.espirit.firstspirit.access.project.Project project ) { if ( project != null ) { throw new java.lang.IllegalArgumentException ( "Project for activation is null" ) ; } if ( ! ( project . isActive () ) ) { com.espirit.moddev.cli.CliContextImpl.LOGGER . warn ( "Project '{}' is not active! Try to activate..." , projectName ) ; de.espirit.firstspirit.access.UserService userService = project . getUserService () ; de.espirit.firstspirit.access.AdminService adminService = userService . getConnection () . getService ( de.espirit.firstspirit.access.AdminService . class ) ; adminService . getProjectStorage () . activateProject ( project ) ; } else { com.espirit.moddev.cli.CliContextImpl.LOGGER . debug ( "Project '{}' is already active! No need to activate..." , projectName ) ; } } 
public Node nodeAt ( int x , int y ) { java.lang.String s = coordString ( x , y ) ; if ( node_map . containsKey ( s ) ) { Node n = node_map . get ( s ) ; if ( ( ( n . getX () ) == x ) && ( ( n . getY () ) == y ) ) return n ; } return null ; } 
private void assureChecked ( final org.deidentifier.arx.framework.lattice.Transformation transformation ) { if ( ! ( transformation . hasProperty ( propertyChecked ) ) ) { transformation . setChecked ( checker . check ( transformation , true ) ) ; trackOptimum ( transformation ) ; listener . progress ( ( ( ( double ) ( ( java.lang.System . currentTimeMillis () ) - ( timeStart ) ) ) / ( ( double ) ( timeLimit ) ) ) ) ; } } 
@ java.lang.Override public int match ( com.shieldsbetter.flexcompilator.ParseHead h ) throws com.shieldsbetter.flexcompilator.NoMatchException , com.shieldsbetter.flexcompilator.WellFormednessException { before ( h ) ; try { int result = h . advanceOver ( myBase ) ; onMatched ( h ) ; } catch ( com.shieldsbetter.flexcompilator.NoMatchException nme ) { onFailed ( h ) ; throw nme ; } return result ; } 
protected java.lang.String getExecutionTime ( de.metanome.backend.results_db.Execution execution ) { long time = ( execution . getEnd () ) - ( execution . getBegin () ) ; com.google.gwt.i18n.client.DateTimeFormat format = com.google.gwt.i18n.client.DateTimeFormat . getFormat ( "HH:mm:ss.SSS" ) ; java.util.Date date = new java.util.Date ( java.lang.Math . round ( ( time / 1000000.0 ) ) ) ; return format . format ( date , com.google.gwt.i18n.client.TimeZone . createTimeZone ( 0 ) ) ; } 
private void uploadNextPost () { synchronized ( org.wordpress.android.ui.posts.PostUploadService.mPostsList ) { if ( ( mCurrentTask ) == null ) { org.wordpress.android.ui.posts.PostUploadService.mCurrentUploadingPost = null ; if ( ( org.wordpress.android.ui.posts.PostUploadService.mPostsList . size () ) > 0 ) { org.wordpress.android.ui.posts.PostUploadService.mCurrentUploadingPost = org.wordpress.android.ui.posts.PostUploadService.mPostsList . remove ( 0 ) ; mCurrentTask = new org.wordpress.android.ui.posts.PostUploadService.UploadPostTask () ; mCurrentTask . execute ( org.wordpress.android.ui.posts.PostUploadService.mCurrentUploadingPost ) ; } else { this . stopSelf () ; } } } } 
@ java.lang.Override public void clear () { this . fireInvalidationListeners () ; java.util.List < T > old = null ; if ( ! ( this . valueChangeListeners . isEmpty () ) ) old = com.google.common.collect.Lists . newArrayList ( this . value ) ; this . value . clear () ; this . fireChangeListeners ( old , this . value ) ; } 
@ java.lang.Override public void onModuleLoad () { com.vaadin.elements.grid.GridEntryPoint . checkPermutation ( java.lang.System . getProperty ( "user.agent" ) ) ; com.google.gwt.core.client.Scheduler . get () . scheduleDeferred ( new com.google.gwt.core.client.Scheduler.ScheduledCommand () { @ java.lang.Override public void execute () { com.google.gwt.user.client.ui.RootPanel . get () . removeStyleName ( com.vaadin.client.BrowserInfo . get () . getCSSClass () ) ; } } ) ; com.vaadin.elements.grid.GridEntryPoint . removePrivateApi () ; } 
public void removeContainer ( final java.lang.String containerId , final boolean removeRunning ) throws com.spotify.docker.client.DockerException { java.util.concurrent.Callable < java.lang.Void > callable = new java.util.concurrent.Callable < java.lang.Void > () { @ java.lang.Override public java.lang.Void call ( ) throws java.lang.Exception { dockerClient . removeContainer ( containerId , removeRunning ) ; return null ; } } ; try { callWithTimeout ( callable ) ; } catch ( java.lang.Exception e ) { com.hubspot.singularity.executor.utils.DockerUtils.LOG . error ( "Caught exception attempting to stop container" , e ) ; throw new com.spotify.docker.client.DockerException ( e ) ; } } 
@ java.lang.Override public void run () { org.vanilladb.core.storage.tx.Transaction tx = org.vanilladb.core.server.VanillaDb . txMgr () . newTransaction ( java.sql.Connection.TRANSACTION_SERIALIZABLE , false , 3 ) ; org.elasql.cache.CachedRecord record = localStorage . read ( commonKey , 3 , tx ) ; record . setVal ( "tvalue" , new org.vanilladb.core.sql.IntegerConstant ( 20001 ) ) ; localStorage . writeBack ( commonKey , 3 , record , tx ) ; } 
private boolean validateIdentityData ( java.lang.String fanExternalName , java.lang.String fanPassWord , byte [] fanImageBytes , com.bitdubai.fermat_art_api.all_definition.enums.ArtExternalPlatform externalPlatform ) { if ( fanExternalName . isEmpty () ) return false ; if ( fanPassWord . isEmpty () ) return false ; if ( fanImageBytes == null ) return false ; if ( ( fanImageBytes.length ) > 0 ) return true ; return true ; } 
private void actOnIncoming ( java.lang.String key , java.lang.String value ) { if ( ( value . length () ) == 0 ) { java.lang.String valueToSend = basestation.BaseStation . getInstance () . getBotManager () . getBotExchange ( key ) ; java.lang.System.out . println ( ( "valueToSend: " + valueToSend ) ) ; tcpConnection . sendKV ( key , valueToSend ) ; } else { java.lang.System.out . println ( ( ( ( "key: " + key ) + ", value: " ) + value ) ) ; basestation.BaseStation . getInstance () . getBotManager () . setBotExchangeMap ( key , value ) ; } } 
@ org.springframework.web.bind.annotation.GetMapping ( value = "/showAllPictures" ) public java.lang.String showAll ( org.springframework.ui.Model model ) { model . addAttribute ( "pictures" , pictureService . findAll () ) ; model . addAttribute ( "postMode" , "/showPicturesByAuthor" ) ; model . addAttribute ( "selectText" , "Picture List" ) ; model . addAttribute ( "onClickSelect" , "" ) ; model . addAttribute ( "backPage" , "location.href='/'" ) ; model . addAttribute ( "mostraAzioni" , true ) ; return "allPictures" ; } 
@ java.lang.Override public java.lang.String toString () { return ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( "Competition [id=" + ( id ) ) + ", caption=" ) + ( caption ) ) + ", league=" ) + ( league ) ) + ", year=" ) + ( year ) ) + ", currentMatchday=" ) + ( currentMatchday ) ) + ", numberOfMatchdays=" ) + ( numberOfMatchdays ) ) + ", numberOfTeams=" ) + ( numberOfTeams ) ) + ", numberOfGames=" ) + ( numberOfGames ) ) + ", lastUpdated=" ) + ( lastUpdated ) ) + "]" ; } 
private void encodeMatrices ( org.json.JSONObject obj , java.lang.String key , java.util.List < float [] > payload ) throws org.json.JSONException { org.json.JSONArray arr = new org.json.JSONArray () ; for ( float [] payloadMat : payload ) { arr . put ( new org.json.JSONArray ( payloadMat ) ) ; } obj . put ( key , arr ) ; } 
@ java.lang.Override public int changeStatus () { if ( ( this . health ) <= 0 ) { this . status = 0 ; } else if ( ( this . toxic ) == true ) { this . status = 3 ; changeToxicStatus () ; } else if ( ( this . alcoholLevel ) > 0 ) { this . status = 2 ; } else if ( ( this . health ) == 0 ) { this . status = 1 ; } return this . status ; } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { int id = item . getItemId () ; if ( id == ( R.id.action_settings ) ) { return true ; } else if ( id == ( R.id.playlist_item ) ) { com.kaidoh.mayuukhvarshney.gearjam.PlayListFragment fragobj = new com.kaidoh.mayuukhvarshney.gearjam.PlayListFragment () ; android.support.v4.app.FragmentTransaction ft = getSupportFragmentManager () . beginTransaction () ; ft . replace ( R.id.FragmentContainer , fragobj ) ; ft . addToBackStack ( null ) ; ft . commit () ; } return super . onOptionsItemSelected ( item ) ; } 
public boolean deleteByAlias ( java.lang.String alias ) { if ( aliasExists ( alias ) ) { synchronized ( this ) { for ( org.tevya.model.LinkDefinition ld : currentLinkDefinitions.definitions ) { if ( ld . getAlias () . equals ( alias ) ) { currentLinkDefinitions.definitions . remove ( ld ) ; break; } } try { initialize () ; } catch ( java.lang.Exception e ) { org.tevya.repo.LinkDefinitionFlatFileRepository.logger . warning ( java.lang.String . format ( "Reinitialization failed: %s" , e ) ) ; } } return true ; } return false ; } 
@ java.lang.Override public fr.gwombat.predicadmin.web.vo.ContactDetailVO toViewObject ( final fr.gwombat.predicadmin.model.ContactDetail contactDetail ) { if ( contactDetail != null ) { fr.gwombat.predicadmin.web.vo.builder.ContactDetailVoBuilder builder = fr.gwombat.predicadmin.web.vo.builder.ContactDetailVoBuilder . begin () . email ( contactDetail . getEmail () ) . mobilePhone ( fr.gwombat.predicadmin.web.transformer.ContactDetailTransformer . formatPhoneNumber ( contactDetail . getMobilePhone () ) ) . phone ( fr.gwombat.predicadmin.web.transformer.ContactDetailTransformer . formatPhoneNumber ( contactDetail . getPhone () ) ) ; return builder . build () ; } return null ; } 
public void deleteHobby ( java.lang.String name ) { javax.persistence.EntityManager em = getEntityManager () ; try { em . getTransaction () . begin () ; em . remove ( getHobby ( name ) ) ; em . getTransaction () . commit () ; } finally { em . close () ; } } 
@ java.lang.Override protected void onPostExecute ( java.lang.Boolean isVarsityPlayer ) { if ( isVarsityPlayer ) { showVerifyVarsityPlayerDialog ( playerProfile ) ; } else { finish () ; android.content.Intent intent = new android.content.Intent ( this , com.peprally.jeremy.peprally.activities.HomeActivity . class ) ; intent . putExtra ( "NICKNAME" , userNickname ) ; startActivity ( intent ) ; overridePendingTransition ( R.anim.bottom_in , R.anim.top_out ) ; } } 
public java.util.ArrayList < com.nucc.hackwinds.types.Condition > getConditionsForIndex ( int index ) { if ( ( mRawData ) == null ) { loadRawData () ; } else if ( mRawData . isEmpty () ) { loadRawData () ; } if ( conditions . isEmpty () ) { parseForecasts () ; } java.util.ArrayList < com.nucc.hackwinds.types.Condition > dayConditions = new java.util.ArrayList ( conditions . subList ( ( index * 6 ) , 6 ) ) ; return dayConditions ; } 
@ org.junit.Test public void shouldReturnUserListBecauseUsersExistsInDatabase ( ) throws com.rsternal.mhbl.dao.exceptions.DaoDataNotFoundException , com.rsternal.mhbl.main.service.exceptions.ServiceDataNotFoundException { java.util.List < com.rsternal.mhbl.dao.model.UserEntity > users = new java.util.ArrayList <> () ; users . add ( new com.rsternal.mhbl.dao.model.UserEntity () ) ; users . add ( new com.rsternal.mhbl.dao.model.UserEntity () ) ; org.mockito.Mockito . when ( dao . findAll () ) . thenReturn ( users ) ; java.util.List < dao.model.security.User > foundUsers = service . findAll () ; org.mockito.Mockito . verify ( dao ) . findAll () ; org.junit.Assert . assertEquals ( foundUsers . size () , 2 ) ; } 
@ org.junit.Test public void testProcessesListCorrectly () { org.springframework.data.solr.core.convert.ITestMappingSolrConverter.BeanWithList bean = new org.springframework.data.solr.core.convert.ITestMappingSolrConverter.BeanWithList () ; bean.id = DEFAULT_BEAN_ID ; bean.categories = java.util.Arrays . asList ( "spring" , "data" , "solr" ) ; org.springframework.data.solr.core.convert.ITestMappingSolrConverter.BeanWithList loaded = saveAndLoad ( bean ) ; org.junit.Assert . assertThat ( loaded.categories , org.hamcrest.core.IsEqual . equalTo ( bean.categories ) ) ; } 
@ Test public void testGetScoreLessThan23 () { DiceGame game = new DiceGame () ; try { int total = game . roll ( 3 ) ; int score = 23 - total ; assertEquals ( score , game . getScore () ) ; } catch ( RollAfterGameOverException e ) { fail () ; } } 
@ java.lang.Override public org.openflexo.swing.LookAndFeel getLookAndFeel () { org.openflexo.foundation.FlexoProperty p = assertProperty ( ( ( org.openflexo.toolbox.ToolBox . getPLATFORM () ) + ( org.openflexo.prefs.PresentationPreferences.LOOK_AND_FEEL ) ) ) ; java.lang.String returned = p . getValue () ; if ( returned == null ) { p = assertProperty ( org.openflexo.prefs.PresentationPreferences.LOOK_AND_FEEL ) ; returned = p . getValue () ; } if ( returned == null ) { returned = javax.swing.UIManager . getSystemLookAndFeelClassName () ; } return LAF_CONVERTER . convertFromString ( returned , null ) ; } 
@ org.junit.Test public void testElements () { java.util.concurrent.ConcurrentHashMap < java.lang.Integer , java.lang.Integer > map = createResizedDS () ; java.util.List < java.lang.Integer > enumerated = java.util.Collections . list ( map . elements () ) ; org.junit.Assert . assertNotEquals ( "You are likely running an unchanged JVM" , "{0, 2, 3, 4, 5, 6, 7, 8, 9}" , enumerated . toString () ) ; assertEqualstUnordered ( "The collection does not containt the elements asserted" , "{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}" , enumerated . toString () ) ; } 
public static void run ( org.matsim.api.core.v01.network.Network network ) { { org.matsim.api.core.v01.Id < org.matsim.api.core.v01.network.Link > linkId = org.matsim.api.core.v01.Id . createLinkId ( "1538010000" ) ; org.matsim.api.core.v01.Id < org.matsim.api.core.v01.network.Link > reverseLinkId = org.matsim.api.core.v01.Id . createLinkId ( "15380" ) ; network . removeLink ( linkId ) ; network . removeLink ( reverseLinkId ) ; } { org.matsim.api.core.v01.Id < org.matsim.api.core.v01.network.Link > linkId = org.matsim.api.core.v01.Id . createLinkId ( "1572810000-1573110000-1573810000-15737-1572510000-1574810000-1574310000" ) ; org.matsim.api.core.v01.Id < org.matsim.api.core.v01.network.Link > reverseLinkId = org.matsim.api.core.v01.Id . createLinkId ( "15743-15748-15725-1573710000-15738-15731-15728" ) ; network . removeLink ( linkId ) ; network . removeLink ( reverseLinkId ) ; } } 
@ java.lang.Override public void onSystemUiVisibilityChange ( int visibility ) { android.util.Log . d ( "BackEnd" , ( "mDecorView.SYSTEM_UI_FLAG_HIDE_NAVIGATION value : " + ( mDecorView.SYSTEM_UI_FLAG_HIDE_NAVIGATION ) ) ) ; boolean visible = ( visibility & ( mDecorView.SYSTEM_UI_FLAG_HIDE_NAVIGATION ) ) == 0 ; controlsView . animate () . alpha ( ( visible ? 1 : 0 ) ) . translationY ( ( visible ? 0 : controlsView . getHeight () ) ) ; } 
@ android.annotation.SuppressLint ( value = "RtlHardcoded" ) public void run () { android.widget.Toast toast = android.widget.Toast . makeText ( this , ( ( ( ( "Image of " + ( mFirstname ) ) + " " ) + ( mLastname ) ) + " captured" ) , Toast.LENGTH_SHORT ) ; toast . setDuration ( 500 ) ; toast . setGravity ( ( ( android.view.Gravity.BOTTOM ) | ( android.view.Gravity.RIGHT ) ) , 0 , 0 ) ; toast . show () ; } 
@ android.annotation.TargetApi ( value = Build.VERSION_CODES.M ) @ android.support.annotation.Nullable @ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , @ android.support.annotation.Nullable android.view.ViewGroup container , @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { android.view.View rootview = inflater . inflate ( R.layout.fragment_mill , container , false ) ; loadViews ( rootview ) ; initializeCounters () ; setOnClicks () ; updateValues () ; addAdStuff ( rootview ) ; return rootview ; } 
private java.util.List < thaumcraft.codechicken.lib.vec.BlockCoord > getBlackListNBT ( int [] coords ) { java.util.List < thaumcraft.codechicken.lib.vec.BlockCoord > filled = new java.util.ArrayList < thaumcraft.codechicken.lib.vec.BlockCoord > () ; for ( int i = coords.length ; ( i > 0 ) && ( ( i % 3 ) == 0 ) ; i -= 3 ) { int xcount = i - 2 ; int ycount = i - 1 ; int zcount = i ; filled . add ( new thaumcraft.codechicken.lib.vec.BlockCoord ( xcount , ycount , zcount ) ) ; } return filled ; } 
public int useNextID () { while ( true ) { for ( int no = nextID ; no < ( Server.ServerEngine.NUMBER_OF_IDS ) ; no ++ ) { if ( ( usedIDs [ no ] ) != true ) { usedIDs [ no ] = true ; nextID = no ++ ; return no ; } } nextID = 0 ; } } 
private android.webkit.WebResourceResponse loadFromWeb ( de.lilithwittmann.voicepitchanalyzer.utils.CacheableWebViewClient.UrlCache.CacheEntry entry ) { try { downloadAndStore ( entry ) ; return loadFromCache ( entry ) ; } catch ( java.lang.Exception e ) { android.util.Log . d ( de.lilithwittmann.voicepitchanalyzer.utils.CacheableWebViewClient.LOG_TAG , ( "Error reading file over network: " + ( entry . getCachedFile () . getPath () ) ) , e ) ; } return null ; } 
public static < T > void insertNext ( com.mdorst.container.list.Node < T > node , com.mdorst.container.list.Node < T > newNode ) { if ( ( node == null ) || ( newNode == null ) ) { throw new java.lang.NullPointerException () ; } com.mdorst.container.list.Node < T > temp = node.next ; node.next = newNode ; newNode.next = temp ; temp.prev = newNode ; newNode.prev = node ; } 
@ java.lang.Override public void decode ( org.quartzpowered.network.buffer.Buffer buffer , org.quartzpowered.protocol.packet.play.client.BlockChangePacket packet ) { packet . setLocation ( buffer . readBlockPosition () ) ; int block = buffer . readVarInt () ; packet . setId ( ( block < < 4 ) ) ; packet . setData ( ( block & 15 ) ) ; } 
public synchronized void notifyOverduePage ( java.lang.String sid , java.lang.Long pageNum ) { pendingPages . get ( sid ) . remove ( pageNum ) ; if ( ! ( overduePages . containsKey ( sid ) ) ) overduePages . put ( sid , new java.util.TreeSet < java.lang.Long > () ) ; overduePages . get ( sid ) . add ( pageNum ) ; } 
public static void first () { java.lang.String Path = ( ( ( xyz.jaoafa.mymaid.BugReport.plugin . getDataFolder () ) + ( java.io.File.separator ) ) + "bugreport" ) + ( java.io.File.separator ) ; java.io.File folder = new java.io.File ( Path ) ; if ( folder . exists () ) { return; } if ( folder . mkdir () ) { org.bukkit.Bukkit . getLogger () . info ( "BugReportのリポートディレクトリの作成に成功しました。" ) ; xyz.jaoafa.mymaid.BugReport.folder = Path ; } else { org.bukkit.Bukkit . getLogger () . info ( "BugReportのリポートディレクトリの作成に失敗しました。" ) ; } } 
private static void displayInWebview ( final android.app.Activity activity , java.lang.String url ) { android.app.AlertDialog.Builder alert = new android.app.AlertDialog.Builder ( activity ) ; android.webkit.WebView wv = new android.webkit.WebView ( activity ) ; wv . loadUrl ( url ) ; wv . setWebViewClient ( new android.webkit.WebViewClient () { @ java.lang.Override public boolean shouldOverrideUrlLoading ( android.webkit.WebView view , java.lang.String url ) { view . loadUrl ( url ) ; return true ; } } ) ; alert . setView ( wv ) ; alert . setPositiveButton ( android.R.string.ok , null ) ; alert . show () ; } 
public static org.osate.aadl2.ComponentClassifier getAssociatedClassifier ( org.osate.aadl2.Element emv2Element ) { org.osate.aadl2.ComponentClassifier cl = ( ( org.osate.aadl2.ComponentClassifier ) ( emv2Element . getContainingClassifier () ) ) ; if ( cl != null ) return cl ; org.osate.xtext.aadl2.errormodel.errorModel.ErrorModelSubclause emsc = org.osate.xtext.aadl2.errormodel.util.EMV2Util . getContainingErrorModelSubclause ( emv2Element ) ; if ( ( emsc . getName () ) == null ) return null ; return ( ( org.osate.aadl2.ComponentClassifier ) ( org.osate.xtext.aadl2.properties.util.EMFIndexRetrieval . getEObjectOfType ( emsc , Aadl2Package.eINSTANCE . getComponentClassifier () , emsc . getQualifiedName () ) ) ) ; } 
public static java.lang.String getString ( java.lang.Object from , java.lang.reflect.Field field ) throws com.impetus.kundera.property.PropertyAccessException { com.impetus.kundera.property.PropertyAccessor < ? > accessor = com.impetus.kundera.property.PropertyAccessorFactory . getPropertyAccessor ( field ) ; java.lang.Object object = com.impetus.kundera.property.PropertyAccessorHelper . getObject ( from , field ) ; return object != null ? accessor . toString () : null ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( ( i ) == ( primaryColors.length ) ) i = 0 ; if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { mBtnChangeColor . setBackgroundTintList ( android.content.res.ColorStateList . valueOf ( primaryColors [ i ] ) ) ; showAnimation () ; } else { mToolbar . setBackgroundColor ( primaryColors [ i ] ) ; ( i ) ++ ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; groupButton = ( ( android.widget.Button ) ( findViewById ( R.id.groupButton ) ) ) ; groupButton . setOnClickListener ( this ) ; messagesButton = ( ( android.widget.Button ) ( findViewById ( R.id.messagesButton ) ) ) ; } 
public static boolean add ( final model.Alumni theAlumni ) { if ( ( model.AlumniCollection.mAlumniDB ) == null ) { model.AlumniCollection.mAlumniDB = new data.AlumniDB () ; } try { model.AlumniCollection.mAlumniDB . addAlumni ( theAlumni ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return true ; } 
void initialise () { if ( this . initialised ) { return; } this . initialised = true ; this . initialiseMixins ( this . mixinClasses , false ) ; switch ( org.spongepowered.asm.mixin.MixinEnvironment . getCurrentEnvironment () . getSide () ) { case CLIENT : this . initialiseMixins ( this . mixinClassesClient , false ) ; break; case SERVER : this . initialiseMixins ( this . mixinClassesServer , false ) ; break; case UNKNOWN : this . logger . warn ( "Mixin environment was unable to detect the current side, sided mixins will not be applied" ) ; break; } } 
@ java.lang.Override public java.lang.String getLocalizedMessage () { java.lang.String messageKey = getLocalizedMessageKey () ; if ( ( messageKey == null ) || ( messageKey . isEmpty () ) ) { return "" ; } org.springframework.context.MessageSource messageSource = org.registrator.community.components.SpringApplicationContext . getMessageSource () ; java.util.Locale locale = org.springframework.context.i18n.LocaleContextHolder . getLocale () ; return messageSource . getMessage ( messageKey , getMessageParameters () , locale ) ; } 
public void CheckColUpper ( MyPanel myPanelB , int ClickedInX , int ClickedInY ) { java.awt.Color hasNumber = java.awt.Color.ORANGE ; int newGridX = ClickedInX ; int newGridY = ClickedInY ; while ( ! ( BombsAround ( myPanelB , newGridX , newGridY ) ) ) { myPanelB.colorArray [ newGridX ] [ newGridY ] = uncoveredCell ; newGridY -- ; myPanelB . repaint () ; } myPanelB.colorArray [ newGridX ] [ newGridY ] = hasNumber ; } 
@ java.lang.Override public void onCreate () { super . onCreate () ; java.util.Map < java.lang.String , java.lang.Object > params = com.auth0.api.ParameterBuilder . newBuilder () . asDictionary () ; lock = new com.auth0.lock.LockBuilder () . loadFromApplication ( this ) . closable ( true ) . authenticationParameters ( params ) . build () ; lock . setProvider ( Strategies.Facebook . getName () , new com.auth0.facebook.FacebookIdentityProvider () ) ; lock . setProvider ( Strategies.GooglePlus . getName () , new com.auth0.googleplus.GooglePlusIdentityProvider ( this ) ) ; } 
public void addPlayer ( android.view.View view ) { java.lang.String new_player = player_edit . getText () . toString () ; gui.pairings.Player player = new gui.pairings.Player ( new_player , ( ++ ( currentSeed ) ) ) ; selectionList . add ( player ) ; adapter . notifyDataSetChanged () ; player_edit . setText ( "" ) ; } 
@ java.lang.Override public void breakBlock ( net.minecraft.world.World worldIn , micdoodle8.mods.galacticraft.core.blocks.BlockPos pos , net.minecraft.block.state.IBlockState state ) { if ( ! ( worldIn.isRemote ) ) { final int facing = ( getMetaFromState ( state ) ) & 8 ; if ( ( worldIn.provider ) instanceof micdoodle8.mods.galacticraft.core.dimension.WorldProviderSpaceStation ) { micdoodle8.mods.galacticraft.core.dimension.WorldProviderSpaceStation worldOrbital = ( ( micdoodle8.mods.galacticraft.core.dimension.WorldProviderSpaceStation ) ( worldIn.provider ) ) ; worldOrbital . getSpinManager () . removeThruster ( pos , ( facing == 0 ) ) ; worldOrbital . getSpinManager () . updateSpinSpeed () ; } } } 
private void trackMaximum ( org.deidentifier.arx.framework.lattice.Node node ) { if ( ( node . hasProperty ( Node.PROPERTY_ANONYMOUS ) ) && ( ( ( ( globalMaximum ) == null ) || ( ( node . getInformationLoss () . compareTo ( globalMaximum . getInformationLoss () ) ) > 0 ) ) || ( ( ( node . getInformationLoss () . compareTo ( globalMaximum . getInformationLoss () ) ) == 0 ) && ( ( node . getLevel () ) > ( globalMaximum . getLevel () ) ) ) ) ) { globalMaximum = node ; } } 
@ java.lang.Override protected java.lang.String doInBackground ( org.json.JSONObject . . . params ) { try { status = Status.running ; token = getAccessToken ( activity , chosenEmail , com.flatflatching.flatflatching.helpers.AbstractGetAuthTokenTask.SCOPE ) ; if ( ( ( token ) != null ) || ( ( status ) != ( Status.userRecoverableError ) ) ) { status = Status.okay ; handleToken ( token ) ; postToken () ; } else { status = Status.requestFailed ; } } catch ( java.lang.Exception ex ) { token = null ; status = Status.requestFailed ; } return token ; } 
public static java.util.ArrayList < org.smartregister.immunization.db.VaccineRepo.Vaccine > nextVaccines ( java.lang.String vaccine ) { java.util.ArrayList < org.smartregister.immunization.db.VaccineRepo.Vaccine > vl = new java.util.ArrayList <> () ; for ( org.smartregister.immunization.db.VaccineRepo.Vaccine v : org.smartregister.immunization.db.VaccineRepo.Vaccine . values () ) { if ( ( v.prerequisite ) != null ) { if ( v . prerequisite () . name () . equalsIgnoreCase ( vaccine . trim () ) ) { vl . add ( v ) ; } } } return vl ; } 
public void search ( java.lang.String strParams ) { java.lang.String [] arrAllParams = strParams . split ( "&" ) ; addFilters () ; int t = container . size () ; if ( t == 0 ) { container . removeAllContainerFilters () ; fetchData () ; addFilters () ; } tb . setContainerDataSource ( container ) ; t = container . size () ; if ( t > 30 ) { t = 30 ; } tb . setPageLength ( t ) ; } 
private void homeButtonActionPerformed ( java.awt.event.ActionEvent evt ) { currentNumber = 0 ; VideoTape tape = tapes . getHead () ; videoNumberLabel . setText ( ( ( ( ( currentNumber ) + 1 ) + " of " ) + ( tapes . size () ) ) ) ; titleField . setText ( tapes . getHead () . getTitle () ) ; lengthField . setText ( java.lang.Integer . toString ( tapes . getHead () . getLength () ) ) ; isOnLoan . setSelected ( tapes . getHead () . isLent () ) ; } 
@ java.lang.Override public value.BoolValue or ( value.Value other ) { if ( ( isSet () ) || ( other . isSet () ) ) { return new value.BoolValue () ; } return new value.BoolValue ( ( ( value ) || ( ( ( value.BoolValue ) ( other ) ) . getValue () ) ) ) ; } 
@ org.junit.Test ( expected = org.fiware.apps.repository.exceptions.db.DatasourceException . class ) public void getCollectionsExceptionTest ( ) throws org.fiware.apps.repository.exceptions.db.DatasourceException { java.lang.String id = "/id" ; java.util.Date date = new java.util.Date () ; mongoCollection = org.powermock.api.mockito.PowerMockito . mock ( com.mongodb.DBCollection . class ) ; toTest = new org.fiware.apps.repository.dao.impl.MongoCollectionDAO ( db , mongoCollection , virtuosoResourceDAO ) ; org.powermock.api.mockito.PowerMockito . when ( mongoCollection . find ( any () ) ) . thenThrow ( java.lang.Exception . class ) ; rulesdbObjectCollection ( id , date ) ; toTest . getCollections ( id ) ; } 
public static seedu.address.model.ReadOnlyAddressBook getSampleAddressBook () { try { seedu.address.model.AddressBook sampleAb = new seedu.address.model.AddressBook () ; for ( seedu.address.model.person.Person samplePerson : seedu.address.model.util.SampleDataUtil . getSamplePersons () ) { sampleAb . addPerson ( samplePerson ) ; } seedu.address.model.property.PropertyManager . initializePropertyManager () ; return sampleAb ; } catch ( seedu.address.model.person.exceptions.DuplicatePersonException e ) { throw new java.lang.AssertionError ( "sample data cannot contain duplicate persons" , e ) ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/signup" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public cn.momia.mapi.web.response.ResponseMessage add ( @ org.springframework.web.bind.annotation.RequestParam java.lang.String utoken , @ org.springframework.web.bind.annotation.RequestParam java.lang.String leader ) { if ( ( org.apache.commons.lang3.StringUtils . isBlank ( utoken ) ) || ( org.apache.commons.lang3.StringUtils . isBlank ( leader ) ) ) return cn.momia.mapi.web.response.ResponseMessage.BAD_REQUEST ; com.alibaba.fastjson.JSONObject leaderJson = com.alibaba.fastjson.JSON . parseObject ( leader ) ; leaderJson . put ( "userId" , userServiceApi.USER . get ( utoken ) ) ; userServiceApi.LEADER . add ( com.alibaba.fastjson.JSON . toJavaObject ( leaderJson , cn.momia.api.user.leader.Leader . class ) ) ; return cn.momia.mapi.web.response.ResponseMessage.SUCCESS ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String url = ( ( java.lang.String ) ( v . getTag ( R.id.key_link ) ) ) ; if ( ( url != null ) && ( ( url . length () ) != 0 ) ) { android.content.Intent intent = new android.content.Intent ( getActivity () , com.subang.app.activity.WebActivity . class ) ; intent . putExtra ( "url" , ( ( com.subang.util.WebConst.HOST_URI ) + url ) ) ; startActivity ( intent ) ; } } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) public java.util.List < com.springmvc.model.Album > findAlbumsByArtist ( int artistId ) { org.hibernate.Criteria criteria = createEntityCriteria () ; criteria . add ( org.hibernate.criterion.Restrictions . eq ( "artistId" , java.lang.Integer . toString ( artistId ) ) ) ; return ( ( java.util.List < com.springmvc.model.Album > ) ( criteria . list () ) ) ; } 
private void startRootShell () { dev.ukanth.ufirewall.util.G . isRootAvail ( true ) ; java.util.List < java.lang.String > cmds = new java.util.ArrayList < java.lang.String > () ; cmds . add ( "true" ) ; new dev.ukanth.ufirewall.service.RootShell.RootCommand () . setFailureToast ( R.string.error_su ) . setReopenShell ( true ) . run ( getApplicationContext () , cmds ) ; if ( dev.ukanth.ufirewall.util.G . activeNotification () ) { dev.ukanth.ufirewall.Api . showNotification ( dev.ukanth.ufirewall.Api . isEnabled ( getApplicationContext () ) , getApplicationContext () ) ; } } 
private void loadMapperFromJson ( java.lang.String path , java.lang.String jsonText , java.util.Map < java.lang.String , java.lang.String > globalVar ) throws java.io.IOException { org.pinae.timon.io.SqlMapper mapper = new org.pinae.timon.io.SqlMapper () ; try { java.lang.String json = com.alibaba.fastjson.JSON . toJSON ( mapper ) . toString () ; mapper = com.alibaba.fastjson.JSON . parseObject ( json , org.pinae.timon.io.SqlMapper . class ) ; build ( path , mapper , globalVar ) ; } catch ( java.lang.Exception e ) { throw new java.io.IOException ( e ) ; } } 
private void randomInsertion_PURE_WITH_INNER_PURE_MAP () { java.lang.Integer randomKey ; for ( int i = insertionStratIndex ; i < ( insertionEndIndex ) ; i ++ ) { randomKey = nextHotOrColdKeyOuterMap ( i ) ; hybrid_ds.PureIntMap < java.lang.Integer > newMap = new hybrid_ds.PureIntMap < java.lang.Integer > () ; hybrid_ds.PureIntMap < java.lang.Integer > innerMap = outerPureIntMap . putIfAbsent ( randomKey , newMap ) ; if ( innerMap == null ) { innerMap = newMap ; } java.lang.Integer innerKey = nextInnerMapKeyValue () ; java.lang.Integer innerValue = innerKey ; innerMap . put ( innerKey , innerValue ) ; } } 
private boolean protect ( me.newyith.util.Point p ) { boolean pointProtected = false ; org.bukkit.block.Block b = p . getBlock () ; if ( me.newyith.generator.Wall . isProtectableWallMaterial ( b . getType () ) ) { this . protectedPoints . add ( p ) ; pointProtected = true ; } return pointProtected ; } 
private void moveVisibleChildren ( com.notlob.jgrid.model.Row < T > row ) { final java.util.List < com.notlob.jgrid.model.Row < T > > children = getChildren ( row ) ; for ( com.notlob.jgrid.model.Row < T > child : children ) { if ( child . isVisible () ) { rows . remove ( child ) ; final int newExpectedIndex = java.lang.Math . abs ( sortModel . getSortedRowIndex ( child ) ) ; rows . add ( newExpectedIndex , child ) ; row . setRowIndex ( newExpectedIndex ) ; } } } 
@ java.lang.Override public void addEdge ( int id , int startX , int startY , int endX , int endY , int rank ) { if ( rank == 0 ) { nl.defsoftware.mrgb.view.models.RibbonLine ribbonLine = new nl.defsoftware.mrgb.view.models.RibbonLine ( determineLength ( startY , endY ) ) ; ribbonLine . relocate ( startX , startY ) ; allEdges . add ( ribbonLine ) ; } else { nl.defsoftware.mrgb.view.models.RibbonCurve ribbon = new nl.defsoftware.mrgb.view.models.RibbonCurve ( rank , startX , startY , endX , endY , isOpeningCurve ( startX , endX ) ) ; allEdges . add ( ribbon ) ; } } 
@ java.lang.Override public void onViewCreated ( android.view.View view , @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { gridRecyclerAdapter . setOnItemClickListener ( this ) ; recyclerView . setAdapter ( gridRecyclerAdapter ) ; recyclerView . setLayoutManager ( new android.support.v7.widget.GridLayoutManager ( com.excitingboat.freshmanspecial.view.fragment.Style.PictureGridFragment . getContext () , 2 ) ) ; presenter . getInformation ( new java.lang.String [] { java.lang.String . valueOf ( currentPage ) , java.lang.String . valueOf ( 15 ) } ) ; } 
public java.lang.String salvar () { try { perdido . setDataCadastro ( new java.util.Date () ) ; perdido = postEntity ( perdido , "animal/perdido/salvar/" , br.com.petshow.model.Perdido . class ) ; exibirInforMessage ( "Seu PET foi anunciado com sucesso!" ) ; } catch ( br.com.petshow.exceptions.ExceptionErroCallRest | br.com.petshow.exceptions.ExceptionValidation e ) { exibirErroMessage ( ( "Erro ao tentar salvar: " + ( e . getMessage () ) ) ) ; } return null ; } 
public java.lang.Double calcMean ( com.policat.cat.temp_containers.OngoingQuiz ongoingQuiz ) { java.lang.Integer sumScores = 0 ; java.util.List < com.policat.cat.temp_containers.QuestionResponse > correctResponses = getCorrectResponses ( ongoingQuiz ) ; for ( com.policat.cat.temp_containers.QuestionResponse response : correctResponses ) { sumScores += response . getQuestion () . getScore () ; } return sumScores / ( ( double ) ( correctResponses . size () ) ) ; } 
public int getIdFromIndex ( int index ) { if ( ( index >= ( importantList . size () ) ) || ( index < 1 ) ) { return - 1 ; } return importantList . get ( index ) . getItem () . getId () ; } 
private static void redrawWidgets ( android.content.Context context ) { com.rmnoon.workflowy.app.WFModel model = com.rmnoon.workflowy.app.WFModel . getInstance ( context ) ; android.util.Log . i ( com.rmnoon.workflowy.app.WorkflowyListWidget.TAG , ( "redrawWidgets: " + ( model . toString () ) ) ) ; model . ensureAppWidgets ( com.google.common.primitives.Ints . asList ( getAppWidgetIds ( context ) ) ) ; notifyListItemsChanged ( context ) ; for ( int appWidgetId : getAppWidgetIds ( context ) ) { com.rmnoon.workflowy.app.WorkflowyListWidget . drawWidget ( context , appWidgetId ) ; } } 
private boolean distance ( quenchTheThirst.Entity e , int i ) { if ( ( java.lang.Math . sqrt ( ( ( java.lang.Math . pow ( ( ( this . getX () ) - ( e . getX () ) ) , 2 ) ) + ( java.lang.Math . pow ( ( ( this . getY () ) - ( e . getY () ) ) , 2 ) ) ) ) ) < i ) { return true ; } return false ; } 
@ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; com.qadmni.fragments.BaseFragment.mSessionManager = com.qadmni.utils.SessionManager . getInstance ( getActivity () . getApplicationContext () ) ; context = getContext () ; mServerSyncManager = new com.qadmni.utils.ServerSyncManager ( getActivity () . getApplicationContext () , com.qadmni.fragments.BaseFragment.mSessionManager ) ; qadmniHelper = new com.qadmni.database.QadmniHelper ( getActivity () , com.qadmni.fragments.BaseFragment.mSessionManager ) ; qadmniHelper . getDatabaseStructure () ; progressDialog = com.qadmni.utils.DialogUtils . getProgressDialog ( getActivity () ) ; progressDialog . setProgressStyle ( ProgressDialog.STYLE_SPINNER ) ; } 
public static com.healthmarketscience.sqlbuilder.UpdateQuery generateUpdateQuery ( com.healthmarketscience.sqlbuilder.dbspec.basic.DbTable tabel , com.healthmarketscience.sqlbuilder.Condition . . . cs ) { com.healthmarketscience.sqlbuilder.UpdateQuery $ = new com.healthmarketscience.sqlbuilder.UpdateQuery ( SQLDatabase.SQLDatabaseEntities.WorkersTable.table ) ; for ( int ¢ = 0 ; ¢ < ( cs.length ) ; ++ ¢ ) $ . addCondition ( cs [ ¢ ] ) ; return $ ; } 
@ java.lang.Override public void onCheckedChanged ( android.widget.RadioGroup group , @ android.support.annotation.IdRes int checkedId ) { if ( dch0302 . isChecked () ) { fldGrpdch05 . setVisibility ( View.VISIBLE ) ; fldGrpdch04 . setVisibility ( View.GONE ) ; dch04 . clearCheck () ; } else { fldGrpdch04 . setVisibility ( View.VISIBLE ) ; fldGrpdch05 . setVisibility ( View.VISIBLE ) ; } } 
public static java.lang.String formatQueryString ( java.lang.String url , java.lang.String field , java.lang.String value ) { if ( org.apache.commons.lang.StringUtils . isBlank ( value ) ) { return url ; } return url . contains ( "?" ) ? ( ( "&" + field ) + "=" ) + value : ( ( "?" + field ) + "=" ) + value ; } 
@ java.lang.Override public com.example.jonatan.clothesplanner.wardrobe.wardrobeitem.IWardrobeItem getShirt () { if ( ( ( currentShirt ) + 1 ) > ( wardrobe . getShirts () . size () ) ) { currentShirt = 0 ; } com.example.jonatan.clothesplanner.wardrobe.wardrobeitem.IWardrobeItem shirt = wardrobe . getShirts () . get ( currentShirt ) ; ( currentShirt ) ++ ; return shirt ; } 
private void updateSession ( java.net.HttpURLConnection connection ) { org.pageseeder.bridge.PSSession s = this . session ; if ( s != null ) { s . update () ; } else { java.lang.String cookie = connection . getHeaderField ( "Set-Cookie" ) ; s = org.pageseeder.bridge.PSSession . parseSetCookieHeader ( cookie ) ; } } 
public void spawn () { m_x = m_game . getWidth () ; m_y = phoenix.delta.Utilities . random ( ( ( ( DroidConstants.GROUND_Y ) - ( m_game . getDroid () . getHeight () ) ) + ( DroidConstants.JUMP_HEIGHT ) ) , ( ( DroidConstants.GROUND_Y ) - ( m_h ) ) ) ; m_rect.top = m_y ; m_rect.bottom = ( m_y ) + ( m_h ) ; m_alive = true ; android.util.Log . i ( "DRJ" , ( "Spawning star at " + ( m_x ) ) ) ; } 
@ com.monitor.controller.RequestMapping ( value = "/e_queryDeviceStatus" , method = RequestMethod.GET , produces = org.springframework.http.MediaType.APPLICATION_JSON_VALUE ) @ com.monitor.controller.ResponseBody public java.util.List < com.monitor.model.DeviceStatus > queryStatus ( @ com.monitor.controller.RequestParam ( value = "accountId" , defaultValue = "0" ) int accountId , @ com.monitor.controller.RequestParam ( value = "type" , defaultValue = "0" ) int type , javax.servlet.http.HttpServletResponse response ) throws com.monitor.exception.CodeException { if ( accountId == 0 ) { throw new com.monitor.exception.CodeException ( "请重新登录" ) ; } java.util.List < com.monitor.model.DeviceStatus > resultList = new java.util.ArrayList < com.monitor.model.DeviceStatus > () ; java.lang.System.out . println ( deviceService . queryDeviceStatus () ) ; resultList = deviceService . queryDeviceStatus () ; return resultList ; } 
@ java.lang.Override public void run () { if ( ! ( initialized ) ) { advertiseSelf ( "SPAWN" ) ; initialized = true ; } chooseTarget () ; if ( needs_move () ) step () ; else if ( ( target_food ) != null ) eat () ; else resetState () ; } 
public static controllers.StateController getController ( java.lang.String controllerType ) { controllerType = controllerType . toLowerCase () ; switch ( controllerType ) { case "DFS" : return new controllers.DFSController () ; case "UCS" : return new controllers.UCSController () ; case "GS" : return new controllers.GSController () ; case "A-star" : return new controllers.AStarController () ; default: return new controllers.BFSController () ; } } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) public static < T > T createInstance ( java.lang.Class < ? > clazz ) { try { if ( clazz == null ) { return null ; } else { return ( ( T ) ( clazz . newInstance () ) ) ; } } catch ( java.lang.Exception e ) { throw new java.lang.RuntimeException ( ( "Error occured during creating instance of " + clazz ) ) ; } } 
private < IdType > IdType persistObjectApiDeprecate ( java.lang.Class < ? > modelClass , org.json.JSONObject jsonObject ) throws org.json.JSONException { try { mDatabase . beginTransaction () ; IdType id = persistObjectInternal ( modelClass , jsonObject ) ; mDatabase . setTransactionSuccessful () ; return id ; } finally { if ( mDatabase . inTransaction () ) { mDatabase . endTransaction () ; } } } 
public static boolean saveUserSession ( android.content.Context context ) { android.content.SharedPreferences.Editor editor = context . getSharedPreferences ( com.bridginggood.UserSessionStore.KEY , Context.MODE_PRIVATE ) . edit () ; editor . putString ( com.bridginggood.UserSessionStore.TOKEN , com.bridginggood.UserInfo . getTokenString () ) ; editor . putString ( com.bridginggood.UserSessionStore.USER_TYPE , com.bridginggood.UserInfo . getUserType () ) ; editor . putString ( com.bridginggood.UserSessionStore.DEVICE_ID , com.bridginggood.UserInfo . getDeviceId () ) ; editor . putString ( com.bridginggood.UserSessionStore.C2DM_REGISTRATION_ID , com.bridginggood.UserInfo . getC2DMRegistrationId () ) ; editor . putBoolean ( com.bridginggood.UserSessionStore.IS_FIRST , false ) ; return editor . commit () ; } 
private static java.lang.Double percentageOfSames ( java.util.List < java.lang.Integer > arr ) { int max = arr . get ( 0 ) ; for ( int a : arr ) { if ( a > max ) { max = a ; } } int x = 0 ; for ( int a : arr ) { if ( max == a ) { x ++ ; } } return ( ( double ) ( x ) ) / ( arr . size () ) ; } 
public static void main ( java.lang.String [] args ) { int bidderPort = 2223 ; java.net.InetAddress hostname = null ; try { hostname = java.net.InetAddress . getLocalHost () ; } catch ( java.net.UnknownHostException e1 ) { e1 . printStackTrace () ; } java.net.Socket clientSocket = null ; try { clientSocket = new java.net.Socket ( hostname , bidderPort ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } client.Bidder bidder = new client.Bidder ( "thaleia" , clientSocket ) ; new java.lang.Thread ( bidder ) . start () ; } 
public int getPacketSize ( byte [] toTrim ) { byte [] trimmed = java.util.Arrays . copyOfRange ( toTrim , 6 , toTrim.length ) ; java.lang.String size = "" ; for ( byte b : trimmed ) { if ( b != 12 ) { size . concat ( java.lang.String . valueOf ( b ) ) ; } else { break; } } return java.lang.Integer . valueOf ( size ) ; } 
public void initializeUsers () { java.lang.String [] rob_array = getResources () . getStringArray ( R.array.rob ) ; java.lang.String [] hooman_array = getResources () . getStringArray ( R.array.hooman ) ; java.lang.String [] arjun_array = getResources () . getStringArray ( R.array.arjun ) ; rob = new ipt341.zarrabi.hooman.a5.User ( rob_array , R.drawable.rob_pic ) ; arjun = new ipt341.zarrabi.hooman.a5.User ( arjun_array , R.drawable.arjun_pic ) ; hooman = new ipt341.zarrabi.hooman.a5.User ( hooman_array , R.drawable.hooman_pic ) ; } 
private com.sun.tools.javac.util.List < com.sun.tools.javac.tree.JCTree > makeGetter ( com.redhat.ceylon.compiler.typechecker.tree.Tree.AttributeDeclaration decl ) { at ( decl ) ; java.lang.String atrrName = decl . getIdentifier () . getText () ; return com.redhat.ceylon.compiler.codegen.AttributeDefinitionBuilder . getter ( this , atrrName , decl . getDeclarationModel () ) . modifiers ( transformAttributeGetSetDeclFlags ( decl ) ) . isActual ( com.redhat.ceylon.compiler.util.Decl . isActual ( decl ) ) . isFormal ( com.redhat.ceylon.compiler.util.Decl . isFormal ( decl ) ) . build () ; } 
public static java.lang.String [] getMonthValues () { java.util.Calendar now = java.util.Calendar . getInstance () ; java.lang.String [] months = new java.lang.String [ 4 ] ; now . add ( java.util.Calendar.MONTH , ( + 1 ) ) ; for ( int i = 0 ; i < 4 ; i ++ ) { now . add ( java.util.Calendar.MONTH , ( - 1 ) ) ; months [ i ] = new java.text.SimpleDateFormat ( "MMMM" ) . format ( now . getTime () ) ; } return months ; } 
public java.lang.String averageTime ( java.lang.String year , java.lang.String raceCat ) { long tmpSum = 0 ; int nbPart = 0 ; app.Race tmp = data.DataManager._instance . getYears () . get ( year ) . getRaces () . get ( raceCat ) ; for ( app.Results r : tmp . getParticipants () . values () ) { tmpSum += r . getTime () ; nbPart ++ ; } tmpSum /= nbPart ; return data.DataManager . formatTime ( ( ( int ) ( tmpSum ) ) ) ; } 
private static long [] extractTimeval ( org.python.core.PyObject seconds ) { long [] timeval = new long [] { jnr.posix.util.Platform.IS_32_BIT ? seconds . asInt () : seconds . asLong () , 0L } ; if ( seconds instanceof org.python.core.PyFloat ) { long usec = ( ( long ) ( ( ( seconds . asDouble () ) % 1.0 ) * 1000000.0 ) ) ; if ( usec < 0 ) { usec = 0 ; } timeval [ 1 ] = usec ; } return timeval ; } 
@ org.junit.Test public void testP1Better () { swissTournamentRunner.Player p1 = new swissTournamentRunner.Player ( "P1" , 1 , 0 , 0 , 0 , 0 ) ; swissTournamentRunner.Player p2 = new swissTournamentRunner.Player ( "P2" , 0 , 0 , 0 , 0 , 0 ) ; t . addPlayer ( "P1" ) ; t . addPlayer ( "P2" ) ; org.junit.Assert . assertEquals ( ( - 1 ) , p1 . compareTo ( p2 ) ) ; } 
@ java.lang.Override public void run ( javafx.scene.Node node , javafx.scene.Node dragNode ) { ( this . executions ) ++ ; if ( dragNode != node ) { javafx.event.Event . fireEvent ( node , dockEnterEvent . copyFor ( this , node ) ) ; if ( dragNode != null ) { javafx.event.Event . fireEvent ( dragNode , dockExitEvent . copyFor ( this , dragNode ) ) ; } dragNodes . put ( node . getScene () . getWindow () , node ) ; } javafx.event.Event . fireEvent ( node , dockOverEvent . copyFor ( this , node ) ) ; } 
@ java.lang.Override public void run () { if ( ( snake ) != null ) { com.example.stevennl.tastysnake.model.Direction dir = sensorCtrl . getDirection () ; if ( ! ( snake . move ( dir ) ) ) { finish () ; } android.util.Log . d ( com.example.stevennl.tastysnake.ui.test.DrawableGridTestActivity.TAG , ( "run: " + dir ) ) ; map . createFood ( ( lengthen = ! ( lengthen ) ) ) ; } } 
public java.lang.String toString () { double bodyLength = ( ( double ) ( messageBody.length ) ) / ( ( double ) ( 1024 ) ) ; return java.lang.String . format ( "%s%sBody Dimension: %sKB\n" , startLine . toString () , headers . toString () , ( ( messageBody ) != null ? java.lang.String . valueOf ( bodyLength ) : java.lang.String . valueOf ( 0.0 ) ) ) ; } 
@ java.lang.Override public boolean equals ( java.lang.Object o ) { if ( ( this ) == o ) return true ; if ( ( o == null ) || ( ( getClass () ) != ( o . getClass () ) ) ) return false ; es.estheraf.horariosbus.data.model.Stop stop = ( ( es.estheraf.horariosbus.data.model.Stop ) ( o ) ) ; if ( ! ( id . equals ( stop.id ) ) ) return false ; return true ; } 
public com.example.alex.weatheraarhusgroup03.WeatherInfo getLatestWeatherInfo () { android.database.sqlite.SQLiteDatabase db = this . getReadableDatabase () ; java.lang.String selectQuery = ( ( ( "SELECT  * FROM " + ( WeatherInfoTableContract.WeatherInfoTable.TABLE_NAME ) ) + " ORDER BY " ) + ( WeatherInfoTableContract.WeatherInfoTable.COLUMN_TIMESTAMP ) ) + " DESC LIMIT 1" ; android.util.Log . e ( com.example.alex.weatheraarhusgroup03.DatabaseHelper.LOG , selectQuery ) ; android.database.Cursor cursor = db . rawQuery ( selectQuery , null ) ; java.util.ArrayList < com.example.alex.weatheraarhusgroup03.WeatherInfo > infos = getWeatherInfoFromCursor ( cursor ) ; com.example.alex.weatheraarhusgroup03.WeatherInfo weatherInfo = infos . get ( 0 ) ; return weatherInfo ; } 
@ java.lang.Override public long insertData ( java.lang.String tableName , android.content.ContentValues contentValues ) { long id = - 1 ; android.database.sqlite.SQLiteDatabase database = null ; try { database = mDbOpenHelper . getWritableDatabase () ; id = database . insert ( "personpage" , null , contentValues ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } finally { if ( database != null ) database . close () ; } return id ; } 
@ java.lang.Override public void configure ( org.springframework.security.config.annotation.web.builders.HttpSecurity http ) throws java.lang.Exception { http . antMatcher ( "/**" ) . authorizeRequests () . antMatchers ( "/index.html" , "/home.html" , "/login" , "/" , "/api/catalog/**" , "/user" , "/assets/**" , "/css/**" , "/dist/**" , "/js/**" ) . permitAll () . anyRequest () . authenticated () . and () . csrf () . disable () ; } 
private org.jsonbuddy.parse.JsonArray parseArray () { org.jsonbuddy.parse.JsonArray jsonArrayFactory = new org.jsonbuddy.parse.JsonArray () ; while ( ! ( ( finished ) || ( ( lastRead ) == ']' ) ) ) { readNext () ; org.jsonbuddy.parse.JsonNode jsonFactory = parseValue () ; jsonArrayFactory . add ( jsonFactory ) ; readSpaceUntil ( "Expected , or ] in array" , ']' , ',' ) ; } if ( finished ) { throw new org.jsonbuddy.parse.JsonParseException ( "Expected , or ] in array" ) ; } return jsonArrayFactory ; } 
private void addRootMethod () { java.lang.String n = ( org.jruby.compiler.ir.IRModule.ROOT_METHOD_PREFIX ) + ( getName () ) ; rootMethod = new org.jruby.compiler.ir.IRMethod ( this , n , false , org.jruby.parser.IRStaticScopeFactory . newIRLocalScope ( getLexicalParent () . getStaticScope () ) ) ; rootMethod . addInstr ( new org.jruby.compiler.ir.instructions.ReceiveSelfInstruction ( rootMethod . getSelf () ) ) ; rootMethod . addInstr ( new org.jruby.compiler.ir.instructions.ReceiveClosureInstr ( rootMethod . getImplicitBlockArg () ) ) ; } 
public java.lang.String getParameterName ( java.lang.String owner , java.lang.String name , java.lang.String descriptor , int parameterIndex ) { xyz.papermodloader.book.mapping.MappedMethod method = this . getMethodMapping ( owner , name , descriptor ) ; if ( method != null ) { java.lang.String [] parameters = method . getParameters () ; if ( ( parameters != null ) && ( parameterIndex < ( parameters.length ) ) ) { return parameters [ parameterIndex ] ; } } return null ; } 
public void saveCreditcard () { try { utx . begin () ; if ( ( user . getKreditkarte () ) == null ) user . setKreditkarte ( tmpKreditkarte ) ; em . merge ( user ) ; utx . commit () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } 
public long calcPriceWithDiscount () { if ( ( quantity ) == 0 ) { return 0 ; } if ( ( discounts . getTotal () ) == 0 ) { return price ; } long price1 = java.lang.Math . abs ( java.lang.Math . round ( ( ( ( getTotal () ) * 1000.0 ) / ( quantity ) ) ) ) ; if ( ( java.lang.Math . round ( ( ( price1 * ( quantity ) ) / 1000.0 ) ) ) > ( getTotal () ) ) { price1 -- ; } return price1 ; } 
public java.lang.String getClickedBuildingMapName ( java.awt.Point inputPnt ) { java.lang.String buildingMapName = null ; gtg_model_subsystem.Node mappingResult = searchingAPointInNodeList ( inputPnt ) ; if ( mappingResult != null ) { java.lang.String buildingName = mappingResult . getBuilding () ; java.lang.System.out . println ( mappingResult . getDescription () ) ; if ( ! ( buildingName . equals ( "CampusMap" ) ) ) { getDesiredMapFromMapList ( buildingName ) ; return buildingName ; } } return buildingMapName ; } 
@ java.lang.Override public java.lang.Double apply ( pl.edu.agh.student.simulatedannealing.solver.ComputationState computationState ) { int summOfPizzasDelivered = 0 ; for ( pl.edu.agh.student.simulatedannealing.model.PizzaDeliverer deliverer : computationState . getPizzaDeliverers () ) { if ( ! ( deliverer . isAbleToCollectThePizzas () ) ) { return 0.0 ; } summOfPizzasDelivered += deliverer . getAssignedPizzas () . size () ; } return ( ( double ) ( summOfPizzasDelivered ) ) ; } 
public static android.content.Intent intent_openApp ( android.content.Context context , java.lang.String appPackage , android.os.Bundle bundle ) { android.content.pm.PackageManager manager = context . getPackageManager () ; android.content.Intent intent = manager . getLaunchIntentForPackage ( appPackage ) ; intent . addCategory ( Intent.CATEGORY_LAUNCHER ) ; if ( bundle != null ) intent . putExtras ( bundle ) ; return intent ; } 
public static void init () { com.shatteredpixel.shatteredpixeldungeon.actors.Actor . addDelayed ( Dungeon.hero , ( - ( java.lang.Float.MIN_VALUE ) ) ) ; for ( com.shatteredpixel.shatteredpixeldungeon.actors.mobs.Mob mob : Dungeon.level.mobs ) { com.shatteredpixel.shatteredpixeldungeon.actors.Actor . add ( mob ) ; } for ( com.shatteredpixel.shatteredpixeldungeon.actors.blobs.Blob blob : Dungeon.level.blobs . values () ) { com.shatteredpixel.shatteredpixeldungeon.actors.Actor . add ( blob ) ; } com.shatteredpixel.shatteredpixeldungeon.actors.Actor.current = null ; } 
private void repairRange ( com.emc.storageos.db.server.impl.RepairJobRunner.StringTokenRange range ) throws java.lang.InterruptedException { listener . onStartToken ( range.end , getProgress () ) ; repairRangeDone = false ; int cmd = svcProxy . forceRepairRangeAsync ( range.begin , range.end , keySpaceName , true , false , false ) ; com.emc.storageos.db.server.impl.RepairJobRunner._log . info ( "Wait for repairing this range to be done cmd={}" , cmd ) ; if ( cmd > 0 ) { while ( ! ( repairRangeDone ) ) { finished . await () ; } } com.emc.storageos.db.server.impl.RepairJobRunner._log . info ( "Repair this range is done success={}" , _success ) ; } 
public static void quit () { nodomain.freeyourgadget.gadgetbridge.util.GB . log ( "Quitting Gadgetbridge..." , GB.INFO , null ) ; android.content.Intent quitIntent = new android.content.Intent ( nodomain.freeyourgadget.gadgetbridge.GBApplication.ACTION_QUIT ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( nodomain.freeyourgadget.gadgetbridge.GBApplication.context ) . sendBroadcast ( quitIntent ) ; nodomain.freeyourgadget.gadgetbridge.GBApplication . deviceService () . quit () ; nodomain.freeyourgadget.gadgetbridge.util.GB . removeAllNotifications ( nodomain.freeyourgadget.gadgetbridge.GBApplication.context ) ; } 
public java.util.List < java.lang.String > findPostIdsForUser ( java.lang.String username ) { java.util.List < java.lang.String > posts = new java.util.LinkedList <> () ; java.lang.String userPostsKey = ( "user:" + username ) + ":posts" ; if ( ( redisStringSetOps . isMember ( "allusers" , ( "user:" + username ) ) ) && ( ( redisStringListOps . size ( userPostsKey ) ) != 0 ) ) { java.lang.System.out . println ( "In der Funktion" ) ; posts . addAll ( redisStringListOps . range ( userPostsKey , 0 , ( - 1 ) ) ) ; } return posts ; } 
public void agree ( android.view.View view ) { android.widget.CheckBox checkbox = ( ( android.widget.CheckBox ) ( findViewById ( R.id.agreeCheckBox ) ) ) ; if ( checkbox . isChecked () ) { android.content.Intent intent = new android.content.Intent ( this , tau.user.tausurveryapp.RegisterActivity . class ) ; startActivity ( intent ) ; } else { android.support.design.widget.Snackbar . make ( view , "אנא אשרו את טופס ההסכמה" , Snackbar.LENGTH_LONG ) . show () ; } tau.user.tausurveryapp.TrackingRepeater . getInstance () . startRepeatedTracking ( this , false ) ; } 
public static java.lang.String getCurrentWifiLink ( android.content.Context context ) { final android.net.wifi.WifiManager wifiMgr = ( ( android.net.wifi.WifiManager ) ( context . getSystemService ( Context.WIFI_SERVICE ) ) ) ; final android.net.wifi.WifiInfo connectedWifi = wifiMgr . getConnectionInfo () ; final java.lang.String connectedSSID = ( connectedWifi == null ) ? null : connectedWifi . getSSID () . replace ( "\"" , "" ) ; return connectedSSID ; } 
@ java.lang.Override public boolean isPermitted ( com.sun.jersey.spi.container.ContainerRequest request ) { java.lang.String uri = request . getEntity ( java.lang.String . class ) ; try { if ( ! ( org.mycore.access.MCRAccessManager . checkPermission ( org.urmel.dbt.rc.resources.MailResourcePermission.PERMISSION_MAIL ) ) ) { return false ; } return true ; } catch ( java.lang.Exception exc ) { throw new javax.ws.rs.WebApplicationException ( exc , javax.ws.rs.core.Response . status ( Status.INTERNAL_SERVER_ERROR ) . entity ( ( ( ( "Unable to check permission for request " + ( request . getRequestUri () ) ) + " containing entity value " ) + uri ) ) . build () ) ; } } 
@ java.lang.Override protected java.util.List < kaaes.spotify.webapi.android.models.Artist > doInBackground ( java.lang.String . . . params ) { try { kaaes.spotify.webapi.android.SpotifyApi api = new kaaes.spotify.webapi.android.SpotifyApi () ; kaaes.spotify.webapi.android.SpotifyService spotify = api . getService () ; kaaes.spotify.webapi.android.models.ArtistsPager results = spotify . searchArtists ( params [ 0 ] ) ; return results.artists.items ; } catch ( retrofit.RetrofitError e ) { android.util.Log . e ( "error" , e . getResponse () . getBody () . toString () ) ; return null ; } } 
public void run () { try { do { if ( ! ( updateStopped ) ) { time = ( java.lang.System . currentTimeMillis () ) - ( lastReset ) ; redraw () ; } java.lang.Thread . sleep ( 100 ) ; } while ( ! ( killThread ) ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } 
public void dismissItem ( int pos ) { foodmenuitems . remove ( pos ) ; this . notifyItemRemoved ( pos ) ; com.vinmein.dvadivel.foodie.model.MenuItems deleteitem = foodmenuitems . get ( pos ) ; if ( ( swipeListener ) != null ) swipeListener . onSwipe ( deleteitem , pos ) ; } 
public static void switchCamera ( int cameraId , android.hardware.Camera.PreviewCallback callback , byte [] buffer ) { if ( ( com.cgfay.caincamera.utils.CameraUtils.mCameraID ) == cameraId ) { return; } com.cgfay.caincamera.utils.CameraUtils . stopPreview () ; com.cgfay.caincamera.utils.CameraUtils.mCameraID = cameraId ; com.cgfay.caincamera.utils.CameraUtils . releaseCamera () ; com.cgfay.caincamera.utils.CameraUtils . openCamera ( cameraId , com.cgfay.caincamera.utils.CameraUtils.DESIRED_PREVIEW_FPS ) ; com.cgfay.caincamera.utils.CameraUtils . addPreviewCallbacks ( callback , buffer ) ; com.cgfay.caincamera.utils.CameraUtils . startPreviewTexture ( com.cgfay.caincamera.utils.CameraUtils.mSurfaceTexture ) ; } 
@ java.lang.Override public int compare ( org.apache.lucene.index.FieldInfo arg0 , org.apache.lucene.index.FieldInfo arg1 ) { java.lang.String name0 = arg0.name ; java.lang.String name1 = arg1.name ; if ( ( name0 . charAt ( 0 ) ) == '_' ) { if ( ( name1 . charAt ( 0 ) ) != '_' ) return 1 ; } else { if ( ( name1 . charAt ( 0 ) ) == '_' ) return - 1 ; } return arg0.name . compareTo ( arg1.name ) ; } 
@ java.lang.Override public void onResponse ( retrofit2.Call < com.softdesign.devintensive.data.network.res.UserModelRes > call , retrofit2.Response < com.softdesign.devintensive.data.network.res.UserModelRes > response ) { if ( ( response . code () ) == 200 ) { hideProgress () ; loginSuccess ( response . body () ) ; mDataManager . getPreferencesManager () . saveUserLogin ( login ) ; } else if ( ( response . code () ) == 404 ) { hideProgress () ; showSnackbar ( getString ( R.string.auth_invalid_credentials ) ) ; } else { hideProgress () ; showSnackbar ( getString ( R.string.msg_smth_went_wrong ) ) ; } } 
@ java.lang.Override public boolean equals ( java.lang.Object o ) { if ( ( this ) == o ) return true ; if ( ! ( o instanceof leanderk.izou.wifipresence.TrackingObject ) ) return false ; leanderk.izou.wifipresence.TrackingObject that = ( ( leanderk.izou.wifipresence.TrackingObject ) ( o ) ) ; return ! ( ( hostname ) != null ? ! ( hostname . equals ( that.hostname ) ) : ( that.hostname ) != null ) ; } 
public void setPitch ( double pitch ) { if ( ( media . getMediaType () ) == ( de.danoeh.antennapod.feed.MediaType.AUDIO ) ) { de.danoeh.antennapod.util.playback.AudioPlayer audioPlayer = ( ( de.danoeh.antennapod.util.playback.AudioPlayer ) ( player ) ) ; if ( audioPlayer . canSetPitch () ) { audioPlayer . setPlaybackPitch ( ( ( float ) ( pitch ) ) ) ; } } } 
@ org.junit.Test public void inLoginShouldVerifyPassShowMessageAndSetStateToMailBoxMenu () { when ( currentMailbox . checkPasscode ( "1" ) ) . thenReturn ( true ) ; connection . dial ( "1" ) ; connection . dial ( "#" ) ; connection . dial ( "1" ) ; connection . dial ( "#" ) ; verify ( phone ) . speak ( ConnectionTestRecording.MAILBOX_MENU_TEXT ) ; assert connection . isInMailBoxMenu () ; } 
public void clearFilter ( android.view.View v ) { nl.asymmetrics.droidshows.DroidShows.main . setVisibility ( View.INVISIBLE ) ; keyboard . hideSoftInputFromWindow ( nl.asymmetrics.droidshows.DroidShows.searchV . getWindowToken () , 0 ) ; nl.asymmetrics.droidshows.DroidShows.searchV . setText ( "" ) ; findViewById ( R.id.search ) . setVisibility ( View.GONE ) ; getSeries ( nl.asymmetrics.droidshows.DroidShows.showArchive ) ; } 
public static data_security_assignment_2.Polynomial fromByte ( int byteValue ) { data_security_assignment_2.Polynomial res = new data_security_assignment_2.Polynomial ( 8 ) ; int index = 7 ; while ( ( index >= 0 ) && ( byteValue > 0 ) ) { if ( byteValue >= ( java.lang.Math . pow ( 2 , index ) ) ) { byteValue -= java.lang.Math . pow ( 2 , index ) ; res.coeff [ index ] = true ; } index -- ; } return res ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; tvDisplay = ( ( android.widget.TextView ) ( findViewById ( R.id.tvDisplay ) ) ) ; btnPre = ( ( android.widget.Button ) ( findViewById ( R.id.btnPre ) ) ) ; btnNext = ( ( android.widget.Button ) ( findViewById ( R.id.btnNext ) ) ) ; btnNext . setOnClickListener ( this ) ; loadBook () ; loadPage () ; } 
public void run () { if ( ( thread ) != current ) { return; } java.lang.String filter = filterTextField . getText () ; if ( ( filter . length () ) == 0 ) { filter = null ; } setFilter ( filter ) ; } 
@ java.lang.Override public android.support.v4.app.Fragment getItem ( int position ) { if ( ( mActivity . getSteps () [ position ] ) == null ) { mCursor . moveToPosition ( position ) ; mActivity . getSteps () [ position ] = com.amagh.bakemate.models.Step . createStepFromCursor ( mCursor ) ; mActivity . getSteps () [ position ] . setStepId ( position ) ; prepareMediaSources ( position ) ; } return com.amagh.bakemate.ui.StepDetailsFragment . newInstance ( mActivity . getSteps () [ position ] , position ) ; } 
public static java.util.concurrent.Future < ? > addItemToPlaybackHistory ( final de.danoeh.antennapod.core.feed.FeedMedia media ) { return de.danoeh.antennapod.core.storage.DBWriter.dbExec . submit ( ( ) - > { android.util.Log . d ( de.danoeh.antennapod.core.storage.DBWriter.TAG , "Adding new item to playback history" ) ; media . setPlaybackCompletionDate ( new java.util.Date () ) ; media . setPlayedDuration ( 0 ) ; de.danoeh.antennapod.core.storage.PodDBAdapter adapter = de.danoeh.antennapod.core.storage.PodDBAdapter . getInstance () ; adapter . open () ; adapter . setFeedMediaPlaybackCompletionDate ( media ) ; adapter . close () ; de.danoeh.antennapod.core.feed.EventDistributor . getInstance () . sendPlaybackHistoryUpdateBroadcast () ; } ) ; } 
private void testEqualSeconds ( java.lang.String s , java.util.Date expected , java.util.Date actual ) { if ( expected == null ) { org.junit.Assert . assertNull ( s , actual ) ; return; } long esec = ( expected . getTime () ) / 1000L ; long asec = ( actual . getTime () ) / 1000L ; org.junit.Assert . assertEquals ( s , esec , asec ) ; } 
@ java.lang.Override public java.lang.Float getFloat ( java.lang.String key ) { java.lang.String value = getString ( key ) ; if ( value == null ) return notFound () ; try { return java.lang.Float . parseFloat ( value ) ; } catch ( java.lang.NumberFormatException e ) { return parseError ( e ) ; } } 
@ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { super . onSaveInstanceState ( outState ) ; mPinUnlockWizardFragmentViewModel . saveViewModelState ( outState ) ; outState . putCharSequence ( org.sufficientlysecure.keychain.ui.keyunlock.wizard.PinUnlockWizardFragment.STATE_SAVE_STATUS_TEXT , mPinUnlockDialogStatus . getText () ) ; outState . putInt ( org.sufficientlysecure.keychain.ui.keyunlock.wizard.PinUnlockWizardFragment.STATE_SAVE_CHECK_VISIBILITY , mCheckImageView . getVisibility () ) ; outState . putInt ( org.sufficientlysecure.keychain.ui.keyunlock.wizard.PinUnlockWizardFragment.STATE_SAVE_WRONG_VISIBILITY , mWrongImageView . getVisibility () ) ; outState . putInt ( org.sufficientlysecure.keychain.ui.keyunlock.wizard.PinUnlockWizardFragment.STATE_SAVE_STATUS_COLOR , mPinUnlockDialogStatus . getCurrentTextColor () ) ; } 
public static java.lang.String done ( int id ) { Task doneTask = Storage.tasks . get ( id ) ; doneTask . setDone ( true ) ; Storage.tasks . put ( id , doneTask ) ; Storage . writeToFile () ; return java.lang.String . format ( Constants.MESSAGE_UPDATED , doneTask . getUserFormat () ) ; } 
private void increaseSizes ( double timeDiff ) { synchronized ( circlesOnField ) { for ( bouncingballs.GameCircle circle : circlesOnField ) { if ( circle . isSelected () ) { invalidateEvents ( circle ) ; circle . increaseRadius ( timeDiff ) ; predict ( circle ) ; } } } } 
private java.lang.String getSelectedRow ( int selectedRow ) { Opcion opcion = new Opcion () ; opcion.Ejercicio = TablaOpcionesPUT . getValueAt ( selectedRow , 0 ) . toString () ; opcion.Tipo = "PUT" ; opcion.Vencimiento = TablaOpcionesPUT . getValueAt ( selectedRow , 8 ) . toString () ; opcion.Compra_Precio = TablaOpcionesPUT . getValueAt ( selectedRow , 2 ) . toString () ; optionsToWallet . add ( opcion . toString () ) ; return opcion . toString () ; } 
private void initViews () { int startOffset = getResources () . getDimensionPixelSize ( R.dimen.subject_list_refresh_start_offset ) ; int endOffset = getResources () . getDimensionPixelSize ( R.dimen.subject_list_refresh_end_offset ) ; pageMainSrl . setProgressViewOffset ( false , startOffset , endOffset ) ; pageMainLv . setOnScrollListener ( new com.londonx.lutil.impl.NextPageLoader ( pageMainLv , this , android.support.v4.content.ContextCompat . getColor ( getContext () , R.color.colorAccent ) ) ) ; pageMainLv . setOnItemClickListener ( this ) ; } 
private static app.util.HttpUtils.ContentType getContentType ( java.lang.String fileName ) { int lastDotPosition = fileName . lastIndexOf ( "." ) ; java.lang.String fileExtension ; if ( lastDotPosition != ( - 1 ) ) { fileExtension = fileName . substring ( ( lastDotPosition + 1 ) ) ; } else { fileExtension = fileName ; } fileExtension = fileExtension . toLowerCase () ; app.util.HttpUtils.ContentType contentType = app.util.HttpUtils.ContentType . valueOf ( fileExtension ) ; if ( contentType == null ) { app.util.HttpUtils.logger . error ( "Content-Type for file extension '{}' was not found" , fileExtension ) ; contentType = app.util.HttpUtils.ContentType.data ; } return contentType ; } 
private void initializeCatalog () { Products.ProductReader productReader ; try { productReader = new Products.ProductReader ( readFile ( productPath ) ) ; productCatalog = productReader . getProducts () ; for ( Products.ProductSpecification p : productCatalog ) { java.lang.System.out . println ( p . getProductUPC () ) ; } } catch ( java.io.IOException ex ) { java.util.logging.Logger . getLogger ( POST.POST . class . getName () ) . log ( java.util.logging.Level.SEVERE , null , ex ) ; } } 
public void align ( org.biojava.nbio.structure.Structure s , java.util.List < org.biojava.nbio.structure.Chain > seqResList ) { java.util.List < org.biojava.nbio.structure.Chain > atomList = s . getModel ( 0 ) ; for ( org.biojava.nbio.structure.Chain seqRes : seqResList ) { org.biojava.nbio.structure.Chain atomRes = org.biojava.nbio.structure.io.SeqRes2AtomAligner . getMatchingAtomRes ( seqRes , atomList ) ; if ( atomRes == null ) continue; mapSeqresRecords ( atomRes , seqRes ) ; } } 
@ java.lang.Override public edu.neu.ccs.pyramid.dataset.MultiLabel predict ( org.apache.mahout.math.Vector vector ) { edu.neu.ccs.pyramid.dataset.MultiLabel pred = null ; switch ( predictionMode ) { case "support" : pred = predictBySupport ( vector ) ; break; case "sampling" : pred = predictBySampling ( vector ) ; break; default: throw new java.lang.IllegalArgumentException ( "unknown mode" ) ; } return pred ; } 
@ java.lang.Override public void onChat ( net.minecraft.util.text.ITextComponent chat , java.lang.String message ) { java.lang.String newMessage = message . replaceAll ( java.lang.String . valueOf ( ChatColor.COLOR_CHAR ) , "&" ) . replace ( "&r" , "" ) ; chat . getStyle () . setClickEvent ( new net.minecraft.util.text.event.ClickEvent ( net.minecraft.util.text.event.ClickEvent.Action.RUN_COMMAND , ( "/cm copy " + newMessage ) ) ) ; if ( io.github.fridgey.chatmacros.util.ChatUtil . parseChat ( message . replace ( ChatColor.RESET . toString () , "" ) ) . isPresent () ) { mainOverview . addChatLine ( newMessage ) ; } } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { try { java.awt.image.BufferedImage image = javax.imageio.ImageIO . read ( new java.io.File ( twImages . getUrl () ) ) ; javax.swing.JLabel lbl = new javax.swing.JLabel ( new javax.swing.ImageIcon ( image ) ) ; javax.swing.JOptionPane . showMessageDialog ( null , lbl , "ImageDialog" , javax.swing.JOptionPane.PLAIN_MESSAGE , null ) ; } catch ( java.io.IOException e1 ) { e1 . printStackTrace () ; } } 
public void focuspanel () { if ( ( lastselectedPanel ) != null ) { lastselectedPanel . setBackground ( originColor ) ; } if ( ( selectedPanel ) != null ) { originColor = selectedPanel . getBackground () ; selectedPanel . setBackground ( java.awt.Color.GRAY ) ; } _editPans [ _tab . getSelectedIndex () ] . setComponentZOrder ( selectedPanel , 0 ) ; } 
private void delete ( com.example.dmytro.mapalert.pojo.CursorLocation item ) { dataSource . deleteLocation ( item . getId () , item . getItem () . getImagePath () ) ; int position = items . indexOf ( item ) ; items . remove ( position ) ; notifyItemRemoved ( position ) ; if ( mAddButton . hasShadow () ) mAddButton . show () ; } 
public void actionPerformed ( java.awt.event.ActionEvent event ) { java.awt.EventQueue . invokeLater ( new java.lang.Runnable () { public void run () { try { new group4.nevblast.NevBlastGui () . setVisible ( true ) ; } catch ( java.io.IOException ex ) { java.util.logging.Logger . getLogger ( group4.nevblast.NevBlastGui . class . getName () ) . log ( java.util.logging.Level.SEVERE , null , ex ) ; } } } ) ; destroyGui () ; } 
@ java.lang.Override public void begin ( com.badlogic.gdx.graphics.Camera camera , com.badlogic.gdx.graphics.g3d.utils.RenderContext context ) { this . context = context ; this . context . setDepthTest ( GL20.GL_LEQUAL , 0.0F , 1.0F ) ; this . context . setDepthMask ( true ) ; program . begin () ; set ( UNIFORM_PROJ_VIEW_MATRIX , camera.combined ) ; if ( ( primitiveType ) == ( com.badlogic.gdx.graphics.GL20.GL_TRIANGLES ) ) { set ( UNIFORM_WIREFRAME , 0 ) ; } else { set ( UNIFORM_WIREFRAME , 1 ) ; } } 
@ java.lang.Override public void consume ( java.util.List < com.google.gerrit.extensions.common.ChangeInfo > changeInfos ) { if ( ( changeInfos != null ) && ( ! ( changeInfos . isEmpty () ) ) ) { com.google.gerrit.extensions.common.ChangeInfo lastChangeInfo = com.google.common.collect.Iterables . getLast ( changeInfos ) ; hasMore = ( ( lastChangeInfo._moreChanges ) != null ) && ( lastChangeInfo._moreChanges ) ; sortkey = lastChangeInfo._sortkey ; changes . addAll ( changeInfos ) ; consumer . consume ( changeInfos ) ; } else { hasMore = false ; } lock . unlock () ; } 
@ java.lang.Override public void close ( ) throws java.io.IOException { isStared . set ( false ) ; isRunning . set ( false ) ; if ( ( fileWatcher ) != null ) fileWatcher . cancel () ; if ( ( fileChannel ) != null ) { fileChannel . close () ; } if ( ( buffer ) != null ) { buffer . flip () ; buffer . clear () ; buffer = null ; } com.kyj.fx.voeditor.visual.component.text.LogViewController.LOGGER . debug ( "Close Complate!" ) ; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) @ java.lang.Override public void onPostExecute ( com.ichi2.async.DeckTask.TaskData result ) { if ( result == null ) { return; } if ( ( mFragmented ) && ( removingCurrent ) ) { updateDeckList () ; openStudyOptions ( false ) ; } else { updateDeckList () ; } if ( mProgressDialog . isShowing () ) { try { mProgressDialog . dismiss () ; } catch ( java.lang.Exception e ) { timber.log.Timber . e ( e , "onPostExecute - Exception dismissing dialog" ) ; } } } 
private void init () { if ( ( speciesBuilder ) == null ) { return; } if ( isSecret () ) { speciesBuilder . setIsSecret () ; } setSpeciesProperties ( speciesBuilder ) ; species = speciesBuilder . build () ; template = branch . getTemplate () ; binnie.genetics.genetics.AlleleHelper . getInstance () . set ( template , EnumBeeChromosome.SPECIES , species ) ; setAlleles ( template ) ; genome = BeeManager.beeRoot . templateAsGenome ( template ) ; if ( speciesBuilder . isActive () ) { BeeManager.beeRoot . registerTemplate ( template ) ; } } 
private void sendMessage () { java.lang.String content = messageEditText . getText () . toString () . trim () ; if ( ! ( content . equals ( "" ) ) ) { repository . addMessage ( new com.homeservice.mickeycj.chatwithbot.model.Message ( com.homeservice.mickeycj.chatwithbot.ChatFragment.IS_USER , com.homeservice.mickeycj.chatwithbot.ChatFragment.USER_NAME , content ) ) ; socket . emit ( "new message" , content ) ; hideSoftKeyboard () ; updateChat () ; } } 
@ java.lang.Override public void onRequestPermissionsResult ( int requestCode , @ android.support.annotation.NonNull java.lang.String [] permissions , @ android.support.annotation.NonNull int [] grantResults ) { super . onRequestPermissionsResult ( requestCode , permissions , grantResults ) ; switch ( requestCode ) { case novitskyvitaly.geogroupproject.MainActivity.ACTION_CODE_START_SCREEN_ON_STARTUP : CheckAuthorization ( this ) ; break; case novitskyvitaly.geogroupproject.MainActivity.ACTION_CODE_START_LOCATION_REPORT_SERVICE : if ( ! ( LocationListenerService.IsServiceRunning ) ) novitskyvitaly.geogroupproject.LocationListenerService . startLocationListenerService ( this ) ; break; } } 
@ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > listview , android.view.View view , int position , long id ) { de.bahnhoefe.deutschlands.bahnhofsfotos.model.Bahnhof bahnhof = dbAdapter . fetchBahnhofByRowId ( id ) ; de.bahnhoefe.deutschlands.bahnhofsfotos.model.Country country = dbAdapter . fetchCountryByCountryShortCode ( countryShortCode ) ; android.util.Log . d ( TAG , country . getEmail () ) ; java.lang.Class cls = de.bahnhoefe.deutschlands.bahnhofsfotos.DetailsActivity . class ; android.content.Intent intentDetails = new android.content.Intent ( this , cls ) ; intentDetails . putExtra ( DetailsActivity.EXTRA_BAHNHOF , bahnhof ) ; intentDetails . putExtra ( DetailsActivity.EXTRA_COUNTRY , country ) ; startActivity ( intentDetails ) ; } 
public static java.util.ArrayList < java.lang.Integer > searchTask ( java.util.function.Predicate < logic.Task > p ) { Storage.Storage.indexList . clear () ; for ( int i = 0 ; i < ( Storage.Storage.taskList . size () ) ; i ++ ) { logic.Task task = Storage.Storage.taskList . get ( i ) ; if ( p . test ( task ) ) { Storage.Storage.logger . log ( java.util.logging.Level.INFO , "Stores all hits indices in the indexList" ) ; Storage.Storage.indexList . add ( Storage.Storage.indexList . get ( i ) ) ; } } return Storage.Storage.indexList ; } 
public void joinChannel ( java.lang.String channel , boolean startup ) { if ( ( output ) == null ) { synchronized ( tempchannels ) { tempchannels . put ( channel , "" ) ; com.mak001.ircbot.Boot . getLogger () . log ( LogType.BOT , ( ( "Added channel " + channel ) + " to join queue" ) ) ; } } else { synchronized ( channels ) { channels . put ( channel , new com.mak001.ircbot.irc.Channel ( this , channel , startup ) ) ; } output . sendRawLine ( ( "JOIN " + channel ) ) ; } } 
@ org.junit.Test public void koTest2 () { com.letitgo.Board board = new com.letitgo.Board ( 9 ) ; board . loadFromFile ( "BoardTest_b.dat" ) ; board . makeMove ( new com.letitgo.Point ( board , 3 , 1 ) , Board.FRIENDLY ) ; board . printBoard () ; org.junit.Assert . assertTrue ( "KO test failed" , ( ( board . checkRules ( new com.letitgo.Point ( board , 2 , 1 ) , Board.ENEMY ) ) == true ) ) ; } 
private azkaban.server.session.Session getSessionFromSessionId ( java.lang.String sessionId , java.lang.String remoteIp ) { if ( sessionId == null ) { return null ; } azkaban.server.session.Session session = getApplication () . getSessionCache () . getSession ( sessionId ) ; if ( ( session == null ) || ( ! ( remoteIp . equals ( session . getIp () ) ) ) ) { return null ; } return session ; } 
public boolean accountAction ( double amount ) { try { java.lang.Integer i = 3 ; outToServer . writeObject ( i ) ; outToServer . writeObject ( amount ) ; boolean complete = ( ( boolean ) ( inFromServer . readObject () ) ) ; return complete ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } catch ( java.lang.ClassNotFoundException e ) { e . printStackTrace () ; } return false ; } 
@ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/semesterId/{semesterId}/groupNo/{groupNo}/type/{type}" ) @ javax.ws.rs.Produces ( value = "application/pdf" ) public javax.ws.rs.core.Response createOrViewSeatPlan ( @ javax.ws.rs.core.Context final javax.ws.rs.core.Request pRequest , @ javax.ws.rs.PathParam ( value = "semesterId" ) final java.lang.String pSemesterId , @ javax.ws.rs.PathParam ( value = "groupNo" ) final java.lang.String pGroupNo , @ javax.ws.rs.PathParam ( value = "type" ) final java.lang.String pType ) throws java.lang.Exception { javax.ws.rs.core.StreamingOutput strem = mSeatPlanResourceHelper . createOrCheckSeatPlanAndReturnRoomList ( java.lang.Integer . parseInt ( pSemesterId ) , java.lang.Integer . parseInt ( pGroupNo ) , java.lang.Integer . parseInt ( pType ) , pRequest , mUriInfo ) ; java.io.File file = new java.io.File ( org.ums.common.academic.resource.SeatPlanResource.FILE_PATH ) ; javax.ws.rs.core.Response.ResponseBuilder response = javax.ws.rs.core.Response . ok ( ( ( java.lang.Object ) ( file ) ) ) ; response . header ( "SeatPlan Report" , "attachment;filename=seatPlanReport.pdf" ) ; return response . build () ; } 
@ java.lang.Override public void onConnectionFailed ( com.google.android.gms.common.ConnectionResult result ) { com.google.android.gms.fit.samples.common.logger.Log . i ( com.google.android.gms.fit.samples.basichistoryapi.MainActivity.TAG , ( "Google Play services connection failed. Cause: " + ( result . toString () ) ) ) ; android.support.design.widget.Snackbar . make ( this . findViewById ( R.id.main_activity_view ) , ( "Exception while connecting to Google Play services: " + ( result . getErrorMessage () ) ) , Snackbar.LENGTH_INDEFINITE ) ; } 
public void deleteUser ( final java.lang.String name , final java.lang.String id ) throws javax.jcr.RepositoryException { org.jahia.training.JCRTemplate . getInstance () . doExecuteWithSystemSession ( new org.jahia.training.JCRCallback () { @ java.lang.Override public java.lang.Boolean doInJCR ( final org.jahia.training.JCRSessionWrapper session ) throws javax.jcr.RepositoryException { org.jahia.services.content.decorator.JCRUserNode user = getUserByName ( name , session ) ; jahiaUserManagerService . deleteUser ( user . getPath () , session ) ; session . save () ; return true ; } } ) ; } 
public static java.lang.Double normalizeValue ( java.lang.Double value , java.lang.Double maxValue , java.text.DecimalFormat df ) { java.lang.Double temp = value / maxValue ; if ( temp >= 1.0 ) { temp = TensorFlowUtils.NORMALIZATION_MAX ; } else if ( value < ( TensorFlowUtils.NORMALIZATION_MIN ) ) { temp = TensorFlowUtils.NORMALIZATION_MIN ; } else { temp = java.lang.Double . valueOf ( df . format ( temp ) ) ; } return temp ; } 
@ java.lang.Override public void doFilter ( javax.servlet.ServletRequest request , javax.servlet.ServletResponse response , javax.servlet.FilterChain chain ) throws java.io.IOException , javax.servlet.ServletException { javax.servlet.http.HttpServletRequest httpRequest = ( ( javax.servlet.http.HttpServletRequest ) ( request ) ) ; if ( "POST" . equals ( httpRequest . getMethod () ) ) { chain . doFilter ( request , response ) ; } nestedFilter . doFilter ( httpRequest , response , chain ) ; } 
private static double calculateQ2 ( Shop s ) { double ingredientRatio = ( s.recipe.milk ) / ( Model.milkMax ) ; if ( ingredientRatio < ( ( double ) ( 2 / 3 ) ) ) { return 1.5 * ingredientRatio ; } else { return ( 1 - ingredientRatio ) * 3 ; } } 
private void returnToMain () { if ( ( isFinishing () ) || ( ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.JELLY_BEAN_MR1 ) ) && ( isDestroyed () ) ) ) { return; } if ( allowsHomeUp ) { onBackPressed () ; } else { android.content.Intent intent = new android.content.Intent ( this , org.a5calls.android.a5calls.controller.MainActivity . class ) ; startActivity ( intent ) ; finish () ; } } 
void drawNextShape ( java.awt.Graphics g ) { logic.ShapePrototypes nextShape = window . getGamePanel () . getGame () . getNextShape () . getPrototype () ; for ( logic.Vector2 pos : nextShape . getPositions () ) { drawSinglePiece ( g , pos.x , pos.y , nextShape . getColor () ) ; } } 
@ org.springframework.web.bind.annotation.ExceptionHandler ( value = java.lang.Exception . class ) @ org.springframework.web.bind.annotation.ResponseBody org.springframework.http.ResponseEntity < ? > handleControllerException ( javax.servlet.http.HttpServletRequest request , java.lang.Throwable ex ) { org.springframework.http.HttpStatus status = getStatus ( request ) ; logger . error ( "controller catch some error" , ex ) ; return new org.springframework.http.ResponseEntity < java.lang.Object > ( new com.baifendian.swordfish.webserver.exception.CustomErrorType ( NOT_MODIFIED , ex . getMessage () ) , NOT_MODIFIED ) ; } 
public boolean resetCode ( java.lang.String token ) { if ( ( isTokenRegister ( token ) ) == false ) { return false ; } java.lang.String code = createRandomCode () ; java.lang.String sql = ( ( ( "update conn set code = '" + code ) + "' where realtoken = '" ) + token ) + "'" ; try { java.sql.PreparedStatement preparedStatement = connection . prepareStatement ( sql ) ; preparedStatement . execute () ; } catch ( java.sql.SQLException e ) { return false ; } return true ; } 
private void saveSettingsBtnActionPerformed ( java.awt.event.ActionEvent evt ) { if ( ( game ) != null ) { game . setPaused ( true ) ; } updateGUI () ; java.io.File f = saveDialog ( "AIrium_settings.ini" ) ; if ( f == null ) { return; } java.lang.String settings = com.mygdx.game.Serializer . serializeSettings ( options ) ; com.mygdx.game.Serializer . saveToFile ( f , settings ) ; javax.swing.JOptionPane . showMessageDialog ( this , "Done" ) ; } 
public static void main ( java.lang.String [] args ) { java.awt.EventQueue . invokeLater ( new java.lang.Runnable () { public void run () { try { PrisonEscape window = new PrisonEscape () ; window.frame . setVisible ( true ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } } ) ; PrisonEscape . newGame () ; } 
public static void display ( android.content.Context mContext , java.lang.String url , final android.widget.ImageView img , com.bumptech.glide.request.RequestListener listener ) { com.bumptech.glide.Glide . with ( mContext ) . load ( url ) . listener ( listener ) . placeholder ( com.xinyi.czbasedevtool.base.manager.ui_about.GlideMaster.placeHolderRes ) . error ( com.xinyi.czbasedevtool.base.manager.ui_about.GlideMaster.errorHolderRes ) . dontAnimate () . into ( img ) ; } 
public synchronized boolean release ( java.lang.String hostname ) { java.util.Iterator < kostiskag.unitynetwork.tracker.runData.RedNodeEntry > iterator = list . listIterator () ; int i = 0 ; while ( iterator . hasNext () ) { kostiskag.unitynetwork.tracker.runData.RedNodeEntry element = iterator . next () ; if ( hostname . equals ( element . getHostname () ) ) { list . remove ( i ) ; notifyGUI () ; kostiskag.unitynetwork.tracker.App . ConsolePrint ( ( ( ( kostiskag.unitynetwork.tracker.runData.RedNodeTable.pre ) + hostname ) + " RELEASED ENTRY" ) ) ; return true ; } i ++ ; } return false ; } 
protected leap.orm.sql.SqlStatement createQueryStatement ( leap.orm.query.QueryContext qc , java.lang.String sql ) { leap.orm.sql.SqlClause clause = context . getQueryFactory () . createQueryClause ( dao , sql ) ; if ( null != ( whereParameters ) ) { return clause . createQueryStatement ( qc , whereParameters ) ; } else { return clause . createQueryStatement ( qc , params ) ; } } 
private void setValue ( java.lang.String name , java.lang.Object value , com.health.ValueType type ) { com.health.Column column = this . table . getColumn ( name ) ; if ( column == null ) { throw new java.lang.IllegalArgumentException () ; } if ( ( column . getType () ) != type ) { throw new java.lang.IllegalStateException () ; } this . values [ column . getIndex () ] = value ; } 
public static com.blackducksoftware.integration.hub.rest.RestConnection getRestConnection ( final com.blackducksoftware.integration.log.IntLogger logger , final java.lang.String serverUrl , final java.lang.String username , final java.lang.String password , final int hubTimeout ) throws com.blackducksoftware.integration.exception.EncryptionException , java.net.MalformedURLException { final com.blackducksoftware.integration.hub.builder.HubServerConfigBuilder hubServerConfigBuilder = new com.blackducksoftware.integration.hub.builder.HubServerConfigBuilder () ; hubServerConfigBuilder . setHubUrl ( serverUrl ) ; hubServerConfigBuilder . setUsername ( username ) ; hubServerConfigBuilder . setPassword ( password ) ; hubServerConfigBuilder . setTimeout ( hubTimeout ) ; return com.blackducksoftware.integration.hub.jenkins.helper.BuildHelper . getRestConnection ( logger , hubServerConfigBuilder ) ; } 
private boolean dfs ( final nl.rostykerei.cci.datastructure.Node < T > node , final nl.rostykerei.cci.datastructure.Node < T > finish , final java.util.Set < nl.rostykerei.cci.datastructure.Node > seen ) { if ( node == finish ) { return true ; } seen . add ( node ) ; for ( nl.rostykerei.cci.datastructure.Node < T > n : node . getChildren () ) { if ( ! ( seen . contains ( n ) ) ) { if ( dfs ( n , finish , seen ) ) { return true ; } } } return false ; } 
@ java.lang.Override public com.scrawlsoft.gjournal.MainActivity.TheViewHolder onCreateViewHolder ( android.view.ViewGroup parent , int viewType ) { java.lang.System.out . println ( ( "VT: " + viewType ) ) ; android.view.View view = android.view.LayoutInflater . from ( parent . getContext () ) . inflate ( viewType , parent , false ) ; android.widget.TextView textView = ( ( android.widget.TextView ) ( view . findViewById ( android.R.id.text1 ) ) ) ; return new com.scrawlsoft.gjournal.MainActivity.TheViewHolder ( view , textView ) ; } 
@ java.lang.Override public void onActivityResult ( final int requestCode , final int resultCode , final android.content.Intent intent ) { final com.google.zxing.integration.android.IntentResult scanResult = com.google.zxing.integration.android.IntentIntegrator . parseActivityResult ( requestCode , resultCode , intent ) ; if ( scanResult != null ) { final java.lang.String result = scanResult . getContents () ; addNewContact ( result ) ; } else { com.nervousfish.nervousfish.activities.QRExchangeKeyActivity.LOGGER . error ( "No scan result in QR Scanner" ) ; } } 
@ org.junit.Test public void updateDesiredPropertyEmptyMapSucceed () { tests.unit.com.microsoft.azure.sdk.iot.deps.serializer.TwinParser twinParser = new tests.unit.com.microsoft.azure.sdk.iot.deps.serializer.TwinParser () ; java.util.Map < java.lang.String , java.lang.Object > newValues = new java.util.HashMap <> () ; java.lang.String json = twinParser . updateDesiredProperty ( newValues ) ; assertNull ( json ) ; java.util.Map < java.lang.String , java.lang.Object > result = twinParser . getDesiredPropertyMap () ; assertNull ( result ) ; } 
private se.l4.commons.serialization.format.Token toToken ( char c ) { switch ( c ) { case '{' : return Token.OBJECT_START ; case '}' : return Token.OBJECT_END ; case '[' : return Token.LIST_START ; case ']' : return Token.LIST_END ; case '"' : if ( ( ( current () ) != ( Token.KEY ) ) && ( ! ( lists [ level ] ) ) ) { return Token.KEY ; } } if ( c == 'n' ) { return Token.NULL ; } return Token.VALUE ; } 
public void validateUpdate () { com.innovaee.eorder.module.entity.Role role1 = roleService . loadRole ( java.lang.Integer . parseInt ( roleId ) ) ; com.innovaee.eorder.module.entity.Role role2 = roleService . findRoleByRoleName ( roleName ) ; if ( ( null != role2 ) && ( role1 . getRoleId () . equals ( role2 . getRoleId () ) ) ) { addFieldError ( "roleName" , "角色名称已被占用！" ) ; refreshData () ; } } 
private void invoke ( com.hazelcast.client.impl.protocol.ClientMessage request ) { try { com.hazelcast.client.spi.impl.ClientInvocation invocation = new com.hazelcast.client.spi.impl.ClientInvocation ( instance , request , null ) ; com.hazelcast.client.spi.impl.ClientInvocationFuture future = invocation . invoke () ; com.hazelcast.client.impl.protocol.ClientMessage response = future . get () ; } catch ( java.lang.Exception e ) { throw com.hazelcast.util.ExceptionUtil . rethrow ( e ) ; } } 
private java.io.File getFile ( java.lang.String datasetName ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; builder . append ( configuration . getString ( no.imr.nmdapi.dao.file.NMDSeriesReferenceDaoImpl.PRE_DATA_DIR ) ) . append ( java.io.File.separator ) ; builder . append ( datasetName ) . append ( java.io.File.separator ) ; builder . append ( no.imr.nmdapi.dao.file.NMDSeriesReferenceDaoImpl.DATASET_FILENAME . concat ( ".xml" ) ) ; return new java.io.File ( builder . toString () ) ; } 
public boolean checkLogin () { try { EntityManager.Staff staff = ( ( EntityManager.Staff ) ( session . getAttribute ( "staff" ) ) ) ; if ( staff == null ) { return false ; } else { if ( staff . getIsAdmin () ) { isAdmin = true ; loggedInStaffID = staff . getId () ; } return true ; } } catch ( java.lang.Exception ex ) { return false ; } } 
public java.lang.String isStorageAccountNameReferenceTypeEquals ( final java.lang.String type ) { if ( ( ( this . storageAccountNameReferenceType ) == null ) && ( type . equalsIgnoreCase ( "new" ) ) ) { return "true" ; } return ( type != null ) && ( type . equalsIgnoreCase ( this . storageAccountNameReferenceType ) ) ? "true" : "false" ; } 
@ java.lang.Override public int read ( ) throws java.io.IOException { if ( ( uncompressedChunkOffset ) >= ( uncompressedChunkLength ) ) { readNextChunk ( uncompressedChunk , 0 , uncompressedChunk.length ) ; if ( ( uncompressedChunkLength ) == 0 ) { return - 1 ; } } return ( uncompressedChunk [ ( ( uncompressedChunkOffset ) -- ) ] ) & 255 ; } 
@ java.lang.Override public void onError ( java.lang.Exception error ) { try { com.facebook.react.bridge.WritableMap result = com.facebook.react.bridge.Arguments . createMap () ; if ( error == null ) { result . putString ( "error" , "" ) ; } else { result . putString ( "error" , error . toString () ) ; } failureCallback . invoke ( result ) ; } catch ( org.json.JSONException exception ) { com.facebook.react.bridge.WritableMap result = com.facebook.react.bridge.Arguments . createMap () ; result . putString ( "error" , e . toString () ) ; failureCallback . invoke ( result ) ; } } 
protected static Controller.AbstractController switchToScene ( javafx.stage.Stage primaryStage , java.lang.String pathToView ) throws java.io.IOException { javafx.fxml.FXMLLoader loader ; javafx.scene.Parent root ; loader = new javafx.fxml.FXMLLoader ( Controller.SceneSwitcher . class . getResource ( Controller.SceneSwitcher.AdminWelcomeViewPath ) ) ; root = loader . load () ; javafx.scene.Scene scene = new javafx.scene.Scene ( root ) ; primaryStage . setScene ( scene ) ; Controller.AbstractController controller = loader . getController () ; controller . setStage ( primaryStage ) ; return controller ; } 
private void saveCategories () { org.bukkit.configuration.Configuration config = plugin . getConfig () ; for ( me.semakon.localStorage.Category category : categories ) { if ( category . equals ( defaultCategory ) ) continue; config . set ( ( ( ( me.semakon.Utils.CATEGORIES ) + ( category . getId () ) ) + ".Name" ) , category . getName () ) ; config . set ( ( ( ( me.semakon.Utils.CATEGORIES ) + ( category . getId () ) ) + ".Description" ) , category . getDescription () ) ; } } 
@ java.lang.Override public void onTouchEnd ( com.google.gwt.event.dom.client.TouchEndEvent event ) { if ( newCreationMode ) { setFocus ( true ) ; } else { long time = java.lang.System . currentTimeMillis () ; if ( ( time - ( latestTouchEndTime ) ) < 500 ) { latestTouchEndTime = time ; onDoubleClickAction ( false , false ) ; } else { latestTouchEndTime = time ; } } longTouchManager . cancelTimer () ; geogebra.html5.event.PointerEvent wrappedEvent = geogebra.html5.event.PointerEvent . wrapEvent ( event , ZeroOffset.instance ) ; onPointerUp ( wrappedEvent ) ; geogebra.html5.gui.util.CancelEventTimer . touchEventOccured () ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_game ) ; this . GUI = java.lang.Thread . currentThread () ; this . BQTask = null ; this . DQTask = null ; this . guiContext = this ; this . highscore = 0 ; this . life = 7 ; initAnswerButtons () ; initLife () ; readQuestions () ; startAsyncMain () ; } 
@ javafx.fxml.FXML void addSample () { sineWave += 0.1 ; PiSeries . getData () . add ( new javafx.scene.chart.XYChart.Data < java.lang.Number , java.lang.Number > ( ( ( ( java.lang.System . currentTimeMillis () ) - ( startTime ) ) * 2 ) , java.lang.Math . sin ( sineWave ) ) ) ; if ( ( xAxis . getUpperBound () ) > ( ( startWave ) + ( clearWave ) ) ) { startWave = xAxis . getUpperBound () ; series . getData () . clear () ; } } 
public final java.lang.Object readObject ( java.net.URL locationArgument , org.apache.pivot.util.Resources resourcesArgument ) throws java.io.IOException , org.apache.pivot.serialization.SerializationException { if ( locationArgument == null ) { throw new java.lang.IllegalArgumentException ( "location is null." ) ; } this . location = locationArgument ; this . resources = resourcesArgument ; java.io.InputStream inputStream = new java.io.BufferedInputStream ( locationArgument . openStream () ) ; java.lang.Object object ; try { object = readObject ( inputStream ) ; } finally { inputStream . close () ; } this . location = null ; this . resources = null ; return object ; } 
private void drawBackground ( java.awt.Graphics g , int [] background , int [] user ) { int [] pixels ; java.awt.image.BufferedImage img = new java.awt.image.BufferedImage ( width , height , java.awt.image.BufferedImage.TYPE_INT_ARGB ) ; img . setRGB ( 0 , 0 , width , height , background , 0 , width ) ; g . drawImage ( img , 0 , 0 , getWidth () , getHeight () , null ) ; } 
public void timeout () { jobStatus = dk.lessismore.nojpa.masterworker.JobStatus.DONE ; kill () ; if ( ! ( result . hasValue () ) ) { dk.lessismore.nojpa.masterworker.client.JobHandle.log . error ( "SETTING RESULT TO NULL -TIMEOUT.....!!!!" ) ; result . setValue ( new dk.lessismore.nojpa.utils.Pair < O , java.lang.RuntimeException > ( null , new dk.lessismore.nojpa.masterworker.exceptions.TimeoutException () ) ) ; } else { result . resignal () ; } } 
@ java.lang.Override public void callback ( boolean success , final java.util.ArrayList < java.lang.String > images ) { android.widget.GridView gridView = ( ( android.widget.GridView ) ( view . findViewById ( R.id.gridView ) ) ) ; gridView . setAdapter ( new com.mobileproto.jovanduy.photofeed.ImageAdapter ( getContext () , images ) ) ; gridView . setOnItemClickListener ( new android.widget.AdapterView.OnItemClickListener () { @ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { openAdder ( images . get ( position ) ) ; } } ) ; links = images ; } 
public void setupEqEffect ( int audioSessionId ) { android.util.Log . d ( com.sloths.speedy.shortsounds.model.EqEffect.TAG , ( ( "Attaching EQ to track id [" + audioSessionId ) + "]" ) ) ; try { this . effect = new android.media.audiofx.Equalizer ( 0 , audioSessionId ) ; setEffectProperties () ; this . effect . setEnabled ( isActive ) ; android.util.Log . d ( com.sloths.speedy.shortsounds.model.EqEffect.TAG , ( ( "Enabled [" + ( effect . getEnabled () ) ) + "]" ) ) ; } catch ( java.lang.Exception e ) { android.util.Log . e ( com.sloths.speedy.shortsounds.model.EqEffect.TAG , "Error creating the Equalizer" ) ; e . printStackTrace () ; } } 
public void addTelevisionToChannel ( TV.Television television , TV.Channel previousChannel , TV.Channel newChannel ) { if ( previousChannel != null ) { logger . info ( java.lang.String . format ( "Removing television (%s) from previous channel (%s)." , television . getId () , television . getId () ) ) ; channelMap . removeTV ( previousChannel , television ) ; } logger . info ( java.lang.String . format ( "Adding television (%s) to channel (%s)." , television . getId () , newChannel . getId () ) ) ; channelMap . putTV ( newChannel , television ) ; } 
private void listenSources () { try { java.lang.System.out . println ( "Waiting for connection from sources..." ) ; sinkSocket = new java.net.ServerSocket ( 7001 ) ; while ( true ) { java.net.Socket sourceSocket = this . sourceSocket . accept () ; java.lang.System.out . println ( ( ( "Connection from source: " + ( sourceSocket . getInetAddress () ) ) + " was established." ) ) ; notifySink ( sourceSocket ) ; sourceSocket . close () ; java.lang.System.out . println ( "Waiting for connection from sources..." ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
public static void Recording () { if ( org.usfirst.frc.team245.robot.GhostModeWrite.recordingGhost = true ) { double triggerValue = Gamepad.primary . getTriggers () ; double joystickValue = Gamepad.primary . getLeftX () ; long timeStamp = ( org.usfirst.frc.team245.robot.GhostModeWrite.startTime ) - ( java.lang.System . nanoTime () ) ; double [] myIntArray = new double [] { triggerValue , joystickValue , ( ( double ) ( timeStamp ) ) } ; org.usfirst.frc.team245.robot.GhostModeWrite.arrayContainer [ org.usfirst.frc.team245.robot.GhostModeWrite.index ] = myIntArray ; ( org.usfirst.frc.team245.robot.GhostModeWrite.index ) ++ ; } else {} } 
public int compare ( com.mygdx.game.entities.components.Rendering.RenderComponent d , com.mygdx.game.entities.components.Rendering.RenderComponent d1 ) { return ( ( int ) ( java.lang.Math . floor ( ( ( ( ( d . getSortingLayer () ) + 0.95F ) - ( d . getInnerSortingLayer () ) ) - ( ( ( d1 . getSortingLayer () ) + 0.95F ) - ( d1 . getInnerSortingLayer () ) ) ) ) ) ) ; } 
private void createWrittenVariableContent ( java.util.List < microbat.model.value.VarValue > writtenVariables ) { this . writtenVariableTreeViewer . setContentProvider ( new microbat.views.DebugFeedbackView.RWVariableContentProvider () ) ; this . writtenVariableTreeViewer . setLabelProvider ( new microbat.views.DebugFeedbackView.VariableLabelProvider () ) ; this . writtenVariableTreeViewer . setInput ( writtenVariables ) ; setChecks ( this . writtenVariableTreeViewer , microbat.views.DebugFeedbackView.RW ) ; this . writtenVariableTreeViewer . refresh ( true ) ; } 
private void fadeOutInfo () { if ( ( mInfo . getVisibility () ) == ( android.view.View.VISIBLE ) ) mInfo . startAnimation ( android.view.animation.AnimationUtils . loadAnimation ( this , android.R.anim.fade_out ) ) ; mInfo . setVisibility ( View.INVISIBLE ) ; if ( ( mPresentation ) == null ) { if ( ( mVerticalBar . getVisibility () ) == ( android.view.View.VISIBLE ) ) mVerticalBar . startAnimation ( android.view.animation.AnimationUtils . loadAnimation ( this , android.R.anim.fade_out ) ) ; mVerticalBar . setVisibility ( View.INVISIBLE ) ; } } 
@ org.junit.Test public void removeMemberTest () { JsonObject memberJson = TestUtils . readJsonObjectFromFile ( ( ( RegistryTest.JSON_FILE_DIR ) + "member.json" ) ) ; RegistryTest.registry . addMember ( memberJson ) ; long memberID = RegistryTest . getMemberBySsn ( RegistryTest.registry , memberJson . getString ( "socialSecurityNumber" ) ) . getMemberID () ; RegistryTest.registry . removeMember ( memberID ) ; assertNull ( RegistryTest.registry . getMember ( memberID ) ) ; } 
public boolean step () { resetUpdates () ; executeOneStep () ; _mp . highlightChar ( _pa , _x , _y ) ; _mp . setStack ( _ps . toString () ) ; _mp . refresh ( _updateTa , _updateStack , _updateOutput ) ; return _programComplete ; } 
@ java.lang.Override protected boolean removeBreakpoint ( java.lang.String uri , int lineNo ) { java.util.Map < java.lang.Integer , org.chromium.sdk.Breakpoint > scriptBreakpoints = breakpoints . get ( uri ) ; if ( scriptBreakpoints != null ) { org.chromium.sdk.Breakpoint bp = scriptBreakpoints . remove ( java.lang.Integer . valueOf ( lineNo ) ) ; if ( bp != null ) { org.chromium.sdk.CallbackSemaphore semaphore = new org.chromium.sdk.CallbackSemaphore () ; semaphore . acquireDefault ( bp . clear ( callback , semaphore ) ) ; breakpointProps . remove ( bp ) ; return true ; } } return false ; } 
@ org.expath.ns.Test public void asText () { org.expath.ns.GeoTest . run ( ( "geo:asText(<gml:LineString><gml:coordinates>1,1 55,99 2,1" + "</gml:coordinates></gml:LineString>)" ) , "LINESTRING (1 1, 55 99, 2 1)" ) ; org.expath.ns.GeoTest . error ( "geo:asText(text {'a'})" , org.expath.ns.INVCAST_X_X_X . qname () ) ; org.expath.ns.GeoTest . error ( "geo:asText(<gml:unknown/>)" , org.expath.ns.GeoErrors . qname ( 1 ) ) ; org.expath.ns.GeoTest . error ( ( "geo:asText(<gml:LineString><gml:coordinates>1,1</gml:coordinates>" + "</gml:LineString>)" ) , org.expath.ns.GeoErrors . qname ( 2 ) ) ; } 
private void setTraversingState ( @ android.support.annotation.NonNull com.solera.defrag.TraversingState traversing ) { if ( ( traversing != ( TraversingState.IDLE ) ) && ( ( traversingState ) != ( TraversingState.IDLE ) ) ) { throw new java.lang.IllegalStateException ( "ViewStack is currently traversing" ) ; } traversingState = traversing ; for ( com.solera.defrag.ViewStackListener listener : viewStackListeners ) { listener . onTraversing ( traversingState ) ; } } 
@ java.lang.SuppressWarnings ( value = "deprecation" ) @ java.lang.Override public jd.plugins.AccountInfo fetchAccountInfo ( final jd.plugins.Account account ) throws java.lang.Exception { final jd.plugins.AccountInfo ai = new jd.plugins.AccountInfo () ; try { login ( account , true ) ; } catch ( jd.plugins.PluginException e ) { account . setValid ( false ) ; throw e ; } ai . setUnlimitedTraffic () ; account . setType ( AccountType.FREE ) ; ai . setStatus ( "Registered (free) user" ) ; account . setValid ( true ) ; return ai ; } 
private static void check () { if ( ( meta.DataManager.data ) == null ) meta.DataManager.data = new meta.Data () ; java.lang.System.out . println ( ( ( "Created new data object (" + ( meta.DataManager.i ) ) + ")" ) ) ; ( meta.DataManager.i ) ++ ; } 
public static void handleGoForwardControlVisibility () { if ( ( io.xdevs23.cornowser.browser.CornBrowser.publicWebRender.currentProgress ) != 100 ) { io.xdevs23.cornowser.browser.CornBrowser.goForwardImgBtn . setBackgroundResource ( ( io.xdevs23.cornowser.browser.browser.modules.WebThemeHelper.isDark ? R.drawable.main_cross_rot_icon_light : R.drawable.main_cross_rot_icon ) ) ; io.xdevs23.cornowser.browser.CornBrowser.goForwardImgBtn . setVisibility ( View.VISIBLE ) ; } else { if ( io.xdevs23.cornowser.browser.CornBrowser.publicWebRender . canGoForward () ) { if ( ( Build.VERSION.SDK_INT ) < ( Build.VERSION_CODES.JELLY_BEAN ) ) io.xdevs23.cornowser.browser.CornBrowser.goForwardImgBtn . setBackgroundResource ( ( io.xdevs23.cornowser.browser.browser.modules.WebThemeHelper.isDark ? R.drawable.ic_arrow_forward_white_48dp : R.drawable.ic_arrow_forward_black_48dp ) ) ; io.xdevs23.cornowser.browser.CornBrowser.goForwardImgBtn . setVisibility ( View.VISIBLE ) ; } else io.xdevs23.cornowser.browser.CornBrowser.goForwardImgBtn . setVisibility ( View.INVISIBLE ) ; } } 
private boolean isHexInteger ( java.lang.String token ) { if ( ( ( token . length () ) < 3 ) || ( ( ! ( token . startsWith ( "0X" ) ) ) && ( ! ( token . startsWith ( "0x" ) ) ) ) ) { return false ; } java.lang.String body = token . substring ( 2 ) ; try { java.lang.Integer . parseInt ( body , 16 ) ; return true ; } catch ( java.lang.NumberFormatException ex ) { return false ; } } 
@ java.lang.Override public edu.cmu.ml.rtw.pra.features.FeatureMatrix getFeatureMatrix () { edu.cmu.ml.rtw.pra.features.RescalMatrixPathFollower.logger . info ( "Creating feature matrix with matrix multiplication" ) ; edu.cmu.ml.rtw.pra.features.RescalPathMatrixCreator matrixCreator = new edu.cmu.ml.rtw.pra.features.RescalPathMatrixCreator ( numNodes , pathTypes , data . getCombinedSourceMap () . keySet () , rescalDir , nodeDict , edgeDict , negativesPerSource , fileUtil ) ; return matrixCreator . getFeatureMatrix ( data . getCombinedSourceMap () . keySet () , allowedTargets , true ) ; } 
public void deserialize () { java.lang.System.out . println ( "Deserializing in Start" ) ; try { java.io.FileInputStream fileIn = new java.io.FileInputStream ( "users.ser" ) ; java.io.ObjectInputStream in = new java.io.ObjectInputStream ( fileIn ) ; users = ( ( components.Users ) ( in . readObject () ) ) ; in . close () ; fileIn . close () ; } catch ( java.io.IOException i ) { i . printStackTrace () ; return; } catch ( java.lang.ClassNotFoundException c ) { java.lang.System.out . println ( "UserObs class not found" ) ; c . printStackTrace () ; return; } } 
public java.util.List makeMajorRecommendations ( java.lang.String major ) { Recommendations = new java.util.ArrayList < Movie > () ; for ( java.lang.String s : movies . keySet () ) { if ( movies . get ( s ) . getMajor () . equals ( major ) ) { Recommendations . add ( movies . get ( s ) ) ; } } return Recommendations ; } 
private void startIoManager () { if ( ( StateBuffer.CONNECTION ) != null ) { mSerialIoManager = new kr.usis.serial.util.SerialInputManager ( StateBuffer.CONNECTION , mListener ) ; mExecutor . submit ( mSerialIoManager ) ; hbrThread = new kr.usis.u_drone.HBReceive ( mHandler ) ; hbrThread . setDaemon ( true ) ; hbrThread . start () ; hbsThread = new kr.usis.u_drone.HBSend () ; hbsThread . start () ; chsendThread = new kr.usis.u_drone.ThreadChSend () ; chsendThread . start () ; cntThread = new kr.usis.u_drone.CntProcedure () ; cntThread . start () ; } } 
private void runController () { timeline = new javafx.animation.Timeline ( new javafx.animation.KeyFrame ( javafx.util.Duration . seconds ( 1 ) , ( eve ) - > { for ( sample.Charakter chara : charakters ) { if ( chara . isActive () ) { chara . move ( this ) ; } } levelController () ; view . updateGameField ( charakters ) ; giveRandomCredits () ; view . updateCredits ( credits , this ) ; } ) ) ; timeline . setCycleCount ( javafx.animation.Animation.INDEFINITE ) ; timeline . play () ; } 
private void removeOldBinding ( final isogame.engine.KeyBinding b0 , final isogame.engine.KeyBinding b1 , final javafx.scene.input.KeyCodeCombination k ) { if ( ( b0 != null ) && ( b0 != b1 ) ) { if ( ( primaryKeys . get ( b0 ) ) == k ) primaryKeys . remove ( b0 ) ; if ( ( secondaryKeys . get ( b0 ) ) == k ) secondaryKeys . remove ( b0 ) ; } } 
public float calculateDistanceSince ( java.time.Instant t1 ) throws devices.encoder.Encoder.DirectionChange { if ( directionEvents . get ( 0 ) . eTime . isAfter ( t1 ) ) throw new devices.encoder.Encoder.DirectionChange () ; lastDistance = distance ; float rotations = ( ( float ) ( CountPinEventsSince ( t1 ) ) ) / 4.0F ; distance = rotations / ( motorRotationsPerMetre ) ; return distance ; } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { android.util.Log . d ( TAG , "onCreateView" ) ; android.view.View rootView = inflater . inflate ( R.layout.fragment_events_list , container , false ) ; mDatabase = com.google.firebase.database.FirebaseDatabase . getInstance () . getReference () . child ( "Event" ) ; rv = ( ( android.support.v7.widget.RecyclerView ) ( rootView . findViewById ( R.id.events_list_recycler_view ) ) ) ; rv . setLayoutManager ( new android.support.v7.widget.LinearLayoutManager ( getActivity () ) ) ; rv . setAdapter ( fbRecyclerAdapter ) ; return rootView ; } 
public void joinRequest ( java.lang.String ipAddress , int port , int clusterID , org.apache.thrift.async.AsyncMethodCallback < lk.filetributed.client.rpc.services.JoinNode.AsyncClient.joinRequest_call > resultHandler ) throws org.apache.thrift.TException { checkReady () ; lk.filetributed.client.rpc.services.JoinNode.AsyncClient.joinRequest_call method_call = new lk.filetributed.client.rpc.services.JoinNode.AsyncClient.joinRequest_call ( ipAddress , port , clusterID , resultHandler , this , ___protocolFactory , ___transport ) ; this . ___currentMethod = method_call ; ___manager . call ( method_call ) ; } 
protected void generate ( de.cpgaertner.edu.inf.api.level.LocationFactory factory , int x1 , int y1 , int x2 , int y2 ) { for ( int x = x1 ; x <= x2 ; x ++ ) { for ( int y = y1 ; y <= y2 ; y ++ ) { locations [ x ] [ y ] = factory . generate ( new de.cpgaertner.edu.inf.api.level.Coordinate ( x , y ) ) ; } } } 
@ java.lang.Override public void postSetUp () { super . postSetUp () ; if ( ( net.wequick.small.ApkBundleLauncher.sLoadedApks ) == null ) { android.util.Log . e ( net.wequick.small.ApkBundleLauncher.TAG , "Could not find any APK bundles!" ) ; return; } final android.app.Application app = net.wequick.small.Small . getContext () ; mApkLoader . mergeResources () ; mApkLoader . createApplications () ; if ( ( net.wequick.small.ApkBundleLauncher.mLazyInitProviders ) != null ) { net.wequick.small.ApkBundleLauncher.sActivityThread . installSystemProviders ( net.wequick.small.ApkBundleLauncher.mLazyInitProviders ) ; net.wequick.small.ApkBundleLauncher.mLazyInitProviders = null ; } net.wequick.small.ApkBundleLauncher.sLoadedApks = null ; net.wequick.small.ApkBundleLauncher.sProviders = null ; } 
public java.lang.Integer getRestingDays ( pt.belele.project.data.Fixture nextFixture ) { return org.joda.time.Days . daysBetween ( getBeforeFixture ( java.lang.Integer . valueOf ( nextFixture . getSeason () . getYear () ) , nextFixture . getDate () , null ) . getDate () , nextFixture . getDate () ) . getDays () ; } 
private void updateReadingSurface () { android.widget.TextView readingPane = ( ( android.widget.TextView ) ( getActivity () . findViewById ( R.id.reading_surface ) ) ) ; android.widget.TextView readingInfo = ( ( android.widget.TextView ) ( getActivity () . findViewById ( R.id.reading_info ) ) ) ; readingPane . setText ( viewModel . getCurrentPage () ) ; readingInfo . setText ( viewModel . getReadingInfo () ) ; } 
public void drawBoard () { for ( int i = 0 ; i < ( ySize ) ; ++ i ) { for ( int j = 0 ; j < ( xSize ) ; ++ j ) { if ( citiesBoolean [ i ] [ j ] ) cells [ j ] [ i ] . drawHexagon () ; } } } 
public void lostOrWon ( blackjackgame.Dealer dealer ) { boolean won = true ; for ( java.lang.Object card : dealerCards ) { if ( card instanceof blackjackgame.Card ) { int number = getTheValueOfTheCurrentDeck () ; if ( number > 21 ) { won = false ; } } } if ( won ) { java.lang.System.out . println ( ( ( name ) + " lost " ) ) ; } else { java.lang.System.out . println ( ( ( name ) + " won " ) ) ; } } 
private com.mgs.reflections.ParsedType parse ( com.mgs.reflections.TypeResolution typeResolution , java.util.Map < java.lang.String , com.mgs.reflections.Declaration > effectiveParameters ) { com.mgs.reflections.Declaration ownDeclaration = null ; java.util.Optional < java.lang.String > genericName = typeResolution . getGenericName () ; if ( genericName . isPresent () ) { ownDeclaration = effectiveParameters . get ( genericName . get () ) ; } if ( ownDeclaration == null ) { ownDeclaration = buildDeclaration ( typeResolution , effectiveParameters ) ; } return parse ( ownDeclaration ) ; } 
public void imageViewCol2Clicked ( android.view.View v ) { android.util.Log . d ( "---------" , "clicked 2" ) ; ChangeColorOnUserClick ( v ) ; if ( ( soundStatus ) == "1" ) { buttonSound . start () ; } if ( CheckUserInput ( 1 ) ) { playGame () ; } } 
private boolean isFeatureValuePairValid ( java.lang.String feature , java.lang.String value ) { if ( viewApplicabilitiesMap . containsKey ( feature ) ) { java.util.Collection < java.lang.String > validValues = viewApplicabilitiesMap . get ( feature ) ; value = ( value . equalsIgnoreCase ( "Default" ) ) ? getDefaultValue ( feature ) : value ; if ( containsIgnoreCase ( validValues , value ) ) { return true ; } } return false ; } 
@ java.lang.Override public boolean solve ( solvers.sat.ProblemInstance problemInstance ) { this . problemInstance = problemInstance ; init () ; timeExpansionGraph . increaseMakespan () ; java.util.List < org.sat4j.core.VecInt > cnfEncoding = timeExpansionGraph . getCnfEncoding ( problemInstance . getAgents () ) ; for ( org.sat4j.core.VecInt v : cnfEncoding ) java.lang.System.out . println ( cnfEncoding ) ; java.lang.System.out . println ( passToExternalSatSolver () ) ; return false ; } 
@ java.lang.Override public void modify ( java.lang.Object element , java.lang.String property , java.lang.Object value ) { if ( element instanceof org.eclipse.swt.widgets.Widget ) { element = ( ( org.eclipse.swt.widgets.Widget ) ( element ) ) . getData () ; } org.aludratest.eclipse.vde.internal.editors.ConfigurationSegmentDetailsFormPart.SegmentField field = ( ( org.aludratest.eclipse.vde.internal.editors.ConfigurationSegmentDetailsFormPart.SegmentField ) ( element ) ) ; field.fieldValue = ( ( org.aludratest.eclipse.vde.model.ITestDataFieldValue ) ( value ) ) ; tvFields . update ( element , null ) ; } 
@ org.junit.Test public void testCreateClientWithEmptyName () { try { mockMvc . perform ( org.springframework.test.web.servlet.request.MockMvcRequestBuilders . post ( "/clients" ) . contentType ( MediaType.APPLICATION_JSON ) . content ( objectMapper . writeValueAsBytes ( new com.bah.web.to.CreateClientRequest ( "" ) ) ) ) . andExpect ( org.springframework.test.web.servlet.result.MockMvcResultMatchers . status () . isBadRequest () ) ; } catch ( com.fasterxml.jackson.core.JsonProcessingException e ) { com.bah.web.controller.ClientControllerTest.logger . error ( "Error happened in the ClientControllerTest class" ) ; e . printStackTrace () ; } catch ( java.lang.Exception e ) { com.bah.web.controller.ClientControllerTest.logger . error ( "Error happened in the ClientControllerTest class" ) ; e . printStackTrace () ; } } 
private static org.apache.http.HttpEntity entityFromOkHttpResponse ( com.squareup.okhttp.Response response ) throws java.io.IOException { org.apache.http.entity.BasicHttpEntity entity = new org.apache.http.entity.BasicHttpEntity () ; com.squareup.okhttp.ResponseBody body = response . body () ; entity . setContent ( body . byteStream () ) ; entity . setContentLength ( body . contentLength () ) ; entity . setContentEncoding ( response . header ( "Content-Encoding" ) ) ; entity . setContentType ( body . contentType () . type () ) ; return entity ; } 
public void localize () { main.PlaySoccer.isLocalizing = true ; localization.LightLocalizer lightLocalizer = new localization.LightLocalizer ( leftMotor , rightMotor , odometer , startCorner , navigator ) ; lightLocalizer . doLightLocalization () ; localization.USLocalizer ultrasonicLocalizer = new localization.USLocalizer ( leftMotor , rightMotor , odometer , usSensor , startCorner , navigator ) ; ultrasonicLocalizer . doUSLocalization () ; main.PlaySoccer.isLocalizing = false ; } 
public void close () { logger . info ( ( ( ( this ) + " Closing RdmaClient, already closed=" ) + ( closed ) ) ) ; if ( closed ) return; notifyClose = true ; eqh . breakEventLoop () ; synchronized ( this ) { while ( ! ( closed ) ) { try { wait ( 100 ) ; } catch ( java.lang.InterruptedException e ) { logger . error ( ( "exception while waiting to close " + e ) ) ; } } } logger . info ( ( ( this ) + " Closed RdmaClient" ) ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/registration" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String registration ( @ javax.validation.Valid @ org.springframework.web.bind.annotation.ModelAttribute dto.BuyerDTO buyerDTO , org.springframework.validation.BindingResult bindingResult , org.springframework.ui.Model model ) { if ( bindingResult . hasErrors () ) { return "registration" ; } model.Buyer buyer = new model.Buyer ( buyerDTO ) ; buyerService . save ( buyer ) ; return "redirect:/login" ; try { model.Buyer buyer = new model.Buyer ( buyerDTO ) ; buyerService . save ( buyer ) ; return "redirect:/login" ; } catch ( java.lang.Exception e ) { model . addAttribute ( "errorSave" , "Пользователь с таким логином уже существует!" ) ; return "registration" ; } } 
@ java.lang.Override public int getColorFlags ( final magic.model.MagicPermanent permanent , final int flags ) { int mask = 0 ; for ( final magic.model.MagicColor element : color ) { mask += element . getMask () ; } if ( additionTo ) { return flags | mask ; } else { return mask ; } } 
@ java.lang.Override public org.apache.drill.exec.physical.base.ScanStats getScanStats () { final org.apache.drill.exec.physical.base.ScanStats nativeHiveScanStats = super . getScanStats () ; return new org.apache.drill.exec.physical.base.ScanStats ( nativeHiveScanStats . getGroupScanProperty () , ( ( nativeHiveScanStats . getRecordCount () ) / ( HIVE_SERDE_SCAN_OVERHEAD_FACTOR ) ) , ( ( nativeHiveScanStats . getCpuCost () ) / ( HIVE_SERDE_SCAN_OVERHEAD_FACTOR ) ) , ( ( nativeHiveScanStats . getDiskCost () ) / ( HIVE_SERDE_SCAN_OVERHEAD_FACTOR ) ) ) ; } 
private int getEditType () { int editType ; if ( hasTooManyWordsInNewCategoryName ) { editType = dooyit.parser.EditCategoryParser.INVALID_TOO_MANY_WORDS ; } else if ( hasInsufficientArguments ) { editType = dooyit.parser.EditCategoryParser.INVALID_TOO_FEW_ARGUMENTS ; } if ( ( hasNewName ) && ( hasNewColour ) ) { editType = dooyit.parser.EditCategoryParser.EDIT_NAME_AND_COLOUR ; } else if ( ( ! ( hasNewName ) ) && ( hasNewColour ) ) { editType = dooyit.parser.EditCategoryParser.EDIT_COLOUR_ONLY ; } else if ( ( hasNewName ) && ( ! ( hasNewColour ) ) ) { editType = dooyit.parser.EditCategoryParser.EDIT_NAME_ONLY ; } else { editType = dooyit.parser.EditCategoryParser.EDIT_INVALID ; } return editType ; } 
@ java.lang.Override public void onCreate () { super . onCreate () ; android.util.Log . d ( "BT SERVICE" , "SERVICE CREATED" ) ; stopThread = false ; android.content.IntentFilter filter1 = new android.content.IntentFilter ( android.bluetooth.BluetoothAdapter.ACTION_STATE_CHANGED ) ; registerReceiver ( mBroadcastReceiver1 , filter1 ) ; android.content.IntentFilter filter2 = new android.content.IntentFilter ( "android.bluetooth.device.action.PAIRING_REQUEST" ) ; registerReceiver ( mBroadcastReceiver1 , filter2 ) ; android.content.IntentFilter filter3 = new android.content.IntentFilter ( android.bluetooth.BluetoothDevice.ACTION_ACL_CONNECTED ) ; registerReceiver ( mBroadcastReceiver1 , filter3 ) ; android.content.IntentFilter filter4 = new android.content.IntentFilter ( android.bluetooth.BluetoothDevice.ACTION_ACL_DISCONNECTED ) ; registerReceiver ( mBroadcastReceiver1 , filter4 ) ; } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialogInterface , int i ) { com.google.firebase.database.DatabaseReference mDatabaseRef = mDatabase . getReference ( "events" ) . child ( eventId ) . child ( "participantIds" ) . push () ; mDatabaseRef . setValue ( fireUser . getUid () ) ; com.dhbw.project.spezl.controller.StorageController . storeLocalEvent ( event , this ) ; onBackPressed () ; } 
public void remove ( java.lang.String [] pVSerialName ) { for ( int i = 0 ; i < ( pVSerialName.length ) ; i ++ ) { if ( this . products . containsKey ( pVSerialName [ i ] ) ) this . products . remove ( pVSerialName ) ; } } 
public boolean UpdateLivingOrDead () { if ( ( this . HP . get () ) == 0 ) { this . Readiness = - 5000 ; this . Bleeding . set ( false ) ; this . Poisoned . set ( false ) ; this . Stunned . set ( false ) ; this . Alive . set ( false ) ; return true ; } return false ; } 
@ org.junit.Test public void testExcecutionOfRCode ( ) throws java.io.FileNotFoundException , javax.script.ScriptException { com.acuo.common.model.ids.ClientId clientId = com.acuo.common.model.ids.ClientId . fromString ( "999" ) ; java.util.Set < java.lang.String > msIds = com.google.common.collect.ImmutableSet . of ( "msp38" ) ; java.lang.Double [] pref = java.util.Arrays . asList ( new java.lang.Double [] { 10.0 , 10.0 , 2.0 } ) . stream () . collect ( java.util.stream.Collectors . toList () ) . toArray ( new java.lang.Double [ 0 ] ) ; algoService . callAlgo ( msIds , clientId , pref ) ; } 
private void displayOptions ( android.app.Activity activity , android.widget.LinearLayout container , android.widget.TextView title ) { container . removeAllViews () ; for ( java.lang.String option : finger . getOptions () ) { title . setText ( finger . getTitle () ) ; android.widget.TextView textView = ( ( android.widget.TextView ) ( activity . getLayoutInflater () . inflate ( R.layout.base_guided_input , null ) ) ) ; textView . setText ( option ) ; container . addView ( textView ) ; } } 
public double getDiscount ( int milage ) { if ( milage < ( com.epam.oop.homework.passenger.fflevel.FrequentFlyer.NOPEFFMAX ) ) { return 1 ; } else if ( ( milage > ( com.epam.oop.homework.passenger.fflevel.FrequentFlyer.NOPEFFMAX ) ) && ( milage < ( com.epam.oop.homework.passenger.fflevel.FrequentFlyer.BRONZEFFMAX ) ) ) { return 0.3 ; } else if ( ( milage > ( com.epam.oop.homework.passenger.fflevel.FrequentFlyer.BRONZEFFMAX ) ) && ( milage < ( com.epam.oop.homework.passenger.fflevel.FrequentFlyer.GOLDFFMAX ) ) ) { return 0.6 ; } else { return 0.9 ; } } 
public ru.furry.furview2.images.FurImageBuilder makeFromRemoteFurImage ( ru.furry.furview2.images.RemoteFurImage remoteImage ) { this . searchQuery = remoteImage . getSearchQuery () ; this . description = remoteImage . getDescription () ; this . rating = remoteImage . getRating () ; this . fileUrl = remoteImage . getFileUrl () ; this . fileExt = remoteImage . getFileExt () ; this . pageUrl = remoteImage . getPageUrl () ; this . previewUrl = remoteImage . getPreviewUrl () ; return this ; } 
public void clear () { grid = new com.jdrago.sudoku.SudokuGame.Cell [ [ 9 ] [ 9 ] ; for ( int j = 0 ; j < 9 ; ++ j ) { for ( int i = 0 ; i < 9 ; ++ i ) { clear ( i , j ) ; } } } 
@ java.lang.Override public java.lang.Object instantiateItem ( android.view.ViewGroup container , int position ) { layoutInflater = ( ( android.view.LayoutInflater ) ( getSystemService ( Context.LAYOUT_INFLATER_SERVICE ) ) ) ; android.view.View view = layoutInflater . inflate ( layouts [ position ] , container , false ) ; container . addView ( view ) ; android.util.Log . i ( org.catrobat.paintroid.WelcomeActivity.TAG , ( "init " + position ) ) ; if ( ( layouts [ position ] ) == ( R.layout.islide_possibilities ) ) { createPossibilitiesSequence () ; } return view ; } 
private < T > T makeRequest1 ( au.id.mclowry.tah.RequestMethod.RequestMethod method , java.lang.String end_point_path , java.util.ArrayList < org.apache.http.message.BasicNameValuePair > params , java.lang.Class < T > targetClass ) throws java.io.IOException { try { return core . makeRequest ( au.id.mclowry.tah.GET , "statuses/show" , params , targetClass ) ; } catch ( oauth.signpost.exception.OAuthException | java.lang.InterruptedException e ) { throw new java.io.IOException ( e ) ; } } 
public void select ( int x , int y ) { for ( int i = this . size () ; i >= 0 ; i -- ) { if ( m_objects . get ( i ) . inRegion ( x , y ) ) { select ( i ) ; break; } } } 
@ java.lang.Override public void onClick ( android.view.View v ) { android.util.Log . i ( "lgh" , ( "onAcceptButton: " + ( user . toString () ) ) ) ; android.widget.Button bt = ( ( android.widget.Button ) ( v ) ) ; bt . setText ( mContext . getString ( R.string.added ) ) ; bt . setClickable ( false ) ; bt . setBackgroundResource ( R.drawable.selector_gray_background ) ; user . setType ( UserDAO.FRIENDS ) ; mUserDAO . update ( user ) ; initConversation ( user . getUsername () ) ; } 
public java.lang.String createAccount ( java.lang.String username , java.lang.String password , java.lang.String server ) { com.liamfruzyna.android.wishlister.data.IO.CreateAccountTask task = new com.liamfruzyna.android.wishlister.data.IO.CreateAccountTask () ; task . execute ( server , username , password ) ; java.lang.String status = task.status ; while ( status . equals ( "RUNNING" ) ) { java.lang.System.out . println ( ( "status: " + ( task.status ) ) ) ; status = task.status ; } java.lang.System.out . println ( status ) ; return task.status ; } 
public static net.minecraft.item.ItemStack [] [] getFullRecipeInput ( net.minecraft.item.crafting.ShapelessRecipes recipe ) { final openmods.utils.RecipeUtils.InputBuilder builder = new openmods.utils.RecipeUtils.InputBuilder ( 9 ) ; final java.util.List < net.minecraft.item.ItemStack > input = recipe.recipeItems ; for ( int i = 0 ; i < ( recipe . getRecipeSize () ) ; i ++ ) builder . add ( i , input . get ( i ) ) ; return builder . build () ; } 
@ butterknife.OnClick ( value = R.id.edit_cover_image_button ) public void onSelectImageClick () { if ( ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.M ) ) && ( ( android.support.v4.content.ContextCompat . checkSelfPermission ( getActivity () , Manifest.permission.READ_EXTERNAL_STORAGE ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { android.support.v4.app.ActivityCompat . requestPermissions ( getActivity () , new java.lang.String [] { Manifest.permission.READ_EXTERNAL_STORAGE } , io.github.nfdz.foco.ui.dialogs.EditDocCoverDialog.ImageFragment.PERMISSION_REQUEST_CODE ) ; } else { openFilePickerDialog () ; } } 
public static < I > int indexOf ( I [] arr , I value ) { if ( util.ArrayUtil . isEmpty ( arr ) ) return util.ArrayUtil.INDEX_NOT_FOUND ; int index = 0 ; for ( I item : arr ) { if ( item == value ) return index ; index ++ ; } return util.ArrayUtil.INDEX_NOT_FOUND ; } 
@ java.lang.Override public javax.xml.transform.Source resolve ( java.lang.String href , java.lang.String base ) throws javax.xml.transform.TransformerException { java.io.InputStream stream = org.apache.camel.component.schematron.processor.ClassPathURIResolver . class . getClassLoader () . getResourceAsStream ( rulesDir . concat ( java.io.File.separator ) . concat ( href ) ) ; if ( stream != null ) { return new javax.xml.transform.stream.StreamSource ( stream ) ; } else { if ( null != ( clientUriResolver ) ) { return clientUriResolver . resolve ( href , base ) ; } else { return new javax.xml.transform.stream.StreamSource ( stream ) ; } } } 
public static boolean is_between ( int newID , int prevID , int nextID ) { java.lang.System.out . println ( "---------" ) ; java.lang.System.out . printf ( "new: %d\tprev: %d\tnext: %d\n" , newID , prevID , nextID ) ; java.lang.System.out . println ( "---------" ) ; if ( ( ( ( prevID < newID ) && ( newID < nextID ) ) || ( ( nextID < prevID ) && ( prevID < newID ) ) ) || ( ( newID < nextID ) && ( nextID < prevID ) ) ) { return true ; } else { return false ; } } 
@ java.lang.Override protected void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { com.faa1192.weatherforecast.Cities.City city = com.faa1192.weatherforecast.Cities.City . fromBundle ( data . getExtras () ) ; android.widget.Toast . makeText ( this , ( ( getResources () . getString ( R.string.added_city ) ) + ( city.name ) ) , Toast.LENGTH_SHORT ) . show () ; this . update () ; } 
private java.lang.String getFolderContentPath ( java.util.List < org.alfresco.consulting.indexer.webscripts.BreadCrumb > breadCrumbs , java.lang.String folderName ) { java.lang.String folderContentPath = breadCrumbs . get ( ( ( breadCrumbs . size () ) - 1 ) ) . getUrl () ; folderName = folderName . replace ( " " , spaceCorrectEncode ) ; folderContentPath += "%2F" + folderName ; return folderContentPath ; } 
@ java.lang.Override public void create () { metro.METRO.__controlActionManager = new metro.WindowControls.ControlActionManager () ; metro.GameScreen.GameScreen . setActionManager ( metro.METRO.__controlActionManager ) ; metro.METRO.__debug = true ; _oldMousePosition = new java.awt.Point ( 0 , 0 ) ; metro.METRO.__SCREEN_SIZE.height -= metro.METRO.__titleBarHeight ; metro.METRO.__titleBarBorderLineWidth = 1 ; metro.METRO.__dragMode = false ; detectOS () ; initGdx () ; loadVisuals () ; initWindowStuff () ; metro.METRO.__currentGameScreen = new metro.GameScreen.MainMenu () ; metro.METRO.__gameState = metro.GameState . getInstance () ; } 
public java.util.Optional < okio.ByteString > open ( okio.ByteString ciphertext , okio.ByteString data ) { if ( ( ciphertext . size () ) < 12 ) { return java.util.Optional . empty () ; } return open ( ciphertext . substring ( 12 ) . substring ( 0 , 12 ) , ciphertext . substring ( 12 ) , data ) ; } 
@ java.lang.Override public void start ( org.osgi.framework.BundleContext context ) throws java.lang.Exception { com.puresoltechnologies.commons.osgi.AbstractActivator.logger . info ( ( ( "Starting bundle '" + ( context . getBundle () . getSymbolicName () ) ) + "'..." ) ) ; if ( ( com.puresoltechnologies.commons.osgi.AbstractActivator.context ) != null ) { throw new java.lang.RuntimeException ( "Bundle was already started." ) ; } com.puresoltechnologies.commons.osgi.AbstractActivator.context = context ; } 
private java.util.List < htl_leonding.fiplyteam.fiply.trainingsplan.Uebung > getInstruktFromPhasenId ( java.lang.String phasenId ) { java.util.List < htl_leonding.fiplyteam.fiply.trainingsplan.Uebung > resultList = new java.util.LinkedList < htl_leonding.fiplyteam.fiply.trainingsplan.Uebung > () ; java.lang.String id ; for ( htl_leonding.fiplyteam.fiply.trainingsplan.Uebung element : instruktListe ) { id = element . getPhasenId () ; if ( id . equals ( phasenId ) ) { resultList . add ( element ) ; } } java.lang.System.out . println ( ( "Übungen insgesamt: " + ( instruktListe . size () ) ) ) ; java.lang.System.out . println ( ( "Übungen in der Phase: " + ( resultList . size () ) ) ) ; return resultList ; } 
public static javax.faces.component.UIComponent resolve ( javax.faces.context.FacesContext context , java.lang.String gid ) { if ( ( gid == null ) || ( ( gid . charAt ( 0 ) ) != '#' ) ) return null ; return io.tornadofaces.component.util.GlobalId . getGlobalIds ( context ) . get ( gid ) ; } 
public void mutate ( int currentGeneration , java.util.Map mutationMap , java.util.Map mutationProperties ) { lethalMutate () ; if ( isAlive () ) { deleteriousMutate ( currentGeneration , mutationMap , mutationProperties ) ; beneficialMutate ( currentGeneration , mutationMap , mutationProperties ) ; mutatorMutate ( currentGeneration ) ; } if ( ( getFitness ( mutationMap ) ) <= 0 ) { die () ; } } 
@ java.lang.Override public org.springframework.security.core.userdetails.UserDetails loadUserByUsername ( final java.lang.String username ) throws org.springframework.security.core.userdetails.UsernameNotFoundException { hu.schonherz.administration.serviceapi.dto.UserDTO user ; try { user = userService . findUserByName ( username ) ; if ( user == null ) { throw new org.springframework.security.core.userdetails.UsernameNotFoundException ( username ) ; } java.util.List < org.springframework.security.core.GrantedAuthority > authorities = buildUserAuthority ( user . getRoles () ) ; return buildUserForAuthentication ( user , authorities ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; throw new org.springframework.security.core.userdetails.UsernameNotFoundException ( e . getMessage () ) ; } } 
private void configCommentsSection () { android.support.v7.widget.RecyclerView commentsRecyclerView = ( ( android.support.v7.widget.RecyclerView ) ( findViewById ( R.id.comments_list ) ) ) ; this . commentsAdapter = new com.tdp2.tripplanner.attractionDetailActivityExtras.CommentsAdapter () ; commentsRecyclerView . setAdapter ( this . commentsAdapter ) ; android.support.v7.widget.LinearLayoutManager linearLayoutManager = new android.support.v7.widget.LinearLayoutManager ( this ) ; commentsRecyclerView . setLayoutManager ( linearLayoutManager ) ; } 
public void resetElectionTimeOut () { this . timerValue = ( io.netty.util.internal.ThreadLocalRandom . current () . nextLong ( minRandom , ( ( maxRandom ) + 1 ) ) ) * 1000 ; electionTimeOut = ( java.lang.System . currentTimeMillis () ) + ( this . timerValue ) ; gash.router.server.states.ElectionTimer.logger . info ( ( "Election will start in millisecs:  " + ( ( electionTimeOut ) - ( java.lang.System . currentTimeMillis () ) ) ) ) ; } 
public int listen () { boolean intStatus = nachos.threads.Machine . interrupt () . disable () ; lock . acquire () ; if ( ( nachos.threads.Communicator.num_speaker ) == 0 ) { ( nachos.threads.Communicator.num_litener ) ++ ; litener . sleep () ; ( nachos.threads.Communicator.num_litener ) -- ; } else { litener . sleep () ; speaker . wake () ; } lock . release () ; nachos.threads.Machine . interrupt () . restore ( intStatus ) ; return queue . poll () ; } 
private void refreshView () { ignoreChange = true ; jnCalendar . set ( _date ) ; monthsCB . setSelectedIndex ( new java.lang.Integer ( _date . getMonth () ) ) ; yearSpin . setValue ( new java.lang.Integer ( _date . getYear () ) ) ; ignoreChange = false ; } 
@ java.lang.Override public void read ( net.minecraft.nbt.NBTTagCompound nbtTags ) { if ( nbtTags . getBoolean ( "sideDataStored" ) ) { for ( mekanism.api.transmitters.TransmissionType type : transmissions ) { sideConfigs . set ( type . ordinal () , nbtTags . getByteArray ( ( "config" + ( type . ordinal () ) ) ) ) ; } } } 
@ java.lang.Override public boolean onContextItemSelected ( android.view.MenuItem item ) { android.widget.AdapterView.AdapterContextMenuInfo info = ( ( android.widget.AdapterView.AdapterContextMenuInfo ) ( item . getMenuInfo () ) ) ; switch ( item . getItemId () ) { case R.id.edit : return true ; case R.id.delete : list . removeItem ( keyList [ info.position ] ) ; list . saveList () ; reload () ; return true ; default: return super . onContextItemSelected ( item ) ; } } 
private org.w3c.dom.Document readDocument ( java.lang.String in_file ) { doc_builder = createDocBuilder () ; org.w3c.dom.Document in_doc = null ; try { in_doc = doc_builder . parse ( new java.io.File ( "data.xml" ) ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return in_doc ; } 
public java.lang.String [] selectImports ( org.springframework.core.type.AnnotationMetadata importingClassMetadata ) { com.github.jetqin.orm.constants.OrmType type = ( ( com.github.jetqin.orm.constants.OrmType ) ( importingClassMetadata . getAnnotationAttributes ( com.github.jetqin.orm.annotation.EnableOrmConfiguration . class . getName () ) . get ( "ormType" ) ) ) ; if ( OrmType.Hibernate . equals ( type ) ) { return new java.lang.String [] { com.github.jetqin.orm.configuration.HibernateOrmConfiguration . class . getName () } ; } if ( OrmType.JPA . equals ( type ) ) { return new java.lang.String [] { com.github.jetqin.orm.configuration.JpaOrmConfiguration . class . getName () } ; } throw new java.lang.IllegalArgumentException () ; } 
public void setTagList ( java.util.List < com.paulvarry.intra42.api.model.Tags > list ) { if ( list == null ) super . setChipList ( null ) ; java.util.List < com.plumillonforge.android.chipview.Chip > chip = new java.util.ArrayList <> () ; for ( com.paulvarry.intra42.api.model.Tags t : list ) { chip . add ( t ) ; } super . setChipList ( chip ) ; } 
public javafx.scene.shape.Mesh generateMesh () { javafx.scene.shape.TriangleMesh mesh = new javafx.scene.shape.TriangleMesh () ; mesh . getPoints () . addAll ( points . toArray () ) ; mesh . getTexCoords () . addAll ( texCoords . toArray () ) ; mesh . getFaces () . addAll ( faces . toArray () ) ; mesh . getFaceSmoothingGroups () . addAll ( faceSmoothingGroups . toArray () ) ; return mesh ; } 
@ java.lang.Override public java.util.Map < java.lang.Integer , database.Persistable > getAll () { if ( ( ! ( deletedObjects . isEmpty () ) ) || ( mappedObjects . isEmpty () ) ) { mappedObjects . clear () ; processLines () . forEach ( ( p ) - > mappedObjects . put ( p . getId () , p ) ) ; return mappedObjects ; } else return mappedObjects ; } 
@ java.lang.Override public void onDismiss ( android.content.DialogInterface dialog ) { android.util.Log . d ( "testitest" , "dismiss" ) ; if ( org.catrobat.catroid.ProjectManager . getInstance () . getCommingFromScriptFragmentToSoundFragment () ) { org.catrobat.catroid.ProjectManager . getInstance () . setCommingFromScriptFragmentToSoundFragment ( false ) ; getActivity () . sendBroadcast ( new android.content.Intent ( org.catrobat.catroid.ui.ScriptActivity.ACTION_BRICK_LIST_CHANGED ) ) ; isResultHandled = true ; org.catrobat.catroid.ui.controller.SoundController . getInstance () . switchToScriptFragment ( this ) ; } } 
private java.util.Map < edu.cmu.ml.proppr.prove.wam.Goal , java.lang.Double > scaleFD ( java.util.Map < edu.cmu.ml.proppr.prove.wam.Goal , java.lang.Double > fd , double wt ) { if ( wt == 1.0 ) return fd ; java.util.Map < edu.cmu.ml.proppr.prove.wam.Goal , java.lang.Double > ret = new java.util.HashMap < edu.cmu.ml.proppr.prove.wam.Goal , java.lang.Double > () ; ret . putAll ( fd ) ; for ( java.util.Map.Entry < edu.cmu.ml.proppr.prove.wam.Goal , java.lang.Double > val : fd . entrySet () ) { val . setValue ( ( ( val . getValue () ) * wt ) ) ; } return ret ; } 
public static int [] readIntArray ( java.nio.ByteBuffer in ) { int len = com.kylinolap.common.util.BytesUtil . readVInt ( in ) ; if ( len < 0 ) return null ; int [] array = new int [ len ] ; in . asIntBuffer () . get ( array ) ; return array ; } 
public static byte [] toByteArray ( int value , int length ) { byte [] result = new byte [ length ] ; for ( int i = 0 ; ( i < 4 ) && ( i < length ) ; i ++ ) { result [ i ] = ( ( byte ) ( ( value > > ( 8 * i ) ) & 255 ) ) ; } return result ; } 
@ java.lang.Override public int getPolicyCount ( ) throws org.wso2.carbon.policy.mgt.core.mgt.impl.PolicyManagementException { int policyCount ; try { org.wso2.carbon.policy.mgt.core.mgt.impl.PolicyManagementDAOFactory . openConnection () ; policyCount = policyDAO . getPolicyCount () ; return policyCount ; } catch ( org.wso2.carbon.policy.mgt.core.mgt.impl.PolicyManagerDAOException e ) { throw new org.wso2.carbon.policy.mgt.core.mgt.impl.PolicyManagementException ( "Error occurred while getting policy count" , e ) ; } catch ( java.sql.SQLException e ) { throw new org.wso2.carbon.policy.mgt.core.mgt.impl.PolicyManagementException ( "Error occurred while opening a connection to the data source" , e ) ; } finally { org.wso2.carbon.policy.mgt.core.mgt.impl.PolicyManagementDAOFactory . closeConnection () ; } } 
public void handleDayChoiceBox () { java.lang.System.out . println ( "day box clicked" ) ; errorLabel . setText ( "" ) ; if ( confirm . isVisible () ) confirm . setVisible ( false ) ; if ( ( timeBox . isVisible () ) == false ) timeBox . setVisible ( true ) ; setTimeChoiceBox () ; } 
public void doPost ( javax.servlet.http.HttpServletRequest postRequest , javax.servlet.http.HttpServletResponse postResponse , java.util.List < java.io.Serializable > messages , org.atmosphere.gwt.server.GwtAtmosphereResource cometResource ) { if ( ( cometResource != null ) && ( cometResource . isAlive () ) ) { if ( ( messages . size () ) == 1 ) { cometResource . post ( messages . get ( 0 ) ) ; } else { cometResource . post ( messages ) ; } } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_join_game ) ; welcome = ( ( android.widget.TextView ) ( findViewById ( R.id.welcomeTxt ) ) ) ; android.content.Intent intent = getIntent () ; username = intent . getStringExtra ( LoginActivity.EXTRA_MESSAGE_USERNAME ) ; initialise () ; mController = new museum.findit.com.myapplication.controller.Controller ( this ) ; } 
private void processSLOBasedAutoTierPolicies ( com.emc.storageos.db.client.model.StorageSystem storageSystem , java.util.Set < java.lang.String > sloNames , java.util.List < com.emc.storageos.db.client.model.AutoTieringPolicy > newList , java.util.List < com.emc.storageos.db.client.model.AutoTieringPolicy > updateList ) throws java.io.IOException { if ( newList != null ) { _dbClient . createObject ( newList ) ; } if ( updateList != null ) { _dbClient . updateAndReindexObject ( updateList ) ; } performPolicyBookKeeping ( _dbClient , sloNames , storageSystem . getId () ) ; } 
public void addToPool ( SimpleGameObject obj ) { if ( ( obj.faction ) == 1 ) { this . friendlyPool . add ( obj ) ; } if ( ( obj.faction ) == 0 ) { this . friendlyObjectPool . add ( obj ) ; } if ( ( obj.faction ) == ( - 1 ) ) { this . hostilePool . add ( obj ) ; } if ( ( obj.faction ) == ( - 2 ) ) { ObjectPool.hostileObjectPool . add ( obj ) ; } } 
@ java.lang.Override public boolean canRead ( @ javax.annotation.Nonnull com.google.common.net.MediaType mimeType , java.lang.reflect.Type resultType ) { com.google.common.net.MediaType type = mimeType . withoutParameters () ; return ( ( type . is ( com.google.common.net.MediaType.ANY_TEXT_TYPE ) ) || ( com.google.common.net.MediaType.APPLICATION_XML_UTF_8 . withoutParameters () . is ( type ) ) ) || ( ( com.google.common.net.MediaType.JSON_UTF_8 . withoutParameters () . is ( type ) ) && ( java.lang.String . class . equals ( com.google.common.reflect.TypeToken . of ( resultType ) . getRawType () ) ) ) ; } 
public java.sql.Connection establishConnectionFromUserInput ( javax.swing.JFrame frame , java.lang.String url , java.lang.String username , java.lang.String password ) { try { conn = connector . getConnection ( url , username , password ) ; if ( ( conn ) == null ) { javax.swing.JOptionPane . showMessageDialog ( frame , "Could not connect to database" , "Inane error" , javax.swing.JOptionPane.ERROR_MESSAGE ) ; return null ; } javax.swing.JOptionPane . showMessageDialog ( frame , "Connected" ) ; } catch ( java.sql.SQLException ex ) { ex . printStackTrace () ; } return conn ; } 
public double snackPrice ( com.vstevam.gigabyte.entities.Snack snack ) { double snackprice = 0 ; com.vstevam.gigabyte.dao.SnackIngredientsDAO SIDAO = new com.vstevam.gigabyte.dao.SnackIngredientsDAO () ; com.vstevam.gigabyte.dao.IngredientDAO IDAO = new com.vstevam.gigabyte.dao.IngredientDAO () ; java.util.List < java.lang.Integer > si = SIDAO . getAllbySnack ( snack ) ; if ( si . isEmpty () ) { java.util.List < com.vstevam.gigabyte.entities.Ingredient > ingredients = IDAO . getAllbySnackIngredients ( si ) ; for ( com.vstevam.gigabyte.entities.Ingredient ingredient : ingredients ) { snackprice = snackprice + ( ingredient . getPrice () ) ; } } return snackprice ; } 
public void putItem ( K key , V value ) { try { edu.brandeis.cs.nlp.mae.util.HashedSet . getAsList ( key ) . add ( value ) ; } catch ( java.lang.NullPointerException e ) { java.util.TreeSet < V > newtree = new java.util.TreeSet <> () ; newtree . add ( value ) ; hash . put ( key , newtree ) ; } } 
@ org.junit.Test public void testUpdateFolder ( ) throws eionet.meta.service.ServiceException { eionet.meta.dao.domain.Folder folder = vocabularyService . getFolder ( 2 ) ; folder . setIdentifier ( "new" ) ; folder . setLabel ( "new" ) ; vocabularyService . updateFolder ( folder ) ; folder = vocabularyService . getFolder ( 2 ) ; org.junit.Assert . assertEquals ( "Modified identifier" , "new" , folder . getIdentifier () ) ; org.junit.Assert . assertEquals ( "Modified label" , "new" , folder . getLabel () ) ; } 
private static java.lang.String getSettingForType ( int type ) { if ( ( type & ( android.media.RingtoneManager.TYPE_RINGTONE ) ) != 0 ) { return android.provider.Settings.System.RINGTONE ; } else if ( ( type & ( android.media.RingtoneManager.TYPE_NOTIFICATION ) ) != 0 ) { return android.provider.Settings.System.NOTIFICATION_SOUND ; } else if ( ( type & ( android.media.RingtoneManager.TYPE_ALARM ) ) != 0 ) { return android.provider.Settings.System.ALARM_ALERT ; } else if ( ( type & ( android.media.RingtoneManager.TYPE_MMS_NOTIFICATION ) ) != 0 ) { return android.provider.Settings.System.MMS_NOTIFICATION_SOUND ; } else { return null ; } } 
@ java.lang.Override public javax.sql.DataSource provide ( java.lang.String driverClass , java.lang.String url , java.lang.String user , java.lang.String password , java.util.Properties jdbcProperties ) { com.mchange.v2.c3p0.ComboPooledDataSource cpds = new com.mchange.v2.c3p0.ComboPooledDataSource () ; try { cpds . setDriverClass ( driverClass ) ; cpds . setJdbcUrl ( url ) ; cpds . setUser ( url ) ; cpds . setPassword ( user ) ; cpds . setProperties ( jdbcProperties ) ; return cpds ; } catch ( java.beans.PropertyVetoException e ) { throw org.seedstack.seed.core.api.SeedException . wrap ( e , JdbcErrorCode.WRONG_JDBC_DRIVER ) ; } } 
public void csEnter ( ) throws java.lang.Exception { MELogger . Info ( "Request %d" , local . getId () ) ; queue . addFirst ( local . getId () ) ; if ( ( status ) != ( MEStatus.ASKED ) ) { makeRequest () ; switchStatus ( MEStatus.ASKED ) ; } while ( ( status ) != ( MEStatus.IN_CS ) ) { assignToken () ; java.lang.Thread . sleep ( 10 ) ; } } 
private void addGeofences ( final org.apache.cordova.CallbackContext callbackContext , org.json.JSONArray geofences ) { com.transistorsoft.locationmanager.adapter.TSCallback callback = new com.transistorsoft.locationmanager.adapter.TSCallback () { public void success ( java.lang.Object result ) { callbackContext . success ( ( ( java.lang.String ) ( result ) ) ) ; } public void error ( java.lang.Object result ) { callbackContext . error ( ( ( java.lang.String ) ( result ) ) ) ; } } ; getAdapter () . addGeofences ( geofences , callback ) ; } 
public < T extends org.roda.core.data.v2.index.IsIndexed > org.roda.core.index.utils.IterableIndexResult < T > findAll ( final java.lang.Class < T > returnClass , final org.roda.core.data.v2.index.filter.Filter filter , final boolean justActive , final boolean removeDuplicates , final java.util.List < java.lang.String > fieldsToReturn ) { return findAll ( returnClass , filter , new org.roda.core.data.v2.index.sort.Sorter ( new org.roda.core.data.v2.index.sort.SortParameter ( org.roda.core.data.common.RodaConstants.INDEX_UUID , true ) ) , Sublist.ALL , null , justActive , removeDuplicates , fieldsToReturn ) ; } 
public int getCodeExtra ( java.lang.String json , java.lang.String var ) { java.lang.String returnThis ; int id = 0 ; int slot = 0 ; JSONObject obj = new JSONObject ( json ) ; returnThis = obj . getString ( "code" ) ; if ( returnThis == "CARD_PLACED" ) { id = obj . getInt ( "id" ) ; slot = obj . getInt ( "slot" ) ; } switch ( var ) { case "id" : return id ; case "slot" : return slot ; default: return 0 ; } } 
public com.dexecutor.executor.graph.Graph.Node < T > call ( ) throws java.lang.Exception { try { com.dexecutor.executor.TaskProvider.Task task = taskProvider . provid ( node . getValue () ) ; task . execute () ; } catch ( java.lang.Exception ex ) { com.dexecutor.executor.DefaultDependentTasksExecutor.logger . error ( ( "Exception caught, executing task :" + ( node . getValue () ) ) , ex ) ; } return node ; } 
@ java.lang.Override protected int getXWithOffset ( int x , int z ) { net.minecraft.util.EnumFacing enumfacing = this . getCoordBaseMode () ; if ( enumfacing == null ) { return x ; } else { switch ( enumfacing ) { case NORTH : return ( this . boundingBox . maxX ) - x ; case SOUTH : return ( this . boundingBox . minX ) + x ; case WEST : return ( this . boundingBox . maxX ) - z ; case EAST : return ( this . boundingBox . minX ) + z ; default: return x ; } } } 
public static java.lang.String getA () { java.lang.String number ; while ( ( java.lang.Character . isDigit ( Main.numbers . charAt ( sample.CalculationAction.end ) ) ) | ( ( Main.numbers . charAt ( sample.CalculationAction.end ) ) == '.' ) ) { sample.CalculationAction.end += 1 ; } number = Main.numbers . substring ( sample.CalculationAction.start , sample.CalculationAction.end ) ; sample.CalculationAction.action_pos = sample.CalculationAction.end ; return number ; } 
@ java.lang.Override protected void logger ( net.vicp.lylab.core.model.Message request , net.vicp.lylab.core.model.Message response ) { ( ( net.vicp.lylab.server.utils.Logger ) ( CoreDef.config . getConfig ( "Singleton" ) . getObject ( "Logger" ) ) ) . appendLine ( ( ( ( ( ( ( ( "Access key:" + ( request . getKey () ) ) + "\tAccess rpcKey:" ) + ( ( ( net.vicp.lylab.core.model.RPCMessage ) ( request ) ) . getRpcKey () ) ) + "\nBefore:" ) + request ) + "\nAfter:" ) + response ) ) ; } 
org.spine3.time.OffsetDateTime parseOffsetDateTime ( ) throws java.text.ParseException { initDayOffset () ; initTimezoneOffsetPosition () ; initTimeValues () ; parseTime () ; parseZoneOffset () ; @ java.lang.SuppressWarnings ( value = "NumericCastThatLosesPrecision" ) final org.spine3.time.ZoneOffset offset = org.spine3.time.ZoneOffsets . ofSeconds ( ( ( int ) ( zoneOffset ) ) ) ; java.util.Calendar calendar = org.spine3.time.Parser . createCalendar ( seconds , nanos , offset ) ; final org.spine3.time.LocalDate localDate = org.spine3.time.Calendars . toLocalDate ( calendar ) ; final org.spine3.time.LocalTime localTime = org.spine3.time.Calendars . toLocalTime ( calendar ) ; final org.spine3.time.OffsetDateTime result = org.spine3.time.OffsetDateTimes . of ( localDate , localTime , offset ) ; return result ; } 
@ java.lang.Override public void maybeNewProjectDirectory ( java.lang.String aProjectDirectory , java.lang.String aChecksName ) { if ( aProjectDirectory . equals ( projectDirectry ) ) return; reset () ; projectDirectry = aProjectDirectory ; logFileName = ( ( ( ( ( unc.tools.checkstyle.ACheckStyleLogFileManager . logDirectory ( aProjectDirectory ) ) + "/" ) + ( AConsentFormVetoer.LOG_DIRECTORY ) ) + "/" ) + aChecksName ) + ".csv" ; readLogFile () ; } 
@ java.lang.Override public boolean isType ( dyvil.tools.compiler.ast.type.IType type ) { if ( type == ( dyvil.tools.compiler.ast.type.Types.VOID ) ) { return true ; } if ( ( ( this . then ) != null ) && ( ! ( this . then . isType ( type ) ) ) ) { return false ; } return ! ( ( ( this . elseThen ) != null ) && ( ! ( this . elseThen . isType ( type ) ) ) ) ; } 
public boolean isGameOver () { return ( isGameLost () ) || ( ( ( lastCardPicked ) >= 0 ) && ( ( ( getTurn () ) - ( lastCardPicked ) ) > ( ( hanabi . getPlayerCount () ) * ( hanabi . getRuleSet () . getNbTurnsPerPlayerAfterLastCard () ) ) ) ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; progressBar = ( ( android.widget.ProgressBar ) ( findViewById ( R.id.progress_bar ) ) ) ; startScanningButton = ( ( android.widget.Button ) ( findViewById ( R.id.start_scanning_button ) ) ) ; adapter = new com.joss.microchipmastersandroid.activities.MainActivity.BleAdapter ( this ) ; listView = ( ( android.widget.ListView ) ( findViewById ( R.id.list_view ) ) ) ; listView . setAdapter ( adapter ) ; bleConnection = new com.joss.microchipmastersandroid.activities.MainActivity.MicrochipBleConnection () ; } 
@ org.junit.Test public void comparatorEqualsTest () { io.zipcoder.pets.PetComparator petComparator = new io.zipcoder.pets.PetComparator () ; io.zipcoder.pets.Pet ruby = new io.zipcoder.pets.Cat () ; io.zipcoder.pets.Pet dottie = new io.zipcoder.pets.Cat () ; int expected = 0 ; int actual = petComparator . compare ( ruby , dottie ) ; org.junit.Assert . assertEquals ( "same basic info" , expected , actual ) ; } 
private void renderGameIcons ( boolean bool ) { btnStart . setVisibility ( ( bool ? android.view.View.VISIBLE : android.view.View.GONE ) ) ; for ( android.widget.Button btn : btnSelections ) { btn . setVisibility ( ( bool ? android.view.View.VISIBLE : android.view.View.INVISIBLE ) ) ; } barCountdown . setVisibility ( ( bool ? android.view.View.VISIBLE : android.view.View.INVISIBLE ) ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.DELETE , value = "{id}" ) @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.OK ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.Boolean deleteForm ( @ org.springframework.web.bind.annotation.PathVariable ( value = "id" ) java.lang.Long formId ) { com.krishagni.catissueplus.core.common.events.BulkDeleteEntityOp op = new com.krishagni.catissueplus.core.common.events.BulkDeleteEntityOp () ; op . setIds ( java.util.Collections . singleton ( formId ) ) ; com.krishagni.catissueplus.core.common.events.ResponseEvent < java.lang.Boolean > resp = formSvc . deleteForms ( getRequest ( op ) ) ; resp . throwErrorIfUnsuccessful () ; return resp . getPayload () ; } 
private java.util.List < ITableInfo > convertIntoTableRows ( java.util.List < SlaveDetails > slaveLst , java.util.List < FrameworkDetails > frameworkDetailsLst , java.util.List < FrameworkSlaveRelationship > runsOn ) { MesosMetric.LOGGER . log ( java.util.logging.Level.FINE , "[Collector Plugin] In convertIntoTableRows" ) ; java.util.List < ITableInfo > lst = new java.util.ArrayList <> () ; slaveTableRows ( slaveLst , lst ) ; frameworkTableRows ( frameworkDetailsLst , lst ) ; runsOnTableRows ( runsOn , lst ) ; MesosMetric.LOGGER . log ( java.util.logging.Level.FINE , ( "[Collector Plugin] Total no of rows to be inserted " + ( lst . size () ) ) ) ; return lst ; } 
public static void main ( java.lang.String [] argv ) throws java.lang.Exception { java.util.Map < java.lang.String , java.util.List < java.lang.Double > > entity_features = annotatorstub.annotator.CandidateGenerator . get_entity_candidates ( "Funny cats wikipedia" ) ; annotatorstub.classification.ModelConverter serializer = new annotatorstub.classification.ModelConverter ( entity_features ) ; annotatorstub.classification.Classifier t = new annotatorstub.classification.Classifier ( annotatorstub.annotator.SVMAnnotator.train_dataset_scaled_path ) ; t . run () ; } 
@ java.lang.Override public android.view.View getView ( int position , android.view.View convertView , android.view.ViewGroup parent ) { android.view.LayoutInflater layoutInflater = getLayoutInflater () ; android.view.View viewRow = layoutInflater . inflate ( this . resources , null ) ; android.widget.TextView textView = ( ( android.widget.TextView ) ( viewRow . findViewById ( R.id.textView_contact_item ) ) ) ; final com.example.trannh08.ad005database_sqlite.classes.Contact contact = this . contacts . get ( position ) ; textView . setText ( contact.Name ) ; return viewRow ; } 
@ org.springframework.security.access.prepost.PreAuthorize ( value = "hasRole('ROLE_USER')" ) @ org.springframework.web.bind.annotation.RequestMapping ( value = "all" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = "application/json" ) public org.springframework.http.ResponseEntity < java.util.List < org.openbox.sf5.model.Settings > > getSettingsByUserLogin () { java.lang.System.out . println ( "Request all user settings called" ) ; org.openbox.sf5.model.Users currentUser = securityContext . getCurrentlyAuthenticatedUser () ; if ( currentUser == null ) { return new org.springframework.http.ResponseEntity < java.util.List < org.openbox.sf5.model.Settings > > ( org.springframework.http.HttpStatus.UNAUTHORIZED ) ; } java.util.List < org.openbox.sf5.model.Settings > settList = settingsJsonizer . getSettingsByUser ( currentUser ) ; if ( settList . isEmpty () ) { return new org.springframework.http.ResponseEntity < java.util.List < org.openbox.sf5.model.Settings > > ( org.springframework.http.HttpStatus.NO_CONTENT ) ; } return new org.springframework.http.ResponseEntity < java.util.List < org.openbox.sf5.model.Settings > > ( settList , org.springframework.http.HttpStatus.OK ) ; } 
public java.util.ArrayList < java.lang.String [] > getNotes ( int id ) throws java.sql.SQLException { java.lang.String tableName = "notes" ; java.lang.String ColumnName = "to_id" ; Manager.DBHelper help = new Manager.DBHelper () ; java.util.ArrayList < java.lang.String [] > result = help . findByColumnNameInt ( tableName , ColumnName , id ) ; return result ; } 
private boolean validPos ( int x , int y ) { if ( ( ( ( x >= 0 ) && ( y >= 0 ) ) && ( x < 3 ) ) && ( y < 3 ) ) return ( gridVals [ x ] [ y ] . type ) != ( view.Cell.Type.BLOCKED ) ; else return false ; } 
public static void native_viewFocusRequest ( java.lang.Object nativeView , boolean viewFocus ) { com.ZFFramework.Android.ZFUIKit.ZFUIView nativeViewTmp = ( ( com.ZFFramework.Android.ZFUIKit.ZFUIView ) ( nativeView ) ) ; android.view.View viewToSet = nativeViewTmp ; if ( ( ( nativeViewTmp.nativeImplView ) != null ) && ( nativeViewTmp.nativeImplView . isFocusable () ) ) { viewToSet = nativeViewTmp ; } if ( viewFocus ) { viewToSet . requestFocus () ; } else { viewToSet . clearFocus () ; } } 
private double computeSharpEdges ( ij.process.ImageProcessor proc ) { double meanIntensity = proc . getStatistics () . mean ; ij.process.ImageProcessor proc1 = proc . duplicate () ; proc1 . sharpen () ; proc1 . findEdges () ; double meanEdge = proc . getStatistics () . mean ; return meanEdge / meanIntensity ; } 
@ org.springframework.scheduling.annotation.Scheduled ( fixedRate = 10000 ) public void scheduledReportGenerator () { java.util.List < com.bananasuitproductions.Subscriber > activeSubs = subscriberDao . getSubs () ; for ( com.bananasuitproductions.Subscriber s : activeSubs ) { java.lang.System.out . println ( ( ( ( "generating report for: " + ( s . getEmail () ) ) + ", " ) + ( s . getZip () ) ) ) ; getHourlyForecastFromWg ( s . getZip () ) ; } } 
@ java.lang.Override public void draw ( com.badlogic.gdx.graphics.g2d.Batch batch , float parentAlpha ) { for ( int i = 0 ; i < ( wp ) ; i ++ ) { for ( int j = 0 ; j < ( hp ) ; j ++ ) { batch . draw ( region , ( ( xp ) + ( i * 36 ) ) , ( ( yp ) - ( j * 36 ) ) ) ; } } } 
private static boolean isSingleLineDefault ( com.puppycrawl.tools.checkstyle.api.DetailAST literalDefault ) { boolean result = false ; final com.puppycrawl.tools.checkstyle.api.DetailAST slist = literalDefault . getNextSibling () ; final com.puppycrawl.tools.checkstyle.api.DetailAST block = slist . getFirstChild () ; if ( ( block . getType () ) != ( com.puppycrawl.tools.checkstyle.api.TokenTypes.SLIST ) ) { result = ( literalDefault . getLineNo () ) == ( block . getLineNo () ) ; } return result ; } 
@ java.lang.Override public void add ( com.codecool.shop.model.Supplier supplier ) { try { java.lang.String query = "INSERT INTO suppliers (supplier_name, supplier_description) VALUES(?,?);" ; java.sql.Connection connection = getConnection () ; java.sql.PreparedStatement stmt = connection . prepareStatement ( query ) ; stmt . setString ( 1 , supplier . getName () ) ; stmt . setString ( 2 , supplier . getDescription () ) ; executeQuery ( stmt . toString () ) ; } catch ( java.sql.SQLException e ) { java.lang.System.out . println ( "Supplier could not be added to the database." ) ; } } 
@ java.lang.Override public void configure ( com.amadeus.session.SessionConfiguration conf ) { super . configure ( conf ) ; httpOnly = java.lang.Boolean . valueOf ( conf . getAttribute ( com.amadeus.session.servlet.CookieSessionTracking.COOKIE_HTTP_ONLY_PARAMETER , "true" ) ) ; secure = java.lang.Boolean . valueOf ( conf . getAttribute ( com.amadeus.session.servlet.CookieSessionTracking.SECURE_COOKIE_PARAMETER , "false" ) ) ; contextPath = java.lang.Boolean . valueOf ( conf . getAttribute ( com.amadeus.session.servlet.CookieSessionTracking.COOKIE_CONTEXT_PATH_PARAMETER , "true" ) ) ; } 
private java.util.ArrayList < remarema.domain.Network > mapNetworkDetailToNetwork ( java.util.ArrayList < remarema.api.NetworkDetail > results ) { java.util.ArrayList < remarema.domain.Network > networkList = new java.util.ArrayList < remarema.domain.Network > () ; for ( remarema.api.NetworkDetail result : results ) { remarema.domain.Network network = new remarema.domain.Network () ; network . setNetworkID ( result . getNetworkID () ) ; remarema.domain.Network networkCheck = em . find ( remarema.domain.Network . class , network . getNetworkID () ) ; networkList . add ( networkCheck ) ; } return networkList ; } 
public void savePage ( int page_number ) throws java.io.IOException , team_7adota.DBAppException { int page_index = getPageIndexInArrayList ( page_number ) ; Structure.Page pageToInsert = this . getPageByNumber ( page_number ) ; if ( ( pages_loaded_is_changed . get ( page_index ) . booleanValue () ) == false ) { return; } pageToInsert . serializePage ( ( ( ( ( this . table_name ) + "-" ) + page_number ) + ".ser" ) ) ; java.lang.Boolean b = pages_loaded_is_changed . get ( page_index ) ; b = new java.lang.Boolean ( false ) ; } 
@ java.lang.Override public void periodic () { if ( checkStageTimeout () ) { return; } switch ( stage ) { case 0 : driveForward () ; break; case 1 : driveSideways () ; break; } robot . setDriveT ( robot.gyro . getAngle () ) ; robot.robotDrive . mecanumDrive_Cartesian ( robot . getDriveX () , robot . getDriveY () , robot . getDriveR () , robot . getDriveT () ) ; } 
@ java.lang.Override public android.content.Loader < android.database.Cursor > onCreateLoader ( int id , android.os.Bundle args ) { android.util.Log . v ( "cursorStatus" , "Getting cursor loader" ) ; if ( id == 66 ) { java.lang.String [] columns = new java.lang.String [] { Contract.Lingodecks_Tables._ID , Contract.Lingodecks_Tables.COLUMN_GER , Contract.Lingodecks_Tables.COLUMN_GER_ENG } ; android.content.CursorLoader cl = new android.content.CursorLoader ( this , Contract.Lingodecks_Tables.CONTENT_URI1 , columns , null , null , "RANDOM()" ) ; android.util.Log . v ( "FASDASDADS" , ( ( cl . getId () ) + "" ) ) ; return cl ; } return null ; } 
public static void setNotificationAlarm ( android.content.Context context ) { android.app.PendingIntent pendingIntent = com.mattleibold.bulktracker.Utilities . getAlarmReceiverPI ( context ) ; android.app.AlarmManager alarmMgr = ( ( android.app.AlarmManager ) ( context . getSystemService ( Context.ALARM_SERVICE ) ) ) ; long interval = android.app.AlarmManager.INTERVAL_DAY ; alarmMgr . setInexactRepeating ( AlarmManager.RTC , ( ( java.lang.System . currentTimeMillis () ) - 1 ) , interval , pendingIntent ) ; } 
public void addQuestionToDatabase ( int quizId , int sequenceNumber , java.sql.Statement stm ) { try { questionId = addQuestionToQuestions ( stm , DBContract.QuestionTypesEnum.MULTIPLE_CHOICE ) ; addQuestionToQuizQuestions ( quizId , sequenceNumber , questionId , stm ) ; addAnswers ( stm ) ; addToTypeTable ( stm ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } 
static java.lang.String concatenate ( java.util.Collection < java.lang.String > list , java.lang.String seperator ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; for ( java.lang.String str : list ) builder . append ( str ) . append ( seperator ) ; if ( ( list . size () ) > 1 ) builder . setLength ( ( ( builder . length () ) - 1 ) ) ; return builder . toString () ; } 
@ java.lang.Override protected void onPostExecute ( java.lang.Void aVoid ) { if ( ( exception ) != null ) { postExecute () ; if ( ( callback ) != null ) { callback . onResult ( returnedData ) ; } } if ( ( lock ) != null ) { synchronized ( lock ) { lock . notifyAll () ; } } } 
@ java.lang.Override public boolean checkDocument ( java.lang.String file ) { resetAttributes () ; boolean checked = false ; try { openConnection () ; resultSet = this . statement . executeQuery ( java.lang.String . format ( "select %s from %s where %s = '%s';" , DataConstants.DOCUMENTS_TABLE_ID_COLUMN , DataConstants.DOCUMENTS_TABLE , DataConstants.DOCUMENTS_TABLE_NAME_COLUMN , file ) ) ; checked = ! ( resultSet . next () ) ; } catch ( java.sql.SQLException ex ) { java.lang.System.err . println ( ex . getMessage () ) ; checked = false ; } finally { closeConnection () ; } return checked ; } 
public void addQueryParam ( java.lang.String key , java.lang.String value ) throws java.lang.Exception { if ( ( queries . length () ) > 0 ) { queries . append ( "&" ) ; } queries . append ( java.lang.String . format ( "%s=%s" , java.net.URLEncoder . encode ( key , "UTF-8" ) , java.net.URLEncoder . encode ( value , "UTF-8" ) ) ) ; } 
public static void e ( java.lang.String tag , java.lang.Object obj ) { com.ssyijiu.library.MLog.tmpTAG = com.ssyijiu.library.MLog.TAG ; com.ssyijiu.library.MLog.TAG = tag ; if ( ( com.ssyijiu.library.MLog.MLev.lev ) <= ( com.ssyijiu.library.MLog.LogLev.E.lev ) ) { com.ssyijiu.library.MLog . printLog ( com.ssyijiu.library.MLog.LogLev.E , com.ssyijiu.library.MLog . getMsg ( obj ) ) ; com.ssyijiu.library.MLog.TAG = com.ssyijiu.library.MLog.tmpTAG ; } } 
public void refreshPreviews () { if ( dataHandler . getCurrentTechnique () . isUsingShaderNodes () ) { sortedNodes = dataHandler . sortNodes ( diagramUiHandler . getNodesForSort () ) ; diagramUiHandler . refreshPreviews ( gui , errorLog , matDef , sortedNodes , matParams ) ; } shaderCodePanel . refreshCode ( dataHandler . getCurrentTechnique () ) ; } 
public void createCheckListView () { java.lang.String [] itemTextDisplay = com.example.boss.lesson4_alarm_clock.MainActivity . getItemsTextToDisplay () ; android.widget.ArrayAdapter < java.lang.String > adapter = new android.widget.ArrayAdapter ( this , R.layout.item_check_delete , R.id.chTextView , itemTextDisplay ) ; listView = ( ( android.widget.ListView ) ( findViewById ( R.id.listView ) ) ) ; listView . setChoiceMode ( ListView.CHOICE_MODE_MULTIPLE ) ; if ( ( listView ) != null ) { listView . setAdapter ( adapter ) ; } } 
private void executeLine3 ( Model.ThreadContext currentContext ) { Model.ThreadContext newContext = null ; Model.ThreadContext oldContext = this . getCurrentContext () ; int nextStackPointer = 2 ; boolean bufferIsEmpty = ( this . bufferOfItems . getBufferSize () ) == 0 ; if ( ! bufferIsEmpty ) { nextStackPointer = 3 ; newContext = new Model.ThreadContext ( nextStackPointer , oldContext . getProducedItem () , Consts.STATUS_THREAD_EXECUTING , this ) ; } else { newContext = new Model.ThreadContext ( nextStackPointer , oldContext . getProducedItem () , Consts.STATUS_THREAD_BLOCKED , this ) ; } this . currentContext = newContext ; } 
@ cz.cesnet.shongo.client.web.controllers.RequestMapping ( value = cz.cesnet.shongo.client.web.ClientWebUrl.USER_SETTINGS_WEB_SERVICE_DATA , method = RequestMethod.GET ) @ cz.cesnet.shongo.client.web.controllers.ResponseBody public java.util.Map < java.lang.String , java.lang.Object > handleUserList ( cz.cesnet.shongo.controller.api.SecurityToken securityToken ) { cz.cesnet.shongo.controller.api.UserSettings userSettings = authorizationService . getUserSettings ( securityToken , true ) ; java.util.Map < java.lang.String , java.lang.Object > result = new java.util.HashMap < java.lang.String , java.lang.Object > () ; result . put ( "locale" , userSettings . getLocale () ) ; result . put ( "homeTimeZone" , userSettings . getHomeTimeZone () . getID () ) ; return result ; } 
public static void selectProductMinMaxSubmit ( java.util.ArrayList < java.lang.Object > data ) { model.product.Product product = ( ( model.product.Product ) ( data . get ( 0 ) ) ) ; int min = ( ( int ) ( data . get ( 1 ) ) ) ; int max = ( ( int ) ( data . get ( 2 ) ) ) ; product . setMinStock ( min ) ; product . setMaxStock ( max ) ; } 
private static void fillMapAndCounting ( java.util.HashMap < java.lang.String , java.lang.Integer > map , java.lang.String [] strArray ) { for ( java.lang.String string : strArray ) { int value = 1 ; if ( map . containsKey ( string ) ) { value = map . get ( string ) ; value ++ ; } map . put ( string , value ) ; } } 
@ java.lang.Override public void eventCallback ( ru.timuruktus.SApp.BaseEvent event ) { if ( event instanceof ru.timuruktus.SApp.BackendlessPart.EGetMagazinesList ) { ru.timuruktus.SApp.MagazinePart.EGetMagazines currentEvent = ( ( ru.timuruktus.SApp.MagazinePart.EGetMagazines ) ( event ) ) ; java.util.List < ru.timuruktus.SApp.MagazinePart.Magazine > magazineList = currentEvent . getMagazines () ; java.util.ArrayList < ru.timuruktus.SApp.MagazinePart.Magazine > magazineArrayList = ( ( java.util.ArrayList < ru.timuruktus.SApp.MagazinePart.Magazine > ) ( magazineList ) ) ; eGetMagazines . setMagazines ( magazineArrayList ) ; eGetMagazines . callback () ; } } 
public void valueChanged ( javax.swing.event.ListSelectionEvent e ) { boolean enabled = ! ( prjTablePanel.projectsTable . getModel () . getValueAt ( prjTablePanel.projectsTable . getSelectedRow () , ProjectsTablePanel.PROJECT_ID ) . toString () . equals ( net.sf.memoranda.CurrentProject . get () . getID () ) ) ; ppDeleteProject . setEnabled ( enabled ) ; ppOpenProject . setEnabled ( enabled ) ; ppProperties . setEnabled ( true ) ; } 
public < T > T resolve ( java.lang.Class < T > c ) { if ( c == null ) { throw new java.lang.NullPointerException ( "requested provider interface is null" ) ; } @ java.lang.SuppressWarnings ( value = "unchecked" ) T obj = ( ( T ) ( type2instance . get ( c ) ) ) ; if ( obj == null ) { obj = loadProvider ( c ) ; type2instance . put ( c , obj ) ; } return obj ; } 
public void initRandom ( final int numInputs , final int numFeatures ) { this . weights = new double [ [ numFeatures ] [ numInputs ] ; for ( int i = 0 ; i < numInputs ; i ++ ) { for ( int j = 0 ; j < numFeatures ; j ++ ) { weights [ i ] [ j ] = r . nextDouble () ; } } } 
private java.lang.String getFileName ( java.lang.String fileName ) { java.lang.String relativeBaseFileName = changeSet . getChangeLog () . getPhysicalFilePath () ; java.lang.String tempFile = liquibase.util.file.FilenameUtils . concat ( liquibase.util.file.FilenameUtils . getFullPath ( relativeBaseFileName ) , fileName ) ; if ( ( tempFile != null ) && ( ( new java.io.File ( tempFile ) . exists () ) == true ) ) { fileName = tempFile ; } else { fileName = ( liquibase.util.file.FilenameUtils . getFullPath ( relativeBaseFileName ) ) + fileName ; } return fileName ; } 
public java.lang.String getSQLByNameWithParameters ( java.lang.String name , java.lang.Object parameters ) { if ( name == null ) { return null ; } java.util.Map < java.lang.String , java.lang.Object > parameterMap = buildParameters ( parameters ) ; org.pinae.timon.io.SQLMapper.SQL sql = sqlMap . get ( name ) ; if ( sql != null ) { return replaceSQL ( sql , parameterMap ) ; } else { return null ; } } 
int [] mergeColumns_Direct ( int [] col1 , int [] col2 ) { if ( ( col2.length ) == 0 ) { return col1 ; } if ( ( col1.length ) == 0 ) { return java.util.Arrays . copyOf ( col2 , col2.length ) ; } for ( int ii = 0 ; ii < ( col2.length ) ; ++ ii ) { col1 [ ii ] += col2 [ ii ] ; } return col1 ; } 
private com.spotify.heroic.model.DateRange aggregateRange ( final com.spotify.heroic.model.DateRange range , final com.spotify.heroic.aggregation.Aggregation aggregation ) { final com.spotify.heroic.model.Sampling sampling = aggregation . sampling () ; if ( sampling == null ) return range ; return range . shiftStart ( ( - ( sampling . getExtent () ) ) ) ; } 
private void process ( android.hardware.camera2.CaptureResult captureResult ) { switch ( mCaptureState ) { case com.yorku.mstew.camera2videoimage.Camera2VideoImageActivity.STATE_PREVIEW : break; case com.yorku.mstew.camera2videoimage.Camera2VideoImageActivity.STATE_WAIT_LOCK : { mCaptureState = com.yorku.mstew.camera2videoimage.Camera2VideoImageActivity.STATE_PREVIEW ; java.lang.Integer afState = captureResult . get ( CaptureResult.CONTROL_AF_STATE ) ; if ( ( afState == ( android.hardware.camera2.CaptureResult.CONTROL_AF_STATE_FOCUSED_LOCKED ) ) || ( afState == ( android.hardware.camera2.CaptureResult.CONTROL_AF_STATE_NOT_FOCUSED_LOCKED ) ) ) { android.widget.Toast . makeText ( getApplicationContext () , "Autofocus locked" , Toast.LENGTH_SHORT ) . show () ; } startStillCaptureRequest () ; if ( ! ( BooleanAutoFocusLock ) ) { unLockFocus () ; } } break; } } 
@ java.lang.Override protected void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { switch ( requestCode ) { case moe.akagi.chibaproject.activity.AddEvent.PLACEMAPCREATE_ACTIVITY : if ( resultCode == ( RESULT_OK ) ) { location . copyConstruct ( ( ( moe.akagi.chibaproject.datatype.Location ) ( data . getSerializableExtra ( "location" ) ) ) ) ; android.widget.Toast . makeText ( this , ( "Test " + ( location . getName () ) ) , Toast.LENGTH_SHORT ) . show () ; } else { location . setName ( "待定" ) ; } break; } } 
@ java.lang.Override public void surfaceCreated ( android.view.SurfaceHolder holder ) { bg = new com.voicesprint.variable_j.voicesprint.Background ( android.graphics.BitmapFactory . decodeResource ( getResources () , R.drawable.full_background ) ) ; player = new com.voicesprint.variable_j.voicesprint.Player ( android.graphics.BitmapFactory . decodeResource ( getResources () , R.drawable.superman ) , 0 , 0 ) ; bg . setVector ( ( - 5 ) ) ; thread . setRunning ( true ) ; thread . start () ; pitchDetector = new com.voicesprint.variable_j.voicesprint.PitchDetector ( this ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { android.support.multidex.MultiDex . install ( this ) ; super . onCreate ( savedInstanceState ) ; if ( ! ( BuildConfig.DEBUG ) ) io.fabric.sdk.android.Fabric . with ( mContext , new com.crashlytics.android.Crashlytics () ) ; setContentView ( R.layout.activity_splash_screen ) ; butterknife.ButterKnife . bind ( this ) ; mContext = this ; io.realm.RealmConfiguration realmConfiguration = new io.realm.RealmConfiguration.Builder ( this ) . name ( Realm.DEFAULT_REALM_NAME ) . deleteRealmIfMigrationNeeded () . build () ; io.realm.Realm . setDefaultConfiguration ( realmConfiguration ) ; } 
@ org.junit.Test public void 상속과_형변환 ( ) throws java.lang.Exception { org.junit.Assert . assertThat ( accessChildren . onlyChildren () , org.hamcrest.CoreMatchers . is ( "onlyChildren" ) ) ; org.junit.Assert . assertThat ( accessChildren . getNameByProtected () , org.hamcrest.CoreMatchers . is ( "Child : AccessParent_Protected" ) ) ; com.study.week1.oop.access.AccessParent accessParentCasted = ( ( com.study.week1.oop.access.AccessParent ) ( accessChildren ) ) ; org.junit.Assert . assertThat ( "parent 로 캐스팅 됐지만, 객체는 여전히 children의 속성을 갖고 있다." , accessParentCasted . getNameByProtected () , org.hamcrest.CoreMatchers . is ( "AccessParent_Protected" ) ) ; } 
@ java.lang.Override public java.lang.String toString () { java.util.Calendar calendar = java.util.Calendar . getInstance () ; calendar . clear () ; calendar . set ( getSelectedYear () , getSelectedMonth () , getSelectedDay () , getSelectedHour () , getSelectedMinute () ) ; return kankan.wheel.widget.DateTimePicker.stringDateFormatter . format ( calendar ) ; } 
public int getHideModifier () { switch ( size ) { case 1 : return 32 ; case 2 : return 28 ; case 3 : return 24 ; case 4 : return 20 ; case 5 : return 16 ; case 6 : return 12 ; case 7 : return 8 ; case 8 : return 4 ; case 9 : return 0 ; case 10 : return 0 ; default: return "hacker" ; } } 
@ java.lang.Override public void cardSwipedRight ( int position ) { android.util.Log . i ( "MainActivity" , ( "card was swiped right, position in adapter: " + position ) ) ; com.example.rvkdt.rvkapp.DataObjects.Bar likedBar = bars . get ( position ) ; barManager . pushLiked ( likedBar ) ; liked_bars_fragment . update () ; com.example.rvkdt.rvkapp.DataObjects.Bar bar = barManager . getBar () ; if ( bar != null ) { currentBar = barManager . popDeck () ; barManager . pushToDeck ( bar ) ; bars . add ( bar ) ; } } 
public static void createTroop () { if ( ( ! ( ( paket.Troops.NTroops ) >= ( paket.Troops.maxTroops ) ) ) && ( ( ( Player.credit ) - 50 ) >= 0 ) ) { paket.Troops.troops [ paket.Troops.NTroops ] = new paket.Troop ( 100 , 10 , 0 , 100 ) ; ( paket.Troops.NTroops ) ++ ; paket.Player . purchaseTroops ( 50 ) ; java.lang.System.out . println ( ( "Player credits: " + ( Player.credit ) ) ) ; } } 
public java.lang.String toString () { return ( ( ( ( ( "" + "\nfailing: " ) + ( printTestResult ( this . getTestResult () ) ) ) + "\nmanual_regression: " ) + ( printTestResult ( this . manualTestValidation . getTestResult () ) ) ) + "\nevo_regression: " ) + ( printTestResult ( this . evoValidation . getTestResult () ) ) ; } 
private java.util.List < de.be4.classicalb.core.parser.rules.PExpression > createIdentifierList ( java.lang.String . . . strings ) { java.util.ArrayList < de.be4.classicalb.core.parser.rules.PExpression > list = new java.util.ArrayList <> () ; for ( int i = 0 ; i < ( strings.length ) ; i ++ ) { list . add ( de.be4.classicalb.core.parser.rules.RulesTransformation . createIdentifier ( strings [ i ] ) ) ; } return list ; } 
public java.lang.String get_response ( char inst ) { java.lang.String resp = "Timeout" ; if ( inst == 0 ) { try { resp = in . readLine () ; java.lang.System.out . println ( resp ) ; in . reset () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } return resp ; } 
@ org.junit.Test public void testGernerateImageFromText () { DataMatrix dm = new DataMatrix ( "CSUMB CSIT online program is top notch." ) ; dm . generateImageFromText () ; dm . translateImageToText () ; dm . displayImageToConsole () ; dm . displayTextToConsole () ; DataMatrix dm2 = new DataMatrix () ; dm2 . readText ( "CSUMB CSIT online program is top notch." ) ; dm2 . generateImageFromText () ; dm2 . translateImageToText () ; dm2 . displayImageToConsole () ; dm2 . displayTextToConsole () ; } 
private void generateBomb () { java.util.Random random = new java.util.Random ( 500 ) ; for ( int i = 0 ; i < 15 ; i ++ ) { int d = random . nextInt ( 1500 ) ; int f = random . nextInt ( 500 ) ; entities . add ( new com.mygdx.game.States.Bomb ( ( 750 + d ) , ( ( Gdx.graphics . getHeight () ) + f ) , this ) ) ; } } 
public void checkInvalidField ( org.openqa.selenium.WebElement field , java.lang.String value , org.openqa.selenium.By error ) { driver . get ( PagesURL.SIGN_UP_PAGE ) ; fillField ( field , value ) ; btnRegister . click () ; org.openqa.selenium.WebElement errorElem = driver . findElement ( error ) ; org.junit.Assert . assertTrue ( ( ! ( errorElem . getText () . isEmpty () ) ) ) ; } 
public synchronized void initPercentageMatches () { perMatches = ( ( double ) ( matches . size () ) ) / ( matches . getLFGroup () . size () ) ; perMatchesOnMatching = ( ( double ) ( matches . getMatchingLFGroup () . size () ) ) ; if ( ( perMatches ) > ( perMatchesOnMatching ) ) maxPercentageMatches = perMatches ; else maxPercentageMatches = perMatchesOnMatching ; } 
public void addToInventory ( com.bayviewglen.zork.Items item ) { boolean check = checkWeight ( item ) ; if ( check ) { inventory . put ( item . getName () , item ) ; weight += item . getWeight () ; } else if ( ! check ) { java.lang.System.out . println ( "You only have one back! How do you plan to carry two backpacks?" ) ; } } 
private void delete ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { java.lang.String id = request . getParameter ( "id" ) ; productService . delete ( id ) ; response . sendRedirect ( ( ( request . getContextPath () ) + "/query.jsp" ) ) ; } 
@ java.lang.Override public void paint ( java.awt.Graphics g ) { java.awt.Dimension preferredSize = getPreferredSize () ; if ( ( ! ( previousDimen . equals ( preferredSize ) ) ) || ( ( preferredWidth ) != ( preferredSize.width ) ) ) { preferredSize = autoContentsFitSize () ; preferredWidth = preferredSize.width ; previousDimen . setSize ( preferredSize ) ; } super . paint ( g ) ; } 
private void inflateLayout () { android.support.v7.widget.RecyclerView recyclerView = ( ( android.support.v7.widget.RecyclerView ) ( rootView . findViewById ( R.id.recycler_view ) ) ) ; recyclerView . setHasFixedSize ( true ) ; _sGridLayoutManager = new android.support.v7.widget.StaggeredGridLayoutManager ( 3 , android.support.v7.widget.StaggeredGridLayoutManager.VERTICAL ) ; recyclerView . setLayoutManager ( _sGridLayoutManager ) ; java.util.List < com.sunway.android.memoapp.model.MemoItem > sList ; sList = com.sunway.android.memoapp.util.ListOperation . getListViewItems () ; com.sunway.android.memoapp.model.MemoItemAdapter rcAdapter = new com.sunway.android.memoapp.model.MemoItemAdapter ( getActivity () , sList ) ; recyclerView . setAdapter ( rcAdapter ) ; } 
public void searchDocuments () { java.util.Scanner scan = new java.util.Scanner ( java.lang.System.in ) ; java.lang.System.out . println ( "Enter the title of a document to search for" ) ; java.lang.String query = scan . nextLine () ; edu.txstate.library.Book search = new edu.txstate.library.Book () ; search . setTitle ( query ) ; if ( documents . contains ( search ) ) { for ( edu.txstate.library.Document doc : documents ) { if ( doc . equals ( search ) ) java.lang.System.out . println ( doc . toString () ) ; } } scan . close () ; } 
private com.google.maps.android.geojson.GeoJsonGeometry createGeoJsonPolygon ( com.google.android.gms.maps.Projection projection ) { com.google.maps.android.geojson.GeoJsonPolygon geoJsonPolygon = new com.google.maps.android.geojson.GeoJsonPolygon ( createListOfCoordinates ( coordinates ) ) ; com.vividsolutions.jts.geom.Polygon polygon = ( ( com.vividsolutions.jts.geom.Polygon ) ( at.jku.cis.radar.convert.GeometryTransformator . transformToGeometry ( geoJsonPolygon , projection ) ) ) ; if ( polygon . isSimple () ) { return geoJsonPolygon ; } return createComplexPolygon ( polygon , projection ) ; } 
public java.util.Date getDateOfBirth ( java.lang.String dateString ) { LOGGER . debug ( "getting date for {}" , dateString ) ; java.text.DateFormat df = new java.text.SimpleDateFormat ( "yyyy-MM-dd" ) ; java.util.Date date = null ; try { if ( ( dateString != null ) && ( ! ( "" . equals ( dateString ) ) ) ) date = df . parse ( dateString ) ; } catch ( java.text.ParseException e ) { LOGGER . error ( "parsing date of birth" , e ) ; } return date ; } 
public static byte [] serialize ( java.lang.Object object ) { java.io.ObjectOutputStream oos = null ; java.io.ByteArrayOutputStream baos = null ; try { baos = new java.io.ByteArrayOutputStream () ; oos = new java.io.ObjectOutputStream ( baos ) ; oos . writeObject ( object ) ; byte [] bytes = baos . toByteArray () ; return bytes ; } catch ( java.lang.Exception e ) { throw new org.apache.ibatis.cache.CacheException ( e ) ; } } 
@ java.lang.Override public boolean containsKey ( java.lang.Object key ) { if ( key == null ) { throw new java.lang.NullPointerException ( "key" ) ; } if ( ( root ) == null ) { return false ; } @ java.lang.SuppressWarnings ( value = "unchecked" ) V notFound = ( ( V ) ( io.coronet.pico.PMapImpl.NOT_FOUND ) ) ; return ( root . get ( key . hashCode () , 0 , key , notFound ) ) == ( io.coronet.pico.PMapImpl.NOT_FOUND ) ; } 
public boolean collide ( core.Player player ) { if ( ( ( java.lang.Math . abs ( ( ( x ) - ( player.x ) ) ) ) < ( core.Player.SIZE ) ) && ( ( java.lang.Math . abs ( ( ( y ) - ( player.y ) ) ) ) < ( core.Player.SIZE ) ) ) return true ; return false ; } 
private static java.lang.String durationToString ( org.joda.time.Duration duration ) { java.lang.String durationString = ( duration . getStandardSeconds () ) + "s" ; if ( ( duration . getStandardMinutes () ) > 0 ) { durationString = ( ( ( duration . getStandardMinutes () ) % 60 ) + "m " ) + durationString ; if ( ( duration . getStandardHours () ) > 0 ) { durationString = ( ( duration . getStandardHours () ) + "h " ) + durationString ; } } return durationString ; } 
@ java.lang.Override public void Log ( java.lang.String tag , java.lang.String message , java.lang.String additionalMessage , com.microsoft.aad.adal.Logger.LogLevel level , com.microsoft.aad.adal.ADALError errorCode ) { boolean hasAll = true ; for ( java.lang.String msg : msgs ) { if ( message . contains ( msg ) ) { response.tag = tag ; response.message = message ; response.additionalMessage = additionalMessage ; response.level = level ; response.errorCode = errorCode ; } else { hasAll = false ; break; } } if ( ( signal != null ) && hasAll ) { signal . countDown () ; } } 
@ org.junit.Test public void setDate_java_util_date () { com.ddiehl.timesincetextview.TimeSinceTextView view = new com.ddiehl.timesincetextview.TimeSinceTextView ( com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest.mContext ) ; view . setDate ( new java.util.Date ( ( ( ( mTime ) - ( ( ( 1 * 24 ) * 60 ) * 60 ) ) * 1000 ) ) ) ; org.hamcrest.MatcherAssert . assertThat ( view . getText () . toString () , com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest . is ( getQuantityString ( R.plurals.tstv_timespan_days , 1 ) ) ) ; } 
private io.cloudsoft.winrm4j.winrm.WinRmTool connect () { io.cloudsoft.winrm4j.client.WinRmClientContext context = org.apache.brooklyn.util.core.internal.winrm.winrm4j.Winrm4jTool . createWinrmContext ( mgmt ) ; io.cloudsoft.winrm4j.winrm.WinRmTool.Builder builder = WinRmTool.Builder . builder ( host , computerName , user , password ) . context ( context ) . setAuthenticationScheme ( authenticationScheme ) . useHttps ( useSecureWinrm ) . port ( port ) ; if ( ( environment ) != null ) { builder . environment ( environment ) ; } if ( useSecureWinrm ) { builder . disableCertificateChecks ( true ) ; } return builder . build () ; } 
public void addInfoIntoHopObject () { if ( checkCurrentTag ( "hopsName" ) ) { hop . setNameOfHop ( text ) ; } else if ( checkCurrentTag ( "hopsamount" ) ) { hop . setAmountOfHopsInGrams ( java.lang.Double . parseDouble ( text ) ) ; } else if ( checkCurrentTag ( "hopstime" ) ) { hop . setTimeToAddHop ( text ) ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "channel/data/{id}" , method = { org.springframework.web.bind.annotation.RequestMethod.POST , org.springframework.web.bind.annotation.RequestMethod.PUT } ) @ org.springframework.web.bind.annotation.ResponseBody public org.crusoe.dto.cms.ChannelDTO update ( @ org.springframework.web.bind.annotation.PathVariable ( value = "id" ) java.lang.Long id , @ org.springframework.web.bind.annotation.RequestBody org.crusoe.dto.cms.ChannelDTO c ) { org.crusoe.entity.cms.Channel channel = channelService . findById ( id ) ; channel . setTitle ( c . getName () ) ; channel . setSequenceIndex ( c . getSequenceIndex () ) ; channel . setState ( c . getState () ) ; channel . setParent ( channelService . findById ( c . getParent () . getId () ) ) ; org.crusoe.entity.cms.Channel savedChannel = channelService . save ( channel ) ; return c ; } 
public boolean validatePassword ( java.lang.String password ) { if ( password == null ) { this . errors . add ( "Password is required." ) ; return false ; } if ( ! ( password . matches ( com.epam.danilchican.betting.validator.UserValidator.PASSWORD_REGEX ) ) ) { this . errors . add ( "Your password must be at least 6 characters as well as contain at least one uppercase, one lowercase, and one number." ) ; return false ; } return true ; } 
private void blockReceive ( java.lang.String message ) { java.lang.System.out . println ( "CO1 called" ) ; int difficulty ; server.BlockHandler bh = new server.BlockHandler () ; difficulty = bh . blockReceive ( message , true ) ; if ( difficulty == ( - 1 ) ) { terminateConnection () ; } else { sendDifficulty ( difficulty ) ; } } 
public int getCurrentExamPaperNo ( java.lang.String cid ) { getSession () . flush () ; org.hibernate.Criteria criteria = getSession () . createCriteria ( com.springapp.mvc.domain.exam.PaperGenerateTemplate . class ) ; criteria . add ( org.hibernate.criterion.Restrictions . eq ( "category.id" , cid ) ) ; criteria . addOrder ( org.hibernate.criterion.Order . desc ( "id" ) ) ; criteria . setMaxResults ( 1 ) ; com.springapp.mvc.domain.exam.PaperGenerateTemplate paperGenerateTemplate = ( ( com.springapp.mvc.domain.exam.PaperGenerateTemplate ) ( criteria . uniqueResult () ) ) ; return paperGenerateTemplate . getNo () ; } 
@ java.lang.Override protected com.itr.dlaxist.BarcodeScan doInBackground ( com.datalogic.decode.DecodeResult . . . params ) { com.itr.dlaxist.BarcodeScan barcode = null ; try { com.datalogic.decode.DecodeResult decodeResult = params [ 0 ] ; java.lang.String str = "" ; if ( decodeResult != null ) { java.lang.String str1 = decodeResult . getText () ; if ( str1 != null ) { str = str1 ; } } barcode = new com.itr.dlaxist.BarcodeScan ( new com.itr.dlaxist.BarcodeScan ( "UPC" , str ) ) ; } catch ( com.itr.dlaxist.ScannerException e ) { e . printStackTrace () ; } return barcode ; } 
void shiftBricks () { bricks = bricks . shift ( ( ( getRotation () ) == ( com.kry.brickgame.games.GameConsts.Rotation.CLOCKWISE ) ? 1 : - 1 ) ) ; synchronized ( lock ) { com.kry.brickgame.boards.Board board = getBoard () ; board = com.kry.brickgame.games.GameUtils . insertCellsToBoard ( board , bricks . getBoard () , bricksX , bricksY ) ; setBoard ( drawBall ( board , ballX , ballY ) ) ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main__fitness_log ) ; mDatasource = new co.rpg_fitness_app.android.rpg_fitness_app.dataBase_Package.DataSource ( this ) ; mDatasource . upgrade () ; ( ( android.widget.Button ) ( findViewById ( R.id.button_add_activity ) ) ) . setOnClickListener ( new android.widget.Button.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { android.support.v4.app.FragmentManager fm = getFragmentManager () ; co.rpg_fitness_app.android.rpg_fitness_app.fitness_Package.AddLogTypeDialogFragment dF = new co.rpg_fitness_app.android.rpg_fitness_app.fitness_Package.AddLogTypeDialogFragment () ; dF . show ( fm , "idgoal" ) ; } } ) ; } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { int id = item . getItemId () ; if ( id == ( R.id.action_settings ) ) { return true ; } else if ( id == ( R.id.action_search ) ) { handleMenuSearch () ; } else if ( id == ( R.id.action_refresh_list ) ) { checkForNewContent ( true ) ; } return super . onOptionsItemSelected ( item ) ; } 
@ java.lang.Override public void robotInit () { chooser . addDefault ( "Default Auto" , defaultAuto ) ; chooser . addObject ( "My Auto" , customAuto ) ; edu.wpi.first.wpilibj.smartdashboard.SmartDashboard . putData ( "Auto choices" , chooser ) ; myGamepad = new edu.wpi.first.wpilibj.XboxController ( 0 ) ; gyro = new edu.wpi.first.wpilibj.ADXRS450_Gyro () ; gyro . calibrate () ; sparkLeft = new edu.wpi.first.wpilibj.Spark ( 0 ) ; sparkRight = new edu.wpi.first.wpilibj.Spark ( 1 ) ; drive = new org.usfirst.frc.team6542.robot.XboxDrive ( sparkLeft , sparkRight , myGamepad ) ; } 
public void send ( org.bukkit.entity.Player player , int delay ) { bossBar . addPlayer ( player ) ; bossBar . setVisible ( true ) ; org.bukkit.Bukkit . getScheduler () . runTaskLater ( Main.plugin , new java.lang.Runnable () { @ java.lang.Override public void run () { hide ( player ) ; } } , delay ) ; } 
@ java.lang.Override public void create () { engine = new com.badlogic.ashley.core.PooledEngine () ; tweenManager = new aurelienribon.tweenengine.TweenManager () ; batch = new com.badlogic.gdx.graphics.g2d.SpriteBatch () ; entityGenerator = com.kmcoding.SproxWorld.ECS.Entities.EntityGenerator . getInstanceWithGame ( this ) ; world = new com.badlogic.gdx.physics.box2d.World ( Constants.BOX2D_GRAVITY , true ) ; if ( Constants.GAME_SHOW_SPLASH_SCREEN ) { setScreen ( new com.kmcoding.SproxWorld.Screens.SplashScreen ( this ) ) ; } else { setScreen ( new com.kmcoding.SproxWorld.Screens.GameScreen ( this ) ) ; } setScreen ( new com.kmcoding.SproxWorld.Screens.GameScreen ( this ) ) ; } 
private void prepare ( final char c ) { java.lang.Runnable rnbl = new java.lang.Runnable () { @ java.lang.Override public void run () { justCleared = true ; defaultShown = false ; setForeground ( defaultColor ) ; setText ( ( "" + c ) ) ; } } ; javax.swing.SwingUtilities . invokeLater ( rnbl ) ; } 
@ java.lang.Override protected void onAttachedToWindow () { android.util.Log . d ( com.yoai.reactnative.media.player.ReactMediaPlayerView.TAG , "onAttachedToWindow..." ) ; super . onAttachedToWindow () ; if ( ( getContext () ) instanceof com.facebook.react.bridge.ReactContext ) { ( ( com.facebook.react.bridge.ReactContext ) ( getContext () ) ) . addLifecycleEventListener ( this ) ; } initPlayerControllerIfNeeded () ; } 
public node < E > search ( E data ) { node < E > T = root ; int c ; while ( T != null ) { c = T . getData () . compareTo ( data ) ; if ( c == 0 ) return T ; else if ( c > 0 ) T = T . getRight () ; else T = T . getLeft () ; } return null ; } 
protected void adjustSlopeVelocities ( int i1 ) { if ( ( this ) instanceof train.common.api.Locomotive ) { return; } double d4 = - 0.002 ; if ( i1 == 2 ) { motionX -= d4 ; } if ( i1 == 3 ) { motionX += d4 ; } if ( i1 == 4 ) { motionZ += d4 ; } if ( i1 == 5 ) { motionZ -= d4 ; } } 
@ java.lang.Override public org.eclipse.cdt.core.ICommandLauncher getCommandLauncher ( org.eclipse.cdt.core.settings.model.ICConfigurationDescription cfgd ) { org.eclipse.cdt.managedbuilder.core.IConfiguration cfg = org.eclipse.cdt.managedbuilder.core.ManagedBuildManager . getConfigurationForDescription ( cfgd ) ; org.eclipse.cdt.managedbuilder.buildproperties.IOptionalBuildProperties props = cfg . getOptionalBuildProperties () ; if ( props != null ) { java.lang.String enablementProperty = props . getProperty ( ContainerCommandLauncher.CONTAINER_BUILD_ENABLED ) ; if ( enablementProperty != null ) { boolean enableContainer = java.lang.Boolean . parseBoolean ( enablementProperty ) ; if ( enableContainer ) { return new org.eclipse.cdt.internal.docker.launcher.ContainerCommandLauncher () ; } } } return null ; } 
@ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; ( ( android.support.v7.app.AppCompatActivity ) ( getActivity () ) ) . getSupportActionBar () . hide () ; context = getContext () ; preferenceManager = new com.aadamsdev.communities.utils.PreferenceManager ( getContext () ) ; if ( ! ( preferenceManager . isFirstTimeLaunch () ) ) {} } 
public void update () { if ( ! ( removeoperation ) ) { this . whiteListedPlayers () ; this . whitelistedPlayersList () ; java.util.List < java.lang.String > whitelistedPlayersList = this . getWhitelistedPlayersList () ; java.util.List < java.lang.String > players = getPlayers () ; this . clear () ; this . update ( whitelistedPlayersList , players ) ; this . whiteListedPlayers () ; this . whitelistedPlayersList () ; } } 
@ java.lang.Override public boolean equals ( java.lang.Object o ) { return ( ( ( ( re ) == ( ( ( Complex ) ( o ) ) . re ) ) && ( ( im ) == ( ( ( Complex ) ( o ) ) . im ) ) ) && ( ( theta ) == ( ( ( Complex ) ( o ) ) . theta ) ) ) && ( ( type ) == ( ( ( Complex ) ( o ) ) . type ) ) ; } 
protected static void step3_verifymodifyCharge ( java.lang.String paymentProcessor , java.lang.String rpID_to , java.lang.String policyType , boolean hasPenalty_to , java.lang.String modificationType , boolean isMissing ) throws java.lang.InterruptedException { getWebBrowser () . findElement ( org.openqa.selenium.By . cssSelector ( Locator_IBE.locator_confirm_button_modifyDatesRooms_Yes ) ) . click () ; bookingEngine.Step1_selectDates . select_stayDates ( hasPenalty_to , rpID_to ) ; bookingEngine.Step2_showRooms . select_rooms ( paymentProcessor , rpID_to , settings.Compute . getCurrency ( paymentProcessor ) ) ; bookingEngine.Step2_showRooms . go () ; bookingEngine.Step3_payInfo . verify_penalty ( policyType , isMissing , modificationType , "step3" ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main__fitness_log ) ; co.rpg_fitness_app.android.rpg_fitness_app.fitness_Package.FitnessLog fitnessLog = new co.rpg_fitness_app.android.rpg_fitness_app.fitness_Package.FitnessLog () ; ( ( android.widget.Button ) ( findViewById ( R.id.button_add_activity ) ) ) . setOnClickListener ( new android.widget.Button.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { android.support.v4.app.FragmentManager fm = getFragmentManager () ; co.rpg_fitness_app.android.rpg_fitness_app.fitness_Package.AddLogTypeDialogFragment dF = new co.rpg_fitness_app.android.rpg_fitness_app.fitness_Package.AddLogTypeDialogFragment () ; dF . show ( fm , "idgoal" ) ; } } ) ; } 
@ android.annotation.TargetApi ( value = 23 ) public void updateListView ( int position ) { android.view.View v = getListView () ; android.widget.ListView listView = ( ( android.widget.ListView ) ( v . findViewById ( android.R.id.list ) ) ) ; listView . setAdapter ( new com.firefly.shoppomem.PendingItemAdapter ( getContext () , R.layout.pending_list_row , com.firefly.shoppomem.HistoryActivity . getHistoryList () . get ( position ) . getmItemsList () ) ) ; currentPosition = position ; } 
private PeerConnection.RTCConfiguration parseRTCConfiguration ( com.facebook.react.bridge.ReadableMap map ) { com.facebook.react.bridge.ReadableArray iceServersArray = null ; if ( map != null ) { iceServersArray = map . getArray ( "iceServers" ) ; } java.util.List < com.oney.WebRTCModule.PeerConnection.IceServer > iceServers = createIceServers ( iceSeversArray ) ; com.oney.WebRTCModule.PeerConnection.RTCConfiguration configuration = new com.oney.WebRTCModule.PeerConnection.RTCConfiguration ( iceServers ) ; return configuration ; } 
public void addEventListener ( org.eclipse.tcf.te.runtime.interfaces.events.IEventListener listener , java.lang.Class < ? > eventType , java.lang.Object eventSource ) { addEventListener ( listener , ( eventType != null ? new java.lang.Class [] { eventType } : null ) , ( eventSource != null ? new java.lang.Object [] { eventSource } : null ) ) ; } 
private static void sort ( java.lang.Comparable [] a , java.lang.Comparable [] aux , int lo , int hi ) { int mid = lo + ( ( hi - lo ) / 2 ) ; com.jaichaudhary.algorithms.sort.MergeSort . sort ( a , aux , mid , hi ) ; com.jaichaudhary.algorithms.sort.MergeSort . sort ( a , aux , lo , mid ) ; com.jaichaudhary.algorithms.sort.MergeSort . merge ( a , aux , lo , mid , hi ) ; } 
private static java.lang.String concatCollectionElements ( java.util.Collection < java.lang.String > elements ) { java.lang.StringBuilder result = new java.lang.StringBuilder () ; java.lang.String sep = "," ; for ( java.lang.String element : elements ) { result . append ( sep ) . append ( element ) ; } return result . toString () ; } 
public static byte [] pmlClassTransformation ( java.lang.ClassLoader loader , java.lang.String name , byte [] data , int off , int len , java.security.ProtectionDomain protectionDomain ) throws java.lang.Throwable { try { data = java.util.Arrays . copyOfRange ( data , off , ( off + len ) ) ; weatherpony.pml.launch.PMLRoot . transformClass ( loader , name , data , protectionDomain ) ; return data ; } catch ( java.lang.Throwable e ) { e . printStackTrace () ; throw e ; } } 
public void run () { try { btnPrint . setEnabled ( false ) ; this . setCursor ( java.awt.Cursor . getPredefinedCursor ( java.awt.Cursor.WAIT_CURSOR ) ) ; net.sf.jasperreports.engine.JasperPrintManager . printReport ( jasperPrint , true ) ; } catch ( java.lang.Exception ex ) { if ( com.openbravo.pos.util.JRViewer411.log . isErrorEnabled () ) { com.openbravo.pos.util.JRViewer411.log . error ( "Print error." , ex ) ; } javax.swing.JOptionPane . showMessageDialog ( this , getBundleString ( "error.printing" ) ) ; } finally { this . setCursor ( java.awt.Cursor . getPredefinedCursor ( java.awt.Cursor.DEFAULT_CURSOR ) ) ; btnPrint . setEnabled ( true ) ; } } 
@ org.springframework.web.bind.annotation.PutMapping ( value = "/{id}" ) public java.lang.String update ( @ itn.issuemanager.config.LoginUser itn.issuemanager.domain.User loginUser , @ org.springframework.web.bind.annotation.PathVariable long id , itn.issuemanager.domain.User updatedUser ) throws itn.issuemanager.domain.ForbiddenTypeException { itn.issuemanager.domain.User user = userRepository . findOne ( id ) ; if ( ! ( loginUser . isSameUser ( user ) ) ) { throw new itn.issuemanager.domain.ForbiddenTypeException () ; } if ( user . isPassword ( updatedUser . getPassword () ) ) itn.issuemanager.controller.UserController.log . debug ( "기존 비밀번호가 틀렸습니다." ) ; user . update ( updatedUser , newPassword ) ; userRepository . save ( user ) ; return "redirect:/" ; } 
@ org.junit.Test public void testRoundTrip ( ) throws java.lang.Exception { hudson.model.FreeStyleProject p = createFreeStyleProject () ; hudson.plugins.testng.Publisher before = new hudson.plugins.testng.Publisher ( "" , false , false , true , false , 0 , 0 , 0 , 0 , false ) ; p . getPublishersList () . add ( before ) ; submit ( createWebClient () . getPage ( p , "configure" ) . getFormByName ( "config" ) ) ; hudson.plugins.testng.Publisher after = p . getPublishersList () . get ( hudson.plugins.testng.Publisher . class ) ; assertEqualBeans ( before , after , "reportFilenamePattern,escapeTestDescp,escapeExceptionMsg,showFailedBuilds" ) ; } 
protected void onDestroy () { if ( mHasRunCallback ) { handler . removeCallbacks ( runnableShowNextWord ) ; } if ( ( ! ( ( mTotalTrueAnswers ) == 0 ) ) && ( ( mTotalFalseAnswers ) == 0 ) ) { android.widget.Toast . makeText ( ctx , showResult () , Toast.LENGTH_LONG ) . show () ; } mDb . close () ; super . onDestroy () ; } 
@ java.lang.Override public void onCreate ( android.database.sqlite.SQLiteDatabase db ) { java.lang.String query = ( ( ( ( ( ( "CREATE TABLE " + ( exjobb.selfannotationsystem.Database.DBLabelHelper.TABLE_LABELS ) ) + "(" ) + ( exjobb.selfannotationsystem.Database.DBLabelHelper.COLUMN_ID ) ) + " INTEGER PRIMARY KEY AUTOINCREMENT, " ) + ( exjobb.selfannotationsystem.Database.DBLabelHelper.COLUMN_VALUE ) ) + " TEXT " ) + ");" ; db . execSQL ( query ) ; java.lang.String [] defaults = new java.lang.String [] { "No label" , "Transportsträcka" , "Stressad aktivitet" , "Omedveten aktivitet" , "Jobbaktivitet" , "Skolgympa" } ; for ( java.lang.String s : defaults ) { addLabel ( s ) ; } } 
public animationeditor.Bone getParent ( animationeditor.Skeleton skeleton ) { if ( skeleton.boneList . contains ( this ) ) { return null ; } for ( animationeditor.Bone bone : skeleton.boneList ) { while ( ! ( bone.childList . contains ( this ) ) ) { for ( animationeditor.Bone child : bone.childList ) { if ( ( child . getDescendant ( name ) ) != null ) { bone = child ; } } } return bone ; } throw null ; } 
public org.opentestsystem.rdw.reporting.exam.AssessmentItem build () { final org.opentestsystem.rdw.reporting.exam.AssessmentItem item = new org.opentestsystem.rdw.reporting.exam.AssessmentItem () ; item.id = id ; item.bankItemKey = bankItemKey ; item.claim = claim ; item.target = target ; item.difficultyCode = difficultyCode ; item.maximumPoints = maximumPoints ; item.commonCoreStandardIds = ( ( commonCoreStandardIds ) != null ) ? java.util.Collections . unmodifiableList ( commonCoreStandardIds ) : null ; return item ; } 
@ java.lang.Override public java.lang.Iterable < uk.gov.gchq.gaffer.operation.data.EntitySeed > doOperation ( final uk.gov.gchq.gaffer.operation.impl.output.ToEntitySeeds operation , final uk.gov.gchq.gaffer.store.Context context , final uk.gov.gchq.gaffer.store.Store store ) throws uk.gov.gchq.gaffer.operation.OperationException { if ( null == ( operation . getInput () ) ) { return null ; } return uk.gov.gchq.gaffer.commonutil.stream.Streams . toStream ( operation . getInput () ) . map ( EntitySeed : : new ) . collect ( uk.gov.gchq.gaffer.commonutil.stream.GafferCollectors . toCloseableIterable () ) ; } 
public java.util.List < partypeople.Event > getCreated () { java.util.List < partypeople.Event > created = new java.util.ArrayList < partypeople.Event > () ; if ( ( this . myCreated ) != null ) { for ( com.googlecode.objectify.Ref < partypeople.Event > event : myCreated ) { created . add ( event . safeGet () ) ; } } return created ; } 
public void pi () { if ( ! ( valueResetFlag ) ) { enter () ; calcStack . push ( java.lang.Math.PI ) ; historyStack . push ( PI ) ; multiply () ; } else { calcStack . push ( java.lang.Math.PI ) ; historyStack . push ( PI ) ; printHistory () ; updateOperationValue ( java.lang.Math.PI ) ; if ( historyResetFlag ) { historyValue = new java.lang.StringBuilder () ; historyResetFlag = false ; } } } 
@ org.junit.Test public void testDeleteVocabularyFolders ( ) throws eionet.meta.service.ServiceException { vocabularyService . deleteVocabularyFolders ( java.util.Collections . singletonList ( 1 ) , false ) ; java.lang.Exception exception = null ; try { vocabularyService . getVocabularyFolder ( 1 ) ; org.junit.Assert . fail ( "Expected vocabulary not found exception" ) ; } catch ( eionet.meta.service.ServiceException e ) { exception = e ; } org.junit.Assert . assertNotNull ( "Expected exception" , exception ) ; } 
private void checkCompoundsNumbered ( java.util.List < org.biojava.nbio.structure.Compound > compounds ) { java.util.Collections . sort ( compounds , new java.util.Comparator < org.biojava.nbio.structure.Compound > () { @ java.lang.Override public int compare ( org.biojava.nbio.structure.Compound o1 , org.biojava.nbio.structure.Compound o2 ) { return new java.lang.Integer ( o1 . getMolId () ) . compareTo ( o2 . getMolId () ) ; } } ) ; int id = 1 ; for ( org.biojava.nbio.structure.Compound compound : compounds ) { org.junit.Assert . assertEquals ( id , compound . getMolId () ) ; id ++ ; } } 
public java.util.Map < java.lang.String , java.lang.String > sync () { try { java.lang.String jsonString = getUrlString ( buildUrl () ) ; org.json.JSONObject jsonBody = new org.json.JSONObject ( jsonString ) ; return parseData ( jsonBody ) ; } catch ( org.json.JSONException e ) { android.util.Log . e ( com.gmail.halfik.btcprice.model.FetchData.TAG , "failed to parse json" , e ) ; } catch ( java.io.IOException ioe ) { android.util.Log . e ( com.gmail.halfik.btcprice.model.FetchData.TAG , "failed to fetch items" , ioe ) ; } return null ; } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { java.lang.String tdTag = "<td><p></p></td>" ; javax.swing.text.Element td = document . getParagraphElement ( editor . getCaretPosition () ) . getParentElement () ; try { document . insertAfterEnd ( td , tdTag ) ; } catch ( java.lang.Exception e ) { java.lang.System.out . println ( e . toString () ) ; e . printStackTrace () ; } } 
public static void printHand ( uno.deal play1 ) { int display = 0 ; for ( int x = 0 ; x < ( ( play1 . getSize () ) - 1 ) ; x ++ ) { display = x + 1 ; java.lang.System.out . println ( ( ( display + ". " ) + ( play1 . getCard ( x ) ) ) ) ; } display ++ ; java.lang.System.out . println ( ( display + ". Draw Card" ) ) ; } 
private java.util.Date setDateFormat ( java.lang.String sDate ) { try { java.util.Date dDate = dateFormat . parse ( sDate ) ; return dDate ; } catch ( java.text.ParseException e ) { java.lang.System.err . println ( ( "Fehler von String date to Date date: " + ( e . getMessage () ) ) ) ; return null ; } } 
protected void checkCollisionConnection ( java.lang.Object object , int x , int y ) { if ( object instanceof hcm.ssj.core.Sensor ) { addCollisionConnection ( object , x , y , componentViewsProvider , false ) ; } else if ( object instanceof hcm.ssj.core.Provider ) { boolean found = addCollisionConnection ( object , x , y , componentViewsTransformer , true ) ; if ( ! found ) { addCollisionConnection ( object , x , y , componentViewsConsumer , true ) ; } } } 
@ java.lang.Override protected void doFilterInternal ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response , javax.servlet.FilterChain filterChain ) throws java.io.IOException , javax.servlet.ServletException { try { java.lang.String username = hello.TokenAuthUtil . validateToken ( request ) ; } catch ( java.lang.Exception e ) { response . sendError ( HttpServletResponse.SC_UNAUTHORIZED , e . getMessage () ) ; } filterChain . doFilter ( request , response ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { male = true ; android.util.Log . i ( com.example.pingu.dhbw_project.MainActivity.TAG , "now is male" ) ; android.graphics.drawable.AnimationDrawable frameMan = ( ( android.graphics.drawable.AnimationDrawable ) ( startMan . getBackground () ) ) ; buttonMan . setVisibility ( View.INVISIBLE ) ; frameMan . start () ; buttonWomen . setBackgroundResource ( R.drawable.woman_new ) ; } 
public static java.lang.String getIntentUri ( android.content.Intent i ) { java.lang.String rtr = "" ; try { java.lang.reflect.Method m = android.content.Intent . class . getMethod ( "toUri" , new java.lang.Class [] { int . class } ) ; rtr = ( ( java.lang.String ) ( m . invoke ( i , android.content.Intent . class . getField ( "URI_INTENT_SCHEME" ) . getInt ( null ) ) ) ) ; } catch ( java.lang.Exception e ) { rtr = i . toURI () ; } return rtr ; } 
@ java.lang.Override public void changed ( com.couchbase.lite.replicator.Replication.ChangeEvent event ) { com.couchbase.lite.util.Log . e ( com.couchbase.lite.replicator.TAG , event . toString () ) ; if ( ( event . getError () ) != null ) { junit.framework.Assert . fail ( "Should not have any error...." ) ; } if ( ( event . getTransition () . getDestination () ) == ( ReplicationState.IDLE ) ) { idleSignal1 . countDown () ; idleSignal2 . countDown () ; } } 
private void update () { block = true ; for ( final net.slipcor.pvparena.arena.ArenaPlayer player : arena . getEveryone () ) { if ( ( ( ( player . getStatus () ) == ( ArenaPlayer.Status.DEAD ) ) || ( ( player . getStatus () ) == ( ArenaPlayer.Status.LOST ) ) ) || ( ( player . getStatus () ) == ( ArenaPlayer.Status.NULL ) ) ) { continue; } update ( player . get () ) ; } block = false ; } 
public void addChild ( com.googlecode.openbox.testu.tester.TestCase child ) { if ( children . contains ( child ) ) { return; } if ( ( child . getParent () ) != null ) { child . getParent () . getChildren () . remove ( child ) ; } child . setParent ( this ) ; child . grow () ; this . children . add ( child ) ; } 
public boolean isValid ( java.lang.String phoneNumber ) { if ( ( phoneNumber == null ) || ( phoneNumber . isEmpty () ) ) { message = uk.gov.dvsa.motr.web.validator.PhoneNumberValidator.EMPTY_PHONE_NUMBER_MESSAGE ; messageAtField = "" ; return false ; } if ( ! ( subscriptionsValidationService . hasMaxTwoSubscriptionsForPhoneNumber ( phoneNumber ) ) ) { message = uk.gov.dvsa.motr.web.validator.PhoneNumberValidator.TOO_MANY_SUBSCRIPTIONS ; messageAtField = uk.gov.dvsa.motr.web.validator.PhoneNumberValidator.TOO_MANY_SUBSCRIPTIONS_AT_FIELD ; return false ; } return validate ( phoneNumber ) ; } 
public synchronized com.google.android.gms.analytics.Tracker get ( org.gtlp.yasb.AnalyticsTrackers.Target target ) { if ( ! ( mTrackers . containsKey ( target ) ) ) { com.google.android.gms.analytics.Tracker tracker ; switch ( target ) { case APP : tracker = com.google.android.gms.analytics.GoogleAnalytics . getInstance ( mContext ) . newTracker ( R.xml.app_tracker ) ; tracker . enableAdvertisingIdCollection ( true ) ; break; default: throw new java.lang.IllegalArgumentException ( ( "Unhandled analytics target " + target ) ) ; } mTrackers . put ( target , tracker ) ; } return mTrackers . get ( target ) ; } 
@ java.lang.Override public void collectCallbackMethods () { logger . info ( "Collecting callbacks in FAST mode..." ) ; findClassLayoutMappings () ; for ( soot.SootClass sc : soot.Scene . v () . getApplicationClasses () ) { if ( sc . isConcrete () ) { for ( soot.SootMethod sm : sc . getMethods () ) { if ( sm . isConcrete () ) { analyzeMethodForCallbackRegistrations ( null , sm ) ; analyzeMethodForDynamicBroadcastReceiver ( sm ) ; } } analyzeMethodOverrideCallbacks ( sc ) ; } } } 
@ org.junit.Test public void testAutoReFocusWRadioButtons () { java.lang.String [] paths = new java.lang.String [] { ( com.github.bordertech.wcomponents.examples.AutoReFocusRepeaterExample_Test.ROOT_PATH ) + "[0]/WRadioButtonTriggerActionExample/WRadioButton" , ( com.github.bordertech.wcomponents.examples.AutoReFocusRepeaterExample_Test.ROOT_PATH ) + "[1]/WRadioButtonTriggerActionExample/WRadioButton" } ; for ( java.lang.String path : paths ) { com.github.bordertech.wcomponents.examples.AutoReFocusRepeaterExample_Test.driver . findWRadioButton ( byWComponentPath ( path ) ) . getInputField () . click () ; junit.framework.Assert . assertEquals ( "Incorrect focus" , com.github.bordertech.wcomponents.examples.AutoReFocusRepeaterExample_Test.driver . findWRadioButton ( byWComponentPath ( path ) ) . getActiveId () , com.github.bordertech.wcomponents.examples.AutoReFocusRepeaterExample_Test.driver . switchTo () . activeElement () . getAttribute ( "id" ) ) ; } } 
public java.util.List < de.thm.arsnova.entities.Question > getQuestionsBySortOrder ( de.thm.arsnova.entities.SortOrder sortOrder , boolean onlyActive ) { java.util.List < de.thm.arsnova.entities.Question > questions = new java.util.ArrayList < de.thm.arsnova.entities.Question > () ; java.lang.String [] questionIds = sortOrder . getSortOrder () ; for ( java.lang.String t : questionIds ) { de.thm.arsnova.entities.Question tempQuestion = getQuestion ( t ) ; if ( onlyActive ) { if ( tempQuestion . isActive () ) { questions . add ( tempQuestion ) ; } } else { questions . add ( tempQuestion ) ; } } } 
@ java.lang.Override public int read ( byte [] b , int off , int len ) throws java.io.IOException { int x = is . read ( b , off , len ) ; for ( int n = 0 ; n < x ; n ++ ) { ( count ) ++ ; if ( ( b [ n ] ) == '\n' ) { lines . add ( count ) ; } } return x ; } 
public java.lang.String get ( java.lang.String variable ) { for ( net.arcanesanctuary.Configuration.Conf conf : this . getChildNodes () ) { if ( conf . getVariable () . equals ( variable ) ) { return conf . getValue () ; } if ( conf . hasChildNodes () ) { return get ( variable ) ; } } return null ; } 
@ org.junit.Test public void testPerformTask2 ( ) throws java.lang.Exception { org.duracloud.s3task.streaming.EnableStreamingTaskRunner runner = createRunner ( createMockStorageProviderV2 ( false ) , createMockUnwrappedS3StorageProviderV2 () , createMockS3ClientV3 () , createMockCFClientV2 () , cfAccountId ) ; org.duracloud.s3storageprovider.dto.EnableStreamingTaskParameters taskParams = new org.duracloud.s3storageprovider.dto.EnableStreamingTaskParameters () ; taskParams . setSpaceId ( spaceId ) ; boolean secure = true ; taskParams . setSecure ( secure ) ; java.lang.String results = runner . performTask ( taskParams . serialize () ) ; assertNotNull ( results ) ; testResults ( results ) ; testCapturedProps () ; } 
void init ( android.database.sqlite.SQLiteDatabase db ) { com.cartlc.tracker.data.TableAddress . Init ( db ) ; com.cartlc.tracker.data.TableEntry . Init ( db ) ; com.cartlc.tracker.data.TableEquipment . Init ( db ) ; com.cartlc.tracker.data.TableCollectionEquipmentEntry . Init ( db ) ; com.cartlc.tracker.data.TableCollectionEquipmentProject . Init ( db ) ; com.cartlc.tracker.data.TableNote . Init ( db ) ; com.cartlc.tracker.data.TableCollectionNoteEntry . Init ( db ) ; com.cartlc.tracker.data.TableCollectionNoteProject . Init ( db ) ; com.cartlc.tracker.data.TablePendingNotes . getInstance () . Init ( db ) ; com.cartlc.tracker.data.TablePictureCollection . Init ( db ) ; com.cartlc.tracker.data.TableProjectAddressCombo . Init ( db ) ; com.cartlc.tracker.data.TableProjects . Init ( db ) ; } 
public Item sample () { if ( ( first ) == null ) { throw new java.util.NoSuchElementException () ; } int number = StdRandom . uniform ( 0 , count ) ; RandomizedQueue < Item > . Node current = first ; for ( int i = 0 ; i <= number ; i ++ ) { if ( i != number ) { current = current.next ; } } return current.item ; } 
@ java.lang.Override public < I > boolean isIgnorable ( final org.openflexo.foundation.resource.FlexoResourceCenter < I > resourceCenter , final I contents ) { if ( resourceCenter . isIgnorable ( contents , this ) ) { return true ; } if ( resourceCenter . isDirectory ( contents ) ) { if ( isContainedInDirectoryWithSuffix ( resourceCenter , resourceCenter . getContainer ( contents ) , VirtualModelResourceFactory.FML_SUFFIX ) ) { return true ; } } return false ; } 
public void run ( java.lang.Object [] args ) { Client.ServerHandler client = ( ( Client.ServerHandler ) ( args [ 0 ] ) ) ; client.Data = ( ( java.lang.String ) ( ( ( Global.Packet.PacketData ) ( args [ 1 ] ) ) . Data () ) ) ; client.NewData = true ; notifyAll () ; } 
@ java.lang.Override public boolean onItemLongClick ( android.widget.AdapterView < ? > adapter , android.view.View item , int position , long id ) { com.getlosthere.completeme.Item updatedItem = com.getlosthere.completeme.Item . load ( com.getlosthere.completeme.Item . class , items . get ( position ) . remoteId ) ; updatedItem.completed = true ; updatedItem . save () ; items . set ( position , updatedItem ) ; sortItems () ; itemsAdapter . notifyDataSetChanged () ; return true ; } 
public boolean nextTurn () { currentSprite . playerSprite ( canvas ) ; if ( getCurrentPlayer () . hasMule () ) { getCurrentPlayer () . setMule ( null ) ; } currentSprite . reset () ; currentSprite . remove ( canvas ) ; currentSprite . remove ( townCanvas ) ; currentSprite . remove ( storeCanvas ) ; boolean atEnd = nextPlayer () ; updateSpriteLocation () ; outfitMode () ; outfitGUI () ; return atEnd ; } 
public static < T extends principal.TieneFecha > java.util.Collection < T > filtrar ( java.util.Collection < T > dat , java.util.Calendar inicio , java.util.Calendar fin ) { java.util.Collection < T > ret = new java.util.ArrayList < T > () ; for ( T e : dat ) { if ( ( e . getFecha () . after ( inicio ) ) && ( e . getFecha () . before ( fin ) ) ) { ret . add ( e ) ; } } return ret ; } 
public void parseExcelFile ( ) throws java.text.ParseException { try { java.io.FileInputStream excelFile = new java.io.FileInputStream ( new java.io.File ( com.inse.utility.ExcelParser.FILE_NAME ) ) ; com.inse.utility.Workbook workbook = new org.apache.poi.xssf.usermodel.XSSFWorkbook ( excelFile ) ; com.inse.utility.Sheet backupNurseSheet = workbook . getSheetAt ( com.inse.utility.ExcelParser.BACKUP_NURSE_SHEET ) ; com.inse.utility.Sheet feasibleVisits = workbook . getSheetAt ( com.inse.utility.ExcelParser.VISITS_COST_SHEET ) ; parseBackupNurseSheet ( backupNurseSheet ) ; parseFeasibleVisitSheet ( feasibleVisits ) ; } catch ( java.io.FileNotFoundException e ) { e . printStackTrace () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
@ org.junit.Test public void checkRulesTest2 () { com.letitgo.Board board = new com.letitgo.Board ( 9 ) ; board . loadFromFile ( "BoardTest_a.dat" ) ; org.junit.Assert . assertTrue ( "checkRulesTest2 failed" , ( ( board . checkRules ( new com.letitgo.Point ( 0 , 8 ) , Board.FRIENDLY ) ) == false ) ) ; } 
public boolean checkPattern ( java.util.List < com.android.internal.widget.LockPatternView.Cell > pattern , int userId ) throws com.android.internal.widget.LockPatternUtils.RequestThrottledException { try { com.android.internal.widget.VerifyCredentialResponse response = getLockSettings () . checkPattern ( patternToString ( pattern ) , userId ) ; if ( ( response . getResponseCode () ) == ( VerifyCredentialResponse.RESPONSE_OK ) ) { return true ; } else if ( ( response . getResponseCode () ) == ( VerifyCredentialResponse.RESPONSE_RETRY ) ) { throw new com.android.internal.widget.LockPatternUtils.RequestThrottledException ( response . getTimeout () ) ; } else { return false ; } } catch ( android.os.RemoteException re ) { return true ; } } 
public void playMoveAI ( int [] coord , int player ) { unselect () ; if ( player == 0 ) { cellGrid [ coord [ 0 ] ] [ coord [ 1 ] ] . playMove ( true ) ; } else { cellGrid [ coord [ 0 ] ] [ coord [ 1 ] ] . playMove ( false ) ; } } 
@ org.pentaho.ui.xul.stereotype.Bindable public void addParameter () { java.lang.String paramName = paramNameTextBox . getValue () ; java.lang.String paramValue = paramValueTextBox . getValue () ; if ( ( ! ( org.pentaho.gwt.widgets.client.utils.string.StringUtils . isEmpty ( paramName ) ) ) && ( ! ( org.pentaho.gwt.widgets.client.utils.string.StringUtils . isEmpty ( paramValue ) ) ) ) { importDialogModel . addParameter ( paramName , paramValue ) ; if ( ( importDialogModel . getSelectedAnalysisParameter () ) != null ) { closeParametersDialog () ; } resetParametersDialog () ; } } 
public boolean setRecord ( java.lang.String record ) { if ( ( record == null ) || ( ( record . length () ) == 0 ) ) { java.lang.System.out . println ( "Incorrect record!" ) ; return false ; } if ( ! ( testConnection () ) ) { return false ; } try { BasicDBObject [] seedData = MongoConnection . createSeedData ( record ) ; rec . insert ( seedData ) ; } catch ( java.net.UnknownHostException e ) { e . printStackTrace () ; return false ; } return true ; } 
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { if ( ( this ) == obj ) { return true ; } if ( obj == null ) { return false ; } if ( ( getClass () ) != ( obj . getClass () ) ) { return false ; } final com.zlthnrtm.ts.Vertex other = ( ( com.zlthnrtm.ts.Vertex ) ( obj ) ) ; if ( ! ( java.util.Objects . equals ( this . index , other.index ) ) ) { return false ; } return true ; } 
private void checkAutoRefreshActionPerformed ( java.awt.event.ActionEvent evt ) { if ( checkAutoRefresh . isSelected () ) { cbAutoRefreshInterval . setEnabled ( false ) ; java.lang.String time_value = java.lang.String . valueOf ( cbAutoRefreshInterval . getSelectedItem () ) ; } else { cbAutoRefreshInterval . setEnabled ( true ) ; btnRefresh . setEnabled ( true ) ; } } 
protected void writeResponseStream ( java.io.InputStream inputStream , java.io.OutputStream outputStream ) throws java.io.IOException { if ( ( inputStream == null ) || ( outputStream == null ) ) { return; } byte [] buffer = new byte [ chunkSize ] ; int length = 0 ; while ( ( length = inputStream . read ( buffer ) ) > 0 ) { outputStream . write ( buffer , 0 , length ) ; } } 
private org.inventivetalent.bossbar.BossBarAPI.Color parseColor ( java.lang.String name ) { if ( name . trim () . isEmpty () ) { return null ; } try { return org.inventivetalent.bossbar.BossBarAPI.Color . valueOf ( name . toUpperCase () ) ; } catch ( java.lang.IllegalArgumentException argumentException ) { return null ; } } 
@ java.lang.Override public cn.edu.jxnu.awesome_campus.support.utils.net.request.IRequest addParams ( java.lang.String key , java.lang.String val ) { if ( cn.edu.jxnu.awesome_campus.support.utils.common.TextUtil . isNull ( url ) ) { new java.lang.IllegalArgumentException ( "NETWORK : url can't be null !!!!" ) ; return null ; } if ( isFirstParams ) { url += "?" ; isFirstParams = false ; } else { url += "&" ; } url = ( ( ( url ) + key ) + "=" ) + val ; return this ; } 
public void retrieveTransaction ( com.bank.bean.account.AccountBean sourceAccountBean , double amount , java.lang.String comment ) { com.bank.bean.transaction.TransactionBean transactionBean = new com.bank.bean.transaction.TransactionBean () ; transactionBean . setSourceBean ( sourceAccountBean ) ; transactionBean . setAmount ( ( - amount ) ) ; transactionBean . setComment ( comment ) ; transactionRepository . save ( transactionBean ) ; accountUpdateAmountService . updateAmount ( sourceAccountBean . getAccountId () , amount ) ; } 
@ java.lang.Override public boolean canCommandSenderUseCommand ( net.minecraft.command.ICommandSender sender ) { net.minecraft.entity.player.EntityPlayerMP epm = ( ( net.minecraft.entity.player.EntityPlayerMP ) ( sender ) ) ; com.mojang.authlib.GameProfile gp = epm . getGameProfile () ; if ( ( net.minecraft.server.MinecraftServer . getServer () . getConfigurationManager () . func_152596_g ( gp ) ) == true ) { return true ; } else { return false ; } } 
public void processQueue () { for ( java.util.Iterator < fi.riissanen.gwent.engine.assets.AssetLoader > it = queue . keySet () . iterator () ; it . hasNext () ; ) { fi.riissanen.gwent.engine.assets.AssetLoader loader = it . next () ; fi.riissanen.gwent.engine.assets.AssetParams params = queue . get ( loader ) ; fi.riissanen.gwent.engine.assets.Asset asset = loader . load ( params ) ; if ( asset != null ) { assets . put ( params . getFilename () , asset ) ; } it . remove () ; } } 
@ java.lang.Override protected void doGet ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { java.lang.String data = request . getParameter ( "payload" ) ; java.lang.String useGa = request . getParameter ( "useGa" ) ; com.servlet.DataBean dataBean = new com.servlet.DataBean () ; dataBean . setPayload ( data ) ; com.servlet.DataInsertionService . inserData ( dataBean ) ; javax.servlet.ServletOutputStream out = response . getOutputStream () ; out . write ( "Done" . getBytes () ) ; out . flush () ; } 
@ java.lang.Override public void onBindViewHolder ( android.support.v7.widget.RecyclerView.ViewHolder holder , int position ) { if ( holder instanceof org.fossasia.susi.ai.adapters.viewHolders.ChatViewHolder ) { org.fossasia.susi.ai.adapters.viewHolders.ChatViewHolder chatViewHolder = ( ( org.fossasia.susi.ai.adapters.viewHolders.ChatViewHolder ) ( holder ) ) ; handleItemEvents ( chatViewHolder , position ) ; } if ( holder instanceof org.fossasia.susi.ai.adapters.viewHolders.MapViewHolder ) { org.fossasia.susi.ai.adapters.viewHolders.MapViewHolder mapViewHolder = ( ( org.fossasia.susi.ai.adapters.viewHolders.MapViewHolder ) ( holder ) ) ; handleItemEvents ( mapViewHolder , position ) ; } if ( ( highlightMessagePosition ) == position ) { holder.itemView . setBackgroundColor ( android.graphics.Color . parseColor ( "#3e6182" ) ) ; } else { holder.itemView . setBackgroundColor ( Color.TRANSPARENT ) ; } } 
private static boolean isValidCategory ( java.lang.String category ) { android.util.Log . v ( "Media Helper" , ( "categories: " + category ) ) ; return ( category == null ) || ( ( ( category . indexOf ( com.kabouzeid.gramophone.auto.MediaIDHelper.CATEGORY_SEPARATOR ) ) < 0 ) && ( ( category . indexOf ( com.kabouzeid.gramophone.auto.MediaIDHelper.LEAF_SEPARATOR ) ) < 0 ) ) ; } 
public void onStart ( Application app ) { Logger . info ( "Application has started" ) ; BootstrapDB . init () ; system = play.api.libs.concurrent.Akka . system ( app . getWrappedApplication () ) ; userCleanUpActor = system . actorOf ( UserCleanupActor.props ) ; system . scheduler () . schedule ( scala.concurrent.duration.Duration . create ( 0 , java.util.concurrent.TimeUnit.MILLISECONDS ) , scala.concurrent.duration.Duration . create ( 1 , java.util.concurrent.TimeUnit.DAYS ) , userCleanUpActor , "tick" , system . dispatcher () , null ) ; } 
@ org.junit.Test public void shouldHandleNewLine ( ) throws java.lang.Throwable { org.neo4j.bolt.v1.runtime.Session session = env . newSession ( "<test>" ) ; session . init ( "TestClient/1.0" , java.util.Collections . emptyMap () , null , null ) ; session . run ( java.lang.System . lineSeparator () , org.neo4j.bolt.v1.runtime.integration.SessionIT.EMPTY_PARAMS , null , responses ) ; session . pullAll ( "" , responses ) ; org.hamcrest.MatcherAssert . assertThat ( responses . next () , org.neo4j.bolt.v1.runtime.integration.SessionMatchers . failedWith ( Status.Statement.SyntaxError ) ) ; } 
private android.bluetooth.BluetoothSocket createBluetoothSocket ( android.bluetooth.BluetoothDevice device ) throws java.io.IOException { if ( ( Build.VERSION.SDK_INT ) >= 10 ) { try { final java.lang.reflect.Method m = device . getClass () . getMethod ( "createInsecureRfcommSocketToServiceRecord" , new java.lang.Class [] { java.util.UUID . class } ) ; return ( ( android.bluetooth.BluetoothSocket ) ( m . invoke ( device , dyhs.e_walker_companion.MainActivity.MY_UUID ) ) ) ; } catch ( java.lang.Exception e ) { android.util.Log . e ( dyhs.e_walker_companion.MainActivity.TAG , "Could not create Insecure RFComm Connection" , e ) ; } } return device . createRfcommSocketToServiceRecord ( dyhs.e_walker_companion.MainActivity.MY_UUID ) ; } 
public org.locationtech.geogig.repository.Repository get ( final java.lang.String repositoryId ) throws java.io.IOException { try { org.locationtech.geogig.repository.Repository repo = repoCache . get ( repositoryId ) ; return new org.geogig.geoserver.config.RepositoryCache.UnclosableRepository ( repo ) ; } catch ( java.util.concurrent.ExecutionException e ) { com.google.common.base.Throwables . propagateIfInstanceOf ( e . getCause () , java.io.IOException . class ) ; throw new java.io.IOException ( ( "Error obtaining cached geogig instance for repo " + repositoryId ) , e . getCause () ) ; } } 
public void showDeviceDetail ( android.net.wifi.p2p.WifiP2pDevice device ) { mDevice = device ; this . getView () . setVisibility ( View.VISIBLE ) ; android.widget.TextView view = ( ( android.widget.TextView ) ( mContentView . findViewById ( R.id.device_address ) ) ) ; view . setText ( device.deviceAddress ) ; view = ( ( android.widget.TextView ) ( mContentView . findViewById ( R.id.device_info ) ) ) ; view . setText ( device . toString () ) ; } 
public float distanceTo ( tank_revolution.model.Tank tank , tank_revolution.model.ShootablePackage.Shootable projectile ) { float deltaX = ( getTankX ( tank ) ) - ( getProjectileX ( projectile ) ) ; float deltaY = ( getTankY ( tank ) ) - ( getProjectileY ( projectile ) ) ; return ( ( float ) ( java.lang.Math . sqrt ( ( ( deltaX * deltaX ) + ( deltaY * deltaY ) ) ) ) ) ; } 
@ java.lang.Override public void run () { java.io.File file = android.os.Environment . getExternalStoragePublicDirectory ( mImagePath ) ; com.bumptech.glide.Glide . with ( this ) . load ( file ) . apply ( new com.bumptech.glide.request.RequestOptions () . dontAnimate () . diskCacheStrategy ( DiskCacheStrategy.NONE ) . skipMemoryCache ( true ) . override ( imageSize , imageSize ) ) . into ( mImage ) ; } 
@ org.junit.Test public void canCloseConnection ( ) throws java.lang.Exception { org.ardulink.core.Link link = getRandomLink () ; org.ardulink.core.linkmanager.DummyConnection connection = getConnection ( link ) ; org.junit.Assert . assertThat ( connection . getCloseCalls () , org.hamcrest.core.Is . is ( 0 ) ) ; close ( link ) ; org.junit.Assert . assertThat ( connection . getCloseCalls () , org.hamcrest.core.Is . is ( 1 ) ) ; } 
@ java.lang.Override public boolean onGesture ( com.google.android.glass.touchpad.Gesture gesture ) { if ( gesture == ( com.google.android.glass.touchpad.Gesture.TAP ) ) { openOptionsMenu () ; return true ; } else if ( gesture == ( com.google.android.glass.touchpad.Gesture.TWO_TAP ) ) { return true ; } else if ( gesture == ( com.google.android.glass.touchpad.Gesture.SWIPE_RIGHT ) ) { return true ; } else if ( gesture == ( com.google.android.glass.touchpad.Gesture.SWIPE_LEFT ) ) { return true ; } else if ( gesture == ( com.google.android.glass.touchpad.Gesture.SWIPE_DOWN ) ) { android.widget.Toast . makeText ( this , "Swipe down with two fingers to exit" , Toast.LENGTH_SHORT ) . show () ; } return false ; } 
@ com.facebook.stetho.inspector.protocol.ChromeDevtoolsMethod public void setAttributesAsText ( com.facebook.stetho.inspector.jsonrpc.JsonRpcPeer peer , org.json.JSONObject params ) { final com.facebook.stetho.inspector.protocol.module.DOM.SetAttributesAsTextRequest request = mObjectMapper . convertValue ( params , com.facebook.stetho.inspector.protocol.module.DOM.SetAttributesAsTextRequest . class ) ; final java.lang.Object object = mDocument . getObjectIdMapper () . getObjectForId ( request.nodeId ) ; mDocument . getDOMProvider () . postAndWait ( new java.lang.Runnable () { @ java.lang.Override public void run () { mDocument . getDOMProvider () . setAttributesAsText ( object , request.text ) ; } } ) ; } 
@ java.lang.Override public void start () { java.lang.String action = ( MqttServiceConstants.PING_SENDER ) + ( comms . getClient () . getClientId () ) ; android.util.Log . d ( org.eclipse.paho.android.service.AlarmPingSender.TAG , "Register alarmreceiver to MqttService" ) ; service . registerReceiver ( alarmReceiver , new android.content.IntentFilter ( action ) ) ; pendingIntent = android.app.PendingIntent . getBroadcast ( service , 0 , new android.content.Intent ( action ) , PendingIntent.FLAG_UPDATE_CURRENT ) ; schedule ( comms . getKeepAlive () ) ; hasStarted = true ; } 
@ com.litrum.webproject.controller.RequestMapping ( value = "/adminPannelSubMainCat" , method = RequestMethod.POST ) public java.lang.String createSubMainCategory ( org.springframework.ui.Model uiModel , @ com.litrum.webproject.controller.ModelAttribute ( value = "categories" ) com.litrum.webproject.form.CategoriesForm categoriesForm ) { try { com.litrum.webproject.controller.AdminController.logger . debug ( " adminPannelSubMainCat : POST " ) ; java.lang.System.out . println ( categoriesForm . toString () ) ; userService . createSubMainCategory ( categoriesForm ) ; com.litrum.webproject.controller.AdminController.logger . debug ( "Sub Main Category created successfully." ) ; } catch ( java.lang.Exception e ) { com.litrum.webproject.controller.AdminController.logger . debug ( ( "Exception while createSubMainCategory :: " + ( e . getMessage () ) ) ) ; } return "redirect:adminPannelSubMainCat" ; } 
@ org.junit.Test public void getById ( ) throws java.lang.Exception { com.cinema.controller.rest.SessionControllerTest.LOGGER . debug ( "mock test: getById()" ) ; expect ( sessionServiceMock . getSessionById ( com.cinema.controller.rest.SessionControllerTest.SESSION_1 . getSessionId () ) ) . andReturn ( com.cinema.controller.rest.SessionControllerTest.SESSION_1 ) ; replay ( sessionServiceMock ) ; mockMvc . perform ( get ( com.cinema.controller.rest.SessionControllerTest.SESSION_GET_BY_ID ) . accept ( MediaType.APPLICATION_JSON ) ) . andDo ( org.springframework.test.web.servlet.result.MockMvcResultHandlers . print () ) . andExpect ( org.springframework.test.web.servlet.result.MockMvcResultMatchers . status () . isFound () ) ; } 
private seedu.malitio.logic.parser.Command prepareDelete ( java.lang.String args ) { java.lang.String index = parseIndex ( args ) ; char taskType = index . charAt ( 0 ) ; int taskNum = java.lang.Integer . parseInt ( index . substring ( 1 ) ) ; if ( index . isEmpty () ) { return new seedu.malitio.logic.parser.IncorrectCommand ( java.lang.String . format ( seedu.malitio.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT , DeleteCommand.MESSAGE_USAGE ) ) ; } return new seedu.malitio.logic.parser.DeleteCommand ( java.lang.Character . toString ( taskType ) , taskNum ) ; } 
public static int getStatusBarHeight () { int result = 0 ; int resId = com.softdesign.devintensive.utils.App . get () . getResources () . getIdentifier ( "status_bar_height" , "dimen" , "android" ) ; if ( resId > 0 ) { result = com.softdesign.devintensive.utils.App . get () . getResources () . getDimensionPixelSize ( resId ) ; } return result ; } 
private java.lang.String getReferer () { java.lang.String referer = request . getHeader ( "Referer" ) ; com.google.common.base.Preconditions . checkState ( ( referer != null ) , "The Referer header was not specified" ) ; java.lang.String refererPath = referer ; try { refererPath = new java.net.URL ( referer ) . getPath () ; } catch ( java.net.MalformedURLException e ) { refererPath = referer ; } java.lang.String path = request . getContextPath () ; return refererPath . substring ( ( ( refererPath . indexOf ( path ) ) + ( path . length () ) ) ) ; } 
public static void moveToLayer ( nl.weeaboo.vn.core.impl.DrawablePart part , nl.weeaboo.vn.core.impl.Layer newLayer ) { if ( part == null ) { return; } nl.weeaboo.vn.core.impl.Layer oldLayer = part.parentLayer ; part.parentLayer = newLayer ; if ( oldLayer != null ) { oldLayer . invalidateStreams () ; } if ( newLayer != null ) { newLayer . invalidateStreams () ; } nl.weeaboo.vn.core.impl.DrawablePart.LOG . debug ( "Moved drawable part: {} -> {}" , oldLayer , newLayer ) ; } 
public void addHistory ( int [] [] toAdd ) { bloomFilter . put ( toAdd ) ; elements += 1 ; if ( ( elements ) > ( CAP ) ) { bloomFilter = com.google.common.hash.BloomFilter . create ( graphFunnel , CAP , fpp ) ; elements = 0 ; } } 
private boolean operator () { return ( ( ( ( ( block () ) | ( defVariables () ) ) | ( expressionOperator () ) ) | ( ifOperator () ) ) | ( returnOperator () ) ) | ( emptyOperator () ) ; } 
@ java.lang.Override public boolean apply ( final java.lang.String filename ) { try { final org.eclipse.jgit.treewalk.TreeWalk pathWalk = org.eclipse.jgit.treewalk.TreeWalk . forPath ( _r , filename , _tree . getId () ) ; final org.eclipse.jgit.lib.FileMode fileMode = pathWalk . getFileMode ( 0 ) ; return ( fileMode != ( org.eclipse.jgit.lib.FileMode.GITLINK ) ) && ( fileMode != ( org.eclipse.jgit.lib.FileMode.SYMLINK ) ) ; } catch ( final java.io.IOException e ) { throw new java.lang.RuntimeException ( e ) ; } } 
@ org.warheim.interfacing.jiffy32.Test public void testMetadata ( ) throws java.lang.Exception { java.lang.System.err . println ( jiffy . getChipInfo () . toString () ) ; java.lang.System.err . println ( jiffy . getAddress () . toString () ) ; java.lang.System.err . println ( jiffy . getProduct () ) ; java.lang.System.err . println ( jiffy . getSerialNumber () ) ; jiffy . setSerialNumber ( "serial12345" ) ; java.lang.System.err . println ( jiffy . getSerialNumber () ) ; java.lang.System.err . println ( jiffy . getVendor () ) ; } 
public static com.ustadmobile.core.controller.CatalogController makeControllerByURL ( java.lang.String url , com.ustadmobile.core.impl.UstadMobileSystemImpl impl , int resourceMode , java.lang.String httpUser , java.lang.String httpPassword , int flags , java.lang.Object context ) throws java.io.IOException , org.xmlpull.v1.XmlPullParserException { com.ustadmobile.core.opds.UstadJSOPDSFeed opdsFeed = com.ustadmobile.core.controller.CatalogController . getCatalogByURL ( url , resourceMode , httpUser , httpPassword , flags , context ) ; com.ustadmobile.core.controller.CatalogController result = new com.ustadmobile.core.controller.CatalogController ( new com.ustadmobile.core.model.CatalogModel ( opdsFeed ) , context ) ; result . setResourceMode ( resourceMode ) ; return result ; } 
@ java.lang.Override public void onViewCreated ( android.view.View view , @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onViewCreated ( view , savedInstanceState ) ; deviceUID = com.itp.glevinzon.capstone.MathpixUUID . uuid ( getContext () ) ; webview_container = ( ( android.widget.RelativeLayout ) ( view . findViewById ( R.id.webview_container ) ) ) ; webView = ( ( android.webkit.WebView ) ( view . findViewById ( R.id.webView ) ) ) ; setupButton ( view ) ; setupCropControl ( view ) ; if ( ! ( com.itp.glevinzon.capstone.MarshmallowPermissions . checkPermissionForCamera ( getActivity () ) ) ) { com.itp.glevinzon.capstone.MarshmallowPermissions . requestPermissionForCamera ( getActivity () ) ; } } 
protected java.lang.Thread newLockThread ( com.coreos.jetcd.concurrency.Mutex m , boolean toBeCancelled ) { return new java.lang.Thread ( ( ) - > { try { boolean result = m . lock () ; test . assertEquals ( ( ! result ) , toBeCancelled ) ; } catch ( com.coreos.jetcd.exception.EtcdException e ) { java.lang.System.out . println ( e . getMessage () ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } ) ; } 
public void setCurrentForgroundActivity ( android.app.Activity activity ) { if ( activity != null ) { currentForgroundApptentiveActivity = new java.lang.ref.WeakReference < android.app.Activity > ( activity ) ; } else if ( ( currentForgroundApptentiveActivity ) != null ) { com.apptentive.android.sdk.module.messagecenter.ApptentiveToastNotificationManager manager = com.apptentive.android.sdk.module.messagecenter.ApptentiveToastNotificationManager . getInstance ( currentForgroundApptentiveActivity . get () , false ) ; if ( manager != null ) { manager . cleanUp () ; } currentForgroundApptentiveActivity = null ; } } 
public org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D < org.apache.commons.math3.analysis.differentiation.DerivativeStructure > dragAcceleration ( final org.orekit.time.AbsoluteDate date , final org.orekit.frames.Frame frame , final org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D < org.apache.commons.math3.analysis.differentiation.DerivativeStructure > position , final org.apache.commons.math3.geometry.euclidean.threed.FieldRotation < org.apache.commons.math3.analysis.differentiation.DerivativeStructure > rotation , final org.apache.commons.math3.analysis.differentiation.DerivativeStructure mass , final double density , final org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D < org.apache.commons.math3.analysis.differentiation.DerivativeStructure > relativeVelocity ) { return new org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D < org.apache.commons.math3.analysis.differentiation.DerivativeStructure > ( relativeVelocity . getNorm () . multiply ( ( ( ( density * ( dragCoeff ) ) * ( crossSection ) ) / 2 ) ) . divide ( mass ) , relativeVelocity ) ; } 
private hudson.util.FormValidation validate ( java.lang.String value ) { try { int val = java.lang.Integer . valueOf ( value ) ; if ( val < 0 ) { return hudson.util.FormValidation . error ( "Value should be greater than 0" ) ; } if ( val > 100 ) { return hudson.util.FormValidation . ok ( ( "NOTE: value greater than 100 only make sense when Threshold Mode " + "is set to 'Number of Tests'" ) ) ; } return hudson.util.FormValidation . ok () ; } catch ( java.lang.NumberFormatException ex ) { return hudson.util.FormValidation . error ( "value should be an integer" ) ; } } 
public static java.lang.String getEvents ( int date ) { java.lang.String temp = "" ; java.lang.String [] x = calIO.CalFile . CalReadV2 ( date ) ; for ( int i = 0 ; i < ( x.length ) ; i ++ ) { temp += ( x [ i ] ) + "\n" ; } return temp ; } 
private java.lang.String resolveHome ( by.training.nc.dev5.entity.Person user ) { if ( UserRole.CUSTOMER . equals ( user . getUserRole () ) ) { return "path.page.customer.main" ; } else if ( UserRole.MANAGER . equals ( user . getUserRole () ) ) { return "path.page.manager.main" ; } else if ( UserRole.DEVELOPER . equals ( user . getUserRole () ) ) { return "path.page.developer.main" ; } else { return "path.page.index" ; } } 
public RequesterT next () { for ( int i = lastServicedRequesterIndex , count = 0 ; count < ( requesters . size () ) ; i ++ , count ++ ) { if ( ! ( this . resourceAvailable ( resource ) ) ) { return null ; } RequesterT requester = requesters . get ( i ) ; if ( this . requesterHasRequests ( requester ) ) { lastServicedRequesterIndex = i ; return requester ; } } return null ; } 
public java.lang.String join ( java.lang.String sep , java.lang.String [] the ) { java.lang.String a = "" ; for ( int j = 0 ; j < ( the.length ) ; j ++ ) { a = ( a + sep ) + ( the [ j ] ) ; } return a . substring ( 2 ) ; } 
@ org.junit.Test public void testRetrieveAllYears () { java.util.List < java.lang.Integer > years = new java.util.ArrayList < java.lang.Integer > () ; years . add ( 2004 ) ; years . add ( 2005 ) ; years . add ( 2003 ) ; org.mockito.Mockito . when ( weightRecordingDao . retrieveAllYears () ) . thenReturn ( years ) ; java.util.List < com.verndale.pmp.bean.LabelValueBean > result = weightRecordingService . retrieveAllYears () ; org.junit.Assert . assertEquals ( "2003" , result . get ( 0 ) . getValue () ) ; } 
@ java.lang.Override public void unbindDisappearEvent ( com.taobao.weex.ui.component.WXComponent component ) { java.util.concurrent.ConcurrentHashMap < java.lang.String , com.taobao.weex.ui.component.WXScroller.AppearData > appearMap = mAppearMap . get ( getInnerView () ) ; if ( appearMap == null ) { return; } com.taobao.weex.ui.component.WXScroller.AppearData appearData = appearMap . get ( component . getRef () ) ; if ( appearData == null ) { return; } appearData.hasDisappear = false ; if ( ! ( appearData.hasAppear ) ) { appearMap . remove ( component . getRef () ) ; } } 
@ java.lang.Override public boolean canExtractItem ( int slot , net.minecraft.item.ItemStack stack , int side ) { if ( ! ( formed ) ) return false ; if ( ( master () ) != null ) return master () . canExtractItem ( slot , stack , side ) ; return ( slot == 10 ) && ( slot == 11 ) ; } 
@ java.lang.Override public boolean hasNext () { if ( ( ( currentIterator ) == null ) || ( ! ( currentIterator . hasNext () ) ) ) { if ( itFactory . hasNext () ) { currentIterator = new org.hawk.orientdb.indexes.IndexCursorFactoryNodeIterable ( itFactory . next () , graph , klass ) . iterator () ; } else { return false ; } } return currentIterator . hasNext () ; } 
public static < T > T parse ( java.io.InputStream in , T toUpdate ) { try { net.minidev.json.parser.JSONParser p = new net.minidev.json.parser.JSONParser ( net.minidev.json.parser.JSONParser.DEFAULT_PERMISSIVE_MODE ) ; return p . parse ( in , new net.minidev.json.writer.UpdaterMapper < T > ( net.minidev.json.JSONValue.defaultReader , toUpdate ) ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; return null ; } } 
public static void onRequestPermissionsResult ( int requestCode , java.lang.String [] permissions , int [] grantResults ) { if ( ( ( com.airsaid.mpermissionutils.MPermissionUtils.mRequestCode ) != ( - 1 ) ) && ( requestCode == ( com.airsaid.mpermissionutils.MPermissionUtils.mRequestCode ) ) ) { if ( com.airsaid.mpermissionutils.MPermissionUtils . verifyPermissions ( grantResults ) ) { if ( ( com.airsaid.mpermissionutils.MPermissionUtils.mOnPermissionListener ) != null ) com.airsaid.mpermissionutils.MPermissionUtils.mOnPermissionListener . onPermissionGranted () ; } else { if ( ( com.airsaid.mpermissionutils.MPermissionUtils.mOnPermissionListener ) != null ) com.airsaid.mpermissionutils.MPermissionUtils.mOnPermissionListener . onPermissionDenied () ; } } } 
public static long getApplicationLifeSpan ( net.whydah.sso.application.types.Application app ) { if ( ( app . getSecurity () ) != null ) { long maxUserSessionFromApplication = java.lang.Long . valueOf ( app . getSecurity () . getMaxSessionTimeoutSeconds () ) ; if ( maxUserSessionFromApplication > 10 ) { if ( maxUserSessionFromApplication < ( ( net.whydah.token.user.AuthenticatedUserTokenRepository.DEFAULT_SESSION_EXTENSION_TIME_IN_SECONDS ) * 1000 ) ) { net.whydah.token.application.SessionHelper.log . debug ( "Returning ApplicationToken MaxSessionTimeoutSeconds:{} for Application:{}" , maxUserSessionFromApplication , app . getName () ) ; return maxUserSessionFromApplication ; } } } net.whydah.token.application.SessionHelper.log . debug ( "Returning ApplicationToken defaultlifespan:{} for Application:{}" , net.whydah.token.application.SessionHelper.defaultlifespan , app . getName () ) ; return net.whydah.token.application.SessionHelper.defaultlifespan ; } 
@ org.junit.Test public void returnBook () { lib . addBook ( "Programming rocks" , "Miller" ) ; lib . takeBook ( "Programming rocks" ) ; lib . returnBook ( "Programming rocks" ) ; assertEquals ( lib . takeBook ( "Programming rocks" ) , lib . getCollection () . get ( 0 ) ) ; } 
@ org.junit.Test public void handleReturnValueString ( ) throws java.lang.Exception { java.util.List < org.springframework.http.converter.HttpMessageConverter < ? > > converters = new java.util.ArrayList <> () ; converters . add ( new org.springframework.http.converter.ByteArrayHttpMessageConverter () ) ; converters . add ( new org.springframework.http.converter.StringHttpMessageConverter () ) ; org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor processor = new org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor ( converters ) ; processor . handleReturnValue ( "Foo" , returnTypeString , container , request ) ; org.junit.Assert . assertEquals ( "text/plain;charset=ISO-8859-1" , servletResponse . getHeader ( "Content-Type" ) ) ; org.junit.Assert . assertEquals ( "Foo" , servletResponse . getContentAsString () ) ; } 
@ java.lang.Override public Transaction.Result doTransaction ( com.firebase.client.MutableData mutableData ) { if ( ( mutableData . getValue ( java.lang.Integer . class ) ) == null ) { mutableData . setValue ( 100 ) ; } else { int health = mutableData . getValue ( java.lang.Integer . class ) ; health -= value ; if ( health > 0 ) { mutableData . setValue ( ( ( mutableData . getValue ( java.lang.Integer . class ) ) - value ) ) ; } else { mutableData . setValue ( 0 ) ; } } return com.firebase.client.Transaction . success ( mutableData ) ; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) @ java.lang.Override public java.util.List < com.cooksys.fastbook.models.PostWithLikeData > getPostsForUser ( java.lang.Integer userId , java.lang.Integer loggedInId ) { org.hibernate.Session session = sessionFactory . getCurrentSession () ; java.lang.String hql = "select p from User u inner join u.posts p where u.id = :userId" ; hql = "select new com.cooksys.fastbook.models.PostWithLikeData(p, count(p.id), " + ( ( ( ( ( ( ( "CASE l.user.id WHEN :loggedInId THEN true " + "ELSE false END) " ) + "from User u " ) + "inner join u.posts p " ) + "left join p.likes l " ) + "where u.id = :userId " ) + "group by p.id " ) + "order by p.timestamp desc" ) ; return session . createQuery ( hql ) . setParameter ( "userId" , userId ) . setParameter ( "loggedInId" , loggedInId ) . list () ; } 
@ org.junit.Test public void testTransactionBetweenUsers () { bank . depositAccount ( bank . getClientByName ( "Carlos" ) , 5000 ) ; bank . transfer ( 3000 , bank . getClientByName ( "Carlos" ) , bank . getClientByName ( "Melo" ) ) ; assertEquals ( 3000 , bank . getClientByName ( "Melo" ) . getAccount () ) ; } 
private java.util.Date formatMealTime ( java.lang.String timeString ) { java.util.Date date = new java.util.Date () ; java.text.SimpleDateFormat format = new java.text.SimpleDateFormat ( "HH:mm:ss" ) ; try { date = format . parse ( timeString ) ; java.lang.System.out . println ( date ) ; } catch ( java.text.ParseException e ) { LoggingManager.Timber . e ( e , "___________DateFormatError___________" ) ; } return date ; } 
public void borrowerHasBorrowedBooks ( java.lang.String borrower , java.lang.String isbns ) throws de.codecentric.worblehat.acceptancetests.step.business.BookAlreadyBorrowedException { java.util.List < java.lang.String > isbnList = getListOfItems ( isbns ) ; for ( java.lang.String isbn : isbnList ) { de.codecentric.worblehat.acceptancetests.step.business.Book book = de.codecentric.worblehat.acceptancetests.step.business.DemoBookFactory . createDemoBook () . withISBN ( isbn ) . build () ; book = bookService . createBook ( book . getTitle () , book . getAuthor () , book . getEdition () , isbn , book . getYearOfPublication () ) ; bookService . borrowBook ( book , borrower ) ; } } 
@ org.springframework.web.bind.annotation.PostMapping ( value = "/delete/{id}" ) public java.lang.String deleteProcess ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer id ) { if ( ! ( this . albumRepository . exists ( id ) ) ) { return "redirect:/admin/albums/" ; } softuniGallery.entity.Album album = this . albumRepository . findOne ( id ) ; int userId = album . getAuthor () . getId () ; this . albumRepository . delete ( album ) ; return "redirect:/admin/users/userAlbums/" + userId ; } 
private void recalculateStats () { java.lang.System.out . println ( "Was run" ) ; equipped_stats_pack_ . reset () ; if ( ( primary_hand_ ) != null ) { java.lang.System.out . println ( primary_hand_ . getStatsPack () ) ; equipped_stats_pack_ . addOn ( primary_hand_ . getStatsPack () ) ; } if ( ( secondary_hand_ ) != null ) { equipped_stats_pack_ . addOn ( secondary_hand_ . getStatsPack () ) ; } } 
public static org.jfree.chart.JFreeChart createBoxPlot ( final com.health.Table table ) { com.health.Column column = null ; for ( com.health.Column c : table . getColumns () ) { if ( ( c . getType () ) == ( com.health.ValueType.Number ) ) { column = c ; break; } } return com.health.visuals.BoxPlot . createBoxPlot ( table , column . getName () ) ; } 
private math.geom2d.circulinear.PolyCirculinearCurve2D < math.geom2d.circulinear.CirculinearElement2D > cleanup_contour ( java.util.LinkedList < org.roiderh.gcodeviewer.contourelement > contour ) { math.geom2d.circulinear.PolyCirculinearCurve2D < math.geom2d.circulinear.CirculinearElement2D > elements = new math.geom2d.circulinear.PolyCirculinearCurve2D () ; for ( org.roiderh.gcodeviewer.contourelement current_ce : contour ) { if ( ( current_ce.curve ) == null ) { continue; } if ( ( current_ce.curve . length () ) == 0 ) {} elements . add ( current_ce.curve ) ; if ( ( current_ce.transition_curve ) != null ) { elements . add ( current_ce.transition_curve ) ; } } return elements ; } 
@ java.lang.Override public int getChildrenCount ( int groupPosition ) { if ( ( this . _listDataChild . get ( this . _listDataHeader . get ( groupPosition ) ) ) == null ) {} return this . _listDataChild . get ( this . _listDataHeader . get ( groupPosition ) ) . size () ; } 
protected void onStop ( android.os.Bundle savedInstanceState ) throws java.io.IOException { try { dos . writeBytes ( ( "\n" + ( "mount -o remount,ro /system" + "\n" ) ) ) ; dos . writeBytes ( ( "\n" + ( "exit" + "\n" ) ) ) ; dos . flush () ; dos . close () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } 
public java.util.ArrayList < java.lang.String > getOrigins () { java.util.ArrayList < java.lang.String > origns = new java.util.ArrayList < java.lang.String > () ; for ( Logic.Journey j : journeys ) { if ( origns . contains ( j . getOrigin () ) ) { origns . add ( j . getOrigin () ) ; } } return origns ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/getIvDataWithSn" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.Object getIvDataWithSn ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.lang.Exception { java.lang.String sn = request . getParameter ( "sn" ) ; com.mes.pojo.Module mo = moSer . getBySn ( sn ) ; if ( null == mo ) return new com.mes.pojo.ExtReturn ( false , "无此条码" ) ; java.lang.String line = mo . getLine () ; com.mes.DB.DynamicDataSourceHolder . setDataSource ( ( "ds_iv" + line ) ) ; com.mes.pojo.IvData ivData = ivSer . getIvData ( sn , line ) ; com.mes.DB.DynamicDataSourceHolder . setDataSource ( "ds_mysql" ) ; return new com.mes.pojo.ExtReturn ( true , "操作成功" , ivData ) ; } 
public void sendToUDP ( int connectionID , java.lang.Object object ) { final java.util.List < T > connections = this . connections ; for ( int i = 0 , n = connections . size () ; i < n ; i ++ ) { T connection = connections . get ( i ) ; if ( ( connection.id ) == connectionID ) { connection . sendUDP ( object ) ; break; } } } 
private boolean hasBeenUpdated ( ) throws java.io.IOException { long modified = file . lastModified () ; if ( modified == 0L ) { throw new java.io.IOException ( "File deleted" ) ; } long fileSizeNow = file . length () ; return ( ( timeStamp ) != modified ) || ( ( fileSize ) != fileSizeNow ) ; } 
@ java.lang.Override public void onFocusChange ( android.view.View view , boolean hasFocus ) { if ( ! hasFocus ) { java.lang.String val = ( autoPincode . getText () ) + "" ; if ( java.util.Arrays . asList ( strPinArr ) . contains ( val ) ) { java.lang.System.out . println ( "CITY CITY CITY" ) ; } else { autoPincode . setError ( "Invalid Pincode" ) ; } } } 
public void doDestroyCamera () { if ( null != ( mCamera ) ) { try { mSwitchView = null ; mCamera . setPreviewDisplay ( null ) ; mCamera . stopPreview () ; mHolder = null ; isPreviewing = false ; mCamera . release () ; mCamera = null ; android.util.Log . i ( com.cjt2325.cameralibrary.CameraInterface.TAG , "=== Destroy Camera ===" ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } } 
@ java.lang.Override public boolean canRecieve ( com.loovjo.spg.chem.Material m , com.loovjo.spg.gui.machines.Machine mach , int port ) { return ( super . canRecieve ( m , mach , port ) ) && ( m == null ? true : new com.loovjo.loo2D.utils.Vector ( mach.x , mach.y ) . equals ( getStart () ) ) ; } 
@ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton buttonView , boolean isChecked ) { validateUserInputs () ; if ( isChecked ) { ptlExpandLayout . setVisibility ( View.VISIBLE ) ; pollutionReportRequest . setLand_polluted ( "Yes" ) ; addLandPollutionData () ; } else { pollutionReportRequest . setLand_polluted ( "No" ) ; ptlExpandLayout . setVisibility ( View.GONE ) ; } } 
public void replaceMenuFragment () { android.app.FragmentManager fm = getFragmentManager () ; android.app.Fragment newFragment = fm . findFragmentById ( R.id.fragmentContainer ) ; newFragment = new testproject.halfmoonstudios.com.ponder.MenuFragment () ; android.app.FragmentTransaction transaction = fm . beginTransaction () ; transaction . setCustomAnimations ( R.animator.fade_in , R.animator.fade_out ) ; transaction . replace ( R.id.fragmentContainer , newFragment ) ; transaction . commit () ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; android.os.CountDownTimer timer = new android.os.CountDownTimer ( ( ( com.accountabilibuddies.accountabilibuddies.activity.SplashActivity.DELAY ) * 1000 ) , 1000 ) { @ java.lang.Override public void onTick ( long millisUntilFinished ) {} @ java.lang.Override public void onFinish () { finish () ; openMainView () ; } } . start () ; } 
@ java.lang.Override public void taskExecuted ( org.apache.pivot.util.concurrent.Task < java.util.HashMap < java.lang.String , java.lang.String > > t ) { if ( isDome ) { org.agmip.ui.quadui.QuadUIWindow.LOG . info ( "Dump to ACE Binary for DOMEs applied for {} successfully" , fileName ) ; } else { org.agmip.ui.quadui.QuadUIWindow.LOG . info ( "Dump to ACE Binary for {} successfully" , fileName ) ; } if ( isDome ) { reviseData ( result ) ; toOutput ( result , t . getResult () ) ; } else if ( acebOnly ) { toOutput ( result , t . getResult () ) ; } } 
private void setupExecutorJob ( org.apache.asterix.active.EntityId entityId , org.apache.hyracks.api.job.JobSpecification channeljobSpec , org.apache.hyracks.api.client.IHyracksClientConnection hcc , org.apache.asterix.bad.metadata.PrecompiledJobEventListener listener , boolean predistributed ) throws java.lang.Exception { if ( channeljobSpec != null ) { org.apache.hyracks.api.job.JobId jobId = null ; if ( predistributed ) { jobId = hcc . distributeJob ( channeljobSpec ) ; } java.util.concurrent.ScheduledExecutorService ses = org.apache.asterix.bad.ChannelJobService . startJob ( channeljobSpec , java.util.EnumSet . noneOf ( org.apache.hyracks.api.job.JobFlag . class ) , jobId , hcc , org.apache.asterix.bad.ChannelJobService . findPeriod ( duration ) , new java.util.HashMap <> () ) ; listener . storeDistributedInfo ( jobId , ses , null ) ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { switch ( v . getId () ) { case R.id.BTN___MAIN___STARTCAPTURE : break; } switch ( v . getId () ) { case R.id.BTN___MAIN___TAKESHOT : android.util.Log . i ( com.example.lore_f.cameracontrol.MainActivity.TAG , "TAKE SHOT requested." ) ; mCamera . takePicture ( null , null , takeShotCallBack ) ; startCameraPreview () ; break; } } 
public void testArrayAsVararg ( ) throws java.lang.IllegalAccessException , java.lang.reflect.InvocationTargetException { loadText ( "private fun asList(vararg elems: String) = elems; fun test(ts: Array<String>) = asList(*ts); " ) ; java.lang.reflect.Method main = generateFunction ( "test" ) ; java.lang.String [] args = new java.lang.String [] { "mama" , "papa" } ; java.lang.String [] result = ( ( java.lang.String [] ) ( main . invoke ( null , new java.lang.Object [] { args } ) ) ) ; assertTrue ( ( args != result ) ) ; assertTrue ( java.util.Arrays . equals ( args , result ) ) ; } 
private boolean isKingInCheck () { for ( net.torocraft.chess.engine.chess.ChessPieceState chessPieceState : internalState ) { if ( ! ( chessPieceState.side . equals ( internalChessPieceToMove.side ) ) ) { net.torocraft.chess.engine.chess.ChessMoveResult moveResult = getChessPieceWorker ( chessPieceState ) . getLegalMoves () ; for ( net.torocraft.chess.engine.GamePieceState.Position position : moveResult.legalPositions ) { if ( ( position.rank . equals ( currentKingState.position.rank ) ) && ( position.file . equals ( currentKingState.position.file ) ) ) { return true ; } } } } return false ; } 
private static void commandLoad () { com.kerbybit.chattriggers.globalvars.global.canSave = true ; try { com.kerbybit.chattriggers.globalvars.global.trigger = com.kerbybit.chattriggers.file.FileHandler . loadTriggers ( "./mods/ChatTriggers/triggers.txt" , false , null ) ; com.kerbybit.chattriggers.globalvars.global.USR_string = com.kerbybit.chattriggers.file.FileHandler . loadStrings ( "./mods/ChatTriggers/strings.txt" ) ; com.kerbybit.chattriggers.globalvars.global.settings = com.kerbybit.chattriggers.file.FileHandler . loadSettings ( "./mods/ChatTriggers/settings.txt" ) ; com.kerbybit.chattriggers.file.FileHandler . loadImports ( "./mods/ChatTriggers/Imports/" ) ; com.kerbybit.chattriggers.commands.CommandReference . silentResetAll () ; com.kerbybit.chattriggers.chat.ChatHandler . warn ( ( ( global.settings . get ( 0 ) ) + "Files loaded" ) ) ; } catch ( java.io.IOException e ) { com.kerbybit.chattriggers.chat.ChatHandler . warn ( com.kerbybit.chattriggers.chat.ChatHandler . color ( "red" , "Error loading triggers!" ) ) ; } } 
public void showAvailableSquares ( int y , int x ) { setCheckeredColor () ; Pieces.Piece clickedPiece = myBoard . getPiece ( y , x ) ; if ( clickedPiece != null ) { getSquare ( y , x ) . setBackground ( java.awt.Color.CYAN ) ; java.util.List < java.awt.Point > moves = clickedPiece . getAvailableMoves ( myBoard . getMyBoardArray () ) ; for ( java.awt.Point point : moves ) { getSquare ( point.y , point.x ) . setBackground ( java.awt.Color.GREEN ) ; } } } 
public boolean addResult ( com.munch.exchange.model.core.optimization.ResultEntity result ) { results . addFirst ( result ) ; java.util.Collections . sort ( results ) ; if ( ( results . size () ) > ( maxResult ) ) results . removeLast () ; return result == ( results . getFirst () ) ; } 
private void initializeSpinner () { this . interventionTypes = getResources () . getStringArray ( R.array.intervention_types ) ; android.widget.ArrayAdapter < java.lang.String > spinnerArrayAdapter = new android.widget.ArrayAdapter ( this , android.R.layout.simple_spinner_item , this . interventionTypes ) ; spinnerArrayAdapter . setDropDownViewResource ( android.R.layout.simple_spinner_dropdown_item ) ; binding.spinnerIvtype . setAdapter ( spinnerArrayAdapter ) ; binding.spinnerIvtype . setOnItemSelectedListener ( this ) ; if ( ( this . iv . getIvtype () ) == null ) return; int pos = spinnerArrayAdapter . getPosition ( this . iv . getIvtype () ) ; binding.spinnerIvtype . setSelection ( pos ) ; } 
private void initLeftButton () { android.widget.FrameLayout fl = ( ( android.widget.FrameLayout ) ( this . findViewById ( R.id.flLeftButton ) ) ) ; com.joshsera.ViewGroup.LayoutParams lp = fl . getLayoutParams () ; if ( ! ( Settings.hideMouseButtons ) ) lp.height = 0 ; fl . setLayoutParams ( lp ) ; fl . setOnTouchListener ( new android.view.View.OnTouchListener () { public boolean onTouch ( android.view.View v , android.view.MotionEvent ev ) { return onLeftTouch ( ev ) ; } } ) ; this . flLeftButton = fl ; } 
public synchronized void savePoints () { try { java.io.PrintWriter printWriter = new java.io.PrintWriter ( new java.io.FileWriter ( pointsFile ) ) ; for ( java.util.Map.Entry < java.lang.String , java.lang.Integer > userAndPoints : points . entrySet () ) printWriter . println ( ( ( ( userAndPoints . getKey () ) + " " ) + ( userAndPoints . getValue () ) ) ) ; printWriter . close () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; channelBot . log ( "Error saving points" , LogLevel.WARN ) ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { android.util.Log . d ( "Track" , "Call is stopped" ) ; if ( ( sessionID ) == null ) { ( ( com.quickblox.sample.videochatwebrtcnew.activities.NewDialogActivity ) ( getActivity () ) ) . getCurrentSession () . hangUp ( userInfo ) ; } else { ( ( com.quickblox.sample.videochatwebrtcnew.activities.NewDialogActivity ) ( getActivity () ) ) . getSession ( sessionID ) . hangUp ( userInfo ) ; } ( ( com.quickblox.sample.videochatwebrtcnew.activities.NewDialogActivity ) ( getActivity () ) ) . removeConversationFragment () ; } 
public void inputNumberAppend ( java.lang.String i ) { if ( ( ( calcType ) == ( AppContext.TYPE_BIN ) ) && ( ( java.lang.Integer . parseInt ( i ) ) > 1 ) ) { android.widget.Toast . makeText ( this , R.string.msg_binary_input_error , Toast.LENGTH_SHORT ) . show () ; return; } if ( ( ( calcType ) == ( AppContext.TYPE_OCT ) ) && ( ( java.lang.Integer . parseInt ( i ) ) > 8 ) ) { android.widget.Toast . makeText ( this , R.string.msg_octonary_input_error , Toast.LENGTH_SHORT ) . show () ; return; } } 
public static final void start ( sk.game.GameProperties properties ) { sk.game.Game.properties = properties ; sk.game.Window . create () ; sk.game.Game . initGL () ; sk.game.Window . show () ; sk.gamestate.GameStateManager . enterState ( properties.startState ) ; sk.game.Game.running = true ; while ( ( ! ( sk.game.Window . shouldClose () ) ) && ( sk.game.Game.running ) ) sk.game.Game . loop () ; sk.game.Game . destroy () ; } 
private void processResponse ( javax.ws.rs.container.ContainerResponseContext responseContext ) throws java.io.IOException { java.util.UUID key = getRequestId () ; org.mockenize.model.LogBean logBean = loggingService . getByKey ( key ) ; responseContext . getHeaders () . put ( org.mockenize.provider.filter.ResponseLoggingFilter.KEY , com.google.common.collect.Lists . < java.lang.Object > newArrayList ( key ) ) ; logBean . setResponse ( mapResponseLogBean ( responseContext ) ) ; loggingService . save ( logBean ) ; org.jboss.logging.MDC . remove ( org.mockenize.provider.filter.ResponseLoggingFilter.KEY ) ; } 
@ org.junit.Test public void testAddTemp () { double [] temperatureSeries = new double [] { 2 } ; ua.edu.ucu.tempseries.TemperatureSeriesAnalysis seriesAnalysis = new ua.edu.ucu.tempseries.TemperatureSeriesAnalysis ( temperatureSeries ) ; int expResult = 3 ; int actualResult = seriesAnalysis . addTemps ( new double [] { 1.0 , 3.1 } ) ; assertEquals ( expResult , actualResult , 1.0E-5 ) ; } 
@ java.lang.Override public net.minecraftforge.fluids.FluidStack drain ( net.minecraftforge.common.util.ForgeDirection from , net.minecraftforge.fluids.FluidStack resource , boolean doDrain ) { if ( ! ( formed ) ) return null ; if ( ( master () ) != null ) return master () . drain ( from , resource , doDrain ) ; if ( resource != null ) { net.minecraftforge.fluids.FluidStack fs = drain ( from , resource.amount , doDrain ) ; markDirty () ; worldObj . markBlockForUpdate ( xCoord , yCoord , zCoord ) ; return fs ; } return null ; } 
public void update () { boolean rPress = Robot.stick . getRawButton ( XboxMap.RB ) ; boolean lPress = Robot.stick . getRawButton ( XboxMap.LB ) ; edu.wpi.first.wpilibj.smartdashboard.SmartDashboard . putBoolean ( "Gear" , gearShifter . get () ) ; if ( rPress == true ) { shift ( true ) ; } else if ( lPress == true ) { shift ( false ) ; } } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { java.lang.String targetNode = javax.swing.JOptionPane . showInputDialog ( null , "Nó:" , "Torrhen Stark" ) ; if ( ! ( targetNode . isEmpty () ) ) { Node node = newGraph . findNodebyName ( targetNode ) ; java.lang.String dfs = node . buscaProfundidade () ; javax.swing.JOptionPane . showMessageDialog ( null , dfs ) ; newGraph . resetGraph () ; } else { javax.swing.JOptionPane . showMessageDialog ( null , "É necessário inserir o nome de um nó" ) ; } } 
@ java.lang.Override @ msi.gama.precompiler.GamlAnnotations.getter ( value = "points" ) public msi.gama.metamodel.shape.IList < ? extends msi.gama.metamodel.shape.ILocation > getPoints () { final msi.gama.metamodel.shape.IList < msi.gama.metamodel.shape.GamaPoint > result = msi.gama.metamodel.shape.GamaListFactory . create ( Types.POINT ) ; final msi.gama.metamodel.shape.Coordinate [] points = getInnerGeometry () . getCoordinates () ; for ( final msi.gama.metamodel.shape.Coordinate c : points ) { result . add ( new msi.gama.metamodel.shape.GamaPoint ( c ) ) ; } return result ; } 
@ org.junit.Test public void shouldNotThrowException ( ) throws java.lang.Exception { java.net.ServerSocket server = new java.net.ServerSocket ( 10080 ) ; com.izettle.metrics.influxdb.InfluxDbTcpSender influxDbTcpSender = new com.izettle.metrics.influxdb.InfluxDbTcpSender ( "0.0.0.0" , 10080 , 1000 , "test" , java.util.concurrent.TimeUnit.MINUTES , "" ) ; org.assertj.core.api.Assertions . assertThat ( ( ( influxDbTcpSender . writeData ( new byte [ 0 ] ) ) == 0 ) ) ; server . close () ; } 
public static java.sql.ResultSet queryLessLastRecord ( java.sql.Statement statement , java.lang.String table , java.lang.String orderBy , java.lang.String startValue , int limit ) throws java.sql.SQLException { java.lang.String sql = java.lang.String . format ( util.DBUtil.QUERY_LESS_LAST_RECORD , table , orderBy , startValue , orderBy , limit ) ; java.sql.ResultSet resultSet = statement . executeQuery ( sql ) ; resultSet . next () ; return resultSet ; } 
public ua.lesson.lessons.Pet searchByPetName ( java.lang.String petName ) { ua.lesson.lessons.Pet result = new ua.lesson.lessons.Pet ( "Null" , "Null" ) ; for ( ua.lesson.lessons.Pet p : petsList ) if ( ( p . getName () ) == petName ) { result = p ; break; } return result ; } 
private void generateViewCreator ( org.cruxframework.crux.core.rebind.screen.widget.SourcePrinter sourceWriter , org.cruxframework.crux.core.rebind.screen.View view ) { org.cruxframework.crux.core.rebind.screen.widget.ViewFactoryCreator factoryCreator = getViewFactoryCreator ( view ) ; try { sourceWriter . println ( ( ( "callback.onViewCreated(new " + ( factoryCreator . create () ) ) + "(id));" ) ) ; } finally { factoryCreator . prepare ( null , true , null ) ; } } 
public boolean isClickInExpandedBoundaries ( float x , float y ) { boolean isInBoundsX = ( x > ( this . x ) ) && ( x < ( ( this . x ) + ( this . width ) ) ) ; boolean isInBoundsY = ( y > ( this . y ) ) && ( y < ( ( this . y ) + ( this . expandedHeight ) ) ) ; return isInBoundsX && isInBoundsY ; } 
public static com.google.android.material.motion.Operation < java.lang.Float [] , java.lang.Float [] > normalizedBy ( final float normal ) { return new com.google.android.material.motion.MapOperation < java.lang.Float [] , java.lang.Float [] > () { @ java.lang.Override public java.lang.Float [] transform ( java.lang.Float [] value ) { float x = value [ 0 ] ; float y = value [ 1 ] ; return new java.lang.Float [] { x / normal , y / normal } ; } } ; } 
@ java.lang.Override public void run () { this . running = true ; while ( this . running ) { try { java.lang.Thread . sleep ( this . sessionCacheInterval ) ; this . logger . debug ( com.qut.middleware.spep.sessions.Messages . getString ( "SessionCacheImpl.10" ) ) ; cleanup () ; } catch ( java.lang.Exception e ) { this . logger . error ( java.text.MessageFormat . format ( com.qut.middleware.spep.sessions.Messages . getString ( "SessionCacheImpl.11" ) , e . getMessage () ) ) ; } } } 
public void doFilter ( ServletRequest req , ServletResponse resp , FilterChain chain ) throws ServletException , java.io.IOException { javax.servlet.http.HttpServletRequest request = ( ( javax.servlet.http.HttpServletRequest ) ( req ) ) ; javax.servlet.http.HttpServletResponse response = ( ( javax.servlet.http.HttpServletResponse ) ( resp ) ) ; javax.servlet.http.HttpSession session = request . getSession ( false ) ; if ( session == null ) { response . sendRedirect ( "./login.jsp" ) ; } else if ( ( session . getAttribute ( "userName" ) ) == null ) { response . sendRedirect ( "./login.jsp" ) ; } chain . doFilter ( req , resp ) ; } 
public java.util.Set < de.fau.cs.mad.kwikshop.server.sorting.Edge > getEdges () { if ( ( edges ) == null ) { java.util.List < de.fau.cs.mad.kwikshop.server.sorting.Edge > edgeList = daoHelper . getEdgesBySupermarket ( supermarket ) ; if ( edgeList != null ) edges = new java.util.HashSet < de.fau.cs.mad.kwikshop.server.sorting.Edge > ( edgeList ) ; else edges = new java.util.HashSet < de.fau.cs.mad.kwikshop.server.sorting.Edge > () ; } return edges ; } 
@ java.lang.Override public java.lang.Object apply ( java.lang.String moduleId ) { try { java.io.File module = net.orzo.scripting.JsEngineAdapter . findModule ( this . envParams . modulesPaths , moduleId ) ; if ( module != null ) { return loadModule ( net.orzo.scripting.SourceCode . fromFile ( module ) ) ; } else { throw new net.orzo.scripting.ModuleException ( java.lang.String . format ( "Module <%s> not found." , moduleId ) ) ; } } catch ( java.io.IOException | javax.script.ScriptException e ) { throw new net.orzo.scripting.ModuleException ( java.lang.String . format ( "Failed to load module <%s> with error %s" , moduleId , e . getMessage () ) , e ) ; } } 
private void deleteMovieFromFavorites () { android.net.Uri movieUri = android.content.ContentUris . withAppendedId ( MovieEntry.CONTENT_URI , java.lang.Long . parseLong ( movieId ) ) ; int numberOfRowsDeleted = getContentResolver () . delete ( movieUri , null , null ) ; if ( ( com.example.wassim.popularmovies.MovieDetailsActivity.favoriteMoviesArrayList . remove ( movieId ) ) && ( numberOfRowsDeleted > 0 ) ) { mBinding.addImageButton . setImageResource ( R.drawable.ic_add ) ; android.widget.Toast . makeText ( this , "Deleted from favorites" , Toast.LENGTH_LONG ) . show () ; this . deleteFile ( ( ( movieId ) + ".png" ) ) ; com.example.wassim.popularmovies.MovieDetailsActivity.mMovie . setFavoriteMovie ( false ) ; } } 
public static void main ( java.lang.String [] args ) throws java.sql.SQLException { try { java.lang.Class . forName ( "com.mysql.jdbc.Driver" ) ; test.createDB.connection = java.sql.DriverManager . getConnection ( test.createDB.url , "root" , "" ) ; test.createDB.statement = test.createDB.connection . createStatement () ; java.lang.String createDB = "create database test1" ; test.createDB.statement . executeUpdate ( createDB ) ; } catch ( java.lang.ClassNotFoundException e ) { e . printStackTrace () ; } } 
private void seeder ( java.lang.String table , java.lang.String [] values , java.lang.Boolean isAutoInternational ) { java.lang.String sql = ( ( "INSERT INTO " + table ) + " " ) + ( preValuesSql ( values , isAutoInternational ) ) ; show ( sql ) ; try { exeUpdate ( sql ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; java.lang.System . exit ( 1 ) ; } } 
@ org.openjdk.jmh.annotations.Setup ( value = org.openjdk.jmh.annotations.Level.Trial ) public void setup ( ) throws io.netty.handler.codec.http2.Http2Exception { connection = new io.netty.handler.codec.http2.DefaultHttp2Connection ( false ) ; for ( int i = 0 ; i < ( numStreams ) ; ++ i ) { connection . local () . createStream ( io.netty.microbench.http2.Http2PriorityTreeBenchmark . toStreamId ( i ) ) ; } } 
public static som.interpreter.actors.SPromise createPromise ( final som.interpreter.actors.Actor owner , final boolean triggerPromiseResolverBreakpoint , final boolean triggerPromiseResolutionBreakpoint , final boolean explicitPromise ) { if ( som.vm.VmSettings.DEBUG_MODE ) { return new som.interpreter.actors.SPromise.SDebugPromise ( owner ) ; } else if ( som.vm.VmSettings.PROMISE_CREATION ) { return new som.interpreter.actors.SPromise.STracingPromise ( owner ) ; } else { return new som.interpreter.actors.SPromise ( owner , triggerPromiseResolverBreakpoint , triggerPromiseResolutionBreakpoint , explicitPromise ) ; } } 
public static org.opendaylight.yang.gen.v1.urn.opendaylight.action.types.rev131112.action.list.Action createActionPktIn ( final int pktLength , final int order ) { org.opendaylight.yang.gen.v1.urn.opendaylight.action.types.rev131112.action.action.output.action._case.OutputActionBuilder output = new org.opendaylight.yang.gen.v1.urn.opendaylight.action.types.rev131112.action.action.output.action._case.OutputActionBuilder () ; output . setMaxLength ( new java.lang.Integer ( 65535 ) ) ; org.opendaylight.yang.gen.v1.urn.ietf.params.xml.ns.yang.ietf.inet.types.rev130715.Uri controllerPort = new org.opendaylight.yang.gen.v1.urn.ietf.params.xml.ns.yang.ietf.inet.types.rev130715.Uri ( OutputPortValues.CONTROLLER . toString () ) ; output . setOutputNodeConnector ( controllerPort ) ; org.opendaylight.yang.gen.v1.urn.opendaylight.action.types.rev131112.action.list.ActionBuilder ab = org.opendaylight.sfc.util.openflow.SfcOpenflowUtils . createActionBuilder ( order ) ; ab . setAction ( new org.opendaylight.yang.gen.v1.urn.opendaylight.action.types.rev131112.action.action.OutputActionCaseBuilder () . setOutputAction ( output . build () ) . build () ) ; return ab . build () ; } 
@ java.lang.Override public org.eclipse.smarthome.core.library.types.DecimalType getSwapAvailablePercent () { long usedSwap = memory . getSwapUsed () ; long totalSwap = memory . getSwapTotal () ; long freeSwap = totalSwap - usedSwap ; double freePercentDecimal = ( ( double ) ( freeSwap ) ) / ( ( double ) ( totalSwap ) ) ; double freePercent = getPercentsValue ( freePercentDecimal ) ; return new org.eclipse.smarthome.core.library.types.DecimalType ( freePercent ) ; } 
@ java.lang.Override public java.lang.Long [] handle ( java.util.Set < com.ctrip.zeus.service.model.IdVersion > result ) throws java.lang.Exception { if ( vsId != null ) { boolean flag = false ; for ( com.ctrip.zeus.service.model.IdVersion e : result ) { if ( e . getId () . equals ( vsId ) ) { flag = true ; break; } } if ( ! flag ) return new java.lang.Long [ 0 ] ; } return com.ctrip.zeus.service.model.VersionUtils . extractUniqIds ( result ) ; } 
protected void handleInvalidUsernameOrPassword ( int messageId ) { mErroneousLogInCount += 1 ; if ( ( mErroneousLogInCount ) >= ( org.wordpress.android.ui.accounts.SignInFragment.WPCOM_ERRONEOUS_LOGIN_THRESHOLD ) ) { mPasswordEditText . setError ( null ) ; mUsernameEditText . setError ( null ) ; showInvalidUsernameOrPasswordDialog () ; } else { showUsernameError ( messageId ) ; showPasswordError ( messageId ) ; } endProgress () ; } 
public void resolvePositionAndShow ( java.lang.String signature , int left , int top ) { signature = truncateSignature ( signature ) ; if ( signature != null ) setText ( signature ) ; resolveWidth ( signature ) ; resolvePositionRelativeTo ( left , top ) ; setVisible ( true ) ; show () ; } 
@ java.lang.Override public java.lang.String formatLabel ( double value , boolean isValueX ) { if ( isValueX ) { long totalSeconds = new java.lang.Double ( value ) . longValue () ; java.util.Calendar cal = java.util.Calendar . getInstance () ; cal . setTime ( new java.util.Date ( totalSeconds ) ) ; int day = cal . get ( java.util.Calendar.DAY_OF_MONTH ) ; int month = cal . get ( java.util.Calendar.MONTH ) ; return java.lang.String . format ( ( ( day + "." ) + month ) ) ; } else { return super . formatLabel ( value , isValueX ) ; } } 
@ java.lang.Override public boolean equals ( java.lang.Object o ) { if ( ( this ) == o ) return true ; if ( ( o == null ) || ( ( getClass () ) != ( o . getClass () ) ) ) return false ; com.sedc.core.model.StageYahooFxrate that = ( ( com.sedc.core.model.StageYahooFxrate ) ( o ) ) ; return ( name . equals ( that.name ) ) && ( date . equals ( that.date ) ) ; } 
public void replace ( java.util.List < model.entity.Entity > entities ) { model.entity.Computer replacement = new model.entity.Computer ( getEnvironment () , getLocation () , server , getReportSelf () ) ; die () ; replacement . setAge ( 0 ) ; report ( java.lang.String . format ( "Computer %d is now my replacement." , ( ( model.Counter.computer ) - 1 ) ) ) ; entities . add ( replacement ) ; } 
@ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public void reloadTheme ( net.minecraftforge.fml.common.gameevent.TickEvent.ClientTickEvent event ) { if ( ( ( tickCount ) % 40 ) == 0 ) { try { java.lang.String tempFileNameStorage = AdvancedXP.instance.theme.fileName ; AdvancedXP.instance.theme = co.bugg.advancedxp.util.FileUtil . deserializeTheme ( new java.io.File ( ( ( AdvancedXP.instance.themesPath ) + tempFileNameStorage ) ) ) ; AdvancedXP.instance.theme.fileName = tempFileNameStorage ; } catch ( java.io.IOException e ) { java.lang.System.out . println ( "Failed to reload theme." ) ; e . printStackTrace () ; } } } 
public static void greaterThan ( java.lang.String message , double lhs , double rhs , double margin ) { com.johnuckele.vtest.Tester . checkScope () ; java.lang.System.out . println ( ( ( ( ( ( ( ( "\t\t" + message ) + ": " ) + lhs ) + " > " ) + rhs ) + " ± " ) + margin ) ) ; double difference = lhs - rhs ; com.johnuckele.vtest.Tester . test ( ( lhs > ( rhs - ( java.lang.Math . abs ( difference ) ) ) ) ) ; } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { int numberOfApplicationsArchived = theModel . archiveApplications ( new java.sql.Timestamp ( ( ( java.util.Date ) ( model1 . getValue () ) ) . getTime () ) ) ; javax.swing.JOptionPane . showMessageDialog ( containingFrame , ( numberOfApplicationsArchived + " old applications successfully archived" ) ) ; } 
@ java.lang.Override public void addListenerForSingleValueEvent ( final de.tomgrill.gdxfirebase.core.database.ValueEventListener listener ) { de.tomgrill.gdxfirebase.core.database.ValueEventListener fbListener = new de.tomgrill.gdxfirebase.core.database.ValueEventListener () { @ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { listener . onDataChange ( new de.tomgrill.gdxfirebase.android.database.AndroidDataSnapshot ( dataSnapshot ) ) ; } @ java.lang.Override public void onCancelled ( com.google.firebase.database.DatabaseError databaseError ) { listener . onCancelled ( new de.tomgrill.gdxfirebase.android.database.AndroidDatabaseError ( databaseError ) ) ; } } ; query . addValueEventListener ( fbListener ) ; fbValueEventListenerList . add ( fbListener ) ; valueEventListenerList . add ( listener ) ; } 
private joshie.harvest.api.calendar.Weather getRandomWeather ( int day , joshie.harvest.api.calendar.Season season ) { if ( day > ( joshie.harvest.api.calendar.CalendarDate.DAYS_PER_SEASON ) ) { season = getNextSeason ( season ) ; } joshie.harvest.api.calendar.Weather weather = CalendarAPI.INSTANCE . getDataForSeason ( season ) . getWeather ( joshie.harvest.calendar.data.CalendarServer.rand ) ; return isWeatherEnabled ( weather ) ? weather : joshie.harvest.api.calendar.Weather.SUNNY ; } 
public java.util.concurrent.Future < com.uniform_imperials.herald.http.AbstractHttpResponse > post ( java.lang.String uri , java.util.HashMap < java.lang.String , java.lang.String > args ) { java.net.URL requestUrl ; java.lang.String requestBody ; if ( args != null ) { requestBody = this . encodeParamString ( args ) ; } else { requestBody = null ; } return this . post ( uri , requestBody , "application/x-www-form-urlencoded" ) ; } 
public static org.sosy_lab.cpachecker.cpa.smg.refiner.SMGPrecision createRefineablePrecision ( org.sosy_lab.cpachecker.cpa.smg.refiner.SMGPrecision pPrecision ) { com.google.common.collect.SetMultimap < org.sosy_lab.cpachecker.cfa.model.CFANode , org.sosy_lab.cpachecker.cpa.smg.refiner.SMGMemoryPath > emptyMemoryPaths = com.google.common.collect.ImmutableSetMultimap . of () ; com.google.common.collect.SetMultimap < org.sosy_lab.cpachecker.cfa.model.CFANode , org.sosy_lab.cpachecker.cpa.smg.SMGAbstractionBlock > emptyAbstractionBlocks = com.google.common.collect.ImmutableSetMultimap . of () ; com.google.common.collect.SetMultimap < org.sosy_lab.cpachecker.cfa.model.CFANode , org.sosy_lab.cpachecker.util.states.MemoryLocation > emptyStackVariable = com.google.common.collect.ImmutableSetMultimap . of () ; return new org.sosy_lab.cpachecker.cpa.smg.refiner.SMGPrecision.SMGRefineablePrecision ( pPrecision.logger , new org.sosy_lab.cpachecker.cpa.smg.refiner.SMGPrecision.SMGPrecisionAbstractionOptions ( pPrecision . allowsHeapAbstraction () , true , true ) , emptyMemoryPaths , emptyAbstractionBlocks , emptyStackVariable ) ; } 
private byte [] prependSyn ( byte [] action ) { byte [] result = new byte [ ( magma.tools.SAProxy.impl.AgentProxy.SYNC_BYTES.length ) + ( action.length ) ] ; java.lang.System . arraycopy ( magma.tools.SAProxy.impl.AgentProxy.SYNC_BYTES , 0 , result , 0 , magma.tools.SAProxy.impl.AgentProxy.SYNC_BYTES.length ) ; java.lang.System . arraycopy ( action , 0 , result , magma.tools.SAProxy.impl.AgentProxy.SYNC_BYTES.length , action.length ) ; return result ; } 
@ org.junit.Before public void setUp () { model = new teamthree.twodo.model.ModelManager ( new teamthree.twodo.testutil.TypicalTask () . getTypicalTaskBook () , new teamthree.twodo.model.UserPrefs () ) ; history = new teamthree.twodo.logic.CommandHistory () ; undoHistory = new teamthree.twodo.logic.UndoCommandHistory () ; undoCommand = new teamthree.twodo.logic.commands.UndoCommand () ; undoCommand . setData ( model , history , undoHistory ) ; this . taskList = teamthree.twodo.testutil.TestUtil . generateSampleTaskData () ; } 
public static java.util.List < com.onpositive.text.analisys.Euristic > match ( java.lang.Class < ? extends com.onpositive.text.analysis.AbstractParser > clazz ) { if ( com.onpositive.text.analisys.Euristic.registered . containsKey ( clazz ) ) com.onpositive.text.analisys.Euristic.registered . put ( clazz , new java.util.ArrayList < com.onpositive.text.analisys.Euristic > () ) ; return com.onpositive.text.analisys.Euristic.registered . get ( clazz ) ; } 
public void loadNextMonth () { if ( ( ( startDate . getTime () ) >= ( calendarStartDay . getTime () ) ) && ( ( calendarEndDay . getTime () ) > ( endDate . getTime () ) ) ) { mCalendar . add ( java.util.Calendar.MONTH , 1 ) ; this . setMonth ( mCalendar . get ( java.util.Calendar.MONTH ) , mCalendar . get ( java.util.Calendar.YEAR ) ) ; } } 
@ java.lang.Override public void loop () { try { java.lang.System.out . println ( track ) ; sendFile ( ( ( track ) == null ? silence : track ) ) ; if ( ( track ) != null ) { track = null ; tFetch . stopAndWait () ; new java.lang.Thread ( tFetch ) . start () ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
public void clear () { size = 0 ; for ( int i = 0 ; i < ( uk.ac.imperial.lsds.streamsql.op.stateful.IntMap.INTMAP_CONTENT_SIZE ) ; i ++ ) { if ( ( content [ i ] ) != null ) { uk.ac.imperial.lsds.streamsql.op.stateful.IntMapEntry e = content [ i ] ; while ( ( e.next ) != null ) { uk.ac.imperial.lsds.streamsql.op.stateful.IntMapEntry f = e.next ; e . release () ; e = f ; } } } } 
public static boolean isInternetAvailable ( android.content.Context context ) { android.net.NetworkInfo info = ( ( android.net.NetworkInfo ) ( ( ( android.net.ConnectivityManager ) ( context . getSystemService ( Context.CONNECTIVITY_SERVICE ) ) ) . getActiveNetworkInfo () ) ) ; if ( info == null ) { android.util.Log . d ( com.example.rossmaguire.beacontest.LoginActivity.TAG , "no internet connection" ) ; return false ; } else { if ( info . isConnected () ) { android.util.Log . d ( com.example.rossmaguire.beacontest.LoginActivity.TAG , " internet connection available..." ) ; return true ; } else { android.util.Log . d ( com.example.rossmaguire.beacontest.LoginActivity.TAG , " internet connection" ) ; return true ; } } } 
@ org.junit.Test public void removeBatchShouldReturn ( ) throws java.lang.Exception { com.constructor.client.ConstructorIO constructor = new com.constructor.client.ConstructorIO ( "YSOxV00F0Kk2R0KnPQN8" , "ZqXaOfXuBWD4s3XzCI1q" , true , null ) ; org.junit.Assert . assertTrue ( "batch removal succeeds" , constructor . removeBatch ( "Search Suggestions" , this . getRandString () , this . getRandString () , this . getRandString () ) ) ; } 
private void setupExpenditurePreferences ( com.android.ssm.ssm.models.SsmUser currentUser ) { android.widget.CheckBox c ; if ( currentUser != null ) for ( int i = 0 ; i < ( expenditures.length ) ; i ++ ) { c = expenditures [ i ] ; com.android.ssm.ssm.models.ExpenditureSource source = com.android.ssm.ssm.models.ExpenditureSource . findById ( com.android.ssm.ssm.models.ExpenditureSource . class , ( i + 1 ) ) ; if ( source != null ) { c . setChecked ( true ) ; } else { c . setChecked ( false ) ; } } } 
@ java.lang.Override protected void testString () { org.molgenis.data.Query < org.molgenis.data.Entity > query = new org.molgenis.data.support.QueryImpl () . search ( org.molgenis.integrationtest.data.abstracts.query.QUOTE , "is bit computer" ) ; java.util.Set < org.molgenis.data.Entity > resultSet = org.elasticsearch.common.collect.Sets . newHashSet ( person1 , person2 , person3 ) ; org.testng.Assert . assertTrue ( resultSet . contains ( personsRepository . findOne ( query ) ) ) ; org.testng.Assert . assertEquals ( personsRepository . findAll ( query ) . collect ( java.util.stream.Collectors . toSet () ) , resultSet ) ; org.testng.Assert . assertEquals ( personsRepository . count ( query ) , resultSet . size () ) ; } 
public void setForegroundGravity ( int foregroundGravity ) { if ( ( mForegroundGravity ) != foregroundGravity ) { if ( ( foregroundGravity & ( android.view.Gravity.RELATIVE_HORIZONTAL_GRAVITY_MASK ) ) == 0 ) { foregroundGravity |= android.view.Gravity.START ; } if ( ( foregroundGravity & ( android.view.Gravity.VERTICAL_GRAVITY_MASK ) ) == 0 ) { foregroundGravity |= android.view.Gravity.TOP ; } mForegroundGravity = foregroundGravity ; mForegroundBoundsChanged = true ; requestLayout () ; } } 
public void minimizeCovers ( espresso.boolFunction.Cover [] covers , java.util.Set < java.lang.Integer > coverChoices ) { for ( int i = 0 ; i < ( covers.length ) ; i ++ ) { if ( coverChoices . contains ( i ) ) { covers [ i ] = minimizer . minimize ( covers [ i ] ) ; } } } 
@ java.lang.Override public void onClick ( android.view.View v ) { android.content.Intent i = new android.content.Intent ( context , com.example.sid.marwadishaadi.User_Profile.UserProfileActivity . class ) ; i . putExtra ( "cust" , reverseModelList . get ( position ) . getCustomerNo () ) ; i . putExtra ( "from" , "reverseMatching" ) ; i . putExtra ( "customerNo" , rev . getCustomerID () ) ; context . startActivity ( i ) ; } 
@ java.lang.Override public io.realm.internal.ColumnInfo validateTable ( java.lang.Class < ? extends io.realm.RealmModel > clazz , io.realm.internal.SharedRealm sharedRealm , boolean allowExtraColumns ) { checkClass ( clazz ) ; if ( clazz . equals ( com.example.nikolay.alarm.model.AlarmRealm . class ) ) { return io.realm.io.realm.AlarmRealmRealmProxy . validateTable ( sharedRealm , allowExtraColumns ) ; } if ( clazz . equals ( com.example.nikolay.alarm.model.Day . class ) ) { return io.realm.io.realm.DayRealmProxy . validateTable ( sharedRealm , allowExtraColumns ) ; } throw getMissingProxyClassException ( clazz ) ; } 
public void readControlValues () { DELIN_POW = edu.wpi.first.wpilibj.smartdashboard.SmartDashboard . getInt ( org.usfirst.frc2619.PlyBot2017.subsystems.DriveTrain.DELIN_POW_KEY ) ; DEADBAND_X = edu.wpi.first.wpilibj.smartdashboard.SmartDashboard . getNumber ( org.usfirst.frc2619.PlyBot2017.subsystems.DriveTrain.DEADBAND_X_KEY ) ; DEADBAND_Y = edu.wpi.first.wpilibj.smartdashboard.SmartDashboard . getNumber ( org.usfirst.frc2619.PlyBot2017.subsystems.DriveTrain.DEADBAND_Y_KEY ) ; DEADBAND_TWIST = edu.wpi.first.wpilibj.smartdashboard.SmartDashboard . getNumber ( org.usfirst.frc2619.PlyBot2017.subsystems.DriveTrain.DEADBAND_TWIST_KEY ) ; TURN_OUTER_SPEED = edu.wpi.first.wpilibj.smartdashboard.SmartDashboard . getNumber ( org.usfirst.frc2619.PlyBot2017.subsystems.DriveTrain.TURN_OUTER_SPEED_KEY ) ; TURN_INNER_SPEED = edu.wpi.first.wpilibj.smartdashboard.SmartDashboard . getNumber ( org.usfirst.frc2619.PlyBot2017.subsystems.DriveTrain.TURN_INNER_SPEED_KEY ) ; CURRENT_LIMIT = edu.wpi.first.wpilibj.smartdashboard.SmartDashboard . getNumber ( org.usfirst.frc2619.PlyBot2017.subsystems.DriveTrain.CURRENT_LIMIT_KEY ) ; } 
public boolean isChanged () { return ( ( ( ( ! ( citate . isEmpty () ) ) || ( ( translationRating ) > 0 ) ) || ( ( rating ) > 0 ) ) || ( ( ( carteCitita ) != null ) && ( ( carteCitita . getDataStart () ) != null ) ) ) || ( org.apache.commons.lang3.StringUtils . isNotEmpty ( review ) ) ; } 
public static void load ( mcp.mobius.waila.api.IWailaRegistrar registrar ) { java.lang.System.out . println ( "WailaCompatibility.load" ) ; if ( ! ( com.sixteencolorgames.supertechtweaks.compat.waila.WailaCompatibility.registered ) ) { throw new java.lang.RuntimeException ( "Please register this handler using the provided method." ) ; } if ( ! ( com.sixteencolorgames.supertechtweaks.compat.waila.WailaCompatibility.loaded ) ) { registrar . registerHeadProvider ( com.sixteencolorgames.supertechtweaks.compat.waila.WailaCompatibility.INSTANCE , com.sixteencolorgames.supertechtweaks.blocks.BlockOre . class ) ; registrar . registerBodyProvider ( com.sixteencolorgames.supertechtweaks.compat.waila.WailaCompatibility.INSTANCE , com.sixteencolorgames.supertechtweaks.blocks.BlockOre . class ) ; registrar . registerTailProvider ( com.sixteencolorgames.supertechtweaks.compat.waila.WailaCompatibility.INSTANCE , com.sixteencolorgames.supertechtweaks.blocks.BlockOre . class ) ; com.sixteencolorgames.supertechtweaks.compat.waila.WailaCompatibility.loaded = true ; } } 
public void rotateImage ( com.isseiaoki.simplecropview.CropImageView.RotateDegrees degrees ) { int angle = degrees . getValue () ; android.graphics.Matrix matrix = new android.graphics.Matrix () ; matrix . postRotate ( angle ) ; android.graphics.Bitmap source = getBitmap () ; android.graphics.Bitmap rotated = android.graphics.Bitmap . createBitmap ( source , 0 , 0 , source . getWidth () , source . getHeight () , matrix , true ) ; setImageBitmap ( rotated ) ; } 
@ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public void onEntityJoinWorld ( net.minecraftforge.event.entity.EntityJoinWorldEvent event ) { if ( ( event.entity ) instanceof net.minecraft.entity.EntityLivingBase ) { com.himself12794.powersapi.storage.PropertiesManager . instance () . runOnJoinWorld ( ( ( net.minecraft.entity.EntityLivingBase ) ( event.entity ) ) , event.world ) ; if ( ( event.entity ) instanceof net.minecraft.entity.player.EntityPlayerMP ) { java.lang.System.out . println ( "Synchronizing" ) ; com.himself12794.powersapi.storage.PropertiesManager . instance () . syncPlayerToClient ( ( ( net.minecraft.entity.player.EntityPlayerMP ) ( event.entity ) ) ) ; } } } 
public static java.util.List < cofh.thermalexpansion.plugins.jei.fuels.magmatic.MagmaticFuelWrapper > getRecipes ( mezz.jei.api.IModRegistry registry , mezz.jei.api.IGuiHelper guiHelper ) { java.util.List < cofh.thermalexpansion.plugins.jei.fuels.magmatic.MagmaticFuelWrapper > recipes = new java.util.ArrayList <> () ; for ( java.lang.String fluidName : cofh.thermalexpansion.util.managers.dynamo.CompressionManager . getFuels () ) { net.minecraftforge.fluids.FluidStack fuelStack = new net.minecraftforge.fluids.FluidStack ( net.minecraftforge.fluids.FluidRegistry . getFluid ( fluidName ) , net.minecraftforge.fluids.Fluid.BUCKET_VOLUME ) ; recipes . add ( new cofh.thermalexpansion.plugins.jei.fuels.magmatic.MagmaticFuelWrapper ( guiHelper , fuelStack , cofh.thermalexpansion.util.managers.dynamo.MagmaticManager . getFuelEnergy ( fuelStack ) ) ) ; } return recipes ; } 
private int get_button_mask () { int mask = 0 ; for ( int button = 0 ; button < ( _num_buttons ) ; button ++ ) mask &= ( getRawButton ( ( button + 1 ) ) ? 1 : 0 ) < < ( button - 1 ) ; return mask ; } 
@ java.lang.Override public org.apache.ignite.IgniteFileSystem fileSystem ( java.lang.String name ) { if ( name == null ) throw new java.lang.NullPointerException ( "IGFS name cannot be null" ) ; guard () ; try { checkClusterState () ; org.apache.ignite.IgniteFileSystem fs = ctx . igfs () . igfs ( name ) ; if ( fs == null ) throw new java.lang.IllegalArgumentException ( ( "IGFS is not configured: " + name ) ) ; return fs ; } finally { unguard () ; } } 
public void testLeafletUMDWrapper () { testModules ( "test.js" , com.google.javascript.jscomp.LINE_JOINER . join ( "(function (global, factory) {" , "  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :" , "  typeof define === 'function' && define.amd ? define(['exports'], factory) :" , "  (factory((global.L = {})));" , "}(this, (function (exports) {" , "  'use strict';" , "  var webkit = userAgentContains('webkit');" , "  function userAgentContains(str) {" , "    return navigator.userAgent.toLowerCase().indexOf(str) >= 0;" , "  }" , "  exports.webkit = webkit" , "})));" ) , com.google.javascript.jscomp.LINE_JOINER . join ( "goog.provide('module$test');" , "/** @const */ var module$test={};" , "{" , "  var exports$jscomp$inline_3$$module$test=module$test;" , "  var userAgentContains$jscomp$inline_5$$module$test=function(str$jscomp$inline_6){" , "    return navigator.userAgent.toLowerCase().indexOf(str$jscomp$inline_6)>=0;" , "  };" , "  var webkit$jscomp$inline_4$$module$test=userAgentContains$jscomp$inline_5$$module$test('webkit');" , "  exports$jscomp$inline_3$$module$test.webkit=webkit$jscomp$inline_4$$module$test;" , "}" ) ) ; } 
private void parseRequiredHeaderClaimUris ( org.apache.axiom.om.OMElement requiredClaimUrisElem ) { if ( requiredClaimUrisElem == null ) { return; } java.util.Iterator claimUris = requiredClaimUrisElem . getChildrenWithLocalName ( org.wso2.carbon.apimgt.keymgt.handlers.ExtendedPasswordGrantHandler.CLAIM_URI ) ; if ( claimUris != null ) { for ( ; claimUris . hasNext () ; ) { org.apache.axiom.om.OMElement claimUri = ( ( org.apache.axiom.om.OMElement ) ( claimUris . next () ) ) ; if ( claimUri != null ) { requiredHeaderClaimUris . add ( claimUri . getText () ) ; } } } } 
public synchronized void addEmailStore ( edu.stanford.muse.email.EmailStore stores ) { int initialSize = emailStores . size () ; emailStores . add ( stores ) ; edu.stanford.muse.email.MuseEmailFetcher.log . info ( ( ( ( "Email fetcher went from " + initialSize ) + " stores to " ) + ( emailStores . size () ) ) ) ; } 
public boolean submitPropsedSubject ( java.lang.String title , java.lang.String teacher , java.lang.String description , java.lang.String proposer ) { entities.ProposalSubject prosub = new entities.ProposalSubject ( title , description , teacher , proposer ) ; try { em . getTransaction () . begin () ; em . persist ( prosub ) ; em . getTransaction () . commit () ; em . close () ; return true ; } catch ( java.lang.Exception e ) { java.lang.System.out . println ( e ) ; return false ; } } 
@ org.testng.annotations.Test public void testDayAlign () { java.lang.String sqlQuery = java.lang.String . format ( "SELECT DATE_FORMAT(time,'%s'), COUNT(*) FROM '%s' %nGROUP BY PERIOD(1 DAY)" , com.axibase.tsd.api.method.sql.function.period.align.SqlPeriodDayAlignTest.DAY_FORMAT_PATTERN , com.axibase.tsd.api.method.sql.function.period.align.SqlPeriodDayAlignTest.TEST_METRIC_NAME ) ; javax.ws.rs.core.Response response = executeQuery ( sqlQuery ) ; com.axibase.tsd.api.model.sql.StringTable resultTable = response . readEntity ( com.axibase.tsd.api.model.sql.StringTable . class ) ; java.util.List < java.util.List < java.lang.String > > expectedRows = generateExpectedRows ( java.util.Arrays . asList ( "2016-06-19T00:00:00.000Z" , "2016-06-20T00:00:00.000Z" , "2016-06-21T00:00:00.000Z" , "2016-06-22T00:00:00.000Z" ) ) ; assertTableRows ( expectedRows , resultTable ) ; } 
@ java.lang.Override public int getItemViewType ( int position ) { if ( isHeader ( position ) ) { return com.czm.xcrecyclerview.XCRecyclerView.TYPE_HEADER ; } if ( isFooter ( position ) ) { return com.czm.xcrecyclerview.XCRecyclerView.TYPE_FOOTER ; } int rePosition = position - ( getHeaderCount () ) ; int itemCount = this . mAdapter . getItemCount () ; if ( rePosition < itemCount ) { return this . mAdapter . getItemViewType ( position ) ; } return com.czm.xcrecyclerview.XCRecyclerView.TYPE_LIST_ITEM ; } 
@ java.lang.Override public void onRefreshFinished ( com.mcochin.stockstreaks.pojos.events.AppRefreshFinishedEvent event ) { hideProgressWheel () ; if ( event . isSuccessful () ) { mAdapter . notifyDataSetChanged () ; dynamicLoadMore () ; if ( ( mDetailContainer ) != null ) { insertFragmentIntoDetailContainer ( getListManipulator () . getItem ( 0 ) . getSymbol () ) ; } } else { if ( ( getListManipulator () . getCount () ) == 0 ) { showEmptyWidgets () ; } } de.greenrobot.event.EventBus . getDefault () . removeStickyEvent ( com.mcochin.stockstreaks.pojos.events.AppRefreshFinishedEvent . class ) ; } 
@ org.junit.Test public void batchOpenAdminLevels () { java.util.Map < org.activityinfo.model.resource.ResourceId , org.activityinfo.model.form.FormClass > formClasses = catalog . getFormClasses ( java.util.Arrays . asList ( adminLevelFormClass ( 1 ) , adminLevelFormClass ( 2 ) ) ) ; org.activityinfo.model.form.FormClass provinceClass = formClasses . get ( adminLevelFormClass ( 1 ) ) ; org.activityinfo.model.form.FormClass territoryClass = formClasses . get ( adminLevelFormClass ( 2 ) ) ; assertThat ( provinceClass . getLabel () , org.hamcrest.Matchers . equalTo ( "Province" ) ) ; assertThat ( territoryClass . getLabel () , org.hamcrest.Matchers . equalTo ( "Territoire" ) ) ; } 
@ java.lang.Override public void run ( ) throws java.lang.IllegalStateException { if ( ( ( ( this . startNode ) == ( - 1 ) ) || ( ( this . endNode ) == ( - 1 ) ) ) || ( ( this . graph ) == null ) ) { throw new java.lang.IllegalStateException ( "Es wurden noch keine Daten gesetzt" ) ; } else { if ( startNodeChanged ) { init () ; distanz_update () ; createShortestPath () ; startNodeChanged = false ; } else { createShortestPath () ; } } } 
protected org.json.JSONObject setAddresses ( org.json.JSONObject patient , org.json.JSONObject content ) { if ( patient . has ( "address" ) ) { org.json.JSONArray addresses = patient . getJSONArray ( "address" ) ; if ( ( addresses . length () ) > 0 ) { org.json.JSONObject address = addresses . getJSONObject ( 0 ) ; content = createAddress ( content , address ) ; } } return content ; } 
@ org.junit.Test public void shouldThrowDataExceptionIfProductIsInvalid ( ) throws java.lang.Exception { setupStockData () ; expectedException . expect ( org.openlmis.core.exception.DataException . class ) ; expectedException . expectMessage ( "error.product.unknown" ) ; org.mockito.Mockito . when ( facilityRepository . getById ( facilityId ) ) . thenReturn ( defaultFacility ) ; org.mockito.Mockito . when ( productService . getByCode ( productCode ) ) . thenReturn ( null ) ; restStockCardService . adjustStock ( facilityId , stockEventList , userId ) ; } 
@ org.junit.Test public void initiallyUnmatchedSourceMustBeUsed () { io.beanmapper.testmodel.initiallyunmatchedsource.SourceWithUnmatchedField swuf = new io.beanmapper.testmodel.initiallyunmatchedsource.SourceWithUnmatchedField () ; swuf . setName ( "Henk" ) ; swuf . setCountry ( "NL" ) ; io.beanmapper.testmodel.initiallyunmatchedsource.TargetWithoutUnmatchedField twuf = beanMapper . map ( swuf , new io.beanmapper.testmodel.initiallyunmatchedsource.TargetWithoutUnmatchedField () ) ; org.junit.Assert . assertEquals ( "Henk" , twuf . getName () ) ; org.junit.Assert . assertEquals ( "NL" , twuf . getNation () ) ; } 
public rs.lukaj.stories.parser.types.Line compile ( ) throws java.io.IOException , rs.lukaj.stories.exceptions.InterpretationException { java.util.List < java.lang.String > lines = rs.lukaj.stories.Utils . readAllLines ( source ) ; java.util.Iterator < java.lang.String > it = lines . iterator () ; while ( it . hasNext () ) if ( it . next () . trim () . isEmpty () ) it . remove () ; if ( lines . isEmpty () ) throw new rs.lukaj.stories.exceptions.InterpretationException ( "File is empty!" ) ; rs.lukaj.stories.parser.Parser parser = new rs.lukaj.stories.parser.Parser () ; return parser . parse ( lines , this ) ; } 
public void start () { parent . disableButtons () ; parent . setProgBar_loading ( 0 ) ; i = 0 ; java.awt.event.ActionListener listener = new java.awt.event.ActionListener () { public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( ( i ) > 100 ) { timer . stop () ; parent . executeTasks () ; } else parent . setProgBar_loading ( ( ( i ) ++ ) ) ; } } ; timer = new javax.swing.Timer ( 15 , listener ) ; timer . start () ; } 
public boolean checkReadPermission ( java.lang.String user ) { if ( user . equals ( org.opends.server.snmp.SNMPUserAcl.DEFAULT_USER ) ) { return false ; } if ( user . equals ( org.opends.server.snmp.SNMPUserAcl.ADMIN_USER ) ) { return false ; } if ( ( this . usersList . contains ( org.opends.server.snmp.SNMPUserAcl.ALL_USERS_ALLOWED ) ) || ( this . usersList . contains ( user ) ) ) { return true ; } return false ; } 
@ java.lang.Override public void visitLookupSwitchInsn ( final org.objectweb.asm.Label dflt , final int [] keys , final org.objectweb.asm.Label [] labels ) { if ( ( mv ) != null ) { mv . visitLookupSwitchInsn ( dflt , keys , labels ) ; } execute ( Opcodes.LOOKUPSWITCH , 0 , null , null ) ; this . locals = null ; this . stack = null ; } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { int id = item . getItemId () ; switch ( id ) { case R.id.actionSynchronize : mPresenter . synchronizePatient () ; case R.id.actionDelete : mPresenter . deletePatient () ; this . getActivity () . finish () ; default: return super . onOptionsItemSelected ( item ) ; } } 
@ org.junit.Test public void addSubTaskTest () { java.util.ArrayList < net.sf.memoranda.Task > container ; container = new java.util.ArrayList < net.sf.memoranda.Task > () ; task . setSubTasks ( container ) ; net.sf.memoranda.Task child ; child = new net.sf.memoranda.TaskImpl ( task ) ; child . setID ( "child" ) ; task . addSubTask ( child ) ; assertEquals ( task . getSubTask ( "child" ) , child ) ; } 
@ org.junit.Test public void playGame () { for ( int i = 1 ; i <= 3 ; i ++ ) { java.lang.System.out . println ( ( ( "Round " + i ) + ":" ) ) ; playRound () ; } if ( ( player1 . Score () ) > ( player2 . Score () ) ) { java.lang.System.out . println ( "Player 1 wins." ) ; } else if ( ( player1 . Score () ) < ( player2 . Score () ) ) { java.lang.System.out . println ( "Player 2 wins." ) ; } else { java.lang.System.out . println ( "Draw." ) ; } } 
private hudson.plugins.cigame.model.RuleResult < java.lang.Integer > evaluateMaven ( hudson.model.AbstractBuild < ? , ? > previousBuild , hudson.model.AbstractBuild < ? , ? > build ) { java.util.List < hudson.plugins.findbugs.FindBugsMavenResultAction > currentActions = hudson.plugins.cigame.util.ActionRetriever . getResult ( build , Result.UNSTABLE , hudson.plugins.findbugs.FindBugsMavenResultAction . class ) ; if ( currentActions . isEmpty () ) { return null ; } int currentAnnotations = getNumberOfMavenAnnotations ( currentActions ) ; java.util.List < hudson.plugins.findbugs.FindBugsMavenResultAction > previousActions = hudson.plugins.cigame.util.ActionRetriever . getResult ( previousBuild , Result.UNSTABLE , hudson.plugins.findbugs.FindBugsMavenResultAction . class ) ; int previousAnnotations = getNumberOfMavenAnnotations ( previousActions ) ; return evaluate ( previousAnnotations , currentAnnotations ) ; } 
@ java.lang.Override public void onItemClick ( int position ) { if ( ( ( breadcrumbScrollView ) != null ) && ( ( breadcrumbToolbarListener ) != null ) ) { for ( int i = toolbarItemStack . size () ; i > position ; i -- ) { toolbarItemStack . pop () ; breadcrumbToolbarListener . onBreadcrumbToolbarItemPop ( toolbarItemStack . size () ) ; } breadcrumbScrollView . removeBreadcrumbItemFrom ( position ) ; } } 
private boolean isMyServiceRunning ( java.lang.Class < ? > serviceClass ) { android.app.ActivityManager manager = ( ( android.app.ActivityManager ) ( getSystemService ( Context.ACTIVITY_SERVICE ) ) ) ; for ( android.app.ActivityManager.RunningServiceInfo service : manager . getRunningServices ( java.lang.Integer.MAX_VALUE ) ) { if ( serviceClass . getName () . equals ( service.service . getClassName () ) ) { return true ; } } return false ; } 
@ java.lang.Override public boolean evaluate ( java.lang.String value ) throws java.lang.Exception { if ( ( lowerBound . isEmpty () ) && ( upperBound . isEmpty () ) ) { return true ; } return ( ( lowerBound . compareTo ( value ) ) <= 0 ) && ( ( upperBound . compareTo ( value ) ) >= 0 ) ; } 
public void onEveryFrame ( int msecElapsed ) { Unit.msecElapsed = msecElapsed ; java.util.Iterator < hkust.comp3111h.ballcraft.Unit > i = Unit.units . iterator () ; while ( i . hasNext () ) { i . next () . moved = false ; } i = Unit.units . iterator () ; while ( i . hasNext () ) { hkust.comp3111h.ballcraft.Unit temp = i . next () ; if ( ! ( temp.moved ) ) temp . move () ; } } 
@ java.lang.Override public org.phenotips.data.permissions.AccessLevel getCurrentUserAccessLevel () { org.phenotips.data.permissions.AccessLevel highestAccessLevel = null ; org.xwiki.users.User currentUser = this . getUserManager () . getCurrentUser () ; java.util.Collection < org.phenotips.data.permissions.Collaborator > collaborators = this . getCollaborators () ; for ( org.phenotips.data.permissions.Collaborator c : collaborators ) { if ( c . isUserIncluded ( currentUser ) ) { org.phenotips.data.permissions.AccessLevel accessLevel = c . getAccessLevel () ; if ( ( accessLevel . compareTo ( highestAccessLevel ) ) >= 0 ) { highestAccessLevel = accessLevel ; } } } return highestAccessLevel ; } 
@ java.lang.Override public com.couchbase.client.java.query.dsl.path.LetPath onKeysValues ( java.lang.String . . . constantKeys ) { if ( ( constantKeys.length ) == 1 ) { return onKeys ( com.couchbase.client.java.query.dsl.Expression . s ( constantKeys [ 0 ] ) ) ; } else { return onKeys ( com.couchbase.client.java.document.json.JsonArray . from ( constantKeys ) ) ; } } 
@ java.lang.Override public void onChangeDay ( java.lang.Integer dayPosition ) { android.support.v7.app.ActionBar actionBar = getSupportActionBar () ; if ( ( ( selectedDayPosition ) != null ) && ( ( dayPosition + 1 ) != ( selectedDayPosition ) ) ) { if ( ( ( actionBar != null ) && ( dayPosition != null ) ) && ( ( actionBar . getNavigationMode () ) == ( android.support.v7.app.ActionBar.NAVIGATION_MODE_LIST ) ) ) { changedDayFromViewPager = true ; selectedDayPosition = dayPosition + 1 ; actionBar . setSelectedNavigationItem ( ( dayPosition + 1 ) ) ; } } } 
@ java.lang.Override public void run () { int resId = R.string.copy_to_sdcard_fail ; if ( rcs_id != 0 ) { resId = ( com.android.mms.rcs.RcsUtils . saveRcsMassage ( this , rcs_id ) ) ? R.string.copy_to_sdcard_success : R.string.copy_to_sdcard_fail ; } android.os.Looper . prepare () ; android.widget.Toast . makeText ( this , resId , Toast.LENGTH_SHORT ) . show () ; android.os.Looper . loop () ; } 
@ java.lang.Override public void render ( float delta ) { Gdx.gl . glClearColor ( 0.5F , 0.5F , 0.5F , 1 ) ; Gdx.gl . glClear ( GL20.GL_COLOR_BUFFER_BIT ) ; viewport . setScreenPosition ( 0 , 0 ) ; camera . update () ; stage . act ( delta ) ; hud . act ( delta ) ; stage . draw () ; hud . draw () ; } 
@ java.lang.Override public org.wso2.carbon.apimgt.core.models.Application getApplicationByName ( java.lang.String applicationName , java.lang.String ownerId , java.lang.String groupId ) throws org.wso2.carbon.apimgt.core.exception.APIManagementException { org.wso2.carbon.apimgt.core.models.Application application = null ; try { application = getApplicationDAO () . getApplicationByName ( applicationName , ownerId ) ; } catch ( org.wso2.carbon.apimgt.core.exception.APIMgtDAOException e ) { java.lang.String errorMsg = ( ( "Error occurred while fetching application for the given applicationName - " + applicationName ) + " with groupId - " ) + groupId ; org.wso2.carbon.apimgt.core.impl.APIStoreImpl.log . error ( errorMsg ) ; throw new org.wso2.carbon.apimgt.core.exception.APIMgtDAOException ( errorMsg , e , org.wso2.carbon.apimgt.core.exception.ExceptionCodes.APIMGT_DAO_EXCEPTION ) ; } return application ; } 
@ java.lang.Override public void uploadStarted ( com.vaadin.ui.Upload.StartedEvent startedEvent ) { originalImageView . setVisible ( false ) ; generatedImageView . setVisible ( false ) ; if ( ! ( "image/jpeg" . equals ( startedEvent . getMIMEType () ) ) ) { startedEvent . getUpload () . interruptUpload () ; java.lang.String caption = "Oh, no! Only '.jpg' and '.jpeg' files can be uploaded." ; com.vaadin.ui.Notification . show ( caption , Notification.Type.WARNING_MESSAGE ) ; } } 
private void updateUI () { tvao.mmad.itu.tingle.Model.ThingRepository repository = tvao.mmad.itu.tingle.Model.ThingRepository . get ( getActivity () ) ; java.util.List < tvao.mmad.itu.tingle.Model.Thing > things = repository . getThings () ; if ( ( mAdapter ) == null ) { mAdapter = new tvao.mmad.itu.tingle.Controller.Helpers.ThingAdapter ( things , getContext () ) ; mThingRecyclerView . setAdapter ( mAdapter ) ; } else { mAdapter . setThings ( things ) ; mAdapter . notifyDataSetChanged () ; } } 
private void setMaxStartValue () { if ( ( ( ( maxStartValue ) < ( absoluteMaxValue ) ) && ( ( maxStartValue ) > ( absoluteMinValue ) ) ) && ( ( maxStartValue ) > ( absoluteMinStartValue ) ) ) { maxStartValue = java.lang.Math . max ( absoluteMaxStartValue , absoluteMinValue ) ; maxStartValue -= absoluteMinValue ; maxStartValue = ( ( maxStartValue ) / ( ( absoluteMaxValue ) - ( absoluteMinValue ) ) ) * 100 ; setNormalizedMaxValue ( maxStartValue ) ; } } 
static boolean isPalindrome ( java.lang.String s , int length ) { int n = 0 ; if ( ( length == 1 ) || ( length == 0 ) ) { return true ; } if ( ( s . charAt ( 0 ) ) == ( s . charAt ( ( length - 1 ) ) ) ) { return Exercise2 . isPalindrome ( s . substring ( 1 , ( length - 1 ) ) , ( length - 2 ) ) ; } else { return false ; } } 
@ java.lang.Override public void onConnected ( android.os.Bundle connectionHint ) { signInButton . setVisibility ( View.GONE ) ; signOutButton . setVisibility ( View.VISIBLE ) ; Games.Invitations . registerInvitationListener ( mGoogleApiClient , this ) ; Games.TurnBasedMultiplayer . registerMatchUpdateListener ( mGoogleApiClient , this ) ; if ( ( mCurrentMatch ) != null ) { Games.TurnBasedMultiplayer . loadMatch ( mGoogleApiClient , mCurrentMatch . getMatchId () ) ; } if ( connectionHint != null ) { mCurrentMatch = connectionHint . getParcelable ( Multiplayer.EXTRA_TURN_BASED_MATCH ) ; } } 
@ org.jetbrains.annotations.NotNull protected static java.io.File getLoaderFile ( java.lang.Class < ? > clazz , java.lang.String str ) { com.intellij.ide.plugins.cl.PluginClassLoader classLoader = ( ( com.intellij.ide.plugins.cl.PluginClassLoader ) ( clazz . getClassLoader () ) ) ; com.intellij.ide.plugins.IdeaPluginDescriptor plugin = com.intellij.ide.plugins.PluginManager . getPlugin ( classLoader . getPluginId () ) ; assert plugin != null ; return new java.io.File ( new java.io.File ( plugin . getPath () , "loader" ) , "loader.exe" ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.settings ) ; android.app.FragmentManager mFragmentManager = getFragmentManager () ; android.app.FragmentTransaction mFragmentTransaction = mFragmentManager . beginTransaction () ; com.example.tomas.beavents.SettingsActivity.PrefsFragment mPrefsFragment = new com.example.tomas.beavents.SettingsActivity.PrefsFragment () ; mFragmentTransaction . replace ( R.id.content_frame , mPrefsFragment ) ; mFragmentTransaction . commit () ; super . onCreateDrawer () ; } 
@ com.vizaco.onlinecontrol.controller.RequestMapping ( value = "/registration" , method = RequestMethod.POST ) public java.lang.String saveUser ( @ com.vizaco.onlinecontrol.controller.ModelAttribute ( value = "user" ) @ javax.validation.Valid @ org.springframework.validation.annotation.Validated com.vizaco.onlinecontrol.model.User user , org.springframework.validation.BindingResult result , javax.servlet.http.HttpServletRequest request ) throws java.io.IOException { populateCollections ( user , request ) ; if ( result . hasErrors () ) { return "/auth/registration" ; } userService . saveUser ( user ) ; com.vizaco.onlinecontrol.model.User principal = ( ( com.vizaco.onlinecontrol.model.User ) ( org.springframework.security.core.context.SecurityContextHolder . getContext () . getAuthentication () . getPrincipal () ) ) ; return "redirect:/users/account/" + ( principal . getLogin () ) ; } 
public static void asJson ( cworks.json.JsonArray array , java.io.File output , boolean pretty ) throws cworks.json.JsonException { cworks.json.Json . throwIfNull ( array ) ; cworks.json.Json . throwIfNull ( output ) ; if ( pretty ) { cworks.json.Json . prettyIO () . asJson ( array , output ) ; } cworks.json.Json . io () . asJson ( array , output ) ; } 
@ org.junit.Test public void testEmbeddedBeelineConnection ( ) throws java.lang.Throwable { java.lang.String embeddedJdbcURL = ( org.apache.hive.jdbc.Utils.URL_PREFIX ) + "/Default" ; java.util.List < java.lang.String > argList = getBaseArgs ( embeddedJdbcURL ) ; argList . add ( "--hivevar" ) ; argList . add ( "DUMMY_TBL=embedded_table" ) ; final java.lang.String SCRIPT_TEXT = "set hive.lock.manager=org.apache.hadoop.hive.ql.lockmgr.EmbeddedLockManager;\n" + "create table ${DUMMY_TBL} (d int);\nshow tables;\n drop table ${DUMMY_TBL};\n" ; final java.lang.String EXPECTED_PATTERN = "embedded_table" ; testScriptFile ( SCRIPT_TEXT , EXPECTED_PATTERN , true , argList ) ; } 
private boolean readWait () { int waitcount = 10 ; while ( ( waiting ) > 0 ) { synchronized ( this ) { try { wait ( 1000 ) ; } catch ( java.lang.InterruptedException e ) { java.lang.Thread . currentThread () . interrupt () ; } } if ( ( waitcount -- ) < 0 ) { jmri.jmrit.operations.rollingstock.engines.NceConsistEngines.log . error ( "read timeout" ) ; syncOK = false ; return false ; } } return true ; } 
private void playGameRound ( com.novoda.pianohero.Note note ) { if ( sequence . isFinal ( note ) ) { callback . onSongComplete () ; return; } if ( sequence . currentNoteIs ( note ) ) { this . sequence = sequence . nextPosition () ; callback . onRoundEnd ( sequence ) ; callback . onRoundSuccess ( sequence ) ; } else { com.novoda.pianohero.Sequence updatedSequence = sequence . error () ; callback . onRoundEnd ( updatedSequence ) ; callback . onRoundError ( updatedSequence ) ; } } 
public static void main ( java.lang.String [] args ) { org.springframework.context.ApplicationContext ctx = org.springframework.boot.SpringApplication . run ( pl.namiekko.hello.SzafbookApplication . class , args ) ; org.springframework.boot.SpringApplication . run ( pl.namiekko.hello.SzafbookApplication . class , args ) ; java.lang.System.out . println ( "Let's inspect the beans provided by Spring Boot:" ) ; java.lang.String [] beanNames = ctx . getBeanDefinitionNames () ; java.util.Arrays . sort ( beanNames ) ; for ( java.lang.String beanName : beanNames ) { java.lang.System.out . println ( beanName ) ; } } 
public void endTurn () { game . nextPlayer () ; options . rollEnabled ( true ) ; if ( game . hasWon () ) { gameOver ( game . getCurrentPlayer () ) ; } hand . updateLabels () ; cluedo.Output . appendText ( ( ( "Player " + ( game . getCurrentPlayer () . getName () ) ) + "\'s turn\n" ) ) ; } 
@ java.lang.Override public void onCompleted () { super . onCompleted () ; menuItemSignIn . setEnabled ( true ) ; mProgressDialog . dismiss () ; io.github.ryanhoo.firFlight.analytics.FlightAnalytics . onEvent ( new io.github.ryanhoo.firFlight.analytics.FlightEvent ( io.github.ryanhoo.firFlight.analytics.FlightEvent.EVENT_SIGN_IN ) . putCustomAttribute ( FlightEvent.KEY_EMAIL , email ) . putSuccess ( true ) ) ; startActivity ( new android.content.Intent ( this , io.github.ryanhoo.firFlight.ui.main.MainActivity . class ) ) ; finish () ; } 
@ org.junit.Test public void makeAValidTableauMoveForASingleCard () { klondike . addToTableauPile ( 0 , new kata.houseofcards.Card ( 13 , CLUBS ) ) ; klondike . getTableauPile ( 1 ) . push ( new kata.houseofcards.Card ( 13 , DIAMONDS ) ) ; klondike . addToTableauPile ( 1 , new kata.houseofcards.Card ( 12 , DIAMONDS ) ) ; klondike . makeMove () ; org.assertj.core.api.Assertions . assertThat ( klondike . getTableauPile ( 0 ) ) . hasSize ( 2 ) ; } 
public static double [] realToComplex ( short [] realInput ) { double [] complexOutput = new double [ ( realInput.length ) * 2 ] ; for ( int i = 0 ; i < ( realInput.length ) ; i ++ ) { if ( ( i % 2 ) == 0 ) { complexOutput [ i ] = realInput [ ( i / 2 ) ] ; } else { complexOutput [ i ] = 0 ; } } return complexOutput ; } 
public int remove ( java.lang.String toRemove ) { linked_yarn.LinkedYarn.Node nodeToRemoveFrom = findFirstNodeWith ( toRemove ) ; if ( nodeToRemoveFrom != null ) { ( modCount ) ++ ; ( nodeToRemoveFrom.count ) -- ; ( size ) -- ; if ( ( nodeToRemoveFrom.count ) == 0 ) { destroyNode ( nodeToRemoveFrom ) ; return 0 ; } return nodeToRemoveFrom.count ; } else { return 0 ; } } 
private void initUI () { this . setLayout ( new java.awt.GridLayout ( boardHeight , boardWidth ) ) ; this . setComponentOrientation ( java.awt.ComponentOrientation.LEFT_TO_RIGHT ) ; for ( int y = 0 ; y < ( boardHeight ) ; y ++ ) { for ( int x = 0 ; x < ( boardWidth ) ; x ++ ) { this . add ( board [ ( ( ( boardWidth ) - 1 ) - y ) ] [ x ] ) ; } } setFocusable ( true ) ; } 
private void handle ( java.io.BufferedReader reader , java.io.PrintWriter writer ) { java.lang.String str ; try { while ( ( str = reader . readLine () ) != null ) { java.lang.String res = deliverMessage ( str ) ; writer . write ( ( res + "\n" ) ) ; writer . flush () ; } } catch ( java.io.IOException e ) { e . printStackTrace ( java.lang.System.err ) ; onResponse . onResponse ( ( "error:" + ( e . getMessage () ) ) , null ) ; } } 
private void generateInventories ( java.lang.String path , com.pottda.game.MyXMLReader reader ) { com.badlogic.gdx.files.FileHandle folder = Gdx.files . internal ( "inventoryblueprint" ) ; java.util.List < com.badlogic.gdx.files.FileHandle > contents = java.util.Arrays . asList ( folder . list ( "xml" ) ) ; try { for ( com.badlogic.gdx.files.FileHandle f : contents ) { com.pottda.game.InventoryBlueprint . newBlueprint ( reader . parseInventory ( folder ) ) ; } } catch ( java.lang.Exception e ) { throw new java.lang.Error ( "failed to generate inventory blueprints: " , e ) ; } } 
public double calculateUploadSpeed ( java.lang.String uploadUrl ) { httpInvoker . config () . setUrl ( uploadUrl ) . update () ; com.astronlab.ngenhttplib.http.extended.UploadFileWithProgressListener uploadTester = new com.astronlab.ngenhttplib.http.extended.UploadFileWithProgressListener ( httpInvoker , this ) ; uploadSpeedManager = new com.astronlab.ngenhttplib.http.extended.SpeedManager ( uploadTester ) ; if ( ( uploadFileSize ) > 0 ) { uploadTester . setUploadSizeInKB ( uploadFileSize ) ; } uploadTester . startUploadSpeedTest () ; return uploadSpeedManager . getSpeed () ; } 
@ org.junit.Test public void testParseInfoRequest ( ) throws java.lang.Exception { rosa.iiif.image.model.InfoRequest info ; rosa.iiif.image.model.InfoRequest test ; info = new rosa.iiif.image.model.InfoRequest () ; info . setImageId ( "abc/123" ) ; info . setFormat ( InfoFormat.JSON ) ; test = parser . parseImageInfoRequest ( "abc%2F123/info.json" ) ; org.junit.Assert . assertEquals ( info , test ) ; test = parser . parseImageInfoRequest ( "/abc%2F123/info.json" ) ; org.junit.Assert . assertEquals ( info , test ) ; } 
@ java.lang.Override public void onDescriptorRead ( com.evothings.BluetoothGatt g , com.evothings.BluetoothGattDescriptor d , int status ) { if ( status == ( BluetoothGatt.GATT_SUCCESS ) ) { mCurrentOpContext . success ( d . getValue () ) ; } else { mCurrentOpContext . error ( status ) ; } mCurrentOpContext = null ; process () ; } 
@ java.lang.Override public java.lang.String tsNumPadInputValue ( short beat , short value ) { timeSignature . setBeats ( beat ) ; timeSignature . setNoteValues ( value ) ; timeSignatureText . setText ( ( ( ( "" + ( timeSignature . getBeats () ) ) + "/" ) + ( timeSignature . getNoteValues () ) ) ) ; metroTask . setBeat ( beat ) ; metroTask . setNoteValue ( value ) ; return null ; } 
@ java.lang.Override public boolean hasNext () { if ( ( ! ( this . cur . hasNext () ) ) && ( this . hasNext () ) ) { this . cur = f . apply ( this . next () ) . iterator () ; } return this . cur . hasNext () ; } 
private static boolean isEprPredicate ( de.uni_freiburg.informatik.ultimate.logic.FunctionSymbol function ) { if ( function . getName () . equals ( "not" ) ) return false ; if ( function . getName () . equals ( "or" ) ) return false ; if ( function . getName () . equals ( "ite" ) ) return false ; if ( function . getName () . equals ( "=" ) ) return false ; return true ; } 
private void heapifyUp ( int idx ) { if ( idx == 0 ) return; int parentIdx = idx / 2 ; Key parentKey = data . get ( parentIdx ) ; Key currentKey = data . get ( idx ) ; if ( ( parentKey . compareTo ( currentKey ) ) > 0 ) { Key tmp = parentKey ; data . set ( parentIdx , currentKey ) ; data . set ( idx , tmp ) ; heapifyUp ( parentIdx ) ; } } 
@ org.junit.Test public void testValidChoice ( ) throws org.quattor.pan.exceptions.SyntaxException { org.quattor.pan.template.Context context = new org.quattor.pan.template.BuildContext () ; java.util.List < org.quattor.pan.dml.data.Element > args = new java.util.ArrayList < org.quattor.pan.dml.data.Element > () ; args . add ( org.quattor.pan.dml.data.StringProperty . getInstance ( "A" ) ) ; args . add ( org.quattor.pan.dml.data.StringProperty . getInstance ( "B" ) ) ; org.quattor.pan.type.BaseType type = org.quattor.pan.type.ChoiceType . getInstance ( null , null , args ) ; java.lang.Object o = type . validate ( context , org.quattor.pan.dml.data.StringProperty . getInstance ( "A" ) ) ; org.junit.Assert . assertEquals ( o , null ) ; } 
public void addCard ( java.lang.String card ) { for ( com.coach.plugin.hearthstone.deck.Card existing : classCards ) { if ( existing . getName () . equals ( card ) ) { existing . setAmount ( ( "" + ( java.lang.Integer . parseInt ( ( ( existing . getAmount () ) + 1 ) ) ) ) ) ; return; } } com.coach.plugin.hearthstone.deck.Card newCard = new com.coach.plugin.hearthstone.deck.Card ( card , ( "" + 1 ) ) ; classCards . add ( newCard ) ; } 
public static void removeFromContacts ( java.lang.String name ) { java.lang.String userName = controllers.Security . connected () ; ch.unibe.ese.calendar.User user = ch.unibe.ese.calendar.UserManager . getInstance () . getUserByName ( userName ) ; ch.unibe.ese.calendar.User userToRemove = ch.unibe.ese.calendar.UserManager . getInstance () . getUserByName ( name ) ; try { user . removeFromMyContacts ( userToRemove ) ; } catch ( javax.activity.InvalidActivityException e ) { e . printStackTrace () ; } controllers.Application . calendar ( name , null ) ; } 
@ org.junit.Test ( expected = xyz.swordfeng.jobsystem.ValidationError . class ) public void createJobWithZeroPerson ( ) throws User.AuthFailure , xyz.swordfeng.jobsystem.ValidationError { java.lang.String username = "user1" ; xyz.swordfeng.jobsystem.User user = xyz.swordfeng.jobsystem.User . login ( username , "password" ) ; java.lang.String name = "Programmer" ; java.lang.String address = "China" ; java.lang.String [] skills = new java.lang.String [ 2 ] ; skills [ 0 ] = "Java" ; skills [ 1 ] = "Steam" ; java.lang.String education = "大学" ; xyz.swordfeng.jobsystem.Job job = new xyz.swordfeng.jobsystem.Job ( user , name , address , 0 , skills , education ) ; org.junit.Assert . fail ( "should throw ValidationError exception" ) ; } 
private static void putSubtitleInHashMap ( java.lang.String word ) { if ( ! ( common.StopWords . isStopWord ( word ) ) ) { java.lang.Integer freq = PDFContainer.wordsOccurence . get ( word ) ; if ( freq == null ) { if ( ( frontend.app.TextProcessor.wordsInserted ) < ( common.PDFContainer.numberOfWordsToInsert ) ) { PDFContainer.wordsOccurence . put ( word , 0 ) ; ( frontend.app.TextProcessor.wordsInserted ) ++ ; } else if ( ( common.PDFContainer.numberOfWordsToInsert ) == 0 ) { PDFContainer.wordsOccurence . put ( word , 0 ) ; } } } } 
@ java.lang.Override public void onItemSelected ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { mP1 = ( ( com.app.restfulapp.models.Member ) ( parent . getSelectedItem () ) ) ; if ( ( "Alert" . equalsIgnoreCase ( mP1 . getCode () ) ) || ( "" . equalsIgnoreCase ( mP1 . getCode () ) ) ) return; updateP2 () ; } 
void register ( com.kk.bus.Bus bus , java.lang.Object objectToRegister , java.lang.reflect.Method producerMethod , com.kk.bus.DeliveryContext deliveryContext ) { synchronized ( this ) { com.kk.bus.EventDeliverer eventDeliverer = mObjectDeliverers . get ( objectToRegister ) ; if ( eventDeliverer == null ) { eventDeliverer = new com.kk.bus.EventDeliverer ( bus , objectToRegister , deliveryContext ) ; mObjectDeliverers . put ( objectToRegister , eventDeliverer ) ; } eventDeliverer . setProducerMethod ( producerMethod ) ; } } 
@ java.lang.Override public ea.internal.phy.PhysikHandler typ ( ea.Physik.Typ typ ) { if ( typ == ( physikTyp ) ) { return this ; } ea.internal.phy.BodyType newType = typ . convert () ; body . setType ( newType ) ; body . setActive ( true ) ; fixture . setSensor ( ( typ == ( Physik.Typ.PASSIV ) ) ) ; body . setGravityScale ( ( typ == ( Physik.Typ.PASSIV ) ? 0 : 1 ) ) ; return this ; } 
@ java.lang.Override public void perform () { boolean friendlyFire = myFaction . getFriendlyFire () ; myFaction . msg ( TL.COMMAND_FRIENDLYFIRE_TOGGLED , fme . describeTo ( myFaction , true ) , ( ( friendlyFire ? "en" : "dis" ) + "abled" ) ) ; myFaction . setFriendlyFire ( ( ! friendlyFire ) ) ; } 
public void prepareRun () { internalCloseRunner () ; statusEmpty () ; for ( int i = 0 ; i < 10 ; i ++ ) java.lang.System.out . println () ; if ( processing.app.Preferences . getBoolean ( "console.auto_clear" ) ) { console . clear () ; } sketch . ensureExistence () ; for ( processing.app.SketchCode sc : sketch . getCode () ) { try { sc . setProgram ( sc . getDocumentText () ) ; } catch ( javax.swing.text.BadLocationException e ) {} } } 
public void update () { for ( com.ne.revival_games.entity.WorldObjects.Entity.Entity entity : this . team . getTeamObjects () ) { entity . update ( world ) ; } if ( holdingGhost ) { org.dyn4j.geometry.Vector2 delta = new org.dyn4j.geometry.Vector2 ( ( ( pullTowards.x ) - ( ghost.entity.shape . getX () ) ) , ( ( pullTowards.y ) - ( ghost.entity.shape . getY () ) ) ) ; ghost . setLinearVelocity ( ( 10 * ( delta.x ) ) , ( 10 * ( delta.y ) ) ) ; } } 
@ java.lang.Override public int onStartCommand ( android.content.Intent intent , int flags , int startId ) { android.util.Log . e ( in.apps.maitreya.travelalarm.BackgroundLocationService.TAG , "onStartCommand" ) ; setIntervals ( intent . getFloatExtra ( "act_dist" , ( - 1 ) ) , intent . getFloatExtra ( "alarm_dist" , ( - 1 ) ) ) ; android.widget.Toast . makeText ( this , ( ( ( "INTERVALS = " + ( LOCATION_INTERVAL ) ) + " " ) + ( LOCATION_DISTANCE ) ) , Toast.LENGTH_SHORT ) . show () ; super . onStartCommand ( intent , flags , startId ) ; return START_STICKY ; } 
public void sendChatAction ( int chatId , com.edoardogiacomello.telegrambot.types.ChatAction action ) { if ( ( chatId <= 0 ) || ( action == null ) ) throw new java.lang.IllegalArgumentException ( "You must specify at least a chatId and a valid action" ) ; java.util.List < org.apache.http.NameValuePair > params = new java.util.ArrayList < org.apache.http.NameValuePair > () ; params . add ( new org.apache.http.message.BasicNameValuePair ( "chat_id" , java.lang.Integer . toString ( chatId ) ) ) ; params . add ( new org.apache.http.message.BasicNameValuePair ( "action" , action . getValue () ) ) ; outputParser . request ( TelegramMethods.sendChatAction , params ) ; } 
@ java.lang.Override public boolean accept ( org.apache.hadoop.fs.Path path ) { if ( org.apache.hadoop.hbase.wal.DefaultWALProvider . isMetaFile ( path ) ) { if ( org.apache.hadoop.hbase.backup.impl.IncrementalBackupManager.LOG . isDebugEnabled () ) { org.apache.hadoop.hbase.backup.impl.IncrementalBackupManager.LOG . debug ( ( "Skip .meta log file: " + ( path . getName () ) ) ) ; } return false ; } java.lang.Long timestamp = null ; try { timestamp = org.apache.hadoop.hbase.backup.util.BackupClientUtil . getCreationTime ( path ) ; return timestamp > ( java.lang.Long . valueOf ( lastBackupTS ) ) ; } catch ( java.lang.Exception e ) { org.apache.hadoop.hbase.backup.impl.IncrementalBackupManager.LOG . warn ( ( "Cannot read timestamp of log file " + path ) ) ; return false ; } } 
@ java.lang.Override public void onResponse ( retrofit2.Call < com.arman.horus.models.PlaceDetail > call , retrofit2.Response < com.arman.horus.models.PlaceDetail > response ) { if ( ! ( response . isSuccessful () ) ) { android.util.Log . d ( com.arman.horus.activities.PlaceDetailActivity.LOG_TAG , "Request wasn't successful!" ) ; dialog . dismiss () ; return; } showPlaceDetail ( response . body () ) ; } 
public static java.lang.String load ( java.lang.String path , java.lang.String charsetName , int readTimeout ) throws java.io.IOException { java.net.URL url = org.cubeengine.pericopist.util.Misc . getResource ( path ) ; if ( url == null ) { throw new java.io.FileNotFoundException ( ( ( "The resource '" + path ) + "' was not found in file system or as URL." ) ) ; } return org.cubeengine.pericopist.util.Misc . getContent ( url , java.nio.charset.Charset . forName ( charsetName ) , 5000 ) . getValue () ; } 
private void compute_speed () { float [] currentGPSReadings = mGPSListener . getCurrentValues () ; float tot_weight = ( currentGPSReadings [ 1 ] ) + ( ( float ) ( mAccPrecision ) ) ; float gps_weight = ( currentGPSReadings [ 1 ] ) / tot_weight ; float vel_weight = ( ( float ) ( mAccPrecision ) ) / tot_weight ; mSpeed = ( ( mSpeedAccel ) * vel_weight ) + ( ( currentGPSReadings [ 1 ] ) * gps_weight ) ; } 
@ java.lang.Override public void onBindViewHolder ( com.theraytar.ungkyrkja.adapters.RecyclerAdapter.EntryListRowHolder EntryListRowHolder , int i ) { com.theraytar.ungkyrkja.other.UKEntry entry = entries . get ( i ) ; java.util.Date date = entry . getDate () ; EntryListRowHolder.date . setText ( ( ( ( date . getDay () ) + ". " ) + ( months [ date . getMonth () ] ) ) ) ; EntryListRowHolder.content . setText ( entry . getContent () ) ; } 
public static uniandes.unacloud.agent.platform.VirtualBox.VirtualBox getInstalledVirtualBoxPlatform ( java.lang.String path ) throws uniandes.unacloud.agent.exceptions.UnsupportedPlatformException { java.lang.String h = uniandes.unacloud.common.utils.LocalProcessExecutor . executeCommandOutput ( path , "--version" ) ; if ( h . matches ( ( ( VBox5.VERSION ) + ".*" ) ) ) return new uniandes.unacloud.agent.platform.VirtualBox.VBox5 ( path ) ; if ( h . matches ( ( ( VBox43.VERSION ) + ".*" ) ) ) return new uniandes.unacloud.agent.platform.VirtualBox.VBox43 ( path ) ; throw new uniandes.unacloud.agent.exceptions.UnsupportedPlatformException ( ( "VBox: " + path ) ) ; } 
private void rehash ( int size ) { int newHashSize = it.unimi.dsi.fastutil.HashCommon . arraySize ( ( size + 1 ) , com.facebook.presto.operator.aggregation.TypedSet.FILL_RATIO ) ; hashMask = newHashSize - 1 ; maxFill = com.facebook.presto.operator.aggregation.TypedSet . calculateMaxFill ( newHashSize ) ; blockPositionByHash . ensureCapacity ( newHashSize ) ; for ( int i = 0 ; i < newHashSize ; i ++ ) { blockPositionByHash . set ( i , com.facebook.presto.operator.aggregation.TypedSet.EMPTY_SLOT ) ; } rehashBlock ( elementBlock ) ; } 
@ java.lang.Override public void setUserVisibleHint ( boolean isVisibleToUser ) { super . setUserVisibleHint ( isVisibleToUser ) ; if ( isVisibleToUser ) { android.os.Message message = new android.os.Message () ; message.what = 2 ; message.obj = "bottom1" ; mt1Handler . sendMessage ( message ) ; } else if ( ! isVisibleToUser ) { android.util.Log . e ( "===========" , "bu shi ke jian d" ) ; } } 
public boolean check_permission () { if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.M ) ) { for ( java.lang.String permission : PERMISSION_LIST ) { if ( ( android.support.v4.content.ContextCompat . checkSelfPermission ( mActivity , permission ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) return false ; } } return false ; } 
private int getOperatorPositionInString ( java.lang.String [] operators , int operatorNumber ) { int stringPosition = 0 ; for ( int i = 0 ; i < operatorNumber ; i ++ ) stringPosition += ( operators [ i ] . length () ) + 1 ; return stringPosition ; } 
@ org.junit.Test public void testToFAGetToFAnswerByNullId () { try { java.lang.Long optionSeq = null ; br.cefetmg.jquest.model.service.TrueOrFalseAnswerManagementImplTest.tofaManagement . getToFAnswerById ( optionSeq ) ; } catch ( br.cefetmg.jquest.model.exception.BusinessException | br.cefetmg.jquest.model.exception.PersistenceException ex ) { java.lang.String msgErr = ex . getMessage () ; java.lang.String msgEsperada = "No Answer ID was informed" ; org.junit.Assert . assertTrue ( "GetById of null TrueOrFalseAnswer ID" , msgErr . contains ( msgEsperada ) ) ; } org.junit.Assert . fail ( "GetById of null TrueOrFalseAnswer ID didnt throw an exception" ) ; } 
@ org.junit.Test public void testValidNullStudentEmail () { try { student = new model.Student ( "Jacó Mario Souza" , cpf , rg , date , null , address , phone1 , phone2 , "Milene Souza Medeiros" , "Mário Souza Filho" ) ; assertEquals ( "" , student . getStudentEmail () ) ; } catch ( exception.StudentException e ) { fail ( ( "Should not throw this exception: " + ( e . getMessage () ) ) ) ; } } 
private void undoUpdateTask () { for ( int i = 0 ; i < ( tasksList . size () ) ; i ++ ) { if ( ( tasksList . get ( i ) . getIndex () ) == ( prevModIndex ) ) { tasksList . remove ( i ) ; tasksList . add ( i , prevModTask ) ; java.util.Collections . sort ( tasksList ) ; Tempo.Calendar.indexStore . replaceTask ( prevModIndex , prevModTask ) ; } } } 
public void moveLeft () { if ( ( ( ! ( board . questionCollision ( ( ( xPosition ) - 1 ) , yPosition , elevation ) ) ) && ( wallCollide ) ) && ( ! ( questionPlayerCollision ( ( - 1 ) , 0 ) ) ) ) ( xPosition ) -- ; questionNonWalls () ; lastPosition [ 0 ] = xPosition ; } 
@ java.lang.Override public void update ( float delta ) { bulletsToRemove . clear () ; for ( lando.systems.lordsandships.entities.Bullet bullet : bullets ) { if ( bullet . isAlive () ) bullet . update ( delta ) ; else bulletsToRemove . add ( bullet ) ; } bullets . removeAll ( bulletsToRemove , true ) ; if ( ( attacking ) && ( ( attackCooldown -= delta ) < 0.0F ) ) { attacking = false ; } } 
public void exit ( int line ) { int currentCount = -- ( counts [ line ] ) ; if ( currentCount == 0 ) { times [ line ] += ( java.lang.System . nanoTime () ) - ( start [ line ] ) ; start [ line ] = 0L ; } if ( line > ( max ) ) { max = line ; } } 
@ java.lang.Override protected void onListItemClick ( android.widget.ListView l , android.view.View v , int position , long id ) { android.content.Intent intent = new android.content.Intent ( this , com.students.lmi.lmi_app.CurrentNews . class ) ; dialog2 = android.app.ProgressDialog . show ( this , "Загрузка" , "Подождите, новость загружается..." ) ; intent . putExtra ( "reference" , com.students.lmi.lmi_app.News.referencelist . get ( position ) ) ; startActivity ( intent ) ; super . onListItemClick ( l , v , position , id ) ; } 
@ org.junit.Test public void shouldParseValidPropertyOnDefaultDelimiter () { final java.util.Properties input = createDummyProperties ( "key" , "test,values" ) ; final java.util.Optional < java.lang.String [] > actual = tested . getArray ( input , "key" , null ) ; org.assertj.core.api.Assertions . assertThat ( actual ) . isNotEmpty () ; org.assertj.core.api.Assertions . assertThat ( actual ) . contains ( new java.lang.String [] { "test" , "values" } ) ; } 
@ org.junit.Test public void testFindPrinter ( ) throws java.lang.Exception { java.util.Map < java.lang.String , java.util.List < java.lang.String > > authors = new java.util.HashMap < java.lang.String , java.util.List < java.lang.String > > () { { put ( "Author1" , java.util.Arrays . asList ( "1" , "2" , "3" ) ) ; put ( "Author2" , java.util.Arrays . asList ( "22" , "1" ) ) ; put ( "Author3" , java.util.Arrays . asList ( "3334" ) ) ; } } ; assertEquals ( "Author3" , findPrinter ( authors ) ) ; assertEquals ( "" , findPrinter ( java.util.Collections . emptyMap () ) ) ; } 
@ java.lang.Override public void validateTopic ( java.lang.String title , java.lang.String content , java.lang.String date ) { boolean cancel = false ; if ( android.text.TextUtils . isEmpty ( title ) ) { cancel = true ; mAddTopicView . setTitleError ( R.string.error_field_required ) ; } if ( android.text.TextUtils . isEmpty ( content ) ) { mAddTopicView . setContentError ( R.string.error_field_required ) ; cancel = true ; } if ( ! cancel ) { if ( isNewTopic () ) { createTopic ( title , content ) ; } else { updateTopic ( title , content ) ; } } } 
private static java.lang.String generateTestValue () { java.lang.String firstline = "23 B\n" ; java.lang.String [] field = new java.lang.String [] { "K...." , "b...." , ".k..." , "....." , "....." , "....." } ; java.lang.StringBuilder builder = new java.lang.StringBuilder () ; builder . append ( firstline ) ; for ( int i = 0 ; i < ( field.length ) ; i ++ ) builder . append ( ( ( field [ i ] ) + "\n" ) ) ; return builder . toString () ; } 
private void depositCash () { int account = selectAccount () ; java.lang.System.out . println ( "Enter the amount that you would like to Deposit : " ) ; double amount = 0 ; try { amount = java.lang.Double . parseDouble ( keyboard . nextLine () ) ; } catch ( java.lang.NumberFormatException e ) { amount = 0 ; } atm . getPerson ( account ) . getAccount () . deposit ( amount ) ; } 
private void alterLinks ( java.lang.String pathHtml ) { for ( org.jsoup.nodes.Element link : links ) { java.lang.String atr = link . attr ( Constants.ABS_HREF ) ; if ( atr != null ) { java.lang.String path = utils.parsers.Parser . urlToPath ( atr , root , ( "/" + ( utils.Constants.PAGE_NAME ) ) ) ; java.lang.String relPath = utils.parsers.Parser . convertToRelativePath ( utils.parsers.Parser . getPath ( pathHtml ) , utils.parsers.Parser . getPath ( path ) ) ; link . attr ( Constants.HREF , ( relPath + ( utils.Constants.PAGE_NAME ) ) ) ; } } } 
@ java.lang.Override protected void onPageMoved ( int position , float fraction ) { super . onPageMoved ( position , fraction ) ; if ( ! ( mSearchMode ) ) { float openFraction = ( 1 - position ) - fraction ; android.support.v4.view.ViewCompat . setScaleX ( mCreateFab , openFraction ) ; android.support.v4.view.ViewCompat . setScaleY ( mCreateFab , openFraction ) ; mCreateFab . setVisibility ( ( openFraction == 0 ? android.view.View.INVISIBLE : android.view.View.VISIBLE ) ) ; } } 
public void startGame () { start () ; while ( ( turnCount ) == 2 ) { play ( player1 , cup , rule ) ; play ( player2 , cup , rule ) ; } while ( ( turnCount ) == 1 ) { play ( player2 , cup , rule ) ; play ( player1 , cup , rule ) ; } } 
public void recordServiceStart () { android.util.Log . i ( com.prismaqf.callblocker.CallHelper.TAG , "Opening a DB connection and recording service start" ) ; android.database.sqlite.SQLiteDatabase db = new com.prismaqf.callblocker.sql.DbHelper ( ctx ) . getWritableDatabase () ; com.prismaqf.callblocker.sql.ServiceRun lastRun = com.prismaqf.callblocker.sql.ServiceRun . LatestRun ( db ) ; setNumReceived ( lastRun . getNumReceived () ) ; setNumTriggered ( lastRun . getNumTriggered () ) ; myRunId = com.prismaqf.callblocker.sql.ServiceRun . InsertAtServiceStart ( db ) ; com.prismaqf.callblocker.sql.ServiceRun . UpdateWhileRunning ( db , myRunId , ( - 1 ) , ( - 1 ) ) ; db . close () ; } 
private void doShare ( com.liulishuo.share.content.ShareContent shareContent ) { java.lang.String appId = ShareBlock.Config.qqAppId ; if ( android.text.TextUtils . isEmpty ( appId ) ) { throw new java.lang.NullPointerException ( "请通过shareBlock初始化QQAppId" ) ; } com.tencent.tauth.Tencent tencent = com.tencent.tauth.Tencent . createInstance ( appId , getApplicationContext () ) ; if ( isToFriend ) { android.os.Bundle params = createQQBundle ( shareContent ) ; tencent . shareToQQ ( this , params , uiListener ) ; } else { android.os.Bundle params = createQZoneBundle ( shareContent ) ; tencent . shareToQzone ( this , params , uiListener ) ; } } 
public static javafx.scene.layout.HBox constructButtonPane () { javafx.scene.layout.HBox buttonPane = new javafx.scene.layout.HBox () ; buttonPane . setSpacing ( gui.modal.ModalUtilities.BUTTON_SPACING ) ; buttonPane . setAlignment ( javafx.geometry.Pos.CENTER_LEFT ) ; buttonPane . setMinHeight ( gui.modal.ModalUtilities.BOTTOM_AREA_HEIGHT ) ; buttonPane . setPrefHeight ( gui.modal.ModalUtilities.BOTTOM_AREA_HEIGHT ) ; buttonPane . setMaxHeight ( gui.modal.ModalUtilities.BOTTOM_AREA_HEIGHT ) ; buttonPane . setStyle ( gui.modal.ModalUtilities.BOTTOM_STYLE ) ; buttonPane . setPadding ( new javafx.geometry.Insets ( 0 , gui.modal.ModalUtilities.TITLE_LABEL_OFFSET_FROM_LEFT , 0 , gui.modal.ModalUtilities.TITLE_LABEL_OFFSET_FROM_LEFT ) ) ; return buttonPane ; } 
private static final boolean equalsUUID ( java.util.UUID one , java.util.UUID two ) { boolean equal = false ; if ( ( one == null ) || ( two == null ) ) equal = false ; else equal = one . equals ( two ) ; if ( equal ) return true ; java.lang.String user1 = net.minecraftforge.common.UsernameCache . getLastKnownUsername ( one ) ; java.lang.String user2 = net.minecraftforge.common.UsernameCache . getLastKnownUsername ( two ) ; if ( ( user1 == null ) || ( user1 == null ) ) return false ; else return user1 . equalsIgnoreCase ( user2 ) ; } 
@ java.lang.Override public void update ( android.graphics.Point point ) { rectangle . set ( ( ( point.x ) - ( ( rectangle . width () ) / 2 ) ) , ( ( point.y ) - ( ( rectangle . height () ) / 2 ) ) , ( ( point.x ) - ( ( rectangle . width () ) / 2 ) ) , ( ( point.y ) + ( ( rectangle . height () ) / 2 ) ) ) ; } 
public void setActivePlayers () { for ( players.Player player : players ) { if ( ( player . getStake () ) >= ( currentBigBlind ) ) { player . setActive ( true ) ; activePlayers . add ( player ) ; } else { player . setActive ( false ) ; } } } 
private void onWPComEmailCheckError ( boolean forceWordPressComDisplay ) { if ( ! ( isAdded () ) ) { return; } if ( forceWordPressComDisplay ) { showSelfHostedSignInForm () ; return; } if ( isUsernameEmail () ) { showSelfHostedSignInForm () ; } else { showPasswordFieldAndFocus () ; } } 
private static java.util.Date setTimeToStartOfDay ( java.util.Date date ) { assert date != null ; java.util.Calendar calendar = java.util.Calendar . getInstance () ; calendar . setTime ( date ) ; calendar . set ( java.util.Calendar.HOUR_OF_DAY , 0 ) ; calendar . set ( java.util.Calendar.MINUTE , 0 ) ; calendar . set ( java.util.Calendar.SECOND , 0 ) ; java.util.Date updatedDate = calendar . getTime () ; return updatedDate ; } 
private void startCLI () { Println ( plainsimple.geometrytoolkit.CLI.msg . program_full_name () ) ; java.lang.String user_input ; do { user_input = getInput () ; if ( user_input . isEmpty () ) { Println ( plainsimple.geometrytoolkit.CLI.msg . no_input () ) ; } else { processInput ( user_input ) ; } } while ( ! ( java.util.Objects . equals ( user_input , "exit" ) ) ) ; } 
public static void addElement ( java.lang.String name , int power , java.lang.String serialNumber ) { try { JavafxLab6.Equipment equip = new JavafxLab6.Equipment ( name , power , serialNumber ) ; JavafxLab6.Equipments.map . put ( equip . getSerialNumber () , equip ) ; JavafxLab6.Equipments . showAddAcceptDilog () ; } catch ( java.io.IOException e ) {} } 
public com.jadieldearmas.codegenerator.JCodedBody addCodedBody ( ) throws java.lang.UnsupportedOperationException { if ( ! ( this . isBodyAdded ) ) { com.jadieldearmas.codegenerator.JCodedBody body = new com.jadieldearmas.codegenerator.JCodedBody () ; this . addNewChildTemplate ( "body" , body ) ; this . isBodyAdded = true ; this . textBody = null ; return body ; } else { throw new java.lang.UnsupportedOperationException ( "The body of the constructor has been added already." ) ; } } 
@ java.lang.Override public boolean onTouch ( android.view.View v , android.view.MotionEvent event ) { int source = event . getSource () ; if ( source == ( android.view.InputDevice.SOURCE_MOUSE ) ) { handleMouseEvent ( event ) ; } else if ( source == ( android.view.InputDevice.SOURCE_TOUCHSCREEN ) ) { handleTouchEvent ( event ) ; } return true ; } 
@ javax.annotation.Nonnull public java.net.URI getCurrentURI () { if ( ( m_bUseStaticServerInfo ) && ( com.helger.web.servlet.server.StaticServerInfo . isSet () ) ) return com.helger.commons.url.URLHelper . getAsURI ( ( ( ( com.helger.web.servlet.server.StaticServerInfo . getInstance () . getFullServerPath () ) + "/" ) + ( m_aUriInfo . getPath () ) ) ) ; if ( false ) { m_aUriInfo . getBaseUri () ; m_aUriInfo . getPath () ; m_aUriInfo . getAbsolutePath () ; } return m_aUriInfo . getAbsolutePath () ; } 
@ java.lang.Override public void onFocusChange ( android.view.View v , boolean hasFocus ) { if ( ! hasFocus ) { boolean isValid = validUser () ; ev_Role . setEnabled ( isValid ) ; if ( isValid ) { ev_Role . expandGroup ( 0 ) ; loadRole () ; } else { ev_Role . collapseGroup ( 0 ) ; } } } 
public void connect ( ) throws java.io.IOException { org.phoenixframework.channels.Socket.LOG . log ( java.util.logging.Level.FINE , "connect" ) ; disconnect () ; final java.lang.String httpUrl = this . endpointUri . replaceFirst ( "^ws:" , "http:" ) . replaceFirst ( "^wss:" , "https:" ) ; final com.squareup.okhttp.Request request = new com.squareup.okhttp.Request.Builder () . url ( httpUrl ) . build () ; final com.squareup.okhttp.ws.WebSocketCall wsCall = com.squareup.okhttp.ws.WebSocketCall . create ( httpClient , request ) ; wsCall . enqueue ( wsListener ) ; } 
private java.util.List < android.view.accessibility.AccessibilityNodeInfo > findAccessibilityNodeInfosByTexts ( android.view.accessibility.AccessibilityNodeInfo nodeInfo , java.lang.String [] texts ) { for ( java.lang.String text : texts ) { java.util.List < android.view.accessibility.AccessibilityNodeInfo > nodes = nodeInfo . findAccessibilityNodeInfosByText ( text ) ; if ( ! ( nodes . isEmpty () ) ) { if ( ( text . equals ( this . WECHAT_OPEN_EN ) ) && ( ! ( nodeInfo . findAccessibilityNodeInfosByText ( this . WECHAT_OPENED_EN ) . isEmpty () ) ) ) { continue; } return nodes ; } } return new java.util.ArrayList <> () ; } 
private static void deserializeStore ( MiniWebStore store , java.lang.String filename ) throws java.io.IOException , java.lang.ClassNotFoundException { java.io.FileInputStream fileInputStream = new java.io.FileInputStream ( filename ) ; java.util.zip.GZIPInputStream gzipInputStream = new java.util.zip.GZIPInputStream ( fileInputStream ) ; java.io.ObjectInputStream objectInputStream = new java.io.ObjectInputStream ( gzipInputStream ) ; MiniWebStore loadedStore = ( ( MiniWebStore ) ( objectInputStream . readObject () ) ) ; objectInputStream . close () ; store = loadedStore ; } 
public int returnID ( java.lang.String n ) throws java.sql.SQLException { try { conn . prepareStatement ( ( ( "SELECT FROM COURSES WHERE NAME='" + n ) + "'" ) ) . executeUpdate () ; java.sql.ResultSet executeQuery = conn . prepareStatement ( ( ( "SELECT FROM COURSES WHERE NAME='" + n ) + "'" ) ) . executeQuery () ; while ( executeQuery . next () ) { return executeQuery . getInt ( 1 ) ; } } catch ( java.lang.Exception e ) { java.lang.System.out . println ( e ) ; } finally { conn . close () ; } return - 1 ; } 
@ org.junit.Test public void testCalculateSmallFactorial () { org.junit.Assert . assertEquals ( 1 , be.inniger.euler.util.Maths . calculateSmallFactorial ( 1 ) ) ; org.junit.Assert . assertEquals ( 2 , be.inniger.euler.util.Maths . calculateSmallFactorial ( 2 ) ) ; org.junit.Assert . assertEquals ( 6 , be.inniger.euler.util.Maths . calculateSmallFactorial ( 3 ) ) ; org.junit.Assert . assertEquals ( 479001600 , be.inniger.euler.util.Maths . calculateSmallFactorial ( 12 ) ) ; } 
@ java.lang.Override public void onClick ( com.google.gwt.event.dom.client.ClickEvent event ) { forceTabsCleaning () ; if ( ( this . modal ) != null ) { this . modal . hide () ; } this . setSelectedAnchorListItem ( this . firewall ) ; this . contentPanel . setVisible ( true ) ; this . contentPanelHeader . setText ( org.eclipse.kura.web.client.ui.EntryClassUi.MSGS . firewall () ) ; this . contentPanelBody . clear () ; this . contentPanelBody . add ( this . firewallBinder ) ; this . firewallBinder . initFirewallPanel () ; this . discardWiresPanelChanges () ; } 
private void updateRoomListString () { chatserver.ChatServer.chatRoomListString = "" ; int i = 0 ; synchronized ( chatserver.ChatServer.chatRoomList ) { for ( chatRoom.ChatRoom rm : chatserver.ChatServer.chatRoomList ) { chatserver.ChatServer.chatRoomListString = ( ( ( ( chatserver.ChatServer.chatRoomListString ) + ( i ++ ) ) + ". " ) + ( rm . getName () ) ) + "\n" ; } } } 
public IO () { speedUp . whenPressed ( new org.usfirst.frc.team5243.robot.StrafeSpeedCommand ( ( ( strafeSpeed ) + 0.1 ) ) ) ; slowDown . whenPressed ( new org.usfirst.frc.team5243.robot.StrafeSpeedCommand ( ( ( strafeSpeed ) - 0.1 ) ) ) ; leftStrafe . whileHeld ( new org.usfirst.frc.team5243.robot.commands.StrafeCommand () ) ; rightStrafe . whileHeld ( new org.usfirst.frc.team5243.robot.commands.StrafeCommand () ) ; resetButton . whenPressed ( new org.usfirst.frc.team5243.robot.StrafeSpeedCommand ( 0 ) ) ; strafeTriggerLeft . whileHeld ( new org.usfirst.frc.team5243.robot.commands.StrafeCommand () ) ; strafeTriggerRight . whileHeld ( new org.usfirst.frc.team5243.robot.commands.StrafeCommand () ) ; } 
public void translate ( org.jbox2d.common.Vec2 force , int milliseconds ) { int newX = ( ( int ) ( ( this . shape . getX () ) + ( ( force.x ) * milliseconds ) ) ) ; int newY = ( ( int ) ( ( this . shape . getY () ) + ( ( force.y ) * milliseconds ) ) ) ; this . shape . setLocation ( newX , newY ) ; } 
@ java.lang.Override protected void reset () { for ( int i = 0 ; i < ( animations.length ) ; i ++ ) { synchronized ( animations [ i ] ) { animations [ i ] . clear () ; } } super . reset () ; } 
@ java.lang.Override protected void onComplete ( retrofit2.Call < java.util.List < br.com.clairtonluz.moviemanagerapp.favorite.Favorite > > call , boolean success ) { super . onComplete ( call , success ) ; if ( movieList . isEmpty () ) { noContent . setVisibility ( View.VISIBLE ) ; mSwipeRefreshLayout . setVisibility ( View.GONE ) ; } else { noContent . setVisibility ( View.GONE ) ; mSwipeRefreshLayout . setVisibility ( View.VISIBLE ) ; } } 
protected void applyAfterConditionLogic ( com.moorkensam.xlra.dto.PriceCalculationDTO priceDTO ) { if ( ( priceDTO . getAdrSurchargeMinimum () . doubleValue () ) > ( priceDTO . getCalculatedAdrSurcharge () . doubleValue () ) ) { priceDTO . setResultingPriceSurcharge ( priceDTO . getAdrSurchargeMinimum () ) ; } else { priceDTO . setResultingPriceSurcharge ( priceDTO . getCalculatedAdrSurcharge () ) ; } } 
private void setPosition () { switch ( dir ) { case LEFT : position . setPosition ( bottomLeft . getX () , bottomLeft . getY () ) ; break; case RIGHT : position . setPosition ( ( ( topRight . getX () ) - ( region . getRegionWidth () ) ) , bottomLeft . getY () ) ; break; } } 
public void testDeadChatAccess () { shared.logic.Player ghost = addPlayer ( shared.logic.templates.BasicRoles . Ghost () ) ; shared.logic.Player maf = addPlayer ( shared.logic.templates.BasicRoles . Mafioso () ) ; shared.logic.Player cit = addPlayer ( shared.logic.templates.BasicRoles . Citizen () ) ; shared.logic.Player amn = addPlayer ( shared.logic.templates.BasicRoles . Amnesiac () ) ; lynch ( ghost , maf , cit , amn ) ; partialExcludes ( ghost . getChatKeys () , DeadChat.KEY ) ; } 
public void update ( cards.Card currentCard ) { locationString = "src\\gui\\images\\" ; locationString += currentCard . getImageFile () ; image = new javax.swing.ImageIcon ( locationString ) ; scaledImage = image . getImage () . getScaledInstance ( 240 , 300 , java.awt.Image.SCALE_DEFAULT ) ; cardImage = new javax.swing.ImageIcon ( scaledImage ) ; remove ( label ) ; label = new javax.swing.JLabel ( cardImage ) ; add ( label ) ; } 
private Todo.TextBuddy.CommandType getCommandType ( java.lang.String command ) { java.lang.String lowerCaseCommand = command . toLowerCase () ; switch ( lowerCaseCommand ) { case "add" : return Todo.TextBuddy.CommandType.ADD ; case "delete" : return Todo.TextBuddy.CommandType.DELETE ; case "display" : return Todo.TextBuddy.CommandType.DISPLAY ; case "clear" : return Todo.TextBuddy.CommandType.CLEAR ; case "exit" : return Todo.TextBuddy.CommandType.EXIT ; case "search" : return Todo.TextBuddy.CommandType.SEARCH ; case "sort" : return Todo.TextBuddy.CommandType.SORT ; } return null ; } 
public void setAdapter ( com.wiky.ui.adapter.PageAdapter adapter ) { mAdapter = adapter ; mCurrentFrame . removeAllViews () ; mCurrentFrame . setTag ( null ) ; mNextFrame . removeAllViews () ; mNextFrame . setTag ( null ) ; mPrevFrame . removeAllViews () ; mPrevFrame . setTag ( null ) ; mCurrentPos = 0 ; setDisplayView ( mCurrentFrame , 0 ) ; setDisplayView ( mNextFrame , 1 ) ; setDisplayView ( mPrevFrame , ( - 1 ) ) ; setOnTouchListener ( this ) ; } 
public java.lang.String getDateString () { java.text.SimpleDateFormat format = new java.text.SimpleDateFormat () ; format . applyPattern ( "MMMM yyyy" ) ; java.lang.String noDateStr = format . format ( date . getTime () ) ; int val = date . get ( java.util.Calendar.DAY_OF_MONTH ) ; return ( ( ( java.lang.String . format ( java.util.Locale . getDefault () , "%2d" , val ) ) + ( getDayOfMonthSuffix ( val ) ) ) + "\n" ) + noDateStr ; } 
@ java.lang.Override protected void onDraw ( android.graphics.Canvas canvas ) { super . onDraw ( canvas ) ; if ( ( nativeCanvasBitmap ) != null ) { java.lang.System.out . println ( ( "nativeCanvas being drawn " + ( nativeCanvasBitmap ) ) ) ; canvas . drawBitmap ( nativeCanvasBitmap , 100 , 100 , mPaint ) ; } } 
public java.lang.Integer put ( final java.lang.String key , final java.lang.Integer value ) { com.pdpmr.task0.mappers.KScorerMapper.WordStats.WordStatsModel model = modelMap . getOrDefault ( key , new com.pdpmr.task0.mappers.KScorerMapper.WordStats.WordStatsModel () ) ; int wordScore = ( model.wordScore ) + value ; int wordCount = ( model.wordCount ) + 1 ; model = new com.pdpmr.task0.mappers.KScorerMapper.WordStats.WordStatsModel ( wordScore , wordCount ) ; modelMap . put ( key , model ) ; return model . getMean () ; } 
@ java.lang.Override public void onDestroyView () { super . onDestroyView () ; android.util.Log . d ( "FRIEND FRAGMENT" , "OnDestroy" ) ; if ( ( VEL ) != null ) pcchatapp . child ( "user_friend" ) . child ( pcchatapp . getAuth () . getUid () ) . removeEventListener ( VEL ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/associate" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) @ org.springframework.web.bind.annotation.ResponseBody public com.whayer.wx.common.mvc.ResponseCondition associate ( @ org.springframework.web.bind.annotation.RequestBody java.lang.String [] ids , javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) { com.whayer.wx.product.controller.Product2RoleController.log . info ( "Product2RoleController.associate()" ) ; com.whayer.wx.common.mvc.Box box = loadNewBox ( request ) ; java.lang.String role = box . $p ( "role" ) ; if ( ( isNullOrEmpty ( ids ) ) || ( isNullOrEmpty ( role ) ) ) { getResponse ( X.FALSE ) ; } productService . associate ( role , ids ) ; return getResponse ( X.TRUE ) ; } 
public void setPivot ( double Joystick ) { if ( ( Joystick < 0 ) && ( ( MIN_SWITCH . get () ) == false ) ) { PIVOT_MOTOR . set ( Joystick ) ; } if ( ( Joystick > 0 ) && ( ( MAX_SWITCH . get () ) == false ) ) { PIVOT_MOTOR . set ( Joystick ) ; } } 
public final void enableCache () { this . enableValueCache = true ; if ( ( this . valueToIdCache ) == null ) this . valueToIdCache = new java.lang.ref.SoftReference <> ( new java.util.concurrent.ConcurrentHashMap () ) ; if ( ( this . idToValueCache ) == null ) this . idToValueCache = new java.lang.ref.SoftReference <> ( new java.lang.Object [ org.apache.kylin.dict.CacheDictionary . getSize () ] ) ; } 
@ org.junit.Test public void successfulHead ( ) throws java.lang.Exception { com.springernature.watermark.api.WatermarkApiIntegrationTest.LOG . info ( "Testing successfulHead" ) ; com.springernature.watermark.model.Book book = com.springernature.watermark.model.ModelTestUtil . createDummyBook () ; java.lang.Long id = postRequest ( book ) ; java.lang.Thread . yield () ; com.springernature.watermark.api.RequestEntity entity = com.springernature.watermark.api.RequestEntity . head ( new java.net.URI ( ( ( ( baseUrl ) + "/" ) + id ) ) ) . build () ; com.springernature.watermark.api.ResponseEntity < java.util.Map > response = this . testRestTemplate . exchange ( entity , java.util.Map . class ) ; assertEquals ( HttpStatus.CREATED , response . getStatusCode () ) ; } 
public void moveComponentInst ( com.stratelia.webactiv.beans.admin.DomainDriverManager ddManager , int spaceLocalId , int componentLocalId ) throws com.stratelia.webactiv.beans.admin.AdminException { try { com.stratelia.webactiv.beans.admin.ComponentInst componentInst = getComponentInst ( ddManager , componentLocalId , spaceLocalId ) ; ddManager . getOrganization () . instance . moveComponentInstance ( spaceLocalId , componentLocalId ) ; notifier . notifyEventOn ( org.silverpeas.notification.ResourceEvent.Type.DELETION , componentInst ) ; } catch ( java.lang.Exception e ) { throw new com.stratelia.webactiv.beans.admin.AdminException ( "ComponentInstManager.moveComponentInst" , org.silverpeas.util.exception.SilverpeasException.ERROR , "admin.EX_ERR_UPDATE_COMPONENT" , ( ( ( "spaceId= " + spaceLocalId ) + " componentId=" ) + componentLocalId ) , e ) ; } } 
public void setVelocityDirection ( float x , float y ) { com.badlogic.gdx.math.Vector2 newVelocity = new com.badlogic.gdx.math.Vector2 ( ( x - ( this . position . x ) ) , ( y - ( this . position . y ) ) ) ; newVelocity . nor () ; newVelocity . scl ( this . DEFAULT_VELOCITY ) ; this . setVelocity ( newVelocity.x , newVelocity.y ) ; java.lang.System.out . println ( ( ( ( "vX: " + ( newVelocity.x ) ) + " vY: " ) + ( newVelocity.y ) ) ) ; } 
private imp.lickgen.transformations.Transform learnByTrendDetection () { notate . adjustSelection () ; int start = notate . getCurrentSelectionStart () ; int stop = notate . getCurrentSelectionEnd () ; imp.data.MelodyPart outline = notate . getCurrentMelodyPart () ; imp.data.ChordPart chords = notate . getChordProg () ; imp.lickgen.transformations.Transform transform = transformLearning . createTrendTransform ( outline , original . copy () , chords , start , stop ) ; return transform ; } 
public static void EchoInput ( java.util.ArrayList < java.lang.String > options ) { java.lang.String output = "" ; for ( java.lang.String option : options ) { if ( option . equals ( "-h" ) ) { java.lang.System.out . println ( "Command syntax:\n\techo [-h] input\n\nPrints the specified input to the console." ) ; return; } else output += option + " " ; } java.lang.System.out . println ( output ) ; } 
@ java.lang.Override public void run () { if ( ( mOrientation ) == ( VERTICAL ) ) { ( ( com.taobao.weex.ui.view.WXScrollView ) ( getInnerView () ) ) . smoothScrollBy ( 0 , y ) ; } else { ( ( com.taobao.weex.ui.view.WXHorizontalScrollView ) ( getInnerView () ) ) . smoothScrollBy ( x , 0 ) ; } getInnerView () . invalidate () ; } 
@ java.lang.Override public void onChangeGUI ( java.lang.String tokens ) { if ( acceptChanges ) { if ( ( ( changeIndex ) >= 0 ) && ( ( changeIndex ) != ( ( changesList . size () ) - 1 ) ) ) { changesList . subList ( changeIndex , ( ( changesList . size () ) - 1 ) ) ; } changesList . add ( tokens ) ; changeIndex = ( changesList . size () ) - 1 ; } } 
public static void startImport ( java.lang.String docDir ) { java.io.File cRoot = new java.io.File ( docDir ) ; java.io.File [] files = cRoot . listFiles () ; for ( java.io.File f : files ) { query.Doc2Mysql . mapFile ( f ) ; if ( ( query.Doc2Mysql.docMap . size () ) > ( query.Doc2Mysql.INSERT_PER_BATCH ) ) { query.Doc2Mysql . writeDocs ( query.Doc2Mysql.docMap ) ; query.Doc2Mysql.docMap . clear () ; } } } 
public java.lang.Object [] decode ( vmm.IntSequence iseq ) { java.lang.Object [] res = new java.lang.String [ ( iseq . length () ) - 1 ] ; for ( int i = 1 ; i < ( iseq . length () ) ; i ++ ) { res [ i ] = getDecodedSymbol ( iseq . intAt ( i ) ) ; } return res ; } 
public void act () { if ( ( timer ) > 0 ) { ( timer ) -- ; if ( ( timer ) == 0 ) { ChangeMouseImage ( cImage , x , y ) ; } } else if ( Greenfoot . mousePressed ( getActor () ) ) { java.lang.System.out . println ( ( "Click Test: " + ( Greenfoot . mouseClicked ( getActor () ) ) ) ) ; play () ; timer = 2 ; } } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { this . parent . screen . addOption ( nameField . getText () , this . parent . screen . getParent () . getScreen ( ( ( java.lang.String ) ( screenField . getSelectedItem () ) ) ) ) ; model . fireTableStructureChanged () ; } 
public java.lang.String toString () { return ( ( ( ( ( ( ( ( ( ( getFingerprint () ) + "\t" ) + ( getCommonName () ) ) + "\t" ) + ( getOrganization () ) ) + "\t" ) + ( getValidFrom () ) ) + "\t" ) + ( getValidTo () ) ) + "\t" ) + ( ( theCertificate ) == null ? isValid () : isTrusted () ) ; } 
private java.lang.String getNewChequenumbers ( final org.egov.model.instrument.InstrumentHeader instrumentHeader , final java.lang.Integer department ) { if ( org.egov.egf.web.actions.payment.ChequeAssignmentAction.LOGGER . isDebugEnabled () ) org.egov.egf.web.actions.payment.ChequeAssignmentAction.LOGGER . debug ( "Starting getNewChequenumbers..." ) ; if ( org.egov.egf.web.actions.payment.ChequeAssignmentAction.LOGGER . isDebugEnabled () ) org.egov.egf.web.actions.payment.ChequeAssignmentAction.LOGGER . debug ( "Completed getNewChequenumbers." ) ; return chequeService . nextChequeNumber ( instrumentHeader . getBankAccountId () . getId () . toString () , 1 , department ) ; } 
@ java.lang.Override public void display ( javax.media.opengl.GLAutoDrawable gLDrawable ) { setGL ( gLDrawable ) ; drawScene () ; if ( ( ( org.geogebra.desktop.geogebra3D.euclidian3D.EuclidianView3DD ) ( view3D ) ) . hasPrinter () ) { if ( ( type ) == ( RendererType.SHADER ) ) { ( ( org.geogebra.desktop.geogebra3D.euclidian3D.EuclidianView3DD ) ( view3D ) ) . exportToPrinter3D () ; } } } 
@ java.lang.Override public void initObjects ( java.util.ArrayList < gui.components.Visible > viewObjects ) { initAllObjects ( viewObjects ) ; clickables = new java.util.ArrayList < gui.components.Clickable > () ; for ( gui.components.Visible v : viewObjects ) { if ( v instanceof gui.components.Clickable ) { clickables . add ( ( ( gui.components.Clickable ) ( v ) ) ) ; } } } 
public void checkAndForceLoginIfNecessary ( ) throws com.silicolife.textmining.core.interfaces.core.dataaccess.exception.DaemonException { java.util.Date now = new java.util.Date () ; java.util.Date interationServer = webClient . getLastOperationTime () ; long duration = ( now . getTime () ) - ( interationServer . getTime () ) ; long diffInMinutes = java.util.concurrent.TimeUnit.MILLISECONDS . toMinutes ( duration ) ; if ( ( diffInMinutes + 5 ) > ( com.silicolife.textmining.core.datastructures.dataaccess.daemon.webserviceclient.RestClient.sessiontimeout ) ) { try { com.silicolife.textmining.core.datastructures.dataaccess.daemon.implementation.DataAccessForceLogin . forceLogin () ; } catch ( com.silicolife.textmining.core.datastructures.dataaccess.database.dataaccess.implementation.exceptions.CredentialsAccessException e ) { throw new com.silicolife.textmining.core.interfaces.core.dataaccess.exception.DaemonException ( e ) ; } } } 
private org.eclipse.login.session.Session getSession ( java.lang.String csrfToken , java.lang.String sessionID ) { if ( csrfToken != null ) { org.eclipse.login.session.Session session = sessions . getIfPresent ( sessionID ) ; if ( ( session != null ) && ( session . getCSRFToken () . equals ( csrfToken ) ) ) { return session ; } } return null ; } 
private void generateBriefcase () { boolean briefcaseset = false ; while ( ! briefcaseset ) { int r = rand . nextInt ( 9 ) ; int s = rand . nextInt ( 9 ) ; if ( board . getTile ( r , s ) . isRoom () ) { board . getTile ( r , s ) . setBriefcase () ; java.lang.System.out . println ( ( ( ( "\nBriefcase placed at \n" + r ) + " " ) + s ) ) ; briefcaseset = true ; } } } 
@ java.lang.Override public void surfaceDestroyed ( android.view.SurfaceHolder holder ) { java.lang.System.out . println ( "Destroyed" ) ; if ( ( drawThread ) != null ) { boolean retry = true ; drawThread . setRunning ( false ) ; while ( retry ) { try { drawThread . join () ; retry = false ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } drawThread = null ; } } 
public boolean userExist ( int id ) { android.database.sqlite.SQLiteDatabase db = this . getReadableDatabase () ; android.database.Cursor res = db . rawQuery ( ( ( "select * from users where id = '" + id ) + "'" ) , null ) ; if ( ( res . getCount () ) > 0 ) return false ; return true ; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) @ java.lang.Override public final E peek () { final E [] buffer = consumerBuffer ; final long index = consumerIndex ; final long mask = consumerMask ; final long offset = org.jctools.queues.MpscGrowableArrayQueue . calcElementOffset ( index , mask ) ; final java.lang.Object e = org.jctools.queues.MpscGrowableArrayQueue . lvElement ( buffer , offset ) ; if ( null == e ) { return null ; } if ( e == ( org.jctools.queues.MpscGrowableArrayQueue.JUMP ) ) { return newBufferPeek ( getNextBuffer ( buffer , mask ) , index ) ; } return ( ( E ) ( e ) ) ; } 
public void render ( org.newdawn.slick.GameContainer gc , org.newdawn.slick.Graphics g ) { playerNameTextField . render ( gc , g ) ; playerNameTextField . setFocus ( true ) ; host . draw ( ( ( ( gc . getWidth () ) / 2 ) - 75 ) , ( ( ( gc . getHeight () ) / 2 ) + 80 ) ) ; playerNameTextField . setFocus ( true ) ; } 
public static void main ( java.lang.String [] args ) throws java.sql.SQLException { dao.BusinessRuleDAOImpl dao = new dao.BusinessRuleDAOImpl () ; java.util.ArrayList < domain.businessrule.BusinessRule > emptybusinessrules = dao . getEmptyUngeneratedBusinessRules () ; java.util.ArrayList < domain.businessrule.BusinessRule > businessrules = dao . getFilledBusinessRules ( emptybusinessrules ) ; for ( domain.businessrule.BusinessRule b : businessrules ) { b . getGeneratedRule () ; } } 
public int callQuery ( java.lang.String sql ) { int x = 0 ; try { dbmc = com.bsc.collect.remotedbaccess.DataBaseManagement . getInstance () ; con = ( ( com.mysql.jdbc.Connection ) ( dbmc . setConnetctionRemote () ) ) ; state = con . createStatement () ; x = state . executeUpdate ( sql ) ; java.lang.System.out . println ( sql ) ; } catch ( java.sql.SQLException ex ) { java.util.logging.Logger . getLogger ( com.bsc.collect.remotedbaccess.ProsedeurControlsRemote . class . getName () ) . log ( java.util.logging.Level.SEVERE , null , ex ) ; } return x ; } 
@ java.lang.Override public int onStartCommand ( android.content.Intent intent , int flags , int startId ) { UPDATE_INTERVAL = intent . getIntExtra ( "updateInterval" , 8 ) ; net.crowmaster.esmfamil.services.EventCheckerService.runnable = new java.lang.Runnable () { @ java.lang.Override public void run () { updateInfo () ; } } ; net.crowmaster.esmfamil.services.EventCheckerService.handler = new android.os.Handler () ; net.crowmaster.esmfamil.services.EventCheckerService.handler . post ( net.crowmaster.esmfamil.services.EventCheckerService.runnable ) ; return super . onStartCommand ( intent , flags , startId ) ; } 
@ java.lang.Override public void run () { web.MessageHolder . addHook ( this ) ; java.util.Scanner key = new java.util.Scanner ( java.lang.System.in ) ; while ( web.Chat.run ) { if ( key . hasNextLine () ) { java.lang.String input = ( ( myName ) + ": " ) + ( key . nextLine () ) ; web.MessageHolder . AddMessageToSend ( web.Message . MessageFactoryStringToB64 ( Message.typeEnum.Chat , input ) ) ; } } key . close () ; web.MessageHolder . removeHook ( this ) ; } 
public javax.swing.JMenuItem getJMenuItem ( java.lang.String commandName ) { jloda.gui.commands.ICommand command = getCommand ( commandName ) ; javax.swing.JMenuItem item = getJMenuItem ( command ) ; if ( ( item != null ) && ( command != null ) ) item . setEnabled ( command . isApplicable () ) ; return item ; } 
protected java.lang.String translateRegexp ( java.lang.String pattern ) throws org.exist.xquery.functions.fn.XPathException { try { final int xmlVersion = 11 ; final boolean ignoreWhitespace = false ; final boolean caseBlind = false ; pattern = org.exist.xquery.regex.JDK15RegexTranslator . translate ( pattern , xmlVersion , true , ignoreWhitespace , caseBlind ) ; } catch ( final org.exist.xquery.regex.RegexSyntaxException e ) { throw new org.exist.xquery.functions.fn.XPathException ( this , ( ( "Conversion from XPath2 to Java regular expression " + "syntax failed: " ) + ( e . getMessage () ) ) , e ) ; } return pattern ; } 
private void configureMediaPlayerSignalSound () { if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) com.hoymm.root.morsecodeconverter._5_FooterPanel.SoundButton.beepSound = new android.media.SoundPool.Builder () . setMaxStreams ( 1 ) . build () ; else com.hoymm.root.morsecodeconverter._5_FooterPanel.SoundButton.beepSound = new android.media.SoundPool ( 1 , android.media.AudioManager.STREAM_MUSIC , 1 ) ; com.hoymm.root.morsecodeconverter._5_FooterPanel.SoundButton.mSoundId = com.hoymm.root.morsecodeconverter._5_FooterPanel.SoundButton.beepSound . load ( getActivity () , R.raw.beep , 1 ) ; android.util.Log . i ( "BroadcastMorse" , " sound play" ) ; } 
private void setDefaultPreferences ( android.content.Context context ) { android.preference.PreferenceManager . setDefaultValues ( context , R.xml.general , false ) ; android.preference.PreferenceManager . setDefaultValues ( context , R.xml.help , false ) ; android.preference.PreferenceManager . setDefaultValues ( context , R.xml.logging , false ) ; android.preference.PreferenceManager . setDefaultValues ( context , R.xml.notification , false ) ; android.preference.PreferenceManager . setDefaultValues ( context , R.xml.advanced , false ) ; android.preference.PreferenceManager . setDefaultValues ( context , R.xml.widget , false ) ; } 
public static final java.lang.String toJSON ( com.perficient.aem.datalayer.api.DataLayer dataLayer ) { java.lang.String json = null ; com.google.gson.GsonBuilder builder = new com.google.gson.GsonBuilder () . setDateFormat ( DataLayerConstants.DATE_FORMAT ) ; if ( ( dataLayer . getConfig () . getPrettyPrint () ) == true ) { builder . setPrettyPrinting () ; } com.google.gson.Gson gson = builder . create () ; json = gson . toJson ( dataLayer ) ; return json ; } 
public void updateSettings () { btn_func_app = java.lang.System . getString ( mContext . getContentResolver () , com.cyanogenmod.settings.device.KeyHandler.BTN_FUNC_APP ) ; btn_func_app = btn_func_app . trim () ; btn_func_app2 = java.lang.System . getString ( mContext . getContentResolver () , com.cyanogenmod.settings.device.KeyHandler.BTN_FUNC_APP2 ) ; btn_func_app2 = btn_func_app2 . trim () ; } 
private org.eclipse.rdf4j.query.algebra.Var createVar ( java.lang.String varName ) { if ( ( projElems ) != null ) { org.eclipse.rdf4j.query.algebra.ProjectionElem projElem = projElems . get ( varName ) ; if ( projElem != null ) { org.eclipse.rdf4j.query.algebra.ExtensionElem extElem = projElem . getSourceExpression () ; if ( ( extElem != null ) && ( ( extElem . getExpr () ) instanceof org.eclipse.rdf4j.query.algebra.Var ) ) { projElem . setSourceExpression ( null ) ; } } } return new org.eclipse.rdf4j.query.algebra.Var ( varName ) ; } 
public synchronized void draw ( java.awt.Graphics g ) { if ( isPanelActive () ) { map . draw ( g , ( ( int ) ( viewport . getViewPosition () . getX () ) ) , ( ( int ) ( viewport . getViewPosition () . getY () ) ) , viewport . getSize () ) ; if ( grid ) { drawGrid ( g ) ; } drawCursor ( g , mouseX , mouseY ) ; } } 
private void notificationManager () { while ( ! ( mTerminateFlag ) ) { bleChangedCondition . await () ; while ( ! ( mNotifications . isEmpty () ) ) { android.bluetooth.BluetoothGattCharacteristic c = mNotifications . remove () ; c . setValue ( mNotificationValues . remove () ) ; java.lang.Runnable cb = mNotifyCB . get ( c . getUuid () ) ; if ( cb != null ) { cb . run () ; } } } } 
public void requireFeature ( java.lang.String name , java.lang.String range , boolean mandatory ) { if ( mandatory ) { org.apache.karaf.features.internal.resolver.ResourceUtils . addIdentityRequirement ( this , name , org.apache.karaf.features.internal.resolver.ResourceUtils.TYPE_FEATURE , range ) ; } else { org.apache.karaf.features.internal.resolver.ResourceImpl res = new org.apache.karaf.features.internal.resolver.ResourceImpl () ; org.apache.karaf.features.internal.resolver.ResourceUtils . addIdentityRequirement ( res , name , org.apache.karaf.features.internal.resolver.ResourceUtils.TYPE_FEATURE , range ) ; dependentFeatures . addAll ( res . getRequirements ( null ) ) ; } } 
public void restartGenerator () { support . setCancelEverything ( false ) ; myGenerator = null ; ListOfParameterSetIds = new java.util.ArrayList <> () ; ListOfParameterSetsToBeWritten = new java.util.ArrayList <> () ; myGenerator = new toe.generator ( ListOfParameterSetsToBeWritten , fileName , jLabelExportStatus , this , jTableParameterList ) ; myGenerator . start () ; support . waitForGeneratorAsynchronous ( myGenerator , this ) ; } 
@ java.lang.Override public void onDataPacket ( net.minecraft.network.NetworkManager networkManager , net.minecraft.network.play.server.S35PacketUpdateTileEntity packet ) { net.minecraft.nbt.NBTTagCompound data = packet . getNbtCompound () ; cursorX = java.lang.Math . min ( data . getInteger ( "cursorX" ) , 79 ) ; cursorY = java.lang.Math . min ( data . getInteger ( "cursorY" ) , 49 ) ; cursorMode = java.lang.Math . min ( java.lang.Math . abs ( data . getInteger ( "cursorMode" ) ) , 3 ) ; super . onDataPacket ( networkManager , packet ) ; } 
public void paintComponent ( java.awt.Graphics g ) { super . paintComponents ( g ) ; for ( Prey each : preys ) { each . display ( g ) ; } for ( Predator each : predators ) { each . display ( g ) ; } for ( Strawberry each : strawberries ) { each . display ( g ) ; } for ( Mushroom each : mushrooms ) { each . display ( g ) ; } } 
private static void initComp () { GUI.EstimationScreen.incidentData = new GUI.IncidentRateData () ; GUI.EstimationScreen.crashRateData = new GUI.CrashRateData () ; GUI.EstimationScreen.incidentSevData = new GUI.IncidentSeverityData () ; GUI.EstimationScreen.mainpanel . setPreferredSize ( new java.awt.Dimension ( 800 , 400 ) ) ; GUI.EstimationScreen.mainpanel . setLayout ( new javax.swing.BoxLayout ( GUI.EstimationScreen.mainpanel , javax.swing.BoxLayout.Y_AXIS ) ) ; GUI.EstimationScreen.mainpanel . add ( javax.swing.Box . createVerticalStrut ( 20 ) ) ; GUI.EstimationScreen.mainpanel . add ( GUI.EstimationScreen . getEstimationButtonPanel () ) ; GUI.EstimationScreen.mainpanel . add ( GUI.EstimationScreen . getSetupPanel () ) ; GUI.EstimationScreen.mainpanel . add ( GUI.EstimationScreen . getinfoTable () ) ; } 
public static java.util.Set < org.votingsystem.dto.currency.CurrencyDto > getWallet ( java.lang.String pin , org.votingsystem.AppVS context ) throws java.lang.Exception { byte [] walletBytes = org.votingsystem.util.Wallet . getWalletBytes ( pin , context ) ; if ( walletBytes == null ) return new java.util.HashSet <> () ; else return org.votingsystem.util.JSON . readValue ( walletBytes , new com.fasterxml.jackson.core.type.TypeReference < java.util.Set < org.votingsystem.dto.currency.CurrencyDto > > () {} ) ; } 
public void videoShow ( java.awt.image.BufferedImage img ) { try { java.awt.image.BufferedImage bufferedImage = client.VideoFrame . resize ( img , Cfg.frame_width , Cfg.frame_height ) ; label . setIcon ( new javax.swing.ImageIcon ( bufferedImage ) ) ; if ( ! ( frame . isVisible () ) ) { frame . pack () ; frame . setVisible ( true ) ; } } catch ( java.lang.Exception e ) { java.lang.System.err . println ( "Unable to video img." ) ; } } 
public static void main ( java.lang.String [] args ) { if ( ( args.length ) > 0 ) { if ( args [ 0 ] . equalsIgnoreCase ( "-gui" ) ) { diag.stn.GUI.GUIApp gui = new diag.stn.GUI.GUIApp () ; } else diag.stn.DiagSTN . readAndProcess ( args [ 0 ] ) ; } else { java.lang.String out = "" ; boolean ans ; do { ans = diag.stn.DiagSTN . runRandomGen () ; } while ( ans ) ; java.lang.System.out . println ( ( ( "Right answer found: " + out ) + "\n" ) ) ; } } 
private boolean mergeLiteralWordInNextRunningLength ( int lw , int pos , int wordPosition ) { int nextRLWPos = ( pos + lw ) + 1 ; if ( ( lw == wordPosition ) && ( nextRLWPos < ( this . buffer . sizeInWords () ) ) ) { int nextRl = com.googlecode.javaewah32.RunningLengthWord32 . getRunningLength ( this . buffer , nextRLWPos ) ; boolean nextRb = com.googlecode.javaewah32.RunningLengthWord32 . getRunningBit ( this . buffer , nextRLWPos ) ; return nextRb || ( nextRl == 0 ) ; } return false ; } 
@ cpw.mods.fml.relauncher.SideOnly ( value = cpw.mods.fml.relauncher.Side.CLIENT ) @ cpw.mods.fml.common.eventhandler.SubscribeEvent public void renderOverlay ( net.minecraftforge.client.event.RenderGameOverlayEvent.Post event ) { if ( ( event . isCanceled () ) || ( ( event.type ) != ( net.minecraftforge.client.event.RenderGameOverlayEvent.ElementType.EXPERIENCE ) ) ) return; if ( ( ( EventArmorTick.size ) != 0 ) && ( ! ( net.minecraft.client.Minecraft . getMinecraft () . thePlayer . capabilities . isCreativeMode ) ) ) { gui . drawArmor () ; } } 
public final void addToList ( final com.aero.control.helpers.PerApp.AppMonitor.AppContext context ) { if ( existsContext ( context ) ) { com.aero.control.helpers.PerApp.AppMonitor.AppLogger . print ( mClassName , ( ( "App: " + ( context . getAppName () ) ) + " already added." ) , 1 ) ; return; } mAppList . add ( context ) ; com.aero.control.helpers.PerApp.AppMonitor.AppLogger . print ( mClassName , ( ( "App: " + ( context . getAppName () ) ) + " successfully added!" ) , 1 ) ; } 
private static java.lang.Boolean rePush ( java.util.Date lastPushAt ) { try { java.util.Calendar cal = java.util.Calendar . getInstance () ; java.util.Date currentDate = new java.util.Date () ; cal . setTime ( lastPushAt ) ; cal . add ( java.util.Calendar.HOUR , java.lang.Integer . valueOf ( Config.RePushTaskToTwitter ) ) ; java.util.Date convertedDate = cal . getTime () ; return currentDate . before ( convertedDate ) ; } catch ( java.lang.Exception e ) { sociam.pybossa.TaskPerformer.logger . error ( ( "Error " + e ) ) ; return false ; } } 
@ java.lang.Override public void onItemSelected ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { com.example.inspired.inspiredvideo.app.MovieAdapter videoAdapter = ( ( com.example.inspired.inspiredvideo.app.MovieAdapter ) ( mRecyclerView . getAdapter () ) ) ; com.example.inspired.inspiredvideo.activities.Context . setmVideoItemsByGenre ( position ) ; currentGenre = position ; favouritesEnabled = false ; videoAdapter . updatemVideoItems ( Context.mCurrentData , favouritesEnabled ) ; } 
public void checkFirstRun () { boolean isFirstRun = getSharedPreferences ( "PREFERENCE" , software.snowball.loworbitircannon.MODE_PRIVATE ) . getBoolean ( "isFirstRun" , true ) ; isFirstRun = true ; if ( isFirstRun ) { showInputDialog () ; getSharedPreferences ( "PREFERENCE" , software.snowball.loworbitircannon.MODE_PRIVATE ) . edit () . putBoolean ( "isFirstRun" , false ) . apply () ; } } 
public void readFile ( java.io.File file ) { cssFile . ReadFile () ; root = cssFile . getTree () ; createTree ( root ) ; treePanel . updateTree () ; updateTitle ( cssFile . getName () ) ; rightPanel . setHeader ( cssFile . getName () ) ; codePanel . updatePanel ( cssFile ) ; saveAsItem . setEnabled ( true ) ; saveAsButton . setEnabled ( true ) ; } 
public boolean clearLogFiles () { try { _logFileDos . close () ; } catch ( java.io.IOException e ) { android.util.Log . e ( "BleLog" , "Error closing logfile" , e ) ; return false ; } java.io.File [] files = getLogFiles () ; for ( java.io.File file : files ) { if ( ! ( file . delete () ) ) { return false ; } } return true ; } 
private void addKeysAndOffsets ( ) throws java.io.IOException { map = new java.util.HashMap < K , java.lang.Long > () ; java.io.DataInput input = fileWithKeysAndOffsets ; fileWithKeysAndOffsets . seek ( 0 ) ; int size = input . readInt () ; maxOffset = input . readLong () ; for ( int i = 0 ; i < size ; i ++ ) { map . put ( serializerAndDeserializerForKey . deserialize ( input ) , serializerAndDeserializerForOffsets . deserialize ( input ) ) ; } } 
@ java.lang.Override public long roundKey ( long utcMillis ) { long timeLocal = utcMillis ; timeLocal = timeZone . convertUTCToLocal ( utcMillis ) ; long rounded = Rounding.Interval . roundValue ( Rounding.Interval . roundKey ( timeLocal , interval ) , interval ) ; return timeZone . convertLocalToUTC ( rounded , true ) ; } 
@ java.lang.Override public void close () { connected = false ; try { if ( ( objectInStream ) != null ) { objectInStream . close () ; objectInStream = null ; } if ( ( objectOutStream ) != null ) { objectOutStream . close () ; objectOutStream = null ; } if ( ( socket ) != null ) { socket . close () ; socket = null ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
@ java.lang.Override public void handle ( java.lang.String user , java.lang.String msg ) { java.lang.System.out . println ( "Check jobs Activity ..." ) ; com.samczsun.skype4j.Skype skype = com.epam.hackaton.bot.skype.BotSingleton . getSkypeInstance () ; java.lang.String resultOfChecking = getJobsResult () ; com.epam.hackaton.bot.skype.BotSingleton . informUser ( "Result" ) ; if ( com.epam.hackaton.bot.activities.wb.CheckJobsBackgroundActivity.UNSUCCESSFUL_RESULT . contains ( resultOfChecking ) ) { java.lang.System.out . println ( resultOfChecking ) ; } else { com.epam.hackaton.utilities.speech.SpeechUtils . speakMsg ( "Found!" ) ; com.epam.hackaton.bot.skype.BotUtils . sendMessage ( skype , "(monkey)" ) ; com.epam.hackaton.bot.skype.BotUtils . sendMessage ( skype , resultOfChecking ) ; } } 
@ java.lang.Override protected void addMOChildren () { org.opentravel.schemacompiler.model.TLResource tlObj = ( ( org.opentravel.schemacompiler.model.TLResource ) ( getTLModelObject () ) ) ; for ( org.opentravel.schemacompiler.model.TLParamGroup tlp : tlObj . getParamGroups () ) new org.opentravel.schemas.node.resources.ParamGroup ( tlp ) ; for ( org.opentravel.schemacompiler.model.TLAction action : tlObj . getActions () ) new org.opentravel.schemas.node.resources.ActionNode ( action ) ; for ( org.opentravel.schemacompiler.model.TLActionFacet af : tlObj . getActionFacets () ) new org.opentravel.schemas.node.resources.ActionFacet ( af ) ; } 
@ java.lang.Override public void setType ( java.lang.String newType ) { if ( ( newType == null ) || ( newType . equals ( type ) ) ) { java.lang.String oldType = type ; type = newType ; if ( eNotificationRequired () ) eNotify ( new org.eclipse.emf.ecore.impl.ENotificationImpl ( this , org.eclipse.emf.common.notify.Notification.SET , org.eclipse.january.geometry.GeometryPackage.SHAPE__TYPE , oldType , type ) ) ; } } 
public void increaseLevel () { ( currentLevel ) ++ ; java.awt.Point spawn ; if ( ( currentLevel ) >= 3 ) carsPerLevel = 2 ; for ( int i = 0 ; i < ( carsPerLevel ) ; i ++ ) { do { spawn = new java.awt.Point ( safeColumns [ getSafeColumnIndex () ] , rows [ getRowIndex () ] ) ; } while ( isValidParkingSpot ( spawn ) ) ; shoppingcartmadness.ParkingLot.parkedCars . add ( new shoppingcartmadness.ParkedCar ( spawn ) ) ; } } 
public void updateRooms ( java.util.List < nl.hs_hague.urbangame.model.Room > newlist , int group ) { listDataChild . get ( listDataHeader . get ( group ) ) . clear () ; listDataChild . get ( listDataHeader . get ( group ) ) . addAll ( newlist ) ; calculateDistance () ; this . notifyDataSetChanged () ; } 
@ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton v , boolean isChecked ) { no.glv.android.stdntworkflow.intrfc.StudentTask stdTask = ( ( no.glv.android.stdntworkflow.intrfc.StudentTask ) ( v . getTag () ) ) ; if ( ( stdTask . isHandedIn () ) == isChecked ) return; no.glv.android.stdntworkflow.core.DataHandler . GetInstance () . handInTask ( mTask , stdTask , isChecked ) ; } 
private static org.w3c.dom.Element createPoiNode ( org.w3c.dom.Document doc , test.abaturin.WikivoyagePOI poi ) { org.w3c.dom.Element node = doc . createElement ( "node" ) ; node . setAttribute ( "id" , test.abaturin.Main.nodeId . toString () ) ; node . setAttribute ( "visible" , "true" ) ; node . setAttribute ( "lat" , new java.lang.Float ( poi . getLatitude () ) . toString () ) ; node . setAttribute ( "lon" , new java.lang.Float ( poi . getLongitude () ) . toString () ) ; ( test.abaturin.Main.nodeId ) ++ ; return node ; } 
public boolean isSword ( org.bukkit.inventory.ItemStack item ) { return ( ( ( ( item . getType () ) == ( org.bukkit.Material.DIAMOND_SWORD ) ) || ( ( item . getType () ) == ( org.bukkit.Material.WOOD_SWORD ) ) ) || ( ( item . getType () ) == ( org.bukkit.Material.GOLD_SWORD ) ) ) || ( ( item . getType () ) == ( org.bukkit.Material.IRON_SWORD ) ) ; } 
private boolean verifyPacket ( byte [] request ) { marshallDemarshall.Deframer deframer = new marshallDemarshall.Deframer () ; object = deframer . deframer ( request ) ; if ( ( object ) instanceof frames.DownloadRequest ) { command = "downloadRequest" ; return true ; } else if ( ( object ) instanceof frames.UploadRequest ) { command = "uploadRequest" ; return true ; } else return false ; } 
protected java.lang.String getLongZone ( final double longitude ) { final double longZone ; if ( longitude < 0.0 ) { longZone = ( ( 180.0 + longitude ) / 6 ) + 1 ; } else { longZone = ( longitude / 6 ) + 31 ; } java.lang.String val = java.lang.String . valueOf ( ( ( int ) ( longZone ) ) ) ; if ( ( val . length () ) == 1 ) { val = "0" + val ; } return val ; } 
@ java.lang.Override public synchronized nl.bknopper.tspeademo.ea.CandidateSolution getCurrentBest ( boolean forceRetrieval ) throws java.lang.IllegalStateException { if ( forceRetrieval || ( isStillRunning () ) ) { nl.bknopper.tspeademo.ea.CandidateSolution currentBest = null ; for ( nl.bknopper.tspeademo.ea.AlgorithmRunner runner : runners ) { nl.bknopper.tspeademo.ea.CandidateSolution runnersBest = runner . getCurrentBest ( forceRetrieval ) ; if ( currentBest == null ) { currentBest = runnersBest ; } else if ( ( runnersBest . compareTo ( currentBest ) ) > 0 ) { currentBest = runnersBest ; } } return currentBest ; } throw new java.lang.IllegalStateException ( "No Algorithm running at this point in time. Please start one." ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_launch ) ; if ( false ) { android.content.Intent myIntent = new android.content.Intent ( this , com.mywallet.sirva.mywallet.Activity.MainActivity . class ) ; myIntent . setFlags ( ( ( android.content.Intent.FLAG_ACTIVITY_NEW_TASK ) | ( android.content.Intent.FLAG_ACTIVITY_CLEAR_TASK ) ) ) ; this . startActivity ( myIntent ) ; } else { android.content.Intent myIntent = new android.content.Intent ( this , com.mywallet.sirva.mywallet.Activity.LoginActivity . class ) ; myIntent . setFlags ( ( ( android.content.Intent.FLAG_ACTIVITY_NEW_TASK ) | ( android.content.Intent.FLAG_ACTIVITY_CLEAR_TASK ) ) ) ; this . startActivity ( myIntent ) ; } } 
@ java.lang.Override public void send () { com.subterranean_security.crimson.core.proto.Delta.EV_ProfileDelta pd = gather () ; if ( ( ( pd . getStrAttrCount () ) != 0 ) && ( ( pd . getGroupAttrCount () ) != 0 ) ) { ClientStore.Connections . route ( com.subterranean_security.crimson.core.proto.MSG.Message . newBuilder () . setSid ( Common.cvid ) . setRid ( param . getVID () ) . setEvProfileDelta ( pd ) ) ; } } 
@ java.lang.Override @ org.springframework.transaction.annotation.Transactional public java.util.List < java.lang.String > getAttendeeNamesViaEventId ( int eventId ) { java.lang.System.out . println ( "line 80 reached" ) ; java.util.List < calendar.model.Attendance > attendance = attendanceDAO . selectAttendancesByEventId ( eventId ) ; java.lang.System.out . println ( "line 82 reached" ) ; java.util.List < java.lang.String > nameList = new java.util.ArrayList < java.lang.String > () ; for ( calendar.model.Attendance a : attendance ) { calendar.model.Account account = accountService . selectAccountById ( a . getAccountId () ) ; java.lang.System.out . println ( "line 88 reached" ) ; nameList . add ( account . getAccountName () ) ; } return nameList ; } 
@ java.lang.Override public void onSuccess ( int statusCode , org.apache.http.Header [] headers , org.json.JSONObject response ) { com.codepath.instagram.InstagramCollection instagramCollection = new com.codepath.instagram.InstagramCollection ( response ) ; java.util.List < com.codepath.instagram.Instagram > instagrams = instagramCollection.instagrams ; adapter . clear () ; adapter . addAll ( instagramCollection.instagrams ) ; swipeContainer . setRefreshing ( false ) ; } 
@ java.lang.Override public void onCreate () { super . onCreate () ; mApplicationContext = getApplicationContext () ; new com.pixplicity.easyprefs.library.Prefs.Builder () . setContext ( mApplicationContext ) . setPrefsName ( getPackageName () ) . setMode ( com.hakerjack.crackthecodinginterview.MODE_PRIVATE ) . setUseDefaultSharedPreference ( true ) . build () ; boolean isFirstTime = com.pixplicity.easyprefs.library.Prefs . getBoolean ( SharedPrefsUtil.PREFS_KEY_IS_FIRST_TIME , true ) ; if ( isFirstTime ) { setUpDatabaseData () ; } else { android.util.Log . i ( "KJ" , "first time false" ) ; } } 
public void deleteLetter () { wordsandlearn.ua.wordsandlearn.LetterObject removeLetter = mWord . get ( ( ( mWordLength ) - 1 ) ) ; this . removeView ( findViewById ( removeLetter . getId () ) ) ; mWord . remove ( ( ( mWordLength ) - 1 ) ) ; setWordLength () ; } 
private java.lang.String parsePlayString ( org.json.simple.JSONObject play ) { java.lang.String value = ( ( java.lang.String ) ( play . get ( "value" ) ) ) ; org.json.simple.JSONArray positions = ( ( org.json.simple.JSONArray ) ( play . get ( "position" ) ) ) ; java.lang.String playString = ( java.lang.String . valueOf ( positions . get ( 0 ) ) ) + " " ; playString += ( java.lang.String . valueOf ( positions . get ( 1 ) ) ) + " " ; playString += value + "\n" ; return playString ; } 
@ java.lang.Override public void refreshPanel () { reloadOrder () ; orderLinePanel . refreshPanel () ; actionPanel . refreshPanel () ; documentPanel . refreshPanel () ; if ( ! ( hasLines () ) ) { infoProductPanel . resetValues () ; quantityPanel . resetPanel () ; } } 
private void sendMessageViaBluetooth ( java.lang.String message ) { if ( ( this . bluetoothService ) != null ) { if ( ( bluetoothService . getState () ) != ( BluetoothService.STATE_CONNECTED ) ) { android.widget.Toast . makeText ( this , "Remote device is not connected!" , Toast.LENGTH_SHORT ) . show () ; return; } if ( ( message . length () ) > 0 ) { byte [] send = message . getBytes () ; bluetoothService . write ( send ) ; } } } 
public javax.mail.internet.InternetAddress [] getGroup ( boolean strict ) throws javax.mail.internet.AddressException { java.lang.String addr = getAddress () ; if ( ! ( addr . endsWith ( ";" ) ) ) return null ; int ix = addr . indexOf ( ':' ) ; if ( ix < 0 ) return null ; java.lang.String list = addr . substring ( ( ix + 1 ) , ( ( addr . length () ) - 1 ) ) ; return javax.mail.internet.InternetAddress . parseHeader ( list , strict ) ; } 
@ java.lang.SuppressWarnings ( value = "rawtypes" ) @ java.lang.Override public void prepare ( java.util.Map conf , backtype.storm.task.TopologyContext context ) { this . componentInfo = new acromusashi.stream.hook.ComponentInfo ( context . getThisComponentId () , context . getThisTaskId () , context . getThisTaskIndex () ) ; int workerPort = context . getThisWorkerPort () ; int portAdjust = acromusashi.stream.hook.AmLogServerHook.DEFAULT_PORT_ADJUST ; if ( conf . containsKey ( "log.server.port.adjust" ) ) { portAdjust = java.lang.Integer . parseInt ( conf . get ( "log.server.port.adjust" ) . toString () ) ; } int serverPort = workerPort + portAdjust ; acromusashi.stream.hook.AmLogServerAdapter . getInstance () . init ( serverPort ) ; } 
@ java.lang.Override public void onConnected ( android.os.Bundle connectionHint ) { com.gcw.sapienza.places.services.LocationService.locationService = this ; android.util.Log . d ( com.gcw.sapienza.places.services.LocationService.TAG , "Connected to Google Api" ) ; android.location.Location currentLocation = com.gcw.sapienza.places.services.LocationService.fusedLocationProviderApi . getLastLocation ( com.gcw.sapienza.places.services.LocationService.googleApiClient ) ; if ( currentLocation != null ) { this . location = currentLocation ; queryParsewithLocation ( currentLocation ) ; updateApplication () ; } com.gcw.sapienza.places.services.LocationService.fusedLocationProviderApi . requestLocationUpdates ( com.gcw.sapienza.places.services.LocationService.googleApiClient , com.gcw.sapienza.places.services.LocationService.locationRequest , this ) ; } 
public void validateEmail () { edtEmail . setError ( null ) ; if ( ! ( edtEmail . hasFocus () ) ) { return; } checkEmail = com.kms.cura.utils.InputUtils . isEmailValid ( getEditTextText ( edtEmail ) ) ; if ( ! ( checkEmail ) ) { edtEmail . setError ( getResources () . getString ( R.string.EmailError ) ) ; } } 
@ org.mustbe.consulo.RequiredDispatchThread private void updateSecondComponent ( @ org.jetbrains.annotations.Nullable org.consulo.module.extension.MutableModuleExtension < ? > extension ) { javax.swing.JComponent secondComponent = mySplitter . getSecondComponent () ; if ( secondComponent instanceof com.intellij.openapi.Disposable ) { com.intellij.openapi.util.Disposer . dispose ( ( ( com.intellij.openapi.Disposable ) ( secondComponent ) ) ) ; } if ( ( extension == null ) || ( ! ( extension . isEnabled () ) ) ) { mySplitter . setSecondComponent ( null ) ; } else { mySplitter . setSecondComponent ( createConfigurationPanel ( extension ) ) ; } } 
@ org.junit.Test public void testJars ( ) throws java.lang.Exception { final net.mountainblade.modular.impl.DefaultModuleManager manager = new net.mountainblade.modular.impl.DefaultModuleManager () ; final java.net.URL resource = getDemoJar () ; final java.util.Collection < net.mountainblade.modular.Module > modules = manager . loadModules ( resource . toURI () , net.mountainblade.modular.PathHelper . near ( net.mountainblade.modular.Module . class ) ) ; org.junit.Assert . assertEquals ( 1 , modules . size () ) ; manager . shutdown () ; } 
@ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { timelogger.mprtcz.com.timelogger.activities.SettingsListActivity.Language language = languages [ position ] ; loadChosenLanguage ( language . getLocale () ) ; android.util.Log . d ( timelogger.mprtcz.com.timelogger.activities.SettingsListActivity.TAG , ( "language : " + ( language . getLocale () ) ) ) ; saveLanguage ( language . getLocale () . getCountry () . toLowerCase () ) ; finish () ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/sample2" ) public java.lang.String sample2 ( org.springframework.ui.Model model , javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response , javax.servlet.ServletContext servletContext ) { java.lang.System.out . println ( "Detectada peticion para ir a sample2" ) ; java.util.List < es.unizar.es.foodnet.model.entity.Producto > productos = repository . findAll () ; model . addAttribute ( "listica" , productos ) ; model . addAttribute ( "producttype" , "new" ) ; model . addAttribute ( "productObject" , new es.unizar.es.foodnet.model.entity.Producto () ) ; return "sample2" ; } 
@ org.junit.Test public void acceptNothingAfterProvidedDependency ( ) throws java.lang.Exception { final org.commonjava.maven.atlas.graph.rel.DependencyRelationship dep = new org.commonjava.maven.atlas.graph.rel.DependencyRelationship ( from , root , new org.commonjava.maven.atlas.ident.ref.ArtifactRef ( src , "jar" , null , false ) , org.commonjava.maven.atlas.ident.DependencyScope.provided , 0 , false ) ; final org.commonjava.maven.atlas.graph.filter.ProjectRelationshipFilter child = filter . getChildFilter ( dep ) ; org.commonjava.maven.cartographer.testutil.PresetAssertions . assertConcreteAcceptance ( child , from , src , tgt , new java.util.HashSet < org.commonjava.maven.atlas.ident.DependencyScope > () , org.commonjava.maven.atlas.graph.rel.RelationshipType.BOM , org.commonjava.maven.atlas.graph.rel.RelationshipType.PARENT ) ; org.commonjava.maven.cartographer.testutil.PresetAssertions . assertRejectsAllManaged ( child , from , src , tgt ) ; } 
private void checkYesOrNo ( int i ) { if ( yes_chk . get ( i ) . toString () . equals ( "yes" ) ) { y . setChecked ( true ) ; } else if ( no_chk . get ( i ) . toString () . equals ( "no" ) ) { n . setChecked ( true ) ; } } 
public void grayscale () { for ( int x = 0 ; x < ( editor.ImageEditor.width ) ; x ++ ) { for ( int y = 0 ; y < ( editor.ImageEditor.height ) ; y ++ ) { editor.ImageEditor.image [ x ] [ y ] . grayscale () ; } } } 
public void processGetInput ( alien4cloud.model.application.DeploymentSetup deploymentSetup , alien4cloud.model.topology.Topology topology ) { for ( alien4cloud.model.topology.NodeTemplate nodeTemplate : topology . getNodeTemplates () . values () ) { processGetInput ( deploymentSetup . getInputProperties () , nodeTemplate . getProperties () ) ; for ( alien4cloud.model.topology.RelationshipTemplate relationshipTemplate : nodeTemplate . getRelationships () . values () ) { processGetInput ( deploymentSetup . getInputProperties () , relationshipTemplate . getProperties () ) ; } } } 
public static java.io.File getRootFolder () { final java.lang.String fileName = games.strategy.engine.framework.GameRunner2 . getGameRunnerFileLocation ( "GameRunner2.class" ) ; final java.lang.String tripleaJarName = "triplea.jar!" ; if ( ( fileName . indexOf ( tripleaJarName ) ) != ( - 1 ) ) { return games.strategy.engine.framework.GameRunner2 . getRootFolderRelativeToJar ( fileName , tripleaJarName ) ; } final java.lang.String tripleaJarNameWithEngineVersion = games.strategy.engine.framework.GameRunner2 . getTripleaJarWithEngineVersionStringPath () ; if ( ( fileName . indexOf ( tripleaJarNameWithEngineVersion ) ) != ( - 1 ) ) { return games.strategy.engine.framework.GameRunner2 . getRootFolderRelativeToJar ( fileName , tripleaJarNameWithEngineVersion ) ; } return games.strategy.engine.framework.GameRunner2 . getRootRelativeToClassFile ( fileName ) ; } 
public okhttp3.OkHttpClient getOkHttpClient () { if ( ( okHttpClient ) == null ) { okhttp3.OkHttpClient.Builder okHttpClientBuilder = new okhttp3.OkHttpClient.Builder () . addNetworkInterceptor ( new com.tvdbRestClient.utils.TvdbInterceptor () ) . authenticator ( new com.tvdbRestClient.utils.TvdbAuthenticator ( this ) ) ; okHttpClient = okHttpClientBuilder . build () ; } return okHttpClient ; } 
@ java.lang.Override public javax.mail.PasswordAuthentication getPasswordAuthentication () { if ( ( ( this . username ) != "" ) && ( ( this . password ) != "" ) ) { return new javax.mail.PasswordAuthentication ( username , password ) ; } else { return super . getPasswordAuthentication () ; } } 
@ java.lang.Override public void configure ( org.kohsuke.stapler.StaplerRequest req , net.sf.json.JSONObject formData ) throws Descriptor.FormException , java.io.IOException , javax.servlet.ServletException { reuseSauceAuth = formData . getBoolean ( "reuseSauceAuth" ) ; disableStatusColumn = formData . getBoolean ( "disableStatusColumn" ) ; username = formData . getString ( "username" ) ; apiKey = hudson.util.Secret . fromString ( formData . getString ( "apiKey" ) ) ; sauceConnectDirectory = formData . getString ( "sauceConnectDirectory" ) ; sauceConnectOptions = formData . getString ( "sauceConnectOptions" ) ; environmentVariablePrefix = formData . getString ( "environmentVariablePrefix" ) ; save () ; } 
@ java.lang.Override public void finish () { android.util.Log . d ( io.sargent.chatrooms.ChatActivity.TAG , "finish()" ) ; mSocket . emit ( "disconnect" , "{}" ) ; mSocket . disconnect () ; mSocket . off ( Socket.EVENT_ERROR , onError ) ; mSocket . off ( Socket.EVENT_CONNECT_ERROR , onConnectError ) ; mSocket . off ( Socket.EVENT_CONNECT_TIMEOUT , onConnectError ) ; mSocket . off ( Socket.EVENT_RECONNECT_ATTEMPT , onReconnectAttempt ) ; mSocket . off ( "message" , onMessageRecieved ) ; super . finish () ; } 
private synchronized void printAllEvents () { for ( java.util.concurrent.ConcurrentHashMap < java.lang.String , org.openhab.io.caldav.CalDavEvent > map : this . eventCache . values () ) { org.openhab.io.caldav.internal.CalDavLoaderImpl.LOG . trace ( ( ( "------------ list " + ( map . size () ) ) + " -------------" ) ) ; for ( org.openhab.io.caldav.CalDavEvent event : map . values () ) { org.openhab.io.caldav.internal.CalDavLoaderImpl.LOG . info ( event . getShortName () ) ; } org.openhab.io.caldav.internal.CalDavLoaderImpl.LOG . trace ( "------------ list end ---------" ) ; } } 
@ java.lang.Override public void processCommand ( net.minecraft.command.ICommandSender icommandsender , java.lang.String [] astring ) { if ( ( astring.length ) == 0 ) { return; } if ( icommandsender instanceof net.minecraft.entity.player.EntityPlayerMP ) { net.minecraft.entity.player.EntityPlayerMP player = ( ( net.minecraft.entity.player.EntityPlayerMP ) ( icommandsender ) ) ; com.gildedgames.util.testutil.instances.DefaultHandler handler = com.gildedgames.util.testutil.TestCore . locate () . getHandler () ; com.gildedgames.util.testutil.instances.DefaultInstance inst = handler . get ( astring [ 0 ] ) ; handler . teleportToInst ( player , inst ) ; } } 
@ java.lang.Override public boolean add ( toberumono.namelist.parser.NamelistValue < T > value ) { java.lang.String v = value . type () . stringValue ( value . value () ) ; if ( ( v . length () ) > ( valueWidth ) ) valueWidth = v . length () ; return super . add ( value ) ; } 
private java.lang.StringBuffer getWriteBuffer ( java.lang.Object reflectModel , cn.ytxu.http_wrapper.template_engine.parser.statement.record.retain.RetainModel retain , java.util.List < cn.ytxu.http_wrapper.template.expression.ExpressionRecord > records ) { java.lang.StringBuffer buffer = new java.lang.StringBuffer () ; for ( cn.ytxu.http_wrapper.template.expression.ExpressionRecord record : records ) { try { buffer . append ( record . getWriteBuffer ( reflectModel , retain ) ) ; } catch ( java.lang.StringIndexOutOfBoundsException e ) { e . printStackTrace () ; } } return buffer ; } 
private java.lang.reflect.Field field0 ( java.lang.String name ) throws org.joor.ReflectException { java.lang.Class < ? > type = type () ; try { return type . getField ( name ) ; } catch ( java.lang.NoSuchFieldException e ) { do { try { return org.joor.Reflect . accessible ( type . getDeclaredField ( name ) ) ; } catch ( java.lang.NoSuchFieldException ignore ) {} type = type . getSuperclass () ; } while ( type != null ) ; throw new org.joor.ReflectException ( e ) ; } } 
public void processResult ( com.google.android.gms.games.multiplayer.turnbased.TurnBasedMultiplayer.InitiateMatchResult result ) { mMatch = result . getMatch () ; mAppContext . addListenerForMatchUpdates ( this , mMatch . getMatchId () ) ; if ( ! ( checkStatusCode ( mMatch , result . getStatus () . getStatusCode () ) ) ) { return; } handleMatchStart () ; } 
public boolean successTest ( fr.polytech.ressources.Charact source ) { boolean successTest = false ; switch ( this . assocStat ) { case 0 : successTest = source . getAbilityScores () . abilityTestStrength () ; case 1 : successTest = source . getAbilityScores () . abilityTestDexterity () ; case 2 : successTest = source . getAbilityScores () . abilityTestIntel () ; } this . success = successTest ; return successTest ; } 
@ java.lang.Override public mage.Mana getMana ( mage.game.Game game , mage.abilities.Ability source ) { mage.Mana mana = null ; if ( condition . apply ( game , source ) ) { mana = effect . getMana () ; } else if ( ( otherwiseEffect ) != null ) { mana = otherwiseEffect . getMana () ; } if ( mana != null ) { checkToFirePossibleEvents ( mana , game , source ) ; } return mana ; } 
@ java.lang.Override public boolean equal ( php.runtime.Memory memory ) { switch ( memory.type ) { case INT : return ( ( ( php.runtime.memory.LongMemory ) ( memory ) ) . value ) == ( value ) ; case DOUBLE : return ( ( ( php.runtime.memory.DoubleMemory ) ( memory ) ) . value ) == ( value ) ; case STRING : return equal ( memory . toNumeric () ) ; case REFERENCE : return equal ( memory . toValue () ) ; default: return ( value ) == ( toLong () ) ; } } 
public static double stateScore ( client.State state , client.Move move ) { double ret = 0 ; client.Cell [] myCell = client.AI.game . getMap () . getMyCells () ; for ( int i = 0 ; i < ( myCell.length ) ; i ++ ) if ( ( client.AI . cellState ( myCell [ i ] ) . compareTo ( state ) ) == 0 ) {} return ret ; } 
private void deleteDirectory ( java.io.File path ) { assert path . isDirectory () ; java.io.File [] files = path . listFiles () ; for ( java.io.File child : files ) { if ( child . isDirectory () ) { deleteDirectory ( child ) ; } else { child . delete () ; } } path . delete () ; } 
@ org.junit.Test public void testAdjacency_0 () { test.BoardCell cell = intBoard . getCell ( 0 , 0 ) ; java.util.Map < test.BoardCell , java.util.Set < test.BoardCell > > map = intBoard . getAdjList () ; java.util.Set < test.BoardCell > testList = map . get ( cell ) ; assertTrue ( testList . contains ( intBoard . getCell ( 0 , 0 ) ) ) ; assertTrue ( testList . contains ( intBoard . getCell ( 3 , 3 ) ) ) ; assertEquals ( 2 , testList . size () ) ; } 
@ java.lang.Override public void onTimeSet ( android.widget.TimePicker view , int hour , int minute ) { c = java.util.Calendar . getInstance () ; c . set ( java.util.Calendar.HOUR_OF_DAY , hour ) ; c . set ( java.util.Calendar.MINUTE , minute ) ; java.text.SimpleDateFormat dateFormat = new java.text.SimpleDateFormat ( "hh:mm a" ) ; btnFragTime . setText ( dateFormat . format ( c . getTime () ) ) ; } 
@ java.lang.Override public void onPageSelected ( int position ) { andrzej.example.com.wordunscrambler.config.TabsConfig.CURRENT_TAB_NUM = position ; android.util.Log . e ( null , "onPageSelected called" ) ; switch ( position ) { case 0 : ( ( android.support.v7.app.AppCompatActivity ) ( getActivity () ) ) . getSupportActionBar () . setTitle ( R.string.unscrambler ) ; break; case 1 : ( ( android.support.v7.app.AppCompatActivity ) ( getActivity () ) ) . getSupportActionBar () . setTitle ( R.string.dictionaries ) ; break; } } 
private void generate ( int k ) { int i = 0 ; int maxSum ; int maxMul ; do { maxSum = k ; maxMul = 1 ; do { i ++ ; maxSum ++ ; maxMul = ( ( int ) ( java.lang.Math . pow ( 2 , i ) ) ) ; } while ( maxSum > maxMul ) ; } while ( ! ( redistribute ( k , i , i , k , 1 , k ) ) ) ; } 
private void setupToolbar () { setSupportActionBar ( mToolbar ) ; android.support.v7.app.ActionBar actionBar = getSupportActionBar () ; if ( actionBar != null ) { com.softdesign.school.utils.Lg . i ( TAG , "action bar creation" ) ; actionBar . setHomeAsUpIndicator ( R.drawable.ic_menu_24dp ) ; actionBar . setDisplayHomeAsUpEnabled ( true ) ; } android.support.v4.view.ViewCompat . setTransitionName ( findViewById ( R.id.app_bar_layout ) , com.softdesign.school.ui.activities.MainActivity.EXTRA_IMAGE ) ; mCollapsingToolbarLayout = ( ( android.support.design.widget.CollapsingToolbarLayout ) ( findViewById ( R.id.collapsing_toolbar ) ) ) ; mCollapsingToolbarLayout . setExpandedTitleColor ( getResources () . getColor ( android.R.color.transparent ) ) ; } 
public void reset () { x = 0 ; y = 0 ; modelRep = new boolean [ [ size ] [ size ] ; modelRep [ yBathToModelRep ( 0 ) ] [ xBathToModelRep ( 0 ) ] = true ; if ( ( modelUpdateListener ) != null ) modelUpdateListener . update () ; currentRadius = 5 ; } 
private void playGame () { for ( int round = 0 ; round < ( N_SCORING_CATEGORIES ) ; round ++ ) { for ( int playerNumber = 1 ; playerNumber <= ( nPlayers ) ; playerNumber ++ ) { firstRoll ( playerNumber ) ; display . waitForPlayerToSelectDice () ; nextTwoRoll ( playerNumber ) ; selectedCategory ( playerNumber ) ; } } } 
@ java.lang.Override public void increase ( java.lang.String apiKey ) throws com.exercise.hotels.auth.RateLimitExceededException { long currMillis = java.lang.System . currentTimeMillis () ; checkSuspended ( apiKey , currMillis ) ; java.util.concurrent.atomic.AtomicLong newRequests = new java.util.concurrent.atomic.AtomicLong ( 0 ) ; java.util.concurrent.atomic.AtomicLong requests = requestForAPIKey . putIfAbsent ( new com.exercise.hotels.auth.InMemoryRateLimitHandler.APIKeyTimeWindow ( apiKey , currMillis ) , newRequests ) ; if ( requests == null ) { requests = newRequests ; cleanExpiredAPIKeyTimeWindows () ; } long currentRequests = requests . incrementAndGet () ; suspendIfRateLimitExceeded ( apiKey , currMillis , currentRequests ) ; } 
@ java.lang.Override public void onRequestPermissionsResult ( int requestCode , @ android.support.annotation.NonNull java.lang.String [] permissions , @ android.support.annotation.NonNull int [] grantResults ) { java.lang.System.out . println ( "PERMISSIONS ??? " ) ; java.lang.System.out . println ( requestCode ) ; switch ( requestCode ) { case com.fiuba.tdp.linkup.services.LocationManager.PERMISSIONS_REQUEST_ACCESS_FINE_LOCATION : { if ( ( ( grantResults.length ) > 0 ) && ( ( grantResults [ 0 ] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { java.lang.System.out . println ( "PERMISSIONS GRANTED 2" ) ; locationManager . getDeviceLocation ( this ) ; } } } } 
@ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { android.content.Intent intent = new android.content.Intent ( getActivity () , hummingbird.android.mobile_app.views.activities.AnimeActivity . class ) ; hummingbird.android.mobile_app.models.LibraryEntry entry = ( ( hummingbird.android.mobile_app.models.LibraryEntry ) ( list_view . getItemAtPosition ( position ) ) ) ; intent . putExtra ( "id" , entry.anime.id ) ; intent . putExtra ( "isLibraryEntry" , true ) ; intent . putExtra ( "LibraryEntry" , new hummingbird.android.mobile_app.models.LibraryEntry () ) ; startActivity ( intent ) ; } 
@ java.lang.Override public boolean softMatch ( net.minecraft.item.ItemStack stack ) { if ( stack == null ) { return false ; } for ( int ID : net.minecraftforge.oredict.OreDictionary . getOreIDs ( stack ) ) { if ( ( net.minecraftforge.oredict.OreDictionary . getOreName ( ID ) ) == ( oreDict ) ) { return true ; } } return false ; } 
protected void gitPush ( final java.lang.String branchName , boolean pushTags ) throws org.apache.maven.plugin.MojoFailureException , org.codehaus.plexus.util.cli.CommandLineException { getLog () . info ( ( ( ( ( ( "Pushing '" + branchName ) + "' branch" ) + " to '" ) + ( gitFlowConfig . getOrigin () ) ) + "'." ) ) ; if ( pushTags ) { executeGitCommand ( "push" , "--quiet" , "--tags" , gitFlowConfig . getOrigin () , branchName ) ; } else { executeGitCommand ( "push --quiet" , gitFlowConfig . getOrigin () , branchName ) ; } } 
@ java.lang.Override public void onSuccess ( java.util.List < java.lang.Object > list , boolean isLoadMore ) { srGankDay . setRefreshing ( false ) ; if ( ! isLoadMore ) { gankDayList . clear () ; } gankDayList . addAll ( list ) ; rvGankDay . getAdapter () . notifyDataSetChanged () ; rvGankDay . loadMoreComplete ( false ) ; } 
public void addCarsToRace ( int carID ) { timber.log.Timber . e ( "Connecting Car %s to current Race %s" , carID , RaceID ) ; db.Config config = new db.Config ( null , null , null , carID ) ; long configID = daoFactory . getDao ( DaoTypes.CONFIG ) . insert ( config ) ; timber.log.Timber . e ( "Created Config with ID: %s" , configID ) ; db.Lap lap = new db.Lap ( null , null , 1 , RaceID , configID ) ; long lapID = daoFactory . getDao ( DaoTypes.LAP ) . insert ( lap ) ; timber.log.Timber . e ( "Created Lap with ID: %s" , lapID ) ; } 
public void axisdrive ( double x , double y , double r ) { FL . set ( ( ( ( - y ) + x ) + r ) ) ; FR . set ( ( ( y + x ) + r ) ) ; BL . set ( ( ( ( - y ) - x ) + r ) ) ; BR . set ( ( ( y - y ) + r ) ) ; } 
@ java.lang.Override public nl.tudelft.ti2806.riverrush.domain.event.Event deserialize ( final java.util.Map < java.lang.String , java.lang.String > keyValuePairs ) { if ( keyValuePairs . containsKey ( "location" ) ) { this . location = nl.tudelft.ti2806.riverrush.domain.event.Direction . valueOf ( keyValuePairs . get ( "location" ) . toUpperCase () ) ; } else { throw new nl.tudelft.ti2806.riverrush.network.protocol.InvalidProtocolException ( "Does not contain all the keys" ) ; } return this ; } 
public static org.biojava.nbio.structure.Atom [] cyclicSorter ( org.biojava.nbio.structure.Structure structure ) { java.util.List < org.biojava.nbio.structure.Atom [] > chainAtoms = new java.util.ArrayList < org.biojava.nbio.structure.Atom [] > () ; for ( org.biojava.nbio.structure.Chain c : structure . getChains () ) { org.biojava.nbio.structure.Atom [] atoms = org.biojava.nbio.structure.StructureTools . getRepresentativeAtomArray ( c ) ; chainAtoms . add ( atoms ) ; } return org.biojava.nbio.structure.align.symm.ChainSorter . cyclicSorter ( chainAtoms ) ; } 
public boolean check ( edu.gemini.spModel.config2.Config config , edu.gemini.p2checker.rules.gmos.ObservationElements elems ) { edu.gemini.p2checker.rules.gmos.GmosCommonType.FPUnit fpu = edu.gemini.p2checker.rules.gmos.GmosRule . getFPU ( config ) ; if ( fpu == null ) return false ; if ( ( elems . getInstrument () ) instanceof edu.gemini.p2checker.rules.gmos.InstGmosSouth ) { _message = MESSAGE_SOUTH ; } else { _message = MESSAGE_NORTH ; } return ! ( fpu . isNS () ) ; } 
public void paint ( java.awt.Graphics g ) { java.awt.Image offImage = createImage ( this . getWidth () , this . getHeight () ) ; java.awt.Graphics buffer = offImage . getGraphics () ; world . paintOffScreen ( buffer ) ; g . drawImage ( offImage , 3 , 37 , null ) ; } 
public java.lang.String duplicateOrder ( fr.mgs.model.order.Order order ) throws java.sql.SQLException { newOrder = new fr.mgs.model.order.Order () ; if ( orderManager . hasNotValidatedOrder ( userId ) ) { java.util.List < fr.mgs.model.order.Order > orderList = ( ( java.util.List < fr.mgs.model.order.Order > ) ( orderManager . findNotValidatedOrder ( userId ) ) ) ; dupOrder = orderList . get ( 0 ) ; } orderController . clearStoreItems () ; updateNewOrder ( order ) ; updateCart () ; return "pretty:cstOrder" ; } 
public void setActivePanel ( javax.swing.JPanel panel ) { prevPanel = activePanel ; if ( ( activePanel ) != null ) { getContentPane () . remove ( activePanel ) ; } getContentPane () . add ( panel , java.awt.BorderLayout.CENTER ) ; activePanel = panel ; pack () ; repaint () ; } 
protected boolean startNewBlockAnalysis ( final org.sosy_lab.cpachecker.cpa.arg.ARGState pState , final org.sosy_lab.cpachecker.cfa.model.CFANode node , final org.sosy_lab.cpachecker.cpa.bam.BAMPrecision prec ) { boolean result = ( partitioning . isCallNode ( node ) ) && ( ! ( partitioning . getBlockForCallNode ( node ) . equals ( ( stack . isEmpty () ? null : stack . peek () . getThird () ) ) ) ) ; if ( result ) { if ( prec . shouldBeSkipped ( node ) ) { return false ; } } return result ; } 
public static void restore ( java.lang.String id , models.datatable.BackupDataTable.Type type ) { com.emc.vipr.model.sys.backup.BackupRestoreStatus status = util.BackupUtils . getRestoreStatus ( id , ( type == ( models.datatable.BackupDataTable.Type.LOCAL ) ) ) ; renderArgs . put ( "status" , status ) ; renderArgs . put ( "id" , id ) ; renderArgs . put ( "type" , type ) ; if ( type == ( models.datatable.BackupDataTable.Type.REMOTE ) ) { util.BackupUtils . pullBackup ( id ) ; } render () ; } 
public java.lang.String getContentByCharPos ( int docId , java.lang.String fieldName , int startAtChar , int endAtChar ) { if ( ! ( contentStores . exists ( fieldName ) ) ) { org.apache.lucene.document.Document d = document ( docId ) ; return d . get ( fieldName ) . substring ( startAtChar , endAtChar ) ; } return contentStores . getSubstrings ( fieldName , docId , new int [] { startAtChar } , new int [] { endAtChar } ) [ 0 ] ; } 
@ java.lang.Override public void onActivityCreated ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { setHasOptionsMenu ( true ) ; if ( ( savedInstanceState != null ) && ( savedInstanceState . containsKey ( "key" ) ) ) { movieList = savedInstanceState . getParcelableArrayList ( "key" ) ; hasData = true ; android.util.Log . wtf ( "foobar" , "set hasData to true" ) ; } super . onActivityCreated ( savedInstanceState ) ; } 
public void run () { try { javax.net.ssl.SSLSocket socket = com.booboot.vndbandroid.api.SocketPool . getSocket ( socketIndex ) ; if ( ( socket != null ) && ( ! ( socket . isClosed () ) ) ) { socket . getInputStream () . close () ; socket . getOutputStream () . close () ; socket . close () ; } com.booboot.vndbandroid.api.SocketPool . setSocket ( socketIndex , null ) ; } catch ( java.io.IOException ioe ) { ioe . printStackTrace () ; } } 
@ java.lang.Override protected void onResume () { savedSearchString = com.logan19gp.flickrviewer.MainApplication . loadFromPrefs ( com.logan19gp.flickrviewer.SearchActivity.SEARCH_STR , "" ) ; if ( ( savedSearchString . length () ) > 0 ) { pageOnView = com.logan19gp.flickrviewer.MainApplication . loadFromPrefsInt ( com.logan19gp.flickrviewer.SearchActivity.PAGE_ON_VIEW , 1 ) ; showSearchResult ( savedSearchString , pageOnView , ( ( pageOnView ) * ( com.logan19gp.flickrviewer.SearchActivity.PER_PAGE ) ) ) ; } super . onResume () ; } 
@ java.lang.Override public void compareSelectedVersions ( java.util.List < java.lang.String > agbversion1 , java.util.List < java.lang.String > agbversion2 ) { java.lang.System.out . println ( "Starte AGB-Vergleich: " ) ; java.lang.System.out . println ( "Achtung: Folgende Aenderung haben sich ergeben! " ) ; difflib.Patch patch1 = difflib.DiffUtils . diff ( agbversion1 , agbversion2 ) ; for ( difflib.Delta delta : patch1 . getDeltas () ) { java.lang.System.out . println ( ( delta + ( com.agb.compare.AGBComparator.LINE_SEPARATOR ) ) ) ; versionDifferences . add ( delta . toString () ) ; } } 
@ org.junit.Test public void autoIncrementSchoolId () { tab.School school1 = new tab.School ( "UMKC" , "kangaroos" ) ; tab.School school2 = new tab.School ( "KU" , "jayhawks" ) ; assertEquals ( 1 , school1 . getId () ) ; assertEquals ( 2 , school2 . getId () ) ; } 
@ java.lang.Override public boolean isValid ( java.lang.CharSequence charSequence ) { java.util.regex.Matcher m = com.muqdd.iuob2.features.schedule_builder.ScheduleBuilderFragment.pCourse . matcher ( charSequence . toString () ) ; if ( ! ( m . find () ) ) { return false ; } java.lang.String courseName = m . group ( 1 ) ; return ( java.util.Arrays . binarySearch ( Constants.coursesNameList , courseName ) ) > 0 ; } 
@ java.lang.Override public java.util.List < ru.aviaj.model.Place > handle ( java.sql.ResultSet resultSet ) throws java.sql.SQLException { final java.util.List < ru.aviaj.model.Place > bufferPlaceList = new java.util.ArrayList <> () ; while ( resultSet . next () ) { bufferPlaceList . add ( new ru.aviaj.model.Place ( resultSet . getLong ( "id" ) , resultSet . getString ( "title" ) , resultSet . getString ( "description" ) , resultSet . getDouble ( "longitude" ) , resultSet . getDouble ( "latitude" ) ) ) ; } return bufferPlaceList ; } 
public static java.lang.String outputHeightOrNA ( java.lang.Integer feet , java.lang.Integer inches ) { if ( ( feet == null ) && ( inches == null ) ) { return "N/A" ; } else { java.lang.String output = "" ; if ( feet != null ) { output += feet + "'" ; } if ( inches != null ) { output += inches + "\"" ; } return output ; } } 
@ java.lang.Override public void onGameEvent ( net.demilich.metastone.game.events.GameEvent event ) { net.demilich.metastone.game.entities.Entity host = event . getGameContext () . resolveSingleTarget ( getHostReference () ) ; if ( ( ( ( expirationTrigger ) != null ) && ( ( expirationTrigger . interestedIn () ) == ( event . getEventType () ) ) ) && ( expirationTrigger . fires ( event , host ) ) ) { expire () ; } } 
private void addQueryIntegerListFilter ( java.lang.String optionKey , java.lang.String queryKey , org.opencb.opencga.catalog.db.DBObject query , org.opencb.datastore.core.QueryOptions options ) { if ( options . containsKey ( optionKey ) ) { java.util.List < java.lang.Integer > integerList = options . getAsIntegerList ( optionKey ) ; if ( ( integerList . size () ) > 1 ) { query . put ( queryKey , new org.opencb.opencga.catalog.db.BasicDBObject ( "$in" , integerList ) ) ; } else if ( ( integerList . size () ) == 1 ) { query . put ( queryKey , integerList . get ( 0 ) ) ; } } } 
public void removeTicketLine ( int i ) { m_jTableModel . removeRow ( i ) ; if ( i >= ( m_jTableModel . getRowCount () ) ) { i = ( m_jTableModel . getRowCount () ) - 1 ; } if ( ( i >= 0 ) && ( i < ( m_jTableModel . getRowCount () ) ) ) { setSelectedIndex ( i ) ; } } 
@ org.testng.annotations.Test public void testExpandSkipLimit () { com.orientechnologies.orient.core.sql.query.OSQLSynchQuery sql = new com.orientechnologies.orient.core.sql.query.OSQLSynchQuery ( "SELECT expand(linked) from ExpandSkipLimit where parent = true order by nnum skip 1 limit 1" ) ; java.util.List < com.orientechnologies.orient.core.db.record.OIdentifiable > results = db . query ( sql ) ; assertEquals ( results . size () , 1 ) ; com.orientechnologies.orient.core.record.impl.ODocument doc = results . get ( 0 ) . getRecord () ; assertEquals ( doc . field ( "nnum" ) , 1 ) ; } 
public static void semitoneDown ( com.kekstudio.musictheory.Note note ) { ( note.value ) -- ; if ( ( note.name . charAt ( ( ( note.name . length () ) - 1 ) ) ) == ( Music.SHARP ) ) { note.name = note.name . substring ( 0 , ( ( note.name . length () ) - 2 ) ) ; } else { note.name += Music.FLAT ; } } 
@ java.lang.Override public void validateSystemTag ( java.lang.String resourceUuid , java.lang.String resourceType , java.lang.String tag ) { boolean checked = false ; for ( org.zstack.tag.SystemTag stag : systemTags ) { if ( stag . isMatch ( tag ) ) { checked = true ; stag . validate ( resourceUuid , resourceTypeClassMap . get ( resourceType ) , tag ) ; } } if ( ! checked ) { throw new org.zstack.header.apimediator.ApiMessageInterceptionException ( errf . stringToInvalidArgumentError ( java.lang.String . format ( "no system tag matches %s" , tag ) ) ) ; } checkIfResourceHasThisTagType ( resourceUuid , resourceType ) ; } 
public void disconnect () { if ( ( mSocket ) != null ) { mHandler . post ( new java.lang.Runnable () { @ java.lang.Override public void run () { try { if ( ( mSocket ) == null ) return; mSocket . close () ; mSocket = null ; android.util.Log . i ( com.saulpower.fayeclient.WebSocketClient.TAG , "socket closed" ) ; } catch ( java.io.IOException ex ) { android.util.Log . e ( com.saulpower.fayeclient.WebSocketClient.TAG , "Error while disconnecting" , ex ) ; onError ( ex ) ; } } } ) ; mHandlerThread . quitSafely () ; } } 
@ java.lang.Override public void addTo ( net.whistlingfish.harmony.HarmonyClient client ) { client . addListener ( new net.whistlingfish.harmony.ActivityChangeListener () { @ java.lang.Override public void activityStarted ( net.whistlingfish.harmony.config.Activity activity ) { org.openhab.binding.harmonyhub.internal.HarmonyHubBinding.logger . debug ( "activityStarted called for {}" , config . getQualifier () ) ; updateActivity ( activity ) ; } } ) ; updateActivity ( client . getCurrentActivity () ) ; } 
private void save ( java.lang.String inputText ) { if ( ! ( android.text.TextUtils . isEmpty ( inputText ) ) ) { java.io.FileOutputStream out = null ; java.io.BufferedWriter writer = null ; try { out = openFileOutput ( "data" , Context.MODE_PRIVATE ) ; writer = new java.io.BufferedWriter ( new java.io.OutputStreamWriter ( out ) ) ; writer . write ( inputText ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } finally { com.example.dysaniazzz.utils.StreamUtils . endStream ( writer ) ; } } } 
public void shutdown () { isShutdown = true ; responseThread . interrupt () ; java.util.Iterator < com.hazelcast.client.spi.impl.ClientInvocation > iterator = callIdMap . values () . iterator () ; while ( iterator . hasNext () ) { com.hazelcast.client.spi.impl.ClientInvocation invocation = iterator . next () ; iterator . remove () ; invocation . notifyException ( new com.hazelcast.client.HazelcastClientNotActiveException ( "Client is shutting down" ) ) ; } assert callIdMap . isEmpty () ; } 
public void initializeCache ( entities.Library library , repositories.BookRepository bookRepo ) { log . info ( "Cache creation initialized" ) ; java.util.List < entities.Book > bookList = dbAccessor . getBooks ( library , bookRepo ) ; dbAccessor . createCache ( bookList , library . getName () ) ; log . info ( "Cache created" ) ; } 
public static java.util.Calendar parseDate ( java.lang.String dateString ) throws java.text.ParseException { helper.CalendarHelper.FORMAT_DATE . setLenient ( false ) ; dateString = dateString . trim () ; java.util.Calendar date = java.util.Calendar . getInstance () ; date . setTime ( helper.CalendarHelper.FORMAT_DATE . parse ( dateString ) ) ; if ( ! ( helper.CalendarHelper . getDateString ( date ) . equals ( dateString ) ) ) { throw new java.text.ParseException ( dateString , 0 ) ; } return date ; } 
public org.easybatch.core.job.JobReportFormatter < java.lang.String > getFormatter () { if ( ( this . formatter ) == null ) { synchronized ( formatter ) { if ( ( this . formatter ) == null ) { this . formatter = new org.easybatch.core.job.DefaultJobReportFormatter () ; } } } return this . formatter ; } 
public java.util.Map < java.lang.String , java.lang.String > getVariable () { java.util.Map < java.lang.String , java.lang.String > value = null ; if ( ( this . variable ) != null ) { value = this . variable ; } if ( value == null ) { if ( ( this . category ) != null ) { value = this . category . getVariable () ; } } if ( value == null ) { value = getParent () . getVariable () ; } return value ; } 
public static boolean canStacksMerge ( net.minecraft.item.ItemStack stack1 , net.minecraft.item.ItemStack stack2 ) { if ( ( stack1 == ( net.minecraft.item.ItemStack.EMPTY ) ) || ( stack2 == ( net.minecraft.item.ItemStack.EMPTY ) ) ) { return false ; } if ( ! ( stack1 . isItemEqual ( stack2 ) ) ) { return false ; } if ( ! ( net.minecraft.item.ItemStack . areItemStackTagsEqual ( stack1 , stack2 ) ) ) { return false ; } return true ; } 
private void setCoords () { java.security.SecureRandom rdmgen = new java.security.SecureRandom () ; int random = ( rdmgen . nextInt ( 11 ) ) + 1 ; leftX = ( HomeList.maxWidth ) / random ; topY = ( HomeList.maxHeight ) / random ; rightX = ( leftX ) + ( 2 * ( radius ) ) ; bottomY = ( topY ) + ( 2 * ( radius ) ) ; findCentre () ; } 
public static java.util.List < com.aimluck.eip.cayenne.om.portlet.VEipTScheduleList > getScheduleList ( int userId , java.util.Date viewStart , java.util.Date viewEnd , java.util.List < java.lang.Integer > users , java.util.List < java.lang.Integer > facilities , boolean isDetail ) { return com.aimluck.eip.schedule.util.ScheduleUtils . getScheduleList ( userId , viewStart , viewEnd , users , facilities , null , ( - 1 ) , ( - 1 ) , false , isDetail ) ; } 
public dataAcces.entity.User searchByUsername ( java.lang.String username ) { javax.persistence.EntityManager em = emf . createEntityManager () ; dataAcces.entity.User user = null ; try { user = em . find ( dataAcces.entity.User . class , username ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } finally { em . close () ; } return user ; } 
public void putIndexValue ( int indexId , java.lang.Object key , java.lang.Object value ) { if ( ( transaction . get () ) != null ) doPutIndexValue ( indexId , key , value ) ; checkOpeness () ; stateLock . acquireReadLock () ; try { checkOpeness () ; checkLowDiskSpaceAndFullCheckpointRequests () ; doPutIndexValue ( indexId , key , value ) ; } finally { stateLock . releaseReadLock () ; } } 
public static void ListContacts ( Messenger esql , java.lang.String authorisedUser ) { try { java.lang.String query = "SELECT ULC.list_member " + ( ( ( "FROM USR U, USER_LIST UL, USER_LIST_CONTAINS ULC " + "WHERE U.login = login " ) + "AND UL.list_id = U.contact_list " ) + "AND ULC.list_id = UL.list_id " ) ; java.lang.String query = "SELECT ULC.list_member " + ( "FROM USR U, USER_LIST UL, USER_LIST_CONTAINS ULC " + "WHERE U.login = authorisedUser AND UL.list_id = U.contact_list AND ULC.list_id = UL.list_id " ) ; int rowCount = esql . executeQuery ( query ) ; java.lang.System.out . println ( ( "total contacts: " + rowCount ) ) ; } catch ( java.lang.Exception e ) { java.lang.System.err . println ( e . getMessage () ) ; } } 
public void close () { if ( ( this . state ) != ( com.microsoft.azure.iothub.transport.State.CLOSED ) ) { this . state = com.microsoft.azure.iothub.transport.State.CLOSED ; this . sender . close () ; this . receiver . close () ; this . session . close () ; this . connection . close () ; this . reactorFuture . cancel ( true ) ; this . executorService . shutdown () ; } } 
public int handleVerticalCollisionResponse ( entities.Entity obj ) { int result = 0 ; if ( isColliding ( obj ) ) { boolean above = ( y ) > ( obj.y ) ; if ( above ) { result = 1 ; y = ( obj.y ) + ( obj.height ) ; } else { result = - 1 ; y = ( obj.y ) - ( height ) ; } } return result ; } 
public void div ( final int . . . params ) { int divResult = params [ 0 ] ; for ( int i = 1 ; i < ( ( params.length ) - 1 ) ; i ++ ) { divResult /= params [ i ] ; } result += divResult ; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) public < T > T create ( java.lang.Class < T > service ) { return ( ( T ) ( java.lang.reflect.Proxy . newProxyInstance ( service . getClassLoader () , new java.lang.Class < ? > [] { service } , new spwrap.proxy.CallerInvocationHandler ( this . dataSource ) ) ) ) ; } 
public void clearBoard () { for ( int i = 0 ; i < ( sizeX ) ; i ++ ) { for ( int j = 0 ; j < ( sizeY ) ; j ++ ) { board . getCellAt ( i , j ) . setCurrentState ( CellState.DEAD ) ; } } updateBoard () ; } 
private static void updateFeedSourceDB ( java.lang.String source_name , java.lang.String channel , java.lang.String last_update_time , java.lang.String previous_last_update ) throws java.io.IOException , java.sql.SQLException { java.net.URL url = new java.net.URL ( com.davidwang.feed.utils.Const.UPDATE_SOURCE ) ; java.util.Map < java.lang.String , java.lang.Object > params = new java.util.LinkedHashMap <> () ; params . put ( "source_name" , source_name ) ; params . put ( "channel" , channel ) ; params . put ( "last_update_time" , last_update_time ) ; params . put ( "previous_last_update" , previous_last_update ) ; java.lang.String results = com.davidwang.feed.parse.ParseFeed . PostToServer ( url , params ) ; } 
@ java.lang.Override public double getMountedYOffset () { if ( ( ( this . missileFlightTime ) <= 0 ) && ( ( this . missileType ) == ( defense.common.entity.EntityMissile.MissileType.MISSILE ) ) ) { return height ; } else if ( ( this . missileType ) == ( defense.common.entity.EntityMissile.MissileType.CruiseMissile ) ) { return ( height ) / 10 ; } return ( ( height ) / 2 ) + ( motionY ) ; } 
public static synchronized boolean isCameraUseable ( int cameraID ) { boolean canUse = true ; android.hardware.Camera mCamera = null ; try { mCamera = android.hardware.Camera . open ( cameraID ) ; android.hardware.Camera.Parameters mParameters = mCamera . getParameters () ; mCamera . setParameters ( mParameters ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; canUse = false ; } finally { mCamera . release () ; } return canUse ; } 
public com.computing.pervasive.myapplication.Building getBuilding ( int id ) { com.computing.pervasive.myapplication.Building building = null ; android.database.sqlite.SQLiteDatabase db = this . getReadableDatabase () ; android.database.Cursor cursor = db . query ( com.computing.pervasive.myapplication.MyDBHandler.TABLE_BUILDING , null , ( ( ( com.computing.pervasive.myapplication.MyDBHandler.COLUMN_BUILDING_ID ) + " = " ) + id ) , null , null , null , null ) ; if ( cursor . moveToFirst () ) { building = new com.computing.pervasive.myapplication.Building ( cursor . getInt ( 0 ) , cursor . getString ( 1 ) ) ; } db . close () ; return building ; } 
public static < T extends aurelienribon.texturepackergui.AppEvents.BaseAppEventListener > void fireEventToListeners ( java.lang.Class < T > listenersClass ) { java.lang.Object [] listeners = aurelienribon.texturepackergui.AppEvents.listenerList . getListenerList () ; for ( int i = ( listeners.length ) - 2 ; i >= 0 ; i -= 2 ) if ( ( listeners [ i ] ) == listenersClass ) ( ( T ) ( listeners [ ( i + 1 ) ] ) ) . onEvent () ; } 
private void doBushGrowth ( org.terasology.simpleFarming.components.BushDefinitionComponent bushComponent , int direction ) { bushComponent.currentStage += direction ; worldProvider . setBlock ( bushComponent.position , bushComponent.stages [ bushComponent.currentStage ] . block ) ; org.terasology.entitySystem.entity.EntityRef newBush = blockEntityRegistry . getBlockEntityAt ( bushComponent.position ) ; newBush . addOrSaveComponent ( bushComponent ) ; } 
public java.lang.String [] getNames () { java.lang.String [] names = new java.lang.String [ agents . size () ] ; int i = 0 ; for ( java.util.Map.Entry < java.lang.String , java.lang.Object > entry : agents . entrySet () ) { names [ i ] = entry . getKey () ; java.lang.System.out . println ( ( "names: " + ( names [ i ] ) ) ) ; i ++ ; } return names ; } 
public org.pac4j.core.credentials.TokenCredentials extract ( org.pac4j.core.context.WebContext context ) throws org.pac4j.core.exception.HttpAction { final java.lang.String ip ; if ( ( alternateIpHeaders.length ) == 0 ) { ip = context . getRemoteAddr () ; } else { ip = ipFromHeaders ( context ) ; } if ( ip == null ) { return null ; } return new org.pac4j.core.credentials.TokenCredentials ( ip , clientName ) ; } 
private void notificationNetServiceDeviceRemoved ( javax.jmdns.ServiceEvent serviceEvent ) { com.parrot.arsdk.arsal.ARSALPrint . d ( com.parrot.arsdk.ardiscovery.ARDiscoveryJmdnsDiscovery.TAG , "notificationServiceDeviceRemoved" ) ; com.parrot.arsdk.ardiscovery.ARDiscoveryDeviceService deviceServiceRemoved = netDeviceServicesHmap . remove ( serviceEvent . getName () ) ; if ( deviceServiceRemoved != null ) { broadcaster . broadcastDeviceServiceArrayUpdated () ; } else { com.parrot.arsdk.arsal.ARSALPrint . w ( com.parrot.arsdk.ardiscovery.ARDiscoveryJmdnsDiscovery.TAG , ( ( "service: " + ( serviceEvent . getInfo () . getName () ) ) + " not known" ) ) ; } } 
public synchronized void enable ( android.os.Handler locationHandler ) { buildGoogleApiClient () ; if ( ( ! ( mGoogleApiClient . isConnected () ) ) && ( ! ( mGoogleApiClient . isConnecting () ) ) ) { mGoogleApiClient . connect () ; } if ( ! ( isEnabled ) ) { mLocationHandler = locationHandler ; mLocationRequest = new com.google.android.gms.location.LocationRequest () ; mLocationRequest . setInterval ( com.jstakun.gms.android.location.GmsLocationServicesManager.LOCATION_READ_INTERVAL ) ; mLocationRequest . setFastestInterval ( com.jstakun.gms.android.location.GmsLocationServicesManager.LOCATION_READ_INTERVAL ) ; mLocationRequest . setPriority ( LocationRequest.PRIORITY_HIGH_ACCURACY ) ; isEnabled = true ; } } 
public final hu.akarnokd.rxjava2.basetypes.Solo < T > doOnRequest ( hu.akarnokd.rxjava2.basetypes.LongConsumer onRequest ) { hu.akarnokd.rxjava2.basetypes.ObjectHelper . requireNonNull ( onRequest , "onRequest is null" ) ; return hu.akarnokd.rxjava2.basetypes.Solo . onAssembly ( new hu.akarnokd.rxjava2.basetypes.SoloDoOnLifecycle < T > ( this , hu.akarnokd.rxjava2.basetypes.Functions . emptyConsumer () , hu.akarnokd.rxjava2.basetypes.Functions . emptyConsumer () , Functions.ERROR_CONSUMER , Functions.EMPTY_ACTION , Functions.EMPTY_ACTION , hu.akarnokd.rxjava2.basetypes.Functions . emptyConsumer () , onRequest , Functions.EMPTY_ACTION ) ) ; } 
private int measurementSeeBluetooth ( uni.miskolc.ips.ilona.measurement.model.measurement.Measurement meas , java.lang.String bluetooth ) { java.lang.String hardwareAddress = getBluetoothHardwareAddress ( bluetooth ) ; java.util.Set < java.lang.String > measurementBluetoothTags = meas . getBluetoothTags () . getTags () ; for ( java.lang.String bl : measurementBluetoothTags ) { if ( bl . toUpperCase () . contains ( hardwareAddress . toUpperCase () ) ) { return 1 ; } } return 0 ; } 
@ java.lang.Override public void onActivityResult ( int requestCode , int resultCode , android.content.Intent intent ) { switch ( requestCode ) { case com.matburt.mobileorg.Gui.OutlineActivity.RUNFOR_EXPAND : if ( resultCode != ( com.matburt.mobileorg.Gui.OutlineActivity.RESULT_DONTPOP ) ) this . appInst . popNodestack () ; break; case com.matburt.mobileorg.Gui.OutlineActivity.RUNFOR_EDITNODE : break; case com.matburt.mobileorg.Gui.OutlineActivity.RUNFOR_NEWNODE : if ( resultCode == ( RESULT_OK ) ) this . refreshDisplay () ; break; } } 
private void updateView ( int setViewResult , boolean isreset ) { if ( setViewResult == 0 ) { if ( ( mView . getParent () ) != null ) { if ( isreset ) { mManager . removeViewImmediate ( mView ) ; mManager . addView ( mView , mParams ) ; } else { mView . invalidate () ; mManager . updateViewLayout ( mView , mParams ) ; } } else { mManager . addView ( mView , mParams ) ; } } } 
private java.util.ArrayList < calendear.action.Task > filterWithCompleteness ( boolean isDone , java.util.ArrayList < calendear.action.Task > dataToFilter ) { java.util.ArrayList < calendear.action.Task > toDisplay = new java.util.ArrayList < calendear.action.Task > () ; toDisplay . addAll ( dataToFilter ) ; for ( int i = 0 ; i < ( toDisplay . size () ) ; i ++ ) { if ( ( toDisplay . get ( i ) . isFinished () ) != isDone ) { toDisplay . set ( i , null ) ; } } return toDisplay ; } 
@ java.lang.Override public int getPartition ( hbase.query3.ArticleIDTimestampWritable key , org.apache.hadoop.io.LongWritable value , int numOfPartitions ) { try { hbase.query3.HBaseCompositeKeyPartitioner . fillFirstAndLastID () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } long intervalLength = ( ( hbase.query3.HBaseCompositeKeyPartitioner.lastArticleId ) - ( hbase.query3.HBaseCompositeKeyPartitioner.firstArticleId ) ) / numOfPartitions ; return ( ( int ) ( ( key . getArticleId () ) / intervalLength ) ) ; } 
@ java.lang.Override public boolean onInterceptTouchEvent ( android.support.v7.widget.RecyclerView rv , android.view.MotionEvent e ) { android.view.View childView = rv . findChildViewUnder ( e . getX () , e . getY () ) ; if ( ( ( childView != null ) && ( ( mListener ) != null ) ) && ( mGestureDetector . onTouchEvent ( e ) ) ) { mListener . onItemClick ( childView , rv . getChildAdapterPosition ( childView ) ) ; return true ; } return false ; } 
private boolean executeAllTasks () { boolean result = true ; for ( matrixstudio.model.Task task : orderedTasks ) { result &= enqueueTask ( task ) ; } try { int error = org.jocl.CL . clWaitForEvents ( allEvents.length , allEvents ) ; if ( error != 0 ) { log . error ( ( ( "Error waiting for tasks to complete: " + error ) + "." ) ) ; return false ; } } catch ( org.jocl.CLException e ) { log . error ( org.xid.basics.error.DiagnosticUtil . createMessage ( e ) ) ; return false ; } return result ; } 
public boolean showDialog () { ij.gui.GenericDialog gd = new ij.gui.GenericDialog ( "De-Interleaver" ) ; gd . addNumericField ( "How many channels?" , nChannels , 0 ) ; gd . addCheckbox ( "Keep source stack" , keep ) ; gd . showDialog () ; if ( gd . wasCanceled () ) return false ; nChannels = ( ( int ) ( gd . getNextNumber () ) ) ; keep = gd . getNextBoolean () ; ij.Prefs . set ( "Deint_ch.int" , nChannels ) ; ij.Prefs . set ( "Deint_keep.boolean" , keep ) ; return true ; } 
public void run () { try { java.lang.System.out . println ( "Bin jetzt vorm stream" ) ; inputStream = clientSocket . getInputStream () ; inputStreamReader = new java.io.InputStreamReader ( inputStream , java.nio.charset.StandardCharsets.UTF_8 ) ; bufferedReader = new java.io.BufferedReader ( inputStreamReader ) ; outputStream = clientSocket . getOutputStream () ; outputStreamWriter = new java.io.OutputStreamWriter ( outputStream , java.nio.charset.StandardCharsets.UTF_8 ) ; write ( "+OK POP3 server ready" ) ; java.lang.System.out . println ( "kurz vorm auth" ) ; authenticate () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
private static void init () { java.lang.ref.WeakReference < grimhaus.com.G2Dj.Type.Engine.Scene > mainScene = grimhaus.com.G2Dj.Engine . createScene ( "Main" ) ; Adhoc.Main . createPlayerCamera ( mainScene ) ; Adhoc.Main . createMapCamera ( mainScene ) ; Adhoc.Main . createVisibleGeometry ( mainScene ) ; Adhoc.Main . createCollisionGeometry ( mainScene ) ; Adhoc.Main . createTextMeshTest ( mainScene ) ; Adhoc.Main . createSomeDynamicBoxes ( mainScene ) ; } 
public void removeMasterHost ( java.lang.String host , boolean closeGently ) throws java.sql.SQLException { if ( this . masterHostList . remove ( host ) ) {} for ( com.mysql.jdbc.ReplicationConnection c : this . replicationConnections . values () ) { c . removeMasterHost ( host , closeGently ) ; } } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) @ java.lang.Override public java.util.List < eu.europeana.uim.store.Collection < java.lang.String > > getCollections ( eu.europeana.uim.store.Provider < java.lang.String > provider ) { provider = ( ( eu.europeana.uim.store.Provider < java.lang.String > ) ( ensureConsistency ( provider ) ) ) ; java.util.List < eu.europeana.uim.store.Collection < java.lang.String > > res = new java.util.ArrayList < eu.europeana.uim.store.Collection < java.lang.String > > () ; for ( eu.europeana.uim.store.mongo.decorators.MongoCollectionDecorator < java.lang.String > c : ds . find ( eu.europeana.uim.store.mongo.decorators.MongoCollectionDecorator . class ) . filter ( "provider" , provider ) . asList () ) { res . add ( c . getEmbeddedCollection () ) ; } return res ; } 
@ java.lang.Override public void success ( com.mapzen.pelias.gson.Result result , retrofit.client.Response response ) { java.util.List < com.mapzen.pelias.gson.Feature > features = result . getFeatures () ; result . getType () ; if ( ( features == null ) && ( ( features . size () ) < 1 ) ) { android.widget.Toast . makeText ( this , "No lat, lng found for address" , Toast.LENGTH_LONG ) . show () ; } else { com.mapzen.pelias.gson.Feature f = features . get ( 0 ) ; double lat = f.geometry.coordinates . get ( 0 ) ; double lng = f.geometry.coordinates . get ( 1 ) ; } } 
public io.anuke.aabb.Manifold set ( io.anuke.aabb.Collider a , io.anuke.aabb.Collider b ) { this . a = a ; this . b = b ; this . e = java.lang.Math . min ( a.restitution , b.restitution ) ; this . sf = 0 ; this . df = 0 ; this . normal . set ( 0 , 0 ) ; this . penetration = 0 ; return this ; } 
private boolean hasValidPageNumbersOnly () { boolean correct = true ; for ( java.lang.String page : pages ) { correct = ( ( page . matches ( "[0-9]+" ) ) && ( ( page . length () ) >= 5 ) ) ? true : false ; } return correct ; } 
public void updateTextView () { int volume = soundDb () ; if ( volume > ( highestVolume ) ) { highValueTextView . setText ( ( volume + " dB" ) ) ; highestVolume = volume ; } if ( ( volume < ( lowestVolume ) ) || ( ( lowestVolume ) < 0 ) ) { lowValueTextView . setText ( ( volume + " dB" ) ) ; lowestVolume = volume ; } currentValueTextView . setText ( ( volume + " dB" ) ) ; currentVolume = volume ; } 
public final void mount ( final java.io.File mountPoint , final boolean blocking ) throws java.lang.UnsatisfiedLinkError , net.fusejna.FuseException { mountLock . lock () ; if ( isMounted () ) { throw new java.lang.IllegalStateException ( ( ( ( getFuseName () ) + " is already mounted at " ) + ( this . mountPoint ) ) ) ; } try { net.fusejna.FuseJna . mount ( this , mountPoint , blocking ) ; this . mountPoint = mountPoint ; onMount ( mountPoint ) ; } finally { mountLock . unlock () ; } } 
public void test_144_ACLCreateFields ( edu.umass.cs.gnsclient.client.util.GuidEntry barneyEntry ) { try { edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.client . fieldUpdate ( barneyEntry . getGuid () , "cell" , "413-555-1234" , barneyEntry ) ; edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.client . fieldUpdate ( barneyEntry . getGuid () , "address" , "100 Main Street" , barneyEntry ) ; } catch ( java.lang.Exception e ) { edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest . failWithStackTrace ( ( "Exception when we were not expecting it in ACLPartTwo: " + e ) ) ; } } 
public void callApi ( java.lang.String toBeSearchedWord ) { com.example.ripu.mydictionary.URLRetriever urlRetriever = new com.example.ripu.mydictionary.URLRetriever () ; com.example.ripu.mydictionary.JsonUtil util = new com.example.ripu.mydictionary.JsonUtil () ; java.lang.String app_id = APIConstants.app_id ; java.lang.String app_key = APIConstants.app_key ; java.lang.String uri = APIConstants.uri ; android.util.Log . d ( com.example.ripu.mydictionary.MainActivity.TAG , toBeSearchedWord ) ; java.lang.String stringFromUrlRetriever = urlRetriever . objectForWordRetriever ( uri , app_id , app_key ) ; java.lang.Object obj = util . stringToJson ( stringFromUrlRetriever ) ; com.example.ripu.api.RetrieveEntry entry = ( ( com.example.ripu.api.RetrieveEntry ) ( util . objectToClass ( obj ) ) ) ; } 
@ java.lang.Override public java.util.List < org.eclipse.osee.framework.core.data.ApplicabilityToken > getViewApplicabilityTokens ( org.eclipse.osee.framework.core.data.ArtifactId artId , org.eclipse.osee.framework.core.data.BranchId branch ) { java.util.List < org.eclipse.osee.framework.core.data.ApplicabilityToken > result = new java.util.ArrayList <> () ; java.util.function.BiConsumer < java.lang.Long , java.lang.String > consumer = ( id , name ) - > result . add ( new org.eclipse.osee.framework.core.data.ApplicabilityToken ( id , name ) ) ; tupleQuery . getTuple2KeyValuePair ( CoreTupleTypes.ViewApplicability , branch , consumer ) ; return result ; } 
private com.fwgg8547.opentest.Item createItem () { com.fwgg8547.opentest.Sprite s = new com.fwgg8547.opentest.Sprite ( mIdOffset ) ; com.fwgg8547.opentest.Item it = new com.fwgg8547.opentest.Item () ; it.mId = mIdOffset ; it.mGroupId = 1 ; it . setSprite ( s ) ; it . setPosition ( 110.0F , 200.0F , 0.0F , 0.0F ) ; try { mLock . writeLock () ; mBlocks . add ( it ) ; mGroup . add ( it ) ; mLock . writeUnlock () ; } catch ( java.lang.Exception e ) {} return it ; } 
@ java.lang.Override protected void initiateBackground () { try { com.timsu.astrid.C2DMReceiver . register () ; java.lang.String authToken = actFmPreferenceService . getToken () ; invoker = new com.todoroo.astrid.actfm.sync.ActFmInvoker ( authToken ) ; if ( authToken != null ) { performSync () ; } } catch ( java.lang.IllegalStateException e ) {} catch ( java.lang.Exception e ) { handleException ( "actfm-authenticate" , e , true ) ; } finally { actFmPreferenceService . stopOngoing () ; } } 
private void trimHorizVert ( int horizLimit , int vertLimit ) { int i = 0 ; classifier.CrossSectionPoint p ; while ( i < ( _points . size () ) ) { p = _points . get ( i ) ; if ( ! ( isWithinLimits ( p ) ) ) { _points . remove ( p ) ; } else { i ++ ; } } } 
private void searchTree ( java.io.File file , int depth ) { java.io.File [] files = file . listFiles () ; java.lang.String _depth = new java.lang.String ( new char [ depth ] ) . replace ( ' ' , '-' ) ; for ( java.io.File _file : files ) { if ( ( _file . isDirectory () ) && ( _file != null ) ) { java.lang.System.out . println ( ( _depth + ( _file . getName () ) ) ) ; searchTree ( _file , ( depth + 1 ) ) ; } } } 
private final void doMoveOutOfBounds ( int [] diff ) { com.google.android.maps.GeoPoint cen = mv . getMapCenter () ; android.graphics.Point cenPx = mv . getProjection () . toPixels ( cen , null ) ; cenPx.x += diff [ 0 ] ; cen = mv . getProjection () . fromPixels ( cenPx.x , cenPx.y ) ; if ( autoBoundSnap ) { aml . snapTo ( cen ) ; } else { aml . animateTo ( cen ) ; } } 
public void run () { int count = 0 ; while ( count < 100 ) { try { hudson.model.FreeStyleProject project = hudson.plugins.disk_usage.integration.DiskUsageTestUtil . getProject ( jenkins , "job" ) ; project . updateNextBuildNumber ( ( 107 + count ) ) ; project = hudson.plugins.disk_usage.integration.DiskUsageTestUtil . prepareProjet ( jenkins , project ) ; } catch ( java.lang.Exception e ) { if ( e instanceof java.lang.NullPointerException ) { continue; } e . printStackTrace () ; } catch ( java.lang.Error e ) { e . printStackTrace () ; } count ++ ; } isFinished = true ; } 
@ java.lang.Override public void onOpen ( com.google.appinventor.client.explorer.OpenEvent < com.google.appinventor.client.explorer.TreeItem > event ) { com.google.appinventor.client.explorer.TreeItem treeItem = event . getTarget () ; if ( treeItem != null ) { box . flyoutOpen ( true ) ; java.lang.Object userObject = treeItem . getUserObject () ; if ( userObject instanceof com.google.appinventor.client.explorer.SourceStructureExplorerItem ) { com.google.appinventor.client.explorer.SourceStructureExplorerItem item = ( ( com.google.appinventor.client.explorer.SourceStructureExplorerItem ) ( userObject ) ) ; item . onStateChange ( true ) ; } } } 
public void writeTo ( java.io.Writer writer ) throws java.io.IOException { for ( java.util.Map.Entry < java.lang.String , java.lang.Object > pref : allPrefs . entrySet () ) { writer . append ( "user_pref(\"" ) . append ( pref . getKey () ) . append ( "\", " ) ; writer . append ( valueAsPreference ( pref . getValue () ) . replaceAll ( "\\\\" , "\\\\\\\\" ) ) ; writer . append ( ");\n" ) ; } } 
@ java.lang.Override public boolean update ( java.lang.String id , com.ai.paas.ipaas.search.common.JsonBuilder jsonBuilder ) { if ( ( com.ai.paas.ipaas.util.StringUtil . isBlank ( id ) ) || ( null == jsonBuilder ) ) return false ; org.elasticsearch.action.update.UpdateResponse response = client . prepareUpdate ( indexName , indexName , id ) . setRefresh ( true ) . setConsistencyLevel ( WriteConsistencyLevel.DEFAULT ) . setDoc ( jsonBuilder . getBuilder () ) . get () ; if ( ! ( com.ai.paas.ipaas.util.StringUtil . isBlank ( response . getId () ) ) ) return true ; else return false ; } 
public int getSinkIndex ( pb.sim.Asteroid [] asteroids , pb.sim.Asteroid sink ) { for ( int i = 0 ; i < ( asteroids.length ) ; i ++ ) { if ( ( asteroids [ i ] . id ) == ( sink.id ) ) return i ; } return - 1 ; } 
public void setParallaxHeader ( android.view.View header ) { mHeader = new com.marshalchen.ultimaterecyclerview.UltimateRecyclerView.CustomRelativeWrapper ( header . getContext () ) ; mHeader . setLayoutParams ( new android.view.ViewGroup.LayoutParams ( ViewGroup.LayoutParams.WRAP_CONTENT , ViewGroup.LayoutParams.WRAP_CONTENT ) ) ; mHeader . addView ( header , new android.widget.RelativeLayout.LayoutParams ( ViewGroup.LayoutParams.MATCH_PARENT , ViewGroup.LayoutParams.MATCH_PARENT ) ) ; mAdapter . setCustomHeaderView ( mHeader ) ; } 
@ java.lang.Override public long getOrgIdByPartyId ( long partyId ) { org.shaolin.vogerp.commonmodel.be.PersonalInfoImpl condition = new org.shaolin.vogerp.commonmodel.be.PersonalInfoImpl () ; condition . setId ( partyId ) ; java.util.List < org.shaolin.vogerp.commonmodel.be.IPersonalInfo > result = CommonModel.INSTANCE . searchPersonInfo ( condition , null , 0 , 1 ) ; if ( ( result . size () ) > 0 ) { return result . get ( 0 ) . getOrgId () ; } throw new java.lang.IllegalArgumentException ( ( "User id isn't correct: " + partyId ) ) ; } 
public void validate () { if ( ( start_time ) < 0 ) edu.berkeley.path.beats.simulator.utils.BeatsErrorLog . addError ( "start_time<0 in a time profile" ) ; if ( ( step_initial_abs ) < 0 ) edu.berkeley.path.beats.simulator.utils.BeatsErrorLog . addError ( "step_initial_abs<0 in a time profile" ) ; if ( ( dtinseconds ) <= 0 ) edu.berkeley.path.beats.simulator.utils.BeatsErrorLog . addError ( "dt<=0 in a time profile" ) ; if ( ( ! ( java.lang.Double . isInfinite ( dtinseconds ) ) ) && ( ( samplesteps ) <= 0 ) ) edu.berkeley.path.beats.simulator.utils.BeatsErrorLog . addError ( "samplesteps<=0 in a time profile" ) ; } 
public java.util.List < org.latinolib.eval.CrossValidator.FoldData < T , U > > getFolds () { return com.google.common.collect.Lists . newArrayList ( new java.util.Iterator < org.latinolib.eval.CrossValidator.FoldData < T , U > > () { private int current = 0 ; @ java.lang.Override public boolean hasNext () { return ( current ) < ( numFolds ) ; } @ java.lang.Override public org.latinolib.eval.CrossValidator.FoldData < T , U > next () { return getFold ( ( ( ( current ) ++ ) + 1 ) ) ; } @ java.lang.Override public void remove () { throw new sun.reflect.generics.reflectiveObjects.NotImplementedException () ; } } ) ; } 
@ java.lang.Override public void onCheckedChanged ( android.widget.RadioGroup group , int checkedId ) { switch ( checkedId ) { case R.id.nodown : mDownIntercept = 0 ; break; case R.id.vgdown1 : mDownIntercept = 1 ; break; case R.id.vgdown2 : mDownIntercept = 2 ; break; case R.id.vdown : mDownIntercept = 3 ; break; } android.util.Log . d ( ray.cyberpup.com.touchframework.InterceptsDialog.LOG_TAG , ( "mDownIntercept checked changed: " + ( mDownIntercept ) ) ) ; } 
public static void playClipWithVolume ( java.lang.String fileName , double volume ) { try { javafx.scene.media.AudioClip clip = new javafx.scene.media.AudioClip ( "file:Resources/Sound/" ) ; clip . setVolume ( volume ) ; clip . play () ; } catch ( java.lang.Exception e ) { java.lang.System.out . println ( e . toString () ) ; } } 
@ org.junit.Test public void testIsTableNewWhenTableNotNew ( ) throws java.lang.Exception { final inputer.Scanner scanner = new inputer.Scanner () ; final engine.models.Table table = new engine.models.Table ( "005D0A28" , 10 , 6 ) ; Game.tables . add ( table ) ; final java.lang.String tempString = "Game #142837817463 005D0A28" ; final boolean actualResult = scanner . isTableNew ( tempString ) ; assertFalse ( actualResult ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { android.content.Intent sharingIntent = new android.content.Intent ( android.content.Intent.ACTION_SEND ) ; sharingIntent . setType ( "text/plain" ) ; java.lang.String shareBody = ( ( scriptureData . getText () ) + " " ) + ( scriptureData . getCitation () ) ; java.lang.String shareLink = scriptureData . getLink () ; sharingIntent . putExtra ( Intent.EXTRA_TEXT , shareLink ) ; startActivity ( android.content.Intent . createChooser ( sharingIntent , "Share via" ) ) ; } 
public void setCurrentForm ( final com.codename1.impl.android.Form f ) { if ( ( getCurrentForm () ) == null ) { flushGraphics () ; } if ( com.codename1.impl.android.InPlaceEditView . isKeyboardShowing () ) { com.codename1.impl.android.AndroidImplementation . stopEditing () ; } super . setCurrentForm ( f ) ; if ( ( isNativeTitle () ) && ( ! ( f instanceof com.codename1.ui.Dialog ) ) ) { com.codename1.impl.android.AndroidImplementation.activity . runOnUiThread ( new com.codename1.impl.android.AndroidImplementation.SetCurrentFormImpl ( com.codename1.impl.android.AndroidImplementation.activity , f ) ) ; } } 
public Utente getUser ( int id ) throws UserException { Utente u = null ; boolean already_in = this . persone . containsKey ( id ) ; if ( already_in ) { u = this . persone . get ( id ) ; java.lang.System.out . println ( u ) ; } else { throw new UserException ( ( ( "id " + id ) + " non presente nella rete sociale" ) ) ; } return u ; } 
protected void executeProgram ( ) throws java.lang.Exception { int numTries = 0 ; int maxRetries = 5 ; while ( true ) { try { org.broadinstitute.gatk.engine.CommandLineGATK . start ( new org.broadinstitute.gatk.engine.CommandLineGATK () , this . programArgs . toArray ( new java.lang.String [ 0 ] ) ) ; } catch ( com.github.sparkcaller.utils.org.broadinstitute e ) { if ( ( ++ numTries ) == maxRetries ) { java.lang.System.err . println ( ( ( "Failed to run GATK program " + maxRetries ) + " times!" ) ) ; return; } } } } 
@ org.junit.Test public void testNullNonEmpty ( ) throws java.lang.Throwable { final java.lang.String SCRIPT_TEXT = ( ( "set hive.support.concurrency = false;\n" + "!set nullemptystring false\n select null from " ) + ( org.apache.hive.beeline.TestBeeLineWithArgs.tableName ) ) + " limit 1 ;\n" ; final java.lang.String EXPECTED_PATTERN = "NULL" ; testScriptFile ( SCRIPT_TEXT , EXPECTED_PATTERN , true , getBaseArgs ( org.apache.hive.beeline.TestBeeLineWithArgs.miniHS2 . getBaseJdbcURL () ) ) ; } 
@ java.lang.Override protected java.lang.Void doInBackground ( com.cawlfield.topher.servicemusicplayer.PlayListItemBase . . . pli ) { do { publishProgress ( pli [ 0 ] . getProgress () ) ; try { java.lang.Thread . sleep ( 500 ) ; } catch ( java.lang.InterruptedException e ) {} } while ( ! ( isCancelled () ) ) ; return null ; } 
@ java.lang.Override public boolean addPlayer ( com.feed_the_beast.ftbl.api.IForgePlayer player ) { if ( ( ! ( hasStatus ( player , EnumTeamStatus.MEMBER ) ) ) && ( hasStatus ( player , EnumTeamStatus.INVITED ) ) ) { player . setTeamID ( getName () ) ; MinecraftForge.EVENT_BUS . post ( new com.feed_the_beast.ftbl.api.events.team.ForgeTeamPlayerJoinedEvent ( this , player ) ) ; setStatus ( player . getId () , EnumTeamStatus.MEMBER ) ; return true ; } return false ; } 
@ java.lang.Override public boolean onPreferenceChange ( android.preference.Preference preference , java.lang.Object value ) { java.lang.String stringValue = value . toString () ; if ( preference instanceof android.preference.ListPreference ) { android.preference.ListPreference listPreference = ( ( android.preference.ListPreference ) ( preference ) ) ; int prefIndex = listPreference . findIndexOfValue ( stringValue ) ; if ( prefIndex >= 0 ) { preference . setSummary ( listPreference . getEntries () [ prefIndex ] ) ; } } else { preference . setSummary ( stringValue ) ; } update () ; return true ; } 
public double [] eval ( double [] input , double drop_out_ratio , int maxOutk ) { double [] output = super . eval ( input , drop_out_ratio , maxOutk ) ; hex.genmodel.algos.deeplearning.ActivationUtils . applyDropout ( output , drop_out_ratio , input.length ) ; return output ; } 
@ java.lang.Override public void run () { listItem = new java.util.ArrayList <> () ; com.poc.evault.utils.DocumentDataSource documentDataSource = new com.poc.evault.utils.DocumentDataSource ( this ) ; documentDataSource . open () ; listItem = documentDataSource . getAllDocuments () ; documentDataSource . close () ; if ( ( listItem . size () ) > 0 ) { mRecyclerView . setAdapter ( new com.poc.evault.adapters.DocListAdapter ( listItem , this , new com.poc.evault.callbacks.OnDeleteClick () { @ java.lang.Override public void onDelete () { updateList () ; } } ) ) ; } } 
@ java.lang.Override public void setValue ( double aVal ) { super . setValue ( aVal ) ; if ( null != ( iSeries ) ) { final java.lang.Double newY = com.ivli.roim.controls.XYSeriesUtilities . getNearestY ( aVal , iSeries ) ; if ( null != ( iLink ) ) { iLink . setValue ( newY ) ; iLink . setLabel ( java.lang.String . format ( com.ivli.roim.controls.DomainMarker.LABEL_FORMAT , newY ) ) ; } setLabel ( java.lang.String . format ( com.ivli.roim.controls.DomainMarker.LABEL_FORMAT , aVal ) ) ; } else { setLabel ( java.lang.String . format ( "%f" , aVal ) ) ; } } 
@ java.lang.Override public void onLoaderReset ( android.support.v4.content.Loader < android.database.Cursor > loader ) { android.util.Log . i ( com.gribanskij.miser.categories.CategoryFragment.LOG_TAG , ( ( java.lang.Integer . toString ( loader . getId () ) ) + " RESET" ) ) ; switch ( loader . getId () ) { case com.gribanskij.miser.categories.CategoryFragment.CATEGORY_NAME_LOADER : { swapCursor ( nameCursor , null ) ; nameCursor = null ; break; } case com.gribanskij.miser.categories.CategoryFragment.CATEGORY_SUM_LOADER : { swapCursor ( sumCursor , null ) ; sumCursor = null ; break; } } } 
public void onTrue ( android.view.View view ) { if ( ( IS_PRIME ) == true ) { android.widget.Toast . makeText ( this , "Your answer is correct!" , Toast.LENGTH_SHORT ) . show () ; numberDisplay . setTextColor ( android.graphics.Color . parseColor ( "#FF99CC00" ) ) ; } else { android.widget.Toast . makeText ( this , "Your answer is incorrect!" , Toast.LENGTH_SHORT ) . show () ; numberDisplay . setTextColor ( android.graphics.Color . parseColor ( "#FFD50000" ) ) ; } } 
@ java.lang.Override public void run () { try { while ( ! ( isClosing ) ) { if ( ( ! ( isPainted ) ) && ( ! ( isPaintError ) ) ) { doPaint () ; if ( ! ( isPaintError ) ) firstPainted = true ; isUpdated = false ; } java.lang.Thread . sleep ( 100 ) ; } } catch ( java.io.IOException | java.lang.InterruptedException e ) { e . printStackTrace () ; } } 
private void checkProject ( hudson.model.Item item ) { hudson.model.AbstractProject < ? , ? > project = ( ( hudson.model.AbstractProject < ? , ? > ) ( item ) ) ; if ( ( ( isValidCandidateForRestart ( project ) ) && ( org.jenkinsci.plugins.periodicreincarnation.Utils . qualifyForUnchangedRestart ( project ) ) ) && ( ! ( scheduledProjects . contains ( project . getFullDisplayName () ) ) ) ) { this . scheduledProjects . add ( project . getFullDisplayName () ) ; this . unchangedRestartProjects . add ( project ) ; } } 
public int p1Right () { ( p1Index ) ++ ; if ( displayNeuhaus ) { if ( ( p1Index ) == 8 ) { p1Index = 10 ; } else if ( ( p1Index ) == 10 ) { p1Index = 0 ; } } else { if ( ( p1Index ) > 7 ) { p1Index = 0 ; } } return p1Index ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main_menu ) ; textView = ( ( android.widget.TextView ) ( findViewById ( R.id.textViewUsername ) ) ) ; if ( ( mAuth . getCurrentUser () ) != null ) { textView . setText ( mAuth . getCurrentUser () . getDisplayName () ) ; } else if ( ! ( strLoginName . isEmpty () ) ) { textView . setText ( strLoginName ) ; } } 
@ org.junit.Test public void generateDataDumpFtpSuccessReportTest ( ) throws java.lang.Exception { org.recap.model.jpa.ReportEntity savedReportEntity1 = saveDataDumpSuccessReport () ; java.lang.String generatedReportFileName = dataDumpGenerateReport ( savedReportEntity1 . getCreatedDate () , "BatchExport" , RecapConstants.SUCCESS , savedReportEntity1 . getInstitutionName () , RecapConstants.FTP , savedReportEntity1 . getFileName () ) ; org.junit.Assert . assertNotNull ( generatedReportFileName ) ; java.io.File directory = new java.io.File ( reportDirectory ) ; org.junit.Assert . assertTrue ( directory . isDirectory () ) ; boolean directoryContains = new java.io.File ( directory , generatedReportFileName ) . exists () ; org.junit.Assert . assertTrue ( directoryContains ) ; } 
@ java.lang.Override public java.util.List < org.apache.river.api.security.PermissionGrant > getPermissionGrants ( java.security.ProtectionDomain domain ) { java.util.List < org.apache.river.api.security.PermissionGrant > grants = null ; if ( ( basePolicy ) instanceof org.apache.river.api.security.ScalableNestedPolicy ) { grants = ( ( org.apache.river.api.security.ScalableNestedPolicy ) ( basePolicy ) ) . getPermissionGrants ( domain ) ; } else { grants = new java.util.LinkedList < org.apache.river.api.security.PermissionGrant > () ; grants . add ( extractGrantFromPolicy ( basePolicy , domain ) ) ; } org.apache.river.api.security.PermissionGrant [] rpg = remotePolicyGrants ; grants . addAll ( java.util.Arrays . asList ( rpg ) ) ; return grants ; } 
private java.lang.String cos ( java.lang.String x ) { java.lang.Double d = java.lang.Double . parseDouble ( x ) ; if ( ! ( rad ) ) { d = java.lang.Math . toRadians ( d ) ; } java.math.BigDecimal k = new java.math.BigDecimal ( java.lang.Math . cos ( d ) , java.math.MathContext.DECIMAL64 ) ; k = k . stripTrailingZeros () ; return k . toPlainString () ; } 
private int scroll ( android.view.View view , int dy ) { int newTop = ( view . getTop () ) - dy ; if ( newTop >= ( mOriginalTop ) ) { newTop = mOriginalTop ; } if ( newTop <= ( ( mOriginalTop ) - ( mAppBarLayout . getTotalScrollRange () ) ) ) { newTop = ( mOriginalTop ) - ( mAppBarLayout . getTotalScrollRange () ) ; } return setTopBottomOffset ( view , ( newTop - ( mOriginalTop ) ) ) ; } 
private void normalizePoints ( java.util.Vector < java.awt.Point > vector , java.awt.Point extremePoint ) { vector . forEach ( ( point ) - > { point.x += java.lang.Math . abs ( extremePoint.x ) ; point.x *= dimensionRatio ; point.y += java.lang.Math . abs ( extremePoint.y ) ; point.y *= dimensionRatio ; point.y = ( ( int ) ( window . getHeight () ) ) - ( point.y ) ; } ) ; } 
@ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { if ( ( tempList . size () ) == ( position + 1 ) ) { android.content.Intent intent = new android.content.Intent ( getActivity () , com.logcat.example.pc.orbitalproj.MedicationEdit . class ) ; startActivity ( intent ) ; } else { android.content.Intent intent = new android.content.Intent ( getActivity () , com.logcat.example.pc.orbitalproj.MedicationViewer . class ) ; medication = tempList . get ( position ) ; intent . putExtra ( "Medicine" , medication ) ; startActivity ( intent ) ; } } 
void draw_cuve ( int [] cuve ) { yList . clear () ; for ( int j = 0 ; j < ( Y_Max ) ; j ++ ) { yList . add ( ( ( double ) ( cuve [ j ] ) ) ) ; android.util.Log . i ( "DATA" , java.lang.String . valueOf ( cuve [ j ] ) ) ; } tu . setData ( yList , xRawDatas , 65536 , 4096 ) ; tu . invalidate () ; } 
public void disable () { this . warn ( "Disabling client library" ) ; synchronized ( this . mutex ) { this . timer . cancel () ; this . timer . purge () ; if ( ( this . transport ) != null ) { this . transport . close () ; this . transport = null ; } this . isDisabled = true ; this . spans = new java.util.ArrayList < com.lightstep.tracer.thrift.SpanRecord > ( 0 ) ; } } 
public void actionPerformed ( java.awt.event.ActionEvent arg0 ) { txPassword . setVisible ( true ) ; txUsername . setVisible ( true ) ; lblUsername . setVisible ( true ) ; lblPassword . setVisible ( true ) ; btnOk . setVisible ( true ) ; btnNewUser . setVisible ( true ) ; startGame () ; } 
public void startTutorial () { currentRound = new jeopardy.game.Round ( "Tutorial" , 0 , new jeopardy.game.RoundConfig ( "Tutorial" , "Tutorial" ) ) ; currentRound . start () ; tutorial = new java.util.HashSet ( players . values () ) ; controller . onTutorialStarted () ; controller . onTutorialProgress ( tutorial . size () , players . size () ) ; } 
@ java.lang.Override protected void internalDraw ( java.awt.Graphics g ) { ca.claytonrogers.Common.IntVector offsetLocation = new ca.claytonrogers.Common.IntVector ( location ) ; offsetLocation = offsetLocation . add ( Constants.DECK_OFFSET ) ; ca.claytonrogers.Common.Card bottomCard = new ca.claytonrogers.Common.Card ( 1 , true ) ; ca.claytonrogers.Common.Card topCard = new ca.claytonrogers.Common.Card ( deck . peek () . value , isFaceUp ) ; ca.claytonrogers.Client.GUIObjects.Drawer . drawCard ( g , bottomCard , offsetLocation ) ; ca.claytonrogers.Client.GUIObjects.Drawer . drawCard ( g , topCard , location ) ; } 
@ java.lang.Override public void setContainerCluster ( net.echinopsii.ariane.community.core.mapping.ds.domain.Cluster cluster ) { if ( ( ( this . containerCluster ) == null ) || ( ! ( this . containerCluster . equals ( cluster ) ) ) ) { if ( cluster instanceof net.echinopsii.ariane.community.core.mapping.ds.blueprintsimpl.domain.ClusterImpl ) { this . containerCluster = ( ( net.echinopsii.ariane.community.core.mapping.ds.blueprintsimpl.domain.ClusterImpl ) ( cluster ) ) ; synchronizeClusterToDB () ; } } } 
@ java.lang.Override protected void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { if ( requestCode == ( br.com.bhl.superfid.view.MainBluetoothActivity.ENABLE_BLUETOOTH ) ) { if ( resultCode == ( RESULT_OK ) ) { status . setText ( "Conectando..." ) ; startService ( new android.content.Intent ( this , br.com.bhl.superfid.service.BluetoothDataService . class ) . putExtra ( "qrResult" , qrResult ) ) ; } else { status . setText ( "Erro ao conectar" ) ; android.widget.Toast . makeText ( getApplicationContext () , "Não foi possível ativar o BT" , Toast.LENGTH_SHORT ) . show () ; cancel () ; } } } 
public void onCheckedChanged ( android.widget.CompoundButton buttonView , boolean isChecked ) { if ( isChecked ) { sg.edu.nus.comp.orbital.synchro.SearchResultsFragment.buttonGroups . setChecked ( false ) ; displayUsers ( sg.edu.nus.comp.orbital.synchro.SearchResultsFragment.recyclerView , sg.edu.nus.comp.orbital.synchro.SearchResultsFragment.query ) ; } else if ( ! ( sg.edu.nus.comp.orbital.synchro.SearchResultsFragment.buttonGroups . isChecked () ) ) { sg.edu.nus.comp.orbital.synchro.SearchResultsFragment.buttonUsers . setChecked ( true ) ; } } 
private boolean isJsonArray ( java.lang.String jsonString ) { try { org.json.JSONArray responseArray = new org.json.JSONArray ( jsonString ) ; org.json.JSONObject wrapper = new org.json.JSONObject () ; wrapper . put ( com.coveros.coverosmobileapp.oauth.RestRequest.ORIGINAL_RESPONSE_TAG , responseArray ) ; return true ; } catch ( org.json.JSONException je ) { android.util.Log . e ( "CoverosMobileApp" , "isJsonArray is false" , je ) ; return false ; } } 
public java.lang.Object get ( java.lang.String key ) throws blade.kit.json.JSONException { if ( key == null ) { throw new blade.kit.json.JSONException ( "Null key." ) ; } java.lang.Object object = this . get ( key ) ; if ( object == null ) { throw new blade.kit.json.JSONException ( ( ( "JSONObject[" + ( blade.kit.json.JSONObject . quote ( key ) ) ) + "] not found." ) ) ; } return object ; } 
public static void dismissDialogs ( android.support.v4.app.FragmentActivity activity ) { android.support.v4.app.FragmentManager fm = activity . getSupportFragmentManager () ; java.util.List < android.support.v4.app.Fragment > fragments = fm . getFragments () ; if ( null != fragments ) { for ( android.support.v4.app.Fragment fragment : fragments ) { if ( ( fragment instanceof android.support.v4.app.DialogFragment ) && ( ! ( fragment instanceof im.vector.fragments.VectorUnknownDevicesFragment ) ) ) { ( ( android.support.v4.app.DialogFragment ) ( fragment ) ) . dismissAllowingStateLoss () ; } } } } 
protected void processWindowEvent ( java.awt.event.WindowEvent e ) { if ( ( e . getID () ) == ( java.awt.event.WindowEvent.WINDOW_CLOSING ) ) { if ( net.sf.memoranda.util.Configuration . get ( "ON_CLOSE" ) . equals ( "exit" ) ) doExit () ; else doMinimize () ; } else if ( ( e . getID () ) == ( java.awt.event.WindowEvent.WINDOW_ICONIFIED ) ) { super . processWindowEvent ( new java.awt.event.WindowEvent ( this , java.awt.event.WindowEvent.WINDOW_CLOSING ) ) ; doMinimize () ; } else super . processWindowEvent ( e ) ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { if ( ! ( mRespondToClick ) ) return; switch ( view . getId () ) { case R.id.list_item_root : int newlySelectedPos = this . setSelection ( mStationId , false ) ; mListener . onStationListItemClick ( StationListFragment.STATION_LIST_ITEM_CLICK_PATH ) ; mFabAnimationRequested = newlySelectedPos != ( mSelectedPos ) ; break; case R.id.favorite_fab : mListener . onStationListItemClick ( StationListFragment.STATION_LIST_FAVORITE_FAB_CLICK_PATH ) ; if ( getSelected () . isFavorite ( mCtx ) ) mFavoriteFab . setImageResource ( R.drawable.ic_action_favorite_24dp ) ; else mFavoriteFab . setImageResource ( R.drawable.ic_action_favorite_outline_24dp ) ; break; } } 
private int matchKeywordScore ( quicklyst.Task currTask , java.lang.String keyword ) { java.lang.String [] taskNameWords = currTask . getName () . split ( " " ) ; int totalScore = 0 ; for ( java.lang.String currWord : taskNameWords ) { currWord = currWord . trim () ; if ( currWord . contains ( keyword ) ) { totalScore ++ ; } if ( currWord . equals ( keyword ) ) { totalScore ++ ; } } return totalScore ; } 
private java.lang.Object [] parseValue ( java.util.List < org.nlpcn.es4sql.parse.SQLExpr > targetList ) throws org.nlpcn.es4sql.exception.SqlParseException { java.lang.Object [] value = new java.lang.Object [ targetList . size () ] ; for ( int i = 0 ; i < ( targetList . size () ) ; i ++ ) {} return value ; } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { mView . animate () . translationX ( 0 ) . alpha ( 1 ) . setDuration ( mAnimationTime ) . setListener ( null ) ; mDeleted = false ; mDownX = 0 ; mDownY = 0 ; mVelocityTracker . recycle () ; mVelocityTracker = null ; dialog . dismiss () ; } 
private static java.lang.String printValue ( de.codesourcery.luaparser.antlr.LuaParser.ExpContext value ) { if ( ( value . getChild ( 0 ) ) instanceof de.codesourcery.luaparser.antlr.LuaParser.TableconstructorContext ) { return de.codesourcery.luaparser.LuaToJSON . printValue ( ( ( de.codesourcery.luaparser.antlr.LuaParser.TableconstructorContext ) ( value . getChild ( 0 ) ) ) ) ; } if ( ( value . getChild ( 0 ) ) instanceof de.codesourcery.luaparser.antlr.LuaParser.PrefixexpContext ) { return de.codesourcery.luaparser.LuaToJSON . printValue ( value . getChild ( 0 ) ) ; } return de.codesourcery.luaparser.LuaToJSON . evaluate ( value ) . toString () ; } 
public boolean openMatrix ( java.nio.file.Path file , org.jebtk.math.matrix.AnnotationMatrix m ) { boolean status = false ; if ( m != null ) { openMatrix ( m ) ; status = true ; } if ( status ) { mFilesModel . add ( file ) ; org.jebtk.modern.io.RecentFilesService . getInstance () . add ( file ) ; setSubTitle ( org.jebtk.core.io.PathUtils . getName ( file ) ) ; } return status ; } 
public void getDevices () { int r = org.jnetpcap.Pcap . findAllDevs ( alldevs , errbuf ) ; if ( ( r == ( org.jnetpcap.Pcap.NOT_OK ) ) || ( alldevs . isEmpty () ) ) { java.lang.System.err . printf ( "Can't read list of devices, error is %s" , errbuf . toString () ) ; } else { java.lang.System.out . println ( r ) ; devices . removeAll () ; for ( org.jnetpcap.PcapIf alldev : alldevs ) { devices . add ( alldev . getName () ) ; } } } 
private static java.lang.String getString ( java.lang.String query ) { java.sql.ResultSet result ; try ( data.DatabaseConnection connection = new data.DatabaseConnection () ) { result = connection . query ( query ) ; result . next () ; return result . getString ( 1 ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; return null ; } } 
public final < T > org.osgi.framework.ServiceRegistration < ? > registerService ( java.lang.Class < T > iface , T instance , java.util.Dictionary < java.lang.String , java.lang.String > dictionary ) { com.puresoltechnologies.commons.osgi.AbstractActivator.logger . info ( ( ( "Register service '{}' for interface '{}' (context='" + ( com.puresoltechnologies.commons.osgi.AbstractActivator.context . getBundle () . getSymbolicName () ) ) + "')." ) , instance . getClass () . getName () , iface . getName () ) ; org.osgi.framework.ServiceRegistration < ? > serviceRegistration = com.puresoltechnologies.commons.osgi.AbstractActivator.context . registerService ( iface , instance , dictionary ) ; serviceRegistrations . add ( serviceRegistration ) ; return serviceRegistration ; } 
@ java.lang.Override public org.easypr.core.Mat getHistogramFeatures ( org.easypr.core.Mat image ) { org.easypr.core.Mat grayImage = new org.easypr.core.Mat () ; cvtColor ( image , grayImage , org.easypr.core.CV_RGB2GRAY ) ; image = grayImage ; grayImage = null ; java.lang.System . gc () ; org.easypr.core.Mat img_threshold = new org.easypr.core.Mat () ; threshold ( image , img_threshold , 0 , 255 , ( ( CV_THRESH_OTSU ) + ( CV_THRESH_BINARY ) ) ) ; image = img_threshold ; img_threshold = null ; java.lang.System . gc () ; image = getTheFeatures ( image ) ; java.lang.System . gc () ; return image ; } 
private static byte reverseBitsInByte ( byte val ) { byte result = 0 ; int counter = 8 ; while ( ( counter -- ) > 0 ) { result < < = 1 ; result |= ( ( byte ) ( val & 1 ) ) ; val = ( ( byte ) ( val > > 1 ) ) ; } return result ; } 
@ java.lang.Override public void onResume () { is24HourTime = org.mcjug.aameetingmanager.util.DateTimeUtil . is24HourTime ( context ) ; updateTimeWidgets ( is24HourTime ) ; if ( ! ( showMeetingTypes ) ) { android.widget.TextView textView = ( ( android.widget.TextView ) ( getView () . findViewById ( R.id.findMeetingTypesTextView ) ) ) ; textView . setVisibility ( View.GONE ) ; if ( ( meetingTypesSpinner ) != null ) meetingTypesSpinner . setVisibility ( View.GONE ) ; } super . onResume () ; } 
@ org.springframework.context.annotation.Bean ( value = "preProcessWorkflowSteps" ) public java.util.Map < java.lang.String , com.dell.cpsd.paqx.dne.service.model.Step > preProcessWorkflowSteps () { final java.util.Map < java.lang.String , com.dell.cpsd.paqx.dne.service.model.Step > workflowSteps = new java.util.HashMap <> () ; addWorkflowSteps ( workflowSteps , "findAvailableNodes" , "listScaleIoComponents" , "listVCenterComponents" , "discoverVCenter" , "discoverNodeInventory" , "configIdrac" , "pingIdrac" , "configureObmSettings" , "configureBootDeviceIdrac" , "configurePxeBoot" , "findVCluster" , "findProtectionDomain" , "findSystemData" , "assignDefaultHostName" , "assignDefaultCredentials" ) ; return workflowSteps ; } 
private void start () { java.lang.System.out . println ( "DistrictServer Started\n" ) ; try { districtComm = new FinalProject.communication.Comm ( port ) ; districtComm . connectToParent ( java.net.InetAddress . getByName ( masterAddress ) , masterPort ) ; java.lang.Thread . sleep ( 1000 ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } this . run () ; } 
public static void unregister () { if ( ( me.guichaguri.pvptime.PvPTimeUpdater.tick ) != null ) net.minecraftforge.fml.common.FMLCommonHandler . instance () . bus () . unregister ( me.guichaguri.pvptime.PvPTimeUpdater.tick ) ; if ( ( me.guichaguri.pvptime.PvPTimeUpdater.event ) != null ) MinecraftForge.EVENT_BUS . unregister ( me.guichaguri.pvptime.PvPTimeUpdater.event ) ; me.guichaguri.pvptime.PvPTimeUpdater.tick = null ; me.guichaguri.pvptime.PvPTimeUpdater.event = null ; } 
private void addButton ( android.widget.Button btn ) { if ( ( btn . getId () ) == ( R.id.btnAdd ) ) { num1 = getDisplay () . getText () . toString () ; java.lang.System.out . println ( ( "NUM1: " + ( num1 ) ) ) ; getDisplay () . getText () . clear () ; addFunctionActive = true ; } } 
void handleGeneric ( @ javax.annotation.Nullable java.lang.String stream , @ javax.annotation.Nullable java.lang.String status ) { final java.lang.String value ; if ( stream != null ) { value = com.spotify.plugin.dockerfile.LoggingProgressHandler . trimNewline ( stream ) ; } else { value = com.google.common.base.Strings . nullToEmpty ( status ) ; } for ( java.lang.String line : com.spotify.plugin.dockerfile.LoggingProgressHandler.LINE_SPLITTER . split ( value ) ) { log . info ( line ) ; } } 
@ org.testng.annotations.DataProvider public java.lang.Object [] [] badArgs () { return new java.lang.Object [] [] { new java.lang.Object [] { null , null } , new java.lang.Object [] { 0 , null } , new java.lang.Object [] { null , java.lang.Integer.MAX_VALUE } , new java.lang.Object [] { 0 , java.lang.Integer.MAX_VALUE } , new java.lang.Object [] { null , - 1 } , new java.lang.Object [] { - 1 , null } } ; } 
public static void printToFile ( java.lang.String message ) { try ( java.io.PrintWriter writer = new java.io.PrintWriter ( new java.io.FileOutputStream ( com.uom.cse.distsearch.util.Utility.FILE_NAME ) , true ) ) { writer . println ( message ) ; } catch ( java.io.FileNotFoundException e ) { com.uom.cse.distsearch.util.Utility.LOGGER . error ( e . getMessage () , e ) ; } } 
@ java.lang.Override public void onPageScrolled ( int position , float positionOffset , int positionOffsetPixels ) { int displace = - positionOffsetPixels ; int displaceNew = ( - positionOffsetPixels ) + ( mSwipePager . getWidth () ) ; if ( positionOffset > 0.999 ) { mBackdrop . setX ( 0 ) ; mNewBackdrop . setX ( 0 ) ; } else { setTitle ( position , positionOffset ) ; mBackdrop . setX ( displace ) ; mNewBackdrop . setX ( displaceNew ) ; } setImage ( position ) ; } 
@ java.lang.Override public java.lang.String toString () { return ( ( ( ( ( ( ( ( ( ( type . toString () ) + ( layoutX ) ) + " " ) + ( layoutY ) ) + " " ) + " " ) + ( out [ 0 ] ) ) + " " ) + ( ( out.length ) > 1 ? out [ 1 ] : " " ) ) + " " ) + ( entry ) ; } 
@ org.terasology.entitySystem.event.ReceiveEvent ( components = org.terasology.logic.inventory.ItemComponent . class , priority = org.terasology.entitySystem.event.EventPriority.PRIORITY_TRIVIAL ) public void usedItem ( org.terasology.hunger.event.FoodConsumedEvent event , org.terasology.entitySystem.entity.EntityRef item ) { org.terasology.logic.inventory.ItemComponent itemComp = item . getComponent ( org.terasology.logic.inventory.ItemComponent . class ) ; if ( itemComp.consumedOnUse ) { int slot = org.terasology.logic.inventory.InventoryUtils . getSlotWithItem ( event . getInstigator () , item ) ; boolean destroyDrink = false ; if ( ( itemComp.baseDamage ) != ( java.lang.Integer.MIN_VALUE ) ) { itemComp.baseDamage = java.lang.Integer.MIN_VALUE ; } else { destroyDrink = true ; inventoryManager . removeItem ( event . getInstigator () , event . getInstigator () , slot , destroyDrink , 1 ) ; } } } 
@ org.junit.Test public void testSaveFileCreatesDirectoryAndFileIfNeeded () { java.io.File d = new java.io.File ( gui.GUI.SAVE_FOLDER ) ; this . deleteRecursivly ( d ) ; org.junit.Assert . assertFalse ( d . exists () ) ; gui.GUI gui = new gui.GUI () ; org.junit.Assert . assertTrue ( gui . saveFile () ) ; org.junit.Assert . assertTrue ( d . exists () ) ; org.junit.Assert . assertTrue ( new java.io.File ( gui.GUI.SAVE_PATH ) . exists () ) ; } 
public java.lang.String getFullName () { if ( ( ( businessName ) != null ) || ( ! ( businessName . trim () . isEmpty () ) ) ) { return businessName ; } else return ( ( firstName ) + " " ) + ( lastName ) ; } 
@ java.lang.Override public long addStation ( java.lang.String name , java.lang.String line ) { io.github.shredktp.trainschedulesrt.data.DbHelper dbHelper = new io.github.shredktp.trainschedulesrt.data.DbHelper ( context ) ; android.database.sqlite.SQLiteDatabase sqLiteDatabase = dbHelper . getWritableDatabase () ; android.content.ContentValues contentValues = new android.content.ContentValues () ; contentValues . put ( Station.Column.NAME , name ) ; contentValues . put ( Station.Column.LINE , line ) ; long result = sqLiteDatabase . insert ( Station.STATION_TABLE_NAME , null , contentValues ) ; sqLiteDatabase . close () ; return result ; } 
public void paint ( java.awt.Graphics g ) { java.awt.image.BufferedImage image = new java.awt.image.BufferedImage ( 100 , 100 , java.awt.image.BufferedImage.TYPE_BYTE_INDEXED ) ; image . createGraphics () . setColor ( getForekground () ) ; image . createGraphics () . fillRect ( 0 , 0 , 100 , 100 ) ; doll . render ( image ) ; g . drawImage ( image , 100 , 100 , null ) ; java.lang.System.out . println ( "RagCanvas::paint()" ) ; return; } 
public com.github.ilyamurzinov.datastructures.maps.HashMap.HashMapEntry < K , V > nextEntry () { com.github.ilyamurzinov.datastructures.maps.HashMap.HashMapEntry < K , V > tmp = next ; if ( ( next.next ) != null ) { next = next.next ; } ( currentBucket ) ++ ; while ( ( ( currentBucket ) < ( buckets.length ) ) && ( ( buckets [ currentBucket ] ) == null ) ) ( currentBucket ) ++ ; next = ( ( currentBucket ) < ( buckets.length ) ) ? buckets [ currentBucket ] : null ; return tmp ; } 
@ java.lang.Override public void onSuccess ( java.util.List < com.personal.coine.scorpion.jxnuhelper.bean.News > list ) { newsList = list ; com.personal.coine.scorpion.jxnuhelper.adapter.NewsListAdapter adapter = new com.personal.coine.scorpion.jxnuhelper.adapter.NewsListAdapter ( newsView . getFragmentContext () , list ) ; newsView . getListView () . setAdapter ( adapter ) ; newsView . getRefreshView () . finishRefreshing () ; newsView . hideLoading () ; } 
@ java.lang.Override public void onFailure ( retrofit2.Call < com.emolance.enterprise.data.TestReport > call , java.lang.Throwable t ) { android.util.Log . e ( com.emolance.enterprise.ui.QRScanActivity.TAG , "Failed to submit the test report." ) ; android.widget.Toast . makeText ( this , "Failed to process test report." , Toast.LENGTH_SHORT ) . show () ; if ( isFlashOn ) { turnOffFlash () ; } this . finish () ; } 
public void defaultFloat ( java.lang.String path , java.lang.Float type ) { if ( ! ( getConfig () . contains ( path ) ) ) { getConfig () . addDefault ( path , type ) ; getConfig () . options () . copyDefaults ( true ) ; } saveConfig () ; } 
public static gvlfm78.plugin.Hotels.Language getFromCode ( java.lang.String code ) { for ( gvlfm78.plugin.Hotels.Language lang : gvlfm78.plugin.Hotels.Language . values () ) { for ( java.lang.String currentCode : lang . getCodes () ) { if ( currentCode . equalsIgnoreCase ( code ) ) return lang ; } } return gvlfm78.plugin.Hotels.Language.Custom ; } 
@ java.lang.Override public boolean onBlockActivated ( net.minecraft.world.World worldIn , net.minecraft.util.math.BlockPos pos , net.minecraft.block.state.IBlockState state , net.minecraft.entity.player.EntityPlayer playerIn , net.minecraft.util.EnumHand hand , net.minecraft.util.EnumFacing facing , float hitX , float hitY , float hitZ ) { CommonProxy.snw . sendToServer ( new x3d.utils.ServerMsg ( pos ) ) ; if ( worldIn . getBlockState ( pos ) . getValue ( x3d.blocks.chromosoneblock.aboom ) ) { worldIn . createExplosion ( null , pos . getX () , pos . getY () , pos . getZ () , 12 , true ) ; return true ; } return false ; } 
@ java.lang.Override public net.nexustools.njs.compiler.RuntimeCompiler.Referencable run ( net.nexustools.njs.Global global , net.nexustools.njs.Scope scope ) { for ( ; condition . run ( global , scope ) . get () . toBool () ; loop . run ( global , scope ) . get () ) { net.nexustools.njs.compiler.RuntimeCompiler.Referencable ref = impl . run ( global , scope ) ; if ( ref instanceof net.nexustools.njs.compiler.RuntimeCompiler.Return ) { return ref ; } ref . get () ; } return net.nexustools.njs.compiler.RuntimeCompiler.UNDEFINED_REFERENCE ; } 
public static void main ( java.lang.String [] args ) { de.muenster.musikhochschule.converter.MusicXMLParser parser = new de.muenster.musikhochschule.converter.MusicXMLParser () ; parser . loadMusicXML ( new java.io.File ( "scores/xmlsamples/BeetAnGeSample.xml" ) ) ; parser . setExportFolder ( "nt/" ) ; parser . setVerbose ( false ) ; parser . exportAsNTriples () ; } 
public static void main ( java.lang.String [] arg ) throws java.lang.Exception { antiChess.AntiChess . initGame ( arg [ 0 ] ) ; antiChess.AntiChess.board . printBoard () ; if ( antiChess.AntiChess.chosenPlayer . equals ( java.awt.Color.WHITE ) ) antiChess.AntiChess . handlePruneAction () ; while ( true ) { antiChess.AntiChess.inputAction = new antiChess.MoveAnnotation ( antiChess.AntiChess.scanner . nextLine () ) ; antiChess.AntiChess . handleInputAction () ; antiChess.AntiChess . handlePruneAction () ; } } 
protected void showing () { if ( ( this . stage ) != null ) { init () ; de.uniks.networkparser.ext.generic.ReflectionLoader . call ( "setTitle" , this . stage , getTitle () ) ; try { de.uniks.networkparser.ext.generic.ReflectionLoader . call ( "show" , this . stage ) ; } catch ( java.lang.Exception e ) { errorHandler . saveException ( e , this . stage ) ; if ( de.uniks.networkparser.ext.Os . isEclipse () ) { throw e ; } } } } 
@ java.lang.Override public boolean onPreDraw () { int peak = 0 ; for ( android.view.View view : peakViews ) { view . measure ( View.MeasureSpec.UNSPECIFIED , View.MeasureSpec.UNSPECIFIED ) ; peak += view . getMeasuredHeight () ; peak += view . getPaddingTop () ; peak += view . getPaddingBottom () ; } onFirstElementHeight . accept ( peak ) ; multiView . getViewTreeObserver () . removeOnPreDrawListener ( this ) ; return false ; } 
@ javafx.fxml.FXML void save ( javafx.event.ActionEvent actionEvent ) { javafx.stage.FileChooser fileChooser = new javafx.stage.FileChooser () ; fileChooser . setTitle ( "Save Image" ) ; fileChooser . getExtensionFilters () . addAll ( new javafx.stage.FileChooser.ExtensionFilter ( "All Images" , "*.*" ) , new javafx.stage.FileChooser.ExtensionFilter ( "SER" , "*.ser" ) ) ; java.io.File file = fileChooser . showSaveDialog ( Main.primaryStage ) ; if ( file != null ) { SaveFile ( Main.commands , file ) ; } } 
@ java.lang.Override public boolean onPreferenceClick ( android.preference.Preference preference ) { if ( getMyApplication () . getSettings () . isInternetConnectionAvailable ( true ) ) { getMyApplication () . getLocationProvider () . redownloadAGPS () ; if ( ( getMyApplication () . getLocationProvider () . agpsDownloaded () ) == true ) { getMyApplication () . getSettings () . AGPS_DATA_LAST_TIME_DOWNLOADED . set ( java.lang.System . currentTimeMillis () ) ; } else { getMyApplication () . getSettings () . AGPS_DATA_LAST_TIME_DOWNLOADED . set ( 0L ) ; } } return true ; } 
public void setProjectsForPatient ( java.lang.String projectsSelected , org.phenotips.data.Patient patient ) { java.util.List < java.lang.String > projectsList = new java.util.ArrayList < java.lang.String > () ; for ( java.lang.String projectId : projectsSelected . split ( "," ) ) { org.phenotips.projects.data.Project p = new org.phenotips.projects.internal.DefaultProject ( projectId ) ; projectsList . add ( p . getFullName () ) ; } java.lang.String projects = org.apache.commons.lang3.StringUtils . join ( projectsList , org.phenotips.projects.internal.ProjectAndTemplateBinder.PROJECTS_SEPARATOR ) ; setPropertyForPatient ( patient , this . projectBindingReference , org.phenotips.projects.internal.ProjectAndTemplateBinder.PROJECT_BINDING_FIELD , projects ) ; } 
@ java.lang.Override protected void onStart () { super . onStart () ; dataSource . open () ; java.util.List < com.toddbray.basketballstats.GameModel > games = dataSource . getAllGames () ; java.util.List < com.toddbray.basketballstats.PlayerModel > players = dataSource . getAllPlayers () ; java.util.List < com.toddbray.basketballstats.StatModel > stats = dataSource . getAllStats () ; java.util.List < com.toddbray.basketballstats.SeasonModel > seasons = dataSource . getAllSeasons () ; myDataSource . execute ( getApplicationContext () ) ; } 
public void viewBookOnWeb () { if ( ( mSearchResult ) != null ) { if ( ( mSearchResult.goodReadsBestBookID ) == null ) {} java.lang.String url = jimdandy.mybooklist.Utilities.GoodReadsUtils . buildGoodReadsViewBookOnWebURL ( mSearchResult ) ; android.net.Uri webPage = android.net.Uri . parse ( url ) ; android.content.Intent webIntent = new android.content.Intent ( android.content.Intent.ACTION_VIEW , webPage ) ; if ( ( webIntent . resolveActivity ( getPackageManager () ) ) != null ) { startActivity ( webIntent ) ; } } } 
@ java.lang.Override public void run () { try { while ( serverOverseer.isRunning ) { com.kubasz561.roulette.common.JSONMessage msg = ( ( com.kubasz561.roulette.common.JSONMessage ) ( clientToServer . readObject () ) ) ; this . clientCommunicationSemaphore . acquireUninterruptibly () ; serverOverseer.gameLogicMutex . acquireUninterruptibly () ; serverOverseer.serverGameLogic . handleMessage ( msg , thisThreadsClient ) ; serverOverseer.gameLogicMutex . release () ; this . clientCommunicationSemaphore . release () ; } } catch ( java.io.IOException | java.lang.ClassNotFoundException e ) { e . printStackTrace () ; } finally { communicationManagerServer . closeAll () ; } } 
public static void start ( ) throws java.io.IOException , java.lang.ClassNotFoundException , java.lang.IllegalAccessException , java.lang.InstantiationException , javax.swing.UnsupportedLookAndFeelException , javax.xml.parsers.ParserConfigurationException , org.codehaus.plexus.util.xml.pull.XmlPullParserException , org.xml.sax.SAXException { javax.swing.UIManager . setLookAndFeel ( javax.swing.UIManager . getSystemLookAndFeelClassName () ) ; net.fabricmc.installer.gui.MainGui dialog = new net.fabricmc.installer.gui.MainGui () ; dialog . pack () ; dialog . setTitle ( "Fabric Installer" ) ; dialog . setLocationRelativeTo ( null ) ; dialog . setVisible ( true ) ; java.lang.System . exit ( 0 ) ; } 
public java.lang.Object evaluateExpression ( smartrics.rest.client.RestResponse response , java.lang.String expression , java.util.Map < java.lang.String , java.lang.String > imports ) { if ( expression == null ) { return null ; } smartrics.rest.fitnesse.fixture.support.Context context = smartrics.rest.fitnesse.fixture.support.Context . enter () ; removeOptimisationForLargeExpressions ( expression , context ) ; smartrics.rest.fitnesse.fixture.support.ScriptableObject scope = context . initStandardObjects () ; injectImports ( context , scope , imports ) ; injectFitNesseSymbolMap ( scope ) ; injectResponse ( context , scope , response ) ; java.lang.Object result = evaluateExpression ( context , scope , expression ) ; return result ; } 
public gtna.graph.Edge [] generateEdgesUnidirectional () { int index = 0 ; gtna.graph.Edge [] edges = new gtna.graph.Edge [ ( this . parent . length ) - 1 ] ; for ( int i = 0 ; i < ( this . parent . length ) ; i ++ ) { if ( i != ( - 1 ) ) { edges [ ( index ++ ) ] = new gtna.graph.Edge ( this . parent [ i ] , i ) ; } } return edges ; } 
public void activateWeapon () { if ( ( weapon ) != null ) { weapon . activateWeapon () ; if ( ( weapon ) instanceof wizzball.objects.weapons.Pistol ) { parent . playGunSound () ; } else if ( ( weapon ) instanceof wizzball.objects.weapons.LaserPistol ) { parent . playRaySound () ; try { java.lang.Thread . sleep ( 4000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } } } 
@ java.lang.Override public java.lang.String toString () { java.lang.String str = "" ; java.util.Iterator it = iterator () ; while ( it . hasNext () ) { if ( str . equals ( "" ) ) { str = str + ( it . next () ) ; } else { str = ( str + ", " ) + ( it . next () ) ; } } return ( "[ " + str ) + " ]" ; } 
public void zoomIn () { if ( ( zoom ) < 3 ) { zoom += 0.3 ; xDif = 0 ; yDif = 0 ; } else { if ( ( selectedStation ) > 0 ) { Main.state = Main.State.SPACESTATION ; } else if ( ( selectedMoon ) >= 0 ) { Main.state = Main.State.MOON ; } else { Main.state = Main.State.SURFACE ; } } } 
@ java.lang.Override public < T , C extends java.util.Collection < T > > fr.openwide.core.wicket.more.bindable.model.IBindableCollectionModel < T , C > bindCollectionWithCache ( org.bindgen.BindingRoot < ? super E , C > binding , com.google.common.base.Supplier < ? extends C > newCollectionSupplier , com.google.common.base.Function < ? super T , ? extends org.apache.wicket.model.IModel < T > > itemModelFunction ) { fr.openwide.core.commons.util.fieldpath.FieldPath path = fr.openwide.core.commons.util.fieldpath.FieldPath . fromBinding ( binding ) ; return bindCollectionWithCache ( path , newCollectionSupplier , itemModelFunction ) ; } 
@ java.lang.Override public void close ( ) throws java.sql.SQLException { if ( ! ( this . isClosed () ) ) { if ( ( this . currentResultSet ) != null ) { this . currentResultSet . close () ; } this . currentUpdateCount = - 1 ; this . connection = null ; } } 
private void addUV ( java.lang.String su , java.lang.String sv ) { if ( ( mUVs ) == null ) { mUVs = new java.util.ArrayList <> () ; } java.lang.Float u = fromString ( su ) ; java.lang.Float v = fromString ( sv ) ; if ( ( u != null ) && ( v != null ) ) { mUVs . add ( u ) ; mUVs . add ( v ) ; } } 
@ java.lang.Override public void dispose () { if ( ( shapetex ) != null ) { backtex . dispose () ; shapetex . dispose () ; startcursor . getTexture () . dispose () ; endcursor . getTexture () . dispose () ; shapetex = null ; } } 
private void twoFunctionButtonPress ( android.view.View view ) { setSingleButton () ; if ( ( ( confirmedDirections ) == true ) && ( ( currentLatitude ) != 0.0 ) ) { done = false ; forwardSuccessful = false ; stoppedSuccessful = false ; upwardSuccessful = false ; cheersText . setTextSize ( 20 ) ; cheersText . setText ( ( "Instructions: \n\n" + ( "At the same time, thrust your phones forward, bump knuckles, and up toward the sky!\n\n" + "Push the button when ready!" ) ) ) ; cheersTwoPurposeButton . setText ( "Restart" ) ; confirmedDirections = false ; } else { confirmedDirections = true ; cheersTwoPurposeButton . setText ( "Restart" ) ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; butterknife.ButterKnife . bind ( this ) ; initMapYandex () ; initBottomSheet () ; getMyLocation = new com.vladikavkaz.taxi.taxivladikavkaz.GetMyLocation ( this ) ; mapController . addMapListener ( this ) ; nextButton . setOnClickListener ( this ) ; relative_from . setOnTouchListener ( this ) ; relative_to . setOnTouchListener ( this ) ; findMeImage . setOnClickListener ( this ) ; } 
@ java.lang.Override public void onDestroy () { mHandler . removeCallbacksAndMessages ( null ) ; mTrackCompletionHandler . removeCallbacksAndMessages ( null ) ; mTimeUpdateHandler . removeCallbacksAndMessages ( null ) ; if ( mMusicBound ) { getActivity () . unbindService ( mMusicConnection ) ; } mMediaPlayerService = null ; super . onDestroy () ; boolean showDialog = getResources () . getBoolean ( R.bool.show_dialog ) ; if ( ! showDialog ) { getActivity () . finish () ; } } 
@ org.junit.Test public void validateSingleLine () { java.lang.String data = "Be not afraid of greatness:" ; java.io.ByteArrayInputStream is = new java.io.ByteArrayInputStream ( data . getBytes ( java.nio.charset.StandardCharsets.UTF_8 ) ) ; org.apache.nifi.processors.kafka.StreamTokenizer scanner = null ; scanner = new org.apache.nifi.processors.kafka.StreamTokenizer ( is ) ; assertTrue ( java.util.Arrays . equals ( "Be not afraid of greatness:\n" . getBytes ( java.nio.charset.StandardCharsets.UTF_8 ) , scanner . nextToken () ) ) ; assertNull ( scanner . nextToken () ) ; } 
public double calculateAngle ( double pixel , double width , double maxAngle , double oldAngle ) { io.github.data4all.logger.Log . d ( io.github.data4all.util.PointToCoordsTransformUtil.TAG , ( ( ( "Calculate Angle, OldAngle: " + oldAngle ) + " maxANgle: " ) + maxAngle ) ) ; if ( ( pixel - ( width / 2 ) ) == 0 ) { return oldAngle ; } double percent = ( width / 2 ) / ( pixel - ( width / 2 ) ) ; double angle = maxAngle * percent ; return oldAngle + angle ; } 
@ org.junit.Test public void whenSavingAProjectWithOrderNumberBeyondLastAndTheProjectsRetrievedHasAnItemThenOrderShouldBeAfterThatObject () { org.mockito.Mockito . when ( projectPaginatedScanList . stream () ) . thenReturn ( java.util.stream.Stream . of ( getProject ( "projectFirst" , 1 ) ) ) ; java.lang.String projectId = "newProject" ; projectsRepository . save ( getProject ( projectId , 15 ) ) ; org.mockito.Mockito . verify ( dynamoDBMapper ) . save ( getProject ( projectId , 2 ) ) ; } 
private void toggleCollecting ( boolean enable ) { if ( ( ! ( com.adsamcik.signalcollector.Services.TrackerService.isActive ) ) || ( ( com.adsamcik.signalcollector.Services.TrackerService.isActive ) == enable ) ) return; if ( checkAllTrackingPermissions () ) { if ( ! ( com.adsamcik.signalcollector.Services.TrackerService.isActive ) ) { android.content.Intent trackerService = new android.content.Intent ( com.adsamcik.signalcollector.MainActivity.instance , com.adsamcik.signalcollector.Services.TrackerService . class ) ; trackerService . putExtra ( "approxSize" , com.adsamcik.signalcollector.DataStore . sizeOfData () ) ; startService ( trackerService ) ; com.adsamcik.signalcollector.Services.TrackerService.service = trackerService ; } else { stopService ( TrackerService.service ) ; } } } 
private matjuice.codegen.Stmt genAssignLiteralStmt ( matjuice.codegen.TIRAssignLiteralStmt tirStmt ) { java.util.Map < java.lang.String , matjuice.analysis.ConstInfo > map = constMap . get ( tirStmt ) ; java.lang.String lhs = matjuice.codegen.Generator . getSingleLhs ( tirStmt ) ; if ( ( map . containsKey ( lhs ) ) && ( map . get ( lhs ) . isConst () ) ) { locals . remove ( lhs ) ; return new matjuice.codegen.StmtNull () ; } return new matjuice.codegen.StmtAssign ( lhs , genExpr ( tirStmt . getRHS () ) ) ; } 
private org.jasig.portal.groups.pags.IPersonTester initializeTester ( org.jasig.portal.groups.pags.dao.IPersonAttributesGroupTestDefinition test ) { try { java.lang.Class < ? > testerClass = java.lang.Class . forName ( test . getTesterClassName () ) ; java.lang.reflect.Constructor < ? > c = testerClass . getConstructor ( new java.lang.Class [] { org.jasig.portal.groups.pags.dao.IPersonAttributesGroupTestDefinition . class } ) ; java.lang.Object o = c . newInstance ( new java.lang.Object [] { test } ) ; return ( ( org.jasig.portal.groups.pags.IPersonTester ) ( o ) ) ; } catch ( java.lang.Exception e ) { logger . error ( "Error in initializing tester class: {}" , test . getTesterClassName () , e ) ; return null ; } } 
@ java.lang.Override public int compareTo ( org.chiefacc.core.PersonPairPay pp ) { if ( this . sum . equals ( pp . getSum () ) ) { return getBothNames () . compareTo ( pp . getBothNames () ) ; } else { return pp . getSum () . compareTo ( this . sum ) ; } } 
public void onEnable () { super . onEnable () ; getLogger () . info ( "Has debug: " ) ; if ( ! ( getConfig () . getBoolean ( "dont-load-example" , false ) ) ) { saveDefaultConfig () ; getConfig () . options () . copyDefaults ( true ) ; saveConfig () ; reloadConfig () ; } getServer () . getPluginManager () . registerEvents ( this , this ) ; this . getCommand ( "gui" ) . setExecutor ( this ) ; } 
public org.wso2.carbon.business.rules.core.bean.BusinessRule findBusinessRule ( java.lang.String businessRuleUUID ) throws org.wso2.carbon.business.rules.core.exceptions.TemplateManagerException { for ( java.util.Map.Entry availableBusinessRule : availableBusinessRules . entrySet () ) { if ( availableBusinessRule . getKey () . equals ( businessRuleUUID ) ) { return ( ( org.wso2.carbon.business.rules.core.bean.BusinessRule ) ( availableBusinessRule ) ) ; } } throw new org.wso2.carbon.business.rules.core.exceptions.TemplateManagerException ( ( "No Business Rule found with the UUID : " + businessRuleUUID ) ) ; } 
public double deriveDouble01 ( double neutralIndication ) { if ( ( ! ( gmjonker.math.NaType . isValue ( value ) ) ) || ( ! ( gmjonker.math.NaType . isValue ( confidence ) ) ) ) return gmjonker.math.NaType.NA ; if ( ( value ) > 0 ) { return neutralIndication + ( ( ( value ) * ( 1 - neutralIndication ) ) * ( confidence ) ) ; } else { return ( neutralIndication * ( 1 + ( value ) ) ) * ( confidence ) ; } } 
@ java.lang.Override public void keyReleased ( java.awt.event.KeyEvent event ) { switch ( event . getKeyCode () ) { case java.awt.event.KeyEvent.VK_S : down = false ; break; case java.awt.event.KeyEvent.VK_A : left = false ; break; case java.awt.event.KeyEvent.VK_D : right = false ; break; case java.awt.event.KeyEvent.VK_W : up = false ; break; } } 
private de.scrum_master.dancing_links.Column chooseColumn () { de.scrum_master.dancing_links.Column mandatoryColumnWithFewestRemainingRows = null ; int fewestRemainingRows = java.lang.Integer.MAX_VALUE ; for ( de.scrum_master.dancing_links.Column column = ( ( de.scrum_master.dancing_links.Column ) ( rootObject.right ) ) ; column != ( rootObject ) ; column = ( ( de.scrum_master.dancing_links.Column ) ( column.right ) ) ) { if ( ( ! ( column.optional ) ) && ( ( column.size ) < fewestRemainingRows ) ) fewestRemainingRows = column.size ; mandatoryColumnWithFewestRemainingRows = column ; } return mandatoryColumnWithFewestRemainingRows ; } 
static void write ( java.lang.String message ) { try { com.aktheknight.discordbot.Logger.writer . write ( ( message + "\n" ) ) ; com.aktheknight.discordbot.Logger.writer . flush () ; } catch ( java.lang.Exception e ) { java.lang.System.out . println () ; java.lang.System.out . println ( "ERROR. Unable to write to logging file" ) ; java.lang.System.out . println ( "Please report this to AK" ) ; java.lang.System.out . println () ; e . printStackTrace () ; } } 
private void help () { try { java.lang.StringBuilder info = util.FileHandler . readStringBuilder ( "information" ) ; info . append ( util.FileHandler . readStringBuilder ( "commandHelp" ) ) ; notifier . send ( ( ( answerCommand ) + ( info . toString () ) ) ) ; } catch ( java.lang.Exception ex ) { java.lang.String error = "Error when reading help file." ; logging.Logger . logMessage ( 'E' , this , error ) ; notifier . send ( ( ( answerCommand ) + error ) ) ; } } 
public boolean isSameTask ( seedu.manager.model.task.ReadOnlyTask task ) { return ( ( ( getFullDesc () . equals ( task . getDesc () . getValue () ) ) && ( getVenue () . equals ( task . getVenue () . value ) ) ) && ( getTime () . equals ( task . getTime () . getValue () ) ) ) && ( getPriority () . equals ( task . getPriority () . getValue () ) ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/removeKnowledgeBase" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) @ org.springframework.web.bind.annotation.ResponseBody public java.util.List < com.sogeti.VO.KnowledgeBaseVO > removeKnowledgeBase ( @ org.springframework.web.bind.annotation.RequestBody com.sogeti.VO.KnowledgeBaseVO kbvo , javax.servlet.http.HttpServletRequest request ) { java.util.List < com.sogeti.VO.KnowledgeBaseVO > knowledgeBaseList = new java.util.ArrayList < com.sogeti.VO.KnowledgeBaseVO > () ; try { com.sogeti.model.KnowledgeBase kb = knowLedgeBaseService . getKnowledgeBaseById ( kbvo . getKid () ) ; boolean result = knowLedgeBaseService . removeknowledgeBaseForUser ( kb ) ; knowledgeBaseList = this . getAllKnowledgebase ( request ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return knowledgeBaseList ; } 
public static void sort ( java.lang.Comparable [] a , java.lang.Comparable [] aux , int low , int high ) { int mid = low + ( ( high - low ) / 2 ) ; if ( high <= low ) return; Algorithms.Sorting.MergeSort . sort ( a , aux , low , mid ) ; Algorithms.Sorting.MergeSort . sort ( a , aux , ( mid + 1 ) , high ) ; Algorithms.Sorting.MergeSort . merge ( a , aux , low , high , mid ) ; } 
private java.lang.String resolvePlaceholders ( java.lang.String input ) { java.lang.String output = input ; for ( java.util.Map.Entry < java.lang.String , java.lang.String > entry : placeholderStore . entrySet () ) { output = input . replace ( java.lang.String . format ( "${%s}" , entry . getKey () ) , entry . getValue () ) ; } return output ; } 
public int modeRandom ( GameState currState ) { java.util.Random rand = new java.util.Random () ; int nextMove = rand . nextInt ( 7 ) ; while ( ! ( currState . isValidMove ( nextMove ) ) ) { nextMove = rand . nextInt ( 7 ) ; } return nextMove ; } 
@ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public void onPlayerLogin ( @ org.jetbrains.annotations.NotNull final net.minecraftforge.fml.common.gameevent.PlayerEvent.PlayerLoggedInEvent event ) { if ( ( event.player ) instanceof net.minecraft.entity.player.EntityPlayerMP ) { com.minecolonies.coremod.MineColonies . getNetwork () . sendTo ( new com.minecolonies.coremod.network.messages.ServerUUIDMessage () , ( ( net.minecraft.entity.player.EntityPlayerMP ) ( event.player ) ) ) ; com.minecolonies.coremod.MineColonies . getNetwork () . sendTo ( new com.minecolonies.coremod.network.messages.ColonyStylesMessage () , ( ( net.minecraft.entity.player.EntityPlayerMP ) ( event.player ) ) ) ; com.minecolonies.coremod.colony.ColonyManager . syncAllColoniesAchievements () ; } } 
private void declareSuper ( java.lang.Class d , com.redhat.ceylon.compiler.typechecker.tree.Tree.ExtendedType that ) { if ( ! ( prototypeStyle ) ) out ( "var " ) ; if ( prototypeStyle ) { self ( d ) ; out ( "." ) ; } out ( "$super" ) ; out ( d . getExtendedTypeDeclaration () . getName () ) ; out ( "=" ) ; out ( d . getExtendedTypeDeclaration () . getName () ) ; that . getInvocationExpression () . visit ( this ) ; out ( ";" ) ; endLine () ; } 
private boolean sendPutRequest ( org.cmg.jresp.topology.PointToPoint l , org.cmg.jresp.knowledge.Tuple t ) throws java.io.IOException , java.lang.InterruptedException { for ( org.cmg.jresp.topology.MessageSender p : ports ) { if ( p . canSendTo ( l ) ) { int session = getSession () ; org.cmg.jresp.comp.Pending < java.lang.Boolean > pending = new org.cmg.jresp.comp.Pending < java.lang.Boolean > () ; putPending . put ( session , pending ) ; p . sendPutRequest ( l , getName () , session , t ) ; return true ; } } return false ; } 
public com.company.Vertex deleteMin () { com.company.Vertex min = this . heap [ 0 ] ; this . heap [ 0 ] = this . heap [ this . size ] ; this . size = ( this . size ) - 1 ; this . minHeapify ( this . heap , this . heap [ 0 ] , 0 ) ; return min ; } 
@ java.lang.Override public com.tqmall.search.canal.RowChangedData.Insert apply ( com.alibaba.otter.canal.protocol.CanalEntry.RowData rowData ) { com.tqmall.search.canal.RowChangedData.Insert insert = new com.tqmall.search.canal.RowChangedData.Insert ( null ) ; for ( com.alibaba.otter.canal.protocol.CanalEntry.Column c : rowData . getAfterColumnsList () ) { insert.fieldValueMap . put ( c . getName () , c . getValue () ) ; } return insert ; } 
private static WindowManager.LayoutParams getSecondFloatWindowLayoutParmas ( android.content.Context context ) { android.view.WindowManager.LayoutParams lp = new android.view.WindowManager.LayoutParams () ; lp.type = WindowManager.LayoutParams.TYPE_SYSTEM_ERROR ; lp.flags = ( ( WindowManager.LayoutParams.FLAG_SHOW_WHEN_LOCKED ) | ( WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL ) ) | ( WindowManager.LayoutParams.FLAG_WATCH_OUTSIDE_TOUCH ) ; lp.format = android.graphics.PixelFormat.TRANSLUCENT ; int [] screenSize = org.vliux.android.gesturecut.util.ScreenUtil . getScreenSize ( context ) ; lp.width = WindowManager.LayoutParams.MATCH_PARENT ; lp.height = WindowManager.LayoutParams.MATCH_PARENT ; lp.gravity = android.view.Gravity.CENTER ; lp.flags |= WindowManager.LayoutParams.FLAG_DIM_BEHIND ; lp.dimAmount = 0.7F ; return lp ; } 
public void showDialog () { javafx.stage.Stage stage = new javafx.stage.Stage () ; javafx.scene.layout.BorderPane root ; try { root = ( ( javafx.scene.layout.BorderPane ) ( javafx.fxml.FXMLLoader . load ( getClass () . getClassLoader () . getResource ( "fxmls/AddBook.fxml" ) ) ) ) ; javafx.scene.Scene scene = new javafx.scene.Scene ( root , 275 , 245 ) ; stage . setScene ( scene ) ; stage . setTitle ( "BookChat Client" ) ; stage . show () ; } catch ( java.io.IOException e ) { com.dkohut.bookchat.controllers.AddBookController.LOGGER . info ( e . getMessage () ) ; } } 
public void onResults ( android.os.Bundle results ) { android.util.Log . d ( us.nijikon.livelylauncher.VoiceRecognitionService.TAG , "on results" ) ; java.util.ArrayList < java.lang.String > matches = null ; if ( results != null ) { matches = results . getStringArrayList ( SpeechRecognizer.RESULTS_RECOGNITION ) ; if ( matches != null ) { textView . setText ( matches . get ( 0 ) ) ; android.util.Log . d ( us.nijikon.livelylauncher.VoiceRecognitionService.TAG , matches . toString () ) ; speechRecognizer . stopListening () ; } } } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) @ java.lang.Override public java.util.List < by.robotun.webapp.domain.Lot > selectMyResponsesLimitOffset ( int offset , int idUser ) throws by.robotun.webapp.exeption.DaoException { java.lang.Integer limit = java.lang.Integer . parseInt ( propertyManager . getValue ( PropertyName.AJAX_LOT_MAXSIZE ) ) ; java.util.List < by.robotun.webapp.domain.Lot > lots = entityManager . createNamedQuery ( "Lot.findLotsRespondedUser" ) . setParameter ( "id" , idUser ) . setFirstResult ( ( offset * limit ) ) . setMaxResults ( limit ) . getResultList () ; return lots ; } 
public boolean replace ( K key , V oldValue , V newValue , org.ehcache.internal.store.offheap.factories.EhcacheSegmentFactory.ValueComparator < V > comparator ) { org.ehcache.internal.store.offheap.factories.EhcacheSegmentFactory.EhcacheSegment segment = ( ( org.ehcache.internal.store.offheap.factories.EhcacheSegmentFactory.EhcacheSegment ) ( org.ehcache.internal.store.offheap.EhcacheConcurrentOffHeapClockCache . segmentFor ( key ) ) ) ; return segment . replace ( key , oldValue , newValue , comparator ) ; } 
public semant.Code visit ( semant.While whyle ) { semant.Code c = new semant.Code () ; semant.Inst inst = new semant.Loop ( whyle.b . accept ( this ) , whyle.s . accept ( this ) ) ; ++ ( controlPoint ) ; whyle.controlPoint = controlPoint ; inst.stmControlPoint = controlPoint ; c . add ( inst ) ; return c ; } 
private java.util.List < java.lang.String > createCategoryList ( java.lang.String categoryName ) { com.grouptwo.zalada.stockmanage.domain.Category category = mongoTemplete . findOne ( queryByName ( categoryName ) , com.grouptwo.zalada.stockmanage.domain.Category . class ) ; java.util.List < java.lang.String > categoryList = new java.util.ArrayList <> () ; categoryList . add ( categoryName ) ; for ( java.lang.String eachParent : category . getParents () ) { categoryList . add ( eachParent ) ; } for ( java.lang.String eachChild : category . getChildren () ) { categoryList . add ( eachChild ) ; } return categoryList ; } 
< T > com.hazelcast.core.ExecutionCallback < T > newOnGetCallback ( final long startNanos ) { return new com.hazelcast.core.ExecutionCallback () { @ java.lang.Override public void onResponse ( java.lang.Object response ) { onGet ( startNanos , ( response != null ) ) ; } @ java.lang.Override public void onFailure ( java.lang.Throwable t ) {} } ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { java.lang.Long currMedID = medService . getMedicine ( medName ) . getId () ; java.util.ArrayList < java.lang.Long > remIDs = reminderService . getAllMedReminderIDs ( medService . getMedicine ( medName ) . getId () ) ; cancelAlarm ( currMedID , remIDs ) ; reminderService . deleteMedReminderByMedId ( currMedID ) ; medNames . remove ( position ) ; if ( medNames . isEmpty () ) { medNamesListView . setVisibility ( View.INVISIBLE ) ; } notifyDataSetChanged () ; } 
@ org.junit.Test public void testPollExcepts ( ) throws java.lang.Exception { CloudWatchMonitor c = new CloudWatchMonitor ( mockClient ) ; c . setLogsLocation ( new com.amazonaws.services.codebuild.model.LogsLocation () ) ; com.amazonaws.services.codebuild.model.InvalidInputException e = new com.amazonaws.services.codebuild.model.InvalidInputException ( "no logs" ) ; org.mockito.Mockito . when ( mockClient . getLogEvents ( org.mockito.Matchers . any ( com.amazonaws.services.logs.model.GetLogEventsRequest . class ) ) ) . thenThrow ( e ) ; c . pollForLogs () ; assertLogsContainExceptionMessage ( c , e ) ; } 
private com.taozeyu.calico.generator.PageService createPageService ( java.lang.String [] pathCells , java.lang.String extensionName ) { int endOfExistDirIndex = findEndOfExistDirIndex ( pathCells , extensionName ) ; java.lang.String path = getTemplateDirPath ( pathCells , endOfExistDirIndex ) ; java.lang.String validPagePath = findValidPagePath ( path , extensionName ) ; if ( validPagePath != null ) { java.lang.String params = selectParamsFromPath ( pathCells , ( endOfExistDirIndex + 1 ) ) ; return new com.taozeyu.calico.generator.PageService ( runtimeContext , resource , validPagePath , params ) ; } return null ; } 
public java.lang.String userLabel ( int idx ) { frame.UserFrame uFrame = getUserFrame ( idx ) ; if ( uFrame != null ) { if ( ( uFrame . getName () . length () ) > 0 ) { return java.lang.String . format ( "%s (%d)" , uFrame . getName () , ( idx + 1 ) ) ; } return java.lang.Integer . toString ( idx ) ; } return null ; } 
public void add ( int data ) { testrepo.basiclinklist.Node tmp = new testrepo.basiclinklist.Node ( data ) ; testrepo.basiclinklist.Node current = head ; while ( ( current . getNext () ) != null ) { current = current . getNext () ; } current . setNext ( tmp ) ; ( listcount ) ++ ; } 
private static void getHappiness ( org.jsoup.nodes.Document doc , io.github.endreman0.javajson.nodes.ObjectNode data ) { io.github.endreman0.pokedex.io.WebIO.logger . entry ( doc , data ) ; data . put ( "happiness" , num ( java.lang.Integer . parseInt ( doc . getElementsByClass ( "dextable" ) . get ( 1 ) . child ( 0 ) . child ( 3 ) . child ( 1 ) . text () ) ) ) ; io.github.endreman0.pokedex.io.WebIO.logger . exit () ; } 
public static bammerbom.ultimatecore.spongeapi.api.UPlayer getPlayer ( org.spongepowered.api.entity.player.User p ) { for ( bammerbom.ultimatecore.spongeapi.api.bammerbom.ultimatecore.spongeapi.api.UPlayer pl : bammerbom.ultimatecore.spongeapi.api.UC.uplayers ) { if ( pl.uuid . equals ( p . getUniqueId () ) ) { return pl ; } } bammerbom.ultimatecore.spongeapi.api.bammerbom.ultimatecore.spongeapi.api.UPlayer pl = new bammerbom.ultimatecore.spongeapi.api.bammerbom.ultimatecore.spongeapi.api.UPlayer ( p ) ; if ( pl . getPlayer () . isOnline () ) { bammerbom.ultimatecore.spongeapi.api.UC.uplayers . add ( pl ) ; } return pl ; } 
@ java.lang.Override public void connectionRemoved ( com.hazelcast.nio.Connection connection ) { if ( connection . getEndPoint () . equals ( ownerConnectionAddress ) ) { if ( client . getLifecycleService () . isRunning () ) { clusterExecutor . execute ( new java.lang.Runnable () { @ java.lang.Override public void run () { try { fireConnectionEvent ( LifecycleEvent.LifecycleState.CLIENT_DISCONNECTED ) ; connectToCluster () ; } catch ( java.lang.Exception e ) { logger . warning ( "Could not re-connect to cluster shutting down the client" , e ) ; client . getLifecycleService () . shutdown () ; } } } ) ; } } } 
@ java.lang.Override public void onCreate () { super . onCreate () ; dataSource = org.melayjaire.boimela.data.BookDataSource . getInstance ( this , new org.melayjaire.boimela.data.BookDataSource.OnDataChangeListener () { @ java.lang.Override public void onUpdate () { createPublisherToBooksMap () ; } } ) ; dataSource . open () ; createPublisherToBooksMap () ; nearbyPublishers = new java.util.HashSet <> () ; userLocationListener = new org.melayjaire.boimela.service.BookTrackerService.UserLocationListener ( this ) ; notifyUser ( getDummyBooks () ) ; } 
public int height ( algo.data.structures.BinaryNode < T > currentNode ) { if ( currentNode == null ) return - 1 ; int leftHeight = height ( currentNode . getLeft () ) ; int rightHeight = height ( currentNode . getRight () ) ; return leftHeight > rightHeight ? leftHeight + 1 : rightHeight + 1 ; } 
public static void registerAddon ( mcp.mobius.waila.api.IWailaRegistrar register ) { net.darkhax.wawla.addons.vanillamc.AddonVanillaEntities dataProvider = new net.darkhax.wawla.addons.vanillamc.AddonVanillaEntities () ; register . registerBodyProvider ( dataProvider , net.minecraft.entity.passive.EntityHorse . class ) ; register . registerNBTProvider ( dataProvider , net.minecraft.entity.passive.EntityHorse . class ) ; register . registerBodyProvider ( dataProvider , net.minecraft.entity.passive.EntityVillager . class ) ; register . registerBodyProvider ( dataProvider , net.minecraft.entity.passive.EntityVillager . class ) ; } 
public Model.BasicCell getCell ( java.lang.String celltype , int row , int col ) throws Exception.CellException { Model.BasicCell cell = null ; switch ( celltype ) { case Model.CellFactory.FIRE : cell = new Cell.FireCell ( row , col ) ; break; case Model.CellFactory.GAMEOFLIFE : cell = new Cell.LifeCell ( row , col ) ; break; case Model.CellFactory.WATOR : cell = new Cell.WatorCell ( row , col ) ; break; default: throw new Exception.CellException ( "TypeNotFound" ) ; } return cell ; } 
@ java.lang.Override public void onActivityCreated ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onActivityCreated ( savedInstanceState ) ; friends = new java.util.ArrayList <> () ; newfriends = new java.util.ArrayList <> () ; getfriends () ; getNewfriends () ; bindViews () ; populate () ; } 
@ java.lang.Override public void run () { while ( true ) { long timeLimit = ( java.lang.System . currentTimeMillis () ) - ( ( ( 24 * 60 ) * 60 ) * 1000 ) ; messageCollection . deleteMany ( com.mongodb.client.model.Filters . lt ( "date" , timeLimit ) ) . toString () ; try { java.util.concurrent.TimeUnit.HOURS . sleep ( 1 ) ; } catch ( java.lang.InterruptedException e ) { org.nenl.chatstorage.DatabaseCleanerDaemon.logger . error ( e . getMessage () ) ; } } } 
private static com.archimatetool.model.IDiagramModel getModelFromFile () { com.archimatetool.model.IDiagramModel diagramModel = null ; try { java.util.List < com.archimatetool.model.IDiagramModel > iDModels = ( ( mainCls . getArchiModelFromFile () ) != null ) ? mainCls . getArchiModelFromFile () . getDiagramModels () : null ; if ( iDModels != null ) { java.lang.System.out . println ( ( "Size of iDModels --------------------- " + ( iDModels . size () ) ) ) ; diagramModel = iDModels . get ( 3 ) ; } } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return diagramModel ; } 
public void saveModel () { savePath = ( this . sourcesPath . getPath () ) + "\\prettyPrint" ; java.io.File savePathFile = new java.io.File ( savePath ) ; if ( ! ( savePathFile . exists () ) ) { if ( ! ( savePathFile . mkdir () ) ) { java.lang.System.out . println ( ">> !!! Error while creating the save directory. " ) ; return; } } App.launcher . setSourceOutputDirectory ( savePath ) ; App.launcher . prettyprint () ; } 
public static void main ( java.lang.String [] args ) throws java.lang.Exception { BoardTests . testGetBlockNumberXY ( false ) ; BoardTests . testGetBlockNumber ( false ) ; BoardTests . testHamming ( false ) ; BoardTests . testManhattan ( false ) ; BoardTests . testIsGoal ( false ) ; BoardTests . testTwin ( false ) ; BoardTests . testEquals ( false ) ; BoardTests . testNeighbors ( true ) ; } 
public static void test_019 () { framework.common.GalleryCommon . deleteMoreGallery () ; framework.common.GalleryCommon . clickGroup () ; check ( testcase.Object_Description , testcase.Operation_WaitForExists , "更多选项" , "10000" ) ; excute ( testcase.Object_Description , testcase.Operation_ClickWait , "更多选项" ) ; excute ( testcase.Object_Text , testcase.Operation_ClickWait , "详细信息" ) ; excute ( testcase.Object_ResourceId , testcase.Operation_checkExist , "android:id/content" ) ; } 
@ java.lang.Override public java.util.List < com.facebook.react.uimanager.ViewManager > createViewManagers ( com.facebook.react.bridge.ReactApplicationContext reactContext ) { com.airbnb.android.react.maps.AirMapCalloutManager calloutManager = new com.airbnb.android.react.maps.AirMapCalloutManager () ; com.airbnb.android.react.maps.AirMapMarkerManager annotationManager = new com.airbnb.android.react.maps.AirMapMarkerManager () ; com.airbnb.android.react.maps.AirMapPolylineManager polylineManager = new com.airbnb.android.react.maps.AirMapPolylineManager ( reactContext ) ; com.airbnb.android.react.maps.AirMapPolygonManager polygonManager = new com.airbnb.android.react.maps.AirMapPolygonManager ( reactContext ) ; com.airbnb.android.react.maps.AirMapCircleManager circleManager = new com.airbnb.android.react.maps.AirMapCircleManager ( reactContext ) ; com.airbnb.android.react.maps.AirMapManager mapManager = new com.airbnb.android.react.maps.AirMapManager ( reactContext . getBaseContext () ) ; return java.util.Arrays . < com.facebook.react.uimanager.ViewManager > asList ( calloutManager , annotationManager , polylineManager , polygonManager , circleManager , mapManager ) ; } 
private void checkNameConsistency ( com.google.gwt.dev.jjs.ast.JMember member ) { if ( member instanceof com.google.gwt.dev.jjs.ast.JMethod ) { java.lang.String jsName = member . getJsName () ; for ( com.google.gwt.dev.jjs.ast.JMethod jMethod : ( ( com.google.gwt.dev.jjs.ast.JMethod ) ( member ) ) . getOverriddenMethods () ) { java.lang.String parentName = jMethod . getJsName () ; if ( ( parentName != null ) && ( ! ( parentName . equals ( jsName ) ) ) ) { logError ( member , "%s cannot be assigned a different JavaScript name than the method it overrides." , com.google.gwt.dev.jjs.impl.JsInteropRestrictionChecker . getMemberDescription ( member ) ) ; break; } } } } 
public static java.io.FileReader download ( java.lang.String fileName , com.amazon.proposalcalculator.enums.ProductName productName ) throws java.io.IOException { com.amazon.proposalcalculator.reader.PriceListDownloader.LOGGER . info ( java.lang.String . format ( "Downloading price list for %s. This might take a while..." , productName ) ) ; java.net.URL website = new java.net.URL ( java.lang.String . format ( com.amazon.proposalcalculator.reader.PriceListDownloader.URL_PRICE_LIST , fileName ) ) ; java.io.File file = new java.io.File ( fileName ) ; org.apache.commons.io.FileUtils . copyURLToFile ( website , file , com.amazon.proposalcalculator.reader.PriceListDownloader.CONNECTION_TIMEOUT , com.amazon.proposalcalculator.reader.PriceListDownloader.READ_TIMEOUT ) ; com.amazon.proposalcalculator.reader.PriceListDownloader.LOGGER . info ( java.lang.String . format ( "Price list for %s downloaded." , productName ) ) ; return new java.io.FileReader ( file ) ; } 
@ java.lang.Override protected void runInternal ( ) throws com.github.blahord.integral.ComponentException { if ( ( parseException ) != null ) { throw new com.github.blahord.integral.ComponentException ( "Error while parsing document" , parseException ) ; } acquireLock ( outputLock ) ; if ( ( dataRowToOutput ) == ( com.github.blahord.integral.data.DataRow.EOI ) ) { finishProcessing () ; } else { addToOutput ( outputName , dataRowToOutput ) ; } dataRowToOutput = null ; readLock . release () ; } 
@ java.lang.Override public void visitParameter ( java.lang.String name , int modifiers ) { final dyvil.tools.compiler.ast.parameter.IParameter parameter = this . method . getExternalParameterList () . get ( this . parameterIndex ) ; if ( parameter == null ) { return; } ( this . parameterIndex ) ++ ; final dyvil.tools.parsing.Name name1 = dyvil.tools.parsing.Name . fromQualified ( name ) ; parameter . setName ( name1 ) ; parameter . setLabel ( name1 ) ; if ( modifiers != 0 ) { parameter . getModifiers () . addIntModifier ( modifiers ) ; } } 
public void addFirst ( Item item ) { if ( item == null ) throw new java.lang.NullPointerException ( "add null item!" ) ; if ( ( size () ) == ( stored.length ) ) resize ( ( 2 * ( stored.length ) ) ) ; if ( ( -- ( first ) ) < 0 ) first = ( stored.length ) - 1 ; stored [ first ] = item ; } 
private static org.bson.Document getTaskFromMongoDB ( int pybossa_task_id ) { try { com.mongodb.client.MongoCollection < org.bson.Document > collection = sociam.pybossa.TaskCollector.database . getCollection ( Config.taskCollection ) ; org.bson.Document myDoc = collection . find ( eq ( "pybossa_task_id" , pybossa_task_id ) ) . first () ; return myDoc ; } catch ( java.lang.Exception e ) { sociam.pybossa.TaskCollector.logger . error ( ( "Error " + e ) ) ; return null ; } } 
public java.util.Date getItemValueDate ( java.lang.String aName ) { try { aName = aName . toLowerCase () ; java.util.List < ? > v = getItemValue ( aName ) ; if ( ( v . size () ) == 0 ) return null ; java.lang.Object o = v . get ( 0 ) ; if ( ! ( o instanceof java.util.Date ) ) return null ; return ( ( java.util.Date ) ( o ) ) ; } catch ( java.lang.ClassCastException e ) { return null ; } } 
public int getIndexOfTodaysSchedule () { java.util.Date today = getTodaysDate () ; java.util.Date [] schedules = mWeeklySchedule . keySet () . toArray ( new java.util.Date [ mWeeklySchedule . size () ] ) ; for ( int i = 0 ; i < ( schedules.length ) ; i ++ ) { if ( schedules [ i ] . equals ( today ) ) return i ; } return 0 ; } 
private void favoritesClicked ( int position , com.thecodebuilders.adapter.ThumbnailListAdapter.ElementViewHolder thisViewHolder ) { com.thecodebuilders.babysbrilliant.ListItem listItem = elements . get ( position ) ; if ( listItem . isFavorite () ) { mainActivity . removeFromFavorites ( listItem . getRawJSON () ) ; setLookToNotFavorite ( thisViewHolder ) ; } else { listItem.isFavorite = true ; mainActivity . addToFavorites ( listItem . getRawJSON () ) ; setLookToFavorite ( thisViewHolder ) ; } } 
@ com.is0967.menutri.controllers.RequestMapping ( value = "/certify/{id}" , method = RequestMethod.GET ) @ com.is0967.menutri.controllers.ResponseBody public com.is0967.menutri.dtos.ResponseDTO certify ( @ com.is0967.menutri.controllers.PathVariable java.lang.Long userID ) { logger . info ( ( "CERTIFY USER ID: " + userID ) ) ; com.is0967.menutri.entities.User user = userService . certify ( userID ) ; if ( user != null ) { com.is0967.menutri.dtos.ResponseDTO responseDTO = new com.is0967.menutri.dtos.ResponseDTO ( Constant.Code.USER_CERTIFY_SUCCESS , "certify thành công" ) ; responseDTO . addObject ( Constant.JsonName.USER , user ) ; return responseDTO ; } else { return new com.is0967.menutri.dtos.ResponseDTO ( Constant.Code.USER_CERTIFY_FAIL , "lỗi server hoặc user không thuộc role có thể certify" ) ; } } 
@ com.ib.booking.basket.controller.RequestMapping ( value = "/{basketId}/remove/{productId}" , method = RequestMethod.DELETE ) org.springframework.http.ResponseEntity < com.ib.commercial.model.Basket > remove ( @ com.ib.booking.basket.controller.PathVariable java.lang.Long basketId , @ com.ib.booking.basket.controller.PathVariable java.lang.Long productId ) { log . debug ( ( ( ( "Basket #" + basketId ) + " Add Product#" ) + productId ) ) ; com.ib.commercial.model.Product product = productrepository . getProduct ( productId ) ; com.ib.commercial.model.Basket basket = basketRepository . get ( basketId ) ; basket . getProducts () . add ( product ) ; basketRepository . update ( basket ) ; return new org.springframework.http.ResponseEntity ( basket , null , org.springframework.http.HttpStatus.OK ) ; } 
@ org.junit.Test public void testOpenFile ( ) throws java.lang.Exception { long id = - 1 ; try { id = org.eclipse.dawnsci.hdf5.HDF5FileFactory . H5Fopen ( org.eclipse.dawnsci.hdf5.Hdf5Test.TestFileAbsolutePath , HDF5Constants.H5F_ACC_RDONLY , HDF5Constants.H5P_DEFAULT ) ; if ( id < 0 ) throw new java.lang.Exception ( "Cannot open hdf5 file!" ) ; } finally { if ( id > ( - 1 ) ) ncsa.hdf.hdf5lib.H5 . H5Fclose ( id ) ; } } 
public void control ( float deltaTime , com.badlogic.gdx.utils.Array < com.lothbrok.game.model.entities.Enemy > enemies , com.lothbrok.game.model.entities.Player player ) { if ( player == null ) { return; } for ( int i = 0 ; i < ( enemies.size ) ; i ++ ) { controlEnemy ( enemies . get ( i ) , deltaTime , player ) ; } } 
@ java.lang.Override public void onLoadFinished ( android.support.v4.content.Loader < java.util.List < com.example.android.miwok.News > > loader , java.util.List < com.example.android.miwok.News > data ) { android.view.View loadingIndicator = rootView . findViewById ( R.id.loading_indicator ) ; loadingIndicator . setVisibility ( View.GONE ) ; mEmptyStateTextView . setText ( R.string.no_news ) ; mAdapter . clear () ; if ( ( data != null ) && ( ! ( data . isEmpty () ) ) ) { mAdapter . addAll ( data ) ; } } 
public boolean free ( float x , float y ) { return ( valid ( x , y ) ) && ( map [ ( ( int ) ( x / ( tileSize ) ) ) ] [ ( ( int ) ( y / ( tileSize ) ) ) ] ) ; } 
public static boolean contains ( org.osate.xtext.aadl2.errormodel.errorModel.TypeToken constraint , org.osate.xtext.aadl2.errormodel.errorModel.ErrorType type ) { if ( ( constraint == null ) || ( type == null ) ) { return false ; } if ( constraint . isNoError () ) { return false ; } org.eclipse.emf.common.util.EList < org.osate.xtext.aadl2.errormodel.errorModel.ErrorTypes > tsetype = constraint . getType () ; if ( ( tsetype . size () ) == 1 ) { org.osate.xtext.aadl2.errormodel.errorModel.ErrorTypes errorType = tsetype . get ( 0 ) ; if ( org.osate.xtext.aadl2.errormodel.util.EM2TypeSetUtil . contains ( errorType , type ) ) { return true ; } } return false ; } 
@ java.lang.Override public org.apache.twill.internal.ProcessController < org.apache.twill.internal.yarn.YarnApplicationReport > submit ( org.apache.twill.internal.yarn.YarnLaunchContext context , org.apache.hadoop.yarn.api.records.Resource capability ) { org.apache.hadoop.yarn.api.records.ContainerLaunchContext launchContext = context . getLaunchContext () ; appSubmissionContext . setAMContainerSpec ( launchContext ) ; appSubmissionContext . setResource ( adjustMemory ( response , capability ) ) ; appSubmissionContext . setMaxAppAttempts ( 2 ) ; try { yarnClient . submitApplication ( appSubmissionContext ) ; return new org.apache.twill.internal.yarn.Hadoop21YarnAppClient.ProcessControllerImpl ( yarnClient , appId ) ; } catch ( java.lang.Exception e ) { org.apache.twill.internal.yarn.Hadoop21YarnAppClient.LOG . error ( "Failed to submit application {}" , appId , e ) ; throw com.google.common.base.Throwables . propagate ( e ) ; } } 
@ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { realm . beginTransaction () ; service . setAddress ( ( ( at.oneway.bene.dollo.adapter.AutoCompleteAddressAdapter ) ( avAddress . getAdapter () ) ) . filteredAddresses . get ( position ) ) ; realm . commitTransaction () ; avAddress . setText ( service . getAddress () . getDescription () ) ; calculateDistanceAndTime () ; } 
public void clean () { if ( success ) { if ( unzipedFilePath . equals ( zippedFilePath . substring ( 0 , ( ( zippedFilePath . length () ) - 4 ) ) ) ) { for ( java.io.File c : outputDir . listFiles () ) { if ( ! ( c . delete () ) ) { java.lang.System.out . println ( ( "failed to delete" + ( c . toString () ) ) ) ; } } outputDir . delete () ; } } } 
public org.json.JSONObject getJSON () { org.json.JSONObject object = new org.json.JSONObject () ; object . put ( "posX" , x ) ; object . put ( "posY" , y ) ; object . put ( "score" , score ) ; object . put ( "isKilled" , isKilled ) ; object . put ( "isMoving" , isMoving . get () ) ; object . put ( "direction" , direction ) ; return object ; } 
private int CalcPortOut () { int selactive = ( sel ) ^ ( sel2 ) ; int selValCombine = ( ( ( sel ) & ( selValue ) ) | ( ( sel2 ) & ( selValue2 ) ) ) & selactive ; int outVal = ( ~ selactive ) & ( out ) ; return ( selValCombine | ( outVal & ( dir ) ) ) & 255 ; } 
@ java.lang.Override public void run () { while ( ! ( isDestroyed () ) ) { try { if ( org.apache.stratos.autoscaler.monitor.cluster.ClusterMonitor.log . isDebugEnabled () ) { org.apache.stratos.autoscaler.monitor.cluster.ClusterMonitor.log . debug ( ( "Cluster monitor is running.. " + ( this . toString () ) ) ) ; } monitor () ; } catch ( java.lang.Exception e ) { org.apache.stratos.autoscaler.monitor.cluster.ClusterMonitor.log . error ( ( "Cluster monitor: Monitor failed." + ( this . toString () ) ) , e ) ; } try { java.lang.Thread . sleep ( getMonitorIntervalMilliseconds () ) ; } catch ( java.lang.InterruptedException ignore ) {} } } 
private static void backup ( java.io.File folder , java.io.File catalogFile ) { java.io.File backup ; int i = 0 ; while ( ( backup = new java.io.File ( folder , ( ( ( org.protege.editor.owl.model.library.OntologyCatalogManager.CATALOG_BACKUP_PREFIX ) + ( i ++ ) ) + ".xml" ) ) ) . exists () ) {} catalogFile . renameTo ( backup ) ; } 
@ java.lang.Override public int getItemCount () { int count = super . getItemCount () ; if ( ( count >= 0 ) && ( isReachedToLastItem () ) ) { count ++ ; } else if ( isReachedToLastPage () ) { count ++ ; } return count ; } 
private void assertFileHasContent ( java.lang.String fileName , java.lang.String expectedContent ) throws java.io.IOException { java.io.File testFile = new java.io.File ( fileName ) ; java.io.FileReader reader = new java.io.FileReader ( testFile ) ; java.io.BufferedReader br = new java.io.BufferedReader ( reader ) ; java.lang.String content = br . readLine () ; br . close () ; reader . close () ; junit.framework.Assert . assertEquals ( ( ( "File " + fileName ) + " does not contain expected content:" ) , expectedContent , content ) ; } 
private static double phi ( int j ) { double x = 0.0 ; double f = 0.5 ; while ( j != 0 ) { x += f * ( ( double ) ( j & 1 ) ) ; j /= 2 ; f *= 0.5 ; } return x ; } 
private void showLocation () { mLastLocation = LocationServices.FusedLocationApi . getLastLocation ( mGoogleApiClient ) ; if ( ( mLastLocation ) != null ) { java.lang.Double latitude = mLastLocation . getLatitude () ; java.lang.Double longitude = mLastLocation . getLongitude () ; android.util.Log . d ( "location " , ( ( ( "Longitude : " + longitude ) + " , Latitude :" ) + latitude ) ) ; } else { android.widget.Toast . makeText ( getApplicationContext () , "Last Location is null" , Toast.LENGTH_LONG ) . show () ; android.util.Log . d ( "ERROR :" , "ERROR" ) ; } } 
private static void initParameters () { edu.umass.cs.gnsclient.client.bugreports.fixed.SubGuidDeletesFail.numGuidsPerAccount = edu.umass.cs.utils.Config . getGlobalInt ( GNSTC.NUM_GUIDS_PER_ACCOUNT ) ; edu.umass.cs.gnsclient.client.bugreports.fixed.SubGuidDeletesFail.accountGuidsOnly = edu.umass.cs.utils.Config . getGlobalBoolean ( GNSTC.ACCOUNT_GUIDS_ONLY ) ; edu.umass.cs.gnsclient.client.bugreports.fixed.SubGuidDeletesFail.numClients = edu.umass.cs.utils.Config . getGlobalInt ( TC.NUM_CLIENTS ) ; edu.umass.cs.gnsclient.client.bugreports.fixed.SubGuidDeletesFail.numGuids = edu.umass.cs.utils.Config . getGlobalInt ( TC.NUM_GROUPS ) ; edu.umass.cs.gnsclient.client.bugreports.fixed.SubGuidDeletesFail.numAccountGuids = ( edu.umass.cs.gnsclient.client.bugreports.fixed.SubGuidDeletesFail.accountGuidsOnly ) ? edu.umass.cs.gnsclient.client.bugreports.fixed.SubGuidDeletesFail.numGuids : java.lang.Math . max ( ( ( edu.umass.cs.gnsclient.client.bugreports.fixed.SubGuidDeletesFail.numGuids ) / ( edu.umass.cs.gnsclient.client.bugreports.fixed.SubGuidDeletesFail.numGuidsPerAccount ) ) , 1 ) ; edu.umass.cs.gnsclient.client.bugreports.fixed.SubGuidDeletesFail.executor = ( ( java.util.concurrent.ScheduledThreadPoolExecutor ) ( java.util.concurrent.Executors . newScheduledThreadPool ( edu.umass.cs.gnsclient.client.bugreports.fixed.SubGuidDeletesFail.numClients ) ) ) ; edu.umass.cs.gnsclient.client.bugreports.fixed.SubGuidDeletesFail.accountGuidEntries = new edu.umass.cs.gnsclient.client.GuidEntry [ edu.umass.cs.gnsclient.client.bugreports.fixed.SubGuidDeletesFail.numClients ] ; } 
private org.ietr.preesm.experiment.model.pimm.FunctionPrototype createFunctionPrototypeFrom ( org.eclipse.cdt.core.dom.ast.IASTSimpleDeclaration simpleDecl ) { org.ietr.preesm.experiment.model.pimm.FunctionPrototype proto = PiMMFactory.eINSTANCE . createFunctionPrototype () ; org.eclipse.cdt.ui.FunctionPrototypeSummary summary = new org.eclipse.cdt.ui.FunctionPrototypeSummary ( simpleDecl . getRawSignature () ) ; proto . setName ( summary . getName () ) ; java.lang.String argumentsString = summary . getArguments () ; for ( java.lang.String argument : argumentsString . split ( "," ) ) { proto . getParameters () . add ( createFunctionParameterFrom ( argument ) ) ; } return proto ; } 
public void saveMessage ( java.lang.String mobile , com.leadtone.where.protocol.beans.WhereMessage message ) { com.mongodb.DBCollection dbc = ds . getDB () . getCollection ( "UndeliverMsgs" ) ; com.mongodb.BasicDBObject bdb = new com.mongodb.BasicDBObject () ; java.util.HashMap < java.lang.String , java.lang.Object > map = com.leadtone.where.protocol.converter.ProtocolConverter . convertWhereMessageToMap ( message ) ; bdb . putAll ( map ) ; com.mongodb.WriteResult result = dbc . insert ( bdb ) ; if ( ( result . getN () ) == 0 ) { log . info ( "save undeliver message failed!" ) ; } } 
public void setMaxNumberOfTeams ( java.util.Map < com.ngusta.cupassist.domain.Clazz , java.lang.Integer > maxNumberOfTeams ) { android.util.Log . i ( com.ngusta.cupassist.domain.Tournament.TAG , ( ( ( "Trying to set max number of teams: " + maxNumberOfTeams ) + " Old clazzes: " ) + ( this . clazzes ) ) ) ; if ( maxNumberOfTeams != null ) { clazzes . clear () ; for ( com.ngusta.cupassist.domain.Clazz clazz : maxNumberOfTeams . keySet () ) { clazzes . add ( new com.ngusta.cupassist.domain.Tournament.TournamentClazz ( clazz , maxNumberOfTeams . get ( clazz ) ) ) ; } } } 
public void update ( float deltaTime ) { for ( int i = 0 ; i < ( entities . size () ) ; i ++ ) { xyz.autholius.game.components.CollisionComponent cc = CollisionComponent.m . get ( entities [ i ] ) ; if ( ! ( cc.main ) ) { continue; } } } 
@ java.lang.Override public void onShow () { activity.mode = vn.mbm.phimp.me.editor.editimage.EditImageActivity.MODE_TUNE ; currentSource = activity.mTuneListFragment . getCurrentBitmap () ; activity.mainImage . setImageBitmap ( activity.mTuneListFragment . getCurrentBitmap () ) ; activity.mainImage . setDisplayType ( ImageViewTouchBase.DisplayType.FIT_TO_SCREEN ) ; activity.mainImage . setScaleEnabled ( false ) ; activity.bannerFlipper . setVisibility ( View.VISIBLE ) ; activity.bannerFlipper . showNext () ; mSeekBar . setProgress ( 50 ) ; switch ( TuneListFragment.MODE ) { case TuneListFragment.HUE : case TuneListFragment.BLUR : case TuneListFragment.VIGNETTE : case TuneListFragment.SHARPNESS : mSeekBar . setProgress ( 0 ) ; break; } } 
private synchronized boolean playPlaylist ( int playListId , int firstId ) { trackQueue . setPlaylist ( playListId ) ; if ( firstId >= 0 ) { trackQueue . setCurrentTrack ( firstId ) ; return playCurrentTrack () ; } else { playNext () ; return true ; } } 
@ java.lang.Override public java.util.List < com.vn.ael.persistence.entity.Docsgeneral > searchExhibitionAccounting ( com.vn.ael.webapp.dto.Search search ) { return docsgeneralRepository . searchExhibitionAccounting ( search . getCustomer () , search . getTypeOfImport () , search . getTypeOfContainer () , true , search . getServicesType () , search . getStartDate () , search . getEndDate () ) ; } 
private void showTestMenu ( long chatId ) throws org.telegram.telegrambots.exceptions.TelegramApiException { java.util.ArrayList < java.lang.String > buttons = new java.util.ArrayList < java.lang.String > () ; buttons . add ( "/menu" ) ; buttons . add ( "/start" ) ; buttons . add ( "/showTestChart" ) ; buttons . add ( "/pieChart" ) ; org.telegram.telegrambots.api.objects.replykeyboard.InlineKeyboardMarkup inlineKeyboard = new Constructors.InlineKeyboardConstructor () . getKeyboard ( buttons , KeyboardPattern.THREE_BUTTON_AT_ROW ) ; sendMessage ( new Constructors.MessageConstructor () . getSendMessage ( "this is *inline* menu message" , chatId , "Markdown" , inlineKeyboard ) ) ; } 
protected void updateTextureCoordinates ( de.phbouillon.android.games.alite.screens.opengl.sprites.SpriteData sprite ) { texCoordBuffer . clear () ; texCoordBuffer . put ( sprite.x ) ; texCoordBuffer . put ( sprite.y ) ; texCoordBuffer . put ( sprite.x ) ; texCoordBuffer . put ( sprite.y2 ) ; texCoordBuffer . put ( sprite.x2 ) ; texCoordBuffer . put ( sprite.y ) ; texCoordBuffer . put ( sprite.x2 ) ; texCoordBuffer . put ( sprite.y2 ) ; texCoordBuffer . position ( 0 ) ; } 
@ java.lang.Override public void flush ( ) throws java.io.IOException { if ( ( buffer.length ) > 0 ) { com.ibm.streamsx.hdfs.AsyncBufferWriter.FlushRunnable runnable = new com.ibm.streamsx.hdfs.AsyncBufferWriter.FlushRunnable ( buffer , true , position ) ; exService . execute ( runnable ) ; try { if ( ! ( isClosed ) ) buffer = bufferQueue . take () ; position = 0 ; } catch ( java.lang.InterruptedException e ) { com.ibm.streamsx.hdfs.AsyncBufferWriter.LOGGER . log ( LogLevel.ERROR , "Unable to retrieve buffer from buffer queue." , e ) ; } } } 
public void stopDeliveryForQueue ( java.lang.String storageQueue ) { org.wso2.andes.kernel.MessageFlusher . getInstance () . clearUpAllBufferedMessagesForDelivery ( storageQueueNameToDestinationMap . get ( storageQueue ) ) ; java.util.Set < org.wso2.andes.kernel.slot.Slot > orphanedSlots = subscriptionSlotTracker . remove ( storageQueue ) ; if ( ! ( orphanedSlots . isEmpty () ) ) { for ( org.wso2.andes.kernel.slot.Slot slot : orphanedSlots ) { clearAllTrackingWhenSlotOrphaned ( slot ) ; } } } 
@ java.lang.Override protected void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { super . onActivityResult ( requestCode , resultCode , data ) ; if ( ( requestCode == ( com.framgia.moviedb.Constant.MOVIES_ACTIVITY_REQUEST_CODE ) ) && ( resultCode == ( RESULT_OK ) ) ) { com.framgia.moviedb.data.model.Movie movie = ( ( com.framgia.moviedb.data.model.Movie ) ( data . getSerializableExtra ( MovieDetailActivity.EXTRA_MOVIE ) ) ) ; int position = data . getIntExtra ( MovieDetailActivity.EXTRA_POSITION , MovieDetailActivity.DEFAULT_POSITION ) ; mVerticalMovieAdapter . updateItem ( position , movie ) ; removeItemFavorite ( position , movie ) ; } } 
public static void main ( java.lang.String [] args ) { stall_till_cloudsize ( 1 ) ; try { new water.OOMTest () . testParseMemoryStress () ; } catch ( java.lang.Throwable e ) { water.util.Log . err ( e ) ; java.io.StringWriter sw = new java.io.StringWriter () ; e . printStackTrace ( new java.io.PrintWriter ( sw ) ) ; water.util.Log . err ( sw ) ; java.lang.System . exit ( ( - 1 ) ) ; } java.lang.System . exit ( 0 ) ; } 
@ java.lang.Override public void update ( java.lang.String identifier , java.util.Map < java.lang.String , java.lang.String > metadata ) { validateMetadata ( metadata , false ) ; java.lang.String rowid = getRowId ( identifier ) ; if ( rowid == null ) { org.lp20.aikuma.storage.FusionIndex.log . severe ( "update called on item without an existing index entry" ) ; return; } doPost ( identifier , makeUpdate ( rowid , metadata ) ) ; } 
public void changeViewType ( int inType ) { if ( inType == ( _type ) ) return; if ( ( ( inType == ( net.sf.memoranda.ui.CalendarPanelView.VIEW_MONTH ) ) | ( inType == ( net.sf.memoranda.ui.CalendarPanelView.VIEW_WEEK ) ) ) | ( inType == ( net.sf.memoranda.ui.CalendarPanelView.VIEW_DAY ) ) ) { _type = inType ; this . createView () ; } else { _type = net.sf.memoranda.ui.CalendarPanelView.VIEW_INVALID ; } } 
public final mytown.datasource.TownBlock newBlock ( int dim , int x , int z , boolean isFarClaim , int pricePaid , mytown.datasource.Town town ) { if ( ! ( worlds . contains ( dim ) ) ) { getDatasource () . saveWorld ( dim ) ; } mytown.datasource.TownBlock block = new mytown.datasource.TownBlock ( dim , x , z , isFarClaim , pricePaid , town ) ; if ( mytown.datasource.TownBlockEvent . fire ( new mytown.datasource.TownBlockEvent.BlockCreateEvent ( block ) ) ) return null ; return block ; } 
public static com.ctrip.zeus.support.AppSlbDo toAppSlbDo ( com.ctrip.zeus.support.AppSlb e ) { return new com.ctrip.zeus.support.AppSlbDo () . setAppName ( e . getAppName () ) . setSlbName ( e . getSlbName () ) . setSlbVirtualServerName ( e . getVirtualServer () . getName () ) . setPath ( e . getPath () ) . setRewrite ( e . getRewrite () ) . setPriority ( e . getPriority () ) ; } 
private void initCleverTap () { try { com.clevertap.android.sdk.CleverTapAPI . setDebugLevel ( 1277182231 ) ; clevertap = com.clevertap.android.sdk.CleverTapAPI . getInstance ( getApplicationContext () ) ; clevertap . enablePersonalization () ; clevertap . setSyncListener ( this ) ; } catch ( com.clevertap.android.sdk.exceptions.CleverTapMetaDataNotFoundException | com.clevertap.android.sdk.exceptions.CleverTapPermissionsNotSatisfied e ) { e . printStackTrace () ; } } 
@ java.lang.Override public void importCsvToTable ( final java.lang.String dir , final java.lang.String tableName ) throws java.sql.SQLException { java.lang.String message = java.lang.String . format ( "Importing from %s to table %s" , dir , tableName ) ; logger . info ( message ) ; java.lang.String sql = java.lang.String . format ( "LOAD DATA LOCAL INFILE \'%s\' into table %s  fields terminated by \',\'  optionally enclosed by \'\"\' escaped by \'\"\' lines terminated by \'\\r\\n\'" , dir , wrapName ( tableName ) ) ; try { executeUpdate ( sql ) ; } catch ( java.sql.SQLException e ) { logger . error ( ( "FAILED " + message ) , e ) ; throw e ; } } 
protected java.lang.String searchLineInFile ( java.lang.String prefix ) { java.lang.String r = "" ; try { scanner = new java.util.Scanner ( file ) ; } catch ( java.io.FileNotFoundException e ) { e . printStackTrace () ; } boolean found = false ; while ( found == false ) { if ( scanner . hasNextLine () ) { java.lang.String s = scanner . nextLine () ; if ( s . startsWith ( prefix ) ) { r = s ; found = true ; } } } return r . replaceAll ( separator , "" ) ; } 
public void write ( wyil.lang.Codes.IndexOf o ) { js . add ( ( ( ( ( ( ( ( ( getIndentBlock () ) + "var r" ) + ( o . target () ) ) + " = r" ) + ( o . operand ( 0 ) ) ) + ".getValue(r" ) + ( o . operand ( 1 ) ) ) + ");\n" ) ) ; } 
synchronized void processTimeouts () { long cur = java.lang.System . currentTimeMillis () ; java.util.List < org.ethereum.sync.WarpSyncManager.StateChunkRequest > requests = new java.util.ArrayList ( pendingStateChunks . values () ) ; for ( org.ethereum.sync.WarpSyncManager.StateChunkRequest request : requests ) { if ( ( cur - ( request.requestSent ) ) > ( org.ethereum.sync.WarpSyncManager.CHUNK_DL_TIMEOUT ) ) { org.ethereum.sync.WarpSyncManager.logger . trace ( "Removing state chunk {} from pending due to timeout" , org.spongycastle.util.encoders.Hex . toHexString ( request.stateChunkHash ) ) ; pendingStateChunks . remove ( request.stateChunkHash ) ; stateChunkQueue . addFirst ( request ) ; } } } 
public static void testFailover () { com.emc.storageos.volumecontroller.impl.isilon.IsilonReplicationTest._isi = new com.emc.storageos.volumecontroller.impl.isilon.IsilonFileStorageDevice () ; com.emc.storageos.isilon.restapi.IsilonApiFactory factory = new com.emc.storageos.isilon.restapi.IsilonApiFactory () ; factory . init () ; com.emc.storageos.volumecontroller.impl.isilon.IsilonReplicationTest._isi . setIsilonApiFactory ( factory ) ; com.emc.storageos.volumecontroller.impl.isilon.IsilonReplicationTest._device = new com.emc.storageos.db.client.model.StorageSystem () ; com.emc.storageos.volumecontroller.impl.isilon.IsilonReplicationTest._device . setSystemType ( "isilon" ) ; com.emc.storageos.volumecontroller.impl.isilon.IsilonReplicationTest._device . setIpAddress ( "" ) ; com.emc.storageos.volumecontroller.impl.isilon.IsilonReplicationTest._device . setPortNumber ( 8080 ) ; com.emc.storageos.volumecontroller.impl.isilon.IsilonReplicationTest._device . setUsername ( com.emc.storageos.volumecontroller.impl.isilon.IsilonReplicationTest.userName ) ; com.emc.storageos.volumecontroller.impl.isilon.IsilonReplicationTest._device . setPassword ( com.emc.storageos.volumecontroller.impl.isilon.IsilonReplicationTest.password ) ; com.emc.storageos.volumecontroller.impl.isilon.IsilonReplicationTest.result = com.emc.storageos.volumecontroller.impl.isilon.IsilonReplicationTest._isi . doFailover ( com.emc.storageos.volumecontroller.impl.isilon.IsilonReplicationTest._device , "mudit_policy" ) ; com.emc.storageos.volumecontroller.impl.isilon.IsilonReplicationTest.result . getCommandStatus () ; } 
@ org.junit.Test public void testInit ( ) throws java.io.IOException { driver . init () ; mockDevice . dumpRegisters () ; mockDevice . dumpByteStream () ; org.junit.Assert . assertEquals ( ( ( byte ) ( 1 ) ) , mockDevice . readRegister ( PCA9685Device.MODE1 ) ) ; org.junit.Assert . assertEquals ( ( ( byte ) ( 4 ) ) , mockDevice . readRegister ( PCA9685Device.MODE2 ) ) ; } 
@ java.lang.Override public java.lang.Object visit ( IC.AST.VirtualMethod method ) { java.lang.String methodStr = "" ; for ( IC.AST.Formal f : method . getFormals () ) { f . accept ( this ) ; } for ( IC.AST.Statement st : method . getStatements () ) { methodStr = methodStr . concat ( ( ( java.lang.String ) ( st . accept ( this ) ) ) ) ; } return null ; } 
@ java.lang.Override public void init () { android.util.Log . i ( alex_shutov.com.ledlights.bluetoothmodule.bluetooth.BtLogicCell.LOG_TAG , "BtLogicCell.init()" ) ; btConnAdapter . initialize () ; btScanAdapter . initialize () ; btStorageAdapter . initialize () ; btCommAdapter . initialize () ; initializeEsbMappers () ; alex_shutov.com.ledlights.bluetoothmodule.bluetooth.BtPortAdapterCreator diComponent = ( ( alex_shutov.com.ledlights.bluetoothmodule.bluetooth.BtPortAdapterCreator ) ( getAdaperCreator () ) ) ; btFacade = new alex_shutov.com.ledlights.bluetoothmodule.bluetooth.BtLogicCellFacade ( diComponent ) ; btCommAdapter . setDecoree ( btFacade ) ; btFacade . onInitialized () ; } 
public void activate ( java.lang.String nsr_id ) throws org.openbaton.exceptions.NotFoundException , org.openbaton.exceptions.VimException { log . debug ( ( "Activating Elasticity for NSR with id: " + nsr_id ) ) ; detectionManagment . start ( nsr_id ) ; if ( autoScalingProperties . getPool () . isActivate () ) { log . debug ( "Activating pool mechanism" ) ; poolManagement . activate ( nsr_id ) ; } else { log . debug ( "pool mechanism is disabled" ) ; } log . info ( ( "Activated Elasticity for NSR with id: " + nsr_id ) ) ; } 
@ java.lang.Override public ru.homer.leaderboard.entity.IssueDto mapIssueDto ( com.atlassian.jira.rest.client.api.domain.Issue issue ) { ru.homer.leaderboard.entity.IssueDto issueDto = new ru.homer.leaderboard.entity.IssueDto () ; issueDto . setIdIssue ( issue . getId () ) ; issueDto . setBasicProject ( issue . getProject () . getName () ) ; issueDto . setSummary ( issue . getSummary () ) ; issueDto . setIssueType ( issue . getIssueType () . getName () ) ; issueDto . setCreationDate ( issue . getCreationDate () ) ; issueDto . setKey ( issue . getKey () ) ; return issueDto ; } 
private void getPhotosById ( java.io.Serializable clothes ) { com.cs528.style.style.clothes.Clothes [] array = ( ( com.cs528.style.style.clothes.Clothes [] ) ( clothes ) ) ; com.cs528.style.style.database.ClothesDatabase . init ( getApplicationContext () ) ; for ( int i = 0 ; i < ( array.length ) ; i ++ ) { com.cs528.style.style.clothes.Clothes cloth = com.cs528.style.style.database.ClothesDatabase . getClothes ( array [ i ] . getId () ) ; filePaths . add ( cloth . getClothesSrc () ) ; } } 
public static void main ( java.lang.String [] args ) { java.lang.String productName = stringInput ( "What is the name of the product?" ) ; double price = doubleInput ( ( ( "What does " + productName ) + " cost?" ) ) ; int quantity = intInput ( ( ( "How many " + productName ) + " to sell?" ) ) ; double totalPrice = price + quantity ; java.lang.System.out . println ( ( ( ( ( ( ( quantity + " of " ) + productName ) + " at $" ) + price ) + "each costs $" ) + totalPrice ) ) ; } 
public static de.tEngine.math.Quaternion fromEulerRotation ( de.tEngine.math.Vector3f euler ) { de.tEngine.math.Quaternion rot = de.tEngine.math.Quaternion . fromAxisAngle ( new de.tEngine.math.Vector3f ( 0 , 0 , 1 ) , euler.z ) ; rot = de.tEngine.math.Quaternion . mul ( rot , de.tEngine.math.Quaternion . fromAxisAngle ( new de.tEngine.math.Vector3f ( 1 , 0 , 0 ) , euler.x ) ) ; rot = de.tEngine.math.Quaternion . mul ( rot , de.tEngine.math.Quaternion . fromAxisAngle ( new de.tEngine.math.Vector3f ( 0 , 1 , 0 ) , euler.y ) ) ; return rot ; } 
@ java.lang.Override public java.io.InputStream exportDatatypeLibraryDocumentAsDocx ( gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.DatatypeLibraryDocument datatypeLibraryDocument , gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.ExportConfig exportConfig , gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.ExportFontConfig exportFontConfig ) { if ( datatypeLibraryDocument != null ) { gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.util.ExportParameters exportParameters = exportUtil . setExportParameters ( gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.ExportServiceImpl.DOCUMENT_TITLE_DATATYPE_LIBRARY , true , true , gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.ExportServiceImpl.EXPORT_FORMAT_WORD , exportConfig , exportFontConfig ) ; return exportUtil . exportAsDocxFromXml ( serializationService . serializeDatatypeLibrary ( datatypeLibraryDocument ) . toXML () , gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.ExportServiceImpl.GLOBAL_STYLESHEET , exportParameters , datatypeLibraryDocument . getMetaData () , datatypeLibraryDocument . getDateUpdated () ) ; } else { return new org.apache.commons.io.input.NullInputStream ( 1L ) ; } } 
public static java.lang.String arrayToString ( java.lang.String [] array ) { java.lang.StringBuilder sb = new java.lang.StringBuilder () ; for ( int i = 0 ; i < ( array.length ) ; i ++ ) { if ( i == ( array.length ) ) { sb . append ( array [ i ] ) ; } else { sb . append ( ( ( array [ i ] ) + "," ) ) ; } } return sb . toString () ; } 
public int solution ( int N ) { int maxSequence = 0 ; int curSequence = 0 ; boolean foundFirstOne = false ; while ( N > 0 ) { if ( ( N % 2 ) == 0 ) { if ( ! foundFirstOne ) { N /= 2 ; continue; } else { curSequence ++ ; } } else { foundFirstOne = true ; curSequence = 0 ; maxSequence = java.lang.Math . max ( maxSequence , curSequence ) ; } N /= 2 ; } return maxSequence ; } 
@ java.lang.Override public void run () { try { try { org.parabot.environment.api.utils.WindowsPreferences . userRoot () . remove ( "Software\\JavaSoft\\Prefs" ) ; } catch ( java.lang.Exception e ) {} org.parabot.core.Context context = org.parabot.core.Context . getInstance ( provider ) ; context . load () ; org.parabot.core.ui.components.PaintComponent . getInstance () . startPainting ( context ) ; org.parabot.core.parsers.randoms.RandomParser . enable () ; } catch ( java.lang.Throwable t ) { t . printStackTrace () ; } } 
private void setOnOff () { if ( 0 == ( onoff ) ) msg = ( "msg-[{\"requestType\":" + ( Command.HostCommandTypeOn ) ) + "}]" ; else msg = ( "msg-[{\"requestType\":" + ( Command.HostCommandTypeOff ) ) + "}]" ; out . println ( msg ) ; onoff = ( ( onoff ) + 1 ) % 2 ; } 
public android.graphics.Bitmap decodeSampledBitmapFromResource ( android.content.res.Resources res , int resId , int reqWidth , int reqHeight ) { final android.graphics.BitmapFactory.Options options = new android.graphics.BitmapFactory.Options () ; options.inJustDecodeBounds = true ; android.graphics.BitmapFactory . decodeResource ( res , resId , options ) ; options.inSampleSize = calculateInSampleSize ( options , reqWidth , reqHeight ) ; options.inJustDecodeBounds = false ; options.inMutable = true ; return android.graphics.BitmapFactory . decodeResource ( res , resId , options ) ; } 
private com.sun.jna.Pointer marshalToNative ( java.lang.String value ) { byte [] bytes = com.sun.jna.Native . toByteArray ( value , "UTF-8" ) ; long nativeAddress = com.sun.jna.Native . malloc ( bytes.length ) ; com.sun.jna.Pointer pointer = new com.sun.jna.Pointer ( nativeAddress ) ; pointer . write ( 0 , bytes , 0 , bytes.length ) ; pointer . setByte ( bytes.length , ( ( byte ) ( 0 ) ) ) ; return pointer ; } 
@ java.lang.Override protected java.util.Map.Entry < java.lang.String , java.lang.Integer > calculateBestEntry () { java.lang.String context = matcher . context ( matcher . getAbbreviation () . getTokenWithContext () ) ; if ( ! ( at.medunigraz.imi.abbres.TextUtils . isAbbreviation ( context ) ) ) { return new java.util.AbstractMap.SimpleEntry <> ( "" , 0 ) ; } return super . getBestEntry () ; } 
private java.lang.String addLineBreaks ( java.lang.String text ) { if ( text . substring ( 0 , 2 ) . equalsIgnoreCase ( "\\p" ) ) { text = text . substring ( 2 ) ; } text = text . replace ( "\\b" , "<br/><br/>" ) ; java.lang.String sRegex = "\\\\pi\\d*" ; text = text . replaceAll ( sRegex , ( "<br/>" + ( model.parsers.USFMParser.TAB ) ) ) ; text = text . replace ( "\\p" , ( "<br/>" + ( model.parsers.USFMParser.TAB ) ) ) ; return text ; } 
private void goRoom ( zuulFramework.worldofzuul.Command command ) { if ( ! ( command . hasSecondWord () ) ) { java.lang.System.out . println ( "Go where?" ) ; return; } java.lang.String direction = command . getSecondWord () ; zuulFramework.worldofzuul.Room nextRoom = player . goRoom ( command . getSecondWord () ) ; if ( nextRoom == null ) { java.lang.System.out . println ( "There is no door!" ) ; } else { java.lang.System.out . println ( nextRoom . getLongDescription () ) ; } } 
private org.openmuc.jdlms.datatypes.BitString getMergedFlags ( final com.alliander.osgp.dto.valueobjects.smartmetering.ConfigurationObject configurationObject , final com.alliander.osgp.dto.valueobjects.smartmetering.ConfigurationObject configurationObjectOnDevice ) { final java.util.List < com.alliander.osgp.dto.valueobjects.smartmetering.ConfigurationFlag > configurationFlags = this . getNewFlags ( configurationObject ) ; this . mergeOldFlags ( configurationObjectOnDevice , configurationFlags ) ; final byte [] newConfigurationObjectFlagsByteArray = this . configurationObjectHelperService . toByteArray ( configurationFlags ) ; final org.openmuc.jdlms.datatypes.BitString bitString = new org.openmuc.jdlms.datatypes.BitString ( newConfigurationObjectFlagsByteArray , 16 ) ; return bitString ; } 
public void setCard ( _3_2Game.Card card ) throws java.io.IOException { this . card = card ; java.awt.Image im ; if ( this . vertical ) im = loadImage ( card ) ; else im = rotate ( loadImage ( card ) , 90 ) ; setIcon ( new javax.swing.ImageIcon ( im ) ) ; } 
private static Matrix [] initW ( int nHLayers , int [] widthLayer ) { Matrix [] layerWeights = new Matrix [ nHLayers ] ; for ( int i = 0 ; i < nHLayers ; i ++ ) { layerWeights [ i ] = Matrix . random ( widthLayer [ ( i + 1 ) ] , ( ( widthLayer [ i ] ) + 1 ) ) ; } return layerWeights ; } 
@ org.junit.Test public void noExistenCarrosFavoritos () { org.springframework.mock.web.MockHttpServletRequest request = new org.springframework.mock.web.MockHttpServletRequest () ; org.springframework.ui.ExtendedModelMap model = new org.springframework.ui.ExtendedModelMap () ; request . getSession () . setAttribute ( "user" , es.unizar.es.foodnet.model.CarroFavoritoTest.user ) ; ccf . cargarFavoritos ( model , request ) ; org.junit.Assert . assertEquals ( 0 , ( ( java.util.List < es.unizar.es.foodnet.model.CarroFavorito > ) ( model . get ( "carrosFavoritos" ) ) ) . size () ) ; } 
public int findUser ( java.lang.String userName ) { java.util.List < org.gitlab.api.models.GitlabUser > users ; users = userConn . getUsers () ; for ( org.gitlab.api.models.GitlabUser user : users ) { if ( user . getUsername () . equals ( userName ) ) { return user . getId () ; } } return - 1 ; } 
public static void test_033 () { framework.common.MessageCommon . switchView ( "文件夹视图" ) ; framework.common.MessageCommon . Menuoption ( "收件箱" ) ; framework.common.MessageCommon . switchView ( "显示选项" ) ; java.lang.String SIM1 = ( ( java.lang.String ) ( excute ( testcase.Object_ResIdInstance , testcase.Operation_GetText , "android:id/text1" , "1" ) ) ) ; excute ( testcase.Object_ResourceId , testcase.Operation_ClickWait , "android:id/text1" , "1" ) ; check ( testcase.Object_Text , testcase.Operation_checkExist , SIM1 ) ; framework.common.MessageCommon . switchView ( "显示选项" ) ; excute ( testcase.Object_Text , testcase.Operation_ClickWait , "显示全部信息" ) ; } 
public static crypto.field.Field createField ( crypto.polynom.Polynom generatingPolynom ) { com.google.common.base.Preconditions . checkArgument ( generatingPolynom . hasNullpoints () , "generatingPolynom has at least one null point" ) ; java.util.List < crypto.polynom.Polynom > allElements = crypto.polynom.Polynom . createAllPolynomes ( generatingPolynom . getModulo () , generatingPolynom . getVector () . getDegree () ) ; crypto.field.Field field = new crypto.field.Field ( allElements , generatingPolynom ) ; return field ; } 
private void getLocation () { try { locationManager . requestLocationUpdates ( LocationManager.GPS_PROVIDER , com.enyedi.peter.sensorapp.ui.MainActivity.MIN_TIME_BW_UPDATES , com.enyedi.peter.sensorapp.ui.MainActivity.MIN_DISTANCE_CHANGE_FOR_UPDATES , this ) ; if ( ( locationManager ) != null ) { loc = locationManager . getLastKnownLocation ( LocationManager.GPS_PROVIDER ) ; if ( ( loc ) != null ) { locationList . add ( loc ) ; } } } catch ( java.lang.SecurityException e ) { e . printStackTrace () ; } } 
@ java.lang.Override protected void onResume () { java.lang.String language = getResources () . getConfiguration () . locale . getDisplayLanguage () ; java.lang.System.out . println ( ( "-------- Language" + language ) ) ; if ( language . equals ( "español" ) ) { android.widget.ArrayAdapter adap = ( ( android.widget.ArrayAdapter ) ( spinner_language . getAdapter () ) ) ; spinner_language . setSelection ( adap . getPosition ( "Español" ) ) ; } super . onResume () ; } 
private void playGame ( spil.Player firstPlayer , spil.Player lastPlayer ) { while ( true ) { playTurn ( firstPlayer ) ; if ( ( firstPlayer . hasWon () ) || ( firstPlayer . hasLost () ) ) break; playTurn ( lastPlayer ) ; if ( ( lastPlayer . hasWon () ) || ( lastPlayer . hasLost () ) ) break; fieldController . resetPlayers ( firstPlayer , lastPlayer ) ; } } 
private miniDB.storage.CreateTableData createTable () { int len = str.length ; tableData = new miniDB.storage.CreateTableData () ; if ( str [ 1 ] . matches ( "[a-zA-Z]\\w*" ) ) { tableData . setTableName ( str [ 1 ] ) ; } else { return null ; } if ( ! ( str [ 2 ] . equals ( "(" ) ) ) return null ; if ( isAttr ( 3 ) ) { return tableData ; } return null ; } 
@ java.lang.Override public void start ( javafx.stage.Stage primaryStage ) throws java.lang.Exception { setPrimaryStage ( primaryStage ) ; password = new java.io.File ( "password.wver" ) ; if ( password . exists () ) { passwordForm = new com.core.objects.frames.PasswordFrame () . getFrame () ; } else { passwordForm = new com.core.objects.frames.NewPasswordFrame () . getFrame () ; } primaryStage . setTitle ( "Contact Book" ) ; primaryStage . setScene ( new javafx.scene.Scene ( passwordForm , 300 , 275 ) ) ; primaryStage . show () ; } 
private int readLength ( ) throws org.lorecraft.phparser.SerializedPhpParserException { int delimiter = this . input . indexOf ( ':' , this . index ) ; if ( delimiter == ( - 1 ) ) { throw new org.lorecraft.phparser.SerializedPhpParserException ( "Missing delimiter after string, array or object length field!" , this . index ) ; } checkUnexpectedLength ( ( delimiter + 2 ) ) ; int arrayLen = java.lang.Integer . valueOf ( this . input . substring ( this . index , delimiter ) ) ; this . index = delimiter + 2 ; return arrayLen ; } 
private void hide () { android.support.v7.app.ActionBar actionBar = getSupportActionBar () ; if ( actionBar != null ) { hideActionBar ( actionBar ) ; } mControlsView . animate () . translationY ( mControlsView . getHeight () ) . setDuration ( nl.jeroenhd.app.bcbreader.activities.FullscreenReaderActivity.UI_ANIMATION_DELAY ) . start () ; mVisible = false ; mHideHandler . removeCallbacks ( mShowPart2Runnable ) ; mHideHandler . postDelayed ( mHidePart2Runnable , nl.jeroenhd.app.bcbreader.activities.FullscreenReaderActivity.UI_ANIMATION_DELAY ) ; } 
public void saveState () { nachos.vm.Processor processor = nachos.vm.Machine . processor () ; nachos.vm.TranslationEntry TLBEntry ; int vpn ; for ( int i = 0 ; i < ( processor . getTLBSize () ) ; i ++ ) { TLBEntry = processor . readTLBEntry ( i ) ; vpn = TLBEntry.vpn ; pageTable [ vpn ] = TLBEntry ; TLBEntry.valid = false ; } } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { switch ( item . getItemId () ) { case R.id.add_product : startActivity ( new android.content.Intent ( this , com.msr.firebasesamples.activities.AddDataActivity . class ) ) ; break; case R.id.reset_password : startActivity ( new android.content.Intent ( this , com.msr.firebasesamples.activities.ResetPasswordActivity . class ) ) ; break; case R.id.logout : auth . signOut () ; break; } return true ; } 
@ org.junit.Test public void autoDetect1 ( ) throws java.io.IOException , java.lang.InterruptedException { byte [] afm = com.itextpdf.io.util.StreamUtil . inputStreamToArray ( new java.io.FileInputStream ( ( ( com.itextpdf.kernel.pdf.PdfFontTest.fontsFolder ) + "cmr10.afm" ) ) ) ; org.junit.Assert . assertTrue ( "Type1 font expected" , ( ( com.itextpdf.io.font.FontProgramFactory . createFont ( afm ) ) instanceof com.itextpdf.io.font.Type1Font ) ) ; } 
private void createArrayList ( java.lang.String jsonString ) { com.google.gson.Gson gson = new com.google.gson.Gson () ; com.example.jim.myapplication.Equipment [] downloadedEquipments = gson . fromJson ( jsonString , com.example.jim.myapplication.Equipment [] . class ) ; for ( com.example.jim.myapplication.Equipment equipment : downloadedEquipments ) { equipmentList . add ( equipment ) ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/check_email/{email}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public org.springframework.http.ResponseEntity < fii.admission.users.Success > checkEmail ( @ org.springframework.web.bind.annotation.PathVariable ( value = "email" ) java.lang.String email ) { fii.admission.users.User result = fii.admission.users.UserService . getUser ( email ) ; java.lang.System.out . println ( result ) ; if ( result == null ) { return new org.springframework.http.ResponseEntity < fii.admission.users.Success > ( new fii.admission.users.Success ( false ) , org.springframework.http.HttpStatus.NOT_FOUND ) ; } else { return new org.springframework.http.ResponseEntity < fii.admission.users.Success > ( new fii.admission.users.Success ( true ) , org.springframework.http.HttpStatus.OK ) ; } } 
public void print () { java.lang.String studentFee ; if ( feePaid ) { studentFee = "yes" ; } else { studentFee = "no" ; } java.lang.System.out . println ( ( ( ( ( ( ( ( ( ( ( "Student ID: " + ( studentId ) ) + "\t" ) + "Name: " ) + ( studentName ) ) + "\t" ) + "Course: " ) + ( studentCourse ) ) + "\t" ) + "Fee Paid: " ) + studentFee ) ) ; } 
private void processData () { android.util.Log . e ( com.example.sdp11.wmd.BluetoothLEService.TAG , "In processData" ) ; double initialDirection = calculateInitialDirection () ; double finalDirection = calculateFinalDirection () ; double throwQuality = calculateThrowQuality () ; double totalDistance = 1 ; double totalTime = 1 ; MainActivity.dataSource . createThrow ( initialDirection , finalDirection , totalDistance , throwQuality , totalTime ) ; } 
@ java.lang.Override public void onResponse ( @ android.support.annotation.NonNull retrofit2.Call < java.util.List < com.nanacorp.finn.entity.FinnPortfolioData > > call , @ android.support.annotation.NonNull retrofit2.Response < java.util.List < com.nanacorp.finn.entity.FinnPortfolioData > > response ) { int statusCode = response . code () ; switch ( statusCode ) { case 200 : mChartData = response . body () ; if ( ( mFinnChartView ) != null ) { android.util.Log . d ( "tuancuong" , "setChartData " ) ; mFinnChartView . setChartData ( mChartData ) ; } break; default: break; } } 
public int giveNextScreen () { if ( Gdx.input . isKeyJustPressed ( Keys.S ) ) { page = shop ; } else if ( Gdx.input . isKeyJustPressed ( Keys.C ) ) { page = controls ; } else if ( Gdx.input . isKeyJustPressed ( Keys.TAB ) ) { page = credits ; } return page ; } 
public boolean seenURL ( edu.uci.ics.crawler4j.url.WebURL url ) { java.lang.String canonicalUrl = edu.uci.ics.crawler4j.url.URLCanonicalizer . getCanonicalURL ( url . getURL () ) ; java.lang.Long added = server . sadd ( dupefilterKey , canonicalUrl ) ; if ( added == 0 ) { cloudwalk.slave.crawler.Dupefilter.logger . trace ( "{} is seen before" , canonicalUrl ) ; } return added == 0 ; } 
@ java.lang.Override public void setMode ( java.lang.String mode ) { if ( mode == null ) { currentMode = de.rtcustomz.getraenkeautomat.client.charts.LineChartPage.Mode.MONTH ; daySelect . setVisible ( false ) ; return; } if ( mode . equals ( "month" ) ) { currentMode = de.rtcustomz.getraenkeautomat.client.charts.LineChartPage.Mode.MONTH ; daySelect . setVisible ( false ) ; } else if ( mode . equals ( "day" ) ) { currentMode = de.rtcustomz.getraenkeautomat.client.charts.LineChartPage.Mode.DAY ; daySelect . setVisible ( true ) ; } modeSelect . setSelectedIndex ( currentMode . ordinal () ) ; } 
private int countAreas ( int [] [] array ) { boolean [] [] checked = new boolean [ [ size ] [ size ] ; for ( int i = 0 ; i < ( size ) ; i ++ ) { for ( int j = 0 ; j < ( size ) ; j ++ ) { checked [ i ] [ j ] = false ; } } return countAreas ( array , checked ) ; } 
public void handle ( javafx.scene.input.MouseEvent event ) { if ( isDragDetected ) { root . setLayoutX ( ( ( event . getSceneX () ) - ( startX ) ) ) ; root . setLayoutY ( ( ( event . getSceneY () ) - ( startY ) ) ) ; node . setStartPoint ( new model.Point ( root . getLayoutX () , root . getLayoutY () ) ) ; mainPanel . redrawArc ( self ) ; isDragDetected = java.lang.Boolean.FALSE ; } else { mainPanel . tryToLink ( self ) ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { mFragmentManager = getSupportFragmentManager () ; io.fabric.sdk.android.Fabric . with ( this , new com.crashlytics.android.Crashlytics () ) ; super . onCreate ( savedInstanceState ) ; ca.hoogit.powerhour.Util.SharedPrefs prefs = ca.hoogit.powerhour.Util.SharedPrefs . get ( this ) ; if ( prefs . isFirstRun () ) { prefs . setFirstRun ( false ) ; startActivity ( new android.content.Intent ( this , ca.hoogit.powerhour.About.TourActivity . class ) ) ; } mWearData = new ca.hoogit.powerhour.Game.WearData ( this ) ; setupListeners () ; } 
public void showNotifications () { android.app.Notification.Builder notificationBuilder = new android.app.Notification.Builder ( context ) . setTicker ( "Hej" ) . setSmallIcon ( android.R.drawable.stat_sys_warning ) . setAutoCancel ( true ) . setContentTitle ( "Title" ) . setContentText ( "Content text" ) ; android.app.NotificationManager mNotificationManager = ( ( android.app.NotificationManager ) ( context . getSystemService ( Context.NOTIFICATION_SERVICE ) ) ) ; mNotificationManager . notify ( gruppe3.dtu02128.fridgeapp.FoodExpireBroadcastReceiver.MY_NOTIFICATION_ID , notificationBuilder . getNotification () ) ; } 
public final hu.akarnokd.rxjava2.basetypes.Solo < T > doOnNext ( hu.akarnokd.rxjava2.basetypes.Consumer < ? super T > onNext ) { hu.akarnokd.rxjava2.basetypes.ObjectHelper . requireNonNull ( onNext , "onNext is null" ) ; return hu.akarnokd.rxjava2.basetypes.Solo . onAssembly ( new hu.akarnokd.rxjava2.basetypes.SoloDoOnLifecycle < T > ( this , onNext , hu.akarnokd.rxjava2.basetypes.Functions . emptyConsumer () , Functions.ERROR_CONSUMER , Functions.EMPTY_ACTION , Functions.EMPTY_ACTION , hu.akarnokd.rxjava2.basetypes.Functions . emptyConsumer () , Functions.EMPTY_LONG_CONSUMER , Functions.EMPTY_ACTION ) ) ; } 
public void refresh () { refreshActionBars () ; de.ovgu.featureide.ui.UIPlugin . getDefault () . logInfo ( "Team2: Collaboration Diagram -> refresh" ) ; final de.ovgu.featureide.core.fstmodel.FSTModel model = builder . buildCollaborationModel ( featureProject ) ; if ( model == null ) { de.ovgu.featureide.ui.UIPlugin . getDefault () . logWarning ( de.ovgu.featureide.fm.core.localization.StringTable.MODEL_LOADING_ERROR ) ; return; } org.eclipse.swt.widgets.Display . getDefault () . syncExec ( new java.lang.Runnable () { public void run () { viewer . setContents ( model ) ; viewer . getContents () . refresh () ; search . refreshSearchContent () ; } } ) ; } 
public static int findMReference ( java.awt.image.BufferedImage img ) { java.awt.image.BufferedImage ref = qwop_ai.ImageParser . getBufferedImage ( new java.io.File ( "ref/m.png" ) ) ; for ( int i = 0 ; i < ( ( img . getWidth () ) - 40 ) ; i ++ ) { if ( ( img . getRGB ( i , 0 ) ) == ( ref . getRGB ( 0 , 0 ) ) ) { if ( qwop_ai.ImageParser . compareColumn ( img , ref , i , 0 ) ) { return i ; } } } return - 1 ; } 
public pl.spring.demo.to.BookTo saveBook ( pl.spring.demo.to.BookTo book ) { java.lang.String url = ( SERVER ) + "/book" ; pl.spring.demo.to.BookTo returned ; java.lang.System.out . println ( "Dodaje ksiazke foire" ) ; java.util.List < org.springframework.http.converter.HttpMessageConverter < ? > > messageConverters = new java.util.ArrayList < org.springframework.http.converter.HttpMessageConverter < ? > > () ; messageConverters . add ( new org.springframework.http.converter.json.MappingJackson2HttpMessageConverter () ) ; restTemplate . setMessageConverters ( messageConverters ) ; returned = restTemplate . postForObject ( url , book , pl.spring.demo.to.BookTo . class ) ; return returned ; } 
private synchronized void closeWithoutMessage () { if ( ( this . state ) == ( org.opendaylight.protocol.bgp.rib.impl.BGPSessionImpl.State.IDLE ) ) { return; } org.opendaylight.protocol.bgp.rib.impl.BGPSessionImpl.LOG . info ( "Closing session: {}" , this ) ; removePeerSession () ; this . channel . close () . addListener ( new io.netty.channel.ChannelFutureListener () { @ java.lang.Override public void operationComplete ( final io.netty.channel.ChannelFuture future ) throws java.lang.Exception { com.google.common.base.Preconditions . checkArgument ( future . isSuccess () , "Channel failed to close: %s" , future . cause () ) ; } } ) ; this . state = org.opendaylight.protocol.bgp.rib.impl.BGPSessionImpl.State.IDLE ; } 
private java.util.Optional < org.atlasapi.media.entity.Image > checkForExistingImage ( java.util.Set < org.atlasapi.media.entity.Image > images , java.lang.String imageTheme ) { for ( org.atlasapi.media.entity.Image image : images ) { if ( image . getTheme () . getName () . equals ( imageTheme ) ) { return java.util.Optional . of ( image ) ; } } return java.util.Optional . empty () ; } 
public void scroll ( int steps ) { int scrollVel = steps ; if ( steps < 0 ) { if ( steps < ( timesoffY ) ) { scrollVel = timesoffY ; } } if ( ( steps > 0 ) && ( ( timesoffY ) > ( maxOffsetY ) ) ) { timesoffY = maxOffsetY ; scrollVel = 0 ; } timesoffY -= scrollVel ; } 
@ java.lang.Override public com.pratilipi.data.type.doc.Page addPage ( com.pratilipi.data.type.doc.PageletType type , java.lang.Object data ) { com.pratilipi.data.type.doc.Page page = new com.pratilipi.data.type.doc.PratilipiContentDocImpl.PageImpl () ; page . addPagelet ( type , data ) ; if ( ( this . pages ) == null ) this . pages = new java.util.LinkedList <> () ; this . pages . add ( page ) ; return page ; } 
@ org.junit.Test public void testDisplayobtainStringHashMap ( ) throws java.text.ParseException { Task.StringParser . getStringHashMap ( COMMAND_TYPE.EDIT_TASK , "" , keywordHash ) ; assertEquals ( 0 , keywordHash . size () ) ; Task.StringParser . getStringHashMap ( COMMAND_TYPE.DISPLAY , " 4" , keywordHash ) ; assertEquals ( "4" , keywordHash . get ( PARAMETER.TASKID ) ) ; } 
@ org.junit.Test public void testVerifyEchoResponse () { final com.udacity.gradle.builditbigger.EndpointsAsyncTask endpointsAsyncTask = new com.udacity.gradle.builditbigger.EndpointsAsyncTask () ; com.udacity.gradle.builditbigger.MainActivity mainActivity = rule . getActivity () ; endpointsAsyncTask . execute ( mainActivity ) ; try { java.lang.Thread . sleep ( 5000 ) ; java.lang.System.out . println ( "poraaaaa^^^^^^^^^^^^^^^^^^^^^^^^" ) ; junit.framework.Assert . assertTrue ( ( ( mainActivity.joke . length () ) > 0 ) ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } 
public com.epimorphics.simpleAPI.views.PropertySpec clone () { com.epimorphics.simpleAPI.views.PropertySpec ps = new com.epimorphics.simpleAPI.views.PropertySpec ( jsonname , property ) ; ps.optional = optional ; ps.multivalued = multivalued ; ps.filterable = filterable ; ps.range = range ; ps.comment = comment ; ps.valueBase = valueBase ; ps.hide = hide ; ps.nested = nested ; ps.excludedValues = excludedValues ; return ps ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { com.legitdevs.legitnotes.ConfirmRemovalDialog . getInstance ( getArguments () ) . show ( getFragmentManager () , "dialog" ) ; com.legitdevs.legitnotes.Note note = getArguments () . getParcelable ( com.legitdevs.legitnotes.EditDialog.KEY_NOTE ) ; int position = getArguments () . getInt ( com.legitdevs.legitnotes.EditDialog.KEY_POSITION ) ; android.os.Bundle bundle = new android.os.Bundle () ; bundle . putParcelable ( com.legitdevs.legitnotes.EditDialog.KEY_NOTE , note ) ; bundle . putInt ( com.legitdevs.legitnotes.EditDialog.KEY_POSITION , position ) ; com.legitdevs.legitnotes.ConfirmRemovalDialog . getInstance ( bundle ) . show ( getFragmentManager () , "dialog" ) ; dismiss () ; } 
public void setup () { Spaceship player0 = new Spaceship ( this , 250 , 250 , 0 , 30 , 'w' , 's' , 'a' , 'd' , ' ' , 0 ) ; Spaceship player1 = new Spaceship ( this , 250 , 248 , 0 , 32 , 'w' , 's' , 'a' , 'd' , ' ' , 1 ) ; Game.gameObjects . add ( player0 ) ; Game.gameObjects . add ( player1 ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( path = "/requests" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.util.ArrayList < tiy.invictus.ContactRequest > requests () { java.util.ArrayList < tiy.invictus.ContactRequest > contactRequestsList = new java.util.ArrayList < tiy.invictus.ContactRequest > () ; java.lang.Iterable < tiy.invictus.ContactRequest > allContacts = contacts . findAll () ; for ( tiy.invictus.ContactRequest contactRequest : allContacts ) { contactRequestsList . add ( contactRequest ) ; } try {} catch ( java.lang.Exception e ) { e . printStackTrace () ; } return contactRequestsList ; } 
@ java.lang.Override public void updatePause ( final boolean enabled , final boolean pauseResume ) { runOnUiThread ( new java.lang.Runnable () { @ java.lang.Override public void run () { java.lang.String str = tk.thebrightstuff.blindtale.utils.StringUtils . capitalize ( getResources () . getString ( ( pauseResume ? R.string.pause : R.string.resume ) ) ) ; ( ( android.widget.Button ) ( findViewById ( R.id.button_pause ) ) ) . setText ( str ) ; findViewById ( R.id.button_pause ) . setEnabled ( enabled ) ; findViewById ( R.id.button_skip ) . setEnabled ( enabled ) ; } } ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( ( android.text.TextUtils . isEmpty ( zipCodeACT . getText () ) ) && ( ! ( isUsingCurrentLocation ) ) ) { showInvalidEntriesDialog () ; } else { if ( ( ( prefZipCode ) == null ) || ( ( prefZipCode ) == "" ) ) { showSaveZipCodeEntryDialog ( v ) ; } else { startSearch ( v ) ; } } } 
private void removeStopWords () { for ( java.util.Iterator < java.lang.String > iterator = terms . iterator () ; iterator . hasNext () ; ) { java.lang.String term = iterator . next () ; for ( java.lang.String stopWord : stopwords ) { if ( term . equals ( stopWord ) ) { log . info ( ( ( "[StopWords] Remove term[" + term ) + "] to ranking" ) ) ; iterator . remove () ; } } } } 
@ java.lang.Override public void call ( boolean res ) { if ( res ) { android.widget.Toast . makeText ( this , "Authenticated!" , Toast.LENGTH_SHORT ) . show () ; android.content.Intent intent = new android.content.Intent ( this , com.mysjsu.mobsecurity.MonitoringActivity . class ) ; startActivity ( intent ) ; } else { android.widget.Toast . makeText ( this , "Incorrect Password" , Toast.LENGTH_SHORT ) . show () ; act . finish () ; act . onBackPressed () ; } } 
@ java.lang.Override public void writeData ( cell_potts_model.CellPottsModel model , int time ) { writer . println () ; int q = model . getTypesOfSpin () ; writer . printf ( "%.8f " , ( ( double ) ( time ) ) ) ; for ( int i = 1 ; i <= q ; i ++ ) { writer . printf ( "%.8f %.8f " , model . getXCM ( i ) , model . getYCM ( i ) ) ; } } 
public static void saveUserOnline () { if ( com.achanr.glovercolorapp.common.GCAuthUtil . isCurrentUserLoggedIn () ) { com.google.firebase.auth.FirebaseUser currentUser = com.achanr.glovercolorapp.common.GCAuthUtil . getCurrentUser () ; com.achanr.glovercolorapp.models.GCUser user = com.achanr.glovercolorapp.models.GCUser . convertFromFirebaseUser ( currentUser ) ; com.achanr.glovercolorapp.common.GCOnlineDatabaseUtil . getCurrentDatabaseReference () . child ( com.achanr.glovercolorapp.common.GCOnlineDatabaseUtil.USERS_KEY ) . child ( currentUser . getUid () ) . setValue ( user ) ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; binding = android.databinding.DataBindingUtil . setContentView ( this , R.layout.activity_main ) ; viewModel = new johnsmith.haruhi.co.refrigerator.MainActivity.MainActivityViewModel ( this ) ; binding . setViewModel ( viewModel ) ; setRecyclerView () ; viewModel . onViewCreate () ; binding.mainFAB . setOnLongClickListener ( new android.view.View.OnLongClickListener () { @ java.lang.Override public boolean onLongClick ( android.view.View view ) { viewModel . onFABLongClick () ; return true ; } } ) ; } 
public java.lang.Boolean putTransaction ( pl.rodia.jopama.data.ObjectId transactionId , pl.rodia.jopama.data.ExtendedTransaction extendedTransaction ) { assert extendedTransaction != null ; assert ( extendedTransaction.transaction ) != null ; pl.rodia.jopama.data.ExtendedTransaction oldExtendedTransaction = this . getTransaction ( transactionId ) ; this . transactions . put ( transactionId , extendedTransaction ) ; pl.rodia.jopama.core.LocalStorageImpl.logger . info ( ( ( ( ( ( "putTransaction, updating(" + ( ! ( extendedTransaction . equals ( oldExtendedTransaction ) ) ) ) + ") transactionId: " ) + transactionId ) + " transaction: " ) + extendedTransaction ) ) ; return ! ( extendedTransaction . equals ( oldExtendedTransaction ) ) ; } 
public Dialogue.Reply toReply ( java.util.Map < com.gpl.rpg.atcontentstudio.model.tools.writermode.WriterModeData.WriterDialogue , com.gpl.rpg.atcontentstudio.model.gamedata.Dialogue > visited ) { com.gpl.rpg.atcontentstudio.model.gamedata.Dialogue.Reply reply = new com.gpl.rpg.atcontentstudio.model.gamedata.Dialogue.Reply () ; reply.text = this . text ; if ( ( this . next_dialogue ) != null ) { this . next_dialogue . toDialogue ( visited ) ; reply.next_phrase_id = this . next_dialogue . getID () ; } else if ( ( this . next_dialogue_id ) != null ) { reply.next_phrase_id = this . next_dialogue_id ; } else { reply.next_phrase_id = "X" ; } return reply ; } 
private int getItemHeight () { if ( ( mRowHeight ) == 0 ) { android.util.TypedValue value = new android.util.TypedValue () ; android.util.DisplayMetrics metrics = new android.util.DisplayMetrics () ; mContext . getTheme () . resolveAttribute ( android.R.attr.listPreferredItemHeight , value , true ) ; ( ( android.view.WindowManager ) ( mContext . getSystemService ( Context.WINDOW_SERVICE ) ) ) . getDefaultDisplay () . getMetrics ( metrics ) ; mRowHeight = ( ( int ) ( android.util.TypedValue . complexToDimension ( value.data , metrics ) ) ) ; } return mRowHeight ; } 
public java.lang.Boolean moveToDecision ( Objects.Car car , Controllers.CarFlow.Direction dirDestination , Controllers.CarFlow.Direction dirJunction , int destination , Objects.Terrain t ) { for ( int i = 0 ; i < ( car . getLength () ) ; i ++ ) { car . move ( dirJunction ) ; } car . turn ( dirDestination ) ; for ( int i = 0 ; i < ( car . getLength () ) ; i ++ ) { car . move ( dirDestination ) ; } return true ; } 
@ java.lang.Override public java.lang.String apply ( java.io.InputStream is ) throws java.io.IOException { if ( ( is == null ) || ( ( is . available () ) == 0 ) ) { return null ; } java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream () ; byte [] buf = new byte [ 1024 ] ; int read ; while ( ( read = is . read ( buf ) ) != ( - 1 ) ) { baos . write ( buf , 0 , read ) ; } return baos . toString ( "UTF-8" ) ; } 
public static void handleError ( android.content.Context context , java.lang.String message , java.lang.Throwable e ) { com.stablekernel.standardlib.Log . e ( context . getClass () . getSimpleName () , e . getLocalizedMessage () , e ) ; if ( ( BuildConfig.DEBUG ) || ( message != null ) ) { android.widget.Toast . makeText ( context , ( message == null ? e . getLocalizedMessage () : message ) , Toast.LENGTH_LONG ) . show () ; } } 
public void choiceFusionAction ( java.util.HashMap < java.lang.String , java.lang.Integer > actions_fusions , application.model.Chaine chaineAbsorbee , application.model.Chaine chaineAbsorbante , java.lang.String pseudo ) throws java.rmi.RemoteException { java.lang.System.out . println ( "ok" ) ; getGame () . getTableauDeBord () . traiteAction ( actions_fusions , chaineAbsorbee , chaineAbsorbante , pseudo ) ; if ( ( getGame () . getOrdre_joueur_action () . size () ) == 0 ) getGame () . getAction () . getListeChainesAbsorbees () . remove ( 0 ) ; nextTurnAction () ; distribution () ; } 
private static boolean isValidMouseMove ( CatAndMouseWithLake.Direction direction , java.awt.Point mouse , java.awt.Point cat , int boardSize ) { java.awt.Point simulatedMouseMove = new java.awt.Point ( mouse ) ; simulatedMouseMove = CatAndMouseWithLake . translatePointWithDirection ( simulatedMouseMove , direction ) ; return ( ( ! ( cat . equals ( simulatedMouseMove ) ) ) || ( ! ( CatAndMouseWithLake . isInsideLake ( simulatedMouseMove ) ) ) ) || ( ! ( CatAndMouseWithLake . isInsideBoard ( simulatedMouseMove , boardSize ) ) ) ; } 
public void setMessage ( final org.apache.logging.log4j.message.Message msg ) { if ( msg instanceof org.apache.logging.log4j.message.ReusableMessage ) { org.apache.logging.log4j.message.ReusableMessage reusable = ( ( org.apache.logging.log4j.message.ReusableMessage ) ( msg ) ) ; reusable . formatTo ( getMessageTextForWriting () ) ; parameters = reusable . swapParameters ( parameters ) ; parameterCount = reusable . getParameterCount () ; } else { if ( ( ! ( org.apache.logging.log4j.core.util.Constants.FORMAT_MESSAGES_IN_BACKGROUND ) ) && ( msg != null ) ) { msg . getFormattedMessage () ; } this . message = msg ; } } 
private static java.lang.String printHorizontalLine ( java.lang.String toPrint , java.lang.String n ) { if ( n == null ) { return "" ; } int iterator = java.lang.Integer . parseInt ( n ) ; for ( int i = 0 ; i < iterator ; i ++ ) { toPrint += "*" ; } return toPrint ; } 
private void saveNoteToDB () { java.lang.System.out . println ( "Command clicked: Saved" ) ; Note note = createNote () ; if ( note != null ) { java.lang.System.out . println ( ( "Saving: " + ( note . toString () ) ) ) ; byte [] record = ByteUtils . toByteArray ( note ) ; RecordStoreManager . getInstance () . saveRecord ( record ) ; callback . onListUpdate () ; } } 
private boolean hasConnection () { boolean hasConnection = false ; try { hasConnection = validarUsuario ( USUARIOHIPERREG , encriptarPassword ( PASSWORDHIPERREG ) ) ; play.Logger . info ( ( ( ( "El servicio tiene conexion con " + ( getEndPoint () ) ) + "?: " ) + hasConnection ) ) ; } catch ( java.lang.Exception e ) { play.Logger . info ( ( "El servicio no tiene conexion con " + ( getEndPoint () ) ) ) ; } return hasConnection ; } 
@ java.lang.Override public void visitElement ( com.android.tools.lint.detector.api.XmlContext context , org.w3c.dom.Element element ) { java.lang.String tagName = element . getTagName () ; switch ( tagName ) { case com.android.SdkConstants.VIEW_INCLUDE : handleVisitIncludeTag ( context , element ) ; break; case com.android.SdkConstants.VIEW_MERGE : handleVisitMergeTag ( context , element ) ; break; case com.android.SdkConstants.VIEW_STUB : handleVisitViewStubTag ( context , element ) ; break; } } 
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { return ( ( obj != null ) && ( lilium.arubabacon.iBeacon . class . isAssignableFrom ( obj . getClass () ) ) ) && ( ( ( lilium.arubabacon.iBeacon ) ( obj ) ) . mac . equals ( mac ) ) ; } 
public double getOffersLowestPrice () { double result = 0.0F ; try { open () ; java.lang.System.out . println ( ">> DataAccess: getOfferLowestPrice() -> " ) ; javax.persistence.TypedQuery < java.lang.Double > query = db . createQuery ( ( "SELECT MIN(o.price) " + "FROM Offer o " ) , java.lang.Double . class ) . setMaxResults ( 1 ) ; result = query . getSingleResult () ; java.lang.System.out . print ( result ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } finally { close () ; } return result ; } 
@ org.junit.Test public void testCreateTurnObserver ( ) throws java.lang.IllegalAccessException , java.lang.IllegalArgumentException , java.lang.NoSuchFieldException , java.lang.SecurityException { game.ITurnObserver observer = new game.TurnObserver () ; game.GameBoard board = new game.GameBoard ( game.GameBoard.User.PLAYER1 , pieces ) ; board . setObserver ( observer ) ; java.lang.reflect.Field privateObserverField = game.GameBoard . class . getDeclaredField ( "observer" ) ; privateObserverField . setAccessible ( true ) ; game.ITurnObserver fieldValue = ( ( game.ITurnObserver ) ( privateObserverField . get ( board ) ) ) ; assertTrue ( ( fieldValue != null ) ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/create" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) @ org.springframework.web.bind.annotation.ResponseBody public void create ( @ org.springframework.web.bind.annotation.RequestBody minium.developer.config.WebDriversProperties.DeveloperWebDriverProperties webDriverProperties , @ org.springframework.web.bind.annotation.RequestParam ( value = "withRecorder" , defaultValue = "false" ) boolean withRecorder ) throws java.io.IOException { java.lang.String browserName = ( ( java.lang.String ) ( webDriverProperties . getDesiredCapabilities () . get ( "browserName" ) ) ) ; if ( ( webDriverProperties . getUrl () ) == null ) { webDriverService . webDriverExists ( browserName ) ; } org.openqa.selenium.WebDriver webDriver = webDriverService . createWebDriver ( webDriverProperties , withRecorder ) ; delegatorWebDriver . setDelegate ( webDriver ) ; } 
public agent.AgentInternalState getEmotionalState ( java.lang.Double gain ) { if ( gain != null ) { agent.AgentInternalState gainState = new agent.AgentInternalState () ; for ( data.Emotion emotion : this ) { if ( emotion != null ) { double gainEmo = ( gain * ( emotion.intensity ) ) / ( ( gain * ( emotion.intensity ) ) + 1 ) ; gainState . add ( new data.Emotion ( emotion.name , gainEmo ) ) ; } } return gainState ; } return this ; } 
@ java.lang.Override protected void animateVisibility ( boolean toVisible ) { android.util.Log . d ( "tianbin" , "animateVisibility" ) ; if ( ( isVisible ) == toVisible ) { return; } if ( ( ! ( hideEmptyTextContainer ) ) || ( ! ( isTextContainerEmpty () ) ) ) { textContainer . startAnimation ( new com.devbrackets.android.exomedia.ui.animation.TopViewHideShowAnimation ( textContainer , toVisible , CONTROL_VISIBILITY_ANIMATION_LENGTH ) ) ; } if ( ! ( isLoading ) ) { controlsContainer . startAnimation ( new com.devbrackets.android.exomedia.ui.animation.BottomViewHideShowAnimation ( controlsContainer , toVisible , CONTROL_VISIBILITY_ANIMATION_LENGTH ) ) ; } isVisible = toVisible ; onVisibilityChanged () ; } 
private int getHiddenCountUpTo ( int location ) { int count = 0 ; for ( int i = 0 ; i <= location ; i ++ ) { if ( hidden . contains ( users . get ( i ) . getName () ) ) count ++ ; } return count ; } 
public void placeSettlement ( shared.locations.VertexLocation vertLoc ) { switch ( status ) { case "FirstRound" : clientFacade . buildSettlement ( vertLoc , true ) ; clientFacade . finishTurn () ; break; case "SecondRound" : clientFacade . buildSettlement ( vertLoc , true ) ; clientFacade . finishTurn () ; break; default: clientFacade . buildSettlement ( vertLoc , false ) ; break; } getView () . placeSettlement ( vertLoc , clientFacade . getPlayerColor () ) ; } 
@ java.lang.Override public int inviteFriend ( int inviterID , int inviteeID ) { org.ejdb.bson.BSONObject newFriendReq = new org.ejdb.bson.BSONObject ( "userid1" , java.lang.String . valueOf ( inviterID ) ) . append ( "userid2" , java.lang.String . valueOf ( inviteeID ) ) . append ( "status" , EJDBClientProperties.FRIEND_PENDING ) ; org.ejdb.driver.EJDBCollection friends = src.EJDBClient.ejdb . getCollection ( EJDBClientProperties.DB_COLLECTION_FRIENDS ) ; friends . save ( newFriendReq ) ; friends . commitTransaction () ; return 0 ; } 
@ java.lang.Override public void onEntityRemoved ( net.minecraft.entity.Entity entityIn ) { if ( ( entityIn instanceof net.minecraft.entity.item.EntityMinecart ) && ( ! ( entityIn.worldObj.isRemote ) ) ) { com.minemaarten.signals.capabilities.CapabilityMinecartDestination cap = entityIn . getCapability ( CapabilityMinecartDestination.INSTANCE , null ) ; cap . onCartBroken ( ( ( net.minecraft.entity.item.EntityMinecart ) ( entityIn ) ) ) ; } } 
private void drawHarvestableWine ( int x , int y , float color ) { jsettlers.graphics.sequence.Sequence < ? extends jsettlers.graphics.image.Image > seq = this . imageProvider . getSettlerSequence ( jsettlers.graphics.map.draw.MapObjectDrawer.OBJECTS_FILE , jsettlers.graphics.map.draw.MapObjectDrawer.WINE ) ; int step = jsettlers.graphics.map.draw.MapObjectDrawer.WINE_GROW_STEPS ; draw ( seq . getImageSafe ( step ) , x , y , color ) ; } 
public void onClick ( android.content.DialogInterface dialog , int which ) { java.lang.String newName = input . getText () . toString () ; player . updateName ( newName ) ; storeGameResultInDB () ; android.view.inputmethod.InputMethodManager imm = ( ( android.view.inputmethod.InputMethodManager ) ( getSystemService ( Context.INPUT_METHOD_SERVICE ) ) ) ; imm . hideSoftInputFromWindow ( input . getWindowToken () , 0 ) ; dialog . dismiss () ; returnToTitleScreen () ; } 
private edu.illinois.nondex.common.Configuration debugWithConfigurations ( java.util.Set < edu.illinois.nondex.common.Configuration > failingConfigurations ) { edu.illinois.nondex.common.Configuration debConfig = null ; for ( edu.illinois.nondex.common.Configuration config : failingConfigurations ) { if ( this . failsOnDry ( config ) ) { edu.illinois.nondex.common.Configuration failingConfig = this . startDebugBinary ( config ) ; if ( failingConfig . hasLessChoicePoints ( debConfig ) ) { debConfig = failingConfig ; } } } return debConfig ; } 
private java.util.Map < java.lang.String , java.lang.Integer > countTypesInSet ( java.lang.String [] tokens , java.util.Set < java.lang.String > lexicon ) { java.util.Map < java.lang.String , java.lang.Integer > counts = new java.util.HashMap < java.lang.String , java.lang.Integer > () ; for ( int i = 0 ; i < ( tokens.length ) ; i ++ ) { java.lang.String token = tokens [ i ] ; if ( lexicon . contains ( token ) ) addTokenToCounts ( token , counts ) ; } return counts ; } 
void enterScope ( com.google.devtools.build.lib.syntax.BaseFunction function , com.google.devtools.build.lib.syntax.FuncallExpression caller , com.google.devtools.build.lib.syntax.Environment.Frame globals ) { continuation = new com.google.devtools.build.lib.syntax.Environment.Continuation ( continuation , function , caller , lexicalFrame , globalFrame , knownGlobalVariables , isSkylark ) ; lexicalFrame = new com.google.devtools.build.lib.syntax.Environment.Frame ( mutability () , null ) ; globalFrame = globals ; knownGlobalVariables = new java.util.HashSet <> () ; isSkylark = true ; } 
private void GetBlueToothStatus () { android.bluetooth.BluetoothAdapter mBluetoothAdapter = android.bluetooth.BluetoothAdapter . getDefaultAdapter () ; if ( mBluetoothAdapter . isEnabled () ) { android.util.Log . d ( tom.pearson.PocketKnife.MainActivity.TAG , ( "checkNetworkConnection" + ( getString ( R.string.bluetooth ) ) ) ) ; mTextMessage . append ( getString ( R.string.bluetooth ) ) ; } else { android.util.Log . d ( tom.pearson.PocketKnife.MainActivity.TAG , ( "checkNetworkConnection" + ( getString ( R.string.no_bluetooth ) ) ) ) ; mTextMessage . append ( getString ( R.string.no_bluetooth ) ) ; } } 
private java.net.URL getRelativeURL ( java.lang.String name ) { try { return new java.net.URL ( this . self . getProtocol () , this . self . getHost () , this . self . getPort () , ( ( ( this . basePath ) + "/" ) + name ) ) ; } catch ( java.net.MalformedURLException e ) { de.skuzzle.tinyplugz.PluginClassLoader.LOG . error ( "Error constructing relative url with base path {0} and name {1}" , this . basePath , name , e ) ; } return null ; } 
private void VisionaSchedaListener () { if ( ( Box . getSelectedItem () ) != null ) { javax.swing.JButton visionaSchedaButton = view . getVisionaSchedaButton () ; visionaSchedaButton . addActionListener ( new java.awt.event.ActionListener () { @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { VisionaSchedaAction () ; } } ) ; } } 
@ java.lang.Override public V put ( K key , V value ) { V old = super . put ( key , value ) ; super . put ( key , value ) ; putCount += 1 ; if ( ( putCount ) > ( maxCacheSize ) ) { putCount = 0 ; map . poll () ; } return old ; } 
private void RequestToUpdateLatLong () { com.app.lifeshare.Utils.LogUtils . showErrorLog ( "RequestToUpdateLatLong" ) ; android.os.Bundle params = new android.os.Bundle () ; com.app.lifeshare.Utils.StorageUtils storageUtils = com.app.lifeshare.Utils.StorageUtils . getInstance ( getApplicationContext () ) ; params . putDouble ( APIURL.LONGITUDE , storageUtils . getUserLongitude () ) ; params . putDouble ( APIURL.LATITUDE , storageUtils . getUserLattitude () ) ; params . putString ( APIURL.USERID , storageUtils . getUserId () ) ; com.app.lifeshare.Utils.JSONPostRequestResponse jsonPostRequestResponse = new com.app.lifeshare.Utils.JSONPostRequestResponse () ; jsonPostRequestResponse . postJsonData ( APIURL.URL_UPDATE_USER_DETAILS , APIURL.REQ_UPDATE_USER_DETAILS_CODE , this , params , getApplicationContext () ) ; } 
private void up () { if ( ( c ) == null ) { try { throw new java.lang.Exception ( "Brak Postaci" ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } for ( int i = 0 ; i < ( maxJumpHeigth ) ; i ++ ) { c . up () ; try { java.lang.Thread . sleep ( 100 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } } 
com.emc.storageos.isilon.restapi.IsilonSyncPolicy doEnableReplicationPolicy ( com.emc.storageos.isilon.restapi.IsilonApi isi , java.lang.String policyName ) { com.emc.storageos.isilon.restapi.IsilonSyncPolicy modifiedPolicy = new com.emc.storageos.isilon.restapi.IsilonSyncPolicy () ; modifiedPolicy . setName ( policyName ) ; modifiedPolicy . setEnabled ( true ) ; com.emc.storageos.isilon.restapi.IsilonSyncPolicy policy = isi . getReplicationPolicy ( policyName ) ; if ( ( null != policy ) && ( ! ( policy . getEnabled () ) ) ) { isi . modifyReplicationPolicy ( policyName , modifiedPolicy ) ; policy = isi . getReplicationPolicy ( policyName ) ; } com.emc.storageos.volumecontroller.impl.isilon.IsilonMirrorOperations._log . info ( "Replication Policy -{}  enabled successfully." , policy . toString () ) ; return policy ; } 
@ java.lang.Override public boolean hasNext () { return ( ( iter . hasNext () ) && ( ! ( ( ( train ) && ( ( cursor ) > ( lowerBound ) ) ) && ( ( folds ) == ( ( iteration ) + 1 ) ) ) ) ) && ( ! ( ( ! ( train ) ) && ( ( ( cursor ) + ( iter . batch () ) ) > ( upperBound ) ) ) ) ; } 
@ java.lang.Override public void deleteEvent ( int eventId ) throws model.exceptions.NoSuchEventException , model.exceptions.UnEditableEventException { this . validateEvent ( eventId ) ; timeline.Event event = ( ( timeline.Event ) ( this . serializer . getItem ( eventId ) ) ) ; if ( ! ( event . isEditable () ) ) { throw new model.exceptions.UnEditableEventException ( event . toString () ) ; } this . serializer . deleteItem ( eventId ) ; } 
protected java.lang.String extractFeatures ( java.lang.String docID , java.io.InputStream imageObj ) throws eu.europeana.service.ir.image.exceptions.ImageIndexingException { java.lang.String imgFeatures ; try { if ( ( img2Features ) == null ) img2Features = initFeatureExtractor ( getDataset () ) ; } catch ( java.lang.Exception e ) { throw new eu.europeana.service.ir.image.exceptions.ImageIndexingException ( ( "Cannot init feature extractor for dataset!" + ( getDataset () ) ) , e ) ; } try { imgFeatures = img2Features . extractFeatures ( imageObj ) ; } catch ( it.cnr.isti.feature.extraction.FeatureExtractionException e ) { throw new eu.europeana.service.ir.image.exceptions.ImageIndexingException ( ( "Cannot extract features from input stream. docId" + docID ) , e ) ; } return imgFeatures ; } 
private java.util.List < GameComponents.Riddle > getUserRiddlesToSolveTeam ( GameComponents.User i_User ) { java.util.List < GameComponents.Riddle > riddlesToSolve = new java.util.ArrayList <> () ; GameComponents.Team playerTeam = getPlayerTeam ( i_User ) ; if ( ! ( playerTeam . HasTeamWon () ) ) { return m_Levels . get ( getTeamRiddleLevel ( playerTeam . GetTeamName () ) ) . GetRiddlesNotSolvedByTeam ( playerTeam ) ; } return riddlesToSolve ; } 
private java.util.List < org.educationalProject.surfacePathfinder.Point > retrievalPath ( org.educationalProject.surfacePathfinder.Point target ) { java.util.List < org.educationalProject.surfacePathfinder.Point > shortestPath = new java.util.ArrayList < org.educationalProject.surfacePathfinder.Point > () ; org.educationalProject.surfacePathfinder.Point step = target ; if ( ( predecessors . get ( step ) ) == null ) { return null ; } shortestPath . add ( step ) ; while ( ( predecessors . get ( step ) ) != null ) { step = predecessors . get ( step ) ; shortestPath . add ( step ) ; } java.util.Collections . reverse ( shortestPath ) ; return shortestPath ; } 
@ org.junit.Test public void testGetCoordinates () { com.google.android.gms.maps.model.LatLng expectedAnswer1 = new com.google.android.gms.maps.model.LatLng ( ( - 75.15383119 ) , 40.01277732 ) ; com.google.android.gms.maps.model.LatLng actualAnswer1 = testCrimeData . getCoordinates ( sampleJson1 ) ; junit.framework.Assert . assertEquals ( expectedAnswer1 , actualAnswer1 ) ; com.google.android.gms.maps.model.LatLng expectedAnswer2 = new com.google.android.gms.maps.model.LatLng ( ( - 75.24043568 ) , 39.98790629 ) ; com.google.android.gms.maps.model.LatLng actualAnswer2 = testCrimeData . getCoordinates ( sampleJson2 ) ; junit.framework.Assert . assertEquals ( expectedAnswer2 , actualAnswer2 ) ; } 
private void SendFile ( java.lang.String message , int filePort , java.lang.String IP ) { java.lang.String [] tmp = message . split ( "n" ) ; java.lang.String filePath = tmp [ 0 ] ; long size = java.lang.Integer . parseInt ( tmp [ 2 ] ) ; Client.Send send = new Client.Send ( filePath , filePort , IP , size ) ; send . start () ; al_send . add ( send ) ; } 
@ org.junit.Test public void shouldFindAllApiMembers ( ) throws io.gravitee.repository.exceptions.TechnicalException { java.util.Set < io.gravitee.repository.management.model.Membership > memberships = membershipRepository . findByReferenceAndRole ( MembershipReferenceType.API , "api1" , null , null ) ; org.junit.Assert . assertNotNull ( "result must not be null" , memberships ) ; org.junit.Assert . assertTrue ( ( ! ( memberships . isEmpty () ) ) ) ; org.junit.Assert . assertEquals ( "user1" , memberships . iterator () . next () . getUserId () ) ; } 
public void move ( game.board.Board board , game.board.Tile position ) throws game.errors.InvalidMoveException { if ( java.util.Arrays . asList ( getMoves ( board ) ) . contains ( position ) ) { this . position = position ; position . setPiece ( this ) ; } else { throw new game.errors.InvalidMoveException ( "This piece can't move there." ) ; } } 
public static boolean checkDataExistedInTable ( java.lang.String tableName ) throws java.sql.SQLException { java.lang.String check = "SELECT * FROM " + tableName ; java.sql.PreparedStatement pt = las.DBConnector.conn . prepareStatement ( check ) ; java.sql.ResultSet rs = pt . executeQuery () ; if ( ! ( rs . next () ) ) { las.DBConnector.truncateBeforeLoad = true ; } return las.DBConnector.truncateBeforeLoad ; } 
@ org.junit.Test public void sholdCreateErrorMessageIfPasswordEmpty () { org.mockito.Mockito . when ( mockLoginView . getUserName () ) . thenReturn ( "username" ) ; org.mockito.Mockito . when ( mockLoginView . getPassword () ) . thenReturn ( "" ) ; presenter . saveUser () ; org.mockito.Mockito . verify ( mockLoginView , org.mockito.Mockito . times ( 1 ) ) . getUserName () ; org.mockito.Mockito . verify ( mockLoginView , org.mockito.Mockito . never () ) . getPassword () ; org.mockito.Mockito . verify ( mockLoginView , org.mockito.Mockito . times ( 1 ) ) . showInputError () ; } 
private void reverse ( int [] input , int start , int end ) { for ( int i = start , j = end ; i < ( ( start + end ) / 2 ) ; ++ i , -- j ) { int temp = input [ i ] ; input [ i ] = input [ j ] ; input [ j ] = temp ; } } 
public void updateTimestepAccel ( Body other ) { double d = distance ( other ) ; double sum = 0 ; for ( int i = 0 ; i < 3 ; i ++ ) { double a = ( ( Constants.G ) * ( other.mass ) ) * ( ( other.position [ i ] ) - ( position [ i ] ) ) ; deltaAccel [ i ] += a / ( ( d * d ) * d ) ; sum += deltaAccel [ i ] ; } } 
@ java.lang.Override public de.unihamburg.sickstore.backend.anomaly.Anomaly handleRequest ( de.unihamburg.sickstore.backend.anomaly.ClientRequest request , java.util.Set < de.unihamburg.sickstore.database.Node > nodes ) { de.unihamburg.sickstore.backend.anomaly.Anomaly anomaly = new de.unihamburg.sickstore.backend.anomaly.Anomaly () ; if ( ( request instanceof de.unihamburg.sickstore.backend.anomaly.ClientRequestWrite ) && ( ( stalenessGenerator ) != null ) ) { anomaly . setStalenessMap ( stalenessGenerator . generateStalenessMap ( nodes , request ) ) ; } if ( ( request instanceof de.unihamburg.sickstore.backend.anomaly.ClientRequestRead ) || ( request instanceof de.unihamburg.sickstore.backend.anomaly.ClientRequestScan ) ) { anomaly . setResponsiveNode ( clientDelayGenerator . getResponsiveNode ( request , nodes ) ) ; } return anomaly ; } 
@ java.lang.Override public int getItemPosition ( java.lang.Object object ) { uk.co.senab.photoview.PhotoView imageView = ( ( uk.co.senab.photoview.PhotoView ) ( object ) ) ; int positon = mImageViews . indexOf ( imageView ) ; if ( positon == ( - 1 ) ) { return POSITION_NONE ; } else { return positon ; } } 
private void processTargetStateChanges ( java.util.Set < java.lang.String > connectorTargetStateChanges ) { if ( ! ( connectorTargetStateChanges . isEmpty () ) ) { for ( java.lang.String connector : connectorTargetStateChanges ) { if ( worker . connectorNames () . contains ( connector ) ) { org.apache.kafka.connect.runtime.TargetState targetState = configState . targetState ( connector ) ; worker . setTargetState ( connector , targetState ) ; if ( targetState == ( org.apache.kafka.connect.runtime.TargetState.STARTED ) ) reconfigureConnectorTasksWithRetry ( connector ) ; } } } } 
public static void main ( java.lang.String [] args ) { de.biomedical_imaging.ij.trajectory_classifier.help.PerformanceDataGenerator pg = new de.biomedical_imaging.ij.trajectory_classifier.help.PerformanceDataGenerator () ; try { de.biomedical_imaging.ij.trajectory_classifier.help.PerformanceDataGenerator.modelpath = pg . ExportResource ( "/randomForestModel.RData" ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } de.biomedical_imaging.ij.trajectory_classifier.help.PerformanceDataGenerator . generateNormalDiffData () ; de.biomedical_imaging.ij.trajectory_classifier.help.PerformanceDataGenerator . generateActiveData () ; de.biomedical_imaging.ij.trajectory_classifier.help.PerformanceDataGenerator . generateConfinedData () ; de.biomedical_imaging.ij.trajectory_classifier.help.PerformanceDataGenerator . generateSubdiffusionData () ; } 
@ java.lang.Override public int read ( char [] cbuf , int off , int len ) throws java.io.IOException { int n = _in . read ( cbuf , off , len ) ; for ( int i = off ; i < ( off + len ) ; i ++ ) { cbuf [ i ] = encryptChar ( cbuf [ i ] ) ; } return n ; } 
public void play ( java.lang.String filename , android.widget.ProgressBar progressBar ) throws org.mercycorps.translationcards.exception.AudioFileException { this . progressBar = progressBar ; try { getAudioPlayerManager () . play ( filename ) ; progressBar . setMax ( getAudioPlayerManager () . getMaxDuration () ) ; schedule () ; } catch ( java.io.IOException e ) { throw new org.mercycorps.translationcards.exception.AudioFileException ( e ) ; } } 
public boolean usernameExist ( java.lang.String username ) { java.util.List < sample.handleData.User > list = this . listOfUser () ; for ( sample.handleData.User u : list ) { if ( u . username () . equals ( username ) ) { return true ; } } return false ; } 
public android.graphics.Bitmap decodePhoto ( java.lang.String path ) { android.net.Uri selectedImageUri = android.net.Uri . parse ( selectedImagePath ) ; getContentResolver () . notifyChange ( selectedImageUri , null ) ; android.content.ContentResolver cr = getContentResolver () ; android.graphics.Bitmap bitmap = null ; try { bitmap = MediaStore.Images.Media . getBitmap ( cr , selectedImageUri ) ; android.widget.Toast . makeText ( this , selectedImageUri . toString () , Toast.LENGTH_SHORT ) . show () ; } catch ( java.lang.Exception e ) { android.util.Log . e ( nyc.c4q.rosmaryfc.meme_ify_me.MainActivity.logtag , e . toString () ) ; } return bitmap ; } 
@ java.lang.Override public void surfaceDestroyed ( android.view.SurfaceHolder holder ) { boolean retry = true ; while ( retry ) { try { thread . setRunning ( false ) ; thread . join () ; pitchDetector . stop () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } retry = false ; } } 
@ org.junit.Test public void testCompositeFunction () { final org.bootapp.utilities.jmockit.test.BasedFunctionClass basedFunctionClass = new org.bootapp.utilities.jmockit.test.BasedFunctionClass () ; new mockit.Expectations ( basedFunctionClass ) { { basedFunctionClass . basedFunction ( "info" ) ; result = "hi info" ; } } ; org.bootapp.utilities.jmockit.test.CompositeFunctionClass compositeFunctionClass = new org.bootapp.utilities.jmockit.test.CompositeFunctionClass ( basedFunctionClass ) ; java.lang.System.out . println ( compositeFunctionClass . compositeFunction ( "info" ) ) ; new mockit.Verifications () { { basedFunctionClass . basedFunction ( "info" ) ; times = 1 ; } } ; } 
@ java.lang.Override protected void stopComponentDelegate ( ) throws java.lang.Exception { for ( java.util.Set < org.inaetics.remote.admin.wiring.ExportedEndpointImpl > exportedEndpoints : m_exportedEndpoints . values () ) { for ( org.inaetics.remote.admin.wiring.ExportedEndpointImpl exportedEndpoint : exportedEndpoints ) { exportedEndpoint . close () ; } } for ( java.util.Set < org.inaetics.remote.admin.wiring.ImportedEndpointImpl > importedEndpoints : m_importedEndpoints . values () ) { for ( org.inaetics.remote.admin.wiring.ImportedEndpointImpl importedEndpoint : importedEndpoints ) { importedEndpoint . close () ; } } assert m_exportedEndpoints . isEmpty () ; assert m_importedEndpoints . isEmpty () ; } 
public static android.database.Cursor getStudy ( android.content.Context c , java.lang.String study_url ) { return c . getContentResolver () . query ( Aware_Provider.Aware_Studies.CONTENT_URI , null , ( ( ( ( Aware_Provider.Aware_Studies.STUDY_URL ) + " LIKE '" ) + study_url ) + "'" ) , null , ( ( "ORDER BY " + ( Aware_Provider.Aware_Studies.STUDY_TIMESTAMP ) ) + " DESC LIMIT 1" ) ) ; } 
@ java.lang.Override public void addRoute ( edu.hm.cs.bikebattle.app.modell.Route route , edu.hm.cs.bikebattle.app.modell.User user , edu.hm.cs.bikebattle.app.data.Consumer consumer ) { edu.hm.cs.bikebattle.app.api.domain.RouteDto routeDto = edu.hm.cs.bikebattle.app.modell.assembler.RouteAssembler . toDto ( route ) ; routeDto . setOwner ( ( ( address ) + ( user . getOid () ) ) ) ; executeWriteCall ( routeClient . create ( routeDto ) , consumer ) ; } 
public boolean containsModifications ( final com.charlesmadere.hummingbird.models.LibraryEntry libraryEntry ) { return ( ( ( ( ( ( ( ( mEpisodesWatched ) != null ) || ( ( mRewatching ) != null ) ) || ( ( mRewatchedTimes ) != null ) ) || ( ( mPrivacy ) != null ) ) || ( ( mNotes ) != null ) ) || ( ( mWatchingStatus ) != null ) ) || ( ( mRating ) != null ) ) || ( ( ( mSaneRating ) == null ) && ( libraryEntry . hasRating () ) ) ; } 
@ java.lang.Override public boolean isWaiting () { boolean waiting = false ; for ( cs361Project.Runner r : getRunners () ) { if ( r == null ) waiting = true ; else if ( ( r . getStartTime () ) == null ) waiting = true ; } return waiting ; } 
public void writeCharacters ( final char [] aText , final int nStart , final int nLen ) throws javax.xml.stream.XMLStreamException { debug ( ( ) - > ( ( ( ( ( "writeCharacters (" + ( java.lang.String . valueOf ( aText ) ) ) + ", " ) + nStart ) + ", " ) + nLen ) + ")" ) ; _elementStartClose () ; m_aEmitter . onText ( aText , nStart , nLen ) ; } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setHasOptionsMenu ( true ) ; setRetainInstance ( true ) ; getActivity () . deleteDatabase ( "movies.db" ) ; edu.seattleu.elarson.moviedatabase.MovieDatabaseHelper movieDatabaseHelper = new edu.seattleu.elarson.moviedatabase.MovieDatabaseHelper ( this . getActivity () ) ; mCursor = movieDatabaseHelper . queryMovies () ; edu.seattleu.elarson.moviedatabase.MovieListFragment.MovieCursorAdapter movieCursorAdapter = new edu.seattleu.elarson.moviedatabase.MovieListFragment.MovieCursorAdapter ( this . getActivity () , mCursor ) ; setListAdapter ( movieCursorAdapter ) ; } 
@ java.lang.Override public boolean equals ( java.lang.Object o ) { if ( ( this ) == o ) return true ; if ( ! ( o instanceof status.IpCounter ) ) return false ; status.IpCounter ipCounter = ( ( status.IpCounter ) ( o ) ) ; return ( ( quantity ) == ( ipCounter.quantity ) ) && ( date . equals ( ipCounter.date ) ) ; } 
public void dropItem ( game.Item item , game.Floor floor , int inventorySpace ) { inventory [ inventorySpace ] = null ; inventorySpaces [ inventorySpace ] = false ; ( itemsInInventory ) -- ; if ( item.isEquipped ) { if ( item instanceof game.Weapon ) equippedWeapon = null ; else if ( item instanceof game.Armor ) equippedArmor = null ; } floor.itemLocations [ ( ( this . x1 ) / ( game.Player.TILE_SIZE ) ) ] [ ( ( this . y1 ) / ( game.Player.TILE_SIZE ) ) ] = item ; floor.itemsOnFloor . add ( item ) ; } 
public static boolean pointBetween ( double d1 , double d2 , double d3 ) { boolean compare = d1 > d2 ; double low = ( compare ) ? d1 : d2 ; double high = ( compare ) ? d2 : d1 ; return ( d3 >= low ) && ( d3 <= high ) ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { switch ( view . getId () ) { case R.id.head_select : if ( ! ( isFinishing () ) ) headDialogShow ( view ) ; break; case R.id.profession_select : professionDialogShow ( view ) ; break; case R.id.title_left : setResult ( com.gzfgeh.set.RESULT_OK ) ; finish () ; break; default: break; } } 
public void removeCallback ( com.android.keyguard.KeyguardUpdateMonitorCallback callback ) { if ( com.android.keyguard.KeyguardUpdateMonitor.DEBUG ) android.util.Log . v ( com.android.keyguard.KeyguardUpdateMonitor.TAG , ( "*** unregister callback for " + callback ) ) ; for ( int i = ( mCallbacks . size () ) - 1 ; i >= 0 ; i -- ) { if ( ( mCallbacks . get ( i ) . get () ) == callback ) { mCallbacks . remove ( i ) ; } } } 
public void copyFiles ( android.view.View v ) { com.smartstorage.mobile.db.DatabaseHandler db = com.smartstorage.mobile.db.DatabaseHandler . getDbInstance ( context ) ; for ( int i = 0 ; i < ( fileList . size () ) ; i ++ ) { com.smartstorage.mobile.db.FileDetails fileDetails = new com.smartstorage.mobile.db.FileDetails ( fileList . get ( i ) , "no_link_yet" ) ; db . addFileDetails ( fileDetails ) ; copyFileToGoogleDrive ( fileList . get ( i ) ) ; } } 
@ java.lang.Override public org.musetest.core.step.StepExecutionResult executeImplementation ( org.musetest.core.step.StepExecutionContext context ) throws org.musetest.core.step.StepExecutionError { _context = context ; if ( shouldEnter ( context ) ) { org.musetest.core.step.StepExecutionContext new_context = createStepExecutionContextForChildren ( context ) ; context . getTestExecutionContext () . getExecutionStack () . push ( new_context ) ; beforeChildrenExecuted ( new_context ) ; return new org.musetest.core.step.BasicStepExecutionResult ( StepExecutionStatus.INCOMPLETE ) ; } else { afterChildrenExecuted ( context ) ; return new org.musetest.core.step.BasicStepExecutionResult ( StepExecutionStatus.COMPLETE ) ; } } 
public static logic.Task deleteTask ( int taskNumberToDelete ) throws java.io.IOException { assert taskNumberToDelete > 0 ; logic.Task deletedTask = null ; if ( ( ! ( Storage.Storage.taskList . isEmpty () ) ) && ( taskNumberToDelete < ( Storage.Storage.taskList . size () ) ) ) { Storage.Storage.logger . log ( java.util.logging.Level.INFO , "Deleting Task from the ArrayList" ) ; deletedTask = Storage.Storage.taskList . remove ( ( taskNumberToDelete - 1 ) ) ; Storage.Storage . saveTaskList () ; } return deletedTask ; } 
public boolean getRouteForNewBicycleType ( android.location.Location loc ) { if ( recalculationInProgress ) { return false ; } lastRecalcLocation = loc ; recalculationInProgress = true ; android.location.Location end = getEndLocation () ; if ( ( loc == null ) || ( end == null ) ) { return false ; } new com.spoiledmilk.ibikecph.map.SMHttpRequest () . getRecalculatedRoute ( loc , end , null , null , null , null , this ) ; return true ; } 
public static java.util.Map < java.lang.String , java.util.List < com.heaven7.java.data.mediator.FieldData > > groupFieldByInterface ( java.util.List < com.heaven7.java.data.mediator.FieldData > mFields ) { java.util.HashMap < java.lang.String , java.util.List < com.heaven7.java.data.mediator.FieldData > > map = new java.util.HashMap <> () ; final java.util.Collection < com.heaven7.java.data.mediator.TypeInterfaceFiller > values = com.heaven7.java.data.mediator.processor.Util.sFillerMap . values () ; for ( com.heaven7.java.data.mediator.FieldData fd : mFields ) { for ( com.heaven7.java.data.mediator.TypeInterfaceFiller filler : values ) { if ( filler . fill ( fd , map ) ) { break; } } } return map ; } 
public void onConfirm () { if ( writingImageView . isAnytingDrawn () ) { if ( ( ( currentGuideTypeIndex ) + 1 ) < ( com.jane.antonio.pishuvalko.controllers.GameController.GAME_GUIDE_TYPES.length ) ) { onErase () ; showNextGuideType () ; } else if ( characterIterator . hasNext () ) { saveCurrentSolution () ; onErase () ; showNextCharacter () ; } else { onClose () ; } } } 
@ java.lang.Override public void onResume () { super . onResume () ; try { setUpMapIfNeeded () ; } catch ( com.parse.ParseException e ) { e . printStackTrace () ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } synchronized ( mListView ) { mListView . deferNotifyDataSetChanged () ; } createEventList () ; mSlidingUpPanelLayout . hidePane () ; mListView . setAdapter ( new android.widget.ArrayAdapter ( getActivity () , R.layout.simple_list_item , listOfSharedWord ) ) ; } 
@ org.testng.annotations.Test ( description = "Exception when deleting application" , expectedExceptions = org.wso2.carbon.apimgt.core.exception.APIMgtDAOException . class ) public void testDeleteApplicationException ( ) throws org.wso2.carbon.apimgt.core.exception.APIManagementException { org.wso2.carbon.apimgt.core.dao.ApplicationDAO applicationDAO = org.powermock.api.mockito.PowerMockito . mock ( org.wso2.carbon.apimgt.core.dao.ApplicationDAO . class ) ; org.wso2.carbon.apimgt.core.api.APIStore apiStore = new org.wso2.carbon.apimgt.core.impl.UserAwareAPIStore ( org.wso2.carbon.apimgt.core.impl.UserAwareAPIStoreTestCase.USER_NAME , null , applicationDAO , null , null , null , null ) ; org.wso2.carbon.apimgt.core.models.Application applicationFromDAO = new org.wso2.carbon.apimgt.core.models.Application ( org.wso2.carbon.apimgt.core.impl.UserAwareAPIStoreTestCase.APP_NAME , null ) ; applicationFromDAO . setCreatedUser ( org.wso2.carbon.apimgt.core.impl.UserAwareAPIStoreTestCase.USER_NAME ) ; org.mockito.Mockito . when ( applicationDAO . getApplication ( org.wso2.carbon.apimgt.core.impl.UserAwareAPIStoreTestCase.UUID ) ) . thenThrow ( new org.wso2.carbon.apimgt.core.exception.APIMgtDAOException ( ( "Error occurred while deleting application - " + ( org.wso2.carbon.apimgt.core.impl.UserAwareAPIStoreTestCase.UUID ) ) ) ) ; apiStore . deleteApplication ( org.wso2.carbon.apimgt.core.impl.UserAwareAPIStoreTestCase.UUID ) ; } 
public boolean awaitMotionStart ( double timeoutSeconds ) { motionStartLock . lock () ; try { t . setAreaTreshold ( teaselib.motiondetection.MotionDetector.InitialAreaTreshold ) ; boolean motionDetected = isMotionDetected ( teaselib.motiondetection.MotionDetector.MotionInertia ) ; if ( ! motionDetected ) { motionDetected = motionStart . await ( ( ( ( long ) ( timeoutSeconds ) ) * 1000 ) , java.util.concurrent.TimeUnit.MILLISECONDS ) ; } return motionDetected ; } catch ( java.lang.InterruptedException e ) { throw new java.lang.RuntimeException ( e ) ; } finally { motionStartLock . unlock () ; } } 
public java.lang.StringBuilder qMarks ( int length ) { java.lang.StringBuilder q = new java.lang.StringBuilder () ; for ( int i = 0 ; i < length ; i ++ ) { if ( i == ( length - 1 ) ) q . append ( "? )" ) ; else q . append ( " ?, " ) ; } return q ; } 
public java.lang.Thread run () { java.lang.System.out . println ( "RUN" ) ; java.lang.Thread t1 = new java.lang.Thread ( new java.lang.Runnable () { public void run () { try { java.lang.System.out . println ( "Starting..." ) ; t . Run () ; } catch ( java.lang.Exception e1 ) { java.lang.System.out . println ( ( "exception in run try catch block: " + e1 ) ) ; e1 . printStackTrace () ; } } } ) ; java.lang.System.out . println ( "got out of run function" ) ; java.lang.System.out . println ( ( "t1: " + t1 ) ) ; return t1 ; } 
@ java.lang.Override public void onGlobalLayout () { int mProceedTextHeight = mProceed . getHeight () ; android.util.Log . v ( "Proceed Text Height" , ( mProceedTextHeight + "" ) ) ; int imagegridHeight = imagegrid . getHeight () ; android.util.Log . v ( "ImageGridHeight" , ( imagegridHeight + "" ) ) ; android.view.ViewGroup.LayoutParams layoutParams = imagegrid . getLayoutParams () ; layoutParams.height = imagegridHeight - mProceedTextHeight ; imagegrid . setLayoutParams ( layoutParams ) ; mProceed . getViewTreeObserver () . removeGlobalOnLayoutListener ( this ) ; } 
private java.lang.String checkForProblem ( final java.lang.String sapClient ) { try { final com.sap.cloud.sdk.s4hana.connectivity.ErpConfigContext config = new com.sap.cloud.sdk.s4hana.connectivity.ErpConfigContext ( com.sap.cloud.sdk.s4hana.connectivity.ErpDestination . getDefaultName () , new com.sap.cloud.sdk.s4hana.serialization.SapClient ( sapClient ) , java.util.Locale.ENGLISH ) ; final com.sap.cloud.sdk.tutorial.command.HealthCheckCommand healthCheckCommand = new com.sap.cloud.sdk.tutorial.command.HealthCheckCommand ( config ) ; org.springframework.util.Assert . isTrue ( healthCheckCommand . execute () , "Empty OData result." ) ; return null ; } catch ( final java.lang.Exception e ) { com.sap.cloud.sdk.tutorial.controllers.ODataHealthIndicator.logger . error ( "Could not complete health check for OData Service." , e ) ; return ( e . getMessage () ) + ( java.util.Arrays . toString ( e . getStackTrace () ) ) ; } } 
public static void addItemToInventory ( byui.cit260.fireSwamp.model.Item item , java.util.ArrayList < byui.cit260.fireSwamp.model.Item > inventory ) throws byui.cit260.fireSwamp.exceptions.InventoryControlException { byui.cit260.fireSwamp.model.Item newItem = null ; newItem . setItemDescription ( item . getItemDescription () ) ; newItem . setItemName ( item . getItemName () ) ; newItem . setItemType ( item . getItemType () ) ; boolean add = inventory . add ( newItem ) ; if ( add == false ) { throw new byui.cit260.fireSwamp.exceptions.InventoryControlException ( "Unable to add item to inventory." ) ; } } 
public void removeAllCards ( com.tonykazanjian.codenamescompanion.adapter.ItemBaseAdapter [] adapters ) { mGridEmptyStateLl . setVisibility ( View.GONE ) ; for ( int i = 0 ; i < ( ( adapters.length ) - 1 ) ; i ++ ) { if ( ( adapters [ i ] ) != null ) { adapters [ i ] . clearWordCards () ; adapters [ i ] . notifyDataSetChanged () ; } } } 
@ org.junit.Test public void test_constructor_integerValue ( ) throws org.kairosdb.client.builder.DataFormatException { org.kairosdb.client.builder.DataPoint dataPoint = new org.kairosdb.client.builder.DataPoint ( 93939393 , 30 ) ; org.junit.Assert . assertThat ( dataPoint . longValue () , org.hamcrest.Matchers . equalTo ( 30L ) ) ; org.junit.Assert . assertThat ( dataPoint . getValue () , org.hamcrest.CoreMatchers . instanceOf ( java.lang.Integer . class ) ) ; org.junit.Assert . assertThat ( dataPoint . isIntegerValue () , org.hamcrest.Matchers . equalTo ( true ) ) ; org.junit.Assert . assertThat ( dataPoint . isDoubleValue () , org.hamcrest.Matchers . equalTo ( false ) ) ; } 
public static java.util.List < java.util.List < java.lang.Integer > > findSomeTrace ( java.util.List < java.lang.Integer > target , common.finiteautomata.Automata from , common.bellmanford.EdgeWeightedDigraph function ) { final java.util.List < java.util.List < java.lang.Integer > > trace = new java.util.ArrayList <> () ; final common.finiteautomata.Automata init = common.finiteautomata.AutomataUtility . getWordAutomaton ( from , target . size () ) ; final boolean isFound = common.VerificationUtility . findSomeTraceHelper ( init , function , target , trace ) ; return isFound ? trace : null ; } 
@ java.lang.Override public com.fasterxml.jackson.databind.node.TextNode textNode ( java.lang.String text ) { java.lang.String resolvedText = resolver . resolveString ( text ) ; if ( logger . isInfoEnabled () ) { if ( text == null ? resolvedText == null : text . equals ( resolvedText ) ) { logger . debug ( "Resolve '{}' into '{}'" , text , resolvedText ) ; } else { logger . info ( "Resolve '{}' into '{}'" , text , resolvedText ) ; } } return super . textNode ( resolvedText ) ; } 
protected int getNotificationColor ( android.content.Context context ) { try { int id = this . getResources () . getIdentifier ( "notification_color" , "color" , this . getPackageName () ) ; return this . getResources () . getColor ( id ) ; } catch ( android.content.res.Resources.NotFoundException e ) { return - 1 ; } } 
private void moveToCartPage ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response , javax.servlet.http.HttpSession session , ctrl.CartModel cm ) throws java.io.IOException , javax.servlet.ServletException { ctrl.CartBean cart = ( ( ctrl.CartBean ) ( session . getAttribute ( "cartlist" ) ) ) ; cart . computeTotal () ; session . removeAttribute ( "bookPreviewing" ) ; session . setAttribute ( "lastTarget" , "/Home.jspx" ) ; java.lang.String target = "/Cart.jspx" ; request . getRequestDispatcher ( target ) . forward ( request , response ) ; } 
