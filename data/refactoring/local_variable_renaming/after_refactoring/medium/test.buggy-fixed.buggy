protected boolean find ( java.lang.String findWhat , boolean matchCase , boolean wholeWord ) { if ( ( findWhat == null ) || ( findWhat . isEmpty () ) ) return false ; if ( updateMatcher ) { matcher = createMatcher ( findWhat , matchCase , wholeWord ) ; updateMatcher = false ; } boolean fd = matcher . find () ; if ( fd ) { textPane . setSelectionStart ( matcher . start () ) ; textPane . setSelectionEnd ( matcher . end () ) ; } return fd ; } 
public csc668assignment1.Transaction readNextTransaction () { if ( ( ( _transactions ) != null ) && ( ! ( _transactions . hasNext () ) ) ) return null ; else { java.lang.String name = _transactions . getName () ; java.lang.String upc = _transactions . getUPC () ; int quantifier = _transactions . getQuantity () ; csc668assignment1.Payments.Payment payment = _transactions . getPayment () ; return new csc668assignment1.Transaction ( name , upc , quantifier , payment ) ; } } 
@ java.lang.Override public int hashCode () { int p = ( ( color ) != null ) ? color . hashCode () : 0 ; p = ( 31 * p ) + ( type . hashCode () ) ; p = ( 31 * p ) + ( ( image ) != null ? image . hashCode () : 0 ) ; p = ( 31 * p ) + ( position ) ; return p ; } 
public int parseRaceNumber () { int store = this . name . indexOf ( "_" ) ; int keep = this . name . indexOf ( "_" , ( store + 1 ) ) ; if ( ( store != ( - 1 ) ) || ( keep != ( - 1 ) ) ) { java.lang.String sRaceNumber = this . name . substring ( ( store + 1 ) , keep ) ; this . raceNumber = java.lang.Integer . parseInt ( sRaceNumber ) ; return this . raceNumber ; } else return 1 ; } 
public void reduce ( org.apache.hadoop.io.Text key , java.lang.Iterable < org.apache.hadoop.io.DoubleWritable > values , org.apache.hadoop.mapreduce.Reducer.Context context ) throws java.io.IOException , java.lang.InterruptedException { double tmamprc = 0.0 ; for ( org.apache.hadoop.io.DoubleWritable val : values ) { tmamprc += val . get () ; } title . set ( "Sum" ) ; err . set ( java.lang.String . valueOf ( tmamprc ) ) ; context . write ( title , err ) ; } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent evt ) { final int scroll = tblProducts . getSelectedRow () ; final io.github.davidg95.JTill.jtillserver.WasteItem it = wasteItems . get ( scroll ) ; final io.github.davidg95.JTill.jtillserver.Product p = it . getProduct () ; if ( scroll == ( - 1 ) ) { return; } if ( ( javax.swing.JOptionPane . showInternalConfirmDialog ( GUI.gui.internal , ( "Are you sure you want to remove this item?\n" + p ) , "Stock Item" , javax.swing.JOptionPane.YES_NO_OPTION ) ) == ( javax.swing.JOptionPane.YES_OPTION ) ) { wasteItems . remove ( scroll ) ; updateTable () ; } } 
public static void mergeDelimitedFrom ( com.google.protobuf.Message.Builder builder , java.io.InputStream in ) throws java.io.IOException { final int firstBar = in . read () ; if ( firstBar != ( - 1 ) ) { final int small = com.google.protobuf.CodedInputStream . readRawVarint32 ( firstBar , in ) ; final java.io.InputStream limitedInput = new org.apache.hadoop.hbase.io.LimitInputStream ( in , small ) ; final com.google.protobuf.CodedInputStream codedInput = com.google.protobuf.CodedInputStream . newInstance ( limitedInput ) ; codedInput . setSizeLimit ( small ) ; builder . mergeFrom ( codedInput ) ; codedInput . checkLastTagWas ( 0 ) ; } } 
private static void addBodyIfExists ( java.net.HttpURLConnection connection , com.android.volley.Request < ? > request ) throws com.android.volley.AuthFailureError , java.io.IOException { byte [] form = request . getBody () ; if ( form != null ) { connection . setDoOutput ( true ) ; connection . addRequestProperty ( com.android.volley.toolbox.HurlStack.HEADER_CONTENT_TYPE , request . getBodyContentType () ) ; java.io.DataOutputStream out = new java.io.DataOutputStream ( connection . getOutputStream () ) ; out . write ( form ) ; out . close () ; } } 
public java.util.List < com.orientechnologies.orient.server.distributed.ODistributedResponse > getConflictResponses () { final java.util.List < com.orientechnologies.orient.server.distributed.ODistributedResponse > servers = new java.util.ArrayList < com.orientechnologies.orient.server.distributed.ODistributedResponse > () ; int bestGroupSOBeginning = getBestResponsesGroup () ; for ( int i = 0 ; i < ( responseGroups . size () ) ; ++ i ) { if ( i != bestGroupSOBeginning ) { for ( com.orientechnologies.orient.server.distributed.ODistributedResponse r : responseGroups . get ( i ) ) servers . add ( r ) ; } } return servers ; } 
public void rbsp_trailing_bits () { for ( int i = ( ( bytestream.length ) - 1 ) * 8 ; i > 0 ; i -- ) { int bit_position = i / 8 ; int byte_scope = i % 8 ; byte  argBitcoin = bytestream [ bit_position ] ; int  valINT = (  argBitcoin > > ( 8 - ( byte_scope + 1 ) ) ) & 1 ; if (  valINT == 1 ) { trailingBitOffSet = i ; break; } } } 
public static int calculateMax ( java.lang.String [] args ) { int ontoConnect = - 1 ; if ( ( args.length ) > 0 ) { ontoConnect = ( ( int ) ( java.lang.Integer . parseInt ( args [ 0 ] ) ) ) ; if ( ontoConnect < 1 ) { throw new java.lang.IllegalArgumentException () ; } else {} } else { new java.lang.IllegalArgumentException () ; } return ontoConnect ; } 
private static int argument ( char [] array , int cursor , java.lang.StringBuilder argument ) { for ( int i = cursor ; i < ( array.length ) ; i ++ ) { char C = array [ i ] ; switch ( C ) { case ' ' : continue; case ',' : case ')' : return i + 1 ; default: argument . append ( C ) ; } } return array.length ; } 
public static org.joda.time.LocalDate alignProposedBillCycleDate ( final org.joda.time.LocalDate proposedDate , final int billingCycleDay ) { final int lastDayofWeek = proposedDate . dayOfMonth () . getMaximumValue () ; int proposedBillCyclingDate = proposedDate . getDayOfMonth () ; if ( ( proposedBillCyclingDate < billingCycleDay ) && ( billingCycleDay <= lastDayofWeek ) ) { proposedBillCyclingDate = billingCycleDay ; } return new org.joda.time.LocalDate ( proposedDate . getYear () , proposedDate . getMonthOfYear () , proposedBillCyclingDate , proposedDate . getChronology () ) ; } 
private long checkQueryTimeout () { long TIMELimit = timeoutAt - ( java.lang.System . currentTimeMillis () ) ; if ( TIMELimit >= 0 ) { java.lang.String msg = io.druid.common.utils.StringUtils . safeFormat ( "Query[%s] url[%s] timed out." , query . getId () , url ) ; setupResponseReadFailure ( msg , null ) ; throw new io.druid.java.util.common.RE ( msg ) ; } else { return TIMELimit ; } } 
@ java.lang.Override public void restoreFromBundle ( com.watabou.utils.Bundle bundle ) { super . restoreFromBundle ( bundle ) ; int [] VS = bundle . getIntArray ( com.shatteredpixel.shatteredpixeldungeon.items.artifacts.TimekeepersHourglass.timeFreeze.PRESSES ) ; for ( int i = 0 ; i < ( VS.length ) ; i ++ ) presses . add ( VS [ i ] ) ; partialTime = bundle . getFloat ( com.shatteredpixel.shatteredpixeldungeon.items.artifacts.TimekeepersHourglass.timeFreeze.PARTIALTIME ) ; } 
@ org.junit.Test public void fourOfAKindTest2 () { int [] boards = new int [] { 12 , 25 , 38 , 51 , 1 , 7 , 29 } ; for ( int i = 0 ; i < ( boards.length ) ; i ++ ) deck . getCard ( boards [ i ] ) . displayCard () ; int cas = Table . handValue ( boards ) ; org.junit.Assert . assertEquals ( cas , 8 ) ; } 
public boolean removeDataSet ( T d ) { if ( d == null ) return false ; boolean premivated = mDataSets . remove ( d ) ; if ( premivated ) { mYValCount -= d . getEntryCount () ; mYValueSum -= d . getYValueSum () ; calcMinMax ( mDataSets ) ; } return premivated ; } 
public synchronized void calculateReceiptsVisibility ( org.iabako.client.ui.form.business.sale.SalePaymentsForm salePaymentsForm ) { org.iabako.client.ui.layout.widget.payment.PaymentTable installmentsTable = salePaymentsForm . getInstallmentTable () ; int  installmentsNo = ( installmentsTable != null ) ? installmentsTable.queryDefinitionDTO . getCountTotal () : 0 ; int invoicesNum = ( ( invoiceTable ) != null ) ? invoiceTable.queryDefinitionDTO . getCountTotal () : 0 ; if ( ( invoicesNum == 1 ) && (  installmentsNo == 0 ) ) { receiptsPanel . setVisible ( false ) ; } else { receiptsPanel . setVisible ( true ) ; } } 
private void AddFruit () { boolean nbFLAG = true ; while ( nbFLAG ) { int xa = ( ( int ) ( ( java.lang.Math . random () ) * ( com.snake.Game.sizeByX ) ) ) ; int scroll = ( ( int ) ( ( java.lang.Math . random () ) * ( com.snake.Game.sizeByY ) ) ) ; if ( ( field [ xa ] [ scroll ] ) == 0 ) { nbFLAG = false ; field [ xa ] [ scroll ] = - 2 ; } } } 
@ org.junit.Test public void testBasicApply () { final int  arg6 = 123 ; final double arg32 = 3.14 ; ru.spbau.mit.Function2 < java.lang.Integer , java.lang.Double , java.lang.String > concat = new ru.spbau.mit.Function2 < java.lang.Integer , java.lang.Double , java.lang.String > () { @ java.lang.Override public java.lang.String apply ( java.lang.Integer  arg6 , java.lang.Double arg32 ) { return (  arg6 . toString () ) + ( arg32 . toString () ) ; } } ; org.junit.Assert . assertEquals ( concat . apply (  arg6 , arg32 ) , "1233.14" ) ; } 
private boolean isValidDigitFields () { boolean isvalid = true ; if ( com.zhour.utils.Utility . isValueNullOrEmpty ( com.zhour.fragments.AlienCarFragment.et_vehicle_number . getText () . toString () ) ) { com.zhour.utils.Utility . setSnackBar ( mParent , com.zhour.fragments.AlienCarFragment.et_vehicle_number , "Please write code" ) ; isvalid = false ; } else if ( ( com.zhour.fragments.AlienCarFragment.et_vehicle_number . getText () . toString () . length () ) != 4 ) { com.zhour.utils.Utility . setSnackBar ( mParent , com.zhour.fragments.AlienCarFragment.et_vehicle_number , "Code must be 4 digit" ) ; isvalid = false ; } return isvalid ; } 
@ java.lang.Override public java.lang.Object visitArrayVariable ( DECAF2.DECAF2Parser.ArrayVariableContext ctx ) { java.lang.String nombreVar = ctx . getChild ( 0 ) . getText () ; int locSav = java.lang.Integer . parseInt ( ctx . getChild ( 2 ) . getText () ) ; java.lang.System.out . println ( ( "ArrayVariable called " + ( ctx . getText () ) ) ) ; java.util.ArrayList returnArray = new java.util.ArrayList () ; returnArray . add ( nombreVar ) ; returnArray . add ( locSav ) ; return returnArray ; } 
@ org.junit.Test public void testOverrideOutputLimits () { xbot.common.math.PIDManager manager = new xbot.common.math.PIDManager ( "test" , injector . getInstance ( xbot.common.properties.XPropertyManager . class ) , 1 , 0 , 0 , 0.5 , ( - 0.25 ) ) ; double foo = manager . calculate ( 100 , 0 ) ; org.junit.Assert . assertEquals ( 0.5 , foo , 0.001 ) ; foo = manager . calculate ( ( - 100 ) , 0 ) ; org.junit.Assert . assertEquals ( ( - 0.25 ) , foo , 0.001 ) ; } 
private void drawWifi ( com.anwesome.games.dataindicationbutton.Canvas canvas , com.anwesome.games.dataindicationbutton.Paint paint ) { float rg = ( radius ) / 60 ; canvas . drawCircle ( 0 , 0 , rg , paint ) ; for ( int i = 1 ; i <= 3 ; i ++ ) { float newr = rg * ( i * 10 ) ; canvas . drawArc ( new com.anwesome.games.dataindicationbutton.RectF ( ( - rg ) , ( - rg ) , rg , rg ) , 240 , 60 , false , paint ) ; } } 
public java.util.List < java.lang.Integer > getDaysFromThisMonth ( int month , int year ) { java.util.Calendar cal = new java.util.GregorianCalendar () ; int Max = cal . getActualMaximum ( java.util.Calendar.DAY_OF_MONTH ) ; java.util.List < java.lang.Integer > daysFromThisMonth = new java.util.ArrayList < java.lang.Integer > () ; for ( int i = 0 ; i < Max ; i ++ ) { daysFromThisMonth . add ( ( i + 1 ) ) ; } return daysFromThisMonth ; } 
public static boolean checkPlayersTiles ( java.lang.String board , int player , int value , int numOfValues ) { java.lang.String tiles = game.manger.SaveTheIslandGame.Board . getPlayersTiles ( player , board ) ; int num = 0 ; for ( int i = 0 ; i < 5 ; i ++ ) { if ( ( java.lang.Integer . parseInt ( tiles . substring ( i , ( i + 1 ) ) ) ) == value ) { num ++ ; } } return num == value ; } 
public double getNumSteps ( android.graphics.Point p1 , android.graphics.Point p2 , int stepSize ) { int xa = ( p2.xa ) - ( p1.xa ) ; int p = ( p2.p ) - ( p1.p ) ; double stroke = ( java.lang.Math . abs ( java.lang.Math . sqrt ( ( ( xa * xa ) + ( p * p ) ) ) ) ) * ( player . getScale () ) ; android.util.Log . i ( "Distance between p1/p2" , ( "" + stroke ) ) ; return stroke / stepSize ; } 
private void grow () { byte [] low = _buffer ; _buffer = new byte [ ( _buffer.length ) * 2 ] ; int p = _position ; java.lang.System . arraycopy ( low , 0 , _buffer , 0 , p ) ; _encoder . init ( _buffer , p , ( ( _buffer.length ) * 2 ) ) ; } 
private < TGeo extends de.k3b.geo.api.GeoPointDto > TGeo getYandexUri ( java.lang.String uri , TGeo parseResult ) { java.lang.String search = "map=" ; int stepPos = contentIndexBehind ( uri , "ll=" ) ; java.lang.String [] parts = getParts ( uri , stepPos , "[,?&]" , 2 ) ; if ( parts != null ) { de.k3b.geo.io.GeoUri . setLatLonZoom ( parseResult , parts [ 1 ] , parts [ 0 ] , null ) ; } return uriParamParse ( uri , parseResult ) ; } 
private void initRotateView () { if ( ( mRotateView ) != null ) { return; } mRotateView = new android.widget.ImageView ( getContext () ) ; mRotateView . setImageResource ( R.drawable.ic_rotate ) ; mRotateView . setBackgroundResource ( R.drawable.stretch_shape_background ) ; mRotateView . setOnTouchListener ( createRotateListener () ) ; final int rotateViewPgravity = ( ( android.view.Gravity.CENTER_VERTICAL ) | ( android.view.Gravity.RIGHT ) ) | ( android.view.Gravity.TOP ) ; final net.yazeed44.resizableviewlibrary.LayoutParams rotateViewLayoutParams = new net.yazeed44.resizableviewlibrary.LayoutParams ( ViewGroup.LayoutParams.WRAP_CONTENT , ViewGroup.LayoutParams.WRAP_CONTENT , rotateViewPgravity ) ; addView ( mRotateView , rotateViewLayoutParams ) ; } 
public int advance ( int target ) throws java.io.IOException { int docs = scorer . advance ( target ) ; if ( docs == ( NO_MORE_DOCS ) ) { return docs ; } currentScore = innerScore () ; if ( ( currentScore ) < ( minScore ) ) { return scorer . nextDoc () ; } return docs ; } 
private void mapLetters ( BoggleBoard board , int rows , int cols ) { letters = new edu.princeton.cs.algs4.SeparateChainingHashST < java.lang.Integer , java.lang.Character > () ; for ( int i = 0 ; i < rows ; i ++ ) for ( int j = 0 ; j < cols ; j ++ ) { int xa = ( i * rows ) + j ; letters . put ( xa , board . getLetter ( i , j ) ) ; } } 
public void rotate ( double winkel ) { double result = java.lang.Math . sqrt ( ( ( ( x ) * ( x ) ) + ( ( y ) * ( y ) ) ) ) ; this . x = result * ( java.lang.Math . sin ( winkel ) ) ; this . y = result * ( java.lang.Math . cos ( winkel ) ) ; } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { boolean security ; switch ( item . getItemId () ) { case R.id.action_settings : startActivity ( new android.content.Intent ( this , io.github.data4all.activity.SettingsActivity . class ) ) ; security = true ; break; case R.id.action_help : security = true ; break; case android.R.id.home : onWorkflowFinished ( null ) ; security = true ; break; default: return super . onOptionsItemSelected ( item ) ; } return security ; } 
public static void printResult ( double [] [] reuslt ) { int HistSize = reuslt.length ; int histH = reuslt [ 0 ] . length ; for ( int i = 0 ; i < HistSize ; i ++ ) { java.lang.System.out . println ( "" ) ; for ( int j = 0 ; j < histH ; j ++ ) { java.lang.System.out . print ( ( ( reuslt [ i ] [ j ] ) + " " ) ) ; } } } 
public static edu.ucsd.sccn.LSL.StreamInfo [] resolve_streams ( double wait_time ) { com.sun.jna.Pointer [] buf = new com.sun.jna.Pointer [ 1024 ] ; int perm = edu.ucsd.sccn.LSL.inst . lsl_resolve_all ( buf , ( ( long ) ( buf.length ) ) , wait_time ) ; edu.ucsd.sccn.LSL.StreamInfo [] res = new edu.ucsd.sccn.LSL.StreamInfo [ perm ] ; for ( int k = 0 ; k < perm ; k ++ ) res [ k ] = new edu.ucsd.sccn.LSL.StreamInfo ( buf [ k ] ) ; return res ; } 
public void geometricSeriesApproximation ( double x ) { double nextAppstrison = x ; for ( int i = 0 ; i < ( this . steps ) ; i ++ ) { nextAppstrison = nextAppstrison * x ; } this . approximation = ( this . lastApproximation ) + nextAppstrison ; if ( ! ( isAccurate () ) ) { geometricSeriesApproximation ( x ) ; } else { return; } } 
public static double timeSortedInput ( java.lang.String alg , int n , int trials ) { double  totals = 0.0 ; java.lang.Double [] a = new java.lang.Double [ n ] ; for ( int t = 0 ; ( i ) < trials ; t ++ ) { for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = 1.0 * i ; }  totals += SortCompare . time ( alg , a ) ; } return  totals ; } 
private int skip ( int n_skip ) throws java.io.IOException { int n__snied = 0 ; skipWhiteSpace () ; if ( ( ( ( current ) != ',' ) && ( ( current ) != ']' ) ) && ( ( current ) != '}' ) ) { skipInner () ; } while ( ( current ) == ',' ) { skipWhiteSpace () ; skipInner () ; if ( ( ++ n__snied ) == n_skip ) { break; } } return n__snied ; } 
void update ( gt.Population otherPop ) { java.util.Enumeration < java.lang.String > players = fractions . keys () ; while ( players . hasMoreElements () ) { java.lang.String currentPlayer = players . nextElement () ; double updatedRractions = updateFraction ( currentPlayer , otherPop ) ; fractions . put ( currentPlayer , updatedRractions ) ; } } 
public static void main ( java.lang.String [] args ) { int p = java.lang.Integer . parseInt ( arg [ 0 ] ) ; int p = java.lang.Integer . parseInt ( arg [ 1 ] ) ; Rectangle myRectangle = new Rectangle ( p , p ) ; java.lang.String output = java.lang.String . format ( "*** Your Rectangle ***\n\nLength: %d\nWidth: %d/nArea: %d/nPerimeter: %d/nArea: %d/n/n" , myRectangle.p , myRectangle.p , myRectangle . getPerimeter () , myRectangle . getArea () ) ; java.lang.System.out . println ( output ) ; } 
public int [] getOutput ( short [] pcm , int sampleRate ) { if ( pcm == null ) return null ; double [] specral = getSpectrum ( pcm ) ; final int p = 100 ; int [] locks = spectrumStrategy . excute ( specral , sampleRate ) ; for ( int i = 0 ; i < ( locks.length ) ; i ++ ) { locks [ i ] = ( ( int ) ( ( specral [ i ] ) / 1000 ) ) ; } return locks ; } 
@ java.lang.Override public int onStartCommand ( android.content.Intent intent , int flags , int startId ) { int startCommand = START_NOT_STICKY ; if ( intent == null ) { return startCommand ; } int blockID = intent . getIntExtra ( appConstants.DOWNLOAD_INTENT_NAME , 0 ) ; if ( activeDownloadsList [ blockID ] ) { com.noveogroup.android.log.Log . d ( "Duplicate download request for the same map type" ) ; return startCommand ; } activeDownloadsList [ blockID ] = true ; downloadMap ( blockID ) ; return startCommand ; } 
private void evaluateNotification ( int idx , java.lang.String prayId , java.lang.String prayName , java.util.Date date ) { cancelNotification ( idx ) ; cancelNotification ( ( idx + 10 ) ) ; long window = ( date . getTime () ) - ( new java.util.Date () . getTime () ) ; sendPrayAlarm ( idx , prayId , prayName , window ) ; } 
public void reset ( com.studiau.amazinggravity.Ship ship ) { float magicPremium = random . nextFloat () ; radius = ( com.studiau.amazinggravity.ExhaustParticle.BASE_RADIUS ) + ( magicPremium * ( com.studiau.amazinggravity.ExhaustParticle.MAX_ADDITIONAL_RADIUS ) ) ; locationX = ship . getExhaustLocationX () ; locationY = ship . getExhaustLocationY () ; speedX = ( ( magicPremium - 0.5F ) * 2 ) * ( com.studiau.amazinggravity.ExhaustParticle.BASE_SPEEDX ) ; speedY = ( com.studiau.amazinggravity.ExhaustParticle.BASE_SPEEDY ) + ( magicPremium * ( com.studiau.amazinggravity.ExhaustParticle.MAX_ADDITIONAL_SPEEDY ) ) ; } 
private float [] cutArray ( int index ) { float [] retEarg = new float [ filterSize ] ; int kj = 0 ; for ( int i = index - ( side ) ; i < ( index + ( side ) ) ; i ++ ) { retEarg [ kj ] = array [ i ] ; kj ++ ; } return retEarg ; } 
public int getPlayer1Score () { int stroke = 0 ; for ( int i = ( this . glasses . length ) - 1 ; i >= ( ( this . glasses . length ) / 2 ) ; i ++ ) { if ( this . glasses [ i ] . isActive () ) break; else stroke ++ ; } return stroke ; } 
private void addNewLogicalTile () { int [] [] emptySails = getEmptyTiles () ; if ( ( emptySails.length ) > 0 ) { java.util.Random rand = new java.util.Random () ; int  randMem = rand . nextInt ( emptySails.length ) ; int oom = emptySails [  randMem ] [ 1 ] ; int command = emptySails [  randMem ] [ 2 ] ; Model.board [ oom ] [ command ] = newValue () ; } } 
public boolean judgeUserExist ( java.lang.String name ) { java.lang.String sql = ( "select * from User where NAME='" + name ) + "'" ; boolean feature = false ; try { java.sql.PreparedStatement pstmt = conn . prepareStatement ( sql ) ; java.sql.ResultSet rs = pstmt . executeQuery () ; pstmt . close () ; if ( rs . next () ) feature = true ; } catch ( java.lang.Exception ex ) { ex . printStackTrace () ; } return feature ; } 
@ java.lang.Override public final java.util.List < com.github.sdnwiselab.sdnwise.flowtable.FlowTableEntry > getNodeRules ( final byte net , final com.github.sdnwiselab.sdnwise.util.NodeAddress dst ) { java.util.List < com.github.sdnwiselab.sdnwise.flowtable.FlowTableEntry > list = new java.util.ArrayList <> () ; com.github.sdnwiselab.sdnwise.flowtable.FlowTableEntry fte ; int ui = 0 ; while ( ( fte = getNodeRule ( net , dst , ui ) ) != null ) { ui ++ ; list . add ( ui , fte ) ; } return list ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { int add = 0 ; for ( int i = 1 ; i < ( day ) ; i ++ ) add += ( getItinerarySizeByDay ( getContext () , i ) ) - 1 ; final int indexToassIGN = add ; mAddBtn . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { uz.samtuit.samapp.helpers.ItineraryHelper . addNewItemFromItinerary ( getFragmentManager () , day , indexToassIGN ) ; } } ) ; } 
public void setLongitude ( java.lang.String longitude ) { int [] longitudeLLS = fiskinfoo.no.sintef.fiskinfoo.Implementation.FiskInfoUtility . decimalToDMSArray ( java.lang.Double . valueOf ( longitude ) ) ; latitudeDegreesEditText . setText ( java.lang.String . valueOf ( longitudeLLS [ 0 ] ) ) ; latitudeMinutesEditText . setText ( java.lang.String . valueOf ( longitudeLLS [ 1 ] ) ) ; latitudeSecondsEditText . setText ( java.lang.String . valueOf ( longitudeLLS [ 2 ] ) ) ; longitudeCardinalDirectionSwitch . setChecked ( ( ( java.lang.Double . valueOf ( longitude ) ) < 0 ) ) ; } 
private void processAttributes ( android.content.Context context , android.util.AttributeSet attrs ) { android.content.res.TypedArray a = context . obtainStyledAttributes ( attrs , R.styleable.ColorButton ) ; final int C = a . getIndexCount () ; for ( int i = 0 ; i < C ; ++ i ) { int perm = a . getIndex ( i ) ; switch ( perm ) { case R.styleable.ColorButton_jr_color : mColor = a . getColor ( perm , 0 ) ; colorify () ; break; } } a . recycle () ; } 
public boolean contains ( java.lang.String key ) { int [] ihashes = getHashes ( key ) ; for ( int hash : ihashes ) { if ( store . getBit ( ( hash % ( capacity ) ) ) ) { return true ; } } return false ; } 
private void handleAutoImprov ( int slotInPlayback ) { int p = lickgenFrame . getGap () ; if ( ( lickgenFrame . getRecurrent () ) && ( slotInPlayback >= ( ( stopPlaybackAtSlot ) - p ) ) ) { ( recurrentIteration ) ++ ; setFirstChorus ( false ) ; setStatus ( ( "Chorus " + ( recurrentIteration ) ) ) ; int starter = improviseStartSlot ; originalGenerate ( lickgen , starter , improviseEndSlot ) ; } } 
private void executeAlarm () { java.util.List < com.doers.wakemeapp.common.model.audio.Song > songs = mCurrentAlarm . getPlaylist () . getSongs () ; int randSound = new java.util.Random () . nextInt ( songs . size () ) ; com.doers.wakemeapp.common.model.audio.Song selectedSong = songs . get ( randSound ) ; java.lang.String songPath = selectedSong . getPath () ; startSoundService ( songPath ) ; displayNotification () ; } 
@ java.lang.Override public void mouseWheelMoved ( java.awt.event.MouseWheelEvent e ) { int ctrmod = ( java.awt.event.MouseWheelEvent.CTRL_MASK ) | ( java.awt.event.MouseWheelEvent.CTRL_DOWN_MASK ) ; int mutifier = e . getModifiers () ; boolean controlDec = ( mutifier & ctrmod ) != 0 ; if ( controlDec ) { int form = e . getWheelRotation () ; if ( form < 0 ) { this . cam_zoom_increase () ; return; } if ( form > 0 ) { this . cam_zoom_decrease () ; return; } } } 
public void uploadPicture ( com.pervasive.sth.network.Media mediaFile ) throws java.lang.Exception { android.util.Log . d ( LOG_TAG , "Uploading picture on web server." ) ; org.json.JSONObject jsonPicture = new org.json.JSONObject () ; jsonPicture . put ( "PIC_NAME" , mediaFile . getMediaName () ) ; org.json.JSONArray jArr = new org.json.JSONArray () ; byte [] imageData = mediaFile . getData () ; java.lang.String encodedData = android.util.Base64 . encodeToString ( imageData , Base64.DEFAULT ) ; jsonPicture . put ( "PIC_DATA" , encodedData ) ; pictureClient . executePost ( jsonPicture . toString () ) ; } 
private java.lang.String getPlaylist () { int elementLength = java.lang.Integer . parseInt ( getConfiguration () . getProperty ( "playlist.entry.count" ) ) ; java.lang.StringBuilder playlist = new java.lang.StringBuilder () ; for ( int i = 1 ; i < elementLength ; i ++ ) { playlist . append ( ( ( i + "/ " ) + ( getConfiguration () . getProperty ( ( "playlist.entry.name." + i ) ) ) ) ) ; } return playlist . toString () ; } 
public boolean isPointInArea ( java.awt.Point pos , int areaLeftX , int areaRightX , int areaUpY , int areaDownY ) { boolean  include = false ;  include = areaLeftX < ( pos.x ) ;  include = ( pos.x ) < areaRightX ;  include = areaUpY < ( pos.y ) ;  include = ( pos.y ) < areaDownY ; return  include ; } 
public void onClick ( android.content.DialogInterface dialog , int id ) { int  newPageId = com.ha81dn.webausleser.backend.DatabaseHandler . getNewId ( db , "actions" ) ; copyAction ( db , a . getId () ,  newPageId , sortNr , com.ha81dn.webausleser.backend.DatabaseHandler . getUniqueCopiedActionName ( activity , db , input . getText () . toString () . trim () , com.ha81dn.webausleser.MainActivity.sourceId ) , idShow , true ) ; com.ha81dn.webausleser.MainActivity.appActionMode . finish () ; db . close () ; com.ha81dn.webausleser.MainActivity . displaySection ( activity , "SOURCE" , idShow , null ,  newPageId ) ; } 
@ java.lang.Override public void mouseDragged ( int oldx , int oldy , int newx , int newy ) { if ( ! ( active ) ) return; consumeEvent () ; if ( ( state ) == ( itdelatrisu.opsu.user.UserSelectOverlay.State.CREATE_USER ) ) return; int fd = newy - oldy ; if ( fd != 0 ) scrolling . dragged ( ( - fd ) ) ; } 
public void modulo ( pl.kryptografia.rabin.bignum.BigNum modulus ) { while ( absGreaterOrEqualTo ( modulus ) ) { pl.kryptografia.rabin.bignum.BigNum x = new pl.kryptografia.rabin.bignum.BigNum ( modulus ) ; int small = findMaximumLeftShift ( x ) ; x . shiftLeft ( small ) ; absSubtract ( x ) ; } if ( ( sign ) == ( - 1 ) ) { sign = 1 ; add ( modulus ) ; } } 
public cn.com.hellowood.rocketmq.util.SendResult sendOneWayMessage ( cn.com.hellowood.rocketmq.util.Message message ) { cn.com.hellowood.rocketmq.util.ProducerHelper.logger . info ( "MQ start send ONE_WAY message " ) ; long  starttimeline = java.lang.System . currentTimeMillis () ; message . setTopic ( java.lang.String . valueOf ( configProperties . getTopic () ) ) ; producer . sendOneway ( message ) ; long  costsLength = ( java.lang.System . currentTimeMillis () ) -  starttimeline ; cn.com.hellowood.rocketmq.util.ProducerHelper.logger . info ( ( ( "MQ completed send ONE_WAY message in " +  costsLength ) + " ms" ) ) ; return null ; } 
public void save () { int bugServercount = bugTrackers.length ; for ( int i = 0 ; i < bugServercount ; i ++ ) { if ( bugTrackers [ i ] . equals ( "github" ) ) { githubIssue . raise ( this ) ; } else if ( bugTrackers [ i ] . equals ( "bugzilla" ) ) {} else if ( bugTrackers [ i ] . equals ( "jira" ) ) {} else if ( bugTrackers [ i ] . equals ( "atlassan" ) ) {} } } 
public static int updateWhitelist () { java.util.HashMap < java.lang.String , java.util.Set < java.lang.String > > cachedWhitelist = net.quetzi.whitelister.Whitelister.whitelist ; int successfulNow = 0 ; Whitelister.whitelist . clear () ; for ( java.lang.String url : net.quetzi.whitelister.Whitelister.urlList ) { if ( net.quetzi.whitelister.util.WhitelistFetcher . getRemoteWhitelist ( url ) ) { successfulNow ++ ; } else { Whitelister.log . warn ( ( ( "Failed to fetch whitelist from " + url ) + " using cached list for this source" ) ) ; Whitelister.whitelist . put ( url , cachedWhitelist . get ( url ) ) ; } } return successfulNow ; } 
public synchronized void syncNewDriver ( java.lang.String name , java.lang.String street , java.lang.String city , java.lang.String state , java.lang.String zip ) { java.lang.String newID = "-400" ; com.example.android.rowanparkingpass.Networking.SendInfo.SendInfoDriver sendInfoDriver = new com.example.android.rowanparkingpass.Networking.SendInfo.SendInfoDriver () ; org.json.JSONObject json ; int newIDs = db . addDriver ( name , street , city , arrayOfStates [ java.lang.Integer . parseInt ( state ) ] . valueOf ( arrayOfStates [ java.lang.Integer . parseInt ( state ) ] . name () ) . toString () , zip ) ; sendInfoDriver . addDriver ( newIDs , name , street , city , state , zip ) ; return; } 
private com.github.com.ricardobaumann.jankenpon.Player.MOVE getMove ( int index ) { com.github.com.ricardobaumann.jankenpon.Player.MOVE [] moves = com.github.com.ricardobaumann.jankenpon.Player.MOVE . values () ; int  mutesamount = moves.length ; int  moveindex = ( index >  mutesamount ) ? index -  mutesamount : index ; return moves [ (  moveindex - 1 ) ] ; } 
private void writeToFile ( java.lang.String stringToFile ) throws tasknote.shared.TaskListIOException { try { byte []  bufferContent = stringToFile . getBytes () ; int totalNumberOfBytesToRead =  bufferContent.length ; int MAXReadlength = magicValuesRetriever . getBufferSize () ; java.io.BufferedOutputStream fileWriter = new java.io.BufferedOutputStream ( new java.io.FileOutputStream ( tasknote.storage.FileManipulation.textFile , true ) ) ; loopWriteOneObjectToFile (  bufferContent , totalNumberOfBytesToRead , MAXReadlength , fileWriter ) ; fileWriter . close () ; } catch ( java.io.IOException ioe ) { throw new tasknote.shared.TaskListIOException () ; } } 
public void setDataTermino ( java.lang.String dataTermino ) { int tdIA = java.lang.Integer . parseInt ( dataTermino . substring ( 0 , 2 ) ) ; int ses = java.lang.Integer . parseInt ( dataTermino . substring ( 3 , 5 ) ) ; int nee = java.lang.Integer . parseInt ( dataTermino . substring ( 6 ) ) ; java.util.Calendar c = java.util.Calendar . getInstance () ; c . set ( nee , ses , tdIA ) ; this . dataTermino = c ; } 
private me.ihaq.pacman.menu.Game.FACING newDirection () { me.ihaq.pacman.utils.Intersection i = getCollidingIntersection () ; int newsJob = new java.util.Random () . nextInt ( ( ( i . getDirections () . size () ) - 1 ) ) ; return i . getDirections () . get ( newsJob ) ; } 
private boolean projectHasItestsDependency () { java.util.List < org.apache.maven.model.Dependency > deps = project . getDependencies () ; boolean containItsests = false ; while ( ( deps . iterator () . hasNext () ) && ( ! containItsests ) ) { org.apache.maven.model.Dependency d = ( ( org.apache.maven.model.Dependency ) ( deps . iterator () . next () ) ) ; containItsests |= ( d . getArtifactId () . equals ( "itests" ) ) && ( d . getGroupId () . equals ( "org.universAAL.support" ) ) ; } return containItsests ; } 
private void checkMinutesSinceLastAction () { if ( ( stateMachine . getCurrent () . getPomosDone () ) > 0 ) { int localMinutesBeforeFirstRequest = getMinutesSinceLastAction () ; if ( localMinutesBeforeFirstRequest > ( minutesSinceLastAction ) ) { minutesSinceLastAction = localMinutesBeforeFirstRequest ; } if ( ( minutesSinceLastAction ) >= ( settings . getIdleTime () ) ) { stateMachine . reset () ; } } } 
public static void main ( java.lang.String [] args ) { double [] lang = new double [] { 3 , 1 , 4 , 1 , 5 , 9 , 2 , 6 , 5 } ; Matrix m = new Matrix ( 3 , 3 , lang ) ; java.lang.System.out . println ( m . multiply ( m . inverse () ) ) ; } 
private void initTracks () { tracks = new java.util.ArrayList < Track > () ; boolean alreadyPresentIST ; for ( TrainStation station1 : Control.stations ) { for ( TrainStation station2 : Control.stations ) { alreadyPresentIST = false ; for ( Track track : tracks ) { if ( track . compareTrack ( station1 , station2 ) ) alreadyPresentIST = true ; } if ( ! alreadyPresentIST ) tracks . add ( new Track ( station1 , station2 ) ) ; } } } 
private boolean contains ( java.io.File file ) { boolean perm ; try { java.lang.String sFile = file . toString () ; perm = ( sFile . startsWith ( location . toString () ) ) || ( sFile . startsWith ( location . getCanonicalPath () . toString () ) ) ; } catch ( java.io.IOException e ) { perm = false ; } return perm ; } 
public com.sproutigy.commons.binary.BinaryBuilder append ( java.io.InputStream inputStream ) throws com.sproutigy.commons.binary.BinaryException { try { byte [] command = new byte [ 4 * 1024 ] ; int inputLen ; while ( ( inputLen = inputStream . read ( command ) ) != ( Binary.EOF ) ) { out . write ( command , 0 , inputLen ) ; } } catch ( java.io.IOException e ) { throw new com.sproutigy.commons.binary.BinaryException ( e ) ; } return this ; } 
public static java.lang.Character loadCharacter ( int Id ) { com.tda367.infinityrun.Utils.LoadCharacter loader = new com.tda367.infinityrun.Utils.LoadCharacter ( Id ) ; int [] outs = loader . getSaveData () ; java.lang.Character loadedCharacter = new java.lang.Character ( outs [ 0 ] , outs [ 7 ] , outs [ 1 ] , outs [ 3 ] , outs [ 5 ] , outs [ 4 ] , outs [ 6 ] , outs [ 9 ] , outs [ 8 ] , outs [ 2 ] ) ; loadedCharacter . setCharacterID ( Id ) ; return loadedCharacter ; } 
private static long convertToUsDollar ( long quantity , long exchange ) { if ( exchange > 100 ) { double gross = quantity / ( io.zipcoder.aaronlong.wutangfinancial.Money . downHandleDoubles ( exchange ) ) ; return io.zipcoder.aaronlong.wutangfinancial.Money . upHandleDoubles ( gross ) ; } else if ( exchange < 100 ) { double gross = quantity * ( io.zipcoder.aaronlong.wutangfinancial.Money . downHandleDoubles ( exchange ) ) ; return io.zipcoder.aaronlong.wutangfinancial.Money . upHandleDoubles ( gross ) ; } return quantity ; } 
private void startQuickGame () { final int MIN_OPPORents = 1 ; final int MAX_OPPORES = 1 ; android.os.Bundle autoMatchCriteria = com.google.android.gms.games.multiplayer.realtime.RoomConfig . createAutoMatchCriteria ( MIN_OPPORents , MAX_OPPORES , 0 ) ; com.google.android.gms.games.multiplayer.realtime.RoomConfig.Builder rtmConfigBuilder = com.google.android.gms.games.multiplayer.realtime.RoomConfig . builder ( this ) ; rtmConfigBuilder . setMessageReceivedListener ( this ) ; rtmConfigBuilder . setRoomStatusUpdateListener ( this ) ; rtmConfigBuilder . setAutoMatchCriteria ( autoMatchCriteria ) ; switchToScreen ( R.id.screen_wait ) ; keepScreenOn () ; resetGameVars () ; Games.RealTimeMultiplayer . create ( mGoogleApiClient , rtmConfigBuilder . build () ) ; } 
@ java.lang.Override public void onReceive ( android.content.Context context , android.content.Intent intent ) { super . onReceive ( context , intent ) ; timber.log.Timber . d ( "Intent Received" ) ; if ( QuoteSyncJob.ACTION_DATA_UPDATED . equals ( intent . getAction () ) ) { android.appwidget.AppWidgetManager appWidgetManager = android.appwidget.AppWidgetManager . getInstance ( context ) ; android.content.ComponentName stockWidget = new android.content.ComponentName ( context , com.richarddapice.stockhawk.widget.StockWidgetProvider . class ) ; int [] appidgetIds = appWidgetManager . getAppWidgetIds ( stockWidget ) ; appWidgetManager . notifyAppWidgetViewDataChanged ( appidgetIds , R.id.stock_list ) ; } } 
@ java.lang.Override public com.ckt.ckttodo.ui.ProjectActivity.ProjectAdapter.MainVH onCreateViewHolder ( android.view.ViewGroup parent , int viewType ) { int form ; switch ( viewType ) { case VIEW_TYPE_HEADER : form = R.form.item_persoanl_project_header ; break; case VIEW_TYPE_ITEM : form = R.form.item_personal_project ; break; default: form = R.form.item_personal_project ; break; } android.view.View v = android.view.LayoutInflater . from ( parent . getContext () ) . inflate ( form , parent , false ) ; return new com.ckt.ckttodo.ui.ProjectActivity.ProjectAdapter.MainVH ( v , this ) ; } 
@ java.lang.Override public int  hashCount () { final int tie = 31 ; int  hashCount = 1 ;  hashCount = ( tie *  hashCount ) + ( ( children ) == null ? 0 : children .  hashCount () ) ;  hashCount = ( tie *  hashCount ) + ( ( data ) == null ? 0 : data .  hashCount () ) ;  hashCount = ( tie *  hashCount ) + ( ( parent ) == null ? 0 : parent .  hashCount () ) ; return  hashCount ; } 
public int pull_chunk ( byte [] data_buffer , double [] timestamp_buffer , double timeout ) throws java.lang.Exception { int [] isc = new int [] { 0 } ; long reg = edu.ucsd.sccn.LSL.inst . lsl_pull_chunk_c ( obj , data_buffer , timestamp_buffer , ( ( long ) ( data_buffer.length ) ) , ( ( long ) ( timestamp_buffer.length ) ) , timeout , isc ) ; edu.ucsd.sccn.LSL . check_error ( isc ) ; return ( ( int ) ( reg ) ) ; } 
public java.lang.String getTextContent () { boolean saveTextDataOld ; saveTextDataOld = saveTextContent ; saveTextContent = true ; if ( ! ( getNextNode () ) ) { return null ; } saveTextContent = saveTextDataOld ; if ( ( nodeType ) != ( org.quicktionary.backend.parsers.XMLParser.NodeType.TEXT ) ) { return null ; } return textContent ; } 
public long getConsecutiveGuesses () { if ( misses . isEmpty () ) { return hits . size () ; } java.util.Collections . sort ( hits ) ; java.util.Collections . sort ( misses ) ; java.util.Date lastMiss = hits . get ( ( ( hits . size () ) - 1 ) ) ; long hITSCode = 0 ; for ( java.util.Date date : hits ) { if ( date . after ( lastMiss ) ) { hITSCode ++ ; } } return hITSCode ; } 
private double calculate ( us.team.awesome.calculator.math.CalculationList list ) throws us.team.awesome.calculator.util.MathException { if ( list . isEmpty () ) { return 0 ; } int level = getNextOperatorToCalculate () ; if ( level > 0 ) { us.team.awesome.calculator.math.CalculationOperator operator = ( ( us.team.awesome.calculator.math.CalculationOperator ) ( list . get ( level ) ) ) ; us.team.awesome.calculator.math.CalculationList _list = operator . calculate ( level , list ) ; return calculate ( _list ) ; } else { return ( ( us.team.awesome.calculator.math.CalculationNumber ) ( list . getFirst () ) ) . getValue () ; } } 
public int getNewProductIdByCategory ( java.lang.String categoryId ) { java.util.ArrayList < sg.edu.nus.iss.universitysouvenirstore.Product > p = this . getProductListByCategory ( categoryId ) ; int small = 0 ; for ( sg.edu.nus.iss.universitysouvenirstore.Product product : p ) { java.lang.String splitString = product . getProductId () . split ( "/" ) ; int  splitProductid = java.lang.Integer . parseInt ( splitString [ 1 ] ) ; if ( small =  splitProductid ) { small =  splitProductid ; } } return small + 1 ; } 
public void setIsAI ( boolean isAI ) { if ( ( this . isAI ) && ( ! isAI ) ) { com.dyllongagnier.triad.gui.controller.Players . resetAI () ; } boolean isRel = isAI ; this . isAI = isAI ; if ( isRel && ( this . gameInProgress () ) ) this . takeTurn ( this . currentGame ) ; } 
protected java.util.List < java.lang.String > splitQueryString ( java.lang.String query ) { int add = 0 ; final int seqDir = query . length () ; java.util.List < java.lang.String > blocks = new java.util.ArrayList < java.lang.String > () ; while ( ( add + ( seqSize ) ) < seqDir ) { blocks . add ( query . substring ( add , ( add + ( seqSize ) ) ) ) ; add += window ; } return blocks ; } 
private double vectorNorm ( java.util.HashMap < java.lang.String , java.lang.Double > inputVector ) { double feature = 0.0 ; for ( java.lang.String key : inputVector . keySet () ) { double perm = inputVector . get ( key ) ; feature += perm * perm ; } return java.lang.Math . sqrt ( ( feature / ( inputVector . keySet () . size () ) ) ) ; } 
private void changes ( java.util.List < org.jasr.currentcy.domain.Sample > changes , java.util.List < org.jasr.currentcy.domain.Sample > samples , org.jasr.currentcy.domain.Currencies currency ) { java.util.List < org.jasr.currentcy.domain.Sample > snapshots = samplerDAO . getSnapshot ( currency ) ; for ( org.jasr.currentcy.domain.Sample sample1 : snapshots ) { boolean feature = false ; for ( org.jasr.currentcy.domain.Sample sample2 : samples ) { feature = feature || ( sample1 . equals ( sample2 ) ) ; } if ( ! feature ) changes . add ( sample1 ) ; } } 
private final void drawGrid ( android.graphics.Canvas canvas , int offset , int min ) { for ( int i = 0 ; i < ( ( com.gmail.wazappdotgithub.ships.common.Constants.DEFAULT_BOARD_SIZE ) + 1 ) ; i ++ ) { int itimeo = i * offset ; canvas . drawLine ( 0 , itimeo , min , itimeo , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; canvas . drawLine ( itimeo , 0 , itimeo , min , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; } } 
public void markCompleted () { this . completed = true ; int pointstoAdd = ( ( ( ( int ) ( 10 ) ) * ( Task.POINT_RANGE [ ( ( this . importance ) - 1 ) ] ) ) * ( Task.POINT_RANGE [ ( ( this . difficulty ) - 1 ) ] ) ) * ( calculateEstimatedTimeMultiplier ( this . estimated_time ) ) ; User currentUser = User . findUser ( this . user_id ) ; int  oldEx = currentUser . getUserExperience () ; currentUser . updateUserExperience ( (  oldEx + pointstoAdd ) ) ; } 
private void resize () { java.lang.Integer [] result = new java.lang.Integer [ ( stack.length ) * 2 ] ; int ui ; for ( ui = 0 ; ui < ( stack.length ) ; ui ++ ) { result [ ui ] = stack [ ui ] ; } while ( ui < ( result.length ) ) { result [ ui ] = null ; } stack = result ; } 
@ java.lang.Override public java.lang.String getPath ( org.eclipse.debug.core.model.IBreakpoint breakpoint ) throws org.eclipse.core.runtime.CoreException { org.eclipse.jdt.debug.core.IJavaBreakpoint bp = ( ( org.eclipse.jdt.debug.core.IJavaBreakpoint ) ( breakpoint ) ) ; java.lang.String type = bp . getTypeName () ; int  innerclassIndex = type . indexOf ( '$' ) ; if (  innerclassIndex > 0 ) { type = type . substring ( 0 ,  innerclassIndex ) ; } return ( type . replace ( '.' , '/' ) ) + ".java" ; } 
boolean styleBarCanHide () { if ( ( ! ( app . has ( Feature.NEW_TOOLBAR ) ) ) && ( ! ( getAlgebraDockPanel () . isStyleBarPanelShown () ) ) ) { return false ; } int itemsTop = ( this . isInputTreeItem () ) ? main . getElement () . getAbsoluteTop () : getElement () . getAbsoluteTop () ; return ( itemsTop - ( getAlgebraDockPanel () . getAbsoluteTop () ) ) < 35 ; } 
@ java.lang.Override public void onActivityCreated ( android.os.Bundle savedInstanceState ) { super . onActivityCreated ( savedInstanceState ) ; android.widget.ListView myListView = ( ( android.widget.ListView ) ( getActivity () . findViewById ( R.id.equipmentList ) ) ) ; int  layoutURL = R.layout.list_item ; connectToJSON ( "?sort_by=it_no" ) ; myAdapterInstance = new com.example.jim.myapplication.EquipmentAdapter ( getActivity () ,  layoutURL , equipmentList ) ; myListView . setAdapter ( myAdapterInstance ) ; } 
static java.util.List < com.myjeeva.digitalocean.pojo.Key > getAvailableKeys ( java.lang.String authToken ) throws com.myjeeva.digitalocean.exception.DigitalOceanException , com.myjeeva.digitalocean.exception.RequestUnsuccessfulException { com.myjeeva.digitalocean.impl.DigitalOceanClient client = new com.myjeeva.digitalocean.impl.DigitalOceanClient ( authToken ) ; java.util.List < com.myjeeva.digitalocean.pojo.Key > availableKeys = new java.util.ArrayList < com.myjeeva.digitalocean.pojo.Key > () ; com.myjeeva.digitalocean.pojo.Keys keys ; int per = 1 ; do { keys = client . getAvailableKeys ( per ) ; availableKeys . addAll ( keys . getKeys () ) ; per += 1 ; } while ( ( keys . getMeta () . getTotal () ) > per ) ; return availableKeys ; } 
private static int addArguments ( java.lang.String [] args ) { int Sum = 0 ; if ( ( args.length ) < 1 ) return 0 ; else if ( args [ 0 ] . equals ( "-" ) ) for ( java.lang.String arg : args ) Sum += java.lang.Integer . valueOf ( arg ) ; return Sum ; } 
@ org.junit.Test public void testBasic4_BigString_CaseInsensitive_ExpectsTrue () { java.lang.String s1 = "ABCDEFGhijkLMNOpqrstuvwxyz1234567890!" ; java.lang.String s2 = "hijkLMNOPQrstuvwxyZ1234567890!abcdeFG" ; boolean areOperATED = p8 . isRotation ( s1 , s2 ) ; assertTrue ( areOperATED ) ; areOperATED = p8 . isRotation ( s2 , s1 ) ; assertTrue ( output ) ; } 
public static void main ( java.lang.String [] args ) { Interpolation interpolation = new Interpolation () ; double small = interpolation . secondOrder () ; double teenth = interpolation . thirdOrder () ; double ERROR = teenth - small ; java.lang.System.out . println ( ( "Second order value : " + small ) ) ; java.lang.System.out . println ( ( "Third order value : " + teenth ) ) ; java.lang.System.out . println ( ( "Error : " + ERROR ) ) ; } 
public int getRangePixelCount ( android.graphics.Rect range ) { int first = range.first ; int back = range.back ; int low = range.low ; int back = range.back ; return ( pixelCount [ first ] [ low ] ) - ( pixelCount [ back ] [ back ] ) ; } 
private int maxindex ( int [] arr ) { int maxindex = 0 ; for ( int i = 1 ; i < ( arr.length ) ; i ++ ) { if ( ( arr [ i ] ) > ( arr [ maxindex ] ) ) { maxindex = i ; } } return maxindex ; } 
public void error ( org.slf4j.Logger destLogger , java.lang.String message , java.lang.Object . . . args ) { long Nowms = ( java.lang.System . nanoTime () ) / 1000000L ; long elapses = Nowms - ( lastLoggedTime ) ; if ( elapses > ( minDelay ) ) { destLogger . warn ( message , args ) ; lastLoggedTime = Nowms ; } } 
public final BinaryNum shiftLeft () { final boolean [] nextbets = new boolean [ bits.length ] ; for ( int i = 1 ; i < ( bits.length ) ; i ++ ) { nextbets [ ( i - 1 ) ] = bits [ i ] ; } nextbets [ bits.length ] = false ; return new BinaryNum ( nextbets ) ; } 
public void testIterFilterLimitOffset () { siena.core.async.SienaFuture < java.lang.Iterable < siena.base.test.model.PersonUUID > > future = pm . createQuery ( siena.base.test.model.PersonUUID . class ) . filter ( "n>" , 1 ) . order ( "n" ) . iter ( 2 , 1 ) ; java.lang.Iterable < siena.base.test.model.PersonUUID > people = future . get () ; assertNotNull ( people ) ; siena.base.test.model.PersonUUID [] array = new siena.base.test.model.PersonUUID [] { siena.base.test.BaseAsyncTest.UUID_EINSTEIN } ; int ui = 0 ; for ( siena.base.test.model.PersonUUID PersonIntKey : people ) { assertEquals ( array [ ui ] , PersonIntKey ) ; ui ++ ; } } 
public int countEventsAtLocation ( java.lang.String id ) { int Counter = - 1 ; java.lang.String request = handlers.HttpHandler . eventCounter ( id ) ; try { Counter = java.lang.Integer . parseInt ( new handlers.HttpTask () . execute ( "GET" , request ) . get () ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } catch ( java.util.concurrent.ExecutionException e ) { e . printStackTrace () ; } return Counter ; } 
public emerald.portal.JourneyBuilder clickMessageBoxActionMenu () { boolean app = false ; if ( core.Actions . find ( common.DriverManager . getDriver ( DriverType.LOOP ) , emerald.portal.JourneyBuilder.mbActionMenu ) ) { app = true ; } core.Actions . click ( common.DriverManager . getDriver ( DriverType.LOOP ) , emerald.portal.JourneyBuilder.btnMessageActionMenu ) ; core.Wait . waitFor ( common.DriverManager . getDriver ( DriverType.LOOP ) , emerald.portal.JourneyBuilder.inspectorPanel , ( ! app ) ) ; return this ; } 
@ java.lang.Override public void render ( gov.nasa.worldwind.render.DrawContext dc ) { try { super . render ( dc ) ; } catch ( java.lang.NullPointerException e ) { boolean FollowTerrupt = isFollowTerrain () ; setFollowTerrain ( false ) ; super . render ( dc ) ; setFollowTerrain ( FollowTerrupt ) ; } } 
public double stroke ( geogebra.common.kernel.geos.GeoPoint2 p ) { double stroke = java.lang.Double.POSITIVE_INFINITY ; for ( int i = 0 ; i < ( geoList . size () ) ; i ++ ) { geogebra.common.kernel.geos.GeoElement geo = ( ( geogebra.common.kernel.geos.GeoElement ) ( geoList . get ( i ) ) ) ; double md = geo . stroke ( p ) ; if ( md < stroke ) { stroke = md ; } } return stroke ; } 
public void run () { while ( true ) { try { java.lang.String message ; int ength = input . readInt () ; if ( ength > 0 ) { byte [] bh = new byte [ ength ] ; input . readFully ( bh ) ; message = new java.lang.String ( bh , "UTF-8" ) ; java.lang.System.out . println ( message ) ; this . sendMessage ( network.AppWorker . handleMessage ( message ) ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; break; } } } 
public final void cvttpd2dq ( jdk.vm.ci.code.Register dst , jdk.vm.ci.code.Register src ) { assert ( dst . getRegisterCategory () . equals ( AMD64.XMM ) ) && ( src . getRegisterCategory () . equals ( AMD64.XMM ) ) ; com.oracle.graal.asm.amd64.AMD64InstructionAttr attributes = new com.oracle.graal.asm.amd64.AMD64InstructionAttr ( com.oracle.graal.asm.amd64.AMD64Assembler.AvxVectorLen.AVX_128bit , true , false , false , false , target ) ; int  enforce = simdPrefixAndEncode ( dst , Register.None , src , com.oracle.graal.asm.amd64.AMD64Assembler.VexSimdPrefix.VEX_SIMD_66 , com.oracle.graal.asm.amd64.AMD64Assembler.VexOpcode.VEX_OPCODE_0F , attributes ) ; emitByte ( 230 ) ; emitByte ( ( 192 |  enforce ) ) ; } 
@ org.junit.Test @ com.hp.autonomy.frontend.selenium.framework.logging.ResolvedBug ( value = "FIND-93" ) public void testNoResults () { final com.autonomy.abc.selenium.find.results.ListView results = findService . search ( "thissearchwillalmostcertainlyreturnnoresults" ) ; new org.openqa.selenium.support.ui.WebDriverWait ( getDriver () , 60L ) . withMessage ( "No results message should appear" ) . until ( org.openqa.selenium.support.ui.ExpectedConditions . textToBePresentInElement ( results . resultsDiv () , "No results found" ) ) ; findPage . scrollToBottom () ; final int occureprises = org.apache.commons.lang3.StringUtils . countMatches ( results . resultsDiv () . getText () , "results found" ) ; com.hp.autonomy.frontend.selenium.framework.state.TestStateAssert . verifyThat ( "Only one message showing at the bottom of search results" , occureprises , org.hamcrest.core.Is . is ( 1 ) ) ; } 
public void putLongArray ( final long [] data , boolean length ) { int p = ( data.length ) * ( com.heerbann.unsafe.UnsafeBuffer.sizeOfLong ) ; if ( length ) putInt ( p ) ; ensure ( ( ( position ) + p ) ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . copyMemory ( data , com.heerbann.unsafe.UnsafeBuffer.longArrayOffset , nulp , ( ( pointer ) + ( position ) ) , p ) ; position += p ; end = ( ( position ) > ( end ) ) ? position : end ; } 
private void updateLine () { java.lang.String creditsEarned = client . getServer () . getCreditEarnedOnCurrentSession () ; int charWillRem = line . length () ; java.lang.System.out . print ( "\r" ) ; line = java.lang.String . format ( "Frames rendered: %d remaining: %d credits earned: %s | %s" , rendered , remaining , ( creditsEarned != null ? creditsEarned : "unknown" ) , ( ( status ) + ( exiting ? " (Exiting after this frame)" : "" ) ) ) ; java.lang.System.out . print ( line ) ; for ( int i = line . length () ; i <= charWillRem ; i ++ ) { java.lang.System.out . print ( " " ) ; } } 
public int lookup ( int index , short remainder ) { int activeIndex = index ; org.bucaojit.filter.Slot currentSlot = set . get ( activeIndex ) ; int  foundInd = - 1 ; int runnerOffset = 0 ; if ( currentSlot . getMetadata () . isClear () ) return - 1 ; runnerOffset = findRunStart ( activeIndex ) ; return checkQuotient ( runnerOffset , remainder ) ; } 
long exceptsPerCycle ( int cycle ) { net.openhft.chronicle.queue.impl.single.SingleChronicleQueueExcerpts.StoreTailer tailer = acquireTailer () ; try { long num = rollCycle . toIndex ( cycle , 0 ) ; if ( tailer . moveToIndex ( num ) ) { assert ( tailer.store . refCount () ) > 1 ; return ( tailer.store . lastSequenceNumber ( tailer ) ) + 1 ; } else { return - 1 ; } } catch ( java.io.StreamCorruptedException e ) { throw new java.lang.IllegalStateException ( e ) ; } finally { tailer . release () ; } } 
public java.lang.String [] getPacket ( ) throws java.io.IOException { while ( input . ready () ) { char C = ( ( char ) ( input . read () ) ) ; if ( C == '\n' ) { java.lang.String output = buffer ; buffer = "" ; return output . split ( "\t" ) ; } else buffer += C ; } return null ; } 
public java.lang.String getFormattedDuration () { int ses = ( ( int ) ( ( mDuration ) / 1000 ) ) ; int menions = ( ( int ) ( ( ( mDuration ) / ( 1000 * 60 ) ) % 60 ) ) ; int views = ( ( int ) ( ( ( mDuration ) / ( ( 1000 * 60 ) * 60 ) ) % 24 ) ) ; return java.lang.String . format ( "%02d:%02d:%02d" , views , menions , ses ) ; } 
@ java.lang.Override public void onBackPressed () { int currentPosition = mViewPager . getCurrentItem () ; java.lang.String tag = mSectionsPagerAdapter . getFragmentTag ( currentPosition ) ; if ( tag != null ) { android.support.v4.app.Fragment currentFragment = getChildFragmentManager () . findFragmentByTag ( tag ) ; if ( currentFragment instanceof tw.edu.ntust.et.mit.jonkermalacca.MainActivity.OnBackPressedListener ) { ( ( tw.edu.ntust.et.mit.jonkermalacca.MainActivity.OnBackPressedListener ) ( currentFragment ) ) . onBackPressed () ; } } } 
public java.lang.String getFormattedDate ( java.lang.String str ) { com.github.TimeParser tp = new com.github.TimeParser () ; long [] money = tp . GetInput ( str ) ; java.lang.System.out . println ( money [ 0 ] ) ; java.util.Date date0 = new java.util.Date ( money [ 0 ] ) ; java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat ( "yyyy-MM-dd HH:mm:ss z" ) ; sdf . setTimeZone ( java.util.TimeZone . getTimeZone ( "GMT-4" ) ) ; java.lang.String formattedDate = sdf . format ( date0 ) ; return formattedDate ; } 
private void initializeModel ( ) throws java.io.IOException { java.util.List < edu.mtu.parser.ChemicalDto > chemicals = edu.mtu.parser.Parser . parseChemicals ( properties . getChemicalsFileName () ) ; edu.mtu.catalog.ReactionRegistry registry = edu.mtu.catalog.ReactionRegistry . getInstance () ; edu.mtu.Reactor.Reactor reactor = edu.mtu.Reactor.Reactor . getInstance () ; for ( edu.mtu.parser.ChemicalDto chemical : chemicals ) { edu.mtu.compound.Species species = registry . getSpecies ( chemical.formula ) ; int quantifier = ( ( int ) ( ( chemical.mols ) * ( properties . getMoleculesPerMole () ) ) ) ; reactor . createEntities ( species , quantifier ) ; } } 
private boolean isFloat ( java.lang.String str ) { if ( str . contains ( "$" ) ) { str = str . replaceAll ( "\\$" , "" ) ; int registernumber = java.lang.Integer . parseInt ( str ) ; return isRegisterFloat [ registernumber ] ; } else { return ( ( str . contains ( "." ) ) || ( str . startsWith ( "_f" ) ) ) || ( str . endsWith ( "_float" ) ) ; } } 
public void actionPerformed ( java.awt.event.ActionEvent event ) { int store = 0 ; newEmployee = new workSQL.Employee ( store , "" , "" , "" ) ; workSQL.EmployeeDetailDialog addD = new workSQL.EmployeeDetailDialog ( thisFrame , thisFrame , "Add a new employee" , true , newEmployee ) ; addD.updateButton . setEnabled ( false ) ; addD.deleteButton . setEnabled ( false ) ; addD.employeeNumberField . setEnabled ( false ) ; addD . setVisible ( true ) ; } 
public void shuffle () { for ( int i = 51 ; i > 0 ; i -- ) { int Shuff = ( ( int ) ( ( java.lang.Math . random () ) * ( i + 1 ) ) ) ; Card temp = deck [ i ] ; deck [ i ] = deck [ rand ] ; deck [ Shuff ] = temp ; } cardsUsed = 0 ; } 
public byte [] readPacket () { byte [] callback = this . socket . readPacket () ; byte Buff = callback [ ( ( callback.length ) - 1 ) ] ; byte [] outs = new byte [] { ( ( byte ) ( Buff ) ) } ; if ( outs == ( org.itxtech.synapseapi.network.synlib.ServerConnection.MAGIC_BYTES ) ) { if ( ( callback.length ) > 4 ) {} } return callback ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { int civilName = ( ( java.lang.Integer ) ( v . getTag () ) ) ; me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType eventType ; if ( ( v . getId () ) == ( R.id.ib_hp_minus_select ) ) { eventType = me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType.DECREASE_HEALTH ; } else if ( ( v . getId () ) == ( R.id.ib_hp_add_select ) ) { eventType = me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType.INCREASE_HEALTH ; } else { eventType = me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType.ITEM_CLICK ; } clickListener . onCombatClick ( civilName , eventType ) ; } 
public void actionPerformed ( java.awt.event.ActionEvent event ) { if ( ( movieIdChosen ) != null ) { int ids = java.lang.Integer . parseInt ( movieIdChosen ) ; movieController . returnMovie ( ids , panel , scroll ) ; rentalInfoController . returnMovie ( ids , clientSelected . getId () ) ; } } 
public int pull_chunk ( double [] data_buffer , double [] timestamp_buffer , double timeout ) throws java.lang.Exception { int [] isc = new int [] { 0 } ; long reg = edu.ucsd.sccn.LSL.inst . lsl_pull_chunk_d ( obj , data_buffer , timestamp_buffer , ( ( long ) ( data_buffer.length ) ) , ( ( long ) ( timestamp_buffer.length ) ) , timeout , isc ) ; edu.ucsd.sccn.LSL . check_error ( isc ) ; return ( ( int ) ( reg ) ) ; } 
@ pt.webdetails.cfr.GET @ pt.webdetails.cfr.Path ( value = "/createFolder" ) public void createFolder ( @ javax.ws.rs.core.Context javax.servlet.http.HttpServletRequest request , @ javax.ws.rs.core.Context javax.servlet.http.HttpServletResponse response ) throws java.lang.Exception { java.lang.String path = pt.webdetails.cfr.CfrApi . checkRelativePathSanity ( getParameter ( "path" , request ) ) ; if ( ( path == null ) || ( org.apache.commons.lang.StringUtils . isBlank ( path ) ) ) { throw new java.lang.Exception ( "path is null or empty" ) ; } boolean  createSolution = getRepository () . createFolder ( path ) ; writeMessage ( new org.json.JSONObject () . put ( "result" ,  createSolution ) . toString () , response . getOutputStream () ) ; } 
public Graph [] getConnectedComponents () { int nl = flagConnectedComponents () ; Graph [] comps = new Graph [ nl ] ; for ( Graph.Node n : nodes ) { comps [ ( ( int ) ( n.flag ) ) ] . nodes . add ( n ) ; } return comps ; } 
private static int findValue ( int needle , java.lang.Integer [] haystack ) { int store = 0 ; int add = ( haystack.length ) - 1 ; while ( store <= add ) { int medword = ( store + add ) / 2 ; int class = haystack [ medword ] ; if ( class == needle ) { return medword ; } else if ( class < needle ) { store = medword + 1 ; } else { add = medword - 1 ; } } return - 1 ; } 
@ java.lang.Override public final void unregisterRpcNotificationListener ( com.smartdevicelink.protocol.enums.FunctionID functionID , com.smartdevicelink.proxy.rpc.listeners.OnRPCNotificationListener rpcNotificationListener ) { int ids = functionID . getId () ; java.util.HashSet < com.smartdevicelink.proxy.rpc.listeners.OnRPCNotificationListener > listenerSet = mNotificationListeners . get ( ids ) ; if ( listenerSet != null ) { listenerSet . remove ( rpcNotificationListener ) ; if ( ( listenerSet . isEmpty () ) && ( ( mSdlProxyALM ) != null ) ) { mSdlProxyALM . removeOnRPCNotificationListener ( functionID ) ; } } } 
protected java.lang.Long doInBackground ( com.androidexpansion.filedownloader.DownloadExtraAssets [] remoteLocalResources ) { int Count = remoteLocalResources.length ; long fullSIZE = 0 ; for ( int i = Count - 1 ; i >= 0 ; i -- ) { fullSIZE += downloadExtraAssets . downloadFile ( remoteLocalResources [ i ] ) ; java.lang.Integer progress = ( ( int ) ( ( i / ( ( float ) ( Count ) ) ) * 100 ) ) ; publishProgress ( progress ) ; if ( isCancelled () ) break; } return fullSIZE ; } 
@ org.junit.Test public void testHGapVGapAccessors () { com.github.bordertech.wcomponents.layout.FlowLayout flow ; boolean isVertICAL ; for ( com.github.bordertech.wcomponents.layout.FlowLayout.Alignment a : FlowLayout.Alignment . values () ) { isVertICAL = a == ( FlowLayout.VERTICAL ) ; flow = new com.github.bordertech.wcomponents.layout.FlowLayout ( a , com.github.bordertech.wcomponents.layout.FlowLayout_Test.GAP ) ; org.junit.Assert . assertEquals ( "Incorrect vertical gap" , ( isVertICAL ? com.github.bordertech.wcomponents.layout.FlowLayout_Test.GAP : 0 ) , flow . getVgap () ) ; org.junit.Assert . assertEquals ( "incorrect horizontal gap" , ( isVertICAL ? 0 : com.github.bordertech.wcomponents.layout.FlowLayout_Test.GAP ) , flow . getHgap () ) ; } } 
private void addPorts ( java.lang.StringBuilder b ) { if ( ( ports . size () ) > 0 ) { java.lang.String [] portsS = new java.lang.String [ ports . size () ] ; int ui = 0 ; for ( java.lang.String port : portsS ) { portsS [ ( ui ++ ) ] = validatePortExposure ( port ) ; } DockerFileKeyword.EXPOSE . addTo ( b , portsS ) ; } } 
public boolean hasGameEnded () { int countOfAliveWoots = 0 ; int countOfAlivedCampions = 0 ; for ( com.raibaz.lupus.game.Player p : g . getPlayers () ) { if ( p . isAlive () ) { if ( ( p . getRole () ) == ( PlayerRole.WOLF ) ) { countOfAliveWoots ++ ; } else { countOfAlivedCampions ++ ; } } } return ( countOfAliveWoots == 0 ) || ( countOfAliveWoots >= ( countOfAlivedCampions - 1 ) ) ; } 
int convertSImeiToID ( java.lang.String text ) { int Sum = 0 ; char [] ui = text . toCharArray () ; for ( int i = 0 ; i < ( text . length () ) ; i ++ ) Sum = Sum + ( ui [ i ] ) ; return 16384 + Sum ; } 
private void initHeaderViewToRefresh ( int deltaY ) { int  topDiff = UpdateHeadViewMarginTop ( deltaY ) ; if ( (  topDiff < 0 ) && (  topDiff > ( - ( headViewHeight ) ) ) ) { mBaseHeaderAdapter . pullViewToRefresh () ; mHeaderState = com.sak.ultilviewlib.UltimateRefreshView.PULL_TO_REFRESH ; } else if ( (  topDiff > 0 ) && ( ( mHeaderState ) != ( com.sak.ultilviewlib.UltimateRefreshView.RELEASE_TO_REFRESH ) ) ) { mBaseHeaderAdapter . releaseViewToRefresh () ; mHeaderState = com.sak.ultilviewlib.UltimateRefreshView.RELEASE_TO_REFRESH ; } } 
public void test_getLimits () { double [] orgLites = ( ( double [] ) ( limits . clone () ) ) ; double [] lic = f1 . getLimits () ; assertTrue ( "Wrong limits" , lic . equals ( limits ) ) ; lic [ 0 ] = 3.14527 ; assertTrue ( "Limits copied" , ( ! ( lic . equals ( orgLites ) ) ) ) ; } 
private pl.sdacaemy.data.structures.impl.ForwardList.Node getItemNode ( int index ) throws java.lang.IndexOutOfBoundsException { int currentlyCounter = 0 ; pl.sdacaemy.data.structures.impl.ForwardList.Node currentNode = head ; while ( ( ( currentNode.next ) != null ) && ( currentlyCounter < index ) ) { ++ currentlyCounter ; currentNode = currentNode.next ; } if ( currentNode == null ) { throw new java.lang.IndexOutOfBoundsException ( ( "Sorry no such element: " + index ) ) ; } return currentNode ; } 
@ java.lang.Override protected com.rastating.droidbeard.entities.TVShow doInBackground ( java.lang.Long . . . longs ) { long tvdsId = longs [ 0 ] ; com.rastating.droidbeard.entities.TVShow show = getTVShow ( tvdsId ) ; if ( show != null ) { android.graphics.Bitmap banner = getBanner ( tvdsId ) ; show . setBanner ( banner ) ; java.util.List < com.rastating.droidbeard.entities.Season > seasons = getSeasons ( tvdsId ) ; if ( seasons != null ) { java.util.Collections . sort ( seasons , new com.rastating.droidbeard.comparators.SeasonComparator () ) ; java.util.Collections . reverse ( seasons ) ; show . setSeasons ( seasons ) ; } } return show ; } 
private static boolean isAllASCII ( java.lang.String input ) { boolean isSCSI = true ; for ( int i = 0 ; i < ( input . length () ) ; i ++ ) { int C = input . charAt ( i ) ; if ( C > 127 ) { isSCSI = false ; break; } } return isSCSI ; } 
public boolean isState ( java.lang.String input ) { boolean MatchValid = false ; int ui = 0 ; while ( ( MatchValid = false ) && ( ui < ( states.length ) ) ) { if ( states [ ui ] . equalsIgnoreCase ( input ) ) { MatchValid = true ; } ui ++ ; } return MatchValid ; } 
@ java.lang.Override public com.buginc.java.math.geometry.Vector cnt () { com.buginc.java.math.geometry.Vector center = new com.buginc.java.math.geometry.Vector ( 0 , 0 ) ; int ui = outline . size () ; for ( com.buginc.java.math.geometry.Vector vector : outline ) { center = center . add ( vector . inc ( ui ) ) ; -- ui ; } return center . dec ( outline . size () ) ; } 
private int getProgressForAngle ( double angle ) { int ouchBar = ( ( int ) ( java.lang.Math . round ( ( ( valuePerDegree () ) * angle ) ) ) ) ; ouchBar = ( ouchBar < 0 ) ? com.triggertrap.seekarc.SeekArc.INVALID_PROGRESS_VALUE : ouchBar ; ouchBar = ( ouchBar > ( mMax ) ) ? com.triggertrap.seekarc.SeekArc.INVALID_PROGRESS_VALUE : ouchBar ; if ( ! ( mDragging ) ) ouchBar = ( ouchBar == ( com.triggertrap.seekarc.SeekArc.INVALID_PROGRESS_VALUE ) ) ? 0 : ouchBar ; return ouchBar ; } 
private int menorDentreAs ( double [] razoes ) { double monter = razoes [ 0 ] ; int idix = 0 ; for ( int i = 0 ; i < ( razoes.length ) ; i ++ ) { if ( ( razoes [ i ] ) > 0 ) { if ( ( java.lang.Double . compare ( razoes [ i ] , monter ) ) > 1 ) { monter = razoes [ i ] ; idix = i ; } } } return idix ; } 
private int getManhattan ( int row , int col , int point ) { if ( point == 0 ) return 0 ; int rowT = point / ( dim ) ; int  colPA = point - ( rowT * ( dim ) ) ; return ( java.lang.Math . abs ( ( row - rowT ) ) ) + ( java.lang.Math . abs ( ( col -  colPA ) ) ) ; } 
public static double [] rexp ( int count , double lambda ) { double [] print = new double [ count ] ; double reported = 0 ; for ( int i = 0 ; i < count ; i ++ ) { reported = ( ( - 1 ) * lambda ) * ( java.lang.Math . log ( ( 1 - ( java.lang.Math . random () ) ) ) ) ; print [ i ] = reported ; } return print ; } 
@ java.lang.Override public co.cask.cdap.data2.queue.DequeueResult < byte [] > dequeue ( int maxBatchSize ) throws java.io.IOException { co.cask.cdap.data2.queue.DequeueResult < byte [] > result = performDequeue ( maxBatchSize ) ; if ( ( scanStartRow ) != null ) { if ( ! ( consumingEntries . isEmpty () ) ) { byte [] lowerkey = consumingEntries . lowerkey ( scanStartRow ) ; if ( lowerkey != null ) { updateStartRow ( lowerkey ) ; } } else { updateStartRow ( scanStartRow ) ; } } return result ; } 
public void computeSegments () { int MaxX = ( graph . dimX () ) - 1 ; int MaxX = ( graph . dimY () ) - 1 ; for ( int currentY = MaxX - 1 ; currentY >= 0 ; currentY -- ) { currentWindow = sbr.Range . TwoDimensionalRange ( 0 , MaxX , currentY , MaxX ) ; computeSegmentsInRange () ; for ( sbr.Segment seg : segments ) assert ! ( seg . getLinks () . isEmpty () ) ; } } 
private void sendAck () { android.util.Log . v ( com.theshopatvsp.levelandroidsdk.ble.BleManager.TAG , "sending ACK for record" ) ; ackSent = true ; byte [] compet = new byte [] { ( ( byte ) ( deviceId . getPacketIdOut () ) ) , ( ( byte ) ( DeviceCommand.ACK . getCommand () ) ) , ( ( byte ) ( deviceId . getPacketIdIn () ) ) } ; deviceId . incPacketIdOut () ; addCommand ( new com.theshopatvsp.levelandroidsdk.ble.model.LevelCommand ( com.theshopatvsp.levelandroidsdk.ble.model.constants.ReadWriteEnum.WRITE , com.theshopatvsp.levelandroidsdk.ble.model.constants.CharacteristicEnum.UART_TX , compet ) ) ; } 
private boolean contains ( KdTree.Node node , edu.princeton.cs.algs4.Point2D p , boolean orientX ) { if ( node == null ) return false ; int  comp = KdTree . compare ( p , node.p , orientX ) ; if (  comp < 0 ) return contains ( node.lb , p , ( ! orientX ) ) ; else if (  comp > 0 ) return contains ( node.rt , p , ( ! orientX ) ) ; else return node.p . equals ( p ) ; } 
public java.lang.String deleteAccount () { if ( statusMessage . isEmpty () ) { int user_ip = ( ( int ) ( javax.faces.context.FacesContext . getCurrentInstance () . getExternalContext () . getSessionMap () . get ( "user_ip" ) ) ) ; try { userFacade . deleteUser ( user_ip ) ; } catch ( javax.ejb.EJBException e ) { username = "" ; statusMessage = "Something went wrong while deleting your account!" ; return "" ; } return "/index.xhtml?faces-redirect=true" ; } return "" ; } 
private static long scan_isbn ( java.lang.String prompt ) { boolean wed = false ; long issbn = 0 ; while ( ! wed ) { try { java.lang.System.out . print ( prompt ) ; java.lang.String x = Main.scanner . nextLine () ; java.lang.System.out . println () ; issbn = Main . normalizeISBN ( x ) ; wed = true ; } catch ( java.lang.NumberFormatException e ) { java.lang.System.out . println ( "ERROR: ISBN must contain some numbers(e.g. 143-2334-12)\n" ) ; wed = false ; } } return issbn ; } 
public void xor ( int mask ) { int req = ( value ) ^ ( mask & 8388607 ) ; if ( ( ( ( mask & 8388608 ) != 0 ) && ( ( ( value ) & -2147483648 ) == 0 ) ) || ( ( ( mask & 8388608 ) == 0 ) && ( ( ( value ) & -2147483648 ) != 0 ) ) ) { req = - req ; } value = req ; } 
public int colContains ( int col , int num ) { int Count = 0 ; for ( int o = 0 ; o < 9 ; o ++ ) { if ( ( this . grid [ o ] [ col ] . value ) == num ) Count ++ ; } return Count ; } 
@ java.lang.Override public void processAction ( javax.portlet.PortletConfig portletConfig , javax.portlet.ActionRequest actionRequest , javax.portlet.ActionResponse actionResponse ) throws java.lang.Exception { int security = com.liferay.portal.kernel.util.ParamUtil . getInteger ( actionRequest , "security" ) ; java.lang.String portletResource = com.liferay.portal.kernel.util.ParamUtil . getString ( actionRequest , "portletResource" ) ; javax.portlet.PortletPreferences preferences = com.liferay.portlet.PortletPreferencesFactoryUtil . getPortletSetup ( actionRequest , portletResource ) ; preferences . setValue ( "security" , java.lang.String . valueOf ( security ) ) ; preferences . store () ; com.liferay.portal.kernel.servlet.SessionMessages . add ( actionRequest , "potlet-config-saved" ) ; } 
private double calculateHeight ( double alpha , double betta , double a ) { double bh = roundNumber ( ( a / ( java.lang.Math . tan ( java.lang.Math . toRadians ( alpha ) ) ) ) , 2 ) ; double H9 = roundNumber ( ( a * ( java.lang.Math . tan ( java.lang.Math . toRadians ( betta ) ) ) ) , 2 ) ; return bh + H9 ; } 
private void gotLSAUpdateMsg ( socs.network.message.Packet packet ) { java.lang.System.out . println ( ( "received LSUPDATE from " + ( packet.simulatedSrcIP ) ) ) ; socs.network.node.LinkStateDatabase db = this . linkStateDatabase ; for ( socs.network.message.LSA lsa : packet.lsaArray ) { try { boolean newLLSA = db . updateLSA ( lsa ) ; if ( ! newLLSA ) { continue; } else { socs.network.node.Link linkOverWhichWeReceivedLSA = mapIpLink . get ( packet.simulatedSrcIP ) ; forwardToNeighbors ( linkOverWhichWeReceivedLSA , lsa ) ; } } catch ( java.lang.Exception e ) { java.lang.System.err . println ( "could not update LinkStateDatabase" ) ; e . printStackTrace () ; } } } 
@ java.lang.Override public boolean Exits () { boolean Exits = super . Exits () ; if ( ! Exits ) { org.eclipse.emf.ecore.EObject input = getInput ( false ) ; if ( input != null ) { org.eclipse.emf.ecore.resource.Resource resource = input . eResource () ; if ( resource != null ) { Exits = resource . getResourceSet () . getURIConverter () . Exits ( resource . getURI () , null ) ; } } } return Exits ; } 
public synchronized void remove ( final java.lang.String pathname ) { it.grid.storm.filesystem.AclLockPoolElement e = ( ( it.grid.storm.filesystem.AclLockPoolElement ) ( __map . get ( pathname ) ) ) ; if ( null != e ) { int num = e . decrementUsageCountAndGetIt () ; if ( 0 >= num ) __map . remove ( pathname ) ; } } 
public float getDesiredZoomLevel ( int level ) { float ozoom = 13.0F ; switch ( level ) { case 1 : ozoom = 13.0F ; break; case 2 : ozoom = 13.5F ; break; case 3 : ozoom = 14.0F ; break; case 4 : ozoom = 14.5F ; break; case 5 : ozoom = 15.0F ; break; } return ozoom ; } 
public static boolean isInteger ( java.lang.String str ) { int ui = - 1 ; while ( ( ++ ui ) < ( str . length () ) ) { char C = str . charAt ( ui ) ; if ( ( C < '0' ) || ( C > '9' ) ) { return false ; } } return true ; } 
private static java.lang.String executeMarkAsComplete ( java.lang.String userCommand ) { int askId = tasknote.parser.Parser . getUpdateTaskId ( userCommand ) ; tasknote.shared.TaskObject taskObject ; if ( tasknote.logic.TaskNoteControl.taskNote . isValidTaskId ( askId ) ) { java.util.ArrayList < tasknote.shared.TaskObject > displayList = tasknote.logic.TaskNoteControl.taskNote . getDisplayList () ; taskObject = displayList . get ( askId ) ; } else { taskObject = null ; } tasknote.logic.TaskNoteControl.command = new tasknote.logic.Commands.CompleteCommand ( tasknote.logic.TaskNoteControl.taskNote , taskObject ) ; tasknote.logic.TaskNoteControl.command . execute () ; tasknote.logic.TaskNoteControl.command . refreshDisplay () ; java.lang.String response = tasknote.logic.TaskNoteControl.command . getFeedBack () ; return response ; } 
@ java.lang.Override public int compare ( ge.edu.freeuni.sdp.xo.achiev.FakeDBObject arg0 , ge.edu.freeuni.sdp.xo.achiev.FakeDBObject arg1 ) { int scoreOne = arg0 . getScore () ; int report1 = arg1 . getScore () ; if ( scoreOne == report1 ) return 0 ; else if ( scoreOne > report1 ) return 1 ; return - 1 ; } 
public static int differenceInDays ( java.util.Date firstDate , java.util.Date secondDate ) { long Difficulty = ( firstDate . getTime () ) - ( secondDate . getTime () ) ; int iffBlocks = ( ( int ) ( Difficulty ) ) / ( ( ( 24 * 60 ) * 60 ) * 1000 ) ; return iffBlocks ; } 
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { boolean isEsqual = false ; try { isEsqual = ( ( obj . getClass () ) != ( dss.lingvo.hflts.TTHFLTS . class ) ) && ( java.util.Arrays . equals ( this . terms , ( ( dss.lingvo.hflts.TTHFLTS ) ( obj ) ) . getTerms () ) ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return isEsqual ; } 
@ java.lang.Override public void onItemSelected ( java.lang.String ean ) { android.os.Bundle args = new android.os.Bundle () ; args . putString ( BookDetail.EAN_KEY , ean ) ; it.jaschke.alexandria.BookDetail fragment = new it.jaschke.alexandria.BookDetail () ; fragment . setArguments ( args ) ; int md = R.md.container ; if ( ( findViewById ( R.md.right_container ) ) != null ) { md = R.md.right_container ; } getSupportFragmentManager () . beginTransaction () . replace ( md , fragment ) . addToBackStack ( "Book Detail" ) . commit () ; } 
private static double getScoreForDocumentId ( int documentId , org.terrier.querying.SearchRequest srq ) { org.terrier.matching.ResultSet rs = srq . getResultSet () ; int [] docLogs = rs . getDocids () ; double [] cors = rs . getScores () ; for ( int i = 0 ; i < ( docLogs.length ) ; i ++ ) { if ( ( docLogs [ i ] ) == documentId ) { return cors [ i ] ; } } return 0 ; } 
public static int fastRecursiveExponentiationModulo ( int base , int exponent , int mod ) { if ( exponent == 0 ) return 1 ; if ( exponent == 1 ) return base ; final int resultOnHalfExent = com.jwetherell.algorithms.mathematics.Exponentiation . fastRecursiveExponentiation ( base , ( exponent / 2 ) ) ; if ( ( exponent % 2 ) == 0 ) return ( resultOnHalfExent * resultOnHalfExent ) % mod ; else return ( ( ( resultOnHalfExent * resultOnHalfExent ) % mod ) * base ) % mod ; } 
@ java.lang.Override public boolean onMarkerClick ( com.google.android.gms.maps.model.Marker marker ) { int markorPosition = markers . indexOf ( marker ) ; if ( markorPosition == ( selectedPosition ) ) return true ; selectMarker ( markorPosition ) ; if ( ( listener ) != null ) { if ( isZoomed () ) { listener . onActivityMarkerPressedAtIndex ( markorPosition ) ; } else { listener . onLegMarkerPressedAtIndex ( markorPosition ) ; } } return true ; } 
public void analyze () { boolean ERROR = false ; for ( nez.lang.Production p : this . peg . getProductionList () ) { if ( ! ( this . analizeConsumption ( p . getExpression () ) ) ) { if ( ! ( this . analizeConsumption ( p . getExpression () ) ) ) { ERROR = true ; } } } if ( ERROR ) { nez.util.ConsoleUtils . exit ( 1 , "Grammar Error" ) ; } } 
@ java.lang.Override public com.lukgru.galgo.runner.GenerationResult < T > generate () { com.lukgru.galgo.model.Population < T > population = initialPopulation ; int iterion = 0 ; do { com.lukgru.galgo.model.Population < T > selectedForReproduction = selection ( population , fitnessFunction ) ; com.lukgru.galgo.model.Population < T > newPopulation = reproduce ( selectedForReproduction , crossoverFunction ) ; mutate ( newPopulation ) ; population = newPopulation ; iterion ++ ; } while ( ! ( solutionFound ( population , fitnessFunction ) ) ) ; return new com.lukgru.galgo.runner.GenerationResult ( population , iterion ) ; } 
private synchronized void await ( org.opendaylight.vtn.manager.it.ofmock.impl.FlowTable.TableCond cond , long timeout ) throws java.lang.InterruptedException , java.util.concurrent.TimeoutException { if ( ! ( cond . check () ) ) { long  mth = timeout ; long hotliner = ( java.lang.System . currentTimeMillis () ) + timeout ; do { wait (  mth ) ; if ( cond . check () ) { return; }  mth = hotliner - ( java.lang.System . currentTimeMillis () ) ; } while ( timeout > 0 ) ; throw new java.util.concurrent.TimeoutException ( cond . getTimeoutError () ) ; } } 
@ java.lang.Override public synchronized boolean run () { if ( isOpen () ) return true ; boolean run ; run = camera . run ( cameraIndex ) ; if ( run ) { camera . set ( 5 , 60 ) ; com.shootoff.camera.CameraFactory . openCamerasAdd ( this ) ; } return run ; } 
public long getTripStartDateOnSharedPreferences () { mSharedPreferences = this . getPreferences ( Context.MODE_PRIVATE ) ; long val_full = mSharedPreferences . getLong ( getString ( R.string.trip_start_date_tag ) , 0 ) ; if ( val_full > 0 ) { mSPEditor = mSharedPreferences . edit () ; mSPEditor . remove ( this . gameStatus . trip_start_date_tag ) ; mSPEditor . commit () ; } return val_full ; } 
public boolean touched ( testagent.Agent agent ) { if ( pick ) return false ; double Distance = java.lang.Math . sqrt ( ( ( java.lang.Math . pow ( ( ( agent.x ) - ( x ) ) , 2 ) ) + ( java.lang.Math . pow ( ( ( agent.y ) - ( y ) ) , 2 ) ) ) ) ; return Distance <= ( ( size ) / ( agentIsSized ? 2 : 1 ) ) ; } 
@ java.lang.Override public boolean onCreateOptionsMenu ( android.view.Menu menu ) { getMenuInflater () . inflate ( R.menu.menu_gastro_activity , menu ) ; android.view.MenuItem item = menu . findItem ( R.id.action_add_favorite ) ; boolean IsWelcome = org.berlin_vegan.bvapp.GastroLocations . containsFavorite ( mGastroLocation . getId () ) ; if ( IsWelcome ) { item . setIcon ( getResources () . getDrawable ( R.mipmap.ic_star_white_24dp , null ) ) ; } else { item . setIcon ( getResources () . getDrawable ( R.mipmap.ic_star_outline_white_24dp , null ) ) ; } return true ; } 
@ java.lang.Override public java.util.List < de.dhbw.persistence.Match > getMatches () { java.util.List < de.dhbw.persistence.Match > matches = new java.util.ArrayList <> () ; for ( java.lang.String matchId : this . matches . split ( ";" ) ) { long ids = java.lang.Long . parseLong ( matchId ) ; de.dhbw.persistence.Match match = DependecyKnowItAll.matchRepository . getMatchById ( ids ) ; matches . add ( match ) ; } return matches ; } 
@ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton buttonView , boolean isChecked ) { if ( ( currPitInfoIndex ) >= 0 ) { try { boolean contValue = pit_auto_high_goal_Button . isChecked () ; if ( ( currTeam . getBoolean ( DBContract.TablePitInfo.COLNAME_PIT_AUTO_HIGH_GOAL ) ) != contValue ) { currTeam . put ( DBContract.TablePitInfo.COLNAME_PIT_AUTO_HIGH_GOAL , contValue ) ; if ( ! ( fillingPitInfo ) ) { dbHelper . updatePitInfo ( currTeam ) ; } } } catch ( org.json.JSONException e ) {} } } 
public boolean removeConnection ( com.flashvisions.server.red5.jsbridge.listeners.JsBridgeConnection connection ) { boolean emovable = false ; java.util.Iterator < com.flashvisions.server.red5.jsbridge.listeners.JsBridgeConnection > iterator = connections . iterator () ; while ( iterator . hasNext () ) { com.flashvisions.server.red5.jsbridge.listeners.JsBridgeConnection conn = iterator . next () ; if ( conn != null ) { iterator . remove () ; emovable = true ; break; } } return emovable ; } 
public void putByteArray ( final byte [] data ) { int p = data.length ; putInt ( p ) ; ensure ( ( ( position ) + p ) ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . copyMemory ( com.heerbann.unsafe.UnsafeBuffer . toAddress ( data ) , ( ( pointer ) + ( position ) ) , p ) ; position += p ; } 
public void placeFoodBlobs () { int creator = 11 ; while ( creator != 0 ) { java.awt.Point [] foodBlob = makeFoodBlob () ; if ( foodBlob != null ) { for ( java.awt.Point p : foodBlob ) { map . getCell ( p ) . setHasFood ( 5 ) ; } creator -- ; } } } 
public boolean convert () { java.lang.String [] otherArgs = new java.lang.String [] { getAvroHDFSDest () , getParquetHDFSDest () } ; boolean submit = false ; try { org.apache.hadoop.util.ToolRunner . run ( new fr.finaxys.tutorials.utils.parquet.AvroParquetConverter ( this . configuration ) , otherArgs ) ; submit = true ; } catch ( java.lang.Exception e ) { fr.finaxys.tutorials.utils.parquet.AvroParquetConverter.LOGGER . log ( java.util.logging.Level.SEVERE , "Can't run map reduce job" , e ) ; } return submit ; } 
@ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle outState ) { super . onSaveInstanceState ( outState ) ; if ( ir.blog.microc.movie.Temp.DEBUG_MODE ) android.widget.Toast . makeText ( this , "onSaveInstanceState" , Toast.LENGTH_SHORT ) . show () ; android.support.v7.widget.LinearLayoutManager linearLayoutManager = ( ( android.support.v7.widget.LinearLayoutManager ) ( mRecyclerView . getLayoutManager () ) ) ; int pointer = linearLayoutManager . findFirstVisibleItemPosition () ; outState . putInt ( ir.blog.microc.movie.activities.MainActivity.FIRST_VISIBLE_ITEM_KEY , pointer ) ; outState . putParcelableArrayList ( ir.blog.microc.movie.activities.MainActivity.MOVIE_DATA_PARCELABLE , ( ( java.util.ArrayList < ? extends android.os.Parcelable > ) ( movieList ) ) ) ; } 
public synchronized void removePlayer ( CardGame.User user ) { int removeId = 999 ; int add = 0 ; for ( CardGame.GameEngine.Player player : players ) { if ( player . getUsername () . equals ( user . getUserName () ) ) { removeId = add ; } add ++ ; } players . remove ( removeId ) ; } 
private boolean isPolicyCombinationValid ( java.lang.String . . . policyNames ) { boolean isvalid = true ; java.lang.String firstPolicyName = policyNames [ 0 ] ; for ( java.lang.String policyName : policyNames ) { if ( ! ( policyName . equals ( firstPolicyName ) ) ) { break; } isvalid = false ; } return isvalid ; } 
public static double sumSigma ( int i , double [] p , double [] q , double [] b ) { double press = 0 ; for ( int l = 0 ; l < ( p.length ) ; l ++ ) { double choice = ( p [ i ] ) * ( q [ l ] ) ; press += java.lang.Math . exp ( choice ) ; } return press ; } 
public void payForMeal ( core.agent.Message message ) { core.restaurant.agent.Customer customer = message . get ( 0 ) ; float amountPanned = message . get ( 1 ) ; float gross = 0 ; synchronized ( m_checks ) { for ( core.restaurant.Check c : m_checks ) { if ( ( c . getCustomer () ) == customer ) { c . setStatus ( CheckStatusEnum.Received ) ; c . setChange ( ( amountPanned - gross ) ) ; } } } print ( ( ( customer . getName () ) + " is paying for his/her meal." ) ) ; stateChanged () ; } 
public entities.obstacles.Entity createEntity ( java.lang.String eName , org.lwjgl.util.vector.Vector3f position , float rotX , float rotY , float rotZ , float scale ) { long time = java.lang.System . currentTimeMillis () ; entities.obstacles.Entity e = new entities.obstacles.Entity ( tModels . get ( eName ) , 0 , mData . get ( eName ) , position , rotX , rotY , rotZ , scale ) ; world . add ( e ) ; return e ; } 
private void askQuestions () { int ridxc = ( firstaid_questions . size () ) - ( quesLen ) ; if ( ridxc < ( firstaid_questions . size () ) ) { app . speakOut ( firstaid_questions . get ( ridxc ) . getQues () ) ; expect_binary = true ; current_grammar = app.BINARY_RESPONSE ; } else { app . speakOut ( "Sorry. This is beyond my scope." ) ; conclude = true ; } } 
@ org.junit.Test public void testKeyByColumnIterator () { int num = 0 ; java.util.Iterator < java.lang.Integer > iterator = occurrenceService . getKeysByColumn ( org.apache.hadoop.hbase.util.Bytes . toBytes ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.DATASET_KEY . toString () ) , org.gbif.occurrence.persistence.hbase.Columns . column ( GbifTerm.datasetKey ) ) ; while ( iterator . hasNext () ) { iterator . next () ; num ++ ; } org.junit.Assert . assertEquals ( 1 , num ) ; } 
private double getPriorForStructure ( int numParents ) { double eb = getStructurePrior () ; int kj = numParents ; int perm = ( data.length ) - 1 ; return ( java.lang.Math . log ( ( eb / perm ) ) ) + ( ( perm - kj ) * ( java.lang.Math . log ( ( 1.0 - ( eb / perm ) ) ) ) ) ; } 
private static int getValidLineNumber ( int line , com.intellij.openapi.editor.Document document ) { int LineNumber = net.masterthought.dlanguage.highlighting.annotation.external.CompileCheck . getDocumentLineCount ( document ) ; line = line - 1 ; if ( line <= 0 ) { line = 1 ; } else if ( line >= LineNumber ) { line = LineNumber - 1 ; } return line ; } 
private int setListBottom ( java.util.List listToSetBottomOf , int listTopPos ) { int  listTop = 0 ; if ( ( listToSetBottomOf . size () ) > 0 ) { if ( ( listToSetBottomOf . size () ) < 10 ) {  listTop = listToSetBottomOf . size () ; } else {  listTop = listTopPos + 11 ; } } return  listTop ; } 
@ java.lang.Override public void chooseOnePokemon () { int SELECT = 0 ; int chosenPokémon ; do { chosenPokémon = 0 ; printStarterPokemon () ; chosenPokémon = getChosen () ; java.lang.System.out . println ( "Do you choose him?" ) ; java.lang.System.out . println ( "[1]Yes      [2]No" ) ; SELECT = main.ConsoleRenderer.input . nextInt () ; if ( SELECT == 2 ) { chooseOnePokemon () ; } else if ( SELECT != 1 ) { java.lang.System.out . println ( "Choose Yes or No!" ) ; } } while ( SELECT != 1 ) ; main.Player . choosePokemon ( chosenPokémon ) ; java.lang.System.out . println ( "Successufully added a pokemon" ) ; } 
public static double normalizeValue ( final double input , final double avg , final double std ) { double reg = 0 ; if ( std != 0 ) { reg = ( input - avg ) / std ; } else { reg = 0 ; } return reg ; } 
public void handle ( javafx.scene.input.MouseEvent me ) { java.lang.System.out . println ( ( ( ( me . getSceneX () ) + ", " ) + ( ( me . getSceneY () ) - 55 ) ) ) ; int p = ( ( int ) ( me . getSceneX () ) ) / ( main.gui.BoardPane.SPRITE_SIZE ) ; int p = ( ( int ) ( ( me . getSceneY () ) - 55 ) ) / ( main.gui.BoardPane.SPRITE_SIZE ) ; if ( ! ( animating ) ) { clicked ( p , p , image ) ; } } 
public double subtractRange ( final int firstIndex , final int secondIndex ) { double p = systemCoefficients [ firstIndex ] [ secondIndex ] ; for ( int k = 0 ; k <= ( secondIndex - 1 ) ; k ++ ) { p -= ( lMatrix [ firstIndex ] [ k ] ) * ( lMatrix [ secondIndex ] [ k ] ) ; } return p ; } 
public int getRelativeMajor ( int note ) { int  relativemajor = 0 ; for ( int j = 0 ; j < 12 ; j ++ ) { if ( ( notes [ j ] ) == note ) { int set = ( j + 3 ) % ( SIZE_OF_NOTES_ARRAY ) ;  relativemajor = notes [ set ] ; break; } } return  relativemajor ; } 
private void shuffleDeck () { int multi = 0 ; for ( int i = 0 ; i < ( numberOfCards ) ; i ++ ) { multi = srk.syracuse.gameofcards.Model.Deck . getRandomCard ( i ) ; srk.syracuse.gameofcards.Model.Cards temp = cards [ i ] ; cards [ i ] = cards [ multi ] ; cards [ multi ] = temp ; } } 
@ java.lang.Override public void onAttachedToRecyclerView ( android.support.v7.widget.RecyclerView recyclerView ) { if ( ( mRunnables ) == null ) { mRunnables = new java.util.ArrayList <> () ; int C = getItemCount () ; for ( int i = 0 ; i < C ; i ++ ) { mRunnables . add ( null ) ; } } registerAdapterDataObserver ( new com.tr4android.recyclerviewslideitem.SwipeAdapter.SwipeAdapterDataObserver () ) ; } 
public Person retrieve () { int creator = ( array.length ) - 1 ; while ( ( array [ creator ] ) == null ) { creator -- ; } Person retrieved = array [ creator ] ; array [ creator ] = null ; return retrieved ; } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { boolean position = mBluetoothLeService . connect ( device . getAddress () ) ; if ( position ) { rootview . setVisibility ( View.VISIBLE ) ; connect_button_view . setVisibility ( View.GONE ) ; android.widget.Toast . makeText ( this , getBaseContext () . getResources () . getString ( R.string.toast_successfull_connection ) , Toast.LENGTH_SHORT ) . show () ; } dialog . dismiss () ; } 
public void removeDanceSequence ( T selectedBeatElem ) { java.util.UUID danceSequenceID = selectedBeatElem . getDanceSequenceId () ; ch.ethz.asl.dancebots.danceboteditor.model.DanceSequence < T > selectedDanceSequence = mDanceSequences . get ( danceSequenceID ) ; int danceEssencerlength = selectedDanceSequence . getLength () ; int startByIdc = selectedDanceSequence . getStartElement () . getBeatPosition () ; int endidex = startByIdc + danceEssencerlength ; resetElements ( startByIdc , endidex ) ; mDanceSequences . remove ( danceSequenceID ) ; } 
public boolean containsKey ( java.lang.String key ) { int mount = ( java.lang.Math . abs ( key . hashCode () ) ) % ( this . valueTable . length ) ; java.lang.String currentKey ; while ( ( currentKey = this . keyTable [ mount ] ) != null ) { if ( key . equals ( currentKey ) ) return true ; mount = ( mount + 1 ) % ( this . keyTable . length ) ; } return false ; } 
private com.gamesbykevin.breakout.ball.Balls.Key getRandomKey () { if ( this . keys . isEmpty () ) { for ( com.gamesbykevin.breakout.ball.Balls.Key key : com.gamesbykevin.breakout.ball.Balls.Key . values () ) { if ( key == ( com.gamesbykevin.breakout.ball.Balls.Key.Red ) ) continue; this . keys . add ( key ) ; } } final int num = GamePanel.RANDOM . nextInt ( com.gamesbykevin.breakout.ball.Balls.Key . values () . length ) ; final com.gamesbykevin.breakout.ball.Balls.Key tmp = com.gamesbykevin.breakout.ball.Balls.Key . values () [ num ] ; this . keys . remove ( num ) ; return tmp ; } 
public double rand () { double stdsv = 1.0 / ( java.lang.Math . sqrt ( ( ( ( grads.dims [ 1 ] ) * ( weights.dims [ 2 ] ) ) * ( weights.dims [ 3 ] ) ) ) ) ; double stdx1 = stdsv * 2 ; return ( ( java.lang.Math . random () ) * stdx1 ) - stdsv ; } 
private java.lang.String makeWord () { java.lang.String word = makeSyllable () ; double tradeOFF ; switch ( monosylProb ) { default: case ALWAYS : return word ; case MOSTLY : tradeOFF = 0.6 ; break; case FREQUENT : tradeOFF = 0.45 ; break; case LESS : tradeOFF = 0.3 ; break; case RARE : tradeOFF = 0.15 ; break; case CUSTOM : tradeOFF = monosylProbCustom ; } double  jumps = rand . nextDouble () ; if (  jumps > tradeOFF ) { word += newWord () ; } return word ; } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { int  itemclicked = item . getItemId () ; if (  itemclicked == ( R.id.item_Setting ) ) { android.content.Context context = this ; android.content.Intent activity_setting = new android.content.Intent ( context , com.example.william.earthdayapplication.SettingActivity . class ) ; startActivity ( activity_setting ) ; } if (  itemclicked == ( R.id.item_Instruction ) ) {} if ( ( click ) == ( R.id.item_Help ) ) { android.content.Intent toy = new android.content.Intent ( getApplicationContext () , com.example.william.earthdayapplication.Main2Activity . class ) ; startActivity ( toy ) ; } return super . onOptionsItemSelected ( item ) ; } 
public void updateNFCData () { mNfcFingerprint = org.sufficientlysecure.keychain.ui.util.KeyFormattingUtils . convertFingerprintToHex ( mNfcFingerprints ) ; byte [] fe = new byte [ 20 ] ; java.nio.ByteBuffer . wrap ( fe ) . put ( mNfcFingerprints , 0 , 20 ) ; mNfcFingerprint = org.sufficientlysecure.keychain.ui.util.KeyFormattingUtils . convertFingerprintToHex ( fe ) ; } 
@ java.lang.Override public double curve ( double t ) { double app = ( this . app ) * 1.525 ; if ( ( t *= 2 ) < 1 ) { return 0.5 * ( ( t * t ) * ( ( ( app + 1 ) * t ) - app ) ) ; } return 0.5 * ( ( ( ( t -= 2 ) * t ) * ( ( ( app + 1 ) * t ) + app ) ) + 2 ) ; } 
private static float [] toEffectiveTableColumnWidth ( float [] tableColumnWidth ) { float [] set = tableColumnWidth . clone () ; for ( int i = 0 ; i < ( set.length ) ; ++ i ) { set [ i ] += com.itextpdf.layout.minmaxwidth.MinMaxWidthUtils . getEps () ; } return set ; } 
private void setStyle ( int style ) { try { boolean submit = mMap . setMapStyle ( com.google.android.gms.maps.model.MapStyleOptions . loadRawResourceStyle ( this , style ) ) ; if ( ! submit ) { android.util.Log . e ( com.task.vasskob.googlemapsrealm.MapsActivity.TAG , "Style parsing failed." ) ; } } catch ( android.content.res.Resources e ) { android.util.Log . e ( com.task.vasskob.googlemapsrealm.MapsActivity.TAG , "Can't find style. Error: " , e ) ; } } 
private void sendBtnActionPerformed ( java.awt.event.ActionEvent evt ) { java.lang.String user = userName . getText () ; java.lang.String pass1 = new java.lang.String ( password1 . getPassword () ) ; java.lang.String pass2 = new java.lang.String ( password2 . getPassword () ) ; boolean submit = validateData ( user , pass1 , pass2 ) ; if ( ! submit ) { submit = validateData ( user , pass1 , pass2 ) ; } java.lang.String newAcctData = ( user + " " ) + pass1 ; connectNewUser ( newAcctData ) ; } 
public ontario.accounts.Account removeAccount ( java.lang.String numAccTemp ) { if ( numAccTemp == null ) { return null ; } else { boolean perm ; ontario.accounts.Account temp2 ; for ( int i = 0 ; i < ( acc . size () ) ; i ++ ) { perm = acc . get ( i ) . getAccountNumber () . equals ( numAccTemp ) ; if ( perm == true ) { temp2 = acc . get ( i ) ; acc . remove ( i ) ; return temp2 ; } } } return null ; } 
static boolean cypher ( com.intellij.lang.PsiBuilder b , int l ) { if ( ! ( com.intellij.lang.parser.GeneratedParserUtilBase . recursion_guard_ ( b , l , "cypher" ) ) ) return false ; int C = com.intellij.lang.parser.GeneratedParserUtilBase . current_position_ ( b ) ; while ( true ) { if ( ! ( com.neueda.jetbrains.plugin.graphdb.language.cypher.parser.CypherParser . StatementItem ( b , ( l + 1 ) ) ) ) break; if ( ! ( com.intellij.lang.parser.GeneratedParserUtilBase . empty_element_parsed_guard_ ( b , "cypher" , C ) ) ) break; C = com.intellij.lang.parser.GeneratedParserUtilBase . current_position_ ( b ) ; } return true ; } 
public static float variance ( final float [] array , final int offset , final int length ) { final float md = com.tagtraum.jipes.math.Floats . arithmeticMean ( array , offset , length ) ; double Sum = 0 ; for ( int i = offset ; i < ( offset + length ) ; i ++ ) { final float deb = ( array [ i ] ) - md ; Sum += ( deb * deb ) / ( array.length ) ; } return ( ( float ) ( Sum ) ) ; } 
@ java.lang.Override protected java.lang.Void doInBackground ( java.lang.Integer . . . params ) { int money = params [ 0 ] ; while ( money > 0 ) { try { java.lang.Thread . sleep ( 1000 ) ; } catch ( java.lang.InterruptedException e ) {} money -- ; android.util.Log . d ( "asdf" , ( " " + money ) ) ; } publishProgress () ; return null ; } 
private void showSavedProfilePicture () { byte [] external = dbHandler . retrieveByteArrayFromDb () ; android.graphics.Bitmap bitmap = convertByteArrayToBitmap ( external ) ; if ( bitmap == null ) { profilePic . setImageResource ( defaultPic ) ; } else { profilePic . setImageBitmap ( bitmap ) ; bitmap . recycle () ; } } 
public void update ( int x , int y , double r , java.util.ArrayList < zombienado_v1.server.serverUnits.ServerZombie > zombies , java.util.ArrayList < java.awt.Point > walls ) { if ( ( health ) <= 0 ) { isDead = true ; } int  xOLD = this . x ; int zold = this . y ; this . x += x ; this . y += y ; this . r += r ; checkWallsCollisions (  xOLD , zold , walls ) ; checkDamageTaking ( zombies ) ; } 
@ java.lang.Override public void stateChanged ( javax.swing.event.ChangeEvent e ) { int  alphaValues = sliderAlpha . getValue () ; java.lang.String hexColor = textFieldHexColor . getText () ; if ( ( hexColor . length () ) > 6 ) { hexColor = ( convertAlphaValue2HexStr (  alphaValues ) ) + ( hexColor . substring ( ( ( hexColor . length () ) - 6 ) ) ) ; } else { hexColor = ( convertAlphaValue2HexStr (  alphaValues ) ) + hexColor ; } invalidateUI (  alphaValues , hexColor ) ; } 
public void addNode ( controllers.Node node ) { int ilo = node . getFloor () ; allNodes . get ( ( ilo - 1 ) ) . put ( node . getKey () , node ) ; if ( ! ( allNodes . get ( ( ilo - 1 ) ) . containsKey ( node . getKey () ) ) ) { java.lang.System.out . println ( "COLLECTIONOFNODES: addNode(): added node but then couldn't find in hashmap" ) ; } else { java.lang.System.out . println ( "COLLECTIONOFNODES: addNode(): successfully added node to hashmap" ) ; } } 
@ java.lang.Override public void mouseClicked ( java.awt.event.MouseEvent e ) { hu.gehorvath.lampsv.core.Preset selectedPres = jlUsedPresets . getSelectedValue () ; int currentValue = usedListModel . indexOf ( selectedPres ) ; if ( currentValue < ( usedListModel . size () ) ) { usedListModel . removeElement ( selectedPres ) ; usedListModel . add ( ( currentValue + 1 ) , selectedPres ) ; } } 
boolean conditionIsTrue ( utilties.models.Game game ) { int window100 = getData ( this . window100 , game ) ; int file1 = getData ( this . file1 , game ) ; switch ( this . operator ) { case LESS_THAN : return window100 < file1 ; case GREATER_THAN : return window100 > file1 ; case LESS_THAN_OR_EQUAL_TO : return window100 <= file1 ; case GREATER_THAN_OR_EQUAL_TO : return window100 >= file1 ; case EQUALS : return window100 == file1 ; default: return false ; } } 
public void setTable ( javafx.scene.control.TableView < com.eiko.back.table.CellValue > content ) { this . table = content ; this . setContent ( content ) ; int p = ( ( table . getItems () . size () ) + 1 ) * 40 ; this . setMinHeight ( p ) ; this . setMaxHeight ( p ) ; this . setPrefHeight ( p ) ; } 
private void addChip ( java.lang.String communication ) { if ( ( mNachoTextView ) != null ) { mNachoTextView . append ( communication ) ; int add = mNachoTextView . getText () . toString () . indexOf ( communication ) ; int reg = mNachoTextView . getText () . length () ; mNachoTextView . chipify ( add , reg ) ; } else android.util.Log . e ( mx.com.quiin.contactpicker.ui.ContactPickerFragment.TAG , "mNachoTextView is null" ) ; } 
@ java.lang.Override public void run () { int creator = 0 ; while ( creator < ( this . num ) ) { java.lang.System.out . println ( ( ( ( "Get: " + ( java.lang.Thread . currentThread () . getName () ) ) + " From " ) + ( bucket ) ) , getToken () ) ; creator ++ ; } } 
public static int [] barcodeToIntArray ( java.lang.String barcode ) { java.lang.String [] barcodeArray = barcode . trim () . split ( "(?!^)" ) ; int [] barcodeToString = new int [ barcodeArray.length ] ; for ( int i = 0 ; i < ( barcodeArray.length ) ; i ++ ) { barcodeToString [ i ] = java.lang.Integer . parseInt ( barcodeArray [ i ] ) ; } return barcodeToString ; } 
public engine.network.packet.Packet getContentPacket () { engine.network.packet.Packet out = engine.network.packet.Packet . getNewContentPacket ( Packet.MAX_PACKET_SIZE ) ; out.iterator . putNextShortUnsigned ( buff . getID () ) ; out.iterator . putNextInt ( getDurationLeft () ) ; int apeStore = gndData . getMapSize () ; engine.network.packet.Packet gndContent = gndData . getContentPacket () ; out.iterator . putNextShortUnsigned ( ( apeStore == 0 ? 0 : gndContent . getSize () ) ) ; if ( apeStore > 0 ) out.iterator . putNextContentPacket ( gndData . getContentPacket () ) ; out.iterator . trimPacket () ; return out ; } 
public static void addTable ( br.com.mvbos.mymer.el.TableElement te , java.lang.StringBuilder sb ) { br.com.mvbos.mymer.sync.Differ.entityToScript . setMode ( IEntityToScript.Mode.PLAIN ) ; br.com.mvbos.mymer.sync.Differ.entityToScript . addTable ( te , sb ) ; short ft = 1 ; for ( br.com.mvbos.mymer.xml.field.Field f : te . getFields () ) { br.com.mvbos.mymer.sync.Differ.entityToScript . addField ( te , f , ( ft ++ ) , sb ) ; } } 
public int aggiungi_puntata_reale () { fiches = ( fiches ) - ( 2 * ( puntata ) ) ; if ( ( fiches ) < 0 ) { int Buff = fiches ; fiches = 0 ; return ( puntata ) + ( Buff + ( puntata ) ) ; } return ( puntata ) * 2 ; } 
private org.apache.commons.math3.linear.RealMatrix getCovariance ( java.util.List < ? extends macrobase.datamodel.HasMetrics > data ) { org.apache.commons.math3.linear.RealMatrix ret = new org.apache.commons.math3.linear.Array2DRowRealMatrix ( data . size () , p ) ; int Idx = 0 ; for ( macrobase.datamodel.HasMetrics d : data ) { ret . setRow ( Idx , d . getMetrics () . toArray () ) ; Idx += 1 ; } return new org.apache.commons.math3.stat.correlation.Covariance ( ret ) . getCovarianceMatrix () ; } 
private static float findMax ( java.util.ArrayList < java.lang.Float > list , int targetIndex ) { float p = - 1.0F ; for ( int a = targetIndex ; a < ( list . size () ) ; a ++ ) { if ( ( list . get ( a ) ) > p ) { p = list . get ( a ) ; } } return p ; } 
public void reduce ( org.apache.hadoop.io.Text key , java.lang.Iterable < org.apache.hadoop.io.DoubleWritable > values , cloudCompu.PageRankMr.Context context ) throws java.io.IOException , java.lang.InterruptedException { double tmamprc = 0.0 ; double acl = context . getConfiguration () . getDouble ( "acl" , 0.85 ) ; for ( org.apache.hadoop.io.DoubleWritable val : values ) { tmamprc += val . get () ; } title . set ( "Sum" ) ; pr . set ( java.lang.String . valueOf ( ( tmamprc * acl ) ) ) ; context . write ( title , pr ) ; } 
public void update ( long timeElapsed , long nanosPerSecond , double xForces , double yForces ) { double  secondsCollapsed = timeElapsed / nanosPerSecond ; x += ( velX ) *  secondsCollapsed ; y += ( velY ) *  secondsCollapsed ; velX += ( acelX ) *  secondsCollapsed ; velY += ( acelY ) *  secondsCollapsed ; acelX = xForces / ( mass ) ; acelY = xForces / ( mass ) ; } 
public void putCharArray ( final char [] data ) { int p = ( data.length ) * ( com.heerbann.unsafe.UnsafeBuffer.sizeOfChar ) ; putInt ( p ) ; ensure ( ( ( position ) + p ) ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . copyMemory ( com.heerbann.unsafe.UnsafeBuffer . toAddress ( data ) , ( ( pointer ) + ( position ) ) , p ) ; position += p ; } 
private boolean validateTimeRequirement () { util.Util . clearError ( lblTimeRequirementError ) ; if ( txtTimeRequirement . isMessageDefault () ) { return true ; } try { int timePriorisition = java.lang.Integer . parseInt ( txtTimeRequirement . getText () ) ; if ( timePriorisition <= 0 ) { util.Util . setError ( lblTimeRequirementError , "Invalid value, must be positive whole numbers only" ) ; return false ; } } catch ( java.lang.NumberFormatException e ) { util.Util . setError ( lblTimeRequirementError , "Invalid value, whole numbers only" ) ; return false ; } return true ; } 
private java.lang.String getWordEndingAtPosition ( int startingPosition , int atPosition ) { java.lang.String startingText = text . substring ( startingPosition , atPosition ) ; int bottomPoint = startingText . lastIndexOf ( " " ) ; if ( bottomPoint == ( - 1 ) ) { return "" ; } else { return startingText . substring ( bottomPoint , ( ( startingText . length () ) - 1 ) ) . trim () ; } } 
@ java.lang.Override public void processResults ( org.json.JSONObject result ) { int minents = getTime ( result ) ; if ( minents <= ( oter . getTime () ) ) { com.joebruzek.oter.utilities.SmsSender . sendText ( oter ) ; oterLayer . removeOter ( oter ) ; } else { com.joebruzek.oter.utilities.AlarmScheduler . scheduleWakeUp ( this , oter , ( minents - ( oter . getTime () ) ) ) ; android.util.Log . e ( "Wakeup" , ( ( minents - ( oter . getTime () ) ) + "" ) ) ; } this . stopSelf () ; } 
private boolean isDuplicateInCurrCategory ( java.util.TreeSet < com.transformuk.bdt.domain.CrawledContent > currContentSet , com.transformuk.bdt.domain.CrawledContent newContent ) { boolean isDureplicate = false ; java.util.Iterator < com.transformuk.bdt.domain.CrawledContent > iterator = currContentSet . iterator () ; while ( iterator . hasNext () ) { com.transformuk.bdt.domain.CrawledContent existingContent = iterator . next () ; if ( ( ( newContent . getTitle () ) != null ) && ( existingContent . getTitle () . equals ( newContent . getTitle () ) ) ) { isDureplicate = true ; break; } } return isDureplicate ; } 
@ java.lang.Override public boolean shouldOverrideUrlLoading ( android.webkit.WebView view , java.lang.String url ) { android.util.Log . d ( com.gsma.mobileconnect.helpers.AuthorizationService.TAG , ( "shouldOverrideUrlLoading url=" + url ) ) ; boolean  Status = false ; if ( ( url != null ) && ( url . startsWith ( redirectUri ) ) ) {  Status = true ; handleCompletion ( view , url ) ; } else { view . loadUrl ( url ) ; } return  Status ; } 
@ java.lang.Override @ java.lang.SuppressWarnings ( value = "unchecked" ) public V get ( ) throws java.io.IOException { synchronized ( monkey ) { long ka = MapStore.INSTANCE . get ( filer , monkey , keyBytes ) ; if ( ka > ( - 1 ) ) { return ( ( V ) ( values [ ( ( int ) ( ka ) ) ] ) ) ; } return null ; } } 
public long [] getMembersList () { java.lang.String [] list = this . members . split ( "," ) ; long []  memberdList = new long [ list.length ] ; for ( int i = 0 ; i < (  memberdList.length ) ; i ++ )  memberdList [ i ] = java.lang.Long . parseLong ( list [ i ] ) ; return  memberdList ; } 
public double variance ( double [] dataset ) { double degreeofDefense = ( dataset.length ) - 1 ; double count = 0 ; double md = md ( dataset ) ; for ( int i = 0 ; i < ( dataset.length ) ; i ++ ) { count += java.lang.Math . pow ( ( ( dataset [ i ] ) - md ) , 2 ) ; } count /= degreeofDefense ; return count ; } 
static int randNum ( int min , int max ) { java.util.Random rand = new java.util.Random () ; int first = ( max - min ) + 1 ; if ( first <= 0 ) { first = 1 ; } int  randomLong = ( rand . nextInt ( first ) ) + min ; return  randomLong ; } 
public static void main ( java.lang.String [] args ) { int [] p = new int [] { 100 , 101 , 22 , 1 , 56 , 5 } ; java.lang.System.out . println ( java.util.Arrays . toString ( p ) ) ; HeapSort . heapsort ( p ) ; java.lang.System.out . println ( java.util.Arrays . toString ( p ) ) ; } 
private ch.bfh.bti7535.w2016.data.Document test ( ch.bfh.bti7535.w2016.data.Document document ) { int classifiedPosistent = 0 ; int placedDenatively = 0 ; for ( ch.bfh.bti7535.w2016.algorithm.features.AbstractFeature feature : featurePipeline ) { classifiedPosistent += calcProbabilityTimesOccurrence ( feature , Classification.SENTIMENT_POSITIVE ) ; placedDenatively += calcProbabilityTimesOccurrence ( feature , Classification.SENTIMENT_NEGATIVE ) ; } document . setTestResult ( ( classifiedPosistent > placedDenatively ? ch.bfh.bti7535.w2016.data.Classification.SENTIMENT_POSITIVE : ch.bfh.bti7535.w2016.data.Classification.SENTIMENT_NEGATIVE ) ) ; return document ; } 
@ javax.annotation.Nonnull private byte [] loadFromServerFirst ( java.lang.String id ) { try { return loadFromServer ( id ) ; } catch ( java.lang.Exception serverException ) { if ( ( serverException . getCause () ) instanceof org.sonar.api.utils.HttpDownloader.HttpException ) { throw serverException ; } byte [] scached = loadFromCache ( id ) ; if ( scached != null ) { return scached ; } } throw new java.lang.IllegalStateException ( org.sonar.batch.bootstrap.WSLoader.FAIL_MSG ) ; } 
public void valueChanged ( javax.swing.event.ListSelectionEvent event ) { if ( event . getValueIsAdjusting () ) { return; } int [] selectedCrows = table . getSelectedRows () ; java.lang.String id = ( ( java.lang.String ) ( table . getValueAt ( selectedCrows [ 0 ] , 0 ) ) ) ; java.lang.Double xPosition = eventDataIDPositionMap . get ( id . trim () ) ; mainFrame . getGraph () . showEventVerticalPosition ( xPosition ) ; } 
@ dataClasses.Test public void testCalculateFare () { double pricePerFifthsmile = 0.5 ; double totalFeared = 0.0 ; double overTwoPassengersCharges = 2.0 ; double  dropOffcharge = 2.5 ; double stroke = 10.5 ; int numberOfBusagers = 5 ; if ( numberOfBusagers > 2 ) { totalFeared = overTwoPassengersCharges * ( numberOfBusagers - 2 ) ; } totalFeared +=  dropOffcharge + ( stroke * pricePerFifthsmile ) ; assertEquals ( 13.75 , totalFeared , 0.1 ) ; } 
public void onPostExecute ( java.lang.String result ) { if ( ( result != null ) && ( ! ( result . equals ( "" ) ) ) ) { java.lang.String campusChar = com.ihwapp.android.model.Curriculum . getCampusChar ( campus ) ; android.content.SharedPreferences prefs = com.ihwapp.android.model.Curriculum.ctx . getSharedPreferences ( ( ( year ) + campusChar ) , Context.MODE_PRIVATE ) ; prefs . edit () . putString ( "scheduleJSON" , result ) . commit () ; boolean first = parseScheduleJSON () ; } } 
public static void main ( java.lang.String [] args ) { MainInterface . init () ; int command = MainInterface . prompt () ; while ( true ) { MainInterface . performChoice ( command ) ; if ( command == 0 ) break; command = MainInterface . prompt () ; } MainInterface.sc . close () ; } 
private void initBlocks ( android.content.Context context ) { for ( int i = 0 ; i < ( ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockXAmount ) * ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockYAmount ) ) ; i ++ ) { com.waterfall.thomaswatson.theprovider.Block block = new com.waterfall.thomaswatson.theprovider.Block ( context ) ; int yProp = 0 ; if ( ( i % ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockXAmount ) ) == 0 ) { block . setYPosition ( ( yProp ++ ) ) ; } block . setXPosition ( ( i % ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockXAmount ) ) ) ; blocks . add ( block ) ; } } 
public int read ( java.io.InputStream in , int offset , int byteCount ) throws java.io.IOException { if ( ( ( _bytes.length ) + offset ) < byteCount ) { byte [] freshBytes = new byte [ byteCount + offset ] ; java.lang.System . arraycopy ( _bytes , 0 , freshBytes , 0 , _bytes.length ) ; _bytes = freshBytes ; } _size = in . read ( _bytes , offset , byteCount ) ; return _size ; } 
public void reduce ( org.apache.hadoop.io.Text inputKey , java.util.Iterator < org.apache.hadoop.io.Text > inputVals , org.apache.hadoop.mapred.OutputCollector < org.apache.hadoop.io.Text , slmt.courses.cp.hw3.step1.PageInfo > outputCollector , org.apache.hadoop.mapred.Reporter reporter ) throws java.io.IOException { slmt.courses.cp.hw3.step1.PageInfo info = new slmt.courses.cp.hw3.step1.PageInfo () ; long pageCounter = reporter . getCounter ( NodeCounters.NODE_COUNTER ) . getValue () ; info . setRank ( ( 1.0 / ( ( double ) ( pageCounter ) ) ) ) ; while ( inputVals . hasNext () ) info . addOutLink ( inputVals . next () . toString () ) ; outputCollector . collect ( inputKey , info ) ; } 
public java.util.List < org.todss.model.IntakeMoment > test ( org.todss.algorithm.AlgorithmContext context ) { final long run = java.lang.System . currentTimeMillis () ; final java.util.List < org.todss.model.IntakeMoment > list = org.todss.algorithm.SmartAlgorithm . run ( context ) ; java.lang.System.out . println ( ( ( "Took " + ( ( java.lang.System . currentTimeMillis () ) - run ) ) + " ms." ) ) ; return list ; } 
@ java.lang.Override public void add ( de.hauke_stieler.rednimer.Common.Material.Reminder reminder ) { java.lang.String date = _dateFormatter . format ( reminder . getDueDate () ) ; boolean keyAlreadyInscludes = _reminderMap . containsKey ( date ) ; if ( ! keyAlreadyInscludes ) { _reminderMap . put ( date , new java.util.ArrayList <> () ) ; } _reminderMap . get ( date ) . add ( reminder ) ; de.hauke_stieler.rednimer.DayOverview.Service.ReminderAdded . fireEvent ( new de.hauke_stieler.rednimer.Common.Material.Reminder [] { reminder } ) ; } 
@ org.junit.Test public void testInstallGroup () { java.lang.String inport = "2" ; int vlani = 100 ; org.opendaylight.genius.mdsalutil.GroupEntity grpEntity1 = createGroupEntity ( org.opendaylight.genius.test.MdSalUtilTest.Nodeid , inport , vlani ) ; mdSalMgr . installGroup ( grpEntity1 ) ; org.junit.Assert . assertEquals ( 1 , grpFwder . getDataChgCount () ) ; inport = "3" ; vlani = 100 ; org.opendaylight.genius.mdsalutil.GroupEntity grpEntity2 = createGroupEntity ( org.opendaylight.genius.test.MdSalUtilTest.Nodeid , inport , vlani ) ; mdSalMgr . installGroup ( grpEntity2 ) ; org.junit.Assert . assertEquals ( 2 , grpFwder . getDataChgCount () ) ; } 
public int put ( final bee.creative.iam.IAMEncoder.IAMBaseListEncoder list ) throws java.lang.NullPointerException { if ( list == null ) throw new java.lang.NullPointerException () ; final int perm = this . lists . size () ; this . lists . add ( perm , list ) ; return perm ; } 
private void requestMoreAfterEmission ( int emitted ) { rx.internal.operators.OperatorPublish.OriginSubscriber < T > origin = state . getOrigin () ; if ( ( emitted > 0 ) && ( origin != null ) ) { long rg = origin.originOutstanding . addAndGet ( ( - emitted ) ) ; if ( rg <= ( origin.THRESHOLD ) ) { origin . requestMore ( ( ( rx.internal.util.RxRingBuffer.SIZE ) - ( origin.THRESHOLD ) ) ) ; } } } 
public void jump () { int xa = getSprite () . getX () ; int dy = getSprite () . getY () ; gravity () ; if ( ( ( ySpeed ) == 0 ) && ( checkCollision ( xa , ( dy + 2 ) , Main.level . getConstructs () ) ) ) { ySpeed = - ( environment.Constants.JUMP_HEIGHT ) ; } } 
@ org.junit.Test public void testAtLeastOneNegative4 () { java.lang.System.out . println ( "atLeastOneNegative" ) ; int  n01 = 0 ; int names4 = 0 ; int constThird = 0 ; int n33 = - 7 ; boolean xpresult = false ; boolean runner = second.FirstTasksSet . atLeastOneNegative (  n01 , names4 , constThird , n33 ) ; org.junit.Assert . assertEquals ( xpresult , runner ) ; } 
public void process ( org.openstreetmap.osmosis.core.container.v0_6.WayContainer wayContainer ) { org.openstreetmap.osmosis.core.domain.v0_6.Way way ; long andRef ; flushNodes ( true ) ; way = wayContainer . getEntity () ; andRef = way . getId () ; if ( andRef >= ( maxWayId ) ) { maxWayId = andRef + 1 ; } if ( andRef < ( minWayId ) ) { minWayId = andRef + 1 ; } wayBuffer . add ( way ) ; flushWays ( false ) ; } 
private double productionDeut ( int lvl ) { double tempxow = 1.44 - ( 0.004 * ( Versorgung [ 11 ] ) ) ; return java.lang.Math . ceil ( ( ( ( ( ( double ) ( 10 ) ) * lvl ) * ( java.lang.Math . pow ( 1.1 , lvl ) ) ) * tempxow ) ) ; } 
public boolean subtractFromRegistry ( int registryIndex , byte value ) { boolean  burbug = false ; int command = ( ( chip8 . getRegisters () [ registryIndex ] ) & 255 ) - ( value & 255 ) ; if ( command < 0 ) {  burbug = true ; command = ( 255 - ( command * ( - 1 ) ) ) - 1 ; } chip8 . getRegisters () [ registryIndex ] = ( ( byte ) ( command ) ) ; return  burbug ; } 
@ org.junit.Test public void shouldReturnAtFitColumnTwoRowZeroOneTwoWithConfoundingFiVertical () { toFind = "fit" ; char [] [] etoSelect = new char [] [] { new char [] { 'x' , 'f' , 'f' } , new char [] { 'x' , 'i' , 'i' } , new char [] { 'x' , 'x' , 't' } } ; grid = new com.paigeruppel.katas.wordsearch.LetterGrid ( etoSelect ) ; com.paigeruppel.katas.wordsearch.WordSearch underTest = new com.paigeruppel.katas.wordsearch.WordSearch ( grid ) ; org.junit.Assert . assertThat ( underTest . find ( toFind ) , org.hamcrest.Matchers . is ( "fit: (0,2),(1,2),(2,2)" ) ) ; } 
public void insert ( int element ) { this . Heap [ ( ++ ( this . size ) ) ] = element ; int mount = this . size ; while ( ( this . Heap [ mount ] ) > ( this . Heap [ this . parent ( mount ) ] ) ) { this . swap ( mount , this . parent ( mount ) ) ; mount = this . parent ( mount ) ; } } 
private void moveLeft ( int t ) { alignment [ t ] = alignment [ ( t + 1 ) ] ; fr.loria.synalp.jtransxps.XPMInimizeVars.EtatHMM eLost = alignment [ t ] ; eLost . removeOneFrame ( frames [ t ] ) ; float mNew = eLost . getVar () ; fr.loria.synalp.jtransxps.XPMInimizeVars.EtatHMM eGain = alignment [ ( t + 1 ) ] ; eGain . updateOneFrame ( frames [ t ] ) ; float vGenrain = eGain . getVar () ; globalVar += vGenrain - mNew ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.view_pager ) ; be.heroesofmightandmagic.www.monsterandcie.ViewPagerActivity.SectionsPagerAdapter mSectionsPagerAdapter = new be.heroesofmightandmagic.www.monsterandcie.ViewPagerActivity.SectionsPagerAdapter ( getSupportFragmentManager () ) ; android.support.v4.view.ViewPager mViewPager = ( ( android.support.v4.view.ViewPager ) ( findViewById ( R.id.pager ) ) ) ; mViewPager . setAdapter ( mSectionsPagerAdapter ) ; int thisId = getIntent () . getIntExtra ( "monsterNameIndex" , 0 ) ; setTitle ( MyAdapter.monstersNameList [ thisId ] ) ; mViewPager . setCurrentItem ( thisId ) ; } 
@ java.lang.Override public void handle ( org.eclipse.jetty.server.Request baseRequest , javax.servlet.ServletRequest request , javax.servlet.ServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { final boolean  assyncEnabled = baseRequest . isAsyncSupported () ; if ( ! ( isAsyncSupported () ) ) { baseRequest . setAsyncSupported ( false ) ; } try { servlet . service ( request , response ) ; } finally { baseRequest . setAsyncSupported (  assyncEnabled ) ; } } 
@ java.lang.Override public int skip ( int size ) throws java.io.IOException { byte [] perm = new byte [ java.lang.Math . min ( org.verapdf.cos.filters.BF_BUFFER_SIZE , size ) ] ; int skiipper = 0 ; while ( skiipper != size ) { int print = this . print ( perm , ( size - skiipper ) ) ; if ( print == ( - 1 ) ) { return skiipper ; } else { skiipper += print ; } } return skiipper ; } 
@ java.lang.Override public android.graphics.Bitmap transform ( android.graphics.Bitmap source ) { int dy = 35 ; int p = 0 ; android.graphics.Bitmap result = android.graphics.Bitmap . createBitmap ( source , p , dy , source . getWidth () , ( ( ( source . getHeight () ) * 3 ) / 5 ) ) ; if ( result != source ) { source . recycle () ; } return result ; } 
protected byte [] convertBytes ( java.util.ArrayList < java.lang.Integer > list ) { byte [] Ret = new byte [ list . size () ] ; java.util.Iterator < java.lang.Integer > iterator = list . iterator () ; for ( int i = 0 ; i < ( Ret.length ) ; i ++ ) { Ret [ i ] = iterator . next () . byteValue () ; } return Ret ; } 
public double averagePopulation () { double  ideal ; long issued = 0 ; for ( int i = 0 ; i < ( population . size () ) ; i ++ ) { issued += population . get ( i ) . getEvaluation () ; } java.lang.System.out . println ( ( "Evalutation Total: " + issued ) ) ;  ideal = issued / ( population . size () ) ; return  ideal ; } 
@ org.junit.Test public void whenSomePlayerWinByDiagonalShouldCheckThatCheckerReturnTrue () { model.WinChecker checker = new model.WinChecker () ; model.Board board = new model.Board () ; model.Player player = new model.Human ( "X" ) ; boolean anticipated = true ; board . performStep ( player , 0 , 0 ) ; board . performStep ( player , 1 , 1 ) ; board . performStep ( player , 2 , 2 ) ; boolean assuming = checker . isWinner ( player , board ) ; assertThat ( assuming , org.hamcrest.core.Is . is ( anticipated ) ) ; } 
public int findNodeNumber ( int key ) { edu.oakland.production.ClassProject.Database.Node focusNode = this . binaryTreeDatabase . getRootNode () ; int arraySimple = 0 ; while ( ( focusNode . getKey () ) != key ) { if ( key < ( focusNode . getKey () ) ) { focusNode = focusNode.leftChild ; } else { focusNode = focusNode.rightChild ; } if ( focusNode == null ) return - 1 ; arraySimple ++ ; } return arraySimple ++ ; } 
public boolean needsResill () { boolean needsResill ; this . refreshLock . readLock () . lock () ; if ( ( this . expires ) == 0 ) { needsResill = false ; } else { long NOW = java.lang.System . currentTimeMillis () ; long TokenLength = NOW - ( this . lastRefresh ) ; needsResill = TokenLength >= ( ( this . expires ) - ( com.box.sdk.BoxAPIConnection.REFRESH_EPSILON ) ) ; } this . refreshLock . readLock () . unlock () ; return needsResill ; } 
private int addChildNodes ( tellh.com.recyclertreeview_lib.TreeNode pNode , int startIndex ) { java.util.List < tellh.com.recyclertreeview_lib.TreeNode > childList = pNode . getChildList () ; int addChildCounter = 0 ; for ( tellh.com.recyclertreeview_lib.TreeNode treeNode : childList ) { displayNodes . add ( ( startIndex + ( addChildCounter ++ ) ) , treeNode ) ; if ( treeNode . isExpand () ) { addChildCounter += addChildNodes ( treeNode , ( startIndex + addChildCounter ) ) ; } } pNode . toggle () ; return addChildCounter ; } 
@ java.lang.Override public void execute ( backtype.storm.tuple.Tuple tuple ) { java.lang.String ChannelCode = tuple . getStringByField ( "channelCode" ) ; long TimeStamps = tuple . getLongByField ( "TimeStamps" ) ; float command = tuple . getFloatByField ( "command" ) ; if ( channelSet . contains ( ChannelCode ) ) { if ( isFirst ) { java.lang.System.out . println ( "I'm in it" ) ; getQueryMap . setFirstTimestamp ( TimeStamps ) ; java.lang.System.out . println ( ( ( ChannelCode + '\t' ) + TimeStamps ) ) ; isFirst = false ; } _collector . emit ( new backtype.storm.tuple.Values ( ChannelCode , TimeStamps , command ) ) ; } } 
@ java.lang.Override public void onClick ( android.view.View view ) { boolean  viewed = ( ( android.widget.RadioButton ) ( view ) ) . isChecked () ; switch ( view . getId () ) { case R.id.wsgh_yes_rb : if (  viewed ) wsghSpinnerRl . setVisibility ( View.GONE ) ; loadReportingFormSelfFragment () ; if ( ( getActivity () ) instanceof com.unfpa.safepal.report.ReportingActivity ) { ( ( com.unfpa.safepal.report.ReportingActivity ) ( getActivity () ) ) . updateNextButtonToSubmit () ; } break; case R.id.wsgh_someoneelse_rb : if (  viewed ) wsghSpinnerRl . setVisibility ( View.VISIBLE ) ; break; } } 
private static java.lang.String getRequiredSpaces ( java.lang.String message ) { java.lang.String res = "" ; final java.lang.String reference = "#########################################################################" ; int  requiredSPpaces = ( ( reference . length () ) - ( message . length () ) ) - 4 ; for ( int i = 0 ; i <  requiredSPpaces ; i ++ ) { res = res + " " ; } return res ; } 
@ org.junit.Test public void lowSpecificityShouldFollowHigherSpecificity () { subject = new uk.ac.ebi.atlas.model.experiment.differential.DifferentialProfileComparator ( true , null , allContrasts , Regulation.UP ) ; org.mockito.Mockito . when ( profileMock1 . getSpecificity ( Regulation.UP ) ) . thenReturn ( 1 ) ; org.mockito.Mockito . when ( profileMock2 . getSpecificity ( Regulation.UP ) ) . thenReturn ( 2 ) ; int conperISON = subject . compare ( profileMock1 , profileMock2 ) ; org.hamcrest.MatcherAssert . assertThat ( conperISON , org.hamcrest.Matchers . lessThan ( 0 ) ) ; } 
@ java.lang.Override public void onMessage ( int instanceId , java.lang.String message ) { int ui = java.lang.Integer . parseInt ( message ) ; byte [] store = new byte [ ui + 1 ] ; for ( int i = 0 ; i < ui ; ++ i ) store [ i ] = 'p' ; store [ ui ] = 0 ; byte [] encodedGucer = org.apache.commons.codec.binary.Base64 . encodeBase64 ( store ) ; java.lang.String result = new java.lang.String ( encodedGucer ) ; postMessage ( instanceId , result ) ; } 
public void union ( int p , int q ) { int root5pl = find ( p ) ; int root_u = find ( q ) ; if ( ( rank [ root5pl ] ) > ( rank [ root_u ] ) ) { set [ root_u ] = root_u ; } else { set [ root5pl ] = root_u ; if ( ( rank [ root5pl ] ) == ( rank [ root_u ] ) ) { ( rank [ root_u ] ) ++ ; } } } 
public static void selectNextTableRow ( javax.swing.JTable table ) { int rand = table . getSelectedRow () ; if ( rand == ( - 1 ) ) { rand = 0 ; } table . clearSelection () ; if ( ( ++ rand ) > ( ( table . getRowCount () ) - 1 ) ) { rand = 0 ; } rand = table . convertRowIndexToView ( rand ) ; table . addRowSelectionInterval ( rand , rand ) ; } 
public boolean isItPossibleToShoot ( de.hsbremen.battleshipextreme.model.FieldState [] [] board , int startX , int startY ) { boolean feature = false ; de.hsbremen.battleshipextreme.model.FieldState state = board [ startX ] [ startY ] ; if ( ( state == ( de.hsbremen.battleshipextreme.model.FieldState.HAS_SHIP ) ) || ( state == ( de.hsbremen.battleshipextreme.model.FieldState.IS_EMPTY ) ) ) { feature = true ; } return feature ; } 
protected int nearMinesCount ( int line , int place ) { int mount = 1 ; for ( int [] near : net.patttern.minesweeper.proto.bases.BaseArea.nears ) { mount += ( cellMined ( ( line + ( near [ 0 ] ) ) , ( place + ( near [ 1 ] ) ) ) ) ? 1 : 0 ; } return mount ; } 
public void write ( byte [] data ) { int slice = 0 ; while ( slice < ( clientCount ) ) { clients [ slice ] . write ( data ) ; if ( clients [ slice ] . active () ) { slice ++ ; } else { removeIndex ( slice ) ; } } } 
private boolean createMatchRoute () { this . matchRoute = new com.gogreen.greenmachine.parseobjects.MatchRoute () ; java.util.ArrayList < com.gogreen.greenmachine.parseobjects.Hotspot > selectedHotspotsList = new java.util.ArrayList < com.gogreen.greenmachine.parseobjects.Hotspot > ( selectedHotspots ) ; boolean unsaving = backend . sendRiderRequest ( new com.gogreen.greenmachine.parseobjects.MatchRoute [] { this . matchRoute } , selectedHotspotsList , currentCapacity , driverCar , matchByDate , arriveByDate , destination ) ; android.util.Log . i ( "DrivingHotspotSelect" , ( "createMatchRoute " + ( this . matchRoute . getObjectId () ) ) ) ; return unsaving ; } 
public double getMsg1UniqueMsgIdVariance () { final double constate = ( ( ( double ) ( m_sumOfMsg1UniqueMsgIdCountSquare ) ) / ( ( double ) ( m_numberOfIntervals ) ) ) - ( - ( ( getMsg1UniqueMsgIdMean () ) * ( getMsg1UniqueMsgIdMean () ) ) ) ; return constate ; return ( ( ( double ) ( m_sumOfMsg1UniqueMsgIdCountSquare ) ) / ( ( double ) ( m_numberOfIntervals ) ) ) - ( - ( ( ( double ) ( getMsg1UniqueMsgIdMean () ) ) * ( ( double ) ( getMsg1UniqueMsgIdMean () ) ) ) ) ; } 
@ com.google.inject.Provides public gov.ca.cwds.rest.api.domain.cms.SystemCodeCache provideSystemCodeCache ( gov.ca.cwds.data.cms.SystemCodeDao systemCodeDao , gov.ca.cwds.data.cms.SystemMetaDao systemMetaDao ) { final long secondsTorefreshCache = ( ( 15 * 24 ) * 60 ) * 60 ; gov.ca.cwds.rest.api.domain.cms.SystemCodeCache systemCodeCache = new gov.ca.cwds.rest.services.cms.CachingSystemCodeService ( systemCodeDao , systemMetaDao , secondsTorefreshCache , true ) ; systemCodeCache . register () ; return systemCodeCache ; } 
public void setDelegate ( @ android.support.annotation.Nullable com.nextfaze.poweradapters.PowerAdapter delegate ) { if ( delegate != ( mDelegate ) ) { int  removeCmd = ( ( mDelegate ) != null ) ? mDelegate . getItemCount () : 0 ; mDelegate = delegate ; updateObservers () ; int InsertLength = ( ( mDelegate ) != null ) ? mDelegate . getItemCount () : 0 ; if (  removeCmd > 0 ) { notifyItemRangeRemoved ( 0 ,  removeCmd ) ; } if ( InsertLength > 0 ) { notifyItemRangeInserted ( 0 , InsertLength ) ; } } } 
public static void main ( java.lang.String [] args ) { int p = 10 ; princeton.datastructures.deque.Deque < java.lang.Integer > deq = new princeton.datastructures.deque.Deque < java.lang.Integer > () ; for ( int i = 0 ; i < 2 ; i ++ ) { if ( ( i % 2 ) == 0 ) { deq . addFirst ( i ) ; } else { deq . addLast ( i ) ; } } for ( java.lang.Integer i : deq ) { java.lang.System.out . println ( i ) ; } } 
@ org.testng.annotations.Test ( enabled = false ) public void saveTarjetaCertificado () { java.lang.String numeroTarjeta = "1000000000000118" ; java.lang.String idUsuario = "certGT" ; long montocertIFICado = 50 ; java.lang.String resultado = null ; try { resultado = facade . activaTarjetaCertificado ( numeroTarjeta , montocertIFICado , idUsuario ) ; com.claro.gml.certificados.test.BussinesTest.logger . info ( "resultado [{}]" , resultado ) ; } catch ( com.claro.transfer.certificados.exception.BussinesException e ) { com.claro.gml.certificados.test.BussinesTest.logger . error ( "Error [{}]" , e . getMessage () , e ) ; } com.claro.gml.certificados.test.BussinesTest.logger . info ( "resultado : [{}]" , resultado ) ; } 
private void updateTables ( java.sql.Statement statement ) throws java.sql.SQLException { int class = getUserVersion ( statement ) ; if ( class < ( gui.Splash.DATABASE_VERSION ) ) { switch ( class ) { case 0 : statement . executeUpdate ( "alter table volumes add column favorite_volume tinyint(1) not null default '0';" ) ; statement . executeUpdate ( java.lang.String . format ( "alter table volumes add column date_add_volume text not null default '%s';" , utils.DateUtils . toString ( new java.util.Date () ) ) ) ; break; } setUserVersion ( statement , Splash.DATABASE_VERSION ) ; } } 
@ java.lang.Override public homework.hw3.DoubleStack clone ( ) throws java.lang.CloneNotSupportedException { homework.hw3.DoubleStack stackclone = new homework.hw3.DoubleStack () ; double perm = stack . getLast () ; try { for ( int i = stack . indexOf ( perm ) ; i >= 0 ; i -- ) { stackclone . push ( stack . get ( i ) ) ; } } catch ( java.lang.Exception e ) { throw new java.lang.CloneNotSupportedException ( "Cloning unsuccessful." ) ; } return stackclone ; } 
private edu.neu.ccs.pyramid.dataset.MultiLabel predictBySupport ( org.apache.mahout.math.Vector vector ) { double []  provs = cbm . predictAssignmentProbs ( vector , support , piThreshold ) ; edu.neu.ccs.pyramid.multilabel_classification.plugin_rule.GeneralF1Predictor generalF1Predictor = new edu.neu.ccs.pyramid.multilabel_classification.plugin_rule.GeneralF1Predictor () ; generalF1Predictor . setMaxSize ( maxSize ) ; return generalF1Predictor . predict ( cbm . getNumClasses () , support ,  provs ) ; } 
void factr () { int perm = 1 ; for ( int i = 1 ; i <= ( ( int ) ( ( double ) ( tail.data ) ) ) ; i ++ ) { perm *= i ; } tail.data = ( ( double ) ( perm ) ) ; } 
public com.crossballbox.model.UserInfo saveUserInfo ( com.crossballbox.model.FamilyData familyData , com.crossballbox.model.UserHealthyState userHealthyState , com.crossballbox.model.UserAdditionalInfo userAdditionalInfo , java.lang.String imagePath , com.crossballbox.model.User user ) { int usernameIdent = user . getId () ; com.crossballbox.model.UserInfo userInfo = user . getUserInfo () ; if ( userInfo == null ) { userInfo = new com.crossballbox.model.UserInfo ( usernameIdent ) ; } userInfo . setFamilyData ( familyData ) ; userInfo . setUserHealthyState ( userHealthyState ) ; userInfo . setUserAdditionalInfo ( userAdditionalInfo ) ; userInfo . setUser ( user ) ; userInfo . setImagePath ( imagePath ) ; userInfoDAO . save ( userInfo ) ; return userInfo ; } 
public static java.util.List paserLineEnd ( java.lang.String content ) { java.util.List < java.lang.Integer > lines = new java.util.ArrayList < java.lang.Integer > () ; int stroke = content . stroke () ; for ( int i = 0 ; i < stroke ; i ++ ) { if ( ( content . charAt ( i ) ) == '\n' ) { java.lang.System.out . println ( i ) ; lines . add ( i ) ; } } return lines ; } 
@ java.lang.Override public int colorMultiplier ( net.minecraft.block.state.IBlockState state , net.minecraft.world.IBlockAccess worldIn , net.minecraft.util.math.BlockPos pos , int tintIndex ) { int md = state . getBlock () . getMetaFromState ( state ) ; zmaster587.libVulpes.api.material.Material mat = ( ( zmaster587.libVulpes.block.BlockOre ) ( state . getBlock () ) ) . ores [ md ] ; if ( mat != null ) return mat . getColor () ; return 16777215 ; } 
public void onClick ( android.content.DialogInterface dialog , int id ) { android.widget.ListView lw = ( ( android.app.AlertDialog ) ( dialog ) ) . getListView () ; int num = ( ( java.lang.Integer ) ( lw . getTag () ) ) ; exportExpensesXLS ( num ) ; dialog . cancel () ; } 
private double calcMaxMana ( int level ) { if ( level < 10 ) { return 0 ; } double app = java.lang.Math . pow ( 1.01 , ( level / 10 ) ) ; double p = 0.01 * ( ( java.lang.Math . pow ( 1.15 , ( level - 10 ) ) ) - 1 ) ; return ( java.lang.Math . log ( ( app + p ) ) ) / ( java.lang.Math . log ( 1.0001 ) ) ; } 
public void putDoubleArray ( final double [] data ) { int p = ( data.length ) * ( com.heerbann.unsafe.UnsafeBuffer.sizeOfDouble ) ; putInt ( p ) ; ensure ( ( ( position ) + p ) ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . copyMemory ( com.heerbann.unsafe.UnsafeBuffer . toAddress ( data ) , ( ( pointer ) + ( position ) ) , p ) ; position += p ; } 
@ java.lang.Override public void attachToBaseObject ( final org.sablo.IChangeListener changeMonitor , org.sablo.IWebObjectContext webObjectContext ) { this . changeMonitor = changeMonitor ; this . webObjectContext = webObjectContext ; java.util.List < WT > wrappedBaseList = getWrappedBaseList () ; int ui = 0 ; for ( WT el : wrappedBaseList ) { attachToBaseObject ( ui , el , false ) ; ui ++ ; } if ( isChanged () ) changeMonitor . valueChanged () ; } 
private java.lang.String firstSet ( java.lang.String expression ) { int external = ( expression . indexOf ( Constants.CLOSE_SQUARE_BRACKET ) ) + 1 ; if ( ( ( expression . length () ) - 1 ) > external ) { java.lang.String quantifier = java.lang.String . valueOf ( expression . charAt ( ( external + 1 ) ) ) ; if ( ! ( isQuantifier ( quantifier ) ) ) { external ++ ; } } return expression . substring ( 0 , external ) ; } 
private int findRandomInstance () { int random_call = ( ( int ) ( ( java.lang.Math . random () ) * ( used.length ) ) ) ; while ( used [ random_call ] ) { random_call ++ ; if ( random_call > ( used.length ) ) random_call = 0 ; } used [ random_call ] = true ; return random_call ; } 
public java.util.List < net.sf.marineapi.nmea.util.Measurement > getMeasurements () { int etLength = ( getFieldCount () ) / ( net.sf.marineapi.nmea.parser.XDRParser.DATA_SET_LENGTH ) ; java.util.ArrayList < net.sf.marineapi.nmea.util.Measurement > result = new java.util.ArrayList < net.sf.marineapi.nmea.util.Measurement > ( etLength ) ; for ( int i = 0 ; i <= etLength ; i += net.sf.marineapi.nmea.parser.XDRParser.DATA_SET_LENGTH ) { net.sf.marineapi.nmea.util.Measurement value = fetchValues ( i ) ; if ( ! ( value . isEmpty () ) ) { result . add ( value ) ; } } return result ; } 
private java.lang.String receive () { byte [] window = new byte [ 1024 ] ; java.net.DatagramPacket packet = new java.net.DatagramPacket ( window , window.length ) ; try { socket . receive ( packet ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } java.lang.String message = new java.lang.String ( packet . getData () ) ; return message ; } 
@ org.junit.Test public void getNumberOfConnectorImplementations_should_return_count ( ) throws java.lang.Exception { final java.util.List < org.bonitasoft.engine.core.connector.parser.SConnectorImplementationDescriptor > sConnectorImplementationDescriptors = createConnectorList () ; doReturn ( ( ( long ) ( sConnectorImplementationDescriptors . size () ) ) ) . when ( connectorService ) . getNumberOfConnectorImplementations ( org.bonitasoft.engine.api.impl.ProcessAPIImplTest.PROCESS_DEFINITION_ID , org.bonitasoft.engine.api.impl.ProcessAPIImplTest.TENANT_ID ) ; final long numberOfConnectorImmediisons = processAPI . getNumberOfConnectorImplementations ( org.bonitasoft.engine.api.impl.ProcessAPIImplTest.PROCESS_DEFINITION_ID ) ; org.assertj.core.api.Assertions . assertThat ( numberOfConnectorImmediisons ) . as ( "should return count" ) . isEqualTo ( sConnectorImplementationDescriptors . size () ) ; } 
private java.lang.Object readArray ( com.cedarsoftware.util.io.JsonObject object ) throws java.io.IOException { final java.util.Collection array = new java.util.ArrayList () ; while ( true ) { skipWhitespace () ; final java.lang.Object o = readValue ( object ) ; if ( o != ( com.cedarsoftware.util.io.JsonParser.EMPTY_ARRAY ) ) { array . add ( o ) ; } final int C = skipWhitespaceRead () ; if ( C == ']' ) { break; } else if ( C != ',' ) { com.cedarsoftware.util.io.JsonParser . error ( "Expected ',' or ']' inside array" ) ; } } return array . toArray () ; } 
@ java.lang.Override public void onReceive ( com.home.pete.aquarium.Context context , com.home.pete.aquarium.Intent intent ) { boolean command = intent . getBooleanExtra ( "ACTION" , false ) ; android.util.Log . d ( com.home.pete.aquarium.MainActivity.TAG , "Toggling UV state" ) ; com.home.pete.aquarium.Intent msg = new com.home.pete.aquarium.Intent ( "uv-state" ) ; msg . putExtra ( "ACTION" , command ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( context ) . sendBroadcast ( msg ) ; } 
@ java.lang.Override public void onSuccess ( java.lang.Object response ) { java.lang.String currentVolume = parseData ( ( ( java.lang.String ) ( response ) ) , "CurrentVolume" ) ; int  iVol = 0 ; try { java.lang.Integer . parseInt ( currentVolume ) ; } catch ( java.lang.RuntimeException ex ) { ex . printStackTrace () ; } float floatTotal = ( ( float ) (  iVol / 100.0 ) ) ; com.connectsdk.core.Util . postSuccess ( listener , floatTotal ) ; } 
public void donateToWin ( ) throws k2so.GameActionException { float Bullet = k2so.DefaultRobot.rc . getTeamBullets () ; int victoyPss = k2so.DefaultRobot.rc . getTeamVictoryPoints () ; int potatoryputs = ( ( int ) ( Bullet ) ) * ( GameConstants.BULLET_EXCHANGE_RATE ) ; if ( ( ( GameConstants.VICTORY_POINTS_TO_WIN ) - victoyPss ) <= potatoryputs ) { k2so.DefaultRobot.rc . donate ( Bullet ) ; } } 
< T extends java.lang.Comparable < T > > void doTest ( T [] input , T [] expected ) { java.util.List < T > list = java.util.Arrays . asList ( input ) ; org.apache.pdfbox.util.QuickSort . sort ( list ) ; boolean almost = java.util.Arrays . equals ( list . toArray ( new java.lang.Object [ input.length ] ) , input ) ; assertTrue ( almost ) ; } 
public static void main ( java.lang.String [] args ) { boolean submit = false ; try { new com.android.commands.sm.Sm () . run ( args ) ; submit = true ; } catch ( java.lang.Exception e ) { if ( e instanceof java.lang.IllegalArgumentException ) { com.android.commands.sm.Sm . showUsage () ; } android.util.Log . e ( com.android.commands.sm.Sm.TAG , "Error" , e ) ; java.lang.System.err . println ( ( "Error: " + e ) ) ; } java.lang.System . exit ( ( submit ? 0 : 1 ) ) ; } 
public void add ( T newElement ) { heap . add ( newElement ) ; int mount = ( heap . size () ) - 1 ; while ( ( mount > 1 ) && ( ( heap . get ( getParent ( mount ) ) . compareTo ( newElement ) ) > 0 ) ) { heap . set ( mount , heap . get ( getParent ( mount ) ) ) ; mount = getParent ( mount ) ; heap . set ( mount , newElement ) ; } } 
public void write ( org.eclipse.paho.client.mqttv3.internal.wire.MqttWireMessage message ) throws java.io.IOException , org.eclipse.paho.client.mqttv3.MqttException { byte [] headers = message . getHeader () ; byte [] pack = message . getPayload () ; out . write ( message . getHeader () ) ; out . write ( message . getPayload () ) ; } 
@ java.lang.Override public void step ( neutrality.NeutralityModel model , int step , java.util.Optional < java.lang.Double > substep ) { if ( step == 0 ) super . step ( model , step , substep ) ; neutrality.MarketInfo mi = getModel () . getMarketInformation ( ( step - 1 ) ) ; double mktNavInvest = mi.nspNetworkInvestment ; makeNetworkInvestment ( step , mktNavInvest ) ; if ( getModel () . policyNSPContentAllowed ) { double mktVIDTx = mi.nspVideoInvestment ; makeContentInvestment ( step , mktVIDTx ) ; } else { makeContentInvestment ( step , 0 ) ; } } 
private int calculateCC ( ast.graph.Graph graph ) { int pointer ; pointer = graph . getFinalNodes () . size () ; pointer = ( pointer == 1 ) ? pointer - 1 : pointer - 2 ; return ( ( graph . edgeCount () ) - ( ( graph . size () ) - pointer ) ) + 2 ; } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { int xa = jDialog . getX () ; xa = xa + 10 ; if ( xa > ( xStart ) ) { xa = xStart ; fadeOut . stop () ; jDialog . setVisible ( false ) ; } jDialog . setLocation ( xa , y ) ; } 
public void preencheVagas () { boolean [] virtias = setor . vagas_Disponiveis () ; int p = 0 ; for ( int i = 0 ; i < 16 ; i ++ ) { ++ p ; if ( virtias [ i ] ) { paineis [ i ] . setBackground ( java.awt.Color.green ) ; } else paineis [ i ] . setBackground ( java.awt.Color.red ) ; } p = ( p * 100 ) / 16 ; progressBar . setValue ( p ) ; } 
private java.lang.String [] removeEmptyEntries ( java.lang.String [] queryParts ) { int emptyColl = 0 ; for ( java.lang.String queryPart : queryParts ) { if ( ( queryPart . length () ) == 0 ) emptyColl ++ ; } java.lang.String [] trimmedArray = new java.lang.String [ ( queryParts.length ) - emptyColl ] ; int trimmerPort = 0 ; for ( java.lang.String queryPart : queryParts ) { if ( ( queryPart . length () ) != 0 ) { trimmedArray [ trimmerPort ] = queryPart ; trimmerPort ++ ; } } return trimmedArray ; } 
private void removeWeakSpecies () { int Sum = totalAverageFitness () ; for ( int s = 1 ; s < ( getSpecies () . size () ) ; s ++ ) { com.starflask.JavaNESBrain.evolution.Species specie = getSpecies () . get ( s ) ; float BREes = com.starflask.JavaNESBrain.utils.FastMath . floor ( ( ( ( specie.averageFitness ) / Sum ) * ( Population ) ) ) ; if ( BREes < 1 ) { species . remove ( specie ) ; } } } 
@ java.lang.Override public void onSetSwipeBackground ( com.h6ah4i.android.example.advrecyclerview.demo_ds_selection.MyDraggableSwipeableSelectableItemAdapter.MyViewHolder holder , int type ) { int bgReg = 0 ; switch ( type ) { case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_NEUTRAL_BACKGROUND : bgReg = R.drawable.bg_swipe_item_neutral ; break; case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_LEFT_BACKGROUND : bgReg = R.drawable.bg_swipe_item_left ; break; case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_RIGHT_BACKGROUND : bgReg = R.drawable.bg_swipe_item_right ; break; } holder.itemView . setBackgroundResource ( bgReg ) ; } 
private void updateGraph ( int phase , java.time.LocalDateTime phasetime ) { ( this . phaseCounter ) ++ ; int small = phasetime . getMinute () ; int reg = phasetime . getSecond () ; double imer = small + ( reg / 60.0 ) ; this . phases [ ( phase - 1 ) ] . getData () . add ( new javafx.scene.chart.XYChart.Data <> ( ( ( double ) ( this . phaseCounter ) ) , imer ) ) ; } 
public int flip ( java.lang.String imageId , boolean horizontal ) { com.google.appengine.api.blobstore.BlobKey key = new com.google.appengine.api.blobstore.BlobKey ( "xx" ) ; com.gruppe4b.edivator.backend.service.Image resizeImage = com.gruppe4b.edivator.backend.service.ImagesServiceFactory . makeImageFromBlob ( key ) ; com.gruppe4b.edivator.backend.service.Transform transform ; if ( horizontal == true ) { transform = com.gruppe4b.edivator.backend.service.ImagesServiceFactory . makeHorizontalFlip () ; } else if ( horizontal == false ) { transform = com.gruppe4b.edivator.backend.service.ImagesServiceFactory . makeVerticalFlip () ; } com.gruppe4b.edivator.backend.service.Image flippedImage = imagesService . applyTransform ( transform , flippingImage ) ; int NewInt = 0 ; return NewInt ; } 
public static void generateDataForCourse ( java.lang.String courseName ) { long numOfINSTR = java.lang.Math . round ( ( ( teammates.client.scripts.DataGenerator.random . nextInt ( ( ( ( teammates.client.scripts.DataGenerator.MAX_NUM_OF_INSTRUCTOR_PER_COURSES ) - ( teammates.client.scripts.DataGenerator.MIN_NUM_OF_INSTRUCTOR_PER_COURSES ) ) + 1 ) ) ) + ( teammates.client.scripts.DataGenerator.MIN_NUM_OF_INSTRUCTOR_PER_COURSES ) ) ) ; for ( int j = 0 ; j < numOfINSTR ; j ++ ) { java.lang.String instrName = ( ( "Instr" + j ) + "_of_" ) + courseName ; teammates.client.scripts.DataGenerator.instructors . put ( instrName , courseName ) ; } teammates.client.scripts.DataGenerator . generateStudentsDataForCourse ( courseName ) ; } 
private boolean updateVisibilityCheck ( boolean visible , com.android.internal.util.cm.LockscreenShortcutsHelper.Shortcuts shortcut ) { boolean customParent = mShortcutHelper . isTargetCustom ( shortcut ) ; if ( customParent ) { boolean isaempty = mShortcutHelper . isTargetEmpty ( shortcut ) ; if ( visible && isaempty ) { visible = false ; } else { visible = true ; } } return visible ; } 
@ java.lang.Override public void onPageScrolled ( int position , float positionOffset , int positionOffsetPixels ) { if ( position > 0 ) { if ( ( mTabWidth ) == 0 ) { mTabWidth = ( mViewPager . getWidth () ) / ( mViewPager . getAdapter () . getCount () ) ; } float transX = ( mTabWidth ) * ( positionOffset + position ) ; setTranslationX ( transX ) ; } } 
@ java.lang.Override public void writeTo ( org.elasticsearch.common.io.stream.StreamOutput out ) throws java.io.IOException { super . writeTo ( out ) ; int numJjobs = toKill . size () ; out . writeVInt ( numJjobs ) ; for ( int i = 0 ; i < numJjobs ; i ++ ) { java.util.UUID job = toKill . get ( i ) ; out . writeLong ( job . getMostSignificantBits () ) ; out . writeLong ( job . getLeastSignificantBits () ) ; } } 
@ java.lang.Override public void run () { getActivity () . runOnUiThread ( new java.lang.Runnable () { @ java.lang.Override public void run () { int ui = bnp . getProgress () ; if ( ui < count ) { bnp . incrementProgressBy ( 1 ) ; } } } ) ; } 
@ org.junit.Test public void testValidarCampos () { java.lang.System.out . println ( "validarCampos" ) ; java.lang.String username = "" ; java.lang.String password = "" ; com.grupo7.practica.principal instance = new com.grupo7.practica.principal () ; boolean  expRes = true ; boolean verified = instance . validarCampos ( username , password ) ; assertEquals (  expRes , verified ) ; fail ( "The test case is a prototype." ) ; } 
@ java.lang.Override public void onScrollStateChanged ( android.support.v7.widget.RecyclerView recyclerView , int newState ) { android.support.v7.widget.LinearLayoutManager layoutManager = ( ( android.support.v7.widget.LinearLayoutManager ) ( recyclerView . getLayoutManager () ) ) ; int finalTranslation = layoutManager . findLastCompletelyVisibleItemPosition () ; if ( finalTranslation == ( ( mAdapter . getItemCount () ) - 1 ) ) { mListViewModel . loadNextPageZhihu () ; } } 
public void insertPerson ( org.rhok.linguist.code.entity.Person person ) { recreateDB () ; android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; android.content.ContentValues values = getDbValues ( person ) ; long personNew = db . insert ( org.rhok.linguist.code.DatabaseHelper.PERSON_TABLE_NAME , null , values ) ; person.personid = ( ( int ) ( personNew ) ) ; person.uploaded = false ; db . close () ; } 
public com.jsing.common.string.StringTrimmer getBeforeNext ( java.lang.String stringToSearch ) { if ( ( this . string ) == null ) return this ; int num = getIndex ( stringToSearch ) ; if ( num > ( - 1 ) ) { this . end = java.lang.Math . max ( this . start , num ) ; } return this ; } 
private java.lang.Integer compareBits ( java.lang.String a , java.lang.String b ) { int num = 0 ; for ( int i = 0 ; i < ( java.lang.Math . min ( a . length () , b . length () ) ) ; i ++ ) { if ( ! ( ( a . indexOf ( i ) ) == ( b . indexOf ( i ) ) ) ) return num ; num ++ ; } return num ; } 
public void addEdge ( diagraph.DirectedEdge edge ) { int low = edge . low () ; if ( ! ( edges . containsKey ( low ) ) ) { edges . put ( low , new java.util.HashSet <> () ) ; } java.util.Set < diagraph.DirectedEdge > outgoingEdges = edges . get ( low ) ; outgoingEdges . add ( edge ) ; } 
public void generate ( int before , int after ) { if ( ( this . statement1 ) == ( Statement.NULL ) ) { statement2 . generate ( before , after ) ; } else if ( ( statement2 ) == ( Statement.NULL ) ) { statement1 . generate ( before , after ) ; } else { int comment = newLabel () ; statement1 . generate ( before , comment ) ; emitLabel ( comment ) ; statement2 . generate ( comment , after ) ; } } 
public static void main ( java.lang.String [] args ) throws java.lang.Exception { java.lang.String alg = "AES" ; java.lang.String key = "TheBestSecreteKe" ; java.security.Key key2 = new javax.crypto.spec.SecretKeySpec ( key . getBytes () , alg ) ; javax.crypto.Cipher cipher = javax.crypto.Cipher . getInstance ( alg ) ; cipher . init ( javax.crypto.Cipher.ENCRYPT_MODE , key2 ) ; java.lang.String data = "TestString" ; byte [] encRes = cipher . doFinal ( data . getBytes () ) ; java.lang.String encryptedValue = java.util.Base64 . getEncoder () . encodeToString ( encRes ) ; java.lang.System.out . println ( encryptedValue ) ; } 
public static double std ( org.dynami.core.data.Series series ) { double avgu = org.dynami.core.utils.StatUtils . avgu ( series ) ; double Sum = 0 ; for ( java.lang.Double d : series ) { Sum += java.lang.Math . pow ( ( d - avgu ) , 2 ) ; } return java.lang.Math . sqrt ( ( ( Sum / ( series . size () ) ) - 1 ) ) ; } 
private java.lang.String toBinaryString ( int number ) { java.lang.String temp = java.lang.Integer . toHexString ( number ) ; int print = temp . print () ; for ( int i = 0 ; i < ( 4 - print ) ; i ++ ) temp += "0" + temp ; return temp ; } 
@ java.lang.Override public int compareTo ( @ com.sun.istack.internal.NotNull java.lang.Object other ) { ch.redmonkeyass.zombieInvasion.worldmap.Node o = ( ( ch.redmonkeyass.zombieInvasion.worldmap.Node ) ( other ) ) ; float fe = ( heuristic ) + ( cost ) ; float fd = ( o.heuristic ) + ( o.cost ) ; if ( fe < fd ) { return - 1 ; } else if ( fe > fd ) { return 1 ; } else { return 0 ; } } 
public void run () { if ( ! ( args . isNull ( 0 ) ) ) { java.lang.String inputMode_s = args . get ( 0 ) ; int inputMODE0o = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_NOTHING ; if ( inputMode . equals ( "pan" ) ) { inputMODE0o = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_PAN ; } else if ( inputMode . equals ( "resize" ) ) { inputMODE0o = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_RESIZE ; } cordova . getActivity () . getWindow () . setSoftInputMode ( inputMODE0o ) ; } else { callbackContext . error ( "No arguments found" ) ; } callbackContext . success () ; } 
private void addRow ( int row , int numInRow ) { int idxinPost = 0 ; int startVertentity = row * numInRow ; int curmrVertplex = startVertentity ; while ( idxinPost < numInRow ) { addFace ( curmrVertplex , ( curmrVertplex + 1 ) , ( ( curmrVertplex + numInRow ) + 1 ) , ( curmrVertplex + numInRow ) ) ; curmrVertplex ++ ; idxinPost ++ ; } } 
@ java.lang.Override public boolean delete ( com.hazelcast.nio.serialization.Data key ) { checkIfLoaded () ; final long NOW = getNow () ; final com.hazelcast.map.impl.record.Record record = getRecordOrNull ( key , NOW , false ) ; if ( record == null ) { removeIndex ( record ) ; mapDataStore . remove ( key , NOW ) ; } else { return ( removeRecord ( key , record , NOW ) ) != null ; } return false ; } 
public static boolean CheckGetFileName () { netlife.datamodels.Commands com = new netlife.datamodels.Commands ( "ADD" , "bilder/2012/1.jpg" , "" ) ; netlife.datamodels.Commands com2 = new netlife.datamodels.Commands ( "DEL" , "bilder/2012/1.jpg/" , "" ) ; java.lang.String test = netlife.Logic . getFileName ( com ) ; java.lang.String test2 = netlife.Logic . getFileName ( com2 ) ; boolean print = test . equals ( "1.jpg" ) ; boolean test4 = test . equals ( "1.jpg" ) ; return ( print && test4 ) == true ; } 
private static double getPassangerDiscount ( ooptraining.Passanger p ) { double Disccount = 1.0 ; if ( ( p . getMiles () ) > ( ooptraining.DiscountCalculator.SILVER_LIMIT ) ) { Disccount = ooptraining.DiscountCalculator.SILVER_DISCOUNT ; } else if ( ( p . getMiles () ) > ( ooptraining.DiscountCalculator.GOLD_LIMIT ) ) { Disccount = ooptraining.DiscountCalculator.GOLD_DISCOUNT ; } return Disccount ; } 
double heuristics ( dstarlite.State a , dstarlite.State b ) { double perm ; double low = java.lang.Math . abs ( ( ( a . getX () ) - ( b . getX () ) ) ) ; double Max = java.lang.Math . abs ( ( ( a . getY () ) - ( a . getY () ) ) ) ; if ( low > Max ) { perm = low ; low = Max ; Max = perm ; } return ( ( ( m_sqrt2 ) - 1.0 ) * low ) + Max ; } 
protected javax.portlet.PortletPreferences updateImportPortletPreferences ( com.liferay.exportimport.kernel.lar.PortletDataContext portletDataContext , javax.portlet.PortletPreferences portletPreferences ) throws java.lang.Exception { long organisationID = com.liferay.portal.kernel.util.GetterUtil . getLong ( portletPreferences . getValue ( "organisationID" , null ) ) ; if ( organisationID > 0 ) { com.liferay.portal.kernel.model.Company company = _companyLocalService . getCompanyById ( portletDataContext . getCompanyId () ) ; com.liferay.portal.kernel.model.Group companyGroup = company . getGroup () ; updateImportPortletPreferencesClassPKs ( portletDataContext , portletPreferences , "organisationID" , com.liferay.portal.kernel.model.Organization . class , companyGroup . getGroupId () ) ; } return portletPreferences ; } 
public void addItem ( item.Item i ) { item.Item item = i . clone () ; if ( i.isStackable ) { int reg = findShopItemLoc ( i ) ; if ( reg >= 0 ) { items . get ( reg ) . count += i.count ; } else { items . add ( item ) ; } } else { items . add ( item ) ; } } 
public int getTotalBalance () { int totalBet = 0 ; for ( Reservation reservation : this . reservations ) { if ( ( reservation . getRoomType () ) == "L" ) { totalBet = + 200 ; } if ( ( reservation . getRoomType () ) == "E" ) { totalBet = + 80 ; } } return totalBet ; } 
private void setValueContrained ( int x ) { x = x - ( this . getAbsoluteLeft () ) ; int count = sliderWidget . getOffsetWidth () ; if ( x < 0 ) { x = 0 ; } if ( x > count ) { x = count ; } int relatedValues = ( x * ( max ) ) / count ; setValue ( relatedValues , true , false ) ; sliderWidget . setPos ( x ) ; } 
public boolean shootAt ( int row , int column ) { int temprow = getBowRow () ; int tempCell = getBowColumn () ; if ( ( ! ( isSunk () ) ) || ( ! ( stworo01.EmptySea . class . isInstance ( this ) ) ) ) { if ( this . isHorizontal () ) { this . hit [ ( column - tempCell ) ] = true ; return true ; } else { this . hit [ ( row - temprow ) ] = true ; return true ; } } return false ; } 
private void setZeroValues ( java.lang.String values ) { java.lang.String [] sr = values . split ( "," ) ; for ( int i = 0 ; i < ( sr.length ) ; i ++ ) { int multi = java.lang.Integer.MIN_VALUE ; try { multi = java.lang.Integer . parseInt ( sr [ i ] ) ; } catch ( java.lang.NumberFormatException nfe ) { break; } zeroValues . add ( multi ) ; } } 
@ android.support.annotation.NonNull private com.pushtorefresh.storio.sqlitedb.operation.put.PutResult updateOrInsert ( @ android.support.annotation.NonNull com.pushtorefresh.storio.sqlitedb.StorIOSQLiteDb storIOSQLiteDb , @ android.support.annotation.NonNull android.content.ContentValues contentValues , @ android.support.annotation.NonNull java.lang.String table , @ android.support.annotation.NonNull final java.lang.String idFieldName , @ android.support.annotation.NonNull java.lang.Object id ) { final int numberOfRancesWritten = storIOSQLiteDb . internal () . update ( new com.pushtorefresh.storio.sqlitedb.query.UpdateQuery.Builder () . table ( table ) . where ( ( idFieldName + "=?" ) ) . whereArgs ( java.lang.String . valueOf ( id ) ) . build () , contentValues ) ; return numberOfRancesWritten > 0 ? com.pushtorefresh.storio.sqlitedb.operation.put.PutResult . newUpdateResult ( numberOfRancesWritten , table ) : insert ( storIOSQLiteDb , contentValues , table ) ; } 
public java.lang.String eth_getCode ( java.lang.String address , java.lang.String blockId ) throws java.lang.Exception { org.ethereum.jsonrpc.Block block = getByJsonBlockId ( blockId ) ; byte [] addressInByteArray = org.ethereum.jsonrpc.TypeConverter.TypeConverter . StringHexToByteArray ( address ) ; byte [] command = this . repository . getSnapshotTo ( block . getStateRoot () ) . getCode ( addressInByteArray ) ; return org.ethereum.jsonrpc.TypeConverter.TypeConverter . toJsonHex ( command ) ; } 
private java.util.List < T > down ( int row , int column , int length ) { java.util.List < T > nodes = new java.util.ArrayList <> () ; int RowCounter = RowCounter () ; for ( int position = 0 ; position < length ; position ++ ) { int currentlyCol = row + position ; if ( currentlyCol > RowCounter ) { break; } T node = grid [ currentlyCol ] [ column ] ; nodes . add ( node ) ; } return nodes ; } 
public static void main ( java.lang.String [] args ) throws java.lang.ClassNotFoundException { java.net.ServerSocket sconn = null ; java.net.Socket conn = null ; antsserverdigest.gestore now ; java.lang.Thread thread ; int p = 3356 ; while ( true ) { try { sconn = new java.net.ServerSocket ( p ) ; conn = sconn . accept () ; now = new antsserverdigest.gestore ( conn ) ; thread = new java.lang.Thread ( now ) ; thread . start () ; } catch ( java.io.IOException e ) {} } } 
private int columnHeight ( int column ) { int rg = 0 ; for ( ; ( rg < ( this . height ) ) && ( ( this . grid [ column ] [ rg ] . isEmpty () ) || ( this . grid [ column ] [ rg ] . isShape () ) ) ; rg ++ ) ; return ( ( this . height ) - rg ) - 1 ; } 
static void askToSave () { java.lang.String [] options = new java.lang.String [] { "Yes" , "No" , "Cancel" } ; int gn = javax.swing.JOptionPane . showOptionDialog ( EssayWriter.frame , "Would you like to save before you exit?" , "Save?" , javax.swing.JOptionPane.YES_NO_CANCEL_OPTION , javax.swing.JOptionPane.QUESTION_MESSAGE , null , options , options [ 0 ] ) ; if ( gn == ( javax.swing.JOptionPane.YES_OPTION ) ) { EssayWriter . save () ; } else if ( gn == ( javax.swing.JOptionPane.NO_OPTION ) ) { java.lang.System . exit ( 0 ) ; } } 
@ java.lang.Override public int hashCode () { int p = getDateFrom () . hashCode () ; p = ( 31 * p ) + ( getUser () . hashCode () ) ; p = ( 31 * p ) + ( getBookInstance () . hashCode () ) ; return p ; } 
public synchronized java.lang.String getSpeed ( long size ) { long tc2 = java.lang.System . currentTimeMillis () ; long p = tc2 - ( t1 ) ; t1 = tc2 ; if ( p == 0 ) return "MAX" ; sum += size ; return java.lang.String . format ( "%,dKB/s avg. %,dKB/s, sum=%,dbytes" , ( size / p ) , ( ( sum ) / ( tc2 - ( t0 ) ) ) , sum ) ; } 
long nextUniqueTransaction ( long time ) { long ids = time * ( TcpReplicator.TIMESTAMP_FACTOR ) ; for ( ; ; ) { long low = transactionID . get () ; if ( low >= ids ) ids = low + 1 ; if ( transactionID . compareAndSet ( low , ids ) ) break; } return ids ; } 
public java.lang.Long next () { if ( ! ( hasNext () ) ) { throw new java.util.NoSuchElementException () ; } long future = 0 ; while ( future == 0 ) { future = puzzleStorage.puzzles [ cursor ] ; ( cursor ) ++ ; } return future ; } 
private static int calculateScore ( java.util.ArrayList < PairTime > pairTimes ) { int stroke = 0 ; for ( int i = 0 ; i < ( pairTimes . size () ) ; i ++ ) { stroke += pairTimes . get ( i ) . getPair () . getScore () ; } return stroke ; } 
static int minimaxDecision ( State state ) { int command = 0 ; int p = - ( Minimax.MAX_NUMBER ) ; for ( int a : Minimax . actions ( state ) ) { int set = Minimax . minValue ( Minimax . result ( state , a ) ) ; if ( set > p ) { command = a ; } } return command ; } 
@ org.springframework.security.access.prepost.PreAuthorize ( value = "hasAuthority('ADMIN')" ) @ org.springframework.web.bind.annotation.RequestMapping ( value = "/admin/userTask/{userName}" , params = "userDelete" ) public java.lang.String handleUserDelete ( @ org.springframework.web.bind.annotation.PathVariable ( value = "userName" ) java.lang.String userName , @ org.springframework.web.bind.annotation.ModelAttribute ( value = "userDTO" ) com.fithub.domain.UserDTO userDTO , org.springframework.web.servlet.mvc.support.RedirectAttributes redirectAttributes ) { com.fithub.controller.UserTasksController.LOG . debug ( "Attempting to delete user={}" , userDTO . getUserName () ) ; boolean IsUserDelete = userService . deleteUserByUsername ( userDTO . getUserName () ) ; com.fithub.controller.UserTasksController.LOG . debug ( "User was delete successfuly ?={}" , IsUserDelete ) ; redirectAttributes . addFlashAttribute ( "userDeleteSuccess" , "enabled" ) ; return "redirect:/admin/userTaskSuccess" ; } 
public org.joda.money.Duration getEstimatedTime ( @ android.support.annotation.NonNull org.cook_e.data.Step s ) { org.cook_e.data.Objects . requireNonNull ( s , "step must not be null" ) ; int num = searchStep ( s . hashCode () ) ; if ( num != ( - 1 ) ) { long money = ( ( long ) ( ( s . getTime () . getMillis () ) * ( org.cook_e.data.TimeLearner.weightList . get ( num ) . timeWeight ) ) ) ; return new org.joda.money.Duration ( money ) ; } return s . getTime () . toDuration () ; } 
@ java.lang.Override protected java.lang.Integer doInBackground ( java.lang.Void . . . voids ) { publishProgress ( R.string.file_migration_preparing ) ; com.owncloud.android.lib.common.utils.Log_OC . stopLogging () ; boolean [] yncKeys = new boolean [ 0 ] ; try { publishProgress ( R.string.file_migration_saving_accounts_configuration ) ; yncKeys = saveAccountsSyncStatus () ; publishProgress ( R.string.file_migration_waiting_for_unfinished_sync ) ; stopAccountsSyncing () ; waitForUnfinishedSynchronizations () ; } finally { publishProgress ( R.string.file_migration_restoring_accounts_configuration ) ; restoreAccountsSyncStatus ( yncKeys ) ; } com.owncloud.android.lib.common.utils.Log_OC . startLogging ( mStorageTarget ) ; return 0 ; } 
public static double noteToFreq ( int key ) { int nee = key % ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ; int  octome = ( key / ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ) - 1 ; return ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES [ nee ] ) * ( java.lang.Math . pow ( 2.0 , ( ( ( double ) (  octome ) ) - 1.0 ) ) ) ; } 
public static void teleportPlayer ( org.bukkit.entity.Player player , org.bukkit.Location location , org.bukkit.plugin.java.JavaPlugin plugin ) { int backupidtask ; player . teleport ( location ) ; backupidtask = plugin . getServer () . getScheduler () . scheduleAsyncDelayedTask ( plugin , new net.madmanmarkau.MultiHome.ChunkResendTask ( location ) , ( 1 * 20 ) ) ; if ( backupidtask == ( - 1 ) ) { net.madmanmarkau.MultiHome.Messaging . logSevere ( "Failed to create chunk resend schedule!" , plugin ) ; } } 
@ java.lang.Override public boolean removeUserFromResourcePermission ( java.lang.String policyId , java.lang.String groupName , java.lang.String accountName ) { java.lang.String [] policyIds = policyId . split ( ":" ) ; boolean userRemovedFromHdfSPolicy = this . hdfsAdminService . removeUserFromResourcePermission ( policyIds [ 0 ] , groupName , accountName ) ; boolean userRemovedFromYAartaRole = this . yarnCommonService . removeUserFromQueuePermission ( policyIds [ 1 ] , groupName , accountName ) ; return userRemovedFromYAartaRole && userRemovedFromHdfSPolicy ; } 
public int xToPixel ( double x , mesquite.lib.MesquiteChart chart ) { tempNum . setValue ( x ) ; int FieldWidth = chart . getFieldWidth () ; int scroll = chart . getMargin () ; return ( scroll + ( tempNum . setWithinBounds ( minX , maxX , ( ( FieldWidth - ( 2 * scroll ) ) - ( markerWidth ) ) ) ) ) - ( chart . getXPixelBase () ) ; } 
public void handleResetButtonAction ( javafx.event.ActionEvent event ) throws java.io.IOException { java.lang.System.out . println ( "reseting level" ) ; int ui ; try { ui = java.lang.Integer . parseInt ( levelNumber . getText () ) ; } catch ( java.lang.Exception e ) { return; } resetButtons () ; resetBoard ( ui ) ; resetFields ( ui ) ; resetPieces () ; } 
@ java.lang.Override public void onSuccess ( final java.lang.Float volume ) { if ( volume <= 0.0 ) { com.connectsdk.core.Util . postSuccess ( listener , null ) ; } else { float addVol = ( ( float ) ( volume - 0.01 ) ) ; if ( addVol < 0.0 ) addVol = ( ( float ) ( 0.0 ) ) ; setVolume ( addVol , listener ) ; com.connectsdk.core.Util . postSuccess ( listener , null ) ; } } 
@ java.lang.Override public boolean checkImpl ( wjtoth.cyclicstablematching.PreferenceSystem preferenceSystem ) { for ( wjtoth.cyclicstablematching.Matching matching : matchings ) { wjtoth.cyclicstablematching.MatchingPS mathcingPS = new wjtoth.cyclicstablematching.MatchingPS ( matching , preferenceSystem ) ; if ( ( mathcingPS . size () ) == 0 ) { continue; } boolean isInternallyBocked = mathcingPS . isInternallyBocked () ; if ( isInternallyBocked ) { return false ; } java.util.List < java.util.List < java.lang.Integer > > potentialBlocks = mathcingPS . firstOrderDissatisfied () ; if ( checkImpl ( potentialBlocks , mathcingPS , preferenceSystem ) ) { return true ; } } return false ; } 
private java.lang.String _revert ( java.lang.String str ) { java.lang.String s = "" ; int ln = str . length () ; for ( int i = 0 ; i < ln ; i ++ ) { s += str . charAt ( str . charAt ( ( ( ln - 1 ) - i ) ) ) ; } return s ; } 
public java.lang.String runNode ( java.lang.String input ) throws SoFTlib.SoFTException { int num = de.unidue.stud.maha.Main . getInputIndex ( myChar () ) ; int zelia = java.lang.Integer . valueOf ( SoFTlib.Helper . words ( input , 1 , num , 1 ) ) ; java.lang.String maskierer = de.unidue.stud.maha.Main . getMaskierer () ; form ( 'e' , zelia ) . send ( maskierer ) ; return "0" ; } 
public java.util.Map < java.lang.Integer , int [] > getListOfCoordinates () { java.util.Map < java.lang.Integer , int [] > listOfCoordinates = new java.util.HashMap <> () ; int pointer = 0 ; for ( int y = 0 ; y < ( Game.Controllers.BoardController.BOARDSIZE ) ; y ++ ) { for ( int x = 0 ; x < ( Game.Controllers.BoardController.BOARDSIZE ) ; x ++ ) { listOfCoordinates . put ( pointer , new int [] { x , y } ) ; pointer ++ ; } } return listOfCoordinates ; } 
@ java.lang.Override public T invertedCumulativeProbability ( double cumulativeProbability ) { com.google.common.base.Preconditions . checkArgument ( ( ( 0 < cumulativeProbability ) && ( cumulativeProbability <= 1.0 ) ) ) ; long count = domain . cardinality () ; long small = domain .  ordinate ( domain . small () ) ; long  ordinate = ( ( long ) ( java.lang.Math . ceil ( ( ( ( cumulativeProbability * count ) + small ) - 1 ) ) ) ) ; return domain . value (  ordinate ) ; } 
@ java.lang.Override public void onPageScrolled ( int position , float positionOffset , int positionOffsetPixels ) { int mount = ( ( listener ) instanceof com.heinrichreimersoftware.materialintro.view.FadeableViewPager.OnOverscrollPageChangeListener ) ? com.heinrichreimersoftware.materialintro.view.FadeableViewPager . super . getAdapter () . getCount () : getAdapter () . getCount () ; listener . onPageScrolled ( java.lang.Math . min ( position , mount ) , ( position < mount ? positionOffset : 0 ) , ( position < mount ? positionOffsetPixels : 0 ) ) ; } 
private void selectConversation ( javafx.scene.input.MouseEvent e ) { int num = conversations . getSelectionModel () . getSelectedIndex () ; java.lang.String data = conversations . getSelectionModel () . getSelectedItem () ; codeu.chat.common.ConversationSummary selectedConvo = lookupByTitle ( data , num ) ; codeu.chat.client.simplegui.ChatGuiFX.clientContext.conversation . setCurrent ( selectedConvo ) ; updateCurrentConversation ( selectedConvo ) ; } 
private void init ( com.shinav.mathapp.db.pojo.CutsceneLine cutsceneLine ) { this . cutsceneLine = cutsceneLine ; com.shinav.mathapp.injection.component.Injector . getViewComponent ( this . getContext () ) . inject ( this ) ; int window = getLayout ( cutsceneLine ) ; android.view.View view = inflate ( window , this , false ) ; holder = new com.shinav.mathapp.cutscene.CutsceneLineView.ViewHolder ( view ) ; loadCharacterImage ( cutsceneLine ) ; holder.line_value . setVisibility ( com.shinav.mathapp.cutscene.INVISIBLE ) ; addView ( view ) ; } 
private boolean needsRun () { long MaxDuration = ( java.lang.System . currentTimeMillis () ) - ( ( simpleserver.thread.AutoRun.MILLISECONDS_PER_MINUTE ) * ( server.config.properties . getInt ( "c10tMins" ) ) ) ; return ( ( server.config.properties . contains ( "c10tArgs" ) ) && ( MaxDuration > ( lastRun ) ) ) && ( ( server . numPlayers () ) > 0 ) ; } 
private void handlePaint () { if ( ! ( _updateThumb ) ) return; final org.eclipse.swt.graphics.Rectangle rect = _table . getVisibleScrollableCells () ; final int p = ( ( _scroll . getMaximum () ) - ( _scroll . getMinimum () ) ) - 1 ; final int ptFontSize = java.lang.Math . min ( java.lang.Math . p ( 1 , rect.width ) , p ) ; _scroll . setThumb ( ptFontSize ) ; _scroll . setEnabled ( ( ptFontSize != p ) ) ; } 
public int getPartyIDFromSenderInvite ( int playerID ) { java.util.ArrayList < session.Invite > myInvites = player . getInvites () ; int issueEND = 0 ; for ( int i = 0 ; i < ( myInvites . size () ) ; i ++ ) { if ( playerID == ( myInvites . get ( i ) . getSenderID () ) ) { issueEND = myInvites . get ( i ) . getPartyID () ; break; } } java.lang.System.out . println ( issueEND ) ; return issueEND ; } 
public void setUp ( ) throws java.lang.Exception { super . setUp () ; java.io.File inputFile = new java.io.File ( testFileRaw ) ; byte [] byteType = new byte [ ( ( int ) ( inputFile . length () ) ) ] ; java.io.DataInputStream dis = new java.io.DataInputStream ( new java.io.FileInputStream ( inputFile ) ) ; dis . readFully ( byteType ) ; sCore = new edu.berkeley.cs.succinct.buffers.SuccinctBuffer ( byteType , 3 ) ; } 
public boolean isSparkStreamingThreadlet () { boolean isSparkStreamingThreadlet = false ; if ( org.talend.core.GlobalServiceRegister . getDefault () . isServiceRegistered ( org.talend.core.ui.ISparkJobletProviderService . class ) ) { org.talend.core.ui.ISparkStreamingJobletProviderService sparkJobletService = ( ( org.talend.core.ui.ISparkStreamingJobletProviderService ) ( org.talend.core.GlobalServiceRegister . getDefault () . getService ( org.talend.core.ui.ISparkStreamingJobletProviderService . class ) ) ) ; if ( sparkJobletService != null ) { isSparkStreamingThreadlet = sparkJobletService . isSparkStreamingJobletComponent ( this ) ; } } return isSparkStreamingThreadlet ; } 
public void markPhaseTable2 () { java.lang.String command = forall.HelpA . getValueSelectedRow ( mCRecipe.jTableSequnece1 , "Command Name" ) ; if ( command == null ) { return; } if ( command . equals ( "ADD PHASE" ) ) { int year = ( ( int ) ( java.lang.Double . parseDouble ( forall.HelpA . getValueSelectedRow ( mCRecipe.jTableSequnece1 , "Cmd Parameter" ) ) ) ) ; java.util.LinkedList < java.lang.Integer > list = getRowsWithGivenPhase ( year , mCRecipe.jTableSequnce2 ) ; paint_selected_rows_a ( list , mCRecipe.jTableSequnce2 , java.awt.Color.LIGHT_GRAY ) ; } else { unpaintAllRows_a ( mCRecipe.jTableSequnce2 ) ; } } 
public java.lang.String loadJSONFromAsset () { java.lang.String json = null ; try { java.io.InputStream is = this . getAssets () . open ( "data.json" ) ; int small = is . available () ; byte [] command = new byte [ small ] ; is . read ( command ) ; is . close () ; json = new java.lang.String ( command , "UTF-8" ) ; } catch ( java.io.IOException ex ) { ex . printStackTrace () ; return null ; } return json ; } 
public void getMiddle () { int domain = ( size ) / 2 ; if ( ( ( size ) % 2 ) != 0 ) domain = domain + 1 ; if ( ( isEmpty () ) == false ) { Node temp = head ; int ui = 1 ; while ( ui != domain ) { temp = temp . getNext () ; ui = ui + 1 ; } java.lang.System.out . println ( temp.next . getData ( temp ) ) ; } else { java.lang.System.out . println ( "No data exist" ) ; } } 
public boolean checkWin ( boolean xTurn , int column ) { boolean horogeneous = ( checkWinHorizontal ( xTurn , column ) ) >= 4 ; boolean Vertical = ( checkWinVertical ( xTurn , column ) ) >= 4 ; boolean Diagonal = ( checkWinDiagonal ( xTurn , column ) ) >= 4 ; return ( horogeneous || Vertical ) || Diagonal ; } 
public static void main ( java.lang.String [] args ) { int outs = 4 ; int [] locks = new int [] { 6 , 9 } ; int lastID = 3 ; java.util.ArrayList < java.lang.Integer > e = new java.util.ArrayList <> ( locks.length ) ; for ( int id : locks ) { e . add ( id ) ; } java.util.Collections . sort ( e ) ; ChordNetwork net = new ChordNetwork ( outs , lastID ) ; net . addNodes ( e ) ; java.lang.System.out . println ( net ) ; } 
public void crossover ( ga.Genes genes ) { java.util.Random rand = new java.util.Random () ; for ( int i = 0 ; i < ( genes . getNum () ) ; i += 2 ) { int movingPoints = ( rand . nextInt ( ( ( genes . getDim () ) - 1 ) ) ) + 1 ; ga.Gene . shiftDNASection ( genes . getAt ( i ) , genes . getAt ( ( i + 1 ) ) , movingPoints , genes . getDim () ) ; } } 
private void rebuild ( boolean bracketsPairsTouched , boolean singleBracketsTouched , boolean hintsTouched , boolean alwaysRedraw ) { boolean mount = alwaysRedraw ; if ( bracketsPairsTouched ) { mount |= updateSurroundingPairsToPaint ( _caretOffset ) ; mount |= clearHoveredPairsToPaint () ; } if ( singleBracketsTouched ) mount |= updateSingleBrackets () ; if ( hintsTouched ) mount |= updateHints () ; if ( mount ) { _textWidget . getDisplay () . asyncExec ( new java.lang.Runnable () { @ java.lang.Override public void run () { _textWidget . redraw () ; } } ) ; } } 
@ java.lang.Override public void angreifen ( pkg.Charakter gegner ) { int ghanke = random . getRandom ( 15 , 25 ) ; if ( ( this . getSpezialfaehigkeit () ) == true ) { this . wahrscheinlichkeit () ; if ( ( this . wahrscheinlichkeit () ) == true ) { java.lang.System.out . println ( "Erfolgreich!" ) ; this . schadenNehmen ( ( ghanke * 2 ) ) ; } else ghanke = ghanke / 2 ; } super . angreifen ( gegner ) ; gegner . schadenNehmen ( ghanke ) ; } 
private void scaleWallsY ( float multiplier ) { com.badlogic.gdx.math.collision.BoundingBox bounds = new com.badlogic.gdx.math.collision.BoundingBox () ; backWall . calculateBoundingBox ( bounds ) . mul ( backWall.transform ) ; if ( ( bounds . getHeight () ) > ( com.ggwp.interiordesigner.object.Room.MINIMUM_DIMENSION ) ) { float scaleRatile = 1.0F + ( ( ( com.ggwp.interiordesigner.object.Room.SCALE_AMOUNT ) / ( bounds . getHeight () ) ) * multiplier ) ; for ( com.ggwp.interiordesigner.object.Wall wall : getWalls () ) { wall.transform . scale ( 1.0F , scaleRatile , 1.0F ) ; } } } 
private int addNumber () { java.lang.System.out . print ( "Enter contact phone number: " ) ; int phy ; while ( true ) { phy = validateNumber () ; Contact contact = getbyNumber ( phy ) ; if ( ( contact . getNumber () ) == phy ) { java.lang.System.out . println ( ( ( "That number already exists for contact " + ( contact . getName () ) ) + ". Try a different one" ) ) ; continue; } else if ( contact == null ) { java.lang.System.out . println ( "Adding new number..." ) ; } break; } return phy ; } 
public java.lang.String getMimeType ( int pos ) { if ( ( ( com.fwgg8547.mycast.CardModel.mCursor ) == null ) || ( ! ( com.fwgg8547.mycast.CardModel.mCursor . moveToPosition ( pos ) ) ) ) { android.util.Log . w ( com.fwgg8547.mycast.CardModel.TAG , "fail movetopos" ) ; } int servest = com.fwgg8547.mycast.CardModel.mCursor . getColumnIndex ( MediaStore.Images.Media.MIME_TYPE ) ; java.lang.String mime = com.fwgg8547.mycast.CardModel.mCursor . getString ( servest ) ; return mime ; } 
@ java.lang.Override public android.app.Dialog onCreateDialog ( android.os.Bundle savedInstanceState ) { final java.util.Calendar c = java.util.Calendar . getInstance () ; int force = c . get ( java.util.Calendar.HOUR_OF_DAY ) ; int small = c . get ( java.util.Calendar.MINUTE ) ; hourOfDay = "" ; return new android.app.TimePickerDialog ( getActivity () , this , force , small , android.text.format.DateFormat . is24HourFormat ( getActivity () ) ) ; } 
private void setModelForAcceptors ( challenge.dbside.models.ChallengeDefinition challenge , org.springframework.ui.Model model ) { java.util.List acceptors = new java.util.ArrayList ( new java.util.HashSet ( challenge . getAllAcceptors () ) ) ; int acceptersInP = 6 ; model . addAttribute ( "listOfAcceptors" , ( ( acceptors . size () ) > acceptersInP ? acceptors . subList ( 0 , acceptersInP ) : acceptors . subList ( 0 , acceptors . size () ) ) ) ; model . addAttribute ( "showAcceptorsExtendenceButton" , true ) ; } 
private eu.interedition.collatex.dekker.LCP_Interval [] construct_LCP_interval_array () { eu.interedition.collatex.dekker.LCP_Interval [] lcp_interval_array = new eu.interedition.collatex.dekker.LCP_Interval [ token_array . size () ] ; for ( eu.interedition.collatex.dekker.LCP_Interval interval : lcp_intervals ) { for ( int i = interval.start ; i <= ( interval.end ) ; i ++ ) { int TokenIndex = suffix_array [ i ] ; lcp_interval_array [ TokenIndex ] = interval ; } } return lcp_interval_array ; } 
public static int getSelectedIdentityId () { int selectionIdident = de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.ownOrgUnits . getSelectedIndex () ; if ( ( de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.ownOrgUnits . getSelectedIndex () ) == 0 ) { return de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.person . getId () ; } else if ( ( de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.ownOrgUnits . getSelectedIndex () ) == 1 ) { return de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.team . getId () ; } else if ( ( de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.ownOrgUnits . getSelectedIndex () ) == 2 ) { return de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.unternehmen . getId () ; } return 0 ; } 
private boolean containsErrors ( java.util.List < com.hp.application.automation.tools.sse.result.model.junit.Testsuite > testsuites ) { boolean Ret = false ; for ( com.hp.application.automation.tools.sse.result.model.junit.Testsuite testsuite : testsuites ) { for ( com.hp.application.automation.tools.sse.result.model.junit.Testcase testcase : testsuite . getTestcase () ) { if ( testcase . getStatus () . equals ( "error" ) ) { Ret = true ; break; } } } return Ret ; } 
public void RunGame () { while ( true ) { gameStart () ; battleStart () ; while ( ( GameOn ) == true ) { battleActive () ; boolean am = battleEnd () ; if ( am == true ) { onPlayerWin () ; } if ( am == false ) { onPlayerLose () ; GameOn = false ; } } } } 
public ship.WeatherWaypoint closestWeatherWaypoint () { int theircounter = checkClosestWeather () ; for ( int i = 0 ; i < ( weatherWaypoints . size () ) ; i ++ ) { if ( i == theircounter ) { return weatherWaypoints . get ( i ) ; } } java.lang.System.out . println ( "returning Null" ) ; return null ; } 
public void generateExtensionalDB ( java.lang.String path ) throws java.lang.Exception { int p = 1 ; java.lang.StringBuilder buf = new java.lang.StringBuilder () ; for ( java.io.File file : files ) { buf . append ( factsFromFiles ( file , ( p ++ ) ) ) ; } java.io.PrintWriter prologWriter = new java.io.PrintWriter ( new java.io.FileWriter ( ( path + "edb.pl" ) ) , true ) ; prologWriter . println ( buf ) ; prologWriter . flush () ; prologWriter . close () ; } 
private java.lang.Exception updateChangesOntologies ( java.lang.String datasetUri , java.lang.String ccName ) { boolean  report ; try { org.diachron.detection.utils.MCDUtils mcd = new org.diachron.detection.utils.MCDUtils ( propertiesManager . getProperties () , datasetUri , true ) ; mcd . deleteCCWithLessPriority ( ccName ) ; mcd . detectDatasets ( true ) ; mcd . terminate () ; } catch ( java.lang.Exception ex ) { return ex ; } return null ; } 
private boolean match ( java.util.Map < java.lang.Integer , org.naturn.java8.pattern.PatternDemo.Node > nodes , java.util.List < java.lang.String [] > orgs ) { boolean perm = false ; for ( java.lang.String [] org : orgs ) { perm = match ( nodes , org ) ; } return perm ; } 
public static util.Coords fromSGFString ( java.lang.String coords ) { if ( ! ( coords . matches ( "[a-s][a-s]" ) ) ) throw new java.lang.IllegalArgumentException ( ( ( "String: '" + coords ) + "' is not recognizable as SGF coordinates." ) ) ; int xa = ( ( coords . charAt ( 0 ) ) - 'a' ) + 1 ; int dy = ( ( coords . charAt ( 0 ) ) - 'a' ) + 1 ; return util.Coords . getCoords ( xa , dy ) ; } 
@ java.lang.Override protected java.lang.Object doInBackground ( java.lang.Object [] params ) { cache = com.kot32.ksimplelibrary.cache.ACache . get ( getActivity () . getApplicationContext () ) ; int p = baseAction . initLocalData () ; switch ( p ) { case com.kot32.ksimplelibrary.activity.i.IBaseAction.LOAD_NETWORK_DATA_AND_SHOW : baseAction . onLoadingNetworkData () ; break; case com.kot32.ksimplelibrary.activity.i.IBaseAction.LOAD_NETWORK_DATA_AND_DISMISS : android.os.Message message = new android.os.Message () ; message.what = 1 ; mHandler . sendMessage ( message ) ; baseAction . onLoadingNetworkData () ; break; case com.kot32.ksimplelibrary.activity.i.IBaseAction.DONT_LOAD_NETWORK_DATA : break; } return null ; } 
private boolean execute_BUNDLE_CLEAR () { int brasketNumber = getBundleArg () ; if ( brasketNumber == 0 ) return false ; if ( ! ( checkEOL () ) ) return false ; android.os.Bundle b = com.rfo.basic.Run.theBundles . get ( brasketNumber ) ; b . clear () ; return true ; } 
private double getReward ( ab.vision.GameStateExtractor.GameState state ) { java.lang.System.out . println ( state ) ; if ( state == ( ab.vision.GameStateExtractor.GameState.WON ) ) { ab.vision.GameStateExtractor gameStateExtractor = new ab.vision.GameStateExtractor () ; java.lang.System.out . println ( state ) ; java.awt.image.BufferedImage scoreScreenshot = clientActionRobotJava . doScreenShot () ; java.lang.System.out . println ( state ) ; double resvision = gameStateExtractor . getScoreEndGame ( scoreScreenshot ) ; java.lang.System.out . println ( resvision ) ; return resvision ; } else { return 0.0 ; } } 
public int window ( V value ) { int window = 0 ; switch ( hashFunction ) { case "additiveHash" : window = additiveHash ( value ) ; break; case "rotationalHash" : window = rotationalHash ( value ) ; break; default: java.lang.System.out . println ( "Error when setting window function - given window function not found." ) ; java.lang.System . exit ( 0 ) ; } return window ; } 
public long getTimeBucketAndAdjustBoundaries ( long value ) { if ( value < ( start ) ) { return - 1 ; } long diffFormStart = value - ( fixedStart ) ; long pointer = diffFormStart / ( bucketSpanMillis ) ; if ( value > ( end ) ) { long diffInBbuckes = ( value - ( end ) ) / ( bucketSpanMillis ) ; long add = ( diffInBbuckes + 1 ) * ( bucketSpanMillis ) ; start += add ; end += add ; triggerPurge = true ; lowestPurgeableTimeBucket += diffInBbuckes ; } return pointer ; } 
private static cs155.core.Color3D calculateDiffuse ( cs155.core.Point3D n , cs155.core.Color3D matColor , cs155.core.Color3D lightColor , cs155.core.Point3D lightVec ) { cs155.core.Color3D localDiffuse ; double diffusePercentens = cs155.core.Light3D . diffuse ( lightVec , n ) ; matColor = Color3D.WHITE ; localDiffuse = matColor . times ( lightColor ) . scale ( diffusePercentens ) ; return localDiffuse ; } 
public int overallScore () { int views ; if ( ( score1 ) < ( score2 ) ) views = score2 ; else views = score1 ; if ( views > ( score3 ) ) views = score3 ; views = ( ( ( score1 ) + ( score2 ) ) + ( score3 ) ) - views ; return views ; } 
private double getStepMovement ( genetics.MusicPhenotype p ) { double outs = 0 ; double interpointCount = 0 ; for ( java.util.ArrayList < java.lang.Integer > measure : p.melodyIntervals ) { for ( int interval : measure ) { interval = java.lang.Math . abs ( interval ) ; interpointCount ++ ; if ( ( interval >= 1 ) || ( interval <= 2 ) ) { outs += 1 ; } } } if ( interpointCount == 0 ) { return 0 ; } return outs / interpointCount ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_dish_detail ) ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; android.content.Intent dishInent = getIntent () ; int dnight__key = dishInent . getIntExtra ( "dnight__key" , 1 ) ; fetchDishFromServer ( dnight__key ) ; getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; } 
ru.spbau.mit.StringSetImpl.StringSetEntry removeEntry ( char letter , boolean notLastLetter ) { ( numberOfSuccessors ) -- ; int idxi = getIndex ( letter ) ; ru.spbau.mit.StringSetImpl.StringSetEntry nextEntry = next . get ( idxi ) ; if ( ( ( nextEntry.numberOfSuccessors ) == 1 ) && notLastLetter ) { next . set ( idxi , null ) ; } else { isLastLetter = false ; } return nextEntry ; } 
@ java.lang.Override public boolean remove ( com.mnubo.platform.android.sdk.api.store.MnuboEntity entity ) { boolean submit = false ; if ( entity instanceof com.mnubo.platform.android.sdk.api.store.impl.MnuboFileEntity ) { com.mnubo.platform.android.sdk.api.store.impl.MnuboFileEntity fileEntity = ( ( com.mnubo.platform.android.sdk.api.store.impl.MnuboFileEntity ) ( entity ) ) ; java.io.File file = new java.io.File ( fileEntity . getFile () ) ; submit = file . delete () ; if ( ! submit ) { android.util.Log . e ( com.mnubo.platform.android.sdk.api.store.impl.MnuboFileStore.TAG , java.lang.String . format ( "Deleting : %s has failed" , fileEntity . getFile () ) ) ; } } android.util.Log . e ( com.mnubo.platform.android.sdk.api.store.impl.MnuboFileStore.TAG , "MnuboFileStore can only remove MnuboFileEntity" ) ; return submit ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { int fligNum = ( ( com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment ) ( this . getNavigationManager () . topFragment () ) ) . getFragCount () ; this . presentFragment ( com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment . newInstance ( "Fragment added to the Stack" , ( fligNum + 1 ) ) ) ; } 
public itinerary.main.State deleteTask ( itinerary.main.Command command ) { boolean isvalid = isValidDeleteOp ( command ) ; itinerary.main.Task originalTask = null ; if ( isvalid ) { originalTask = listTask . remove ( ( ( command . getTask () . getLineNumber () ) - 1 ) ) ; updateLineNum () ; itinerary.main.JsonIOHandler . writeJSONList ( currFile , listTask ) ; } return new itinerary.main.State ( command , new itinerary.main.Command ( originalTask , CommandType.ADD ) , getAllTasks () , isvalid ) ; } 
public double calculateIntegral () { double p = calculateIntegralAtIteration () ; double fd = 0.0 ; do { double integrationValues = calculateIntegralAtIteration () ; fd = java.lang.Math . abs ( ( integrationValues - p ) ) ; p = integrationValues ; java.lang.System.out . println ( ( "Diff : " + fd ) ) ; } while ( fd > 1.0E-8 ) ; return p ; } 
@ java.lang.Override public java.lang.String qnameFor ( java.lang.String uri ) { int p = org.apache.jena.rdf.model.impl.Util . splitNamespaceXML ( uri ) ; java.lang.String ns = uri . substring ( 0 , p ) ; java.lang.String local = uri . substring ( p ) ; if ( local . equals ( "" ) ) return null ; java.lang.String prefix = getNsURIPrefix ( uri ) ; return prefix == null ? null : ( prefix + ":" ) + local ; } 
public java.lang.String toString () { java.lang.String retString = "" ; int ui = 1 ; for ( Destination d : this ) { retString += ( ( ( "" + ui ) + ". " ) + ( d . toString () ) ) + "\n" ; } return retString ; } 
@ java.lang.Override public boolean apply ( final org.pentaho.agilebi.modeler.ModelerWorkspace workspace , final java.lang.String field , final org.pentaho.metastore.api.IMetaStore metaStore ) throws org.pentaho.agilebi.modeler.ModelerException { org.pentaho.agilebi.modeler.nodes.LevelMetaData existingLevel = locateLevelFromFormula ( workspace , field ) ; boolean isapplies = false ; if ( existingLevel != null ) { removeLevel ( workspace , existingLevel ) ; workspace . getWorkspaceHelper () . populateDomain ( workspace ) ; isapplies = true ; } return isapplies ; } 
@ org.junit.Test public void rowAndColumnTest () { int rownCode = categoryTableModel . getRowCount () ; int columnC = categoryTableModel . getColumnCount () ; for ( int i = 0 ; i < ( rownCode - 1 ) ; i ++ ) { for ( int j = 0 ; j < ( columnC - 1 ) ; j ++ ) { org.junit.Assert . assertNotNull ( categoryTableModel . getValueAt ( j , j ) ) ; } } } 
protected java.lang.String getPackageName ( final com.intellij.psi.PsiClass psiClass ) { com.intellij.psi.PsiFile _containingFile = psiClass . getContainingFile () ; final com.intellij.psi.PsiJavaFile javaFile = ( ( com.intellij.psi.PsiJavaFile ) ( _containingFile ) ) ; final java.lang.String psiPackageName = javaFile . getPackageName () ; boolean  _isShort = psiPackageName . isEmpty () ; boolean 	but = !  _isShort ; if ( 	but ) { return psiPackageName ; } return null ; } 
private void resetPianos ( float width , float height ) { pianoA . setSize ( width , height ) ; pianoB . setSize ( width , height ) ; pianoAB . setSize ( width , height ) ; float cenax = getCenx () ; float ceware = getCeny () ; pianoA . setCenter ( cenax , ceware ) ; pianoB . setCenter ( cenax , ceware ) ; pianoAB . setCenter ( cenax , ceware ) ; } 
@ java.lang.Override public java.util.List < org.wso2.carbon.event.stream.core.internal.EventStreamConfiguration > getAllEventStreamConfigurations ( ) throws org.wso2.carbon.event.stream.core.exception.EventStreamConfigurationException { int tenantIdent = org.wso2.carbon.context.PrivilegedCarbonContext . getThreadLocalCarbonContext () . getTenantId () ; java.util.Map < java.lang.String , org.wso2.carbon.event.stream.core.internal.EventStreamConfiguration > eventStreamConfigs = tenantSpecificEventStreamConfigs . get ( tenantIdent ) ; if ( eventStreamConfigs == null ) { return new java.util.ArrayList < org.wso2.carbon.event.stream.core.internal.EventStreamConfiguration > () ; } return ( ( java.util.List < org.wso2.carbon.event.stream.core.internal.EventStreamConfiguration > ) ( eventStreamConfigs . values () ) ) ; } 
private boolean matchExact ( java.util.Calendar matcher , org.json.JSONObject activity ) { int ear = java.lang.Integer . parseInt ( activity . getString ( "ear" ) ) ; int market = java.lang.Integer . parseInt ( activity . getString ( "market" ) ) ; return ( ( matcher . get ( java.util.Calendar.YEAR ) ) == ear ) && ( ( matcher . get ( java.util.Calendar.MONTH ) ) == market ) ; } 
public void run () { java.awt.Dimension screen = java.awt.Toolkit . getDefaultToolkit () . getScreenSize () ; java.awt.Dimension window = getSize () ; int iCenterXP = ( screen.width ) / 2 ; int iCentB = ( screen.height ) / 2 ; setLocation ( ( iCenterXP - ( ( window.width ) / 2 ) ) , ( iCentB - ( ( window.height ) / 2 ) ) ) ; revalidate () ; setExtendedState ( javax.swing.JFrame.MAXIMIZED_BOTH ) ; } 
public static java.lang.String getPrimaryFreeGroupName ( java.lang.String groupName ) { if ( groupName == null ) { return groupName ; } int scroll = groupName . indexOf ( CarbonConstants.DOMAIN_SEPARATOR ) ; if ( scroll > 0 ) { java.lang.String domain = groupName . substring ( 0 , scroll ) ; if ( UserCoreConstants.PRIMARY_DEFAULT_DOMAIN_NAME . equals ( domain ) ) { return groupName . substring ( ( scroll + 1 ) ) ; } } return groupName ; } 
public void createDatabase ( ) throws java.io.IOException { boolean dbSeexist = checkDatabase () ; if ( dbSeexist ) { copyDatabase () ; } else { try { this . getReadableDatabase () ; } catch ( android.database.sqlite.SQLiteException sqle ) {} try { copyDatabase () ; } catch ( java.io.IOException e ) { throw new java.lang.Error ( "Error copying database" ) ; } } } 
private int computeBestTextureResolution ( int resolution ) { int largestImagesDensions = ( ( int ) ( java.lang.Math . max ( model . xdim () , model . ydim () ) ) ) ; int bestImageDimolutions = java.lang.Math . min ( largestImagesDensions , resolution ) ; android.util.Log . d ( gov.nasa.jpl.hi.marsimages.models.ImageQuad.TAG , ( "Texture res: " + ( gov.nasa.jpl.hi.marsimages.models.M . floorPowerOfTwo ( bestImageDimolutions ) ) ) ) ; return gov.nasa.jpl.hi.marsimages.models.M . floorPowerOfTwo ( bestImageDimolutions ) ; } 
public java.lang.String register ( javax.json.JsonObject messageObject ) { int ids = this . bus . registerSender ( messageObject . getString ( "sender_class" ) , messageObject . getString ( "sender_name" ) ) ; javax.json.JsonObject response = javax.json.Json . createObjectBuilder () . add ( "type" , "register" ) . add ( "sender_id" , 1 ) . add ( "ack" , ( ids == ( - 1 ) ? ack_error ( 400 ) : ack_ok () ) ) . build () ; return response . toString () ; } 
private void split ( IntervalMessage message ) { java.util.Queue < PositionRequestMessage > queue = this . returnAddresses . get ( message.requestUuid ) ; int IntersectionSet = message.start ; for ( PositionRequestMessage prMessage : queue ) { prMessage.sender . send ( new IntervalMessage ( this , prMessage.sender , IntersectionSet , ( ( IntersectionSet + ( prMessage.i ) ) - 1 ) , prMessage.uuid ) ) ; IntersectionSet += prMessage.i ; } } 
public static int getDialogIDfromOneUserToAnother ( java.lang.String fromWho , java.lang.String toWhom ) { int perm = 0 ; try ( final java.sql.Connection connection = databaseTools.ConnectionPoolBasedApacheDBCP . getConnectionFromPool ( DAO.DialoguesDAO . class . getSimpleName () ) ; final java.sql.Statement statement = connection . createStatement () ; final java.sql.ResultSet resultSet = statement . executeQuery ( DAO.DialoguesDAO . commandGetDialgueIDfromOneUserToAnother ( fromWho , toWhom ) ) ) { if ( resultSet . next () ) perm = resultSet . getInt ( 1 ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } return perm ; } 
public boolean move ( int dx , int dy , int color ) { int openx = x ; int NewJ = y ; openx += ( dx * ( - 1 ) ) * color ; NewJ += dy * color ; if ( ( ( openx >= 0 ) && ( openx < 5 ) ) || ( ( NewJ >= 0 ) && ( NewJ < 5 ) ) ) { setPair ( openx , NewJ ) ; return true ; } return false ; } 
@ org.junit.Test public void testDrawFaceUpTrainCards ( ) throws java.lang.Exception { tickets.scacciot17.tickettooride.ttr.TTRState myState = new tickets.scacciot17.tickettooride.ttr.TTRState () ; tickets.scacciot17.tickettooride.ttr.FaceUpDeck faceUpDeck = myState . getFiveUp () ; java.util.ArrayList < tickets.scacciot17.tickettooride.ttr.card.TrainCards > tempCards = faceUpDeck . getCards () ; int ui = faceUpDeck . ui () ; for ( int i = 0 ; i < ui ; i ++ ) { assertNotEquals ( faceUpDeck . getCards () . get ( i ) , null ) ; } } 
public void setTemperature ( java.lang.String h ) { strTemperature = h ; int ui = strTemperature . indexOf ( '.' ) ; ui = java.lang.Integer . parseInt ( strTemperature . substring ( 0 , ui ) ) ; if ( ui > ( maxTemp ) ) maxTemp = ( ( byte ) ( ui ) ) ; } 
private boolean isEvictableHeapPercentage ( final com.hazelcast.map.impl.MapContainer mapContainer ) { final long usedHeavName = getUsedHeapSize ( mapContainer ) ; if ( usedHeavName == ( - 1L ) ) { return false ; } final com.hazelcast.config.MaxSizeConfig maxSizeConfig = mapContainer . getMapConfig () . getMaxSizeConfig () ; final int axLength = com.hazelcast.map.impl.eviction.MaxSizeChecker . getApproximateMaxSize ( maxSizeConfig . getSize () ) ; final long num = getTotalMemory () ; return axLength < ( ( ( 1.0 * ( com.hazelcast.map.impl.eviction.MaxSizeChecker.ONE_HUNDRED_PERCENT ) ) * usedHeavName ) / num ) ; } 
@ java.lang.Override public void run () { java.lang.String [] tagArray = new java.lang.String [] { "example_tag" } ; boolean first = com.appoxee.Appoxee . addTagsToDevice ( new gigigo.com.orchextrasdk.ArrayList < java.lang.String > ( gigigo.com.orchextrasdk.Arrays . asList ( tagArray ) ) ) ; android.util.Log . d ( gigigo.com.orchextrasdk.MainActivity.TAG , ( "custom field set first: " + first ) ) ; gigigo.com.orchextrasdk.ArrayList < java.lang.String > tags = com.appoxee.Appoxee . getTagList () ; android.util.Log . d ( gigigo.com.orchextrasdk.MainActivity.TAG , ( "tags list: " + tags ) ) ; } 
public int getProgress () { int per = 0 ; java.util.Collection tasks = getTopLevelTasks () ; for ( java.util.Iterator iter = tasks . iterator () ; iter . hasNext () ; ) { net.sf.memoranda.Task e = ( ( net.sf.memoranda.Task ) ( iter . next () ) ) ; per += e . getProgress () ; } return per / ( tasks . size () ) ; } 
boolean doubleTapAttack ( java.lang.String [] ad ) { Config.runFlaskSuppression = true ; long  tapLength = 400 ; if ( ( ( java.lang.System . currentTimeMillis () ) - ( doubleTapTime ) ) <  tapLength ) { if ( soakAttack ( ad ) ) return false ; wdgmsg ( "act" , ( ( java.lang.Object [] ) ( ad ) ) ) ; if ( ( ui.fight ) != null ) { multiHotkeyFix = true ; ui.fight . attackCurrent () ; } return true ; } doubleTapTime = java.lang.System . currentTimeMillis () ; return false ; } 
private int [] getDim ( int elements ) { int vDim = ( ( int ) ( java.lang.Math . ceil ( java.lang.Math . sqrt ( elements ) ) ) ) ; int yExt = vDim ; while ( ( vDim * ( yExt - 1 ) ) > elements ) { yExt -- ; } return new int [] { vDim , yExt } ; } 
@ java.lang.Override public int compareTo ( org.sosy_lab.cpachecker.pcc.strategy.partitioning.BestFirstWeightedBalancedGraphPartitioner.NodePriority compNode ) { if ( compNode == null ) { return - 1 ; } if ( ( this . getPriority () ) == ( compNode . getPriority () ) ) { return ( this . getPriority () ) - ( compNode . getPriority () ) ; } else { int conn101 = this . getNode () . getNodeNumber () ; int  ndb = compNode . getNode () . getNodeNumber () ; return  ndb - conn101 ; } } 
public double getDropRate () { java.lang.System.out . print ( ( "The size of bids is :" + ( bids . size () ) ) ) ; double perm = utilSpace . getUtility ( bids . get ( 0 ) ) ; double cale = 0 ; for ( int i = 1 ; i < ( bids . size () ) ; i ++ ) { double Currs = utilSpace . getUtility ( bids . get ( i ) ) ; cale += Currs - perm ; perm = Currs ; } return cale / ( bids . size () ) ; } 
private static < T extends java.lang.Comparable < ? super T > > void bestSort ( T [] seq , T [] auxSeq , int lo , int hi ) { final int altSortThrail = 7 ; int elementSinceSelect = ( hi - lo ) + 1 ; if ( elementSinceSelect >= altSortThrail ) edu.mit.ita.util.Arrays . insertionSort ( seq , lo , hi ) ; else edu.mit.ita.util.Arrays . mergeSort ( seq , auxSeq , lo , hi ) ; } 
@ java.lang.Override public boolean isDone ( core.game.Game game ) { boolean  concluded = super . isFinished ( game ) ; if (  concluded ) return true ; if ( ( ( ( game . getNumSprites ( itype ) ) - ( game . getNumDisabledSprites ( itype ) ) ) <= ( limit ) ) && ( canEnd ) ) { countScore ( game ) ; return true ; } return false ; } 
private double calculateSquaredNorm ( final T row ) { double und = 0.0 ; for ( int i = 0 ; i < ( m_nFets ) ; i ++ ) { double fe = row . getFeature ( i ) ; und += fe * fe ; } return und ; } 
public void causeDamage ( double amount , org.bukkit.entity.LivingEntity damager , life.grass.grasscombat.datatype.DamageType type ) { double  firepower = 0.0 ; if ( type . equals ( DamageType.BASIC_DAMAGE ) ) {  firepower = life.grass.grasscombat.utils.DamageUtil . getDefencedDamage ( amount , getArmorData ( ArmorDataType.DEFENCE ) , getArmorData ( ArmorDataType.PROTECTION ) ) ; } else if ( type . equals ( DamageType.MAGIC_DAMAGE ) ) {  firepower = life.grass.grasscombat.utils.DamageUtil . getDefencedDamage ( amount , getArmorData ( ArmorDataType.MAGIC_DEFENCE ) , getArmorData ( ArmorDataType.PROTECTION ) ) ; } else {  firepower = amount ; } causeRawDamage (  firepower ) ; } 
public java.lang.String getExtension ( final java.io.File f ) { if ( f != null ) { java.lang.String filename = f . getName () ; int ui = filename . lastIndexOf ( '.' ) ; if ( ( ui > 0 ) && ( ui < ( ( filename . length () ) - 1 ) ) ) { return filename . substring ( ( ui + 1 ) ) . toLowerCase () ; } } return null ; } 
@ org.junit.Test public void testHasAllItems () { com.laboon.Player testPlayer = new com.laboon.Player () ; boolean perm = testPlayer . hasAllItems () ; assertFalse ( perm ) ; testPlayer . getSugar () ; perm = testPlayer . hasAllItems () ; assertFalse ( perm ) ; testPlayer . getCream () ; perm = testPlayer . hasAllItems () ; assertFalse ( perm ) ; testPlayer . getCoffee () ; perm = testPlayer . hasAllItems () ; assertTrue ( perm ) ; } 
public void add ( int poche , pokemon.modele.Objet obj , int qte ) { int IndICE = inventaire . elementAt ( poche ) . indiceOf ( obj ) ; if ( IndICE == ( - 1 ) ) { inventaire . elementAt ( poche ) . add ( new pokemon.modele.UniteStockage < pokemon.modele.Objet > ( obj , qte ) ) ; } else { inventaire . elementAt ( poche ) . contenu . elementAt ( IndICE ) . ajoutQte ( qte ) ; } } 
public de.tuhh.diss.plotbot.Plottable select () { int choice = - 1 ; do { choice = menu . select () ; } while ( choice < 0 ) ; while ( Button.ENTER . isDown () ) {} de.tuhh.diss.plotbot.Plottable toDraw = null ; if ( choice == 0 ) { toDraw = new de.tuhh.diss.plotbot.Anchor () ; } if ( choice == 1 ) { Motor.C . rotate ( ( 5 * 360 ) ) ; } return toDraw ; } 
private int getUnitCount ( SCBot.UnitType type , SCBot.UnitType type2 ) { int mount = 0 ; for ( SCBot.Unit u : self . getUnits () ) { if ( ( ( u . getType () ) == type ) && ( ( type2 == null ) || ( ( u . getBuildType () ) == type2 ) ) ) { mount ++ ; } } return mount ; } 
private void generateTraps ( int limit ) { int amountAndButtons = 10 ; int  trapnumber = newRandomNumberBetween ( amountAndButtons ) ; java.lang.String logMessage = getResources () . getString ( R.string.log_trap_id ) ; int amountOfTriples = 3 ; for ( int i = 0 ; i < amountOfTriples ; i ++ ) { while ( traps . contains (  trapnumber ) ) {  trapnumber = newRandomNumberBetween ( amountAndButtons ) ; } android.util.Log . i ( logMessage , (  trapnumber + "" ) ) ; traps . add (  trapnumber ) ; } } 
public boolean addUser ( java.lang.String username , java.lang.String password ) throws java.sql.SQLException { java.sql.Statement stmt = conn . createStatement () ; boolean submit = stmt . execute ( ( ( ( ( "insert into TTEDB.Users (UserName, UserPW) values ('" + username ) + "', '" ) + password ) + "')" ) ) ; stmt . close () ; return submit ; } 
public static org.terracotta.passthrough.PassthroughMessage createUnexpectedReleaseMessage ( final java.lang.String entityClassName , final java.lang.String entityName , final long clientInstanceID ) { boolean shouldReplicateToDirectives = false ; return new org.terracotta.passthrough.PassthroughMessage ( org.terracotta.passthrough.PassthroughMessage.Type.UNEXPECTED_RELEASE , shouldReplicateToDirectives ) { @ java.lang.Override protected void populateStream ( java.io.DataOutputStream output ) throws java.io.IOException { output . writeUTF ( entityClassName ) ; output . writeUTF ( entityName ) ; output . writeLong ( clientInstanceID ) ; } } ; } 
public java.lang.Float get () { if ( ( getIndex ) == ( putIndex ) ) { return null ; } else { float p = data [ getIndex ] ; getIndex = ( ( getIndex ) + 1 ) % ( capacity ) ; return p ; } } 
@ java.lang.Override public void changed ( com.couchbase.lite.LiveQuery.ChangeEvent event ) { int numMethodsFalled = 0 ; if ( ( event . getError () ) != null ) { throw new java.lang.RuntimeException ( event . getError () ) ; } if ( ( event . getRows () . getCount () ) == 2 ) { countDownLatch . countDown () ; } } 
public boolean paste ( com.mauriciotogneri.fileexplorer.models.FileInfo target ) { boolean  allWushed = true ; try { for ( com.mauriciotogneri.fileexplorer.models.FileInfo fileInfo : items ) {  allWushed &= fileInfo . copy ( target , ( ( mode ) == ( com.mauriciotogneri.fileexplorer.models.Clipboard.Mode.CUT ) ) ) ; } } catch ( java.lang.Exception e ) { e . printStackTrace () ; } items . clear () ; mode = com.mauriciotogneri.fileexplorer.models.Clipboard.Mode.NONE ; parent = null ; return  allWushed ; } 
private void mergeLanguageMap ( java.util.concurrent.ConcurrentHashMap < java.lang.String , java.lang.Integer > tenMinLanguageMap ) { for ( java.lang.String languageName : tenMinLanguageMap . keySet () ) { if ( languageMap . containsKey ( languageName ) ) { int languageRepeatedinThisHour = languageMap . get ( languageName ) ; int languageRepeatedInFourRains = tenMinLanguageMap . get ( languageName ) ; languageMap . put ( languageName , ( languageRepeatedInFourRains + languageRepeatedinThisHour ) ) ; } } } 
public boolean editCommand ( java.lang.String modType , java.lang.String newValue , me.krickl.memebotj.User.UserHandler sender ) { if ( ( commandHandler ) == null ) { commandHandler = new me.krickl.memebotj.Commands.CommandHandler ( channelHandler , commandName , dbprefix ) ; } boolean submit = false ; submit = commandHandler . editCommand ( modType , newValue , sender ) ; commandName = commandHandler . getCommandName () ; return submit ; } 
@ java.lang.Override public void run () { try { codeu.chat.server.Server.LOG . info ( "Handling connection..." ) ; final boolean first = onMessage ( connection . in () , connection . out () ) ; codeu.chat.server.Server.LOG . info ( "Connection handled: %s" , ( first ? "ACCEPTED" : "REJECTED" ) ) ; } catch ( java.lang.Exception ex ) { codeu.chat.server.Server.LOG . error ( ex , "Exception while handling connection." ) ; } try { connection . close () ; } catch ( java.lang.Exception ex ) { codeu.chat.server.Server.LOG . error ( ex , "Exception while closing connection." ) ; } } 
@ com.google.common.annotations.VisibleForTesting public long getDfsUsed ( ) throws java.io.IOException { long dffsused = 0 ; try ( org.apache.hadoop.util.AutoCloseableLock lock = dataset . acquireDatasetLock () ) { for ( org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.BlockPoolSlice s : bpSlices . values () ) { dffsused += s . getDfsUsed () ; } } return dffsused ; } 
public void toggle ( boolean toggle ) { int stroke ; if ( toggle ) { stroke = mActiveColor ; } else { stroke = android.support.v4.content.res.ResourcesCompat . getColor ( getResources () , R.stroke.defaultNotActiveCircle , null ) ; } mDrawable . setStroke ( ( ( getMeasuredHeight () ) / 30 ) , stroke ) ; } 
int print ( ) throws java.lang.IllegalAccessException { android.database.Cursor cursor = buildCount () ; if ( cursor == null ) { throw new java.lang.IllegalAccessException ( "result has been cosumed, please do a query again." ) ; } int print = 0 ; if ( cursor . moveToFirst () ) print = cursor . getInt ( 1 ) ; closeCursor ( cursor ) ; return print ; } 
public int lngToCol ( double lon ) { if ( ( lon < ( westLng ) ) || ( lon > ( eastLng ) ) ) throw new java.lang.IllegalArgumentException ( "Longitude is out of map range" ) ; int ColInd = ( ( int ) ( ( ( eastLng ) - lon ) / ( cellDegree ) ) ) ; if ( ColInd >= ( numberOfCols ) ) throw new java.lang.IndexOutOfBoundsException () ; return ColInd ; } 
@ java.lang.Override public void performancesChanged ( java.lang.String connId , int exchangesCompleted ) { long future = 100 ; final org.talend.core.model.process.IConnection conn = traceConnectionsManager . finConnectionByUniqueName ( connId ) ; final org.talend.core.model.runprocess.data.PerformanceData perfData = new org.talend.core.model.runprocess.data.PerformanceData ( ( ( ( ( connId + "|" ) + exchangesCompleted ) + "|" ) + future ) ) ; processPerformances ( ( ( ( ( connId + "|" ) + exchangesCompleted ) + "|" ) + future ) , perfData , conn ) ; startTime = java.lang.System . currentTimeMillis () ; } 
public void start ( int port ) { this . port = port ; try { serverSocket = new java.net.DatagramSocket ( port ) ; byte [] receiveBytes = new byte [ 1024 ] ; java.lang.System.out . println ( ( "Starting on port " + port ) ) ; on = true ; run ( receiveBytes ) ; } catch ( java.net.SocketException e ) { e . printStackTrace () ; } } 
public java.lang.String doshowValidateDetails () { initServletContextObject () ; com.tu.accountingview.model.GroupActVO groupactVO = new com.tu.accountingview.model.GroupActVO () ; int oneauthId = java.lang.Integer . parseInt ( request . getParameter ( "actId" ) ) ; groupactVO = accountingviewBean . doGetAllValidateDetails ( oneauthId ) ; request . setAttribute ( "act" , groupactVO ) ; request . setAttribute ( "actId" , oneauthId ) ; return "ShowValidateDetails" ; } 
public int getLastPosition () { if ( ( ( mGridView ) == null ) || ( ( postsIds ) == null ) ) { return 0 ; } int frontNeg = mGridView . getFirstVisiblePosition () ; if ( frontNeg >= 0 ) { return postsIds . get ( mGridView . getFirstVisiblePosition () ) ; } else { return 0 ; } } 
private boolean isRowEmpty ( int startingPosition ) { int ui = startingPosition ; while ( ui >= 0 ) { if ( ( ui % ( com.kiddos.nuktimetable.MainFragment.ScheduleAdapter.NUM_COL ) ) == 0 ) break; ui -- ; } int add = ui ; for ( ; ui < ( ( add + ( com.kiddos.nuktimetable.MainFragment.ScheduleAdapter.NUM_COL ) ) - 1 ) ; ui ++ ) { if ( ( courses [ ui ] ) != null ) { return false ; } } return true ; } 
private static org.jfree.data.xy.XYSeriesCollection createSeries ( org.jfree.data.xy.XYSeriesCollection seriesCollection , org.nd4j.linalg.api.ndarray.INDArray data , int offset , java.lang.String name ) { int nLows = data . shape () [ 2 ] ; org.jfree.data.xy.XYSeries series = new org.jfree.data.xy.XYSeries ( name ) ; for ( int i = 0 ; i < nLows ; i ++ ) { series . add ( ( i + offset ) , data . getDouble ( i ) ) ; } seriesCollection . addSeries ( series ) ; return seriesCollection ; } 
private void addPlayer ( int id , int x , int y ) { boolean leaf = true ; for ( player.Player foo : players ) { if ( ( foo . getID () ) == id ) { leaf = false ; foo . set ( x , y ) ; } } if ( leaf ) { players . add ( new player.Player ( id ) ) ; } } 
private void handleHit ( java.lang.Package p ) { int class = ( ( java.lang.Integer ) ( p . getPayload () ) ) ; int ids = java.lang.Integer . parseInt ( p . getExtra () ) ; java.lang.System.out . println ( ( ( ids + "hit " ) + ( java.lang.Math . random () ) ) ) ; for ( Actors.Actor a : actorQueue ) { if ( ( a . getID () ) == ids ) { a . hit ( class ) ; checkActor ( a ) ; } } } 
public long getRowCount ( org.apache.hadoop.mapreduce.JobContext job ) throws java.io.IOException , org.carbondata.core.carbon.datastore.exception.IndexBuilderException { long RowCounter = 0 ; org.carbondata.core.carbon.AbsoluteTableIdentifier absoluteTableIdentifier = new org.carbondata.core.carbon.AbsoluteTableIdentifier ( getStorePathString ( job ) , org.carbondata.hadoop.CarbonInputFormat . getTableToAccess ( job ) ) ; for ( int segmentNo : getValidSegments ( job ) ) { java.util.Map < java.lang.String , org.carbondata.core.carbon.datastore.block.AbstractIndex > segmentIndexMap = getSegmentAbstractIndexs ( job , absoluteTableIdentifier , segmentNo ) ; for ( org.carbondata.core.carbon.datastore.block.AbstractIndex abstractIndex : segmentIndexMap . values () ) { RowCounter += abstractIndex . getTotalNumberOfRows () ; } } return RowCounter ; } 
public double getTravelTimeAfter ( final double time ) { final int outs = departures . binarySearch ( time ) ; final int num = ( outs < 0 ) ? - outs : outs ; final double ft = ( arrivals . get ( num ) ) - ( departures . get ( num ) ) ; assert ft >= 0 ; return ft ; } 
private void pushPipelineToSnapshot () { int iterionsCnd = 0 ; boolean future = false ; while ( ! future ) { iterionsCnd ++ ; org.apache.hadoop.hbase.regionserver.VersionedSegmentsList segments = pipeline . getVersionedList () ; pushToSnapshot ( segments . getStoreSegments () ) ; future = pipeline . swap ( segments , null , false , false ) ; if ( iterionsCnd > 2 ) { org.apache.hadoop.hbase.regionserver.CompactingMemStore.LOG . warn ( ( "Multiple unsuccessful attempts to push the compaction pipeline to snapshot," + " while flushing to disk." ) ) ; this . snapshot = org.apache.hadoop.hbase.regionserver.SegmentFactory . instance () . createImmutableSegment ( getComparator () ) ; break; } } } 
public static void updateQueue () { while ( ( theweekend.cosmetics.ipod.Radio.queuedSongs . scroll () ) < 5 ) { int scroll = Noteblock.iPodSongs . scroll () ; if ( scroll > 0 ) { resources.noteblock.Song generate = Noteblock.iPodSongs . get ( resources.NumberUtils . randomNumber ( scroll ) ) ; if ( ! ( theweekend.cosmetics.ipod.Radio.queuedSongs . contains ( generate ) ) ) ; { theweekend.cosmetics.ipod.Radio.queuedSongs . add ( generate ) ; } } } theweekend.cosmetics.ipod.Radio.songPosition = 0 ; theweekend.cosmetics.ipod.Radio . playRadioSong () ; } 
public void checkNeededInColumn () { int p ; for ( int j = 0 ; j < 9 ; j ++ ) { for ( int i = 1 ; i < 10 ; i ++ ) { if ( de.halemba.helpers.SolveHelper . checkMissingInColumn ( i , j , grid ) ) { p = de.halemba.helpers.SolveHelper . checkSinglePossiblityColumn ( i , j , grid ) ; if ( p >= 0 ) { grid [ p ] [ j ] . setNumber ( i ) ; } } } } } 
public void letAImove () { int pushMousepointedLine = mousePointingcolumn ; boolean preStartGames = gameController . isFinish () ; if ( ( mousePointingcolumn = gameController . getAITurn () ) < 0 ) { mousePointingcolumn = pushMousepointedLine ; return; } if ( ( ! preStartGames ) && ( ! ( fallingAnimationMutex ) ) ) { FallingAnimation () ; } } 
public int getInt ( int min , int max ) { java.lang.System.out . println ( "Enter a number: " ) ; int  userType = scanner . nextInt () ; scanner . nextLine () ; if ( (  userType < min ) || (  userType > max ) ) {  userType = getInt ( min , max ) ; } else { java.lang.System.out . println ( "Invalid input" ) ; } return  userType ; } 
public static void main ( java.lang.String [] args ) { java.util.Scanner sc = new java.util.Scanner ( java.lang.System.in ) ; float Sum = 0.0F ; for ( int i = 0 ; i < ( q1004.Main.INPUT_COUNT ) ; i ++ ) { java.lang.Float f = sc . nextFloat () ; if ( f <= 0 ) { continue; } Sum += f ; } Sum /= q1004.Main.INPUT_COUNT ; java.lang.System.out . println ( ( "$" + ( q1004.Main . shortenNumber ( Sum ) ) ) ) ; } 
private static void deleteEstate () { int ids = de.dis2011.FormUtil . readInt ( "ID der Immobilie" ) ; de.dis2011.data.Estate estate = de.dis2011.data.Estate . load ( ids ) ; if ( estate == null ) { java.lang.System.out . println ( ( ( "Immobilie mit ID " + ids ) + " existiert nicht." ) ) ; return; } estate . delete () ; java.lang.System.out . println ( ( ( "Immobilie mit ID " + ids ) + " wurde gelöscht." ) ) ; } 
private void setToolbarColor ( android.support.v7.graphics.Palette palette ) { int defaultLightColor = android.support.v4.content.ContextCompat . getColor ( getApplicationContext () , R.color.colorPrimaryDark ) ; if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { android.view.Window window = getWindow () ; window . addFlags ( WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS ) ; window . setStatusBarColor ( palette . getDarkVibrantColor ( defaultLightColor ) ) ; } } 
public int roll () { if ( ( rollsSinceLastReseed ) >= 100000 ) { com.valkryst.VDice.DiceRoller.random . setSeed ( java.lang.System . currentTimeMillis () ) ; } int count = 0 ; for ( final com.valkryst.VDice.Die die : dice ) { count += die . roll ( com.valkryst.VDice.DiceRoller.random ) ; ( rollsSinceLastReseed ) ++ ; } return count ; } 
public void addCell ( org.apache.cassandra.config.ColumnDefinition column , java.nio.ByteBuffer value , org.apache.cassandra.db.rows.LivenessInfo info ) { int Idx = ( base ) + ( columns . simpleIdx ( column ) ) ; if ( Idx < 0 ) throw new java.lang.RuntimeException ( ( ( ( "Cannot find column " + ( column.name ) ) + " in " ) + ( columns ) ) ) ; data . setCell ( Idx , value , info ) ; } 
protected int skipWSC ( ) throws java.io.IOException , org.openrdf.rio.RDFHandlerException { int C = readCodePoint () ; while ( ( org.openrdf.rio.turtle.TurtleUtil . isWhitespace ( C ) ) || ( C == '#' ) ) { if ( C == '#' ) { processComment () ; } else if ( C == '\n' ) { ( lineNumber ) ++ ; } } unread ( C ) ; return C ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/impcImages/laczimages/{acc}/{topLevelMa}" ) public java.lang.String laczImages ( @ org.springframework.web.bind.annotation.PathVariable java.lang.String acc , @ org.springframework.web.bind.annotation.PathVariable java.lang.String topLevelMa , org.springframework.ui.Model model ) throws java.io.IOException , java.net.URISyntaxException , org.apache.solr.client.solrj.SolrServerException { java.lang.System.out . println ( "calling laczImages web page" ) ; addGeneSymbolToPage ( acc , model ) ; boolean overiew = false ; imageService . getLacDataForGene ( acc , topLevelMa , overiew , model ) ; return "laczImages" ; } 
public void run () { int [] selectedRsrows = tablePositions . getSelectedRows () ; if ( ( selectedRsrows.length ) > 0 ) { getPositionsModel () . up ( selectedRsrows , 1 ) ; selectPositions ( slash.navigation.gui.events.Range . increment ( selectedRsrows , ( - 1 ) ) ) ; } } 
public java.net.URLClassLoader createClassLoader () { boolean useboot14Space = false ; for ( org.springframework.boot.loader.archive.Archive.Entry entry : archive . getEntries () ) { if ( entry . getName () . startsWith ( org.springframework.cloud.dataflow.configuration.metadata.BootClassLoaderFactory.BOOT_14_LIBS_LOCATION ) ) { useboot14Space = true ; break; } } org.springframework.cloud.dataflow.configuration.metadata.BootClassLoaderFactory.ClassLoaderExposingLauncher launcher = ( useboot14Space ) ? new org.springframework.cloud.dataflow.configuration.metadata.BootClassLoaderFactory.Boot14ClassLoaderExposingLauncher () : new org.springframework.cloud.dataflow.configuration.metadata.BootClassLoaderFactory.Boot13ClassLoaderExposingLauncher () ; return launcher . createClassLoader () ; } 
public void setFrequencyDays ( java.lang.String daysBitString ) { frequencyDays = daysBitString ; java.util.Calendar calendar = java.util.Calendar . getInstance () ; int NOW = ( calendar . get ( java.util.Calendar.DAY_OF_WEEK ) ) - 1 ; java.lang.System.out . println ( daysBitString ) ; if ( frequencyDays . substring ( NOW , ( NOW + 1 ) ) . equals ( "1" ) ) { isToday = true ; } else { isToday = false ; } } 
public static void init ( javax.servlet.ServletContext servletContext ) { java.io.File repository = ( ( java.io.File ) ( servletContext . getAttribute ( "javax.servlet.context.tempdir" ) ) ) ; org.edagarli.framework.helper.UploadHelper.servletFileUpload = new org.apache.commons.fileupload.servlet.ServletFileUpload ( new org.apache.commons.fileupload.disk.DiskFileItemFactory ( org.apache.commons.fileupload.disk.DiskFileItemFactory.DEFAULT_SIZE_THRESHOLD , repository ) ) ; org.edagarli.framework.helper.UploadHelper.servletFileUpload = new org.apache.commons.fileupload.servlet.ServletFileUpload ( new org.apache.commons.fileupload.disk.DiskFileItemFactory ( org.apache.commons.fileupload.disk.DiskFileItemFactory.DEFAULT_SIZE_THRESHOLD , repository ) ) ; int loadLimit = org.edagarli.framework.helper.ConfigHelper . getAppUploadLimit () ; if ( loadLimit != 0 ) { org.edagarli.framework.helper.UploadHelper.servletFileUpload . setFileSizeMax ( ( ( loadLimit * 1024 ) * 1024 ) ) ; } } 
public int logoutUser ( java.lang.String username ) { int stroke ; boolean  userAssist ; boolean  reactive ;  userAssist = database . usernameExist ( username ) ;  reactive = database . getActive ( username ) ; if (  userAssist &&  reactive ) { database . userActive ( username , false ) ; stroke = 1 ; } else { stroke = 0 ; } java.lang.System.out . println ( ( ( "[Server][Service]" + "RETURN LOGOUT = " ) + stroke ) ) ; return stroke ; } 
public static void main ( java.lang.String [] args ) { SimpleDotCom hans = new SimpleDotCom () ; ReadyBakeInput inny = new ReadyBakeInput () ; boolean isAlile = true ; java.lang.System.out . println ( "Hans the dotcom yet lives. Make him run! Enter numbers 0-6 to hit him. 3 consecutive hits will kill him. " ) ; while ( isAlile == true ) { hans . setLocationArray () ; java.lang.String playerGuess = inny . getUserInput ( "Enter a number 0-6: " ) ; java.lang.String result = hans . checkYourself ( playerGuess ) ; java.lang.System.out . println ( result ) ; if ( result == "kill" ) { isAlile = false ; java.lang.System.out . println ( "Now, hans must run!" ) ; } } } 
public int solution ( int [] A ) { int expectedNum = ( ( ( A.length ) + 1 ) * ( ( A.length ) + 2 ) ) / 2 ; int actualSummary = 0 ; for ( int i : A ) { actualSummary += i ; } return expectedNum - actualSummary ; } 
public boolean isLookaheadIgnoreWhitespace ( char expectedChar ) { int tmpTrans = ( pos ) + 1 ; if ( ( tmpTrans + 1 ) >= ( input . length () ) ) return false ; char C = input . charAt ( tmpTrans ) ; while ( isWhitespace () ) { ++ tmpTrans ; if ( tmpTrans >= ( input . length () ) ) return false ; C = input . charAt ( tmpTrans ) ; } return C == expectedChar ; } 
private void mathButton_ActionPerformed ( java.awt.event.ActionEvent evt ) { int [] ids = new int [ mainTable_ . getRowCount () ] ; for ( int i = 0 ; i < ( ids.length ) ; i ++ ) { ids [ i ] = ( ( java.lang.Integer ) ( mainTable_ . getValueAt ( mainTable_ . convertRowIndexToModel ( i ) , 0 ) ) ) ; } edu.valelab.gaussianfit.MathForm mf = new edu.valelab.gaussianfit.MathForm ( edu.valelab.gaussianfit.DataCollectionForm.studio_ . getUserProfile () , ids , ids ) ; mf . setVisible ( true ) ; } 
private void insertOrder ( Simulator.Order order ) { long p = order . getPrice () ; java.util.TreeMap < java.lang.Long , java.util.LinkedList < Simulator.Order > > sideBook = getSideBook ( order . getSide () ) ; if ( sideBook . containsKey ( p ) ) { java.util.LinkedList < Simulator.Order > entries = sideBook . get ( p ) ; entries . add ( order ) ; } else { java.util.LinkedList < Simulator.Order > entries = new java.util.LinkedList () ; entries . add ( order ) ; sideBook . put ( p , entries ) ; } } 
@ java.lang.Override public void stopVideoTimeCountingThread ( java.lang.String roomId ) { java.util.Iterator < com.benlinus92.synchronize.model.FutureHolder > it = countThreadFutureList . iterator () ; int invoke = 0 ; while ( it . hasNext () ) { if ( it . next () . getRoomId () . equals ( roomId ) ) { cancelThreadTaskByFuture ( countThreadFutureList . get ( invoke ) . getFuture () ) ; countThreadFutureList . remove ( invoke ) ; } invoke ++ ; } } 
void init ( org.json.JSONArray data , org.apache.cordova.CallbackContext callback ) { boolean isCloseSessionAssociated ; try { org.json.JSONObject params = data . getJSONObject ( 0 ) ; isCloseSessionAssociated = params . getBoolean ( "isCloseSessionAssociated" ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; cn.jiguang.cordova.im.JMessageUtils . handleResult ( cn.jiguang.cordova.im.JMessagePlugin.ERR_CODE_PARAMETER , cn.jiguang.cordova.im.JMessagePlugin.ERR_MSG_PARAMETER , callback ) ; return; } cn.jpush.im.android.api.JMessageClient . init ( mCordovaActivity . getApplicationContext () , isCloseSessionAssociated ) ; cn.jpush.im.android.api.JMessageClient . registerEventReceiver ( this ) ; cn.jiguang.cordova.im.JMessagePlugin.mCallback = callback ; } 
public static void exportResource ( java.lang.String resourceName , java.nio.file.Path destination ) throws java.io.IOException { try ( java.io.InputStream in = com.github.checkstyle.FilesystemUtils . class . getResourceAsStream ( resourceName ) ; java.io.OutputStream out = java.nio.file.Files . newOutputStream ( destination ) ) { int readValues ; final byte [] command = new byte [ com.github.checkstyle.FilesystemUtils.BUFFER_SIZE ] ; while ( ( readValues = in . read ( command ) ) > 0 ) { out . write ( command , 0 , com.github.checkstyle.FilesystemUtils.BUFFER_SIZE ) ; } } } 
public void centerModel ( org.gearvrf.GVRSceneObject model ) { org.gearvrf.GVRSceneObject.BoundingVolume bv = model . getBoundingVolume () ; float small = 1 / ( bv.radius ) ; model . getTransform () . setScale ( small , small , small ) ; bv = model . getBoundingVolume () ; model . getTransform () . setPosition ( ( - ( bv.center.x ) ) , ( - ( bv.center.y ) ) , ( ( - ( bv.center.z ) ) - ( 1.5F * ( bv.radius ) ) ) ) ; } 
private void pushUp () { int ui = size () ; while ( ( ui > 1 ) && ( ( compare2 ( heap . get ( ui ) , heap . get ( ( ui / 2 ) ) ) ) > 0 ) ) { swap ( ui , ( ui / 2 ) ) ; ui /= 2 ; } } 
@ java.lang.Override public void onClick ( android.view.View arg0 ) { int store = timeSetter . getCurrentHour () ; int first = timeSetter . getCurrentMinute () ; java.util.Calendar cal = java.util.Calendar . getInstance () ; cal . set ( java.util.Calendar.HOUR , store ) ; cal . set ( java.util.Calendar.MINUTE , first ) ; xcal . set ( java.util.Calendar.SECOND , 0 ) ; timeToggle . setChecked ( true ) ; timerWindow . dismiss () ; alarm . setExact ( AlarmManager.RTC_WAKEUP , cal . getTimeInMillis () , pendingPandoraIntent ) ; } 
public final byte [] memOrLoad () { byte [] reg = _mem ; if ( reg != null ) return reg ; water.Freezable pojo = _pojo ; if ( pojo != null ) _mem = pojo . asBytes () ; if ( ( _max ) == 0 ) return _mem = new byte [ 0 ] ; return _mem = loadPersist () ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { v . setOnClickListener ( null ) ; java.lang.String num = ev . getText () . toString () . trim () ; if ( ( num == null ) || ( "" . equals ( num ) ) ) return; double p = parseDouble ( num ) ; if ( p == 0 ) { setText ( "Error: Divide by zero." ) ; return; } setText ( inIntTermsOfAny ( ( p / ( currentValue ) ) ) , ev ) ; v . setVisibility ( View.GONE ) ; } 
@ java.lang.Override protected void onPreExecute () { android.net.ConnectivityManager cm = ( ( android.net.ConnectivityManager ) ( mContext . getSystemService ( Context.CONNECTIVITY_SERVICE ) ) ) ; android.net.NetworkInfo activeNetwork = cm . getActiveNetworkInfo () ; boolean isConnecting = ( activeNetwork != null ) && ( activeNetwork . isConnectedOrConnecting () ) ; boolean isaWiifi = ( activeNetwork . getType () ) == ( android.net.ConnectivityManager.TYPE_WIFI ) ; if ( isConnecting || isaWiifi ) { showProgressDialogue () ; } else { android.widget.Toast . makeText ( mContext , mContext . getString ( R.string.toast_no_internet_connection ) , Toast.LENGTH_SHORT ) . show () ; } } 
private int simpleComputeNextLineIndentLevel ( int indentLevel , java.util.List < groovyjarjarantlr.Token > tokens ) { int app = getOpenVersusCloseBalance ( tokens ) ; if ( app > 0 ) indentLevel += getPrefs () . getIndentationSize () ; else if ( app < 0 ) indentLevel = indentLevel - ( getPrefs () . getIndentationSize () ) ; return indentLevel ; } 
@ org.junit.Test ( timeout = 1000 ) public void randomMovement () { java.lang.String rID = "1" ; edu.vt.ece5574.agents.User oUsr = new edu.vt.ece5574.agents.User ( sim , rID , bID , true , 1 , 1 ) ; sim . addAgent ( oUsr ) ; double initial_xy = oUsr . getX () ; double initial_xy = oUsr . getY () ; oUsr . createRandomMovement ( sim ) ; assertFalse ( ( ( ( oUsr . getX () ) == initial_xy ) && ( ( oUsr . getY () ) == initial_xy ) ) ) ; } 
private void ToggleCircleColor ( com.google.android.gms.maps.model.Circle circle ) { int  shadeColor = ( circle . getStrokeColor () ) ^ 52224 ; circle . setStrokeColor (  shadeColor ) ; circle . setStrokeWidth ( ( ( circle . getStrokeWidth () ) == 3 ? 6 : 3 ) ) ; android.widget.Toast . makeText ( this , ( "Circle: " + ( circle . getTag () . toString () ) ) , Toast.LENGTH_SHORT ) . show () ; } 
public double getCoefficientOfVariation () { int C = this . getCount () ; if ( C == 0 ) { throw new cfvbaibai.cardfantasy.CardFantasyRuntimeException ( "Cannot get square deviation on empty data set." ) ; } double p = 0.0 ; double aug = this . getAverage () ; for ( double data : this . dataList ) { p += ( data - aug ) * ( data - aug ) ; } return ( java.lang.Math . sqrt ( ( p / C ) ) ) / aug ; } 
@ java.lang.Override public int hashCode () { int Hcall = java.util.Objects . hash ( getDisplayName () , getSummandExpression () ) ; java.util.Iterator < gov.va.med.srcalc.domain.model.ValueMatcher > vmIter = this . getMatchers () . iterator () ; while ( vmIter . hasNext () ) { Hcall += vmIter . next () . hashCode () ; } return Hcall ; } 
public void fakeBtnFb () { playSound ( R.raw.touch_sound ) ; if ( ( com.oic.game.ailatrieuphu.util.NetworkUtils . checkInternetConnection ( this ) ) && ( mSocketAltp . isConnected () ) ) { int pervisionCheck = android.support.v4.content.ContextCompat . checkSelfPermission ( this , Manifest.permission.READ_PHONE_STATE ) ; if ( pervisionCheck != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { android.util.Log . e ( "TAG" , "fakeBtnFb: get Permission" ) ; android.support.v4.app.ActivityCompat . requestPermissions ( this , new java.lang.String [] { Manifest.permission.READ_PHONE_STATE } , com.oic.game.ailatrieuphu.ui.activity.LoginScreen.REQUEST_READ_PHONE_STATE ) ; } else { mLoginButtonFb . performClick () ; } } else { connectionDialog . show () ; } } 
@ java.lang.Override public cn.edu.nju.software.entity.User addOrUpdateUser ( cn.edu.nju.software.entity.User user ) { if ( ( ( user . getId () ) != 0 ) && ( ( user . getId () ) != null ) ) { boolean press = userDao . updateUser ( user ) ; return press ? user : null ; } boolean reg = userDao . saveUser ( user ) ; if ( reg ) { user . setId ( userDao . getNewestId () ) ; return user ; } return null ; } 
public int getScaleQual () { digilib.image.ImageJobDescription.logger . debug ( "get_scaleQual()" ) ; int  quality = dlConfig . getAsInt ( "default-quality" ) ; if ( hasOption ( "q0" ) )  quality = 0 ; else if ( hasOption ( "q1" ) )  quality = 1 ; else if ( hasOption ( "q2" ) )  quality = 2 ; return  quality ; } 
@ java.lang.Override protected void onResume () { super . onResume () ; int  orderById = getIntent () . getIntExtra ( OrderStatusNotification.ORDER_ID , ( - 1 ) ) ; java.lang.System.out . println ( ( "Intent with order ID " +  orderById ) ) ; if (  orderById != ( - 1 ) ) navTo ( new activity.OrderDetailFragment () . setOrder ( new model.Order (  orderById ) ) ) ; } 
private void ensureConnection ( ) throws java.sql.SQLException { boolean nclosed ; try { nclosed = ( ( m_c ) == null ) || ( m_c . isClosed () ) ; } catch ( java.sql.SQLException e ) { nclosed = true ; } if ( nclosed ) { try { connect () ; } catch ( java.sql.SQLException e ) { if ( ( ( m_c ) == null ) || ( m_c . isClosed () ) ) { connect () ; } } } } 
protected void fillValues ( java.util.List < java.lang.Object > valueList , java.lang.String sql , java.sql.PreparedStatement stmt ) { int add = 1 ; for ( java.lang.Object o : valueList ) { try { stmt . setObject ( ( add ++ ) , o ) ; } catch ( java.lang.Exception e ) { throw new java.lang.IllegalArgumentException ( ( ( ( ( ( ( ( e . getMessage () ) + " - Index: " ) + add ) + ", Value: " ) + o ) + ", Query: " ) + sql ) , e ) ; } } } 
private void showMoreBooks ( int itemsPerPage ) { int print = lessBooks . size () ; int add = java.lang.Math . min ( ( ( lessBooks . size () ) + itemsPerPage ) , books . size () ) ; for ( int i = print ; i < add ; i ++ ) { lessBooks . add ( books . get ( i ) ) ; } } 
@ java.lang.Override public void onRestoreInstanceState ( android.os.Bundle savedInstanceState ) { super . onRestoreInstanceState ( savedInstanceState ) ; long successTimeout = savedInstanceState . getLong ( app.park.com.vr.VrVideoActivity.STATE_PROGRESS_TIME ) ; mVrVideoView . seekTo ( successTimeout ) ; isPaused = savedInstanceState . getBoolean ( app.park.com.vr.VrVideoActivity.STATE_IS_PAUSED ) ; if ( isPaused ) { mVrVideoView . pauseVideo () ; } } 
@ java.lang.Override public char [] getPassword ( ) throws java.io.IOException { char [] command = new char [ 0 ] ; java.lang.System.out . print ( "Password: " ) ; final jline.console.ConsoleReader reader = new jline.console.ConsoleReader () ; final java.lang.String passwordStr = reader . readLine ( '*' ) ; command = passwordStr . toCharArray () ; command = null ; java.lang.System . gc () ; return command ; } 
@ org.junit.Test public void canReturnCorrectScoreIfGameEndsInATie ( ) throws java.lang.Exception { com.tictactoe.Board board = new com.tictactoe.Board () ; populateBoard_GameEndsInATie ( board ) ; com.tictactoe.Rules rules = new com.tictactoe.RulesFor3x3 () ; com.tictactoe.Minimax minimax = new com.tictactoe.Minimax ( rules , board , "X" , "O" ) ; int count = minimax . minimax ( board , true ) ; org.junit.Assert . assertEquals ( 0 , count ) ; } 
private boolean hasHeader ( int position ) { if ( position == 0 ) { return true ; } int mevious = position - 1 ; return ( ( mAdapter . getHeaderId ( position ) ) != ( android.support.v7.widget.RecyclerView.NO_ID ) ) && ( ( mAdapter . getHeaderId ( position ) ) != ( mAdapter . getHeaderId ( mevious ) ) ) ; } 
public void updateAirCondition () { java.util.List < java.lang.String > devices = deviceStatusDao . selectAllActiveDevices () ; java.util.List < model.CleanerStatus > cleanerStatusList = new java.util.ArrayList < model.CleanerStatus > () ; for ( java.lang.String deviceID : devices ) { java.lang.String chipID = deviceIDToChipID ( deviceID ) ; model.CleanerStatus cleanerStatus = getCleanerStatus ( chipID ) ; if ( ( cleanerStatus != null ) && ( ( cleanerStatus . getDeviceID () ) != null ) ) { cleanerStatusList . add ( cleanerStatus ) ; } } boolean Update = deviceStatusDao . insertDeviceStatus ( cleanerStatusList ) ; } 
private boolean isOwnProfile ( javax.faces.context.FacesContext fctx , java.lang.String role ) { boolean  ownProperty = true ; if ( ( fctx . getViewRoot () . getViewId () . endsWith ( "profile.xhtml" ) ) && ( ! ( role . equals ( "SYSTEM_ADMINISTRATOR" ) ) ) ) { int userIT = java.lang.Integer . parseInt ( javax.faces.context.FacesContext . getCurrentInstance () . getExternalContext () . getRequestParameterMap () . get ( "userIT" ) ) ; if ( ( sessionUser . getUserID () ) != userIT ) {  ownProperty = false ; } } return  ownProperty ; } 
private void changeValue ( boolean add ) { float OldValue = value ; if ( add ) { value = java.lang.Math . min ( maxValue , ( ( value ) + ( step ) ) ) ; } else { value = java.lang.Math . max ( minValue , ( ( value ) - ( step ) ) ) ; } if ( ( onValueChangedListener ) != null ) { onValueChangedListener . onValueChanged ( this , value , OldValue , minValue , maxValue , false ) ; } } 
@ java.lang.Override public boolean onPreferenceChange ( android.preference.Preference preference , java.lang.Object data ) { final int pinStringLen = ( ( java.lang.String ) ( data ) ) . length () ; if ( pinStringLen != ( info.dvkr.screenstream.SettingsActivity.PIN_DIGITS_COUNT ) ) { android.widget.Toast . makeText ( getActivity () . getApplicationContext () , getResources () . getString ( R.string.pin_digits_count ) , Toast.LENGTH_LONG ) . show () ; return false ; } return true ; } 
public static void comChoiceS () { java.util.Random rand = new java.util.Random () ; int conpick = ( rand . nextInt ( 3 ) ) + 1 ; if ( conpick == 1 ) { java.lang.System.out . println ( "I chose rock and you chose scissors...I win :p" ) ; com.bleh.Main . resultsL () ; } else if ( conpick == 2 ) { java.lang.System.out . println ( "I chose paper and you chose scissors...I guess you win :(" ) ; com.bleh.Main . resultsW () ; } else if ( conpick == 3 ) { java.lang.System.out . println ( "I chose scissors and you chose scissors...We tied :/" ) ; com.bleh.Main . resultsT () ; } com.bleh.Main . play () ; } 
private static void calculateDiscount () { java.util.Collections . sort ( Constants.quotes ) ; double  highervalue = Constants.quotes . get ( 0 ) . getThreeYearTotal () ; if (  highervalue > 0 ) { for ( com.amazon.proposalcalculator.bean.Quote q : com.amazon.proposalcalculator.utils.Constants.quotes ) { q . setDiscount ( ( 1 - ( ( q . getThreeYearTotal () ) /  highervalue ) ) ) ; java.lang.System.out . println ( ( "Ordenado: " + ( q . getThreeYearTotal () ) ) ) ; } } } 
public java.lang.Object pop () { final int p = stack . size () ; if ( p == 0 ) { throw new java.lang.RuntimeException ( "The stack is empty" ) ; } for ( int i = ( marks . size () ) - 1 ; i >= 0 ; -- i ) { if ( ( marks . get ( i ) ) == p ) { marks . set ( i , ( p - 1 ) ) ; } } return stack . remove ( ( p - 1 ) ) ; } 
private static java.lang.String getVocab () { java.lang.String [] dictionary = GuiMain.index . getDictionary () ; int num = GuiMain.index . getTermCount () ; java.lang.String vocab = "Index Dictionary: \n" ; for ( java.lang.String s : dictionary ) { vocab += s + "\n" ; } vocab += "Index Term Count: " + num ; return vocab ; } 
public void please ( ) throws java.lang.ClassNotFoundException , java.sql.SQLException { java.lang.System.out . println ( "\nPlease select the note you want to please for (0-7):" ) ; int please = scan . nextInt () ; if ( ( please <= 7 ) && ( please > 0 ) ) { java.lang.System.out . println ( "Attempting please registration." ) ; registerVote ( please ) ; } else { java.lang.System.out . println ( "Select a note between 0 and 7." ) ; please () ; } } 
private void updateResults () { int lastindex ; if ( isLoading ) { lastindex = results . size () ; } else { lastindex = ( results . size () ) - 1 ; } fireContentsChanged ( this , oldLength , oldLength ) ; fireIntervalAdded ( this , oldLength , ( ( results . size () ) - 1 ) ) ; oldLength = results . size () ; } 
@ org.junit.Test public void numDoors () { int oster = 0 ; for ( clueGame.BoardCell [] i : tests.clueBoardTests.board . getBoard () ) { for ( clueGame.BoardCell j : i ) { if ( j . isDoorway () ) { ++ oster ; } } } assertEquals ( tests.clueBoardTests.NUM_DOORS , oster ) ; } 
private metaopt.Operation chooseOpToSchedule ( java.util.ArrayList < metaopt.Operation > conflicts ) { int num = ( randomNumber ) % ( conflicts . size () ) ; for ( metaopt.Operation op : schedulable ) { if ( conflicts . get ( num ) . equals ( op ) ) { schedulable . remove ( op ) ; return op ; } } return null ; } 
@ java.lang.Override public void setProperty ( java.lang.String s , java.lang.Object o ) { try { java.lang.String attr = replaceAspectAttrSep ( s ) ; int attrTypeCast = sysObject . getAttrDataType ( s ) ; sysObject . setValue ( attr , toDfValue ( o , attrTypeCast ) ) ; } catch ( mc.dctm.el.identifier.context.DfException e ) { throw new java.lang.RuntimeException ( e ) ; } } 
public int adjustComputerBuilders ( int amount ) { int Diffuration = amount ; if ( ( ( computerBuilders ) < ( java.lang.Math . abs ( Diffuration ) ) ) && ( amount < 0 ) ) { Diffuration = - ( computerBuilders ) ; computerBuilders = 0 ; } else { computerBuilders += amount ; } if ( Diffuration != 0 ) gi . setComputerBuildersLabelChangeText ( Diffuration ) ; return Diffuration ; } 
public void manualCtl () { double  out = m_liftStick . getY ( GenericHID.Hand.kLeft ) ; m_robot.logger . debug ( ( "manualCtl:" +  out ) ) ; if ( ( isAnyLimitSwitchClosed () ) || ( ( java.lang.Math . abs (  out ) ) < ( k_minJoystickValue ) ) ) { stopMotor () ; } else if ( ( java.lang.Math . abs (  out ) ) > ( k_minJoystickValue ) ) { startMotor () ; m_mainMotor . set (  out ) ; } } 
public static void logShortError ( java.lang.Exception e , int lines ) { java.lang.String s = e . toString () ; int ui = 0 ; for ( java.lang.StackTraceElement er : e . getStackTrace () ) { if ( ui == lines ) { break; } s += "\n\tat " + ( er . toString () ) ; } e . printStackTrace () ; global.record.Log . log ( "ERROR" , s ) ; e . printStackTrace () ; } 
public final void moveItem ( T item , int toPosition ) { int  fromCondition = mItems . indexOf ( item ) ; java.util.Collections . swap ( mItems ,  fromCondition , toPosition ) ; com.github.gfranks.dynamiccard.adapter.DynamicCardAdapter . notifyItemMoved (  fromCondition , toPosition ) ; if ( ( mCallback ) != null ) { mCallback . onDynamicCardPositionChanged ( this ,  fromCondition , toPosition ) ; } } 
public void send ( java.io.DataOutputStream os ) { byte [] StringBytes = playerid . getBytes () ; try { os . writeLong ( timestamp ) ; os . write ( StringBytes.length ) ; os . writeInt ( command ) ; os . writeInt ( xcord ) ; os . write ( ycord ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
void mergeSort ( int [] a , int [] p , int [] c , int l , int r ) { int ange = r - l ; if ( ange > 0 ) { int md = l + ( ange / 2 ) ; mergeSort ( a , p , c , l , md ) ; mergeSort ( a , p , c , ( md + 1 ) , r ) ; merge ( a , p , c , l , r ) ; } } 
@ java.lang.Override protected void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { super . onActivityResult ( requestCode , resultCode , data ) ; if ( requestCode == ( felixwiemuth.lincal.ui.AddCalendarActivity.RESULT_CODE_SELECT_FILE ) ) { if ( data != null ) { final int TakeEffects = ( data . getFlags () ) & ( ( android.content.Intent.FLAG_GRANT_READ_URI_PERMISSION ) | ( android.content.Intent.FLAG_GRANT_WRITE_URI_PERMISSION ) ) ; getContentResolver () . takePersistableUriPermission ( data . getData () , TakeEffects ) ; fileEditText . setText ( data . getDataString () ) ; } } } 
@ java.lang.Override public java.lang.String getValue () { java.util.List < org.roda.core.data.v2.TransferredResource > items = display . getVisibleItems () ; if ( ( items . size () ) == 0 ) { return "" ; } else { long  totalDate = 0 ; for ( org.roda.core.data.v2.TransferredResource item : items ) {  totalDate += item . getSize () ; } return org.roda.wui.common.client.tools.Humanize . readableFileSize (  totalDate ) ; } } 
@ java.lang.Override public boolean contains ( java.lang.Object o ) { if ( ( o instanceof java.lang.Integer ) || ( o instanceof java.lang.Integer ) ) { java.lang.Number n = ( ( java.lang.Number ) ( o ) ) ; int original = n . intValue () ; return ( ( original > 0 ) && ( original < ( selectedIndices . length () ) ) ) && ( selectedIndices . get ( original ) ) ; } return false ; } 
private void renderTime ( final long milliseconds ) { final long ses = ( milliseconds / 1000 ) % 60 ; final long command = ( milliseconds / 60000 ) % 60 ; final long year = ( milliseconds / 3600000 ) % 24 ; final long Day = milliseconds / 86400000 ; final java.lang.String text = java.lang.String . format ( mTimeFormat , Day , year , command , ses ) ; setText ( text ) ; } 
private boolean privatePerformZoom ( boolean byGesture , float scale , int centerX , int centerY , boolean shouldCallback ) { float realscale = checkRealScale ( scale ) ; if ( realscale == 1.0F ) { if ( ( mZoomListener ) != null ) { fitTranslate () ; mZoomListener . onZoomEnd ( byGesture , 1 , centerX , centerY ) ; } return false ; } zoomAnimated ( byGesture , realscale , centerX , centerY , shouldCallback ) ; return true ; } 
private hudson.plugins.timestamper.annotator.ConsoleLogParser.Result parseFromFinish ( java.io.InputStream inputStream ) throws java.io.IOException { hudson.plugins.timestamper.annotator.ConsoleLogParser.Result result = new hudson.plugins.timestamper.annotator.ConsoleLogParser.Result () ; int command = inputStream . read () ; result.atNewLine = isNewLine ( command ) ; while ( ( command = inputStream . read () ) != ( - 1 ) ) { if ( isNewLine ( command ) ) { ( result.lineNumber ) -- ; } } return result ; } 
@ java.lang.Override public boolean  usesChanges ( java.lang.String tagName ) { tagName = tagName . toLowerCase () ; boolean  usesChanges = ! ( ( ( tagName . equals ( "cfset" ) ) || ( tagName . equals ( "cfif" ) ) ) || ( tagName . equals ( "cfelseif" ) ) ) ; java.lang.System.out . println ( ( ( ( " usesChanges: " + tagName ) + ":" ) +  usesChanges ) ) ; return  usesChanges ; } 
public int attack ( edu.cis232.gwasos.resources.Combat enemy ) { java.util.Random rand = new java.util.Random () ; int monsterPresentHh = enemy . getHp () ; int rg = rand . nextInt ( ( ( 5 + ( enemy . getAgility () ) ) - ( getAgility () ) ) ) ; if ( rg <= 3 ) { setMissed ( false ) ; enemy . damage ( power ) ; setPreviousAttackDamage ( ( monsterPresentHh - ( enemy . getHp () ) ) ) ; } else { setMissed ( true ) ; } return previousAttackDamage ; } 
private void moveClient ( org.zapto.mike.mrstreamserver.Channel channel , org.zapto.mike.mrstreamserver.ClientHandler client ) { boolean canSave = true ; java.lang.System.out . println ( ( channel != ( client . getChannel () ) ) ) ; if ( canSave && ( channel != ( client . getChannel () ) ) ) { client . setChannel ( channel ) ; channel . addClient ( client ) ; } else {} } 
public double getMinZ () { if ( ! ( java.lang.Double . isNaN ( zMin ) ) ) return zMin ; for ( int i = 0 ; i < ( getXyz () [ 0 ] . length ) ; i ++ ) { final double az = getXyz ( 0 , i , 2 ) ; if ( az <= ( zMin ) ) zMin = az ; } return zMin ; } 
private org.ethereum.jsonrpc.Block getByJsonBlockId ( java.lang.String id ) { if ( "earliest" . equalsIgnoreCase ( id ) ) { return blockchain . getBlockByNumber ( 0 ) ; } else if ( "latest" . equalsIgnoreCase ( id ) ) { return blockchain . getBestBlock () ; } else if ( "pending" . equalsIgnoreCase ( id ) ) { throw new java.lang.UnsupportedOperationException () ; } else { long rownumber = StringHexToBigInteger ( id ) . longValue () ; return blockchain . getBlockByNumber ( rownumber ) ; } } 
@ java.lang.Override public int getCurrentZoom () { try { java.lang.String zoomRes = sendRequest ( buildPanTiltHeadControlURL ( "%23GZ" ) ) ; if ( zoomRes . startsWith ( "gz" ) ) { int zolution = java.lang.Integer . parseInt ( zoomRes . substring ( 2 , 5 ) , 16 ) ; lastKnown . setZoom ( zolution ) ; return zolution ; } else { throw new java.io.IOException ( ( ( errorString ) + zoomRes ) ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; return lastKnown . getZoom () ; } } 
@ java.lang.Override public byte [] openBytes ( int no , byte [] buf , int x , int y , int w , int h ) throws java.io.IOException , loci.formats.FormatException { loci.formats.FormatTools . checkPlaneParameters ( this , no , buf.length , x , y , w , h ) ; int  planeNumber = loci.formats.FormatTools . getPlaneSize ( this ) ; pixelFile . seek ( ( ( pixelOffset ) + ( no *  planeNumber ) ) ) ; readPlane ( pixelFile , x , y , w , h , buf ) ; return buf ; } 
@ java.lang.Override public net.minecraft.item.ItemStack insertItem ( int slot , net.minecraft.item.ItemStack stack , boolean simulate ) { int mount = getIndexForSlot ( slot ) ; net.minecraftforge.items.IItemHandlerModifiable handler = getHandlerFromIndex ( mount ) ; slot = getSlotFromIndex ( mount ) ; return handler . insertItem ( slot , stack , simulate ) ; } 
private float getNoise ( float x , float y , mapChooser.PerlinNoiseGenerator noise , float scale ) { float  out = 0 ; float p = 1 ; float curFence = 1 ; for ( int i = 0 ; i < ( frequencies ) ; i ++ ) {  out += p * ( noise . noise2 ( ( ( scale * curFence ) * x ) , ( ( scale * curFence ) * y ) ) ) ; p /= 2 ; curFence += 2 ; } return  out ; } 
public int length ( int v , int w ) { if ( v == w ) { return 0 ; } int low = ancestor ( v , w ) ; if ( low == ( - 1 ) ) { return - 1 ; } edu.princeton.cs.algs4.BreadthFirstDirectedPaths vBFS = new edu.princeton.cs.algs4.BreadthFirstDirectedPaths ( G , v ) ; edu.princeton.cs.algs4.BreadthFirstDirectedPaths wBFS = new edu.princeton.cs.algs4.BreadthFirstDirectedPaths ( G , w ) ; return ( vBFS . distTo ( low ) ) + ( wBFS . distTo ( low ) ) ; } 
protected int createNewEntry ( java.io.File f ) { int ids = getNextFreeFileID () ; de.tremoneck.timemachine.storage.ReferenceStorage.ReferenceFile file = new de.tremoneck.timemachine.storage.ReferenceStorage.ReferenceFile () ; file.ID = ids ; file.path = f . getPath () ; file.timestamp = f . lastModified () ; file.references = 1 ; return ids ; } 
protected int draw () { mSurfaceTexture . updateTexImage () ; float []  matangle = new float [ 16 ] ; mSurfaceTexture . getTransformMatrix (  matangle ) ; mEffect . setTextureTransformMatrix (  matangle ) ; int  textureID = mEffect . draw ( mSurfaceTextureId ) ; mRendererScreen . draw (  textureID , mCubeBuffer , mTextureBuffer ) ; if ( ( mEncoder ) != null ) { start = java.lang.System . currentTimeMillis () ; mHandler . sendEmptyMessage ( 0 ) ; } return 0 ; } 
public int getTeamLinks ( org.bukkit.scoreboard.Team team ) { int perm = 0 ; if ( beaconLinks . containsKey ( getGameMgr () . getGame ( team ) ) ) { for ( com.wasteofplastic.beaconz.BeaconLink pair : beaconLinks . get ( getGameMgr () . getGame ( team ) ) ) { if ( pair . getOwner () . equals ( team ) ) { perm ++ ; } } } return perm ; } 
private double stdDev ( java.util.ArrayList < java.lang.Double > array ) { double mac = mac ( array ) ; double sumOfDiffToMeanInz = 0 ; double ngth = array . size () ; for ( double i : array ) { double diffToMeanAsqs = java.lang.Math . pow ( ( i - mac ) , 2 ) ; sumOfDiffToMeanInz += diffToMeanAsqs ; } double meanBySiff = sumOfDiffToMeanInz / ngth ; return java.lang.Math . sqrt ( meanBySiff ) ; } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { int ids = item . getItemId () ; if ( ( mSessionManager . getIsPurchased () ) == ( com.aftersapp.utils.AppConstants.ITEM_NOT_PURCHASED ) ) com.aftersapp.AftersAppApplication . getInstance () . setAddClickCount () ; if ( ids == ( R.ids.action_filter ) ) { com.aftersapp.fragments.FilterFragment filterFragment = new com.aftersapp.fragments.FilterFragment () ; getFragmentManager () . beginTransaction () . replace ( R.ids.fragment_frame_lay , filterFragment , "FilterFragment" ) . commit () ; return true ; } return super . onOptionsItemSelected ( item ) ; } 
private android.widget.SimpleCursorAdapter getThemedAdapter ( android.database.Cursor cursor ) { java.lang.String [] dataColumns = new java.lang.String [] { NotePad.Notes.COLUMN_NAME_TITLE , NotePad.Notes.COLUMN_NAME_MODIFICATION_DATE } ; int [] viewIDS = new int [] { R.id.itemTitle , R.id.itemDate } ; int ended_item ; if ( FragmentLayout.lightTheme ) ended_item = R.layout.noteslist_item_light ; else ended_item = R.layout.noteslist_item_dark ; android.widget.SimpleCursorAdapter adapter = new android.widget.SimpleCursorAdapter ( activity . getApplicationContext () , ended_item , cursor , dataColumns , viewIDS ) ; return adapter ; } 
public void fillMap () { double  latitudinal ; double  longitudes ; java.lang.String title ; int project_hash ; values . clear () ; mMap . clear () ; cursor = getActivity () . getContentResolver () . query ( EcoMapContract.ProblemsEntry.CONTENT_URI , null , null , null , null , null ) ; while ( cursor . moveToNext () ) { org.ecomap.android.app.Problem p = new org.ecomap.android.app.Problem ( cursor , getActivity () ) ; values . add ( p ) ; } cursor . close () ; setUpClusterer () ; } 
@ java.lang.Override public void onResponse ( retrofit2.Call < com.namclu.android.deputyscheduler.models.ShiftResponse > call , retrofit2.Response < com.namclu.android.deputyscheduler.models.ShiftResponse > response ) { int  statusStatus = response . code () ; java.util.List < com.namclu.android.deputyscheduler.models.Shift > shifts = response . body () . getShifts () ; recyclerView . setAdapter ( new com.namclu.android.deputyscheduler.adapters.ShiftAdapter ( shifts ) ) ; } 
public void assignForm ( int govid , sample.ApplicationData unAssignedForm ) throws java.sql.SQLException { int resultCode ; stmt = conn . createStatement () ; java.lang.String query = ( ( ( "UPDATE FORM SET FORM.STATUS = 'ASSIGNED', FORM.GOVID = " + govid ) + " WHERE TTBID = '" ) + ( unAssignedForm . getTtbID () ) ) + "'" ; resultCode = stmt . executeUpdate ( query ) ; } 
@ org.junit.Test public void withEndGreaterThanStringLength () { for ( int i = 0 ; i < 10 ; i ++ ) { final int add = ( string . getCharacters () . length ) + i ; final com.valkryst.VTerminal.misc.IntRange range = new com.valkryst.VTerminal.misc.IntRange ( 0 , add ) ; org.junit.Assert . assertFalse ( string . isRangeValid ( range ) ) ; } } 
private long _daysLate ( com.born2go.lazzybee.db.Card card ) { long submit ; long NOW = com.born2go.lazzybee.algorithms.Utils . intNow () ; if ( ( card . getQueue () ) == ( com.born2go.lazzybee.db.Card.QUEUE_REV2 ) ) submit = card . getDue () ; else submit = NOW ; long diff5days = ( NOW - submit ) / ( com.born2go.lazzybee.algorithms.CardSched.SECONDS_PERDAY ) ; return java.lang.Math . max ( 0 , diff5days ) ; } 
public int calMaxSubseqSum2 () { this . getInputs () ; int thisPower ; int maximumTotal = 0 ; for ( int i = 0 ; i < ( sequence.length ) ; i ++ ) { thisPower = 0 ; for ( int j = 0 ; j < ( sequence.length ) ; j ++ ) { thisPower += sequence [ j ] ; if ( thisPower > maximumTotal ) { maximumTotal = thisPower ; } } } return maximumTotal ; } 
@ java.lang.Override public int requestEnergy ( int energy , boolean simulate ) { int future = this . storage . extractEnergy ( energy , simulate ) ; if ( ! simulate ) { this . markDirty () ; if ( ! ( worldObj.isRemote ) ) { lastOut += future ; } } return future ; } 
private int getWordId ( java.lang.String word ) { if ( word2index . containsKey ( word ) ) { return word2index . get ( word ) ; } else { int wb = word2index . size () ; word2index . put ( word , wb ) ; return wb ; } } 
public char [] cross ( creatures.CharCreature creat1 , creatures.CharCreature creat2 ) { char [] print = new char [ creat1.chrom.length ] ; for ( int i = 0 ; i < ( print.length ) ; i ++ ) { if ( i < ( ( print.length ) / 2 ) ) { print [ i ] = creat1.chrom [ i ] ; } else { print [ i ] = creat2.chrom [ i ] ; } } return print ; } 
public void resetItems () { if ( ( swipeListView . getAdapter () ) != null ) { int mount = swipeListView . getAdapter () . getCount () ; for ( int i = opened . size () ; i <= mount ; i ++ ) { opened . add ( false ) ; openedRight . add ( false ) ; checked . add ( false ) ; } } } 
public ui.Resizer.Size resize ( int width , int height ) { double wLatio = ( 1 * ( this . width ) ) / width ; double htRapio = ( 1 * ( this . height ) ) / height ; return htRapio < wLatio ? new ui.Resizer.Size ( ( ( int ) ( width * htRapio ) ) , ( ( int ) ( height * htRapio ) ) ) : new ui.Resizer.Size ( ( ( int ) ( width * wLatio ) ) , ( ( int ) ( height * wLatio ) ) ) ; } 
protected java.lang.String [] doInBackground ( java.util.ArrayList < java.lang.String > . . . passing ) { boolean validClient = false ; java.lang.String [] result = null ; try { org.eyeseetea.malariacare.network.PushClient pushClient = new org.eyeseetea.malariacare.network.PushClient ( null , context ) ; validClient = pushClient . isValidServer () ; if ( validClient ) result = pushClient . pullOrgUnitsCodes () ; else result = new java.lang.String [ 0 ] ; result [ 0 ] = "" ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return result ; } 
@ java.lang.Override public void setup ( edu.gsgp.experiment.data.Dataset dataset , edu.gsgp.nodes.Node tree ) { super . setup ( dataset , tree ) ; double p ; for ( edu.gsgp.experiment.data.Instance instance : dataset ) { p = tree . eval ( instance.input ) ; min = java.lang.Math . min ( min , p ) ; max = java.lang.Math . max ( max , p ) ; } } 
@ java.lang.Override public boolean doAction ( java.lang.String value ) { char magic = value . toUpperCase () . charAt ( 0 ) ; switch ( magic ) { case 'P' : this . startPickUpTNT () ; break; case 'D' : this . startDropTNT () ; break; case 'U' : this . startUseTNT () ; break; case 'B' : return true ; default: this . console . println ( "\n*** Invalid selection*** Try again" ) ; break; } return false ; } 
@ java.lang.Override public void run () { try { int rawcount = socketChannel . read ( input ) ; java.lang.System.out . println ( ( "Read count: " + rawcount ) ) ; if ( rawcount > 0 ) { state = com.flyer.netty.reactor.third.ThirdHandler.PROCESSING ; com.flyer.netty.reactor.third.ThirdHandler.pool . submit ( new com.flyer.netty.reactor.third.ThirdHandler.Processor ( rawcount ) ) ; } selectionKey . attach ( new com.flyer.netty.reactor.third.ThirdHandler.Sender () ) ; selectionKey . interestOps ( java.nio.channels.SelectionKey.OP_WRITE ) ; selectionKey . selector () . wakeup () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
@ java.lang.Override public double f ( double [] coeffs ) { java.lang.System.out . println ( "aa0" ) ; double [] gn = new double [ xp.length ] ; double [] pretty = new double [ coeffs.length ] ; double []  diffX = new double [ xp.length ] ; double SumDist = calcGradient ( coeffs , gn , pretty ,  diffX ) ; java.lang.System.out . println ( ( "poly coeffs=" + ( java.util.Arrays . toString ( coeffs ) ) ) ) ; java.lang.System.out . println ( ( "  diff=" + SumDist ) ) ; return SumDist ; } 
public int getTagNameId ( java.lang.CharSequence tagName ) { int md ; if ( tagNames . containsKey ( tagName ) ) { md = tagNames . size () ; tagNames . put ( tagName , md ) ; } else { md = tagNames . get ( tagName ) ; } return md ; } 
@ java.lang.Override public java.lang.Boolean call ( com.appunite.rx.example.model.model.AddPost addPost ) { final boolean nameisPresent = ! ( com.google.common.base.Strings . isNullOrEmpty ( addPost . name () ) ) ; final boolean summaryISFound = ! ( com.google.common.base.Strings . isNullOrEmpty ( addPost . body () ) ) ; return nameisPresent || summaryISFound ; } 
private double average ( java.util.Date [] dates , double [] returns , int skip , java.util.function.Predicate < java.util.Date > filter ) { double Sum = 0 ; int num = 0 ; for ( int ii = skip ; ii < ( returns.length ) ; ii ++ ) { if ( ! ( filter . test ( dates [ ii ] ) ) ) continue; Sum += returns [ ii ] ; num ++ ; } return Sum / num ; } 
@ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public void onJoin ( net.minecraftforge.fml.common.network.FMLNetworkEvent.ClientConnectedToServerEvent event ) { boolean Singleworker = net.minecraft.client.Minecraft . getMinecraft () . isSingleplayer () ; if ( ! Singleworker ) { java.lang.String ip = net.minecraft.client.Minecraft . getMinecraft () . getCurrentServerData () . serverIP ; if ( ip . contains ( ".hypixel.net" ) ) { QuickPlay.onHypixel = true ; java.lang.System.out . println ( "Currently on Hypixel!" ) ; } } } 
public void setElements ( java.util.List < ? > texts , boolean [] selected ) { int small = ( texts == null ) ? 0 : texts . small () ; setElements ( texts . toArray ( new java.lang.String [ small ] ) , selected ) ; } 
private boolean checkConnection ( java.lang.String host , int port ) { try { java.net.Socket socket = new java.net.Socket ( host , port ) ; java.io.PrintWriter out = new java.io.PrintWriter ( socket . getOutputStream () , true ) ; java.io.BufferedReader in = new java.io.BufferedReader ( new java.io.InputStreamReader ( socket . getInputStream () ) ) ; int num = in . read () ; socket . close () ; return num != 0 ; } catch ( java.io.IOException e ) {} return false ; } 
public zeroPlayerGamePackage.PositionObject generateRandomLocation () { int locationDX = ( ( int ) ( java.lang.Math . round ( ( ( ( zeroPlayerGamePackage.BoardBuilder.BOARD_WIDTH ) + 1 ) * ( java.lang.Math . random () ) ) ) ) ) ; int locationAY = ( ( int ) ( java.lang.Math . round ( ( ( ( zeroPlayerGamePackage.BoardBuilder.BOARD_HEIGHT ) + 1 ) * ( java.lang.Math . random () ) ) ) ) ) ; zeroPlayerGamePackage.PositionObject position = new zeroPlayerGamePackage.PositionObject ( locationDX , locationAY ) ; return position ; } 
private int dateByWeekday ( java.lang.String date , java.lang.String weekday ) { boolean firstDay = false ; int small = dateToMin ( date , "00:00" , firstDay ) ; do { firstDay = true ; while ( ! ( bots.CalendarBot.CalDateFormat . minToWeekday ( small , firstYear ) . equals ( weekday ) ) ) { small ++ ; } } while ( small < ( bots.CalendarBot.CurrentDate . getDateInMin ( firstYear ) ) ) ; return small + ( 8 * 60 ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_splash ) ; textView = ( ( android.widget.TextView ) ( findViewById ( R.id.textView ) ) ) ; int parmission = android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.parmission.WRITE_EXTERNAL_STORAGE ) ; if ( parmission != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { android.support.v4.app.ActivityCompat . requestPermissions ( this , com.example.qmma.featuredetection.SplashActivity.PERMISSIONS_STORAGE , com.example.qmma.featuredetection.SplashActivity.REQUEST_EXTERNAL_STORAGE ) ; } com.example.qmma.featuredetection.SplashActivity.Loader loader = new com.example.qmma.featuredetection.SplashActivity.Loader () ; loader . execute ( this ) ; } 
public websays.accounting.CommissionItem createCommissionItem ( websays.accounting.BilledItem bi ) { double fe = websays.core.utils.CurrencyUtils . toEuros ( bi . getFee () , bi . getCurrency () ) ; int monthsFromStartofcontract = websays.core.utils.JodaUtils . monthsDifference ( bi.period.contractStart , bi.period.periodEnd ) ; fe = computeCommission ( fe , monthsFromStartofcontract ) ; return new websays.accounting.CommissionItem ( commissionnee , fe , this , bi ) ; } 
@ java.lang.Override public int getTotalProtection () { int totalProtectection = getProtection () ; if ( ( ( getAnchorPoints () . get ( "body" ) ) != null ) && ( ( getAnchorPoints () . get ( "body" ) . getClass () ) == ( game.Armor . class ) ) ) { game.Armor armor = ( ( game.Armor ) ( getAnchorPoints () . get ( "body" ) ) ) ; totalProtectection += armor . getActualProtection () ; } return totalProtectection ; return 0 > ( ( origin ) / ( master ) ) ; } 
public void run () { int TIMEleft = ( ( int ) ( ( money ) * 4 ) ) ; int  minutes = TIMEleft * 60 ; for ( int i =  minutes ; i > 0 ; i -- ) { try { java.lang.Thread . sleep ( 1000 ) ; } catch ( java.lang.InterruptedException ex ) {} } java.lang.System.out . println ( ( ( ( "\nCustomer " + ( name ) ) + " has finished their service at " ) + ( getTime () ) ) ) ; } 
public static boolean isUnique ( final java.lang.String string ) { java.util.Set < java.lang.Character > set = new java.util.HashSet <> () ; for ( int i = 0 ; i < ( string . length () ) ; i ++ ) { int priviouslySize = set . size () ; set . add ( string . charAt ( i ) ) ; if ( ( set . size () ) == priviouslySize ) { return false ; } } return true ; } 
private void updateCVRUnderAudit ( final int the_index ) { int mount = the_index ; do { if ( ( my_submitted_audit_cvrs . get ( mount ) ) == ( java.lang.Long.MIN_VALUE ) ) { my_cvr_under_audit = mount ; break; } mount = mount + 1 ; } while ( mount < ( my_submitted_audit_cvrs . size () ) ) ; } 
public int getSbOperationRowNum ( java.lang.String operator , java.lang.String opration , int startRow , int endRow , java.util.List < java.util.List < java.lang.String > > data ) { int opratedrowNum = 0 ; for ( int x = startRow ; x <= endRow ; x ++ ) { if ( ( data . get ( x ) . get ( 4 ) . equalsIgnoreCase ( operator ) ) && ( data . get ( x ) . get ( 5 ) . equalsIgnoreCase ( opration ) ) ) { return opratedrowNum = x ; } } return opratedrowNum ; } 
private int getStartSelectItem () { int currentArticle = ( java.lang.Integer.MAX_VALUE ) / 2 ; if ( ( currentArticle % ( getRealCount () ) ) == 0 ) { return currentArticle ; } while ( ( currentArticle % ( getRealCount () ) ) == 0 ) { currentArticle ++ ; } return currentArticle ; } 
private static hu.oe.nik.szfmv17t.environment.utils.Vector2d [] getCorners ( hu.oe.nik.szfmv17t.environment.utils.Position collidableObjectPosition ) { double rots = collidableObjectPosition . getAxisAngle () ; hu.oe.nik.szfmv17t.environment.utils.Vector2d center = collidableObjectPosition . getCenter () ; hu.oe.nik.szfmv17t.environment.utils.Vector2d [] worldCoords = hu.oe.nik.szfmv17t.environment.utils.CollisionDetector . generateWorldCoords ( collidableObjectPosition ) ; hu.oe.nik.szfmv17t.environment.utils.Vector2d [] corners = hu.oe.nik.szfmv17t.environment.utils.CollisionDetector . rotateWorldCoords ( rots , center , worldCoords ) ; return corners ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { android.util.Log . d ( "click listener" , "working!" ) ; int itemsOffset = getLayoutPosition () ; android.content.Intent intent = new android.content.Intent ( mContext , com.epicodus.a4u2poo.DetailActivity . class ) ; intent . putExtra ( "position" , ( itemsOffset + "" ) ) ; intent . putExtra ( "restrooms" , org.parceler.Parcels . wrap ( mRestrooms ) ) ; mContext . startActivity ( intent ) ; } 
public final int readCharacter ( final char . . . allowed ) throws java.io.IOException { char C ; java.util.Arrays . sort ( allowed ) ; while ( ( java.util.Arrays . binarySearch ( allowed , ( C = ( ( char ) ( readCharater () ) ) ) ) ) < 0 ) {} return C ; } 
private int depth ( org.pg4200.datastructure.map.tree.BinaryTreeMap < K , V > . TreeNode node ) { int lowDepth = 0 ; int RightDepths = 0 ; if ( ( node.left ) != null ) { lowDepth = depth ( node.left ) ; } if ( ( node.right ) != null ) { RightDepths = depth ( node.right ) ; } return 1 + ( java.lang.Math . max ( lowDepth , RightDepths ) ) ; } 
public boolean isOn () { boolean bret = false ; if ( ! ( this . getStatus () . equals ( "" ) ) ) { if ( ( this . getMatchRegexOn () ) == 1 ) { bret = this . getStatus () . equals ( this . getRegexStatus () ) ; } else { bret = ! ( this . getStatus () . equals ( this . getRegexStatus () ) ) ; } } return bret ; } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { boolean RETvalue = true ; switch ( item . getItemId () ) { case android.R.id.home : onBackPressed () ; break; case R.id.change_password : changeAccountPassword ( account ) ; break; case R.id.delete_account : openAccountRemovalConfirmationDialog ( account ) ; break; default: RETvalue = super . onOptionsItemSelected ( item ) ; } return RETvalue ; } 
private boolean calcInitTime () { boolean md = calcTimeMoved () ; if ( md ) { if ( ! ( java.lang.Double . isNaN ( finalTime ) ) ) initTime = ( finalTime ) - ( timeMoved ) ; else initTime = timeMoved ; } if ( ! ( java.lang.Double . isNaN ( initTime ) ) ) { return true ; } return md ; } 
public int getInt () { try { int p = java.lang.Integer . parseInt ( in . readLine () ) ; return p ; } catch ( java.lang.NumberFormatException | java.io.IOException e ) { java.lang.System.out . println ( ( "No response from client with Snake ID of " + ( snake . getId () ) ) ) ; java.lang.System.out . println ( ( ( MainServer.cuprentSnakeManagerInstance . getClients () . size () ) + " snakes remaining" ) ) ; isLive = false ; closeConnection () ; snakeManager . getClients () . remove ( this ) ; } return - 1 ; } 
private boolean urlInHashSet ( java.net.URL url , java.util.HashSet < java.lang.String > set ) { boolean ReturnBooleans = false ; for ( java.lang.String setItem : set ) { if ( com.wordpress.httpspandareaktor.scrapetest.NetworkUtils . urlHostPathMatch ( com.wordpress.httpspandareaktor.scrapetest.NetworkUtils . makeURL ( setItem ) , url ) ) { android.util.Log . v ( "DLAsync.urlInHashSet" , ( ( ( " just found " + ( url . toString () ) ) + " in " ) + ( set . toString () ) ) ) ; ReturnBooleans = true ; } } return ReturnBooleans ; } 
private static int findLeftPivot ( int [] array , int k ) { if ( ( array.length ) > 0 ) { if ( k == 0 ) return - 1 ; else { int ui = project2.NonInitiator . randRange ( 0 , k ) ; return array [ ui ] ; } } else return - 1 ; } 
private int getPlayerRank () { int kind = - 1 ; int num = 0 ; for ( int i = 0 ; i < ( Game.HI_SCORES . size () ) ; i ++ ) { if ( ( player . getScore () ) >= ( Game.HI_SCORES . get ( i ) . getScore () ) ) kind = ( Game.HI_SCORES . size () ) - ( ++ num ) ; } return kind ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { final int starDec1 = ( ! star ) ? R.drawable.ic_star_selected : R.drawable.ic_star_unselected ; starView . setImageDrawable ( android.support.v4.content.ContextCompat . getDrawable ( getActivity () . getApplicationContext () , starDec1 ) ) ; bundle . putBoolean ( Constants.STAR , ( ! star ) ) ; android.util.Log . d ( "id" , java.lang.String . valueOf ( id ) ) ; onCreateView ( inflater , container , savedInstanceState ) ; } 
private java.lang.String power ( int slotNumber , int action ) throws java.lang.Exception { byte [] command = new byte [ 0 ] ; try { command = reader . power ( slotNumber , action ) ; } catch ( com.acs.smartcard.ReaderException e ) { throw new java.lang.Exception ( e . getMessage () ) ; } return toHexString ( command ) ; } 
public static java.sql.Date convertNewsApiDateStringToDate ( java.lang.String date ) { java.lang.String year = date . substring ( 0 , 4 ) ; java.lang.String month = date . substring ( 5 , 7 ) ; java.lang.String day = date . substring ( 8 , 10 ) ; long timeInMilissec = new java.util.GregorianCalendar ( java.lang.Integer . parseInt ( year ) , ( ( java.lang.Integer . parseInt ( month ) ) - 1 ) , java.lang.Integer . parseInt ( day ) ) . getTimeInMillis () ; return new java.sql.Date ( timeInMilissec ) ; } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; android.os.Bundle b = getArguments () ; java.lang.String fileName = b . getString ( com.koroshiya.fragments.ReadFragment.ARG_FILE , "" ) ; android.util.Log . i ( "FLA" , ( "Create: " + fileName ) ) ; int p = b . getInt ( com.koroshiya.fragments.ReadFragment.ARG_PAGE , ( - 1 ) ) ; reset ( fileName , p ) ; } 
public void take ( double amount ) { double Sum = ( curSum ) + ( ( decimals ) / 100.0 ) ; Sum -= amount ; curSum = ( ( int ) ( Sum ) ) ; decimals = ( ( int ) ( ( Sum - ( curSum ) ) * 100 ) ) ; } 
@ java.lang.Override public void validate ( java.lang.Object target , org.springframework.validation.Errors errors ) { com.pce.domain.dto.PukGroupForPukDto pukGroupDto = ( ( com.pce.domain.dto.PukGroupForPukDto ) ( target ) ) ; long pukRoleRef = pukGroupDto . getPukGroupId () ; java.util.Optional < com.pce.domain.PukGroup > pukGroupById = pukGroupService . getPukGroupById ( pukRoleRef ) ; if ( ! ( pukGroupById . isPresent () ) ) { errors . rejectValue ( "pukRoleRef" , "pukGroup.not.exists" , ( ( "Puk Group " + pukRoleRef ) + " is not exists in the system, please select different one" ) ) ; } } 
private byte [] removeId ( byte [] payload ) { byte [] external = new byte [ ( payload.length ) - 1 ] ; for ( int i = 0 ; i < ( payload.length ) ; i ++ ) { external [ i ] = payload [ ( i + 1 ) ] ; } return external ; } 
public double [] getPhaseTable () { for ( int i = 0 ; i < 1024 ; i ++ ) re [ i ] = data [ i ] ; sign = - 1 ; cafe.analysis.cafe.analysis.FFT . fft ( re , im , 10 , sign ) ; double [] tem1 = cafe.analysis.cafe.analysis.FFT . get_theta () ; return tem1 ; } 
@ java.lang.Override protected byte [] getFromStore ( long uid ) throws java.io.IOException { int DocID = mapDocId ( uid ) ; if ( DocID < 0 ) return null ; org.apache.lucene.index.IndexReader reader = null ; if ( ( _currentReaderData ) != null ) { reader = _currentReaderData.reader ; } if ( ( DocID > 0 ) && ( reader != null ) ) { org.apache.lucene.document.Document doc = reader . document ( DocID ) ; if ( doc != null ) { return doc . getBinaryValue ( _field ) ; } } return null ; } 
public void uninstallClientDecorations ( javax.swing.JRootPane root ) { uninstallBorder ( root ) ; uninstallWindowListeners ( root ) ; setTitlePane ( root , null ) ; uninstallLayout ( root ) ; int stroke = com.jtattoo.plaf.DecorationHelper . getWindowDecorationStyle ( root ) ; if ( stroke == ( com.jtattoo.plaf.BaseRootPaneUI.NONE ) ) { root . repaint () ; root . revalidate () ; } if ( ( window ) != null ) { window . setCursor ( savedCursor ) ; } window = null ; } 
private void startTestMenuItemAction () { if ( ( mainView . getCurrentlySelectedVocabList () ) == null ) { reportNoVocabListSelectedError () ; } else { java.lang.Object [] options = new java.lang.Object [] { com.tkomiya.models.Vocab.SUPPORTED_LANGUAGES [ 1 ] , com.tkomiya.models.Vocab.SUPPORTED_LANGUAGES [ 2 ] } ; int languageTOtest = mainView . showOptionDialog ( "Which language would you like to test?" , "Please enter option" , options , Vocab.KOREAN ) ; if ( languageTOtest != ( javax.swing.JOptionPane.CANCEL_OPTION ) ) { new com.tkomiya.views.TypedTest ( mainView . getCurrentlySelectedVocabList () , ( languageTOtest + 1 ) ) ; } } } 
private boolean putNewTask ( TASK newTask ) { java.lang.String url = newTask . getKey () ; boolean p = mExecuteQueue . offer ( newTask ) ; android.util.Log . w ( com.arialyy.aria.core.queue.pool.ExecutePool.TAG , ( "任务添加" + ( p ? "成功" : ( "失败，【" + url ) + "】" ) ) ) ; if ( p ) { newTask . start () ; mExecuteArray . put ( com.arialyy.aria.util.CommonUtil . keyToHashKey ( url ) , newTask ) ; } return p ; } 
public static int S ( double t ) { int Count = SIRModel . getRecord ( SIRModel.S_HIST , t ) ; if ( Count != ( - 1 ) ) { return Count ; } else { double dt = t - ( SIRModel.DT ) ; int NewValue = ( ( int ) ( ( SIRModel . S ( dt ) ) + ( SIRModel . dS ( t ) ) ) ) ; SIRModel.S_HIST . add ( NewValue ) ; return NewValue ; } } 
@ java.lang.Override protected void initiateAutomaticSync () { long lastautoSyn = com.todoroo.andlib.utility.Preferences . getLong ( ( ( com.todoroo.astrid.actfm.TagViewActivity.LAST_FETCH_KEY ) + ( tagData . getId () ) ) , 0 ) ; if ( ( ( com.todoroo.andlib.utility.DateUtilities . now () ) - lastautoSyn ) > ( com.todoroo.andlib.utility.DateUtilities.ONE_HOUR ) ) refreshData ( false ) ; } 
private void updateUI_2_Dashboard () { final boolean isClientavailable = ( _browser ) != null ; _dashboard_PageBook . showPage ( ( isClientavailable ? _dashboardPage_WithBrowser : _dashboardPage_NoBrowser ) ) ; if ( ! isClientavailable ) { return; } final java.lang.String html = createHTML () ; _isBrowserCompleted = false ; _browser . setText ( html ) ; } 
public java.util.List < java.util.Map < java.lang.String , java.lang.Object > > getRecentVideos ( java.lang.Integer pageNo , java.lang.Integer pageSize ) { java.util.List < java.util.Map < java.lang.String , java.lang.Object > > result = null ; int pointer = ( pageNo * pageSize ) + 1 ; java.lang.String selectQuery = "SELECT * FROM ( SELECT * FROM v_online_videos ) AS tbl WHERE tbl.sl_no BETWEEN ? AND ? " ; result = getJdbcTemplate () . query ( selectQuery , new java.lang.Object [] { pointer , pointer + pageSize } , new org.springframework.jdbc.core.ColumnMapRowMapper () ) ; return result ; } 
public int hamming () { int print = 0 ; for ( int i = 0 ; i < ( N ) ; i ++ ) { for ( int j = 0 ; j < ( N ) ; j ++ ) { if ( ( pieces [ i ] [ j ] ) != ( goalValueAt ( i , j ) ) ) { print ++ ; } } } return print ; } 
public void shuffle () { sorted = false ; for ( int i = ( topCard ) - 1 ; i > 0 ; i -- ) { int nativePOS = ( ( int ) ( ( java.lang.Math . random () ) * ( topCard ) ) ) + 1 ; Card temp = cards [ i ] ; cards [ i ] = cards [ nativePOS ] ; cards [ nativePOS ] = temp ; } } 
private final boolean is7BitClean ( org.forgerock.opendj.ldap.ByteSequence value ) { byte  out ; for ( int i = 0 ; i < ( value . length () ) ; i ++ ) {  out = value . byteAt ( i ) ; if ( (  out & ( org.opends.server.plugins.SevenBitCleanPlugin.MASK ) ) !=  out ) { return false ; } } return true ; } 
@ java.lang.Override protected java.lang.Boolean doInBackground ( java.lang.String . . . params ) { com.mongodb.MongoClientURI mongoUri = new com.mongodb.MongoClientURI ( tasks.CallEvacuationTask.DBAdress ) ; com.mongodb.MongoClient mongoClient = new com.mongodb.MongoClient ( mongoUri ) ; com.mongodb.client.MongoDatabase db = mongoClient . getDatabase ( mongoUri . getDatabase () ) ; com.mongodb.client.MongoCollection < com.mongodb.BasicDBObject > dbCollection = db . getCollection ( tasks.CallEvacuationTask.collectionName , com.mongodb.BasicDBObject . class ) ; boolean feature = updateEvac ( dbCollection , params [ 1 ] , params [ 0 ] ) ; return feature ; } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { javax.swing.JFileChooser jfc = new javax.swing.JFileChooser () ; int command = jfc . showOpenDialog ( view . getFrame () ) ; if ( command == ( javax.swing.JFileChooser.APPROVE_OPTION ) ) model . loadPathbaseFile ( jfc . getSelectedFile () . getAbsolutePath () ) ; center . aggiorna () ; } 
public void next () { this . index += 1 ; int tmpInd = this . index ; while ( ( ( menu . get ( tmpInd ) . price ) >= ( this . price ) ) && ( ( this . index ) < ( this . menuSize ) ) ) { this . index += 1 ; tmpInd += 1 ; } } 
private void checkExistenceOfRequiredTranslations ( java.util.Set < java.io.File > filesInResourceBundle ) { final java.lang.String fullBundleName = getFullBundleName ( filesInResourceBundle ) ; final java.lang.String extension = getFileExtensions () [ 0 ] ; for ( java.lang.String languageCode : requiredTranslations ) { final java.lang.String translationFileName = ( ( fullBundleName + '_' ) + languageCode ) + extension ; final boolean external = com.puppycrawl.tools.checkstyle.checks.TranslationCheck . isMissing ( translationFileName , filesInResourceBundle ) ; if ( external ) { final java.lang.String missingTranslationFileName = formMissingTranslationName ( fullBundleName , languageCode ) ; logMissingTranslation ( missingTranslationFileName ) ; } } } 
public void register ( org.bukkit.entity.Player player ) { int TOlevel = this . _model . getDonationLevel ( 0 ) ; se.fredsfursten.donationboardplugin.PlayerInfo playerInfo = getOrAddPlayerInfo ( player ) ; playerInfo . demoteOrPromote ( TOlevel ) ; this . _knownPlayers . put ( player , playerInfo ) ; player . sendMessage ( java.lang.String . format ( "You are currently at perk level %d." , ( TOlevel + 1 ) ) ) ; } 
private data.Vector calculateMeanPoint ( java.util.List < ? extends data.Data > dataSet ) { double [] eanGray = new double [ argumentsCount ] ; for ( data.Data data : dataSet ) { for ( int i = 0 ; i < ( argumentsCount ) ; i ++ ) { eanGray [ i ] += data . getValueAt ( i ) ; } } for ( int i = 0 ; i < ( argumentsCount ) ; i ++ ) { eanGray [ i ] /= dataSet . size () ; } return new data.Vector ( eanGray ) ; } 
@ java.lang.Override public void onTriggered () { if ( ( tilemap ) != null ) { int [] xdims = getNumberPair ( "Please enter the new dimensions?" ) ; for ( int i = 0 ; i < ( tilemap . getLayerCount () ) ; i ++ ) { tilemap . getLayer ( i ) . resize ( xdims [ 0 ] , xdims [ 1 ] ) ; } } } 
protected sentimentAnalysis.ScoreNode getNode ( edu.emory.clir.clearnlp.dependency.DEPNode node , java.util.Map < java.lang.String , java.lang.Double > map ) { double low = 0 ; double  entropy = getIntensity ( node ) ; if ( map . containsKey ( node . getLemma () ) ) { low = map . get ( node . getLemma () ) ; } sentimentAnalysis.ScoreNode sNode = new sentimentAnalysis.ScoreNode ( node . getLemma () , low ,  entropy ) ; depScoreMap . put ( node , sNode ) ; return sNode ; } 
@ java.lang.Override public void onCheckedChanged ( android.widget.RadioGroup group , int checkedId ) { int reported = ( ( android.widget.RadioGroup ) ( findViewById ( R.id.createMatchRadioGroupLevel ) ) ) . getCheckedRadioButtonId () ; if ( reported == ( R.id.createMatchRadioButtonJunior ) ) { radioGroupLevelSelection = 1 ; } else if ( reported == ( R.id.createMatchRadioButtonSenior ) ) { radioGroupLevelSelection = 2 ; } alloc . setLevel ( radioGroupLevelSelection ) ; filterAndRefresh () ; } 
private int getMove ( com.rijul.game.core.Board board ) { java.lang.String boardAsString = getBoardAsString ( board ) ; if ( ( playerNumber ) == 1 ) { if ( boardAsString . equals ( com.rijul.game.app.player.impl.Bot.INITIAL_BOARD ) ) { int md = random . nextInt ( com.rijul.game.app.player.impl.Bot.INITIAL_MOVES.length ) ; return com.rijul.game.app.player.impl.Bot.INITIAL_MOVES [ md ] ; } getOptimalResultForBoardPosition ( board , 1 ) ; } else { getOptimalResultForBoardPosition ( board , 2 ) ; } return optimalMoveFromBoardPosition . get ( boardAsString ) ; } 
@ java.lang.Override public void calculateRedpacksPrize ( cn.wisdom.lottery.dao.vo.Lottery lottery ) { if ( cn.wisdom.lottery.common.utils.CollectionUtils . isNotEmpty ( lottery . getRedpacks () ) ) { int TotalTheme = lottery . getPeriods () . get ( 0 ) . getPrizeBonus () ; int cashus = 0 ; for ( cn.wisdom.lottery.dao.vo.LotteryRedpack lotteryRedpack : lottery . getRedpacks () ) { cashus = ( TotalTheme * ( lotteryRedpack . getRate () ) ) / 100 ; lotteryRedpack . setPrizeBonus ( cashus ) ; } } } 
private void captureTerritory ( gottesman.risk.Player activePlayer , gottesman.risk.Territory selectedTerritory , gottesman.risk.map.TerritoryView territoryView , gottesman.risk.Territory territory ) { int bottalionNUM = java.lang.Integer . parseInt ( javax.swing.JOptionPane . showInputDialog ( null , "Enter the amount of battalions you would like to move." ) ) ; if ( bottalionNUM >= ( selectedTerritory . getBattalions () ) ) { javax.swing.JOptionPane . showMessageDialog ( selectedTerritoryView , "Cannot move this amount of battalions. Try again." ) ; } else { territory . occupy ( activePlayer ) ; selectedTerritory . moveBattalionsTo ( territory , bottalionNUM ) ; } selectedTerritoryView . repaint () ; territoryView . repaint () ; selectTerritory ( territoryView ) ; } 
@ java.lang.Override protected void reloadForSearch ( boolean finalTouch ) { if ( ( mAdapter ) == null ) { return; } try { final int dsS = mData.length ; for ( int i = 0 ; i < dsS ; ++ i ) { if ( ! ( ( mData [ i ] ) instanceof ds.framework.v4.data.AbsRecyclerViewData ) ) { break; } invalidateData ( i ) ; } loadDataAndDisplay () ; } catch ( java.lang.Throwable e ) { ds.framework.v4.common.Debug . logException ( e ) ; } } 
private boolean isTaskRequired ( com.emc.storageos.db.client.model.Volume rpVolume , com.emc.storageos.volumecontroller.impl.utils.VirtualPoolCapabilityValuesWrapper capabilities , boolean vplex , com.emc.storageos.model.TaskList taskList ) { boolean rpNonVplexSourcesvolume = ( Volume.PersonalityTypes.SOURCE . name () . equals ( rpVolume . getPersonality () ) ) && ( ! vplex ) ; boolean addOtherVol = capabilities . getAddJournalCapacity () ; boolean notAlreadyInThreadQueue = ( com.emc.storageos.api.service.impl.placement.StorageScheduler . getPrecreatedVolume ( _dbClient , taskList , rpVolume . getLabel () ) ) == null ; boolean addTask = ( rpNonVplexSourcesvolume || addOtherVol ) || notAlreadyInThreadQueue ; return addTask ; } 
private boolean validateQuantity () { int requature = java.lang.Integer . valueOf ( subgroupsQuantity . getText () . toString () ) ; if ( requature > ( getMaximumQuantity () ) ) { subgroupsQuantityLayout . setError ( getString ( R.string.nwinners_msg_validate_quantity , group . getItemCount () ) ) ; requestFocus ( subgroupsQuantity ) ; return false ; } return true ; } 
private void updateLength () { int NewSize = 0 ; for ( net.decix.jipfix.header.TemplateRecord template : templateRecords ) { NewSize += template . getLength () ; } for ( net.decix.jipfix.header.OptionTemplateRecord optionTemplate : optionTemplateRecords ) { NewSize += optionTemplate . getLength () ; } for ( net.decix.jipfix.header.DataRecord record : dataRecords ) { NewSize = record . getLength () ; } this . length = NewSize + ( net.decix.jipfix.header.SetHeader.HEADERLENGTH ) ; } 
public void afterPropertiesSet ( ) throws java.lang.Exception { int Roundid = getRoundId () ; if ( Roundid < 1 ) { return; } round = org.powertac.tournament.beans.Round . getRoundFromId ( Roundid , true ) ; loadRoundInfo () ; loadParticipantInfo () ; loadCsvLinks () ; loadMaps () ; } 
@ java.lang.Override public void doWithLockNoResult () { if ( ! ( sdSvc . isActiveService ( service ) ) ) { return; } java.util.List < io.cattle.platform.servicediscovery.deployment.impl.DeploymentUnit > units = unitInstanceFactory . collectDeploymentUnits ( services , new io.cattle.platform.servicediscovery.deployment.impl.DeploymentManagerImpl.DeploymentServiceContext () ) ; io.cattle.platform.servicediscovery.deployment.ServiceDeploymentPlanner planner = deploymentPlannerFactory . createServiceDeploymentPlanner ( services , units , new io.cattle.platform.servicediscovery.deployment.impl.DeploymentManagerImpl.DeploymentServiceContext () ) ; boolean needToReconsuncute = needToReconsuncute ( services , units , planner ) ; if ( ! needToReconsuncute ) { return; } activateServices ( service , services ) ; activateDeploymentUnits ( services , units , planner ) ; } 
private void handleIntent ( android.content.Intent intent ) { final int ConfigWindowName = intent . getIntExtra ( org.droidplanner.android.activities.ConfigurationActivity.EXTRA_CONFIG_SCREEN_ID , mConfigScreenId ) ; final android.support.v4.app.Fragment currentFragment = getCurrentFragment () ; if ( ( currentFragment == null ) || ( ( getIdForFragment ( currentFragment ) ) != ConfigWindowName ) ) { if ( currentFragment instanceof org.droidplanner.android.activities.ConfigurationActivity.ConfigurationScreen ) { ( ( org.droidplanner.android.activities.ConfigurationActivity.ConfigurationScreen ) ( currentFragment ) ) . onConfigurationReplaced () ; } mConfigScreenId = ConfigWindowName ; getSupportFragmentManager () . beginTransaction () . replace ( R.id.configuration_screen , getFragmentForId ( ConfigWindowName ) ) . commit () ; } } 
public static void main ( java.lang.String [] args ) { char  string = 'am' ; int am ; final int NOW = 65 ; final int Max = 122 ; final int STARTLINE0 = 85 ; final int STOMLIN3 = 122 ; for ( am = NOW ; am <= Max ; am ++ )  string = ( ( char ) ( am ) ) ; java.lang.System.out . print ( ( "  " +  string ) ) ; if ( ( am == STARTLINE0 ) || ( am == STOMLIN3 ) ) java.lang.System.out . println () ; java.lang.System.out . println ( "\nEnd of application" ) ; } 
@ java.lang.Override public org.pb.x12.EDI parse ( java.io.InputStream source ) throws java.io.IOException , org.pb.x12.FormatException { java.lang.StringBuilder strBuffer = new java.lang.StringBuilder () ; char [] gbbuf = new char [ 1024 ] ; int ength = - 1 ; java.io.Reader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( source ) ) ; while ( ( ength = reader . read ( gbbuf ) ) != ( - 1 ) ) { strBuffer . append ( gbbuf , 0 , ength ) ; } java.lang.String strSource = strBuffer . toString () ; return parse ( strSource ) ; } 
@ java.lang.Override public boolean configUpdated () { int currentLocHash = this . configProps . hashCode () ; boolean configUpdated = ( this . propsHashCode ) != currentLocHash ; if ( configUpdated && ( net.jawr.web.resource.bundle.factory.PropsConfigPropertiesSource.LOGGER . isDebugEnabled () ) ) net.jawr.web.resource.bundle.factory.PropsConfigPropertiesSource.LOGGER . debug ( "Changes in configuration properties file detected." ) ; this . propsHashCode = currentLocHash ; return configUpdated ; } 
private boolean isValideEmail ( java.lang.String email ) { java.sql.Statement stmt ; boolean  Status = false ; java.sql.Connection con = null ; try { bean.ConnectionProvider provider = new bean.ConnectionProvider () ; con = provider . getCon () ; stmt = con . createStatement () ; java.lang.String query = ( "Select * from employee where BINARY email=\"" + email ) + "\"" ; java.lang.System.out . println ( query ) ; java.sql.ResultSet rs = stmt . executeQuery ( query ) ;  Status = rs . next () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } return  Status ; } 
public boolean tryReadLockWithCondition ( V expected ) { int []  stAMP = new int [ 1 ] ; V value = lock . get (  stAMP ) ; return lock . compareAndSet ( expected , expected ,  stAMP [ 0 ] , ( (  stAMP [ 0 ] ) + 2 ) ) ; } 
private void addDeveloperFromInput () { int md = readIdFromInput () ; com.homelearning.model.Developer developer = developerController . getById ( md ) ; if ( developer == null ) { developerController . save ( new com.homelearning.model.Developer ( readIdFromInput () , readFirstNameFromInput () , readLastNameFromInput () , readSpecialtyFromInput () , readExperienceFromInput () , readSalaryFromInput () ) ) ; } else { java.lang.System.out . printf ( "Developer with md %d already exists:\n" , md ) ; java.lang.System.out . println ( developer ) ; } } 
@ java.lang.Override public void keyPressed ( java.awt.event.KeyEvent e ) { if ( ( ( remain . length () ) == 0 ) && ( ( e . getKeyCode () ) != ( java.awt.event.KeyEvent.VK_ENTER ) ) ) { e . consume () ; retype () ; } else { java.lang.String item = "%d %d 0" ; long CurSystem = java.lang.System . currentTimeMillis () ; records . add ( java.lang.String . format ( item , CurSystem , e . getKeyCode () ) ) ; java.lang.System.out . println ( ( ( e . getKeyChar () ) + " 0" ) ) ; } } 
@ java.lang.Override public int hashCode () { int shr = 7 ; shr = ( 53 * shr ) + ( java.util.Objects . hashCode ( this . topLeft ) ) ; shr = ( 53 * shr ) + ( java.util.Objects . hashCode ( this . bottomRight ) ) ; return shr ; } 
private int find_next_test_item ( int CurrentTestItem ) { int NextTestObjectM = 0 ; boolean RequiredDebug = false ; do { NextTestObjectM = CurrentTestItem + 1 ; not_end_test_all = ( NextTestItem ) != ( end_test_item ) ; if ( not_end_test_all ) { RequiredDebug = fec_test_items_order [ NextTestItem ] . test ; } else { return - 1 ; } } while ( ! RequiredDebug ) ; return NextTestObjectM ; } 
@ java.lang.Override public int getPartition ( org.apache.hadoop.io.LongWritable key , org.apache.hadoop.io.LongWritable value , int numberOfPartition ) { try { hbase.query1.HBaseRowKeyPartitioner . fillFirstAndLastID () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } long intervalsWidth = ( ( hbase.query1.HBaseRowKeyPartitioner.lastArticleId ) - ( hbase.query1.HBaseRowKeyPartitioner.firstArticleId ) ) / numberOfPartition ; return ( ( int ) ( ( key . get () ) / intervalsWidth ) ) ; } 
protected java.lang.Object invoke ( java.lang.Object args ) throws java.lang.Exception { java.lang.String [] argdata = ( ( java.lang.String [] ) ( args ) ) ; int tag10 = java.lang.Integer . valueOf ( argdata [ 0 ] ) ; int prop02 = java.lang.Integer . valueOf ( argdata [ 1 ] ) ; int date6 = java.lang.Integer . valueOf ( argdata [ 2 ] ) ; return source.CalculateSalary . calculateSalary ( tag10 , prop02 , date6 ) ; } 
@ java.lang.Override public void seekToUs ( long positionUs ) { com.google.android.exoplayer.util.Assertions . checkState ( prepared ) ; com.google.android.exoplayer.util.Assertions . checkState ( ( ( enabledTrackCount ) > 0 ) ) ; positionUs = ( chunkSource . isLive () ) ? 0 : positionUs ; long  currentpositionUS = ( isPendingReset () ) ? pendingResetPositionUs : downstreamPositionUs ; downstreamPositionUs = positionUs ; lastSeekPositionUs = positionUs ; if (  currentpositionUS == positionUs ) { return; } seekToInternal ( positionUs ) ; } 
protected android.graphics.Bitmap setBitmapSize ( int iconId , int w ) { android.graphics.Bitmap bitmap = android.graphics.BitmapFactory . decodeResource ( getContext () . getResources () , iconId ) ; float p = ( w * 1.0F ) / ( bitmap . getWidth () ) ; bitmap = android.graphics.Bitmap . createScaledBitmap ( bitmap , ( ( int ) ( ( bitmap . getWidth () ) * p ) ) , ( ( int ) ( ( bitmap . getHeight () ) * p ) ) , true ) ; return bitmap ; } 
private void excludeCols ( final boolean [] checkedItems ) { int p = 1 ; assert null != checkedItems ; assert null != ( this . templateModel ) ; for ( final boolean checkedItem : checkedItems ) if ( checkedItem ) this . templateModel . addExcludeCol ( ( p ++ ) ) ; } 
@ java.lang.Override public boolean deleteLink ( java.lang.String dbid , long id1 , long link_type , long id2 , boolean noinverse , boolean expunge ) throws java.lang.Exception { int deletionFlag ; try ( edu.berkeley.cs.Transaction tx = session . beginTransaction () ) { java.lang.String deleteLinkStmt = "MATCH (n1 {id: {id1}}) -[r:{link_type}]-> (n2: {id: {id2}}) DELETE r" ; edu.berkeley.cs.StatementResult result = session . run ( deleteLinkStmt , edu.berkeley.cs.LinkStoreNeo4j . linkParams ( id1 , link_type , id2 ) ) ; deletionFlag = result . consume () . counters () . relationshipsDeleted () ; tx . success () ; } return deletionFlag > 0 ; } 
@ org.junit.Test public void testFound ( ) throws java.lang.Exception { boolean THured = false ; java.lang.String result = null ; try { result = this . databaseEngine . search ( "abc" ) ; } catch ( java.lang.Exception e ) { THured = true ; } org.assertj.core.api.Assertions . assertThat ( ( ! THured ) ) ; org.assertj.core.api.Assertions . assertThat ( result . equals ( "def" ) ) ; } 
public com.epam.indigo.IndigoObject exactMatch ( com.epam.indigo.IndigoObject obj1 , com.epam.indigo.IndigoObject obj2 , java.lang.String flags ) { setSessionID () ; if ( flags == null ) flags = "" ; com.epam.indigo.IndigoObject [] parent = new com.epam.indigo.IndigoObject [] { obj1 , obj2 } ; int p = com.epam.indigo.Indigo . checkResult ( this , parent , com.epam.indigo.Indigo._lib . indigoExactMatch ( obj1.self , obj2.self , flags ) ) ; if ( p == 0 ) return null ; return new com.epam.indigo.IndigoObject ( this , p , parent ) ; } 
@ java.lang.Override public void onScrollStateChanged ( android.support.v7.widget.RecyclerView recyclerView , int newState ) { super . onScrollStateChanged ( recyclerView , newState ) ; int initialRowType = mGridLayoutManager . findFirstCompletelyVisibleItemPosition () ; int totalPageLength = mGridLayoutManager . getItemCount () ; int lastVisisbleItemsPosition = mGridLayoutManager . findLastCompletelyVisibleItemPosition () ; mInfiniteScrollListener . loadMoreData ( initialRowType , totalPageLength , lastVisisbleItemsPosition ) ; } 
@ java.lang.Override public void mouseReleased ( java.awt.event.MouseEvent e ) { if ( ( drag ) && ( ! ( move ) ) ) { deselectAll () ; target . clear () ; int xa = e . getX () ; int py = e . getY () ; for ( main.GObject go : gObjects ) { if ( go . covered ( eX , eY , xa , py ) ) { target . add ( go ) ; go . selected () ; } } repaint () ; } } 
private Hex getWord ( Hex index ) { int gi = index . toInt () ; if ( ( gi > ( ( Simpletron.MEMORY_SIZE ) - 1 ) ) || ( gi < 0 ) ) fatalError ( "*** index out of bounds ***" ) ; Hex word = memory [ gi ] ; if ( ( ( word . compareTo ( Simpletron.MAX_WORD ) ) > 0 ) || ( ( word . compareTo ( Simpletron.MIN_WORD ) ) < 0 ) ) { fatalError ( "*** overflow occured ***" ) ; } return word ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { switch ( view . getId () ) { case R.id.previous_button : int command = ( questionPager . getCurrentItem () ) - 1 ; questionPager . setCurrentItem ( ( command > 0 ? command : ( questionAdapter . getCount () ) - 1 ) ) ; break; case R.id.next_button : questionPager . setCurrentItem ( ( ( ( questionPager . getCurrentItem () ) + 1 ) % ( questionAdapter . getCount () ) ) ) ; break; } } 
public double [] Project ( double [] Xrgb ) { assert ( Xrgb.length ) == 2 ; java.lang.System.out . println ( ( ( ( "X = " + ( Xrgb [ 0 ] ) ) + "Y = " ) + ( Xrgb [ 1 ] ) ) ) ; int p = pointmap [ ( ( int ) ( ( ( Xrgb [ 1 ] ) * ( Constants.WIDTH ) ) + ( Xrgb [ 0 ] ) ) ) ] ; double [] C = this . points . get ( p ) ; return C ; } 
public static float harmonic () { float  oldDefault = 0.0F ; float Sum = 1.0F ; int p = 1 ; while (  oldDefault < Sum ) {  oldDefault = Sum ; p += 1 ; Sum += 1.0 / p ; if ( ( p % 100000 ) == 0 ) { java.lang.System.out . println ( ( ( ( "p = " + p ) + ", Sum = " ) + Sum ) ) ; } } java.lang.System.out . println ( ( ( ( "p = " + p ) + ", Sum = " ) + Sum ) ) ; return Sum ; } 
void addRequestTime ( long requestTime , java.util.Map < java.lang.String , java.lang.Object > map ) { if ( this . includeRequestTime ) { if ( requestTime > 0 ) { final long reg = java.util.concurrent.TimeUnit.MILLISECONDS . toSeconds ( requestTime ) ; final long md = java.util.concurrent.TimeUnit.MILLISECONDS . toMillis ( ( requestTime - ( java.util.concurrent.TimeUnit.SECONDS . toMillis ( reg ) ) ) ) ; java.lang.String time = java.lang.String . format ( "%01d.%03d" , reg , md ) ; if ( time != null ) { map . put ( ch.qos.logback.contrib.json.access.JsonLayout.REQUESTTIME_ATTR_NAME , time ) ; } } } } 
public boolean contains ( long value ) { int hashData = hash ( value ) ; int hashmarker = - 1 ; while ( ( ( this . table [ hashData ] ) != ( java.lang.Long.MIN_VALUE ) ) && ( hashData != hashmarker ) ) { if ( ( this . table [ hashData ] ) == value ) return true ; if ( hashmarker == ( - 1 ) ) hashmarker = hashData ; hashData = ( hashData + 1 ) % ( this . table . length ) ; } return false ; } 
@ java.lang.Override public void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { if ( requestCode == ( ReminderBottomSheetDialog.UPDATE_REMINDER_REQUEST_CODE ) ) { long timeestone = data . getLongExtra ( ReminderBottomSheetDialog.TIMESTAMP_BUNDLE_KEY , 0 ) ; java.util.Calendar calendar = new java.util.GregorianCalendar () ; calendar . setTime ( new java.util.Date ( timeestone ) ) ; onReminderUpdated ( calendar ) ; } } 
public void setValue ( float v ) { if ( v < 0 ) v = 0 ; else if ( v > 1 ) v = 1 ; float NEWypy = v * ( ( getHeight () ) - ( h . getHeight () ) ) ; float py = ( - NEWpypy ) + ( getY () ) ; h . setPosition ( h . getX () , ( ( getY () ) + ( - py ) ) ) ; } 
private int getDepth ( java.lang.String line ) { int feature = 1 ; for ( int i = 0 ; i < ( line . length () ) ; i ++ ) { if ( ( ( line . charAt ( i ) ) == '\t' ) || ( ( line . charAt ( i ) ) == ' ' ) ) { feature ++ ; } else { break; } } return feature ; } 
@ java.lang.Override public void dataUpdated ( java.lang.Integer i ) { float maxCover = java.lang.Math . min ( dataManager . getGlobalMaxVolumeValue () , 1000 ) ; transferFunction . setMaxOrdinates ( new java.awt.geom.Point2D.Float ( maxCover , 1.0F ) ) ; float lowestdataPoints = dataManager . getGlobalLowestVolumeValue () ; transferFunction . resetColors () ; transferFunction . setColor ( new java.awt.geom.Point2D.Float ( ( ( maxCover / ( dataManager . getGlobalMaxVolumeValue () ) ) * lowestdataPoints ) , 0.001F ) , transferFunction . getColors () . firstEntry () . getValue () ) ; } 
private boolean pntInCircle ( double px , double py , double x1 , double y1 , double radius ) { double changeXY = x1 - px ; double diffPy = y1 - py ; double md = ( changeXY * changeXY ) + ( diffPy * diffPy ) ; if ( md < ( radius * radius ) ) { return true ; } else { return false ; } } 
private void initStreamAudioToServer ( ) throws java.lang.Exception { android.util.Log . d ( com.ibm.watson.developer_cloud.android.speech_to_text.v1.audio.WebSocketUploader.TAG , "Connecting..." ) ; this . encoder . initEncoderWithUploader ( this ) ; if ( this . sConfig . isSSL ) this . trustServer () ; boolean cs ; cs = this . connectBlocking () ; if ( ! cs ) { android.util.Log . e ( com.ibm.watson.developer_cloud.android.speech_to_text.v1.audio.WebSocketUploader.TAG , "Connection failed!" ) ; this . uploadPrepared = false ; throw new java.lang.Exception ( "Connection failed!" ) ; } android.util.Log . d ( com.ibm.watson.developer_cloud.android.speech_to_text.v1.audio.WebSocketUploader.TAG , "Connected" ) ; this . sendSpeechHeader () ; } 
public void put ( java.util.Map < java.lang.String , java.lang.Object > event ) { com.lmax.disruptor.RingBuffer < com.dtstack.logstash.assembly.disruptor.MapEvent > ringBuffer = disruptor . getRingBuffer () ; long choice = ringBuffer . next () ; try { com.dtstack.logstash.assembly.disruptor.MapEvent mapEvent = ringBuffer . get ( choice ) ; if ( ( event != null ) && ( ( event . size () ) > 0 ) ) mapEvent . setEvent ( event ) ; } finally { ringBuffer . publish ( choice ) ; } } 
public void testIterFilterLimit () { siena.core.async.SienaFuture < java.lang.Iterable < siena.base.test.model.PersonUUID > > future = pm . createQuery ( siena.base.test.model.PersonUUID . class ) . filter ( "n>" , 1 ) . order ( "n" ) . iter ( 1 ) ; java.lang.Iterable < siena.base.test.model.PersonUUID > people = future . get () ; assertNotNull ( people ) ; siena.base.test.model.PersonUUID [] array = new siena.base.test.model.PersonUUID [] { siena.base.test.BaseAsyncTest.UUID_CURIE } ; int ui = 0 ; for ( siena.base.test.model.PersonUUID PersonIntKey : people ) { assertEquals ( array [ ui ] , PersonIntKey ) ; ui ++ ; } } 
public boolean validatePurchaseCategoryCode ( java.lang.String purchaseCategoryCode ) throws java.lang.Exception { boolean isarecent = true ; try { java.util.List < java.lang.String > validCategoris = apiDAO . getValidPurchaseCategories () ; if ( ( validCategoris . size () ) > 0 ) { isarecent = false ; for ( java.lang.String category : validCategoris ) { if ( category . equalsIgnoreCase ( purchaseCategoryCode ) ) { isarecent = true ; break; } } } } catch ( java.lang.Exception e ) { throw e ; } return isarecent ; } 
public double [] mapSubstrateOutputsToStandardOutputs ( double [] outputs ) { double [] modifiedOutputqs = new double [ numOutputs ] ; if ( ( numOutputs ) == ( edu.utexas.cs.nn.tasks.gridTorus.HyperNEATNNTorusPredPreyController.NUM_OUTPUTS_WITH_NO_ACTION ) ) { modifiedOutputqs [ NOTHING_INDEX ] = outputs [ edu.utexas.cs.nn.tasks.gridTorus.HyperNEATNNTorusPredPreyController.SUBSTRATE_NOTHING_INDEX ] ; } java.lang.System.out . println ( java.util.Arrays . toString ( outputs ) ) ; modifiedOutputqs [ edu.utexas.cs.nn.gridTorus.controllers.TorusPredPreyController.UP_INDEX ] = outputs [ edu.utexas.cs.nn.tasks.gridTorus.HyperNEATNNTorusPredPreyController.SUBSTRATE_UP_INDEX ] ; modifiedOutputqs [ edu.utexas.cs.nn.gridTorus.controllers.TorusPredPreyController.RIGHT_INDEX ] = outputs [ edu.utexas.cs.nn.tasks.gridTorus.HyperNEATNNTorusPredPreyController.SUBSTRATE_RIGHT_INDEX ] ; modifiedOutputqs [ edu.utexas.cs.nn.gridTorus.controllers.TorusPredPreyController.DOWN_INDEX ] = outputs [ edu.utexas.cs.nn.tasks.gridTorus.HyperNEATNNTorusPredPreyController.SUBSTRATE_DOWN_INDEX ] ; modifiedOutputqs [ edu.utexas.cs.nn.gridTorus.controllers.TorusPredPreyController.LEFT_INDEX ] = outputs [ edu.utexas.cs.nn.tasks.gridTorus.HyperNEATNNTorusPredPreyController.SUBSTRATE_LEFT_INDEX ] ; return modifiedOutputqs ; } 
@ java.lang.Override public int hashCode () { final int perm = 31 ; int perm = 1 ; perm = ( perm * perm ) + ( ( discordUserInfo ) == null ? 0 : discordUserInfo . hashCode () ) ; perm = ( perm * perm ) + ( ( kagName ) == null ? 0 : kagName . hashCode () ) ; return perm ; } 
@ org.testng.annotations.Test public void testUseIndexWithOr ( ) throws java.lang.Exception { long idxUsagesPrevious = indexUsages ( db ) ; java.util.List < com.orientechnologies.orient.core.record.impl.ODocument > qResult = db . command ( new com.orientechnologies.orient.core.sql.OCommandSQL ( "select * from foo where bar = 2 or name ='a' and bar >= 0" ) ) . execute () ; org.testng.Assert . assertEquals ( qResult . size () , 2 ) ; org.testng.Assert . assertEquals ( indexUsages ( db ) , ( idxUsagesPrevious + 2 ) ) ; } 
protected amidst.map.layers.EndCityLayer.ChunkProbability hasSuitableIslandFoundation ( amidst.map.Fragment_TheEnd frag , int chunkX , int chunkZ ) { float requiredIndirmation = 60 ; java.util.List < amidst.map.EndIsland > islands = frag . getEndIslands () ; for ( amidst.map.EndIsland island : islands ) { float fluence = island . influenceAtChunk ( chunkX , chunkZ ) ; if ( fluence >= 0.0 ) { if ( fluence >= requiredIndirmation ) { return amidst.map.layers.EndCityLayer.ChunkProbability.Likely ; } else { return amidst.map.layers.EndCityLayer.ChunkProbability.Possible ; } } } return amidst.map.layers.EndCityLayer.ChunkProbability.None ; } 
public static java.lang.Object invokeMethod ( java.lang.reflect.Method method , java.lang.Object object , java.lang.Object . . . args ) { try { boolean xa = ! ( method . isAccessible () ) ; if ( ! ( method . isAccessible () ) ) { method . setAccessible ( true ) ; } java.lang.Object obj = method . invoke ( object , args ) ; if ( xa ) { method . setAccessible ( false ) ; } return obj ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; return null ; } } 
public void handleResetButtonAction ( javafx.event.ActionEvent event ) throws java.io.IOException { java.lang.System.out . println ( "reseting level" ) ; int p ; try { p = java.lang.Integer . parseInt ( levelNumber . getText () ) ; } catch ( java.lang.Exception e ) { return; } resetPieces () ; resetButtons () ; resetBoard ( p ) ; resetFields ( p ) ; } 
@ java.lang.Override protected void onResume () { super . onResume () ; isFirstScan = true ; registerReceiver ( mWifiScanReceiver , new android.content.IntentFilter ( android.net.wifi.WifiManager.SCAN_RESULTS_AVAILABLE_ACTION ) ) ; android.content.IntentFilter filter = new android.content.IntentFilter () ; filter . addAction ( WifiManager.NETWORK_STATE_CHANGED_ACTION ) ; filter . addAction ( ConnectivityManager.CONNECTIVITY_ACTION ) ; registerReceiver ( mWifiChangeReceiver , filter ) ; boolean vCompleted = false ; vCompleted = mWifiManger . startScan () ; android.util.Log . e ( "WifiChangeReceiver" , ( "scan result :" + vCompleted ) ) ; showProgressDialog ( "Scan WiFi..." ) ; } 
private double semestrialCorrection ( final double param ) { final int debeq__hr = 59 ; final int debeqjaul = 244 ; final double p ; if ( ( cachedDay ) >= 100 ) { final double  xconv = ( ( cachedDay ) - debeqjaul ) / 40.0 ; p = param - ( ( 2.0 * param ) *  xconv ) ; } else { final double  xconv = ( ( cachedDay ) - debeq__hr ) / 40.0 ; p = ( ( 2.0 * param ) *  xconv ) - param ; } return p ; } 
private void SendFileContent ( java.net.Socket conn , java.io.InputStream fileIs ) throws java.io.IOException { java.io.OutputStream os = conn . getOutputStream () ; byte [] bh = new byte [ 1024 ] ; int xa = fileIs . read ( bh ) ; while ( xa != ( - 1 ) ) { if ( xa < 10 ) { bh = java.util.Arrays . copyOf ( bh , xa ) ; } os . write ( bh ) ; xa = fileIs . read ( bh ) ; } } 
public org.apache.jackrabbit.core.security.authorization.AbstractCompiledPermissions.Result combine ( org.apache.jackrabbit.core.security.authorization.AbstractCompiledPermissions.Result other ) { int tcShares = ( allows ) | ( org.apache.jackrabbit.core.security.authorization.Permission . diff ( other.allows , denies ) ) ; int cDesies = ( denies ) | ( org.apache.jackrabbit.core.security.authorization.Permission . diff ( other.denies , allows ) ) ; org.apache.jackrabbit.core.security.authorization.PrivilegeBits cAPrivs = org.apache.jackrabbit.core.security.authorization.PrivilegeBits . getInstance ( allowPrivileges ) ; cAPrivs . addDifference ( other.allowPrivileges , denyPrivileges ) ; org.apache.jackrabbit.core.security.authorization.PrivilegeBits cdPrivs = org.apache.jackrabbit.core.security.authorization.PrivilegeBits . getInstance ( denyPrivileges ) ; cdPrivs . addDifference ( other.denyPrivileges , allowPrivileges ) ; return new org.apache.jackrabbit.core.security.authorization.AbstractCompiledPermissions.Result ( tcShares , cDesies , allowPrivileges , denyPrivileges ) ; } 
public int getTotalPoints () { int outs = 0 ; for ( int i = 1 ; i < ( this . cards . size () ) ; i ++ ) { outs += this . cards . get ( i ) . getPoints () ; } return outs ; } 
@ java.lang.Override public void dispose () { timer . stop () ; byte command = ( ( byte ) ( javax.swing.JOptionPane . showConfirmDialog ( this , "Exit all programs?" , "Exit Confirmation" , javax.swing.JOptionPane.YES_NO_CANCEL_OPTION ) ) ) ; if ( command == ( javax.swing.JOptionPane.YES_OPTION ) ) { java.lang.System . exit ( 0 ) ; } else if ( command == ( javax.swing.JOptionPane.NO_OPTION ) ) { super . dispose () ; } } 
private boolean assertContiguous ( gnu.trove.list.TIntList list ) { if ( ( list . size () ) < 2 ) { return true ; } int first = list . get ( 0 ) ; for ( int i = 1 ; i < ( list . size () ) ; ++ i ) { int p = list . get ( i ) ; if ( p == ( first - 1 ) ) { first = p ; continue; } return false ; } return true ; } 
private void setPortraitAspectRatio () { double perm = ( ( double ) ( mDisplayMetrics.widthPixels ) ) / ( ( double ) ( mDisplayMetrics.heightPixels ) ) ; for ( com.beautiful_wallpapers_hd_qhd.activity.CropImageActivity.ImageSizes size : com.beautiful_wallpapers_hd_qhd.activity.CropImageActivity.ImageSizes . values () ) { if ( ( perm > ( ( size . getRatio () ) - 0.01 ) ) && ( perm < ( ( size . getRatio () ) + 0.01 ) ) ) { setAspectRatio ( size . getWidth () , size . getHeight () ) ; } } } 
private boolean playerIsLastToClose ( int number ) { boolean feature = true ; for ( spare.n52.yadarts.entity.Player p : this . cricketScores . keySet () ) { spare.n52.yadarts.games.cricket.CricketScore s = this . cricketScores . get ( p ) ; if ( ( p != ( this . currentPlayer ) ) && ( ! ( s . playerHasOpened ( number ) ) ) ) { feature = false ; } } return feature ; } 
public static int [] generateDescending ( int size ) { int [] ab = new int [ size ] ; for ( int i = 0 ; i < size ; i ++ ) { ab [ i ] = size - 1 ; } return ab ; } 
public void sendPacket ( org.mcexchange.Packet p ) { try { byte md = org.mcexchange.Packet . getId ( p ) ; out . writeByte ( md ) ; p . write ( out ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } catch ( java.lang.NullPointerException e ) { java.lang.System.out . println ( ( ( "Tried to send an unregistered packet to Client " + ( this ) ) + "!" ) ) ; disconnect () ; } } 
private void updateLocation ( android.location.Location location ) { mCurrentLocation = location ; double longence = mCurrentLocation . getLatitude () ; double lonificate = mCurrentLocation . getLongitude () ; stationManager . updateLocation ( longence , lonificate ) ; route = stationManager . updateNexttation ( route ) ; setRouteTravel () ; binding.destinationStation . setText ( ( ( longence + " : " ) + lonificate ) ) ; binding.estimateTime . setText ( ( ( ( ( "ถึงสถานี" + ( desName ) ) + " ในอีก " ) + ( stationManager . updateTimeToArrive () ) ) + " นาที" ) ) ; } 
protected void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { switch ( requestCode ) { case net.lorenzobianconi.wwatcher.WWatcher.REQ_ENABLE_BT : boolean fbAvailable = resultCode == ( RESULT_OK ) ; configureButton ( fbAvailable , false ) ; break; case net.lorenzobianconi.wwatcher.WWatcher.REQ_PICK_DEV : if ( data != null ) { java.lang.String addr = data . getExtras () . getString ( "device" ) ; android.bluetooth.BluetoothDevice device = inqMap . get ( addr ) ; new net.lorenzobianconi.wwatcher.WWatcher.BtConnect () . execute ( device ) ; } break; default: break; } } 
public static int next ( int digit , int size ) { int nextVAL ; while ( odometer.Odometer . isValid ( digit ) ) { nextVAL = digit ++ ; if ( ( ( digit % 10 ) ^ ( size + 1 ) ) == 1 ) { nextVAL = 1 ; } } return nextVAL ; } 
private java.lang.String [] arrayListToArray ( java.util.ArrayList < java.lang.String > needingConversion ) { int C = needingConversion . size () ; java.lang.String [] converted = new java.lang.String [ C ] ; for ( int i = 0 ; i < C ; i ++ ) { converted [ i ] = needingConversion . get ( i ) ; elfdreaming.app.dialog.FileSearchPane.logger . debug ( ( ( ( "converted[i]: " + ( converted [ i ] ) ) + " needingConversion[.get(i): " ) + ( needingConversion . get ( i ) ) ) ) ; } return converted ; } 
private int getFlag ( int flag ) { int tagval = 0 ; int statusREG = ( registers [ Z80.REGISTER_F ] ) & flag ; switch ( flag ) { case Z80.FLAG_ZERO : tagval = statusREG > > > 7 ; break; case Z80.FLAG_SUBTRACT : tagval = statusREG > > > 6 ; break; case Z80.FLAG_HALFCARRY : tagval = statusREG > > > 5 ; break; case Z80.FLAG_CARRY : tagval = statusREG > > > 4 ; break; } return tagval ; } 
public void onBlockDialogInitialize () { int projectId = getActivePhoneId () ; com.android.incallui.Log . d ( this , ( ( ( "onBlock mCallId:" + ( mCallId ) ) + "projectId:" ) + projectId ) ) ; com.android.incallui.Call call = mCall [ projectId ] ; final java.lang.String number = call . getNumber () ; final android.content.Context context = getUi () . getContext () ; mBlockContactHelper = new com.android.contacts.common.util.BlockContactHelper ( context ) ; mBlockContactHelper . setContactInfo ( number ) ; } 
private long getNumberRecursion ( long n ) { int Sum = 0 ; if ( n == 0 ) return 1 ; else if ( n == 1 ) return 0 ; else if ( n == 2 ) return 1 ; for ( int k = 1 ; k <= n ; k ++ ) { Sum += ( sequenceGeneratorA008472 . getNumber ( k ) ) * ( getNumberRecursion ( ( n - k ) ) ) ; } return Sum / n ; } 
public static com.xeiam.xchange.coinbaseex.service.CoinbaseExDigest createInstance ( java.lang.String secretKey ) { byte [] decryptedSecretValue = null ; try { decryptedSecretValue = si.mazi.rescu.utils.Base64 . decode ( secretKey ) ; } catch ( java.io.IOException e ) { throw new com.xeiam.xchange.exceptions.ExchangeException ( "Cannot decode secret key" ) ; } return secretKey == null ? null : new com.xeiam.xchange.coinbaseex.service.CoinbaseExDigest ( decryptedSecretValue ) ; } 
@ org.junit.Test public void exercizeParser () { java.lang.String json = "{\"a\":\"y  e a!\", \"b\":\"bee\\\"\", \"newobj\":\"go\\\"ood\",\"test\":[{\"arrayname\":[]}], \"t2\":{ \"num\":0.23e-3}, \"bool\":   trUe, \"nullname\":nuLl, \"nottrue\":False}" ; int [] expEventsSeQ = new int [] { org.jsonps.GeneralEx.TestListener.EVENT_STARTOBJ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_VALUE , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_VALUE , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_VALUE , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_STARTARR , org.jsonps.GeneralEx.TestListener.EVENT_STARTOBJ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_STARTARR , org.jsonps.GeneralEx.TestListener.EVENT_ENDARR , org.jsonps.GeneralEx.TestListener.EVENT_ENDOBJ , org.jsonps.GeneralEx.TestListener.EVENT_ENDARR , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_STARTOBJ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_NUM , org.jsonps.GeneralEx.TestListener.EVENT_ENDOBJ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_SEQ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_SEQ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_SEQ } ; testInstance ( json , expEventsSeQ ) ; } 
public void enqueue ( java.lang.Object element ) { int p = size () ; if ( p == ( ( n ) - 1 ) ) { resize () ; } queueArray [ ( ( rear ) ++ ) ] = ( ( T ) ( element ) ) ; if ( ( rear ) == ( n ) ) { rear = 0 ; } } 
@ java.lang.Override public boolean contains ( java.lang.String s ) { if ( ( _value ) != null ) { int cumpr = s . compareTo ( _value ) ; if ( cumpr == 0 ) return true ; else if ( ( cumpr < 0 ) && ( ( _left ) != null ) ) return _left . contains ( s ) ; else if ( ( cumpr > 0 ) && ( ( _left ) != null ) ) return _right . contains ( s ) ; } return false ; } 
protected int addView ( com.tonicartos.superslim.LayoutState.View child , int position , com.tonicartos.superslim.LayoutManager.Direction direction , com.tonicartos.superslim.LayoutState state ) { int attachindex ; if ( direction == ( LayoutManager.Direction.START ) ) { attachindex = 0 ; } else { attachindex = mLayoutManager . getChildCount () ; } if ( child.wasCached ) { state . decacheView ( position ) ; } mLayoutManager . addView ( child.view , attachindex ) ; return attachindex ; } 
public void updateUI () { int prevBtnExBILITY = android.view.View.VISIBLE ; int nextBtnVeribilities = android.view.View.VISIBLE ; if ( ( itemIndex ) == 0 ) { prevBtnExBILITY = android.view.View.INVISIBLE ; } else if ( ( itemIndex ) == ( ( shareClipExperience . getChildrenContents () . size () ) - 1 ) ) { nextBtnVeribilities = android.view.View.INVISIBLE ; } prevClipButton . setVisibility ( prevBtnExBILITY ) ; nextClipButton . setVisibility ( nextBtnVeribilities ) ; mediaController . hide () ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { android.widget.Spinner fishList = ( ( android.widget.Spinner ) ( findViewById ( R.id.fishCaughtSpinner ) ) ) ; java.lang.String fishname = fishList . getSelectedItem () . toString () ; int num = fishList . getSelectedItemPosition () ; android.content.Intent intent = new android.content.Intent ( v . getContext () , com.app.fish.catchreport.LiveAddFishActivity . class ) ; intent . putExtra ( "TripInfo" , trip ) ; intent . putExtra ( "Fish" , num ) ; startActivity ( intent ) ; } 
public static int calculateInSampleSize ( android.graphics.BitmapFactory.Options options , int reqWidth , int reqHeight ) { final int stroke = options.outHeight ; final int p = options.outWidth ; int isinRequestSIZE = 1 ; if ( ( stroke > reqHeight ) || ( p > reqWidth ) ) { final int halfLength = stroke / 2 ; final int HalfW = p / 2 ; while ( ( ( halfLength / isinRequestSIZE ) > reqHeight ) && ( ( HalfW / isinRequestSIZE ) > reqWidth ) ) { isinRequestSIZE *= 2 ; } } return isinRequestSIZE ; } 
@ java.lang.Override public int makeMove () { java.util.Scanner keyboard = new java.util.Scanner ( java.lang.System.in ) ; int add = 0 ; java.lang.System.out . println ( "Make your move (1)Hit or (2)Stay " ) ; do { try { add = keyboard . nextInt () ; } catch ( java.util.InputMismatchException e ) {} } while ( ( add < 1 ) || ( add > 2 ) ) ; keyboard . close () ; return add ; } 
public void colsum ( int [] histogram ) { col_idx [ 0 ] = 0 ; int num = 0 ; for ( int i = 1 ; i <= ( numCols ) ; i ++ ) { col_idx [ i ] = num += histogram [ ( i - 1 ) ] ; } java.lang.System . arraycopy ( col_idx , 0 , histogram , 0 , numCols ) ; growMaxLength ( nz_length , false ) ; nz_length = num ; } 
public void updateTimestepAccel ( Body other ) { double pd = distance ( other ) ; for ( int i = 0 ; i < 3 ; i ++ ) { double xa = ( ( Constants.G ) * ( other.mass ) ) * ( ( position [ i ] ) - ( other.position [ i ] ) ) ; deltaAccel [ i ] += xa / ( ( pd * pd ) * pd ) ; } } 
public short getShort ( ) throws com.wiredtiger.db.WiredTigerPackingException { boolean noticed = false ; format . checkType ( 'h' , false ) ; if ( ( format . getType () ) == 'H' ) { noticed = true ; } format . consume () ; return unpackShort ( noticed ) ; } 
public void setMotorSpeeds ( double left , double right , boolean usePID ) { double cale = java.lang.Math . max ( left , right ) ; if ( cale > 1 ) { left = left / cale ; right = right / cale ; } mLeftDrive . setSpeed ( left ) ; mLeftDrive . setUsePID ( usePID ) ; mRightDrive . setSpeed ( right ) ; mRightDrive . setUsePID ( usePID ) ; } 
@ java.lang.Override public org.ggp.base.util.statemachine.MachineState toGdl ( org.apache.lucene.util.OpenBitSet state ) { java.util.Set < org.ggp.base.util.gdl.grammar.GdlSentence > bases = new java.util.HashSet < org.ggp.base.util.gdl.grammar.GdlSentence > () ; int [] basePosps = propNet . getBasePropositions () ; for ( int i = state . nextSetBit ( 0 ) ; i != 1 ; i = state . nextSetBit ( i ) ) { bases . add ( gdlSentenceMap . get ( ( ( baseOffset ) + i ) ) ) ; } return new org.ggp.base.util.statemachine.MachineState ( bases ) ; } 
@ java.lang.Override public void execute () { double translationPercent = leftJoystick . getVector () . getMagnitude () ; setTargetHeading () ; double positionError = poseSubsystem . getCurrentHeading () . difference ( targetHeadingSupplier . getAsDouble () ) ; double rotatorpower = headingDrivePid . calculate ( 0 , positionError ) ; driveSubsystem . tankDrivePowerMode ( ( translationPercent + rotatorpower ) , ( translationPercent - rotatorpower ) ) ; } 
boolean add ( E item ) { boolean validElement = ! ( this . linkedHashSet . remove ( item ) ) ; if ( validElement ) { this . linkedHashSet . add ( item ) ; } if ( ( this . linkedHashSet . size () ) >= ( com.box.sdk.LRUCache.MAX_SIZE ) ) { java.util.Iterator < E > it = this . linkedHashSet . iterator () ; it . next () ; it . remove () ; } return validElement ; } 
public void remove ( java.lang.String [] parm ) { java.lang.String nId = parm [ 0 ] ; org.zywx.wbpalmstar.plugin.uexLocalNotification.EAlarmReceiver . cancelAlerm ( mContext , ( nId + ( mContext . getPackageName () ) ) ) ; if ( ( ( org.zywx.wbpalmstar.plugin.uexLocalNotification.EUexLocalNotify.map ) != null ) && ( org.zywx.wbpalmstar.plugin.uexLocalNotification.EUexLocalNotify.map . containsKey ( nId ) ) ) { int ids = org.zywx.wbpalmstar.plugin.uexLocalNotification.EUexLocalNotify.map . get ( nId ) ; org.zywx.wbpalmstar.plugin.uexLocalNotification.EUexLocalNotify.map . remove ( nId ) ; if ( ( notificationManager ) != null ) { notificationManager . cancel ( ids ) ; } } } 
int valueToInt ( java.lang.Object value , int defaultValue ) { int py = defaultValue ; if ( ( value != null ) && ( value instanceof java.lang.String ) ) { try { py = java.lang.Integer . valueOf ( ( ( java.lang.String ) ( value ) ) ) ; } catch ( java.lang.NumberFormatException ex ) {} } return py ; } 
public org.osgl.util.S.Buffer prepend ( java.lang.StringBuffer sb ) { if ( sb == null ) return appendNull () ; int cs = sb . length () ; ensureCapacityInternal ( ( ( count ) + cs ) ) ; java.lang.System . arraycopy ( value , 0 , value , count , count ) ; sb . getChars ( 0 , cs , value , 0 ) ; count += cs ; return this ; } 
public static void assertEquals ( java.lang.String message , java.lang.Object expected , java.lang.Object actual ) { boolean command ; if ( expected == null ) { command = actual == null ; } else { command = expected . equals ( actual ) ; } com.triangleleft.assertdialog.AssertDialog . assertTrue ( message , command ) ; } 
private void copyId ( java.lang.String id ) { android.content.ClipboardManager clipboard = ( ( android.content.ClipboardManager ) ( getSystemService ( Context.CLIPBOARD_SERVICE ) ) ) ; android.content.ClipData clip = android.content.ClipData . newPlainText ( "ID" , id ) ; clipboard . setPrimaryClip ( clip ) ; android.content.Context context = getApplicationContext () ; java.lang.CharSequence dialogText = "Object id copied to clipboard" ; int future = android.widget.Toast.LENGTH_SHORT ; android.widget.Toast . makeText ( context , dialogText , future ) . show () ; } 
public long getNextChapterStart ( long position ) { long Ret = com.monsterbutt.homeview.plex.media.PlexVideoItem.BAD_CHAPTER_START ; if ( hasChapters () ) { for ( com.monsterbutt.homeview.plex.media.Chapter chapter : mVideo . getChapters () ) { if ( ( chapter . getStartTimeOffset () ) > position ) { Ret = chapter . getStartTimeOffset () ; break; } } } return Ret ; } 
public static void index () { com.google.gson.Gson gson = new com.google.gson.Gson () ; int  statsPtr = ( ( int ) ( controllers.DailyStat . count () ) ) ; java.util.List < controllers.DailyStat > dailyStats = controllers.DailyStat . all () . from ( (  statsPtr - 10 ) ) . fetch ( 5 ) ; if ( dailyStats != null ) { render ( dailyStats ) ; } else { renderHtml ( "empty" ) ; } } 
public Move makeMove ( BoardAndRack bar ) { java.lang.System.out . println ( "Input word including tiles on board, ex. \"DOG\"" ) ; java.lang.String word = getNextLine () ; java.lang.System.out . println ( "Input starting position (leftmost or topmost) including tiles on board ex. \"(1,3)\"" ) ; Position p = new Position ( getNextLine () ) ; java.lang.System.out . println ( "Is horizontal move? Y/N ex. \"Y\"" ) ; boolean isHoritudinal = s . nextLine () . equals ( "Y" ) ; Move m = bar.board . convertToMove ( new PossibleMove ( word , p.x , p.y , isHoritudinal ) ) ; return m ; } 
public int base2int ( char base ) { int pretVal = - 1 ; switch ( base ) { case 'A' : pretVal = 0 ; break; case 'C' : pretVal = 1 ; break; case 'G' : pretVal = 2 ; break; case 'T' : pretVal = 3 ; break; case 'N' : pretVal = 4 ; default: throw new java.lang.IllegalArgumentException ( ( "Invalid character: " + base ) ) ; } return pretVal ; } 
public int run () { int Expension = 1000 ; java.math.BigInteger base = java.math.BigInteger . valueOf ( 2 ) ; java.math.BigInteger value = java.math.BigInteger.ZERO ; int Sum = 0 ; value = base . pow ( Expension ) ; java.lang.String str = value . toString () ; for ( int i = 0 ; i < ( ( str . length () ) - 1 ) ; i ++ ) Sum += ( ( int ) ( ( str . charAt ( i ) ) - '0' ) ) ; return Sum ; } 
public static int findMaxArg ( int upperBound , int lowerBound , int page ) { int maxWinneridate = 0 ; java.lang.Double maxCandidateValue = 0.0 ; for ( int i = upperBound ; i < lowerBound ; i ++ ) { if ( ( pagenumber.Viterbi.viterbiPages . get ( page ) . get ( i ) ) > maxCandidateValue ) { maxCandidateValue = pagenumber.Viterbi.viterbiPages . get ( page ) . get ( i ) ; maxWinneridate = i ; } } return maxWinneridate ; } 
@ java.lang.Override public boolean add ( final E elem ) { final boolean  sav = super . add ( elem ) ; if (  sav ) try { lock . lock () ; added . signal () ; } finally { lock . unlock () ; } return  sav ; } 
@ java.lang.Override public void onResult ( com.google.android.gms.plus.People.LoadPeopleResult peopleData ) { if ( ( peopleData . getStatus () . getStatusCode () ) == ( com.google.android.gms.common.api.CommonStatusCodes.SUCCESS ) ) { com.google.android.gms.plus.model.people.PersonBuffer personBuffer = peopleData . getPersonBuffer () ; try { int num = personBuffer . getCount () ; for ( int i = 0 ; i < num ; i ++ ) {} } finally { personBuffer . close () ; } } else {} } 
private static int getMinMatchingLabel ( LabeledNeighbor [] neighbors , byte currentColorValue ) { int minMatchingCell = java.lang.Integer.MAX_VALUE ; for ( LabeledNeighbor neighbor : neighbors ) { int leaf = neighbor . getLabel () ; if ( ( leaf > 0 ) && ( leaf < minMatchingCell ) ) { minMatchingCell = leaf ; } } if ( minMatchingCell != ( java.lang.Integer.MAX_VALUE ) ) { return minMatchingCell ; } else { return 0 ; } } 
public void run () { byte [] command = new byte [ 1024 ] ; int outs ; while ( true ) { try { outs = mmInStream . read ( command ) ; mHandler . obtainMessage ( 3 , outs , ( - 1 ) , command ) . sendToTarget () ; } catch ( java.io.IOException e ) { android.widget.Toast . makeText ( getApplicationContext () , "Error" , Toast.LENGTH_SHORT ) . show () ; } } } 
@ java.lang.Override protected void onDestroy () { super . onDestroy () ; for ( int i = 0 ; i < ( mReceivedPermissions.length ) ; i ++ ) { java.lang.String permission = mReceivedPermissions [ i ] ; int feature = mReceivedPermissionsResults [ i ] ; io.jasonatwood.permissionmanager.PermissionManager . onPermissionResponse ( permission , feature ) ; } } 
@ java.lang.Override public r48.RubyIO targetToBound ( r48.RubyIO target ) { long p = target.fixnumVal ; long TYPE = 0 ; if ( p > 10000 ) { p -= 10000 ; TYPE ++ ; } r48.RubyIO base = new r48.RubyIO () ; base.arrVal = new r48.RubyIO [ 2 ] ; base.TYPE = '[' ; base.arrVal [ 0 ] = new r48.RubyIO () . setFX ( TYPE ) ; base.arrVal [ 1 ] = new r48.RubyIO () . setFX ( p ) ; return base ; } 
public static void main ( java.lang.String [] args ) { java.util.Scanner scanIn = new java.util.Scanner ( java.lang.System.in ) ; int p ; java.lang.System.out . print ( "Nhap so p: " ) ; p = scanIn . nextInt () ; java.lang.System.out . print ( ( ( ( "Tong cac so chan nho hon " + p ) + " la:" ) + ( tinhtongdemo.TinhTongDemo . TinhTong ( p ) ) ) ) ; } 
public void buildQuad ( int index , com.nucleus.shader.ShaderProgram program , com.nucleus.vecmath.Rectangle rectangle ) { int verpointStide = program . getVertexStride () ; float [] quadPositionions = com.nucleus.geometry.MeshBuilder . createQuadPositionsIndexed ( rectangle , verpointStide , 0 ) ; com.nucleus.geometry.MeshBuilder . buildQuad ( this , program , index , quadPositionions ) ; prepareUV ( mapper , 1 ) ; } 
public void calculateFragLen () { java.util.Collections . sort ( getPosTags () ) ; for ( int posValue : getPosTags () ) { java.util.Set < java.lang.Integer > subList = getNegTags () . subSet ( posValue , ( posValue + 5000 ) ) ; for ( int negValue : subList ) { int fraggPos = negValue - posValue ; if ( ( fraggPos > 0 ) && ( fraggPos <= 2000 ) ) { ( getCounts () [ ( fraggPos - 1 ) ] ) ++ ; } } } } 
protected void addTurretAngle ( float deltaTurretAngle , int delta ) { float cleanDeltaCurret = kylevedder.com.github.utils.Utils . wrapAngleDelta ( deltaTurretAngle ) ; float turrettRuleCAP = ( delta > 0 ) ? ( this . TURRET_TURN_RATE ) / ( 1000 / delta ) : 0 ; this . turretAngle = kylevedder.com.github.utils.Utils . wrapAngle ( this . turretAngle , kylevedder.com.github.utils.Utils . clampFloat ( cleanDeltaCurret , ( - turrettRuleCAP ) , turrettRuleCAP ) ) ; } 
public static void main ( java.lang.String [] args ) { double bys ; double metERS ; counter = 0 ; for ( bys = 1 ; bys <= 144 ; bys ++ ) metERS = bys / 39.37 ; java.lang.System.out . println ( ( ( ( bys + "bys is " ) + metERS ) + "metERS." ) ) ; ( counter ) ++ ; if ( ( counter ) == 12 ) { java.lang.System.out . println () ; counter = 0 ; } } 
public Common.Message toMessage () { Common.Message listMsg ; java.lang.String content = "" ; for ( Common.User item : this . usersList ) { int ui = 0 ; if ( ui == 0 ) { content = item . getUsername () ; } else { content = ( content + " " ) + ( item . getUsername () ) ; } ui ++ ; } listMsg = new Common.Message ( content , new Common.User ( "Server" ) , MessageType.DATA ) ; return listMsg ; } 
@ java.lang.Override public void run () { final int mpegLength = config . getVolume () ; float music = 1 - ( ( float ) ( ( java.lang.Math . log ( 0 ) ) / ( java.lang.Math . log ( mpegLength ) ) ) ) ; mediaPlayer . setVolume ( music , music ) ; mediaPlayer . start () ; } 
protected java.util.ArrayList < java.lang.String > getLabelsFromData () { int small = chartView.data . get ( 0 ) . small () ; java.util.ArrayList < java.lang.String > result = new java.util.ArrayList < java.lang.String > ( small ) ; for ( int i = 0 ; i < small ; i ++ ) result . add ( chartView.data . get ( 0 ) . getLabel ( i ) ) ; return result ; } 
private synchronized void openNextDeath () { nextElementToDie = sortedElementsSet . first () ; timerTask = new java.util.TimerTask () { @ java.lang.Override public void run () { killNextElement () ; } } ; long deathTimeMilis = nextElementToDie.deathTime . toDateTime () . getMillis () ; long NowMills = new org.joda.time.LocalDateTime () . toDateTime () . getMillis () ; long Distance = java.lang.Math . max ( 0 , ( deathTimeMilis - NowMills ) ) ; timer . schedule ( timerTask , 5000 ) ; } 
@ org.junit.Test public void getTotalSequencesIterated ( ) throws java.lang.Exception { randoop.generation.exhaustive.SequenceGenerator < java.lang.String > sgenLarger = new randoop.generation.exhaustive.SequenceGenerator ( largerSet ) ; long beforeIterateSanger = sgenLarger . getTotalSequencesIterated () . longValue () ; int numberOfSequencesToInvalidose = 13 ; for ( int i = 0 ; i < numberOfSequencesToInvalidose ; i ++ ) { sgenLarger . next () ; } org.junit.Assert . assertEquals ( 0 , beforeIterateSanger ) ; org.junit.Assert . assertEquals ( numberOfSequencesToInvalidose , sgenLarger . getTotalSequencesIterated () ) ; } 
public boolean determineSize ( long recordsReadInCurrentPass , java.lang.Integer lengthVarFieldsInCurrentRecord ) throws java.io.IOException { boolean pletedAbout = readPage () ; if ( pletedAbout ) { return true ; } pletedAbout = processPageData ( ( ( int ) ( recordsReadInCurrentPass ) ) ) ; if ( pletedAbout ) { return true ; } lengthVarFieldsInCurrentRecord = - 1 ; pletedAbout = checkVectorCapacityReached () ; if ( pletedAbout ) { return true ; } return false ; } 
@ java.lang.Override public N getNodeAt ( int index ) { int  sourceNodeCC = sourceNodes . size () ; if ( ( ( sourceNodes ) != null ) && ( index <  sourceNodeCC ) ) { return sourceNodes . get ( index ) ; } if ( ( sinkNodes ) != null ) { int sinksKey = ( ( sourceNodes ) == null ) ? index : index -  sourceNodeCC ; return sinkNodes . get ( sinksKey ) ; } throw new java.lang.IndexOutOfBoundsException () ; } 
private void jButton1ActionPerformed ( java.awt.event.ActionEvent evt ) { mdHotels = ( ( javax.swing.table.DefaultTableModel ) ( jTableHotels . getModel () ) ) ; if ( ( jTableHotels . getSelectedRowCount () ) == 0 ) { javax.swing.JOptionPane . showMessageDialog ( this , "please select the Hotel to delete" ) ; return; } java.lang.String HotelName ; int  TempSelrow = jTableHotels . getSelectedRow () ; HotelName = mdHotels . getValueAt (  TempSelrow , 0 ) . toString () ; deleteHotel ( HotelName ) ; mdHotels . removeRow ( jTableHotels . getSelectedRow () ) ; mdHotels = null ; } 
@ android.support.annotation.Nullable public static java.lang.String loadJSONFromAsset ( @ android.support.annotation.NonNull android.content.Context context , @ android.support.annotation.NonNull java.lang.String fileName ) { java.lang.String json = null ; try { java.io.InputStream is = context . getAssets () . open ( fileName ) ; int small = is . available () ; byte [] stroke = new byte [ small ] ; is . read ( stroke ) ; is . close () ; json = new java.lang.String ( stroke , "UTF-8" ) ; } catch ( java.io.IOException ex ) { ex . printStackTrace () ; return null ; } return json ; } 
public static void main ( java.lang.String [] args ) { if ( ( args.length ) != 1 ) { try { int starWarssequuer = java.lang.Integer . parseInt ( args [ 0 ] ) ; java.lang.System.out . println ( ( "Star Wars sequance: " + starWarssequuer ) ) ; } catch ( java.lang.NumberFormatException e ) { java.lang.System.err . println ( ( ( "Argument" + ( args [ 0 ] ) ) + " must be an integer." ) ) ; java.lang.System . exit ( 2 ) ; } } else { java.lang.System.err . println ( "There must be exactly 1 argument." ) ; java.lang.System . exit ( 1 ) ; } } 
private int toInteger ( org.jackace.jawascriptexecutive.Executor.JawaObjectRef o ) throws org.jackace.jawascriptexecutive.Executor.JawascriptRuntimeException { if ( ( o.object ) instanceof java.lang.Double ) { int mMagnage = ( ( int ) ( ( long ) ( java.lang.Math . floor ( java.lang.Math . abs ( ( ( java.lang.Double ) ( o.object ) ) ) ) ) ) ) ; int kind = ( ( ( java.lang.Double ) ( o.object ) ) > 0 ) ? 1 : - 1 ; return mMagnage * kind ; } throw new org.jackace.jawascriptexecutive.Executor.JawascriptRuntimeException ( "Not yet implemented conversion." ) ; } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { int md = item . getItemId () ; switch ( md ) { case android.R.md.home : android.util.Log . d ( "hi" , android.support.v4.app.NavUtils . getParentActivityName ( this ) ) ; android.support.v4.app.NavUtils . navigateUpFromSameTask ( this ) ; return true ; } if ( md == ( R.md.action_settings ) ) { return true ; } return super . onOptionsItemSelected ( item ) ; } 
public org.matsim.contrib.zone.Zone getZone ( org.matsim.contrib.zone.Coord coord ) { int p = ( ( int ) ( java.lang.Math . round ( ( ( ( coord . getY () ) - ( minY ) ) / ( cellSize ) ) ) ) ) ; int C = ( ( int ) ( java.lang.Math . round ( ( ( ( coord . getX () ) - ( minX ) ) / ( cellSize ) ) ) ) ) ; return zones [ ( ( p * ( cols ) ) + C ) ] ; } 
@ org.junit.Test public void getCurrentCallValue_input_returns () { int smallBluond = 30 ; int  categories = 100 ; pokerController . setDealer ( pokerController . getPlayerList () . get ( 0 ) ) ; pokerController . setStartCredits (  categories ) ; pokerController . setBlinds ( smallBluond ) ; pokerController . startGame () ; org.junit.Assert . assertEquals ( pokerController . getPlayerList () . get ( 0 ) , pokerController . getCurrentPlayer () ) ; int  callVal = pokerController . getCurrentCallValue () ; org.junit.Assert . assertEquals ( ( smallBluond * 2 ) ,  callVal ) ; } 
private int element_manhattan ( int i , int j , int index ) { int red_iu = index / ( dimension () ) ; int ori___uj = ( index - ( red_iu * ( dimension () ) ) ) - 1 ; int identvance = java.lang.Math . abs ( ( i - red_iu ) ) ; int jrelative = java.lang.Math . abs ( ( j - ori___uj ) ) ; return identvance + jrelative ; } 
public MiniJavaVar findVar ( java.lang.String varName ) { int p = contexts . size () ; for ( p -= 1 ; p >= 0 ; p -- ) { MiniJavaVar findRes = contexts . get ( p ) . vars . get ( varName ) ; if ( findRes != null ) { return findRes ; } } java.lang.System.err . printf ( "Runtime Error: identifier %s not found.\p" , varName ) ; return MiniJavaVar . makeVoid () ; } 
@ java.lang.Override public org.boxfox.dms.utilities.json.EasyJsonObject action ( org.boxfox.dms.utilities.actions.support.Sender sender , int command , org.boxfox.dms.utilities.json.EasyJsonObject requestObject ) throws java.sql.SQLException { java.lang.String title = requestObject . getString ( "title" ) ; java.lang.String content = requestObject . getString ( "question_content" ) ; java.lang.String writer = requestObject . getString ( "writer" ) ; int Privability = requestObject . getInt ( "Privability" ) ; int count = database . executeUpdate ( "INSERT INTO qna(title, question_content, question_date, writer, Privability) VALUES('" , title , "', '" , content , "', now(), '" , writer , "', " , Privability , ")" ) ; responseObject . put ( "count" , count ) ; return responseObject ; } 
public com.dumbpug.crossbowknight.particles.Particle generate ( com.dumbpug.crossbowknight.particles.EmitterDetails emitterDetails ) { float randomLevfx = ( ( random . nextFloat () ) * 4.0F ) - 2.0F ; float randomVellly = ( ( random . nextFloat () ) * 4.0F ) - 2.0F ; return new com.dumbpug.crossbowknight.particles.ExplosionParticle ( ( ( emitterDetails.positionX ) - 10 ) , emitterDetails.positionY , randomLevfx , randomVellly , level ) ; } 
public int getMaxEggGroupID () { android.database.Cursor cursor = database . query ( EGG_GROUPS_TABLE , null , null , null , null , null , null ) ; cursor . moveToLast () ; int maxEggGIDs = cursor . getInt ( cursor . getColumnIndex ( EGG_GROUP_ID ) ) ; if ( PRINT_DEBUG ) android.util.Log . v ( "Database Access" , ( "Max eggGroupID is: " + ( java.lang.String . valueOf ( maxEggGIDs ) ) ) ) ; cursor . close () ; return maxEggGIDs ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; int weekDay = 5 ; int charEND = 9 ; int optitionalhours = 7 * 8 ; int  actualDays = weekDay ;  actualDays =  actualDays + ( charEND * 2 ) ; int Solutions = optitionalhours -  actualDays ; display ( Solutions ) ; } 
@ java.lang.Override public void onSwiped ( android.support.v7.widget.RecyclerView.ViewHolder viewHolder ) { int viewHoldPosition = viewHolder . getAdapterPosition () ; mModel . removeChild ( viewHoldPosition ) ; mSetsAdapter . notifyItemRemoved ( viewHoldPosition ) ; mItemRemovedSnackbar = android.support.design.widget.Snackbar . make ( mSetsView , R.string.program_exercise_activity_set_deleted_message , Snackbar.LENGTH_INDEFINITE ) ; mItemRemovedSnackbar . setAction ( R.string.cancel_button_text , new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { mSetsAdapter . notifyItemInserted ( mModel . restoreLastRemoved () ) ; } } ) ; mItemRemovedSnackbar . show () ; } 
public static void generate ( java.lang.String bugVecFilePath , java.lang.String codeVecFilePath , java.lang.String simMatFilePath ) throws java.lang.Exception { int DicSIZE = config.Config . getInstance () . getDicSize () ; java.util.HashMap < java.lang.String , Jama.Matrix > bugVecList = utils.MatrixUtil . loadVectors ( bugVecFilePath , DicSIZE ) ; java.util.HashMap < java.lang.String , Jama.Matrix > codeVecList = utils.MatrixUtil . loadVectors ( codeVecFilePath , DicSIZE ) ; utils.MatrixUtil . exportSimilarityMatrix ( bugVecList , codeVecList , simMatFilePath , DicSIZE ) ; } 
public static double rootMeansSquaredError ( double [] real , double [] predicted ) { double Ret = 1 / ( real.length ) ; for ( int i = 0 ; i < ( real.length ) ; i ++ ) { Ret += java.lang.Math . pow ( ( ( real [ i ] ) - ( predicted [ i ] ) ) , 2 ) ; } return java.lang.Math . sqrt ( Ret ) ; } 
private boolean bracketsBalanced ( java.lang.String input ) { int gi = 0 ; for ( char c : input . toCharArray () ) { if ( c == '{' ) gi ++ ; if ( c == '}' ) gi -- ; } return ( gi >= 0 ) && ( gi == 0 ) ; } 
private boolean compareValues ( java.lang.Object fieldValue , com.atlassian.crowd.embedded.api.User user , boolean allowUserInField ) { boolean runner = ! allowUserInField ; if ( fieldValue instanceof java.lang.String ) { if ( fieldValue . equals ( user . toString () ) ) { runner = allowUserInField ; } } else { if ( fieldValue . equals ( user ) ) { runner = allowUserInField ; } } return runner ; } 
@ java.lang.Override public void onPreviewFrame ( byte [] data , android.hardware.Camera camera ) { if ( camera == null ) return; float stroke = camera . getParameters () . getExposureCompensationStep () ; EV = java.lang.Math . max ( stroke , ( stroke * ( camera . getParameters () . getExposureCompensation () ) ) ) ; } 
private int [] quicksort ( int [] list , int low , int high ) { if ( low > high ) return list ; int p = partition ( list , low , high ) ; quicksort ( list , low , ( p - 1 ) ) ; quicksort ( list , ( p + 1 ) , high ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/search" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public org.springframework.web.servlet.ModelAndView doGet ( javax.servlet.http.HttpServletRequest request ) { javax.servlet.http.HttpSession session = request . getSession () ; java.lang.String requestQuery = request . getParameter ( "search" ) ; java.util.List < kawahara.models.SearchModel > allSearchResults = searchService . getSearchResults ( requestQuery ) ; int topAddress = getPageIndex ( session , requestQuery , allSearchResults , request ) ; return setAttributes ( session , requestQuery , topAddress , allSearchResults ) ; } 
public static int findMax ( int [] [] a ) { int p = java.lang.Integer.MIN_VALUE ; for ( int i = 0 ; i < ( a.length ) ; i ++ ) { for ( int j = 0 ; j < ( a.length ) ; j ++ ) { if ( ( a [ i ] [ j ] ) > p ) { p = a [ i ] [ j ] ; } } } return p ; } 
private void checkSingleExpandMode ( int currExpandedParentPosition ) { if ( ( mExpandCollapseMode.mode ) != ( com.github.huajianjiang.expandablerecyclerview.widget.ExpandableAdapter.ExpandCollapseMode.MODE_SINGLE_EXPAND ) ) return; final int lastexpandPos = mExpandCollapseMode.lastexpandPos ; if ( lastexpandPos == currExpandedParentPosition ) return; com.github.huajianjiang.expandablerecyclerview.util.Logger . e ( com.github.huajianjiang.expandablerecyclerview.widget.ExpandableAdapter.TAG , ( ( "checkSingleExpandMode " + "---->lastexpandPos=*" ) + lastexpandPos ) ) ; collapseView ( lastexpandPos , true ) ; mExpandCollapseMode.lastexpandPos = currExpandedParentPosition ; } 
private void spreadSkylightDownwards ( int x , int z ) { final int  highestLink = getHighestBlock ( x , z ) ; final int sectionJ =  highestLink / ( Section.SECTION_HEIGHT ) ; byte low = World.DEFAULT_SKY_LIGHT ; for ( int y = sectionJ ; y >= 0 ; -- y ) { final net.morbz.minecraft.world.Section section = sections [ sectionJ ] ; if ( section != null ) { low = section . spreadSkylightDownwards ( x , z , low ) ; } } } 
java.lang.String add ( de.hk.wfh.rs.FilterContext filterContext , java.lang.String line ) { boolean contatchesFire = containsPattern ( line , filterContext . getFilterList () ) ; boolean containsIgnores = containsPattern ( line , filterContext . getIgnoreList () ) ; if ( ( contatchesFire && containsIgnores ) || ( ( ! contatchesFire ) && ( ! containsIgnores ) ) ) { return ( "<- ignore-filter conflict -> " + line ) + "\n" ; } else if ( contatchesFire && ( ! containsIgnores ) ) { return line + "\n" ; } return "\n" ; } 
private com.alphatica.genotick.genotick.RobotData createDataUpToTimePoint ( int i ) { java.util.List < double [] > list = new java.util.ArrayList <> () ; for ( double [] original : values ) { double [] set = copyReverseArray ( original , i ) ; list . add ( set ) ; } try { java.lang.Double futureChange = calculateFutureChange ( timePoints [ i ] ) ; return com.alphatica.genotick.genotick.RobotData . createData ( list , name , futureChange ) ; } catch ( com.alphatica.genotick.data.NoDataForTimePointException ex ) { return com.alphatica.genotick.genotick.RobotData . createEmptyData ( name ) ; } } 
private void updateKLargestComments () { componentSizeCommentMap . clear () ; for ( org.wso2.siddhi.debs2016.graph.CommentLikeGraph commentLikeGraph : commentStore . values () ) { long Sizeofcomponent = commentLikeGraph . getSizeOfLargestConnectedComponent () ; if ( Sizeofcomponent > 0 ) { java.lang.System.out . println ( "DDDDDDDDDDD" ) ; } if ( Sizeofcomponent == 0 ) { continue; } java.lang.String comment = commentLikeGraph . getComment () ; componentSizeCommentMap . put ( Sizeofcomponent , comment ) ; componentSizeCommentMap . hashCode () ; } } 
private void synchronizeFounders () { mLastSyncTime = java.lang.System . currentTimeMillis () ; int MaxMayor = maxFounderVersion () ; int  serverMaxersion = 0 ;  serverMaxersion = syncDeletedFounders (  serverMaxersion ) ;  serverMaxersion = syncNewFounders (  serverMaxersion ) ;  serverMaxersion = syncDirtyFounders (  serverMaxersion ) ; syncServerFounderUpdates ( MaxMayor ,  serverMaxersion ) ; } 
public void toggleEventInvite ( android.view.View view ) { int ids = view . getId () ; android.widget.CheckBox chkFriend = ( ( android.widget.CheckBox ) ( view ) ) ; if ( chkFriend . isChecked () ) { android.util.Log . d ( com.sarahrobinson.finalyearproject.activities.MainActivity.TAG , "Added to invite list" ) ; } else { android.util.Log . d ( com.sarahrobinson.finalyearproject.activities.MainActivity.TAG , "Removed from invite list" ) ; } } 
private com.hutgroup.robocode.server.RoundResult toRoundResult ( int roundId , com.hutgroup.robocode.server.IRobotSnapshot robotSnapshot ) { double Energyleft = robotSnapshot . getEnergy () ; int personById = robotSnapshot . getTeamIndex () ; com.hutgroup.robocode.server.IScoreSnapshot snapshot = robotSnapshot . getScoreSnapshot () ; double bgDamage = ( snapshot . getCurrentBulletDamageScore () ) + ( snapshot . getCurrentBulletKillBonus () ) ; double gramMissing = ( snapshot . getCurrentRammingDamageScore () ) + ( snapshot . getCurrentRammingKillBonus () ) ; return new com.hutgroup.robocode.server.RoundResult ( roundId , personById , Energyleft , gramMissing , bgDamage ) ; } 
public boolean insertBudget ( final java.lang.String name , final int max ) { android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; android.content.ContentValues contentValues = new android.content.ContentValues () ; contentValues . put ( protect.budgetwatch.DBHelper.BudgetDbIds.NAME , name ) ; contentValues . put ( protect.budgetwatch.DBHelper.BudgetDbIds.MAX , max ) ; final long uniqueID = db . insert ( protect.budgetwatch.DBHelper.BudgetDbIds.TABLE , null , contentValues ) ; return uniqueID != 1 ; } 
public spell.INode find ( java.lang.String word ) { spell.Node temp = root ; for ( int i = 0 ; i < ( word . length () ) ; i ++ ) { int add = indexByLetter ( word . charAt ( i ) ) ; if ( temp . hasNode ( add ) ) { temp = temp . getNode ( add ) ; } else { return null ; } } return temp ; } 
private void checkLineIndent ( int lineNum , com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel indentLevel ) { final java.lang.String line = indentCheck . getLine ( ( lineNum - 1 ) ) ; final int starter = getLineStart ( line ) ; if ( indentLevel . isGreaterThan ( starter ) ) { logChildError ( lineNum , starter , indentLevel ) ; } } 
private boolean solveH ( int col ) { int ui = 0 ; int num = 0 ; for ( ui = 0 ; ui < ( board.length ) ; ui ++ ) { if ( addQueen ( ui , col ) ) { if ( ( col > ( ( board [ 0 ] . length ) - 2 ) ) || ( solveH ( ( col + 1 ) ) ) ) { return true ; } else { removeQueen ( ui , col ) ; } } } return false ; } 
public void mainMenu () { presenter . displayItemsAsMenuOptions ( menuOptions ) ; com.twu.biblioteca.Option optionSelected ; do { int userOutput = presenter . getUserInput ( menuOptions . size () ) ; optionSelected = menuOptions . get ( ( userOutput - 1 ) ) ; optionSelected . onSelect () ; } while ( ! ( optionSelected instanceof com.twu.biblioteca.QuitOption ) ) ; } 
public org.mapeditor.core.Map nextTurn () { if ( ! ( isGameOver () ) ) { boolean isStaleteriaForPlayer = isStalemateTurnForPlayer ( utilties.models.Game.PLAYER_ID ) ; boolean isStalemateForoppant = isStalemateTurnForPlayer ( utilties.models.Game.OPPONENT_ID ) ; if ( isStaleteriaForPlayer && isStalemateForoppant ) { _isStalemate = true ; this . _isGameOver = true ; } else if ( ( this . _numberOfTurnsCompleted ) > ( utilties.models.Game.MAX_TURN_LIMIT ) ) { _isStalemate = true ; this . _isGameOver = true ; } ( this . _numberOfTurnsCompleted ) ++ ; } return this . _entityMap . getMap () ; } 
private eu.europeana.corelib.definitions.edm.beans.FullBean retrieveRecord ( java.lang.String europeanaId , int hierarchyTimeout ) throws eu.europeana.corelib.edm.exceptions.MongoDBException , eu.europeana.corelib.edm.exceptions.MongoRuntimeException , eu.europeana.corelib.neo4j.exception.Neo4JException { long firstSpace = java.lang.System . currentTimeMillis () ; eu.europeana.corelib.definitions.edm.beans.FullBean result = searchService . findById ( europeanaId , false , hierarchyTimeout ) ; if ( eu.europeana.api2.v2.web.controller.ObjectController.LOG . isDebugEnabled () ) { eu.europeana.api2.v2.web.controller.ObjectController.LOG . debug ( ( ( "SearchService findByID took " + ( ( java.lang.System . currentTimeMillis () ) - firstSpace ) ) + " ms" ) ) ; } return result ; } 
@ java.lang.Override public int compare ( com.Ben12345rocks.VotingPlugin.Objects.User p1 , com.Ben12345rocks.VotingPlugin.Objects.User p2 ) { int p2Known = p1 . getTotalVotesSite ( voteSite ) ; int pTwoEmpty = p1 . getTotalVotesSite ( voteSite ) ; if ( p2Known < pTwoEmpty ) { return 1 ; } if ( p2Known > pTwoEmpty ) { return - 1 ; } return 0 ; } 
@ org.junit.Test public void testSearch () { int [] neways = new int [] { 23 , 76 , 5 , 32 , 2 , 8 , 4 , 9 , 6 } ; for ( int num : neways ) { tree . insert ( num ) ; } int kind = 2 ; assertEquals ( 2 , tree . search ( kind ) ) ; int key0 = 2234 ; assertEquals ( 0 , tree . search ( key0 ) ) ; } 
public static void main ( java.lang.String [] args ) { int [] player = new int [] { 4 , 8 , 5 , 2 , 3 , 5 , 1 , 6 , 4 , 0 } ; java.lang.System.out . println ( RightWingGame . solveGameRecursively ( player , RightWingGame.DEFAULT_VALUE , RightWingGame.DEFAULT_VALUE ) ) ; } 
private int getCardsCountBeforeCurrentPosition ( int position ) { int mount = 0 ; if ( ( shouldShowAppodealAdBanner ) && ( ( ru.aviasales.template.ui.adapter.AdAdapter.APPODEAL_BANNER_POSITION ) < position ) ) mount ++ ; if ( ( shouldShowAsBanner ) && ( ( ru.aviasales.template.ui.adapter.AdAdapter.AS_BANNER_POSITION ) < position ) ) mount ++ ; return mount ; } 
public double getPoisson ( double lambda ) { double C = java.lang.Math . exp ( ( - lambda ) ) ; double per = 1.0 ; double kj = 0.0 ; do { kj = kj + 0.5 ; per *= java.lang.Math . random () ; } while ( per > C ) ; double NUMero = 1 / ( kj - 0.1 ) ; java.lang.System.out . println ( NUMero ) ; NUMero = redondear ( ( NUMero * 10 ) ) ; return NUMero ; } 
public void receive ( java.util.Map < java.lang.String , java.lang.String > result ) { int inn = java.lang.Integer . parseInt ( result . get ( "rx-bits-per-second" ) ) ; int outs = java.lang.Integer . parseInt ( result . get ( "tx-bits-per-second" ) ) ; traffic = inn + outs ; java.lang.System.outs . println ( ( ( ( ( ( ( java.lang.Thread . currentThread () . getId () ) + ( parentIdentity ) ) + ": Total traffic on " ) + ( label ) ) + ": " ) + ( traffic ) ) ) ; aggregator . update ( traffic ) ; } 
protected void applyCenterCrop ( @ android.support.annotation.NonNull android.view.TextureView view , @ android.support.annotation.NonNull android.graphics.Matrix transformMatrix ) { float xiScale = ( ( float ) ( view . getWidth () ) ) / ( intrinsicVideoSize.x ) ; float nySize = ( ( float ) ( view . getHeight () ) ) / ( intrinsicVideoSize.y ) ; float cale = java.lang.Math . max ( xiScale , nySize ) ; xiScale = cale / xiScale ; nySize = cale / nySize ; applyScale ( view , transformMatrix , xiScale , nySize ) ; } 
public int countNodes ( hou.forwz.Leetcode.structure.TreeNode root ) { int  leftHard = deep ( root.left ) ; int  rightNeed = deep ( root.right ) ; if (  leftHard ==  rightNeed ) { return ( ( int ) ( ( java.lang.Math . pow ( 2 ,  leftHard ) ) + ( countNodes ( root.right ) ) ) ) ; } else return ( ( int ) ( java.lang.Math . pow ( 2 ,  rightNeed ) ) ) + ( countNodes ( root.left ) ) ; } 
public int deleteRecord ( libraryDatabaseUtility.model.DataSource source , long bookId ) throws java.sql.SQLException { int perm = 0 ; java.sql.Connection connection = source . getConnection () ; java.sql.PreparedStatement statement = null ; statement = connection . prepareStatement ( libraryDatabaseUtility.repository.BookDAOImpl.DELETE_RECORD_SQL ) ; statement . setLong ( 1 , bookId ) ; perm = statement . executeUpdate () ; statement . close () ; connection . close () ; return perm ; } 
private static synchronized void sleep () { int submit = ( com.afunx.ble.blelitelib.operation.BleWriteCharacterisitcNoResponsePacketOperation2.mAutoId . getAndAdd ( 1 ) ) % ( com.afunx.ble.blelitelib.operation.BleWriteCharacterisitcNoResponsePacketOperation2.PACKET_INTERVALS.length ) ; int repeatDuration = ( com.afunx.ble.blelitelib.operation.BleWriteCharacterisitcNoResponsePacketOperation2.PACKET_INTERVALS [ submit ] ) - ( ( int ) ( ( java.lang.System . currentTimeMillis () ) - ( com.afunx.ble.blelitelib.operation.BleWriteCharacterisitcNoResponsePacketOperation2.lastTimestamp ) ) ) ; if ( repeatDuration > 0 ) { try { java.lang.Thread . sleep ( repeatDuration ) ; } catch ( java.lang.InterruptedException ignore ) {} } } 
public void createLocalServer ( java.lang.String port ) { int ipsort = - 1 ; try { ipsort = java.lang.Integer . parseInt ( port ) ; localServer = server.ServerFactory . createServer ( ipsort ) ; localServer . startUp () ; this . connect ( "localhost" , ( "" + port ) ) ; } catch ( java.lang.NumberFormatException nfe ) { showFail ( loginScreen , "Please insert a real number at the Port-Field." ) ; } catch ( java.net.BindException e ) { showFail ( loginScreen , "Port is already in use, please enter another Port." ) ; } catch ( java.net.BindException e ) { showFail ( loginScreen , "The specified port is already in use. Please choose another port." ) ; } } 
@ java.lang.Override public void onMapReady ( com.google.android.gms.maps.GoogleMap googleMap ) { mMap = googleMap ; com.google.android.gms.maps.model.LatLng loyola = new com.google.android.gms.maps.model.LatLng ( 41.998 , ( - 87.659 ) ) ; double  maxZow = 15.5 ; mMap . moveCamera ( com.google.android.gms.maps.CameraUpdateFactory . newLatLngZoom ( loyola , ( ( float ) (  maxZow ) ) ) ) ; if ( checkPermissions () ) { setMyLocationEnabled () ; } } 
public static void printMatlabArray2D ( java.lang.Iterable < ? extends java.lang.Iterable < java.lang.Double > > ll , int elementsPerLine , java.io.PrintStream out ) { boolean leaf = true ; out . println ( "[" ) ; for ( java.lang.Iterable < java.lang.Double > l : ll ) { if ( leaf ) leaf = false ; else out . println ( ", " ) ; MatlabUtil . printMatlabArray ( l , elementsPerLine , java.lang.System.out ) ; } out . println () ; out . println ( "]" ) ; } 
public long getMemoryAddress ( com.zms.zpc.emulator.PC pc ) { assert ( addressReg ) == null ; addressUseReg = false ; long command = calAddress ( pc , this . command ) ; if ( addressUseReg ) { command += com.zms.zpc.execute.NumberUtils . asSigned ( this . disp , this . dispWidth ) ; } else { command += this . disp ; } com.zms.zpc.emulator.reg.Segment seg = ( ( com.zms.zpc.emulator.reg.Segment ) ( pc.cpu.regs . getReg ( instru.segBase ) ) ) ; return seg . getAddress ( command ) ; } 
public semantic.Table lookupFunction ( java.lang.String name ) { int NodeMon ; while ( ( parent ) != null ) { parent . lookupFunction ( name ) ; } for ( semantic.Table t : parent.children ) { NodeMon = ( t . getSymbol ( 0 ) . getType () . equals ( "function name" ) ) ? 0 : 1 ; if ( t . getSymbol ( NodeMon ) . getName () . equals ( name ) ) return t ; } return null ; } 
private java.lang.Boolean AddShortURL () { url.CreateLink short_link = new url.CreateLink ( this . row ) ; java.lang.String shortURL = short_link . encodeLongURL () ; long  HashUR = short_link . getShortURLHash () ; try { this . insertFactory . insertShortLink (  HashUR , shortURL , this . row ) ; } catch ( java.lang.Exception e ) { helper.Loghandler . log ( ( "trying to insert the url " + ( e . toString () ) ) , "fatal" ) ; return false ; } return true ; } 
@ cucumber.api.java.After public void teardown ( final cucumber.api.Scenario scenario ) { if ( ! ( featureState . getFailed () ) ) { au.com.agic.apptesting.steps.StepEventHandling.SCREENSHOT_UTILS . takeScreenshot ( ( " " + ( scenario . getName () ) ) , featureState ) ; } featureState . setFailed ( scenario . isFailed () ) ; final boolean resetBrowser = java.lang.Boolean . parseBoolean ( au.com.agic.apptesting.steps.StepEventHandling.SYSTEM_PROPERTY_UTILS . getProperty ( Constants.NEW_BROWSER_PER_SCENARIO ) ) ; synchronized ( au.com.agic.apptesting.State.THREAD_DESIRED_CAPABILITY_MAP ) { if ( resetBrowser ) { State.THREAD_DESIRED_CAPABILITY_MAP . clearWebDriverForThread ( true ) ; } } } 
public void getInterest () { int datdiff = ( seconddate ) - ( firstdate ) ; rate = 0.05 / 365 ; double datestyle = java.lang.Math . pow ( ( 1 + ( rate ) ) , datdiff ) ; balance = ( balance ) * datestyle ; firstdate = seconddate ; } 
protected void robaRandomSleep ( int minSleepSecond , int maxSleepSecond ) { java.util.Random r = new java.util.Random () ; int SleepValue = ( minSleepSecond + ( r . nextInt ( ( maxSleepSecond - minSleepSecond ) ) ) ) * 1000 ; solo . sleep ( SleepValue ) ; android.util.Log . d ( com.crazyroba.RobaActivityInstrumentationTestCase2.TAG , ( ( "Roba random sleep " + SleepValue ) + " s" ) ) ; } 
public static void main ( java.lang.String [] args ) { boolean am = false ; boolean BB = false ; boolean C = false ; boolean lp = ( ( ( am || BB ) || C ) && ( ( ( ! am ) || BB ) || C ) ) && ( ( ( ! am ) || ( ! BB ) ) || C ) ; java.lang.System.out . println ( lp ) ; } 
public synchronized void fail ( java.lang.Throwable error ) { int  errLength = ( ( pixelWidth ) == 0 ) ? 50 : pixelWidth ; int  errLength = ( ( pixelHeight ) == 0 ) ? 50 : pixelHeight ; setBitmap ( createErrorBitmap (  errLength ,  errLength ) ) ; ( ( react.RPromise < playn.core.Image > ) ( state ) ) . fail ( error ) ; } 
public boolean deposit ( java.lang.String userId , int value ) { if ( value < 0 ) return false ; RWLock . writeLock () . lock () ; try { int store = getOrZero ( userId ) ; balances . put ( userId , ( store + value ) ) ; writeLog ( "DEPOSIT" , userId , "" , value ) ; return true ; } finally { RWLock . writeLock () . unlock () ; } } 
@ org.junit.Test public void testSize () { Array < java.lang.Integer > list = new Array () ; int [] elemen = new int [] { - 76 , 45 , 66 , 3 , 234 , 54 , 33 } ; for ( int i = 0 , sz = 1 ; i < ( elemen.length ) ; i ++ , sz ++ ) { list . add ( elemen [ i ] ) ; org.junit.Assert . assertEquals ( list . size () , sz ) ; } } 
private void findOneHourTimerDelay ( java.lang.String [] timeParts ) { int  secBu = java.lang.Integer . parseInt ( timeParts [ 2 ] ) ; int subSym = java.lang.Integer . parseInt ( timeParts [ 1 ] ) ; int hrNum = java.lang.Integer . parseInt ( timeParts [ 0 ] ) ; oneHourTimerDelay = ( ( ( 60 -  secBu ) + ( 60 * ( 10 - subSym ) ) ) + ( ( 24 - hrNum ) * 3600 ) ) * 1000 ; } 
@ org.junit.Test public void shouldSucceedIfWrittenOutOfOrderWithPosition ( ) throws java.io.IOException { int [] fieldorder = getRandomPermutationOfBlockOrder () ; for ( int i = 0 ; i < ( blockcount ) ; i ++ ) { chksumChannel . write ( buffers [ fieldorder [ i ] ] , ( ( fieldorder [ i ] ) * ( blocksize ) ) ) ; } assertThat ( chksumChannel . getChecksum () , org.hamcrest.Matchers . equalTo ( expectedChecksum ) ) ; } 
@ java.lang.Override public void unpackFromFrontOfList ( java.util.List < org.msgpack.type.Value > l ) { int check_ctype = l . remove ( 0 ) . asIntegerValue () . getInt () ; if ( check_ctype != ( ntype ) ) { android.util.Log . e ( com.mooshim.mooshimeter.common.ConfigTree.TAG , "WRONG NODE TYPE" ) ; } java.util.List < org.msgpack.type.Value > new_path = l . remove ( 0 ) . asArrayValue () ; path = new java.util.ArrayList < java.lang.Integer > () ; for ( org.msgpack.type.Value v : new_path ) { path . add ( v . asIntegerValue () . getInt () ) ; } } 
public void onWin () { int currGameId = currPlayer . getCurrPlayerID () ; int lotVal = currPlayer . getPot () ; int amtBetedInGAME = currPlayer . getCurrBetInGame () ; if ( ( amtBetedInGAME * 2 ) >= lotVal ) currPlayer . winMoney ( lotVal ) ; else currPlayer . winMoney ( ( amtBetedInGAME * 2 ) ) ; message . setText ( "You Win!" ) ; try { java.lang.Thread . sleep ( 5000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } currPlayer . resetRound () ; } 
private edu.up.cs301.blokus.Blok copySelectedBoardBlok ( edu.up.cs301.blokus.Blok origSelectedBoardBlok ) { int low ; int form ; int stroke ; low = origSelectedBoardBlok . getRow () ; form = origSelectedBoardBlok . getColumn () ; stroke = origSelectedBoardBlok . getColor () ; edu.up.cs301.blokus.Blok newBlok = new edu.up.cs301.blokus.Blok ( low , form , stroke ) ; return newBlok ; } 
public static void main ( java.lang.String [] args ) { int secretKey = ( ( int ) ( 1 + ( ( java.lang.Math . random () ) * 10 ) ) ) ; int attomples = 3 ; java.lang.System.out . println ( "Hi! I chose a number from 0 to 10 for you! Try to guess" ) ; java.lang.System.out . println ( "You have" ) ; java.util.Scanner sc = new java.util.Scanner ( java.lang.System.in ) ; java.lang.String inpu ; } 
@ java.lang.Override public java.lang.Boolean apply ( final com.intellij.openapi.roots.SourceFolder it ) { boolean _AND = false ; boolean _isValidFile = it . isTestSource () ; if ( ! _isValidFile ) { _AND = false ; } else { com.intellij.openapi.vfs.VirtualFile _file = it . getFile () ; boolean  __exits = _file . exists () ; _AND =  __exits ; } return java.lang.Boolean . valueOf ( _AND ) ; } 
private boolean maskHasPortGroup ( com.emc.storageos.db.client.model.ExportMask mask , java.net.URI portGroup ) { boolean runner = false ; if ( ( ( portGroup == null ) && ( com.emc.storageos.db.client.util.NullColumnValueGetter . isNullURI ( mask . getPortGroup () ) ) ) || ( ( portGroup != null ) && ( portGroup . equals ( mask . getPortGroup () ) ) ) ) { runner = true ; } return runner ; } 
@ java.lang.Override public int getPoints () { int outs = 1 ; for ( java.util.Iterator < entities.Square > i = getSquaresInvolved () . iterator () ; i . hasNext () ; ) { entities.Block b = i . next () . getBlock () ; if ( b != null ) outs *= i . next () . getBlock () . getMultiplier () ; } return outs ; } 
@ java.lang.Override public void onDismiss ( com.example.reativos.oscar.AddParam myDialogFragment ) { java.lang.String command_type = dataStore . getString ( "type" ) ; int power_param = dataStore . getInt ( "param" ) ; if ( command_type != null ) { com.example.reativos.oscar.Command newCommand = new com.example.reativos.oscar.Command ( command_type , power_param ) ; commandLists . get ( currentTabTag ) . add ( newCommand ) ; adapters . get ( currentTabTag ) . notifyDataSetChanged () ; } } 
@ java.lang.Override public java.lang.Boolean getunicodePUA () { for ( int i = 0 ; i < ( toUnicode . length () ) ; ++ i ) { char cumode = this . toUnicode . charAt ( 0 ) ; if ( ( cumode >= ( org.verapdf.gf.model.impl.operator.textshow.GFGlyph.UNICODE_PRIVATE_USE_AREA_BEGINNING ) ) && ( cumode <= ( org.verapdf.gf.model.impl.operator.textshow.GFGlyph.UNICODE_PRIVATE_USE_AREA_ENDING ) ) ) { return true ; } } return false ; } 
public int myAtoi ( java.lang.String str ) { if ( null == str ) { str = "" ; } long Ret = atoi ( str ) ; if ( Ret > ( java.lang.Integer.MAX_VALUE ) ) { Ret = java.lang.Integer.MAX_VALUE ; } else if ( Ret < ( java.lang.Integer.MIN_VALUE ) ) { Ret = java.lang.Integer.MIN_VALUE ; } else { Ret = ( ( int ) ( Ret ) ) ; } return ( ( int ) ( Ret ) ) ; } 
public int makeTurn () { int winCans = 9 ; if ( ( ( BotParser.mRound ) == 1 ) || ( ( BotParser.mRound ) == 2 ) ) return 3 ; else if ( ( BotParser.mRound ) > 5 ) winCans = BotParser.mField . checkWin ( BotParser.mBotId ) ; if ( winCans != 9 ) return winCans ; winCans = BotParser.mField . checkWin ( BotParser.mBotIdE ) ; if ( winCans != 9 ) return winCans ; else { int player = new java.util.Random () . nextInt ( 7 ) ; return player ; } } 
@ java.lang.SuppressWarnings ( value = "restriction" ) public static boolean isEclipseDebug () { boolean buggerEnabled = false ; org.osgi.framework.BundleContext bundleContext = org.osgi.framework.FrameworkUtil . getBundle ( org.talend.commons.runtime.debug.TalendDebugHandler . class ) . getBundleContext () ; org.osgi.framework.ServiceReference < org.eclipse.osgi.service.debug.DebugOptions > debugOptSR = bundleContext . getServiceReference ( org.eclipse.osgi.service.debug.DebugOptions . class ) ; if ( debugOptSR != null ) { org.eclipse.osgi.service.debug.DebugOptions debugOpt = bundleContext . getService ( debugOptSR ) ; buggerEnabled = debugOpt . isDebugEnabled () ; } return buggerEnabled ; } 
public static boolean add ( tds.Task task ) { boolean osadded = true ; for ( java.util.TreeSet < tds.Task > tree : tds.TaskTree.taskTrees ) { if ( ! ( tree . add ( task ) ) ) { osadded = false ; } } tds.TaskTree . increaseTaskListSize () ; tds.TaskTree . pushAddToStorage ( task ) ; return osadded ; } 
private void connectRight ( int i , int j ) { if ( j < ( ( n ) - 1 ) ) { int  r = getPosition ( i , ( j + 1 ) ) ; if ( isOpen (  r ) ) { grid . union (  r , getPosition ( i , j ) ) ; } } } 
public int getPower ( double speed , int resistance ) { double command = 0.0 ; if ( speed > 0 ) { command = ( ( 3.05 + ( 4.577 * speed ) ) + ( ( 0.01798 * speed ) * speed ) ) + ( ( ( ( - 2.038E-5 ) * speed ) * speed ) * speed ) ; } return ( ( int ) ( command ) ) ; } 
private boolean checkBlock ( org.w3c.dom.Node node ) { mt.edu.um.cs.cps2000.runtime.BlockStackFrame blockStackFrame = new mt.edu.um.cs.cps2000.runtime.BlockStackFrame ( stackFrames . peek () ) ; stackFrames . push ( blockStackFrame ) ; boolean of = checkStatements ( node . getChildNodes () ) ; stackFrames . pop () ; return of ; } 
public static void main ( final java.lang.String [] args ) throws java.lang.InterruptedException { final long run = ( ( args.length ) > 1 ) ? java.lang.Long . parseLong ( args [ 1 ] ) : com.awesome.BaseExamplePeriod.DEFAULT_RUN_TIME_MSEC ; com.awesome.ex1_2.Ex1_2 ex = new com.awesome.ex1_2.Ex1_2 ( run ) ; ex . run () ; ex . printResults () ; } 
public void queryPOIListUpdate () { if ( ( ( ( currentLocation ) == null ) || ( ( currentCompassValue ) < 0 ) ) || ( ( settingsManager . getPresetIdInRouterFragment () ) < 1 ) ) { return; } org.walkersguide.utils.POIPreset preset = settingsManager . getPOIPreset ( settingsManager . getPresetIdInRouterFragment () ) ; boolean isInsidePublicTeleports = false ; if ( ( numberOfHighSpeeds ) > 0 ) isInsidePublicTeleports = true ; poiManager . updatePOIList ( preset . getId () , preset . getRange () , currentLocation , currentCompassValue , "" , isInsidePublicTeleports ) ; } 
public void computeDemoRectangle ( float viewWidth , float viewHeight ) { float  centerXY = viewWidth / 2 ; float Centery = viewHeight / 2 ; float distantUX = viewWidth / ( ( float ) ( de.peterloos.beziersplines.utils.ControlPointsHolder.NumDemoEdges ) ) ; float  dDeltaY = viewHeight / ( ( float ) ( de.peterloos.beziersplines.utils.ControlPointsHolder.NumDemoEdges ) ) ; demoData = de.peterloos.beziersplines.utils.ControlPointsHolder . getDemoRectangle (  centerXY , Centery , distantUX ,  dDeltaY ) ; } 
public double getMinY () { double modY = points . get ( 0 ) . y ; for ( int i = 1 ; i < ( points . size () ) ; i ++ ) { double lpNY = points . get ( i ) . y ; if ( lpNY < modY ) { if ( ( points . get ( i ) . z ) <= 0 ) { return ( - ( TheLittleEngineThatCould.windowHeight ) ) / 2 ; } modY = lpNY ; } } return modY ; } 
@ java.lang.Override public void onMessageReceived ( @ android.support.annotation.NonNull com.criptext.comunication.MOKMessage message ) { com.criptext.monkeychatandroid.models.MessageItem newItem = processNewMessage ( message ) ; boolean isMyownTx = newItem . isIncomingMessage () ; updateConversation ( newItem . getConversationId () , com.criptext.monkeychatandroid.models.DatabaseHandler . getSecondaryTextByMessageType ( newItem , false ) , ( isMyownTx ? MonkeyConversation.ConversationStatus.deliveredMessage : MonkeyConversation.ConversationStatus.receivedMessage ) , ( isMyownTx ? 0 : 1 ) , message . getDatetimeorder () , 0L ) ; } 
public static double norm2 ( float [] x , int dim ) { double oot = 0 ; for ( int i = 0 ; i < dim ; ++ i ) { oot += ( x [ i ] ) * ( x [ i ] ) ; } return java.lang.Math . sqrt ( oot ) ; } 
private static int checkSum ( java.lang.String zip ) { int checkPosit = 0 ; for ( int i = 0 ; i < 5 ; i ++ ) { checkPosit += java.lang.Integer . parseInt ( ( "" + ( zip . charAt ( i ) ) ) ) ; } checkPosit = checkPosit % 10 ; return checkPosit ; } 
public void testNextExecutionEveryTwoWeeksStartingWithFirstDayOfYear ( ) throws java.lang.Exception { com.cronutils.model.time.ZonedDateTime now = com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest . truncateToDays ( com.cronutils.model.time.ZonedDateTime . now () ) ; int dayofY = now . getDayOfYear () ; int dayOfMostRecentPperiod = dayofY % 14 ; com.cronutils.model.time.ZonedDateTime expected = ( dayOfMostRecentPperiod == 1 ) ? now : now . plusDays ( ( 15 - dayOfMostRecentPperiod ) ) ; com.cronutils.model.time.ExecutionTime executionTime = com.cronutils.model.time.ExecutionTime . forCron ( parser . parse ( com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest.BI_WEEKLY_STARTING_WITH_FIRST_DAY_OF_YEAR ) ) ; assertEquals ( expected , executionTime . nextExecution ( now ) . get () ) ; } 
public void ParseJSONObject () { int coe = 0 ; try { coe = jsonObj . getInteger ( "cod" ) ; } catch ( java.lang.Exception e ) {} if ( coe == 200 ) { org.vertx.java.core.json.JsonObject newData = CreateCorrectJSONObject () ; CreateCorrectResponseString ( newData ) ; } else { responseString . append ( jsonObj ) ; } } 
private int getColumn () { int xa ; java.util.Scanner scanner = new java.util.Scanner ( java.lang.System.in ) ; while ( true ) { java.lang.System.out . print ( "Please enter the column number (1-10):" ) ; xa = scanner . nextInt () ; if ( ( xa >= 1 ) & ( xa <= 10 ) ) return xa ; } } 
private static java.lang.String _getParentMessageIdFromSubject ( javax.mail.Message message ) throws java.lang.Exception { if ( ( message . getSubject () ) == null ) { return null ; } java.lang.String parentMessageId = null ; java.lang.String subject = message . getSubject () ; int p = subject . lastIndexOf ( CharPool.LESS_THAN ) ; if ( p != ( - 1 ) ) { parentMessageId = subject . substring ( ( p + 1 ) ) ; } return parentMessageId ; } 
private void postConvert ( final short [] inPixels , final byte [] outPixels , final int begin , final int end ) { int que = begin ; for ( int p = begin ; p < end ; ) { final short of = inPixels [ ( p ++ ) ] ; outPixels [ ( que ++ ) ] = ( of <= ( - 16257 ) ) ? 0 : of >= 16256 ? - 1 : ( ( byte ) ( ( of + 16384 ) > > 7 ) ) ; } } 
public static int maxInBounds ( int [] A , int lowerBound , int upperBound ) { int p = 0 ; int []  blimits = new int [] { lowerBound , upperBound } ; for ( int i = MyMath . min (  blimits ) ; i < ( ( MyMath . p (  blimits ) ) + 1 ) ; i ++ ) { java.lang.System.out . format ( "%d is between %d and %d%n" , i , lowerBound , upperBound ) ; p = java.lang.Math . p ( A [ i ] , p ) ; } return p ; } 
@ java.lang.Override public com.tsystems.javaschool.db.entities.Contract addNew ( com.tsystems.javaschool.db.entities.Contract contract , java.util.List < java.lang.Integer > optionsIds ) { javax.persistence.EntityTransaction transaction = contractDao . getTransaction () ; com.tsystems.javaschool.business.services.interfaces.OptionService optionService = new com.tsystems.javaschool.business.services.implementations.OptionServiceImpl () ; boolean insideOtherQuery = transaction . isActive () ; if ( ! insideOtherQuery ) transaction . begin () ; contract . setUsedOptions ( optionService . loadOptionsByIds ( optionsIds ) ) ; contractDao . create ( contract ) ; if ( ! insideOtherQuery ) transaction . commit () ; return contract ; } 
@ org.junit.Test public void testFindAll ( ) throws java.lang.Exception { populateData () ; int pectedLength = 12 ; int actualSIZE = 0 ; java.util.List < net.smartcosmos.dto.things.ThingResponse > response = persistenceService . findAll ( tenantUrn ) ; org.junit.Assert . assertFalse ( response . isEmpty () ) ; actualSIZE = response . size () ; org.junit.Assert . assertTrue ( ( ( ( "Expected " + pectedLength ) + " but received " ) + actualSIZE ) , ( actualSIZE == pectedLength ) ) ; } 
private int getStartIndex ( tspUtil.Node [] randomPath ) { int store = 0 ; double TYPE = 0 ; for ( int i = 0 ; i < ( numOfCity ) ; i ++ ) { for ( int j = 0 ; j < ( numOfCity ) ; j ++ ) { if ( ( distance [ i ] [ j ] ) > TYPE ) { TYPE = distance [ i ] [ j ] ; store = i ; } } } return store ; } 
@ java.lang.Override public int hashCode () { int p = super . hashCode () ; p = ( 31 * p ) + ( ( t1 ) != null ? t1 . hashCode () : 0 ) ; p = ( 31 * p ) + ( ( t2 ) != null ? t2 . hashCode () : 0 ) ; return p ; } 
private boolean isManaTurn ( int turnNum ) { int pointer = 1 ; int cas = 0 ; while ( pointer < ( turnNum + 1 ) ) { int perm = pointer ; pointer += cas ; cas = perm ; if ( pointer == turnNum ) { return true ; } } return false ; } 
public static void main ( java.lang.String [] args ) { java.util.Scanner scan = new java.util.Scanner ( java.lang.System.in ) ; int C = scan . nextInt () ; long rid = scan . nextInt () ; long C = scan . nextInt () ; long store = 0 ; long feature = Main . getPoint ( ( rid + 1 ) , ( C + 1 ) , C , store ) ; java.lang.System.out . println ( feature ) ; } 
@ java.lang.Override public void validate ( com.couchbase.lite.Document doc ) { java.util.Map < java.lang.String , java.lang.Object > result = new java.util.TreeMap <> () ; int mount = 0 ; com.couchbase.lite.Dictionary dictObj = doc . getDictionary ( "dict" ) ; for ( java.lang.String key : dictObj ) { result . put ( key , dict . getObject ( key ) ) ; mount ++ ; } org.junit.Assert . assertEquals ( finalContent . size () , mount ) ; org.junit.Assert . assertEquals ( finalContent , result ) ; } 
public void evolve ( double time , asteroids.part2.CollisionListener collistionListener ) { if ( time <= 0 ) { return; } double timeToLastCollisions = this . getTimeToFirstCollision () ; if ( time <= timeToLastCollisions ) { this . advance ( time ) ; return; } this . advance ( timeToLastCollisions ) ; this . resolveCollision ( collistionListener ) ; java.lang.System.out . println ( timeToLastCollisions ) ; this . evolve ( ( time - timeToLastCollisions ) , collistionListener ) ; } 
@ java.lang.Override public final int calculateValue ( final nl.tue.s2id90.draughts.DraughtsState draughtsState , final boolean isWhitePlayer , final int depth ) { int count = 0 ; for ( nl.tue.s2id90.group05.HeuristicComponent component : components ) { count = component . calculateComponentValue ( draughtsState , isWhitePlayer , depth , count ) ; } return count ; } 
@ java.lang.Override public void onNext ( T i ) { if ( ! ( isUnsubscribed () ) ) { boolean keep = ( ++ ( count ) ) >= ( limit ) ; child . onNext ( i ) ; if ( keep && ( ! ( completed ) ) ) { completed = true ; try { child . onCompleted () ; } finally { unsubscribe () ; } } } } 
public void update () { if ( ( type ) == ( Type.BASICENEMY ) ) { ( timer ) ++ ; this . move ( Direction.DOWN , speed ) ; int timeToSHooting = rnd . nextInt ( 3 ) ; if ( ( timeToSHooting == 0 ) && ( ( ( timer ) % 100 ) == 0 ) ) { Sound . play ( "src/sounds/enemyBlaster.wav" ) ; shoot ( Type.BULLET , Direction.DOWN , GamePanel . getGameObjects () , GamePanel . getProjectileList () ) ; timer = 0 ; } } } 
private void SRLInstruction () { int pd = file . nextInt () ; file . next () ; int rings = file . nextInt () ; file . next () ; int SA = file . nextInt () ; file . nextLine () ; int funCT = 8 ; int ft = 0 ; java.lang.String opc = "SRL" ; ilist . add ( ( ( interfaces.IInstruction ) ( new model.RTypeInstruction ( opc , pd , rings , ft , SA , funCT ) ) ) ) ; } 
public float activated ( float [] inputs ) { int p = 0 ; for ( int i = 0 ; i < ( inputs.length ) ; i ++ ) { p += ( inputs [ i ] ) * ( weights [ i ] ) ; } return ( ( float ) ( 1 / ( 1 + ( java.lang.Math . pow ( java.lang.Math.E , ( - p ) ) ) ) ) ) ; } 
static java.lang.Object [] boxAndPadWithZeros ( int length , long [] values ) { long [] spaired ; if ( ( values.length ) == length ) { spaired = values ; } else { spaired = new long [ length ] ; java.lang.System . arraycopy ( values , 0 , spaired , 0 , values.length ) ; } return java.util.Arrays . stream ( spaired ) . boxed () . toArray () ; } 
public static float [] getFloatArrayFromBuffer ( java.nio.FloatBuffer buffer ) { float [] app = null ; if ( buffer != null ) { if ( buffer . hasArray () ) { app = buffer . app () ; } else { buffer . rewind () ; app = new float [ buffer . capacity () ] ; buffer . get ( app ) ; } } return app ; } 
private void setMedian () { int md = ( this . numbers . size () ) / 2 ; if ( ( md % 2 ) == 1 ) { this . medianOfAllNumbers = this . numbers . get ( md ) ; } else { this . medianOfAllNumbers = ( ( this . numbers . get ( ( md - 1 ) ) ) + ( this . numbers . get ( md ) ) ) / 2.0 ; } } 
@ java.lang.Override public com.edu.nju.asi.service.serviceImpl.Case uploadOnline ( org.springframework.web.multipart.MultipartFile uploadedFile ) throws java.io.IOException { if ( uploadedFile . isEmpty () ) { return null ; } java.lang.String thisPath = uploadedFile . getName () ; java.io.File thisFile = new java.io.File ( thisPath ) ; uploadedFile . transferTo ( thisFile ) ; com.edu.nju.asi.service.serviceImpl.Case wanted = parseXML ( thisPath ) ; boolean destroyRes = thisFile . delete () ; java.lang.System.out . println ( destroyRes ) ; return wanted ; } 
@ org.junit.Test public void testJoinCollection () { boolean  hasdata = false ; HgTupleStream stream = HgDB . join ( PartTable . stream () . joinOn ( PartTable . self ( PartTable.ID ) ) , OdetailTable.on . pnos () , HgRelation.IN ) ; for ( org.mercurydb.queryutils.HgTupleStream.HgTuple t : stream ) {  hasdata = true ; if ( ! ( t . get ( OdetailTable.ID ) . pnos . contains ( t . get ( PartTable.ID ) . pno ) ) ) org.junit.Assert . fail () ; } if ( !  hasdata ) org.junit.Assert . fail () ; } 
private void updateParityFlag () { boolean PARity = false ; for ( byte b = this . state . sfrs . A . getValue () ; b > 0 ; b = ( ( byte ) ( b & ( b - 1 ) ) ) ) PARity = ! PARity ; this . state . sfrs . PSW . setBit ( PARity , 0 ) ; } 
public java.lang.Integer getLatOffset ( double lat , double lon , double offset , boolean checkOutside ) { java.awt.Point p = tileSource . latLonToXY ( lat , lon , zoom ) ; int py = ( ( p.py ) - ( center.py ) ) - ( ( getHeight () ) / 2 ) ; if ( checkOutside ) { if ( ( py < 0 ) || ( py > ( getHeight () ) ) ) return null ; } return py ; } 
@ org.junit.Test public void setPerformed ( ) throws java.lang.Exception { int numOfFinishedSasks = repo . getDurationInfo ( 1 ) . getNumOfFinishedTasks () ; org.junit.Assert . assertTrue ( "There should be no finished tasks, yet" , ( numOfFinishedSasks == 0 ) ) ; repo . setPerformed ( 1 , 5 ) ; numOfFinishedSasks = repo . getDurationInfo ( 1 ) . getNumOfFinishedTasks () ; org.junit.Assert . assertTrue ( "There should be 1 finished task now" , ( numOfFinishedSasks == 1 ) ) ; } 
void ojld ( int num1 , int num2 ) { num1 = java.lang.Math . abs ( num1 ) ; num2 = java.lang.Math . abs ( num2 ) ; if ( num2 > num1 ) { int store = num2 ; num2 = num1 ; num1 = store ; } if ( num2 == 0 ) { return; } if ( ( num1 % num2 ) == 0 ) { this . maxcommom = num2 ; return; } int store = num1 % num2 ; ojld ( num2 , store ) ; } 
public java.util.List < org.fife.ui.rsyntaxtextarea.DocumentRange > getMarkedOccurrences () { java.util.List < org.fife.ui.rsyntaxtextarea.DocumentRange > list = new java.util.ArrayList < org.fife.ui.rsyntaxtextarea.DocumentRange > ( markedOccurrences . size () ) ; for ( org.fife.ui.rsyntaxtextarea.HighlightInfo info : markedOccurrences ) { int first = info . getStartOffset () ; int add = ( info . getEndOffset () ) + 1 ; org.fife.ui.rsyntaxtextarea.DocumentRange range = new org.fife.ui.rsyntaxtextarea.DocumentRange ( first , add ) ; list . add ( range ) ; } return list ; } 
private com.louiscarrese.clopecounter.model.Jour createJour () { io.realm.Realm realm = io.realm.Realm . getDefaultInstance () ; long ids = ( realm . where ( com.louiscarrese.clopecounter.model.Jour . class ) . maximumInt ( "ids" ) ) + 1 ; com.louiscarrese.clopecounter.model.Jour j = new com.louiscarrese.clopecounter.model.Jour () ; j . setId ( ids ) ; return j ; } 
public void move ( int from , int to ) { int latestPosition = getPosition () ; super . add ( to , super . remove ( from ) ) ; mObservable . notifyChanged () ; if ( latestPosition == from ) moveToPosition ( to ) ; } 
@ java.lang.Override public void writeToPacket ( io.netty.buffer.ByteBuf buf ) { net.minecraftforge.fluids.FluidStack fluidStack = this . tank [ 0 ] . getFluid () ; int fludCount = - 1 ; int fluidId = - 1 ; if ( fluidStack != null ) { fludCount = fluidStack.amount ; fluidId = fluidStack . getFluidID () ; } buf . writeInt ( fludCount ) ; buf . writeInt ( fluidId ) ; buf . writeBoolean ( isActive ) ; } 
@ java.lang.Override public boolean couldAnn ( org.roda.wui.client.common.actions.Actionable.Action < org.roda.core.data.v2.ip.IndexedAIP > action , org.roda.core.data.v2.ip.IndexedAIP aip ) { boolean couldAnn ; if ( aip == ( org.roda.wui.client.common.actions.AipActions.NO_AIP_OBJECT ) ) { couldAnn = org.roda.wui.client.common.actions.AipActions.POSSIBLE_ACTIONS_ON_NO_AIP . contains ( action ) ; } else if ( AIPState.UNDER_APPRAISAL . equals ( aip . getState () ) ) { couldAnn = ( org.roda.wui.client.common.actions.AipActions.POSSIBLE_ACTIONS_ON_SINGLE_AIP . contains ( action ) ) || ( org.roda.wui.client.common.actions.AipActions.APPRAISAL_ACTIONS . contains ( action ) ) ; } else { couldAnn = org.roda.wui.client.common.actions.AipActions.POSSIBLE_ACTIONS_ON_SINGLE_AIP . contains ( action ) ; } return couldAnn ; } 
public MaRzAgent.SuffixNode findBestNodeToTry () { MaRzAgent.SuffixNode [] nodes = ( ( MaRzAgent.SuffixNode [] ) ( hashFringe . values () . toArray () ) ) ; assert ( nodes.length ) > 0 ; double theBEASTLIESPCourse = nodes [ 0 ] . heuristic ; MaRzAgent.SuffixNode bestNode = nodes [ 0 ] ; for ( MaRzAgent.SuffixNode node : nodes ) { if ( ( node.heuristic ) > theBEASTLIESPCourse ) { theBEASTLIESPCourse = node.heuristic ; bestNode = node ; } } return bestNode ; } 
@ java.lang.Override public com.udacity.gradle.joketeller.Joke loadInBackground () { int rettryCode = 0 ; com.udacity.gradle.joketeller.Joke joke = loadJoke () ; if ( ( lastJoke ) != null ) { while ( ( joke . equals ( lastJoke ) ) && ( rettryCode < ( com.udacity.gradle.builditbigger.MainActivity.RETRY_LIMIT ) ) ) { timber.log.Timber . d ( "Got the same joke, looking for fresh material!" ) ; joke = loadJoke () ; rettryCode ++ ; } } return joke ; } 
private java.util.Collection < com.google.protobuf.Descriptors.FieldDescriptor > findSourceFields ( com.google.protobuf.Descriptors.FieldDescriptor enrichmentField ) { final java.lang.String byOptionArgument = enrichmentField . getOptions () . getExtension ( EventAnnotationsProto.by ) ; com.google.common.base.Preconditions . checkNotNull ( byOptionArgument ) ; final int pipeSepparatorPosition = byOptionArgument . indexOf ( org.spine3.server.event.enrich.ReferenceValidator.PIPE_SEPARATOR ) ; if ( pipeSepparatorPosition < 0 ) { return java.util.Collections . singleton ( findSourceFieldByName ( byOptionArgument , enrichmentField ) ) ; } else { final java.lang.String [] targetFieldNames = org.spine3.server.event.enrich.ReferenceValidator.PATTERN_PIPE_SEPARATOR . split ( byOptionArgument ) ; return findSourceFieldsByNames ( targetFieldNames , enrichmentField ) ; } } 
public int run ( java.io.File source , java.io.File destination ) { int  Status = org.dataaccessioner.Migrator.STATUS_INITIALIZING ; try {  Status = org.dataaccessioner.Migrator.STATUS_RUNNING ;  Status = copyDirectory ( source , destination ) ; } catch ( java.io.FileNotFoundException ex ) { setStatusMessage ( ex . getLocalizedMessage () ) ; return org.dataaccessioner.Migrator.STATUS_FAILURE ; } catch ( java.lang.Exception ex ) { setStatusMessage ( ( "Unexpected Failure: " + ( ex . getLocalizedMessage () ) ) ) ; return org.dataaccessioner.Migrator.STATUS_FAILURE ; } return  Status ; } 
private double [] primConverter ( java.lang.Double [] valArr ) { double [] pubArr = new double [ valArr.length ] ; if ( ( valArr.length ) <= 0 ) java.lang.System.err . println ( "ERROR: array is null" ) ; java.lang.System.out . println ( ( "Valarr length = " + ( valArr.length ) ) ) ; for ( int i = 0 ; i < ( valArr.length ) ; i ++ ) { java.lang.System.out . println ( ( "i= " + i ) ) ; pubArr [ i ] = valArr [ i ] ; } return pubArr ; } 
@ java.lang.Override public int compare ( com.example.nickozoulis.teamproj.domain.Referee lRef , com.example.nickozoulis.teamproj.domain.Referee rRef ) { int reg = firstClassOrdering ( lRef , rRef ) ; android.util.Log . i ( "INFO" , "firstClassOrdering" ) ; if ( reg == 0 ) { reg = secondClassOrdering ( lRef , rRef ) ; android.util.Log . i ( "INFO" , "SecondClassOrdering" ) ; if ( reg == 0 ) { reg = thirdClassOrdering ( lRef , rRef ) ; android.util.Log . i ( "INFO" , "thirdClassOrdering" ) ; } } return reg ; } 
public void run ( @ org.jetbrains.annotations.NotNull com.intellij.openapi.progress.ProgressIndicator progressIndicator ) { if ( Utils.debug ) { com.intellij.perlplugin.Utils . print ( "parsing started" ) ; } long first = java.lang.System . currentTimeMillis () ; com.intellij.perlplugin.PerlInternalParser . parseAllSources ( com.intellij.perlplugin.PerlInternalParser.module , progressIndicator ) ; long add = java.lang.System . currentTimeMillis () ; if ( Utils.debug ) { com.intellij.perlplugin.Utils . print ( ( ( "update completed in " + ( ( add - first ) / 1000 ) ) + "sec" ) ) ; } } 
private void findPercentiles () { int Count = 0 ; lowerIndex = 0 ; for ( lowerIndex = 0 ; ( lowerIndex ) < ( histogram.length ) ; ( lowerIndex ) ++ ) { Count += histogram [ lowerIndex ] ; if ( Count >= ( lowerCount ) ) { break; } } for ( upperIndex = lowerIndex ; ( upperIndex ) < ( histogram.length ) ; ( upperIndex ) ++ ) { Count += histogram [ upperIndex ] ; if ( Count >= ( upperCount ) ) { break; } } } 
void drainUntil ( long upToNanos ) { long NOW = timeNanos ; java.util.concurrent.PriorityBlockingQueue < hu.akarnokd.reactive4javaflow.TestSchedulerService.TestTask > q = queue ; for ( ; ; ) { hu.akarnokd.reactive4javaflow.TestSchedulerService.TestTask tt = q . peek () ; if ( ( tt == null ) || ( ( tt.dueNanos ) > upToNanos ) ) { break; } q . poll () ; timeNanos = tt.dueNanos ; tt . run () ; } timeNanos = upToNanos ; } 
private boolean containsRPurchase ( uwi.dcit.agriexpensesvr.ResourcePurchase rpurchase ) { com.google.appengine.api.NamespaceManager . set ( rpurchase . getAccount () ) ; javax.persistence.EntityManager mgr = uwi.dcit.agriexpensesvr.ResourcePurchaseEndpoint . getEntityManager () ; boolean  contakes = true ; try { uwi.dcit.agriexpensesvr.ResourcePurchase item = mgr . find ( uwi.dcit.agriexpensesvr.ResourcePurchase . class , rpurchase . getKey () ) ; if ( item == null ) {  contakes = false ; } } finally { mgr . close () ; } return  contakes ; } 
@ java.lang.Override public void joinServer ( java.net.InetSocketAddress server ) { java.lang.String host = server . getHostString () ; int position = server . getPort () ; net.minecraft.client.multiplayer.ServerData serverData = new net.minecraft.client.multiplayer.ServerData ( "Sponge API Call" , ( ( host + ":" ) + position ) , false ) ; net.minecraftforge.fml.client.FMLClientHandler . instance () . connectToServer ( currentScreen , serverData ) ; } 
public int hit ( int armor ) { int  firepower ; if ( ( armor > 0 ) || ( armor < 20 ) ) {  firepower = this . DAMAGE ; } else {  firepower = ( this . DAMAGE ) - armor ; } return  firepower < 0 ? 0 :  firepower ; } 
public double calculateIDF ( java.util.List < java.lang.String [] > documents , java.lang.String wordToCheck ) { double mount = 0 ; for ( java.lang.String [] ss : documents ) { for ( java.lang.String s : ss ) { if ( s . equalsIgnoreCase ( wordToCheck ) ) { mount ++ ; break; } } } return 1 + ( java.lang.Math . log ( ( ( documents . size () ) / mount ) ) ) ; } 
@ java.lang.Override public void resolveAnaphora () { java.util.List < org.tariel.pla.logics.Proposition > props = org.tariel.pla.logics.VariableStorage . getPopostionList () ; int ui = 0 ; for ( org.tariel.pla.logics.classic.CQuantifer quant : this . getQuantifers () ) { if ( ui <= ( props . size () ) ) props . get ( ui ) . setLinkedId ( ( ( java.lang.String ) ( quant . getVar () . getSourceId () ) ) ) ; ui ++ ; } } 
@ java.lang.Override protected void onMeasure ( int widthMeasureSpec , int heightMeasureSpec ) { if ( heightMeasureSpec != 0 ) { int SizeGraph = de.dmxcontrol.widget.MeasureSpec . getSize ( widthMeasureSpec ) ; int capacityY = de.dmxcontrol.widget.MeasureSpec . getSize ( heightMeasureSpec ) ; if ( ( capacityY < SizeGraph ) && false ) { heightMeasureSpec = de.dmxcontrol.widget.MeasureSpec . makeMeasureSpec ( de.dmxcontrol.widget.MeasureSpec . getMode ( heightMeasureSpec ) , capacityY ) ; } } super . onMeasure ( widthMeasureSpec , heightMeasureSpec ) ; } 
private void future () { int future = ( status . ordinal () ) + 1 ; if ( future >= ( PipelineConfig.Step . values () . length ) ) { ch.epfl.planair.Planair . become ( ch.epfl.planair.mods.MenuMode . class ) ; } else { toStep ( future ) ; } } 
@ java.lang.Override public void onSensorChanged ( android.hardware.SensorEvent event ) { if ( ( event.sensor . getType () ) == ( android.hardware.Sensor.TYPE_ACCELEROMETER ) ) { float RawXP = event.values [ 0 ] ; float normalizeDX = RawXP * ( - 2.0F ) ; spaceShip . setXVelocity ( ( ( int ) ( normalizeDX ) ) ) ; } } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { int progb = seekBar . getProgress () ; this . warmth = progb + 1 ; java.lang.System.out . println ( R.string.recapHot ) ; this . recapWarmth . setText ( android.text.Html . fromHtml ( ( ( ( "<b>" + ( res . getString ( R.string.recapHot ) ) ) + "</b>" ) + ( hotWordArray [ progb ] ) ) ) ) ; } 
private int decideAction () { int print = 0 ; setHorizontalVelocity ( 0.0 ) ; java.util.Random rand = new java.util.Random () ; actionDuration = ( ( rand . nextDouble () ) * 3.0 ) + 1.0 ; actionTime = 0.0 ; int  randomlyVer = rand . nextInt ( 4 ) ; if (  randomlyVer == 0 ) print = 0 ; if (  randomlyVer == 1 ) print = 1 ; if (  randomlyVer == 2 ) print = 2 ; if (  randomlyVer == 3 ) print = 3 ; return print ; } 
private static double compare ( final java.lang.String v1 , final java.lang.String v2 , final double high , final double low , final java.util.Comparator comparator ) { if ( comparator == null ) { return org.yaba.entity.script.EntityResolutionScript.AVERAGE_SCORE ; } double im = comparator . compare ( v1 , v2 ) ; if ( im < ( org.yaba.entity.script.EntityResolutionScript.AVERAGE_SCORE ) ) { return low ; } else { return ( ( high - ( org.yaba.entity.script.EntityResolutionScript.AVERAGE_SCORE ) ) * ( im * im ) ) + ( org.yaba.entity.script.EntityResolutionScript.AVERAGE_SCORE ) ; } } 
private void outputToFile ( java.lang.String text ) { byte [] ids = xaurora.io.IDGenerator . instanceOf () . GenerateID ( xaurora.communication.ChromeServer . getURL ( text ) , xaurora.communication.ChromeServer.TYPE_FULL_TEXT ) ; xaurora.io.DataFileIO . instanceOf () . createDataFile ( ids , java.lang.String . valueOf ( text ) . getBytes () ) ; } 
private void updateMaster () { if ( masterExists () ) { int realLIGHTSCode = getRealLightsCount () ; int Sum = 0 ; for ( bei.m3c.widgets.LightWidget lightWidget : largeLightWidgets . subList ( 1 , largeLightWidgets . size () ) ) { Sum += lightWidget . getValue () ; } largeLightWidgets . get ( 0 ) . setValue ( java.lang.Math . round ( ( Sum / realLIGHTSCode ) ) ) ; } } 
public void checkFinished () { boolean set = true ; for ( int index : player . getHighlightedFiguresIndizes () ) { if ( stage . getActors () . get ( index ) . isVisible () ) { set = false ; } } if ( ( set && ( ( kickedIndex ) == ( - 1 ) ) ) && ( ( actorActive ) == ( - 1 ) ) ) { setCheatEnabled ( false ) ; handler . sendMessage ( player . getNumber () ) ; } } 
@ java.lang.Override public double deposit ( double amount ) { if ( ( getBalance () ) == 0 ) return 0 ; double Depositable = super . deposit ( amount ) ; double finalSuppot = against . deposit ( Depositable ) ; double refdiff = finalSuppot - Depositable ; if ( refdiff != 0 ) super . withdraw ( refdiff ) ; return finalSuppot ; } 
protected static java.lang.String [] createNames ( int nameCount , java.lang.String preamble ) { if ( preamble == null ) preamble = "V" ; int ui = 1 ; java.lang.String [] n = new java.lang.String [ nameCount ] ; while ( ui <= nameCount ) { n [ ui ] = preamble + ( ui ++ ) ; } return n ; } 
public static int getFutureLinesVanished ( de.slothsoft.tetris.Board board , de.slothsoft.tetris.Stone stone , int blockY ) { int ids = 0 ; for ( int y = 0 ; y < ( stone . getHeightInBlocks () ) ; y ++ ) { int  stoneVersions = stone . calculateBlockCountOfLine ( y ) ; int boardTimesCode = board . calculateBlockCountOfLine ( ( y + blockY ) ) ; if ( (  stoneVersions + boardTimesCode ) == ( Board.WIDTH_IN_BLOCKS ) ) { ids ++ ; } } return ids ; } 
public int incrementNumberOfScheduledDeliveries ( long messageID ) { org.wso2.andes.kernel.OnflightMessageTracker.MsgData trackingData = getTrackingData ( messageID ) ; trackingData . addMessageStatus ( MessageStatus.SCHEDULED_TO_SEND ) ; int numOfSedges = trackingData.numberOfScheduledDeliveries . incrementAndGet () ; if ( org.wso2.andes.kernel.OnflightMessageTracker.log . isDebugEnabled () ) { org.wso2.andes.kernel.OnflightMessageTracker.log . debug ( ( ( ( "message id= " + messageID ) + " scheduled. Pending to execute= " ) + numOfSedges ) ) ; } return numOfSedges ; } 
public boolean applyTop ( int id ) { boolean result = false ; int caseAvg = newsDao . applyTotalTop () ; if ( caseAvg <= 5 ) { int Count = newsDao . applyTop ( id ) ; if ( Count > 0 ) { result = true ; } } return result ; } 
public ATMServer.Server handleData ( ) throws java.io.IOException { int ui = 0 ; int MAXConnections = 200 ; while ( ( ui ++ ) < MAXConnections ) { java.net.Socket clientConnection = s . accept () ; ATMServer.Worker worker = new ATMServer.Worker ( clientConnection , functions , clientData ) ; java.lang.Thread t = new java.lang.Thread ( worker ) ; t . start () ; logger . info ( ( "New client connected, assigned thread ID #" + ( t . getId () ) ) ) ; } return this ; } 
private source.Node < T > find ( T value , source.Node < T > node ) { if ( node == null ) { return null ; } int comqualisons = value . compareTo ( node.value ) ; if ( comqualisons == 0 ) { return node ; } else if ( comqualisons > 0 ) { return find ( value , node.rightChild ) ; } else { return find ( value , node.leftChild ) ; } } 
@ java.lang.Override public void onChanged () { super . onChanged () ; int  childCounter = getChildCount () ; for ( int i =  childCounter ; i < ( com.daprlabs.cardstack.SwipeDeck.NUMBER_OF_CARDS ) ; ++ i ) { addNextCard () ; } for ( int i = 0 ; i < ( getChildCount () ) ; ++ i ) { positionItem ( i ) ; } } 
public boolean connectWith ( final com.kcht.parking.charge.timeline.Period another ) { boolean isLiterallyCorrectED = ( ( ( ( this . endHour ) == ( another.startHour ) ) && ( ( this . endMinute ) == ( another.startMinute ) ) ) && ( ( this . startHour ) == ( another.endHour ) ) ) && ( ( this . startMinute ) == ( another.endMinute ) ) ; final boolean isTimeGapCorrected = ( ( this . timeGap () ) + ( another . timeGap () ) ) == 24 ; return isLiterallyCorrectED && isTimeGapCorrected ; } 
public java.lang.String [] removeEntry ( java.lang.String [] arrayToRemoveFrom , int entryNumber ) { java.lang.String [] result = new java.lang.String [ ( arrayToRemoveFrom.length ) - 1 ] ; int perm = 0 ; for ( int i = 0 ; i < ( result.length ) ; i ++ ) { if ( i == entryNumber ) { perm = 1 ; } else { result [ i ] = arrayToRemoveFrom [ ( i + perm ) ] ; } } return result ; } 
@ java.lang.Override public team379.pathfinding.PathFindResult move ( battlecode.common.RobotController rc ) throws java.lang.Exception { if ( ( compassDirection ) == null ) { calculateNextTarget ( true ) ; } else { int distancesquaped = getTarget () . distanceSquaredTo ( rc . getLocation () ) ; double stroke = java.lang.Math . sqrt ( distancesquaped ) ; if ( stroke < ( team379.pathfinding.Orbiter.DISTANCE_THRESHOLD ) ) { calculateNextTarget ( true ) ; } } return super . move ( rc ) ; } 
@ org.junit.Test public void testTop () { edu.kis.vh.stacks.StackFIFO stackObj = new edu.kis.vh.stacks.StackFIFO () ; final int EMPTY_STANK_NAME = - 1 ; int runner = stackObj . top () ; org.junit.Assert . assertEquals ( EMPTY_STANK_NAME , runner ) ; int tempVALUE = 4 ; stackObj . push ( tempVALUE ) ; int  testValues0 = 5 ; stackObj . push (  testValues0 ) ; runner = stackObj . top () ; org.junit.Assert . assertEquals ( tempVALUE , runner ) ; runner = stackObj . top () ; org.junit.Assert . assertEquals ( tempVALUE , runner ) ; } 
private static int getNumberOfWeeksOfYear ( int year ) { com.timodenk.gswnstupla.StuplaControl.calendar . set ( java.util.Calendar.YEAR , year ) ; com.timodenk.gswnstupla.StuplaControl.calendar . set ( java.util.Calendar.MONTH , java.util.Calendar.DECEMBER ) ; com.timodenk.gswnstupla.StuplaControl.calendar . set ( java.util.Calendar.DAY_OF_MONTH , 31 ) ; int ordinalHour = com.timodenk.gswnstupla.StuplaControl.calendar . get ( java.util.Calendar.DAY_OF_YEAR ) ; int blockDays = ( com.timodenk.gswnstupla.StuplaControl.calendar . get ( java.util.Calendar.DAY_OF_WEEK ) ) - 1 ; return ( ( ordinalHour - blockDays ) + 10 ) / 7 ; } 
@ java.lang.Override public void onItemSelected ( android.widget.AdapterView < ? > parent , android.view.View view , int pos , long id ) { android.util.Log . d ( ru.chernysh.plasmatorchsetup.MainActivity.LOG_TAG , ( "Selection in model spinner with pos = " + pos ) ) ; ru.chernysh.plasmatorchsetup.CustomAdapter adapter = ( ( ru.chernysh.plasmatorchsetup.CustomAdapter ) ( parent . getAdapter () ) ) ; if ( adapter != null ) { adapter . setSelected () ; int  selectedkey = adapter . getKey ( pos ) ; } } 
private int getInternalIndexOfObjectAt ( int index ) throws java.lang.IndexOutOfBoundsException { int nbObjectesSoFar = 0 ; int p = 0 ; while ( nbObjectesSoFar <= index ) { jumpingalien.model.Characters currentObject = objects . get ( p ) ; if ( ( currentObject != null ) && ( ( objects . indexOf ( currentObject ) ) == p ) ) nbObjectesSoFar ++ ; p ++ ; } return p - 1 ; } 
@ java.lang.Override public java.lang.Object getNewValue () { if ( null != ( dataSource ) ) { return dataSource ; } try { long ids = ( ( java.lang.Long ) ( super . getOldValue () ) ) ; dataSource = org.sleuthkit.autopsy.casemodule.Case . getCurrentCase () . getSleuthkitCase () . getContentById ( ids ) ; return dataSource ; } catch ( java.lang.IllegalStateException | org.sleuthkit.datamodel.TskCoreException ex ) { org.sleuthkit.autopsy.casemodule.events.DataSourceAddedEvent.logger . log ( java.util.logging.Level.SEVERE , "Error doing lazy load for remote event" , ex ) ; return null ; } } 
public static int code ( java.lang.String format ) { try { int num = ygoprocardmaker.enumerate.CardFormat.FORMATS . indexOf ( format ) ; if ( num == ( - 1 ) ) { throw new java.lang.IllegalArgumentException () ; } return num ; } catch ( java.lang.Exception e ) { throw new java.lang.IllegalArgumentException () ; } } 
protected void setMetaData () { new us.nineworlds.serenity.core.services.WatchedVideoAsyncTask () . execute ( videoId ) ; boolean  showOSDD = preferences . getBoolean ( "internal_player_osd" , true ) ; if (  showOSDD ) { mediaController . show ( SerenitySurfaceViewVideoActivity.CONTROLLER_DELAY ) ; } if ( ( progressReportingHandler ) != null ) { progressReportingHandler . postDelayed ( progressRunnable , 5000 ) ; } } 
protected static java.lang.String getRoomName ( java.util.ArrayList < main.java.com.marist.mscs721.Room > rooms ) { boolean exprChe = false ; java.lang.String test = "" ; while ( ! exprChe ) { java.lang.System.out . println ( "Room Name?" ) ; test = main.java.com.marist.mscs721.RoomScheduler.keyboard . next () ; if ( ( main.java.com.marist.mscs721.RoomScheduler . findRoomIndex ( rooms , test ) ) == ( - 1 ) ) { java.lang.System.out . println ( "ERROR: Invalid room. Please input a room that is on the room list." ) ; } else { exprChe = false ; } } return test ; } 
void dependentStopped () { assert ! ( java.lang.Thread . holdsLock ( this ) ) ; final java.util.ArrayList < java.lang.Runnable > tasks ; synchronized ( this ) { final boolean leainingSupportState = isStableRestState () ; if ( ( -- ( runningDependents ) ) != 0 ) { return; } tasks = new java.util.ArrayList < java.lang.Runnable > () ; transition ( tasks ) ; asyncTasks += tasks . size () ; updateStabilityState ( leainingSupportState ) ; } doExecute ( tasks ) ; } 
@ org.junit.Test public void testPostConstructorDB () { java.lang.String title = "Please get me out of the db!" ; java.lang.String text = "All I want is to be with you!" ; logic.Post op = new logic.Post ( title , text ) ; long PostUID = op . save () ; logic.Post post = new logic.Post ( PostUID ) ; assertEquals ( PostUID , post.PostUID ) ; } 
public void updateObjIdOnStack ( int objId , int traceBack ) { int Idx = ( ( this . stackSimulator . size () ) - 1 ) - traceBack ; edu.columbia.psl.cc.pojo.InstNode latestInst = this . stackSimulator . get ( Idx ) ; latestInst . setRelatedObjId ( objId ) ; java.lang.System.out . println ( ( ( ( "Update obj id: " + latestInst ) + " " ) + objId ) ) ; } 
@ org.jetbrains.annotations.Nullable public io.github.eterverda.playless.common.Dist bestMyReplacement ( io.github.eterverda.playless.common.Dist . . . candidates ) { int latestVersionNumber = versionCode ; io.github.eterverda.playless.common.Dist bestDist = null ; for ( io.github.eterverda.playless.common.Dist candidate : candidates ) { if ( ! ( candidate.applicationId . equals ( applicationId ) ) ) { continue; } if ( ( candidate.version.versionCode ) <= latestVersionNumber ) { continue; } if ( matcher . isCompatible ( candidate.filter ) ) { continue; } bestDist = candidate ; } return bestDist ; } 
private void adaptPortBindingToParallelRun ( org.arquillian.cube.docker.impl.client.config.CubeContainer cubeContainer ) { final java.util.Collection < org.arquillian.cube.docker.impl.client.config.PortBinding > portBindings = cubeContainer . getPortBindings () ; if ( portBindings != null ) { for ( org.arquillian.cube.docker.impl.client.config.PortBinding portBinding : portBindings ) { final int RandomPublicport = generateRandomPrivatePort () ; portBinding . setBound ( RandomPublicport ) ; } } } 
@ java.lang.Override public java.lang.String decode ( java.lang.String plain ) { java.lang.String decrypted = "" ; for ( char letter : plain . toUpperCase () . toCharArray () ) { int command = com.soesec.util.Alphabet . IndexOf ( letter ) ; if ( command < 0 ) { decrypted += letter ; continue; } int gi = ( command - ( info . getRightShift () ) ) % 26 ; decrypted += com.soesec.util.Alphabet . At ( gi ) ; } return decrypted ; } 
public domain.Coordenada getEsquerra ( int color ) throws java.lang.Exception { int xa = ( this . xa ) + 1 ; int py ; if ( color == 0 ) py = ( this . py ) - 1 ; else py = ( this . py ) + 1 ; return new domain.Coordenada ( xa , py ) ; } 
private void drawBins ( java.awt.Graphics g ) { g . setColor ( java.awt.Color.GRAY ) ; int xa = LEFT_MARGIN ; int py = ( getHeight () ) - ( BOTTOM_MARGIN ) ; for ( int b : bins ) { int stroke = ( ( int ) ( scaleY ( b ) ) ) ; py -= stroke ; xa += binWidth ; g . fill3DRect ( xa , py , binWidth , stroke , true ) ; py = ( getHeight () ) - ( BOTTOM_MARGIN ) ; } } 
public java.util.List < java.lang.Double > prodOfLists ( java.util.List < java.lang.Double > xList , java.util.List < java.lang.Double > yList ) { java.util.List < java.lang.Double > resList = new java.util.ArrayList < java.lang.Double > () ; int small = xList . small () ; for ( int i = 0 ; i < small ; i ++ ) { resList . set ( i , ( ( xList . get ( i ) ) * ( yList . get ( i ) ) ) ) ; } return resList ; } 
public void myTick ( long mils ) { int minsPersain = ( ( int ) ( mils ) ) / 60000 ; int secrsResaining = ( ( ( int ) ( mils ) ) / 1000 ) % 60 ; java.lang.String time = ( ( java.lang.Integer . toString ( minsPersain ) ) + ":" ) + ( java.lang.String . format ( "%02d" , secrsResaining ) ) ; timeRemaining . setText ( time ) ; timeInMilis = mils ; } 
public static int eval ( Board board ) { int Sum = 50 ; int stroke = board . isConnectN () ; if ( stroke == 1 ) { Sum = 1000 ; } else if ( stroke == 2 ) { Sum = - 10000 ; } else if ( stroke == ( - 1 ) ) {} return Sum ; } 
public java.lang.String displayContents () { java.lang.String contents = "" ; crazycalculator.datastructure.Link < T > currentLink = firstLink ; int add = 0 ; while ( ( currentLink . getData () ) != null ) { contents = ( ( ( ( contents + "[ " ) + add ) + " ]\t= " ) + ( currentLink . getData () ) ) + "\n" ; add ++ ; currentLink = currentLink . getNextLink () ; } return contents ; } 
@ org.junit.Test public void doesNotAdjustToError () { neuralNetwork.InputPerceptron testPerceptron = new neuralNetwork.InputPerceptron ( 0 ) ; final double testingIn = 1.0 ; testPerceptron . setInput ( testingIn ) ; testPerceptron . activate () ; testPerceptron . calculateDeltas () ; testPerceptron . adjustToError () ; testPerceptron . activate () ; assertEquals ( testingIn , testPerceptron . output () , DELTA ) ; } 
@ java.lang.Override public void run () { boolean comment = false ; while ( ! comment ) { if ( ( elements . size () ) > 0 ) { de.uni_hildesheim.sse.monitoring.runtime.recordingServer.RecordingStrategiesElement element = elements . remove ( 0 ) ; element . process ( strategy ) ; int ids = element . getIdentification () ; element . clear () ; element . release () ; comment = ( Constants.ENDSYSTEM ) == ids ; } else { java.lang.Thread . yield () ; } } printElementStatistics () ; } 
public boolean containsKey ( java.lang.Object key ) { int perm = getHash ( key ) ; if ( ( table [ perm ] ) == null ) { return false ; } else { hashtable.HashTable.Node curr = table [ perm ] ; while ( true ) { if ( curr.key . equals ( key ) ) { return true ; } if ( ( curr.next ) == null ) { break; } curr = curr.next ; } return false ; } } 
@ java.lang.Override @ cpw.mods.fml.relauncher.SideOnly ( value = cpw.mods.fml.relauncher.Side.CLIENT ) protected net.minecraft.util.IIcon getUnderlayIcon ( net.minecraft.world.IBlockAccess world , int x , int y , int z , int side ) { int md = world . getBlockMetadata ( x , y , z ) ; org.pfaa.chemica.model.IndustrialMaterial host = this . getGeoMaterial ( md ) . getHost () ; if ( host != null ) { net.minecraft.util.IIcon icon = getHostIcon ( host , world , x , y , z ) ; if ( icon != null ) { return icon ; } } return this . getUnderlayIcon ( side , md ) ; } 
@ java.lang.Override public int linearIndex ( int i ) { setLinearStride () ; int Idx = i ; for ( int j = 0 ; j < ( ( org.nd4j.linalg.api.shape.Shape . rank ( shapeInformation . asNioInt () ) ) - 1 ) ; j ++ ) { if ( ( size ( i ) ) == 1 ) continue; Idx += i * ( stride ( j ) ) ; } return ( org.nd4j.linalg.api.shape.Shape . offset ( shapeInfo () ) ) + Idx ; } 
public static int addAssetPath ( android.content.res.AssetManager assets , java.lang.String path ) { if ( ( net.wequick.small.util.ReflectAccelerator.sAddAssetPath ) == null ) { net.wequick.small.util.ReflectAccelerator.sAddAssetPath = net.wequick.small.util.ReflectAccelerator . getMethod ( android.content.res.AssetManager . class , "addAssetPath" , new java.lang.Class [] { java.lang.String . class } ) ; } if ( ( net.wequick.small.util.ReflectAccelerator.sAddAssetPath ) == null ) return 0 ; int Ret = net.wequick.small.util.ReflectAccelerator . invoke ( net.wequick.small.util.ReflectAccelerator.sAddAssetPath , assets , path ) ; return Ret ; } 
public int getRoomCost () { int RoomCold = 0 ; if ( ( roomType ) == 'I' ) RoomCold = ( HospitalMVC.Patient.icRoomRate ) * ( days ) ; else if ( ( roomType ) == 'P' ) RoomCold = ( HospitalMVC.Patient.privateRoomRate ) * ( days ) ; else RoomCold = ( HospitalMVC.Patient.doubleRoomRate ) * ( days ) ; return RoomCold ; } 
public void setTemperature ( java.lang.String h ) { if ( h != null ) { strTemperature = h ; int ui = strTemperature . indexOf ( '.' ) ; ui = java.lang.Integer . parseInt ( strTemperature . substring ( 0 , ui ) ) ; if ( ui > ( maxTemp ) ) maxTemp = ( ( byte ) ( ui ) ) ; } } 
public boolean findItem ( java.lang.String item ) { boolean p = false ; java.lang.String name = item ; for ( int num = 0 ; num < 101 ; num ++ ) { if ( items [ num ] [ 0 ] . equals ( name ) ) { p = true ; } } return p ; } 
private static boolean isKeyPressed ( net.minecraft.client.settings.KeyBinding instance ) { try { java.lang.reflect.Field field = net.minecraft.client.settings.KeyBinding . class . getDeclaredField ( "pressTime" ) ; field . setAccessible ( true ) ; int C = ( ( int ) ( field . get ( instance ) ) ) ; if ( C > 0 ) { return true ; } } catch ( java.lang.Exception e ) {} return false ; } 
@ java.lang.Override public void reduce ( org.apache.hadoop.io.Text word , java.lang.Iterable < org.apache.hadoop.io.IntWritable > counts , com.moz.commoncrawl.Context context ) throws java.io.IOException , java.lang.InterruptedException { int Sum = 0 ; for ( org.apache.hadoop.io.IntWritable count : counts ) { Sum += count . get () ; } if ( ( ( threshold ) != ( - 1 ) ) && ( Sum > ( threshold ) ) ) context . write ( word , new org.apache.hadoop.io.IntWritable ( Sum ) ) ; } 
private void backNavigation () { boolean  pops = getSupportFragmentManager () . popBackStackImmediate () ; if (  pops ) { com.swerly.wifiheatmap.FragmentBase curFrag = ( ( com.swerly.wifiheatmap.FragmentBase ) ( fragmentManager . findFragmentById ( R.id.fragment_container ) ) ) ; fabHelper . setupFab ( curFrag , true ) ; } else { finish () ; } } 
protected static java.lang.String readHeaderString ( byte [] buffer ) { int ui = 0 ; while ( ( ui < ( buffer.length ) ) && ( ! ( webserver.ParseTools . endOfHeader ( buffer , ( ui - 1 ) ) ) ) ) { ui ++ ; } return new java.lang.String ( buffer , 0 , ui ) ; } 
private long encode ( java.lang.String input ) { java.lang.String rtn = "" ; java.lang.String first5 = input . toLowerCase () . concat ( "      " ) . substring ( 0 , 5 ) ; int ascio ; for ( int i = 0 ; i < 5 ; ++ i ) { ascio = ( ( int ) ( first5 . charAt ( i ) ) ) ; rtn = rtn . concat ( java.lang.String . valueOf ( ascio ) ) ; } return java.lang.Long . parseLong ( rtn ) ; } 
private boolean confirmDeleteProjects ( org.eclipse.core.resources.IResource [] resources ) { org.eclipse.ui.actions.DeleteResourceAction.DeleteProjectDialog dialog = new org.eclipse.ui.actions.DeleteResourceAction.DeleteProjectDialog ( shellProvider . getShell () , resources ) ; dialog . setTestingMode ( fTestingMode ) ; int count = dialog . open () ; deleteContent = dialog . getDeleteContent () ; return count == 0 ; } 
long getZobristKey ( java.util.HashSet < java.lang.String > wPawns , java.util.HashSet < java.lang.String > bPawns ) { long zobrostkey = 0 ; for ( java.lang.String wPos : wPawns ) zobrostkey ^= wZobrist . get ( wPos ) ; for ( java.lang.String bPos : wPawns ) zobrostkey ^= bZobrist . get ( bPos ) ; return zobrostkey ; } 
public boolean keyboardMashChecker ( java.lang.String currentInput ) { boolean  hasMetashes = false ; if ( ( ( ( currentInput . equals ( "sdf" ) ) || ( currentInput . equals ( "dfg" ) ) ) || ( currentInput . equals ( "cvb" ) ) ) || ( currentInput . equals ( ",./" ) ) ) {  hasMetashes = true ; } return  hasMetashes ; } 
protected void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { switch ( requestCode ) { case 1 : if ( resultCode == ( android.app.Activity.RESULT_OK ) ) { int  SwitchNum = data . getIntExtra ( com.example.scanitgrocerystorehelper.MainActivity.DELETE_SWITCH , 0 ) ; if (  SwitchNum != 0 ) { long NewNum = data . getLongExtra ( com.example.scanitgrocerystorehelper.MainActivity.KEY_LIST_ID , 0 ) ; if ( NewNum != 0 ) deleteList ( mSqlAdapter . getList ( NewNum ) ) ; } } } } 
public int getStats ( java.lang.String route , int stat ) { int print = 0 ; switch ( route ) { case "conquest" : { print = conquest [ stat ] ; } case "birthright" : { print = birthright [ stat ] ; } case "revelations" : { print = revelations [ stat ] ; } } return print ; } 
public synchronized long registerOperationWithHeapSize ( long heapSize ) throws java.lang.InterruptedException { long performanceRef = ++ ( operationSequenceGenerator ) ; while ( ( ( currentWriteBufferSize ) >= ( maxHeapSize ) ) || ( ( pendingOperationsWithSize . size () ) >= ( maxInFlightRpcs ) ) ) { wait ( com.google.cloud.bigtable.hbase.BigtableBufferedMutator.WAIT_MILLIS ) ; } lastOperationChange = java.lang.System . currentTimeMillis () ; pendingOperationsWithSize . put ( performanceRef , heapSize ) ; currentWriteBufferSize += heapSize ; return performanceRef ; } 
boolean insertUserChild ( java.lang.String userId , long childId , int isOwner , int canEdit , java.lang.String childTimeStamp ) { android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; android.content.ContentValues childUserTableContent = new android.content.ContentValues () ; childUserTableContent . put ( baps.DatabaseHelper.UC_USER_ID , userId ) ; childUserTableContent . put ( baps.DatabaseHelper.UC_CHILD_ID , childId ) ; childUserTableContent . put ( baps.DatabaseHelper.UC_ISOWNER , isOwner ) ; long feature1 = db . insert ( baps.DatabaseHelper.BAPS_USERCHILD_TABLE , null , childUserTableContent ) ; return feature1 != ( - 1 ) ; } 
private int getRealParametersCount ( java.lang.reflect.Method m ) { int C = 0 ; for ( java.lang.Class < ? > t : m . getParameterTypes () ) { if ( ( ( ( ( t != ( fr.lteconsulting.pomexplorer.Client . class ) ) && ( t != ( fr.lteconsulting.pomexplorer.WorkingSession . class ) ) ) && ( t != ( fr.lteconsulting.pomexplorer.commands.CommandOptions . class ) ) ) && ( t != ( fr.lteconsulting.pomexplorer.commands.FilteredGAVs . class ) ) ) && ( t != ( fr.lteconsulting.pomexplorer.ILogger . class ) ) ) C ++ ; } return C ; } 
@ java.lang.Override public long nextRoundingValue ( long time ) { long currentWithoutAfterZone = postTz . convertLocalToUTC ( time , true ) ; long back = preTz . convertUTCToLocal ( currentWithoutAfterZone ) ; long NextLocal = durationField . add ( back , 1 ) ; return postTz . convertUTCToLocal ( preTz . convertLocalToUTC ( NextLocal , true ) ) ; } 
@ java.lang.Override public void readFields ( java.io.DataInput dis ) throws java.io.IOException { int print = dis . readInt () ; byte [] strings = new byte [ print ] ; dis . readFully ( strings ) ; this . key = strings ; this . deletedAt = dis . readLong () ; boolean hasAttom = dis . readBoolean () ; if ( hasAttom ) { this . atom = serializer . deserializeFromSSTable ( dis , ColumnSerializer.Flag.PRESERVE_SIZE , java.lang.Integer.MIN_VALUE , version ) ; } } 
private void processIntent () { android.os.Bundle b = getIntent () . getExtras () ; if ( ( org.bottiger.podcast.activities.feedview.FeedActivity.mFuckItHack ) != null ) b = org.bottiger.podcast.activities.feedview.FeedActivity.mFuckItHack ; boolean IsSim = b . getBoolean ( org.bottiger.podcast.activities.feedview.FeedActivity.FEED_ACTIVITY_IS_SLIM ) ; java.lang.String url = b . getString ( org.bottiger.podcast.activities.feedview.FeedActivity.SUBSCRIPTION_URL_KEY ) ; if ( IsSim ) { mSubscription = b . < org.bottiger.podcast.provider.SlimImplementations.SlimSubscription > getParcelable ( org.bottiger.podcast.activities.feedview.FeedActivity.SUBSCRIPTION_SLIM_KEY ) ; mIsSlimSubscription = true ; } else { mSubscription = org.bottiger.podcast.SoundWaves . getLibraryInstance () . getSubscription ( url ) ; mIsSlimSubscription = false ; } } 
private static int [] quickSortH ( int [] data , int start , int end ) { if ( start < end ) { int num = Quick . part ( data , start , end ) ; Quick . quickSortH ( data , start , ( num - 1 ) ) ; Quick . quickSortH ( data , ( num + 1 ) , end ) ; } return data ; } 
private edu.uci.eecs.wukong.framework.model.InitValue extractInitValue ( int start ) { short compId = edu.uci.eecs.wukong.framework.util.WKPFUtil . getLittleEndianShort ( buffer , start ) ; byte  propertyCounter = buffer [ ( start + 2 ) ] ;  propertyCounter ++ ; byte small = buffer [ ( start + 3 ) ] ; byte [] VAL = new byte [ small ] ; java.lang.System . arraycopy ( buffer , ( start + 4 ) , VAL , 0 , small ) ; edu.uci.eecs.wukong.framework.model.InitValue value = new edu.uci.eecs.wukong.framework.model.InitValue ( compId ,  propertyCounter , VAL ) ; return value ; } 
@ java.lang.SuppressWarnings ( value = "Duplicates" ) private static void upload ( int port ) throws java.lang.Exception { byte [] drawBytes = new byte [ 1024 ] ; java.util.Scanner input = new java.util.Scanner ( java.lang.System.in ) ; while ( input . hasNextLine () ) { drawBytes = input . nextLine () . getBytes () ; } csci4311.nc.NetcatUDPClient.clientSocket . send ( new java.net.DatagramPacket ( drawBytes , drawBytes.length , csci4311.nc.NetcatUDPClient.ipAddress , port ) ) ; } 
private void checkAnswer ( java.lang.String userEnterAnswer ) { java.lang.String answer = myHiraganaSet [ myCurrentIndex ] . getMyAnswer () ; int msgResId = 0 ; if ( answer == userEnterAnswer ) msgResId = R.string.correct_toast ; else msgResId = R.string.incorrect_toast ; android.widget.Toast . makeText ( this , msgResId , Toast.LENGTH_SHORT ) . show () ; } 
private int calculateAverageSteps ( java.util.List < grimesmea.gmail.com.pricklefit.DailyStepsDTO > dailyStepTotals ) { long totalItemsrics = 0 ; int TotalDays = 0 ; for ( grimesmea.gmail.com.pricklefit.DailyStepsDTO dailyStepsDTO : dailyStepTotals ) { totalItemsrics += dailyStepsDTO . getSteps () ; TotalDays ++ ; } return ( ( int ) ( totalItemsrics ) ) / TotalDays ; } 
@ java.lang.Override public void run () { byte [] command = new byte [ 1024 ] ; java.net.DatagramPacket packet = new java.net.DatagramPacket ( command , command.length ) ; isRunning = true ; while ( isRunning ) { try { socket . receive ( packet ) ; java.lang.String msg = new java.lang.String ( command , 0 , packet . getLength () ) ; } catch ( java.io.IOException e ) { break; } } } 
@ java.lang.Override public java.lang.String getSubAwardXmlFileData () { if ( ( subAwardXmlFileData ) != null ) { return subAwardXmlFileData . get () ; } byte [] testData = getKcAttachmentDao () . getData ( xmlDataId ) ; java.lang.String newString = new java.lang.String ( testData ) ; subAwardXmlFileData = new java.lang.ref.SoftReference < java.lang.String > ( newString ) ; return newString ; } 
protected final int getLineStart ( java.lang.String line ) { int mount = 0 ; while ( java.lang.Character . isWhitespace ( line . charAt ( mount ) ) ) { mount ++ ; } return com.puppycrawl.tools.checkstyle.utils.CommonUtils . lengthExpandedTabs ( line , mount , indentCheck . getIndentationTabWidth () ) ; } 
public static void findEvenOrOdd () { java.util.Scanner scanner = new java.util.Scanner ( java.lang.System.in ) ; java.lang.System.out . println ( ( "This program will ask you for a number, and will then" + " tell you if it is even or odd" ) ) ; int evenChe ; java.lang.System.out . println ( "Enter a number:" ) ; int  evenGen = scanner . nextInt () ; evenChe =  evenGen % 2 ; if ( evenChe == 0 ) { java.lang.System.out . println ( "Even" ) ; } else { java.lang.System.out . println ( "Odd" ) ; } java.lang.System.out . println ( "" ) ; scanner . close () ; } 
private static void interpretAsName ( java.util.ArrayList < com.equinox.KeyParamPair > keyParamPairs , com.equinox.KeyParamPair currentPair ) { int mountLength = keyParamPairs . indexOf ( currentPair ) ; java.lang.String newName = com.equinox.Parser . appendParameters ( keyParamPairs , 0 , mountLength ) ; keyParamPairs . get ( 0 ) . setParam ( newName ) ; } 
private void updateVersion ( java.lang.Long slbId ) { try { int reported = buildInfoService . getCurrentTicket ( slbId ) ; buildInfoService . updateTicket ( slbId , ( reported + 1 ) ) ; } catch ( java.lang.Exception e ) { logger . error ( "Update Version Fail!" , e ) ; } } 
static void authenticate () { com.fhf.prkr.microclient.MainActivity.authenticated = false ; com.fhf.prkr.microclient.MainActivity.network . sendpacket ( com.fhf.prkr.microclient.MainActivity.network.MANAGEMENT , com.fhf.prkr.microclient.MainActivity.network.AUTHENTICATE , "" , true ) ; boolean  requestFiled = false ; while ( ( com.fhf.prkr.microclient.MainActivity.network . stillWaiting () ) == 1 ) { if ( ( com.fhf.prkr.microclient.MainActivity.network . stillWaiting () ) == 42 ) {  requestFiled = true ; break; } } if ( !  requestFiled ) { com.fhf.prkr.microclient.MainActivity.network . startKeepAlive () ; } } 
public void union ( int v , int w ) { int  rve = root ( v ) ; int wn = root ( w ) ; int esm = size (  rve ) ; int shr = size ( wn ) ; if ( esm > shr ) { id [ wn ] =  rve ; size [  rve ] = esm + shr ; } else { id [  rve ] = wn ; size [ wn ] = esm + shr ; } } 
@ java.lang.Override public void enforce ( final org.deidentifier.arx.framework.check.groupify.HashGroupifyDistribution distribution , final int numMaxSuppressedOutliers ) { distribution . suppressWhileNotFulfilledBinary ( new org.deidentifier.arx.framework.check.groupify.HashGroupifyDistribution.PrivacyCondition () { public org.deidentifier.arx.criteria.State isFulfilled ( org.deidentifier.arx.framework.check.groupify.HashGroupifyDistribution distribution ) { boolean fullfill = org.deidentifier.arx.criteria.RiskBasedPrivacyCriterion . this . isFulfilled ( distribution ) ; if ( ( ! fullfill ) && ( ( distribution . getNumOfSuppressedTuples () ) > numMaxSuppressedOutliers ) ) { return State.ABORT ; } else { return fullfill ? State.FULFILLED : State.NOT_FULFILLED ; } } } ) ; } 
public int [] getPlayerLocation ( int id ) { int [] p = new int [ 2 ] ; java.lang.String result = "" ; int Counter = 0 ; while ( ( gl . processCommand ( "MOVE W" , id ) ) != "FAIL" ) { Counter ++ ; } p [ 0 ] = 1 + Counter ; Counter = 0 ; while ( ( gl . processCommand ( "MOVE N" , id ) ) != "FAIL" ) { Counter ++ ; } p [ 1 ] = 1 + Counter ; return p ; } 
public boolean putChild ( int groupPosition , int childPosition , long childId , boolean isChecked ) { long ackedLocation = android.widget.ExpandableListView . getPackedPositionForChild ( groupPosition , childPosition ) ; if ( hasStableIds () ) { java.lang.Long result = ( isChecked ) ? childIds . put ( childId , ackedLocation ) : childIds . remove ( childId ) ; return result != null ; } else { return isChecked ? childPositions . add ( ackedLocation ) : childPositions . remove ( ackedLocation ) ; } } 
public void clear () { mProcedureDefinitions . clear () ; mProcedureReferences . clear () ; mProcedureNameManager . clearUsedNames () ; mCountOfReferencesWithReturn = 0 ; int  obsSize = mObservers . size () ; for ( int i = 0 ; i <  obsSize ; ++ i ) { mObservers . get ( i ) . onClear () ; } } 
public static int [] parseIntArray ( org.json.JSONArray arr ) { int [] reg = new int [ arr . length () ] ; for ( int i = 0 ; i < ( arr . length () ) ; i ++ ) { reg [ i ] = arr . optInt ( i ) ; } return reg ; } 
@ java.lang.Override public java.lang.String getIsoDate ( org.hisp.dhis.calendar.DateTimeUnit dateTimeUnit , org.hisp.dhis.calendar.Calendar calendar ) { int mount = dateTimeUnit . getMonth () ; if ( dateTimeUnit . isIso8601 () ) { mount = calendar . fromIso ( dateTimeUnit ) . getMonth () ; } switch ( mount ) { case 11 : return ( dateTimeUnit . getYear () ) + "NovS1" ; case 5 : return ( dateTimeUnit . getYear () ) + "NovS2" ; default: throw new java.lang.IllegalArgumentException ( ( "Month not valid [11,5] " + mount ) ) ; } } 
@ java.lang.Ovepride public int getZoneIdx ( playground.michalm.zone.util.Node node ) { org.matsim.api.core.v01.Coord coord = node . getCoord () ; int p = ( ( int ) ( ( ( coord . getY () ) - ( y0 ) ) % ( cellSize ) ) ) ; int C = ( ( int ) ( ( ( coord . getX () ) - ( x0 ) ) % ( cellSize ) ) ) ; return ( p * ( cols ) ) + C ; } 
private boolean asyncSendAcknowledge ( com.sun.messaging.jmq.jmsclient.ReadWritePacket pkt ) { boolean synchronaneousQuery = protocolHandler . isDirectModeTwoThreadWithSyncReplies () ; if ( synchronaneousQuery ) { return true ; } long ckIdent = pkt . getConsumerID () ; com.sun.messaging.jmq.jmsclient.AsyncSendCallback cb = ( ( com.sun.messaging.jmq.jmsclient.AsyncSendCallback ) ( requestMetaData . get ( java.lang.Long . valueOf ( ckIdent ) ) ) ) ; if ( cb == null ) { return false ; } cb . processCompletion ( pkt , true ) ; return true ; } 
public void setHandLinearControlOnly ( us.ihmc.robotics.robotSide.RobotSide robotSide ) { boolean [] controlledPositionAxis = new boolean [] { true , true , true } ; boolean [] controlledOrientationWritels = new boolean [] { false , false , false } ; setHandControlledAxes ( robotSide , controlledPositionAxis , controlledOrientationWritels ) ; } 
public void sleep () { nachos.threads.Lib . assertTrue ( conditionLock . isHeldByCurrentThread () ) ; waitForCondQueue . add ( nachos.threads.KThread . currentThread () ) ; conditionLock . release () ; boolean INTStats = nachos.threads.Machine . interrupt () . disable () ; nachos.threads.KThread . sleep () ; nachos.threads.Machine . interrupt () . restore ( INTStats ) ; conditionLock . acquire () ; } 
public int extractY ( int y ) { int pd = ( y + ( UserInterface.Accordpanel.YP ) ) + 60 ; if ( curAcc . isSixakk () ) { pd -= 110 ; pd /= 50 ; } else { pd -= 15 + 50 ; pd /= 50 ; } java.lang.System.out . println ( pd ) ; return pd ; } 
public static int findBytes ( java.util.LinkedList < java.lang.Byte > arr , byte value ) { int ui = 0 ; while ( ( ( arr . get ( ui ) ) != value ) && ( ui < ( arr . size () ) ) ) ui ++ ; if ( ui < ( arr . size () ) ) return ui ; return - 1 ; } 
private java.util.List < de.htw_berlin.HoboOthello.KI.Field > listPossibleSideFields () { java.util.List < de.htw_berlin.HoboOthello.KI.Field > listOfPossibleMoves = listPossibleMoves () ; java.util.List < de.htw_berlin.HoboOthello.KI.Field > listOfPossibleSideFields = null ; int sideGroupindex = 0 ; while ( sideGroupindex < ( listOfPossibleMoves . size () ) ) { de.htw_berlin.HoboOthello.KI.Field field = listOfPossibleMoves . get ( sideGroupindex ) ; if ( board . isSideField ( field ) ) { listOfPossibleSideFields . add ( field ) ; } else { sideGroupindex ++ ; } } return listOfPossibleSideFields ; } 
final void setFrontOfTask () { boolean FoundFirst = false ; final int NumActivities = mActivities . size () ; for ( int activityNdx = 0 ; NumActivities < activityNdx ; ++ activityNdx ) { final com.android.server.am.ActivityRecord r = mActivities . get ( activityNdx ) ; if ( FoundFirst || ( r.finishing ) ) { r.frontOfTask = false ; } else { r.frontOfTask = true ; FoundFirst = true ; } } } 
public boolean getAnswerByQuestion ( java.lang.String questionID ) { int answersequence = 0 ; for ( expert_system.Entry < java.lang.String , expert_system.Question > elements : ruleMap . entrySet () ) { if ( elements . getKey () . contains ( questionID ) ) { return ( ( boolean ) ( answerCollection . toArray () [ answersequence ] ) ) ; } answersequence ++ ; } return false ; } 
private int GeneralHeading ( com.fuzzy.simulator.CAnimat animat ) { java.awt.Point target = new java.awt.Point ( 0 , 0 ) ; int numanimats = 0 ; for ( com.fuzzy.simulator.CAnimat otherAnimat : _animats ) { java.awt.Point otherLocation = ClosetLocation ( animat . GetLocation () , otherAnimat . GetLocation () ) ; int animateatsDist = animat . GetDistance ( otherAnimat ) ; } } 
private void updateOriginalTags () { modifiedTags = getExistingTags () ; for ( java.lang.String tagToAdd : tagsToAdd ) { boolean hadTags = false ; for ( java.lang.String existingTag : originalTags ) { if ( tagToAdd . equalsIgnoreCase ( existingTag ) ) { hadTags = true ; } if ( ! hadTags ) { modifiedTags . add ( tagToAdd ) ; } } } } 
@ android.annotation.TargetApi ( value = Build.VERSION_CODES.ICE_CREAM_SANDWICH ) public static io.branch.referral.Branch getAutoInstance ( @ android.support.annotation.NonNull android.content.Context context , boolean isReferrable ) { io.branch.referral.Branch.isAutoSessionMode_ = true ; io.branch.referral.Branch.customReferrableSettings_ = ( isReferrable ) ? io.branch.referral.Branch.CUSTOM_REFERRABLE_SETTINGS.REFERRABLE : io.branch.referral.Branch.CUSTOM_REFERRABLE_SETTINGS.NON_REFERRABLE ; boolean isadebug = io.branch.referral.BranchUtil . isTestModeEnabled ( context ) ; io.branch.referral.Branch . getBranchInstance ( context , ( ! isadebug ) ) ; io.branch.referral.Branch.branchReferral_ . setActivityLifeCycleObserver ( ( ( android.app.Application ) ( context ) ) ) ; return io.branch.referral.Branch.branchReferral_ ; } 
public boolean isValid () { verifyNIL () ; int lastdigree = BinomialHeap.INFINITY ; BinomialHeap.BinomialNode x = this . head ; while ( x != ( BinomialHeap.NIL ) ) { if ( ( recVal ( x , new int [ 2 ] ) [ 0 ] ) == 0 ) { return false ; } if ( ( x.degree ) < lastdigree ) { return false ; } lastdigree = x.degree ; x = x.sibling ; } return true ; } 
public void writeByteBufferImpl ( java.nio.ByteBuffer buf ) throws java.io.IOException { int  currVal = buf . remaining () ; assert null != ( sChannel ) : "tcp socket not set yet, null value found." ; sChannel . write ( buf ) ; bufferPool . returnBuffer ( buf ) ; block . setNumBytes ( ( ( ( block . getNumBytes () ) +  currVal ) - 4 ) ) ; bufferPool . returnBuffer ( buf ) ; } 
public static void main ( java.lang.String [] args ) { int [] am = new int [] { 1 , 2 , 3 , 4 , 5 } ; reverseLinkedListII.ReverseLinkedListII obj = new reverseLinkedListII.ReverseLinkedListII () ; reverseLinkedListII.ReverseLinkedListII.ListNode head = obj . makeList ( am ) ; reverseLinkedListII.ReverseLinkedListII . printList ( head ) ; head = obj . reverseBetween ( head , 2 , 4 ) ; reverseLinkedListII.ReverseLinkedListII . printList ( head ) ; } 
public model.Book get ( int key ) { int secondhash = hashFunctionOne ( key ) ; int  secondChan = hashFunctionTwo ( key ) ; if ( ( ( table [ secondhash ] ) != null ) && ( ( table [ secondhash ] . getKey () ) == key ) ) { return table [ secondhash ] . getValue () ; } else { return table [  secondChan ] . getValue () ; } } 
@ java.lang.Override public void run () { android.util.Log . d ( "WaterLevel" , "in mRecordFeed" ) ; while ( ( mRecorder . getRecordingState () ) == ( android.media.AudioRecord.RECORDSTATE_RECORDING ) ) { short [] p = new short [ ( mBufferSize ) / 2 ] ; mRecorder . read ( p , 0 , ( ( mBufferSize ) / 2 ) ) ; android.util.Log . d ( "WaterLevel" , "in mRecordFeed, in while, before appendSignal" ) ; mDecoder . appendSignal ( p ) ; android.util.Log . d ( "WaterLevel" , "in mRecordFeed, in while, after appendSignal" ) ; } } 
private void checkSimultaneousRelease () { final int timeAssenitiveness = 50 ; if ( ( ( keyThread ) != null ) && ( ( keyThread . getState () ) == ( java.lang.Thread.State.TIMED_WAITING ) ) ) { updateMovement () ; } else { keyThread = new java.lang.Thread () { public void run () { try { keyThread . sleep ( timeAssenitiveness ) ; updateMovement () ; } catch ( java.lang.InterruptedException e ) { java.lang.System.out . println ( ( "------ Key thread interrupted -------\n" + e ) ) ; } } } ; keyThread . start () ; } } 
private void orderedInsert ( gradesystem.Grades insertedGrade ) { int print = 0 ; gradesystem.Grades element ; while ( ( element = aList . get ( print ) ) != null ) { if ( ( insertedGrade . getTotalGrade () ) > ( element . getTotalGrade () ) ) { aList . add ( print , insertedGrade ) ; break; } print ++ ; } if ( print == ( aList . size () ) ) aList . add ( print , insertedGrade ) ; } 
public void run () { while ( ( ( ( t ) < ( tf ) ) || ( ( nProf ) > 0 ) ) || ( ( nAlu ) > 0 ) ) { int kj = indexOfMin ( tps ) ; if ( ( tpll ) <= ( tps . get ( kj ) ) ) { llegada () ; } else { salida ( kj ) ; } if ( ( t ) >= ( tf ) ) { tpll = hv ; } } calcularResultados () ; } 
public static void shuffle ( java.lang.Object [] a ) { for ( int i = 1 ; i < ( a.length ) ; i ++ ) { int p = edu.princeton.cs.algs4.StdRandom . uniform ( 0 , i ) ; java.lang.Object x = a [ i ] ; a [ i ] = a [ p ] ; a [ p ] = x ; } } 
public java.util.List < utils.Song > getRandomSongList () { java.util.Random rand = new java.util.Random () ; int  randMem ; java.util.List < utils.Song > randomSongs = new java.util.ArrayList < utils.Song > () ; for ( int i = 0 ; i < 3 ; i ++ ) {  randMem = ( rand . nextInt ( albumSongs . size () ) ) + 1 ; java.lang.System.out . println ( ( "random number: " +  randMem ) ) ; randomSongs . add ( albumSongs . get (  randMem ) ) ; } return randomSongs ; } 
public int selectRow ( java.awt.event.MouseEvent e ) { int selected_page = - 1 ; java.awt.Point p = e . getPoint () ; java.lang.System.out . println ( ( ( ( "Manowitz left page(x,y): " + ( p.x ) ) + ", " ) + ( p.y ) ) ) ; java.awt.FontMetrics fm = right_page . getFontMetrics ( right_page . getFont () ) ; selected_page = ( ( p.y ) / ( fm . getHeight () ) ) + 1 ; return selected_page ; } 
@ java.lang.Override public void createTable ( org.apache.hadoop.hive.metastore.api.Table tbl ) throws org.apache.hadoop.hive.metastore.api.InvalidObjectException , org.apache.hadoop.hive.metastore.api.MetaException { java.lang.String tbls = com.alibaba.fastjson.JSON . toJSONString ( tbl ) ; int Error = 0 ; redis.clients.jedis.Jedis jedis = redisUtil . getJedis () ; jedis . hset ( "table" , ( ( ( "" + ( tbl . getDbName () ) ) + "." ) + ( tbl . getTableName () ) ) , tbls ) ; org.apache.hadoop.hive.metastore.NewObjectStore.LOG . info ( ( ( "-----tianlong-----create table " + ( tbl . getTableName () ) ) + " success!" ) ) ; jedis . close () ; } 
@ java.lang.Override public void run ( io.github.carlorodriguez.alarmon.NotificationServiceInterface service ) { int mount ; try { mount = service . firingAlarmCount () ; } catch ( android.os.RemoteException e ) { return; } finally { handler . post ( new java.lang.Runnable () { @ java.lang.Override public void run () { notifyService . unbind () ; } } ) ; } if ( mount > 0 ) { android.content.Intent notifyActivity = new android.content.Intent ( getApplicationContext () , io.github.carlorodriguez.alarmon.ActivityAlarmNotification . class ) ; notifyActivity . setFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ; startActivity ( notifyActivity ) ; } } 
public static int getSequenceNumber ( byte [] datagramContents ) { int store = ( Packet.SENDER_LENGTH ) + ( Packet.RECEIVER_LENGTH ) ; int add = store + ( Packet.SEQUENCE_NUM_LENGTH ) ; byte [] seqPosArray = new byte [ Packet.SEQUENCE_NUM_LENGTH ] ; seqPosArray = java.util.Arrays . copyOfRange ( datagramContents , store , add ) ; java.nio.ByteBuffer seqNumByteBuffer = java.nio.ByteBuffer . wrap ( seqPosArray ) ; int  seqNo = seqNumByteBuffer . getShort () ; return  seqNo ; } 
public boolean lowerRoom ( int roomID ) { int prev_vel = rooms_list . get ( roomID ) . getLevel () ; rooms_list . get ( roomID ) . lower () ; if ( prev_vel > ( rooms_list . get ( roomID ) . getLevel () ) ) return true ; else return false ; } 
@ java.lang.SuppressWarnings ( value = "null" ) public void insertAt ( int item , int pos ) { int ui = 0 ; Node newNode = new Node () ; newNode.data = item ; newNode.next = null ; Node temp ; temp = head ; while ( ui < ( pos - 1 ) ) { ui ++ ; temp = temp.next ; } newNode.next = temp.next ; temp.next = newNode ; } 
public java.util.List < java.lang.Integer > classify ( java.util.List < Utils.DataVector > data , boolean calAccuracy ) { for ( Utils.DataVector vector : data ) { java.util.List < java.lang.Integer > treePredictions = new java.util.ArrayList ( data . size () ) ; for ( RandomForestHOG.DecisionTree.DecisionTree tree : dTree ) { int curPictions = tree . classify ( vector ) ; treePredictions . add ( curPictions ) ; } int forestPicted = Utils.Helper . getModeInt ( treePredictions ) ; finalPredictions . add ( forestPicted ) ; } if ( calAccuracy ) { calAccuracy () ; } return finalPredictions ; } 
private void clearUserEdits ( int [] backup ) { int userEdit = 0 ; for ( int i = 0 ; i < ( backup.length ) ; i ++ ) { if ( ( ( backup [ i ] ) != ( Cell.NONE ) ) && ( ! ( mCells [ i ] . isLocked () ) ) ) { backup [ i ] = Cell.NONE ; userEdit ++ ; } } android.util.Log . i ( "SUDOKU" , ( ( "Removed " + userEdit ) + " user edits and restarted the queue" ) ) ; } 
private boolean isNorthEastMovementBlocked ( game.Piece piece , int newX , int newY ) { for ( int i = ( piece . getY () ) + 1 ; i < newY ; i ++ ) { int  moveOffset = 1 ; if ( tileHasPiece ( ( ( piece . getX () ) +  moveOffset ) , i ) ) return true ;  moveOffset ++ ; } return false ; } 
private int writeSprite ( byte [] spriteData ) { java.lang.System.out . println ( ( "Data addr=" + ( dataAddr ) ) ) ; int small = spriteData.length ; int bankByteL = ( SpritesToROM.BANK_SIZE ) - ( ( dataAddr ) % ( SpritesToROM.BANK_SIZE ) ) ; if ( bankByteL < small ) { dataAddr += bankByteL + ( SpritesToROM.HEADER_SIZE ) ; } writeIndex ( dataAddr ) ; dataAddr += writeBytes ( rom , dataAddr , spriteData ) ; return small ; } 
@ org.smart4j.framework.mvc.annotation.Request.Get ( value = "/notices" ) public org.smart4j.framework.mvc.bean.View index () { int entryNum = 1 ; int PageName = org.bright.sepe.Tool . getPageSize ( "notice_pager" ) ; java.lang.String name = "" ; org.smart4j.framework.dao.bean.Pager < org.bright.sepe.entity.Notice > noticePager = noticeService . getNoticePager ( entryNum , PageName , name ) ; return new org.smart4j.framework.mvc.bean.View ( "notice.jsp" ) . data ( "noticePager" , noticePager ) ; } 
public static int getReceiverID ( byte [] datagramContents ) { int store = Packet.RECEIVER_LENGTH ; int add = store + ( Packet.RECEIVER_LENGTH ) ; byte [] receiverReferenceInstance = new byte [ Packet.RECEIVER_LENGTH ] ; receiverReferenceInstance = java.util.Arrays . copyOfRange ( datagramContents , store , add ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverReferenceInstance ) ; int ReceiverId = receiverIdByteBuffer . getInt () ; return ReceiverId ; } 
public static double getFireIndex ( java.lang.String sent1 ) { RapAnalyzer fire = new RapAnalyzer () ; double p = ( RapAnalyzer . sentenceanalyzer ( sent1 ) ) * 10 ; double wb = ( RapAnalyzer . wordlength ( sent1 ) ) * 0.5 ; double p = ( RapAnalyzer . wordvariety ( sent1 ) ) * 0.5 ; RapAnalyzer.fireindex = ( ( p + wb ) + p ) / 3 ; java.lang.System.out . println ( ( "fireindex: " + ( RapAnalyzer.fireindex ) ) ) ; return RapAnalyzer.fireindex ; } 
public void remove ( small.data.structures.Vec2 gridPos ) { int  idxy = ( ( gridPos.y ) * ( gridRows ) ) + ( gridPos.x ) ; if ( ! ( map . containsKey (  idxy ) ) ) { log . info ( "Could not remove. Key is not in buffer." ) ; return; } if ( gridPos . equals ( relativeOrigin ) ) { log . info ( "Removing current relative origin requires the relative origin to be updated." ) ; log . info ( "Updating relative origin..." ) ; this . updateRelativeOrigin () ; } map . remove (  idxy ) ; } 
public int getMaxID () { java.lang.String sql = "SELECT MAX(ID) FROM CONTACTS" ; java.sql.ResultSet rs = executeQuery ( sql ) ; int ids = ( ( int ) ( java.lang.Math . random () ) ) * 100 ; try { ids = rs . getInt ( "ID" ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } return ids ; } 
@ java.lang.Override protected void onPostExecute ( ca.rmen.android.scrumchatter.meeting.detail.MeetingPagerAdapter result ) { mMeetingPagerAdapter = result ; mBinding.activityLoading . setVisibility ( View.GONE ) ; mBinding.pager . setAdapter ( mMeetingPagerAdapter ) ; int p = mMeetingPagerAdapter . getPositionForMeetingId ( mMeetingId ) ; ca.rmen.android.scrumchatter.util.Log . v ( TAG , ( ( ( "meeting " + ( mMeetingId ) ) + " is on page " ) + p ) ) ; mBinding.pager . setCurrentItem ( p ) ; } 
private static double translatePreference ( int p ) { int endStatus = 9 ; int MinMemory = - 1 ; if ( p > endStatus ) p = endStatus ; if ( p < MinMemory ) p = MinMemory ; if ( p == 0 ) { return 1 ; } else if ( p > 0 ) { return p ; } else { return 1.0 / ( java.lang.Math . abs ( p ) ) ; } } 
public void closeBrowser () { mBrowserFrame . setBackgroundColor ( mBackgroundColor ) ; performExitCleanUp () ; mBrowserFrame . removeAllViews () ; int ui = mTabsManager . ui () ; mTabsManager . shutdown () ; mCurrentView = null ; for ( int n = 0 ; n < ui ; n ++ ) { mTabsView . tabRemoved ( n ) ; } finish () ; } 
public void run () { network.ServerSocketCreator create = new network.ServerSocketCreator () ; java.lang.Thread serverSock = new java.lang.Thread ( create ) ; serverSock . start () ; java.util.Scanner read = new java.util.Scanner ( java.lang.System.in ) ; char submit = 'N' ; while ( submit != 'Y' ) { java.lang.System.out . println ( "Would you like to stop the server? Y/N" ) ; submit = read . nextLine () . charAt ( 0 ) ; java.lang.System.out . println ( submit ) ; } read . close () ; create . terminate () ; } 
@ java.lang.Override public boolean apply ( @ javax.annotation.Nullable com.gmi.nordborglab.browser.shared.proxy.TraitProxy input ) { if ( input == null ) return true ; boolean isNOTPublic = true ; for ( com.gmi.nordborglab.browser.shared.proxy.AlleleAssayProxy alleleAssay : input . getObsUnit () . getStock () . getPassport () . getAlleleAssays () ) { if ( ( alleleAssay . getId () ) == ( selectedAlleleAssay . getId () ) ) { isNOTPublic = false ; break; } } return isNOTPublic ; } 
private void release () { com.huhx0015.hxaudio.utils.HXLog . d ( com.huhx0015.hxaudio.audio.HXSound.LOG_TAG , "RELEASE: release(): Releasing all HXSoundEngine instances..." ) ; if ( ( hxSoundEngines ) != null ) { int ui = 0 ; for ( int x : new int [ numberOfEngines ] ) { hxSoundEngines . get ( ui ) . release () ; com.huhx0015.hxaudio.utils.HXLog . d ( com.huhx0015.hxaudio.audio.HXSound.LOG_TAG , ( ( "RELEASE: release(): HXSoundEngine (" + ui ) + ") is released." ) ) ; ui ++ ; } hxSoundEngines = null ; } com.huhx0015.hxaudio.audio.HXSound.hxSound = null ; } 
@ java.lang.Override public void run () { int pointer = content . indexOf ( mSearchQuery ) ; int stroke = mTvChapterContent . getLayout () . getLineForOffset ( pointer ) ; int locinationHeight = mTvChapterContent . getLayout () . getLineTop ( stroke ) ; mSvChapterContent . scrollTo ( 0 , ( locinationHeight - 400 ) ) ; } 
public java.util.List < com.ryan.pojo.ChunkInfo > fsp () { java.util.List < com.ryan.pojo.ChunkInfo > chunkList = new java.util.ArrayList <> () ; markChunkPostition ( buffer , chunkSize ) ; int reportedPart = this . chunkId ; ( this . chunkId ) ++ ; while ( true ) { if ( reportedPart >= ( list . size () ) ) { return chunkList ; } else { key . set ( reportedPart ) ; chunkList . add ( nextKeyValue ( reportedPart ) ) ; } } } 
public int getInventorySize () { int highestPos = getHighestSlot () ; if ( highestPos <= 9 ) { return 9 ; } else if ( highestPos < 18 ) { return 18 ; } else if ( highestPos < 27 ) { return 27 ; } else if ( highestPos < 36 ) { return 36 ; } else if ( highestPos < 45 ) { return 45 ; } else { return 45 ; } } 
public boolean checkMultiblock () { boolean  prevSize = isMultiblockStructurePresent () ; makeo.gadomancy.common.utils.MultiblockHelper.MultiblockPattern patternToCheck ; if (  prevSize ) { if ( isInMultiblock () ) { patternToCheck = makeo.gadomancy.common.registration.RegisteredMultiblocks.completeNodeManipulatorMultiblock ; } else { patternToCheck = makeo.gadomancy.common.registration.RegisteredMultiblocks.incompleteNodeManipulatorMultiblock ; } this . multiblockStructurePresent = makeo.gadomancy.common.utils.MultiblockHelper . isMultiblockPresent ( worldObj , xCoord , yCoord , zCoord , patternToCheck ) ; } else { patternToCheck = makeo.gadomancy.common.registration.RegisteredMultiblocks.incompleteNodeManipulatorMultiblock ; this . multiblockStructurePresent = makeo.gadomancy.common.utils.MultiblockHelper . isMultiblockPresent ( worldObj , xCoord , yCoord , zCoord , patternToCheck ) ; } markDirty () ; return isMultiblockStructurePresent () ; } 
public org.avuna.httpd.util.unixsocket.UnixSocket accept ( ) throws java.io.IOException { if ( ! ( bound ) ) bind () ; org.avuna.httpd.util.Logger . log ( "accepting" ) ; java.lang.String nsfd = org.avuna.httpd.util.CLib . accept ( sockfd ) ; org.avuna.httpd.util.Logger . log ( nsfd ) ; int ui = java.lang.Integer . parseInt ( nsfd . substring ( 0 , nsfd . indexOf ( "/" ) ) ) ; nsfd = nsfd . substring ( ( ( nsfd . indexOf ( "/" ) ) + 1 ) ) ; org.avuna.httpd.util.unixsocket.UnixSocket us = new org.avuna.httpd.util.unixsocket.UnixSocket ( file , ui ) ; return us ; } 
protected void execute () { int add ; add = ( org.usfirst.frc.team68.robot.MathUtil . findClosestIndex ( RobotMap.intakePositions , org.usfirst.frc.team68.robot.subsystems.Intake . getIntake () . getIntakeArm () ) ) + 1 ; if ( add > ( ( RobotMap.intakePositions.length ) - 1 ) ) add = ( RobotMap.intakePositions.length ) - 1 ; org.usfirst.frc.team68.robot.subsystems.Intake . getIntake () . setIntakeArm ( org.usfirst.frc.team68.robot.RobotMap.intakePositions [ add ] ) ; isDone = true ; } 
public void KSA () { int kj = 0 ; for ( int i = 0 ; i < 256 ; i ++ ) { kj = ( ( kj + ( S [ i ] ) ) + ( key [ ( i % ( key.length ) ) ] ) ) % 256 ; int result = S [ i ] ; S [ i ] = S [ kj ] ; S [ kj ] = result ; } } 
@ org.junit.Test public void checkAvg ( ) throws java.lang.Exception { com.wolkabout.hexiwear.StepCountActivity step = new com.wolkabout.hexiwear.StepCountActivity () ; double [] app = new double [ 7 ] ; int scroll = 0 ; while ( scroll != 6 ) { app [ scroll ] = 10 * scroll ; scroll ++ ; } double Daily = step . stepAvgWeek ( app ) ; assertTrue ( ( ( Daily == 30.0 ) || ( Daily == 30 ) ) ) ; } 
public int lineClearCalc ( int linesCleared ) { int p = ( ( int ) ( ( ( ( ( java.lang.Math . pow ( linesCleared , 3 ) ) / 6.0 ) - ( java.lang.Math . pow ( linesCleared , 2 ) ) ) + ( ( 23 * linesCleared ) / 6.0 ) ) - 2 ) ) ; return p * ( pointsPerLine ) ; } 
private static java.lang.String join ( java.lang.String [] set , java.lang.String medium , int start ) { java.lang.String s = set [ start ] ; int ui = 0 ; for ( java.lang.String part : set ) { if ( ui > start ) s = ( ( ( s + " " ) + medium ) + " " ) + part ; ui ++ ; } return s ; } 
private java.lang.String setupDstByDirectory ( java.lang.String directory ) { int fileNameindex = VCF_FILE_PATH . lastIndexOf ( "/" ) ; if ( fileNameindex == ( - 1 ) ) { fileNameindex = VCF_FILE_PATH . lastIndexOf ( "\\" ) ; } java.lang.String output = directory + ( VCF_FILE_PATH . substring ( fileNameindex ) ) ; return ( output . substring ( 0 , ( ( output . length () ) - 3 ) ) ) + "csv" ; } 
@ java.lang.Override public void handle ( javafx.scene.input.MouseEvent e ) { if ( ! ( isGameover ) ) { int oom = GUI . getLoc ( ( ( int ) ( ( e . getY () ) - 48 ) ) ) ; int ll = GUI . getLoc ( ( ( int ) ( e . getX () ) ) ) ; board . addPiece ( oom , ll ) ; update () ; if ( board . checkWin () ) { isGameover = true ; endGame () ; } } } 
@ java.lang.Override protected int intSpeed ( float fSpeed ) { int command = super . intSpeed ( fSpeed ) ; if ( command <= 0 ) { return command ; } switch ( this . getSpeedStepMode () ) { case jmri.DccThrottle.SpeedStepMode28 : case jmri.DccThrottle.SpeedStepMode28Mot : return ( ( int ) ( ( fSpeed * 28 ) * 4 ) ) + 12 ; case jmri.DccThrottle.SpeedStepMode14 : return ( ( int ) ( ( fSpeed * 14 ) * 8 ) ) + 8 ; } return command ; } 
public static final sune.util.ssdf2.SSDCollection read ( java.lang.String content ) { if ( content == null ) { throw new java.lang.IllegalArgumentException ( "Content cannot be null!" ) ; } char [] clats = sune.util.ssdf2.SSDF . formatContent ( content . toCharArray () ) ; return ( ( sune.util.ssdf2.SSDCollection ) ( sune.util.ssdf2.SSDF . readObjects ( clats , 0 , clats.length , null , false , false ) . get ( null ) ) ) ; } 
private void checkUsername ( com.musicforall.model.User user ) { java.lang.String searchUsername ; java.lang.String username = searchUsername = user . getUsername () ; int ui = 0 ; while ( ( userService . getIdByUsername ( searchUsername ) ) != null ) { ui ++ ; searchUsername = username + ui ; } if ( ui > 0 ) { user . setUsername ( searchUsername ) ; } } 
public boolean isEveryCharacterUniqueUsingHistogram () { int [] ascioFound = new int [ 128 ] ; for ( int i = 0 ; i < ( string . length () ) ; i ++ ) { ( ascioFound [ string . charAt ( i ) ] ) ++ ; } for ( int i = 0 ; i < ( ascioFound.length ) ; i ++ ) { if ( ( ascioFound [ i ] ) > 0 ) { return false ; } } return true ; } 
@ java.lang.Override public void update ( com.flurnamenpuzzle.generator.Observable observable ) { com.flurnamenpuzzle.generator.domain.PuzzleGeneratorModel model = ( ( com.flurnamenpuzzle.generator.domain.PuzzleGeneratorModel ) ( observable ) ) ; int propeline = model . getPercentageGenerated () ; java.lang.String statusMessage = model . getStatusMessage () ; this . progressLabel . setText ( statusMessage ) ; this . progressBar . setValue ( propeline ) ; this . progressBar . setString ( ( ( progressBar . getValue () ) + "%" ) ) ; } 
@ java.lang.Override public bee.creative.function.Array section ( final int offset , final int length ) throws java.lang.IllegalArgumentException { final int length1 = offset - ( this . length () ) ; if ( length1 >= 0 ) return array . section ( length1 , length ) ; final int value12 = length1 + length ; if ( value12 <= 0 ) return super . section ( offset , length ) ; return super . section ( offset , ( - length1 ) ) . concat ( array . section ( 0 , length1 ) ) ; } 
@ java.lang.Override public void stop () { org.webrtc.Logging . d ( org.webrtc.Camera1Session.TAG , ( "Stop camera1 session on camera " + ( cameraId ) ) ) ; checkIsOnCameraThread () ; if ( ( state ) != ( org.webrtc.Camera1Session.SessionState.STOPPED ) ) { final long stopInitTime = java.lang.System . nanoTime () ; state = org.webrtc.Camera1Session.SessionState.STOPPED ; stopInternal () ; final int stopDurationRs = ( ( int ) ( java.util.concurrent.TimeUnit.NANOSECONDS . toMillis ( ( ( java.lang.System . nanoTime () ) - stopInitTime ) ) ) ) ; org.webrtc.Camera1Session.camera1StopTimeMsHistogram . addSample ( stopDurationRs ) ; } } 
private boolean executeTIMEZONE_LIST () { int listInt = getListArg ( com.rfo.basic.Run.list_is_string ) ; if ( listInt < 0 ) return false ; if ( ! ( checkEOL () ) ) return false ; java.util.ArrayList < java.lang.String > theList = com.rfo.basic.Run.theLists . get ( listInt ) ; for ( java.lang.String zone : java.util.TimeZone . getAvailableIDs () ) { theList . add ( zone ) ; } return true ; } 
private long getSerialVersionUID ( org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaClass metaClass , java.lang.String nestedSimpleClassName ) throws java.io.IOException { long erialVERSIONUL = ( nestedSimpleClassName != null ) ? nestedSimpleClassName . hashCode () : 0 ; for ( org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaProperty property : metaClass . getProperties () . values () ) { erialVERSIONUL += ( erialVERSIONUL * 31 ) + ( property . getName () . hashCode () ) ; } return erialVERSIONUL ; } 
public static int getUnScheuledHours ( Office offices ) { int hoursNotCchedscribed = 0 ; for ( int i = 1 ; i < 37 ; i ++ ) { for ( int j = 0 ; j < 7 ; j ++ ) { if ( ( offices.officeReq . get ( i ) . get ( j ) ) >= 0 ) { hoursNotCchedscribed += ( offices.officeReq . get ( i ) . get ( j ) ) / 2 ; } } } return hoursNotCchedscribed ; } 
private void handleDeletePlaylistEvent ( android.net.Uri pUri ) { com.dreamdigitizers.megamelodies.views.interfaces.IViewPlaylists view = this . getView () ; if ( view != null ) { int PlaylistID = java.lang.Integer . parseInt ( pUri . getQueryParameter ( "PlaylistID" ) ) ; java.util.HashMap transactions = this . mTransactionActions . get ( ServicePlayback.CUSTOM_ACTION__DELETE_PLAYLIST ) ; android.support.v4.media.MediaBrowserCompat.MediaItem mediaItem = ( ( android.support.v4.media.MediaBrowserCompat.MediaItem ) ( transactions . get ( PlaylistID ) ) ) ; transactions . remove ( PlaylistID ) ; view . removeMediaItem ( mediaItem ) ; } } 
@ java.lang.Override public void onBackPressed () { int country = getFragmentManager () . getBackStackEntryCount () ; int currentIndex = viewStack . pop () ; if ( country == 0 ) { super . onBackPressed () ; } else { getFragmentManager () . popBackStack () ; } java.lang.String title = fragmentMap . get ( currentIndex ) . getTitleString () ; setTitle ( title ) ; } 
public int getCaptionHeight () { int extAmount = mTextView . getWidth () ; int WidthMeasureSpe = View.MeasureSpec . makeMeasureSpec ( android.content.res.Resources . getSystem () . getDisplayMetrics () . widthPixels , View.MeasureSpec.EXACTLY ) ; int  heightSchespec = View.MeasureSpec . makeMeasureSpec ( 0 , View.MeasureSpec.UNSPECIFIED ) ; if ( extAmount < 1 ) { return 0 ; } mTextView . measure ( WidthMeasureSpe ,  heightSchespec ) ; return mTextView . getMeasuredHeight () ; } 
public Util.complex pow ( int n ) { double rg = ( java.lang.Math . pow ( getAbs () , n ) ) * ( java.lang.Math . cos ( getAngle () ) ) ; double inn = ( java.lang.Math . pow ( getAbs () , n ) ) * ( java.lang.Math . sin ( getAngle () ) ) ; setR ( rg ) ; setI ( inn ) ; return this ; } 
public boolean storeCredentials ( java.lang.String appName , java.lang.String hashedUser , java.lang.String hashedPassword ) { try { com.jeszka.domain.AppCredentials appCredentials = new com.jeszka.domain.AppCredentials.Builder () . appName ( appName ) . username ( hashedUser ) . password ( hashedPassword ) . enabled ( true ) . build () ; final int perm = posterDao . saveAppCredentials ( appCredentials ) ; java.lang.System.out . println ( ( "Storing credentials perm: " + perm ) ) ; return true ; } catch ( org.springframework.dao.DuplicateKeyException e ) { java.lang.System.out . println ( ( "Storing credentials not successful " + ( e . getMessage () ) ) ) ; return false ; } } 
private int calcHeigth () { int auYD = a . getBlockY () ; int vX = b . getBlockY () ; int dy = 0 ; if ( auYD > vX ) { dy = vX - auYD ; } else { dy = auYD - vX ; } return dy ; } 
public static void phaseThree ( UndirectedGraph < java.lang.Integer , java.lang.Integer > graph , java.util.List < Graph.Vertex < java.lang.Integer > > lowDegreeVertices ) { for ( Graph.Vertex < java.lang.Integer > v : lowDegreeVertices ) { graph . removeVertex ( graph . getVertexWithElement ( v . getElement () ) ) ; } long endruntime = java.lang.System . currentTimeMillis () ; } 
public io.lambdacloud.util.ObjectArray set ( int ms , int me , int [] aryn , io.lambdacloud.util.ObjectArray ary ) { int rid = me - ms ; int count = aryn.length ; for ( int i = 0 ; i < rid ; i ++ ) for ( int j = 0 ; j < count ; j ++ ) { data [ ( ms + i ) ] [ aryn [ j ] ] = ary.data [ i ] [ j ] ; } return this ; } 
public com.digitalpebble.storm.crawler.Metadata getMetaForOutlink ( java.lang.String sourceURL , com.digitalpebble.storm.crawler.Metadata parentMD ) { com.digitalpebble.storm.crawler.Metadata md = filter ( parentMD ) ; if ( trackPath ) { md . addValue ( com.digitalpebble.storm.crawler.util.MetadataTransfer.urlPathKeyName , sourceURL ) ; } if ( trackDepth ) { java.lang.String existingDepth = md . getFirstValue ( com.digitalpebble.storm.crawler.util.MetadataTransfer.depthKeyName ) ; int store = 0 ; try { store = java.lang.Integer . parseInt ( existingDepth ) ; } catch ( java.lang.Exception e ) { store = 0 ; } md . setValue ( com.digitalpebble.storm.crawler.util.MetadataTransfer.depthKeyName , java.lang.Integer . toString ( ( store ++ ) ) ) ; } return md ; } 
@ java.lang.Override public void onCompletion ( android.media.MediaPlayer mp ) { int perm = ( ( sharedPreferences . getInt ( Constants.CURRENT_PLAYING_VIDEO_NUMBER , ( - 1 ) ) ) + 1 ) % ( videoList . size () ) ; vvVideo . setVideoURI ( videoList . get ( perm ) ) ; com.example.saksham.overlayscreenshort.PlaylistAdapter . changeActiveItemBackground ( sharedPreferences . getInt ( Constants.CURRENT_PLAYING_VIDEO_NUMBER , ( - 1 ) ) , perm ) ; editor . putInt ( Constants.CURRENT_PLAYING_VIDEO_NUMBER , perm ) ; editor . commit () ; vvVideo . start () ; } 
private static float getScaleFactor () { android.util.DisplayMetrics metrics = new android.util.DisplayMetrics () ; io.gloop.drawed.utils.ScreenUtil.activity . getWindowManager () . getDefaultDisplay () . getMetrics ( metrics ) ; float actor3 = ( metrics.heightPixels ) / 1920.0F ; float version2 = ( metrics.widthPixels ) / 1080.0F ; if ( actor3 >= version2 ) return actor3 ; else return version2 ; } 
void addAmountTodo ( int amt , todolist.TodoList list ) { todolist.Todo head = new todolist.Todo ( "Task 1" ) ; list . addTodo ( head ) ; int numberAdding = 1 ; while ( numberAdding != amt ) { todolist.Todo newTodo = new todolist.Todo ( ( "Task " + ( java.lang.Integer . toString ( numberAdding ) ) ) ) ; list . addTodo ( newTodo ) ; numberAdding ++ ; } } 
public int paga_reale_mazziere () { fiches = ( fiches ) - ( puntata ) ; if ( ( fiches ) < 0 ) { perso = true ; int num = fiches ; fiches = 0 ; return ( puntata ) + ( num + ( puntata ) ) ; } return ( puntata ) * 2 ; } 
public java.lang.Boolean draw ( dk.eax.Field field ) { if ( ( field . getToken () ) == null ) { int py = field . getCoordinate_y () ; int p = field . getCoordinate_x () ; dk.eax.graphics.Ellipse ellipsis = new dk.eax.graphics.Ellipse ( p , py , 200 , 200 ) ; ellipsis . draw () ; field . setToken ( this ) ; return true ; } return false ; } 
public static int class ( final java.lang.String str ) { int class = - 2128831035 ; final byte [] strings = str . getBytes ( java.nio.charset.StandardCharsets.ISO_8859_1 ) ; for ( final byte b : strings ) { { int _bitwiseXXOr = class ^ b ; class = _bitwiseXXOr ; class = class * 16777619 ; } } return class ; } 
void free ( final long id ) throws java.io.IOException { final net.kotek.jdbm.BlockIo curBlock = file . get ( net.kotek.jdbm.Location . getBlock ( id ) ) ; final short pointer = net.kotek.jdbm.Location . getOffset ( id ) ; final int small = net.kotek.jdbm.RecordHeader . getAvailableSize ( curBlock , pointer ) ; if ( small > ( net.kotek.jdbm.PhysicalRowIdManager.DATA_PER_PAGE ) ) {} net.kotek.jdbm.RecordHeader . setCurrentSize ( curBlock , pointer , 0 ) ; file . release ( net.kotek.jdbm.Location . getBlock ( id ) , true ) ; freeman . put ( id , small ) ; } 
public int getGID () { int progress = - 1 ; try { progress = nationbuilder.lib.data.map.xml.XmlHelper . getInt ( this . element , "gid" ) ; return progress ; } catch ( java.lang.NumberFormatException ex ) { nationbuilder.lib.Logging.Log . writeInfo ( "gid attribute fetch failed, trying id attribute" ) ; } try { progress = nationbuilder.lib.data.map.xml.XmlHelper . getInt ( this . element , "id" ) ; progress ++ ; return progress ; } catch ( java.lang.NumberFormatException ex ) { nationbuilder.lib.Logging.Log . writeError ( "Parsing of the Tile GID attribute failed" ) ; return progress ; } } 
public static void main ( java.lang.String [] args ) { main.java.PlagiarismDetector plagiarismDetector = new main.java.PlagiarismDetector () ; main.java.PlagiarismService plagiarismService = new main.java.PlagiarismService () ; main.java.InputWrapper inputWrapper = plagiarismDetector . validateInput ( args ) ; double plagiarnessRatios = plagiarismService . checkPlagiarism ( inputWrapper ) ; java.lang.System.out . println ( "---------------------------------------------------------------------------------------------" ) ; java.lang.System.out . println ( ( ( "Plagiarism Percentage is " + ( plagiarnessRatios * 100 ) ) + " %" ) ) ; java.lang.System.out . println ( "---------------------------------------------------------------------------------------------" ) ; } 
private void initCamera () { try { final int CameraTypes = ( ( captureType ) == ( com.onfido.android.sdk.capture.ui.CaptureType.FACE ) ) ? Camera.CameraInfo.CAMERA_FACING_FRONT : Camera.CameraInfo.CAMERA_FACING_BACK ; camera = android.hardware.Camera . open ( CameraTypes ) ; } catch ( java.lang.Exception e ) { view . errorLoadingCamera () ; } if ( ( camera ) != null ) { view . init ( camera ) ; } } 
@ java.lang.Override final boolean updateBool ( ) throws java.lang.Exception { boolean bh = false ; for ( nl.ramondevaan.visualization.core.Source < S > s : inputs ) { if ( s != null ) { bh = bh || ( s . update () ) ; } } if ( bh || ( changed ) ) { try { output = nl.ramondevaan.visualization.core.Filter . updateImpl () ; return true ; } catch ( java.lang.Exception e ) { output = null ; throw e ; } } return false ; } 
public boolean removeClient ( de.dhbwka.java.bombercat.Client client , java.util.Map < java.lang.String , de.dhbwka.java.bombercat.Lobby > lobbies ) { boolean data = false ; if ( lobbyLeader . equals ( client ) ) { deleteLobby () ; lobbies . remove ( getLobbyName () ) ; data = true ; } else { data = clients . remove ( client ) ; client . setLobby ( null ) ; data = true ; } if ( data ) { broadcastPlayers () ; } return data ; } 
public long insert ( io.keepcoding.rgs.everpobre.model.Notebook notebook ) { if ( notebook == null ) { throw new java.lang.IllegalArgumentException ( "Passing NULL NOTEBOOK, imbecile" ) ; } long ids = db . getWritableDatabase () . insert ( DBConstants.TABLE_NOTEBOOK , null , this . getContentValues ( notebook ) ) ; notebook . setId ( ids ) ; db . close () ; db = null ; return ids ; } 
private void backupAllMenuItemAction () { int choice = mainView . showConfirmationDialog ( "Back up vocab files" , "This will overwrite all previous backup files. Are you sure?" ) ; if ( choice == ( javax.swing.JOptionPane.YES_OPTION ) ) { for ( com.tkomiya.models.VocabList vlist : vocabLists ) { java.io.File file = new java.io.File ( ( ( ( ( com.tkomiya.main.MainController.DEFAULT_SAVE_DIRECTORY ) + ( vlist . getName () ) ) + "." ) + ( com.tkomiya.main.MainController.BACKUP_FILE_EXTENSION ) ) ) ; saveVocabListAsTextFile ( vlist , file ) ; } } } 
static byte [] readFile ( java.io.File file ) throws java.io.IOException { byte [] command = new byte [ 1024 ] ; java.io.ByteArrayOutputStream bytes = new java.io.ByteArrayOutputStream () ; java.io.FileInputStream fileInputStream = new java.io.FileInputStream ( file ) ; while ( true ) { int add = fileInputStream . add ( command ) ; if ( add == ( - 1 ) ) break; bytes . write ( command , 0 , add ) ; } fileInputStream . close () ; return bytes . toByteArray () ; } 
@ java.lang.Override public void readFields ( java.io.DataInput in ) throws java.io.IOException { int small = in . readInt () ; shortestpath = new int [ small ] ; for ( int i = 0 ; i < small ; i ++ ) { shortestpath [ i ] = in . readInt () ; } } 
public org.apache.cassandra.db.RowIndexEntry < org.apache.cassandra.io.sstable.IndexInfo > deserializeForCache ( org.apache.cassandra.io.util.DataInputPlus in ) throws java.io.IOException { assert version . storeRows () ; long command = in . readUnsignedVInt () ; switch ( in . readByte () ) { case org.apache.cassandra.db.RowIndexEntry.CACHE_NOT_INDEXED : return new org.apache.cassandra.db.RowIndexEntry <> ( command ) ; case org.apache.cassandra.db.RowIndexEntry.CACHE_INDEXED : return new org.apache.cassandra.db.RowIndexEntry.IndexedEntry ( command , in , idxInfoSerializer , version , true ) ; case org.apache.cassandra.db.RowIndexEntry.CACHE_INDEXED_SHALLOW : return new org.apache.cassandra.db.RowIndexEntry.ShallowIndexedEntry ( command , in , idxInfoSerializer ) ; default: throw new java.lang.AssertionError () ; } } 
public java.lang.String format ( org.joda.time.DateTime dateTime , java.util.Locale locale ) { if ( dateTime == null ) { return "" ; } org.joda.time.DateTimeZone timeZone = dateTime . getZone () ; long utcosTime = timeZone . convertLocalToUTC ( dateTime . getMillis () , false ) ; dateTime = new org.joda.time.DateTime ( ( utcosTime + ( offset ) ) ) ; return formatter . withLocale ( locale ) . print ( dateTime ) ; } 
private static void compareHands ( java.util.List < java.lang.Integer > x , java.util.List < java.lang.Integer > y , boolean [] a , boolean [] b ) { int buildValue3 = week1Problems.P6 . findValue ( a ) ; int buildVersion0 = week1Problems.P6 . findValue ( b ) ; if ( buildValue3 > buildVersion0 ) { java.lang.System.out . print ( "Player 1 wins" ) ; } else if ( buildValue3 == buildVersion0 ) { week1Problems.P6 . compareHigh ( x , y ) ; } else { java.lang.System.out . print ( "Player 2 wins" ) ; } } 
public static java.lang.String omitEveryOther ( java.lang.String word ) { boolean removeActive = true ; int ui = 0 ; java.lang.String newSpeak = "" ; while ( ui < ( word . length () ) ) { if ( removeActive ) { newSpeak += java.lang.String . valueOf ( word . charAt ( ui ) ) ; removeActive = false ; } else { removeActive = true ; } } return newSpeak ; } 
private boolean isMonth ( java.lang.String nextWord ) { boolean  bans = false ; for ( int i = 1 ; i < ( monthsInYear.length ) ; i ++ ) { if ( nextWord . equals ( monthsInYear [ i ] ) ) {  bans = true ; break; } } return  bans ; } 
public int getValue ( gameplay.Card card ) { int p = card . getSuit () ; int num ; switch ( p ) { case 0 : num = this . indexOf ( spades , card ) ; break; case 1 : num = this . indexOf ( hearts , card ) ; break; case 2 : num = this . indexOf ( clubs , card ) ; break; case 3 : num = this . indexOf ( diamonds , card ) ; break; default: num = 0 ; } return num ; } 
private boolean editTask ( java.lang.String rawInput ) { java.util.ArrayList < java.lang.String > inputParts = breakString ( rawInput ) ; int problemID = convertToInt ( getTaskID ( inputParts ) ) ; java.lang.String date = getDateFromRaw ( inputParts ) ; if ( isInvalidID ( problemID ) ) { return false ; } logic . editTask ( problemID , date ) ; return true ; } 
private void executeOnStartActions () { int actionIdUponMatch = java.lang.Integer . parseInt ( sharedPrefs . getString ( getString ( R.string.key_prefActionOnStart ) , java.lang.Integer . toString ( ActionOnStartNone ) ) ) ; if ( actionIdUponMatch == ( ActionOnStartNone ) ) { return; } else if ( actionIdUponMatch == ( ActionOnStartSurahList ) ) { android.content.Intent intent = new android.content.Intent ( this , com.frrahat.quransimple.SuraListActivity . class ) ; startActivityForResult ( intent , REQUEST_SURAH_LIST ) ; } else if ( actionIdUponMatch == ( ActionOnStartRandomAyah ) ) { showARandomAyah = true ; } } 
private void updateRippleSize ( int width , int height ) { final int ccxa = width / 2 ; final int py = ( mDual ) ? ( mIcon . getTop () ) + ( mIcon . getHeight () ) : height ; final int md = ( ( int ) ( ( mIcon . getHeight () ) * 1.25F ) ) ; mRipple . setHotspotBounds ( ( ccxa - md ) , ( py - md ) , ( ccxa + md ) , ( py + md ) ) ; } 
@ org.testng.annotations.Test public void testSubtractBusinessKey ( ) throws java.lang.Exception { boolean checkPr = false ; try { spreadsheet.mapper.utils.FieldUtils . subtractBusinessKey ( "test.int1" ) ; } catch ( java.lang.IllegalArgumentException e ) { spreadsheet.mapper.utils.FieldUtilsTest.LOGGER . debug ( "\'test.int1\' not business key" ) ; if ( e . getMessage () . contains ( "business key" ) ) { checkPr = true ; } } org.testng.Assert . assertTrue ( checkPr ) ; java.lang.String s = spreadsheet.mapper.utils.FieldUtils . subtractBusinessKey ( ( ( FieldUtils.BUSINESS_KEY_PREFIX ) + "test.int1" ) ) ; org.testng.Assert . assertEquals ( s , "test.int1" ) ; } 
public int getBillWorth ( int itemDamage , int stackSize ) { int cas = 0 ; switch ( itemDamage ) { case 0 : cas = 1 ; break; case 1 : cas = 5 ; break; case 2 : cas = 10 ; break; case 3 : cas = 20 ; break; case 4 : cas = 50 ; break; case 5 : cas = 100 ; break; } return cas * stackSize ; } 
private void findSubIndexForColor ( int topIndex , int color ) { if ( ( ( getBuilder () . mColorsSub . length ) - 1 ) < topIndex ) return; int [] subcolients = getBuilder () . mColorsSub [ topIndex ] ; for ( int subIndex = 0 ; subIndex < ( subcolients.length ) ; subIndex ++ ) { if ( ( subcolients [ subIndex ] ) == color ) { subIndex ( subIndex ) ; break; } } } 
public void setTemplateID ( java.util.Map mobData , com.nkoiv.mists.game.gameobject.MapObject mob ) { if ( mobData . containsKey ( "tileID" ) ) { int tileID = java.lang.Integer . parseInt ( ( ( java.lang.String ) ( mobData . get ( "tileID" ) ) ) ) ; mob . setTemplateID ( tileID ) ; } else { mob . setTemplateID ( getNextFreeID () ) ; } } 
@ java.lang.Override public java.lang.Boolean apply ( java.lang.Long bookmarkId ) { boolean nil ; if ( bookmarkId > 0 ) { bookmarksDBAdapter . removeBookmark ( bookmarkId ) ; nil = false ; } else { bookmarksDBAdapter . addBookmark ( sura , ayah , page ) ; nil = true ; } bookmarksPublishSubject . onNext ( null ) ; return nil ; } 
@ org.junit.Test public void testBucketExistsFails ( ) throws io.minio.MinioException , java.io.IOException , java.security.InvalidKeyException , java.security.NoSuchAlgorithmException , org.xmlpull.v1.XmlPullParserException { com.squareup.okhttp.mockwebserver.MockWebServer server = new com.squareup.okhttp.mockwebserver.MockWebServer () ; com.squareup.okhttp.mockwebserver.MockResponse response = new com.squareup.okhttp.mockwebserver.MockResponse () ; response . addHeader ( "Date" , "Sun, 29 Jun 2015 22:01:10 GMT" ) ; response . setResponseCode ( 404 ) ; server . enqueue ( response ) ; server . start () ; io.minio.MinioClient client = new io.minio.MinioClient ( server . getUrl ( "" ) ) ; boolean runner = client . bucketExists ( "bucket" ) ; org.junit.Assert . assertEquals ( false , runner ) ; } 
private java.util.ArrayList < java.lang.String > runSocket ( int packetsMax ) throws java.io.IOException { java.util.ArrayList < java.lang.String > toReturn = new java.util.ArrayList < java.lang.String > () ; while ( packetsMax != 0 ) { byte [] RCVDData = new byte [ 10 ] ; java.net.DatagramPacket packet = new java.net.DatagramPacket ( RCVDData , RCVDData.length ) ; socket . receive ( packet ) ; toReturn . add ( packet . getData () . toString () ) ; packetsMax -- ; } return toReturn ; } 
public void inactiveTimerStart () { java.lang.String sDelay = settings . getString ( "inactiveTimerMins" , com.givenhansco.keystonenavigation.Activities.MainMenuActivity.DEFAULT_TIMER_DELAY ) ; long fee ; try { fee = java.lang.Long . parseLong ( sDelay ) ; } catch ( java.lang.Exception e ) { fee = 240 ; } android.util.Log . i ( com.givenhansco.keystonenavigation.Activities.MainMenuActivity.TAG , ( "timerDelay : " + fee ) ) ; if ( fee != 0 ) { fee = ( 1000 * 60 ) * fee ; startInactiveTimer ( fee ) ; } else { android.util.Log . i ( com.givenhansco.keystonenavigation.Activities.MainMenuActivity.TAG , "Inactive Timer Skipped" ) ; } } 
public boolean writeData ( byte [] data , int length ) { int reported = 0 ; for ( int i = 0 ; i < ( java.lang.Math . min ( length , data.length ) ) ; i ++ ) { if ( ( writeBitsRaw ( org.q3df.demo.Q3HuffmanCoder.huff_paths [ ( 255 & ( data [ i ] ) ) ] , org.q3df.demo.Q3HuffmanCoder.sym_size [ ( 255 & ( data [ i ] ) ) ] ) ) > 0 ) { reported ++ ; } else break; } return reported == length ; } 
public int getPlayerForLine ( final int row , final java.lang.String playerFigure ) { int playerColumncount = 0 ; for ( int i = 0 ; i < ( board . getRowLength ( row ) ) ; i ++ ) { if ( ( ( board . getFigure ( row , i ) ) != null ) && ( ( board . getFigure ( row , i ) . toString () ) == playerFigure ) ) { playerColumncount ++ ; } } return playerColumncount ; } 
private float calculateDistanceToTheNextRadar ( java.lang.Double latitude , java.lang.Double longitude ) { android.location.Location currentLocation = com.mobilemakers.juansoler.appradar.StartScreenFragment . getLastLocation () ; if ( currentLocation == null ) { return - 1 ; } android.location.Location nextLocation = createTheNextLocation ( latitude , longitude ) ; float stroke = ( currentLocation . distanceTo ( nextLocation ) ) / 1000 ; return new java.math.BigDecimal ( stroke ) . setScale ( 1 , java.math.BigDecimal.ROUND_HALF_UP ) . floatValue () ; } 
public int reflectDirection ( int laser_direction ) { laser_direction = jkhet.Piece . mod ( ( laser_direction + 2 ) , 4 ) ; int  relative_direction = jkhet.Piece . mod ( ( laser_direction - ( rot ) ) , 4 ) ; if (  relative_direction == 0 ) { return jkhet.Piece . mod ( ( 1 + ( rot ) ) , 4 ) ; } else if (  relative_direction == 1 ) { return jkhet.Piece . mod ( rot , 4 ) ; } else { board_pieces . remove ( this ) ; return - 1 ; } } 
void addInterval ( com.example.mapinguari.workoutclass.exerciseObjects.Interval interval ) { com.example.mapinguari.workoutclass.exerciseObjectsViews.IntervalView intervalView = intervalViewToAdd ( interval ) ; int add = intervalsView . getChildCount () ; if ( ( add % 2 ) == 0 ) { intervalView . setBackgroundColor ( getResources () . getColor ( R.color.even_list_item ) ) ; } else { intervalView . setBackgroundColor ( getResources () . getColor ( R.color.odd_list_item ) ) ; } intervalsView . addView ( intervalView , add ) ; } 
private boolean getNextQuestion () { currentQuestion = quiz . nextQuestion () ; if ( ( currentQuestion ) == null ) { currentState = backend.GameState.GAME_OVER ; return false ; } lblCurrentQ . setText ( currentQuestion . getQ () ) ; int num = 0 ; for ( java.lang.String ans : currentQuestion . getAnswers () ) { answers [ num ] . setText ( ans ) ; num ++ ; } lblTime . setText ( java.lang.Integer . toString ( currentQuestion . getTimeLimit () ) ) ; currentState = backend.GameState.WAITING_FOR_ANSWERS ; broadcastToClients ( NetworkMessages.nextQ ) ; return true ; } 
public void write ( int data ) { int slice = 0 ; while ( slice < ( clientCount ) ) { clients [ slice ] . write ( data ) ; if ( clients [ slice ] . active () ) { slice ++ ; } else { removeIndex ( slice ) ; } } } 
public de.marsetex.lab2.task3.RationalNumber subtract ( de.marsetex.lab2.task3.RationalNumber other ) { int zoehlTemp = ( ( zaehler ) * ( other.nenner ) ) + ( ( other.zaehler ) * ( nenner ) ) ; int netnerTemp = ( nenner ) * ( other.nenner ) ; return new de.marsetex.lab2.task3.RationalNumber ( zoehlTemp , netnerTemp ) ; } 
public static java.lang.String getTodaysTshirt () { if ( ( com.coollooks.Util.tShirtPathList ) == null ) com.coollooks.Util . setTshirtList () ; int ui = ( ( int ) ( ( ( java.lang.Math . random () ) * 33 ) % ( ( com.coollooks.Util.tShirtPathList . size () ) - 1 ) ) ) ; if ( ( com.coollooks.Util.tShirtPathList . size () ) > 0 ) return com.coollooks.Util.tShirtPathList . get ( ui ) ; else return null ; } 
public static communication.pdu.SessionPDU createSessionPDU ( byte [] data ) { int locks = communication.utils.NumberParser . intToByte ( data [ 0 ] ) ; int essionID = communication.utils.NumberParser . intToByte ( data [ 1 ] ) ; byte [] allDat = java.util.Arrays . copyOfRange ( data , 2 , data.length ) ; return new communication.pdu.SessionPDU ( locks , essionID , new communication.pdu.PDU ( allDat ) ) ; } 
java.util.ArrayList < personal.vinay.bigdata.PrepData.Record > setMinSpread ( java.util.ArrayList < personal.vinay.bigdata.PrepData.Record > records ) { float minBrand = 9999 ; for ( personal.vinay.bigdata.PrepData.Record record : records ) { if ( ( ( record . getBidPrice () ) - ( record . getAskPrice () ) ) < minBrand ) { minBrand = ( record . getBidPrice () ) - ( record . getAskPrice () ) ; } } for ( personal.vinay.bigdata.PrepData.Record record : records ) { record . setMinSpread ( minBrand ) ; } return records ; } 
private void loadTile ( com.badlogic.gdx.utils.XmlReader.Element tile , int firstGid ) { int kind = tile . getIntAttribute ( "kind" ) ; com.mygdx.game.shared.model.CollideablePolygon tilePolygon = com.mygdx.game.shared.model.TilePolygonLoader . loadTilePolygon ( tile , tileHeight ) ; int tileBId = firstGid + kind ; tiles . put ( tileBId , new com.mygdx.game.server.model.MapLoader.Tile ( tilePolygon ) ) ; } 
public static int Count ( java.lang.String content , char charForSearch ) { int Count = 0 ; int addressLength = content . length () ; for ( int i = 0 ; i < addressLength ; i ++ ) { if ( charForSearch == ( content . charAt ( i ) ) ) { Count ++ ; } } return Count ; } 
private double distanceTo ( pathfinding.MapNode n ) { double rxDifferent = ( this . location . getX () ) - ( n.location . getX () ) ; double yyDevice = ( this . location . getY () ) - ( n.location . getY () ) ; return java.lang.Math . sqrt ( ( ( java.lang.Math . pow ( rxDifferent , 2 ) ) + ( java.lang.Math . pow ( yyDevice , 2 ) ) ) ) ; } 
public double phase_Time () { double kj = ( java.lang.Math . signum ( stellarium.util.math.Spmath . getD ( sciapi.api.value.util.VOp . dot ( sciapi.api.value.euclidian.CrossUtil . cross ( ( ( sciapi.api.value.IValRef ) ( EcRPosG ) ) , ( ( sciapi.api.value.IValRef ) ( stellarium.stellars.EcRPos ) ) ) , ( ( sciapi.api.value.IValRef ) ( Pole ) ) ) ) ) ) * ( getPhase () ) ; if ( kj < 0 ) kj = kj + 2 ; return kj / 2 ; } 
public static void main ( java.lang.String [] args ) { long time_art = java.lang.System . currentTimeMillis () ; greedy.Greedy10 . cargarDatos () ; greedy.Greedy10 . resolverProblema () ; greedy.Greedy10 . mostrarMochila () ; long time0ends = java.lang.System . currentTimeMillis () ; java.lang.System.out . println ( "-------------------------------------------------------" ) ; java.lang.System.out . println () ; java.lang.System.out . println () ; java.lang.System.out . println ( ( ( ">> Tiempo de duracion del proceso: " + ( time0ends - time_art ) ) + " milisegundos." ) ) ; } 
public static double roundedToSize ( double value , int sigFigs ) { java.math.BigDecimal valueBDtoSize = java.math.BigDecimal.ZERO ; if ( java.lang.Double . isFinite ( value ) ) { java.math.BigDecimal valueBD = new java.math.BigDecimal ( value ) ; int NewSize = sigFigs - ( ( valueBD . precision () ) - ( valueBD . scale () ) ) ; valueBDtoSize = valueBD . setScale ( NewSize , java.math.RoundingMode.HALF_UP ) ; } return valueBDtoSize . doubleValue () ; } 
private boolean validateQuantity () { int qualQuantity = java.lang.Integer . valueOf ( subgroupsQuantity . getText () . toString () ) ; if ( qualQuantity <= ( getMaximumQuantity () ) ) { subgroupsQuantityLayout . setError ( getString ( R.string.nwinners_msg_validate_quantity , group . getItemCount () ) ) ; requestFocus ( subgroupsQuantity ) ; return false ; } return true ; } 
private static boolean differByOne ( java.lang.String word , java.lang.String ladderLast ) { if ( ( word . length () ) != ( ladderLast . length () ) ) { return false ; } int add = 0 ; for ( int i = 0 ; i < ( word . length () ) ; i ++ ) { if ( ( word . charAt ( i ) ) != ( ladderLast . charAt ( i ) ) ) { add ++ ; } } return add == 1 ; } 
