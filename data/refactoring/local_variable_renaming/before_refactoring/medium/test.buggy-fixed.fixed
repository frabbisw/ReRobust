public boolean find ( java.lang.String findWhat , boolean matchCase , boolean wholeWord ) { if ( ( findWhat == null ) || ( findWhat . isEmpty () ) ) return false ; if ( updateMatcher ) { matcher = createMatcher ( findWhat , matchCase , wholeWord ) ; updateMatcher = false ; } boolean found = matcher . find () ; if ( found ) textPane . select ( matcher . start () , matcher . end () ) ; return found ; } 
public csc668assignment1.Transaction readNextTransaction () { if ( ( ( _transactions ) == null ) || ( ! ( _transactions . hasNext () ) ) ) return null ; else { java.lang.String name = _transactions . getName () ; java.lang.String upc = _transactions . getUPC () ; int quantity = _transactions . getQuantity () ; csc668assignment1.Payments.Payment payment = _transactions . getPayment () ; return new csc668assignment1.Transaction ( name , upc , quantity , payment ) ; } } 
@ java.lang.Override public int hashCode () { int result = ( ( color ) != null ) ? color . hashCode () : 0 ; result = ( 31 * result ) + ( type . hashCode () ) ; result = ( 31 * result ) + ( ( image ) != null ? image . hashCode () : 0 ) ; return result ; } 
public int parseRaceNumber () { int start = this . name . indexOf ( "_" ) ; int stop = this . name . indexOf ( "_" , ( start + 1 ) ) ; if ( ( start != ( - 1 ) ) && ( stop != ( - 1 ) ) ) { java.lang.String sRaceNumber = this . name . substring ( ( start + 1 ) , stop ) ; this . raceNumber = java.lang.Integer . parseInt ( sRaceNumber ) ; return this . raceNumber ; } else return 1 ; } 
public void reduce ( org.apache.hadoop.io.Text key , java.lang.Iterable < org.apache.hadoop.io.DoubleWritable > values , org.apache.hadoop.mapreduce.Reducer.Context context ) throws java.io.IOException , java.lang.InterruptedException { double tmppr = 0.0 ; for ( org.apache.hadoop.io.DoubleWritable val : values ) { tmppr += val . get () ; } title . set ( key ) ; err . set ( java.lang.String . valueOf ( tmppr ) ) ; context . write ( title , err ) ; } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent evt ) { final int index = tblProducts . getSelectedRow () ; final io.github.davidg95.JTill.jtillserver.WasteItem it = wasteItems . get ( index ) ; final io.github.davidg95.JTill.jtillserver.Product p = it . getProduct () ; if ( index == ( - 1 ) ) { return; } if ( ( javax.swing.JOptionPane . showInternalConfirmDialog ( this , ( "Are you sure you want to remove this item?\n" + p ) , "Stock Item" , javax.swing.JOptionPane.YES_NO_OPTION ) ) == ( javax.swing.JOptionPane.YES_OPTION ) ) { wasteItems . remove ( index ) ; updateTable () ; } } 
public static void mergeDelimitedFrom ( com.google.protobuf.Message.Builder builder , java.io.InputStream in ) throws java.io.IOException { final int firstByte = in . read () ; if ( firstByte == ( - 1 ) ) {} else { final int size = com.google.protobuf.CodedInputStream . readRawVarint32 ( firstByte , in ) ; final java.io.InputStream limitedInput = new org.apache.hadoop.hbase.io.LimitInputStream ( in , size ) ; final com.google.protobuf.CodedInputStream codedInput = com.google.protobuf.CodedInputStream . newInstance ( limitedInput ) ; codedInput . setSizeLimit ( size ) ; builder . mergeFrom ( codedInput ) ; codedInput . checkLastTagWas ( 0 ) ; } } 
private static void addBodyIfExists ( java.net.HttpURLConnection connection , com.android.volley.Request < ? > request ) throws com.android.volley.AuthFailureError , java.io.IOException { byte [] body = request . getBody () ; connection . addRequestProperty ( com.android.volley.toolbox.HurlStack.HEADER_CONTENT_TYPE , request . getBodyContentType () ) ; if ( body != null ) { connection . setDoOutput ( true ) ; java.io.DataOutputStream out = new java.io.DataOutputStream ( connection . getOutputStream () ) ; out . write ( body ) ; out . close () ; } } 
protected java.util.List < com.orientechnologies.orient.server.distributed.ODistributedResponse > getConflictResponses () { final java.util.List < com.orientechnologies.orient.server.distributed.ODistributedResponse > servers = new java.util.ArrayList < com.orientechnologies.orient.server.distributed.ODistributedResponse > () ; int bestGroupSoFar = getBestResponsesGroup () ; for ( int i = 0 ; i < ( responseGroups . size () ) ; ++ i ) { if ( i != bestGroupSoFar ) { for ( com.orientechnologies.orient.server.distributed.ODistributedResponse r : responseGroups . get ( i ) ) servers . add ( r ) ; } } return servers ; } 
public void rbsp_trailing_bits () { for ( int i = ( ( bytestream.length ) * 8 ) - 1 ; i >= 0 ; i -- ) { int byte_offset = i / 8 ; int bit_offset = i % 8 ; byte valByte = bytestream [ byte_offset ] ; int valInt = ( valByte > > ( 8 - ( bit_offset + 1 ) ) ) & 1 ; if ( valInt == 1 ) { trailingBitOffSet = i ; break; } } } 
public static int calculateMax ( java.lang.String [] args ) { int toReturn = - 1 ; if ( ( args.length ) > 0 ) { toReturn = ( ( int ) ( java.lang.Integer . parseInt ( args [ 0 ] ) ) ) ; if ( toReturn < 1 ) { throw new java.lang.IllegalArgumentException () ; } else {} } else { throw new java.lang.IllegalArgumentException () ; } return toReturn ; } 
private static int argument ( char [] array , int cursor , java.lang.StringBuilder argument ) { for ( int i = cursor ; i < ( array.length ) ; i ++ ) { char c = array [ i ] ; switch ( c ) { case ',' : case ')' : return i + 1 ; case ' ' : if ( ( argument . length () ) == 0 ) continue; default: argument . append ( c ) ; } } return array.length ; } 
public static org.joda.time.LocalDate alignProposedBillCycleDate ( final org.joda.time.LocalDate proposedDate , final int billingCycleDay ) { final int lastDayOfMonth = proposedDate . dayOfMonth () . getMaximumValue () ; int proposedBillCycleDate = proposedDate . getDayOfMonth () ; if ( proposedBillCycleDate < billingCycleDay ) { if ( billingCycleDay <= lastDayOfMonth ) { proposedBillCycleDate = billingCycleDay ; } else { proposedBillCycleDate = lastDayOfMonth ; } } return new org.joda.time.LocalDate ( proposedDate . getYear () , proposedDate . getMonthOfYear () , proposedBillCycleDate , proposedDate . getChronology () ) ; } 
private long checkQueryTimeout () { long timeLeft = timeoutAt - ( java.lang.System . currentTimeMillis () ) ; if ( timeLeft <= 0 ) { java.lang.String msg = io.druid.common.utils.StringUtils . safeFormat ( "Query[%s] url[%s] timed out." , query . getId () , url ) ; setupResponseReadFailure ( msg , null ) ; throw new io.druid.java.util.common.RE ( msg ) ; } else { return timeLeft ; } } 
@ java.lang.Override public void restoreFromBundle ( com.watabou.utils.Bundle bundle ) { super . restoreFromBundle ( bundle ) ; int [] values = bundle . getIntArray ( com.shatteredpixel.shatteredpixeldungeon.items.artifacts.TimekeepersHourglass.timeFreeze.PRESSES ) ; for ( int value : values ) presses . add ( value ) ; partialTime = bundle . getFloat ( com.shatteredpixel.shatteredpixeldungeon.items.artifacts.TimekeepersHourglass.timeFreeze.PARTIALTIME ) ; } 
@ org.junit.Test public void fourOfAKindTest2 () { int [] cards = new int [] { 12 , 25 , 38 , 51 , 1 , 7 , 29 } ; for ( int i = 0 ; i < ( cards.length ) ; i ++ ) deck . getCard ( cards [ i ] ) . displayCard () ; int ans = Table . handValue ( cards ) ; org.junit.Assert . assertEquals ( 8 , ans ) ; } 
public boolean removeDataSet ( T d ) { if ( d == null ) return false ; boolean removed = mDataSets . remove ( d ) ; if ( removed ) { mYValCount -= d . getEntryCount () ; mYValueSum -= d . getYValueSum () ; calcMinMax () ; } return removed ; } 
public synchronized void calculateReceiptsVisibility ( org.iabako.client.ui.form.business.sale.SalePaymentsForm salePaymentsForm ) { if ( ( invoiceTable ) == null ) { return; } org.iabako.client.ui.layout.widget.payment.PaymentTable installmentsTable = salePaymentsForm . getInstallmentTable () ; int installmentsNumber = ( installmentsTable != null ) ? installmentsTable.queryDefinitionDTO . getCountTotal () : 0 ; int invoicesNumber = ( ( invoiceTable ) != null ) ? invoiceTable.queryDefinitionDTO . getCountTotal () : 0 ; if ( ( invoicesNumber == 1 ) && ( installmentsNumber == 0 ) ) { receiptsPanel . setVisible ( false ) ; } else { receiptsPanel . setVisible ( true ) ; } } 
private void AddFruit () { boolean bFlag = true ; while ( bFlag ) { int x = ( ( int ) ( ( java.lang.Math . random () ) * ( com.snake.Game.sizeByX ) ) ) ; int y = ( ( int ) ( ( java.lang.Math . random () ) * ( com.snake.Game.sizeByY ) ) ) ; if ( ( field [ x ] [ y ] ) == 0 ) { bFlag = false ; field [ x ] [ y ] = 2 ; } } } 
@ org.junit.Test public void testBasicApply () { ru.spbau.mit.Function2 < java.lang.Integer , java.lang.Double , java.lang.String > concat = new ru.spbau.mit.Function2 < java.lang.Integer , java.lang.Double , java.lang.String > () { @ java.lang.Override public java.lang.String apply ( java.lang.Integer arg1 , java.lang.Double arg2 ) { return ( arg1 . toString () ) + ( arg2 . toString () ) ; } } ; org.junit.Assert . assertEquals ( "1233.14" , concat . apply ( 123 , 3.14 ) ) ; } 
private boolean isValidDigitFields () { boolean isValid = true ; if ( com.zhour.utils.Utility . isValueNullOrEmpty ( com.zhour.fragments.AlienCarFragment.et_vehicle_number . getText () . toString () ) ) { com.zhour.utils.Utility . setSnackBar ( mParent , com.zhour.fragments.AlienCarFragment.et_vehicle_number , "Please write code" ) ; isValid = false ; } else if ( ( com.zhour.fragments.AlienCarFragment.et_vehicle_number . getText () . toString () . length () ) < 4 ) { com.zhour.utils.Utility . setSnackBar ( mParent , com.zhour.fragments.AlienCarFragment.et_vehicle_number , "Code must be 4 digit" ) ; isValid = false ; } return isValid ; } 
@ java.lang.Override public java.lang.Object visitArrayVariable ( DECAF2.DECAF2Parser.ArrayVariableContext ctx ) { java.lang.String nombreVar = ctx . getChild ( 0 ) . getText () ; int locationSave = java.lang.Integer . parseInt ( ctx . getChild ( 2 ) . getText () ) ; java.util.ArrayList returnArray = new java.util.ArrayList () ; returnArray . add ( nombreVar ) ; returnArray . add ( locationSave ) ; return returnArray ; } 
@ org.junit.Test public void testOverrideOutputLimits () { xbot.common.math.PIDManager manager = new xbot.common.math.PIDManager ( "test" , injector . getInstance ( xbot.common.properties.XPropertyManager . class ) , 1 , 0 , 0 , 0 , 0.5 , ( - 0.25 ) ) ; double output = manager . calculate ( 100 , 0 ) ; org.junit.Assert . assertEquals ( 0.5 , output , 0.001 ) ; output = manager . calculate ( ( - 100 ) , 0 ) ; org.junit.Assert . assertEquals ( ( - 0.25 ) , output , 0.001 ) ; } 
private void drawWifi ( com.anwesome.games.dataindicationbutton.Canvas canvas , com.anwesome.games.dataindicationbutton.Paint paint ) { float r = ( radius ) / 60 ; canvas . drawCircle ( 0 , 0 , r , paint ) ; for ( int i = 1 ; i <= 3 ; i ++ ) { float newR = r * ( i * 10 ) ; canvas . drawArc ( new com.anwesome.games.dataindicationbutton.RectF ( ( - newR ) , ( - newR ) , newR , newR ) , 240 , 60 , false , paint ) ; } } 
public java.util.List < java.lang.Integer > getDaysFromThisMonth ( int month , int year ) { java.util.Calendar cal = new java.util.GregorianCalendar () ; cal . set ( year , month , 1 ) ; int max = cal . getActualMaximum ( java.util.Calendar.DAY_OF_MONTH ) ; java.lang.System.out . println ( max ) ; java.util.List < java.lang.Integer > daysFromThisMonth = new java.util.ArrayList < java.lang.Integer > () ; for ( int i = 0 ; i < max ; i ++ ) { daysFromThisMonth . add ( ( i + 1 ) ) ; } return daysFromThisMonth ; } 
public static boolean checkPlayersTiles ( java.lang.String board , int player , int value , int numOfValues ) { java.lang.String tiles = game.manger.SaveTheIslandGame.Board . getPlayersTiles ( player , board ) ; int count = 0 ; for ( int i = 0 ; i < 5 ; i ++ ) { if ( ( java.lang.Integer . parseInt ( tiles . substring ( i , ( i + 1 ) ) ) ) == value ) { count ++ ; } } return count >= numOfValues ; } 
public double getNumSteps ( android.graphics.Point p1 , android.graphics.Point p2 , int stepSize ) { int x = ( p2.x ) - ( p1.x ) ; int y = ( p2.y ) - ( p1.y ) ; double distance = ( java.lang.Math . abs ( java.lang.Math . sqrt ( ( ( x * x ) + ( y * y ) ) ) ) ) / ( player . getScale () ) ; android.util.Log . i ( "Distance between p1/p2" , ( "" + distance ) ) ; return distance / stepSize ; } 
private void grow () { byte [] old = _buffer ; _buffer = new byte [ ( _buffer.length ) * 2 ] ; java.lang.System . arraycopy ( old , 0 , _buffer , 0 , _position ) ; _encoder . init ( _buffer , _position , ( ( _buffer.length ) * 2 ) ) ; } 
private < TGeo extends de.k3b.geo.api.GeoPointDto > TGeo getYandexUri ( java.lang.String uri , TGeo parseResult ) { int dataStart = contentIndexBehind ( uri , "ll=" ) ; java.lang.String [] parts = getParts ( uri , dataStart , "[,?&]" , 2 ) ; if ( parts != null ) { de.k3b.geo.io.GeoUri . setLatLonZoom ( parseResult , parts [ 1 ] , parts [ 0 ] , null ) ; } return uriParamParse ( uri , parseResult ) ; } 
private void initRotateView () { if ( ( mRotateView ) != null ) { return; } mRotateView = new android.widget.ImageView ( getContext () ) ; mRotateView . setImageResource ( R.drawable.ic_rotate ) ; mRotateView . setBackgroundResource ( R.drawable.stretch_shape_background ) ; mRotateView . setOnTouchListener ( createRotateListener () ) ; final int rotateViewGravity = ( android.view.Gravity.RIGHT ) | ( android.view.Gravity.TOP ) ; final net.yazeed44.resizableviewlibrary.LayoutParams rotateViewLayoutParams = new net.yazeed44.resizableviewlibrary.LayoutParams ( ViewGroup.LayoutParams.WRAP_CONTENT , ViewGroup.LayoutParams.WRAP_CONTENT , rotateViewGravity ) ; addView ( mRotateView , rotateViewLayoutParams ) ; } 
public int advance ( int target ) throws java.io.IOException { int doc = scorer . advance ( target ) ; if ( doc == ( NO_MORE_DOCS ) ) { return doc ; } currentScore = innerScore () ; if ( ( currentScore ) < ( minScore ) ) { return nextDoc () ; } return doc ; } 
private void mapLetters ( BoggleBoard board , int rows , int cols ) { letters = new edu.princeton.cs.algs4.SeparateChainingHashST < java.lang.Integer , java.lang.Character > () ; for ( int i = 0 ; i < rows ; i ++ ) for ( int j = 0 ; j < cols ; j ++ ) { int x = ( i * cols ) + j ; letters . put ( x , board . getLetter ( i , j ) ) ; } } 
public void rotate ( double winkel ) { double radius = java.lang.Math . sqrt ( ( ( ( x ) * ( x ) ) + ( ( y ) * ( y ) ) ) ) ; this . x = radius * ( java.lang.Math . cos ( winkel ) ) ; this . y = radius * ( java.lang.Math . sin ( winkel ) ) ; } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { boolean status ; switch ( item . getItemId () ) { case R.id.action_settings : startActivity ( new android.content.Intent ( this , io.github.data4all.activity.SettingsActivity . class ) ) ; status = true ; break; case R.id.action_help : status = true ; break; case android.R.id.home : this . onWorkflowFinished ( null ) ; status = true ; break; default: return super . onOptionsItemSelected ( item ) ; } return status ; } 
public static void printResult ( double [] result ) { java.lang.System.out . println ( "" ) ; for ( int i = 0 ; i < ( result.length ) ; i ++ ) { java.lang.System.out . print ( ( ( result [ i ] ) + " " ) ) ; } } 
public static edu.ucsd.sccn.LSL.StreamInfo [] resolve_streams ( double wait_time ) { com.sun.jna.Pointer [] buf = new com.sun.jna.Pointer [ 1024 ] ; int num = edu.ucsd.sccn.LSL.inst . lsl_resolve_all ( buf , buf.length , wait_time ) ; edu.ucsd.sccn.LSL.StreamInfo [] res = new edu.ucsd.sccn.LSL.StreamInfo [ num ] ; for ( int k = 0 ; k < num ; k ++ ) res [ k ] = new edu.ucsd.sccn.LSL.StreamInfo ( buf [ k ] ) ; return res ; } 
public void geometricSeriesApproximation ( double x ) { double nextApproximation = x ; for ( int i = 0 ; i < ( this . steps ) ; i ++ ) { nextApproximation = nextApproximation * x ; } this . approximation = ( this . lastApproximation ) + nextApproximation ; ( this . steps ) ++ ; if ( ! ( isAccurate () ) ) { geometricSeriesApproximation ( x ) ; } else { return; } } 
public static double timeSortedInput ( java.lang.String alg , int n , int trials ) { double total = 0.0 ; java.lang.Double [] a = new java.lang.Double [ n ] ; for ( int t = 0 ; t < trials ; t ++ ) { for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = 1.0 * i ; } total += SortCompare . time ( alg , a ) ; } return total ; } 
private int skip ( int n_skip ) throws java.io.IOException { int n_skipped = 0 ; skipWhiteSpace () ; if ( ( ( ( current ) != ',' ) && ( ( current ) != ']' ) ) && ( ( current ) != '}' ) ) { skipInner () ; n_skipped = 1 ; } while ( ( ( current ) == ',' ) && ( ( n_skipped ++ ) != n_skip ) ) { skipWhiteSpace () ; skipInner () ; } return n_skipped ; } 
void update ( gt.Population otherPop ) { java.util.Enumeration < java.lang.String > players = fractions . keys () ; while ( players . hasMoreElements () ) { java.lang.String currentPlayer = players . nextElement () ; double updatedFraction = updateFraction ( currentPlayer ) ; fractions . put ( currentPlayer , updatedFraction ) ; } } 
public static void main ( java.lang.String [] args ) { int length = java.lang.Integer . parseInt ( args [ 0 ] ) ; int width = java.lang.Integer . parseInt ( args [ 1 ] ) ; Rectangle myRectangle = new Rectangle ( length , width ) ; java.lang.String output = java.lang.String . format ( "*** Your Rectangle ***\n\nLength: %d\nWidth: %d/nArea: %d/nPerimeter: %d/nArea: %d/n/n" , myRectangle.length , myRectangle.width , myRectangle . getPerimeter () , myRectangle . getArea () ) ; java.lang.System.out . println ( output ) ; } 
public int [] getOutput ( short [] pcm , int sampleRate ) { if ( pcm == null ) return null ; double [] spectrum = getSpectrum ( pcm ) ; final int amount = 100 ; int [] s = spectrumStrategy . execute ( spectrum , sampleRate ) ; for ( int i = 0 ; i < ( s.length ) ; i ++ ) { s [ i ] = ( ( int ) ( ( spectrum [ i ] ) / 1000 ) ) ; } return s ; } 
@ java.lang.Override public int onStartCommand ( android.content.Intent intent , int flags , int startId ) { int startOption = START_NOT_STICKY ; if ( intent == null ) { return startOption ; } int mapID = intent . getIntExtra ( appConstants.DOWNLOAD_INTENT_NAME , 0 ) ; if ( ( ( activeDownloadsList [ mapID ] ) != null ) && ( activeDownloadsList [ mapID ] ) ) { com.noveogroup.android.log.Log . d ( "Duplicate download request for the same map type" ) ; return startOption ; } activeDownloadsList [ mapID ] = true ; downloadMap ( mapID ) ; return startOption ; } 
private void evaluateNotification ( int idx , java.lang.String prayId , java.lang.String prayName , java.util.Date date ) { cancelNotification ( idx ) ; cancelNotification ( ( idx + 10 ) ) ; long delay = ( date . getTime () ) - ( new java.util.Date () . getTime () ) ; if ( delay > 0 ) { sendPrayAlarm ( idx , prayId , prayName , delay ) ; } } 
public void reset ( com.studiau.amazinggravity.Ship ship ) { float randomFloat = random . nextFloat () ; radius = ( com.studiau.amazinggravity.ExhaustParticle.BASE_RADIUS ) + ( randomFloat * ( com.studiau.amazinggravity.ExhaustParticle.MAX_ADDITIONAL_RADIUS ) ) ; locationX = ship . getExhaustLocationX () ; locationY = ship . getExhaustLocationY () ; speedX = ( ( ( random . nextFloat () ) - 0.5F ) * 2 ) * ( com.studiau.amazinggravity.ExhaustParticle.BASE_SPEEDX ) ; speedY = ( com.studiau.amazinggravity.ExhaustParticle.BASE_SPEEDY ) + ( randomFloat * ( com.studiau.amazinggravity.ExhaustParticle.MAX_ADDITIONAL_SPEEDY ) ) ; } 
private float [] cutArray ( int index ) { float [] retArr = new float [ filterSize ] ; int j = 0 ; for ( int i = index - ( side ) ; i <= ( index + ( side ) ) ; i ++ ) { retArr [ j ] = array [ i ] ; j ++ ; } return retArr ; } 
public int getPlayer1Score () { int score = 0 ; for ( int i = ( this . glasses . length ) - 1 ; i >= ( ( this . glasses . length ) / 2 ) ; i -- ) { if ( this . glasses [ i ] . isActive () ) break; else score ++ ; } return score ; } 
private void addNewLogicalTile () { int [] [] emptyTiles = getEmptyTiles () ; if ( ( emptyTiles.length ) > 0 ) { java.util.Random rand = new java.util.Random () ; int randNum = rand . nextInt ( emptyTiles.length ) ; int row = emptyTiles [ randNum ] [ 0 ] ; int column = emptyTiles [ randNum ] [ 1 ] ; Model.board [ row ] [ column ] = newValue () ; } } 
public boolean judgeUserExist ( java.lang.String name ) { java.lang.String sql = ( "select * from User where NAME='" + name ) + "'" ; boolean result = false ; try { java.sql.PreparedStatement pstmt = conn . prepareStatement ( sql ) ; java.sql.ResultSet rs = pstmt . executeQuery () ; if ( rs . next () ) result = true ; pstmt . close () ; } catch ( java.lang.Exception ex ) { ex . printStackTrace () ; } return result ; } 
@ java.lang.Override public final java.util.List < com.github.sdnwiselab.sdnwise.flowtable.FlowTableEntry > getNodeRules ( final byte net , final com.github.sdnwiselab.sdnwise.util.NodeAddress dst ) { java.util.List < com.github.sdnwiselab.sdnwise.flowtable.FlowTableEntry > list = new java.util.ArrayList <> () ; com.github.sdnwiselab.sdnwise.flowtable.FlowTableEntry fte ; int i = 0 ; while ( ( fte = getNodeRule ( net , dst , i ) ) != null ) { list . add ( i , fte ) ; i ++ ; } return list ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { int index = 0 ; for ( int i = 1 ; i < ( day ) ; i ++ ) index += ( getItinerarySizeByDay ( getContext () , i ) ) - 1 ; final int indexToAssign = index ; uz.samtuit.samapp.helpers.ItineraryHelper . addNewItemFromItinerary ( getFragmentManager () , day , indexToAssign ) ; } 
public void setLongitude ( java.lang.String longitude ) { int [] longitudeDMS = fiskinfoo.no.sintef.fiskinfoo.Implementation.FiskInfoUtility . decimalToDMSArray ( java.lang.Double . valueOf ( longitude ) ) ; latitudeDegreesEditText . setText ( java.lang.String . valueOf ( longitudeDMS [ 0 ] ) ) ; latitudeMinutesEditText . setText ( java.lang.String . valueOf ( longitudeDMS [ 1 ] ) ) ; latitudeSecondsEditText . setText ( java.lang.String . valueOf ( longitudeDMS [ 2 ] ) ) ; longitudeCardinalDirectionSwitch . setChecked ( ( ( java.lang.Double . valueOf ( longitude ) ) >= 0 ) ) ; } 
private void processAttributes ( android.content.Context context , android.util.AttributeSet attrs ) { android.content.res.TypedArray a = context . obtainStyledAttributes ( attrs , R.styleable.ColorButton ) ; final int N = a . getIndexCount () ; for ( int i = 0 ; i < N ; ++ i ) { int attr = a . getIndex ( i ) ; if ( attr == ( R.styleable.ColorButton_jr_color ) ) { mColor = a . getColor ( attr , 0 ) ; colorify () ; break; } } a . recycle () ; } 
public boolean contains ( java.lang.String key ) { int [] hashes = getHashes ( key ) ; for ( int hash : hashes ) { if ( ! ( store . getBit ( ( hash % ( capacity ) ) ) ) ) { return false ; } } return true ; } 
private void handleAutoImprov ( int slotInPlayback ) { int gap = lickgenFrame . getGap () ; if ( ( lickgenFrame . getRecurrent () ) && ( slotInPlayback >= ( ( stopPlaybackAtSlot ) - gap ) ) ) { ( recurrentIteration ) ++ ; setFirstChorus ( false ) ; setStatus ( ( "Chorus " + ( recurrentIteration ) ) ) ; originalGenerate ( lickgen , improviseStartSlot , improviseEndSlot ) ; } } 
private void executeAlarm () { java.util.List < com.doers.wakemeapp.common.model.audio.Song > songs = mCurrentAlarm . getPlaylist () . getSongs () ; int randSong = new java.util.Random () . nextInt ( songs . size () ) ; com.doers.wakemeapp.common.model.audio.Song selectedSong = songs . get ( randSong ) ; java.lang.String songPath = selectedSong . getPath () ; startSoundService ( songPath ) ; displayNotification ( false ) ; } 
@ java.lang.Override public void mouseWheelMoved ( java.awt.event.MouseWheelEvent e ) { int sign = e . getWheelRotation () ; if ( sign < 0 ) { this . cam_zoom_increase () ; return; } if ( sign > 0 ) { this . cam_zoom_decrease () ; return; } } 
public void uploadPicture ( com.pervasive.sth.network.Media mediaFile ) throws java.lang.Exception { android.util.Log . d ( LOG_TAG , "Uploading picture on web server." ) ; org.json.JSONObject jsonPicture = new org.json.JSONObject () ; jsonPicture . put ( "PIC_NAME" , mediaFile . getMediaName () ) ; byte [] pictureData = mediaFile . getData () ; java.lang.String encodedData = android.util.Base64 . encodeToString ( pictureData , Base64.DEFAULT ) ; jsonPicture . put ( "PIC_DATA" , encodedData ) ; pictureClient . executePost ( jsonPicture . toString () ) ; } 
private java.lang.String getPlaylist () { int entryCount = java.lang.Integer . parseInt ( getConfiguration () . getProperty ( "playlist.entry.count" ) ) ; java.lang.StringBuilder playlist = new java.lang.StringBuilder () ; for ( int i = 1 ; i < entryCount ; i ++ ) { playlist . append ( i ) ; playlist . append ( "/ " ) ; playlist . append ( getConfiguration () . getProperty ( ( "playlist.entry.name." + i ) ) ) ; playlist . append ( "\n" ) ; } return playlist . toString () ; } 
public boolean isPointInArea ( java.awt.Point pos , int areaLeftX , int areaRightX , int areaUpY , int areaDownY ) { return ( ( ( areaLeftX < ( pos.x ) ) && ( ( pos.x ) < areaRightX ) ) && ( areaUpY < ( pos.y ) ) ) && ( ( pos.y ) < areaDownY ) ; } 
public void onClick ( android.content.DialogInterface dialog , int id ) { int newActionId = com.ha81dn.webausleser.backend.DatabaseHandler . getNewId ( db , "actions" ) ; copyAction ( db , a . getId () , newActionId , sortNr , com.ha81dn.webausleser.backend.DatabaseHandler . getUniqueCopiedActionName ( activity , db , input . getText () . toString () . trim () , com.ha81dn.webausleser.MainActivity.sourceId ) , idShow , false ) ; com.ha81dn.webausleser.MainActivity.appActionMode . finish () ; db . close () ; com.ha81dn.webausleser.MainActivity . displaySection ( activity , "SOURCE" , idShow , null , newActionId ) ; } 
@ java.lang.Override public void mouseDragged ( int oldx , int oldy , int newx , int newy ) { if ( ! ( active ) ) return; consumeEvent () ; int diff = newy - oldy ; if ( diff != 0 ) scrolling . dragged ( ( - diff ) ) ; } 
public void modulo ( pl.kryptografia.rabin.bignum.BigNum modulus ) { while ( absGreaterOrEqualTo ( modulus ) ) { pl.kryptografia.rabin.bignum.BigNum x = new pl.kryptografia.rabin.bignum.BigNum ( modulus ) ; int shift = findMaximumLeftShift ( x ) ; x . shiftLeft ( shift ) ; absSubtract ( x ) ; } if ( ( sign ) == ( - 1 ) ) { add ( modulus ) ; sign = 1 ; } } 
public cn.com.hellowood.rocketmq.util.SendResult sendOneWayMessage ( cn.com.hellowood.rocketmq.util.Message message ) { cn.com.hellowood.rocketmq.util.ProducerHelper.logger . info ( "MQ start send ONE_WAY message " ) ; long startTimestamp = java.lang.System . currentTimeMillis () ; producer . sendOneway ( message ) ; long costTime = ( java.lang.System . currentTimeMillis () ) - startTimestamp ; cn.com.hellowood.rocketmq.util.ProducerHelper.logger . info ( ( ( "MQ completed send ONE_WAY message in " + costTime ) + " ms" ) ) ; return null ; } 
public void save () { int bugTrackerCount = bugTrackers.length ; for ( int i = 0 ; i < bugTrackerCount ; i ++ ) { if ( bugTrackers [ i ] . equals ( "github" ) ) { githubIssue . raise ( this ) ; } else if ( bugTrackers [ i ] . equals ( "bugzilla" ) ) {} } } 
public static int updateWhitelist () { java.util.HashMap < java.lang.String , java.util.Set < java.lang.String > > cachedWhitelist = net.quetzi.whitelister.Whitelister.whitelist ; int successCount = 0 ; net.quetzi.whitelister.Whitelister.whitelist = new java.util.HashMap < java.lang.String , java.util.Set < java.lang.String > > () ; for ( java.lang.String url : net.quetzi.whitelister.Whitelister.urlList ) { if ( net.quetzi.whitelister.util.WhitelistFetcher . getRemoteWhitelist ( url ) ) { successCount ++ ; } else { Whitelister.log . warn ( ( ( "Failed to fetch whitelist from " + url ) + " using cached list for this source" ) ) ; Whitelister.whitelist . put ( url , cachedWhitelist . get ( url ) ) ; } } return successCount ; } 
public synchronized void syncNewDriver ( java.lang.String name , java.lang.String street , java.lang.String city , java.lang.String state , java.lang.String zip ) { com.example.android.rowanparkingpass.Networking.SendInfo.SendInfoDriver sendInfoDriver = new com.example.android.rowanparkingpass.Networking.SendInfo.SendInfoDriver () ; org.json.JSONObject json ; int oldID = db . addDriver ( name , street , city , arrayOfStates [ java.lang.Integer . parseInt ( state ) ] . valueOf ( arrayOfStates [ java.lang.Integer . parseInt ( state ) ] . name () ) . toString () , zip ) ; sendInfoDriver . addDriver ( oldID , name , street , city , state , zip ) ; return; } 
private com.github.com.ricardobaumann.jankenpon.Player.MOVE getMove ( int index ) { com.github.com.ricardobaumann.jankenpon.Player.MOVE [] moves = com.github.com.ricardobaumann.jankenpon.Player.MOVE . values () ; int movesAmount = moves.length ; int moveIndex = ( index > movesAmount ) ? index / movesAmount : index ; return moves [ ( moveIndex - 1 ) ] ; } 
private void writeToFile ( java.lang.String stringToFile ) throws tasknote.shared.TaskListIOException { try { byte [] bufferMemory = stringToFile . getBytes () ; int totalNumberOfBytesToWrite = bufferMemory.length ; int maxWriteLength = magicValuesRetriever . getBufferSize () ; java.io.BufferedOutputStream fileWriter = new java.io.BufferedOutputStream ( new java.io.FileOutputStream ( tasknote.storage.FileManipulation.textFile ) ) ; loopWriteOneObjectToFile ( bufferMemory , totalNumberOfBytesToWrite , maxWriteLength , fileWriter ) ; fileWriter . close () ; } catch ( java.io.IOException ioe ) { throw new tasknote.shared.TaskListIOException () ; } } 
public void setDataTermino ( java.lang.String dataTermino ) { int dia = java.lang.Integer . parseInt ( dataTermino . substring ( 0 , 2 ) ) ; int mes = ( java.lang.Integer . parseInt ( dataTermino . substring ( 3 , 5 ) ) ) - 1 ; int ano = java.lang.Integer . parseInt ( dataTermino . substring ( 6 ) ) ; java.util.Calendar c = java.util.Calendar . getInstance () ; c . set ( ano , mes , dia ) ; this . dataTermino = c ; } 
private me.ihaq.pacman.menu.Game.FACING newDirection () { me.ihaq.pacman.utils.Intersection i = getCollidingIntersection () ; int newMove = new java.util.Random () . nextInt ( ( ( i . getDirections () . size () ) - 1 ) ) ; java.lang.System.out . println ( i . getDirections () . get ( newMove ) ) ; return i . getDirections () . get ( newMove ) ; } 
private boolean projectHasItestsDependency () { java.util.List < org.apache.maven.model.Dependency > deps = project . getDependencies () ; boolean containsItests = false ; java.util.Iterator i = deps . iterator () ; while ( ( i . hasNext () ) && ( ! containsItests ) ) { org.apache.maven.model.Dependency d = ( ( org.apache.maven.model.Dependency ) ( i . next () ) ) ; containsItests |= ( d . getArtifactId () . equals ( "itests" ) ) && ( d . getGroupId () . equals ( "org.universAAL.support" ) ) ; } return containsItests ; } 
private void checkMinutesSinceLastAction () { int localMinutesSinceLastAction = getMinutesSinceLastAction () ; if ( localMinutesSinceLastAction > ( minutesSinceLastAction ) ) { minutesSinceLastAction = localMinutesSinceLastAction ; } if ( ( minutesSinceLastAction ) >= ( settings . getIdleTime () ) ) { stateMachine . reset () ; } } 
public static void main ( java.lang.String [] args ) { double [] l = new double [] { 1 , 2 , 3 , 4 } ; Matrix m = new Matrix ( 2 , 2 , l ) ; java.lang.System.out . println ( m . inverse () . multiply ( m ) ) ; } 
private void initTracks () { tracks = new java.util.ArrayList < Track > () ; boolean alreadyExist ; for ( TrainStation station1 : Control.stations ) { for ( TrainStation station2 : Control.stations ) { if ( station1 . equals ( station2 ) ) continue; alreadyExist = false ; for ( Track track : tracks ) { if ( track . compareTrack ( station1 , station2 ) ) alreadyExist = true ; } if ( ! alreadyExist ) tracks . add ( new Track ( station1 , station2 ) ) ; } } } 
private boolean contains ( java.io.File file ) { boolean result ; try { java.lang.String sFile = file . toString () ; result = ( ( ( location . length () ) > 0 ) && ( sFile . startsWith ( location . toString () ) ) ) || ( sFile . startsWith ( location . getCanonicalPath () . toString () ) ) ; } catch ( java.io.IOException e ) { result = false ; } return result ; } 
public com.sproutigy.commons.binary.BinaryBuilder append ( java.io.InputStream inputStream ) throws com.sproutigy.commons.binary.BinaryException { try { byte [] buffer = new byte [ 4 * 1024 ] ; int readlen ; while ( ( readlen = inputStream . read ( buffer ) ) != ( Binary.EOF ) ) { append ( buffer , 0 , readlen ) ; } } catch ( java.io.IOException e ) { throw new com.sproutigy.commons.binary.BinaryException ( e ) ; } return this ; } 
public static java.lang.Character loadCharacter ( int Id ) { com.tda367.infinityrun.Utils.LoadCharacter loader = new com.tda367.infinityrun.Utils.LoadCharacter ( Id ) ; int [] levels = loader . getSaveData () ; java.lang.Character loadedCharacter = new java.lang.Character ( levels [ 0 ] , levels [ 1 ] , levels [ 2 ] , levels [ 3 ] , levels [ 3 ] , levels [ 5 ] , levels [ 6 ] , levels [ 7 ] , levels [ 8 ] , levels [ 9 ] ) ; loadedCharacter . setCharacterID ( Id ) ; return loadedCharacter ; } 
private static long convertToUsDollar ( long quantity , long exchange ) { if ( exchange > 100 ) { double total = ( io.zipcoder.aaronlong.wutangfinancial.Money . downHandleDoubles ( quantity ) ) / ( io.zipcoder.aaronlong.wutangfinancial.Money . downHandleDoubles ( exchange ) ) ; return io.zipcoder.aaronlong.wutangfinancial.Money . upHandleDoubles ( total ) ; } else if ( exchange < 100 ) { double total = ( io.zipcoder.aaronlong.wutangfinancial.Money . downHandleDoubles ( quantity ) ) * ( io.zipcoder.aaronlong.wutangfinancial.Money . downHandleDoubles ( exchange ) ) ; return io.zipcoder.aaronlong.wutangfinancial.Money . upHandleDoubles ( total ) ; } return quantity ; } 
private void startQuickGame () { final int MIN_OPPONENTS = 1 ; final int MAX_OPPONENTS = 1 ; android.os.Bundle autoMatchCriteria = com.google.android.gms.games.multiplayer.realtime.RoomConfig . createAutoMatchCriteria ( MIN_OPPONENTS , MAX_OPPONENTS , 0 ) ; com.google.android.gms.games.multiplayer.realtime.RoomConfig.Builder rtmConfigBuilder = com.google.android.gms.games.multiplayer.realtime.RoomConfig . builder ( this ) ; rtmConfigBuilder . setMessageReceivedListener ( this ) ; rtmConfigBuilder . setRoomStatusUpdateListener ( this ) ; rtmConfigBuilder . setAutoMatchCriteria ( autoMatchCriteria ) ; switchToScreen ( R.id.screen_wait ) ; keepScreenOn () ; Games.RealTimeMultiplayer . create ( mGoogleApiClient , rtmConfigBuilder . build () ) ; } 
@ java.lang.Override public void onReceive ( @ android.support.annotation.NonNull android.content.Context context , @ android.support.annotation.NonNull android.content.Intent intent ) { super . onReceive ( context , intent ) ; timber.log.Timber . d ( "Intent Received" ) ; if ( QuoteSyncJob.ACTION_DATA_UPDATED . equals ( intent . getAction () ) ) { android.appwidget.AppWidgetManager appWidgetManager = android.appwidget.AppWidgetManager . getInstance ( context ) ; int [] appWidgetIds = appWidgetManager . getAppWidgetIds ( new android.content.ComponentName ( context , getClass () ) ) ; appWidgetManager . notifyAppWidgetViewDataChanged ( appWidgetIds , R.id.stock_list ) ; } } 
@ java.lang.Override public com.ckt.ckttodo.ui.ProjectActivity.ProjectAdapter.MainVH onCreateViewHolder ( android.view.ViewGroup parent , int viewType ) { int layout = 0 ; switch ( viewType ) { case VIEW_TYPE_HEADER : layout = R.layout.item_persoanl_project_header ; break; case VIEW_TYPE_ITEM : layout = R.layout.item_personal_project ; break; default: break; } android.view.View v = android.view.LayoutInflater . from ( parent . getContext () ) . inflate ( layout , parent , false ) ; return new com.ckt.ckttodo.ui.ProjectActivity.ProjectAdapter.MainVH ( v , this ) ; } 
@ java.lang.Override public int hashCode () { final int prime = 31 ; int hashCode = 1 ; hashCode = ( prime * hashCode ) + ( ( data ) == null ? 0 : data . hashCode () ) ; hashCode = ( prime * hashCode ) + ( ( children ) == null ? 0 : children . hashCode () ) ; return hashCode ; } 
public int pull_chunk ( byte [] data_buffer , double [] timestamp_buffer , double timeout ) throws java.lang.Exception { int [] ec = new int [] { 0 } ; long res = edu.ucsd.sccn.LSL.inst . lsl_pull_chunk_c ( obj , data_buffer , timestamp_buffer , data_buffer.length , timestamp_buffer.length , timeout , ec ) ; edu.ucsd.sccn.LSL . check_error ( ec ) ; return ( ( int ) ( res ) ) ; } 
public java.lang.String getTextContent () { boolean saveTextContentOld ; saveTextContentOld = saveTextContent ; saveTextContent = true ; if ( ! ( getNextNode () ) ) { return null ; } saveTextContent = saveTextContentOld ; if ( ( nodeType ) != ( org.quicktionary.backend.parsers.XMLParser.NodeType.TEXT ) ) { return null ; } return textContent . toString () ; } 
public long getConsecutiveGuesses () { if ( misses . isEmpty () ) { return hits . size () ; } java.util.Collections . sort ( hits ) ; java.util.Collections . sort ( misses ) ; java.util.Date lastMiss = misses . get ( ( ( misses . size () ) - 1 ) ) ; long hitsCount = 0 ; for ( java.util.Date date : hits ) { if ( date . after ( lastMiss ) ) { hitsCount ++ ; } } return hitsCount ; } 
private double calculate ( us.team.awesome.calculator.math.CalculationList list ) throws us.team.awesome.calculator.util.MathException { if ( list . isEmpty () ) { return 0 ; } int index = getNextOperatorToCalculate ( list ) ; if ( index > 0 ) { us.team.awesome.calculator.math.CalculationOperator operator = ( ( us.team.awesome.calculator.math.CalculationOperator ) ( list . get ( index ) ) ) ; list = operator . calculate ( index , list ) ; return calculate ( list ) ; } else { return ( ( us.team.awesome.calculator.math.CalculationNumber ) ( list . getFirst () ) ) . getValue () ; } } 
public int getNewProductIdByCategory ( java.lang.String categoryId ) { java.util.ArrayList < sg.edu.nus.iss.universitysouvenirstore.Product > p = this . getProductListByCategory ( categoryId ) ; int largest = 0 ; for ( sg.edu.nus.iss.universitysouvenirstore.Product product : p ) { java.lang.String [] splitString = product . getProductId () . split ( "/" ) ; int splitProductId = java.lang.Integer . parseInt ( splitString [ 1 ] ) ; if ( largest <= splitProductId ) { largest = splitProductId ; } } return largest + 1 ; } 
public void setIsAI ( boolean isAI ) { if ( ( this . isAI ) && ( ! isAI ) ) { com.dyllongagnier.triad.gui.controller.Players . resetAI () ; } boolean isDiff = isAI ^ ( this . isAI ) ; this . isAI = isAI ; if ( isDiff && ( this . gameInProgress () ) ) { this . takeTurn ( this . currentGame ) ; } } 
protected java.util.List < java.lang.String > splitQueryString ( java.lang.String query ) { final int qLen = query . length () ; java.util.List < java.lang.String > blocks = new java.util.ArrayList < java.lang.String > () ; for ( int index = 0 ; ( index + ( seqSize ) ) < qLen ; index += window ) { blocks . add ( query . substring ( index , ( index + ( seqSize ) ) ) ) ; } return blocks ; } 
private double vectorNorm ( java.util.HashMap < java.lang.String , java.lang.Double > inputVector ) { double result = 0.0 ; for ( java.lang.String key : inputVector . keySet () ) { double temp = inputVector . get ( key ) ; result += temp * temp ; } return java.lang.Math . sqrt ( result ) ; } 
private void changes ( java.util.List < org.jasr.currentcy.domain.Sample > changes , java.util.List < org.jasr.currentcy.domain.Sample > samples , org.jasr.currentcy.domain.Currencies currency ) { java.util.List < org.jasr.currentcy.domain.Sample > snapshots = samplerDAO . getSnapshot ( currency ) ; for ( org.jasr.currentcy.domain.Sample sample1 : samples ) { boolean result = false ; for ( org.jasr.currentcy.domain.Sample sample2 : snapshots ) { result = result || ( sample1 . equals ( sample2 ) ) ; } if ( ! result ) { changes . add ( sample1 ) ; } } } 
private final void drawGrid ( android.graphics.Canvas canvas , float offset , int min ) { for ( int i = 0 ; i < ( ( com.gmail.wazappdotgithub.ships.common.Constants.DEFAULT_BOARD_SIZE ) + 1 ) ; i ++ ) { float itimeso = i * offset ; canvas . drawLine ( 0 , itimeso , min , itimeso , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; canvas . drawLine ( itimeso , 0 , itimeso , min , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; } canvas . drawLine ( ( min - 1 ) , 0 , ( min - 1 ) , min , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; } 
public void markCompleted () { this . completed = true ; int pointsToAdd = ( ( int ) ( ( ( 10 * ( Task.POINT_RANGE [ ( ( this . importance ) - 1 ) ] ) ) * ( Task.POINT_RANGE [ ( ( this . difficulty ) - 1 ) ] ) ) * ( calculateEstimatedTimeMultiplier ( this . estimated_time ) ) ) ) ; User currentUser = User . findUser ( this . user_id ) ; int oldExp = currentUser . getUserExperience () ; currentUser . updateUserExperience ( ( oldExp + pointsToAdd ) ) ; } 
private void resize () { java.lang.Integer [] result = new java.lang.Integer [ ( stack.length ) * 2 ] ; int i ; for ( i = 0 ; i < ( stack.length ) ; i ++ ) { result [ i ] = stack [ i ] ; } while ( i < ( result.length ) ) { result [ i ] = null ; i ++ ; } stack = result ; } 
@ java.lang.Override public java.lang.String getPath ( org.eclipse.debug.core.model.IBreakpoint breakpoint ) throws org.eclipse.core.runtime.CoreException { org.eclipse.jdt.debug.core.IJavaBreakpoint bp = ( ( org.eclipse.jdt.debug.core.IJavaBreakpoint ) ( breakpoint ) ) ; java.lang.String type = bp . getTypeName () ; if ( type != null ) { int innerClassIndex = type . indexOf ( '$' ) ; if ( innerClassIndex > 0 ) { type = type . substring ( 0 , innerClassIndex ) ; } return ( type . replace ( '.' , '/' ) ) + ".java" ; } else { return null ; } } 
boolean styleBarCanHide () { if ( ( app . has ( Feature.NEW_TOOLBAR ) ) || ( ! ( getAlgebraDockPanel () . isStyleBarPanelShown () ) ) ) { return false ; } int itemTop = ( this . isInputTreeItem () ) ? main . getElement () . getAbsoluteTop () : getElement () . getAbsoluteTop () ; return ( itemTop - ( getAlgebraDockPanel () . getAbsoluteTop () ) ) < 35 ; } 
@ java.lang.Override public void onActivityCreated ( android.os.Bundle savedInstanceState ) { super . onActivityCreated ( savedInstanceState ) ; android.widget.ListView myListView = ( ( android.widget.ListView ) ( getActivity () . findViewById ( R.id.equipmentList ) ) ) ; connectToJSON ( "?sort_by=it_no" ) ; int layoutID = R.layout.list_item ; myAdapterInstance = new com.example.jim.myapplication.EquipmentAdapter ( getActivity () , layoutID , equipmentList ) ; myListView . setAdapter ( myAdapterInstance ) ; } 
static java.util.List < com.myjeeva.digitalocean.pojo.Key > getAvailableKeys ( java.lang.String authToken ) throws com.myjeeva.digitalocean.exception.DigitalOceanException , com.myjeeva.digitalocean.exception.RequestUnsuccessfulException { com.myjeeva.digitalocean.impl.DigitalOceanClient client = new com.myjeeva.digitalocean.impl.DigitalOceanClient ( authToken ) ; java.util.List < com.myjeeva.digitalocean.pojo.Key > availableKeys = new java.util.ArrayList < com.myjeeva.digitalocean.pojo.Key > () ; com.myjeeva.digitalocean.pojo.Keys keys ; int page = 0 ; do { page += 1 ; keys = client . getAvailableKeys ( page ) ; availableKeys . addAll ( keys . getKeys () ) ; } while ( ( keys . getMeta () . getTotal () ) > ( availableKeys . size () ) ) ; return availableKeys ; } 
private static int addArguments ( java.lang.String [] args ) { int sum = 0 ; if ( ( args.length ) < 1 ) return 0 ; else if ( args [ 0 ] . equals ( "-" ) ) for ( int i = 1 ; i < ( args.length ) ; i ++ ) sum -= java.lang.Integer . valueOf ( args [ i ] ) ; else for ( java.lang.String arg : args ) sum += java.lang.Integer . valueOf ( arg ) ; return sum ; } 
@ org.junit.Test public void testBasic4_BigString_CaseInsensitive_ExpectsTrue () { java.lang.String s1 = "ABCDEFGhijkLMNOpqrstuvwxyz1234567890!" ; java.lang.String s2 = "hijkLMNOPQrstuvwxyZ1234567890!abcdeFG" ; boolean areRotated = p8 . isRotation ( s1 , s2 ) ; assertTrue ( areRotated ) ; areRotated = p8 . isRotation ( s2 , s1 ) ; assertTrue ( areRotated ) ; } 
public static void main ( java.lang.String [] args ) { Interpolation interpolation = new Interpolation () ; double second = interpolation . secondOrder () ; double third = interpolation . thirdOrder () ; java.lang.System.out . println ( ( "Second order value : " + second ) ) ; java.lang.System.out . println ( ( "Third order value : " + third ) ) ; double error = ( ( double ) ( third ) ) - second ; java.lang.System.out . println ( ( "Error : " + error ) ) ; } 
public int getRangePixelCount ( android.graphics.Rect range ) { int top = range.top ; int bottom = range.bottom ; int left = range.left ; int right = range.right ; return ( pixelCount . get ( bottom , right ) ) - ( pixelCount . get ( top , left ) ) ; } 
private int maxIndex ( int [] arr ) { int maxIndex = 0 ; for ( int i = 0 ; i < ( arr.length ) ; i ++ ) { if ( ( arr [ i ] ) >= ( arr [ maxIndex ] ) ) { maxIndex = i ; } } return maxIndex ; } 
public void error ( org.slf4j.Logger destLogger , java.lang.String message , java.lang.Object . . . args ) { long nowMs = ( java.lang.System . nanoTime () ) / 1000000L ; long elapsed = nowMs - ( lastLoggedTime ) ; if ( elapsed > ( minDelay ) ) { destLogger . error ( message , args ) ; lastLoggedTime = nowMs ; } } 
public final BinaryNum shiftLeft () { final boolean [] newBits = new boolean [ bits.length ] ; for ( int i = 1 ; i < ( bits.length ) ; i ++ ) { newBits [ ( i - 1 ) ] = bits [ i ] ; } newBits [ ( ( bits.length ) - 1 ) ] = false ; return new BinaryNum ( newBits ) ; } 
public void testIterFilterLimitOffset () { java.lang.Iterable < siena.base.test.model.PersonUUID > people = pm . createQuery ( siena.base.test.model.PersonUUID . class ) . filter ( "n>" , 1 ) . order ( "n" ) . iter ( 2 , 1 ) ; assertNotNull ( people ) ; siena.base.test.model.PersonUUID [] array = new siena.base.test.model.PersonUUID [] { siena.base.test.BaseAsyncTest.UUID_EINSTEIN } ; int i = 0 ; for ( siena.base.test.model.PersonUUID PersonIntKey : people ) { assertEquals ( array [ i ] , PersonIntKey ) ; i ++ ; } } 
public int countEventsAtLocation ( java.lang.String id ) { int counter = - 1 ; java.lang.String request = handlers.HttpHandler . eventCounter ( id ) ; try { counter = java.lang.Integer . parseInt ( new handlers.HttpTask () . execute ( "GET" , request ) . get () . trim () ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } catch ( java.util.concurrent.ExecutionException e ) { e . printStackTrace () ; } return counter ; } 
public emerald.portal.JourneyBuilder clickMessageBoxActionMenu () { boolean open = false ; if ( core.Actions . find ( common.DriverManager . getDriver ( DriverType.LOOP ) , emerald.portal.JourneyBuilder.mbActionMenu ) ) { open = true ; } core.Actions . click ( common.DriverManager . getDriver ( DriverType.LOOP ) , emerald.portal.JourneyBuilder.btnMessageActionMenu ) ; core.Wait . waitFor ( common.DriverManager . getDriver ( DriverType.LOOP ) , emerald.portal.JourneyBuilder.mbActionMenu , ( ! open ) ) ; return this ; } 
@ java.lang.Override public void render ( gov.nasa.worldwind.render.DrawContext dc ) { try { super . render ( dc ) ; } catch ( java.lang.NullPointerException e ) { boolean followTerrain = isFollowTerrain () ; try { setFollowTerrain ( false ) ; super . render ( dc ) ; } finally { setFollowTerrain ( followTerrain ) ; } } } 
@ java.lang.Override public double distance ( final geogebra.common.kernel.geos.GeoPoint2 p ) { double distance = java.lang.Double.POSITIVE_INFINITY ; for ( int i = 0 ; i < ( geoList . size () ) ; i ++ ) { final geogebra.common.kernel.geos.GeoElement geo = geoList . get ( i ) ; final double d = geo . distance ( p ) ; if ( d < distance ) { distance = d ; } } return distance ; } 
public void run () { while ( true ) { try { java.lang.String message ; int length = input . readInt () ; if ( length > 0 ) { byte [] b = new byte [ length ] ; input . readFully ( b ) ; message = new java.lang.String ( b , "UTF-8" ) ; this . sendMessage ( network.AppWorker . handleMessage ( message ) ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; break; } } } 
public final void cvttpd2dq ( jdk.vm.ci.code.Register dst , jdk.vm.ci.code.Register src ) { assert ( dst . getRegisterCategory () . equals ( AMD64.XMM ) ) && ( src . getRegisterCategory () . equals ( AMD64.XMM ) ) ; com.oracle.graal.asm.amd64.AMD64InstructionAttr attributes = new com.oracle.graal.asm.amd64.AMD64InstructionAttr ( com.oracle.graal.asm.amd64.AMD64Assembler.AvxVectorLen.AVX_128bit , false , false , false , false , target ) ; int encode = simdPrefixAndEncode ( dst , Register.None , src , com.oracle.graal.asm.amd64.AMD64Assembler.VexSimdPrefix.VEX_SIMD_66 , com.oracle.graal.asm.amd64.AMD64Assembler.VexOpcode.VEX_OPCODE_0F , attributes ) ; emitByte ( 230 ) ; emitByte ( ( 192 | encode ) ) ; } 
@ org.junit.Test @ com.hp.autonomy.frontend.selenium.framework.logging.ResolvedBug ( value = "FIND-93" ) public void testNoResults () { final com.autonomy.abc.selenium.find.results.ListView results = findService . search ( "thissearchwillalmostcertainlyreturnnoresults" ) ; new org.openqa.selenium.support.ui.WebDriverWait ( getDriver () , 60L ) . withMessage ( "No results message should appear" ) . until ( org.openqa.selenium.support.ui.ExpectedConditions . textToBePresentInElement ( results . resultsDiv () , "No results found" ) ) ; findPage . scrollToBottom () ; final int occurrences = org.apache.commons.lang3.StringUtils . countMatches ( results . resultsDiv () . getText () , "results found" ) ; verifyThat ( "Only one message showing at the bottom of search results" , occurrences , org.hamcrest.core.Is . is ( 1 ) ) ; } 
public void putLongArray ( final long [] data , boolean length ) { int l = data.length ; if ( length ) putInt ( l ) ; l *= com.heerbann.unsafe.UnsafeBuffer.sizeOfLong ; ensure ( ( ( position ) + l ) ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . copyMemory ( data , com.heerbann.unsafe.UnsafeBuffer.longArrayOffset , null , ( ( pointer ) + ( position ) ) , l ) ; position += l ; end = ( ( position ) > ( end ) ) ? position : end ; } 
private void updateLine () { int charToRemove = line . length () ; java.lang.System.out . print ( "\r" ) ; line = java.lang.String . format ( "Frames rendered: %d remaining: %d credits earned: %s | %s" , rendered , remaining , ( ( creditsEarned ) != null ? creditsEarned : "unknown" ) , ( ( status ) + ( exiting ? " (Exiting after this frame)" : "" ) ) ) ; java.lang.System.out . print ( line ) ; for ( int i = line . length () ; i <= charToRemove ; i ++ ) { java.lang.System.out . print ( " " ) ; } } 
public int lookup ( int index , short remainder ) { int currentIndex = index ; org.bucaojit.filter.Slot currentSlot = set . get ( currentIndex ) ; int runStart = 0 ; if ( currentSlot . getMetadata () . isClear () ) return - 1 ; runStart = findRunStart ( currentIndex ) ; return checkQuotient ( runStart , remainder ) ; } 
long exceptsPerCycle ( int cycle ) { net.openhft.chronicle.queue.impl.single.SingleChronicleQueueExcerpts.StoreTailer tailer = acquireTailer () ; try { long index = rollCycle . toIndex ( cycle , 0 ) ; if ( tailer . moveToIndex ( index ) ) { assert ( tailer.store . refCount () ) > 0 ; return ( tailer.store . lastSequenceNumber ( tailer ) ) + 1 ; } else { return - 1 ; } } catch ( java.io.StreamCorruptedException e ) { throw new java.lang.IllegalStateException ( e ) ; } finally { tailer . release () ; } } 
public java.lang.String [] getPacket ( ) throws java.io.IOException { while ( input . ready () ) { char c = ( ( char ) ( input . read () ) ) ; if ( c == '\n' ) { java.lang.String output = buffer . toString () ; buffer = new java.lang.StringBuilder () ; return output . split ( "\t" ) ; } else buffer . append ( c ) ; } return null ; } 
public java.lang.String getFormattedDuration () { int seconds = ( ( int ) ( ( ( mDuration ) / 1000 ) % 60 ) ) ; int minutes = ( ( int ) ( ( ( mDuration ) / ( 1000 * 60 ) ) % 60 ) ) ; int hours = ( ( int ) ( ( ( mDuration ) / ( ( 1000 * 60 ) * 60 ) ) % 24 ) ) ; return java.lang.String . format ( "%02d:%02d:%02d" , hours , minutes , seconds ) ; } 
@ java.lang.Override public boolean onBackPressed () { int currentPos = mViewPager . getCurrentItem () ; java.lang.String tag = mSectionsPagerAdapter . getFragmentTag ( currentPos ) ; if ( tag != null ) { android.support.v4.app.Fragment currentFragment = getChildFragmentManager () . findFragmentByTag ( tag ) ; if ( currentFragment instanceof tw.edu.ntust.et.mit.jonkermalacca.MainActivity.OnBackPressedListener ) { return ( ( tw.edu.ntust.et.mit.jonkermalacca.MainActivity.OnBackPressedListener ) ( currentFragment ) ) . onBackPressed () ; } } return false ; } 
public java.lang.String getFormattedDate ( java.lang.String str ) { com.github.TimeParser tp = new com.github.TimeParser () ; long [] time = tp . GetInput ( str ) ; java.util.Date date0 = new java.util.Date ( time [ 0 ] ) ; java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat ( "yyyy-MM-dd HH:mm:ss z" ) ; sdf . setTimeZone ( java.util.TimeZone . getTimeZone ( "GMT-4" ) ) ; java.lang.String formattedDate = sdf . format ( date0 ) ; return formattedDate ; } 
private void initializeModel ( ) throws java.io.IOException { java.util.List < edu.mtu.parser.ChemicalDto > chemicals = edu.mtu.parser.Parser . parseChemicals ( properties . getChemicalsFileName () ) ; edu.mtu.catalog.ReactionRegistry registry = edu.mtu.catalog.ReactionRegistry . getInstance () ; edu.mtu.Reactor.Reactor reactor = edu.mtu.Reactor.Reactor . getInstance () ; for ( edu.mtu.parser.ChemicalDto chemical : chemicals ) { edu.mtu.compound.Species species = registry . getSpecies ( chemical.formula ) ; reactor . createEntities ( species , chemical.mols ) ; } } 
private boolean isFloat ( java.lang.String str ) { if ( str . contains ( "$" ) ) { return isRegisterFloat . get ( str ) ; } else { return ( ( str . contains ( "." ) ) || ( str . startsWith ( "_f" ) ) ) || ( str . endsWith ( "_float" ) ) ; } } 
public void actionPerformed ( java.awt.event.ActionEvent event ) { int hold = 0 ; newEmployee = new workSQL.Employee ( hold , "" , "" , "" , "" ) ; workSQL.EmployeeDetailDialog addD = new workSQL.EmployeeDetailDialog ( thisFrame , thisFrame , "Add a new employee" , true , newEmployee ) ; addD.updateButton . setEnabled ( false ) ; addD.deleteButton . setEnabled ( false ) ; addD.employeeNumberField . setEnabled ( false ) ; addD . setVisible ( true ) ; } 
public void shuffle () { for ( int i = 51 ; i > 0 ; i -- ) { int shuf = ( ( int ) ( ( java.lang.Math . random () ) * ( i + 1 ) ) ) ; Card temp = deck [ i ] ; deck [ i ] = deck [ shuf ] ; deck [ shuf ] = temp ; } cardsUsed = 0 ; } 
public byte [] readPacket () { byte [] buff = new byte [] {} ; byte [] buffer = this . socket . readPacket () ; byte [] bytes = new byte [] { ( ( byte ) ( buffer [ ( ( buffer.length ) - 1 ) ] ) ) } ; if ( bytes == ( org.itxtech.synapseapi.network.synlib.ServerConnection.MAGIC_BYTES ) ) { if ( ( buffer.length ) > 4 ) {} } return buff ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { int position = ( ( java.lang.Integer ) ( v . getTag () ) ) ; me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType eventType ; if ( ( v . getId () ) == ( R.id.ib_hp_minus_select ) ) { eventType = me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType.DECREASE_HEALTH ; } else if ( ( v . getId () ) == ( R.id.ib_hp_add_select ) ) { eventType = me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType.INCREASE_HEALTH ; } else { eventType = me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType.ITEM_CLICK ; } clickListener . onCombatClick ( position , eventType ) ; } 
public void actionPerformed ( java.awt.event.ActionEvent event ) { if ( ( movieIdChosen ) != null ) { int id = java.lang.Integer . parseInt ( movieIdChosen ) ; rentalInfoController . returnMovie ( id , clientSelected . getId () ) ; movieController . returnMovie ( id , panel , scroll ) ; } } 
public int pull_chunk ( double [] data_buffer , double [] timestamp_buffer , double timeout ) throws java.lang.Exception { int [] ec = new int [] { 0 } ; long res = edu.ucsd.sccn.LSL.inst . lsl_pull_chunk_d ( obj , data_buffer , timestamp_buffer , data_buffer.length , timestamp_buffer.length , timeout , ec ) ; edu.ucsd.sccn.LSL . check_error ( ec ) ; return ( ( int ) ( res ) ) ; } 
@ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/createFolder" ) @ javax.ws.rs.Produces ( value = pt.webdetails.cpf.utils.MimeTypes.JSON ) public java.lang.String createFolder ( @ javax.ws.rs.QueryParam ( value = pt.webdetails.cfr.CfrApi.MethodParams.PATH ) java.lang.String path ) throws java.lang.Exception { path = pt.webdetails.cfr.CfrApi . checkRelativePathSanity ( path ) ; if ( ( path == null ) || ( org.apache.commons.lang.StringUtils . isBlank ( path ) ) ) { throw new java.lang.Exception ( "path is null or empty" ) ; } boolean createResult = getRepository () . createFolder ( path ) ; return new org.json.JSONObject () . put ( "result" , createResult ) . toString () ; } 
public Graph [] getConnectedComponents () { int nc = flagConnectedComponents () ; Graph [] comps = new Graph [ nc ] ; for ( int i = 0 ; i < nc ; i ++ ) { comps [ i ] = new Graph () ; } for ( Graph.Node n : nodes ) { comps [ ( ( int ) ( n.flag ) ) ] . nodes . add ( n ) ; } return comps ; } 
private static int findValue ( int needle , java.lang.Integer [] haystack ) { int start = 0 ; int end = haystack.length ; while ( start < end ) { int midpoint = ( start + end ) / 2 ; int test = haystack [ midpoint ] ; if ( test == needle ) { return midpoint ; } else if ( test < needle ) { start = midpoint + 1 ; } else { end = midpoint ; } } return - 1 ; } 
@ java.lang.Override public final void unregisterRpcNotificationListener ( com.smartdevicelink.protocol.enums.FunctionID functionID , com.smartdevicelink.proxy.rpc.listeners.OnRPCNotificationListener rpcNotificationListener ) { int id = functionID . getId () ; java.util.HashSet < com.smartdevicelink.proxy.rpc.listeners.OnRPCNotificationListener > listenerSet = mNotificationListeners . get ( id ) ; if ( listenerSet != null ) { listenerSet . remove ( rpcNotificationListener ) ; if ( ( listenerSet . isEmpty () ) && ( ( mSdlProxyALM ) != null ) ) { mSdlProxyALM . removeOnRPCNotificationListener ( functionID ) ; mNotificationListeners . put ( id , null ) ; } } } 
protected java.lang.Long doInBackground ( com.androidexpansion.filedownloader.DownloadExtraAssets [] remoteLocalResources ) { int count = remoteLocalResources.length ; long totalSize = 0 ; for ( int i = 0 ; i < count ; i ++ ) { totalSize += downloadExtraAssets . downloadFile ( remoteLocalResources [ i ] ) ; java.lang.Integer progress = ( ( int ) ( ( ( i + 1 ) / ( ( float ) ( count ) ) ) * 100 ) ) ; publishProgress ( progress ) ; if ( isCancelled () ) break; } return totalSize ; } 
@ org.junit.Test public void testHGapVGapAccessors () { com.github.bordertech.wcomponents.layout.FlowLayout flow ; boolean isVertical ; for ( com.github.bordertech.wcomponents.layout.FlowLayout.Alignment a : FlowLayout.Alignment . values () ) { isVertical = FlowLayout.VERTICAL . equals ( a ) ; flow = new com.github.bordertech.wcomponents.layout.FlowLayout ( a , com.github.bordertech.wcomponents.layout.FlowLayout_Test.GAP ) ; org.junit.Assert . assertEquals ( "Incorrect vertical gap" , ( isVertical ? com.github.bordertech.wcomponents.layout.FlowLayout_Test.GAP : 0 ) , flow . getVgap () ) ; org.junit.Assert . assertEquals ( "incorrect horizontal gap" , ( isVertical ? 0 : com.github.bordertech.wcomponents.layout.FlowLayout_Test.GAP ) , flow . getHgap () ) ; } } 
private void addPorts ( java.lang.StringBuilder b ) { if ( ( ports . size () ) > 0 ) { java.lang.String [] portsS = new java.lang.String [ ports . size () ] ; int i = 0 ; for ( java.lang.String port : ports ) { portsS [ ( i ++ ) ] = validatePortExposure ( port ) ; } DockerFileKeyword.EXPOSE . addTo ( b , portsS ) ; } } 
public boolean hasGameEnded () { int countOfAliveWolves = 0 ; int countOfAliveCitizens = 0 ; for ( com.raibaz.lupus.game.Player p : g . getPlayers () ) { if ( p . isAlive () ) { if ( ( p . getRole () ) == ( PlayerRole.WOLF ) ) { countOfAliveWolves ++ ; } else { countOfAliveCitizens ++ ; } } } return ( countOfAliveWolves == 0 ) || ( countOfAliveWolves >= countOfAliveCitizens ) ; } 
int convertSImeiToID ( java.lang.String text ) { if ( text == null ) text = java.util.Calendar . getInstance () . getTime () . toString () ; int sum = 0 ; char [] imei = text . toCharArray () ; for ( int i = 0 ; i < ( text . length () ) ; i ++ ) sum = sum + ( imei [ i ] ) ; return 16384 + sum ; } 
private void initHeaderViewToRefresh ( int deltaY ) { int topDistance = UpdateHeadViewMarginTop ( deltaY ) ; if ( ( topDistance < 0 ) && ( topDistance > ( - ( headViewHeight ) ) ) ) { mBaseHeaderAdapter . pullViewToRefresh ( deltaY ) ; mHeaderState = com.sak.ultilviewlib.UltimateRefreshView.PULL_TO_REFRESH ; } else if ( ( topDistance > 0 ) && ( ( mHeaderState ) != ( com.sak.ultilviewlib.UltimateRefreshView.RELEASE_TO_REFRESH ) ) ) { mBaseHeaderAdapter . releaseViewToRefresh ( deltaY ) ; mHeaderState = com.sak.ultilviewlib.UltimateRefreshView.RELEASE_TO_REFRESH ; } } 
public void test_getLimits () { double [] orgLimits = ( ( double [] ) ( limits . clone () ) ) ; double [] l = f1 . getLimits () ; assertTrue ( "Wrong limits" , ( l == ( limits ) ) ) ; l [ 0 ] = 3.14527 ; assertTrue ( "Limits copied" , ( l != orgLimits ) ) ; } 
private pl.sdacaemy.data.structures.impl.ForwardList.Node getItemNode ( int index ) throws java.lang.IndexOutOfBoundsException { if ( index == 0 ) { if ( ( head ) == null ) { throw new java.lang.IndexOutOfBoundsException ( ( "Sorry no such element: " + index ) ) ; } return head ; } int currentIndex = 0 ; pl.sdacaemy.data.structures.impl.ForwardList.Node currentNode = head ; while ( ( ( currentNode.next ) != null ) && ( currentIndex < index ) ) { ++ currentIndex ; currentNode = currentNode.next ; } if ( currentNode == null ) { throw new java.lang.IndexOutOfBoundsException ( ( "Sorry no such element: " + index ) ) ; } return currentNode ; } 
@ java.lang.Override protected com.rastating.droidbeard.entities.TVShow doInBackground ( java.lang.Long . . . longs ) { long tvdbid = longs [ 0 ] ; com.rastating.droidbeard.entities.TVShow show = getTVShow ( tvdbid ) ; if ( show != null ) { java.util.List < com.rastating.droidbeard.entities.Season > seasons = getSeasons ( tvdbid ) ; if ( seasons != null ) { java.util.Collections . sort ( seasons , new com.rastating.droidbeard.comparators.SeasonComparator () ) ; java.util.Collections . reverse ( seasons ) ; show . setSeasons ( seasons ) ; } } return show ; } 
protected static boolean isAllASCII ( java.lang.String input ) { boolean isASCII = true ; for ( int i = 0 ; i < ( input . length () ) ; i ++ ) { int c = input . charAt ( i ) ; if ( c > 127 ) { isASCII = false ; break; } } return isASCII ; } 
public boolean isState ( java.lang.String input ) { boolean matchFound = false ; int i = 0 ; while ( ( matchFound == false ) && ( i < ( states.length ) ) ) { if ( states [ i ] . equalsIgnoreCase ( input ) ) { matchFound = true ; } i ++ ; } return matchFound ; } 
@ java.lang.Override public java.util.Vector cnt () { java.util.Vector center = new java.util.Vector ( 0 , 0 ) ; int i = outline . size () ; for ( java.util.Vector vector : outline ) { center = center . add ( vector . inc ( i ) ) ; -- i ; } return center . dec ( outline . size () ) ; } 
private int getProgressForAngle ( double angle ) { int touchProgress = ( ( int ) ( java.lang.Math . round ( ( ( valuePerDegree () ) * angle ) ) ) ) ; if ( mDragging ) { touchProgress = ( touchProgress < 0 ) ? com.triggertrap.seekarc.SeekArc.INVALID_PROGRESS_VALUE : touchProgress ; touchProgress = ( touchProgress > ( mMax ) ) ? com.triggertrap.seekarc.SeekArc.INVALID_PROGRESS_VALUE : touchProgress ; return touchProgress ; } else return - 1 ; } 
private int menorDentreAs ( double [] razoes ) { double menor = razoes [ 0 ] ; int indice = 0 ; for ( int i = 1 ; i < ( razoes.length ) ; i ++ ) { if ( ( razoes [ i ] ) > 0 ) { if ( ( java.lang.Double . compare ( razoes [ i ] , menor ) ) < 0 ) { menor = razoes [ i ] ; indice = i ; } } } return indice ; } 
private int getManhattan ( int row , int col , int point ) { if ( point == 0 ) return 0 ; int rowP = point / ( dim ) ; int colP = ( point - ( rowP * ( dim ) ) ) - 1 ; return ( java.lang.Math . abs ( ( row - rowP ) ) ) + ( java.lang.Math . abs ( ( col - colP ) ) ) ; } 
public static double [] rexp ( int count , double lambda ) { double [] result = new double [ count ] ; double current = 0 ; for ( int i = 0 ; i < count ; i ++ ) { current = ( ( - 1 ) / lambda ) * ( java.lang.Math . log ( ( 1 - ( java.lang.Math . random () ) ) ) ) ; result [ i ] = current ; } return result ; } 
@ java.lang.Override public co.cask.cdap.data2.queue.DequeueResult < byte [] > dequeue ( int maxBatchSize ) throws java.io.IOException { co.cask.cdap.data2.queue.DequeueResult < byte [] > result = performDequeue ( maxBatchSize ) ; byte [] floorKey = consumingEntries . floorKey ( scanStartRow ) ; updateStartRow ( ( floorKey == null ? scanStartRow : floorKey ) ) ; return result ; } 
public void computeSegments () { int maxX = ( graph . dimX () ) - 1 ; int maxY = ( graph . dimY () ) - 1 ; for ( int currentY = maxY ; currentY >= 0 ; currentY -- ) { currentWindow = sbr.Range . TwoDimensionalRange ( 0 , maxX , currentY , maxY ) ; computeSegmentsInRange () ; for ( sbr.Segment seg : segments ) assert ! ( seg . getLinks () . isEmpty () ) ; } } 
private void sendAck () { android.util.Log . v ( com.theshopatvsp.levelandroidsdk.ble.BleManager.TAG , "sending ACK for record" ) ; ( ackSent ) ++ ; byte [] packet = new byte [] { ( ( byte ) ( deviceId . getPacketIdOut () ) ) , ( ( byte ) ( DeviceCommand.ACK . getCommand () ) ) , ( ( byte ) ( deviceId . getPacketIdIn () ) ) } ; deviceId . incPacketIdOut () ; addCommand ( new com.theshopatvsp.levelandroidsdk.ble.model.LevelCommand ( com.theshopatvsp.levelandroidsdk.ble.model.constants.ReadWriteEnum.WRITE , com.theshopatvsp.levelandroidsdk.ble.model.constants.CharacteristicEnum.UART_TX , packet ) ) ; } 
private boolean contains ( KdTree.Node node , edu.princeton.cs.algs4.Point2D p ) { if ( node == null ) return false ; int cmp = KdTree . compare ( p , node ) ; if ( cmp < 0 ) return contains ( node.lb , p ) ; else if ( cmp > 0 ) return contains ( node.rt , p ) ; else return node.p . equals ( p ) ; } 
public java.lang.String deleteAccount () { if ( statusMessage . isEmpty () ) { int user_id = ( ( int ) ( javax.faces.context.FacesContext . getCurrentInstance () . getExternalContext () . getSessionMap () . get ( "user_id" ) ) ) ; try { userFacade . deleteUser ( user_id ) ; } catch ( javax.ejb.EJBException e ) { username = "" ; statusMessage = "Something went wrong while deleting your account!" ; return "" ; } return "/index.xhtml?faces-redirect=true" ; } return "/index.xhtml?faces-redirect=true" ; } 
private static long scan_isbn ( java.lang.String prompt ) { boolean got = false ; long isbn = 0 ; while ( ! got ) { try { java.lang.System.out . print ( prompt ) ; java.lang.String x = Main.scanner . nextLine () ; isbn = Main . normalizeISBN ( x ) ; got = true ; } catch ( java.lang.NumberFormatException e ) { java.lang.System.out . println ( "ERROR: ISBN must contain some numbers(e.g. 143-2334-12)\n" ) ; got = false ; } } return isbn ; } 
public void xor ( int mask ) { int res = ( value ) ^ ( mask & 8388607 ) ; if ( ( ( ( mask & 8388608 ) != 0 ) && ( ( ( value ) & 8388608 ) == 0 ) ) || ( ( ( mask & 8388608 ) == 0 ) && ( ( ( value ) & 8388608 ) != 0 ) ) ) { res = - res ; } value = res ; } 
public int colContains ( int x , int num ) { int count = 0 ; for ( int o = 0 ; o < 9 ; o ++ ) { if ( ( this . grid [ o ] [ x ] . value ) == num ) count ++ ; } return count ; } 
@ java.lang.Override public void processAction ( javax.portlet.PortletConfig portletConfig , javax.portlet.ActionRequest actionRequest , javax.portlet.ActionResponse actionResponse ) throws java.lang.Exception { java.lang.String status = com.liferay.portal.kernel.util.ParamUtil . getString ( actionRequest , "status" ) ; java.lang.String portletResource = com.liferay.portal.kernel.util.ParamUtil . getString ( actionRequest , "portletResource" ) ; javax.portlet.PortletPreferences preferences = com.liferay.portlet.PortletPreferencesFactoryUtil . getPortletSetup ( actionRequest , portletResource ) ; preferences . setValue ( "status" , status ) ; preferences . store () ; com.liferay.portal.kernel.servlet.SessionMessages . add ( actionRequest , "potlet-config-saved" ) ; } 
private double calculateHeight ( double alpha , double betta , double a ) { double h = roundNumber ( ( a * ( java.lang.Math . tan ( java.lang.Math . toRadians ( alpha ) ) ) ) , 2 ) ; double h1 = roundNumber ( ( a * ( java.lang.Math . tan ( java.lang.Math . toRadians ( betta ) ) ) ) , 2 ) ; return h + h1 ; } 
private void gotLSAUpdateMsg ( socs.network.message.Packet packet ) { java.lang.System.out . println ( ( "received LSUPDATE from " + ( packet.simulatedSrcIP ) ) ) ; socs.network.node.LinkStateDatabase db = this . linkStateDatabase ; for ( socs.network.message.LSA lsa : packet.lsaArray ) { try { boolean newLSA = db . updateLSA ( lsa ) ; if ( ! newLSA ) { continue; } else { socs.network.node.Link linkOverWhichWeReceivedLSA = mapIpLink . get ( packet.simulatedSrcIP ) ; forwardToNeighbors ( linkOverWhichWeReceivedLSA , lsa ) ; } } catch ( java.lang.Exception e ) { java.lang.System.err . println ( "could not update LinkStateDatabase" ) ; } } } 
@ java.lang.Override public boolean exists () { boolean exists = super . exists () ; if ( ! exists ) { org.eclipse.emf.ecore.EObject input = getInput ( false ) ; if ( input != null ) { org.eclipse.emf.ecore.resource.Resource resource = input . eResource () ; if ( ( resource != null ) && ( ( resource . getResourceSet () ) != null ) ) { exists = resource . getResourceSet () . getURIConverter () . exists ( resource . getURI () , null ) ; } } } return exists ; } 
public synchronized void remove ( final java.lang.String pathname ) { it.grid.storm.filesystem.AclLockPoolElement e = __map . get ( pathname ) ; if ( null != e ) { int count = e . decrementUsageCountAndGetIt () ; if ( 0 >= count ) __map . remove ( pathname ) ; } } 
private float getDesiredZoomLevel ( int level ) { float zoom = 13.0F ; switch ( level ) { case 1 : zoom = 13.0F ; break; case 2 : zoom = 13.5F ; break; case 3 : zoom = 14.0F ; break; case 4 : zoom = 14.5F ; break; case 5 : zoom = 15.0F ; break; } return zoom ; } 
public static boolean isInteger ( java.lang.String str ) { if ( ( str . length () ) == 0 ) { return false ; } int i = - 1 ; while ( ( ++ i ) < ( str . length () ) ) { char c = str . charAt ( i ) ; if ( ( c < '0' ) || ( c > '9' ) ) { return false ; } } return true ; } 
private static java.lang.String executeMarkAsComplete ( java.lang.String userCommand ) { int taskId = tasknote.parser.Parser . getUpdateTaskId ( userCommand , true ) ; tasknote.shared.TaskObject taskObject ; if ( tasknote.logic.TaskNoteControl.taskNote . isValidTaskId ( taskId ) ) { java.util.ArrayList < tasknote.shared.TaskObject > displayList = tasknote.logic.TaskNoteControl.taskNote . getDisplayList () ; taskObject = displayList . get ( taskId ) ; } else { taskObject = null ; } tasknote.logic.TaskNoteControl.command = new tasknote.logic.Commands.CompleteCommand ( tasknote.logic.TaskNoteControl.taskNote , taskObject ) ; tasknote.logic.TaskNoteControl.command . execute () ; tasknote.logic.TaskNoteControl.command . refreshDisplay () ; java.lang.String response = tasknote.logic.TaskNoteControl.command . getFeedBack () ; return response ; } 
@ java.lang.Override public int compare ( ge.edu.freeuni.sdp.xo.achiev.FakeDBObject arg0 , ge.edu.freeuni.sdp.xo.achiev.FakeDBObject arg1 ) { int scoreFirst = arg0 . getScore () ; int scoreSecond = arg1 . getScore () ; if ( scoreFirst == scoreSecond ) return 0 ; else if ( scoreFirst > scoreSecond ) return - 1 ; return 1 ; } 
public static int differenceInDays ( java.util.Date firstDate , java.util.Date secondDate ) { long difference = ( firstDate . getTime () ) - ( secondDate . getTime () ) ; return ( ( int ) ( difference ) ) / ( ( ( 24 * 60 ) * 60 ) * 1000 ) ; } 
@ java.lang.Override public boolean equals ( java.lang.Object obj ) throws java.lang.NullPointerException { boolean isEqual = false ; if ( obj != null ) { isEqual = ( ( obj . getClass () ) != ( dss.lingvo.hflts.TTHFLTS . class ) ) && ( java.util.Arrays . equals ( this . terms , ( ( dss.lingvo.hflts.TTHFLTS ) ( obj ) ) . getTerms () ) ) ; } return isEqual ; } 
@ java.lang.Override public void onItemSelected ( java.lang.String ean ) { android.os.Bundle args = new android.os.Bundle () ; args . putString ( BookDetail.EAN_KEY , ean ) ; it.jaschke.alexandria.BookDetail fragment = new it.jaschke.alexandria.BookDetail () ; fragment . setArguments ( args ) ; int id = R.id.container ; if ( ( findViewById ( R.id.right_container ) ) != null ) { id = R.id.right_container ; } getSupportFragmentManager () . beginTransaction () . replace ( id , fragment ) . addToBackStack ( null ) . commit () ; } 
private static double getScoreForDocumentId ( int documentId , org.terrier.querying.SearchRequest srq ) { org.terrier.matching.ResultSet rs = srq . getResultSet () ; if ( rs == null ) { return 0 ; } int [] docIds = rs . getDocids () ; double [] scores = rs . getScores () ; for ( int i = 0 ; i < ( docIds.length ) ; i ++ ) { if ( ( docIds [ i ] ) == documentId ) { return scores [ i ] ; } } return 0 ; } 
public static int fastRecursiveExponentiationModulo ( int base , int exponent , int mod ) { if ( exponent == 0 ) return 1 ; if ( exponent == 1 ) return base ; final int resultOnHalfExponent = com.jwetherell.algorithms.mathematics.Exponentiation . fastRecursiveExponentiationModulo ( base , ( exponent / 2 ) , mod ) ; if ( ( exponent % 2 ) == 0 ) return ( resultOnHalfExponent * resultOnHalfExponent ) % mod ; else return ( ( ( resultOnHalfExponent * resultOnHalfExponent ) % mod ) * base ) % mod ; } 
@ java.lang.Override public boolean onMarkerClick ( com.google.android.gms.maps.model.Marker marker ) { int markerPosition = markers . indexOf ( marker ) ; selectMarker ( markerPosition ) ; if ( ( listener ) != null ) { if ( isZoomed () ) { listener . onActivityMarkerPressedAtIndex ( markerPosition ) ; } else { listener . onLegMarkerPressedAtIndex ( markerPosition ) ; } } return true ; } 
public void analyze () { boolean error = false ; for ( nez.lang.Production p : this . peg . getProductionList () ) { if ( ! ( this . analizeConsumption ( p . getExpression () ) ) ) { error = true ; } } if ( error ) { nez.util.ConsoleUtils . exit ( 1 , "Grammar Error" ) ; } } 
@ java.lang.Override public com.lukgru.galgo.runner.GenerationResult < T > generate () { com.lukgru.galgo.model.Population < T > population = initialPopulation ; int iteration = 0 ; do { com.lukgru.galgo.model.Population < T > selectedForReproduction = selection ( population , fitnessFunction ) ; com.lukgru.galgo.model.Population < T > newPopulation = reproduce ( selectedForReproduction , crossoverFunction ) ; this . mutate ( newPopulation ) ; population = newPopulation ; iteration ++ ; } while ( ! ( solutionFound ( population , fitnessFunction ) ) ) ; return new com.lukgru.galgo.runner.GenerationResult ( population , iteration ) ; } 
private synchronized void await ( org.opendaylight.vtn.manager.it.ofmock.impl.FlowTable.TableCond cond , long timeout ) throws java.lang.InterruptedException , java.util.concurrent.TimeoutException { if ( ! ( cond . check () ) ) { long msec = timeout ; long deadline = ( java.lang.System . currentTimeMillis () ) + timeout ; do { wait ( msec ) ; if ( cond . check () ) { return; } msec = deadline - ( java.lang.System . currentTimeMillis () ) ; } while ( msec > 0 ) ; throw new java.util.concurrent.TimeoutException ( cond . getTimeoutError () ) ; } } 
@ java.lang.Override public synchronized boolean open () { if ( isOpen () ) return true ; final boolean open = camera . open ( cameraIndex ) ; if ( open ) { camera . set ( 5 , 60 ) ; com.shootoff.camera.CameraFactory . openCamerasAdd ( this ) ; } return open ; } 
public long getTripStartDateOnSharedPreferences () { mSharedPreferences = this . getPreferences ( Context.MODE_PRIVATE ) ; long value_long = mSharedPreferences . getLong ( getString ( R.string.trip_start_date_tag ) , 0 ) ; if ( value_long > 0 ) { mSPEditor = mSharedPreferences . edit () ; mSPEditor . commit () ; } return value_long ; } 
public boolean touched ( testagent.Agent agent ) { if ( pick ) return false ; double distance = java.lang.Math . sqrt ( ( ( java.lang.Math . pow ( ( ( agent.x ) - ( x ) ) , 2 ) ) + ( java.lang.Math . pow ( ( ( agent.y ) - ( y ) ) , 2 ) ) ) ) ; return distance <= ( ( size ) / ( agentIsSized ? 1 : 2 ) ) ; } 
@ java.lang.Override public boolean onCreateOptionsMenu ( android.view.Menu menu ) { getMenuInflater () . inflate ( R.menu.menu_gastro_activity , menu ) ; android.view.MenuItem item = menu . findItem ( R.id.action_add_favorite ) ; boolean isFavorite = org.berlin_vegan.bvapp.GastroLocations . containsFavorite ( mGastroLocation . getId () ) ; if ( isFavorite ) { item . setIcon ( getResources () . getDrawable ( R.mipmap.ic_star_white_24dp ) ) ; } else { item . setIcon ( getResources () . getDrawable ( R.mipmap.ic_star_outline_white_24dp ) ) ; } return true ; } 
@ java.lang.Override public java.util.List < de.dhbw.persistence.Match > getMatches () { java.util.List < de.dhbw.persistence.Match > matches = new java.util.ArrayList <> () ; if ( this . matches . isEmpty () ) { return matches ; } for ( java.lang.String matchId : this . matches . split ( ";" ) ) { long id = java.lang.Long . parseLong ( matchId ) ; de.dhbw.persistence.Match match = DependecyKnowItAll.matchRepository . getMatchById ( id ) ; matches . add ( match ) ; } return matches ; } 
@ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton buttonView , boolean isChecked ) { if ( ( ( currPitInfoIndex ) >= 0 ) && ( ( currTeam ) != null ) ) { try { boolean tempValue = pit_auto_high_goal_Button . isChecked () ; if ( ( currTeam . getBoolean ( DBContract.TablePitInfo.COLNAME_PIT_AUTO_HIGH_GOAL ) ) != tempValue ) { currTeam . put ( DBContract.TablePitInfo.COLNAME_PIT_AUTO_HIGH_GOAL , tempValue ) ; if ( ! ( fillingPitInfo ) ) { dbHelper . updatePitInfo ( currTeam ) ; } } } catch ( org.json.JSONException e ) {} } } 
public boolean removeConnection ( com.flashvisions.server.red5.jsbridge.listeners.JsBridgeConnection connection ) { boolean removed = false ; java.util.Iterator < com.flashvisions.server.red5.jsbridge.listeners.JsBridgeConnection > iterator = connections . iterator () ; while ( iterator . hasNext () ) { com.flashvisions.server.red5.jsbridge.listeners.JsBridgeConnection conn = iterator . next () ; if ( conn != null ) { connections . remove ( conn ) ; removed = true ; break; } } return removed ; } 
public void putByteArray ( final byte [] data ) { int l = data.length ; putInt ( l ) ; ensure ( ( ( position ) + l ) ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . copyMemory ( com.heerbann.unsafe.UnsafeBuffer . toAddress ( data ) , ( ( pointer ) + ( position ) ) , l ) ; position += l ; end = ( ( position ) > ( end ) ) ? position : end ; } 
private void placeFoodBlobs () { int counter = 11 ; while ( counter != 0 ) { java.awt.Point [] foodBlob = makeFoodBlob () ; if ( foodBlob != null ) { for ( java.awt.Point p : foodBlob ) { map . getCell ( p ) . setHasFood ( 5 ) ; } counter -- ; } } } 
public boolean convert () { java.lang.String [] otherArgs = new java.lang.String [] { getAvroHDFSDest () , getParquetHDFSDest () } ; boolean success = false ; try { org.apache.hadoop.util.ToolRunner . run ( this , otherArgs ) ; success = true ; } catch ( java.lang.Exception e ) { fr.finaxys.tutorials.utils.parquet.AvroParquetConverter.LOGGER . log ( java.util.logging.Level.SEVERE , "Can't run map reduce job" , e ) ; } return success ; } 
@ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle outState ) { super . onSaveInstanceState ( outState ) ; android.support.v7.widget.LinearLayoutManager linearLayoutManager = ( ( android.support.v7.widget.LinearLayoutManager ) ( mRecyclerView . getLayoutManager () ) ) ; int position = linearLayoutManager . findFirstVisibleItemPosition () ; outState . putInt ( ir.blog.microc.movie.activities.MainActivity.FIRST_VISIBLE_ITEM_KEY , position ) ; outState . putParcelableArrayList ( ir.blog.microc.movie.activities.MainActivity.MOVIE_DATA_PARCELABLE , ( ( java.util.ArrayList < ? extends android.os.Parcelable > ) ( movieList ) ) ) ; } 
public synchronized boolean removePlayer ( CardGame.User user ) { int removeID = - 1 ; int index = 0 ; for ( CardGame.GameEngine.Player player : players ) { if ( player . getUsername () . equals ( user . getUserName () ) ) { removeID = index ; } index ++ ; } if ( removeID != ( - 1 ) ) { players . remove ( removeID ) ; return true ; } else { return false ; } } 
private boolean isPolicyCombinationValid ( java.lang.String . . . policyNames ) { boolean isValid = false ; java.lang.String firstPolicyName = policyNames [ 0 ] ; for ( java.lang.String policyName : policyNames ) { if ( ! ( policyName . equals ( firstPolicyName ) ) ) { isValid = true ; break; } } return isValid ; } 
public static double sumSigma ( int i , double [] p , double [] q , double [] b ) { double res = 0 ; for ( int l = 0 ; l < ( p.length ) ; l ++ ) { double power = ( ( p [ i ] ) * ( q [ l ] ) ) + ( b [ l ] ) ; res += java.lang.Math . exp ( power ) ; } return res ; } 
public void payForMeal ( core.agent.Message message ) { core.restaurant.agent.Customer customer = message . get ( 0 ) ; float amountPaid = message . get ( 1 ) ; float cost = 0 ; for ( core.restaurant.Check c : m_checks ) { if ( ( c . getCustomer () ) == customer ) { c . setStatus ( CheckStatusEnum.Received ) ; c . setChange ( ( amountPaid - cost ) ) ; } } print ( ( ( customer . getName () ) + " is paying for his/her meal." ) ) ; stateChanged () ; } 
public entities.obstacles.Entity createEntity ( java.lang.String eName , org.lwjgl.util.vector.Vector3f position , float rotX , float rotY , float rotZ , float scale ) { long before = java.lang.System . currentTimeMillis () ; entities.obstacles.Entity e = new entities.obstacles.Entity ( tModels . get ( eName ) , 0 , mData . get ( eName ) , position , rotX , rotY , rotZ , scale , eName ) ; world . add ( e ) ; return e ; } 
private void askQuestions () { int idx = ( firstaid_questions . size () ) - ( quesLen ) ; if ( idx < ( firstaid_questions . size () ) ) { app . speakOut ( firstaid_questions . get ( idx ) . getQues () ) ; expect_binary = true ; current_grammar = app.BINARY_RESPONSE ; } else { conclude = true ; } } 
@ org.gbif.occurrence.persistence.Test public void testKeyByColumnIterator () { int count = 0 ; java.util.Iterator < java.lang.Integer > iterator = occurrenceService . getKeysByColumn ( org.apache.hadoop.hbase.util.Bytes . toBytes ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.DATASET_KEY . toString () ) , org.gbif.occurrence.persistence.hbase.Columns . column ( GbifTerm.datasetKey ) ) ; while ( iterator . hasNext () ) { iterator . next () ; count ++ ; } assertEquals ( 1 , count ) ; } 
private double getPriorForStructure ( int numParents ) { double e = getStructurePrior () ; int k = numParents ; int vm = ( data.length ) - 1 ; return ( k * ( java.lang.Math . log ( ( e / vm ) ) ) ) + ( ( vm - k ) * ( java.lang.Math . log ( ( 1.0 - ( e / vm ) ) ) ) ) ; } 
private int getValidLineNumber ( int line , com.intellij.openapi.editor.Document document ) { int lineCount = getDocumentLineCount ( document ) ; line = line - 1 ; if ( line <= 0 ) { line = 1 ; } else if ( line >= lineCount ) { line = lineCount - 1 ; } return line ; } 
private int setListBottom ( java.util.List listToSetBottomOf , int listTopPos ) { int listBottom = 0 ; if ( ( listToSetBottomOf . size () ) > 0 ) { if ( ( listToSetBottomOf . size () ) < 11 ) { listBottom = listToSetBottomOf . size () ; } else { listBottom = listTopPos + 10 ; } } return listBottom ; } 
@ java.lang.Override public void chooseOnePokemon () { int choice = 0 ; int chosenPokemon = 0 ; do { chosenPokemon = 0 ; printStarterPokemon () ; chosenPokemon = getChosen () ; java.lang.System.out . println ( "Do you choose him?" ) ; java.lang.System.out . println ( "[1]Yes      [2]No" ) ; choice = main.ConsoleRenderer.input . nextInt () ; if ( choice == 2 ) { chooseOnePokemon () ; break; } else if ( choice != 1 ) { java.lang.System.out . println ( "Choose Yes or No!" ) ; } } while ( choice != 1 ) ; main.Player . choosePokemon ( chosenPokemon ) ; java.lang.System.out . println ( "Successufully added a pokemon" ) ; } 
public static double normalizeValue ( final double input , final double avg , final double std ) { double res ; if ( std != 0 ) { res = ( input - avg ) / std ; } else { res = 0 ; } return res ; } 
public void handle ( javafx.scene.input.MouseEvent me ) { int x = ( ( int ) ( me . getSceneX () ) ) / ( main.gui.BoardPane.SPRITE_SIZE ) ; int y = ( ( int ) ( ( me . getSceneY () ) - 55 ) ) / ( main.gui.BoardPane.SPRITE_SIZE ) ; if ( ! ( animating ) ) { clicked ( x , y , image ) ; } } 
public double subtractRange ( final int firstIndex , final int secondIndex ) { double result = systemCoefficients [ firstIndex ] [ secondIndex ] ; for ( int k = 0 ; k <= ( secondIndex - 1 ) ; k ++ ) { result -= ( systemCoefficients [ firstIndex ] [ k ] ) * ( systemCoefficients [ secondIndex ] [ k ] ) ; } return result ; } 
public int getRelativeMajor ( int note ) { int relativeMajor = 0 ; for ( int j = 0 ; j < ( SIZE_OF_NOTES_ARRAY ) ; j ++ ) { if ( ( notes [ j ] ) == note ) { int index = ( j + 3 ) % ( SIZE_OF_NOTES_ARRAY ) ; relativeMajor = notes [ index ] ; break; } } return relativeMajor ; } 
public void shuffleDeck () { int random = 0 ; for ( int i = 0 ; i < ( numberOfCards ) ; i ++ ) { random = srk.syracuse.gameofcards.Model.Deck . getRandomCard ( i ) ; srk.syracuse.gameofcards.Model.Cards temp = cards [ i ] ; cards [ i ] = cards [ random ] ; cards [ random ] = temp ; } } 
@ java.lang.Override public void onAttachedToRecyclerView ( android.support.v7.widget.RecyclerView recyclerView ) { if ( ( mRunnables . size () ) == 0 ) { int count = getItemCount () ; for ( int i = 0 ; i < count ; i ++ ) { mRunnables . add ( null ) ; } } registerAdapterDataObserver ( new com.tr4android.recyclerviewslideitem.SwipeAdapter.SwipeAdapterDataObserver () ) ; } 
public Person retrieve () { int iterator = ( array.length ) - 1 ; while ( ( iterator > 0 ) && ( ( array [ iterator ] ) == null ) ) { iterator -- ; } Person retrieved = array [ iterator ] ; array [ iterator ] = null ; return retrieved ; } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { boolean connection = mBluetoothLeService . connect ( device . getAddress () ) ; if ( connection ) { rootview . setVisibility ( View.VISIBLE ) ; connect_button_view . setVisibility ( View.GONE ) ; } dialog . dismiss () ; } 
public void removeDanceSequence ( T selectedBeatElem ) { java.util.UUID danceSequenceID = selectedBeatElem . getDanceSequenceId () ; removeDanceSequence ( danceSequenceID , selectedBeatElem . getBeatPosition () , ( ( selectedBeatElem . getBeatPosition () ) + ( mDanceSequences . get ( danceSequenceID ) . getLength () ) ) ) ; } 
public boolean containsKey ( java.lang.String key ) { int index = ( key . hashCode () ) % ( this . valueTable . length ) ; java.lang.String currentKey ; while ( ( currentKey = this . keyTable [ index ] ) != null ) { if ( key . equals ( currentKey ) ) return true ; index = ( index + 1 ) % ( this . keyTable . length ) ; } return false ; } 
private com.gamesbykevin.breakout.ball.Balls.Key getRandomKey () { if ( this . keys . isEmpty () ) { for ( com.gamesbykevin.breakout.ball.Balls.Key key : com.gamesbykevin.breakout.ball.Balls.Key . values () ) { if ( key == ( com.gamesbykevin.breakout.ball.Balls.Key.Red ) ) continue; this . keys . add ( key ) ; } } final int index = GamePanel.RANDOM . nextInt ( this . keys . size () ) ; final com.gamesbykevin.breakout.ball.Balls.Key tmp = this . keys . get ( index ) ; this . keys . remove ( index ) ; return tmp ; } 
public double rand () { double stdv = 1.0 / ( java.lang.Math . sqrt ( ( ( grads.dims [ 1 ] ) * ( grads.dims [ 2 ] ) ) ) ) ; double stdv2 = stdv * 2 ; return ( ( java.lang.Math . random () ) * stdv2 ) - stdv ; } 
private java.lang.String makeWord () { java.lang.String word = makeSyllable () ; double cutoff ; switch ( monosylProb ) { default: case ALWAYS : return word ; case MOSTLY : cutoff = 0.6 ; break; case FREQUENT : cutoff = 0.45 ; break; case LESS : cutoff = 0.3 ; break; case RARE : cutoff = 0.15 ; break; case CUSTOM : cutoff = monosylProbCustom ; } double jump = rand . nextDouble () ; if ( jump > cutoff ) { word += makeWord () ; } return word ; } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { int itemClicked = item . getItemId () ; if ( itemClicked == ( R.id.item_Setting ) ) { android.content.Context context = this ; android.content.Intent activity_setting = new android.content.Intent ( context , com.example.william.earthdayapplication.SettingActivity . class ) ; startActivity ( activity_setting ) ; } if ( itemClicked == ( R.id.item_Instruction ) ) {} if ( itemClicked == ( R.id.item_Help ) ) { android.content.Intent toy = new android.content.Intent ( getApplicationContext () , com.example.william.earthdayapplication.Main2Activity . class ) ; startActivity ( toy ) ; } return super . onOptionsItemSelected ( item ) ; } 
public void updateNFCData () { if ( ( mNfcFingerprints ) != null ) { mNfcFingerprint = org.sufficientlysecure.keychain.ui.util.KeyFormattingUtils . convertFingerprintToHex ( mNfcFingerprints ) ; byte [] fp = new byte [ 20 ] ; java.nio.ByteBuffer . wrap ( fp ) . put ( mNfcFingerprints , 0 , 20 ) ; mNfcFingerprint = org.sufficientlysecure.keychain.ui.util.KeyFormattingUtils . convertFingerprintToHex ( fp ) ; } } 
@ java.lang.Override public double curve ( double t ) { if ( ( t *= 2 ) < 1 ) { return 0.5 * ( ( t * t ) * ( ( ( ( amount ) + 1 ) * t ) - ( amount ) ) ) ; } return 0.5 * ( ( ( ( t -= 2 ) * t ) * ( ( ( ( amount ) + 1 ) * t ) + ( amount ) ) ) + 2 ) ; } 
private static float [] toEffectiveTableColumnWidth ( float [] tableColumnWidth ) { float [] result = new float [ tableColumnWidth.length ] ; for ( int i = 0 ; i < ( result.length ) ; ++ i ) { result [ i ] = ( tableColumnWidth [ i ] ) + ( com.itextpdf.layout.minmaxwidth.MinMaxWidthUtils . getEps () ) ; } return result ; } 
private void setMapStyle ( int style ) { try { boolean success = mMap . setMapStyle ( com.google.android.gms.maps.model.MapStyleOptions . loadRawResourceStyle ( this , style ) ) ; if ( ! success ) { android.util.Log . e ( com.task.vasskob.googlemapsrealm.MapsActivity.TAG , "Style parsing failed." ) ; } } catch ( android.content.res.Resources e ) { android.util.Log . e ( com.task.vasskob.googlemapsrealm.MapsActivity.TAG , "Can't find style. Error: " , e ) ; } } 
private void sendBtnActionPerformed ( java.awt.event.ActionEvent evt ) { java.lang.String user = userName . getText () ; java.lang.String pass1 = new java.lang.String ( password1 . getPassword () ) ; java.lang.String pass2 = new java.lang.String ( password2 . getPassword () ) ; boolean success = validateData ( user , pass1 , pass2 ) ; if ( ! success ) { success = validateData ( user , pass1 , pass2 ) ; } else { java.lang.String newAcctData = ( user + " " ) + pass1 ; connectNewUser ( newAcctData ) ; } } 
public ontario.accounts.Account removeAccount ( java.lang.String numAccTemp ) { if ( numAccTemp == null ) { return null ; } else { boolean temp ; ontario.accounts.Account temp2 ; for ( int i = 0 ; i < ( acc . size () ) ; i ++ ) { temp = acc . get ( i ) . getAccountNumber () . equals ( numAccTemp ) ; if ( temp ) { temp2 = acc . get ( i ) ; acc . remove ( i ) ; return temp2 ; } } } return null ; } 
static boolean cypher ( com.intellij.lang.PsiBuilder b , int l ) { if ( ! ( recursion_guard_ ( b , l , "cypher" ) ) ) return false ; int c = current_position_ ( b ) ; while ( true ) { if ( ! ( com.neueda.jetbrains.plugin.graphdb.language.cypher.parser.CypherParser . StatementItem ( b , ( l + 1 ) ) ) ) break; if ( ! ( empty_element_parsed_guard_ ( b , "cypher" , c ) ) ) break; c = current_position_ ( b ) ; } return true ; } 
public static float variance ( final float [] array , final int offset , final int length ) { final float mean = com.tagtraum.jipes.math.Floats . arithmeticMean ( array , offset , length ) ; double sum = 0 ; for ( int i = offset ; i < ( offset + length ) ; i ++ ) { final float diff = ( array [ i ] ) - mean ; sum += ( diff * diff ) / length ; } return ( ( float ) ( sum ) ) ; } 
@ java.lang.Override protected java.lang.Void doInBackground ( java.lang.Integer . . . params ) { int time = ( params [ 0 ] ) + 1 ; while ( time > 0 ) { try { java.lang.Thread . sleep ( 1000 ) ; } catch ( java.lang.InterruptedException e ) {} time -- ; } publishProgress () ; return null ; } 
private void showSavedProfilePicture () { byte [] array = dbHandler . retrieveByteArrayFromDb () ; if ( array == null ) { profilePic . setImageResource ( defaultPic ) ; } else { android.graphics.Bitmap bitmap = convertByteArrayToBitmap ( array ) ; if ( bitmap == null ) { profilePic . setImageResource ( defaultPic ) ; } else { profilePic . setImageBitmap ( bitmap ) ; bitmap . recycle () ; } } } 
public void update ( int x , int y , double r , java.util.ArrayList < zombienado_v1.server.serverUnits.ServerZombie > zombies , java.util.ArrayList < java.awt.Point > walls ) { if ( ( health ) <= 0 ) { isDead = true ; } int xOld = this . x ; int yOld = this . y ; this . x += x ; this . y += y ; this . r = r ; checkWallsCollisions ( xOld , yOld , walls ) ; checkDamageTaking ( zombies ) ; } 
@ java.lang.Override public void stateChanged ( javax.swing.event.ChangeEvent e ) { int alphaValue = sliderAlpha . getValue () ; java.lang.String hexColor = textFieldHexColor . getText () ; if ( ( hexColor . length () ) > 6 ) { hexColor = ( convertAlphaValue2HexStr ( alphaValue ) ) + ( hexColor . substring ( ( ( hexColor . length () ) - 6 ) ) ) ; } else { hexColor = ( convertAlphaValue2HexStr ( alphaValue ) ) + hexColor ; } invalidateUI ( alphaValue , hexColor , true ) ; } 
public void addNode ( controllers.Node node ) { int floor = node . getFloor () ; allNodes . get ( ( floor - 1 ) ) . put ( node . getKey () , node ) ; if ( ! ( allNodes . get ( ( floor - 1 ) ) . containsKey ( node . getKey () ) ) ) { java.lang.System.out . println ( "COLLECTIONOFNODES: addNode(): added node but then couldn't find in hashmap" ) ; } else {} } 
@ java.lang.Override public void mouseClicked ( java.awt.event.MouseEvent e ) { hu.gehorvath.lampsv.core.Preset selectedPres = jlUsedPresets . getSelectedValue () ; int currentIndex = usedListModel . indexOf ( selectedPres ) ; if ( currentIndex < ( ( usedListModel . size () ) - 1 ) ) { usedListModel . removeElement ( selectedPres ) ; usedListModel . add ( ( currentIndex + 1 ) , selectedPres ) ; } } 
boolean conditionIsTrue ( utilties.models.Game game , int id ) { int data1 = getData ( this . data1 , game , id ) ; int data2 = getData ( this . data2 , game , id ) ; switch ( this . operator ) { case LESS_THAN : return data1 < data2 ; case GREATER_THAN : return data1 > data2 ; case LESS_THAN_OR_EQUAL_TO : return data1 <= data2 ; case GREATER_THAN_OR_EQUAL_TO : return data1 >= data2 ; case EQUALS : return data1 == data2 ; default: return false ; } } 
public void setTable ( javafx.scene.control.TableView < com.eiko.back.table.CellValue > content ) { this . table = content ; this . setContent ( content ) ; if ( ( table ) == null ) return; int l = ( ( table . getItems () . size () ) + 1 ) * 40 ; this . setMinHeight ( l ) ; this . setMaxHeight ( l ) ; this . setPrefHeight ( l ) ; } 
private void addChip ( java.lang.String communication ) { if ( ( mNachoTextView ) != null ) { mNachoTextView . append ( communication ) ; int start = ( mNachoTextView . getText () . length () ) - ( communication . length () ) ; int last = mNachoTextView . getText () . length () ; mNachoTextView . chipify ( start , last ) ; } else android.util.Log . e ( mx.com.quiin.contactpicker.ui.ContactPickerFragment.TAG , "mNachoTextView is null" ) ; } 
@ java.lang.Override public void run () { int counter = 0 ; while ( counter < ( this . num ) ) { java.lang.System.out . println ( ( ( ( "Get: " + ( java.lang.Thread . currentThread () . getName () ) ) + " From " ) + ( bucket . getToken () ) ) ) ; counter ++ ; } } 
public static int [] barcodeToIntArray ( java.lang.String barcode ) { if ( barcode == null ) { return new int [ 0 ] ; } java.lang.String [] barcodeArray = barcode . trim () . split ( "(?!^)" ) ; int [] barcodeToInt = new int [ barcodeArray.length ] ; for ( int i = 0 ; i < ( barcodeArray.length ) ; i ++ ) { barcodeToInt [ i ] = java.lang.Integer . parseInt ( barcodeArray [ i ] ) ; } return barcodeToInt ; } 
public engine.network.packet.Packet getContentPacket () { engine.network.packet.Packet out = engine.network.packet.Packet . getNewContentPacket ( Packet.MAX_PACKET_SIZE ) ; out.iterator . putNextShortUnsigned ( buff . getID () ) ; out.iterator . putNextInt ( getDurationLeft () ) ; int mapSize = gndData . getMapSize () ; if ( mapSize == 0 ) { out.iterator . putNextShortUnsigned ( 0 ) ; } else { engine.network.packet.Packet gndContent = gndData . getContentPacket () ; out.iterator . putNextShortUnsigned ( gndContent . getSize () ) ; out.iterator . putNextContentPacket ( gndContent ) ; } out.iterator . trimPacket () ; return out ; } 
public static void addTable ( br.com.mvbos.mymer.el.TableElement te , java.lang.StringBuilder sb ) { br.com.mvbos.mymer.sync.Differ.entityToScript . setMode ( IEntityToScript.Mode.PLAIN ) ; br.com.mvbos.mymer.sync.Differ.entityToScript . addTable ( te , sb ) ; int ct = 1 ; for ( br.com.mvbos.mymer.xml.field.Field f : te . getFields () ) { br.com.mvbos.mymer.sync.Differ.entityToScript . addField ( te , f , ( ct ++ ) , sb ) ; } } 
public int aggiungi_puntata_reale () { fiches = ( fiches ) - ( puntata ) ; if ( ( fiches ) < 0 ) { int buf = fiches ; fiches = 0 ; return ( puntata ) + ( buf + ( puntata ) ) ; } return ( puntata ) * 2 ; } 
public org.apache.commons.math3.linear.RealMatrix getCovariance ( java.util.List < ? extends macrobase.datamodel.HasMetrics > data ) { org.apache.commons.math3.linear.RealMatrix ret = new org.apache.commons.math3.linear.Array2DRowRealMatrix ( data . size () , p ) ; int idx = 0 ; for ( macrobase.datamodel.HasMetrics d : data ) { ret . setRow ( idx , d . getMetrics () . toArray () ) ; idx += 1 ; } return new org.apache.commons.math3.stat.correlation.Covariance ( ret , false ) . getCovarianceMatrix () ; } 
private static float findMax ( java.util.ArrayList < java.lang.Float > list , int targetIndex ) { float max = - 1.0F ; for ( int a = 0 ; a <= targetIndex ; a ++ ) { if ( ( list . get ( a ) ) > max ) { max = list . get ( a ) ; } } return max ; } 
public void reduce ( org.apache.hadoop.io.Text key , java.lang.Iterable < org.apache.hadoop.io.DoubleWritable > values , cloudCompu.PageRankMr.Context context ) throws java.io.IOException , java.lang.InterruptedException { double tmppr = 0.0 ; for ( org.apache.hadoop.io.DoubleWritable val : values ) { tmppr += val . get () ; } title . set ( "Sum" ) ; pr . set ( java.lang.String . valueOf ( tmppr ) ) ; context . write ( title , pr ) ; } 
public void update ( long timeElapsed , long nanosPerSecond , double xForces , double yForces ) { double secondsElapsed = timeElapsed / nanosPerSecond ; x += ( velX ) * secondsElapsed ; y += ( velY ) * secondsElapsed ; velX += ( acelX ) * secondsElapsed ; velY += ( acelY ) * secondsElapsed ; acelX = xForces / ( mass ) ; acelY = yForces / ( mass ) ; } 
public void putCharArray ( final char [] data ) { int l = ( data.length ) * ( com.heerbann.unsafe.UnsafeBuffer.sizeOfChar ) ; putInt ( l ) ; ensure ( ( ( position ) + l ) ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . copyMemory ( com.heerbann.unsafe.UnsafeBuffer . toAddress ( data ) , ( ( pointer ) + ( position ) ) , l ) ; position += l ; end = ( ( position ) > ( end ) ) ? position : end ; } 
private boolean validateTimeRequirement () { util.Util . clearError ( lblTimeRequirementError ) ; if ( txtTimeRequirement . isMessageDefault () ) { return true ; } try { int timeRequirement = java.lang.Integer . parseInt ( txtTimeRequirement . getText () ) ; if ( timeRequirement < 0 ) { util.Util . setError ( lblTimeRequirementError , "Invalid value, must be positive whole numbers only" ) ; return false ; } } catch ( java.lang.NumberFormatException e ) { util.Util . setError ( lblTimeRequirementError , "Invalid value, whole numbers only" ) ; return false ; } return true ; } 
private java.lang.String getWordEndingAtPosition ( int startingPosition , int atPosition ) { java.lang.String startingText = text . substring ( startingPosition , atPosition ) ; int lastIndex = startingText . lastIndexOf ( " " ) ; if ( lastIndex == ( - 1 ) ) { return startingText ; } else { return startingText . substring ( lastIndex , ( ( startingText . length () ) - 1 ) ) . trim () ; } } 
@ java.lang.Override public void processResults ( org.json.JSONObject result ) { int minutes = getTime ( result ) ; if ( minutes <= ( oter . getTime () ) ) { com.joebruzek.oter.utilities.SmsSender . sendText ( oter ) ; oterLayer . removeOter ( oter ) ; } else { com.joebruzek.oter.utilities.AlarmScheduler . scheduleWakeUp ( this , oter , ( minutes - ( oter . getTime () ) ) ) ; } this . stopSelf () ; } 
private boolean isDuplicateInCurrCategory ( java.util.HashSet < com.transformuk.bdt.domain.CrawledContent > currContentSet , com.transformuk.bdt.domain.CrawledContent newContent ) { boolean isDuplicate = false ; java.util.Iterator < com.transformuk.bdt.domain.CrawledContent > iterator = currContentSet . iterator () ; while ( iterator . hasNext () ) { com.transformuk.bdt.domain.CrawledContent existingContent = iterator . next () ; if ( ( ( newContent . getTitle () ) != null ) && ( existingContent . getTitle () . equals ( newContent . getTitle () ) ) ) { isDuplicate = true ; break; } } return isDuplicate ; } 
@ java.lang.Override public boolean shouldOverrideUrlLoading ( android.webkit.WebView view , java.lang.String url ) { android.util.Log . d ( com.gsma.mobileconnect.helpers.AuthorizationService.TAG , ( "shouldOverrideUrlLoading url=" + url ) ) ; boolean status = false ; if ( ( url != null ) && ( url . startsWith ( redirectUri ) ) ) { handleCompletion ( view , url ) ; } else { view . loadUrl ( url ) ; } return status ; } 
@ java.lang.Override @ java.lang.SuppressWarnings ( value = "unchecked" ) public V get ( ) throws java.io.IOException { if ( ( monkey != null ) && ( filer != null ) ) { synchronized ( monkey ) { long ai = MapStore.INSTANCE . get ( filer , monkey , keyBytes ) ; if ( ai > ( - 1 ) ) { return ( ( V ) ( values [ ( ( int ) ( ai ) ) ] ) ) ; } } } return null ; } 
public java.util.List < java.lang.Long > getMembersList () { java.util.List < java.lang.Long > memberLists = new java.util.ArrayList < java.lang.Long > () ; if ( ( this . members . length () ) <= 0 ) return memberLists ; java.lang.String [] list = this . members . split ( "," ) ; for ( int i = 0 ; i < ( list.length ) ; i ++ ) memberLists . add ( java.lang.Long . parseLong ( list [ i ] ) ) ; return memberLists ; } 
public double variance ( double [] dataset ) { double degreeOfFreedom = dataset.length ; double var = 0 ; double mean = mean ( dataset ) ; for ( int i = 0 ; i < ( dataset.length ) ; i ++ ) { var += java.lang.Math . pow ( ( ( dataset [ i ] ) - mean ) , 2 ) ; } var /= degreeOfFreedom ; return var ; } 
static int randNum ( int min , int max ) { java.util.Random rand = new java.util.Random () ; if ( min > max ) { min = 0 ; max = 0 ; } int top = ( max - min ) + 1 ; if ( top <= 0 ) { top = 1 ; } int randomInt = ( rand . nextInt ( top ) ) + min ; return randomInt ; } 
public static void main ( java.lang.String [] args ) { int [] n = new int [] { 100 } ; java.lang.System.out . println ( java.util.Arrays . toString ( n ) ) ; HeapSort . heapsort ( n ) ; java.lang.System.out . println ( java.util.Arrays . toString ( n ) ) ; } 
private ch.bfh.bti7535.w2016.data.Document test ( ch.bfh.bti7535.w2016.data.Document document ) { double classifiedPositive = 0.0 ; double classifiedNegative = 0.0 ; for ( ch.bfh.bti7535.w2016.algorithm.features.AbstractFeature feature : featurePipeline ) { classifiedPositive += calcProbabilityTimesOccurrence ( feature , Classification.SENTIMENT_POSITIVE ) ; classifiedNegative += calcProbabilityTimesOccurrence ( feature , Classification.SENTIMENT_NEGATIVE ) ; } document . setTestResult ( ( classifiedPositive > classifiedNegative ? ch.bfh.bti7535.w2016.data.Classification.SENTIMENT_POSITIVE : ch.bfh.bti7535.w2016.data.Classification.SENTIMENT_NEGATIVE ) ) ; return document ; } 
@ javax.annotation.Nonnull private byte [] loadFromServerFirst ( java.lang.String id ) { try { return loadFromServer ( id ) ; } catch ( java.lang.Exception serverException ) { if ( ( serverException . getCause () ) instanceof org.sonar.api.utils.HttpDownloader.HttpException ) { throw serverException ; } byte [] cached = loadFromCache ( id ) ; if ( cached != null ) { return cached ; } throw new java.lang.IllegalStateException ( org.sonar.batch.bootstrap.WSLoader.FAIL_MSG , serverException ) ; } } 
public void valueChanged ( javax.swing.event.ListSelectionEvent event ) { if ( event . getValueIsAdjusting () ) { return; } int [] selectedRows = table . getSelectedRows () ; if ( ( selectedRows.length ) == 0 ) return; java.lang.String id = ( ( java.lang.String ) ( table . getValueAt ( selectedRows [ 0 ] , 0 ) ) ) ; java.lang.Double xPosition = eventDataIDPositionMap . get ( id . trim () ) ; mainFrame . getGraph () . showEventVerticalPosition ( xPosition ) ; } 
@ dataClasses.Test public void testCalculateFare () { double pricePerFifthMile = 0.5 ; double totalFare = 0.0 ; double overTwoPassengerCharge = 2.0 ; double dropOffCharge = 2.5 ; double distance = 10.5 ; int numberOfPassengers = 5 ; if ( numberOfPassengers > 2 ) { totalFare = overTwoPassengerCharge * ( numberOfPassengers - 2 ) ; } totalFare += dropOffCharge ; totalFare += distance * pricePerFifthMile ; assertEquals ( 13.75 , totalFare , 0.1 ) ; } 
public void onPostExecute ( java.lang.String result ) { if ( ( result != null ) && ( ! ( result . equals ( "" ) ) ) ) { java.lang.String campusChar = com.ihwapp.android.model.Curriculum . getCampusChar ( campus ) ; android.content.SharedPreferences prefs = com.ihwapp.android.model.Curriculum.ctx . getSharedPreferences ( ( ( year ) + campusChar ) , Context.MODE_PRIVATE ) ; prefs . edit () . putString ( "scheduleJSON" , result ) . commit () ; parseScheduleJSON () ; } } 
public static void main ( java.lang.String [] args ) { MainInterface . init () ; int choice = MainInterface . prompt () ; while ( true ) { MainInterface . performChoice ( choice ) ; if ( choice == 0 ) break; choice = MainInterface . prompt () ; } } 
private void initBlocks ( android.content.Context context ) { for ( int x = 0 ; x <= ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockXAmount ) ; x ++ ) { for ( int y = 0 ; y < ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockYAmount ) ; y ++ ) { com.waterfall.thomaswatson.theprovider.Block block = new com.waterfall.thomaswatson.theprovider.Block ( context ) ; block . setXPosition ( x ) ; block . setYPosition ( y ) ; blocks . add ( block ) ; } } } 
public int read ( java.io.InputStream in , int offset , int byteCount ) throws java.io.IOException { if ( ( offset + byteCount ) > ( _bytes.length ) ) { byte [] newBytes = new byte [ byteCount + offset ] ; java.lang.System . arraycopy ( _bytes , 0 , newBytes , 0 , _bytes.length ) ; _bytes = newBytes ; } _size = in . read ( _bytes , offset , byteCount ) ; return _size ; } 
public void reduce ( org.apache.hadoop.io.Text inputKey , java.util.Iterator < org.apache.hadoop.io.Text > inputVals , org.apache.hadoop.mapred.OutputCollector < org.apache.hadoop.io.Text , slmt.courses.cp.hw3.step1.PageInfo > outputCollector , org.apache.hadoop.mapred.Reporter reporter ) throws java.io.IOException { slmt.courses.cp.hw3.step1.PageInfo info = new slmt.courses.cp.hw3.step1.PageInfo () ; info . setRank ( ( 1 / ( ( double ) ( nodeCount ) ) ) ) ; while ( inputVals . hasNext () ) info . addOutLink ( inputVals . next () . toString () ) ; outputCollector . collect ( inputKey , info ) ; } 
public java.util.List < org.todss.model.IntakeMoment > test ( org.todss.algorithm.AlgorithmContext context ) { final long start = java.lang.System . currentTimeMillis () ; final java.util.List < org.todss.model.IntakeMoment > list = org.todss.algorithm.SmartAlgorithm . run ( context ) ; java.lang.System.out . println ( ( ( "Took " + ( ( java.lang.System . currentTimeMillis () ) - start ) ) + " ms." ) ) ; assert ( list != null ) && ( ( list . size () ) > 0 ) ; return list ; } 
@ java.lang.Override public void add ( de.hauke_stieler.rednimer.Common.Material.Reminder reminder ) { java.lang.String date = _dateFormatter . format ( reminder . getDueDate () . getTime () ) ; boolean keyAlreadyExists = _reminderMap . containsKey ( date ) ; if ( ! keyAlreadyExists ) { _reminderMap . put ( date , new java.util.ArrayList <> () ) ; } _reminderMap . get ( date ) . add ( reminder ) ; de.hauke_stieler.rednimer.DayOverview.Service.ReminderAdded . fireEvent ( new de.hauke_stieler.rednimer.Common.Material.Reminder [] { reminder } ) ; } 
@ org.junit.Test public void testInstallGroup ( ) throws java.lang.Exception { java.lang.String inport = "2" ; int vlanid = 100 ; org.opendaylight.genius.mdsalutil.GroupEntity grpEntity1 = createGroupEntity ( org.opendaylight.genius.test.MdSalUtilTest.Nodeid , inport , vlanid ) ; mdSalMgr . installGroup ( grpEntity1 ) . get () ; org.junit.Assert . assertEquals ( 1 , grpFwder . getDataChgCount () ) ; inport = "3" ; vlanid = 100 ; org.opendaylight.genius.mdsalutil.GroupEntity grpEntity2 = createGroupEntity ( org.opendaylight.genius.test.MdSalUtilTest.Nodeid , inport , vlanid ) ; mdSalMgr . installGroup ( grpEntity2 ) . get () ; org.junit.Assert . assertEquals ( 2 , grpFwder . getDataChgCount () ) ; } 
protected int put ( final bee.creative.iam.IAMEncoder.IAMBaseListEncoder list ) throws java.lang.NullPointerException { if ( list == null ) throw new java.lang.NullPointerException () ; final int result = this . lists . size () ; this . lists . add ( result , list ) ; return result ; } 
private void requestMoreAfterEmission ( int emitted ) { if ( emitted > 0 ) { rx.internal.operators.OperatorPublish.OriginSubscriber < T > origin = state . getOrigin () ; if ( origin != null ) { long r = origin.originOutstanding . addAndGet ( ( - emitted ) ) ; if ( r <= ( origin.THRESHOLD ) ) { origin . requestMore ( ( ( rx.internal.util.RxRingBuffer.SIZE ) - ( origin.THRESHOLD ) ) ) ; } } } } 
public void jump () { int x = getX () ; int y = getY () ; gravity () ; if ( ( ( ySpeed ) == 0 ) && ( checkCollision ( x , ( y + 2 ) , Main.level . getConstructs () ) ) ) { ySpeed = - ( environment.Constants.JUMP_HEIGHT ) ; } } 
@ org.junit.Test public void testAtLeastOneNegative4 () { java.lang.System.out . println ( "atLeastOneNegative" ) ; int n1 = 0 ; int n2 = 0 ; int n3 = 0 ; int n4 = - 7 ; boolean expResult = true ; boolean result = second.FirstTasksSet . atLeastOneNegative ( n1 , n2 , n3 , n4 ) ; org.junit.Assert . assertEquals ( expResult , result ) ; } 
public void process ( org.openstreetmap.osmosis.core.container.v0_6.WayContainer wayContainer ) { org.openstreetmap.osmosis.core.domain.v0_6.Way way ; long wayId ; flushNodes ( true ) ; way = wayContainer . getEntity () ; wayId = way . getId () ; if ( wayId >= ( maxWayId ) ) { maxWayId = wayId + 1 ; } if ( wayId < ( minWayId ) ) { minWayId = wayId ; } wayBuffer . add ( way ) ; flushWays ( false ) ; } 
private double productionDeut ( int lvl ) { double tempmod = 1.44 - ( 0.004 * ( Versorgung [ 11 ] ) ) ; return java.lang.Math . round ( ( ( ( ( ( double ) ( 10 ) ) * lvl ) * ( java.lang.Math . pow ( 1.1 , lvl ) ) ) * tempmod ) ) ; } 
public boolean subtractFromRegistry ( int registryIndex , byte value ) { boolean borrow = false ; int result = ( ( chip8 . getRegisters () [ registryIndex ] ) & 255 ) - ( value & 255 ) ; if ( result < 0 ) { borrow = true ; result = ( 255 - ( result * ( - 1 ) ) ) + 1 ; } chip8 . getRegisters () [ registryIndex ] = ( ( byte ) ( result ) ) ; return borrow ; } 
@ org.junit.Test public void shouldReturnAtFitColumnTwoRowZeroOneTwoWithConfoundingFiVertical () { toFind = "fit" ; char [] [] toSearch = new char [] [] { new char [] { 'x' , 'f' , 'f' } , new char [] { 'x' , 'i' , 'i' } , new char [] { 'x' , 'x' , 't' } } ; com.paigeruppel.katas.wordsearch.WordSearch underTest = new com.paigeruppel.katas.wordsearch.WordSearch ( new com.paigeruppel.katas.wordsearch.LetterGrid ( toSearch ) ) ; org.junit.Assert . assertThat ( underTest . find ( toFind ) , org.hamcrest.Matchers . is ( "fit: (0,2),(1,2),(2,2)" ) ) ; } 
public void insert ( int element ) { this . Heap [ ( ( this . size ) ++ ) ] = element ; int current = ( this . size ) - 1 ; while ( ( this . Heap [ current ] ) > ( this . Heap [ this . parent ( current ) ] ) ) { this . swap ( current , this . parent ( current ) ) ; current = this . parent ( current ) ; } } 
private void moveLeft ( int t ) { fr.loria.synalp.jtransxps.XPMInimizeVars.EtatHMM eLost = alignment [ t ] ; globalVar -= eLost . getVar () ; eLost . removeOneFrame ( frames [ t ] ) ; globalVar += eLost . getVar () ; fr.loria.synalp.jtransxps.XPMInimizeVars.EtatHMM eGain = alignment [ ( t + 1 ) ] ; globalVar -= eGain . getVar () ; eGain . updateOneFrame ( frames [ t ] ) ; globalVar += eGain . getVar () ; alignment [ t ] = alignment [ ( t + 1 ) ] ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.view_pager ) ; be.heroesofmightandmagic.www.monsterandcie.ViewPagerActivity.SectionsPagerAdapter mSectionsPagerAdapter = new be.heroesofmightandmagic.www.monsterandcie.ViewPagerActivity.SectionsPagerAdapter ( getSupportFragmentManager () ) ; android.support.v4.view.ViewPager mViewPager = ( ( android.support.v4.view.ViewPager ) ( findViewById ( R.id.pager ) ) ) ; mViewPager . setAdapter ( mSectionsPagerAdapter ) ; int currentIndex = getIntent () . getIntExtra ( "monsterNameIndex" , 0 ) ; mViewPager . setCurrentItem ( currentIndex ) ; } 
@ java.lang.Override public void handle ( org.eclipse.jetty.server.Request baseRequest , javax.servlet.ServletRequest request , javax.servlet.ServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { final boolean asyncSupported = baseRequest . isAsyncSupported () ; if ( ! ( isAsyncSupported () ) ) { baseRequest . setAsyncSupported ( false , null ) ; } try { servlet . service ( request , response ) ; } finally { baseRequest . setAsyncSupported ( asyncSupported , null ) ; } } 
@ java.lang.Override public int skip ( int size ) throws java.io.IOException { byte [] temp = new byte [ java.lang.Math . min ( org.verapdf.cos.filters.BF_BUFFER_SIZE , size ) ] ; int skipped = 0 ; while ( skipped != size ) { int read = this . read ( temp , java.lang.Math . min ( ( size - skipped ) , org.verapdf.cos.filters.BF_BUFFER_SIZE ) ) ; if ( read == ( - 1 ) ) { return skipped ; } else { skipped += read ; } } return skipped ; } 
@ java.lang.Override public android.graphics.Bitmap transform ( android.graphics.Bitmap source ) { int y = ( source . getHeight () ) / 5 ; int x = 0 ; android.graphics.Bitmap result = android.graphics.Bitmap . createBitmap ( source , x , y , source . getWidth () , ( ( ( source . getHeight () ) * 3 ) / 5 ) ) ; if ( result != source ) { source . recycle () ; } return result ; } 
protected byte [] convertBytes ( java.util.ArrayList < java.lang.Integer > list ) { if ( list == null ) return null ; byte [] ret = new byte [ list . size () ] ; java.util.Iterator < java.lang.Integer > iterator = list . iterator () ; for ( int i = 0 ; i < ( ret.length ) ; i ++ ) { ret [ i ] = iterator . next () . byteValue () ; } return ret ; } 
public double averagePopulation () { double average ; long total = 0 ; for ( int i = 0 ; i < ( population . size () ) ; i ++ ) { total += population . get ( i ) . getEvaluation () ; } average = total / ( population . size () ) ; return average ; } 
@ org.junit.Test public void whenSomePlayerWinByDiagonalShouldCheckThatCheckerReturnTrue () { model.WinChecker checker = new model.WinChecker () ; model.Board board = new model.Board () ; model.Player player = new model.Human ( "X" ) ; board . performStep ( player , 0 , 0 ) ; board . performStep ( player , 1 , 1 ) ; board . performStep ( player , 2 , 2 ) ; boolean actual = checker . isWinner ( player , board ) ; assertThat ( actual , org.hamcrest.core.Is . is ( true ) ) ; } 
public int findNodeNumber ( int key ) { edu.oakland.production.ClassProject.Database.Node focusNode = this . binaryTreeDatabase . getRootNode () ; int nodeCount = 0 ; while ( ( focusNode . getKey () ) != key ) { if ( key < ( focusNode . getKey () ) ) { focusNode = focusNode.leftChild ; } else { focusNode = focusNode.rightChild ; } if ( focusNode == null ) return nodeCount ++ ; nodeCount ++ ; } return nodeCount ++ ; } 
public boolean needsRefresh () { boolean needsRefresh ; this . refreshLock . readLock () . lock () ; if ( ( this . expires ) < 0 ) { needsRefresh = false ; } else { long now = java.lang.System . currentTimeMillis () ; long tokenDuration = now - ( this . lastRefresh ) ; needsRefresh = tokenDuration >= ( ( this . expires ) - ( com.box.sdk.BoxAPIConnection.REFRESH_EPSILON ) ) ; } this . refreshLock . readLock () . unlock () ; return needsRefresh ; } 
private int addChildNodes ( tellh.com.recyclertreeview_lib.TreeNode pNode , int startIndex ) { java.util.List < tellh.com.recyclertreeview_lib.TreeNode > childList = pNode . getChildList () ; int addChildCount = 0 ; for ( tellh.com.recyclertreeview_lib.TreeNode treeNode : childList ) { displayNodes . add ( ( startIndex + ( addChildCount ++ ) ) , treeNode ) ; if ( treeNode . isExpand () ) { addChildCount += addChildNodes ( treeNode , ( startIndex + addChildCount ) ) ; } } if ( ! ( pNode . isExpand () ) ) pNode . toggle () ; return addChildCount ; } 
@ java.lang.Override public void execute ( backtype.storm.tuple.Tuple tuple ) { java.lang.String ChannelCode = tuple . getStringByField ( "channelCode" ) ; long timeStamp = tuple . getLongByField ( "timeStamp" ) ; float value = tuple . getFloatByField ( "value" ) ; if ( channelSet . contains ( ChannelCode ) ) { if ( isFirst ) { getQueryMap . setFirstTimestamp ( timeStamp ) ; isFirst = false ; } _collector . emit ( new backtype.storm.tuple.Values ( ChannelCode , timeStamp , value ) ) ; } } 
@ java.lang.Override public void onClick ( android.view.View view ) { boolean checked = ( ( android.widget.RadioButton ) ( view ) ) . isChecked () ; switch ( view . getId () ) { case R.id.wsgh_yes_rb : if ( checked ) wsghSpinnerRl . setVisibility ( View.GONE ) ; break; case R.id.wsgh_someoneelse_rb : if ( checked ) wsghSpinnerRl . setVisibility ( View.VISIBLE ) ; break; } } 
private static java.lang.String getRequiredSpaces ( java.lang.String reference , java.lang.String message ) { java.lang.String res = "" ; int requiredSpaces = ( ( reference . length () ) - ( message . length () ) ) - 4 ; for ( int i = 0 ; i < requiredSpaces ; i ++ ) { res = res + " " ; } return res ; } 
@ org.junit.Test public void lowSpecificityShouldFollowHigherSpecificity () { subject = new uk.ac.ebi.atlas.model.experiment.differential.DifferentialProfileComparator ( true , allContrasts , allContrasts , Regulation.UP ) ; org.mockito.Mockito . when ( profileMock1 . getSpecificity ( Regulation.UP ) ) . thenReturn ( 1 ) ; org.mockito.Mockito . when ( profileMock2 . getSpecificity ( Regulation.UP ) ) . thenReturn ( 2 ) ; int comparison = subject . compare ( profileMock1 , profileMock2 ) ; org.hamcrest.MatcherAssert . assertThat ( comparison , org.hamcrest.Matchers . lessThan ( 0 ) ) ; } 
@ java.lang.Override public void onMessage ( int instanceId , java.lang.String message ) { int size = java.lang.Integer . parseInt ( message ) ; byte [] buffer = new byte [ size ] ; for ( int i = 0 ; i < size ; ++ i ) buffer [ i ] = 'p' ; java.lang.String result = new java.lang.String ( buffer ) ; postMessage ( instanceId , result ) ; } 
public void union ( int p , int q ) { int root_p = find ( p ) ; int root_q = find ( q ) ; if ( ( rank [ root_p ] ) > ( rank [ root_q ] ) ) { set [ root_q ] = root_p ; } else { set [ root_p ] = root_q ; if ( ( rank [ root_p ] ) == ( rank [ root_q ] ) ) { ( rank [ root_q ] ) ++ ; } } } 
public static void selectNextTableRow ( javax.swing.JTable table ) { int index = table . getSelectedRow () ; if ( index == ( - 1 ) ) { index = 0 ; } table . clearSelection () ; if ( ( ++ index ) > ( ( table . getRowCount () ) - 1 ) ) { index = 0 ; } table . addRowSelectionInterval ( index , index ) ; } 
public boolean isItPossibleToShoot ( de.hsbremen.battleshipextreme.model.FieldState [] [] board , int startX , int startY ) { boolean result = false ; de.hsbremen.battleshipextreme.model.FieldState state = board [ startY ] [ startX ] ; if ( ( state == ( de.hsbremen.battleshipextreme.model.FieldState.HAS_SHIP ) ) || ( state == ( de.hsbremen.battleshipextreme.model.FieldState.IS_EMPTY ) ) ) { result = true ; } return result ; } 
protected int nearMinesCount ( int line , int place ) { int count = 0 ; for ( int [] near : net.patttern.minesweeper.proto.bases.BaseArea.nears ) { count += ( cellMined ( ( line + ( near [ 0 ] ) ) , ( place + ( near [ 1 ] ) ) ) ) ? 1 : 0 ; } return count ; } 
public void write ( byte [] data ) { int index = 0 ; while ( index < ( clientCount ) ) { if ( clients [ index ] . active () ) { clients [ index ] . write ( data ) ; index ++ ; } else { removeIndex ( index ) ; } } } 
private boolean createMatchRoute () { this . matchRoute = new com.gogreen.greenmachine.parseobjects.MatchRoute () ; java.util.ArrayList < com.gogreen.greenmachine.parseobjects.Hotspot > selectedHotspotsList = new java.util.ArrayList < com.gogreen.greenmachine.parseobjects.Hotspot > ( selectedHotspots ) ; boolean saved = backend . sendRiderRequest ( new com.gogreen.greenmachine.parseobjects.MatchRoute [] { this . matchRoute } , selectedHotspotsList , currentCapacity , driverCar , matchByDate , arriveByDate , destination ) ; return saved ; } 
public double getMsg1UniqueMsgIdVariance () { return ( ( ( double ) ( m_sumOfMsg1UniqueMsgIdCountSquare ) ) / ( ( double ) ( m_numberOfIntervals ) ) ) - ( - ( ( ( double ) ( getMsg1UniqueMsgIdMean () ) ) * ( ( double ) ( getMsg1UniqueMsgIdMean () ) ) ) ) ; } 
@ com.google.inject.Provides public gov.ca.cwds.rest.api.domain.cms.SystemCodeCache provideSystemCodeCache ( gov.ca.cwds.data.cms.SystemCodeDao systemCodeDao , gov.ca.cwds.data.cms.SystemMetaDao systemMetaDao ) { final long secondsToRefreshCache = ( ( 15 * 24 ) * 60 ) * ( ( long ) ( 60 ) ) ; gov.ca.cwds.rest.api.domain.cms.SystemCodeCache systemCodeCache = new gov.ca.cwds.rest.services.cms.CachingSystemCodeService ( systemCodeDao , systemMetaDao , secondsToRefreshCache , true ) ; systemCodeCache . register () ; return systemCodeCache ; } 
public void setDelegate ( @ android.support.annotation.Nullable com.nextfaze.poweradapters.PowerAdapter delegate ) { if ( delegate != ( mDelegate ) ) { int removeCount = ( ( mDelegate ) != null ) ? mDelegate . getItemCount () : 0 ; mDelegate = delegate ; int insertCount = ( ( mDelegate ) != null ) ? mDelegate . getItemCount () : 0 ; updateObservers () ; if ( removeCount > 0 ) { notifyItemRangeRemoved ( 0 , removeCount ) ; } if ( insertCount > 0 ) { notifyItemRangeInserted ( 0 , insertCount ) ; } } } 
public static void main ( java.lang.String [] args ) { int n = 10 ; princeton.datastructures.deque.Deque < java.lang.Integer > deq = new princeton.datastructures.deque.Deque < java.lang.Integer > () ; for ( int i = 0 ; i < n ; i ++ ) { if ( ( i % 2 ) == 0 ) { deq . addFirst ( i ) ; } else { deq . addLast ( i ) ; } } for ( java.lang.Integer i : deq ) { java.lang.System.out . println ( i ) ; } } 
@ org.testng.annotations.Test ( enabled = false ) public void saveTarjetaCertificado () { java.lang.String numeroTarjeta = "1000000000000118" ; java.lang.String idUsuario = "certGT" ; long montoCertificado = 50 ; java.lang.String resultado = null ; try { resultado = facade . activaTarjetaCertificado ( numeroTarjeta , montoCertificado , idUsuario ) ; com.claro.gml.certificados.test.BussinesTest.logger . info ( "resultado [{}]" , resultado ) ; } catch ( com.claro.transfer.certificados.exception.BussinesException e ) { com.claro.gml.certificados.test.BussinesTest.logger . error ( "Error [{}]" , e . getMessage () , e ) ; } } 
private void updateTables ( java.sql.Statement statement ) throws java.sql.SQLException { int version = getUserVersion ( statement ) ; if ( ( version > 0 ) && ( version < ( gui.Splash.DATABASE_VERSION ) ) ) { switch ( version ) { case 0 : statement . executeUpdate ( "alter table volumes add column favorite_volume tinyint(1) not null default '0';" ) ; statement . executeUpdate ( java.lang.String . format ( "alter table volumes add column date_add_volume text not null default '%s';" , utils.DateUtils . toString ( new java.util.Date () ) ) ) ; break; } } setUserVersion ( statement , Splash.DATABASE_VERSION ) ; } 
@ java.lang.Override public homework.hw3.DoubleStack clone ( ) throws java.lang.CloneNotSupportedException { homework.hw3.DoubleStack stackclone = new homework.hw3.DoubleStack () ; for ( int i = ( stack . size () ) - 1 ; i >= 0 ; i -- ) { stackclone . push ( stack . get ( i ) ) ; } return stackclone ; } 
private edu.neu.ccs.pyramid.dataset.MultiLabel predictBySupport ( java.util.Vector vector ) { double [] probs = cbm . predictAssignmentProbs ( vector , support , piThreshold ) ; edu.neu.ccs.pyramid.multilabel_classification.plugin_rule.GeneralF1Predictor generalF1Predictor = new edu.neu.ccs.pyramid.multilabel_classification.plugin_rule.GeneralF1Predictor () ; generalF1Predictor . setMaxSize ( maxSize ) ; return generalF1Predictor . predict ( cbm . getNumClasses () , support , probs ) ; } 
void factr () { if ( ( tail.data ) == null ) return; int tmp = 1 ; for ( int i = 1 ; i <= ( ( int ) ( ( double ) ( tail.data ) ) ) ; i ++ ) { tmp *= i ; } tail.data = ( ( double ) ( tmp ) ) ; } 
public com.crossballbox.model.UserInfo saveUserInfo ( com.crossballbox.model.FamilyData familyData , com.crossballbox.model.UserHealthyState userHealthyState , com.crossballbox.model.UserAdditionalInfo userAdditionalInfo , java.lang.String imagePath , com.crossballbox.model.User user ) { int userId = user . getId () ; com.crossballbox.model.UserInfo userInfo = user . getUserInfo () ; if ( userInfo == null ) { userInfo = new com.crossballbox.model.UserInfo ( userId ) ; } userInfo . setFamilyData ( familyData ) ; userInfo . setUserHealthyState ( userHealthyState ) ; userInfo . setUserAdditionalInfo ( userAdditionalInfo ) ; userInfo . setUser ( user ) ; userInfoDAO . save ( userInfo ) ; return userInfo ; } 
public static java.util.List paserLineEnd ( java.lang.String content ) { java.util.List < java.lang.Integer > lines = new java.util.ArrayList < java.lang.Integer > () ; int length = content . length () ; for ( int i = 0 ; i < length ; i ++ ) { if ( ( content . charAt ( i ) ) == '\n' ) { lines . add ( i ) ; } } return lines ; } 
@ java.lang.Override public int colorMultiplier ( net.minecraft.block.state.IBlockState state , net.minecraft.world.IBlockAccess worldIn , net.minecraft.util.math.BlockPos pos , int tintIndex ) { int meta = state . getBlock () . getMetaFromState ( state ) ; if ( ( state . getBlock () ) instanceof zmaster587.libVulpes.block.BlockOre ) { zmaster587.libVulpes.api.material.Material mat = ( ( zmaster587.libVulpes.block.BlockOre ) ( state . getBlock () ) ) . ores [ meta ] ; if ( mat != null ) return mat . getColor () ; } return 16777215 ; } 
public void onClick ( android.content.DialogInterface dialog , int id ) { android.widget.ListView lw = ( ( android.app.AlertDialog ) ( dialog ) ) . getListView () ; int selected = - 1 ; if ( ( lw . getTag () ) != null ) { selected = ( ( java.lang.Integer ) ( lw . getTag () ) ) ; } exportExpensesXLS ( selected ) ; } 
private double calcMaxMana ( int level ) { if ( level < 10 ) { return 0 ; } double a = java.lang.Math . pow ( 1.01 , ( level / 10 ) ) ; double b = 0.01 * ( ( java.lang.Math . pow ( 1.15 , ( level - 10 ) ) ) - 1 ) ; return ( ( java.lang.Math . log ( ( a + b ) ) ) / ( java.lang.Math . log ( 1.0001 ) ) ) + 1 ; } 
public void putDoubleArray ( final double [] data ) { int l = ( data.length ) * ( com.heerbann.unsafe.UnsafeBuffer.sizeOfDouble ) ; putInt ( l ) ; ensure ( ( ( position ) + l ) ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . copyMemory ( com.heerbann.unsafe.UnsafeBuffer . toAddress ( data ) , ( ( pointer ) + ( position ) ) , l ) ; position += l ; end = ( ( position ) > ( end ) ) ? position : end ; } 
@ java.lang.Override public void attachToBaseObject ( final org.sablo.IChangeListener changeMonitor , org.sablo.IWebObjectContext webObjectContext ) { this . changeMonitor = changeMonitor ; this . webObjectContext = webObjectContext ; java.util.List < WT > wrappedBaseList = getWrappedBaseList () ; int i = 0 ; for ( WT el : wrappedBaseList ) { attachToBaseObject ( i , el , false , true ) ; i ++ ; } if ( isChanged () ) changeMonitor . valueChanged () ; } 
private java.lang.String firstSet ( java.lang.String expression ) { int end = ( expression . indexOf ( Constants.CLOSE_SQUARE_BRACKET ) ) + 1 ; if ( ( expression . length () ) > end ) { java.lang.String quantifier = java.lang.String . valueOf ( expression . charAt ( end ) ) ; if ( isQuantifier ( quantifier ) ) { end ++ ; } } return expression . substring ( 0 , end ) ; } 
private int findRandomInstance () { int random_instance = ( ( int ) ( ( java.lang.Math . random () ) * ( used.length ) ) ) ; while ( used [ random_instance ] ) { random_instance ++ ; if ( random_instance >= ( used.length ) ) random_instance = 0 ; } used [ random_instance ] = true ; return random_instance ; } 
public java.util.List < net.sf.marineapi.nmea.util.Measurement > getMeasurements () { java.util.ArrayList < net.sf.marineapi.nmea.util.Measurement > result = new java.util.ArrayList < net.sf.marineapi.nmea.util.Measurement > () ; for ( int i = 0 ; i < ( getFieldCount () ) ; i += net.sf.marineapi.nmea.parser.XDRParser.DATA_SET_LENGTH ) { net.sf.marineapi.nmea.util.Measurement value = fetchValues ( i ) ; if ( ! ( value . isEmpty () ) ) { result . add ( value ) ; } } return result ; } 
public java.lang.String receive () { byte [] data = new byte [ 1024 ] ; java.net.DatagramPacket packet = new java.net.DatagramPacket ( data , data.length ) ; try { socket . receive ( packet ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } java.lang.String message = new java.lang.String ( packet . getData () ) ; return message ; } 
@ org.junit.Test public void getNumberOfConnectorImplementations_should_return_count ( ) throws java.lang.Exception { final java.util.List < org.bonitasoft.engine.core.connector.parser.SConnectorImplementationDescriptor > sConnectorImplementationDescriptors = createConnectorList () ; doReturn ( ( ( long ) ( sConnectorImplementationDescriptors . size () ) ) ) . when ( connectorService ) . getNumberOfConnectorImplementations ( org.bonitasoft.engine.api.impl.ProcessAPIImplTest.PROCESS_DEFINITION_ID , org.bonitasoft.engine.api.impl.ProcessAPIImplTest.TENANT_ID ) ; final long numberOfConnectorImplementations = processAPI . getNumberOfConnectorImplementations ( org.bonitasoft.engine.api.impl.ProcessAPIImplTest.PROCESS_DEFINITION_ID ) ; assertThat ( numberOfConnectorImplementations ) . as ( "should return count" ) . isEqualTo ( sConnectorImplementationDescriptors . size () ) ; } 
private java.lang.Object readArray ( com.cedarsoftware.util.io.JsonObject object ) throws java.io.IOException { final java.util.Collection array = new java.util.ArrayList () ; while ( true ) { skipWhitespace () ; final java.lang.Object o = readValue ( object ) ; if ( o != ( com.cedarsoftware.util.io.JsonParser.EMPTY_ARRAY ) ) { array . add ( o ) ; } final int c = skipWhitespaceRead () ; if ( c == ']' ) { break; } else if ( c != ',' ) { error ( "Expected ',' or ']' inside array" ) ; } } return array . toArray () ; } 
@ java.lang.Override public void onReceive ( com.home.pete.aquarium.Context context , com.home.pete.aquarium.Intent intent ) { boolean value = intent . getBooleanExtra ( "ACTION" , false ) ; com.home.pete.aquarium.Intent msg = new com.home.pete.aquarium.Intent ( "uv-state" ) ; msg . putExtra ( "ACTION" , value ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( context ) . sendBroadcast ( msg ) ; } 
@ java.lang.Override public void onSuccess ( java.lang.Object response ) { java.lang.String currentVolume = parseData ( ( ( java.lang.String ) ( response ) ) , "CurrentVolume" ) ; int iVolume = 0 ; try { iVolume = java.lang.Integer . parseInt ( currentVolume ) ; } catch ( java.lang.RuntimeException ex ) { ex . printStackTrace () ; } float fVolume = ( ( float ) ( iVolume / 100.0 ) ) ; com.connectsdk.core.Util . postSuccess ( listener , fVolume ) ; } 
public void donateToWin ( ) throws k2so.GameActionException { float bullets = k2so.DefaultRobot.rc . getTeamBullets () ; int victoryPts = k2so.DefaultRobot.rc . getTeamVictoryPoints () ; int potentialPts = ( ( int ) ( bullets ) ) / ( GameConstants.BULLET_EXCHANGE_RATE ) ; if ( ( ( GameConstants.VICTORY_POINTS_TO_WIN ) - victoryPts ) <= potentialPts ) { k2so.DefaultRobot.rc . donate ( bullets ) ; } } 
< T extends java.lang.Comparable < T > > void doTest ( T [] input , T [] expected ) { java.util.List < T > list = java.util.Arrays . asList ( input ) ; org.apache.pdfbox.util.QuickSort . sort ( list ) ; boolean equal = java.util.Arrays . equals ( list . toArray ( new java.lang.Object [ input.length ] ) , expected ) ; assertTrue ( equal ) ; } 
public static void main ( java.lang.String [] args ) { boolean success = false ; try { new com.android.commands.sm.Sm () . run ( args ) ; success = true ; } catch ( java.lang.Exception e ) { if ( e instanceof java.lang.IllegalArgumentException ) { com.android.commands.sm.Sm . showUsage () ; java.lang.System . exit ( 1 ) ; } android.util.Log . e ( com.android.commands.sm.Sm.TAG , "Error" , e ) ; java.lang.System.err . println ( ( "Error: " + e ) ) ; } java.lang.System . exit ( ( success ? 0 : 1 ) ) ; } 
public void add ( T n ) { heap . add ( null ) ; int index = ( heap . size () ) - 1 ; while ( ( index > 0 ) && ( ( heap . get ( getParent ( index ) ) . compareTo ( n ) ) == 1 ) ) { heap . set ( index , heap . get ( getParent ( index ) ) ) ; index = getParent ( index ) ; } heap . set ( index , n ) ; } 
public void write ( org.eclipse.paho.client.mqttv3.internal.wire.MqttWireMessage message ) throws java.io.IOException , org.eclipse.paho.client.mqttv3.MqttException { byte [] bytes = message . getHeader () ; byte [] pl = message . getPayload () ; out . write ( bytes , 0 , bytes.length ) ; out . write ( pl , 0 , pl.length ) ; } 
@ java.lang.Override public void step ( neutrality.NeutralityModel model , int step , java.util.Optional < java.lang.Double > substep ) { if ( step == 0 ) { super . step ( model , step , substep ) ; } else { neutrality.MarketInfo mi = getModel () . getMarketInformation ( ( step - 1 ) ) ; double mktNetInvest = mi.nspNetworkInvestment ; makeNetworkInvestment ( step , mktNetInvest ) ; if ( getModel () . policyNSPContentAllowed ) { double mktVidInvest = mi.nspVideoInvestment ; makeContentInvestment ( step , mktVidInvest ) ; } else { makeContentInvestment ( step , 0 ) ; } } } 
private int calculateCC ( ast.graph.Graph graph ) { int offset ; offset = graph . getFinalNodes () . size () ; offset = ( offset == 1 ) ? offset - 1 : offset - 2 ; offset = 0 ; return ( ( graph . edgeCount () ) - ( ( graph . size () ) - offset ) ) + 2 ; } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { int x = jDialog . getX () ; x = x + 10 ; if ( x > ( xStart ) ) { x = xStart ; if ( ( fadeOut ) != null ) { fadeOut . stop () ; } fadeOut = null ; jDialog . setVisible ( false ) ; } jDialog . setLocation ( x , y ) ; } 
public void preencheVagas () { boolean [] vagas = setor . vagas_Disponiveis () ; int progress = 0 ; for ( int i = 0 ; i < 16 ; i ++ ) { if ( vagas [ i ] ) { ++ progress ; paineis [ i ] . setBackground ( java.awt.Color.green ) ; } else paineis [ i ] . setBackground ( java.awt.Color.red ) ; } progress = ( progress * 100 ) / 16 ; progressBar . setValue ( progress ) ; } 
protected java.lang.String [] removeEmptyEntries ( java.lang.String [] queryParts ) { int emptyCount = 0 ; for ( java.lang.String queryPart : queryParts ) { if ( ( queryPart . length () ) == 0 ) emptyCount ++ ; } java.lang.String [] trimmedArray = new java.lang.String [ ( queryParts.length ) - emptyCount ] ; int trimIndex = 0 ; for ( java.lang.String queryPart : queryParts ) { if ( ( queryPart . length () ) != 0 ) { trimmedArray [ trimIndex ] = queryPart ; trimIndex ++ ; } } return trimmedArray ; } 
private void removeWeakSpecies () { int sum = totalAverageFitness () ; for ( int s = 0 ; s < ( getSpecies () . size () ) ; s ++ ) { com.starflask.JavaNESBrain.evolution.Species specie = getSpecies () . get ( s ) ; float breed = com.starflask.JavaNESBrain.utils.FastMath . floor ( ( ( ( specie.averageFitness ) / sum ) * ( Population ) ) ) ; if ( breed < 1 ) { species . remove ( specie ) ; } } } 
@ java.lang.Override public void onSetSwipeBackground ( com.h6ah4i.android.example.advrecyclerview.demo_ds_selection.MyDraggableSwipeableSelectableItemAdapter.MyViewHolder holder , int position , int type ) { int bgRes = 0 ; switch ( type ) { case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_NEUTRAL_BACKGROUND : bgRes = R.drawable.bg_swipe_item_neutral ; break; case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_LEFT_BACKGROUND : bgRes = R.drawable.bg_swipe_item_left ; break; case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_RIGHT_BACKGROUND : bgRes = R.drawable.bg_swipe_item_right ; break; } holder.itemView . setBackgroundResource ( bgRes ) ; } 
private void updateGraph ( int phase , java.time.LocalDateTime phasetime ) { int min = phasetime . getMinute () ; int sec = phasetime . getSecond () ; double timer = min + ( sec / 60.0 ) ; this . phases [ ( phase - 1 ) ] . getData () . add ( new javafx.scene.chart.XYChart.Data <> ( ( ( double ) ( this . phaseCounter ) ) , timer ) ) ; ( this . phaseCounter ) ++ ; } 
public int flip ( java.lang.String imageId , boolean horizontal ) { com.google.appengine.api.blobstore.BlobKey key = new com.google.appengine.api.blobstore.BlobKey ( "xx" ) ; com.gruppe4b.edivator.backend.service.Image flippingImage = com.gruppe4b.edivator.backend.service.ImagesServiceFactory . makeImageFromBlob ( key ) ; com.gruppe4b.edivator.backend.service.Transform transform = com.gruppe4b.edivator.backend.service.ImagesServiceFactory . makeHorizontalFlip () ; if ( horizontal == true ) { transform = com.gruppe4b.edivator.backend.service.ImagesServiceFactory . makeHorizontalFlip () ; } else if ( horizontal == false ) { transform = com.gruppe4b.edivator.backend.service.ImagesServiceFactory . makeVerticalFlip () ; } com.gruppe4b.edivator.backend.service.Image flippedImage = imagesService . applyTransform ( transform , flippingImage ) ; int newId = 0 ; return newId ; } 
public static void generateDataForCourse ( java.lang.String courseName ) { long numOfInstr = ( teammates.client.scripts.DataGenerator.random . nextInt ( ( ( ( teammates.client.scripts.DataGenerator.MAX_NUM_OF_INSTRUCTOR_PER_COURSES ) - ( teammates.client.scripts.DataGenerator.MIN_NUM_OF_INSTRUCTOR_PER_COURSES ) ) + 1 ) ) ) + ( teammates.client.scripts.DataGenerator.MIN_NUM_OF_INSTRUCTOR_PER_COURSES ) ; for ( int j = 0 ; j < numOfInstr ; j ++ ) { java.lang.String instrName = ( ( "Instr" + j ) + "_of_" ) + courseName ; teammates.client.scripts.DataGenerator.instructors . put ( instrName , courseName ) ; } teammates.client.scripts.DataGenerator . generateStudentsDataForCourse ( courseName ) ; } 
private boolean updateVisibilityCheck ( boolean visible , com.android.internal.util.cm.LockscreenShortcutsHelper.Shortcuts shortcut ) { boolean customTarget = mShortcutHelper . isTargetCustom ( shortcut ) ; if ( customTarget ) { boolean isEmpty = mShortcutHelper . isTargetEmpty ( shortcut ) ; if ( isEmpty ) { visible = false ; } else { visible = true ; } } return visible ; } 
@ java.lang.Override public void onPageScrolled ( int position , float positionOffset , int positionOffsetPixels ) { if ( ( mTabWidth ) == 0 ) { mTabWidth = ( mViewPager . getWidth () ) / ( mViewPager . getAdapter () . getCount () ) ; } float translationX = ( mTabWidth ) * ( positionOffset + position ) ; setTranslationX ( translationX ) ; } 
@ java.lang.Override public void writeTo ( org.elasticsearch.common.io.stream.StreamOutput out ) throws java.io.IOException { super . writeTo ( out ) ; int numJobs = toKill . size () ; out . writeVInt ( numJobs ) ; for ( java.util.UUID job : toKill ) { out . writeLong ( job . getMostSignificantBits () ) ; out . writeLong ( job . getLeastSignificantBits () ) ; } } 
@ java.lang.Override public void run () { if ( ( getActivity () ) == null ) return; getActivity () . runOnUiThread ( new java.lang.Runnable () { @ java.lang.Override public void run () { int i = bnp . getProgress () ; if ( i < count ) { bnp . incrementProgressBy ( 1 ) ; } } } ) ; } 
@ org.junit.Test public void testValidarCampos () { java.lang.System.out . println ( "validarCampos" ) ; java.lang.String username = "" ; java.lang.String password = "" ; com.grupo7.practica.principal instance = new com.grupo7.practica.principal () ; boolean expResult = false ; boolean result = instance . validarCampos ( username , password ) ; assertEquals ( expResult , result ) ; } 
@ java.lang.Override public void onScrollStateChanged ( android.support.v7.widget.RecyclerView recyclerView , int newState ) { android.support.v7.widget.LinearLayoutManager layoutManager = ( ( android.support.v7.widget.LinearLayoutManager ) ( recyclerView . getLayoutManager () ) ) ; int lastPosition = layoutManager . findLastCompletelyVisibleItemPosition () ; if ( lastPosition == ( ( mAdapter . getItemCount () ) - 1 ) ) { mListViewModel . loadNextPageZhihu ( lastPosition ) ; } } 
public void insertPerson ( org.rhok.linguist.code.entity.Person person ) { android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; android.content.ContentValues values = getDbValues ( person ) ; long personId = db . insert ( org.rhok.linguist.code.DatabaseHelper.PERSON_TABLE_NAME , null , values ) ; person.personid = ( ( int ) ( personId ) ) ; person.uploaded = false ; db . close () ; } 
public com.jsing.common.string.StringTrimmer getBeforeNext ( java.lang.String stringToSearch ) { if ( ( this . string ) == null ) return this ; int index = getIndex ( stringToSearch ) ; if ( ( index > ( - 1 ) ) && ( index < ( this . end ) ) ) { this . end = java.lang.Math . max ( this . start , index ) ; } return this ; } 
private java.lang.Integer compareBits ( java.lang.String a , java.lang.String b ) { java.lang.System.out . println ( b ) ; int count = 0 ; for ( int i = 0 ; i < ( java.lang.Math . min ( a . length () , b . length () ) ) ; i ++ ) { if ( ! ( ( a . indexOf ( i ) ) == ( b . indexOf ( i ) ) ) ) return count ; count ++ ; } return count ; } 
public void addEdge ( diagraph.DirectedEdge edge ) { nodes . add ( edge . from () ) ; nodes . add ( edge . to () ) ; int from = edge . from () ; if ( ! ( edges . containsKey ( from ) ) ) { edges . put ( from , new java.util.HashSet <> () ) ; } java.util.Set < diagraph.DirectedEdge > outgoingEdges = edges . get ( from ) ; outgoingEdges . add ( edge ) ; } 
public void generate ( int before , int after ) { if ( ( statement1 ) == ( Statement.NULL ) ) { statement2 . generate ( before , after ) ; } else if ( ( statement2 ) == ( Statement.NULL ) ) { statement1 . generate ( before , after ) ; } else { int label = newLabel () ; statement1 . generate ( before , label ) ; emitLabel ( label ) ; statement2 . generate ( label , after ) ; } } 
public static void main ( java.lang.String [] args ) throws java.lang.Exception { java.lang.String alg = "AES" ; java.lang.String key = "TheBestSecreteKe" ; java.security.Key key2 = new javax.crypto.spec.SecretKeySpec ( key . getBytes () , alg ) ; javax.crypto.Cipher cipher = javax.crypto.Cipher . getInstance ( alg ) ; cipher . init ( javax.crypto.Cipher.ENCRYPT_MODE , key2 ) ; java.lang.String data = "TestString" ; byte [] encVal = cipher . doFinal ( data . getBytes () ) ; } 
public static double std ( org.dynami.core.data.Series series ) { double avg = org.dynami.core.utils.StatUtils . avg ( series ) ; double sum = 0 ; for ( double d : series ) { sum += java.lang.Math . pow ( ( d - avg ) , 2 ) ; } return java.lang.Math . sqrt ( ( sum / ( ( series . size () ) - 1.0 ) ) ) ; } 
private java.lang.String toBinaryString ( int number ) { java.lang.StringBuilder temp = new java.lang.StringBuilder ( java.lang.Integer . toHexString ( number ) ) ; int length = temp . length () ; for ( int i = 0 ; i < ( 4 - length ) ; i ++ ) temp . append ( "0" ) . append ( temp ) ; return temp . toString () ; } 
@ java.lang.Override public int compareTo ( ch.redmonkeyass.zombieInvasion.worldmap.Node other ) { ch.redmonkeyass.zombieInvasion.worldmap.Node o = ( ( ch.redmonkeyass.zombieInvasion.worldmap.Node ) ( other ) ) ; float f = ( heuristic ) + ( cost ) ; float of = ( o.heuristic ) + ( o.cost ) ; if ( f < of ) { return - 1 ; } else if ( f > of ) { return 1 ; } else { return 0 ; } } 
public void run () { int inputMode_i = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_NOTHING ; if ( inputMode_s . equals ( "pan" ) ) { inputMode_i = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_PAN ; } else if ( inputMode_s . equals ( "resize" ) ) { inputMode_i = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_RESIZE ; } cordova . getActivity () . getWindow () . setSoftInputMode ( inputMode_i ) ; callbackContext . success () ; } 
private void addRow ( int row , int numInRow ) { int idxInRow = 0 ; int startVertex = ( row * numInRow ) + 1 ; int currVertex = startVertex ; while ( idxInRow < ( numInRow - 1 ) ) { addFace ( currVertex , ( currVertex + 1 ) , ( currVertex + numInRow ) ) ; addFace ( ( currVertex + 1 ) , ( ( currVertex + numInRow ) + 1 ) , ( currVertex + numInRow ) ) ; currVertex ++ ; idxInRow ++ ; } } 
@ java.lang.Override public boolean delete ( com.hazelcast.nio.serialization.Data key ) { checkIfLoaded () ; final long now = getNow () ; final com.hazelcast.map.impl.record.Record record = getRecordOrNull ( key , now , false ) ; if ( record == null ) { mapDataStore . remove ( key , now ) ; } else { return ( removeRecord ( key , record , now ) ) != null ; } return false ; } 
public static boolean CheckGetFileName () { netlife.datamodels.Commands com = new netlife.datamodels.Commands ( "ADD" , "bilder/2012/1.jpg" , "" ) ; netlife.datamodels.Commands com2 = new netlife.datamodels.Commands ( "DEL" , "bilder/2012/1.jpg/" , "" ) ; java.lang.String test = netlife.Logic . getFileName ( com ) ; java.lang.String test2 = netlife.Logic . getFileName ( com2 ) ; boolean check = test . equals ( "1.jpg" ) ; boolean check2 = test2 . equals ( "1.jpg" ) ; return ( check && check2 ) == true ; } 
private static double getPassangerDiscount ( ooptraining.Passanger p ) { double discount = 1.0 ; if ( ( p . getMiles () ) > ( ooptraining.DiscountCalculator.GOLD_LIMIT ) ) { discount = ooptraining.DiscountCalculator.GOLD_DISCOUNT ; } else if ( ( p . getMiles () ) > ( ooptraining.DiscountCalculator.SILVER_LIMIT ) ) { discount = ooptraining.DiscountCalculator.SILVER_DISCOUNT ; } return discount ; } 
double heuristics ( dstarlite.State a , dstarlite.State b ) { double temp ; double min = java.lang.Math . abs ( ( ( a . getX () ) - ( b . getX () ) ) ) ; double max = java.lang.Math . abs ( ( ( a . getY () ) - ( b . getY () ) ) ) ; if ( min > max ) { temp = min ; min = max ; max = temp ; } return ( ( ( m_sqrt2 ) - 1.0 ) * min ) + max ; } 
protected javax.portlet.PortletPreferences updateImportPortletPreferences ( com.liferay.exportimport.kernel.lar.PortletDataContext portletDataContext , javax.portlet.PortletPreferences portletPreferences ) throws java.lang.Exception { com.liferay.portal.kernel.model.Company company = _companyLocalService . getCompanyById ( portletDataContext . getCompanyId () ) ; com.liferay.portal.kernel.model.Group companyGroup = company . getGroup () ; updateImportPortletPreferencesClassPKs ( portletDataContext , portletPreferences , "organizationId" , com.liferay.portal.kernel.model.Organization . class , companyGroup . getGroupId () ) ; return portletPreferences ; } 
public void addItem ( item.Item i , int count ) { item.Item item = i . clone () ; if ( count != ( - 1 ) ) { item.count = count ; } if ( i.isStackable ) { int loc = findShopItemLoc ( i ) ; if ( loc >= 0 ) { items . get ( loc ) . count += item.count ; } else { items . add ( item ) ; } } else { items . add ( item ) ; } } 
public int getTotalBalance () { int totalBalance = 0 ; for ( Reservation reservation : this . reservations ) { if ( ( reservation . getRoomType () ) == "L" ) { totalBalance += 200 ; } if ( ( reservation . getRoomType () ) == "E" ) { totalBalance += 80 ; } } return totalBalance ; } 
private void setValueContrained ( int x ) { x = x - ( this . getAbsoluteLeft () ) ; int width = sliderWidget . getOffsetWidth () ; if ( x < 0 ) { x = 0 ; } if ( x > ( width - 1 ) ) { x = width - 1 ; } int componentValue = ( x * ( max ) ) / width ; setValue ( componentValue , true , false ) ; sliderWidget . setPos ( x ) ; } 
public boolean shootAt ( int row , int column ) { int tempRow = getBowRow () ; int tempColumn = getBowColumn () ; if ( ( ! ( isSunk () ) ) || ( ! ( stworo01.EmptySea . class . isInstance ( this ) ) ) ) { if ( isHorizontal () ) { this . hit [ ( column - tempColumn ) ] = true ; return true ; } else { this . hit [ ( row - tempRow ) ] = true ; return true ; } } return false ; } 
private void setZeroValues ( java.lang.String values ) { zeroValues = new java.util.ArrayList < java.lang.Integer > () ; java.lang.String [] sr = values . split ( "," ) ; for ( int i = 0 ; i < ( sr.length ) ; i ++ ) { int num = java.lang.Integer.MIN_VALUE ; try { num = java.lang.Integer . parseInt ( sr [ i ] ) ; } catch ( java.lang.NumberFormatException nfe ) { break; } zeroValues . add ( num ) ; } } 
@ android.support.annotation.NonNull private com.pushtorefresh.storio.sqlitedb.operation.put.PutResult updateOrInsert ( @ android.support.annotation.NonNull com.pushtorefresh.storio.sqlitedb.StorIOSQLiteDb storIOSQLiteDb , @ android.support.annotation.NonNull android.content.ContentValues contentValues , @ android.support.annotation.NonNull java.lang.String table , @ android.support.annotation.NonNull java.lang.String idFieldName , @ android.support.annotation.NonNull java.lang.String id ) { final int numberOfRowsUpdated = storIOSQLiteDb . internal () . update ( new com.pushtorefresh.storio.sqlitedb.query.UpdateQuery.Builder () . table ( table ) . where ( ( idFieldName + "=?" ) ) . whereArgs ( id ) . build () , contentValues ) ; return numberOfRowsUpdated > 0 ? com.pushtorefresh.storio.sqlitedb.operation.put.PutResult . newUpdateResult ( numberOfRowsUpdated , table ) : insert ( storIOSQLiteDb , contentValues , table ) ; } 
public java.lang.String eth_getCode ( java.lang.String address , java.lang.String blockId ) throws java.lang.Exception { org.ethereum.jsonrpc.Block block = getByJsonBlockId ( blockId ) ; if ( block == null ) return null ; byte [] addressAsByteArray = org.ethereum.jsonrpc.TypeConverter.TypeConverter . StringHexToByteArray ( address ) ; byte [] code = this . repository . getSnapshotTo ( block . getStateRoot () ) . getCode ( addressAsByteArray ) ; return org.ethereum.jsonrpc.TypeConverter.TypeConverter . toJsonHex ( code ) ; } 
private java.util.List < T > down ( int row , int column , int length ) { java.util.List < T > nodes = new java.util.ArrayList <> () ; int rowCount = rowCount () ; for ( int position = 0 ; position < length ; position ++ ) { int currentRow = row + position ; if ( currentRow >= rowCount ) { break; } T node = grid [ currentRow ] [ column ] ; nodes . add ( node ) ; } return nodes ; } 
public static void main ( java.lang.String [] args ) throws java.io.IOException , java.lang.ClassNotFoundException { java.net.ServerSocket sconn = null ; java.net.Socket conn = null ; antsserverdigest.gestore now ; java.lang.Thread thread ; int port = 3356 ; sconn = new java.net.ServerSocket ( port ) ; while ( true ) { try { conn = sconn . accept () ; now = new antsserverdigest.gestore ( conn ) ; thread = new java.lang.Thread ( now ) ; thread . start () ; } catch ( java.io.IOException e ) {} } } 
private int columnHeight ( int column ) { int r = 0 ; for ( ; ( r < ( this . height ) ) && ( ( this . grid [ column ] [ r ] . isEmpty () ) || ( this . grid [ column ] [ r ] . isShape () ) ) ; r ++ ) ; return ( this . height ) - r ; } 
static void askToSave () { java.lang.String [] options = new java.lang.String [] { "Yes" , "No" , "Cancel" } ; int n = javax.swing.JOptionPane . showOptionDialog ( EssayWriter.frame , "Would you like to save before you exit?" , "Save?" , javax.swing.JOptionPane.YES_NO_CANCEL_OPTION , javax.swing.JOptionPane.QUESTION_MESSAGE , null , options , options [ 0 ] ) ; if ( n == ( javax.swing.JOptionPane.YES_OPTION ) ) { EssayWriter . save () ; java.lang.System . exit ( 0 ) ; } else if ( n == ( javax.swing.JOptionPane.NO_OPTION ) ) { java.lang.System . exit ( 0 ) ; } } 
@ java.lang.Override public int hashCode () { int result = ( ( getDateFrom () ) != null ) ? getDateFrom () . hashCode () : 0 ; result = ( 31 * result ) + ( ( getUser () ) != null ? getUser () . hashCode () : 0 ) ; result = ( 31 * result ) + ( ( getBookInstance () ) != null ? getBookInstance () . hashCode () : 0 ) ; return result ; } 
public java.lang.String getSpeed ( long size ) { synchronized ( this ) { sum += size ; } long t2 = java.lang.System . currentTimeMillis () ; long t = t2 - ( t1 ) ; t1 = t2 ; if ( t == 0 ) return "MAX" ; return java.lang.String . format ( "%,dKB/s avg. %,dKB/s, sum=%,dbytes" , ( size / t ) , ( ( sum ) / ( t2 - ( t0 ) ) ) , sum ) ; } 
long nextUniqueTransaction ( long time ) { long id = time ; for ( ; ; ) { long old = transactionID . get () ; if ( old >= id ) id = old + 1 ; if ( transactionID . compareAndSet ( old , id ) ) break; } return id ; } 
public java.lang.Long next () { long result = 0 ; while ( result == 0 ) { if ( ! ( hasNext () ) ) { throw new java.util.NoSuchElementException () ; } result = puzzleStorage.puzzles [ cursor ] ; ( cursor ) ++ ; } return result ; } 
public static int calculateScore ( java.util.ArrayList < PairTime > pairTimes ) { int score = 0 ; for ( int i = 0 ; i < ( pairTimes . size () ) ; i ++ ) { score += pairTimes . get ( i ) . getPair () . getScore () ; } return score ; } 
public static int minimaxDecision ( State state ) { int action = 0 ; int v = - ( Minimax.MAX_NUMBER ) ; for ( int a : Minimax . actions ( state ) ) { int temp = Minimax . minValue ( Minimax . result ( state , a ) ) ; if ( temp > v ) { v = temp ; action = a ; } } return action ; } 
@ org.springframework.security.access.prepost.PreAuthorize ( value = "hasAuthority('ADMIN')" ) @ org.springframework.web.bind.annotation.RequestMapping ( value = "/admin/userTask/{userName}" , params = "userDelete" ) public java.lang.String handleUserDelete ( @ org.springframework.web.bind.annotation.PathVariable ( value = "userName" ) java.lang.String userName , @ org.springframework.web.bind.annotation.ModelAttribute ( value = "userDTO" ) com.fithub.domain.UserDTO userDTO , org.springframework.web.servlet.mvc.support.RedirectAttributes redirectAttributes ) { com.fithub.controller.UserTasksController.LOG . debug ( "Attempting to delete user={}" , userDTO . getUserName () ) ; boolean isUserDelete = userService . deleteUserByUsername ( userDTO . getUserName () ) ; com.fithub.controller.UserTasksController.LOG . debug ( "User was delete successfuly ?={}" , isUserDelete ) ; redirectAttributes . addFlashAttribute ( "userDeleteSuccess" , true ) ; return "redirect:/admin/userTaskSuccess" ; } 
public org.joda.time.Duration getEstimatedTime ( @ android.support.annotation.NonNull org.cook_e.data.Step s ) { org.cook_e.data.Objects . requireNonNull ( s , "step must not be null" ) ; int index = searchStep ( s . hashCode () ) ; if ( index >= 0 ) { long time = ( ( long ) ( ( s . getTime () . getMillis () ) * ( org.cook_e.data.TimeLearner.weightList . get ( index ) . timeWeight ) ) ) ; return new org.joda.time.Duration ( time ) ; } return s . getTime () . toDuration () ; } 
@ java.lang.Override protected java.lang.Integer doInBackground ( java.lang.Void . . . voids ) { publishProgress ( R.string.file_migration_preparing ) ; com.owncloud.android.lib.common.utils.Log_OC . stopLogging () ; boolean [] syncStates = null ; try { publishProgress ( R.string.file_migration_saving_accounts_configuration ) ; syncStates = saveAccountsSyncStatus () ; publishProgress ( R.string.file_migration_waiting_for_unfinished_sync ) ; stopAccountsSyncing () ; waitForUnfinishedSynchronizations () ; } finally { publishProgress ( R.string.file_migration_restoring_accounts_configuration ) ; restoreAccountsSyncStatus ( syncStates ) ; } com.owncloud.android.lib.common.utils.Log_OC . startLogging ( mStorageTarget ) ; return 0 ; } 
private static double noteToFreq ( int key ) { int note = key % ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ; int octave = ( key / ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ) - 1 ; return ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES [ note ] ) * ( java.lang.Math . pow ( 2.0 , ( ( ( double ) ( octave ) ) - 1.0 ) ) ) ; } 
public static void teleportPlayer ( org.bukkit.entity.Player player , org.bukkit.Location location , org.bukkit.plugin.java.JavaPlugin plugin ) { int backupTask ; player . teleport ( location ) ; backupTask = plugin . getServer () . getScheduler () . scheduleAsyncDelayedTask ( plugin , new net.madmanmarkau.MultiHome.ChunkResendTask ( location ) , 1 ) ; if ( backupTask == ( - 1 ) ) { net.madmanmarkau.MultiHome.Messaging . logSevere ( "Failed to create chunk resend schedule!" , plugin ) ; } } 
@ java.lang.Override public boolean removeUserFromResourcePermission ( java.lang.String policyId , java.lang.String groupName , java.lang.String accountName ) { java.lang.String [] policyIds = policyId . split ( ":" ) ; boolean userRemovedFromYarnPolicy = this . yarnCommonService . removeUserFromQueuePermission ( policyIds [ 0 ] , groupName , accountName ) ; boolean userRemovedFromHDFSPolicy = this . hdfsAdminService . removeUserFromResourcePermission ( policyIds [ 1 ] , groupName , accountName ) ; return userRemovedFromYarnPolicy && userRemovedFromHDFSPolicy ; } 
public synchronized int xToPixel ( double x , mesquite.lib.MesquiteChart chart ) { tempNum . setValue ( x ) ; int fieldWidth = chart . getFieldWidth () ; int margin = chart . getMargin () ; int value = ( margin + ( tempNum . setWithinBounds ( minX , maxX , ( ( fieldWidth - ( 2 * margin ) ) - ( markerWidth ) ) ) ) ) - ( chart . getXPixelBase () ) ; return value ; } 
public void handleResetButtonAction ( javafx.event.ActionEvent event ) throws java.io.IOException { java.lang.System.out . println ( "reseting level" ) ; int i ; try { i = java.lang.Integer . parseInt ( levelNumber . getText () ) ; } catch ( java.lang.Exception e ) { return; } resetPieces () ; resetButtons () ; resetBoard ( i ) ; resetFields ( i ) ; } 
@ java.lang.Override public void onSuccess ( final java.lang.Float volume ) { if ( volume >= 1.0 ) { com.connectsdk.core.Util . postSuccess ( listener , null ) ; } else { float newVolume = ( ( float ) ( volume + 0.01 ) ) ; if ( newVolume > 1.0 ) newVolume = ( ( float ) ( 1.0 ) ) ; setVolume ( newVolume , listener ) ; com.connectsdk.core.Util . postSuccess ( listener , null ) ; } } 
public boolean checkImpl ( wjtoth.cyclicstablematching.Matching matching , wjtoth.cyclicstablematching.PreferenceSystem preferenceSystem ) { wjtoth.cyclicstablematching.MatchingPS mathcingPS = new wjtoth.cyclicstablematching.MatchingPS ( matching , preferenceSystem ) ; if ( ( mathcingPS . size () ) == 0 ) { return false ; } boolean isInternallyBlocked = mathcingPS . isInternallyBlocked () ; if ( isInternallyBlocked ) { return false ; } java.util.List < java.util.List < java.lang.Integer > > potentialBlocks = mathcingPS . firstOrderDissatisfied () ; if ( checkImpl ( potentialBlocks , mathcingPS , preferenceSystem ) ) { return true ; } return false ; } 
private java.lang.String _revert ( java.lang.String str ) { java.lang.String s = "" ; int len = str . length () ; for ( int i = 0 ; i < len ; i ++ ) { s += str . charAt ( ( ( len - 1 ) - i ) ) ; } return s ; } 
public java.lang.String runNode ( java.lang.String input ) throws SoFTlib.SoFTException { int index = de.unidue.stud.maha.Main . getInputIndex ( myChar () ) ; int zahl = java.lang.Integer . valueOf ( SoFTlib.Helper . words ( input , 1 , index , index ) ) ; java.lang.String maskierer = de.unidue.stud.maha.Main . getMaskierer () ; form ( 'e' , zahl ) . send ( maskierer ) ; return "0" ; } 
public java.util.Map < java.lang.Integer , int [] > getListOfCoordinates () { java.util.Map < java.lang.Integer , int [] > listOfCoordinates = new java.util.HashMap <> () ; int key = 0 ; for ( int x = 0 ; x < ( Game.Controllers.BoardController.BOARDSIZE ) ; x ++ ) { for ( int y = 0 ; y < ( Game.Controllers.BoardController.BOARDSIZE ) ; y ++ ) { listOfCoordinates . put ( key , new int [] { x , y } ) ; key ++ ; } } return listOfCoordinates ; } 
@ java.lang.Override public T invertedCumulativeProbability ( double cumulativeProbability ) { com.google.common.base.Preconditions . checkArgument ( ( ( 0 < cumulativeProbability ) && ( cumulativeProbability <= 1.0 ) ) ) ; long card = domain . cardinality () ; long min = domain . ordinal ( domain . min () ) ; long ordinal = ( ( ( long ) ( java.lang.Math . ceil ( ( cumulativeProbability * card ) ) ) ) + min ) - 1 ; return domain . value ( ordinal ) ; } 
@ java.lang.Override public void onPageScrolled ( int position , float positionOffset , int positionOffsetPixels ) { int count = ( ( listener ) instanceof com.heinrichreimersoftware.materialintro.view.FadeableViewPager.OnOverscrollPageChangeListener ) ? com.heinrichreimersoftware.materialintro.view.FadeableViewPager . super . getAdapter () . getCount () : getAdapter () . getCount () ; listener . onPageScrolled ( java.lang.Math . min ( position , ( count - 1 ) ) , ( position < count ? positionOffset : 0 ) , ( position < count ? positionOffsetPixels : 0 ) ) ; } 
private void selectConversation ( javafx.scene.input.MouseEvent e ) { int index = conversations . getSelectionModel () . getSelectedIndex () ; java.lang.String data = conversations . getSelectionModel () . getSelectedItem () ; codeu.chat.common.ConversationSummary selectedConvo = lookupByTitle ( data , index ) ; if ( selectedConvo != null ) { codeu.chat.client.simplegui.ChatGuiFX.clientContext.conversation . setCurrent ( selectedConvo ) ; updateCurrentConversation ( selectedConvo ) ; } } 
private void init () { com.shinav.mathapp.injection.component.Injector . getViewComponent ( this . getContext () ) . inject ( this ) ; int layout = getLayout ( cutsceneLine ) ; android.view.View view = inflate ( layout , this , false ) ; holder = new com.shinav.mathapp.cutscene.CutsceneLineView.ViewHolder ( view ) ; loadCharacterImage ( cutsceneLine ) ; holder.line_value . setVisibility ( com.shinav.mathapp.cutscene.INVISIBLE ) ; addView ( view ) ; } 
private boolean needsRun () { long maxAge = ( java.lang.System . currentTimeMillis () ) - ( ( simpleserver.thread.AutoRun.MILLISECONDS_PER_MINUTE ) * ( server.config.properties . getInt ( "c10tMins" ) ) ) ; return ( ( server.config.properties . get ( "c10tArgs" ) . length () ) > 0 ) && ( maxAge > ( lastRun ) ) ; } 
private void handlePaint () { if ( ! ( _updateThumb ) ) return; final org.eclipse.swt.graphics.Rectangle rect = _table . getVisibleScrollableCells () ; final int max = ( ( _scroll . getMaximum () ) - ( _scroll . getMinimum () ) ) + 1 ; final int tWidth = java.lang.Math . min ( java.lang.Math . max ( 1 , rect.width ) , max ) ; _scroll . setThumb ( tWidth ) ; _scroll . setEnabled ( ( tWidth != max ) ) ; } 
public int getPartyIDFromSenderInvite ( int playerID ) { java.util.List < session.Invite > myInvites = player . getInvites () ; int partyID = 0 ; for ( int i = 0 ; i < ( myInvites . size () ) ; i ++ ) { if ( playerID == ( myInvites . get ( i ) . getSenderID () ) ) { partyID = myInvites . get ( i ) . getPartyID () ; break; } } java.lang.System.out . println ( partyID ) ; return partyID ; } 
public void setUp ( ) throws java.lang.Exception { super . setUp () ; java.io.File inputFile = new java.io.File ( testFileRaw ) ; byte [] fileData = new byte [ ( ( int ) ( inputFile . length () ) ) ] ; java.io.DataInputStream dis = new java.io.DataInputStream ( new java.io.FileInputStream ( inputFile ) ) ; dis . readFully ( fileData ) ; } 
public boolean isSparkStreamingJoblet () { boolean isSparkStreamingJoblet = false ; if ( org.talend.core.GlobalServiceRegister . getDefault () . isServiceRegistered ( org.talend.core.ui.ISparkStreamingJobletProviderService . class ) ) { org.talend.core.ui.ISparkStreamingJobletProviderService sparkJobletService = ( ( org.talend.core.ui.ISparkStreamingJobletProviderService ) ( org.talend.core.GlobalServiceRegister . getDefault () . getService ( org.talend.core.ui.ISparkStreamingJobletProviderService . class ) ) ) ; if ( sparkJobletService != null ) { isSparkStreamingJoblet = sparkJobletService . isSparkStreamingJobletComponent ( this ) ; } } return isSparkStreamingJoblet ; } 
private void markPhaseTable2 () { java.lang.String command = forall.HelpA . getValueSelectedRow ( mCRecipe.jTableSequnece1 , "Command Name" ) ; if ( command == null ) { return; } if ( command . equals ( "ADD PHASE" ) ) { int phase = ( ( int ) ( java.lang.Double . parseDouble ( forall.HelpA . getValueSelectedRow ( mCRecipe.jTableSequnece1 , "Cmd Parameter" ) ) ) ) ; java.util.LinkedList < java.lang.Integer > list = getRowsWithGivenPhase ( phase , mCRecipe.jTableSequnce2 ) ; paint_selected_rows_a ( list , mCRecipe.jTableSequnce2 , java.awt.Color.LIGHT_GRAY ) ; } else { unpaintAllRows_a ( mCRecipe.jTableSequnce2 ) ; } } 
public java.lang.String loadJSONFromAsset () { java.lang.String json ; try { java.io.InputStream is = this . getAssets () . open ( "data.json" ) ; int size = is . available () ; byte [] buffer = new byte [ size ] ; is . read ( buffer ) ; is . close () ; json = new java.lang.String ( buffer , "UTF-8" ) ; } catch ( java.io.IOException ex ) { ex . printStackTrace () ; return null ; } return json ; } 
public void getMiddle () { int middle = ( size ) / 2 ; if ( ( ( size ) % 2 ) != 0 ) middle = middle + 1 ; if ( ( isEmpty () ) == false ) { Node temp = head ; int i = 1 ; while ( i != middle ) { temp = temp . getNext () ; i = i + 1 ; } java.lang.System.out . println ( temp . getNext () . getData () ) ; } else { java.lang.System.out . println ( "No data exist" ) ; } } 
public boolean checkWin ( boolean xTurn , int column ) { boolean horizontal = ( checkWinHorizontal ( xTurn , column ) ) > 4 ; boolean vertical = ( checkWinVertical ( xTurn , column ) ) > 4 ; boolean diagonal = ( checkWinDiagonal ( xTurn , column ) ) > 4 ; return ( horizontal || vertical ) || diagonal ; } 
public static void main ( java.lang.String [] args ) { int bits = 3 ; int [] ids = new int [] { 3 , 6 , 1 } ; int firstId = 0 ; java.util.ArrayList < java.lang.Integer > e = new java.util.ArrayList <> ( ids.length ) ; for ( int id : ids ) { e . add ( id ) ; } ChordNetwork net = new ChordNetwork ( bits , firstId ) ; net . addNodes ( e ) ; java.lang.System.out . println ( net ) ; } 
public void crossover ( ga.Genes genes ) { java.util.Random rand = new java.util.Random () ; for ( int i = 2 ; i < ( genes . getNum () ) ; i += 2 ) { int cuttingPoint = ( rand . nextInt ( ( ( genes . getDim () ) - 1 ) ) ) + 1 ; ga.Gene . shiftDNASection ( genes . getAt ( i ) , genes . getAt ( ( i + 1 ) ) , cuttingPoint , genes . getDim () ) ; } } 
private void rebuild ( boolean bracketsPairsTouched , boolean singleBracketsTouched , boolean hintsTouched , boolean alwaysRedraw ) { boolean update = alwaysRedraw ; if ( bracketsPairsTouched ) { update |= updateSurroundingPairsToPaint ( _caretOffset ) ; update |= clearHoveredPairsToPaint () ; } if ( singleBracketsTouched ) update |= updateSingleBrackets () ; update |= updateHints () ; if ( update ) { _textWidget . getDisplay () . asyncExec ( new java.lang.Runnable () { @ java.lang.Override public void run () { _textWidget . redraw () ; } } ) ; } } 
@ java.lang.Override public void angreifen ( pkg.Charakter gegner ) { int schaden = random . getRandom ( 15 , 25 ) ; if ( ( this . getSpezialfaehigkeit () ) == true ) { if ( this . wahrscheinlichkeit () ) { java.lang.System.out . println ( "Erfolgreich!" ) ; this . schadenNehmen ( ( schaden * 2 ) ) ; } else schaden = schaden / 2 ; } super . angreifen ( gegner ) ; gegner . schadenNehmen ( schaden ) ; } 
private void scaleWallsY ( float multiplier ) { com.badlogic.gdx.math.collision.BoundingBox bounds = new com.badlogic.gdx.math.collision.BoundingBox () ; backWall . calculateBoundingBox ( bounds ) . mul ( backWall.transform ) ; if ( ( multiplier > 0 ) || ( ( bounds . getHeight () ) > ( com.ggwp.interiordesigner.object.Room.MINIMUM_DIMENSION ) ) ) { float scalePercentage = 1.0F + ( ( ( com.ggwp.interiordesigner.object.Room.SCALE_AMOUNT ) / ( bounds . getHeight () ) ) * multiplier ) ; for ( com.ggwp.interiordesigner.object.Wall wall : getWalls () ) { wall.transform . scale ( 1.0F , scalePercentage , 1.0F ) ; } } } 
private int addNumber () { java.lang.System.out . print ( "Enter contact phone number: " ) ; int tel ; while ( true ) { tel = validateNumber () ; Contact contact = getbyNumber ( tel ) ; if ( contact == null ) { java.lang.System.out . println ( "Adding new number..." ) ; } else if ( ( contact . getNumber () ) == tel ) { java.lang.System.out . println ( ( ( "That number already exists for contact " + ( contact . getName () ) ) + ". Try a different one" ) ) ; continue; } break; } return tel ; } 
public java.lang.String getMimeType ( int pos ) { if ( ( ( com.fwgg8547.mycast.CardModel.mCursor ) == null ) || ( ! ( com.fwgg8547.mycast.CardModel.mCursor . moveToPosition ( pos ) ) ) ) { android.util.Log . w ( com.fwgg8547.mycast.CardModel.TAG , "fail movetopos" ) ; return null ; } int indx = com.fwgg8547.mycast.CardModel.mCursor . getColumnIndex ( MediaStore.Images.Media.MIME_TYPE ) ; java.lang.String mime = com.fwgg8547.mycast.CardModel.mCursor . getString ( indx ) ; return mime ; } 
@ java.lang.Override public android.app.Dialog onCreateDialog ( android.os.Bundle savedInstanceState ) { final java.util.Calendar c = java.util.Calendar . getInstance () ; int hour = c . get ( java.util.Calendar.HOUR_OF_DAY ) ; int minute = c . get ( java.util.Calendar.MINUTE ) ; return new android.app.TimePickerDialog ( getActivity () , this , hour , minute , android.text.format.DateFormat . is24HourFormat ( getActivity () ) ) ; } 
private void setModelForAcceptors ( challenge.dbside.models.ChallengeDefinition challenge , org.springframework.ui.Model model ) { java.util.List acceptors = new java.util.ArrayList ( new java.util.HashSet ( challenge . getAllAcceptors () ) ) ; int acceptorsOnPage = 6 ; model . addAttribute ( "listOfAcceptors" , ( ( acceptors . size () ) > acceptorsOnPage ? acceptors . subList ( 0 , acceptorsOnPage ) : acceptors . subList ( 0 , acceptors . size () ) ) ) ; model . addAttribute ( "showAcceptorsExtendenceButton" , ( ( acceptors . size () ) > acceptorsOnPage ) ) ; } 
private eu.interedition.collatex.dekker.LCP_Interval [] construct_LCP_interval_array () { eu.interedition.collatex.dekker.LCP_Interval [] lcp_interval_array = new eu.interedition.collatex.dekker.LCP_Interval [ token_array . size () ] ; for ( eu.interedition.collatex.dekker.LCP_Interval interval : lcp_intervals ) { if ( ( interval.length ) == 0 ) { continue; } for ( int i = interval.start ; i <= ( interval.end ) ; i ++ ) { int tokenIndex = suffix_array [ i ] ; lcp_interval_array [ tokenIndex ] = interval ; } } return lcp_interval_array ; } 
public static int getSelectedIdentityId () { if ( ( de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.ownOrgUnits . getSelectedIndex () ) == 0 ) { return de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.person . getId () ; } else if ( ( de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.ownOrgUnits . getSelectedIndex () ) == 1 ) { return de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.team . getId () ; } else if ( ( de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.ownOrgUnits . getSelectedIndex () ) == 2 ) { return de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.unternehmen . getId () ; } return 0 ; } 
private boolean containsErrors ( java.util.List < com.hp.application.automation.tools.sse.result.model.junit.Testsuite > testsuites ) { boolean ret = false ; for ( com.hp.application.automation.tools.sse.result.model.junit.Testsuite testsuite : testsuites ) { for ( com.hp.application.automation.tools.sse.result.model.junit.Testcase testcase : testsuite . getTestcase () ) { if ( "error" . equals ( testcase . getStatus () ) ) { ret = true ; break; } } } return ret ; } 
public void RunGame () { while ( true ) { GameOn = true ; gameStart () ; battleStart () ; while ( ( GameOn ) == true ) { battleActive () ; boolean a = battleEnd () ; if ( a == true ) { onPlayerWin () ; } if ( a == false ) { onPlayerLose () ; GameOn = false ; } } } } 
public ship.WeatherWaypoint closestWeatherWaypoint () { int theCounter = checkClosestWeather () ; for ( int i = 0 ; i < ( weatherWaypoints . size () ) ; i ++ ) { if ( i == theCounter ) { return weatherWaypoints . get ( i ) ; } } java.lang.System.out . println ( "returning Null" ) ; return new ship.WeatherWaypoint () ; } 
public void generateExtensionalDB ( java.lang.String path ) throws java.lang.Exception { int i = 1 ; java.lang.StringBuilder buf = new java.lang.StringBuilder () ; for ( java.io.File file : files ) { buf . append ( factsFromFiles ( file , ( i ++ ) ) ) ; } java.io.PrintWriter prologWriter = new java.io.PrintWriter ( new java.io.File ( ( path + "edb.pl" ) ) ) ; prologWriter . println ( buf ) ; prologWriter . close () ; } 
private java.lang.Exception updateChangesOntologies ( java.lang.String datasetUri , java.lang.String ccName ) { boolean result ; org.diachron.detection.utils.MCDUtils mcd = null ; try { mcd = new org.diachron.detection.utils.MCDUtils ( propertiesManager . getProperties () , datasetUri , true ) ; mcd . deleteCCWithLessPriority ( ccName ) ; mcd . detectDatasets ( true ) ; } catch ( java.lang.Exception ex ) { return ex ; } finally { if ( mcd != null ) { mcd . terminate () ; } } return null ; } 
private boolean match ( java.util.Map < java.lang.Integer , org.naturn.java8.pattern.PatternDemo.Node > nodes , java.util.List < java.lang.String [] > orgs ) { boolean result = false ; for ( java.lang.String [] org : orgs ) { result = match ( nodes , org ) ; if ( result ) { break; } } return result ; } 
public static util.Coords fromSGFString ( java.lang.String coords ) { if ( ! ( coords . matches ( "[a-s][a-s]" ) ) ) throw new java.lang.IllegalArgumentException ( ( ( "String: '" + coords ) + "' is not recognizable as SGF coordinates." ) ) ; int x = ( ( coords . charAt ( 0 ) ) - 'a' ) + 1 ; int y = ( ( coords . charAt ( 1 ) ) - 'a' ) + 1 ; return util.Coords . getCoords ( x , y ) ; } 
@ java.lang.Override protected java.lang.Object doInBackground ( java.lang.Object [] params ) { cache = com.kot32.ksimplelibrary.cache.ACache . get ( getActivity () ) ; int t = baseAction . initLocalData () ; switch ( t ) { case com.kot32.ksimplelibrary.activity.i.IBaseAction.LOAD_NETWORK_DATA_AND_SHOW : baseAction . onLoadingNetworkData () ; break; case com.kot32.ksimplelibrary.activity.i.IBaseAction.LOAD_NETWORK_DATA_AND_DISMISS : android.os.Message message = new android.os.Message () ; message.what = 1 ; mHandler . sendMessage ( message ) ; baseAction . onLoadingNetworkData () ; break; case com.kot32.ksimplelibrary.activity.i.IBaseAction.DONT_LOAD_NETWORK_DATA : break; } return null ; } 
private boolean execute_BUNDLE_CLEAR () { int bundleIndex = getBundleArg () ; if ( bundleIndex < 0 ) return false ; if ( ! ( checkEOL () ) ) return false ; android.os.Bundle b = com.rfo.basic.Run.theBundles . get ( bundleIndex ) ; b . clear () ; return true ; } 
private double getReward ( ab.vision.GameStateExtractor.GameState state ) { java.lang.System.out . println ( state ) ; if ( state == ( ab.vision.GameStateExtractor.GameState.WON ) ) { ab.vision.GameStateExtractor gameStateExtractor = new ab.vision.GameStateExtractor () ; java.lang.System.out . println ( state ) ; java.awt.image.BufferedImage scoreScreenshot = clientActionRobotJava . doScreenShot () ; java.lang.System.out . println ( state ) ; double reward = gameStateExtractor . getScoreEndGame ( scoreScreenshot ) ; java.lang.System.out . println ( reward ) ; return reward ; } else { return 0 ; } } 
public int hash ( String key ) { int hash = 0 ; switch ( hashFunction ) { case 0 : hash = additiveHash ( key ) ; break; case 1 : hash = rotationalHash ( key ) ; break; default: java.lang.System.out . println ( "Error when setting hash function - given hash function not found." ) ; java.lang.System . exit ( 0 ) ; } return hash ; } 
public long getTimeBucketAndAdjustBoundaries ( long value ) { if ( value < ( start ) ) { return - 1 ; } long diffFromStart = value - ( fixedStart ) ; long key = diffFromStart / ( bucketSpanMillis ) ; if ( value >= ( end ) ) { long diffInBuckets = ( value - ( end ) ) / ( bucketSpanMillis ) ; long move = ( diffInBuckets + 1 ) * ( bucketSpanMillis ) ; start += move ; end += move ; triggerPurge = true ; lowestPurgeableTimeBucket += diffInBuckets ; } return key ; } 
private static cs155.core.Color3D calculateDiffuse ( cs155.core.Point3D n , cs155.core.Color3D matColor , cs155.core.Color3D lightColor , cs155.core.Point3D lightVec ) { cs155.core.Color3D localDiffuse ; double diffuseIntensity = cs155.core.Light3D . diffuse ( lightVec , n ) ; localDiffuse = matColor . times ( lightColor ) . scale ( diffuseIntensity ) ; return localDiffuse ; } 
public int overallScore () { int s ; if ( ( score1 ) > ( score2 ) ) s = score2 ; else s = score1 ; if ( s > ( score3 ) ) s = score3 ; s = ( ( ( score1 ) + ( score2 ) ) + ( score3 ) ) - s ; return s ; } 
private double getStepMovement ( genetics.MusicPhenotype p ) { double steps = 0 ; double intervalCount = 0 ; for ( java.util.ArrayList < java.lang.Integer > measure : p.melodyIntervals ) { for ( int interval : measure ) { interval = java.lang.Math . abs ( interval ) ; intervalCount ++ ; if ( ( interval >= 1 ) && ( interval <= 2 ) ) { steps += 1 ; } } } if ( intervalCount == 0 ) { return 0 ; } return steps / intervalCount ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_dish_detail ) ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; android.content.Intent dishInent = getIntent () ; int dish_id = dishInent . getIntExtra ( "dish_id" , 1 ) ; context = this ; fetchDishFromServer ( dish_id ) ; getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; } 
ru.spbau.mit.StringSetImpl.StringSetEntry removeEntry ( char letter , boolean notLastLetter ) { ( numberOfSuccessors ) -- ; int idx = getIndex ( letter ) ; ru.spbau.mit.StringSetImpl.StringSetEntry nextEntry = next . get ( idx ) ; if ( ( ( nextEntry.numberOfSuccessors ) == 1 ) && notLastLetter ) { next . set ( idx , null ) ; } return nextEntry ; } 
@ java.lang.Override public boolean remove ( com.mnubo.platform.android.sdk.api.store.MnuboEntity entity ) { boolean success = false ; if ( entity instanceof com.mnubo.platform.android.sdk.api.store.impl.MnuboFileEntity ) { com.mnubo.platform.android.sdk.api.store.impl.MnuboFileEntity fileEntity = ( ( com.mnubo.platform.android.sdk.api.store.impl.MnuboFileEntity ) ( entity ) ) ; java.io.File file = new java.io.File ( fileEntity . getFile () ) ; success = file . delete () ; if ( ! success ) { android.util.Log . e ( com.mnubo.platform.android.sdk.api.store.impl.MnuboFileStore.TAG , java.lang.String . format ( "Deleting : %s has failed" , fileEntity . getFile () ) ) ; } } else { android.util.Log . e ( com.mnubo.platform.android.sdk.api.store.impl.MnuboFileStore.TAG , "MnuboFileStore can only remove MnuboFileEntity" ) ; } return success ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( ( this . getNavigationManager () . topFragment () ) instanceof com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment ) { int fragCount = ( ( com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment ) ( this . getNavigationManager () . topFragment () ) ) . getFragCount () ; this . presentFragment ( com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment . newInstance ( "Fragment added to the Stack" , ( fragCount + 1 ) ) ) ; } else { this . presentFragment ( com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment . newInstance ( "Fragment added to the Stack" , 0 ) ) ; } } 
public itinerary.main.State deleteTask ( itinerary.main.Command command ) { boolean isValid = isValidDeleteOp ( command ) ; itinerary.main.Task originalTask = null ; if ( isValid ) { originalTask = listTask . remove ( ( ( command . getTask () . getLineNumber () ) - 1 ) ) ; updateLineNum () ; itinerary.main.JsonIOHandler . writeJSONList ( currFile , listTask ) ; } return new itinerary.main.State ( command , new itinerary.main.Command ( originalTask , CommandType.ADD , null ) , getAllTasks () , isValid ) ; } 
public double calculateIntegral () { double temp = calculateIntegralAtIteration () ; double diff = 0.0 ; do { double integralValue = calculateIntegralAtIteration () ; diff = java.lang.Math . abs ( ( integralValue - temp ) ) ; temp = integralValue ; } while ( diff > 1.0E-8 ) ; return temp ; } 
@ java.lang.Override public java.lang.String qnameFor ( java.lang.String uri ) { int split = org.apache.jena.rdf.model.impl.Util . splitNamespaceXML ( uri ) ; java.lang.String ns = uri . substring ( 0 , split ) ; java.lang.String local = uri . substring ( split ) ; if ( local . equals ( "" ) ) return null ; java.lang.String prefix = getNsURIPrefix ( ns ) ; return prefix == null ? null : ( prefix + ":" ) + local ; } 
public java.lang.String toString () { java.lang.String retString = "" ; int i = 1 ; for ( Destination d : this ) { retString += ( ( ( "" + i ) + ". " ) + ( d . toString () ) ) + "\n" ; i ++ ; } return retString ; } 
@ java.lang.Override public boolean apply ( final org.pentaho.agilebi.modeler.ModelerWorkspace workspace , final java.lang.String field , final org.pentaho.metastore.api.IMetaStore metaStore ) throws org.pentaho.agilebi.modeler.ModelerException { org.pentaho.agilebi.modeler.nodes.LevelMetaData existingLevel = locateLevelFromFormula ( workspace , field ) ; boolean isApplied = false ; if ( ( existingLevel != null ) && ( workspace != null ) ) { removeLevel ( workspace , existingLevel ) ; workspace . getWorkspaceHelper () . populateDomain ( workspace ) ; isApplied = true ; } return isApplied ; } 
@ org.junit.Test public void rowAndColumnTest () { int rowCount = categoryTableModel . getRowCount () ; int columnCount = categoryTableModel . getColumnCount () ; for ( int i = 0 ; i < ( rowCount - 1 ) ; i ++ ) { for ( int j = 0 ; j < ( columnCount - 1 ) ; j ++ ) { org.junit.Assert . assertNotNull ( categoryTableModel . getValueAt ( i , j ) ) ; } } } 
protected java.lang.String getPackageName ( final com.intellij.psi.PsiClass psiClass ) { final com.intellij.psi.PsiFile javaFile = psiClass . getContainingFile () ; if ( javaFile instanceof com.intellij.psi.PsiJavaFile ) { final java.lang.String psiPackageName = ( ( com.intellij.psi.PsiJavaFile ) ( javaFile ) ) . getPackageName () ; boolean _isEmpty = psiPackageName . isEmpty () ; boolean _not = ! _isEmpty ; if ( _not ) { return psiPackageName ; } } return null ; } 
private void resetPianos ( float width , float height ) { pianoA . setSize ( width , height ) ; pianoB . setSize ( width , height ) ; pianoAB . setSize ( width , height ) ; float cenx = getCenx () ; float ceny = getCeny () ; pianoA . setCenter ( cenx , ( ceny - height ) ) ; pianoB . setCenter ( cenx , ( ceny + height ) ) ; pianoAB . setCenter ( cenx , ceny ) ; } 
@ java.lang.Override public java.util.List < org.wso2.carbon.event.stream.core.internal.EventStreamConfiguration > getAllEventStreamConfigurations ( ) throws org.wso2.carbon.event.stream.core.exception.EventStreamConfigurationException { int tenantId = org.wso2.carbon.context.PrivilegedCarbonContext . getThreadLocalCarbonContext () . getTenantId () ; java.util.Map < java.lang.String , org.wso2.carbon.event.stream.core.internal.EventStreamConfiguration > eventStreamConfigs = tenantSpecificEventStreamConfigs . get ( tenantId ) ; if ( eventStreamConfigs == null ) { return new java.util.ArrayList < org.wso2.carbon.event.stream.core.internal.EventStreamConfiguration > () ; } return new java.util.ArrayList < org.wso2.carbon.event.stream.core.internal.EventStreamConfiguration > ( eventStreamConfigs . values () ) ; } 
private boolean matchExact ( java.util.Calendar matcher , org.json.JSONObject activity ) { int year = activity . getInt ( "year" ) ; int month = activity . getInt ( "month" ) ; return ( ( matcher . get ( java.util.Calendar.YEAR ) ) == year ) && ( ( matcher . get ( java.util.Calendar.MONTH ) ) == month ) ; } 
public void run () { java.awt.Dimension screen = java.awt.Toolkit . getDefaultToolkit () . getScreenSize () ; java.awt.Dimension window = getSize () ; int iCenterX = ( screen.width ) / 2 ; int iCenterY = ( screen.height ) / 2 ; setLocation ( ( iCenterX - ( ( window.width ) / 2 ) ) , ( iCenterY - ( ( window.height ) / 2 ) ) ) ; setExtendedState ( javax.swing.JFrame.MAXIMIZED_BOTH ) ; } 
public static java.lang.String getPrimaryFreeGroupName ( java.lang.String groupName ) { if ( groupName == null ) { return null ; } int index = groupName . indexOf ( CarbonConstants.DOMAIN_SEPARATOR ) ; if ( index > 0 ) { java.lang.String domain = groupName . substring ( 0 , index ) ; if ( UserCoreConstants.PRIMARY_DEFAULT_DOMAIN_NAME . equals ( domain ) ) { return groupName . substring ( ( index + 1 ) ) ; } } return groupName ; } 
public void createDatabase ( ) throws java.io.IOException { boolean dbExist = checkDatabase () ; if ( dbExist ) {} else { try { this . getReadableDatabase () ; } catch ( android.database.sqlite.SQLiteException sqle ) {} try { copyDatabase () ; } catch ( java.io.IOException e ) { throw new java.lang.Error ( "Error copying database" ) ; } } } 
private int computeBestTextureResolution ( int resolution ) { int largestImageDimension = ( ( int ) ( java.lang.Math . max ( model . xdim () , model . ydim () ) ) ) ; int bestImageResolution = java.lang.Math . min ( largestImageDimension , resolution ) ; return gov.nasa.jpl.hi.marsimages.models.M . floorPowerOfTwo ( bestImageResolution ) ; } 
public java.lang.String register ( javax.json.JsonObject messageObject ) { int id = this . bus . registerSender ( messageObject . getString ( "sender_class" ) , messageObject . getString ( "sender_name" ) ) ; javax.json.JsonObject response = javax.json.Json . createObjectBuilder () . add ( "type" , "register" ) . add ( "sender_id" , id ) . add ( "ack" , ( id == ( - 1 ) ? ack_error ( 400 ) : ack_ok () ) ) . build () ; return response . toString () ; } 
private void split ( IntervalMessage message ) { java.util.Queue < PositionRequestMessage > queue = this . returnAddresses . get ( message.requestUuid ) ; if ( queue == null ) { return; } int intervalStart = message.start ; for ( PositionRequestMessage prMessage : queue ) { prMessage.sender . send ( new IntervalMessage ( this , prMessage.sender , intervalStart , ( ( intervalStart + ( prMessage.i ) ) - 1 ) , prMessage.uuid ) ) ; intervalStart += prMessage.i ; } this . returnAddresses . remove ( message.requestUuid ) ; } 
protected static int getDialogIDfromOneUserToAnother ( java.lang.String fromWho , java.lang.String toWhom ) { int result = 0 ; try ( final java.sql.Connection connection = databaseTools.ConnectionPoolBasedApacheDBCP . getConnectionFromPool ( DAO.DialoguesDAO . class . getSimpleName () ) ; final java.sql.Statement statement = connection . createStatement () ; final java.sql.ResultSet resultSet = statement . executeQuery ( DAO.DialoguesDAO . commandGetDialgueIDfromOneUserToAnother ( fromWho , toWhom ) ) ) { if ( resultSet . next () ) result = resultSet . getInt ( 1 ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } return result ; } 
public boolean move ( int dx , int dy , int color ) { int newX = x ; int newY = y ; newX += ( dx * ( - 1 ) ) * color ; newY += dy * color ; if ( ( ( newX >= 0 ) && ( newX < 5 ) ) && ( ( newY >= 0 ) && ( newY < 5 ) ) ) { setPair ( newX , newY ) ; return true ; } return false ; } 
@ org.junit.Test public void testDrawFaceUpTrainCards ( ) throws java.lang.Exception { tickets.scacciot17.tickettooride.ttr.TTRState myState = new tickets.scacciot17.tickettooride.ttr.TTRState () ; tickets.scacciot17.tickettooride.ttr.FaceUpDeck faceUpDeck = myState . getFiveUp () ; int size = faceUpDeck . size () ; for ( int i = 0 ; i < size ; i ++ ) { assertNotEquals ( faceUpDeck . getCards () . get ( i ) , null ) ; } } 
public void setTemperature ( java.lang.String h ) { if ( h != null ) { strTemperature = h ; int i = strTemperature . indexOf ( '.' ) ; i = java.lang.Integer . parseInt ( strTemperature . substring ( 0 , i ) ) ; if ( i > ( maxTemp ) ) maxTemp = ( ( byte ) ( i ) ) ; } } 
private boolean isEvictableHeapPercentage ( final com.hazelcast.map.impl.MapContainer mapContainer ) { final long usedHeapSize = getUsedHeapSize ( mapContainer ) ; if ( usedHeapSize == ( - 1L ) ) { return false ; } final com.hazelcast.config.MaxSizeConfig maxSizeConfig = mapContainer . getMapConfig () . getMaxSizeConfig () ; final float maxSize = com.hazelcast.map.impl.eviction.MaxSizeChecker . getApproximateMaxSize ( maxSizeConfig . getSize () ) ; final long total = getTotalMemory () ; return maxSize < ( ( ( 1.0F * ( com.hazelcast.map.impl.eviction.MaxSizeChecker.ONE_HUNDRED_PERCENT ) ) * usedHeapSize ) / total ) ; } 
@ java.lang.Override public void run () { java.lang.String [] tagArray = new java.lang.String [] { "example_tag" } ; boolean success = com.appoxee.Appoxee . addTagsToDevice ( new java.util.ArrayList < java.lang.String > ( java.util.Arrays . asList ( tagArray ) ) ) ; android.util.Log . d ( gigigo.com.orchextrasdk.MainActivity.TAG , ( "custom field set success: " + success ) ) ; java.util.List < java.lang.String > tags = com.appoxee.Appoxee . getTagList () ; android.util.Log . d ( gigigo.com.orchextrasdk.MainActivity.TAG , ( "tags list: " + tags ) ) ; } 
public int getProgress () { int p = 0 ; java.util.Collection tasks = getTopLevelTasks () ; for ( java.util.Iterator iter = tasks . iterator () ; iter . hasNext () ; ) { net.sf.memoranda.Task e = ( ( net.sf.memoranda.Task ) ( iter . next () ) ) ; p += e . getProgress () ; } int size = tasks . size () ; return size == 0 ? 0 : p / size ; } 
boolean doubleTapAttack ( java.lang.String [] ad ) { Config.runFlaskSuppression = true ; long tapTime = 400 ; if ( ( ( java.lang.System . currentTimeMillis () ) - ( doubleTapTime ) ) < tapTime ) { multiHotkeyFix = true ; if ( soakAttack ( ad ) ) return false ; wdgmsg ( "act" , ( ( java.lang.Object [] ) ( ad ) ) ) ; if ( ( ui.fight ) != null ) { ui.fight . attackCurrent () ; } return true ; } doubleTapTime = java.lang.System . currentTimeMillis () ; return false ; } 
private int [] getDim ( int elements ) { int xDim = ( ( int ) ( java.lang.Math . ceil ( java.lang.Math . sqrt ( elements ) ) ) ) ; int yDim = xDim ; while ( ( xDim * ( yDim - 1 ) ) >= elements ) { yDim -- ; } return new int [] { xDim , yDim } ; } 
@ java.lang.Override public int compareTo ( org.sosy_lab.cpachecker.pcc.strategy.partitioning.BestFirstWeightedBalancedGraphPartitioner.NodePriority compNode ) { if ( compNode == null ) { return - 1 ; } if ( ( this . getPriority () ) != ( compNode . getPriority () ) ) { return ( this . getPriority () ) - ( compNode . getPriority () ) ; } else { int n1 = this . getNode () . getNodeNumber () ; int n2 = compNode . getNode () . getNodeNumber () ; return n2 - n1 ; } } 
public double getDropRate () { double prev = utilSpace . getUtility ( bids . get ( 0 ) ) ; double average = 0 ; for ( int i = 1 ; i < ( bids . size () ) ; i ++ ) { double curr = utilSpace . getUtility ( bids . get ( i ) ) ; average += curr - prev ; prev = curr ; } return average / ( ( bids . size () ) - 1 ) ; } 
private static < T extends java.lang.Comparable < ? super T > > void bestSort ( T [] seq , T [] auxSeq , int lo , int hi ) { final int altSortThreshold = 7 ; int elementsToSort = ( hi - lo ) + 1 ; if ( elementsToSort > altSortThreshold ) edu.mit.ita.util.Arrays . mergeSort ( seq , auxSeq , lo , hi ) ; else edu.mit.ita.util.Arrays . insertionSort ( seq , lo , hi ) ; } 
@ java.lang.Override public boolean isDone ( core.game.Game game ) { boolean ended = super . isFinished ( game ) ; if ( ended ) return true ; if ( ( ( ( itype ) == ( - 1 ) ) && ( ( ( game . getNumSprites ( itype ) ) - ( game . getNumDisabledSprites ( itype ) ) ) <= ( limit ) ) ) && ( canEnd ) ) { countScore ( game ) ; return true ; } return false ; } 
private double calculateSquaredNorm ( final T row ) { double norm = 0.0 ; for ( int i = 1 ; i <= ( m_nFets ) ; i ++ ) { double fet = row . getFeature ( i ) ; norm += fet * fet ; } return norm ; } 
public void causeDamage ( double amount , life.grass.grasscombat.datatype.DamageType type ) { double damage = 0.0 ; if ( type . equals ( DamageType.BASIC_DAMAGE ) ) { damage = life.grass.grasscombat.utils.DamageUtil . getDefencedDamage ( amount , getArmorData ( ArmorDataType.DEFENCE ) , getArmorData ( ArmorDataType.PROTECTION ) ) ; } else if ( type . equals ( DamageType.MAGIC_DAMAGE ) ) { damage = life.grass.grasscombat.utils.DamageUtil . getDefencedDamage ( amount , getArmorData ( ArmorDataType.MAGIC_DEFENCE ) , getArmorData ( ArmorDataType.PROTECTION ) ) ; } else { damage = amount ; } causeRawDamage ( damage ) ; } 
private java.lang.String getExtension ( final java.lang.String filename ) { final int i = filename . lastIndexOf ( '.' ) ; if ( ( i > 0 ) && ( i < ( ( filename . length () ) - 1 ) ) ) { return filename . substring ( ( i + 1 ) ) . toLowerCase () ; } return null ; } 
@ org.junit.Test public void testHasAllItems () { com.laboon.Player testPlayer = new com.laboon.Player ( false , false , false ) ; boolean result = testPlayer . hasAllItems () ; assertFalse ( result ) ; testPlayer . getSugar () ; result = testPlayer . hasAllItems () ; assertFalse ( result ) ; testPlayer . getCream () ; result = testPlayer . hasAllItems () ; assertFalse ( result ) ; testPlayer . getCoffee () ; result = testPlayer . hasAllItems () ; assertTrue ( result ) ; } 
public void add ( int poche , pokemon.modele.Objet obj , int qte ) { if ( inventaire . elementAt ( poche ) . contains ( obj ) ) { int indice = inventaire . elementAt ( poche ) . indiceOf ( obj ) ; inventaire . elementAt ( poche ) . contenu . elementAt ( indice ) . ajoutQte ( qte ) ; } else { inventaire . elementAt ( poche ) . add ( new pokemon.modele.UniteStockage < pokemon.modele.Objet > ( obj , qte ) ) ; } } 
public de.tuhh.diss.plotbot.Plottable select () { int selection = - 1 ; do { selection = menu . select () ; } while ( selection < 0 ) ; while ( Button.ENTER . isDown () ) {} de.tuhh.diss.plotbot.Plottable toDraw = null ; if ( selection == 0 ) { toDraw = new de.tuhh.diss.plotbot.Anchor () ; } if ( selection == 1 ) {} return toDraw ; } 
private int getUnitCount ( SCBot.UnitType type , SCBot.UnitType type2 ) { int count = 0 ; for ( SCBot.Unit u : this . self . getUnits () ) { if ( ( ( u . getType () ) == type ) && ( ( type2 == null ) || ( ( u . getBuildType () ) == type2 ) ) ) { count ++ ; } } return count ; } 
private void generateTraps ( int limit ) { int amountOfButtons = 10 ; int trapNumber = newRandomNumberBetween ( amountOfButtons ) ; java.lang.String logMessage = getResources () . getString ( R.string.log_trap_id ) ; int amountOfTraps = 3 ; for ( int i = 0 ; i < amountOfTraps ; i ++ ) { while ( traps . contains ( trapNumber ) ) { trapNumber = newRandomNumberBetween ( amountOfButtons ) ; } android.util.Log . i ( logMessage , java.lang.Integer . toString ( trapNumber ) ) ; traps . add ( trapNumber ) ; } } 
public boolean addUser ( java.lang.String username , java.lang.String password ) throws java.sql.SQLException { java.sql.Statement stmt = conn . createStatement () ; boolean success = stmt . execute ( ( ( ( ( "insert into TTEDB.Users (UserName, UserPW) values ('" + username ) + "', '" ) + password ) + "')" ) ) ; stmt . close () ; conn . close () ; return success ; } 
public static org.terracotta.passthrough.PassthroughMessage createUnexpectedReleaseMessage ( final java.lang.String entityClassName , final java.lang.String entityName , final long clientInstanceID ) { boolean shouldReplicateToPassives = true ; return new org.terracotta.passthrough.PassthroughMessage ( org.terracotta.passthrough.PassthroughMessage.Type.UNEXPECTED_RELEASE , shouldReplicateToPassives ) { @ java.lang.Override protected void populateStream ( java.io.DataOutputStream output ) throws java.io.IOException { output . writeUTF ( entityClassName ) ; output . writeUTF ( entityName ) ; output . writeLong ( clientInstanceID ) ; } } ; } 
public java.lang.Float get () { if ( ( getIndex ) == ( putIndex ) ) { return null ; } else { getIndex = ( ( getIndex ) + 1 ) % ( capacity ) ; float result = data [ getIndex ] ; return result ; } } 
@ java.lang.Override public void changed ( com.couchbase.lite.LiveQuery.ChangeEvent event ) { if ( ( event . getError () ) != null ) { throw new java.lang.RuntimeException ( event . getError () ) ; } if ( ( event . getRows () . getCount () ) == 2 ) { countDownLatch . countDown () ; } } 
public boolean paste ( com.mauriciotogneri.fileexplorer.models.FileInfo target ) { boolean allPasted = true ; try { for ( com.mauriciotogneri.fileexplorer.models.FileInfo fileInfo : items ) { allPasted &= fileInfo . copy ( target , ( ( mode ) == ( com.mauriciotogneri.fileexplorer.models.Clipboard.Mode.CUT ) ) ) ; } } catch ( java.lang.Exception e ) {} items . clear () ; mode = com.mauriciotogneri.fileexplorer.models.Clipboard.Mode.NONE ; parent = null ; return allPasted ; } 
private void mergeLanguageMap ( java.util.concurrent.ConcurrentHashMap < java.lang.String , java.lang.Integer > tenMinLanguageMap ) { for ( java.lang.String languageName : tenMinLanguageMap . keySet () ) { int languageRepeatedInThisHour = 0 ; int languageRepeatedInTenMins ; if ( languageMap . containsKey ( languageName ) ) { languageRepeatedInThisHour = languageMap . get ( languageName ) ; } languageRepeatedInTenMins = tenMinLanguageMap . get ( languageName ) ; languageMap . put ( languageName , ( languageRepeatedInTenMins + languageRepeatedInThisHour ) ) ; } } 
public boolean editCommand ( java.lang.String modType , java.lang.String newValue , me.krickl.memebotj.User.UserHandler sender ) { if ( ( commandHandler ) == null ) {} boolean success = false ; success = commandHandler . editCommand ( modType , newValue , sender ) ; commandName = commandHandler . getCommandName () ; return success ; } 
@ java.lang.Override public void run () { try { final boolean success = onMessage ( connection . in () , connection . out () ) ; } catch ( java.lang.Exception ex ) { codeu.chat.server.Server.LOG . error ( ex , "Exception while handling connection." ) ; } try { connection . close () ; } catch ( java.lang.Exception ex ) { codeu.chat.server.Server.LOG . error ( ex , "Exception while closing connection." ) ; } } 
@ com.google.common.annotations.VisibleForTesting public long getDfsUsed ( ) throws java.io.IOException { long dfsUsed = 0 ; try ( org.apache.hadoop.util.AutoCloseableLock lock = dataset . acquireDatasetLock ( true ) ) { for ( org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.BlockPoolSlice s : bpSlices . values () ) { dfsUsed += s . getDfsUsed () ; } } return dfsUsed ; } 
private void toggle ( boolean toggle ) { int color ; if ( toggle ) { color = mActiveColor ; } else { color = android.support.v4.content.res.ResourcesCompat . getColor ( getResources () , R.color.defaultNotActiveCircle , null ) ; } mDrawable . setStroke ( ( ( getMeasuredHeight () ) / 30 ) , color ) ; } 
int count ( ) throws java.lang.IllegalAccessException { android.database.Cursor cursor = null ; int count = 0 ; try { cursor = buildCount () ; if ( cursor == null ) { throw new java.lang.IllegalAccessException ( "result has been cosumed, please do a query again." ) ; } if ( cursor . moveToFirst () ) count = cursor . getInt ( 1 ) ; } finally { closeCursor ( cursor ) ; } return count ; } 
public int lngToCol ( double lon ) { if ( ( lon < ( westLng ) ) || ( lon > ( eastLng ) ) ) throw new java.lang.IllegalArgumentException ( "Longitude is out of map range" ) ; int colIndex = ( ( int ) ( ( lon - ( westLng ) ) / ( cellDegree ) ) ) ; if ( colIndex >= ( numberOfCols ) ) throw new java.lang.IndexOutOfBoundsException () ; return colIndex ; } 
@ java.lang.Override public void performancesChanged ( java.lang.String connId , int exchangesCompleted ) { long duration = ( java.lang.System . currentTimeMillis () ) - ( startTime ) ; final org.talend.core.model.process.IConnection conn = traceConnectionsManager . finConnectionByUniqueName ( connId ) ; final org.talend.core.model.runprocess.data.PerformanceData perfData = new org.talend.core.model.runprocess.data.PerformanceData ( ( ( ( ( connId + "|" ) + exchangesCompleted ) + "|" ) + duration ) ) ; processPerformances ( ( ( ( ( connId + "|" ) + exchangesCompleted ) + "|" ) + duration ) , perfData , conn ) ; startTime = java.lang.System . currentTimeMillis () ; } 
public void start ( int port ) { this . port = port ; if ( ! ( on ) ) { try { serverSocket = new java.net.DatagramSocket ( port ) ; byte [] receiveData = new byte [ 1024 ] ; java.lang.System.out . println ( ( "Starting on port " + port ) ) ; on = true ; run ( receiveData ) ; } catch ( java.net.SocketException e ) { e . printStackTrace () ; } } } 
public java.lang.String doshowValidateDetails () { initServletContextObject () ; int oneactId = java.lang.Integer . parseInt ( request . getParameter ( "actId" ) ) ; com.tu.accountingview.model.GroupActVO groupactVO = accountingviewBean . doGetAllValidateDetails ( oneactId ) ; request . setAttribute ( "act" , groupactVO ) ; request . setAttribute ( "actId" , oneactId ) ; return "ShowValidateDetails" ; } 
public int getLastPosition () { if ( ( ( mGridView ) == null ) || ( ( postsIds ) == null ) ) { return 0 ; } int firstPos = mGridView . getFirstVisiblePosition () ; if ( ( firstPos >= 0 ) && ( firstPos < ( postsIds . size () ) ) ) { return postsIds . get ( firstPos ) ; } else { return 0 ; } } 
private boolean isRowEmpty ( int startingPosition ) { int i = startingPosition ; while ( i >= 0 ) { if ( ( i % ( com.kiddos.nuktimetable.MainFragment.ScheduleAdapter.NUM_COL ) ) == 0 ) break; i -- ; } int start = i ; for ( ; i < ( start + ( com.kiddos.nuktimetable.MainFragment.ScheduleAdapter.NUM_COL ) ) ; i ++ ) { if ( ( courses [ i ] ) != null ) { return false ; } } return true ; } 
private static void createSeries ( org.jfree.data.xy.XYSeriesCollection seriesCollection , org.nd4j.linalg.api.ndarray.INDArray data , int offset , java.lang.String name ) { int nRows = data . shape () [ 2 ] ; org.jfree.data.xy.XYSeries series = new org.jfree.data.xy.XYSeries ( name ) ; for ( int i = 0 ; i < nRows ; i ++ ) { series . add ( ( i + offset ) , data . getDouble ( i ) ) ; } seriesCollection . addSeries ( series ) ; } 
private void addPlayer ( int id , int x , int y ) { boolean flag = true ; for ( player.Player foo : players ) { if ( ( foo . getID () ) == id ) { flag = false ; foo . set ( x , y ) ; break; } } if ( flag ) { players . add ( new player.Player ( id ) ) ; } } 
private void handleHit ( java.lang.Package p ) { int damage = ( ( java.lang.Integer ) ( p . getPayload () ) ) ; int id = java.lang.Integer . parseInt ( p . getExtra () ) ; java.lang.System.out . println ( ( ( id + "hit " ) + ( java.lang.Math . random () ) ) ) ; for ( Actors.Actor a : actorQueue ) { if ( ( a . getID () ) == id ) { a . hit ( damage ) ; } } } 
public long getRowCount ( org.apache.hadoop.mapreduce.JobContext job ) throws java.io.IOException , org.carbondata.core.carbon.datastore.exception.IndexBuilderException { long rowCount = 0 ; org.carbondata.core.carbon.AbsoluteTableIdentifier absoluteTableIdentifier = new org.carbondata.core.carbon.AbsoluteTableIdentifier ( getStorePathString ( job ) , org.carbondata.hadoop.CarbonInputFormat . getTableToAccess ( job ) ) ; for ( java.lang.String segmentNo : getValidSegments ( job ) ) { java.util.Map < java.lang.String , org.carbondata.core.carbon.datastore.block.AbstractIndex > segmentIndexMap = getSegmentAbstractIndexs ( job , absoluteTableIdentifier , segmentNo ) ; for ( org.carbondata.core.carbon.datastore.block.AbstractIndex abstractIndex : segmentIndexMap . values () ) { rowCount += abstractIndex . getTotalNumberOfRows () ; } } return rowCount ; } 
public double getTravelTimeAfter ( final double time ) { final int bs = departures . binarySearch ( time ) ; final int index = ( bs < 0 ) ? ( - bs ) - 1 : bs ; final double tt = ( arrivals . get ( index ) ) - ( departures . get ( index ) ) ; assert tt >= 0 ; return tt ; } 
private void pushPipelineToSnapshot () { int iterationsCnt = 0 ; boolean done = false ; while ( ! done ) { iterationsCnt ++ ; org.apache.hadoop.hbase.regionserver.VersionedSegmentsList segments = pipeline . getVersionedList () ; pushToSnapshot ( segments . getStoreSegments () ) ; done = pipeline . swap ( segments , null , false ) ; if ( iterationsCnt > 2 ) { org.apache.hadoop.hbase.regionserver.CompactingMemStore.LOG . warn ( ( "Multiple unsuccessful attempts to push the compaction pipeline to snapshot," + " while flushing to disk." ) ) ; this . snapshot = org.apache.hadoop.hbase.regionserver.SegmentFactory . instance () . createImmutableSegment ( getComparator () ) ; break; } } } 
public static void updateQueue () { while ( ( theweekend.cosmetics.ipod.Radio.queuedSongs . size () ) < 5 ) { int size = Noteblock.iPodSongs . size () ; if ( size > 0 ) { resources.noteblock.Song generate = Noteblock.iPodSongs . get ( resources.NumberUtils . randomNumber ( size ) ) ; if ( ! ( theweekend.cosmetics.ipod.Radio.queuedSongs . contains ( generate ) ) ) { theweekend.cosmetics.ipod.Radio.queuedSongs . add ( generate ) ; } } } theweekend.cosmetics.ipod.Radio.songPosition = 0 ; theweekend.cosmetics.ipod.Radio . playRadioSong () ; } 
public void checkNeededInColumn () { int n ; for ( int j = 0 ; j < 9 ; j ++ ) { for ( int i = 1 ; i < 10 ; i ++ ) { if ( de.halemba.helpers.SolveHelper . checkMissingInColumn ( i , j , grid ) ) { n = de.halemba.helpers.SolveHelper . checkSinglePossiblityColumn ( i , j , grid ) ; if ( n >= 0 ) { grid [ n ] [ j ] . setNumber ( i ) ; break; } } } } } 
public void letAImove () { int pushMousePointingColumn = mousePointingcolumn ; boolean preEndGame = gameController . isFinish () ; if ( ( mousePointingcolumn = gameController . getAITurn () ) < 0 ) { mousePointingcolumn = pushMousePointingColumn ; return; } if ( ( ! preEndGame ) && ( ! ( fallingAnimationMutex ) ) ) { FallingAnimation () ; mousePointingcolumn = pushMousePointingColumn ; } else { return; } } 
public int getInt ( int min , int max ) { java.lang.System.out . println ( "Enter a number: " ) ; int userInput = scanner . nextInt () ; scanner . nextLine () ; if ( ( userInput < min ) || ( userInput > max ) ) { java.lang.System.out . println ( "Invalid input" ) ; userInput = getInt ( min , max ) ; } return userInput ; } 
public static void main ( java.lang.String [] args ) { java.util.Scanner sc = new java.util.Scanner ( java.lang.System.in ) ; float sum = 0.0F ; for ( int i = 0 ; i < ( q1004.Main.INPUT_COUNT ) ; i ++ ) { float f = sc . nextFloat () ; if ( f <= 0 ) { continue; } sum += f ; } sum /= q1004.Main.INPUT_COUNT ; java.lang.System.out . println ( ( "$" + ( q1004.Main . shortenNumber ( sum ) ) ) ) ; } 
private static void deleteEstate () { int id = de.dis2011.FormUtil . readInt ( "ID der Immobilie" ) ; de.dis2011.data.Estate estate = de.dis2011.data.Estate . load ( id ) ; if ( estate == null ) { java.lang.System.out . println ( ( ( "Immobilie mit ID " + id ) + " existiert nicht." ) ) ; return; } estate . delete ( estate . getType () ) ; java.lang.System.out . println ( ( ( "Immobilie mit ID " + id ) + " wurde gelöscht." ) ) ; } 
private void setStatusBarColor ( android.support.v7.graphics.Palette palette ) { int defaultDarkColor = android.support.v4.content.ContextCompat . getColor ( getApplicationContext () , R.color.colorPrimaryDark ) ; if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { android.view.Window window = getWindow () ; window . addFlags ( WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS ) ; window . setStatusBarColor ( palette . getDarkVibrantColor ( defaultDarkColor ) ) ; } } 
public int roll () { if ( ( rollsSinceLastReseed ) >= 100000 ) { com.valkryst.VDice.DiceRoller.random . setSeed ( java.lang.System . currentTimeMillis () ) ; rollsSinceLastReseed = 0 ; } int total = 0 ; for ( final com.valkryst.VDice.Die die : dice ) { total += die . roll ( com.valkryst.VDice.DiceRoller.random ) ; ( rollsSinceLastReseed ) ++ ; } return total ; } 
public void addCell ( org.apache.cassandra.config.ColumnDefinition column , java.nio.ByteBuffer value , org.apache.cassandra.db.rows.LivenessInfo info ) { int idx = columns . simpleIdx ( column ) ; if ( idx < 0 ) throw new java.lang.RuntimeException ( ( ( ( "Cannot find column " + ( column.name ) ) + " in " ) + ( columns ) ) ) ; idx += base ; data . setCell ( idx , value , info ) ; } 
protected int skipWSC ( ) throws java.io.IOException , org.openrdf.rio.RDFHandlerException { int c = readCodePoint () ; while ( ( org.openrdf.rio.turtle.TurtleUtil . isWhitespace ( c ) ) || ( c == '#' ) ) { if ( c == '#' ) { processComment () ; } else if ( c == '\n' ) { ( lineNumber ) ++ ; } c = readCodePoint () ; } unread ( c ) ; return c ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/impcImages/laczimages/{acc}/{topLevelMa}" ) public java.lang.String laczImages ( @ org.springframework.web.bind.annotation.PathVariable java.lang.String acc , @ org.springframework.web.bind.annotation.PathVariable java.lang.String topLevelMa , org.springframework.ui.Model model ) throws java.io.IOException , java.net.URISyntaxException , org.apache.solr.client.solrj.SolrServerException { java.lang.System.out . println ( "calling laczImages web page" ) ; addGeneSymbolToPage ( acc , model ) ; boolean overview = false ; imageService . getLacDataForGene ( acc , topLevelMa , overview , false , model ) ; return "laczImages" ; } 
public void run () { int [] selectedRows = tablePositions . getSelectedRows () ; if ( ( selectedRows.length ) > 0 ) { getPositionsModel () . up ( selectedRows , 1 ) ; selectPositions ( increment ( selectedRows , ( - 1 ) ) ) ; } } 
public java.net.URLClassLoader createClassLoader () { boolean useBoot14Layout = false ; for ( org.springframework.boot.loader.archive.Archive.Entry entry : archive ) { if ( entry . getName () . startsWith ( org.springframework.cloud.dataflow.configuration.metadata.BootClassLoaderFactory.BOOT_14_LIBS_LOCATION ) ) { useBoot14Layout = true ; break; } } org.springframework.cloud.dataflow.configuration.metadata.BootClassLoaderFactory.ClassLoaderExposingLauncher launcher = ( useBoot14Layout ) ? new org.springframework.cloud.dataflow.configuration.metadata.BootClassLoaderFactory.Boot14ClassLoaderExposingLauncher () : new org.springframework.cloud.dataflow.configuration.metadata.BootClassLoaderFactory.Boot13ClassLoaderExposingLauncher () ; return launcher . createClassLoader () ; } 
public void setFrequencyDays ( java.lang.String daysBitString ) { frequencyDays = daysBitString ; java.util.Calendar calendar = java.util.Calendar . getInstance () ; int today = ( calendar . get ( java.util.Calendar.DAY_OF_WEEK ) ) - 1 ; if ( frequencyDays . substring ( today , ( today + 1 ) ) . equals ( "1" ) ) { isToday = true ; } else { isToday = false ; } } 
public static void init ( javax.servlet.ServletContext servletContext ) { java.io.File repository = ( ( java.io.File ) ( servletContext . getAttribute ( "javax.servlet.context.tempdir" ) ) ) ; org.edagarli.framework.helper.UploadHelper.servletFileUpload = new org.apache.commons.fileupload.servlet.ServletFileUpload ( new org.apache.commons.fileupload.disk.DiskFileItemFactory ( org.apache.commons.fileupload.disk.DiskFileItemFactory.DEFAULT_SIZE_THRESHOLD , repository ) ) ; int uploadLimit = org.edagarli.framework.helper.ConfigHelper . getAppUploadLimit () ; if ( uploadLimit != 0 ) { org.edagarli.framework.helper.UploadHelper.servletFileUpload . setFileSizeMax ( ( ( uploadLimit * 1024 ) * 1024 ) ) ; } } 
public int logoutUser ( java.lang.String username ) { int state ; boolean userExist ; boolean active ; userExist = database . usernameExist ( username ) ; active = database . getActive ( username ) ; if ( userExist && active ) { database . userActive ( username , false ) ; state = 1 ; } else { state = 0 ; } return state ; } 
public static void main ( java.lang.String [] args ) { SimpleDotCom hans = new SimpleDotCom () ; ReadyBakeInput inny = new ReadyBakeInput () ; boolean isAlive = true ; java.lang.System.out . println ( "Hans the dotcom yet lives. Make him run! Enter numbers 0-6 to hit him. 3 consecutive hits will kill him. " ) ; while ( isAlive == true ) { java.lang.String playerGuess = inny . getUserInput ( "Enter a number 0-6: " ) ; java.lang.String result = hans . checkYourself ( playerGuess ) ; java.lang.System.out . println ( result ) ; if ( result == "kill" ) { isAlive = false ; java.lang.System.out . println ( "Now, hans must run!" ) ; } } } 
public int solution ( int [] A ) { long expectedSum = ( ( ( A.length ) + 1 ) * ( ( A.length ) + 2 ) ) / 2 ; long realSum = 0 ; for ( int i : A ) { realSum = realSum + ( new java.lang.Long ( i ) ) ; } return new java.lang.Long ( ( expectedSum - realSum ) ) . intValue () ; } 
public boolean isLookaheadIgnoreWhitespace ( char expectedChar ) { int tempPos = ( pos ) + 1 ; if ( tempPos >= ( input . length () ) ) return false ; char c = input . charAt ( tempPos ) ; while ( isWhitespace ( c ) ) { ++ tempPos ; if ( tempPos >= ( input . length () ) ) return false ; c = input . charAt ( tempPos ) ; } return c == expectedChar ; } 
private void mathButton_ActionPerformed ( java.awt.event.ActionEvent evt ) { int [] rows = new int [ mainTable_ . getRowCount () ] ; for ( int i = 0 ; i < ( rows.length ) ; i ++ ) { java.lang.Integer j = ( ( java.lang.Integer ) ( mainTable_ . getValueAt ( mainTable_ . convertRowIndexToModel ( i ) , 0 ) ) ) ; rows [ i ] = j ; } edu.valelab.gaussianfit.MathForm mf = new edu.valelab.gaussianfit.MathForm ( edu.valelab.gaussianfit.DataCollectionForm.studio_ . getUserProfile () , rows , rows ) ; mf . setVisible ( true ) ; } 
public void insertOrder ( Simulator.Order order ) { long price = order . getPrice () ; java.util.TreeMap < java.lang.Long , java.util.LinkedList < Simulator.Order > > sideBook = getSideBook ( order . getSide () ) ; if ( sideBook . containsKey ( price ) ) { java.util.LinkedList < Simulator.Order > entries = sideBook . get ( price ) ; entries . add ( order ) ; } else { java.util.LinkedList < Simulator.Order > entries = new java.util.LinkedList () ; entries . add ( order ) ; sideBook . put ( price , entries ) ; } } 
@ java.lang.Override public void stopVideoTimeCountingThread ( java.lang.String roomId ) { java.util.Iterator < com.benlinus92.synchronize.model.FutureHolder > it = countThreadFutureList . iterator () ; int index = 0 ; while ( it . hasNext () ) { if ( it . next () . getRoomId () . equals ( roomId ) ) { cancelThreadTaskByFuture ( countThreadFutureList . get ( index ) . getFuture () ) ; countThreadFutureList . remove ( index ) ; } else index ++ ; } } 
void init ( org.json.JSONArray data , org.apache.cordova.CallbackContext callback ) throws org.json.JSONException { org.json.JSONObject params = data . getJSONObject ( 0 ) ; boolean isOpenMessageRoaming = params . getBoolean ( "isOpenMessageRoaming" ) ; cn.jpush.im.android.api.JMessageClient . init ( mCordovaActivity . getApplicationContext () , isOpenMessageRoaming ) ; cn.jpush.im.android.api.JMessageClient . registerEventReceiver ( this ) ; cn.jiguang.cordova.im.JMessagePlugin.mCallback = callback ; } 
public static void exportResource ( java.lang.String resourceName , java.nio.file.Path destination ) throws java.io.IOException { try ( java.io.InputStream in = com.github.checkstyle.FilesystemUtils . class . getResourceAsStream ( resourceName ) ; java.io.OutputStream out = java.nio.file.Files . newOutputStream ( destination ) ) { int readBytes ; final byte [] buffer = new byte [ com.github.checkstyle.FilesystemUtils.BUFFER_SIZE ] ; while ( ( readBytes = in . read ( buffer ) ) > 0 ) { out . write ( buffer , 0 , readBytes ) ; } } } 
public void centerModel ( org.gearvrf.GVRSceneObject model ) { org.gearvrf.GVRSceneObject.BoundingVolume bv = model . getBoundingVolume () ; float sf = 1 ; model . getTransform () . setScale ( sf , sf , sf ) ; bv = model . getBoundingVolume () ; model . getTransform () . setPosition ( ( - ( bv.center.x ) ) , ( - ( bv.center.y ) ) , ( ( - ( bv.center.z ) ) - ( 1.5F * ( bv.radius ) ) ) ) ; } 
private void pushUp ( int i ) { while ( ( i > 1 ) && ( ( compare2 ( heap . get ( i ) , heap . get ( ( i / 2 ) ) ) ) > 0 ) ) { swap ( i , ( i / 2 ) ) ; i /= 2 ; } } 
@ java.lang.Override public void onClick ( android.view.View arg0 ) { int hour = timeSetter . getCurrentHour () ; int minute = timeSetter . getCurrentMinute () ; java.util.Calendar cal = java.util.Calendar . getInstance () ; cal . set ( java.util.Calendar.HOUR , hour ) ; cal . set ( java.util.Calendar.MINUTE , minute ) ; cal . set ( java.util.Calendar.SECOND , 0 ) ; timeToggle . setChecked ( true ) ; timerWindow . dismiss () ; alarm . setExact ( AlarmManager.RTC_WAKEUP , cal . getTimeInMillis () , pendingPandoraIntent ) ; } 
public final byte [] memOrLoad () { byte [] mem = _mem ; if ( mem != null ) return mem ; water.Freezable pojo = _pojo ; if ( pojo != null ) return _mem = pojo . asBytes () ; if ( ( _max ) == 0 ) return _mem = new byte [ 0 ] ; return _mem = loadPersist () ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { v . setOnClickListener ( null ) ; java.lang.String num = ev . getText () . toString () . trim () ; if ( ( num == null ) || ( "" . equals ( num ) ) ) return; double n = parseDouble ( num ) ; if ( n == 0 ) setText ( "Error: Divide by zero." ) ; else setText ( inIntTermsOfAny ( ( n / ( currentValue ) ) ) , ev ) ; v . setVisibility ( View.GONE ) ; } 
@ java.lang.Override protected void onPreExecute () { android.net.ConnectivityManager cm = ( ( android.net.ConnectivityManager ) ( mContext . getSystemService ( Context.CONNECTIVITY_SERVICE ) ) ) ; android.net.NetworkInfo activeNetwork = cm . getActiveNetworkInfo () ; boolean isConnected = ( activeNetwork != null ) && ( activeNetwork . isConnectedOrConnecting () ) ; if ( isConnected ) { showProgressDialogue () ; } else { android.widget.Toast . makeText ( mContext , mContext . getString ( R.string.toast_no_internet_connection ) , Toast.LENGTH_SHORT ) . show () ; } } 
private int simpleComputeNextLineIndentLevel ( int indentLevel , java.util.List < groovyjarjarantlr.Token > tokens ) { int adjust = getOpenVersusCloseBalance ( tokens ) ; if ( adjust > 0 ) { indentLevel += getPrefs () . getIndentationSize () ; } else if ( adjust < 0 ) { indentLevel -= getPrefs () . getIndentationSize () ; } return indentLevel ; } 
@ org.junit.Test ( timeout = 1000 ) public void randomMovement () { java.lang.String rID = "1" ; java.lang.String bID = "0" ; edu.vt.ece5574.agents.User oUsr = new edu.vt.ece5574.agents.User ( sim , rID , bID , true , 1 , 1 ) ; sim . addAgent ( oUsr ) ; double initial_x = oUsr . getX () ; double initial_y = oUsr . getY () ; oUsr . createRandomMovement ( sim ) ; assertFalse ( ( ( ( oUsr . getX () ) == initial_x ) && ( ( oUsr . getY () ) == initial_y ) ) ) ; } 
private void ToggleCircleColor ( com.google.android.gms.maps.model.Circle circle ) { int strokeColor = ( circle . getStrokeColor () ) ^ 52224 ; circle . setStrokeColor ( strokeColor ) ; circle . setStrokeWidth ( ( ( circle . getStrokeWidth () ) == 3 ? 6 : 3 ) ) ; } 
public double getCoefficientOfVariation () { int count = this . getCount () ; if ( count == 0 ) { throw new cfvbaibai.cardfantasy.CardFantasyRuntimeException ( "Cannot get square deviation on empty data set." ) ; } double s = 0.0 ; double avg = this . getAverage () ; if ( avg == 0.0 ) { return 0.0 ; } for ( double data : this . dataList ) { s += ( data - avg ) * ( data - avg ) ; } return ( java.lang.Math . sqrt ( ( s / count ) ) ) / avg ; } 
@ java.lang.Override public int hashCode () { int hcode = java.util.Objects . hash ( getDisplayName () , getSummandExpression () ) ; java.util.Iterator < ? > vmIter = this . getMatchers () . iterator () ; while ( vmIter . hasNext () ) { hcode += vmIter . next () . hashCode () ; } return hcode ; } 
public void fakeBtnFb () { playSound ( R.raw.touch_sound ) ; if ( ( com.oic.game.ailatrieuphu.util.NetworkUtils . checkInternetConnection ( this ) ) && ( mSocketAltp . isConnected () ) ) { int permissionCheck = android.support.v4.content.ContextCompat . checkSelfPermission ( this , Manifest.permission.READ_PHONE_STATE ) ; if ( permissionCheck != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { android.support.v4.app.ActivityCompat . requestPermissions ( this , new java.lang.String [] { Manifest.permission.READ_PHONE_STATE } , com.oic.game.ailatrieuphu.ui.activity.LoginScreen.REQUEST_READ_PHONE_STATE ) ; } else { mLoginButtonFb . performClick () ; } } else { connectionDialog . show () ; } } 
@ java.lang.Override public cn.edu.nju.software.entity.User addOrUpdateUser ( cn.edu.nju.software.entity.User user ) { if ( ( ( user . getId () ) != null ) && ( ( user . getId () ) != 0 ) ) { boolean up = userDao . updateUser ( user ) ; return up ? user : null ; } boolean res = userDao . saveUser ( user ) ; if ( res ) { user . setId ( userDao . getNewestId () ) ; return user ; } return null ; } 
public int getScaleQual () { int qual = dlConfig . getAsInt ( "default-quality" ) ; if ( hasOption ( "q0" ) ) qual = 0 ; else if ( hasOption ( "q1" ) ) qual = 1 ; else if ( hasOption ( "q2" ) ) qual = 2 ; return qual ; } 
@ java.lang.Override protected void onResume () { super . onResume () ; int orderId = getIntent () . getIntExtra ( OrderStatusNotification.ORDER_ID , ( - 1 ) ) ; if ( orderId != ( - 1 ) ) navTo ( new activity.OrderDetailFragment () . setOrder ( new model.Order ( orderId ) ) ) ; } 
private void ensureConnection ( ) throws java.sql.SQLException { boolean bclosed ; try { bclosed = ( ( m_c ) == null ) || ( m_c . isClosed () ) ; } catch ( java.sql.SQLException e ) { bclosed = true ; } if ( bclosed ) { connect () ; } } 
protected void fillValues ( java.util.List < java.lang.Object > valueList , java.lang.String sql , java.sql.PreparedStatement stmt ) { int index = 0 ; for ( java.lang.Object o : valueList ) { try { stmt . setObject ( ( ++ index ) , o ) ; } catch ( java.lang.Exception e ) { throw new java.lang.IllegalArgumentException ( ( ( ( ( ( ( ( e . getMessage () ) + " - Index: " ) + index ) + ", Value: " ) + o ) + ", Query: " ) + sql ) , e ) ; } } } 
private void showMoreBooks ( int itemsPerPage ) { int start = lessBooks . size () ; int end = start + itemsPerPage ; for ( int i = start ; i < end ; i ++ ) { lessBooks . add ( books . get ( i ) ) ; } } 
@ java.lang.Override public void onRestoreInstanceState ( android.os.Bundle savedInstanceState ) { super . onRestoreInstanceState ( savedInstanceState ) ; long progressTime = savedInstanceState . getLong ( app.park.com.vr.VrVideoActivity.STATE_PROGRESS_TIME ) ; mVrVideoView . seekTo ( progressTime ) ; isPaused = savedInstanceState . getBoolean ( app.park.com.vr.VrVideoActivity.STATE_IS_PAUSED ) ; if ( isPaused ) { pauseVideo () ; } } 
@ java.lang.Override public char [] getPassword ( ) throws java.io.IOException { char [] password = new char [ 0 ] ; java.lang.System.out . print ( "Password: " ) ; final jline.console.ConsoleReader reader = new jline.console.ConsoleReader () ; java.lang.String passwordStr = reader . readLine ( '*' ) ; password = passwordStr . toCharArray () ; passwordStr = null ; java.lang.System . gc () ; return password ; } 
@ org.junit.Test public void canReturnCorrectScoreIfGameEndsInATie ( ) throws java.lang.Exception { com.tictactoe.Board board = new com.tictactoe.Board () ; populateBoard_GameEndsInATie ( board ) ; com.tictactoe.Rules rules = new com.tictactoe.RulesFor3x3 () ; com.tictactoe.Minimax minimax = new com.tictactoe.Minimax ( rules , board , "X" , "O" ) ; int score = minimax . minimax ( board , true , 0 ) ; org.junit.Assert . assertEquals ( 0 , score ) ; } 
private boolean hasHeader ( int position ) { if ( ( position == 0 ) && ( ( mAdapter . getHeaderId ( position ) ) != ( android.support.v7.widget.RecyclerView.NO_ID ) ) ) { return true ; } int previous = position - 1 ; return ( ( mAdapter . getHeaderId ( position ) ) != ( android.support.v7.widget.RecyclerView.NO_ID ) ) && ( ( mAdapter . getHeaderId ( position ) ) != ( mAdapter . getHeaderId ( previous ) ) ) ; } 
public void updateAirCondition () { java.util.List < java.lang.String > devices = deviceStatusDao . selectAllActiveDevices () ; java.util.List < model.CleanerStatus > cleanerStatusList = new java.util.ArrayList < model.CleanerStatus > () ; for ( java.lang.String deviceID : devices ) { model.CleanerStatus cleanerStatus = getCleanerStatus ( deviceID ) ; if ( ( cleanerStatus != null ) && ( ( cleanerStatus . getDeviceID () ) != null ) ) { cleanerStatusList . add ( cleanerStatus ) ; } } boolean update = deviceStatusDao . insertDeviceStatus ( cleanerStatusList ) ; } 
private boolean isOwnProfile ( javax.faces.context.FacesContext fctx ) { if ( fctx . getViewRoot () . getViewId () . endsWith ( "profile.xhtml" ) ) { int userID = java.lang.Integer . parseInt ( javax.faces.context.FacesContext . getCurrentInstance () . getExternalContext () . getRequestParameterMap () . get ( "userID" ) ) ; if ( ( sessionUser . getUserID () ) == userID ) { return true ; } } return false ; } 
private void changeValue ( boolean add ) { oldValue = value ; if ( add ) { value = java.lang.Math . min ( maxValue , ( ( value ) + ( step ) ) ) ; } else { value = java.lang.Math . max ( minValue , ( ( value ) - ( step ) ) ) ; } if ( ( onValueChangedListener ) != null ) { onValueChangedListener . onValueChanged ( this , value , oldValue , minValue , maxValue , false ) ; } } 
@ java.lang.Override public boolean onPreferenceChange ( android.preference.Preference preference , java.lang.Object data ) { final int pinStringLength = data . toString () . length () ; if ( pinStringLength != ( info.dvkr.screenstream.SettingsActivity.PIN_DIGITS_COUNT ) ) { android.widget.Toast . makeText ( getActivity () . getApplicationContext () , getResources () . getString ( R.string.pin_digits_count ) , Toast.LENGTH_LONG ) . show () ; return false ; } return true ; } 
public static void comChoiceS () { java.util.Random rand = new java.util.Random () ; int comPick = ( rand . nextInt ( 3 ) ) + 1 ; if ( comPick == 1 ) { java.lang.System.out . println ( "I chose rock and you chose scissors...I win :p" ) ; com.bleh.Main . resultsL () ; } else if ( comPick == 2 ) { java.lang.System.out . println ( "I chose paper and you chose scissors...I guess you win :(" ) ; com.bleh.Main . resultsW () ; } else if ( comPick == 3 ) { java.lang.System.out . println ( "I chose scissors and you chose scissors...We tied :/" ) ; com.bleh.Main . resultsT () ; } } 
private static void calculateDiscount () { java.util.Collections . sort ( Constants.quotes ) ; double higherValue = Constants.quotes . get ( 0 ) . getThreeYearTotal () ; if ( higherValue > 0 ) { for ( com.amazon.proposalcalculator.bean.Quote q : com.amazon.proposalcalculator.utils.Constants.quotes ) { q . setDiscount ( ( 1 - ( ( q . getThreeYearTotal () ) / higherValue ) ) ) ; } } } 
public java.lang.Object pop () { final int n = stack . size () ; if ( n == 0 ) { return 0L ; } for ( int i = ( marks . size () ) - 1 ; i >= 0 ; -- i ) { if ( ( marks . get ( i ) ) == n ) { marks . set ( i , ( n - 1 ) ) ; } } return stack . remove ( ( n - 1 ) ) ; } 
private static java.lang.String getVocab () { java.lang.String [] dictionary = GuiMain.index . getDictionary () ; int count = GuiMain.index . getTermCount () ; java.lang.StringBuffer vocab = new java.lang.StringBuffer ( "Index Dictionary: \n" ) ; for ( java.lang.String s : dictionary ) { vocab . append ( ( s + "\n" ) ) ; } vocab . append ( ( "Index Term Count: " + count ) ) ; return vocab . toString () ; } 
public void vote ( ) throws java.lang.ClassNotFoundException , java.sql.SQLException { java.lang.System.out . print ( "\nPlease select the note you want to vote for (0-7):" ) ; int vote = scan . nextInt () ; if ( ( vote <= 7 ) && ( vote > 0 ) ) { java.lang.System.out . println ( "Attempting vote registration." ) ; registerVote ( vote ) ; } else { java.lang.System.out . println ( "Select a note between 0 and 7." ) ; vote () ; } } 
private void updateResults () { int lastIndex ; if ( isLoading ) { lastIndex = results . size () ; } else { lastIndex = ( results . size () ) - 1 ; } fireContentsChanged ( this , oldLength , oldLength ) ; fireIntervalAdded ( this , oldLength , lastIndex ) ; oldLength = results . size () ; } 
@ org.junit.Test public void numDoors () { int door = 0 ; for ( clueGame.BoardCell [] i : tests.clueBoardTests.board . getBoard () ) { for ( clueGame.BoardCell j : i ) { if ( ( j != null ) && ( j . isDoorway () ) ) { ++ door ; } } } assertEquals ( tests.clueBoardTests.NUM_DOORS , door ) ; } 
private metaopt.Operation chooseOpToSchedule ( java.util.ArrayList < metaopt.Operation > conflicts ) { int index = java.lang.Math . abs ( ( ( randomNumber ) % ( conflicts . size () ) ) ) ; for ( metaopt.Operation op : schedulable ) { if ( conflicts . get ( index ) . equals ( op ) ) { schedulable . remove ( op ) ; return op ; } } return null ; } 
@ java.lang.Override public void setProperty ( java.lang.String s , java.lang.Object o ) { try { java.lang.String attr = replaceAspectAttrSep ( s ) ; int attrDataType = sysObject . getAttrDataType ( attr ) ; sysObject . setValue ( attr , toDfValue ( o , attrDataType ) ) ; } catch ( mc.dctm.el.identifier.context.DfException e ) { throw new java.lang.RuntimeException ( e ) ; } } 
public int adjustComputerBuilders ( int amount ) { int difference = amount ; if ( ( ( computerBuilders ) < ( java.lang.Math . abs ( difference ) ) ) && ( amount < 0 ) ) { difference = ( - ( computerBuilders ) ) + 1 ; computerBuilders = 1 ; } else { computerBuilders += amount ; } if ( difference != 0 ) gi . setComputerBuildersLabelChangeText ( difference ) ; return difference ; } 
public void manualCtl () { double y = m_liftStick . getY ( GenericHID.Hand.kLeft ) ; m_robot.logger . debug ( ( "manualCtl:" + y ) ) ; if ( ( isAnyLimitSwitchClosed () ) || ( ( java.lang.Math . abs ( y ) ) < ( k_minJoystickValue ) ) ) { stopMotor () ; } else { startMotor () ; m_mainMotor . set ( y ) ; } } 
public static void logShortError ( java.lang.Exception e , int lines ) { java.lang.String s = e . toString () ; int i = 0 ; for ( java.lang.StackTraceElement er : e . getStackTrace () ) { if ( i == lines ) { break; } s += "\n\tat " + ( er . toString () ) ; i ++ ; } e . printStackTrace () ; global.record.Log . log ( "ERROR" , s ) ; } 
public final void moveItem ( T item , int toPosition ) { int fromPosition = mItems . indexOf ( item ) ; mItems . remove ( fromPosition ) ; mItems . add ( toPosition , item ) ; com.github.gfranks.dynamiccard.adapter.DynamicCardAdapter . notifyItemMoved ( fromPosition , toPosition ) ; if ( ( mCallback ) != null ) { mCallback . onDynamicCardPositionChanged ( this , fromPosition , toPosition ) ; } } 
public void send ( java.io.DataOutputStream os ) { byte [] stringBytes = playerid . getBytes () ; try { os . writeLong ( timestamp ) ; os . write ( stringBytes.length ) ; os . write ( stringBytes , 0 , stringBytes.length ) ; os . writeInt ( command ) ; os . writeInt ( xcord ) ; os . write ( ycord ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
void mergeSort ( int [] a , int [] p , int [] c , int l , int r ) { if ( l >= r ) { return; } int m = ( l + r ) / 2 ; mergeSort ( a , p , c , l , m ) ; mergeSort ( a , p , c , ( m + 1 ) , r ) ; merge ( a , p , c , l , m , r ) ; } 
@ java.lang.Override protected void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { super . onActivityResult ( requestCode , resultCode , data ) ; if ( requestCode == ( felixwiemuth.lincal.ui.AddCalendarActivity.RESULT_CODE_SELECT_FILE ) ) { if ( data != null ) { int takeFlags = data . getFlags () ; takeFlags &= ( android.content.Intent.FLAG_GRANT_READ_URI_PERMISSION ) | ( android.content.Intent.FLAG_GRANT_WRITE_URI_PERMISSION ) ; getContentResolver () . takePersistableUriPermission ( data . getData () , takeFlags ) ; fileEditText . setText ( data . getDataString () ) ; } } } 
@ java.lang.Override public java.lang.String getValue () { java.util.List < org.roda.core.data.v2.TransferredResource > items = display . getVisibleItems () ; if ( ( items . size () ) == 0 ) { return "" ; } else { long totalSize = 0 ; for ( org.roda.core.data.v2.TransferredResource item : items ) { totalSize += item . getSize () ; } return totalSize > 0 ? org.roda.wui.common.client.tools.Humanize . readableFileSize ( totalSize ) : "" ; } } 
@ java.lang.Override public boolean contains ( java.lang.Object o ) { if ( o instanceof java.lang.Number ) { java.lang.Number n = ( ( java.lang.Number ) ( o ) ) ; int index = n . intValue () ; return ( ( index > 0 ) && ( index < ( selectedIndices . length () ) ) ) && ( selectedIndices . get ( index ) ) ; } return false ; } 
public void renderTime ( final long milliseconds ) { final long seconds = ( milliseconds / 1000 ) % 60 ; final long minute = ( milliseconds / 60000 ) % 60 ; final long hour = ( milliseconds / 3600000 ) % 24 ; final long day = milliseconds / 86400000 ; final java.lang.String text = java.lang.String . format ( mTimeFormat , day , hour , minute , seconds ) ; setText ( text ) ; } 
private boolean privatePerformZoom ( boolean byGesture , float scale , int centerX , int centerY , boolean shouldCallback ) { float realScale = checkRealScale ( scale ) ; if ( realScale == 1.0F ) { fitTranslate () ; mZoomListener . onZoomEnd ( byGesture , 1 , centerX , centerY ) ; return false ; } zoomAnimated ( byGesture , realScale , centerX , centerY , shouldCallback ) ; return true ; } 
private hudson.plugins.timestamper.annotator.ConsoleLogParser.Result parseFromFinish ( java.io.InputStream inputStream ) throws java.io.IOException { hudson.plugins.timestamper.annotator.ConsoleLogParser.Result result = new hudson.plugins.timestamper.annotator.ConsoleLogParser.Result () ; result.lineNumber = - 1 ; int value = inputStream . read () ; result.atNewLine = isNewLine ( value ) ; while ( ( value = inputStream . read () ) != ( - 1 ) ) { if ( isNewLine ( value ) ) { ( result.lineNumber ) -- ; } } return result ; } 
@ java.lang.Override public boolean usesAttributes ( java.lang.String tagName ) { tagName = tagName . toLowerCase () ; boolean usesAttributes = ! ( ( ( tagName . equals ( "cfset" ) ) || ( tagName . equals ( "cfif" ) ) ) || ( tagName . equals ( "cfelseif" ) ) ) ; return usesAttributes ; } 
public int attack ( edu.cis232.gwasos.resources.Combat enemy ) { java.util.Random rand = new java.util.Random () ; int monsterCurrentHp = enemy . getHp () ; if ( ( rand . nextInt ( ( ( 5 + ( enemy . getAgility () ) ) - ( getAgility () ) ) ) ) <= 3 ) { setMissed ( false ) ; enemy . damage ( power ) ; setPreviousAttackDamage ( ( monsterCurrentHp - ( enemy . getHp () ) ) ) ; } else { setMissed ( true ) ; } return previousAttackDamage ; } 
private void moveClient ( org.zapto.mike.mrstreamserver.Channel channel , org.zapto.mike.mrstreamserver.ClientHandler client ) { boolean canJoin = true ; if ( canJoin && ( channel != ( client . getChannel () ) ) ) { client . setChannel ( channel ) ; channel . addClient ( client ) ; } else {} } 
public double getMinZ () { if ( ! ( java.lang.Double . isNaN ( zMin ) ) ) return zMin ; for ( int i = 0 ; i < ( getXyz () [ 0 ] . length ) ; i ++ ) { final double z = getXyz ( 0 , i , 2 ) ; if ( ( z <= ( zMin ) ) || ( java.lang.Double . isNaN ( zMin ) ) ) zMin = z ; } return zMin ; } 
private org.ethereum.jsonrpc.Block getByJsonBlockId ( java.lang.String id ) { if ( "earliest" . equalsIgnoreCase ( id ) ) { return blockchain . getBlockByNumber ( 0 ) ; } else if ( "latest" . equalsIgnoreCase ( id ) ) { return blockchain . getBestBlock () ; } else if ( "pending" . equalsIgnoreCase ( id ) ) { return null ; } else { long blockNumber = StringHexToBigInteger ( id ) . longValue () ; return blockchain . getBlockByNumber ( blockNumber ) ; } } 
@ java.lang.Override public int getCurrentZoom () { try { java.lang.String zoomRes = sendRequest ( buildPanTiltHeadControlURL ( "%23GZ" ) ) ; if ( zoomRes . startsWith ( "gz" ) ) { int zoom = java.lang.Integer . parseInt ( zoomRes . substring ( 2 , 5 ) , 16 ) ; lastKnown . setZoom ( zoom ) ; return zoom ; } throw new java.io.IOException ( ( ( errorString ) + zoomRes ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return lastKnown . getZoom () ; } } 
@ java.lang.Override public byte [] openBytes ( int no , byte [] buf , int x , int y , int w , int h ) throws java.io.IOException , loci.formats.FormatException { loci.formats.FormatTools . checkPlaneParameters ( this , no , buf.length , x , y , w , h ) ; long planeSize = loci.formats.FormatTools . getPlaneSize ( this ) ; pixelFile . seek ( ( ( pixelOffset ) + ( no * planeSize ) ) ) ; readPlane ( pixelFile , x , y , w , h , buf ) ; return buf ; } 
@ java.lang.Override public net.minecraft.item.ItemStack insertItem ( int slot , net.minecraft.item.ItemStack stack , boolean simulate ) { int index = getIndexForSlot ( slot ) ; net.minecraftforge.items.IItemHandlerModifiable handler = getHandlerFromIndex ( index ) ; slot = getSlotFromIndex ( slot , index ) ; return handler . insertItem ( slot , stack , simulate ) ; } 
private float getNoise ( float x , float y , mapChooser.PerlinNoiseGenerator noise , float scale ) { float n = 0 ; float weight = 1 ; float curFrequency = 1 ; for ( int i = 0 ; i < ( frequencies ) ; i ++ ) { n += weight * ( noise . noise2 ( ( curFrequency * x ) , ( curFrequency * y ) ) ) ; weight /= 2 ; curFrequency += 2 ; } return n ; } 
public int length ( int v , int w ) { if ( v == w ) { return 0 ; } int common = ancestor ( v , w ) ; if ( common == ( - 1 ) ) { return - 1 ; } edu.princeton.cs.algs4.BreadthFirstDirectedPaths vBFS = new edu.princeton.cs.algs4.BreadthFirstDirectedPaths ( G , v ) ; edu.princeton.cs.algs4.BreadthFirstDirectedPaths wBFS = new edu.princeton.cs.algs4.BreadthFirstDirectedPaths ( G , w ) ; return ( ( vBFS . distTo ( common ) ) + ( wBFS . distTo ( common ) ) ) - 1 ; } 
protected int createNewEntry ( java.io.File f ) { int id = getNextFreeFileID () ; de.tremoneck.timemachine.storage.ReferenceStorage.ReferenceFile file = new de.tremoneck.timemachine.storage.ReferenceStorage.ReferenceFile () ; file.ID = id ; file.path = f . getPath () ; file.timestamp = f . lastModified () ; file.references = 1 ; list . add ( file ) ; return id ; } 
protected int draw () { mSurfaceTexture . updateTexImage () ; float [] matrix = new float [ 16 ] ; mSurfaceTexture . getTransformMatrix ( matrix ) ; mEffect . setTextureTransformMatrix ( matrix ) ; int textureId = mEffect . draw ( mSurfaceTextureId ) ; if ( ( mEncoder ) != null ) { start = java.lang.System . currentTimeMillis () ; mHandler . sendEmptyMessage ( 0 ) ; } mRendererScreen . draw ( textureId , mCubeBuffer , mTextureBuffer ) ; return 0 ; } 
public int getTeamLinks ( org.bukkit.scoreboard.Team team ) { int result = 0 ; if ( ( ( getGameMgr () . getGame ( team ) ) != null ) && ( beaconLinks . containsKey ( getGameMgr () . getGame ( team ) ) ) ) { for ( com.wasteofplastic.beaconz.BeaconLink pair : beaconLinks . get ( getGameMgr () . getGame ( team ) ) ) { if ( pair . getOwner () . equals ( team ) ) { result ++ ; } } } return result ; } 
private double stdDev ( java.util.LinkedList < java.lang.Double > list ) { double mean = mean ( list ) ; double sumOfDiffToMeanSq = 0 ; double length = list . size () ; for ( double i : list ) { double diffToMeanSq = java.lang.Math . pow ( ( i - mean ) , 2 ) ; sumOfDiffToMeanSq += diffToMeanSq ; } double meanOfDiffs = sumOfDiffToMeanSq / length ; return java.lang.Math . sqrt ( meanOfDiffs ) ; } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { int id = item . getItemId () ; if ( id == ( R.id.action_filter ) ) { com.aftersapp.fragments.FilterFragment filterFragment = new com.aftersapp.fragments.FilterFragment () ; getFragmentManager () . beginTransaction () . replace ( R.id.fragment_frame_lay , filterFragment , "FilterFragment" ) . commit () ; return true ; } return super . onOptionsItemSelected ( item ) ; } 
private android.widget.SimpleCursorAdapter getThemedAdapter ( android.database.Cursor cursor ) { java.lang.String [] dataColumns = new java.lang.String [] { NotePad.Notes.COLUMN_NAME_TITLE , NotePad.Notes.COLUMN_NAME_MODIFICATION_DATE } ; int [] viewIDs = new int [] { R.id.itemTitle , R.id.itemDate } ; int themed_item ; if ( FragmentLayout.lightTheme ) themed_item = R.layout.noteslist_item_light ; else themed_item = R.layout.noteslist_item_dark ; android.widget.SimpleCursorAdapter adapter = new android.widget.SimpleCursorAdapter ( activity , themed_item , cursor , dataColumns , viewIDs ) ; return adapter ; } 
public void fillMap () { values . clear () ; mMap . clear () ; cursor = getActivity () . getContentResolver () . query ( EcoMapContract.ProblemsEntry.CONTENT_URI , null , null , null , null , null ) ; while ( cursor . moveToNext () ) { org.ecomap.android.app.Problem p = new org.ecomap.android.app.Problem ( cursor , getActivity () ) ; values . add ( p ) ; } cursor . close () ; setUpClusterer () ; } 
@ java.lang.Override public void onResponse ( retrofit2.Call < java.util.List < com.namclu.android.deputyscheduler.models.Shift > > call , retrofit2.Response < java.util.List < com.namclu.android.deputyscheduler.models.Shift > > response ) { int statusCode = response . code () ; java.util.List < com.namclu.android.deputyscheduler.models.Shift > shifts = response . body () ; recyclerView . setAdapter ( new com.namclu.android.deputyscheduler.adapters.ShiftAdapter ( shifts ) ) ; } 
public void assignForm ( int govid , sample.ApplicationData unAssignedForm ) throws java.sql.SQLException { int resultCount ; stmt = conn . createStatement () ; java.lang.String query = ( ( ( "UPDATE FORM SET FORM.STATUS = 'ASSIGNED', FORM.GOVID = " + govid ) + " WHERE TTBID = '" ) + ( unAssignedForm . getTtbID () ) ) + "'" ; stmt . executeUpdate ( query ) ; } 
@ org.junit.Test public void withEndGreaterThanStringLength () { for ( int i = 1 ; i < 10 ; i ++ ) { final int end = ( string . getCharacters () . length ) + i ; final com.valkryst.VTerminal.misc.IntRange range = new com.valkryst.VTerminal.misc.IntRange ( 0 , end ) ; org.junit.Assert . assertFalse ( string . isRangeValid ( range ) ) ; } } 
protected long _daysLate ( com.born2go.lazzybee.db.Card card ) { if ( ( card . getQueue () ) != ( com.born2go.lazzybee.db.Card.QUEUE_REV2 ) ) return 0 ; long due = card . getDue () ; long now = com.born2go.lazzybee.algorithms.Utils . intNow () ; long diff_day = ( now - due ) / ( com.born2go.lazzybee.algorithms.CardSched.SECONDS_PERDAY ) ; return java.lang.Math . max ( 0 , diff_day ) ; } 
public int calMaxSubseqSum2 () { this . getInputs () ; int thisSum ; int maxSum = 0 ; for ( int i = 0 ; i < ( sequence.length ) ; i ++ ) { thisSum = 0 ; for ( int j = i ; j < ( sequence.length ) ; j ++ ) { thisSum += sequence [ j ] ; if ( thisSum > maxSum ) { maxSum = thisSum ; } } } return maxSum ; } 
@ java.lang.Override public int requestEnergy ( int energy , boolean simulate ) { int given = this . storage . extractEnergy ( energy , simulate ) ; if ( ! simulate ) { this . markDirty () ; if ( ! ( worldObj.isRemote ) ) { this . lastOut += given ; } } return given ; } 
private int getWordId ( @ javax.annotation.Nonnull final java.lang.String word ) { if ( word2index . containsKey ( word ) ) { return word2index . get ( word ) ; } else { int w = word2index . size () ; word2index . put ( word , w ) ; return w ; } } 
public static char [] cross ( creatures.CharCreature creat1 , creatures.CharCreature creat2 ) { char [] output = new char [ creat1.chrom.length ] ; for ( int i = 0 ; i < ( output.length ) ; i ++ ) { if ( i < ( ( output.length ) / 2 ) ) { output [ i ] = creat1.chrom [ i ] ; } else { output [ i ] = creat2.chrom [ i ] ; } } return output ; } 
public void resetItems () { if ( ( swipeListView . getAdapter () ) != null ) { int count = swipeListView . getAdapter () . getCount () ; int size = opened . size () ; for ( int i = size ; i < count ; i ++ ) { opened . add ( false ) ; openedRight . add ( false ) ; checked . add ( false ) ; } } } 
public ui.Resizer.Size resize ( int width , int height ) { double wRatio = ( 1.0 * ( this . width ) ) / width ; double hRatio = ( 1.0 * ( this . height ) ) / height ; return hRatio < wRatio ? new ui.Resizer.Size ( ( ( int ) ( width * hRatio ) ) , ( ( int ) ( height * hRatio ) ) ) : new ui.Resizer.Size ( ( ( int ) ( width * wRatio ) ) , ( ( int ) ( height * wRatio ) ) ) ; } 
protected java.lang.String [] doInBackground ( java.util.ArrayList < java.lang.String > . . . passing ) { boolean validServer = false ; java.lang.String [] result = null ; try { org.eyeseetea.malariacare.network.PushClient pushClient = new org.eyeseetea.malariacare.network.PushClient ( null , context ) ; validServer = pushClient . isValidServer () ; if ( validServer ) result = pushClient . pullOrgUnitsCodes () ; else result = new java.lang.String [ 1 ] ; result [ 0 ] = "" ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return result ; } 
@ java.lang.Override public void setup ( edu.gsgp.experiment.data.Dataset dataset , edu.gsgp.nodes.Node tree ) { super . setup ( dataset , tree ) ; double value ; for ( edu.gsgp.experiment.data.Instance instance : dataset ) { value = eval ( instance ) ; min = java.lang.Math . min ( min , value ) ; max = java.lang.Math . max ( max , value ) ; } } 
@ java.lang.Override public boolean doAction ( java.lang.String value ) { char choice = value . toUpperCase () . charAt ( 0 ) ; switch ( choice ) { case 'D' : this . startDropTNT () ; break; case 'U' : this . startUseTNT () ; break; case 'B' : return true ; default: this . console . println ( "\n*** Invalid selection*** Try again" ) ; break; } return false ; } 
private void read ( ) throws java.io.IOException { int readCount = socketChannel . read ( input ) ; java.lang.System.out . println ( ( "Read count: " + readCount ) ) ; if ( readCount > 0 ) { state = com.flyer.netty.reactor.third.ThirdHandler.PROCESSING ; com.flyer.netty.reactor.third.ThirdHandler.pool . submit ( new com.flyer.netty.reactor.third.ThirdHandler.Processor ( readCount ) ) ; } selectionKey . interestOps ( java.nio.channels.SelectionKey.OP_WRITE ) ; selectionKey . selector () . wakeup () ; } 
@ java.lang.Override public double f ( double [] coeffs ) { double [] gen = new double [ xp.length ] ; double [] gradient = new double [ coeffs.length ] ; double [] diffY = new double [ xp.length ] ; double sumDiff = calcGradient ( coeffs , gen , gradient , diffY ) ; return sumDiff ; } 
public int getTagNameId ( java.lang.CharSequence tagName ) { int id ; if ( ! ( tagNames . containsKey ( tagName ) ) ) { id = tagNames . size () ; tagNames . put ( tagName , id ) ; } else { id = tagNames . get ( tagName ) ; } return id ; } 
@ java.lang.Override public java.lang.Boolean call ( com.appunite.rx.example.model.model.AddPost addPost ) { final boolean nameIsPresent = ! ( com.google.common.base.Strings . isNullOrEmpty ( addPost . name () ) ) ; final boolean bodyIsPresent = ! ( com.google.common.base.Strings . isNullOrEmpty ( addPost . body () ) ) ; return nameIsPresent && bodyIsPresent ; } 
private double average ( double [] returns , java.util.function.Predicate < java.lang.Integer > filter ) { double sum = 0 ; int count = 0 ; for ( int ii = 0 ; ii < ( returns.length ) ; ii ++ ) { if ( ! ( filter . test ( ii ) ) ) continue; sum += returns [ ii ] ; count ++ ; } return sum / count ; } 
@ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public void onJoin ( net.minecraftforge.fml.common.network.FMLNetworkEvent.ClientConnectedToServerEvent event ) { boolean singleplayer = net.minecraft.client.Minecraft . getMinecraft () . isSingleplayer () ; if ( ! singleplayer ) { java.lang.String ip = net.minecraft.client.Minecraft . getMinecraft () . getCurrentServerData () . serverIP ; if ( ip . contains ( ".hypixel.net" ) ) { QuickPlay.onHypixel = true ; java.lang.System.out . println ( "Currently on Hypixel!" ) ; } else { QuickPlay.onHypixel = false ; } } } 
public void setElements ( java.util.List < ? > texts , boolean [] selected ) { int size = ( texts == null ) ? 0 : texts . size () ; setElements ( texts . toArray ( new java.lang.String [ size ] ) , null , selected ) ; } 
private boolean checkConnection ( java.lang.String host , int port ) { try { java.net.Socket socket = new java.net.Socket ( host , port ) ; java.io.PrintWriter out = new java.io.PrintWriter ( socket . getOutputStream () , true ) ; java.io.BufferedReader in = new java.io.BufferedReader ( new java.io.InputStreamReader ( socket . getInputStream () ) ) ; int data = in . read () ; socket . close () ; return data != ( - 1 ) ; } catch ( java.io.IOException e ) {} return false ; } 
public zeroPlayerGamePackage.PositionObject generateRandomLocation () { int positionX = ( ( int ) ( java.lang.Math . round ( ( ( zeroPlayerGamePackage.BoardBuilder.BOARD_WIDTH ) * ( java.lang.Math . random () ) ) ) ) ) ; int positionY = ( ( int ) ( java.lang.Math . round ( ( ( zeroPlayerGamePackage.BoardBuilder.BOARD_HEIGHT ) * ( java.lang.Math . random () ) ) ) ) ) ; zeroPlayerGamePackage.PositionObject position = new zeroPlayerGamePackage.PositionObject ( positionX , positionY ) ; return position ; } 
private int dateByWeekday ( java.lang.String date , java.lang.String weekday ) { boolean nextDate = false ; int min ; do { min = dateToMin ( date , "00:00" , nextDate ) ; nextDate = true ; while ( ! ( bots.CalendarBot.CalDateFormat . minToWeekday ( min , firstYear ) . equals ( weekday ) ) ) { min ++ ; } } while ( min < ( bots.CalendarBot.CurrentDate . getDateInMin ( firstYear ) ) ) ; return min + ( 8 * 60 ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_splash ) ; textView = ( ( android.widget.TextView ) ( findViewById ( R.id.textView ) ) ) ; int permission = android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.WRITE_EXTERNAL_STORAGE ) ; if ( permission != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { android.support.v4.app.ActivityCompat . requestPermissions ( this , com.example.qmma.featuredetection.SplashActivity.PERMISSIONS_STORAGE , com.example.qmma.featuredetection.SplashActivity.REQUEST_EXTERNAL_STORAGE ) ; } else { com.example.qmma.featuredetection.SplashActivity.Loader loader = new com.example.qmma.featuredetection.SplashActivity.Loader () ; loader . execute ( this ) ; } } 
public websays.accounting.CommissionItem createCommissionItem ( websays.accounting.BilledItem bi ) { double fee = websays.core.utils.CurrencyUtils . toEuros ( bi . getFee () , bi . getCurrency () ) ; int monthsFromStartOfContract = ( websays.core.utils.JodaUtils . monthsDifference ( bi.period.contractStart , bi.period.periodEnd ) ) + 1 ; fee = computeCommission ( fee , monthsFromStartOfContract ) ; return new websays.accounting.CommissionItem ( commissionnee , fee , this , bi ) ; } 
@ java.lang.Override public int getTotalProtection () { int totalProtection = getProtection () ; if ( ( ( getAnchorPoints () . get ( "body" ) ) != null ) && ( ( getAnchorPoints () . get ( "body" ) . getClass () ) == ( game.Armor . class ) ) ) { game.Armor armor = ( ( game.Armor ) ( getAnchorPoints () . get ( "body" ) ) ) ; totalProtection += armor . getActualProtection () ; } return totalProtection ; } 
public void run () { int timeLeft = ( ( int ) ( ( money ) * 4 ) ) ; int seconds = timeLeft * 60 ; for ( int i = seconds ; i > 0 ; i -- ) { try { java.lang.Thread . sleep ( 1000 ) ; } catch ( java.lang.InterruptedException ex ) {} } java.lang.System.out . println ( ( ( ( "\nCustomer " + ( name ) ) + " has finished their service at " ) + ( getTime () ) ) ) ; remove ( name ) ; } 
public static boolean isUnique ( final java.lang.String string ) { java.util.Set < java.lang.Character > set = new java.util.HashSet <> () ; for ( int i = 0 ; i < ( string . length () ) ; i ++ ) { set . add ( string . charAt ( i ) ) ; } return ( set . size () ) == ( string . length () ) ; } 
private void updateCVRUnderAudit ( final int the_index ) { int index = the_index ; my_cvr_under_audit = - 1 ; while ( index < ( my_submitted_audit_cvrs . size () ) ) { if ( ( my_submitted_audit_cvrs . get ( index ) ) == ( java.lang.Long.MIN_VALUE ) ) { my_cvr_under_audit = index ; break; } index = index + 1 ; } } 
public int getSbOperationRowNum ( java.lang.String operator , java.lang.String opration , int startRow , int endRow , java.util.List < java.util.List < java.lang.String > > data ) { int oprationRowNum = 0 ; for ( int x = startRow ; x <= endRow ; x ++ ) { if ( ( data . get ( x ) . get ( 4 ) . equalsIgnoreCase ( operator ) ) && ( data . get ( x ) . get ( 5 ) . equalsIgnoreCase ( opration ) ) ) { oprationRowNum = x ; break; } } return oprationRowNum ; } 
private int getStartSelectItem () { int currentItem = ( java.lang.Integer.MAX_VALUE ) / 2 ; if ( ( currentItem % ( getRealCount () ) ) == 0 ) { return currentItem ; } while ( ( currentItem % ( getRealCount () ) ) != 0 ) { currentItem ++ ; } return currentItem ; } 
private static hu.oe.nik.szfmv17t.environment.utils.Vector2d [] getCorners ( hu.oe.nik.szfmv17t.environment.utils.Position collidableObjectPosition ) { double rot = collidableObjectPosition . getAxisAngle () ; hu.oe.nik.szfmv17t.environment.utils.Vector2d center = collidableObjectPosition . getCenter () ; hu.oe.nik.szfmv17t.environment.utils.Vector2d [] worldCoords = hu.oe.nik.szfmv17t.environment.utils.CollisionDetector . generateWorldCoords ( collidableObjectPosition ) ; return hu.oe.nik.szfmv17t.environment.utils.CollisionDetector . rotateWorldCoords ( rot , center , worldCoords ) ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { android.util.Log . d ( "click listener" , "working!" ) ; int itemPosition = getLayoutPosition () ; android.content.Intent intent = new android.content.Intent ( mContext , com.epicodus.a4u2poo.DetailActivity . class ) ; intent . putExtra ( "position" , itemPosition ) ; intent . putExtra ( "restrooms" , org.parceler.Parcels . wrap ( mRestrooms ) ) ; mContext . startActivity ( intent ) ; } 
public final int readCharacter ( final char . . . allowed ) throws java.io.IOException { char c ; java.util.Arrays . sort ( allowed ) ; while ( ( java.util.Arrays . binarySearch ( allowed , ( c = ( ( char ) ( readCharacter () ) ) ) ) ) < 0 ) {} return c ; } 
protected int depth ( org.pg4200.datastructure.map.tree.BinaryTreeMap < K , V > . TreeNode node ) { int leftDepth = 0 ; int rightDepth = 0 ; if ( ( node.left ) != null ) { leftDepth = depth ( node.left ) ; } if ( ( node.right ) != null ) { rightDepth = depth ( node.right ) ; } return 1 + ( java.lang.Math . max ( leftDepth , rightDepth ) ) ; } 
private boolean isOn () { boolean bRet = false ; if ( ! ( this . getStatus () . equals ( "" ) ) ) { if ( ( this . getMatchRegexOn () ) == 1 ) { bRet = this . getStatus () . equals ( this . getRegexStatus () ) ; } else { bRet = ! ( this . getStatus () . equals ( this . getRegexStatus () ) ) ; } } return bRet ; } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { boolean retval = true ; switch ( item . getItemId () ) { case android.R.id.home : onBackPressed () ; break; case R.id.change_password : changeAccountPassword ( account ) ; break; case R.id.delete_account : openAccountRemovalConfirmationDialog ( account ) ; break; default: retval = super . onOptionsItemSelected ( item ) ; break; } return retval ; } 
private boolean calcInitTime () { boolean valid = calcTimeMoved () ; if ( valid ) { if ( ! ( java.lang.Double . isNaN ( finalTime ) ) ) initTime = ( finalTime ) - ( timeMoved ) ; else initTime = 0 ; } if ( ! ( java.lang.Double . isNaN ( initTime ) ) ) { return true ; } return valid ; } 
public int getInt () { try { int r = java.lang.Integer . parseInt ( in . readLine () ) ; return r ; } catch ( java.lang.NumberFormatException | java.io.IOException e ) { isLive = false ; closeConnection () ; snakeManager . getClients () . remove ( this ) ; java.lang.System.out . println ( ( "No response from client with Snake ID of " + ( snake . getId () ) ) ) ; java.lang.System.out . println ( ( ( MainServer.currentSnakeManagerInstance . getClients () . size () ) + " snakes remaining" ) ) ; } return - 1 ; } 
private boolean urlInHashSet ( java.net.URL url , java.util.HashSet < java.lang.String > set ) { boolean returnBoolean = false ; for ( java.lang.String setItem : set ) { if ( com.wordpress.httpspandareaktor.scrapetest.NetworkUtils . urlHostPathMatch ( com.wordpress.httpspandareaktor.scrapetest.NetworkUtils . makeURL ( setItem ) , url ) ) { returnBoolean = true ; } } return returnBoolean ; } 
private static int findLeftPivot ( int [] array , int k ) { if ( k == ( - 1 ) ) return - 1 ; else if ( ( array.length ) > 0 ) { if ( k == 0 ) return - 1 ; else { int i = project2.NonInitiator . randRange ( 0 , k ) ; return array [ i ] ; } } else return - 1 ; } 
public int getPlayerRank () { int rank = - 1 ; int count = 0 ; for ( int i = 0 ; i < ( Game.HI_SCORES . size () ) ; i ++ ) { if ( ( player . getScore () ) >= ( Game.HI_SCORES . get ( i ) . getScore () ) ) rank = ( Game.HI_SCORES . size () ) - ( ++ count ) ; } return rank ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { final boolean star = ! ( bundle . getBoolean ( Constants.STAR ) ) ; final int starDrawable = ( star ) ? R.drawable.ic_star_selected : R.drawable.ic_star_unselected ; starView . setImageDrawable ( android.support.v4.content.ContextCompat . getDrawable ( getActivity () . getApplicationContext () , starDrawable ) ) ; bundle . putBoolean ( Constants.STAR , star ) ; android.util.Log . d ( "id" , java.lang.String . valueOf ( id ) ) ; onCreateView ( inflater , container , savedInstanceState ) ; } 
private java.lang.String power ( int slotNumber , int action ) throws java.lang.Exception { byte [] response = new byte [ 0 ] ; try { response = reader . power ( slotNumber , action ) ; } catch ( com.acs.smartcard.ReaderException e ) { throw new java.lang.Exception ( e . getMessage () ) ; } return toHexString ( response , response.length ) ; } 
public static java.sql.Date convertNewsApiDateStringToDate ( java.lang.String date ) { if ( date == null ) return null ; java.lang.String year = date . substring ( 0 , 4 ) ; java.lang.String month = date . substring ( 5 , 7 ) ; java.lang.String day = date . substring ( 8 , 10 ) ; long timeInMilliSec = new java.util.GregorianCalendar ( java.lang.Integer . parseInt ( year ) , ( ( java.lang.Integer . parseInt ( month ) ) - 1 ) , java.lang.Integer . parseInt ( day ) ) . getTimeInMillis () ; return new java.sql.Date ( timeInMilliSec ) ; } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; android.os.Bundle b = getArguments () ; java.lang.String fileName = b . getString ( com.koroshiya.fragments.ReadFragment.ARG_FILE , "" ) ; android.util.Log . i ( "FLA" , ( "Create: " + fileName ) ) ; int page = b . getInt ( com.koroshiya.fragments.ReadFragment.ARG_PAGE , ( - 1 ) ) ; reset ( fileName , page , false ) ; } 
public void take ( double amount ) { double sum = ( curSum ) + ( ( decimals ) / 100.0 ) ; sum -= amount ; curSum = ( ( int ) ( sum ) ) ; decimals = ( ( int ) ( java.lang.Math . round ( ( ( sum * 100 ) - ( ( curSum ) * 100 ) ) ) ) ) ; } 
@ java.lang.Override public void validate ( java.lang.Object target , org.springframework.validation.Errors errors ) { com.pce.domain.dto.PukGroupForPukDto pukGroupDto = ( ( com.pce.domain.dto.PukGroupForPukDto ) ( target ) ) ; if ( pukGroupDto != null ) { long pukGroupId = pukGroupDto . getPukGroupId () ; java.util.Optional < com.pce.domain.PukGroup > pukGroupById = pukGroupService . getPukGroupById ( pukGroupId ) ; if ( ! ( pukGroupById . isPresent () ) ) { errors . rejectValue ( "pukGroupId" , "pukGroup.not.exists" , ( ( "Puk Group " + pukGroupId ) + " is not exists in the system, please select different one" ) ) ; } } } 
private byte [] removeId ( byte [] payload ) { byte [] array = new byte [ ( payload.length ) - 1 ] ; for ( int i = 0 ; i < ( array.length ) ; i ++ ) { array [ i ] = payload [ ( i + 1 ) ] ; } return array ; } 
public double [] getPhaseTable () { for ( int i = 0 ; i < 1024 ; i ++ ) re [ i ] = data [ i ] ; cafe.analysis.cafe.analysis.FFT . fft ( re , im , 10 , ( - 1 ) ) ; double [] temp1 = cafe.analysis.cafe.analysis.FFT . get_theta () ; return temp1 ; } 
@ java.lang.Override protected byte [] getFromStore ( long uid ) throws java.io.IOException { int docid = mapDocId ( uid ) ; if ( docid < 0 ) return null ; org.apache.lucene.index.IndexReader reader = null ; if ( ( _currentReaderData ) != null ) { reader = _currentReaderData.reader ; } if ( ( docid >= 0 ) && ( reader != null ) ) { org.apache.lucene.document.Document doc = reader . document ( docid ) ; if ( doc != null ) { return doc . getBinaryValue ( _field ) ; } } return null ; } 
public void uninstallClientDecorations ( javax.swing.JRootPane root ) { uninstallBorder ( root ) ; uninstallWindowListeners ( root ) ; setTitlePane ( root , null ) ; uninstallLayout ( root ) ; int style = com.jtattoo.plaf.DecorationHelper . getWindowDecorationStyle ( root ) ; if ( style == ( com.jtattoo.plaf.BaseRootPaneUI.NONE ) ) { root . repaint () ; root . revalidate () ; } if ( ( ( window ) != null ) && ( ( savedCursor ) != null ) ) { window . setCursor ( savedCursor ) ; savedCursor = null ; } window = null ; } 
public void startTestMenuItemAction () { if ( ( mainView . getCurrentlySelectedVocabList () ) == null ) { reportNoVocabListSelectedError () ; } else { java.lang.Object [] options = new java.lang.Object [] { com.tkomiya.models.Vocab.SUPPORTED_LANGUAGES [ 1 ] , com.tkomiya.models.Vocab.SUPPORTED_LANGUAGES [ 2 ] } ; int languageToTest = mainView . showOptionDialog ( "Which language would you like to test?" , "Please enter option" , options , Vocab.KOREAN ) ; if ( languageToTest != ( javax.swing.JOptionPane.CANCEL_OPTION ) ) { new com.tkomiya.views.TypedTest ( mainView . getCurrentlySelectedVocabList () , ( languageToTest + 1 ) ) ; } } } 
private boolean putNewTask ( TASK newTask ) { java.lang.String url = newTask . getKey () ; boolean s = mExecuteQueue . offer ( newTask ) ; android.util.Log . w ( com.arialyy.aria.core.queue.pool.ExecutePool.TAG , ( "任务添加" + ( s ? "成功" : ( "失败，【" + url ) + "】" ) ) ) ; if ( s ) { mExecuteArray . put ( com.arialyy.aria.util.CommonUtil . keyToHashKey ( url ) , newTask ) ; } return s ; } 
public static double S ( double t ) { double count = SIRModel . getRecord ( SIRModel.S_HIST , t ) ; if ( count >= 0 ) { return count ; } else { double lt = t - ( SIRModel.DT ) ; double newCount = ( SIRModel . S ( lt ) ) + ( SIRModel . dS ( t ) ) ; SIRModel.S_HIST . add ( newCount ) ; return newCount ; } } 
@ java.lang.Override protected void initiateAutomaticSync () { if ( ( tagData ) != null ) { long lastAutoSync = com.todoroo.andlib.utility.Preferences . getLong ( ( ( com.todoroo.astrid.actfm.TagViewActivity.LAST_FETCH_KEY ) + ( tagData . getId () ) ) , 0 ) ; if ( ( ( com.todoroo.andlib.utility.DateUtilities . now () ) - lastAutoSync ) > ( com.todoroo.andlib.utility.DateUtilities.ONE_HOUR ) ) refreshData ( false ) ; } } 
private void updateUI_2_Dashboard () { if ( ( _dashboard_PageBook ) == null ) { return; } final boolean isBrowserAvailable = ( _browser ) != null ; _dashboard_PageBook . showPage ( ( isBrowserAvailable ? _dashboardPage_WithBrowser : _dashboardPage_NoBrowser ) ) ; if ( ! isBrowserAvailable ) { return; } final java.lang.String html = createHTML () ; _isBrowserCompleted = false ; _browser . setText ( html ) ; } 
public java.util.List < java.util.Map < java.lang.String , java.lang.Object > > getRecentVideos ( java.lang.Integer pageNo , java.lang.Integer pageSize ) { java.util.List < java.util.Map < java.lang.String , java.lang.Object > > result = null ; int offset = ( ( pageNo - 1 ) * pageSize ) + 1 ; java.lang.String selectQuery = "SELECT * FROM ( SELECT * FROM v_online_videos ) AS tbl WHERE tbl.sl_no BETWEEN ? AND ? " ; result = getJdbcTemplate () . query ( selectQuery , new java.lang.Object [] { offset , offset + pageSize } , new org.springframework.jdbc.core.ColumnMapRowMapper () ) ; return result ; } 
public int hamming () { int count = 0 ; for ( int i = 0 ; i < ( N ) ; i ++ ) { for ( int j = 0 ; j < ( N ) ; j ++ ) { if ( ( ( pieces [ i ] [ j ] ) != ( goalValueAt ( i , j ) ) ) && ( ( pieces [ i ] [ j ] ) != 0 ) ) { count ++ ; } } } return count ; } 
public void shuffle () { sorted = false ; for ( int i = ( topCard ) - 1 ; i > 0 ; i -- ) { int randomPos = ( ( int ) ( ( java.lang.Math . random () ) * ( topCard ) ) ) ; Card temp = cards [ i ] ; cards [ i ] = cards [ randomPos ] ; cards [ randomPos ] = temp ; } } 
private final boolean is7BitClean ( org.forgerock.opendj.ldap.ByteSequence value ) { for ( int i = 0 ; i < ( value . length () ) ; i ++ ) { byte b = value . byteAt ( i ) ; if ( ( b & ( org.opends.server.plugins.SevenBitCleanPlugin.MASK ) ) != b ) { return false ; } } return true ; } 
@ java.lang.Override protected java.lang.Boolean doInBackground ( java.lang.String . . . params ) { com.mongodb.MongoClientURI mongoUri = new com.mongodb.MongoClientURI ( tasks.CallEvacuationTask.DBAdress ) ; com.mongodb.MongoClient mongoClient = new com.mongodb.MongoClient ( mongoUri ) ; com.mongodb.client.MongoDatabase db = mongoClient . getDatabase ( mongoUri . getDatabase () ) ; com.mongodb.client.MongoCollection < com.mongodb.BasicDBObject > dbCollection = db . getCollection ( tasks.CallEvacuationTask.collectionName , com.mongodb.BasicDBObject . class ) ; boolean result ; result = updateEvac ( dbCollection , params [ 1 ] , params [ 0 ] ) ; return result ; } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { javax.swing.JFileChooser jfc = new javax.swing.JFileChooser () ; int result = jfc . showOpenDialog ( view . getFrame () ) ; if ( result == ( javax.swing.JFileChooser.APPROVE_OPTION ) ) model . loadPathbaseFile ( jfc . getSelectedFile () . getAbsolutePath () ) ; center . aggiorna ( ( - 1 ) ) ; } 
public void next () { this . index += 1 ; int tempIndex = this . index ; while ( ( ( this . index ) < ( this . menuSize ) ) && ( ( menu . get ( tempIndex ) . price ) >= ( this . price ) ) ) { this . index += 1 ; tempIndex += 1 ; } } 
private void checkExistenceOfRequiredTranslations ( java.util.Set < java.io.File > filesInResourceBundle ) { final java.lang.String fullBundleName = getFullBundleName ( filesInResourceBundle ) ; for ( java.lang.String languageCode : requiredTranslations ) { final java.lang.String translationFileName = ( fullBundleName + '_' ) + languageCode ; final boolean missing = com.puppycrawl.tools.checkstyle.checks.TranslationCheck . isMissing ( translationFileName , filesInResourceBundle ) ; if ( missing ) { final java.lang.String missingTranslationFileName = formMissingTranslationName ( fullBundleName , languageCode ) ; logMissingTranslation ( missingTranslationFileName ) ; } } } 
private se.fredsfursten.donationboardplugin.PlayerInfo getOrAddPlayerInfo ( org.bukkit.entity.Player player ) { se.fredsfursten.donationboardplugin.PlayerInfo playerInfo = this . _knownPlayers . get ( player ) ; if ( playerInfo == null ) { playerInfo = new se.fredsfursten.donationboardplugin.PlayerInfo ( player ) ; this . _knownPlayers . put ( player , playerInfo ) ; int toLevel = this . _model . getDonationLevel ( 0 ) ; playerInfo . demoteOrPromote ( toLevel ) ; } return playerInfo ; } 
private java.util.Vector calculateMeanPoint ( java.util.List < ? extends data.Data > dataSet ) { double [] meanPoint = new double [ argumentsCount ] ; for ( data.Data data : dataSet ) { for ( int i = 0 ; i < ( argumentsCount ) ; i ++ ) { meanPoint [ i ] += data . getValueAt ( i ) ; } } for ( int i = 0 ; i < ( argumentsCount ) ; i ++ ) { meanPoint [ i ] /= dataSet . size () ; } return new java.util.Vector ( meanPoint ) ; } 
@ java.lang.Override public void onTriggered () { if ( ( tilemap ) != null ) { int [] dims = getNumberPair ( "Please enter the new dimensions?" ) ; if ( dims == null ) return; for ( int i = 0 ; i < ( tilemap . getLayerCount () ) ; i ++ ) { tilemap . getLayer ( i ) . resize ( dims [ 0 ] , dims [ 1 ] ) ; } } } 
protected sentimentAnalysis.ScoreNode getNode ( edu.emory.clir.clearnlp.dependency.DEPNode node , java.util.Map < java.lang.String , java.lang.Double > map ) { double score = 0 ; double intensity = getIntensity ( node ) ; if ( map . containsKey ( node . getLemma () ) ) { score = map . get ( node . getLemma () ) ; } sentimentAnalysis.ScoreNode sNode = new sentimentAnalysis.ScoreNode ( node . getLemma () , score , intensity ) ; return sNode ; } 
@ java.lang.Override public void onCheckedChanged ( android.widget.RadioGroup group , int checkedId ) { int selected = ( ( android.widget.RadioGroup ) ( findViewById ( R.id.createMatchRadioGroupLevel ) ) ) . getCheckedRadioButtonId () ; if ( selected == ( R.id.createMatchRadioButtonJunior ) ) { radioGroupLevelSelection = 1 ; } else if ( selected == ( R.id.createMatchRadioButtonSenior ) ) { radioGroupLevelSelection = 2 ; } filterAndRefresh ( radioGroupLevelSelection ) ; } 
private int getMove ( com.rijul.game.core.Board board ) { java.lang.String boardAsString = getBoardAsString ( board ) ; if ( boardAsString . equals ( com.rijul.game.app.player.impl.Bot.INITIAL_BOARD ) ) { int ind = random . nextInt ( com.rijul.game.app.player.impl.Bot.INITIAL_MOVES.length ) ; return com.rijul.game.app.player.impl.Bot.INITIAL_MOVES [ ind ] ; } getOptimalResultForBoardPosition ( board , 1 ) ; return optimalMoveFromBoardPosition . get ( boardAsString ) ; } 
@ java.lang.Override public void calculateRedpacksPrize ( cn.wisdom.lottery.dao.vo.Lottery lottery ) { if ( cn.wisdom.lottery.common.utils.CollectionUtils . isNotEmpty ( lottery . getRedpacks () ) ) { int totalBonus = lottery . getPeriods () . get ( 0 ) . getPrizeBonus () ; float bonus = 0 ; for ( cn.wisdom.lottery.dao.vo.LotteryRedpack lotteryRedpack : lottery . getRedpacks () ) { bonus = ( totalBonus * ( lotteryRedpack . getRate () ) ) / 100 ; lotteryRedpack . setPrizeBonus ( bonus ) ; } } } 
private void captureTerritory ( gottesman.risk.Player activePlayer , gottesman.risk.Territory selectedTerritory , gottesman.risk.map.TerritoryView territoryView , gottesman.risk.Territory territory ) { int battalionNum = java.lang.Integer . parseInt ( javax.swing.JOptionPane . showInputDialog ( null , "Enter the amount of battalions you would like to move." ) ) ; if ( battalionNum >= ( selectedTerritory . getBattalions () ) ) { javax.swing.JOptionPane . showMessageDialog ( selectedTerritoryView , "Cannot move this amount of battalions. Try again." ) ; return; } else { territory . occupy ( activePlayer ) ; selectedTerritory . moveBattalionsTo ( territory , battalionNum ) ; } selectedTerritoryView . repaint () ; territoryView . repaint () ; selectTerritory ( territoryView ) ; } 
@ java.lang.Override protected void reloadForSearch ( boolean finalTouch ) { if ( ( mAdapter ) == null ) { return; } try { final int sD = mData.length ; for ( int i = 0 ; i < sD ; ++ i ) { if ( ( mData [ i ] ) instanceof ds.framework.v4.data.AbsRecyclerViewData ) { invalidateData ( i ) ; } } loadDataAndDisplay () ; } catch ( java.lang.Throwable e ) { ds.framework.v4.common.Debug . logException ( e ) ; } } 
private boolean isTaskRequired ( com.emc.storageos.db.client.model.Volume rpVolume , com.emc.storageos.volumecontroller.impl.utils.VirtualPoolCapabilityValuesWrapper capabilities , boolean vplex , com.emc.storageos.model.TaskList taskList ) { boolean rpNonVplexSourceVolume = ( Volume.PersonalityTypes.SOURCE . name () . equals ( rpVolume . getPersonality () ) ) && ( ! vplex ) ; boolean addJournalVolume = capabilities . getAddJournalCapacity () ; boolean notAlreadyInTaskList = ( com.emc.storageos.api.service.impl.placement.StorageScheduler . getPrecreatedVolume ( _dbClient , taskList , rpVolume . getLabel () ) ) == null ; boolean createTask = addJournalVolume || ( rpNonVplexSourceVolume && notAlreadyInTaskList ) ; return createTask ; } 
private boolean validateQuantity () { int quantity = java.lang.Integer . valueOf ( subgroupsQuantity . getText () . toString () ) ; if ( quantity > ( getMaximumQuantity () ) ) { subgroupsQuantityLayout . setError ( getString ( R.string.nwinners_msg_validate_quantity , getMaximumQuantity () ) ) ; requestFocus ( subgroupsQuantity ) ; return false ; } return true ; } 
private void updateLength () { int newLength = net.decix.jipfix.header.SetHeader.HEADERLENGTH ; for ( net.decix.jipfix.header.TemplateRecord template : templateRecords ) { newLength += template . getLength () ; } for ( net.decix.jipfix.header.OptionTemplateRecord optionTemplate : optionTemplateRecords ) { newLength += optionTemplate . getLength () ; } for ( net.decix.jipfix.header.DataRecord record : dataRecords ) { newLength += record . getLength () ; } this . length = newLength ; } 
public void afterPropertiesSet ( ) throws java.lang.Exception { int roundId = getRoundId () ; if ( roundId < 1 ) { return; } round = org.powertac.tournament.beans.Round . getRoundFromId ( roundId , false ) ; loadRoundInfo () ; loadParticipantInfo () ; loadCsvLinks () ; loadMaps () ; } 
@ java.lang.Override public void doWithLockNoResult () { if ( ! ( sdSvc . isActiveService ( service ) ) ) { return; } java.util.List < io.cattle.platform.servicediscovery.deployment.impl.DeploymentUnit > units = unitInstanceFactory . collectDeploymentUnits ( services , new io.cattle.platform.servicediscovery.deployment.impl.DeploymentManagerImpl.DeploymentServiceContext () ) ; boolean needToReconcile = needToReconcile ( services , units ) ; if ( ! needToReconcile ) { return; } activateServices ( service , services ) ; activateDeploymentUnits ( services , units ) ; } 
private void handleIntent ( android.content.Intent intent ) { final int configScreenId = intent . getIntExtra ( org.droidplanner.android.activities.ConfigurationActivity.EXTRA_CONFIG_SCREEN_ID , mConfigScreenId ) ; final android.support.v4.app.Fragment currentFragment = getCurrentFragment () ; if ( ( currentFragment == null ) || ( ( getIdForFragment ( currentFragment ) ) != configScreenId ) ) { mConfigScreenId = configScreenId ; getSupportFragmentManager () . beginTransaction () . replace ( R.id.configuration_screen , getFragmentForId ( configScreenId ) ) . commit () ; } } 
public static void main ( java.lang.String [] args ) { char letter ; int a ; final int MIN = 65 ; final int MAX = 122 ; final int STOPLINE1 = 85 ; final int STOPLINE2 = 122 ; for ( a = MIN ; a <= MAX ; a ++ ) { letter = ( ( char ) ( a ) ) ; java.lang.System.out . print ( ( "  " + letter ) ) ; if ( ( a == STOPLINE1 ) || ( a == STOPLINE2 ) ) java.lang.System.out . println () ; } java.lang.System.out . println ( "\nEnd of application" ) ; } 
public org.pb.x12.EDI parse ( java.io.InputStream source ) throws java.io.IOException , org.pb.x12.FormatException { java.lang.StringBuilder strBuffer = new java.lang.StringBuilder () ; char [] cbuf = new char [ 1024 ] ; int length ; java.io.Reader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( source ) ) ; while ( ( length = reader . read ( cbuf ) ) != ( - 1 ) ) { strBuffer . append ( cbuf , 0 , length ) ; } java.lang.String strSource = strBuffer . toString () ; return parse ( strSource ) ; } 
@ java.lang.Override public boolean configChanged () { int currentConfigHash = this . configProps . hashCode () ; boolean configChanged = ( ( propsHashCode ) != null ) && ( ( this . propsHashCode ) != currentConfigHash ) ; if ( configChanged && ( net.jawr.web.resource.bundle.factory.PropsConfigPropertiesSource.LOGGER . isDebugEnabled () ) ) net.jawr.web.resource.bundle.factory.PropsConfigPropertiesSource.LOGGER . debug ( "Changes in configuration properties file detected." ) ; this . propsHashCode = currentConfigHash ; return configChanged ; } 
private boolean isValideEmail ( java.lang.String email ) { java.sql.Statement stmt ; boolean status = false ; java.sql.Connection con = null ; try { bean.ConnectionProvider provider = new bean.ConnectionProvider () ; con = provider . getCon () ; stmt = con . createStatement () ; java.lang.String query = ( "Select * from employee where BINARY email=\"" + email ) + "\"" ; java.sql.ResultSet rs = stmt . executeQuery ( query ) ; status = rs . next () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } return status ; } 
public boolean tryReadLockWithCondition ( V expected ) { int [] stamp = new int [ 1 ] ; V value ; do { value = lock . get ( stamp ) ; if ( ( expected != value ) && ( ( value == null ) || ( ! ( expected . equals ( value ) ) ) ) ) { return false ; } } while ( lock . compareAndSet ( value , value , stamp [ 0 ] , ( ( stamp [ 0 ] ) + 2 ) ) ) ; return true ; } 
private void addDeveloperFromInput () { int id = readIdFromInput () ; com.homelearning.model.Developer developer = developerController . getById ( id ) ; if ( developer == null ) { developerController . save ( new com.homelearning.model.Developer ( id , readFirstNameFromInput () , readLastNameFromInput () , readSpecialtyFromInput () , readExperienceFromInput () , readSalaryFromInput () ) ) ; } else { java.lang.System.out . printf ( "Developer with id %d already exists:\n" , id ) ; java.lang.System.out . println ( developer ) ; } } 
@ java.lang.Override public void keyPressed ( java.awt.event.KeyEvent e ) { if ( ( ( remain . length () ) == 0 ) && ( ( e . getKeyCode () ) != ( java.awt.event.KeyEvent.VK_ENTER ) ) ) { e . consume () ; retype () ; } else { java.lang.String item = "%d %d 0" ; long curTime = java.lang.System . currentTimeMillis () ; records . add ( java.lang.String . format ( item , curTime , e . getKeyCode () ) ) ; } } 
@ java.lang.Override public int hashCode () { int hash = 7 ; hash = ( 53 * hash ) + ( this . topLeft . hashCode () ) ; hash = ( 53 * hash ) + ( this . bottomRight . hashCode () ) ; return hash ; } 
private int find_next_test_item ( int CurrentTestItem ) { int NextTestItemL = 0 ; boolean NeedTest = false ; NextTestItemL = CurrentTestItem + 1 ; do { not_end_test_all = NextTestItemL != ( end_test_item ) ; if ( not_end_test_all ) { NeedTest = fec_test_items_order [ NextTestItemL ] . test ; if ( NeedTest ) { break; } else { NextTestItemL ++ ; } } else { return - 1 ; } } while ( ! NeedTest ) ; return NextTestItemL ; } 
@ java.lang.Override public int getPartition ( org.apache.hadoop.io.LongWritable key , org.apache.hadoop.io.LongWritable value , int numberOfPartition ) { try { hbase.query1.HBaseRowKeyPartitioner . fillFirstAndLastID () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } long intervalLength = ( ( hbase.query1.HBaseRowKeyPartitioner.lastArticleId ) - ( hbase.query1.HBaseRowKeyPartitioner.firstArticleId ) ) / numberOfPartition ; return ( ( int ) ( ( ( key . get () ) - ( hbase.query1.HBaseRowKeyPartitioner.firstArticleId ) ) / intervalLength ) ) ; } 
public java.lang.Object invoke ( java.lang.Object args ) throws java.lang.Exception { java.lang.String [] argdata = ( ( java.lang.String [] ) ( args ) ) ; int arg1 = java.lang.Integer . valueOf ( argdata [ 0 ] ) ; int arg2 = java.lang.Integer . valueOf ( argdata [ 1 ] ) ; int arg3 = java.lang.Integer . valueOf ( argdata [ 2 ] ) ; return source.CalculateSalary . calculateSalary ( arg1 , arg2 , arg3 ) ; } 
@ java.lang.Override public void seekToUs ( long positionUs ) { com.google.android.exoplayer.util.Assertions . checkState ( prepared ) ; com.google.android.exoplayer.util.Assertions . checkState ( ( ( enabledTrackCount ) > 0 ) ) ; long currentPositionUs = ( isPendingReset () ) ? pendingResetPositionUs : downstreamPositionUs ; downstreamPositionUs = positionUs ; lastSeekPositionUs = positionUs ; if ( currentPositionUs == positionUs ) { return; } seekToInternal ( positionUs ) ; } 
private android.graphics.Bitmap setBitmapSize ( int iconId , int w ) { android.graphics.Bitmap bitmap = android.graphics.BitmapFactory . decodeResource ( getContext () . getResources () , iconId ) ; float s = ( w * 1.0F ) / ( bitmap . getWidth () ) ; bitmap = android.graphics.Bitmap . createScaledBitmap ( bitmap , ( ( int ) ( ( bitmap . getWidth () ) * s ) ) , ( ( int ) ( ( bitmap . getHeight () ) * s ) ) , true ) ; return bitmap ; } 
private void excludeCols ( final boolean [] checkedItems ) { int i = 1 ; assert null != checkedItems ; assert null != ( this . templateModel ) ; for ( final boolean checkedItem : checkedItems ) { if ( checkedItem ) this . templateModel . addExcludeCol ( i ) ; i ++ ; } } 
@ java.lang.Override public boolean deleteLink ( java.lang.String dbid , long id1 , long link_type , long id2 , boolean noinverse , boolean expunge ) throws java.lang.Exception { int deletionCount ; try ( edu.berkeley.cs.Transaction tx = session . beginTransaction () ) { java.lang.String deleteLinkStmt = "MATCH (n1 {id: {id1}}) -[r:{link_type}]-> (n2: {id: {id2}}) DELETE r" ; edu.berkeley.cs.StatementResult result = tx . run ( deleteLinkStmt , edu.berkeley.cs.LinkStoreNeo4j . linkParams ( id1 , link_type , id2 ) ) ; deletionCount = result . consume () . counters () . relationshipsDeleted () ; tx . success () ; } return deletionCount > 0 ; } 
@ org.junit.Test public void testFound ( ) throws java.lang.Exception { boolean thrown = false ; java.lang.String result = null ; try { this . databaseEngine . search ( "abc" ) ; } catch ( java.lang.Exception e ) { thrown = true ; } org.assertj.core.api.Assertions . assertThat ( ( ! thrown ) ) ; } 
public com.epam.indigo.IndigoObject exactMatch ( com.epam.indigo.IndigoObject obj1 , com.epam.indigo.IndigoObject obj2 , java.lang.String flags ) { if ( flags == null ) flags = "" ; com.epam.indigo.IndigoObject [] parent = new com.epam.indigo.IndigoObject [] { obj1 , obj2 } ; setSessionID () ; int match = com.epam.indigo.Indigo . checkResult ( this , parent , com.epam.indigo.Indigo._lib . indigoExactMatch ( obj1.self , obj2.self , flags ) ) ; if ( match == 0 ) return null ; return new com.epam.indigo.IndigoObject ( this , match , parent ) ; } 
@ java.lang.Override public void onScrollStateChanged ( android.support.v7.widget.RecyclerView recyclerView , int newState ) { super . onScrollStateChanged ( recyclerView , newState ) ; int initialItemCount = mGridLayoutManager . findFirstCompletelyVisibleItemPosition () ; int totalItemCount = mGridLayoutManager . getItemCount () ; int lastVisisbleItemPosition = mGridLayoutManager . findLastCompletelyVisibleItemPosition () ; if ( ( ( totalItemCount - 1 ) == lastVisisbleItemPosition ) && ( initialItemCount > 0 ) ) { mInfiniteScrollListener . loadMoreData () ; } } 
@ java.lang.Override public void mouseReleased ( java.awt.event.MouseEvent e ) { int x ; int y ; if ( ( drag ) && ( ! ( move ) ) ) { deselectAll () ; target . clear () ; x = e . getX () ; y = e . getY () ; for ( main.GObject go : gObjects ) { if ( go . covered ( eX , eY , x , y ) ) { target . add ( go ) ; go . selected () ; } } repaint () ; } } 
private Hex getWord ( Hex index ) { int i = index . toInt () ; if ( ( i > ( ( Simpletron.MEMORY_SIZE ) - 1 ) ) || ( i < 0 ) ) fatalError ( "*** index out of bounds ***" ) ; Hex word = new Hex ( memory [ i ] ) ; if ( ( ( word . compareTo ( Simpletron.MAX_WORD ) ) > 0 ) || ( ( word . compareTo ( Simpletron.MIN_WORD ) ) < 0 ) ) { fatalError ( "*** overflow occured ***" ) ; } return word ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { switch ( view . getId () ) { case R.id.previous_button : int index = ( questionPager . getCurrentItem () ) - 1 ; questionPager . setCurrentItem ( ( index >= 0 ? index : ( questionAdapter . getCount () ) - 1 ) ) ; break; case R.id.next_button : questionPager . setCurrentItem ( ( ( ( questionPager . getCurrentItem () ) + 1 ) % ( questionAdapter . getCount () ) ) ) ; break; } } 
public double [] Project ( double [] Xrgb ) { assert ( Xrgb.length ) == 2 ; int index = pointmap [ ( ( int ) ( ( ( Xrgb [ 1 ] ) * ( Constants.WIDTH ) ) + ( Xrgb [ 0 ] ) ) ) ] ; double [] P = this . points . get ( index ) ; return P ; } 
public static float harmonic () { float oldSum = 0.0F ; float sum = 1.0F ; int n = 1 ; while ( oldSum < sum ) { oldSum = sum ; sum += 1.0F / n ; n += 1 ; if ( ( n % 100000 ) == 0 ) { java.lang.System.out . println ( ( ( ( "n = " + n ) + ", sum = " ) + sum ) ) ; } } java.lang.System.out . println ( ( ( ( "n = " + n ) + ", sum = " ) + sum ) ) ; return sum ; } 
protected void addRequestTime ( long requestTime , java.util.Map < java.lang.String , java.lang.Object > map ) { if ( ( this . includeRequestTime ) && ( requestTime > 0 ) ) { final long sec = java.util.concurrent.TimeUnit.MILLISECONDS . toSeconds ( requestTime ) ; final long ms = java.util.concurrent.TimeUnit.MILLISECONDS . toMillis ( ( requestTime - ( java.util.concurrent.TimeUnit.SECONDS . toMillis ( sec ) ) ) ) ; java.lang.String time = java.lang.String . format ( "%01d.%03d" , sec , ms ) ; if ( time != null ) { map . put ( ch.qos.logback.contrib.json.access.JsonLayout.REQUESTTIME_ATTR_NAME , time ) ; } } } 
public boolean contains ( long value ) { int hashCode = hash ( value ) ; int hashMarker = - 1 ; while ( ( ( this . table [ hashCode ] ) != null ) && ( hashCode != hashMarker ) ) { if ( ( this . table [ hashCode ] ) == value ) return true ; if ( hashMarker == ( - 1 ) ) hashMarker = hashCode ; hashCode = ( hashCode + 1 ) % ( this . table . length ) ; } return false ; } 
@ java.lang.Override public void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { if ( requestCode == ( ReminderBottomSheetDialog.UPDATE_REMINDER_REQUEST_CODE ) ) { long timestamp = data . getLongExtra ( ReminderBottomSheetDialog.TIMESTAMP_BUNDLE_KEY , 0 ) ; java.util.Calendar calendar = java.util.Calendar . getInstance () ; calendar . setTime ( new java.util.Date ( timestamp ) ) ; onReminderUpdated ( calendar ) ; } } 
public void setValue ( float v ) { if ( v < 0 ) v = 0 ; else if ( v > 1 ) v = 1 ; float newy = ( getY () ) + ( v * ( ( getHeight () ) - ( h . getHeight () ) ) ) ; h . setPosition ( h . getX () , newy ) ; } 
public static int getDepth ( java.lang.String line ) { int depth = 1 ; for ( int i = 0 ; i < ( line . length () ) ; i ++ ) { if ( ( ( line . charAt ( i ) ) == '\t' ) || ( ( line . charAt ( i ) ) == ' ' ) ) { depth ++ ; } else { break; } } return depth ; } 
@ java.lang.Override public void dataUpdated ( java.lang.Integer i ) { float maxVolume = java.lang.Math . min ( dataManager . getGlobalMaxVolumeValue () , 1000 ) ; transferFunction . setMaxOrdinates ( new java.awt.geom.Point2D.Float ( dataManager . getGlobalMaxVolumeValue () , 1.0F ) ) ; float lowestDataPoint = dataManager . getGlobalLowestVolumeValue () ; transferFunction . resetColors () ; transferFunction . setColor ( new java.awt.geom.Point2D.Float ( ( ( maxVolume / ( dataManager . getGlobalMaxVolumeValue () ) ) * lowestDataPoint ) , 0.001F ) , transferFunction . getColors () . firstEntry () . getValue () ) ; } 
private boolean pntInCircle ( double px , double py , double x1 , double y1 , double radius ) { double diffX = x1 - px ; double diffY = y1 - py ; double dist = ( diffX * diffX ) + ( diffY * diffY ) ; return dist < ( radius * radius ) ; } 
private void initStreamAudioToServer ( ) throws java.lang.Exception { android.util.Log . d ( com.ibm.watson.developer_cloud.android.speech_to_text.v1.audio.WebSocketUploader.TAG , "Connecting..." ) ; this . encoder . initEncoderWithUploader ( this ) ; if ( this . sConfig . isSSL ) this . trustServer () ; boolean rc ; rc = this . connectBlocking () ; if ( rc ) { android.util.Log . d ( com.ibm.watson.developer_cloud.android.speech_to_text.v1.audio.WebSocketUploader.TAG , "Connected" ) ; this . sendSpeechHeader () ; } else { android.util.Log . e ( com.ibm.watson.developer_cloud.android.speech_to_text.v1.audio.WebSocketUploader.TAG , "Connection failed!" ) ; this . uploadPrepared = false ; throw new java.lang.Exception ( "Connection failed!" ) ; } } 
public void put ( java.util.Map < java.lang.String , java.lang.Object > event ) { if ( ( event != null ) && ( ( event . size () ) > 0 ) ) { long sequence = ringBuffer . next () ; try { com.dtstack.logstash.assembly.disruptor.MapEvent mapEvent = ringBuffer . get ( sequence ) ; mapEvent . setEvent ( event ) ; } finally { ringBuffer . publish ( sequence ) ; } } } 
public void testIterFilterLimit () { java.lang.Iterable < siena.base.test.model.PersonUUID > people = pm . createQuery ( siena.base.test.model.PersonUUID . class ) . filter ( "n>" , 1 ) . order ( "n" ) . iter ( 1 ) ; assertNotNull ( people ) ; siena.base.test.model.PersonUUID [] array = new siena.base.test.model.PersonUUID [] { siena.base.test.BaseAsyncTest.UUID_CURIE } ; int i = 0 ; for ( siena.base.test.model.PersonUUID PersonIntKey : people ) { assertEquals ( array [ i ] , PersonIntKey ) ; i ++ ; } } 
public boolean validatePurchaseCategoryCode ( java.lang.String purchaseCategoryCode ) throws java.lang.Exception { boolean isvalid = false ; try { java.util.List < java.lang.String > validCategoris = apiDAO . getValidPurchaseCategories () ; if ( ( validCategoris . size () ) > 0 ) { for ( java.lang.String category : validCategoris ) { if ( category . equalsIgnoreCase ( purchaseCategoryCode ) ) { isvalid = true ; break; } } } } catch ( java.lang.Exception e ) { throw e ; } return isvalid ; } 
public double [] mapSubstrateOutputsToStandardOutputs ( double [] outputs ) { double [] modifiedOutputs = new double [ numOutputs ] ; if ( ( numOutputs ) == ( edu.utexas.cs.nn.tasks.gridTorus.HyperNEATNNTorusPredPreyController.NUM_OUTPUTS_WITH_NO_ACTION ) ) { modifiedOutputs [ NOTHING_INDEX ] = outputs [ edu.utexas.cs.nn.tasks.gridTorus.HyperNEATNNTorusPredPreyController.SUBSTRATE_NOTHING_INDEX ] ; } modifiedOutputs [ edu.utexas.cs.nn.gridTorus.controllers.TorusPredPreyController.UP_INDEX ] = outputs [ edu.utexas.cs.nn.tasks.gridTorus.HyperNEATNNTorusPredPreyController.SUBSTRATE_UP_INDEX ] ; modifiedOutputs [ edu.utexas.cs.nn.gridTorus.controllers.TorusPredPreyController.RIGHT_INDEX ] = outputs [ edu.utexas.cs.nn.tasks.gridTorus.HyperNEATNNTorusPredPreyController.SUBSTRATE_RIGHT_INDEX ] ; modifiedOutputs [ edu.utexas.cs.nn.gridTorus.controllers.TorusPredPreyController.DOWN_INDEX ] = outputs [ edu.utexas.cs.nn.tasks.gridTorus.HyperNEATNNTorusPredPreyController.SUBSTRATE_DOWN_INDEX ] ; modifiedOutputs [ edu.utexas.cs.nn.gridTorus.controllers.TorusPredPreyController.LEFT_INDEX ] = outputs [ edu.utexas.cs.nn.tasks.gridTorus.HyperNEATNNTorusPredPreyController.SUBSTRATE_LEFT_INDEX ] ; return modifiedOutputs ; } 
@ java.lang.Override public int hashCode () { final int prime = 31 ; int result = 1 ; result = ( prime * result ) + ( ( discordUserInfo ) == null ? 0 : discordUserInfo . hashCode () ) ; result = ( prime * result ) + ( ( kagName ) == null ? 0 : kagName . toLowerCase () . hashCode () ) ; return result ; } 
@ org.testng.annotations.Test public void testUseIndexWithOr ( ) throws java.lang.Exception { long idxUsagesBefore = indexUsages ( db ) ; java.util.List < com.orientechnologies.orient.core.record.impl.ODocument > qResult = db . command ( new com.orientechnologies.orient.core.sql.OCommandSQL ( "select * from foo where bar = 2 or name ='a' and bar >= 0" ) ) . execute () ; assertEquals ( qResult . size () , 2 ) ; assertEquals ( indexUsages ( db ) , ( idxUsagesBefore + 2 ) ) ; } 
protected amidst.map.layers.EndCityLayer.ChunkProbability hasSuitableIslandFoundation ( amidst.map.Fragment_TheEnd frag , int chunkX , int chunkZ ) { amidst.map.layers.EndCityLayer.ChunkProbability result = amidst.map.layers.EndCityLayer.ChunkProbability.None ; float requiredInfluence = 60 ; java.util.List < amidst.map.EndIsland > islands = frag . getEndIslands () ; for ( amidst.map.EndIsland island : islands ) { float influence = island . influenceAtChunk ( chunkX , chunkZ ) ; if ( influence >= 0.0 ) { if ( influence >= requiredInfluence ) { result = amidst.map.layers.EndCityLayer.ChunkProbability.Likely ; break; } else { result = amidst.map.layers.EndCityLayer.ChunkProbability.Possible ; } } } return result ; } 
public java.lang.Object invokeMethod ( java.lang.reflect.Method method , java.lang.Object object , java.lang.Object . . . args ) { try { boolean a = ! ( method . isAccessible () ) ; if ( ! ( method . isAccessible () ) ) { method . setAccessible ( true ) ; } java.lang.Object obj = method . invoke ( object , args ) ; if ( a ) { method . setAccessible ( false ) ; } return obj ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; return null ; } } 
public void handleResetButtonAction ( javafx.event.ActionEvent event ) throws java.io.IOException { java.lang.System.out . println ( "reseting level" ) ; int i ; try { i = java.lang.Integer . parseInt ( levelNumber . getText () ) ; } catch ( java.lang.Exception e ) { return; } resetButtons () ; resetFields ( i ) ; resetBoard ( i ) ; resetPieces () ; } 
@ java.lang.Override protected void onResume () { super . onResume () ; isFirstScan = true ; registerReceiver ( mWifiScanReceiver , new android.content.IntentFilter ( android.net.wifi.WifiManager.SCAN_RESULTS_AVAILABLE_ACTION ) ) ; android.content.IntentFilter filter = new android.content.IntentFilter () ; filter . addAction ( WifiManager.NETWORK_STATE_CHANGED_ACTION ) ; filter . addAction ( ConnectivityManager.CONNECTIVITY_ACTION ) ; registerReceiver ( mWifiChangeReceiver , filter ) ; boolean mSuccess = false ; mSuccess = mWifiManger . startScan () ; showProgressDialog ( "Scan WiFi..." ) ; } 
private synchronized double semestrialCorrection ( final double param ) { final int debeq_pr = 59 ; final int debeq_au = 244 ; final double result ; if ( ( cachedDay ) >= 100 ) { final double xmult = ( ( cachedDay ) - debeq_au ) / 40.0 ; result = param - ( ( 2.0 * param ) * xmult ) ; } else { final double xmult = ( ( cachedDay ) - debeq_pr ) / 40.0 ; result = ( ( 2.0 * param ) * xmult ) - param ; } return result ; } 
private void SendFileContent ( java.net.Socket conn , java.io.InputStream fileIs ) throws java.io.IOException { java.io.OutputStream os = conn . getOutputStream () ; byte [] b = new byte [ 1024 ] ; int x = fileIs . read ( b ) ; while ( x != ( - 1 ) ) { if ( x < 1024 ) { b = java.util.Arrays . copyOf ( b , x ) ; } os . write ( b ) ; x = fileIs . read ( b ) ; } } 
public org.apache.jackrabbit.core.security.authorization.AbstractCompiledPermissions.Result combine ( org.apache.jackrabbit.core.security.authorization.AbstractCompiledPermissions.Result other ) { int cAllows = ( allows ) | ( org.apache.jackrabbit.core.security.authorization.Permission . diff ( other.allows , denies ) ) ; int cDenies = ( denies ) | ( org.apache.jackrabbit.core.security.authorization.Permission . diff ( other.denies , allows ) ) ; org.apache.jackrabbit.core.security.authorization.PrivilegeBits cAPrivs = org.apache.jackrabbit.core.security.authorization.PrivilegeBits . getInstance ( allowPrivileges ) ; cAPrivs . addDifference ( other.allowPrivileges , denyPrivileges ) ; org.apache.jackrabbit.core.security.authorization.PrivilegeBits cdPrivs = org.apache.jackrabbit.core.security.authorization.PrivilegeBits . getInstance ( denyPrivileges ) ; cdPrivs . addDifference ( other.denyPrivileges , allowPrivileges ) ; return new org.apache.jackrabbit.core.security.authorization.AbstractCompiledPermissions.Result ( cAllows , cDenies , cAPrivs , cdPrivs ) ; } 
public int getTotalPoints () { int points = 0 ; for ( int i = 0 ; i < ( this . cards . size () ) ; i ++ ) { points += this . cards . get ( i ) . getPoints () ; } return points ; } 
@ java.lang.Override public void dispose () { if ( ( timer ) != null ) timer . stop () ; byte option = ( ( byte ) ( javax.swing.JOptionPane . showConfirmDialog ( this , "Exit all programs?" , "Exit Confirmation" , javax.swing.JOptionPane.YES_NO_CANCEL_OPTION ) ) ) ; if ( option == ( javax.swing.JOptionPane.YES_OPTION ) ) { java.lang.System . exit ( 0 ) ; } else if ( option == ( javax.swing.JOptionPane.NO_OPTION ) ) { super . dispose () ; } } 
private boolean assertContiguous ( gnu.trove.list.TIntList list ) { if ( ( list . size () ) < 2 ) { return true ; } int prev = list . get ( 0 ) ; for ( int i = 1 ; i < ( list . size () ) ; ++ i ) { int v = list . get ( i ) ; if ( v == ( prev + 1 ) ) { prev = v ; continue; } return false ; } return true ; } 
private void setPortraitAspectRatio () { double param = ( ( double ) ( mDisplayMetrics.widthPixels ) ) / ( ( double ) ( mDisplayMetrics.heightPixels ) ) ; for ( com.beautiful_wallpapers_hd_qhd.activity.CropImageActivity.ImageSizes size : com.beautiful_wallpapers_hd_qhd.activity.CropImageActivity.ImageSizes . values () ) { if ( ( param > ( ( size . getRatio () ) - 0.01 ) ) && ( param < ( ( size . getRatio () ) + 0.01 ) ) ) { setAspectRatio ( size . getWidth () , size . getHeight () ) ; break; } } } 
private boolean playerIsLastToClose ( int number ) { for ( spare.n52.yadarts.entity.Player p : this . cricketScores . keySet () ) { spare.n52.yadarts.games.cricket.CricketScore s = this . cricketScores . get ( p ) ; if ( ( p != ( this . currentPlayer ) ) && ( ! ( s . playerHasOpened ( number ) ) ) ) { return false ; } } return true ; } 
public static int [] generateDescending ( int size ) { int [] tab = new int [ size ] ; for ( int i = 0 ; i < size ; i ++ ) { tab [ i ] = size - i ; } return tab ; } 
public void sendPacket ( org.mcexchange.Packet p ) { try { byte id = org.mcexchange.Packet . getId ( p ) ; out . writeByte ( id ) ; p . write ( out ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } catch ( java.lang.NullPointerException e ) { java.lang.System.err . println ( ( ( "Tried to send an unregistered packet to Client " + ( this ) ) + "!" ) ) ; disconnect () ; } } 
private void updateLocation ( android.location.Location location ) { mCurrentLocation = location ; double latitude = mCurrentLocation . getLatitude () ; double longitude = mCurrentLocation . getLongitude () ; stationManager . updateLocation ( latitude , longitude ) ; route = stationManager . updateNexttation ( route ) ; setRouteTravel () ; binding.estimateTime . setText ( ( ( ( ( "ถึงสถานี" + ( desName ) ) + " ในอีก " ) + ( stationManager . updateTimeToArrive () ) ) + " นาที" ) ) ; } 
protected void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { switch ( requestCode ) { case net.lorenzobianconi.wwatcher.WWatcher.REQ_ENABLE_BT : btEnabled = resultCode == ( RESULT_OK ) ; configureButton ( btEnabled , false ) ; break; case net.lorenzobianconi.wwatcher.WWatcher.REQ_PICK_DEV : if ( data != null ) { java.lang.String addr = data . getExtras () . getString ( "device" ) ; android.bluetooth.BluetoothDevice device = inqMap . get ( addr ) ; new net.lorenzobianconi.wwatcher.WWatcher.BtConnect () . execute ( device ) ; } break; default: break; } } 
public static int next ( int digit , int size ) { int nextVal = 0 ; while ( odometer.Odometer . isValid ( digit , size ) ) { nextVal = digit ++ ; if ( ( ( digit % 10 ) ^ ( size + 1 ) ) == 1 ) { nextVal = 1 ; } } return nextVal ; } 
private java.lang.String [] arrayListToArray ( java.util.ArrayList < java.lang.String > needingConversion ) { int count = needingConversion . size () ; java.lang.String [] converted = new java.lang.String [ count ] ; for ( int i = 0 ; i < count ; i ++ ) { converted [ i ] = needingConversion . get ( i ) ; } return converted ; } 
public int getFlag ( int flag ) { int flagVal = 0 ; int flagReg = ( registers [ Z80.REGISTER_F ] ) & flag ; switch ( flag ) { case Z80.FLAG_ZERO : flagVal = flagReg > > > 7 ; break; case Z80.FLAG_SUBTRACT : flagVal = flagReg > > > 6 ; break; case Z80.FLAG_HALFCARRY : flagVal = flagReg > > > 5 ; break; case Z80.FLAG_CARRY : flagVal = flagReg > > > 4 ; break; } return flagVal ; } 
public void onBlockDialogInitialize () { int phoneId = getActivePhoneId () ; com.android.incallui.Log . d ( this , ( ( ( "onBlock mCallId:" + ( mCallId ) ) + "phoneId:" ) + phoneId ) ) ; if ( phoneId == ( - 1 ) ) { return; } com.android.incallui.Call call = mCall [ phoneId ] ; final java.lang.String number = call . getNumber () ; final android.content.Context context = getUi () . getContext () ; mBlockContactHelper = new com.android.contacts.common.util.BlockContactHelper ( context ) ; mBlockContactHelper . setContactInfo ( number ) ; } 
protected long getNumberRecursion ( long n ) { int sum = 0 ; if ( n == 0 ) return 1 ; else if ( n == 1 ) return 0 ; else if ( n == 2 ) return 1 ; for ( int k = 1 ; k <= n ; k ++ ) { sum += ( sequenceGeneratorA008472 . getNumber ( k ) ) * ( getNumberRecursion ( ( n - k ) ) ) ; } return sum / n ; } 
public static com.xeiam.xchange.coinbaseex.service.CoinbaseExDigest createInstance ( java.lang.String secretKey ) { if ( secretKey == null ) { return null ; } try { return new com.xeiam.xchange.coinbaseex.service.CoinbaseExDigest ( si.mazi.rescu.utils.Base64 . decode ( secretKey ) ) ; } catch ( java.io.IOException e ) { throw new com.xeiam.xchange.exceptions.ExchangeException ( "Cannot decode secret key" ) ; } } 
@ org.junit.Test public void exercizeParser () { java.lang.String json = "{\"a\":\"y  e a!\", \"b\":\"bee\\\"\", \"newobj\":\"go\\\"ood\",\"test\":[{\"arrayname\":[]}], \"t2\":{ \"num\":0.23e-3}, \"bool\":   trUe, \"nullname\":nuLl, \"nottrue\":False}" ; int [] expEventSeq = new int [] { org.jsonps.GeneralEx.TestListener.EVENT_STARTOBJ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_VALUE , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_VALUE , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_VALUE , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_STARTARR , org.jsonps.GeneralEx.TestListener.EVENT_STARTOBJ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_STARTARR , org.jsonps.GeneralEx.TestListener.EVENT_ENDARR , org.jsonps.GeneralEx.TestListener.EVENT_ENDOBJ , org.jsonps.GeneralEx.TestListener.EVENT_ENDARR , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_STARTOBJ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_NUM , org.jsonps.GeneralEx.TestListener.EVENT_ENDOBJ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_SEQ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_SEQ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_SEQ , org.jsonps.GeneralEx.TestListener.EVENT_ENDOBJ } ; testInstance ( json , expEventSeq ) ; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) public void enqueue ( java.lang.Object element ) { int s = size () ; if ( s == ( ( n ) - 1 ) ) resize () ; queueArray [ ( ( rear ) ++ ) ] = ( ( T ) ( element ) ) ; if ( ( rear ) == ( n ) ) rear = 0 ; } 
@ java.lang.Override public boolean contains ( java.lang.String s ) { if ( ( _value ) != null ) { int compr = s . compareTo ( _value ) ; if ( compr == 0 ) return true ; else if ( ( compr < 0 ) && ( ( _left ) != null ) ) return _left . contains ( s ) ; else if ( ( compr > 0 ) && ( ( _right ) != null ) ) return _right . contains ( s ) ; } return false ; } 
protected int addView ( com.tonicartos.superslim.LayoutState.View child , int position , com.tonicartos.superslim.LayoutManager.Direction direction , com.tonicartos.superslim.LayoutState state ) { int addIndex ; if ( direction == ( LayoutManager.Direction.START ) ) { addIndex = 0 ; } else { addIndex = mLayoutManager . getChildCount () ; } state . decacheView ( position ) ; mLayoutManager . addView ( child.view , addIndex ) ; return addIndex ; } 
public void updateUI () { int prevBtnVisibility = android.view.View.VISIBLE ; int nextBtnVisibility = android.view.View.VISIBLE ; if ( ( itemIndex ) == 0 ) { prevBtnVisibility = android.view.View.INVISIBLE ; } if ( ( itemIndex ) == ( ( shareClipExperience . getChildrenContents () . size () ) - 1 ) ) { nextBtnVisibility = android.view.View.INVISIBLE ; } prevClipButton . setVisibility ( prevBtnVisibility ) ; nextClipButton . setVisibility ( nextBtnVisibility ) ; mediaController . hide () ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { android.widget.Spinner fishList = ( ( android.widget.Spinner ) ( findViewById ( R.id.fishCaughtSpinner ) ) ) ; int index = fishList . getSelectedItemPosition () ; android.content.Intent intent = new android.content.Intent ( v . getContext () , com.app.fish.catchreport.LiveAddFishActivity . class ) ; intent . putExtra ( "TripInfo" , trip ) ; intent . putExtra ( "Fish" , index ) ; startActivity ( intent ) ; } 
public static int calculateInSampleSize ( android.graphics.BitmapFactory.Options options , final int reqWidth , final int reqHeight ) { final int height = options.outHeight ; final int width = options.outWidth ; int inSampleSize = 1 ; if ( ( height > reqHeight ) || ( width > reqWidth ) ) { final int halfHeight = height / 2 ; final int halfWidth = width / 2 ; while ( ( ( halfHeight / inSampleSize ) > reqHeight ) || ( ( halfWidth / inSampleSize ) > reqWidth ) ) { inSampleSize *= 2 ; } } return inSampleSize ; } 
@ java.lang.Override public int makeMove () { java.util.Scanner keyboard = new java.util.Scanner ( java.lang.System.in ) ; int input = 0 ; do { try { java.lang.System.out . println ( "Make your move (1)Hit or (2)Stay " ) ; input = keyboard . nextInt () ; } catch ( java.util.InputMismatchException e ) {} } while ( ( input < 1 ) || ( input > 2 ) ) ; return input ; } 
public void colsum ( int [] histogram ) { col_idx [ 0 ] = 0 ; int index = 0 ; for ( int i = 1 ; i <= ( numCols ) ; i ++ ) { col_idx [ i ] = index += histogram [ ( i - 1 ) ] ; } java.lang.System . arraycopy ( col_idx , 0 , histogram , 0 , numCols ) ; nz_length = index ; growMaxLength ( nz_length , false ) ; } 
public void updateTimestepAccel ( Body other ) { double d = distance ( other ) ; double sum = 0 ; for ( int i = 0 ; i < 3 ; i ++ ) { double a = ( ( Constants.G ) * ( other.mass ) ) * ( ( other.position [ i ] ) - ( position [ i ] ) ) ; deltaAccel [ i ] += a / ( ( d * d ) * d ) ; sum += deltaAccel [ i ] ; } } 
public short getShort ( ) throws com.wiredtiger.db.WiredTigerPackingException { boolean signed = true ; format . checkType ( 'h' , false ) ; if ( ( format . getType () ) == 'H' ) { signed = false ; } format . consume () ; return unpackShort ( signed ) ; } 
public void setMotorSpeeds ( double left , double right , boolean usePID ) { double scale = java.lang.Math . max ( java.lang.Math . abs ( left ) , java.lang.Math . abs ( right ) ) ; if ( scale > 1 ) { left = left / scale ; right = right / scale ; } mLeftDrive . setSpeed ( left ) ; mLeftDrive . setUsePID ( usePID ) ; mRightDrive . setSpeed ( right ) ; mRightDrive . setUsePID ( usePID ) ; } 
@ java.lang.Override public org.ggp.base.util.statemachine.MachineState toGdl ( org.apache.lucene.util.OpenBitSet state ) { java.util.Set < org.ggp.base.util.gdl.grammar.GdlSentence > bases = new java.util.HashSet < org.ggp.base.util.gdl.grammar.GdlSentence > () ; int [] baseProps = propNet . getBasePropositions () ; for ( int i = state . nextSetBit ( 0 ) ; i != ( - 1 ) ; i = state . nextSetBit ( ( i + 1 ) ) ) { bases . add ( gdlSentenceMap . get ( ( ( baseOffset ) + i ) ) ) ; } return new org.ggp.base.util.statemachine.MachineState ( bases ) ; } 
@ java.lang.Override public void execute () { double translationPower = leftJoystick . getVector () . getMagnitude () ; setTargetHeading () ; double headingError = poseSubsystem . getCurrentHeading () . difference ( targetHeadingSupplier . getAsDouble () ) ; double rotationPower = - ( headingDrivePid . calculate ( 0 , headingError ) ) ; driveSubsystem . tankDrivePowerMode ( ( translationPower - rotationPower ) , ( translationPower + rotationPower ) ) ; } 
boolean add ( E item ) { boolean newItem = ! ( this . linkedHashSet . remove ( item ) ) ; this . linkedHashSet . add ( item ) ; if ( ( this . linkedHashSet . size () ) >= ( com.box.sdk.LRUCache.MAX_SIZE ) ) { java.util.Iterator < E > it = this . linkedHashSet . iterator () ; it . next () ; it . remove () ; } return newItem ; } 
public void remove ( java.lang.String [] parm ) { java.lang.String nId = parm [ 0 ] ; org.zywx.wbpalmstar.plugin.uexLocalNotification.EAlarmReceiver . cancelAlerm ( mContext , nId ) ; if ( ( ( org.zywx.wbpalmstar.plugin.uexLocalNotification.EUexLocalNotify.map ) != null ) && ( org.zywx.wbpalmstar.plugin.uexLocalNotification.EUexLocalNotify.map . containsKey ( nId ) ) ) { int id = org.zywx.wbpalmstar.plugin.uexLocalNotification.EUexLocalNotify.map . get ( nId ) ; org.zywx.wbpalmstar.plugin.uexLocalNotification.EUexLocalNotify.map . remove ( nId ) ; if ( ( notificationManager ) != null ) { notificationManager . cancel ( id ) ; } } } 
int valueToInt ( java.lang.Object value , int defaultValue ) { int reply = defaultValue ; if ( ( value != null ) && ( value instanceof java.lang.String ) ) { try { reply = java.lang.Integer . valueOf ( ( ( java.lang.String ) ( value ) ) ) ; } catch ( java.lang.NumberFormatException ex ) { reply = defaultValue ; } } return reply ; } 
public org.osgl.util.S.Buffer prepend ( java.lang.StringBuffer sb ) { if ( sb == null ) return appendNull () ; int len = sb . length () ; ensureCapacityInternal ( ( ( count ) + len ) ) ; java.lang.System . arraycopy ( value , 0 , value , len , count ) ; sb . getChars ( 0 , len , value , 0 ) ; count += len ; return this ; } 
public static void assertEquals ( java.lang.Object expected , java.lang.Object actual , java.lang.String message ) { boolean condition ; if ( expected == null ) { condition = actual == null ; } else { condition = expected . equals ( actual ) ; } com.triangleleft.assertdialog.AssertDialog . assertTrue ( condition , message ) ; } 
private void copyId ( java.lang.String id ) { android.content.ClipboardManager clipboard = ( ( android.content.ClipboardManager ) ( getSystemService ( Context.CLIPBOARD_SERVICE ) ) ) ; android.content.ClipData clip = android.content.ClipData . newPlainText ( "ID" , id ) ; clipboard . setPrimaryClip ( clip ) ; java.lang.CharSequence dialogText = "Object id copied to clipboard" ; int duration = android.widget.Toast.LENGTH_SHORT ; android.widget.Toast . makeText ( this , dialogText , duration ) . show () ; } 
public long getNextChapterStart ( long position ) { long ret = com.monsterbutt.homeview.plex.media.PlexVideoItem.BAD_CHAPTER_START ; if ( hasChapters () ) { for ( com.monsterbutt.homeview.plex.media.Chapter chapter : mVideo . getChapters () ) { if ( ( chapter . getStartTimeOffset () ) >= position ) { ret = chapter . getStartTimeOffset () ; break; } } } return ret ; } 
public static void index () { com.google.gson.Gson gson = new com.google.gson.Gson () ; int statsCount = ( ( int ) ( controllers.DailyStat . count () ) ) ; java.util.List < controllers.DailyStat > dailyStats = controllers.DailyStat . all () . from ( ( statsCount - 5 ) ) . fetch ( 5 ) ; if ( dailyStats != null ) { render ( dailyStats ) ; } else { renderHtml ( "empty" ) ; } } 
public Move makeMove ( BoardAndRack bar ) { java.lang.System.out . println ( "Input word including tiles on board, ex. \"DOG\"" ) ; java.lang.String word = getNextLine () ; java.lang.System.out . println ( "Input starting position (leftmost or topmost) including tiles on board ex. \"(1,3)\"" ) ; Position p = new Position ( getNextLine () ) ; java.lang.System.out . println ( "Is horizontal move? Y/N ex. \"Y\"" ) ; boolean isHorizontal = s . nextLine () . equals ( "Y" ) ; Move m = bar.board . convertToMove ( new PossibleMove ( word , p.x , p.y , isHorizontal ) ) ; java.lang.System.out . println ( m . toString () ) ; return m ; } 
public int base2int ( char base ) { int intVal = - 1 ; switch ( base ) { case 'A' : intVal = 0 ; break; case 'C' : intVal = 1 ; break; case 'G' : intVal = 2 ; break; case 'T' : intVal = 3 ; break; case 'N' : intVal = 4 ; break; default: throw new java.lang.IllegalArgumentException ( ( "Invalid character: " + base ) ) ; } return intVal ; } 
public int run () { int exponent = 1000 ; java.math.BigInteger base = java.math.BigInteger . valueOf ( 2 ) ; java.math.BigInteger value = java.math.BigInteger.ZERO ; int sum = 0 ; value = base . pow ( exponent ) ; java.lang.String str = value . toString () ; for ( int i = 0 ; i < ( str . length () ) ; i ++ ) sum += ( ( int ) ( ( str . charAt ( i ) ) - '0' ) ) ; return sum ; } 
public static int findMaxArg ( int upperBound , int lowerBound , int page ) { int maxCandidate = 0 ; java.lang.Double maxCandidateValue = 0.0 ; for ( int i = lowerBound ; i < upperBound ; i ++ ) { if ( ( pagenumber.Viterbi.viterbiPages . get ( page ) . get ( i ) ) > maxCandidateValue ) { maxCandidateValue = pagenumber.Viterbi.viterbiPages . get ( page ) . get ( i ) ; maxCandidate = i ; } } return maxCandidate ; } 
@ java.lang.Override public boolean add ( final E elem ) { boolean res = false ; try { lock . lock () ; res = super . add ( elem ) ; if ( res ) added . signal () ; } finally { lock . unlock () ; } return res ; } 
@ java.lang.Override public void onResult ( com.google.android.gms.plus.People.LoadPeopleResult peopleData ) { if ( ( peopleData . getStatus () . getStatusCode () ) == ( com.google.android.gms.common.api.CommonStatusCodes.SUCCESS ) ) { com.google.android.gms.plus.model.people.PersonBuffer personBuffer = peopleData . getPersonBuffer () ; try { int count = personBuffer . getCount () ; } finally { personBuffer . close () ; } } } 
private static int getMinMatchingLabel ( LabeledNeighbor [] neighbors , byte currentColorValue ) { int minMatchingLabel = java.lang.Integer.MAX_VALUE ; for ( LabeledNeighbor neighbor : neighbors ) { int label = neighbor . getLabel () ; if ( ( ( label > 0 ) && ( label < minMatchingLabel ) ) && ( currentColorValue == ( neighbor . getColor () ) ) ) { minMatchingLabel = label ; } } if ( minMatchingLabel != ( java.lang.Integer.MAX_VALUE ) ) { return minMatchingLabel ; } else { return 0 ; } } 
public void run () { byte [] buffer = new byte [ 1024 ] ; int bytes ; while ( true ) { try { bytes = mmInStream . read ( buffer ) ; mHandler . obtainMessage ( 3 , bytes , ( - 1 ) , buffer ) . sendToTarget () ; } catch ( java.io.IOException e ) {} } } 
@ java.lang.Override protected void onDestroy () { super . onDestroy () ; if ( ( mReceivedPermissions ) == null ) { return; } for ( int i = 0 ; i < ( mReceivedPermissions.length ) ; i ++ ) { java.lang.String permission = mReceivedPermissions [ i ] ; int result = mReceivedPermissionsResults [ i ] ; io.jasonatwood.permissionmanager.PermissionManager . onPermissionResponse ( permission , result ) ; } } 
@ java.lang.Override public r48.RubyIO targetToBound ( r48.RubyIO target ) { long t = target.fixnumVal ; long type = 0 ; if ( t >= 10000 ) { t -= 10000 ; type ++ ; } r48.RubyIO base = new r48.RubyIO () ; base.arrVal = new r48.RubyIO [ 2 ] ; base.type = '[' ; base.arrVal [ 0 ] = new r48.RubyIO () . setFX ( type ) ; base.arrVal [ 1 ] = new r48.RubyIO () . setFX ( t ) ; return base ; } 
public static void main ( java.lang.String [] args ) { java.util.Scanner scanIn = new java.util.Scanner ( java.lang.System.in ) ; long n ; java.lang.System.out . print ( "Nhap so n: " ) ; n = scanIn . nextInt () ; java.lang.System.out . print ( ( ( ( "Tong cac so chan nho hon " + n ) + " la:" ) + ( tinhtongdemo.TinhTongDemo . TinhTong ( n ) ) ) ) ; } 
public void buildQuad ( int index , com.nucleus.shader.ShaderProgram program , com.nucleus.vecmath.Rectangle rectangle ) { int vertexStride = program . getVertexStride () ; float [] quadPositions = com.nucleus.geometry.MeshBuilder . createQuadPositionsIndexed ( rectangle , vertexStride , 0 ) ; com.nucleus.geometry.MeshBuilder . buildQuad ( this , program , index , quadPositions ) ; prepareUV ( mapper , 1 , index ) ; } 
public void calculateFragLen () { java.util.Collections . sort ( getPosTags () ) ; for ( int posValue : getPosTags () ) { java.util.Set < java.lang.Integer > subList = getNegTags () . subSet ( posValue , ( posValue + 5000 ) ) ; for ( int negValue : subList ) { fragLen = negValue - posValue ; if ( ( ( fragLen ) > 0 ) && ( ( fragLen ) <= 2000 ) ) { ( getCounts () [ ( ( fragLen ) - 1 ) ] ) ++ ; } } } } 
protected void addTurretAngle ( float deltaTurretAngle , int delta ) { float cleanDeltaTurret = kylevedder.com.github.utils.Utils . wrapAngleDelta ( deltaTurretAngle ) ; float turretRateCap = ( delta > 0 ) ? ( ( this . TURRET_TURN_RATE ) / 1000 ) * delta : 0 ; this . turretAngle = kylevedder.com.github.utils.Utils . wrapAngle ( this . turretAngle , kylevedder.com.github.utils.Utils . clampFloat ( cleanDeltaTurret , ( - turretRateCap ) , turretRateCap ) ) ; } 
public static void main ( java.lang.String [] args ) { double inches ; double meters ; int counter ; counter = 0 ; for ( inches = 1 ; inches <= 144 ; inches ++ ) { meters = inches / 39.37 ; java.lang.System.out . println ( ( ( ( inches + "inches is " ) + meters ) + "meters." ) ) ; counter ++ ; if ( counter == 12 ) { java.lang.System.out . println () ; counter = 0 ; } } } 
public Common.Message toMessage () { Common.Message listMsg ; java.lang.String content = "" ; int i = 0 ; for ( Common.User item : this . usersList ) { if ( i == 0 ) { content = item . getUsername () ; } else { content = ( content + " " ) + ( item . getUsername () ) ; } i ++ ; } listMsg = new Common.Message ( content , new Common.User ( "Server" ) , MessageType.DATA ) ; return listMsg ; } 
@ java.lang.Override public void run () { final int musicVolume = getConfig () . getVolume () ; float volume = 1 - ( ( float ) ( ( java.lang.Math . log ( 0 ) ) / ( java.lang.Math . log ( musicVolume ) ) ) ) ; mediaPlayer . setVolume ( volume , volume ) ; mediaPlayer . start () ; } 
protected java.util.ArrayList < java.lang.String > getLabelsFromData () { int size = ( ( chartView.data . size () ) > 0 ) ? chartView.data . get ( 0 ) . size () : 0 ; java.util.ArrayList < java.lang.String > result = new java.util.ArrayList < java.lang.String > ( size ) ; for ( int i = 0 ; i < size ; i ++ ) result . add ( chartView.data . get ( 0 ) . getLabel ( i ) ) ; return result ; } 
private synchronized void openNextDeath () { nextElementToDie = sortedElementsSet . first () ; timerTask = new java.util.TimerTask () { @ java.lang.Override public void run () { killNextElement () ; } } ; long deathTimeMillis = nextElementToDie.deathTime . toDateTime () . getMillis () ; long nowMillis = new org.joda.time.LocalDateTime () . toDateTime () . getMillis () ; long delay = java.lang.Math . max ( 0 , ( deathTimeMillis - nowMillis ) ) ; timer . schedule ( timerTask , delay ) ; } 
@ org.junit.Test public void getTotalSequencesIterated ( ) throws java.lang.Exception { randoop.generation.exhaustive.SequenceGenerator < java.lang.String > sgenLarger = new randoop.generation.exhaustive.SequenceGenerator ( largerSet ) ; long beforeIterateLarger = sgenLarger . getTotalSequencesIterated () . longValue () ; int numberOfSequencesToGenerate = 13 ; for ( int i = 0 ; i < numberOfSequencesToGenerate ; i ++ ) { sgenLarger . next () ; } org.junit.Assert . assertEquals ( 0 , beforeIterateLarger ) ; org.junit.Assert . assertEquals ( numberOfSequencesToGenerate , sgenLarger . getTotalSequencesIterated () . intValue () ) ; } 
public boolean determineSize ( long recordsReadInCurrentPass , java.lang.Integer lengthVarFieldsInCurrentRecord ) throws java.io.IOException { if ( readPage () ) { return true ; } if ( processPageData ( ( ( int ) ( recordsReadInCurrentPass ) ) ) ) { return true ; } lengthVarFieldsInCurrentRecord = - 1 ; return checkVectorCapacityReached () ; } 
@ java.lang.Override public N getNodeAt ( int index ) { if ( ( ( sourceNodes ) != null ) && ( index < ( sourceNodes . size () ) ) ) { return sourceNodes . get ( index ) ; } if ( ( sinkNodes ) != null ) { int sinkIndex = ( ( sourceNodes ) == null ) ? index : index - ( sourceNodes . size () ) ; return sinkNodes . get ( sinkIndex ) ; } throw new java.lang.IndexOutOfBoundsException () ; } 
private void jButton1ActionPerformed ( java.awt.event.ActionEvent evt ) { mdHotels = ( ( javax.swing.table.DefaultTableModel ) ( jTableHotels . getModel () ) ) ; if ( ( jTableHotels . getSelectedRowCount () ) == 0 ) { javax.swing.JOptionPane . showMessageDialog ( this , "please select the Hotel to delete" ) ; return; } java.lang.String HotelName ; int TempSelectRow = jTableHotels . getSelectedRow () ; HotelName = mdHotels . getValueAt ( TempSelectRow , 0 ) . toString () ; deleteHotel ( HotelName ) ; mdHotels . removeRow ( jTableHotels . getSelectedRow () ) ; } 
@ android.support.annotation.Nullable public static java.lang.String loadJSONFromAsset ( @ android.support.annotation.NonNull android.content.Context context , @ android.support.annotation.NonNull java.lang.String fileName ) { java.lang.String json ; try { java.io.InputStream is = context . getAssets () . open ( fileName ) ; int size = is . available () ; byte [] buffer = new byte [ size ] ; is . read ( buffer ) ; is . close () ; json = new java.lang.String ( buffer , "UTF-8" ) ; } catch ( java.io.IOException ex ) { ex . printStackTrace () ; return null ; } return json ; } 
public static void main ( java.lang.String [] args ) { if ( ( args.length ) == 1 ) { try { int starWarsSequence = java.lang.Integer . parseInt ( args [ 0 ] ) ; java.lang.System.out . println ( ( "Star Wars sequance: " + starWarsSequence ) ) ; } catch ( java.lang.NumberFormatException e ) { java.lang.System.err . println ( ( ( "Argument" + ( args [ 0 ] ) ) + " must be an integer." ) ) ; java.lang.System . exit ( 2 ) ; } } else { java.lang.System.err . println ( "There must be exactly 1 argument." ) ; java.lang.System . exit ( 1 ) ; } } 
private int toInteger ( org.jackace.jawascriptexecutive.Executor.JawaObjectRef o ) throws org.jackace.jawascriptexecutive.Executor.JawascriptRuntimeException { if ( ( o.object ) instanceof java.lang.Double ) { int magnitude = ( ( int ) ( ( long ) ( java.lang.Math . floor ( java.lang.Math . abs ( ( ( java.lang.Double ) ( o.object ) ) ) ) ) ) ) ; int sign = ( ( ( java.lang.Double ) ( o.object ) ) >= 0 ) ? 1 : - 1 ; return magnitude * sign ; } throw new org.jackace.jawascriptexecutive.Executor.JawascriptRuntimeException ( "Not yet implemented conversion." ) ; } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { int id = item . getItemId () ; switch ( id ) { case android.R.id.home : android.util.Log . d ( "hi" , android.support.v4.app.NavUtils . getParentActivityName ( this ) ) ; android.support.v4.app.NavUtils . navigateUpFromSameTask ( this ) ; return true ; case R.id.action_settings : return true ; } return super . onOptionsItemSelected ( item ) ; } 
public org.matsim.contrib.zone.Zone getZone ( org.matsim.contrib.zone.Coord coord ) { int r = ( ( int ) ( ( ( coord . getY () ) - ( minY ) ) / ( cellSize ) ) ) ; int c = ( ( int ) ( ( ( coord . getX () ) - ( minX ) ) / ( cellSize ) ) ) ; return zones [ ( ( r * ( cols ) ) + c ) ] ; } 
@ org.junit.Test public void getCurrentCallValue_input_returns () { int smallBlind = 30 ; int credits = 100 ; pokerController . setDealer ( pokerController . getPlayerList () . get ( 0 ) ) ; pokerController . setStartCredits ( credits ) ; pokerController . setBlinds ( smallBlind ) ; pokerController . startGame ( 0 ) ; org.junit.Assert . assertEquals ( pokerController . getPlayerList () . get ( 0 ) , pokerController . getCurrentPlayer () ) ; int callValue = pokerController . getCurrentCallValue () ; org.junit.Assert . assertEquals ( ( smallBlind * 2 ) , callValue ) ; } 
private int element_manhattan ( int i , int j , int index ) { int ori_i = ( index - 1 ) / ( dimension () ) ; int ori_j = ( index - ( ori_i * ( dimension () ) ) ) - 1 ; int idistance = java.lang.Math . abs ( ( i - ori_i ) ) ; int jdistance = java.lang.Math . abs ( ( j - ori_j ) ) ; return idistance + jdistance ; } 
public MiniJavaVar findVar ( java.lang.String varName ) { int n = contexts . size () ; for ( n -= 1 ; n >= 0 ; n -- ) { MiniJavaVar findRes = contexts . get ( n ) . vars . get ( varName ) ; if ( findRes != null ) { return findRes ; } } return null ; } 
@ java.lang.Override public org.boxfox.dms.utilities.json.EasyJsonObject action ( org.boxfox.dms.utilities.actions.support.Sender sender , int command , org.boxfox.dms.utilities.json.EasyJsonObject requestObject ) throws java.sql.SQLException { java.lang.String title = requestObject . getString ( "title" ) ; java.lang.String content = requestObject . getString ( "question_content" ) ; java.lang.String writer = requestObject . getString ( "writer" ) ; boolean privacy = requestObject . getBoolean ( "privacy" ) ; int status = database . executeUpdate ( "INSERT INTO qna(title, question_content, question_date, writer, privacy) VALUES('" , title , "', '" , content , "', now(), '" , writer , "', " , privacy , ")" ) ; responseObject . put ( "status" , status ) ; return responseObject ; } 
public com.dumbpug.crossbowknight.particles.Particle generate ( com.dumbpug.crossbowknight.particles.EmitterDetails emitterDetails ) { float randomVelx = ( ( random . nextFloat () ) * 2.0F ) - 1.0F ; float randomVely = ( ( random . nextFloat () ) * 2.0F ) - 1.0F ; return new com.dumbpug.crossbowknight.particles.ExplosionParticle ( emitterDetails.positionX , emitterDetails.positionY , randomVelx , randomVely , level ) ; } 
public int getMaxEggGroupID () { android.database.Cursor cursor = database . query ( EGG_GROUPS_TABLE , null , null , null , null , null , null ) ; cursor . moveToLast () ; int maxEggGroupID = cursor . getInt ( cursor . getColumnIndex ( EGG_GROUP_ID ) ) ; if ( PRINT_DEBUG ) android.util.Log . v ( "Database Access" , ( "Max eggGroupID is: " + ( java.lang.String . valueOf ( maxEggGroupID ) ) ) ) ; cursor . close () ; return maxEggGroupID + 1 ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; int weekday = 5 ; int weekend = 9 ; int optimalHours = 7 * 8 ; int actualHours = weekday * 5 ; actualHours = actualHours + ( weekend * 2 ) ; int solution = optimalHours - actualHours ; display ( solution ) ; } 
@ java.lang.Override public void onSwiped ( android.support.v7.widget.RecyclerView.ViewHolder viewHolder ) { mItemRemovedSnackbar = android.support.design.widget.Snackbar . make ( mSetsView , R.string.program_exercise_activity_set_deleted_message , Snackbar.LENGTH_INDEFINITE ) ; mItemRemovedSnackbar . setAction ( R.string.cancel_button_text , new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { mSetsAdapter . notifyItemInserted ( mModel . restoreLastRemoved () ) ; } } ) ; mItemRemovedSnackbar . show () ; } 
public static void generate ( java.lang.String bugVecFilePath , java.lang.String codeVecFilePath , java.lang.String simMatFilePath ) throws java.lang.Exception { int dicSize = config.Config . getInstance () . getDicSize () ; java.util.HashMap < java.lang.String , Jama.Matrix > bugVecList = utils.MatrixUtil . loadVectors ( bugVecFilePath , dicSize ) ; java.lang.System.out . println ( bugVecList . size () ) ; java.util.HashMap < java.lang.String , Jama.Matrix > codeVecList = utils.MatrixUtil . loadVectors ( codeVecFilePath , dicSize ) ; java.lang.System.out . println ( codeVecList . size () ) ; utils.MatrixUtil . exportSimilarityMatrix ( bugVecList , codeVecList , simMatFilePath , dicSize ) ; } 
public static double rootMeansSquaredError ( double [] real , double [] predicted ) { double ret = 0.0 ; for ( int i = 0 ; i < ( real.length ) ; i ++ ) { ret += java.lang.Math . pow ( ( ( real [ i ] ) - ( predicted [ i ] ) ) , 2 ) ; } return java.lang.Math . sqrt ( ( ret / ( real.length ) ) ) ; } 
private boolean bracketsBalanced ( java.lang.String input ) { int i = 0 ; for ( char c : input . toCharArray () ) { if ( c == '{' ) i ++ ; if ( c == '}' ) i -- ; if ( i < 0 ) return false ; } return i == 0 ; } 
private boolean compareValues ( java.lang.Object fieldValue , com.atlassian.crowd.embedded.api.User user , boolean allowUserInField ) { boolean result = ! allowUserInField ; if ( fieldValue instanceof java.lang.String ) { if ( fieldValue . equals ( user . getName () ) ) { result = allowUserInField ; } } else { if ( fieldValue . equals ( user ) ) { result = allowUserInField ; } } return result ; } 
@ java.lang.Override public void onPreviewFrame ( byte [] data , android.hardware.Camera camera ) { if ( camera == null ) return; step = camera . getParameters () . getExposureCompensationStep () ; EV = java.lang.Math . max ( step , ( ( step ) * ( camera . getParameters () . getExposureCompensation () ) ) ) ; } 
private int [] quicksort ( int [] list , int low , int high ) { if ( low >= high ) return list ; int pos = partition ( list , low , high ) ; quicksort ( list , low , ( pos - 1 ) ) ; quicksort ( list , ( pos + 1 ) , high ) ; return list ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/search" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public org.springframework.web.servlet.ModelAndView doGet ( javax.servlet.http.HttpServletRequest request ) { javax.servlet.http.HttpSession session = request . getSession () ; java.lang.String requestQuery = request . getParameter ( "search" ) ; java.util.List < kawahara.models.SearchModel > allSearchResults = searchService . getSearchResults ( requestQuery ) ; int pageIndex = getPageIndex ( session , requestQuery , allSearchResults , request ) ; if ( pageIndex > ( ( allSearchResults . size () ) - 1 ) ) { pageIndex = ( allSearchResults . size () ) - 1 ; } return setAttributes ( session , requestQuery , pageIndex , allSearchResults ) ; } 
public static int findMax ( int [] [] a ) { int max = java.lang.Integer.MIN_VALUE ; for ( int i = 0 ; i < ( a.length ) ; i ++ ) { for ( int j = 0 ; j < ( a [ i ] . length ) ; j ++ ) { if ( ( a [ i ] [ j ] ) > max ) { max = a [ i ] [ j ] ; } } } return max ; } 
private void checkSingleExpandMode ( int currExpandedParentPosition ) { if ( ( mExpandCollapseMode.mode ) != ( com.github.huajianjiang.expandablerecyclerview.widget.ExpandableAdapter.ExpandCollapseMode.MODE_SINGLE_EXPAND ) ) return; final int lastExpandedPosition = mExpandCollapseMode.lastExpandedPosition ; if ( lastExpandedPosition == currExpandedParentPosition ) return; com.github.huajianjiang.expandablerecyclerview.util.Logger . e ( com.github.huajianjiang.expandablerecyclerview.widget.ExpandableAdapter.TAG , ( ( "checkSingleExpandMode " + "---->lastExpandedPosition=*" ) + lastExpandedPosition ) ) ; collapseView ( lastExpandedPosition , true , false ) ; mExpandCollapseMode.lastExpandedPosition = currExpandedParentPosition ; } 
private void spreadSkylightDownwards ( int x , int z ) { final int highestBlock = getHighestBlock ( x , z ) ; final int sectionY = highestBlock / ( Section.SECTION_HEIGHT ) ; byte light = World.DEFAULT_SKY_LIGHT ; for ( int y = sectionY ; y >= 0 ; -- y ) { final net.morbz.minecraft.world.Section section = sections [ sectionY ] ; if ( section != null ) { light = section . spreadSkylightDownwards ( x , z , light ) ; if ( light == 0 ) { break; } } } } 
java.lang.String add ( de.hk.wfh.rs.FilterContext filterContext , java.lang.String line ) { boolean containsFilter = containsPattern ( line , filterContext . getFilterList () ) ; boolean containsIgnore = containsPattern ( line , filterContext . getIgnoreList () ) ; if ( containsFilter && containsIgnore ) { return ( "<- ignore-filter conflict -> " + line ) + "\n" ; } else if ( containsFilter && ( ! containsIgnore ) ) { return line + "\n" ; } return "\n" ; } 
private com.alphatica.genotick.genotick.RobotData createDataUpToTimePoint ( int i ) { java.util.List < double [] > list = new java.util.ArrayList <> () ; for ( double [] original : values ) { double [] copy = copyReverseArray ( original , i ) ; list . add ( copy ) ; } java.lang.Double futureChange = calculateFutureChange ( timePoints [ i ] ) ; return com.alphatica.genotick.genotick.RobotData . createData ( list , name , futureChange ) ; } 
private void updateKLargestComments () { componentSizeCommentMap . clear () ; for ( org.wso2.siddhi.debs2016.graph.CommentLikeGraph commentLikeGraph : commentStore . values () ) { long sizeOfComponent = commentLikeGraph . getSizeOfLargestConnectedComponent () ; if ( sizeOfComponent == 0 ) { continue; } java.lang.String comment = commentLikeGraph . getComment () ; componentSizeCommentMap . put ( sizeOfComponent , comment ) ; } } 
private boolean synchronizeFounders () { mLastSyncTime = java.lang.System . currentTimeMillis () ; int maxVersion = maxFounderVersion () ; int serverMaxVersion = 0 ; serverMaxVersion = syncDeletedFounders ( serverMaxVersion ) ; serverMaxVersion = syncNewFounders ( serverMaxVersion ) ; serverMaxVersion = syncDirtyFounders ( serverMaxVersion ) ; return syncServerFounderUpdates ( maxVersion , serverMaxVersion ) ; } 
public void toggleEventInvite ( android.view.View view ) { android.widget.CheckBox chkFriend = ( ( android.widget.CheckBox ) ( view ) ) ; if ( chkFriend . isChecked () ) { android.util.Log . d ( com.sarahrobinson.finalyearproject.activities.MainActivity.TAG , "Added to invite list" ) ; } else { android.util.Log . d ( com.sarahrobinson.finalyearproject.activities.MainActivity.TAG , "Removed from invite list" ) ; } } 
private com.hutgroup.robocode.server.RoundResult toRoundResult ( int roundId , com.hutgroup.robocode.server.IRobotSnapshot robotSnapshot ) { double energyLeft = robotSnapshot . getEnergy () ; com.hutgroup.robocode.server.IScoreSnapshot snapshot = robotSnapshot . getScoreSnapshot () ; java.lang.String playerId = robotSnapshot . getName () ; double gunDamage = ( snapshot . getCurrentBulletDamageScore () ) + ( snapshot . getCurrentBulletKillBonus () ) ; double ramDamage = ( snapshot . getCurrentRammingDamageScore () ) + ( snapshot . getCurrentRammingKillBonus () ) ; return new com.hutgroup.robocode.server.RoundResult ( roundId , playerId , energyLeft , ramDamage , gunDamage ) ; } 
public boolean insertBudget ( final java.lang.String name , final int max ) { android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; android.content.ContentValues contentValues = new android.content.ContentValues () ; contentValues . put ( protect.budgetwatch.DBHelper.BudgetDbIds.NAME , name ) ; contentValues . put ( protect.budgetwatch.DBHelper.BudgetDbIds.MAX , max ) ; final long newId = db . insert ( protect.budgetwatch.DBHelper.BudgetDbIds.TABLE , null , contentValues ) ; return newId != ( - 1 ) ; } 
public spell.INode find ( java.lang.String word ) { spell.Node temp = root ; for ( int i = 0 ; i < ( word . length () ) ; i ++ ) { int index = indexByLetter ( word . charAt ( i ) ) ; if ( temp . hasNode ( index ) ) { temp = temp . getNode ( index ) ; } else { return null ; } } if ( ( temp . getValue () ) > 0 ) { return temp ; } return null ; } 
private void checkLineIndent ( int lineNum , com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel indentLevel ) { final java.lang.String line = indentCheck . getLine ( ( lineNum - 1 ) ) ; if ( ! ( line . isEmpty () ) ) { final int start = getLineStart ( line ) ; if ( indentLevel . isGreaterThan ( start ) ) { logChildError ( lineNum , start , indentLevel ) ; } } } 
private boolean solveH ( int col ) { int i = 0 ; for ( i = 0 ; i < ( board.length ) ; i ++ ) { if ( addQueen ( i , col ) ) { if ( ( col > ( ( board [ 0 ] . length ) - 2 ) ) || ( solveH ( ( col + 1 ) ) ) ) { return true ; } else { removeQueen ( i , col ) ; } } } return false ; } 
public void mainMenu () { com.twu.biblioteca.Option optionSelected ; do { presenter . displayItemsAsMenuOptions ( menuOptions ) ; int userInput = presenter . getUserInput ( menuOptions . size () ) ; optionSelected = menuOptions . get ( ( userInput - 1 ) ) ; optionSelected . onSelect () ; } while ( ! ( optionSelected instanceof com.twu.biblioteca.QuitOption ) ) ; } 
public org.mapeditor.core.Map nextTurn () { if ( ! ( isGameOver () ) ) { boolean isStalemateForPlayer = isStalemateTurnForPlayer ( utilties.models.Game.PLAYER_ID ) ; boolean isStalemateForOpponent = isStalemateTurnForPlayer ( utilties.models.Game.OPPONENT_ID ) ; if ( isStalemateForPlayer || isStalemateForOpponent ) { _isStalemate = true ; this . _isGameOver = true ; } else if ( ( this . _numberOfTurnsCompleted ) > ( utilties.models.Game.MAX_TURN_LIMIT ) ) { _isStalemate = true ; this . _isGameOver = true ; } ( this . _numberOfTurnsCompleted ) ++ ; } return this . _entityMap . getMap () ; } 
private eu.europeana.corelib.definitions.edm.beans.FullBean retrieveRecord ( java.lang.String europeanaId , java.lang.Integer hierarchyTimeout ) throws eu.europeana.corelib.edm.exceptions.MongoDBException , eu.europeana.corelib.edm.exceptions.MongoRuntimeException , eu.europeana.corelib.neo4j.exception.Neo4JException { long startTime = java.lang.System . currentTimeMillis () ; eu.europeana.corelib.definitions.edm.beans.FullBean result = searchService . findById ( europeanaId , false , ( hierarchyTimeout == null ? 0 : hierarchyTimeout ) ) ; if ( eu.europeana.api2.v2.web.controller.ObjectController.LOG . isDebugEnabled () ) { eu.europeana.api2.v2.web.controller.ObjectController.LOG . debug ( ( ( "SearchService findByID took " + ( ( java.lang.System . currentTimeMillis () ) - startTime ) ) + " ms" ) ) ; } return result ; } 
@ java.lang.Override public int compare ( com.Ben12345rocks.VotingPlugin.Objects.User p1 , com.Ben12345rocks.VotingPlugin.Objects.User p2 ) { int p1Total = p1 . getTotalVotesSite ( voteSite ) ; int p2Total = p2 . getTotalVotesSite ( voteSite ) ; if ( p1Total < p2Total ) { return 1 ; } if ( p1Total > p2Total ) { return - 1 ; } return 0 ; } 
@ org.junit.Test public void testSearch () { for ( int num : numbers ) { tree . insert ( num ) ; } int key = 2 ; assertEquals ( 2 , tree . search ( key ) ) ; int key2 = 2234 ; assertEquals ( 0 , tree . search ( key2 ) ) ; } 
public static void main ( java.lang.String [] args ) { int [] play = new int [] { 5 , 8 , 2 , 3 , 1 , 5 , 0 } ; java.lang.System.out . println ( RightWingGame . solveGameRecursively ( play , RightWingGame.DEFAULT_VALUE , RightWingGame.DEFAULT_VALUE , RightWingGame.DEFAULT_VALUE ) ) ; } 
private int getCardsCountBeforeCurrentPosition ( int position ) { int count = 0 ; if ( ( shouldShowAppodealAdBanner ) && ( ( ( ru.aviasales.template.ui.adapter.AdAdapter.APPODEAL_BANNER_POSITION ) + ( shouldShowAsBanner ? 1 : 0 ) ) < position ) ) { count ++ ; } if ( ( shouldShowAsBanner ) && ( ( ru.aviasales.template.ui.adapter.AdAdapter.AS_BANNER_POSITION ) < position ) ) count ++ ; return count ; } 
public double getPoisson ( double lambda ) { double L = java.lang.Math . exp ( ( - lambda ) ) ; double p = 1.0 ; double k = 0.0 ; do { k = k + 0.5 ; p *= java.lang.Math . random () ; } while ( p > L ) ; double numero = 1 / ( k - 0.1 ) ; numero = redondear ( ( numero * 10 ) ) ; return numero ; } 
public void receive ( java.util.Map < java.lang.String , java.lang.String > result ) { int in = java.lang.Integer . parseInt ( result . get ( "rx-bits-per-second" ) ) ; int out = java.lang.Integer . parseInt ( result . get ( "tx-bits-per-second" ) ) ; traffic = in + out ; java.lang.System.out . println ( ( ( ( ( ( parentIdentity ) + ": Total traffic on " ) + ( label ) ) + ": " ) + ( traffic ) ) ) ; aggregator . update ( traffic ) ; } 
protected void applyCenterCrop ( @ android.support.annotation.NonNull android.view.TextureView view ) { float xScale = ( ( float ) ( view . getWidth () ) ) / ( intrinsicVideoSize.x ) ; float yScale = ( ( float ) ( view . getHeight () ) ) / ( intrinsicVideoSize.y ) ; float scale = java.lang.Math . max ( xScale , yScale ) ; xScale = scale / xScale ; yScale = scale / yScale ; applyScale ( view , xScale , yScale ) ; } 
public int countNodes ( hou.forwz.Leetcode.structure.TreeNode root ) { if ( root == null ) return 0 ; int leftDeep = deep ( root.left ) ; int rightDeep = deep ( root.right ) ; if ( leftDeep == rightDeep ) { return ( ( int ) ( ( java.lang.Math . pow ( 2 , leftDeep ) ) + ( countNodes ( root.right ) ) ) ) ; } else return ( ( int ) ( java.lang.Math . pow ( 2 , rightDeep ) ) ) + ( countNodes ( root.left ) ) ; } 
public int deleteRecord ( libraryDatabaseUtility.model.DataSource source , long bookId ) throws java.sql.SQLException { int result = 0 ; java.sql.Connection connection = source . getConnection () ; java.sql.PreparedStatement statement = null ; statement = connection . prepareStatement ( libraryDatabaseUtility.repository.BookDAOImpl.DELETE_RECORD_SQL ) ; statement . setLong ( 1 , bookId ) ; result = statement . executeUpdate () ; return result ; } 
private static synchronized void sleep () { int select = ( com.afunx.ble.blelitelib.operation.BleWriteCharacterisitcNoResponsePacketOperation2.mAutoId . getAndAdd ( 1 ) ) % ( com.afunx.ble.blelitelib.operation.BleWriteCharacterisitcNoResponsePacketOperation2.PACKET_INTERVALS.length ) ; int sleepTime = ( ( com.afunx.ble.blelitelib.operation.BleWriteCharacterisitcNoResponsePacketOperation2.lastTimestamp ) == 0 ) ? 0 : ( com.afunx.ble.blelitelib.operation.BleWriteCharacterisitcNoResponsePacketOperation2.PACKET_INTERVALS [ select ] ) - ( ( int ) ( ( java.lang.System . currentTimeMillis () ) - ( com.afunx.ble.blelitelib.operation.BleWriteCharacterisitcNoResponsePacketOperation2.lastTimestamp ) ) ) ; if ( sleepTime > 0 ) { try { java.lang.Thread . sleep ( sleepTime ) ; } catch ( java.lang.InterruptedException ignore ) {} } } 
public void createLocalServer ( java.lang.String port ) { int iport = - 1 ; try { iport = java.lang.Integer . parseInt ( port ) ; localServer = server.ServerFactory . createServer ( iport ) ; localServer . startUp () ; this . connect ( "localhost" , ( "" + port ) ) ; } catch ( java.lang.NumberFormatException nfe ) { showFail ( loginScreen , "Please insert a real number at the Port-Field." ) ; } catch ( java.net.BindException e ) { showFail ( loginScreen , "Port is already in use, please enter another Port." ) ; } } 
@ java.lang.Override public void onMapReady ( com.google.android.gms.maps.GoogleMap googleMap ) { mMap = googleMap ; com.google.android.gms.maps.model.LatLng loyola = new com.google.android.gms.maps.model.LatLng ( 41.998 , ( - 87.659 ) ) ; mMap . moveCamera ( com.google.android.gms.maps.CameraUpdateFactory . newLatLngZoom ( loyola , ( ( float ) ( 15.5 ) ) ) ) ; if ( checkPermissions () ) { setMyLocationEnabled () ; } } 
public static void printMatlabArray2D ( java.lang.Iterable < ? extends java.lang.Iterable < java.lang.Double > > ll , int elementsPerLine , java.io.PrintStream out ) { boolean first = true ; out . println ( "[" ) ; for ( java.lang.Iterable < java.lang.Double > l : ll ) { if ( first ) first = false ; else out . println ( ", " ) ; MatlabUtil . printMatlabArray ( l , elementsPerLine , out ) ; } out . println () ; out . println ( "]" ) ; } 
public long getMemoryAddress ( com.zms.zpc.emulator.PC pc ) { assert ( addressReg ) == null ; addressUseReg = false ; long address = calAddress ( pc , this . address ) ; if ( addressUseReg ) { address += com.zms.zpc.execute.NumberUtils . asSigned ( this . disp , this . dispWidth ) ; } else { address += this . disp ; } return getMemoryAddress ( pc , address ) ; } 
public semantic.Table lookupFunction ( java.lang.String name ) { if ( ( parent ) != null ) { parent . lookupFunction ( name ) ; } else { for ( semantic.Table t : parent.children ) { if ( t . getSymbol ( 0 ) . getName () . equals ( name ) ) return t ; } } return null ; } 
private java.lang.Boolean AddShortURL () { url.CreateLink short_link = new url.CreateLink ( this . row ) ; this . shortURL = short_link . encodeLongURL () ; long hashURL = short_link . getShortURLHash () ; try { this . insertFactory . insertShortLink ( hashURL , this . shortURL , this . row ) ; } catch ( java.lang.Exception e ) { helper.Loghandler . log ( ( "trying to insert the url " + ( e . toString () ) ) , "fatal" ) ; return false ; } return true ; } 
@ cucumber.api.java.After public void teardown ( final cucumber.api.Scenario scenario ) { if ( ! ( featureState . getFailed () ) ) { au.com.agic.apptesting.steps.StepEventHandling.SCREENSHOT_UTILS . takeScreenshot ( ( " " + ( scenario . getName () ) ) , featureState ) ; } featureState . setFailed ( scenario . isFailed () ) ; final boolean clearDriver = java.lang.Boolean . parseBoolean ( au.com.agic.apptesting.steps.StepEventHandling.SYSTEM_PROPERTY_UTILS . getProperty ( Constants.NEW_BROWSER_PER_SCENARIO ) ) ; if ( clearDriver ) { State.THREAD_DESIRED_CAPABILITY_MAP . clearWebDriverForThread ( true ) ; } } 
public double getInterest () { int datediff = ( seconddate ) - ( firstdate ) ; rate = 0.05 / 365 ; double ratetime = java.lang.Math . pow ( ( 1 + ( rate ) ) , datediff ) ; balance = ( balance ) * ratetime ; firstdate = seconddate ; return balance ; } 
protected void robaRandomSleep ( int minSleepSecond , int maxSleepSecond ) { java.util.Random r = new java.util.Random () ; int sleepTime = ( minSleepSecond + ( r . nextInt ( ( maxSleepSecond - minSleepSecond ) ) ) ) * 1000 ; solo . sleep ( sleepTime ) ; android.util.Log . d ( com.crazyroba.RobaActivityInstrumentationTestCase2.TAG , ( ( "Roba random sleep " + ( sleepTime / 1000 ) ) + " s" ) ) ; } 
public static void main ( java.lang.String [] args ) { boolean a = false ; boolean b = false ; boolean c = true ; boolean p = ( ( ( a || b ) || c ) && ( ( ( ! a ) || b ) || c ) ) && ( ( ( ! a ) || ( ! b ) ) || c ) ; java.lang.System.out . println ( p ) ; } 
public synchronized void fail ( java.lang.Throwable error ) { if ( ( pixelWidth ) == 0 ) pixelWidth = 50 ; if ( ( pixelHeight ) == 0 ) pixelHeight = 50 ; setBitmap ( createErrorBitmap ( pixelWidth , pixelHeight ) ) ; ( ( react.RPromise < playn.core.Image > ) ( state ) ) . fail ( error ) ; } 
public boolean deposit ( java.lang.String userId , int value ) { if ( value < 0 ) return false ; RWLock . writeLock () . lock () ; try { int balance = getOrZero ( userId ) ; balances . put ( userId , ( balance + value ) ) ; return true ; } finally { writeLog ( "DEPOSIT" , userId , "" , value ) ; RWLock . writeLock () . unlock () ; } } 
@ org.junit.Test public void testSize () { Array < java.lang.Integer > list = new Array () ; java.lang.Integer [] elems = new java.lang.Integer [] { - 76 , 45 , 66 , 3 , null , 54 , 33 } ; for ( int i = 0 , sz = 1 ; i < ( elems.length ) ; i ++ , sz ++ ) { list . add ( elems [ i ] ) ; org.junit.Assert . assertEquals ( list . size () , sz ) ; } } 
private void findOneHourTimerDelay ( java.lang.String [] timeParts ) { int secNum = java.lang.Integer . parseInt ( timeParts [ 2 ] ) ; int minNum = ( java.lang.Integer . parseInt ( timeParts [ 1 ] ) ) % 10 ; oneHourTimerDelay = ( ( 60 - secNum ) + ( 60 * ( 60 - minNum ) ) ) * 1000 ; } 
@ org.junit.Test public void shouldSucceedIfWrittenOutOfOrderWithPosition ( ) throws java.io.IOException { int [] blockorder = getRandomPermutationOfBlockOrder () ; for ( int i = 0 ; i < ( blockcount ) ; i ++ ) { chksumChannel . write ( buffers [ blockorder [ i ] ] , ( ( blockorder [ i ] ) * ( blocksize ) ) ) ; } assertThat ( chksumChannel . getChecksum () , equalTo ( expectedChecksum ) ) ; } 
@ java.lang.Override public void unpackFromFrontOfList ( java.util.List < org.msgpack.type.Value > l ) { int check_ntype = l . remove ( 0 ) . asIntegerValue () . getInt () ; if ( check_ntype != ( ntype ) ) { android.util.Log . e ( com.mooshim.mooshimeter.common.ConfigTree.TAG , "WRONG NODE TYPE" ) ; } path = l . remove ( 0 ) . toString () ; } 
public void onWin () { int currPlayerId = currPlayer . getCurrPlayerID () ; int potVal = currPlayer . getPot () ; int amtBetInGame = currPlayer . getCurrBetInGame () ; if ( ( amtBetInGame * 2 ) >= potVal ) currPlayer . winMoney ( potVal ) ; else currPlayer . winMoney ( ( amtBetInGame * 2 ) ) ; message . setText ( "You Win!" ) ; try { java.lang.Thread . sleep ( 5000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } 
private edu.up.cs301.blokus.Blok copySelectedBoardBlok ( edu.up.cs301.blokus.Blok origSelectedBoardBlok ) { if ( origSelectedBoardBlok == null ) { return null ; } int row ; int col ; int color ; row = origSelectedBoardBlok . getRow () ; col = origSelectedBoardBlok . getColumn () ; color = origSelectedBoardBlok . getColor () ; edu.up.cs301.blokus.Blok newBlok = new edu.up.cs301.blokus.Blok ( row , col , color ) ; return newBlok ; } 
public static void main ( java.lang.String [] args ) { int secretNumber = ( ( int ) ( 1 + ( ( java.lang.Math . random () ) * 10 ) ) ) ; int attemps = 3 ; java.lang.System.out . println ( "Hi! I chose a number from 0 to 10 for you! Try to guess" ) ; java.lang.System.out . println ( "You have" ) ; java.util.Scanner sc = new java.util.Scanner ( java.lang.System.in ) ; } 
@ java.lang.Override public java.lang.Boolean apply ( final com.intellij.openapi.roots.SourceFolder it ) { boolean _and = false ; boolean _isTestSource = it . isTestSource () ; if ( ! _isTestSource ) { _and = false ; } else { com.intellij.openapi.vfs.VirtualFile _file = it . getFile () ; boolean _exists = false ; if ( _file != null ) { _exists = _file . exists () ; } _and = _exists ; } return java.lang.Boolean . valueOf ( _and ) ; } 
private boolean maskHasPortGroup ( com.emc.storageos.db.client.model.ExportMask mask , java.net.URI portGroup ) { boolean result = false ; if ( ( portGroup == null ) || ( ( portGroup != null ) && ( portGroup . equals ( mask . getPortGroup () ) ) ) ) { result = true ; } return result ; } 
@ java.lang.Override public int getPoints () { int points = 1 ; for ( java.util.Iterator < entities.Square > i = getSquaresInvolved () . iterator () ; i . hasNext () ; ) { entities.Block b = i . next () . getBlock () ; if ( b != null ) points *= b . getMultiplier () ; } return points ; } 
@ java.lang.Override public void onDismiss ( com.example.reativos.oscar.AddParam myDialogFragment ) { java.lang.String command_type = dataStore . getString ( "type" ) ; int command_param = dataStore . getInt ( "param" ) ; if ( ( command_type != null ) && ( ! ( command_type . isEmpty () ) ) ) { com.example.reativos.oscar.Command newCommand = new com.example.reativos.oscar.Command ( command_type , command_param ) ; commandLists . get ( currentTabTag ) . add ( newCommand ) ; adapters . get ( currentTabTag ) . notifyDataSetChanged () ; } } 
@ java.lang.Override public java.lang.Boolean getunicodePUA () { for ( int i = 0 ; i < ( toUnicode . length () ) ; ++ i ) { char unicode = this . toUnicode . charAt ( i ) ; if ( ( unicode >= ( org.verapdf.gf.model.impl.operator.textshow.GFGlyph.UNICODE_PRIVATE_USE_AREA_BEGINNING ) ) && ( unicode <= ( org.verapdf.gf.model.impl.operator.textshow.GFGlyph.UNICODE_PRIVATE_USE_AREA_ENDING ) ) ) { return true ; } } return false ; } 
public int myAtoi ( java.lang.String str ) { if ( null == str ) { str = "" ; } long ret = atoi ( str . trim () ) ; if ( ret > ( java.lang.Integer.MAX_VALUE ) ) { ret = java.lang.Integer.MAX_VALUE ; } else if ( ret < ( java.lang.Integer.MIN_VALUE ) ) { ret = java.lang.Integer.MIN_VALUE ; } else { ret = ( ( int ) ( ret ) ) ; } return ( ( int ) ( ret ) ) ; } 
public int makeTurn () { int winAns = 9 ; if ( ( ( BotParser.mRound ) == 1 ) || ( ( BotParser.mRound ) == 2 ) ) { return 3 ; } if ( ( BotParser.mRound ) >= 3 ) { winAns = BotParser.mField . checkWin ( BotParser.mBotId ) ; if ( winAns != 9 ) return winAns ; winAns = BotParser.mField . checkWin ( BotParser.mBotIdE ) ; if ( winAns != 9 ) return winAns ; } int move = new java.util.Random () . nextInt ( 7 ) ; return move ; } 
@ java.lang.SuppressWarnings ( value = "restriction" ) public static boolean isEclipseDebug () { boolean debuggerEnabled = false ; org.osgi.framework.BundleContext bundleContext = org.osgi.framework.FrameworkUtil . getBundle ( org.talend.commons.runtime.debug.TalendDebugHandler . class ) . getBundleContext () ; if ( bundleContext == null ) { return false ; } org.osgi.framework.ServiceReference < org.eclipse.osgi.service.debug.DebugOptions > debugOptSR = bundleContext . getServiceReference ( org.eclipse.osgi.service.debug.DebugOptions . class ) ; if ( debugOptSR != null ) { org.eclipse.osgi.service.debug.DebugOptions debugOpt = bundleContext . getService ( debugOptSR ) ; debuggerEnabled = debugOpt . isDebugEnabled () ; } return debuggerEnabled ; } 
public static boolean add ( tds.Task task ) { boolean isAdded = true ; for ( java.util.TreeSet < tds.Task > tree : tds.TaskTree.taskTrees ) { if ( ! ( tree . add ( task ) ) ) { isAdded = false ; } } if ( isAdded ) { tds.TaskTree . increaseTaskListSize () ; tds.TaskTree . pushAddToStorage ( task ) ; } return isAdded ; } 
private void connectRight ( int i , int j ) { if ( j < ( n ) ) { int right = getPosition ( i , ( j + 1 ) ) ; if ( isOpen ( right ) ) { grid . union ( right , getPosition ( i , j ) ) ; } } } 
public int getPower ( double speed , int resistance ) { double power = 0.0 ; if ( speed > 0 ) { power = ( ( 3.05 + ( 4.577 * speed ) ) + ( ( 0.01798 * speed ) * speed ) ) + ( ( ( 2.038E-5 * speed ) * speed ) * speed ) ; } return ( ( int ) ( power ) ) ; } 
protected boolean checkBlock ( org.w3c.dom.Node node ) { mt.edu.um.cs.cps2000.runtime.BlockStackFrame blockStackFrame = new mt.edu.um.cs.cps2000.runtime.BlockStackFrame ( stackFrames . peek () ) ; stackFrames . push ( blockStackFrame ) ; boolean ok = checkStatements ( node . getChildNodes () ) ; stackFrames . pop () ; return ok ; } 
public static void main ( final java.lang.String [] args ) throws java.lang.InterruptedException { final long runtime = ( ( args.length ) > 0 ) ? java.lang.Long . parseLong ( args [ 0 ] ) : com.awesome.BaseExamplePeriod.DEFAULT_RUN_TIME_MSEC ; com.awesome.ex1_2.Ex1_2 ex = new com.awesome.ex1_2.Ex1_2 ( runtime ) ; ex . run () ; ex . printResults () ; } 
public void queryPOIListUpdate () { org.walkersguide.utils.POIPreset preset = settingsManager . getPOIPreset ( settingsManager . getPresetIdInRouterFragment () ) ; if ( ( ( ( currentLocation ) == null ) || ( ( currentCompassValue ) < 0 ) ) || ( preset == null ) ) { return; } boolean isInsidePublicTransport = false ; if ( ( numberOfHighSpeeds ) > 0 ) isInsidePublicTransport = true ; poiManager . updatePOIList ( preset . getId () , preset . getRange () , currentLocation , currentCompassValue , "" , isInsidePublicTransport ) ; } 
public void computeDemoRectangle ( float viewWidth , float viewHeight ) { if ( ( ( demoData ) != null ) && ( ( demoData . size () ) == 0 ) ) { float centerX = viewWidth / 2 ; float centerY = viewHeight / 2 ; float deltaX = viewWidth / ( ( float ) ( de.peterloos.beziersplines.utils.ControlPointsHolder.NumDemoEdges ) ) ; float deltaY = viewHeight / ( ( float ) ( de.peterloos.beziersplines.utils.ControlPointsHolder.NumDemoEdges ) ) ; demoData = de.peterloos.beziersplines.utils.ControlPointsHolder . getDemoRectangle ( centerX , centerY , deltaX , deltaY ) ; } } 
public double getMinY () { double minY = points . get ( 0 ) . y ; for ( int i = 1 ; i < ( points . size () ) ; i ++ ) { double pY = points . get ( i ) . y ; if ( pY < minY ) { minY = pY ; } } return minY ; } 
@ java.lang.Override public void onMessageReceived ( @ android.support.annotation.NonNull com.criptext.comunication.MOKMessage message ) { com.criptext.monkeychatandroid.models.MessageItem newItem = processNewMessage ( message ) ; boolean isMyOwnMsg = ! ( newItem . isIncomingMessage () ) ; updateConversation ( newItem . getConversationId () , com.criptext.monkeychatandroid.models.DatabaseHandler . getSecondaryTextByMessageType ( newItem , false ) , ( isMyOwnMsg ? MonkeyConversation.ConversationStatus.deliveredMessage : MonkeyConversation.ConversationStatus.receivedMessage ) , ( isMyOwnMsg ? 0 : 1 ) , message . getDatetimeorder () , 0L ) ; } 
public static double norm2 ( float [] x , int dim ) { double dot = 0 ; for ( int i = 0 ; i < dim ; ++ i ) { dot += ( x [ i ] ) * ( x [ i ] ) ; } return dot ; } 
private static int checkSum ( java.lang.String zip ) { int checkDigit = 0 ; for ( int i = 0 ; i < ( zip . length () ) ; i ++ ) { checkDigit += java.lang.Integer . parseInt ( ( "" + ( zip . charAt ( i ) ) ) ) ; } checkDigit = checkDigit % 10 ; return checkDigit ; } 
@ org.junit.Test public void testNextExecutionEveryTwoWeeksStartingWithFirstDayOfYear () { com.cronutils.model.time.ZonedDateTime now = com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest . truncateToDays ( com.cronutils.model.time.ZonedDateTime . now () ) ; int dayOfYear = now . getDayOfYear () ; int dayOfMostRecentPeriod = dayOfYear % 14 ; com.cronutils.model.time.ZonedDateTime expected = now . plusDays ( ( 15 - dayOfMostRecentPeriod ) ) ; com.cronutils.model.time.ExecutionTime executionTime = com.cronutils.model.time.ExecutionTime . forCron ( parser . parse ( com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest.BI_WEEKLY_STARTING_WITH_FIRST_DAY_OF_YEAR ) ) ; assertEquals ( expected , executionTime . nextExecution ( now ) . get () ) ; } 
public boolean ParseJSONObject () { int code = 0 ; try { code = jsonObj . getInteger ( "cod" ) ; } catch ( java.lang.Exception e ) {} if ( code == 200 ) { org.vertx.java.core.json.JsonObject newData = CreateCorrectJSONObject () ; CreateCorrectResponseString ( newData ) ; return true ; } else { responseString . append ( jsonObj ) ; return false ; } } 
private int getColumn () { int x ; java.util.Scanner scanner = new java.util.Scanner ( java.lang.System.in ) ; while ( true ) { java.lang.System.out . print ( "Please enter the column number (1-10):" ) ; x = scanner . nextInt () ; if ( ( x >= 1 ) & ( x <= 10 ) ) return x - 1 ; } } 
private static java.lang.String _getParentMessageIdFromSubject ( javax.mail.Message message ) throws java.lang.Exception { if ( ( message . getSubject () ) == null ) { return null ; } java.lang.String parentMessageId = null ; java.lang.String subject = message . getSubject () ; int pos = subject . lastIndexOf ( CharPool.LESS_THAN ) ; if ( pos != ( - 1 ) ) { parentMessageId = subject . substring ( pos ) ; } return parentMessageId ; } 
private void postConvert ( short [] inPixels , byte [] outPixels , int begin , int end ) { int q = begin ; int p = begin ; while ( p < end ) { short f = inPixels [ ( p ++ ) ] ; outPixels [ ( q ++ ) ] = ( f <= ( - 16257 ) ) ? 0 : f >= 16256 ? - 1 : ( ( byte ) ( ( f + 16384 ) > > 7 ) ) ; } } 
public static int maxInBounds ( int [] A , int lowerBound , int upperBound ) { int max = 0 ; int [] bounds = new int [] { lowerBound , upperBound } ; for ( int i = MyMath . min ( bounds ) ; i < ( ( MyMath . max ( bounds ) ) + 1 ) ; i ++ ) { max = java.lang.Math . max ( A [ i ] , max ) ; } return max ; } 
@ java.lang.Override public com.tsystems.javaschool.db.entities.Contract addNew ( com.tsystems.javaschool.db.entities.Contract contract , java.util.List < java.lang.Integer > optionsIds ) { javax.persistence.EntityTransaction transaction = contractDao . getTransaction () ; com.tsystems.javaschool.business.services.interfaces.OptionService optionService = new com.tsystems.javaschool.business.services.implementations.OptionServiceImpl () ; boolean insideOtherTransaction = transaction . isActive () ; contractDao . create ( contract ) ; return contract ; } 
@ net.smartcosmos.dao.things.impl.Test public void testFindAll ( ) throws java.lang.Exception { populateData () ; int expectedSize = 12 ; int actualSize = 0 ; java.util.List < net.smartcosmos.dto.things.ThingResponse > response = persistenceService . findAll ( tenantUrn ) ; assertFalse ( response . isEmpty () ) ; actualSize = response . size () ; assertTrue ( ( ( ( "Expected " + expectedSize ) + " but received " ) + actualSize ) , ( actualSize == expectedSize ) ) ; } 
private int getStartIndex () { int start = 0 ; double MAX = 0 ; for ( int i = 0 ; i < ( numOfCity ) ; i ++ ) { for ( int j = 0 ; j < ( numOfCity ) ; j ++ ) { if ( ( distance [ i ] [ j ] ) > MAX ) { MAX = distance [ i ] [ j ] ; start = i ; } } } return start ; } 
@ java.lang.Override public int hashCode () { int result = ( ( t1 ) != null ) ? t1 . hashCode () : 0 ; result = ( 31 * result ) + ( ( t2 ) != null ? t2 . hashCode () : 0 ) ; return result ; } 
public boolean isManaTurn ( int turnNum ) { int current = 1 ; int past = 0 ; while ( current < ( turnNum + 1 ) ) { int temp = current ; current += past ; past = temp ; if ( current == turnNum ) { return true ; } } return false ; } 
public static void main ( java.lang.String [] args ) { java.util.Scanner scan = new java.util.Scanner ( java.lang.System.in ) ; int N = scan . nextInt () ; long r = scan . nextInt () ; long c = scan . nextInt () ; long base = 0 ; long result = Main . getPoint ( ( r + 1 ) , ( c + 1 ) , N , base ) ; java.lang.System.out . println ( ( result - 1 ) ) ; } 
@ java.lang.Override public void validate ( com.couchbase.lite.Document doc ) { java.util.Map < java.lang.String , java.lang.Object > result = new java.util.HashMap <> () ; int count = 0 ; com.couchbase.lite.Dictionary dictObj = doc . getDictionary ( "dict" ) ; for ( java.lang.String key : dictObj ) { result . put ( key , dict . getObject ( key ) ) ; count ++ ; } org.junit.Assert . assertEquals ( finalContent . size () , count ) ; org.junit.Assert . assertEquals ( finalContent , result ) ; } 
public void evolve ( double time , asteroids.part2.CollisionListener collistionListener ) { if ( time <= 0 ) { return; } double timeToFirstCollision = this . getTimeToFirstCollision () ; if ( time <= timeToFirstCollision ) { this . advance ( time ) ; return; } else { this . advance ( timeToFirstCollision ) ; this . resolveCollision ( collistionListener ) ; java.lang.System.out . println ( timeToFirstCollision ) ; this . evolve ( ( time - timeToFirstCollision ) , collistionListener ) ; } } 
@ java.lang.Override public final int calculateValue ( final nl.tue.s2id90.draughts.DraughtsState draughtsState , final boolean isWhitePlayer , final int depth ) { int value = 0 ; for ( nl.tue.s2id90.group05.HeuristicComponent component : components ) { value += component . calculateComponentValue ( draughtsState , isWhitePlayer , depth , value ) ; } return value ; } 
@ java.lang.Override public void onNext ( T i ) { if ( ( ! ( isUnsubscribed () ) ) && ( ( ( count ) ++ ) < ( limit ) ) ) { boolean stop = ( count ) == ( limit ) ; child . onNext ( i ) ; if ( stop && ( ! ( completed ) ) ) { completed = true ; try { child . onCompleted () ; } finally { unsubscribe () ; } } } } 
public void update () { if ( ( type ) == ( Type.BASICENEMY ) ) { ( timer ) ++ ; this . move ( Direction.DOWN , speed ) ; int timeToShoot = rnd . nextInt ( 3 ) ; if ( ( timeToShoot == 0 ) && ( ( ( timer ) % 100 ) == 0 ) ) { Sound . play ( "src/sounds/enemyBlaster.wav" ) ; shoot ( Type.BULLET , Direction.DOWN ) ; timer = 0 ; } } } 
private void SRLInstruction () { int rd = file . nextInt () ; int rs = file . nextInt () ; int sa = file . nextInt () ; file . nextLine () ; int funct = 8 ; int rt = 0 ; java.lang.String opc = "SRL" ; ilist . add ( ( ( interfaces.IInstruction ) ( new model.RTypeInstruction ( opc , rd , rs , rt , sa , funct ) ) ) ) ; } 
public float activated ( float [] inputs ) { int temp = 0 ; for ( int i = 0 ; i < ( inputs.length ) ; i ++ ) { temp += ( inputs [ i ] ) * ( weights [ i ] ) ; } if ( temp >= ( weights [ ( ( weights.length ) - 1 ) ] ) ) return 1 ; return 0 ; } 
static java.lang.Object [] boxAndPadWithZeros ( int length , long [] values ) { long [] padded ; if ( ( values.length ) == length ) { padded = values ; } else { padded = new long [ length ] ; java.lang.System . arraycopy ( values , 0 , padded , 0 , padded.length ) ; } return java.util.Arrays . stream ( padded ) . boxed () . toArray () ; } 
public static float [] getFloatArrayFromBuffer ( java.nio.FloatBuffer buffer ) { float [] array = new float [ 0 ] ; if ( buffer != null ) { if ( buffer . hasArray () ) { array = buffer . array () ; } else { buffer . rewind () ; array = new float [ buffer . capacity () ] ; buffer . get ( array ) ; } } return array ; } 
private void setMedian () { if ( ! ( this . numbers . isEmpty () ) ) { int mid = ( this . numbers . size () ) / 2 ; if ( ( mid % 2 ) == 1 ) { this . medianOfAllNumbers = this . numbers . get ( mid ) ; } else { this . medianOfAllNumbers = ( ( this . numbers . get ( ( mid - 1 ) ) ) + ( this . numbers . get ( mid ) ) ) / 2.0 ; } } } 
@ java.lang.Override public com.edu.nju.asi.service.serviceImpl.Case uploadOnline ( org.springframework.web.multipart.MultipartFile uploadedFile ) throws java.io.IOException { if ( uploadedFile . isEmpty () ) { return null ; } java.lang.String thisPath = uploadedFile . getName () ; java.io.File thisFile = new java.io.File ( thisPath ) ; uploadedFile . transferTo ( thisFile ) ; com.edu.nju.asi.service.serviceImpl.Case wanted = parseXML ( thisPath ) ; boolean deleteResult = thisFile . delete () ; return wanted ; } 
@ org.junit.Test public void testJoinCollection () { boolean hasData = false ; HgTupleStream stream = HgDB . join ( PartTable . stream () . joinOn ( PartTable . self ( PartTable.ID ) ) , OdetailTable.on . pnos () , HgRelation.IN ) ; for ( org.mercurydb.queryutils.HgTupleStream.HgTuple t : stream ) { hasData = true ; if ( ! ( t . get ( OdetailTable.ID ) . pnos . contains ( t . get ( PartTable.ID ) ) ) ) org.junit.Assert . fail () ; } if ( ! hasData ) org.junit.Assert . fail () ; } 
private void updateParityFlag () { boolean parity = false ; for ( byte b = this . state . sfrs . A . getValue () ; b != 0 ; b = ( ( byte ) ( b & ( b - 1 ) ) ) ) parity = ! parity ; this . state . sfrs . PSW . setBit ( parity , 0 ) ; } 
public java.lang.Integer getLatOffset ( double lat , double lon , double offset , boolean checkOutside ) { java.awt.Point p = tileSource . latLonToXY ( lat , lon , zoom ) ; int y = ( ( p.y ) - ( center.y ) ) - ( ( getHeight () ) / 2 ) ; if ( checkOutside && ( ( y < 0 ) || ( y > ( getHeight () ) ) ) ) { return null ; } return y ; } 
@ org.junit.Test public void setPerformed ( ) throws java.lang.Exception { int numOfFinishedTasks = repo . getDurationInfo ( 1 ) . getNumOfFinishedTasks () ; org.junit.Assert . assertEquals ( "There should be no finished tasks, yet" , 0 , numOfFinishedTasks , 0 ) ; repo . setPerformed ( 1 , 5 ) ; numOfFinishedTasks = repo . getDurationInfo ( 1 ) . getNumOfFinishedTasks () ; org.junit.Assert . assertEquals ( "There should be 1 finished task now" , 1 , numOfFinishedTasks , 0 ) ; } 
void ojld ( int num1 , int num2 ) { this . maxcommom = 1 ; num1 = java.lang.Math . abs ( num1 ) ; num2 = java.lang.Math . abs ( num2 ) ; if ( num2 > num1 ) { int temp = num2 ; num2 = num1 ; num1 = temp ; } if ( num2 == 0 ) { return; } if ( ( num1 % num2 ) == 0 ) { this . maxcommom = num2 ; return; } int temp = num1 % num2 ; ojld ( num2 , temp ) ; } 
public java.util.List < org.fife.ui.rsyntaxtextarea.DocumentRange > getMarkedOccurrences () { java.util.List < org.fife.ui.rsyntaxtextarea.DocumentRange > list = new java.util.ArrayList < org.fife.ui.rsyntaxtextarea.DocumentRange > ( markedOccurrences . size () ) ; for ( org.fife.ui.rsyntaxtextarea.HighlightInfo info : markedOccurrences ) { int start = info . getStartOffset () ; int end = ( info . getEndOffset () ) + 1 ; if ( start <= end ) { org.fife.ui.rsyntaxtextarea.DocumentRange range = new org.fife.ui.rsyntaxtextarea.DocumentRange ( start , end ) ; list . add ( range ) ; } } return list ; } 
private com.louiscarrese.clopecounter.model.Jour createJour () { io.realm.Realm realm = io.realm.Realm . getDefaultInstance () ; long id ; if ( ( realm . where ( com.louiscarrese.clopecounter.model.Jour . class ) . count () ) > 0 ) { id = ( realm . where ( com.louiscarrese.clopecounter.model.Jour . class ) . maximumInt ( "id" ) ) + 1 ; } else { id = 1 ; } com.louiscarrese.clopecounter.model.Jour j = new com.louiscarrese.clopecounter.model.Jour () ; j . setId ( id ) ; return j ; } 
public void move ( int from , int to ) { int lastPos = getPosition () ; super . add ( to , super . remove ( from ) ) ; mObservable . notifyChanged () ; if ( from == lastPos ) moveToPosition ( to ) ; else if ( ( from < lastPos ) && ( to >= lastPos ) ) moveToPosition ( ( lastPos - 1 ) ) ; else if ( ( from > lastPos ) && ( to <= lastPos ) ) moveToPosition ( ( lastPos + 1 ) ) ; } 
@ java.lang.Override public void writeToPacket ( io.netty.buffer.ByteBuf buf ) { net.minecraftforge.fluids.FluidStack fluidStack = ( ( this . tank [ 0 ] ) != null ) ? this . tank [ 0 ] . getFluid () : null ; int fluidAmount = - 1 ; int fluidID = - 1 ; if ( fluidStack != null ) { fluidAmount = fluidStack.amount ; fluidID = fluidStack . getFluidID () ; } buf . writeInt ( fluidAmount ) ; buf . writeInt ( fluidID ) ; buf . writeBoolean ( isActive ) ; } 
@ java.lang.Override public boolean canAct ( org.roda.wui.client.common.actions.Actionable.Action < org.roda.core.data.v2.ip.IndexedAIP > action , org.roda.core.data.v2.ip.IndexedAIP aip ) { boolean canAct ; if ( aip . equals ( org.roda.wui.client.common.actions.AipActions.NO_AIP_OBJECT ) ) { canAct = org.roda.wui.client.common.actions.AipActions.POSSIBLE_ACTIONS_ON_NO_AIP . contains ( action ) ; } else if ( AIPState.UNDER_APPRAISAL . equals ( aip . getState () ) ) { canAct = ( org.roda.wui.client.common.actions.AipActions.POSSIBLE_ACTIONS_ON_SINGLE_AIP . contains ( action ) ) || ( org.roda.wui.client.common.actions.AipActions.APPRAISAL_ACTIONS . contains ( action ) ) ; } else { canAct = org.roda.wui.client.common.actions.AipActions.POSSIBLE_ACTIONS_ON_SINGLE_AIP . contains ( action ) ; } return canAct ; } 
public MaRzAgent.SuffixNode findBestNodeToTry () { MaRzAgent.SuffixNode [] nodes = ( ( MaRzAgent.SuffixNode [] ) ( hashFringe . values () . toArray ( new MaRzAgent.SuffixNode [ hashFringe . size () ] ) ) ) ; assert ( nodes.length ) > 0 ; double theBEASTLIESTCombo = nodes [ 0 ] . heuristic ; MaRzAgent.SuffixNode bestNode = nodes [ 0 ] ; for ( MaRzAgent.SuffixNode node : nodes ) { if ( ( node.heuristic ) > theBEASTLIESTCombo ) { theBEASTLIESTCombo = node.heuristic ; bestNode = node ; } } return bestNode ; } 
@ java.lang.Override public com.udacity.gradle.joketeller.Joke loadInBackground () { int retryCount = 0 ; com.udacity.gradle.joketeller.Joke joke = loadJoke () ; if ( ( ( lastJoke ) != null ) && ( joke != null ) ) { while ( ( joke . equals ( lastJoke ) ) && ( retryCount < ( com.udacity.gradle.builditbigger.MainActivity.RETRY_LIMIT ) ) ) { timber.log.Timber . d ( "Got the same joke, looking for fresh material!" ) ; joke = loadJoke () ; retryCount ++ ; } } return joke ; } 
private java.util.Collection < com.google.protobuf.Descriptors.FieldDescriptor > findSourceFields ( com.google.protobuf.Descriptors.FieldDescriptor enrichmentField ) { final java.lang.String byOptionArgument = enrichmentField . getOptions () . getExtension ( EventAnnotationsProto.by ) ; com.google.common.base.Preconditions . checkNotNull ( byOptionArgument ) ; final int pipeSeparatorIndex = byOptionArgument . indexOf ( org.spine3.server.event.enrich.ReferenceValidator.PIPE_SEPARATOR ) ; if ( pipeSeparatorIndex < 0 ) { return java.util.Collections . singleton ( findSourceFieldByName ( byOptionArgument , enrichmentField , true ) ) ; } else { final java.lang.String [] targetFieldNames = org.spine3.server.event.enrich.ReferenceValidator.PATTERN_PIPE_SEPARATOR . split ( byOptionArgument ) ; return findSourceFieldsByNames ( targetFieldNames , enrichmentField ) ; } } 
public int run ( java.io.File source , java.io.File destination ) { status = org.dataaccessioner.Migrator.STATUS_INITIALIZING ; try { status = org.dataaccessioner.Migrator.STATUS_RUNNING ; status = copyDirectory ( source , destination ) ; } catch ( java.io.FileNotFoundException ex ) { setStatusMessage ( ex . getLocalizedMessage () ) ; return org.dataaccessioner.Migrator.STATUS_FAILURE ; } catch ( java.lang.Exception ex ) { setStatusMessage ( ( "Unexpected Failure: " + ( ex . getLocalizedMessage () ) ) ) ; return org.dataaccessioner.Migrator.STATUS_FAILURE ; } return status ; } 
private double [] primConverter ( java.lang.Double [] valArr ) { double [] primArr = new double [ valArr.length ] ; for ( int i = 0 ; i < ( valArr.length ) ; i ++ ) { primArr [ i ] = valArr [ i ] ; } return primArr ; } 
@ java.lang.Override public int compare ( com.example.nickozoulis.teamproj.domain.Referee lRef , com.example.nickozoulis.teamproj.domain.Referee rRef ) { int res = firstClassOrdering ( lRef , rRef ) ; if ( res == 0 ) { res = secondClassOrdering ( lRef , rRef ) ; if ( res == 0 ) { res = thirdClassOrdering ( lRef , rRef ) ; } } return res ; } 
public void run ( @ org.jetbrains.annotations.NotNull com.intellij.openapi.progress.ProgressIndicator progressIndicator ) { if ( Utils.debug ) { com.intellij.perlplugin.Utils . print ( "parsing started" ) ; } long start = java.lang.System . currentTimeMillis () ; com.intellij.perlplugin.PerlInternalParser . parseAllSources ( progressIndicator ) ; long end = java.lang.System . currentTimeMillis () ; if ( Utils.debug ) { com.intellij.perlplugin.Utils . print ( ( ( "update completed in " + ( ( end - start ) / 1000 ) ) + "sec" ) ) ; } } 
private void findPercentiles () { int count = 0 ; lowerIndex = 0 ; for ( lowerIndex = 0 ; ( ( lowerIndex ) < ( histogram.length ) ) && ( count < ( lowerCount ) ) ; ( lowerIndex ) ++ ) { count += histogram [ lowerIndex ] ; } for ( upperIndex = lowerIndex ; ( ( upperIndex ) < ( histogram.length ) ) && ( count < ( upperCount ) ) ; ( upperIndex ) ++ ) { count += histogram [ upperIndex ] ; } } 
void drainUntil ( long upToNanos ) { long now = timeNanos ; java.util.concurrent.PriorityBlockingQueue < hu.akarnokd.reactive4javaflow.TestSchedulerService.TestTask > q = queue ; for ( ; ; ) { hu.akarnokd.reactive4javaflow.TestSchedulerService.TestTask tt = q . peek () ; if ( ( tt == null ) || ( ( tt.dueNanos ) > upToNanos ) ) { break; } q . remove ( tt ) ; timeNanos = tt.dueNanos ; tt . run () ; } timeNanos = upToNanos ; } 
private boolean containsRPurchase ( uwi.dcit.agriexpensesvr.ResourcePurchase rpurchase ) { com.google.appengine.api.NamespaceManager . set ( rpurchase . getAccount () ) ; javax.persistence.EntityManager mgr = uwi.dcit.agriexpensesvr.ResourcePurchaseEndpoint . getEntityManager () ; boolean contains = true ; try { uwi.dcit.agriexpensesvr.ResourcePurchase item = mgr . find ( uwi.dcit.agriexpensesvr.ResourcePurchase . class , rpurchase . getKey () ) ; if ( item == null ) { contains = false ; } } finally {} return contains ; } 
@ java.lang.Override public void joinServer ( java.net.InetSocketAddress server ) { java.lang.String host = server . getHostString () ; int port = server . getPort () ; net.minecraft.client.multiplayer.ServerData serverData = new net.minecraft.client.multiplayer.ServerData ( "Sponge API Call" , ( ( host + ":" ) + port ) , false ) ; net.minecraftforge.fml.client.FMLClientHandler . instance () . connectToServer ( this . currentScreen , serverData ) ; } 
public int hit ( int armor ) { int damage ; if ( ( armor > 0 ) && ( armor < 20 ) ) { damage = this . DAMAGE ; } else { damage = ( this . DAMAGE ) - armor ; } return damage < 0 ? 0 : damage ; } 
public double calculateIDF ( java.util.List < java.lang.String [] > documents , java.lang.String wordToCheck ) { double count = 0 ; for ( java.lang.String [] ss : documents ) { for ( java.lang.String s : ss ) { if ( s . equalsIgnoreCase ( wordToCheck ) ) { count ++ ; break; } } } return java.lang.Math . log ( ( ( ( documents . size () ) / 1 ) + count ) ) ; } 
@ java.lang.Override public void resolveAnaphora () { java.util.List < org.tariel.pla.logics.Proposition > props = org.tariel.pla.logics.VariableStorage . getPopostionList () ; int i = 0 ; for ( org.tariel.pla.logics.classic.CQuantifer quant : this . getQuantifers () ) { if ( i < ( props . size () ) ) props . get ( i ) . setLinkedId ( ( ( java.lang.String ) ( quant . getVar () . getSourceId () ) ) ) ; i ++ ; } } 
@ java.lang.Override protected void onMeasure ( int widthMeasureSpec , int heightMeasureSpec ) { if ( heightMeasureSpec != 0 ) { int sizeWidth = de.dmxcontrol.widget.MeasureSpec . getSize ( widthMeasureSpec ) ; int sizeHeight = de.dmxcontrol.widget.MeasureSpec . getSize ( heightMeasureSpec ) ; if ( ( sizeHeight < sizeWidth ) && false ) { heightMeasureSpec = de.dmxcontrol.widget.MeasureSpec . makeMeasureSpec ( sizeHeight , de.dmxcontrol.widget.MeasureSpec . getMode ( heightMeasureSpec ) ) ; } } super . onMeasure ( widthMeasureSpec , heightMeasureSpec ) ; } 
private void next () { update () ; int next = ( status . ordinal () ) + 1 ; if ( next >= ( PipelineConfig.Step . values () . length ) ) { ch.epfl.planair.Planair . become ( ch.epfl.planair.mods.MenuMode . class ) ; } else { toStep ( next ) ; } } 
@ java.lang.Override public void onSensorChanged ( android.hardware.SensorEvent event ) { if ( ( spaceShip ) == null ) return; if ( ( event.sensor . getType () ) == ( android.hardware.Sensor.TYPE_ACCELEROMETER ) ) { float rawX = event.values [ 0 ] ; float normalizedX = rawX * ( - 2.0F ) ; spaceShip . setXVelocity ( ( ( int ) ( normalizedX ) ) ) ; } } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { int prog = seekBar . getProgress () ; this . warmth = prog + 1 ; this . recapWarmth . setText ( android.text.Html . fromHtml ( ( ( ( "<b>" + ( res . getString ( R.string.recapHot ) ) ) + "</b>" ) + ( hotWordArray [ prog ] ) ) ) ) ; } 
private int decideAction () { setHorizontalVelocity ( 0.0 ) ; java.util.Random rand = new java.util.Random () ; actionDuration = ( ( rand . nextDouble () ) * 3.0 ) + 1.0 ; actionTime = 0.0 ; int randomNum = rand . nextInt ( 4 ) ; return randomNum ; } 
private static double compare ( final java.lang.String v1 , final java.lang.String v2 , final double high , final double low , final java.util.Comparator comparator ) { if ( comparator == null ) { return org.yaba.entity.script.EntityResolutionScript.AVERAGE_SCORE ; } double sim = comparator . compare ( v1 , v2 ) ; if ( sim < low ) { return low ; } else { return ( ( high - ( org.yaba.entity.script.EntityResolutionScript.AVERAGE_SCORE ) ) * ( sim * sim ) ) + ( org.yaba.entity.script.EntityResolutionScript.AVERAGE_SCORE ) ; } } 
private void outputToFile ( java.lang.String text ) { java.lang.String id = xaurora.io.IDGenerator . instanceOf () . GenerateID ( xaurora.communication.ChromeServer . getURL ( text ) , xaurora.communication.ChromeServer.TYPE_FULL_TEXT ) ; xaurora.io.DataFileIO . instanceOf () . createDataFile ( id , java.lang.String . valueOf ( text ) . getBytes () ) ; java.lang.System.out . println ( java.lang.String . valueOf ( text ) ) ; } 
private void updateMaster () { if ( masterExists () ) { int sum = 0 ; for ( bei.m3c.widgets.LightWidget lightWidget : largeLightWidgets . subList ( 1 , largeLightWidgets . size () ) ) { sum += lightWidget . getValue () ; } largeLightWidgets . get ( 0 ) . setValue ( sum ) ; } } 
public void checkFinished () { boolean status = true ; for ( int index : player . getHighlightedFiguresIndizes () ) { if ( stage . getActors () . get ( index ) . isVisible () ) { status = false ; } } if ( ( status && ( ( kickedIndex ) == ( - 1 ) ) ) && ( ( actorActive ) == ( - 1 ) ) ) { handler . sendMessage ( player . getNumber () ) ; } } 
@ java.lang.Override public double deposit ( double amount ) { if ( ( getBalance () ) == 0 ) return 0 ; double deposited = super . deposit ( amount ) ; double finalDeposit = against . deposit ( deposited ) ; double difference = deposited - finalDeposit ; if ( difference != 0 ) { super . withdraw ( difference ) ; } return finalDeposit ; } 
protected static java.lang.String [] createNames ( int nameCount , java.lang.String preamble ) { if ( preamble == null ) preamble = "V" ; int i = 0 ; java.lang.String [] n = new java.lang.String [ nameCount ] ; while ( i < nameCount ) { n [ i ] = preamble + ( ++ i ) ; } return n ; } 
public static int getFutureLinesVanished ( de.slothsoft.tetris.Board board , de.slothsoft.tetris.Stone stone , int blockY ) { int lines = 0 ; for ( int y = 0 ; y < ( stone . getHeightInBlocks () ) ; y ++ ) { int stoneBlocks = stone . calculateBlockCountOfLine ( y ) ; int boardBlocksCount = board . calculateBlockCountOfLine ( ( y + blockY ) ) ; if ( ( stoneBlocks + boardBlocksCount ) >= ( Board.WIDTH_IN_BLOCKS ) ) { lines ++ ; } } return lines ; } 
public int incrementNumberOfScheduledDeliveries ( long messageID ) { org.wso2.andes.kernel.OnflightMessageTracker.MsgData trackingData = getTrackingData ( messageID ) ; int numOfSchedules = 0 ; if ( trackingData != null ) { trackingData . addMessageStatus ( MessageStatus.SCHEDULED_TO_SEND ) ; numOfSchedules = trackingData.numberOfScheduledDeliveries . incrementAndGet () ; if ( org.wso2.andes.kernel.OnflightMessageTracker.log . isDebugEnabled () ) { org.wso2.andes.kernel.OnflightMessageTracker.log . debug ( ( ( ( "message id= " + messageID ) + " scheduled. Pending to execute= " ) + numOfSchedules ) ) ; } } return numOfSchedules ; } 
public boolean applyTop ( int id ) { boolean bool = false ; int applyTotal = newsDao . applyTotalTop () ; if ( applyTotal < 5 ) { int count = newsDao . applyTop ( id ) ; if ( count > 0 ) { bool = true ; } } return bool ; } 
public ATMServer.Server handleData ( ) throws java.io.IOException { int i = 0 ; int maxConnections = 200 ; byte id = 1 ; while ( ( i ++ ) < maxConnections ) { java.net.Socket clientConnection = s . accept () ; id ++ ; ATMServer.Worker worker = new ATMServer.Worker ( clientConnection , functions , clientData , id ) ; java.lang.Thread t = new java.lang.Thread ( worker ) ; t . start () ; logger . info ( ( "New client connected, assigned thread ID #" + ( t . getId () ) ) ) ; } return this ; } 
private source.Node < T > find ( T key , source.Node < T > node ) { if ( node == null ) { return null ; } int comparison = key . compareTo ( node.key ) ; if ( comparison == 0 ) { return node ; } else if ( comparison > 0 ) { return find ( key , node.rightChild ) ; } else { return find ( key , node.leftChild ) ; } } 
@ java.lang.Override public void onChanged () { super . onChanged () ; int childCount = getChildCount () ; if ( childCount < ( com.daprlabs.cardstack.SwipeDeck.NUMBER_OF_CARDS ) ) { for ( int i = childCount ; i < ( com.daprlabs.cardstack.SwipeDeck.NUMBER_OF_CARDS ) ; ++ i ) { addNextCard () ; } for ( int i = 0 ; i < ( getChildCount () ) ; ++ i ) { positionItem ( i ) ; } } } 
public boolean connectWith ( final com.kcht.parking.charge.timeline.Period another ) { return ( ( ( ( this . endHour ) == ( another.startHour ) ) && ( ( this . endMinute ) == ( another.startMinute ) ) ) && ( ( this . startHour ) == ( another.endHour ) ) ) && ( ( this . startMinute ) == ( another.endMinute ) ) ; } 
public java.lang.String [] removeEntry ( java.lang.String [] arrayToRemoveFrom , int entryNumber ) { java.lang.String [] result = new java.lang.String [ ( arrayToRemoveFrom.length ) - 1 ] ; int tmp = 0 ; for ( int i = 0 ; i < ( result.length ) ; i ++ ) { if ( i == entryNumber ) { tmp = 1 ; } result [ i ] = arrayToRemoveFrom [ ( i + tmp ) ] ; } return result ; } 
@ java.lang.Override public team379.pathfinding.PathFindResult move ( battlecode.common.RobotController rc ) throws java.lang.Exception { if ( ( ( compassDirection ) == null ) || ( ( getTarget () ) == null ) ) { calculateNextTarget ( true ) ; } else { int distanceSquared = getTarget () . distanceSquaredTo ( rc . getLocation () ) ; double distance = java.lang.Math . sqrt ( distanceSquared ) ; if ( distance < ( team379.pathfinding.Orbiter.DISTANCE_THRESHOLD ) ) { calculateNextTarget ( true ) ; } } return super . move ( rc ) ; } 
@ org.junit.Test public void testTop () { edu.kis.vh.stacks.StackFIFO stackObj = new edu.kis.vh.stacks.StackFIFO () ; final int EMPTY_STACK_VALUE = 0 ; int result = stackObj . top () ; org.junit.Assert . assertEquals ( EMPTY_STACK_VALUE , result ) ; int testValue = 4 ; stackObj . push ( testValue ) ; int testValue1 = 5 ; stackObj . push ( testValue1 ) ; result = stackObj . top () ; org.junit.Assert . assertEquals ( testValue , result ) ; result = stackObj . top () ; org.junit.Assert . assertEquals ( testValue , result ) ; } 
private static int getNumberOfWeeksOfYear ( int year ) { java.util.Calendar c = java.util.Calendar . getInstance () ; c . set ( java.util.Calendar.YEAR , year ) ; c . set ( java.util.Calendar.MONTH , java.util.Calendar.DECEMBER ) ; c . set ( java.util.Calendar.DAY_OF_MONTH , 31 ) ; int ordinalDay = c . get ( java.util.Calendar.DAY_OF_YEAR ) ; int weekDay = ( c . get ( java.util.Calendar.DAY_OF_WEEK ) ) - 1 ; return ( ( ordinalDay - weekDay ) + 10 ) / 7 ; } 
@ java.lang.Override public void onItemSelected ( android.widget.AdapterView < ? > parent , android.view.View view , int pos , long id ) { android.util.Log . d ( ru.chernysh.plasmatorchsetup.MainActivity.LOG_TAG , ( "Selection in model spinner with pos = " + pos ) ) ; ru.chernysh.plasmatorchsetup.CustomAdapter adapter = ( ( ru.chernysh.plasmatorchsetup.CustomAdapter ) ( parent . getAdapter () ) ) ; if ( adapter != null ) { adapter . setSelected ( true ) ; int selectedKey = adapter . getKey ( pos ) ; } } 
private int getInternalIndexOfObjectAt ( int index ) throws java.lang.IndexOutOfBoundsException { int nbObjectsSoFar = 0 ; int pos = 0 ; while ( nbObjectsSoFar < index ) { jumpingalien.model.Characters currentObject = objects . get ( pos ) ; if ( ( currentObject != null ) && ( ( objects . indexOf ( currentObject ) ) == pos ) ) nbObjectsSoFar ++ ; pos ++ ; } return pos - 1 ; } 
@ java.lang.Override public java.lang.Object getNewValue () { if ( null != ( dataSource ) ) { return dataSource ; } try { long id = ( ( java.lang.Long ) ( super . getNewValue () ) ) ; dataSource = org.sleuthkit.autopsy.casemodule.Case . getCurrentCase () . getSleuthkitCase () . getContentById ( id ) ; return dataSource ; } catch ( java.lang.IllegalStateException | org.sleuthkit.datamodel.TskCoreException ex ) { org.sleuthkit.autopsy.casemodule.events.DataSourceAddedEvent.logger . log ( java.util.logging.Level.SEVERE , "Error doing lazy load for remote event" , ex ) ; return null ; } } 
public static int code ( java.lang.String format ) { try { int index = ygoprocardmaker.enumerate.CardFormat.FORMATS . indexOf ( format ) ; if ( index == ( - 1 ) ) { throw new java.lang.IllegalArgumentException () ; } return index + 1 ; } catch ( java.lang.Exception e ) { throw new java.lang.IllegalArgumentException () ; } } 
protected void setMetaData () { boolean showOSD = preferences . getBoolean ( "internal_player_osd" , true ) ; if ( showOSD ) { mediaController . show ( SerenitySurfaceViewVideoActivity.CONTROLLER_DELAY ) ; } if ( ( progressReportingHandler ) != null ) { progressReportingHandler . postDelayed ( progressRunnable , 5000 ) ; } } 
protected static java.lang.String getRoomName ( java.util.ArrayList < main.java.com.marist.mscs721.Room > rooms ) { boolean inputCheck = false ; java.lang.String test = "" ; while ( ! inputCheck ) { java.lang.System.out . println ( "Room Name?" ) ; test = main.java.com.marist.mscs721.RoomScheduler.keyboard . next () ; java.lang.System.out . println ( main.java.com.marist.mscs721.RoomScheduler . findRoomIndex ( rooms , test ) ) ; if ( ( main.java.com.marist.mscs721.RoomScheduler . findRoomIndex ( rooms , test ) ) == ( - 1 ) ) { java.lang.System.out . println ( "ERROR: Invalid room. Please input a room that is on the room list." ) ; } else { inputCheck = true ; } } return test ; } 
java.util.ArrayList < java.lang.Runnable > dependentStopped () { assert java.lang.Thread . holdsLock ( this ) ; final java.util.ArrayList < java.lang.Runnable > tasks ; synchronized ( this ) { final boolean leavingRestState = isStableRestState () ; if ( ( -- ( runningDependents ) ) != 0 ) { return new java.util.ArrayList < java.lang.Runnable > () ; } tasks = new java.util.ArrayList < java.lang.Runnable > () ; transition ( tasks ) ; asyncTasks += tasks . size () ; updateStabilityState ( leavingRestState ) ; } return tasks ; } 
@ org.junit.Test public void testPostConstructorDB () { java.lang.String title = "Please get me out of the db!" ; java.lang.String text = "All I want is to be with you!" ; logic.Post op = new logic.Post ( title , text ) ; long postID = op . save () ; logic.Post post = new logic.Post ( postID ) ; assertEquals ( postID , post.postID ) ; op . delete () ; } 
public void updateObjIdOnStack ( int objId , int traceBack ) { int idx = ( ( this . stackSimulator . size () ) - 1 ) - traceBack ; edu.columbia.psl.cc.pojo.InstNode latestInst = this . stackSimulator . get ( idx ) ; latestInst . setRelatedObjId ( objId ) ; } 
@ org.jetbrains.annotations.Nullable public io.github.eterverda.playless.common.Dist bestMyReplacement ( io.github.eterverda.playless.common.Dist . . . candidates ) { int bestVersionCode = versionCode ; io.github.eterverda.playless.common.Dist bestDist = null ; for ( io.github.eterverda.playless.common.Dist candidate : candidates ) { if ( ! ( candidate.applicationId . equals ( applicationId ) ) ) { continue; } if ( ! ( matcher . isCompatible ( candidate.filter ) ) ) { continue; } if ( ( candidate.version.versionCode ) <= bestVersionCode ) { continue; } bestDist = candidate ; } return bestDist ; } 
private void adaptPortBindingToParallelRun ( org.arquillian.cube.docker.impl.client.config.CubeContainer cubeContainer ) { final java.util.Collection < org.arquillian.cube.docker.impl.client.config.PortBinding > portBindings = cubeContainer . getPortBindings () ; if ( portBindings == null ) { return; } for ( org.arquillian.cube.docker.impl.client.config.PortBinding portBinding : portBindings ) { final int randomPrivatePort = generateRandomPrivatePort () ; portBinding . setBound ( randomPrivatePort ) ; } } 
@ java.lang.Override public java.lang.String decode ( java.lang.String plain ) { java.lang.String decrypted = "" ; for ( char letter : plain . toUpperCase () . toCharArray () ) { int index = com.soesec.util.Alphabet . IndexOf ( letter ) ; if ( index < 0 ) { decrypted += letter ; continue; } int i = index - ( info . getRightShift () ) ; if ( i < 0 ) { i = 26 + i ; } i = i % 26 ; decrypted += com.soesec.util.Alphabet . At ( i ) ; } return decrypted ; } 
public domain.Coordenada getEsquerra ( int color ) throws java.lang.Exception { int x = ( this . x ) + 1 ; int y ; if ( color == 0 ) y = ( this . y ) + 1 ; else y = ( this . y ) - 1 ; return new domain.Coordenada ( x , y ) ; } 
private void drawBins ( java.awt.Graphics g ) { g . setColor ( java.awt.Color.GRAY ) ; int x = LEFT_MARGIN ; int y = ( getHeight () ) - ( BOTTOM_MARGIN ) ; for ( int b : bins ) { int height = ( ( int ) ( scaleY ( b ) ) ) ; y -= height ; g . fill3DRect ( x , y , binWidth , height , true ) ; x += binWidth ; y = ( getHeight () ) - ( BOTTOM_MARGIN ) ; } } 
public java.util.List < java.lang.Double > prodOfLists ( java.util.List < java.lang.Double > xList , java.util.List < java.lang.Double > yList ) { java.util.List < java.lang.Double > resList = new java.util.ArrayList < java.lang.Double > () ; int size = xList . size () ; for ( int i = 0 ; i < size ; i ++ ) { resList . add ( i , ( ( xList . get ( i ) ) * ( yList . get ( i ) ) ) ) ; } return resList ; } 
public void myTick ( long mils ) { if ( ( mils % 1000 ) == 0 ) { int minsRemaining = ( ( int ) ( mils ) ) / 60000 ; int secsRemaining = ( ( ( int ) ( mils ) ) / 1000 ) % 60 ; java.lang.String time = ( ( java.lang.Integer . toString ( minsRemaining ) ) + ":" ) + ( java.lang.String . format ( "%02d" , secsRemaining ) ) ; timeRemaining . setText ( time ) ; } timeInMilis = mils ; } 
public static int eval ( Board board ) { int sum = 50 ; int score = board . isConnectN () ; if ( score == 1 ) { sum = 1000 ; } else if ( score == 2 ) { sum = - 1000 ; } else if ( score == ( - 1 ) ) {} return sum ; } 
public java.lang.String displayContents () { java.lang.String contents = "" ; int index = 0 ; while ( index < ( size () ) ) { T data = get ( index ) ; if ( data != null ) { contents = ( ( ( ( contents + "[ " ) + index ) + " ]\t= " ) + data ) + "\n" ; } index ++ ; } return contents ; } 
@ org.junit.Test public void doesNotAdjustToError () { neuralNetwork.InputPerceptron testPerceptron = new neuralNetwork.InputPerceptron ( 0 ) ; final double testInput = 1.0 ; testPerceptron . setInput ( testInput ) ; testPerceptron . activate () ; testPerceptron . adjustToError () ; testPerceptron . activate () ; assertEquals ( testInput , testPerceptron . output () , DELTA ) ; } 
@ java.lang.Override public void run () { boolean end = false ; while ( ! end ) { if ( ( elements . size () ) > 0 ) { de.uni_hildesheim.sse.monitoring.runtime.recordingServer.RecordingStrategiesElement element = elements . remove ( 0 ) ; element . process ( strategy ) ; int id = element . getIdentification () ; element . release () ; end = ( Constants.ENDSYSTEM ) == id ; } else { java.lang.Thread . yield () ; } } printElementStatistics () ; } 
public boolean containsKey ( java.lang.Object key ) { int pos = getHash ( key ) ; if ( ( table [ pos ] ) == null ) { return false ; } else { hashtable.HashTable.Node curr = table [ pos ] ; while ( curr != null ) { if ( curr.key . equals ( key ) ) { return true ; } curr = curr.next ; } return false ; } } 
@ java.lang.Override @ cpw.mods.fml.relauncher.SideOnly ( value = cpw.mods.fml.relauncher.Side.CLIENT ) protected net.minecraft.util.IIcon getUnderlayIcon ( net.minecraft.world.IBlockAccess world , int x , int y , int z , int side ) { int meta = world . getBlockMetadata ( x , y , z ) ; org.pfaa.chemica.model.IndustrialMaterial host = this . getGeoMaterial ( meta ) . getHost () ; if ( host != null ) { net.minecraft.util.IIcon icon = getHostIcon ( world , x , y , z ) ; if ( icon != null ) { return icon ; } } return this . getUnderlayIcon ( side , meta ) ; } 
@ java.lang.Override public int linearIndex ( int i ) { setLinearStride () ; int idx = i ; for ( int j = 0 ; j < ( ( org.nd4j.linalg.api.shape.Shape . rank ( shapeInformation ) ) - 1 ) ; j ++ ) { if ( ( size ( i ) ) == 1 ) continue; idx += i * ( stride ( j ) ) ; } return ( org.nd4j.linalg.api.shape.Shape . offset ( shapeInfo () ) ) + idx ; } 
public static int addAssetPath ( android.content.res.AssetManager assets , java.lang.String path ) { if ( ( net.wequick.small.util.ReflectAccelerator.sAddAssetPath ) == null ) { net.wequick.small.util.ReflectAccelerator.sAddAssetPath = net.wequick.small.util.ReflectAccelerator . getMethod ( android.content.res.AssetManager . class , "addAssetPath" , new java.lang.Class [] { java.lang.String . class } ) ; } if ( ( net.wequick.small.util.ReflectAccelerator.sAddAssetPath ) == null ) return 0 ; java.lang.Integer ret = net.wequick.small.util.ReflectAccelerator . invoke ( net.wequick.small.util.ReflectAccelerator.sAddAssetPath , assets , path ) ; if ( ret == null ) return 0 ; return ret ; } 
public int getRoomCost () { int roomCost = 0 ; switch ( roomType ) { case 'I' : roomCost = ( HospitalMVC.Patient.icRoomRate ) * ( days ) ; break; case 'P' : roomCost = ( HospitalMVC.Patient.privateRoomRate ) * ( days ) ; break; default: roomCost = ( HospitalMVC.Patient.doubleRoomRate ) * ( days ) ; break; } return roomCost ; } 
public void setTemperature ( java.lang.String h ) { strTemperature = h ; if ( h != null ) { int i = strTemperature . indexOf ( '.' ) ; i = java.lang.Integer . parseInt ( strTemperature . substring ( 0 , i ) ) ; if ( i > ( maxTemp ) ) maxTemp = ( ( byte ) ( i ) ) ; } } 
public boolean findItem ( java.lang.String item ) { boolean q = false ; java.lang.String name = item ; for ( int num = 0 ; num < 101 ; num ++ ) { if ( items [ num ] [ 0 ] . toLowerCase () . equals ( name . toLowerCase () ) ) { q = true ; } } return q ; } 
private static boolean isKeyPressed ( net.minecraft.client.settings.KeyBinding instance ) { try { java.lang.reflect.Field field = net.minecraft.client.settings.KeyBinding . class . getDeclaredField ( "pressTime" ) ; field . setAccessible ( true ) ; java.lang.Object obj = field . get ( instance ) ; int c = ( ( java.lang.Integer ) ( obj ) ) ; if ( c > 0 ) { return true ; } } catch ( java.lang.Exception e ) {} return false ; } 
@ java.lang.Override public void reduce ( org.apache.hadoop.io.Text word , java.lang.Iterable < org.apache.hadoop.io.IntWritable > counts , com.moz.commoncrawl.Context context ) throws java.io.IOException , java.lang.InterruptedException { int sum = 0 ; for ( org.apache.hadoop.io.IntWritable count : counts ) { sum += count . get () ; } if ( ( ( threshold ) == ( - 1 ) ) || ( sum > ( threshold ) ) ) context . write ( word , new org.apache.hadoop.io.IntWritable ( sum ) ) ; } 
public void backNavigation () { boolean popped = getSupportFragmentManager () . popBackStackImmediate () ; if ( popped ) { com.swerly.wifiheatmap.FragmentBase curFrag = ( ( com.swerly.wifiheatmap.FragmentBase ) ( fragmentManager . findFragmentById ( R.id.fragment_container ) ) ) ; fabHelper . setupFab ( curFrag , true ) ; } else { finish () ; } } 
public static java.lang.String readHeaderString ( byte [] buffer ) { int i = 0 ; while ( ( i < ( buffer.length ) ) && ( ! ( webserver.ParseTools . endOfHeader ( buffer , ( i - 1 ) ) ) ) ) { i ++ ; } return new java.lang.String ( buffer , 0 , i ) ; } 
private java.lang.String encode ( java.lang.String input ) { java.lang.String rtn = "" ; java.lang.String first5 = input . toLowerCase () . concat ( "      " ) . substring ( 0 , 5 ) ; for ( int i = 0 ; i < 5 ; ++ i ) { int ascii = ( ( int ) ( first5 . charAt ( i ) ) ) ; rtn = rtn . concat ( java.lang.String . valueOf ( ascii ) ) ; } return java.lang.String . valueOf ( java.lang.Long . parseLong ( rtn ) ) ; } 
private boolean confirmDeleteProjects ( java.util.List < org.eclipse.core.resources.IResource > resources ) { org.eclipse.ui.actions.DeleteResourceAction.DeleteProjectDialog dialog = new org.eclipse.ui.actions.DeleteResourceAction.DeleteProjectDialog ( shellProvider . getShell () , resources ) ; dialog . setTestingMode ( fTestingMode ) ; int code = dialog . open () ; deleteContent = dialog . getDeleteContent () ; return code == 0 ; } 
long getZobristKey ( java.util.HashSet < java.lang.String > wPawns , java.util.HashSet < java.lang.String > bPawns ) { long zobristKey = 0 ; for ( java.lang.String wPos : wPawns ) zobristKey ^= wZobrist . get ( wPos ) ; for ( java.lang.String bPos : bPawns ) zobristKey ^= bZobrist . get ( bPos ) ; return zobristKey ; } 
public boolean keyboardMashChecker ( java.lang.String currentInput ) { boolean hasMash = false ; if ( ( ( ( currentInput . toLowerCase () . contains ( "sdf" ) ) || ( currentInput . toLowerCase () . contains ( "dfg" ) ) ) || ( currentInput . toLowerCase () . contains ( "cvb" ) ) ) || ( currentInput . toLowerCase () . contains ( ",./" ) ) ) { hasMash = true ; } return hasMash ; } 
protected void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { super . onActivityResult ( requestCode , resultCode , data ) ; switch ( requestCode ) { case 1 : if ( resultCode == ( android.app.Activity.RESULT_OK ) ) { int switchNum = data . getIntExtra ( com.example.scanitgrocerystorehelper.MainActivity.DELETE_SWITCH , 0 ) ; if ( switchNum != 0 ) { long newNum = data . getLongExtra ( com.example.scanitgrocerystorehelper.MainActivity.KEY_LIST_ID , 0 ) ; if ( newNum != 0 ) deleteList ( mSqlAdapter . getList ( newNum ) ) ; } } } } 
public int getStats ( java.lang.String route , int stat ) { int output = 0 ; switch ( route ) { case "conquest" : { output = conquest [ stat ] ; break; } case "birthright" : { output = birthright [ stat ] ; break; } case "revelations" : { output = revelations [ stat ] ; break; } } return output ; } 
private synchronized long registerOperationWithHeapSize ( long heapSize ) throws java.lang.InterruptedException { long operationId = ++ ( operationSequenceGenerator ) ; while ( ( ( currentWriteBufferSize ) >= ( maxHeapSize ) ) || ( ( pendingOperationsWithSize . size () ) >= ( maxInFlightRpcs ) ) ) { wait ( com.google.cloud.bigtable.hbase.BigtableBufferedMutator.WAIT_MILLIS ) ; } lastOperationChange = java.lang.System . currentTimeMillis () ; pendingOperationsWithSize . put ( operationId , heapSize ) ; currentWriteBufferSize += heapSize ; return operationId ; } 
boolean insertUserChild ( java.lang.String userId , long childId , int isOwner ) { android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; android.content.ContentValues childUserTableContent = new android.content.ContentValues () ; childUserTableContent . put ( baps.DatabaseHelper.UC_USER_ID , userId ) ; childUserTableContent . put ( baps.DatabaseHelper.UC_CHILD_ID , childId ) ; childUserTableContent . put ( baps.DatabaseHelper.UC_ISOWNER , isOwner ) ; long result2 = db . insert ( baps.DatabaseHelper.BAPS_USERCHILD_TABLE , null , childUserTableContent ) ; return result2 != ( - 1 ) ; } 
private int getRealParametersCount ( java.lang.reflect.Method m ) { int c = 0 ; for ( java.lang.Class < ? > t : m . getParameterTypes () ) { if ( ( ( ( t != ( fr.lteconsulting.pomexplorer.Client . class ) ) && ( t != ( fr.lteconsulting.pomexplorer.WorkingSession . class ) ) ) && ( t != ( fr.lteconsulting.pomexplorer.commands.CommandOptions . class ) ) ) && ( t != ( fr.lteconsulting.pomexplorer.ILogger . class ) ) ) c ++ ; } return c ; } 
@ java.lang.Override public long nextRoundingValue ( long time ) { long currentWithoutPostZone = postTz . convertLocalToUTC ( time , false ) ; long local = preTz . convertUTCToLocal ( currentWithoutPostZone ) ; long nextLocal = durationField . add ( local , 1 ) ; return postTz . convertUTCToLocal ( preTz . convertLocalToUTC ( nextLocal , false ) ) ; } 
@ java.lang.Override public void readFields ( java.io.DataInput dis ) throws java.io.IOException { int length = dis . readInt () ; byte [] bytes = new byte [ length ] ; dis . readFully ( bytes ) ; this . key = bytes ; this . deletedAt = dis . readLong () ; boolean hasAtom = dis . readBoolean () ; if ( hasAtom ) { this . atom = serializer . deserializeFromSSTable ( dis , ColumnSerializer.Flag.PRESERVE_SIZE , java.lang.Integer.MIN_VALUE , version ) ; } else { this . atom = null ; } } 
private void processIntent () { android.os.Bundle b = getIntent () . getExtras () ; boolean isSlim = b . getBoolean ( org.bottiger.podcast.activities.feedview.FeedActivity.FEED_ACTIVITY_IS_SLIM ) ; java.lang.String url = b . getString ( org.bottiger.podcast.activities.feedview.FeedActivity.SUBSCRIPTION_URL_KEY ) ; if ( isSlim ) { mSubscription = b . < org.bottiger.podcast.provider.SlimImplementations.SlimSubscription > getParcelable ( org.bottiger.podcast.activities.feedview.FeedActivity.SUBSCRIPTION_SLIM_KEY ) ; mIsSlimSubscription = true ; } else { mSubscription = org.bottiger.podcast.SoundWaves . getLibraryInstance () . getSubscription ( url ) ; mIsSlimSubscription = false ; } } 
private static int [] quickSortH ( int [] data , int start , int end ) { if ( start < end ) { int index = Quick . part ( data , start , end ) ; Quick . quickSortH ( data , start , index ) ; Quick . quickSortH ( data , ( index + 1 ) , end ) ; } return data ; } 
private edu.uci.eecs.wukong.framework.model.InitValue extractInitValue ( int start ) { short componentId = edu.uci.eecs.wukong.framework.util.WKPFUtil . getLittleEndianShort ( buffer , start ) ; byte propertyNumber = buffer [ ( start + 2 ) ] ; byte size = buffer [ ( start + 3 ) ] ; byte [] val = new byte [ size ] ; java.lang.System . arraycopy ( buffer , ( start + 4 ) , val , 0 , size ) ; edu.uci.eecs.wukong.framework.model.InitValue value = new edu.uci.eecs.wukong.framework.model.InitValue ( componentId , ( propertyNumber ++ ) , val ) ; return value ; } 
@ java.lang.SuppressWarnings ( value = "Duplicates" ) private static void upload ( int port ) throws java.lang.Exception { byte [] sendData = new byte [ 1024 ] ; java.util.Scanner input = new java.util.Scanner ( java.lang.System.in ) ; while ( input . hasNextLine () ) { sendData = input . nextLine () . getBytes () ; csci4311.nc.NetcatUDPClient.clientSocket . send ( new java.net.DatagramPacket ( sendData , sendData.length , csci4311.nc.NetcatUDPClient.ipAddress , port ) ) ; } } 
private void checkAnswer ( java.lang.String userEnterAnswer ) { java.lang.String answer = myHiraganaSet [ myCurrentIndex ] . getMyAnswer () ; int messageResId = 0 ; if ( answer . equals ( userEnterAnswer ) ) messageResId = R.string.correct_toast ; else messageResId = R.string.incorrect_toast ; android.widget.Toast . makeText ( this , messageResId , Toast.LENGTH_SHORT ) . show () ; } 
private int calculateAverageSteps ( java.util.List < grimesmea.gmail.com.pricklefit.DailyStepsDTO > dailyStepTotals ) { long totalSteps = 0 ; int totalDays = 0 ; for ( grimesmea.gmail.com.pricklefit.DailyStepsDTO dailyStepsDTO : dailyStepTotals ) { totalSteps += dailyStepsDTO . getSteps () ; totalDays ++ ; } if ( totalDays == 0 ) { return 0 ; } else { return ( ( int ) ( totalSteps ) ) / totalDays ; } } 
@ java.lang.Override public void run () { byte [] buffer = new byte [ 1024 ] ; java.net.DatagramPacket packet = new java.net.DatagramPacket ( buffer , buffer.length ) ; isRunning = true ; while ( isRunning ) { try { socket . receive ( packet ) ; java.lang.String msg = new java.lang.String ( buffer , 0 , packet . getLength () ) ; java.lang.System.out . println ( msg ) ; } catch ( java.io.IOException e ) { break; } } } 
@ java.lang.Override public java.lang.String getSubAwardXmlFileData () { if ( ( subAwardXmlFileData ) != null ) { return subAwardXmlFileData . get () ; } byte [] newData = getKcAttachmentDao () . getData ( xmlDataId ) ; java.lang.String newString = ( newData != null ) ? new java.lang.String ( newData ) : null ; subAwardXmlFileData = new java.lang.ref.SoftReference < java.lang.String > ( newString ) ; return newString ; } 
protected final int getLineStart ( java.lang.String line ) { int index = 0 ; while ( ( index < ( line . length () ) ) && ( java.lang.Character . isWhitespace ( line . charAt ( index ) ) ) ) { index ++ ; } return com.puppycrawl.tools.checkstyle.utils.CommonUtils . lengthExpandedTabs ( line , index , indentCheck . getIndentationTabWidth () ) ; } 
public static void findEvenOrOdd () { java.util.Scanner scanner = new java.util.Scanner ( java.lang.System.in ) ; java.lang.System.out . println ( ( "This program will ask you for a number, and will then" + " tell you if it is even or odd" ) ) ; int evenCheck ; java.lang.System.out . println ( "Enter a number:" ) ; int evenNum = scanner . nextInt () ; evenCheck = evenNum % 2 ; if ( evenCheck == 0 ) { java.lang.System.out . println ( "Even" ) ; } else { java.lang.System.out . println ( "Odd" ) ; } java.lang.System.out . println ( "" ) ; } 
private static void interpretAsName ( java.util.ArrayList < com.equinox.KeyParamPair > keyParamPairs , com.equinox.KeyParamPair currentPair ) { java.lang.String newName ; int currentIndex = keyParamPairs . indexOf ( currentPair ) ; newName = com.equinox.Parser . appendParameters ( keyParamPairs , 0 , currentIndex ) ; keyParamPairs . get ( 0 ) . setParam ( newName ) ; } 
private void updateVersion ( java.lang.Long slbId ) throws java.lang.Exception { try { int current = buildInfoService . getCurrentTicket ( slbId ) ; buildInfoService . updateTicket ( slbId , ( current + 1 ) ) ; } catch ( java.lang.Exception e ) { logger . error ( "Update Version Fail!" , e ) ; throw e ; } } 
static void authenticate () { com.fhf.prkr.microclient.MainActivity.authenticated = false ; com.fhf.prkr.microclient.MainActivity.network . sendpacket ( com.fhf.prkr.microclient.MainActivity.network.MANAGEMENT , com.fhf.prkr.microclient.MainActivity.network.AUTHENTICATE , "" , true ) ; boolean requestFailed = false ; while ( ( com.fhf.prkr.microclient.MainActivity.network . stillWaiting () ) == 1 ) { if ( ( com.fhf.prkr.microclient.MainActivity.network . stillWaiting () ) == 42 ) { requestFailed = true ; break; } } if ( ! requestFailed ) {} } 
public void union ( int v , int w ) { int rv = root ( v ) ; int rw = root ( w ) ; if ( rv == rw ) { return; } int sv = size [ rv ] ; int sw = size [ rw ] ; if ( sv > sw ) { id [ rw ] = rv ; size [ rv ] = sv + sw ; } else { id [ rv ] = rw ; size [ rw ] = sv + sw ; } } 
@ java.lang.Override public void enforce ( final org.deidentifier.arx.framework.check.groupify.HashGroupifyDistribution distribution , final int numMaxSuppressedOutliers ) { if ( this . isFulfilled ( distribution ) ) { return; } distribution . suppressWhileNotFulfilledBinary ( new org.deidentifier.arx.framework.check.groupify.HashGroupifyDistribution.PrivacyCondition () { public org.deidentifier.arx.criteria.State isFulfilled ( org.deidentifier.arx.framework.check.groupify.HashGroupifyDistribution distribution ) { boolean fulfilled = org.deidentifier.arx.criteria.RiskBasedPrivacyCriterion . this . isFulfilled ( distribution ) ; if ( ( ! fulfilled ) && ( ( distribution . getNumOfSuppressedTuples () ) > numMaxSuppressedOutliers ) ) { return State.ABORT ; } else { return fulfilled ? State.FULFILLED : State.NOT_FULFILLED ; } } } ) ; } 
public int [] getPlayerLocation ( int id ) { int [] pos = new int [ 2 ] ; int counter = 0 ; while ( ! ( gl . processCommand ( "MOVE W" , id ) . equals ( "FAIL" ) ) ) { counter ++ ; } pos [ 0 ] = 1 + counter ; counter = 0 ; while ( ! ( gl . processCommand ( "MOVE N" , id ) . equals ( "FAIL" ) ) ) { counter ++ ; } pos [ 1 ] = 1 + counter ; return pos ; } 
public boolean putChild ( int groupPosition , int childPosition , long childId , boolean isChecked ) { long packedPosition = android.widget.ExpandableListView . getPackedPositionForChild ( groupPosition , childPosition ) ; if ( hasStableIds () ) { java.lang.Long result = ( isChecked ) ? childIds . put ( childId , packedPosition ) : childIds . remove ( childId ) ; return result != null ; } else { return isChecked ? ! ( childPositions . add ( packedPosition ) ) : childPositions . remove ( packedPosition ) ; } } 
public void clear () { mProcedureDefinitions . clear () ; mProcedureReferences . clear () ; mProcedureNameManager . clear () ; mCountOfReferencesWithReturn = 0 ; int obsCount = mObservers . size () ; for ( int i = 0 ; i < obsCount ; ++ i ) { mObservers . get ( i ) . onClear () ; } } 
public static int [] parseIntArray ( org.json.JSONArray arr ) { if ( arr == null ) return null ; int [] res = new int [ arr . length () ] ; for ( int i = 0 ; i < ( arr . length () ) ; i ++ ) { res [ i ] = arr . optInt ( i ) ; } return res ; } 
@ java.lang.Override public java.lang.String getIsoDate ( org.hisp.dhis.calendar.DateTimeUnit dateTimeUnit , org.hisp.dhis.calendar.Calendar calendar ) { int month = dateTimeUnit . getMonth () ; switch ( month ) { case 11 : return ( dateTimeUnit . getYear () ) + "NovS1" ; case 5 : return ( dateTimeUnit . getYear () ) + "NovS2" ; default: throw new java.lang.IllegalArgumentException ( ( "Month not valid [11,5] " + month ) ) ; } } 
@ java.lang.Override public int getZoneIdx ( playground.michalm.zone.util.Node node ) { org.matsim.api.core.v01.Coord coord = node . getCoord () ; int r = ( ( int ) ( java.lang.Math . round ( ( ( ( coord . getY () ) - ( y0 ) ) / ( cellSize ) ) ) ) ) ; int c = ( ( int ) ( java.lang.Math . round ( ( ( ( coord . getX () ) - ( x0 ) ) / ( cellSize ) ) ) ) ) ; return ( r * ( cols ) ) + c ; } 
private boolean asyncSendAcknowledge ( com.sun.messaging.jmq.jmsclient.ReadWritePacket pkt ) { boolean synchronousReply = protocolHandler . isDirectModeTwoThreadWithSyncReplies () ; if ( synchronousReply ) { return true ; } long ackId = pkt . getConsumerID () ; com.sun.messaging.jmq.jmsclient.AsyncSendCallback cb = ( ( com.sun.messaging.jmq.jmsclient.AsyncSendCallback ) ( requestMetaData . get ( java.lang.Long . valueOf ( ackId ) ) ) ) ; requestMetaData . remove ( ackId ) ; if ( cb == null ) { return false ; } cb . processCompletion ( pkt , true ) ; return true ; } 
public void setHandLinearControlOnly ( us.ihmc.robotics.robotSide.RobotSide robotSide ) { double [] controlledPositionAxes = new double [] { 1.0 , 1.0 , 1.0 } ; double [] controlledOrientationAxes = new double [] { 0.0 , 0.0 , 0.0 } ; setHandControlledAxes ( robotSide , controlledPositionAxes , controlledOrientationAxes ) ; } 
public void sleep () { nachos.threads.Lib . assertTrue ( conditionLock . isHeldByCurrentThread () ) ; boolean intStatus = nachos.threads.Machine . interrupt () . disable () ; waitForCondQueue . add ( nachos.threads.KThread . currentThread () ) ; conditionLock . release () ; nachos.threads.KThread . sleep () ; nachos.threads.Machine . interrupt () . restore ( intStatus ) ; conditionLock . acquire () ; } 
public int extractY ( int y ) { int py = ( y + ( UserInterface.Accordpanel.YP ) ) + 60 ; if ( curAcc . isSixakk () ) { py -= 110 ; py /= 50 ; } else { py -= 15 + 50 ; py /= 50 ; } return py ; } 
public static int findBytes ( java.util.LinkedList < java.lang.Byte > arr , byte value ) { int i = 0 ; while ( ( i < ( arr . size () ) ) && ( ( arr . get ( i ) ) != value ) ) i ++ ; if ( i < ( arr . size () ) ) return i ; return - 1 ; } 
private java.util.List < de.htw_berlin.HoboOthello.KI.Field > listPossibleSideFields () { java.util.List < de.htw_berlin.HoboOthello.KI.Field > listOfPossibleMoves = listPossibleMoves () ; java.util.List < de.htw_berlin.HoboOthello.KI.Field > listOfPossibleSideFields = null ; int sideFieldIndex = 0 ; while ( sideFieldIndex < ( ( listOfPossibleMoves . size () ) - 1 ) ) { de.htw_berlin.HoboOthello.KI.Field field = listOfPossibleMoves . get ( sideFieldIndex ) ; if ( board . isSideField ( field ) ) { listOfPossibleSideFields . add ( field ) ; } sideFieldIndex ++ ; } return listOfPossibleSideFields ; } 
final void setFrontOfTask () { boolean foundFront = false ; final int numActivities = mActivities . size () ; for ( int activityNdx = 0 ; activityNdx < numActivities ; ++ activityNdx ) { final com.android.server.am.ActivityRecord r = mActivities . get ( activityNdx ) ; if ( foundFront || ( r.finishing ) ) { r.frontOfTask = false ; } else { r.frontOfTask = true ; foundFront = true ; } } } 
public boolean getAnswerByQuestion ( java.lang.String questionID ) { int answerindex = 0 ; for ( java.util.Map.Entry < java.lang.String , expert_system.Question > elements : ruleMap . entrySet () ) { if ( elements . getKey () . contains ( questionID ) ) { return ( ( boolean ) ( answerCollection . toArray () [ answerindex ] ) ) ; } answerindex ++ ; } return false ; } 
private int GeneralHeading ( com.fuzzy.simulator.CAnimat animat ) { java.awt.Point target = new java.awt.Point ( 0 , 0 ) ; int numAnimats = 0 ; for ( com.fuzzy.simulator.CAnimat otherAnimat : _animats ) { java.awt.Point otherLocation = ClosetLocation ( animat . GetLocation () , otherAnimat . GetLocation () ) ; int animatDistance = animat . GetDistance ( otherAnimat ) ; } return numAnimats ; } 
private void updateOriginalTags () { modifiedTags = getExistingTags () ; for ( java.lang.String tagToAdd : tagsToAdd ) { boolean hasTag = false ; for ( java.lang.String existingTag : originalTags ) { if ( tagToAdd . equalsIgnoreCase ( existingTag ) ) { hasTag = true ; } } if ( ! hasTag ) { modifiedTags . add ( tagToAdd ) ; } } } 
@ android.annotation.TargetApi ( value = Build.VERSION_CODES.ICE_CREAM_SANDWICH ) public static io.branch.referral.Branch getAutoInstance ( @ android.support.annotation.NonNull android.content.Context context , boolean isReferrable ) { io.branch.referral.Branch.isAutoSessionMode_ = true ; io.branch.referral.Branch.customReferrableSettings_ = ( isReferrable ) ? io.branch.referral.Branch.CUSTOM_REFERRABLE_SETTINGS.REFERRABLE : io.branch.referral.Branch.CUSTOM_REFERRABLE_SETTINGS.NON_REFERRABLE ; boolean isDebug = io.branch.referral.BranchUtil . isTestModeEnabled ( context ) ; io.branch.referral.Branch . getBranchInstance ( context , ( ! isDebug ) ) ; return io.branch.referral.Branch.branchReferral_ ; } 
public boolean isValid () { verifyNIL () ; int lastDegree = - ( BinomialHeap.INFINITY ) ; BinomialHeap.BinomialNode x = this . head ; while ( x != ( BinomialHeap.NIL ) ) { if ( ( recVal ( x , new int [ 2 ] ) [ 0 ] ) == 0 ) { return false ; } if ( ( x.degree ) <= lastDegree ) { return false ; } lastDegree = x.degree ; x = x.sibling ; } return true ; } 
public void writeByteBufferImpl ( java.nio.ByteBuffer buf ) throws java.io.IOException { int currLen = buf . remaining () ; assert null != ( sChannel ) : "tcp socket not set yet, null value found." ; sChannel . write ( buf ) ; bufferPool . returnBuffer ( buf ) ; block . setNumBytes ( ( ( block . getNumBytes () ) + currLen ) ) ; bufferPool . returnBuffer ( buf ) ; } 
public static void main ( java.lang.String [] args ) { int [] a = new int [] { 3 , 5 } ; reverseLinkedListII.ReverseLinkedListII obj = new reverseLinkedListII.ReverseLinkedListII () ; reverseLinkedListII.ReverseLinkedListII.ListNode head = obj . makeList ( a ) ; reverseLinkedListII.ReverseLinkedListII . printList ( head ) ; head = obj . reverseBetween ( head , 1 , 2 ) ; reverseLinkedListII.ReverseLinkedListII . printList ( head ) ; } 
public model.Book get ( long key ) { int firstHash = hashFunctionOne ( key ) ; int secondHash = hashFunctionTwo ( key ) ; if ( ( ( table [ firstHash ] ) != null ) && ( ( table [ firstHash ] . getKey () ) == key ) ) { return table [ firstHash ] . getValue () ; } else { return table [ secondHash ] . getValue () ; } } 
@ java.lang.Override public void run () { while ( ( mRecorder . getRecordingState () ) == ( android.media.AudioRecord.RECORDSTATE_RECORDING ) ) { short [] data = new short [ ( mBufferSize ) / 2 ] ; mRecorder . read ( data , 0 , ( ( mBufferSize ) / 2 ) ) ; mDecoder . appendSignal ( data ) ; } } 
private void checkSimultaneousRelease () { updateMovement () ; final int timeSensitiveness = 50 ; if ( ( ( keyThread ) != null ) && ( ( keyThread . getState () ) == ( java.lang.Thread.State.TIMED_WAITING ) ) ) {} else { keyThread = new java.lang.Thread () { public void run () { try { keyThread . sleep ( timeSensitiveness ) ; } catch ( java.lang.InterruptedException e ) { java.lang.System.out . println ( ( "------ Key thread interrupted -------\n" + e ) ) ; } } } ; keyThread . start () ; } } 
private void orderedInsert ( gradesystem.Grades insertedGrade ) { int index = 0 ; gradesystem.Grades element ; while ( index < ( aList . size () ) ) { element = aList . get ( index ) ; if ( ( insertedGrade . getTotalGrade () ) > ( element . getTotalGrade () ) ) { aList . add ( index , insertedGrade ) ; break; } index ++ ; } if ( index == ( aList . size () ) ) aList . add ( index , insertedGrade ) ; } 
public void run () { while ( ( ( ( t ) <= ( tf ) ) || ( ( nProf ) > 0 ) ) || ( ( nAlu ) > 0 ) ) { int j = indexOfMin ( tps ) ; if ( ( tpll ) <= ( tps . get ( j ) ) ) { llegada () ; } else { salida ( j ) ; } if ( ( t ) >= ( tf ) ) { tpll = hv ; } } calcularResultados () ; } 
public static void shuffle ( java.lang.Object [] a ) { for ( int i = 1 ; i < ( a.length ) ; i ++ ) { int r = edu.princeton.cs.algs4.StdRandom . uniform ( 0 , ( i + 1 ) ) ; java.lang.Object x = a [ i ] ; a [ i ] = a [ r ] ; a [ r ] = x ; } } 
public java.util.List < utils.Song > getRandomSongList () { java.util.Random rand = new java.util.Random () ; int randNum ; java.util.List < utils.Song > randomSongs = new java.util.ArrayList < utils.Song > () ; for ( int i = 0 ; i < 3 ; i ++ ) { randNum = ( rand . nextInt ( albumSongs . size () ) ) + 1 ; java.lang.System.out . println ( ( "random number: " + randNum ) ) ; randomSongs . add ( albumSongs . get ( ( randNum - 1 ) ) ) ; } return randomSongs ; } 
public int selectRow ( java.awt.event.MouseEvent e ) { int selected_row = - 1 ; java.awt.Point p = e . getPoint () ; java.awt.FontMetrics fm = right_page . getFontMetrics ( right_page . getFont () ) ; selected_row = ( ( p.y ) / ( fm . getHeight () ) ) + 1 ; return selected_row ; } 
@ java.lang.Override public void createTable ( org.apache.hadoop.hive.metastore.api.Table tbl ) throws org.apache.hadoop.hive.metastore.api.InvalidObjectException , org.apache.hadoop.hive.metastore.api.MetaException { java.lang.String tbls = com.alibaba.fastjson.JSON . toJSONString ( tbl ) ; jedis . hset ( "table" , ( ( ( "" + ( tbl . getDbName () ) ) + "." ) + ( tbl . getTableName () ) ) , tbls ) ; org.apache.hadoop.hive.metastore.NewObjectStore.LOG . info ( ( ( "-----tianlong-----create table " + ( tbl . getTableName () ) ) + " success!" ) ) ; } 
@ java.lang.Override public void run ( io.github.carlorodriguez.alarmon.NotificationServiceInterface service ) { int count ; try { count = service . firingAlarmCount () ; } catch ( android.os.RemoteException e ) { return; } if ( count > 0 ) { android.content.Intent notifyActivity = new android.content.Intent ( getApplicationContext () , io.github.carlorodriguez.alarmon.ActivityAlarmNotification . class ) ; notifyActivity . setFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ; startActivity ( notifyActivity ) ; } } 
private static int getSequenceNumber ( byte [] datagramContents ) { int start = ( Packet.SENDER_LENGTH ) + ( Packet.RECEIVER_LENGTH ) ; int end = start + ( Packet.SEQUENCE_NUM_LENGTH ) ; byte [] seqNumArray = new byte [ Packet.SEQUENCE_NUM_LENGTH ] ; seqNumArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer seqNumByteBuffer = java.nio.ByteBuffer . wrap ( seqNumArray ) ; int seqNum = seqNumByteBuffer . getShort () ; return seqNum ; } 
public boolean lowerRoom ( int roomID ) { int prev_level = rooms_list . get ( roomID ) . getLevel () ; rooms_list . get ( roomID ) . lower () ; return prev_level > ( rooms_list . get ( roomID ) . getLevel () ) ; } 
@ java.lang.SuppressWarnings ( value = "null" ) public void insertAt ( int item , int pos ) { int i = 1 ; Node newNode = new Node () ; newNode.data = item ; newNode.next = null ; Node temp ; temp = head ; while ( i < ( pos - 1 ) ) { i ++ ; temp = temp.next ; } newNode.next = temp.next ; temp.next = newNode ; } 
public java.util.List < java.lang.Integer > classify ( java.util.List < Utils.DataVector > data , boolean calAccuracy ) { for ( Utils.DataVector vector : data ) { java.util.List < java.lang.Integer > treePredictions = new java.util.ArrayList ( data . size () ) ; for ( RandomForestHOG.DecisionTree.DecisionTree tree : dTree ) { int curPrediction = tree . classify ( vector ) ; treePredictions . add ( curPrediction ) ; } int forestPrediction = Utils.Helper . getModeInt ( treePredictions ) ; finalPredictions . add ( forestPrediction ) ; } return finalPredictions ; } 
private void clearUserEdits ( int [] backup ) { int userEdited = 0 ; for ( int i = 0 ; i < ( backup.length ) ; i ++ ) { if ( ( ( backup [ i ] ) != ( Cell.NONE ) ) && ( ! ( mCells [ i ] . isLocked () ) ) ) { backup [ i ] = Cell.NONE ; userEdited ++ ; } } } 
private boolean isNorthEastMovementBlocked ( game.Piece piece , int newX , int newY ) { int moveCounter = 1 ; for ( int i = ( piece . getY () ) + 1 ; i < newY ; i ++ ) { if ( tileHasPiece ( ( ( piece . getX () ) + moveCounter ) , i ) ) return true ; moveCounter ++ ; } return false ; } 
private int writeSprite ( byte [] spriteData ) { int size = spriteData.length ; int bankBytesLeft = ( SpritesToROM.BANK_SIZE ) - ( ( dataAddr ) % ( SpritesToROM.BANK_SIZE ) ) ; if ( bankBytesLeft < size ) { dataAddr += bankBytesLeft + ( SpritesToROM.HEADER_SIZE ) ; } int tmp = dataAddr ; writeIndex ( dataAddr ) ; dataAddr += writeBytes ( rom , dataAddr , spriteData ) ; return tmp ; } 
@ org.smart4j.framework.mvc.annotation.Request.Get ( value = "/notices" ) public org.smart4j.framework.mvc.bean.View index () { int pageNumber = 1 ; int pageSize = org.bright.sepe.Tool . getPageSize ( "notice_pager" ) ; org.smart4j.framework.dao.bean.Pager < org.bright.sepe.entity.Notice > noticePager = noticeService . getNoticePager ( pageNumber , pageSize , "" , "" ) ; return new org.smart4j.framework.mvc.bean.View ( "notice.jsp" ) . data ( "noticePager" , noticePager ) ; } 
private static int getReceiverID ( byte [] datagramContents ) { int start = Packet.RECEIVER_LENGTH ; int end = start + ( Packet.RECEIVER_LENGTH ) ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; receiverIdArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; } 
public static double getFireIndex ( java.lang.String sent1 ) { RapAnalyzer fire = new RapAnalyzer () ; double t = ( RapAnalyzer . sentenceanalyzer ( sent1 ) ) * 10 ; double w = ( RapAnalyzer . wordlength ( sent1 ) ) * 0.5 ; double y = ( RapAnalyzer . wordvariety ( sent1 ) ) * 0.5 ; RapAnalyzer.fireindex = ( ( t + w ) + y ) / 3 ; return RapAnalyzer.fireindex ; } 
public void remove ( small.data.structures.Vec2 gridPos ) { int idx = ( ( gridPos.y ) * ( gridRows ) ) + ( gridPos.x ) ; if ( ! ( map . containsKey ( idx ) ) ) { log . info ( "Could not remove. Key is not in buffer." ) ; return; } map . remove ( idx ) ; if ( gridPos . equals ( relativeOrigin ) ) { log . info ( "Removing current relative origin requires the relative origin to be updated." ) ; log . info ( "Updating relative origin..." ) ; this . updateRelativeOrigin () ; } } 
public int getMaxID () { java.lang.String sql = "SELECT MAX(ID) FROM CONTACTS" ; java.sql.ResultSet rs = executeQuery ( sql ) ; int id = - 1 ; try { id = rs . getInt ( 1 ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } return id ; } 
@ java.lang.Override protected void onPostExecute ( ca.rmen.android.scrumchatter.meeting.detail.MeetingPagerAdapter result ) { mMeetingPagerAdapter = result ; mBinding.activityLoading . setVisibility ( View.GONE ) ; mBinding.pager . setAdapter ( mMeetingPagerAdapter ) ; if ( ( mMeetingId ) >= 0 ) { int position = mMeetingPagerAdapter . getPositionForMeetingId ( mMeetingId ) ; ca.rmen.android.scrumchatter.util.Log . v ( TAG , ( ( ( "meeting " + ( mMeetingId ) ) + " is on page " ) + position ) ) ; mBinding.pager . setCurrentItem ( position ) ; } } 
private static double translatePreference ( int p ) { int maxValue = 9 ; int minValue = - 9 ; if ( p > maxValue ) p = maxValue ; if ( p < minValue ) p = minValue ; if ( p == 0 ) { return 1 ; } else if ( p > 0 ) { return p ; } else { return 1.0 / ( java.lang.Math . abs ( p ) ) ; } } 
public void closeBrowser () { mBrowserFrame . setBackgroundColor ( mBackgroundColor ) ; performExitCleanUp () ; mBrowserFrame . removeAllViews () ; int size = mTabsManager . size () ; mTabsManager . shutdown () ; mCurrentView = null ; for ( int n = 0 ; n < size ; n ++ ) { mTabsView . tabRemoved ( 0 ) ; } finish () ; } 
public void run () { network.ServerSocketCreator create = new network.ServerSocketCreator () ; java.lang.Thread serverSock = new java.lang.Thread ( create ) ; serverSock . start () ; java.util.Scanner read = new java.util.Scanner ( java.lang.System.in ) ; char input = 'N' ; java.lang.System.out . println ( "Would you like to stop the server? Y/N" ) ; input = read . nextLine () . charAt ( 0 ) ; while ( input != 'Y' ) { input = read . nextLine () . charAt ( 0 ) ; } read . close () ; create . terminate () ; } 
@ java.lang.Override public boolean apply ( @ javax.annotation.Nullable com.gmi.nordborglab.browser.shared.proxy.TraitProxy input ) { if ( input == null ) return true ; boolean isNotFound = true ; for ( com.gmi.nordborglab.browser.shared.proxy.AlleleAssayProxy alleleAssay : input . getObsUnit () . getStock () . getPassport () . getAlleleAssays () ) { if ( alleleAssay . getId () . equals ( selectedAlleleAssay . getId () ) ) { isNotFound = false ; break; } } return isNotFound ; } 
private void release () { com.huhx0015.hxaudio.utils.HXLog . d ( com.huhx0015.hxaudio.audio.HXSound.LOG_TAG , "RELEASE: release(): Releasing all HXSoundEngine instances..." ) ; int i = 0 ; for ( int x : new int [ numberOfEngines ] ) { hxSoundEngines . get ( i ) . release () ; com.huhx0015.hxaudio.utils.HXLog . d ( com.huhx0015.hxaudio.audio.HXSound.LOG_TAG , ( ( "RELEASE: release(): HXSoundEngine (" + i ) + ") is released." ) ) ; i ++ ; } hxSoundEngines = null ; } 
@ java.lang.Override public void run () { int offset = content . toLowerCase () . indexOf ( mSearchQuery . toLowerCase () ) ; int line = mTvChapterContent . getLayout () . getLineForOffset ( offset ) ; int coordinateY = mTvChapterContent . getLayout () . getLineTop ( line ) ; mSvChapterContent . scrollTo ( 0 , ( coordinateY - 400 ) ) ; } 
public java.util.List < com.ryan.pojo.ChunkInfo > fsp () { java.util.List < com.ryan.pojo.ChunkInfo > chunkList = new java.util.ArrayList <> () ; markChunkPostition ( buffer , chunkSize ) ; while ( true ) { int currentPos = this . chunkId ; ( this . chunkId ) ++ ; if ( currentPos >= ( list . size () ) ) { return chunkList ; } else { key . set ( currentPos ) ; chunkList . add ( nextKeyValue ( currentPos ) ) ; } } } 
public int getInventorySize () { int highestSlot = getHighestSlot () ; if ( highestSlot < 9 ) { return 9 ; } else if ( highestSlot < 18 ) { return 18 ; } else if ( highestSlot < 27 ) { return 27 ; } else if ( highestSlot < 36 ) { return 36 ; } else if ( highestSlot < 45 ) { return 45 ; } else { return 45 ; } } 
public boolean checkMultiblock () { boolean prevState = isMultiblockStructurePresent () ; makeo.gadomancy.common.utils.MultiblockHelper.MultiblockPattern patternToCheck ; if ( prevState ) { if ( isInMultiblock () ) { patternToCheck = makeo.gadomancy.common.registration.RegisteredMultiblocks.completeNodeManipulatorMultiblock ; } else { patternToCheck = makeo.gadomancy.common.registration.RegisteredMultiblocks.incompleteNodeManipulatorMultiblock ; } this . multiblockStructurePresent = makeo.gadomancy.common.utils.MultiblockHelper . isMultiblockPresent ( worldObj , xCoord , yCoord , zCoord , patternToCheck ) ; } else { patternToCheck = makeo.gadomancy.common.registration.RegisteredMultiblocks.incompleteNodeManipulatorMultiblock ; this . multiblockStructurePresent = makeo.gadomancy.common.utils.MultiblockHelper . isMultiblockPresent ( worldObj , xCoord , yCoord , zCoord , patternToCheck ) ; } return isMultiblockStructurePresent () ; } 
public org.avuna.httpd.util.unixsocket.UnixSocket accept ( ) throws java.io.IOException { if ( ! ( bound ) ) bind () ; java.lang.String nsfd = org.avuna.httpd.util.CLib . accept ( sockfd ) ; int i = java.lang.Integer . parseInt ( nsfd . substring ( 0 , nsfd . indexOf ( "/" ) ) ) ; nsfd = nsfd . substring ( ( ( nsfd . indexOf ( "/" ) ) + 1 ) ) ; org.avuna.httpd.util.unixsocket.UnixSocket us = new org.avuna.httpd.util.unixsocket.UnixSocket ( file , i ) ; return us ; } 
protected void execute () { int index ; index = ( org.usfirst.frc.team68.robot.MathUtil . findClosestIndex ( RobotMap.intakePositions , org.usfirst.frc.team68.robot.subsystems.Intake . getIntake () . getIntakeArm () ) ) + 1 ; if ( index > ( ( RobotMap.intakePositions.length ) - 1 ) ) index = ( RobotMap.intakePositions.length ) - 1 ; org.usfirst.frc.team68.robot.subsystems.Intake . getIntake () . setIntakeArm ( org.usfirst.frc.team68.robot.RobotMap.intakePositions [ ( index ++ ) ] ) ; isDone = true ; } 
public void KSA () { int j = 0 ; int temp = 0 ; for ( int i = 0 ; i < 256 ; i ++ ) { j = ( ( j + ( S [ i ] ) ) + ( key [ ( i % ( key.length ) ) ] ) ) % 256 ; temp = S [ i ] ; S [ i ] = S [ j ] ; S [ j ] = temp ; temp = 0 ; } } 
@ org.junit.Test public void checkAvg ( ) throws java.lang.Exception { com.wolkabout.hexiwear.StepCountActivity step = new com.wolkabout.hexiwear.StepCountActivity () ; double [] array = new double [ 7 ] ; int count = 0 ; while ( count != 7 ) { array [ count ] = 10 * count ; count ++ ; } double weekly = step . stepAvgWeek ( array ) ; java.lang.System.out . println ( weekly ) ; assertTrue ( ( ( weekly == 30.0 ) || ( weekly == 30 ) ) ) ; } 
public int lineClearCalc ( int linesCleared ) { int score = 0 ; if ( linesCleared > 0 ) { score = ( ( int ) ( ( ( ( ( java.lang.Math . pow ( linesCleared , 3 ) ) / 6.0 ) - ( java.lang.Math . pow ( linesCleared , 2 ) ) ) + ( ( 23 * linesCleared ) / 6.0 ) ) - 2 ) ) ; } return score * ( pointsPerLine ) ; } 
private static java.lang.String join ( java.lang.String [] set , java.lang.String medium , int offset ) { java.lang.String s = set [ offset ] ; int i = 0 ; for ( java.lang.String part : set ) { if ( i > offset ) s = ( ( ( s + " " ) + medium ) + " " ) + part ; i ++ ; } return s ; } 
private java.lang.String setupDstByDirectory ( java.lang.String directory ) { int fileNameIndex = VCF_FILE_PATH . lastIndexOf ( "/" ) ; if ( fileNameIndex == ( - 1 ) ) { fileNameIndex = VCF_FILE_PATH . lastIndexOf ( "\\" ) ; } if ( fileNameIndex == ( - 1 ) ) { fileNameIndex = 0 ; } java.lang.String output = directory + ( VCF_FILE_PATH . substring ( fileNameIndex ) ) ; return ( output . substring ( 0 , ( ( output . length () ) - 3 ) ) ) + "csv" ; } 
@ java.lang.Override public void handle ( javafx.scene.input.MouseEvent e ) { if ( ! ( isGameover ) ) { int row = GUI . getLoc ( ( ( int ) ( e . getY () ) ) ) ; int col = GUI . getLoc ( ( ( int ) ( e . getX () ) ) ) ; board . addPiece ( row , col ) ; update () ; if ( board . checkWin () ) { isGameover = true ; endGame () ; } } } 
@ java.lang.Override protected int intSpeed ( float fSpeed ) { int speed = super . intSpeed ( fSpeed ) ; if ( speed <= 1 ) { return speed ; } switch ( this . getSpeedStepMode () ) { case jmri.DccThrottle.SpeedStepMode28 : case jmri.DccThrottle.SpeedStepMode28Mot : return ( ( int ) ( ( fSpeed * 28 ) * 4 ) ) + 12 ; case jmri.DccThrottle.SpeedStepMode14 : return ( ( int ) ( ( fSpeed * 14 ) * 8 ) ) + 8 ; } return speed ; } 
public static final sune.util.ssdf2.SSDCollection read ( java.lang.String content ) { if ( content == null ) { throw new java.lang.IllegalArgumentException ( "Content cannot be null!" ) ; } char [] chars = sune.util.ssdf2.SSDF . format ( content . toCharArray () ) ; return sune.util.ssdf2.SSDF . readObjects ( chars , 0 , chars.length ) ; } 
private void checkUsername ( com.musicforall.model.User user ) { java.lang.String searchUsername ; final java.lang.String username = user . getUsername () ; searchUsername = username ; int i = 0 ; while ( ( userService . getIdByUsername ( searchUsername ) ) != null ) { i ++ ; searchUsername = username + i ; } if ( i > 0 ) { user . setUsername ( searchUsername ) ; } } 
public boolean isEveryCharacterUniqueUsingHistogram () { int [] asciiCount = new int [ 128 ] ; for ( int i = 0 ; i < ( string . length () ) ; i ++ ) { ( asciiCount [ string . charAt ( i ) ] ) ++ ; } for ( int i = 0 ; i < ( asciiCount.length ) ; i ++ ) { if ( ( asciiCount [ i ] ) > 1 ) { return false ; } } return true ; } 
@ java.lang.Override public void update ( com.flurnamenpuzzle.generator.Observable observable ) { com.flurnamenpuzzle.generator.domain.PuzzleGeneratorModel model = ( ( com.flurnamenpuzzle.generator.domain.PuzzleGeneratorModel ) ( observable ) ) ; int percentage = model . getPercentageGenerated () ; java.lang.String statusMessage = model . getStatusMessage () ; if ( statusMessage != null ) { this . progressLabel . setText ( statusMessage ) ; } java.lang.System.out . println ( statusMessage ) ; this . progressBar . setValue ( percentage ) ; this . progressBar . setString ( ( ( progressBar . getValue () ) + "%" ) ) ; } 
@ java.lang.Override public bee.creative.function.Array section ( final int offset , final int length ) throws java.lang.IllegalArgumentException { final int offset2 = offset - ( this . length () ) ; final int length2 = offset2 + length ; if ( offset2 >= 0 ) return array . section ( offset2 , length ) ; if ( length2 <= 0 ) return super . section ( offset , length ) ; return super . section ( offset , ( - offset2 ) ) . concat ( array . section ( 0 , length2 ) ) ; } 
@ java.lang.Override public void stop () { org.webrtc.Logging . d ( org.webrtc.Camera1Session.TAG , ( "Stop camera1 session on camera " + ( cameraId ) ) ) ; checkIsOnCameraThread () ; if ( ( state ) != ( org.webrtc.Camera1Session.SessionState.STOPPED ) ) { final long stopStartTime = java.lang.System . nanoTime () ; stopInternal () ; final int stopTimeMs = ( ( int ) ( java.util.concurrent.TimeUnit.NANOSECONDS . toMillis ( ( ( java.lang.System . nanoTime () ) - stopStartTime ) ) ) ) ; org.webrtc.Camera1Session.camera1StopTimeMsHistogram . addSample ( stopTimeMs ) ; } } 
private boolean executeTIMEZONE_LIST () { int listIndex = getListArg ( com.rfo.basic.Run.list_is_string ) ; if ( listIndex < 0 ) return false ; if ( ! ( checkEOL () ) ) return false ; java.util.ArrayList < java.lang.String > theList = new java.util.ArrayList < java.lang.String > () ; com.rfo.basic.Run.theLists . set ( listIndex , theList ) ; for ( java.lang.String zone : java.util.TimeZone . getAvailableIDs () ) { theList . add ( zone ) ; } return true ; } 
private static long getSerialVersionUID ( org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaClass metaClass , java.lang.String nestedSimpleClassName ) throws java.io.IOException { long serialVersionUID = ( nestedSimpleClassName != null ) ? nestedSimpleClassName . hashCode () : 0 ; for ( org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaProperty property : metaClass . getProperties () . values () ) { serialVersionUID += ( serialVersionUID * 31 ) + ( property . getName () . hashCode () ) ; } return serialVersionUID ; } 
public static int getUnScheuledHours ( Office offices ) { int hoursNotScheduled = 0 ; for ( int i = 1 ; i < 37 ; i ++ ) { for ( int j = 0 ; j < 7 ; j ++ ) { if ( ( offices.officeReq . get ( i ) . get ( j ) ) >= 0 ) { hoursNotScheduled += offices.officeReq . get ( i ) . get ( j ) ; } } } return hoursNotScheduled / 2 ; } 
private void handleDeletePlaylistEvent ( android.net.Uri pUri ) { com.dreamdigitizers.megamelodies.views.interfaces.IViewPlaylists view = this . getView () ; if ( view != null ) { java.lang.String id = pUri . getQueryParameter ( "playlistId" ) ; java.util.HashMap transactions = this . mTransactionActions . get ( ServicePlayback.CUSTOM_ACTION__DELETE_PLAYLIST ) ; android.support.v4.media.MediaBrowserCompat.MediaItem mediaItem = ( ( android.support.v4.media.MediaBrowserCompat.MediaItem ) ( transactions . get ( id ) ) ) ; transactions . remove ( id ) ; view . removeMediaItem ( mediaItem ) ; } } 
@ java.lang.Override public void onBackPressed () { int count = ( getFragmentManager () . getBackStackEntryCount () ) - 1 ; int currentView = viewStack . pop () ; if ( count == 0 ) { super . onBackPressed () ; } else { getFragmentManager () . popBackStack () ; } java.lang.String title = fragmentMap . get ( currentView ) . getTitleString () ; setTitle ( title ) ; } 
public int getCaptionHeight () { int textWidth = mTextView . getWidth () ; int widthMeasureSpec = View.MeasureSpec . makeMeasureSpec ( textWidth , View.MeasureSpec.EXACTLY ) ; int heightMeasureSpec = View.MeasureSpec . makeMeasureSpec ( 0 , View.MeasureSpec.UNSPECIFIED ) ; if ( textWidth < 1 ) { return 0 ; } mTextView . measure ( widthMeasureSpec , heightMeasureSpec ) ; return mTextView . getMeasuredHeight () ; } 
public Util.complex pow ( int n ) { double rn = ( java.lang.Math . pow ( getAbs () , n ) ) * ( java.lang.Math . cos ( ( n * ( getAngle () ) ) ) ) ; double in = ( java.lang.Math . pow ( getAbs () , n ) ) * ( java.lang.Math . sin ( ( n * ( getAngle () ) ) ) ) ; setR ( rn ) ; setI ( in ) ; return this ; } 
public boolean storeCredentials ( java.lang.String appName , java.lang.String hashedUser , java.lang.String hashedPassword ) { com.jeszka.domain.AppCredentials appCredentials = new com.jeszka.domain.AppCredentials.Builder () . appName ( appName ) . username ( hashedUser ) . password ( hashedPassword ) . enabled ( true ) . build () ; final int result = posterDao . saveAppCredentials ( appCredentials ) ; java.lang.System.out . println ( ( "Storing credentials result: " + result ) ) ; return result == 1 ; } 
private int calcHeigth () { int aY = a . getBlockY () ; int bY = b . getBlockY () ; int y = 0 ; if ( aY < bY ) { y = bY - aY ; } else { y = aY - bY ; } return y ; } 
public static void phaseThree ( UndirectedGraph < java.lang.Integer , java.lang.Integer > graph , java.util.List < Graph.Vertex < java.lang.Integer > > lowDegreeVertices ) { for ( Graph.Vertex < java.lang.Integer > v : lowDegreeVertices ) { graph . removeVertex ( graph . getVertexWithElement ( v . getElement () ) ) ; } } 
public io.lambdacloud.util.ObjectArray set ( int ms , int me , int [] aryn , io.lambdacloud.util.ObjectArray ary ) { int row = ( me - ms ) + 1 ; int col = aryn.length ; for ( int i = 0 ; i < row ; i ++ ) for ( int j = 0 ; j < col ; j ++ ) { data [ ( ms + i ) ] [ aryn [ j ] ] = ary.data [ i ] [ j ] ; } return this ; } 
public com.digitalpebble.storm.crawler.Metadata getMetaForOutlink ( java.lang.String sourceURL , com.digitalpebble.storm.crawler.Metadata parentMD ) { com.digitalpebble.storm.crawler.Metadata md = filter ( parentMD ) ; if ( trackPath ) { md . addValue ( com.digitalpebble.storm.crawler.util.MetadataTransfer.urlPathKeyName , sourceURL ) ; } if ( trackDepth ) { java.lang.String existingDepth = md . getFirstValue ( com.digitalpebble.storm.crawler.util.MetadataTransfer.depthKeyName ) ; int depth = 0 ; try { depth = java.lang.Integer . parseInt ( existingDepth ) ; } catch ( java.lang.Exception e ) { depth = 0 ; } md . setValue ( com.digitalpebble.storm.crawler.util.MetadataTransfer.depthKeyName , java.lang.Integer . toString ( ( ++ depth ) ) ) ; } return md ; } 
@ java.lang.Override public void onCompletion ( android.media.MediaPlayer mp ) { int temp = ( ( sharedPreferences . getInt ( Constants.CURRENT_PLAYING_VIDEO_NUMBER , ( - 1 ) ) ) + 1 ) % ( videoList . size () ) ; vvVideo . setVideoURI ( videoList . get ( temp ) ) ; com.example.saksham.overlayscreenshort.PlaylistAdapter . changeActiveItemBackground ( temp ) ; editor . putInt ( Constants.CURRENT_PLAYING_VIDEO_NUMBER , temp ) ; editor . commit () ; vvVideo . start () ; } 
public static float getScaleFactor () { android.util.DisplayMetrics metrics = new android.util.DisplayMetrics () ; io.gloop.drawed.utils.ScreenUtil.activity . getWindowManager () . getDefaultDisplay () . getMetrics ( metrics ) ; float factor1 = ( metrics.heightPixels ) / 1920.0F ; float factor2 = ( metrics.widthPixels ) / 1080.0F ; if ( factor1 >= factor2 ) return factor1 ; else return factor2 ; } 
void addAmountTodo ( int amt , todolist.TodoList list ) { todolist.Todo head = new todolist.Todo ( "Task 1" ) ; list . addTodo ( head ) ; int numAdded = 1 ; while ( numAdded != amt ) { numAdded ++ ; todolist.Todo newTodo = new todolist.Todo ( ( "Task " + ( java.lang.Integer . toString ( numAdded ) ) ) ) ; list . addTodo ( newTodo ) ; } } 
public int paga_reale_mazziere () { fiches = ( fiches ) - ( 2 * ( puntata ) ) ; if ( ( fiches ) < 0 ) { perso = true ; int buf = fiches ; fiches = 0 ; return ( puntata ) + ( buf + ( puntata ) ) ; } return ( puntata ) * 2 ; } 
public java.lang.Boolean draw ( dk.eax.Field field ) { if ( ( field . getToken () ) == null ) { java.lang.System.out . println ( field . getToken () ) ; int y = field . getCoordinate_y () ; int x = field . getCoordinate_x () ; dk.eax.graphics.Ellipse ellipsis = new dk.eax.graphics.Ellipse ( x , y , 200 , 200 ) ; ellipsis . draw () ; field . setToken ( this ) ; return true ; } return false ; } 
public static int hash ( final java.lang.String str ) { int hash = - 2128831035 ; final byte [] bytes = str . getBytes ( java.nio.charset.StandardCharsets.ISO_8859_1 ) ; for ( final byte b : bytes ) { { hash = hash ^ b ; hash = hash * 16777619 ; } } return hash ; } 
void free ( final long id ) throws java.io.IOException { final net.kotek.jdbm.BlockIo curBlock = file . get ( net.kotek.jdbm.Location . getBlock ( id ) ) ; final short offset = net.kotek.jdbm.Location . getOffset ( id ) ; final int size = net.kotek.jdbm.RecordHeader . getAvailableSize ( curBlock , offset ) ; if ( size > ( net.kotek.jdbm.PhysicalRowIdManager.DATA_PER_PAGE ) ) {} net.kotek.jdbm.RecordHeader . setCurrentSize ( curBlock , offset , 0 ) ; file . release ( curBlock ) ; freeman . put ( id , size ) ; } 
public int getGID () { int result = - 1 ; try { result = nationbuilder.lib.data.map.xml.XmlHelper . getInt ( this . element , "gid" ) ; return result ; } catch ( java.lang.NumberFormatException ex ) { nationbuilder.lib.Logging.Log . writeInfo ( "gid attribute fetch failed, trying id attribute" ) ; } try { result = nationbuilder.lib.data.map.xml.XmlHelper . getInt ( this . element , "id" ) ; return result ; } catch ( java.lang.NumberFormatException ex ) { nationbuilder.lib.Logging.Log . writeError ( "Parsing of the Tile GID attribute failed" ) ; return result ; } } 
public static void main ( java.lang.String [] args ) { main.java.PlagiarismDetector plagiarismDetector = new main.java.PlagiarismDetector () ; main.java.PlagiarismService plagiarismService = new main.java.PlagiarismService () ; main.java.InputWrapper inputWrapper = plagiarismDetector . validateInput ( args ) ; double plagiarismRatio = plagiarismService . checkPlagiarism ( inputWrapper ) ; java.lang.System.out . println () ; java.lang.System.out . println ( "---------------------------------------------------------------------------------------------" ) ; java.lang.System.out . println ( ( ( "Plagiarism Percentage is " + ( plagiarismRatio * 100 ) ) + " %" ) ) ; java.lang.System.out . println ( "---------------------------------------------------------------------------------------------" ) ; java.lang.System.out . println () ; } 
private void initCamera () { try { cameraType = ( ( captureType ) == ( com.onfido.android.sdk.capture.ui.CaptureType.FACE ) ) ? Camera.CameraInfo.CAMERA_FACING_FRONT : Camera.CameraInfo.CAMERA_FACING_BACK ; camera = android.hardware.Camera . open ( cameraType ) ; } catch ( java.lang.Exception e ) { view . errorLoadingCamera () ; } if ( ( camera ) != null ) { view . init ( camera ) ; } } 
@ java.lang.Override final boolean updateBool ( ) throws java.lang.Exception { boolean b = false ; for ( nl.ramondevaan.visualization.core.Source < S > s : inputs ) { if ( s != null ) { b = ( s . update () ) || b ; } } if ( b || ( changed ) ) { try { output = nl.ramondevaan.visualization.core.Filter . updateImpl () ; return true ; } catch ( java.lang.Exception e ) { output = null ; throw e ; } } return false ; } 
public boolean removeClient ( de.dhbwka.java.bombercat.Client client , java.util.Map < java.lang.String , de.dhbwka.java.bombercat.Lobby > lobbies ) { boolean result = false ; if ( lobbyLeader . equals ( client ) ) { deleteLobby ( lobbies ) ; result = true ; } else { result = clients . remove ( client ) ; client . setLobby ( null ) ; result = true ; } if ( result ) { broadcastPlayers () ; } return result ; } 
public long insert ( io.keepcoding.rgs.everpobre.model.Notebook notebook ) { if ( notebook == null ) { throw new java.lang.IllegalArgumentException ( "Passing NULL NOTEBOOK, imbecile" ) ; } long id = db . getWritableDatabase () . insert ( DBConstants.TABLE_NOTEBOOK , null , this . getContentValues ( notebook ) ) ; notebook . setId ( id ) ; db . close () ; return id ; } 
public void backupAllMenuItemAction () { int response = mainView . showConfirmationDialog ( "Back up vocab files" , "This will overwrite all previous backup files. Are you sure?" ) ; if ( response == ( javax.swing.JOptionPane.YES_OPTION ) ) { for ( com.tkomiya.models.VocabList vlist : vocabLists ) { java.io.File file = new java.io.File ( ( ( ( ( com.tkomiya.main.MainController.DEFAULT_SAVE_DIRECTORY ) + ( vlist . getName () ) ) + "." ) + ( com.tkomiya.main.MainController.BACKUP_FILE_EXTENSION ) ) ) ; saveVocabListAsTextFile ( vlist , file ) ; } } } 
static byte [] readFile ( java.io.File file ) throws java.io.IOException { byte [] buffer = new byte [ 1024 ] ; java.io.ByteArrayOutputStream bytes = new java.io.ByteArrayOutputStream () ; java.io.FileInputStream fileInputStream = new java.io.FileInputStream ( file ) ; try { while ( true ) { int read = fileInputStream . read ( buffer ) ; if ( read == ( - 1 ) ) break; bytes . write ( buffer , 0 , read ) ; } } finally { fileInputStream . close () ; } return bytes . toByteArray () ; } 
@ java.lang.Override public void readFields ( java.io.DataInput in ) throws java.io.IOException { int size = in . readInt () ; if ( size == 0 ) { shortestpath = null ; return; } shortestpath = new int [ size ] ; for ( int i = 0 ; i < size ; i ++ ) { shortestpath [ i ] = in . readInt () ; } } 
public org.apache.cassandra.db.RowIndexEntry < org.apache.cassandra.io.sstable.IndexInfo > deserializeForCache ( org.apache.cassandra.io.util.DataInputPlus in ) throws java.io.IOException { assert version . storeRows () ; long position = in . readUnsignedVInt () ; switch ( in . readByte () ) { case org.apache.cassandra.db.RowIndexEntry.CACHE_NOT_INDEXED : return new org.apache.cassandra.db.RowIndexEntry <> ( position ) ; case org.apache.cassandra.db.RowIndexEntry.CACHE_INDEXED : return new org.apache.cassandra.db.RowIndexEntry.IndexedEntry ( position , in , idxInfoSerializer , version ) ; case org.apache.cassandra.db.RowIndexEntry.CACHE_INDEXED_SHALLOW : return new org.apache.cassandra.db.RowIndexEntry.ShallowIndexedEntry ( position , in , idxInfoSerializer ) ; default: throw new java.lang.AssertionError () ; } } 
public java.lang.String format ( org.joda.time.DateTime dateTime ) { if ( dateTime == null ) { return "" ; } org.joda.time.DateTimeZone timeZone = dateTime . getZone () ; long utcTime = timeZone . convertLocalToUTC ( dateTime . getMillis () , false ) ; dateTime = new org.joda.time.DateTime ( ( utcTime + ( offset ) ) ) ; return formatter . withLocale ( locale ) . print ( dateTime ) ; } 
private static void compareHands ( java.util.List < java.lang.Integer > x , java.util.List < java.lang.Integer > y , boolean [] a , boolean [] b ) { int buildValue1 = week1Problems.P6 . findValue ( a ) ; int buildValue2 = week1Problems.P6 . findValue ( b ) ; if ( buildValue1 > buildValue2 ) { java.lang.System.out . println ( "Player 1 wins" ) ; } else if ( buildValue1 == buildValue2 ) { week1Problems.P6 . compareHigh ( x , y ) ; } else { java.lang.System.out . println ( "Player 2 wins" ) ; } } 
public static java.lang.String omitEveryOther ( java.lang.String word ) { boolean keepCurrent = true ; int i = 0 ; java.lang.String newSpeak = "" ; while ( i < ( word . length () ) ) { if ( keepCurrent ) { newSpeak += java.lang.String . valueOf ( word . charAt ( i ) ) ; keepCurrent = false ; } else { keepCurrent = true ; } i ++ ; } return newSpeak ; } 
private boolean isMonth ( java.lang.String nextWord ) { boolean ans = false ; for ( int i = 1 ; i < ( monthsInYear.length ) ; i ++ ) { if ( nextWord . contains ( monthsInYear [ i ] ) ) { ans = true ; break; } } return ans ; } 
public int getValue ( gameplay.Card card ) { int s = card . getSuit () ; int val ; switch ( s ) { case 0 : val = this . spades . indexOf ( card ) ; break; case 1 : val = this . hearts . indexOf ( card ) ; break; case 2 : val = this . clubs . indexOf ( card ) ; break; case 3 : val = this . diamonds . indexOf ( card ) ; break; default: val = 0 ; } return val ; } 
private boolean editTask ( java.lang.String rawInput ) { java.util.ArrayList < java.lang.String > inputParts = breakString ( rawInput ) ; int taskID = convertToInt ( getTaskID ( inputParts ) ) ; java.lang.String date = getDateFromRaw ( inputParts ) ; if ( isInvalidID ( taskID ) ) { return false ; } return logic . editTask ( taskID , date ) ; } 
private void executeOnStartActions () { int actionIndexOnStart = java.lang.Integer . parseInt ( sharedPrefs . getString ( getString ( R.string.key_prefActionOnStart ) , java.lang.Integer . toString ( ActionOnStartRandomAyah ) ) ) ; if ( actionIndexOnStart == ( ActionOnStartNone ) ) { return; } else if ( actionIndexOnStart == ( ActionOnStartSurahList ) ) { android.content.Intent intent = new android.content.Intent ( this , com.frrahat.quransimple.SuraListActivity . class ) ; startActivityForResult ( intent , REQUEST_SURAH_LIST ) ; } else if ( actionIndexOnStart == ( ActionOnStartRandomAyah ) ) { showARandomAyah = true ; } } 
private void updateRippleSize ( int width , int height ) { final int cx = width / 2 ; final int cy = ( mDual ) ? ( mIcon . getTop () ) + ( mIcon . getHeight () ) : height / 2 ; final int rad = ( ( int ) ( ( mIcon . getHeight () ) * 1.25F ) ) ; mRipple . setHotspotBounds ( ( cx - rad ) , ( cy - rad ) , ( cx + rad ) , ( cy + rad ) ) ; } 
@ org.testng.annotations.Test public void testSubtractBusinessKey ( ) throws java.lang.Exception { boolean assert_ = false ; try { spreadsheet.mapper.utils.FieldUtils . subtractBusinessKey ( "test.int1" ) ; } catch ( java.lang.IllegalArgumentException e ) { spreadsheet.mapper.utils.FieldUtilsTest.LOGGER . debug ( "\'test.int1\' not business key" ) ; if ( e . getMessage () . contains ( "business key" ) ) { assert_ = true ; } } assertTrue ( assert_ ) ; java.lang.String s = spreadsheet.mapper.utils.FieldUtils . subtractBusinessKey ( ( ( FieldUtils.BUSINESS_KEY_PREFIX ) + "test.int1" ) ) ; assertEquals ( s , "test.int1" ) ; } 
private int getBillWorth ( int itemDamage , int stackSize ) { int cash = 0 ; switch ( itemDamage ) { case 0 : cash = 1 ; break; case 1 : cash = 5 ; break; case 2 : cash = 10 ; break; case 3 : cash = 20 ; break; case 4 : cash = 50 ; break; case 5 : cash = 100 ; break; } return cash * stackSize ; } 
private void findSubIndexForColor ( int topIndex , int color ) { if ( ( ( getBuilder () . mColorsSub ) == null ) || ( ( ( getBuilder () . mColorsSub . length ) - 1 ) < topIndex ) ) return; int [] subColors = getBuilder () . mColorsSub [ topIndex ] ; for ( int subIndex = 0 ; subIndex < ( subColors.length ) ; subIndex ++ ) { if ( ( subColors [ subIndex ] ) == color ) { subIndex ( subIndex ) ; break; } } } 
public void setTemplateID ( java.util.Map mobData , com.nkoiv.mists.game.gameobject.MapObject mob ) { if ( mobData . containsKey ( "templateID" ) ) { int templateID = java.lang.Integer . parseInt ( ( ( java.lang.String ) ( mobData . get ( "templateID" ) ) ) ) ; if ( templateID < 1 ) mob . setTemplateID ( getNextFreeID () ) ; else mob . setTemplateID ( templateID ) ; } else { mob . setTemplateID ( getNextFreeID () ) ; } } 
@ java.lang.Override public java.lang.Boolean apply ( java.lang.Long bookmarkId ) { boolean result ; if ( bookmarkId > 0 ) { bookmarksDBAdapter . removeBookmark ( bookmarkId ) ; result = false ; } else { bookmarksDBAdapter . addBookmark ( sura , ayah , page ) ; result = true ; } bookmarksPublishSubject . onNext ( true ) ; return result ; } 
@ org.junit.Test public void testBucketExistsFails ( ) throws io.minio.MinioException , java.io.IOException , java.security.InvalidKeyException , java.security.NoSuchAlgorithmException , org.xmlpull.v1.XmlPullParserException { com.squareup.okhttp.mockwebserver.MockWebServer server = new com.squareup.okhttp.mockwebserver.MockWebServer () ; com.squareup.okhttp.mockwebserver.MockResponse response = new com.squareup.okhttp.mockwebserver.MockResponse () ; response . addHeader ( "Date" , "Sun, 29 Jun 2015 22:01:10 GMT" ) ; response . setResponseCode ( 404 ) ; server . enqueue ( response ) ; server . start () ; io.minio.MinioClient client = new io.minio.MinioClient ( server . url ( "" ) ) ; boolean result = client . bucketExists ( "bucket" ) ; org.junit.Assert . assertEquals ( false , result ) ; } 
private java.util.ArrayList < java.lang.String > runSocket ( int packetsMax ) throws java.io.IOException { java.util.ArrayList < java.lang.String > toReturn = new java.util.ArrayList < java.lang.String > () ; while ( packetsMax != 0 ) { byte [] rcvdInfo = new byte [ 10 ] ; java.net.DatagramPacket packet = new java.net.DatagramPacket ( rcvdInfo , rcvdInfo.length ) ; socket . receive ( packet ) ; toReturn . add ( new java.lang.String ( packet . getData () ) ) ; packetsMax -- ; } return toReturn ; } 
public void inactiveTimerStart () { java.lang.String sDelay = settings . getString ( "inactiveTimerMins" , com.givenhansco.keystonenavigation.Activities.MainMenuActivity.DEFAULT_TIMER_DELAY ) ; long delay ; try { delay = java.lang.Long . parseLong ( sDelay ) ; } catch ( java.lang.Exception e ) { delay = 240 ; } if ( delay != 0 ) { delay = ( 1000 * 60 ) * delay ; startInactiveTimer ( delay ) ; } else {} } 
public boolean writeData ( byte [] data , int length ) { int written = 0 ; length = java.lang.Math . min ( length , data.length ) ; for ( int i = 0 ; i < length ; i ++ ) { if ( ( writeBitsRaw ( org.q3df.demo.Q3HuffmanCoder.huff_paths [ ( 255 & ( data [ i ] ) ) ] , org.q3df.demo.Q3HuffmanCoder.sym_size [ ( 255 & ( data [ i ] ) ) ] ) ) > 0 ) { written ++ ; } else break; } return written == length ; } 
private int getPlayerForLine ( final int row , final java.lang.String playerFigure ) { int playerRowCount = 0 ; for ( int i = 0 ; i < ( board . getRowLength ( row ) ) ; i ++ ) { if ( ( ( board . getFigure ( row , i ) ) != null ) && ( ( board . getFigure ( row , i ) . toString () ) == playerFigure ) ) { playerRowCount ++ ; } } return playerRowCount ; } 
private float calculateDistanceToTheNextRadar ( java.lang.Double latitude , java.lang.Double longitude ) { android.location.Location currentLocation = com.mobilemakers.juansoler.appradar.StartScreenFragment . getLastLocation () ; android.location.Location nextLocation = createTheNextLocation ( latitude , longitude ) ; float distance = ( currentLocation . distanceTo ( nextLocation ) ) / 1000 ; return new java.math.BigDecimal ( distance ) . setScale ( 1 , java.math.BigDecimal.ROUND_HALF_UP ) . floatValue () ; } 
public int reflectDirection ( int laser_direction ) { laser_direction = jkhet.Piece . mod ( ( laser_direction + 2 ) , 4 ) ; int relative_side = jkhet.Piece . mod ( ( laser_direction - ( rot ) ) , 4 ) ; if ( relative_side == 0 ) { return jkhet.Piece . mod ( ( 1 + ( rot ) ) , 4 ) ; } else if ( relative_side == 1 ) { return jkhet.Piece . mod ( rot , 4 ) ; } else { return - 1 ; } } 
com.example.mapinguari.workoutclass.exerciseObjectsViews.IntervalView addInterval ( com.example.mapinguari.workoutclass.exerciseObjects.Interval interval ) { com.example.mapinguari.workoutclass.exerciseObjectsViews.IntervalView intervalView = new com.example.mapinguari.workoutclass.exerciseObjectsViews.IntervalView ( context , interval ) ; int pos = ( intervalsView . getChildCount () ) - 2 ; if ( ( pos % 2 ) == 0 ) { intervalView . setBackgroundColor ( getResources () . getColor ( R.color.even_list_item ) ) ; } else { intervalView . setBackgroundColor ( getResources () . getColor ( R.color.odd_list_item ) ) ; } intervalsView . addView ( intervalView , pos ) ; return intervalView ; } 
private boolean getNextQuestion () { currentQuestion = quiz . nextQuestion () ; broadcastToClients ( NetworkMessages.nextQ ) ; if ( ( currentQuestion ) == null ) { currentState = backend.GameState.GAME_OVER ; return false ; } lblCurrentQ . setText ( currentQuestion . getQ () ) ; int index = 0 ; for ( java.lang.String ans : currentQuestion . getAnswers () ) { answers [ index ] . setText ( ans ) ; index ++ ; } lblTime . setText ( java.lang.Integer . toString ( currentQuestion . getTimeLimit () ) ) ; currentState = backend.GameState.WAITING_FOR_ANSWERS ; return true ; } 
public void write ( int data ) { int index = 0 ; while ( index < ( clientCount ) ) { if ( clients [ index ] . active () ) { clients [ index ] . write ( data ) ; index ++ ; } else { removeIndex ( index ) ; } } } 
public de.marsetex.lab2.task3.RationalNumber add ( de.marsetex.lab2.task3.RationalNumber other ) { int zaehlerTemp = ( ( zaehler ) * ( other.nenner ) ) + ( ( other.zaehler ) * ( nenner ) ) ; int nennerTemp = ( nenner ) * ( other.nenner ) ; return new de.marsetex.lab2.task3.RationalNumber ( zaehlerTemp , nennerTemp ) ; } 
public static java.lang.String getTodaysTshirt () { if ( ( com.coollooks.Util.tShirtPathList ) == null ) com.coollooks.Util . setTshirtList () ; int i = ( ( int ) ( ( ( java.lang.Math . random () ) * 33 ) % ( com.coollooks.Util.tShirtPathList . size () ) ) ) ; if ( ( com.coollooks.Util.tShirtPathList . size () ) > 0 ) return com.coollooks.Util.tShirtPathList . get ( i ) ; else return null ; } 
public static communication.pdu.SessionPDU createSessionPDU ( byte [] data ) { if ( ( data == null ) || ( ( data.length ) < 2 ) ) { return null ; } int flags = communication.utils.NumberParser . intToByte ( data [ 0 ] ) ; int sessionId = communication.utils.NumberParser . intToByte ( data [ 1 ] ) ; byte [] newData = java.util.Arrays . copyOfRange ( data , 2 , data.length ) ; return new communication.pdu.SessionPDU ( flags , sessionId , new communication.pdu.PDU ( newData ) ) ; } 
java.util.ArrayList < personal.vinay.bigdata.PrepData.Record > setMinSpread ( java.util.ArrayList < personal.vinay.bigdata.PrepData.Record > records ) { double minSpread = 9999 ; for ( personal.vinay.bigdata.PrepData.Record record : records ) { if ( ( ( record . getBidPrice () ) - ( record . getAskPrice () ) ) < minSpread ) { minSpread = ( record . getBidPrice () ) - ( record . getAskPrice () ) ; } } for ( personal.vinay.bigdata.PrepData.Record record : records ) { record . setMinSpread ( minSpread ) ; } return records ; } 
private void loadTile ( com.badlogic.gdx.utils.XmlReader.Element tile , int firstGid ) { int id = tile . getIntAttribute ( "id" ) ; com.mygdx.game.shared.model.CollideablePolygon tilePolygon = com.mygdx.game.shared.model.TilePolygonLoader . loadTilePolygon ( tile ) ; int tileGid = firstGid + id ; tiles . put ( tileGid , new com.mygdx.game.server.model.MapLoader.Tile ( tilePolygon ) ) ; } 
public static int count ( java.lang.String content , char charForSearch ) { int count = 0 ; if ( null == content ) { return 0 ; } int contentLength = content . length () ; for ( int i = 0 ; i < contentLength ; i ++ ) { if ( charForSearch == ( content . charAt ( i ) ) ) { count ++ ; } } return count ; } 
public double distanceTo ( pathfinding.MapNode n ) { double xDelta = ( this . location . getX () ) - ( n.location . getX () ) ; double yDelta = ( this . location . getY () ) - ( n.location . getY () ) ; return java.lang.Math . sqrt ( ( ( java.lang.Math . pow ( xDelta , 2 ) ) + ( java.lang.Math . pow ( yDelta , 2 ) ) ) ) ; } 
public double phase_Time () { double k = ( java.lang.Math . signum ( stellarium.util.math.Spmath . getD ( sciapi.api.value.util.VOp . dot ( sciapi.api.value.euclidian.CrossUtil . cross ( ( ( sciapi.api.value.IValRef ) ( EcRPosG ) ) , ( ( sciapi.api.value.IValRef ) ( stellarium.stellars.EcRPos ) ) ) , ( ( sciapi.api.value.IValRef ) ( Pole ) ) ) ) ) ) * ( 1.0 - ( getPhase () ) ) ; if ( k < 0 ) k = k + 2 ; return k / 2 ; } 
public static void main ( java.lang.String [] args ) { long time_start = java.lang.System . currentTimeMillis () ; greedy.Greedy10 . cargarDatos () ; greedy.Greedy10 . resolverProblema () ; greedy.Greedy10 . mostrarMochila () ; long time_end = java.lang.System . currentTimeMillis () ; java.lang.System.out . println () ; java.lang.System.out . println ( "-------------------------------------------------------" ) ; java.lang.System.out . println () ; java.lang.System.out . println () ; java.lang.System.out . println ( ( ( ">> Tiempo de duracion del proceso: " + ( time_end - time_start ) ) + " milisegundos." ) ) ; } 
public static double roundedToSize ( double value , int sigFigs ) { java.math.BigDecimal valueBD = new java.math.BigDecimal ( value ) ; int newScale = sigFigs - ( ( valueBD . precision () ) - ( valueBD . scale () ) ) ; java.math.BigDecimal valueBDtoSize = valueBD . setScale ( newScale , java.math.RoundingMode.HALF_UP ) ; return valueBDtoSize . doubleValue () ; } 
private boolean validateQuantity () { int quantity = java.lang.Integer . valueOf ( subgroupsQuantity . getText () . toString () ) ; if ( quantity > ( getMaximumQuantity () ) ) { subgroupsQuantityLayout . setError ( getString ( R.string.nwinners_msg_validate_quantity , group . getItemCount () ) ) ; requestFocus ( subgroupsQuantity ) ; return false ; } return true ; } 
public static boolean differByOne ( java.lang.String word , java.lang.String ladderLast ) { if ( ( word . length () ) != ( ladderLast . length () ) ) { return false ; } int count = 0 ; for ( int i = 0 ; i < ( word . length () ) ; i ++ ) { if ( ( word . charAt ( i ) ) != ( ladderLast . charAt ( i ) ) ) { count ++ ; } } return count == 1 ; } 
